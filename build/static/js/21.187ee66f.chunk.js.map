{"version":3,"sources":["containers/Claimings/Admin/AdminClaimExamView.tsx","containers/Positions/ViewDocRequirements.tsx","containers/Claimings/Admin/AdminClaimAppView.tsx","containers/Claimings/Admin/AdminClaimDocView.tsx","containers/Claimings/Admin/index.tsx","containers/AdminDashboard/ClaimDashboard/AllClaimChart.tsx","containers/AdminDashboard/ClaimDashboard/ClaimDashBoardTitle.tsx","containers/AdminDashboard/ClaimDashboard/ClaimDashboard.tsx","shared/dataTest.tsx","utils/question_bank.ts","components/Table/Table.tsx","actions/session.ts","actions/document.ts","components/Navigation/SideNavigation.tsx","containers/Claimings/Candidate/FormPlacementList.tsx","containers/Claimings/Candidate/ClaimForm.tsx","actions/settings.ts","containers/DoExam/QuestionDetails/ConvertingAnswers.ts","containers/SessionSettings/NoSession.tsx","components/Loading/TableLoading.tsx","shared/interfaces.tsx","containers/AdminDashboard/ChartComponents/VBarChart.tsx","containers/Positions/ViewRequirements.tsx","utils/ExportToExcel.tsx","utils/mineduc.png","components/DownloadPDF/rest.tsx","containers/Claimings/Candidate/FormExamList.tsx","containers/Claimings/ClaimDocView.tsx","containers/Claimings/Candidate/ApplicationFormView.tsx","components/AnswersDetails/AnswersDetails.tsx","containers/Claimings/Candidate/ExaminationFormView.tsx","components/AnswersDetails/CandidateAnswersDetails.tsx","containers/SessionSettings/ChooseSession.tsx","containers/DoExam/DoExamTitle/FindAnswer.tsx","containers/Claimings/Candidate/ChooseReason.tsx","containers/Claimings/Candidate/DocFormView.tsx","components/QuestionPreview/QuestionPreview.tsx","containers/Claimings/Candidate/FormApplicationList.tsx","containers/Claimings/Candidate/FormDocumentList.tsx","containers/SessionSettings/ApplicationSession/SessionDetails.tsx","containers/DoExam/QuestionDetails/Answers/MultipleChoice.tsx","containers/DoExam/QuestionDetails/Answers/TrueFalse.tsx","containers/DoExam/QuestionDetails/Answers/SimpleCalculated.tsx","containers/DoExam/QuestionDetails/Answers/ShortAnswer.tsx","containers/DoExam/QuestionDetails/Answers/Numerical.tsx","containers/DoExam/QuestionDetails/Answers/CalculatedMultipleChoice.tsx","containers/DoExam/QuestionDetails/Answers/Essay.tsx","containers/DoExam/QuestionDetails/Answers/MatchingSelect.tsx","containers/DoExam/QuestionDetails/Answers/Matching.tsx","containers/CandidateExams/CandidateExams.tsx","containers/AdminDashboard/ChartComponents/PieChart.tsx","containers/DoExam/DoExamTitle/FindAnswerHybrid.tsx","containers/AdminDashboard/DashboardLabelItem.tsx","containers/AdminDashboard/ExamDashboard/ExamDashboardLabels.tsx","containers/DoExam/QuestionDetails/Answers/AnswersTypesCollection.tsx","containers/DoExam/QuestionDetails/Answers/HybridAnswers.tsx","containers/Claimings/Admin/AdminFilterByType.tsx","containers/Claimings/ClaimHeaderTitle.tsx","containers/Claimings/Candidate/index.tsx","containers/Claimings/ClaimApplView.tsx","containers/Claimings/ClaimExamView.tsx","containers/Claimings/ClaimPlacementView.tsx","containers/Claimings/Candidate/FilterByType.tsx","components/ViewPDF/ViewPDF.tsx","containers/Admin/Claiming/ClaimingReport.tsx"],"names":["viewTabs","ViewDocRequirements","props","useState","viewDoc","setViewDoc","loadingImage","setLoadingImage","isFullscreen","setSetFullscreen","isDocumentExist","category_id","sub_category_id","field_id","isEmptyOrSpaces","userDocs","filter","item","validation_status","find","category_subcategory_data","Table","columns","columnTitle","alignText","padding","rows","data","requirements","length","className","colSpan","map","index","subcategory_id","subcategory_title","field_title","onClick","pagination","search","thColor","Modal","backDrop","theme","Themes","default","close","backDropClose","widthSizeClass","ModalSize","extraLarge","displayClose","title","body","footer","Loading","files","isFileImage","getFileType","src","API","AUTH_FILES","alt","id","onLoad","onDoubleClick","fullScreen","ViewPDF","file_url","class_name","frame_title","setLoadingFile","FC_AdminApplicationPositionDistinctCategory","thisPosition","documentCategories","PositionsTemp","DistinctCategoriesTemp","DistinctCategoriesIds","DistinctSubCategoriesTemp","DistinctSubCategoriesIds","req","thisRequirements","thisCategory","documentCategory","user_detail_category_id","category","thisSubCategory","documentSubCategory","user_detail_subcategory_id","subcategory","field","thisField","documentFields","_id","position_requirement","required","push","category_title","subcategory_required","includes","connect","auth","evaluateClaim","reAssessApplication","PushPopupAlert","loadingRequest","setLoadingRequest","actionTaken","setActionTaken","formError","setFormError","responseMsg","setResponseMsg","handleVerify","a","element","msg","subClaim","thisClaim","claims","level","claim_level","api_body","sub_claim_id","evaluation_comment","evaluated_by","user","user_id","decision_taken_status","evaluator_name","fname","lname","evaluator_email","email","axios","put","CLAIMING","res","console","log","evaluate_claim_res","ClaimDecisionStatus","ACCEPTED","overrideDecision","PopupAlertTheme","success","error","errorToText","danger","getReasonById","reason_id","claimReasons","patch","APPLICATION","claiming_on_id","comment","application_status","ApplicationStates","Shortlisted","application_id","code_error","getPositionById","position_id","systemPositions","userDetails","user_info","thisApplication","position","position_title","description","school_level_id","school_level_name","education_institute_id","education_category_title","courses","course_name","course_code","course_id","NoResult","NoResultThemes","Dark","value","details","previous","status","Rejected","capitalizeFirstLetter","evaluater","name","DATE","createdAt","dangerouslySetInnerHTML","__html","reason","override_by","claim","default_claim_resaons","showDate","isClaimEvaluated","REJECTED","toLocaleLowerCase","last_claim_status","ClaimStatus","PENDING","DELETED","placeholder","cols","style","resize","onChange","e","target","disabled","window","confirm","verifyDocument","FC_DocValidation","doc_id","DocValidationStatusInterface","APPROVED","validated_by","in_education","disability","api_redux","date","post","AUTH","FC_shortListing","candidate_id","type","setViewImage","viewImage","adminDisplayClaimTitle","thisDoc","commet","questionTypes","loadQuestionTypes","loading","setLoading","marks","setMarks","profile","selectedTab","setSelectedTab","useEffect","handleMarksAddition","DO_EXAM","answer_sheet_id","Object","values","i","exam","AnswersDetails","showAnswers","exam_id","claimShowAnswer","thisExamSheet","thisExam","allAnswers","exam_location","questions","user_answers","period","course","exam_paper","user_status","used_duration","total_marks","number_of_question_answered","exam_total_marks","exam_start_time","exam_end_time","exam_date","updatedAt","gender","phone_number","sex","Number","candidateDocuments","result","type_key","PlansTypeKeys","DOCUMENT_VALIDATION","AdminClaimGetDocTitle","main","doc","DocCategory","DocSubCategory","DocField","DocTitle","c","sub_category","getApplicationById","allApplications","application","Index","setState","setLoadingData","loadingData","setPeriodChanged","periodChanged","setThisPeriod","thisPeriod","setViewClaim","viewClaim","setClaimId","claimId","setClaimType","claimType","setCandidateId","candidateId","setDefaultSession","sessions","state","thisSession","is_active","loadsAllClaims","setSearchClaim","searchClaim","claiming","allClaims","getAllClaims","session_plan_id","loadsApplications","getAllApplications","loadsController","file_id","EXAMINATION","loadsAlAnswers","answersheet_id","allAnswer","getAllAnswers","componentDidMount","application_sessions","GetAllSessionPlans","documentReducer","getDocumentCategory","getDocumentSubCategory","getDocumentFields","getPositions","getClaimReasons","loadCourses","displayClaimTitle","thisDocs","thisAnswer","getCourseIdBySheetId","getCourseById","onPeriodChange","period_id","getLastClaimDate","claimsLength","this","SideNavigation","AdminFilterByType","loadingClaims","ClaimHeaderTitle","headerTitle","selectedClaimType","MARKS_PUBLICATION","PLACEMENT_TRANSFER","loadingSession","setLoadingSession","filterClaimsByClaimType","claimTypes","Light","Math","random","whichClaimType","whichClaimStatus","classes","TableLoading","getClaimById","ClaimTypesInterface","DOCUMENT","Component","AdminClaim","system_settings","sessionPlan","document","allSessionPlans","AllClaimChart","FC_GetAllClaimChartData","acceptedArray","rejectedArray","activeArray","labelArray","typeKey","ClaimTypes","count","accepted","rejected","pending","replace","active","labels","VBarChart","categoriesLabel","dataLabels","yaxisText","tooltipText","series","colors","defaultBar","borderRadius","horizontal","columnWidth","endingShape","stacked","ClaimDashBoardTitle","reportTitle","education_categories","allEducation","loadingApplications","loadingEducation","thisEducation","setThisEducation","education","session","session_plan_name","_ClaimDashboard","setLoadingInstitutes","loadingInstitutes","setLoadingPosition","loadingPosition","setLoadingApplications","setLoadingClaims","setLoadingDocuments","loadingDocuments","setLoadingClarifications","loadingClarifications","setLoadingFields","loadingFields","setThisLabel","thisLabel","schoolLevels","loadEducationCategories","getClaimInstitute","output","all","decision","forEach","PlansKey","reportClaimType","itm","claim_type","FC_ClaimData","arrayNew","n","key","prototype","hasOwnProperty","call","keyClaim","dataArray","claim_id","names","national_id","n_id","phone","education_category","claim_session","claim_title","getClaimDataByTitle","allData","NoSession","ExamDashboardLabels","icon","FaBookOpen","iconColor","labelsOnRow","PieChart","options","legend","show","horizontalAlign","fontSize","itemMargin","vertical","plotOptions","pie","donut","color","offsetY","fontFamily","formatter","val","total","label","w","globals","seriesTotals","reduce","b","width","ClaimDashboard","GetClaimingTypes","setSelectedClaimType","data_school","school_id","school_title","district_id","number_of_females","number_of_males","str","match","getRoleById","roles","roleId","role","system_user_role_id","getInstituteById","institutes","instituteId","positions","toTwoDigit","dec","floor","slice","toString","substr","toAnyDigit","zeroes","Array","join","charAt","toUpperCase","ExamTimeStatus","today","moment","tz","TimeZone","getQuestionType","question_types","type_id","check","undefined","check_type","questionTypeElements","findTotalMarks","results","sum","test","toFixed","CheckIfExamDone","validateCalculatedFormula","formula","characters","el","nextCharacter","convertFromStringToDate","responseDate","dateComponents","split","datePieces","timePieces","Date","parseInt","validateExamDate","start_time","end_time","Expired","toDay","examDate","startTime","getDate","getMonth","getFullYear","endTime","Waiting","getTime","Online","InitializeExamsDone","selected_period","selectedPosition","candidateExam","loadExamsDone","setLoadingExamsDone","selectedExams","InitializeExamDetails","setLoadingExams","user_exams_temp","center_id","room_id","proctoringDefaultRules","rule","caption","table","tr","tableId","charactersLength","FC_makeID","totalItems","setTotalItems","totalPages","setTotalPages","currentPage","setCurrentPage","pages","setPages","pageSize","setPageSize","startIndex","setStartIndex","endIndex","setEndIndex","tablePagination","getElementById","getElementsByTagName","ceil","min","_pages","from","keys","display","tableSize","searchBG","filterType","td","toLowerCase","textContent","innerText","indexOf","filterTable","tableClass","rounded","hideColumns","column","isSortAllowed","switching","x","y","shouldSwitch","colIndex","dir","switchcount","innerHTML","parentNode","insertBefore","sortThisColumn","aria-label","page","pageIndex","GetPlansTypes","callback","dispatch","setAxiosToken","get","GET_PLANS_TYPES","plan_types","ActionTypes","payload","setSelectedPlanType","thisType","SELECT_PLAN_TYPE","getActiveSessionPlan","GET_ACTIVE_SESSION_PLANS","session_plan","GET_ALL_SESSION_PLANS","session_data","createSessionPlan","CREATE_SESSION_PLAN","updateSessionPlan","UPDATE_SESSION_PLAN","sessionActivation","SESSION_ACTIVATION","deleteSessionPlan","DELETE_SESSION_PLAN","createAcademicSession","CREATE_ACADEMIC_SESSION","GetAllAcademicSession","PLACEMENT","GET_ALL_ACADEMIC_SESSION","updateAcademicSession","UPDATE_ACADEMIC_SESSION","academicSessionActivation","ACADEMIC_SESSION_ACTIVATION","deleteAcademicSession","DELETE_ACADEMIC_SESSION","getActiveAcademicSession","GET_ACTIVE_ACADEMIC_SESSION","docCategory","GET_DOCUMENT_CATEGORY","createDocumentCategory","CREATE_DOCUMENT_CATEGORY","updateDocumentCategory","UPDATE_DOCUMENT_CATEGORY","deleteDocumentCategory","DELETE_DOCUMENT_CATEGORY","docSubCategory","GET_DOCUMENT_SUB_CATEGORY","doc_SUB_category_error","createDocumentSubCategory","CREATE_DOCUMENT_SUB_CATEGORY","updateDocumentSubCategory","UPDATE_DOCUMENT_SUB_CATEGORY","deleteDocumentSubCategory","DELETE_DOCUMENT_SUB_CATEGORY","docFields","GET_DOCUMENT_FIELDS","createDocumentFields","CREATE_DOCUMENT_FIELDS","updateDocumentFields","reducer","UPDATE_DOCUMENT_FIELDS","deleteDocumentFields","DELETE_DOCUMENT_FIELDS","distinctCandidates","candidatesData","user_ids","candidate","getCandidatesInInstitute","educatin_type_id","session_id","GET_CANDIDATE_IN_INSTITUTE","VERIFY_DOCUMENT","_SideNavigation","PageHasSubNav","componentWillUnmount","isAuthenticated","navActive","system","navigation","children","React","NavToogle","MainItem","MdBrightness1","IconDefined","searchInput","setSearchInput","myPlacement","isClaimAllowed","myClaims","activeSession","placed","setChooseClaimFile","setViewThisFile","setClaimFileId","school","school_name","ClaimGetDocTitle","category_subcategory_Data_id","allClaim","claimOnId","ClaimForm","setLoadingForm","loadingForm","setAlertError","alertError","claimFileId","viewThisFile","chooseClaimFile","setChooseClaimReason","chooseClaimReason","setClaimReason","claimReason","setClaimComment","claimComment","isClaimTypeOpen","plans","isPlanActive","displayClaimType","loadExamAnswers","activeSessionPlan","getMyAnswers","application_session","setFormState","thisClaimType","thisClaimTypeId","formType","getDocumentById","documents","applications","getExamById","exams","getValidation","thisId","old_reason","old_status","old_evaluated_by","candidateApplications","cleanToClose","response","loadUserById","getClaimTitle","myAnswer","handleSubmit","preventDefault","old_evaluator_email","old_evaluator_name","institute_id","createClaim","selectClaimType","getMyRejectedApplications","getMyRejectedDocuments","getMyPlacement","generateChooseFileTitle","formState","medium","onSubmit","FormDocumentList","FormApplicationList","FormExamList","candidateAnswers","ChooseReason","allClaimReasons","DocFormView","ApplicationFormView","ExaminationFormView","thisAnswerSheet","getMyClaims","getSystemSettings","GET_SYSTEM_SETTINGS","disableSystemSetting","DISABLE_SYSTEM_SETTINGS","GetTaskAccess","task","permitted","GET_TASK_ACCESS","GET_POSTIONS","deletePosition","DELETE_POSITION","publishPosition","PUBLISH_POSITION","toMultipleChoice","answers","answer","toTrueFalse","toMatching","toSimpleCalculated","toShortAnswer","toNumerical","toCalculatedMultipleChoice","toEssay","displayCols","colsArray","PostRequestStatusInterface","DocumentAttributesInterface","SESSION_PLAN_KEYS","chart","events","dataPointSelection","event","chartContext","config","labelClicked","dataPointIndex","FC_LoadSelected","seriesIndex","bar","enabled","xaxis","rotate","categories","tickPlacement","yaxis","text","fill","opacity","tooltip","grid","left","right","noData","align","verticalAlign","setOptions","chartClicked","zoom","autoScaleYaxis","height","chartHeight","ViewRequirements","ExportToExcel","fileData","fileName","btnName","showIcon","apiData","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","exportToCSV","require","addFooters","pageCount","internal","getNumberOfPages","setFont","setFontSize","setPage","String","generatePDF","reportSettings","callBack","orientation","lMargin","jsPDF","setTextColor","addImage","Logo","getWidth","institute","lines","splitTextToSize","subject","pdfInMM","subjectTitle","getTextWidth","addPage","autoTable","html","startY","margin","cellPadding","rowHeight","bodyStyles","valign","columnStyles","cellWidth","tableWidth","finalY","lastAutoTable","doneBy","save","returnPromise","then","getFailedExam","allCourses","sheet_id","isReclaimAllowed","_thisClaim","claim_status","EVALUATED","createReClaim","reClaimingMsg","warning","setReClaimingMsg","setReClaiming","reClaiming","FC_ApplicationPositionDistinctCategory","category_subcategory_data_id","_AnswersDetails","setLoadingStatus","loadingStatus","user_exams_done","requestUserAnswers","userAnswersTotalMarks","user_marks","user_exam_details","discription","termes","question_id","question","language","selectedLanguage","is_deleted","chapters","customNumber","answersList","showCorrectAnswer","FC_GetProfileDetails","LoadCandidateApplications","setSelectedCandidateExam","setSelectedCourse","setSelectedPosition","AddUserApplication","loadApplicationPeriods","rules","right_click_enabled","copy_enabled","paste_enabled","stop_candidate_when_comeback","allow_to_leave_browser","CandidateAnswersDetails","tomorrow","setDate","compareWithToday","isPlansActive","activePlans","plan","startDate","start_date","endDate","end_date","type_status","SessionPlanTypeStatus","OPEN","ChooseSession","searched","selectedPlan","setSelectedPlan","setSearch","allSession","chooseAll","currentSelected","setSelectSession","searchData","type_title","resultDiv","question_answers","subQuestionType","findQuestionType","questionTypeElementsType","MultipleChoice","userAnswer","SingleMultiple","userAnswerSingle","CalculatedMultipleChoice","userAnswer1","Matching","userAnswerMatch","TrueFalse","userAnswerTureFalse","Numeric","userAnswerNumerical","SimpleCalculate","userAnswerSimpleCalculate","ShortAnswer","userAnswerShortAnswer","Essay","userAnswerEssay","Embedded","Hybrid","FindAnswer","UserAnswersSel","SubQ","sub_question","findQType","typeShort","reference","user_answer","testQ","EmbeddedQuestion","selectedQuestion","questionAnswers","addAnswer","newTextResult","answeredQuestions","userQuestionAnswers","originalText","answerCheck","answered","QuestionForEmbedded","select","alert","returnSelect","QuestionPreview","doExam","setSelectedExamQuestion","setQuestionLanguage","selectLang","setSelectLang","setSelectedLanguage","filterLanguages","langs","langItem","testLangQ","QuestionLanguages","l","LoadingType","white","available_answers","selectedQuestionAnswer","selectedAns","answerQuestionFn","candidate_exam","selectedExam","shuffledAnswers","Shuffle","wholeQuestion","getRejectedApplicants","applicationData","objList","product","flag","prop","DocumentTitleData","documentData","documentTemp","company","end_year","start_year","year","doc_title","getRejectedDocuments","isActivationAllowed","thisPlans","getPlanTypeByKey","allPlanTypes","viewThisSession","thisPlan","planEndDate","planStartDate","CLOSED","SessionDetails","handlePlanActivation","newState","newData","allowed_claim_level","history","setViewThisSession","info","checkAnswer","checkA","tes","addAnswerItemFn","newAnswers","questionAnswer","oldAnswers","selAns","tester","temp","t","newAnswersMultiple","xItem","SimpleCalculated","answeredValue","checkB","minHeight","Numerical","getRandomArbitrary","MatchingSelect","closeWindow","selectedAnswer","findWord","checkIfSelected","displayWindow","setDisplayWindow","setSelectedAnswer","ans","selectedQuestionId","selectedLang","ansi","testing","lang","testLang","checkE","testAnswerLang","it","checkAnswerStatus","arr","ReturnMatchingStatus","newItem","selectedStatus","tooday","myDate","todayConverted","ChangeLocationComponent","setDisplay","changeLocation","_CandidateExams","setloadingExamsDone","loadingExamsDone","loadCandidateExams","QBank","candidateExams","loadUserProfileDetails","InitializationFn","loadUserApplications","candidate_applications","findLocation","updateLocation","selectedCourse","centersModal","maxExamModal","successMessage","updateLocationFunction","addLocation","location","proctoring_type","removeDuplicatesExams","removeDuplicatesNotPreparedExams","setTimeOut","temps","activeExams","selectApplication","setMaxExamModal","closeModal","FC_Access","UserAccessList","MY_APPLICATION","view","selected_exam_id","to","preparedExam","center_name","room_number","school_levels","UserExamStatus","Editing","Paused","Done","Removed","found","duration_min","getMinutesFromTwoDates","timeout","returnString","days","notPreparedExam","positionCourses","CandidateExams","periods","changed","QuestionForHybrid","Calculated","FindAnswerHybrid","submitQuestionAnswer","maxHeight","stri","fromCharCode","charCodeAt","DashboardLabelItem","FaUsers","countOver","numCols","childrenPosition","AnswersTypesCollection","HybridAnswers","hybrid","claimList","loadingClaimTypes","setLoadingClaimTypes","countClaims","Fragment","isLoading","selectPeriod","ClaimTypesEnum","setViewPosition","viewPosition","district_name","loadingRejectedApplications","setLoadingRejectedApplications","loadingRejectedDocuments","setLoadingRejectedDocuments","COMPLETED","document_id","marks_publication","placement","displayDocClaimTitle","allCourse","setClaimForm","claimForm","loadClaims","setSession","isDeleteAllowed","thisCLaim","ClaimApplView","ClaimExamView","CandidateClaim","setError","defaultReportContent","claimReportContentKeyInterface","ClaimingReport","thisLevel","setThisLevel","downloading","setDownloading","claimToPrint","setClaimToPrint","sortProperty","setSortProperty","isSorted","setIsSorted","sortOrder","setSortOrder","generateReportModal","setGenerateReportModal","setReportTitle","reportContent","setReportContent","selectAll","setSelectAll","setSelectPeriod","setSort","thisProperty","updateClaimToPrint","isChangeAllowed","FC_FilterClaims","claimLevel","selectedType","currentType","levels","ClaimLevels","reportType","querySelectorAll","FC_GeneratePDF","sortThisArray","findIndex","newArray","isSelectAllNeeded","updateReportContent","currentState","resetReportContent"],"mappings":"uYAsCKA,E,0UC4JUC,EAjLyC,SAACC,GACvD,MAA8BC,mBAAwC,MAAtE,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwCF,oBAAkB,GAA1D,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAAyCJ,oBAAkB,GAA3D,mBAAOK,EAAP,KAAqBC,EAArB,KAEMC,EAAkB,SACtBC,EACAC,EACAC,GAEA,IAAKC,YAAgBH,GAAc,CACjC,IAAII,EAAqCb,EAAMa,SAASC,QACtD,SAACC,GAAD,OAAUA,EAAKN,cAAgBA,KAYjC,GATKG,YAAgBF,KACnBG,EAAWA,EAASC,QAClB,SAACC,GAAD,MAC6B,aAA3BA,EAAKC,mBACLD,EAAKN,cAAgBA,GACrBM,EAAKL,kBAAoBA,OAI1BE,YAAgBD,GACnB,OAAOE,EAASI,MACd,SAACF,GAAD,MAC6B,aAA3BA,EAAKC,mBACLD,EAAKN,cAAgBA,GACrBM,EAAKG,4BAA8BP,OA8E7C,OACE,gCACE,cAACQ,EAAA,EAAD,CACEC,QAAS,CACP,CAAEC,YAAa,IAAKC,UAAW,OAAQC,QAAS,OAChD,CAAEF,YAAa,gBAAiBC,UAAW,OAAQC,QAAS,OAC5D,CAAEF,YAAa,SAAUC,UAAW,OAAQC,QAAS,OACrD,CAAEF,YAAa,GAAIC,UAAW,OAAQC,QAAS,QAEjDC,KAjFY,WAChB,IAAIC,EAA4CzB,EAAM0B,aACtD,OAAoB,IAAhBD,EAAKE,OACA,CACL,oBAAcC,UAAU,6CAAxB,SACE,oBAAIA,UAAU,kBAAkBC,QAAS,EAAzC,4BADO,MAQNJ,EAAKK,KAAI,SAACf,EAAMgB,GAAP,OACd,qBAEEH,UAAS,sDACNpB,EACCO,EAAKN,YACLM,EAAKiB,eACLjB,EAAKJ,WACF,mBAPT,UAUE,qBAAIiB,UAAU,kCAAd,UAAiDG,EAAQ,EAAzD,OACA,oBAAIH,UAAU,gBAAd,SACE,+BACGhB,YAAgBG,EAAKJ,UAClB,OAASI,EAAKkB,kBACdlB,EAAKkB,kBAAoB,OAASlB,EAAKmB,gBAG/C,oBAAIN,UAAS,+BAAb,SACGpB,EAAgBO,EAAKN,YAAaM,EAAKiB,eAAgBjB,EAAKJ,UACzD,QACA,cAEN,oBAAIiB,UAAS,gCAAb,SACGpB,EACCO,EAAKN,YACLM,EAAKiB,eACLjB,EAAKJ,WAEL,wBACEiB,UAAU,iFACVO,QAAS,WACPhC,EACEK,EACEO,EAAKN,YACLM,EAAKiB,eACLjB,EAAKJ,WAGTN,GAAgB,IAVpB,0BA5BC0B,EAAQhB,EAAKJ,cAoElByB,YAAY,EACZC,QAAQ,EACRC,QAAQ,SAGTpC,GACC,eAACqC,EAAA,EAAD,CACEC,UAAU,EACVC,MAAOC,IAAOC,QACdC,MAAO,WACLzC,EAAW,MACXE,GAAgB,IAElBwC,eAAe,EACfC,eAAgBC,IAAUC,WAC1BC,cAAc,EACd1B,QAAS,CACP2B,OAAO,EACPC,MAAM,EACNC,QAAQ,GAEVF,MAAM,WAfR,UAiBG9C,GAAgB,cAACiD,EAAA,EAAD,IAChBnD,EAAQoD,OAASpD,EAAQoD,MAAM3B,OAAS,EACvC4B,YAAYC,YAAYtD,EAAQoD,QAC9B,qBAAK1B,UAAU,WAAf,SACE,qBACE6B,IAAKC,IAAIC,WAAazD,EAAQoD,MAC9BM,IAAI,GACJhC,UAAS,0DACPxB,GAAgB,UAElByD,GAAG,UACHC,OAAQ,kBAAMzD,GAAgB,IAC9B0D,cAAe,WAtDzBzD,GACF0D,YAAW,UAAW,SACtBzD,GAAiB,KAEjBA,GAAiB,GACjByD,YAAW,UAAW,cAqDd,cAACC,EAAA,EAAD,CACEC,SAAUR,IAAIC,WAAazD,EAAQoD,MACnCa,WAAU,kDACR/D,GAAgB,UAElBgE,YAAa,4BACbC,eAAgBhE,IAIpB,sBAAKuB,UAAU,kEAAf,UACE,cAAC,IAAD,CAASA,UAAU,sBACnB,sBAAMA,UAAU,yBAAhB,yC,SCrJD0C,EAA8C,SACzDC,EACAC,GAMA,IAAIC,EAAqD,GACrDC,EAA8D,GAChEC,EAAkC,GAChCC,EAAiE,GACnEC,EAAqC,GAEnCnD,EAAe6C,EAAa7C,aAP7B,WASMoD,GACP,IAAIC,EAAmBrD,EAAaoD,GAEhCE,EAAeR,EAAmBS,iBAClCT,EAAmBS,iBAAiBhE,MAClC,SAACF,GAAD,OACEA,EAAKmE,0BACLH,EAAiBI,SAASD,4BACzB,CACHhC,MAAOsB,EAAmBS,iBAAiBhE,MACzC,SAACF,GAAD,OACEA,EAAKmE,0BACLH,EAAiBI,SAASD,2BAC3BhC,MACHgC,wBAAyBV,EAAmBS,iBAAiBhE,MAC3D,SAACF,GAAD,OACEA,EAAKmE,0BACLH,EAAiBI,SAASD,2BAC3BA,yBAEL,CACEhC,MAAO,GACPgC,wBACEH,EAAiBI,SAASD,yBAG9BE,EAAkBZ,EAAmBa,qBACrCb,EAAmBa,oBAAoBpE,MACrC,SAACF,GAAD,OACEA,EAAKuE,6BACLP,EAAiBQ,YAAYD,8BAE/B,CACEpC,MAAOsB,EAAmBa,oBAAoBpE,MAC5C,SAACF,GAAD,OACEA,EAAKuE,6BACLP,EAAiBQ,YAAYD,8BAC9BpC,MACHoC,2BACEd,EAAmBa,oBAAoBpE,MACrC,SAACF,GAAD,OACEA,EAAKuE,6BACLP,EAAiBQ,YAAYD,8BAC9BA,2BACL7E,YAAa+D,EAAmBa,oBAAoBpE,MAClD,SAACF,GAAD,OACEA,EAAKuE,6BACLP,EAAiBQ,YAAYD,8BAC9B7E,aAQP,CACEyC,MAAO,GACPoC,2BACEP,EAAiBQ,YAAYD,2BAC/B7E,YAAa,IAGnB,GAAIuE,EAAc,CAAC,IAAD,WACPQ,GAEP,IAAIC,EAAYjB,EAAmBkB,gBAC/BlB,EAAmBkB,eAAezE,MAChC,SAACF,GAAD,OACEA,EAAK4E,MAAQZ,EAAiBa,qBAAqBJ,GAAOG,OAE5D,CACEzC,MAAOsB,EAAmBkB,eAAezE,MACvC,SAACF,GAAD,OACEA,EAAK4E,MACLZ,EAAiBa,qBAAqBJ,GAAOG,OAC9CzC,MACHyC,IAAKnB,EAAmBkB,eAAezE,MACrC,SAACF,GAAD,OACEA,EAAK4E,MACLZ,EAAiBa,qBAAqBJ,GAAOG,OAC9CA,IACHE,SAAUd,EAAiBa,qBAAqBJ,GAAOK,UAO3D,CACE3C,MAAO,GACPyC,IAAKZ,EAAiBa,qBAAqBJ,GAAOG,IAClDE,SAAUd,EAAiBa,qBAAqBJ,GAAOK,UAG7DpB,EAAcqB,KAAK,CACjBrF,YAAauE,EAAaE,wBAC1Ba,eAAgBf,EAAa9B,MAC7BlB,eAAgBoD,EAAgBE,2BAChCrD,kBAAmBmD,EAAgBlC,MACnC8C,qBAAsBjB,EAAiBc,SACvC3D,YAAauD,EAAUvC,MACvBvC,SAAU8E,EAAUE,IACpBE,SAAUJ,EAAUI,YAvCxB,IAAK,IAAIL,KAAST,EAAiBa,qBAAuB,EAAjDJ,GA6CNb,EAAsBsB,SAASjB,EAAaE,2BAE7CP,EAAsBmB,KAAKd,EAAaE,yBACxCR,EAAuBoB,KAAK,CAC1BrF,YAAauE,EAAaE,wBAC1Ba,eAAgBf,EAAa9B,MAC7BlB,eAAgB,GAChBC,kBAAmB,GACnB+D,qBAAsBjB,EAAiBc,SACvC3D,YAAa,GACbvB,SAAU,GACVkF,UAAU,KAMXhB,EAAyBoB,SACxBb,EAAgBE,8BAGlBT,EAAyBiB,KACvBV,EAAgBE,4BAElBV,EAA0BkB,KAAK,CAC7BrF,YAAa2E,EAAgB3E,YAC7BsF,eAAgB,GAChB/D,eAAgBoD,EAAgBE,2BAChCrD,kBAAmBmD,EAAgBlC,MACnC8C,qBAAsBjB,EAAiBc,SACvC3D,YAAa,GACbvB,SAAU,GACVkF,UAAU,OA7IlB,IAAK,IAAIf,KAAOpD,EAAe,EAAtBoD,GAoJT,MAAO,CAAEL,gBAAeC,yBAAwBE,8BAgkBnCsB,eAVS,SAAC,GAKvB,MAAO,CACLC,KAFC,EAHHA,QASsC,CACtCC,kBACAC,yBACAC,qBAHaJ,EA7iB6C,SAAClG,GAC3D,MAAwCC,oBAAkB,GAA1D,mBACA,GADA,UAC4CA,oBAAkB,IAA9D,mBAAOsG,EAAP,KAAuBC,EAAvB,KACA,EAAsCvG,mBACpC,MADF,mBAAOwG,EAAP,KAAoBC,EAApB,KAGA,EAAkCzG,mBAGxB,MAHV,mBAAO0G,EAAP,KAAkBC,EAAlB,KAIA,EAAsC3G,mBAAiB,IAAvD,mBAAO4G,EAAP,KAAoBC,EAApB,KAEMC,EAAY,uCAAG,gCAAAC,EAAA,yDACdP,EADc,uBAEjBG,EAAa,CACXK,QAAS,SACTC,IAAK,wBAJU,kBAMVV,GAAkB,IANR,WASf5F,YAAgBiG,GATD,uBAUjBD,EAAa,CACXK,QAAS,UACTC,IAAK,oCAZU,kBAcVV,GAAkB,IAdR,YAiBfW,EAAWnH,EAAMoH,UAAUC,OAAOpG,MACpC,SAACF,GAAD,OAAUA,EAAKuG,QAAUtH,EAAMoH,UAAUG,gBAlBxB,wBAsBjBf,GAAkB,GACZgB,EAA8B,CAClCC,aAAcN,EAAStD,GACvB6D,mBAAoBb,EACpBc,aAAc3H,EAAMmG,KAAKyB,KAAKC,QAC9BC,sBAAuBrB,EACvBsB,eAAgB/H,EAAMmG,KAAKyB,KAAKI,MAAQ,IAAMhI,EAAMmG,KAAKyB,KAAKK,MAC9DC,gBAAiBlI,EAAMmG,KAAKyB,KAAKO,OA7BlB,oBAiCGC,IAAMC,IAAN,UACb3E,IAAI4E,SADS,0BACiBtI,EAAMoH,UAAUzB,KACjD6B,GAnCa,aAiCTe,EAjCS,4BAsCbC,QAAQC,IAAI,wCACZD,QAAQC,IAAI,CAAEC,mBAAoBH,IAClCC,QAAQC,IAAI,wCACZzI,EAAMoG,cAAcmC,EAAI9G,MAEpBgF,IAAgBkC,IAAoBC,SA3C3B,kCA4CLC,IA5CK,QA8Cb7I,EAAMsG,eAAe,CACnBpD,MAAM,gCACNT,MAAOqG,IAAgBC,UAGzBjC,EAAe,IACfJ,EAAe,MApDF,2DAuDf8B,QAAQQ,MAAR,MACAhJ,EAAMsG,eAAe,CACnBpD,MAAO+F,YAAY,EAAD,IAClBxG,MAAOqG,IAAgBI,SA1DV,QA6DjB1C,GAAkB,GA7DD,2DAAH,qDAiEZ2C,EAAgB,SACpBC,GAEA,GAAIpJ,EAAMqJ,aACR,OAAOrJ,EAAMqJ,aAAapI,MAAK,SAACF,GAAD,OAAUA,EAAK8C,KAAOuF,MAKnDP,EAAgB,uCAAG,sBAAA7B,EAAA,+EAEHoB,IAAMkB,MAAN,UACb5F,IAAI6F,YADS,yBACmBvJ,EAAMoH,UAAUoC,gBACnD,CACE3B,QAAS7H,EAAMmG,KAAKyB,KAAKC,QACzB4B,QAAS5C,EACT6C,mBAAoBC,IAAkBC,cAPrB,cAWjBnI,MACFzB,EAAMqG,oBAAoB,CACxBwD,eAAgB7J,EAAMoH,UAAUoC,eAChCE,mBAAoBC,IAAkBC,cAdrB,gDAiBrBpB,QAAQQ,MAAM,CAAEc,WAAW,EAAD,KAC1BxD,aAAe,CACbpD,MAAO+F,YAAY,EAAD,IAClBxG,MAAOqG,IAAgBI,SApBJ,QAwBvB1C,GAAkB,GAxBK,yDAAH,qDA2BhBuD,EAAkB,SAACC,GAKvB,OAJahK,EAAMiK,gBAAgBhJ,MACjC,SAACF,GAAD,OAAUA,EAAKiJ,cAAgBA,MAMnC,OACE,oCACE,sBAAKpI,UAAU,mCAAf,UAEE,0BAASA,UAAU,gBAAnB,UAEE,yBAASA,UAAU,uCAAnB,SACE,sBAAKA,UAAU,oCAAf,UACE,sBAAKA,UAAU,gCAAf,UACE,sBAAMA,UAAS,uBAAf,wBACA,sBAAMA,UAAU,kCAAhB,SACG5B,EAAMoH,UAAU8C,YAAYC,UAAUnC,MACrC,IACAhI,EAAMoH,UAAU8C,YAAYC,UAAUlC,YAG3C,OAYL,yBAASrG,UAAU,yCAAnB,SACE,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,mCAAf,8BAGA,qBAAKA,UAAU,oBAAf,SACE,sBAAKA,UAAU,0BAAf,UACE,sBAAMA,UAAS,uBAAf,mBACA,sBAAMA,UAAU,mCAAhB,SACGmI,EAAgB/J,EAAMoK,gBAAgBC,UACnCN,EAAgB/J,EAAMoK,gBAAgBC,UACnCC,eACH,4BAIV,sBAAK1I,UAAU,kDAAf,UACE,sBAAMA,UAAS,SAAf,mBACA,sBAAMA,UAAU,gBAAhB,SACGmI,EAAgB/J,EAAMoK,gBAAgBC,UACnCN,EAAgB/J,EAAMoK,gBAAgBC,UACnCE,YACH,QAGR,sBAAK3I,UAAU,kDAAf,UACE,sBAAMA,UAAS,SAAf,2BACA,sBAAMA,UAAU,gBAAhB,SACGmI,EAAgB/J,EAAMoK,gBAAgBC,UACnCN,EAAgB/J,EAAMoK,gBAAgBC,UACnCG,gBAAgBC,kBACnB,QAGR,sBAAK7I,UAAU,kDAAf,UACE,sBAAMA,UAAS,SAAf,wBACA,sBAAMA,UAAU,gBAAhB,SACGmI,EAAgB/J,EAAMoK,gBAAgBC,UACnCN,EAAgB/J,EAAMoK,gBAAgBC,UACnCK,uBAAuBC,yBAC1B,QAGR,sBAAK/I,UAAU,kDAAf,UACE,sBAAMA,UAAS,SAAf,oBACA,sBAAMA,UAAU,0BAAhB,SACGmI,EAAgB/J,EAAMoK,gBAAgBC,UACrCN,EACE/J,EAAMoK,gBAAgBC,UACrBO,QAAQ9I,KAAI,SAACf,EAAMgB,GAAP,OACb,sBAEEH,UAAU,0BAFZ,UAIE,sBAAMA,UAAU,gBAAhB,SACGb,EAAK8J,cAER,uBAAMjJ,UAAU,gBAAhB,cACIb,EAAK+J,YADT,OAGC/I,IACCgI,EAAgB/J,EAAMoK,gBAAgBC,UACnCO,QAAQjJ,OACT,GAAK,MAZJI,EAAQhB,EAAKgK,cAgBtB,cAACC,EAAA,EAAD,CACEvI,MAAOwI,IAAeC,KACtBC,MAAO,0BAMf,qBAAKvJ,UAAU,wCAAf,mCAGCmI,EAAgB/J,EAAMoK,gBAAgBC,WACrCN,EAAgB/J,EAAMoK,gBAAgBC,UAAW3I,aAC9CC,OAAS,EACV2C,EACEyF,EAAgB/J,EAAMoK,gBAAgBC,UACtCrK,EAAMwE,oBACNE,uBAAuB5C,KAAI,SAACf,EAAMgB,GAAP,OAC3B,sBACEH,UAAU,wDADZ,UAIE,sBAAKA,UAAU,2DAAf,UACE,cAAC,KAAD,IACA,+BAAOb,EAAKgF,oBAEd,qBAAKnE,UAAU,uBAAf,SACE,cAAC,EAAD,CACEF,aAAc4C,EACZyF,EAAgB/J,EAAMoK,gBAAgBC,UACtCrK,EAAMwE,oBACNC,cAAc3D,QACd,SAACgE,GAAD,OAASA,EAAIrE,cAAgBM,EAAKN,eAEpCI,SAAUb,EAAMoH,UAAU8C,YAAYkB,cAdrCrJ,EAAQhB,EAAKN,gBA0BxB,cAACuK,EAAA,EAAD,CACEvI,MAAOwI,IAAeC,KACtBC,MAAO,yBAqBf,0BAASvJ,UAAU,6BAAnB,UACE,sBAAKA,UAAU,gDAAf,UACE,sBAAMA,UAAS,SAAf,qBACA,sBACEA,UAAS,oBACP5B,EAAMoH,UAAUiE,SACZrL,EAAMoH,UAAUiE,SAASC,SACzB3B,IAAkB4B,SAClBvL,EAAMoK,gBAAgBV,qBACtBC,IAAkB4B,SAClB,kBACA,gBAPG,sBADX,SAWGvL,EAAMoH,UAAUiE,SACbG,YAAsBxL,EAAMoH,UAAUiE,SAASC,QAC/CE,YACExL,EAAMoK,gBAAgBV,yBAIhC,sBAAK9H,UAAU,gDAAf,UACE,sBAAMA,UAAS,SAAf,2BACA,sBAAMA,UAAU,gBAAhB,SACG5B,EAAMoH,UAAUiE,SAASI,UAAUC,WAGvC,EAQD,sBAAK9J,UAAU,gDAAf,UACE,sBAAMA,UAAS,SAAf,mBACA,sBAAMA,UAAU,+BAAhB,SACG+J,YAAK3L,EAAMoK,gBAAgBwB,gBAGhC,sBAAKhK,UAAU,+CAAf,UACE,sBAAMA,UAAS,SAAf,qBACA,sBACEA,UAAU,cACViK,wBAAyB,CACvBC,OAAQ9L,EAAMoH,UAAUiE,SACpBrL,EAAMoH,UAAUiE,SAASU,OACzB/L,EAAMoK,gBAAgB4B,YAAYvC,oBAW/CzJ,EAAMoH,UAAUC,OAAO1F,OAAS,GAC/B3B,EAAMoH,UAAUC,OAAOvF,KAAI,SAACmK,EAAOlK,GAAR,OACzB,0BACEH,UAAU,gDADZ,UAIE,sBAAKA,UAAU,iCAAf,kCACwBG,EAAQ,EADhC,OAIA,sBAAKH,UAAU,2EAAf,UACE,sBAAKA,UAAU,wDAAf,UACE,cAAC,IAAD,IACCuH,EAAcnJ,EAAMoH,UAAU8E,uBAC3B/C,EAAcnJ,EAAMoH,UAAU8E,uBAC3BH,OACH,MAEN,4BAAIE,EAAMF,SACV,sBAAMnK,UAAU,wBAAhB,SACGuK,YAASF,EAAML,gBAQnBQ,YAAiBpM,EAAMoH,UAAW6E,EAAM3E,QACvC,0BAAS1F,UAAU,OAAnB,UACE,uBAAMA,UAAU,qCAAhB,6BACmBG,EAAQ,EAD3B,OAGA,sBAAKH,UAAU,aAAf,UACE,sBAAKA,UAAU,gDAAf,UACE,sBAAMA,UAAS,SAAf,qBACA,sBACEA,UAAS,oBACPqK,EAAMnE,wBACNa,IAAoB0D,SAChB,kBACA,gBAJG,sBADX,SAQGb,YACCS,EAAMnE,sBAAsBwE,0BAIlC,sBAAK1K,UAAU,gDAAf,UACE,sBAAMA,UAAS,SAAf,2BACA,sBAAMA,UAAU,gBAAhB,SACGqK,EAAMR,UAAUC,UAGrB,sBAAK9J,UAAU,+CAAf,UACE,sBAAMA,UAAS,SAAf,qBACA,sBACEA,UAAU,cACViK,wBAAyB,CACvBC,OAAQG,EAAMvE,iCAxDrB3F,EAAQkK,EAAMpI,WAqEzB4C,GACA,0BAAS7E,UAAU,4DAAnB,UAEE,qBAAKA,UAAU,YAAf,SACE,sBACEA,UAAS,UACP5B,EAAMoH,UAAUmF,oBAAsBC,IAAYC,QAC9C,kBACAzM,EAAMoH,UAAUmF,oBAAsBC,IAAYE,QAClD,eACA,iBALG,yBADX,SASGlB,YACCxL,EAAMoH,UAAUmF,kBAAkBD,yBAKvCtM,EAAMoH,UAAUmF,oBAAsBC,IAAYC,SACjD,sBAAK7K,UAAU,+BAAf,UACE,yBACEA,UAAS,gIACTO,QAAS,WACPuE,EAAeiC,IAAoB0D,WAHvC,UAME,cAAC,IAAD,CAAUzK,UAAU,YACpB,6CAEF,yBACEA,UAAS,mIACTO,QAAS,WACPuE,EAAeiC,IAAoBC,WAHvC,UAME,cAAC,IAAD,CAAkBhH,UAAU,YAC5B,mDAUT6E,GACC,0BAAS7E,UAAU,uBAAnB,UACE,sBAAKA,UAAU,2CAAf,+BACqB,IACnB,sBACEA,UAAS,gCACP6E,IAAgBkC,IAAoBC,SAChC,gBACA,mBAJR,SAOGnC,IAAgBkC,IAAoBC,SACjC,WACA,gBAIR,sBAAKhH,UAAU,kEAAf,UACE,sBAAKA,UAAU,cAAf,UACE,0BACE+K,YAAW,6BACXC,KAAM,GACNpL,KAAM,EACNI,UAAS,wBACP+E,GAAmC,YAAtBA,EAAUM,QAAwB,MAAQ,OADhD,oDAGT4F,MAAO,CAAEC,OAAQ,QACjB3B,MAAOtE,EACPkG,SAAU,SAACC,GACTlG,EAAekG,EAAEC,OAAO9B,OACxBvE,EAAa,OAEfsG,SAAU3G,IAEXI,GAAmC,YAAtBA,EAAUM,SACtB,mBAAGrF,UAAU,eAAb,SAA6B+E,EAAUO,SAG3C,sBAAKtF,UAAU,kDAAf,UACE,yBACEA,UAAU,iIACVO,QAAS,WACP2E,EAAe,IACfJ,EAAe,MACfE,EAAa,OAEfsG,SAAU3G,EAPZ,UASE,cAAC,IAAD,CAAmB3E,UAAU,YAC7B,2CAEF,wBACEA,UAAU,iIACVsL,SAAU3G,EACVpE,QAAS,kBACPgL,OAAOC,QAAP,mCAEI3G,IAAgBkC,IAAoBC,SAChC,UACA,WAJR,qBAMK7B,KAVT,SAaGR,EACC,qBAAK3E,UAAU,GAAf,wBAEA,sBAAKA,UAAU,2CAAf,UACE,cAAC,IAAD,CAAkBA,UAAU,YAC5B,+D,SCrPLsE,eAVS,SAAC,GAKvB,MAAO,CACLC,KAFC,EAHHA,QASsC,CACtCC,kBACAiH,mBACA/G,qBAHaJ,EA/a6C,SAAClG,GAC3D,IAAM+G,EAAY,uCAAG,gCAAAC,EAAA,yDACdhH,EAAMyG,YADQ,uBAEjBzG,EAAM4G,aAAa,CACjBK,QAAS,SACTC,IAAK,wBAJU,kBAMVlH,EAAMwG,mBAAkB,IANd,WASf5F,YAAgBZ,EAAM6G,aATP,uBAUjB7G,EAAM4G,aAAa,CACjBK,QAAS,UACTC,IAAK,oCAZU,kBAcVlH,EAAMwG,mBAAkB,IAdd,YAiBfW,EAAWnH,EAAMoH,UAAUC,OAAOpG,MACpC,SAACF,GAAD,OAAUA,EAAKuG,QAAUtH,EAAMoH,UAAUG,gBAlBxB,wBAsBjBvH,EAAMwG,mBAAkB,GAClBgB,EAA8B,CAClCC,aAAcN,EAAStD,GACvB6D,mBAAoB1H,EAAM6G,YAC1Bc,aAAc3H,EAAMmG,KAAKyB,KAAKC,QAC9BC,sBAAuB9H,EAAMyG,YAC7BsB,eAAgB/H,EAAMmG,KAAKyB,KAAKI,MAAQ,IAAMhI,EAAMmG,KAAKyB,KAAKK,MAC9DC,gBAAiBlI,EAAMmG,KAAKyB,KAAKO,OA7BlB,oBAiCGC,IAAMC,IAAN,UACb3E,IAAI4E,SADS,0BACiBtI,EAAMoH,UAAUzB,KACjD6B,GAnCa,aAiCTe,EAjCS,4BAsCbC,QAAQC,IAAI,CAAEC,mBAAoBH,IAClCvI,EAAMoG,cAAcmC,EAAI9G,MAEpBzB,EAAMyG,cAAgBkC,IAAoBC,SAzCjC,kCA0CL0E,IA1CK,QA4CbtN,EAAMsG,eAAe,CACnBpD,MAAM,gCACNT,MAAOqG,IAAgBC,UAGzB/I,EAAM8G,eAAe,IACrB9G,EAAM0G,eAAe,MAlDR,2DAqDf8B,QAAQQ,MAAR,MACAhJ,EAAMsG,eAAe,CACnBpD,MAAO+F,YAAY,EAAD,IAClBxG,MAAOqG,IAAgBI,SAxDV,QA2DjBlJ,EAAMwG,mBAAkB,GA3DP,2DAAH,qDA+DZ8G,EAAgB,uCAAG,8BAAAtG,EAAA,6DACjBQ,EAAoC,CACxCK,QAAS7H,EAAMoH,UAAUQ,KACzB2F,OAAQvN,EAAMoH,UAAUoC,eACxBxI,kBACEhB,EAAMyG,cAAgBkC,IAAoBC,SACtC4E,IAA6BC,SAC7BD,IAA6BnB,SACnCqB,aAAc,CACZ7F,QAAS7H,EAAMmG,KAAKyB,KAAKC,QACzB4B,QAASzJ,EAAM6G,YACf7F,kBACEhB,EAAMyG,cAAgBkC,IAAoBC,SACtC4E,IAA6BC,SAC7BD,IAA6BnB,UAErCsB,cAAc,EACdC,YAAY,GAERC,EAAqC,CACzChG,QAAS7H,EAAMoH,UAAUQ,KACzB2F,OAAQvN,EAAMoH,UAAUoC,eACxBxI,kBACEhB,EAAMyG,cAAgBkC,IAAoBC,SACtC4E,IAA6BC,SAC7BD,IAA6BnB,SACnCqB,aAAc,CACZ7F,QAAS7H,EAAMmG,KAAKyB,KAAKC,QACzB4B,QAASzJ,EAAM6G,YACf7F,kBACEhB,EAAMyG,cAAgBkC,IAAoBC,SACtC4E,IAA6BC,SAC7BD,IAA6BnB,SACnCyB,KAAM,IAERH,cAAc,EACdC,YAAY,GApCS,kBAwCHxF,IAAM2F,KAAN,UACbrK,IAAIsK,KADS,oBAEhBxG,GA1CmB,0CA6CnBxH,EAAMqN,eAAeQ,GA7CF,UA8CbI,EAAgBjO,EAAMoH,UAAUQ,MA9CnB,0DAkDrBY,QAAQQ,MAAR,MACAhJ,EAAMsG,eAAe,CACnBpD,MAAO+F,YAAY,EAAD,IAClBxG,MAAOqG,IAAgBI,SArDJ,0DAAH,qDA0DhB+E,EAAe,uCAAG,WAAOC,GAAP,eAAAlH,EAAA,+EAEFoB,IAAMkB,MAAN,UACb5F,IAAI6F,YADS,8BACwB2E,IAHtB,OAEd3F,EAFc,OAKpBC,QAAQC,IAAI,CAAEF,QALM,gDAOpBC,QAAQQ,MAAM,CAAEA,MAAK,OACrBhJ,EAAMsG,eAAe,CACnBpD,MAAO+F,YAAY,EAAD,IAClBxG,MAAOqG,IAAgBI,SAVL,yDAAH,sDAefC,EAAgB,SACpBC,GAEA,GAAIpJ,EAAMqJ,aACR,OAAOrJ,EAAMqJ,aAAapI,MAAK,SAACF,GAAD,OAAUA,EAAK8C,KAAOuF,MAKzD,OACE,0BAASxH,UAAU,GAAnB,UACE,sBAAKA,UAAU,iDAAf,UAEE,0BAASA,UAAU,gBAAnB,UACE,sBAAKA,UAAU,oCAAf,UACE,sBAAKA,UAAU,0BAAf,UACE,sBAAMA,UAAS,uBAAf,oBACA,sBAAMA,UAAU,kCAAhB,SACG5B,EAAMoH,UAAU8C,YAAYC,UAAUnC,MACrC,IACAhI,EAAMoH,UAAU8C,YAAYC,UAAUlC,WAG5C,wBACEkG,KAAK,SACLvM,UAAU,uGACVO,QAAS,kBAAMnC,EAAMoO,cAAcpO,EAAMqO,YAH3C,SAKGrO,EAAMqO,UAAY,OAAS,YAGhC,sBAAKzM,UAAU,0BAAf,UACE,sBAAMA,UAAS,uBAAf,oBACA,sBAAMA,UAAU,mCAAhB,SAEG5B,EAAMoH,UAAU8C,YAAYkB,QAAQtK,QACnC,SAACC,GAAD,MAAqC,YAA3BA,EAAKC,qBACfW,OAAS,EACP2M,GACEtO,EAAMwE,mBACNxE,EAAMoH,UAAU8C,YAAYkB,QAAQtK,QAClC,SAACC,GAAD,MAAqC,YAA3BA,EAAKC,qBAEjBhB,EAAMoH,WAER,SAGR,sBAAKxF,UAAU,gDAAf,UACE,sBAAMA,UAAS,SAAf,qBACA,sBAAMA,UAAU,8CAAhB,SACG5B,EAAMoH,UAAUiE,SACbG,YAAsBxL,EAAMoH,UAAUiE,SAASC,QAC/CE,YAAsBxL,EAAMuO,QAAQvN,wBAG5C,sBAAKY,UAAU,gDAAf,UACE,sBAAMA,UAAS,SAAf,2BACA,sBAAMA,UAAU,gBAAhB,SACG5B,EAAMoH,UAAUiE,SAASI,UAAUC,UAGxC,sBAAK9J,UAAU,+CAAf,UACE,sBAAMA,UAAS,SAAf,qBACA,sBAAMA,UAAU,cAAhB,SACG5B,EAAMoH,UAAUiE,SACbrL,EAAMoH,UAAUiE,SAASU,OACzB/L,EAAMuO,QAAQb,aAAac,YAKlCxO,EAAMqO,WACL,qBAAKzM,UAAU,gDAAf,SACE,qBACE6B,IAAG,UAAKC,IAAIC,WAAT,YAAuB3D,EAAMuO,QAAQjL,OACxCM,IAAI,WACJhC,UAAS,kDAWhB5B,EAAMoH,UAAUC,OAAO1F,OAAS,GAC/B3B,EAAMoH,UAAUC,OAAOvF,KAAI,SAACmK,EAAOlK,GAAR,OACzB,0BAASH,UAAU,0BAAnB,UACE,sBAAKA,UAAU,iCAAf,kCACwBG,EAAQ,EADhC,OAIA,sBAAKH,UAAU,2EAAf,UACE,sBAAKA,UAAU,wDAAf,UACE,cAAC,IAAD,IACCuH,EAAcnJ,EAAMoH,UAAU8E,uBAC3B/C,EAAcnJ,EAAMoH,UAAU8E,uBAC3BH,OACH,MAEN,4BAAIE,EAAMF,SACV,sBAAMnK,UAAU,wBAAhB,SACGuK,YAASF,EAAML,gBAKnBQ,YAAiBpM,EAAMoH,UAAW6E,EAAM3E,QACvC,0BAAS1F,UAAU,OAAnB,UACE,uBAAMA,UAAU,qCAAhB,6BACmBG,EAAQ,EAD3B,OAGA,sBAAKH,UAAU,aAAf,UACE,sBAAKA,UAAU,gDAAf,UACE,sBAAMA,UAAS,SAAf,qBACA,sBACEA,UAAS,oBACPqK,EAAMnE,wBACNa,IAAoB0D,SAChB,kBACA,gBAJG,sBADX,SAQGb,YACCS,EAAMnE,sBAAsBwE,0BAIlC,sBAAK1K,UAAU,gDAAf,UACE,sBAAMA,UAAS,SAAf,2BACA,sBAAMA,UAAU,gBAAhB,SACGqK,EAAMR,UAAUC,UAGrB,sBAAK9J,UAAU,+CAAf,UACE,sBAAMA,UAAS,SAAf,qBACA,sBAAMA,UAAU,cAAhB,SACGqK,EAAMvE,gCAlD+B3F,EAAQkK,EAAMpI,WA8DpE7D,EAAMyG,aACN,0BAAS7E,UAAU,4DAAnB,UAEE,qBAAKA,UAAU,OAAf,SACE,sBACEA,UAAS,UACP5B,EAAMoH,UAAUmF,oBAAsBC,IAAYC,QAC9C,kBACAzM,EAAMoH,UAAUmF,oBAAsBC,IAAYE,QAClD,eACA,iBALG,yBADX,SASGlB,YACCxL,EAAMoH,UAAUmF,kBAAkBD,yBAKvCtM,EAAMoH,UAAUmF,oBAAsBC,IAAYC,SACjD,sBAAK7K,UAAU,+BAAf,UACE,yBACEA,UAAS,gIACTO,QAAS,WACPnC,EAAM0G,eAAeiC,IAAoB0D,WAH7C,UAME,cAAC,IAAD,CAAUzK,UAAU,YACpB,6CAEF,yBACEA,UAAS,mIACTO,QAAS,WACPnC,EAAM0G,eAAeiC,IAAoBC,WAH7C,UAME,cAAC,IAAD,CAAkBhH,UAAU,YAC5B,mDAUT5B,EAAMyG,aACL,0BAAS7E,UAAU,uBAAnB,UACE,sBAAKA,UAAU,2CAAf,+BACqB,IACnB,sBACEA,UAAS,gCACP5B,EAAMyG,cAAgBkC,IAAoBC,SACtC,gBACA,mBAJR,SAOG5I,EAAMyG,cAAgBkC,IAAoBC,SACvC,WACA,gBAIR,sBAAKhH,UAAU,kEAAf,UACE,sBAAKA,UAAU,cAAf,UACE,0BACE+K,YAAW,6BACXC,KAAM,GACNpL,KAAM,EACNI,UAAS,wBACP5B,EAAM2G,WAAyC,YAA5B3G,EAAM2G,UAAUM,QAC/B,MACA,OAHG,oDAKT4F,MAAO,CAAEC,OAAQ,QACjB3B,MAAOnL,EAAM6G,YACbkG,SAAU,SAACC,GACThN,EAAM8G,eAAekG,EAAEC,OAAO9B,OAC9BnL,EAAM4G,aAAa,OAErBsG,SAAUlN,EAAMuG,iBAEjBvG,EAAM2G,WAAyC,YAA5B3G,EAAM2G,UAAUM,SAClC,mBAAGrF,UAAU,eAAb,SAA6B5B,EAAM2G,UAAUO,SAGjD,sBAAKtF,UAAU,kDAAf,UACE,yBACEA,UAAU,iIACVO,QAAS,WACPnC,EAAM8G,eAAe,IACrB9G,EAAM0G,eAAe,MACrB1G,EAAM4G,aAAa,OAErBsG,SAAUlN,EAAMuG,eAPlB,UASE,cAAC,IAAD,CAAmB3E,UAAU,YAC7B,2CAEF,wBACEA,UAAU,iIACVsL,SAAUlN,EAAMuG,eAChBpE,QAAS,kBACPgL,OAAOC,QAAP,mCAEIpN,EAAMyG,cAAgBkC,IAAoBC,SACtC,UACA,WAJR,qBAMK7B,KAVT,SAaG/G,EAAMuG,eACL,qBAAK3E,UAAU,GAAf,wBAEA,sBAAKA,UAAU,2CAAf,UACE,cAAC,IAAD,CAAkBA,UAAU,YAC5B,+D,4BH7bf9B,K,4BAAAA,E,qBAAAA,M,KAoBL,IA8eeoG,eAbS,SAAC,GAOvB,MAAO,CACLC,KAFC,EALHA,KAQEsI,cAHC,EAJHA,iBAWsC,CACtCC,uBACAtI,kBACAE,qBAHaJ,EA9e+C,SAAClG,GAC7D,MAA4CC,oBAAkB,GAA9D,mBAAOsG,EAAP,KAAuBC,EAAvB,KACA,EAA8BvG,oBAAS,GAAvC,mBAAO0O,EAAP,KAAgBC,EAAhB,KACA,EAAsC3O,mBACpC,MADF,mBAAOwG,EAAP,KAAoBC,EAApB,KAGA,EAAkCzG,mBAGxB,MAHV,mBAAO0G,EAAP,KAAkBC,EAAlB,KAIA,EAAsC3G,mBAAiB,IAAvD,mBAAO4G,EAAP,KAAoBC,EAApB,KACA,EAA0B7G,mBAAiB,GAA3C,mBAAO4O,EAAP,KAAcC,EAAd,KACA,EAAsC7O,mBAAmBH,EAASiP,SAAlE,mBAAOC,EAAP,KAAoBC,EAApB,KAaA,GAXAC,qBAAU,WAEgC,OAAtClP,EAAMyO,cAAcA,eAC0B,IAA7CzO,EAAMyO,cAAcA,cAAc9M,QAAgBgN,EAEnD3O,EAAM0O,kBAAkBE,GACfD,GACTC,GAAW,KAEZ,CAACD,EAAS3O,IAET2O,GAAiD,OAAtC3O,EAAMyO,cAAcA,cACjC,OAAO,cAACpL,EAAA,EAAD,IAGT,IAAM0D,EAAY,uCAAG,gCAAAC,EAAA,yDACdP,EADc,uBAEjBG,EAAa,CACXK,QAAS,SACTC,IAAK,wBAJU,kBAMVV,GAAkB,IANR,UAUjBC,IAAgBkC,IAAoBC,YACnCiG,GAAS,GAAKA,EAAQ,KAXN,uBAajBjI,EAAa,CACXK,QAAS,QACTC,IAAK,kDAfU,kBAkBVV,GAAkB,IAlBR,WAqBf5F,YAAgBiG,GArBD,uBAsBjBD,EAAa,CACXK,QAAS,UACTC,IAAK,oCAxBU,kBA0BVV,GAAkB,IA1BR,YA6BfW,EAAWnH,EAAMoH,UAAUC,OAAOpG,MACpC,SAACF,GAAD,OAAUA,EAAKuG,QAAUtH,EAAMoH,UAAUG,gBA9BxB,wBAkCjBf,GAAkB,GACZgB,EAA8B,CAClCC,aAAcN,EAAStD,GACvB6D,mBAAoBb,EACpBc,aAAc3H,EAAMmG,KAAKyB,KAAKC,QAC9BC,sBAAuBrB,EACvBsB,eAAgB/H,EAAMmG,KAAKyB,KAAKI,MAAQ,IAAMhI,EAAMmG,KAAKyB,KAAKK,MAC9DC,gBAAiBlI,EAAMmG,KAAKyB,KAAKO,OAzClB,oBA6CGC,IAAMC,IAAN,UACb3E,IAAI4E,SADS,0BACiBtI,EAAMoH,UAAUzB,KACjD6B,GA/Ca,aA6CTe,EA7CS,4BAkDbC,QAAQC,IAAI,CAAEC,mBAAoBH,IAClCvI,EAAMoG,cAAcmC,EAAI9G,MAEpBgF,IAAgBkC,IAAoBC,SArD3B,kCAsDLuG,IAtDK,QAwDbnP,EAAMsG,eAAe,CACnBpD,MAAM,gCACNT,MAAOqG,IAAgBC,UAGzBjC,EAAe,IACfJ,EAAe,MA9DF,2DAiEf8B,QAAQQ,MAAR,MACAhJ,EAAMsG,eAAe,CACnBpD,MAAO+F,YAAY,EAAD,IAClBxG,MAAOqG,IAAgBI,SApEV,QAuEjB1C,GAAkB,GAvED,2DAAH,qDA2EZ2I,EAAmB,uCAAG,sBAAAnI,EAAA,+EAElBoB,IAAMC,IAAN,UAAa3E,IAAI0L,QAAjB,kCAA0D,CAC9DC,gBAAiBrP,EAAMoH,UAAUoC,eACjCqF,MAAOA,IAJe,sDAOxBrG,QAAQQ,MAAR,MACAhJ,EAAMsG,eAAe,CACnBpD,MAAO+F,YAAY,EAAD,IAClBxG,MAAOqG,IAAgBI,SAVD,wDAAH,qDAenBC,EAAgB,SACpBC,GAEA,GAAIpJ,EAAMqJ,aACR,OAAOrJ,EAAMqJ,aAAapI,MAAK,SAACF,GAAD,OAAUA,EAAK8C,KAAOuF,MA+CzD,OACE,0BAASxH,UAAU,GAAnB,UAEE,qBAAKA,UAAU,kCAAf,SACG0N,OAAOC,OAAOzP,GAAUgC,KAAI,SAACf,EAAMyO,GAAP,OAC3B,qBAEErN,QAAS,kBAAM8M,EAAelO,IAC9Ba,UAAS,4BACPoN,IAAgBjO,EACZ,4DACA,sCAHG,kIAHX,SASGA,GARIyO,QAaX,sBAAK5N,UAAU,iDAAf,UAEE,0BAASA,UAAU,gBAAnB,UAEGoN,IAAgBlP,EAAS2P,MACxB,yBAAS7N,UAAU,wDAAnB,SACE,qBAAKA,UAAU,mCAAf,SACE,cAAC8N,EAAA,EAAD,CACEC,aAAa,EACbC,QAASC,YACP7P,EAAM8P,cACN9P,EAAM+P,SAASlF,aAEjBmF,WAnEsB,CAClC,CACEC,cAAejQ,EAAM8P,cAAcG,cACnCC,UAAWlQ,EAAM8P,cAAcI,UAC/BC,aAAcnQ,EAAM8P,cAAcK,aAClCvI,KAAM5H,EAAM8P,cAAclI,KAC1BwI,OAAQpQ,EAAM8P,cAAcM,OAC5BC,OAAQrQ,EAAM8P,cAAcO,OAC5BC,WAAYtQ,EAAM8P,cAAcQ,WAChCC,YAAavQ,EAAM8P,cAAcS,YACjCC,cAAexQ,EAAM8P,cAAcU,cACnCC,YAAazQ,EAAM8P,cAAcW,YACjCC,4BACE1Q,EAAM8P,cAAcY,4BAGtBC,iBAAkB3Q,EAAM8P,cAAca,iBACtCC,gBAAiB5Q,EAAM8P,cAAcc,gBACrCC,cAAe7Q,EAAM8P,cAAce,cACnCC,UAAW9Q,EAAM8P,cAAcgB,UAC/BxF,OAAQtL,EAAM8P,cAAcxE,OAC5BM,UAAW5L,EAAM8P,cAAclE,UAC/BmF,UAAW/Q,EAAM8P,cAAciB,UAC/BnD,YAAY,EACZoD,OAAQ,GACRrD,cAAc,EACdtD,SAAU,GACVgF,gBAAiBrP,EAAM8P,cAAcT,kBAyC3BxH,QAAS7H,EAAM8P,cAAclI,WAQpCoH,IAAgBlP,EAASiP,SACxB,yBAASnN,UAAU,wDAAnB,SACE,qBAAKA,UAAU,oCAAf,SACE,sBAAKA,UAAU,0BAAf,UACE,sBAAMA,UAAS,uBAAf,oBACA,sBAAMA,UAAU,kCAAhB,SACG5B,EAAMoH,UAAU8C,YAAYC,UAAUnC,MACrC,IACAhI,EAAMoH,UAAU8C,YAAYC,UAAUlC,eAOjD+G,IAAgBlP,EAASiP,SACxB,sBAAKnN,UAAU,GAAf,UACE,sBAAKA,UAAU,0BAAf,UACE,sBAAMA,UAAS,uBAAf,oBACA,sBAAMA,UAAU,kCAAhB,SACG5B,EAAMoH,UAAU8C,YAAY/B,WAGjC,sBAAKvG,UAAU,0BAAf,UACE,sBAAMA,UAAS,uBAAf,oBACA,sBAAMA,UAAU,kCAAhB,SACG5B,EAAMoH,UAAU8C,YAAY+G,kBAGjC,sBAAKrP,UAAU,0BAAf,UACE,sBAAMA,UAAS,uBAAf,qBACA,sBAAMA,UAAU,kCAAhB,SACiD,MAA9C5B,EAAMoH,UAAU8C,YAAYC,UAAU+G,IACnC,OACA,oBAWblR,EAAMoH,UAAUC,OAAO1F,OAAS,GAC/B3B,EAAMoH,UAAUC,OAAOvF,KAAI,SAACmK,EAAOlK,GAAR,OACzB,0BAASH,UAAU,0BAAnB,UACE,sBAAKA,UAAU,iCAAf,kCACwBG,EAAQ,EADhC,OAIA,sBAAKH,UAAU,2EAAf,UACE,sBAAKA,UAAU,wDAAf,UACE,cAAC,IAAD,IACCuH,EAAcnJ,EAAMoH,UAAU8E,uBAC3B/C,EAAcnJ,EAAMoH,UAAU8E,uBAC3BH,OACH,MAEN,4BAAIE,EAAMF,SACV,sBAAMnK,UAAU,wBAAhB,SACGuK,YAASF,EAAML,gBAQnBQ,YAAiBpM,EAAMoH,UAAW6E,EAAM3E,QACvC,0BAAS1F,UAAU,OAAnB,UACE,uBAAMA,UAAU,qCAAhB,6BACmBG,EAAQ,EAD3B,OAGA,sBAAKH,UAAU,aAAf,UACE,sBAAKA,UAAU,gDAAf,UACE,sBAAMA,UAAS,SAAf,qBACA,sBACEA,UAAS,oBACPqK,EAAMnE,wBACNa,IAAoB0D,SAChB,kBACA,gBAJG,sBADX,SAQGb,YACCS,EAAMnE,sBAAsBwE,0BAIlC,sBAAK1K,UAAU,gDAAf,UACE,sBAAMA,UAAS,SAAf,2BACA,sBAAMA,UAAU,gBAAhB,SACGqK,EAAMR,UAAUC,UAGrB,sBAAK9J,UAAU,+CAAf,UACE,sBAAMA,UAAS,SAAf,qBACA,sBAAMA,UAAU,cAAhB,SACGqK,EAAMvE,gCArD+B3F,EAAQkK,EAAMpI,WAiEpE4C,GACA,0BAAS7E,UAAU,4DAAnB,UAEE,qBAAKA,UAAU,YAAf,SACE,sBACEA,UAAS,UACP5B,EAAMoH,UAAUmF,oBAAsBC,IAAYC,QAC9C,kBACAzM,EAAMoH,UAAUmF,oBAAsBC,IAAYE,QAClD,eACA,iBALG,yBADX,SASGlB,YACCxL,EAAMoH,UAAUmF,kBAAkBD,yBAKvCtM,EAAMoH,UAAUmF,oBAAsBC,IAAYC,SACjD,sBAAK7K,UAAU,+BAAf,UACE,yBACEA,UAAS,gIACTO,QAAS,WACPuE,EAAeiC,IAAoB0D,WAHvC,UAME,cAAC,IAAD,CAAUzK,UAAU,YACpB,6CAEF,yBACEA,UAAS,mIACTO,QAAS,WACPuE,EAAeiC,IAAoBC,WAHvC,UAME,cAAC,IAAD,CAAkBhH,UAAU,YAC5B,mDAUT6E,GACC,0BAAS7E,UAAU,uBAAnB,UACE,sBAAKA,UAAU,2CAAf,+BACqB,IACnB,sBACEA,UAAS,gCACP6E,IAAgBkC,IAAoBC,SAChC,gBACA,mBAJR,SAOGnC,IAAgBkC,IAAoBC,SACjC,WACA,gBAIR,sBAAKhH,UAAU,kEAAf,UACE,sBAAKA,UAAU,mBAAf,UACG6E,IAAgBkC,IAAoBC,UACnC,sBAAKhH,UAAU,6CAAf,UACE,sBAAMA,UAAU,gBAAhB,4BACA,sBAAKA,UAAU,OAAf,UACE,uBACE+K,YAAW,iBACX/K,UAAS,wBACP+E,GAAmC,UAAtBA,EAAUM,QACnB,MACA,OAHG,oDAKTkE,MAAO0D,EACP9B,SAAU,SAACC,GACT8B,EAASqC,OAAOnE,EAAEC,OAAO9B,QACzBvE,EAAa,OAEfsG,SAAU3G,IAEXI,GAAmC,UAAtBA,EAAUM,SACtB,mBAAGrF,UAAU,eAAb,SAA6B+E,EAAUO,YAK/C,sBAAKtF,UAAU,cAAf,UACE,0BACE+K,YAAW,6BACXC,KAAM,GACNpL,KAAMiF,IAAgBkC,IAAoBC,SAAW,EAAI,EACzDhH,UAAS,wBACP+E,GAAmC,YAAtBA,EAAUM,QACnB,MACA,OAHG,oDAKT4F,MAAO,CAAEC,OAAQ,QACjB3B,MAAOtE,EACPkG,SAAU,SAACC,GACTlG,EAAekG,EAAEC,OAAO9B,OACxBvE,EAAa,OAEfsG,SAAU3G,IAEXI,GAAmC,YAAtBA,EAAUM,SACtB,mBAAGrF,UAAU,eAAb,SAA6B+E,EAAUO,YAI7C,sBAAKtF,UAAU,kDAAf,UACE,yBACEA,UAAU,iIACVO,QAAS,WACP2E,EAAe,IACfJ,EAAe,MACfE,EAAa,OAEfsG,SAAU3G,EAPZ,UASE,cAAC,IAAD,CAAmB3E,UAAU,YAC7B,2CAEF,wBACEA,UAAU,iIACVsL,SAAU3G,EACVpE,QAAS,kBACPgL,OAAOC,QAAP,mCAEI3G,IAAgBkC,IAAoBC,SAChC,UACA,WAJR,qBAMK7B,KAVT,SAaGR,EACC,qBAAK3E,UAAU,GAAf,wBAEA,sBAAKA,UAAU,2CAAf,UACE,cAAC,IAAD,CAAkBA,UAAU,YAC5B,+D,SI3cP0M,GAAyB,SACpC9J,EACA4M,EACAhK,GAEA,IAAIiK,EAAiB,GAGrB,GAAIjK,EAAUkK,WAAaC,IAAcC,oBAAqB,CAC5D,IAAIjD,EAAU6C,EAAmBnQ,MAC/B,SAACF,GAAD,OAAUA,EAAKwM,SAAWnG,EAAUoC,kBAEtC6H,EAAS9C,EACLkD,GAAsBjN,EAAoB+J,GAASmD,KACnD,qBAIN,OAAOL,GAGII,GAAwB,SACnCjN,EACAmN,GAEA,IAAIC,EAAsB,GACxBC,EAAyB,GACzBC,EAAmB,GACnBC,EAAmB,GA6BrB,OA3BEJ,EAAIjR,iBACJiR,EAAIjR,gBAAgBiB,OAAS,GAC7B6C,EAAmBa,oBAKnBwM,EAHAE,EAAWvN,EAAmBa,oBAAoBvE,QAChD,SAACkR,GAAD,OAAOA,EAAE1M,6BAA+BqM,EAAIjR,mBAC5C,GAAGwC,MAGLyO,EAAIlR,YAAYkB,OAAS,GACzB6C,EAAmBS,mBAKnB2M,EAHAG,EAAWvN,EAAmBS,iBAAiBnE,QAC7C,SAACkR,GAAD,OAAOA,EAAE9M,0BAA4ByM,EAAIlR,eACzC,GAAGyC,OAILyO,EAAIzQ,0BAA0BS,OAAS,GACvC6C,EAAmBkB,iBAKnBqM,GAAY,QAHZD,EAAWtN,EAAmBkB,eAAe5E,QAC3C,SAACkR,GAAD,OAAOA,EAAErM,MAAQgM,EAAIzQ,6BACrB,GAAGgC,QAIA,CACLiC,SAAUyM,EACVK,aAAcJ,EACdrM,MAAOsM,EACPJ,KAAMK,IAIGG,GAAqB,SAChCC,EACAlI,EACAJ,GAKA,GAAIsI,EAAiB,CACnB,IAAI/H,EAAkB+H,EAAgBlR,MACpC,SAACF,GAAD,OAAUA,EAAK4E,MAAQkE,KAEzB,GAAIO,GAAmBH,EAAiB,CACtC,IAAI1F,EAAe0F,EAAgBhJ,MACjC,SAACF,GAAD,OAAUA,EAAKiJ,cAAgBI,EAAiBC,YAElD,GAAI9F,EACF,MAAO,CAAE6N,YAAahI,EAAiBC,SAAU9F,IAIvD,OAAO,MA8CH8N,G,kDACJ,WAAYrS,GAAkB,IAAD,8BAC3B,cAAMA,IAsBR4O,WAAa,SAACzD,GACZ,EAAKmH,SAAS,CAAE3D,QAASxD,KAxBE,EA2B7BoH,eAAiB,SAACpH,GAChB,EAAKmH,SAAS,CAAEE,YAAarH,KA5BF,EA+B7BsH,iBAAmB,SAACtH,GAClB,EAAKmH,SAAS,CAAEI,cAAevH,KAhCJ,EAmC7BwH,cAAgB,SAACxH,GACf,EAAKmH,SAAS,CAAEM,WAAYzH,KApCD,EAuC7B0H,aAAe,SAAC1H,GACd,EAAKmH,SAAS,CAAEQ,UAAW3H,KAxCA,EA4C7B4H,WAAa,SAAC5H,GACZ,EAAKmH,SAAS,CAAEU,QAAS7H,KA7CE,EA+C7B8H,aAAe,SAAC9H,GACd,EAAKmH,SAAS,CAAEY,UAAW/H,KAhDA,EAkD7BgI,eAAiB,SAAChI,GAChB,EAAKmH,SAAS,CAAEc,YAAajI,KAnDF,EAqD7BiD,aAAe,SAACjD,GACd,EAAKmH,SAAS,CAAEjE,UAAWlD,KAtDA,EAwD7B3E,kBAAoB,SAAC2E,GACnB,EAAKmH,SAAS,CAAE/L,eAAgB4E,KAzDL,EA4D7BzE,eAAiB,SAACyE,GAChB,EAAKmH,SAAS,CAAE7L,YAAa0E,KA7DF,EAgE7BrE,eAAiB,SAACqE,GAChB,EAAKmH,SAAS,CAAEzL,YAAasE,KAjEF,EAoE7BvE,aAAe,SACbuE,GAKA,EAAKmH,SAAS,CAAE3L,UAAWwE,KA1EA,EA6E7BkI,kBAAoB,SAACC,GAEnB,GAA8B,OAA1B,EAAKC,MAAMX,WAAqB,CAClC,IAAIY,EAAcF,EAASrS,MAAK,SAACF,GAAD,OAA6B,IAAnBA,EAAK0S,aAC/C,EAAKd,cAAca,GAA4BF,EAAS,IACxD,EAAKI,eAAeF,GAA4BF,EAAS,MAlFhC,EAsF7BK,eAAiB,SAACxI,GAChB,EAAKmH,SAAS,CAAEsB,YAAazI,KAvFF,EA0F7BuI,eAAiB,SAACF,GAEsB,OAAlC,EAAKxT,MAAM6T,SAASC,WACtB,EAAK9T,MAAM+T,aACT,EACAP,EAAYQ,iBACZ,SAAC1I,EAAiBpE,GAChB,EAAK0H,WAAWtD,IACXA,GAAUpE,EAAIvF,QACjB,EAAK3B,MAAMsG,eAAe,CACxBpD,MAAOgE,EACPzE,MAAOqG,IAAgBI,aArGN,EA6G7B+K,kBAAoB,SAACpK,GAGhB,EAAK7J,MAAM6T,SAAS1B,gBAAgBlR,MACnC,SAACF,GAAD,OAAUA,EAAK4E,MAAQkE,MAGzB,EAAK7J,MAAMkU,mBACTrK,GACA,SAACyB,EAAiBpE,GAChB,EAAK0H,WAAWtD,IACXA,GAAUpE,EAAIvF,QACjB,EAAK3B,MAAMsG,eAAe,CACxBpD,MAAOgE,EACPzE,MAAOqG,IAAgBI,aA3HN,EAmI7BiL,gBAAkB,SAACC,EAAiBlB,GAC9BA,IAAc3B,IAAchI,aAC9B,EAAK0K,kBAAkBG,GACrBlB,IAAc3B,IAAc8C,aAAa,EAAKC,eAAeF,IAtItC,EAyI7BE,eAAiB,SAACC,GAGb,EAAKvU,MAAM6T,SAASW,UAAUvT,MAC7B,SAACF,GAAD,OAAUA,EAAKsO,kBAAoBkF,MAGrC,EAAKvU,MAAMyU,cACTF,GACA,SAACjJ,EAAiBpE,GAChB,EAAK0H,WAAWtD,IACXA,GAAUpE,EAAIvF,QACjB,EAAK3B,MAAMsG,eAAe,CACxBpD,MAAOgE,EACPzE,MAAOqG,IAAgBI,aAvJN,EA+J7BwL,kBAAoB,WAEsB,OAApC,EAAK1U,MAAM2U,qBACb,EAAK3U,MAAM4U,oBACT,SAACtJ,EAAiBpE,EAAazF,GAC7B,EAAKmN,WAAWtD,GACXA,IACCpE,EAAIvF,QACN,EAAK3B,MAAMsG,eAAe,CACxBpD,MAAOgE,EACPzE,MAAOqG,IAAgBI,SAGvBzH,GAAQA,EAAKE,OAAS,GACxB,EAAK0R,kBAAkB5R,OAKtB,EAAKzB,MAAM2U,qBAAqBhT,OAAS,GAClD,EAAK0R,kBAAkB,EAAKrT,MAAM2U,sBAI/B,EAAK3U,MAAM6U,gBAAgB5P,mBAC9B,EAAKjF,MAAM8U,sBACX,EAAKlG,YAAW,IAIb,EAAK5O,MAAM6U,gBAAgBxP,sBAC9B,EAAKrF,MAAM+U,yBACX,EAAKnG,YAAW,IAIb,EAAK5O,MAAM6U,gBAAgBnP,iBAC9B,EAAK1F,MAAMgV,oBACX,EAAKpG,YAAW,IAGiB,OAA/B,EAAK5O,MAAMiK,gBACb,EAAKjK,MAAMiV,cAAa,SAAC3J,EAAiBpE,GACxC,EAAK0H,WAAWtD,GAChB9C,QAAQC,IAAI,CAAE6C,OAAQA,EAAQpE,IAAKA,IAC/BA,EAAIvF,QACN,EAAK3B,MAAMsG,eAAe,CACxBpD,MAAOgE,EACPzE,MAAOqG,IAAgBI,YAIpB,EAAKqK,MAAM5E,SACpB,EAAKC,YAAW,GAGuB,OAArC,EAAK5O,MAAM6T,SAASxK,cACtB,EAAKrJ,MAAMkV,iBAAgB,SAAC5J,EAAiBpE,GAC3C,EAAK0H,WAAWtD,GACXA,GACCpE,EAAIvF,OAAS,GACf,EAAK3B,MAAMsG,eAAe,CACxBpD,MAAOgE,EACPzE,MAAOqG,IAAgBI,YAQR,OAAvB,EAAKlJ,MAAM4K,SACoB,IAA9B,EAAK5K,MAAM4K,QAAQjJ,QAAgB,EAAK4R,MAAM5E,SAE/C,EAAK3O,MAAMmV,YAAY,EAAKvG,YAC5B,EAAKA,YAAW,IAEhB,EAAKA,YAAW,IA5OS,EAgP7BwG,kBAAoB,SAClBhO,GAEA,IAAIiK,EAAiBjK,EAAUoC,eAC/B,GAAIpC,EAAUkK,WAAaC,IAAcC,oBAAqB,CAC5D,IAAI6D,EAAWjO,EAAU8C,YAAYkB,QAAQtK,QAC3C,SAACC,GAAD,MAAqC,YAA3BA,EAAKC,qBAEjBqQ,EACEgE,EAAS1T,OAAS,EACd2M,GACE,EAAKtO,MAAM6U,gBACXQ,EACAjO,GAEF,qBAER,GAAIA,EAAUkK,WAAaC,IAAchI,aACnC,EAAKvJ,MAAM6T,SAAS1B,gBAAiB,CACvC,IAAI/H,EAAkB,EAAKpK,MAAM6T,SAAS1B,gBAAgBlR,MACxD,SAACF,GAAD,OAAUA,EAAK4E,MAAQyB,EAAUoC,kBAEnC,GACEY,GACA,EAAKpK,MAAM6T,SAAS1B,iBACpB,EAAKnS,MAAMiK,gBACX,CACA,IAAI1F,EAAe,EAAKvE,MAAMiK,gBAAgBhJ,MAC5C,SAACF,GAAD,OAAUA,EAAKiJ,cAAgBI,EAAiBC,YAGhDgH,EADE9M,EACOA,EAAa+F,eAEb,yBAMjB,GACElD,EAAUkK,WAAaC,IAAc8C,aACrC,EAAKrU,MAAM4K,SACX,EAAK5K,MAAM6T,SAASW,UACpB,CACA,IAAIc,EAAaC,YACf,EAAKvV,MAAM6T,SAASW,UACpBpN,EAAUoC,gBAGV6H,EADEiE,GAAcE,YAAc,EAAKxV,MAAM4K,QAAS0K,EAAWjF,QAE3D,WACAmF,YAAc,EAAKxV,MAAM4K,QAAS0K,EAAWjF,QAASxF,YAE/C,eAIb,OAAOwG,GAzSoB,EA4S7BoE,eAAiB,SAACC,GAChB,EAAKjD,kBAAiB,GACtB,EAAKzS,MAAM+T,aAAa,EAAG2B,GAAW,SAACpK,EAAiBpE,IACrDoE,GAAU,EAAKmH,kBAAiB,GACjC,EAAKF,eAAejH,IACL,IAAXA,GAAoBpE,EAAIvF,QAC1B,EAAK3B,MAAMsG,eAAe,CACxBpD,MAAOgE,EACPzE,MAAOqG,IAAgBI,aApTF,EA0T7ByM,iBAAmB,SAAC1J,GACGN,YAAKM,EAAML,WAAhC,IACMgK,EAAuB3J,EAAM5E,OAAO1F,OAE1C,OADSgK,YAAKM,EAAM5E,OAAOuO,EAAe,GAAGhK,YA1T7C,EAAK2H,MAAQ,CACX5E,SAAS,EACT6D,aAAa,EACbI,WAAY,KACZE,WAAW,EACXJ,eAAe,EACfM,QAAS,KACTE,UAAW,KACXE,YAAa,KACbQ,YAAa,GAGbvF,WAAW,EACX9H,gBAAgB,EAChBE,YAAa,KACbI,YAAa,GACbF,UAAW,MAnBc,E,0CAiU7B,WAAU,IAAD,OACP,OAAwC,OAApCkP,KAAK7V,MAAM2U,qBAEX,qBAAK/S,UAAU,kEAAf,6BAM2C,IAA3CiU,KAAK7V,MAAM2U,qBAAqBhT,OAEhC,sBAAKC,UAAU,oHAAf,UACE,cAAC,IAAD,CAAeA,UAAU,yBACzB,sBAAKA,UAAU,4BAAf,UACE,sBAAMA,UAAU,sCAAhB,+BAGA,sBAAMA,UAAU,UAAhB,mGAS8B,OAAlCiU,KAAK7V,MAAM6T,SAASC,UAEpB,qBAAKlS,UAAU,kEAAf,6BAOF,iCAEIiU,KAAKtC,MAAMT,WACX,cAACgD,EAAA,EAAD,UAEE,cAACC,EAAA,EAAD,CAAmBC,cAAeH,KAAKtC,MAAMf,iBAS/CqD,KAAKtC,MAAMT,WACX,cAACmD,EAAA,EAAD,CACEC,YAAW,UACiC,QAA1CL,KAAK7V,MAAM6T,SAASsC,kBAChB,MACAN,KAAK7V,MAAM6T,SAASsC,oBACpB5E,IAAcC,oBACd,YACAqE,KAAK7V,MAAM6T,SAASsC,oBACpB5E,IAAchI,YACd,eACAsM,KAAK7V,MAAM6T,SAASsC,oBACpB5E,IAAc8C,YACd,OACAwB,KAAK7V,MAAM6T,SAASsC,oBACpB5E,IAAc6E,kBACd,oBACAP,KAAK7V,MAAM6T,SAASsC,oBACpB5E,IAAc8E,mBACd,aACA,GAlBK,aAoBX1H,QAASkH,KAAKtC,MAAMf,YACpB8D,eAAgBT,KAAKtC,MAAM5E,QAC3BiE,WAAYiD,KAAKtC,MAAMX,WACvBD,cAAekD,KAAKlD,cACpB4D,kBAAmBV,KAAKtD,eACxBoC,qBAAsBkB,KAAK7V,MAAM2U,qBACjCc,eAAgBI,KAAKJ,eACrB/C,cAAemD,KAAKtC,MAAMb,iBAQ5BmD,KAAKtC,MAAMT,WACX,0BAASlR,UAAU,sBAAnB,UAEE,yBAASA,UAAU,mEAAnB,SACE,qBAAKA,UAAU,SAAf,SACE,uBACEmL,SAAU,SAACC,GAAD,OACR,EAAK2G,eAAe3G,EAAEC,OAAO9B,QAE/BgD,KAAK,OACLvM,UAAU,iFACV+K,YAAW,gCACXxB,MAAO0K,KAAKtC,MAAMK,YAClB1G,WACEsJ,YACEX,KAAK7V,MAAM6T,SAASC,UACpB+B,KAAK7V,MAAM6T,SAASsC,mBACpBxU,OAAS,SAQnB,qBAAKC,UAAU,yBAAf,SACE,wBAAOA,UAAU,gBAAgBiC,GAAG,iBAApC,UACE,uBAAOjC,UAAU,sEAAjB,SACE,+BACE,oBAAIA,UAAU,YAAd,eACA,oBAAIA,UAAU,YAAd,6BACA,oBAAIA,UAAU,YAAd,yBACA,oBAAIA,UAAU,YAAd,wBAC2C,QAA1CiU,KAAK7V,MAAM6T,SAASsC,mBACnB,oBAAIvU,UAAU,YAAd,wBAEF,oBAAIA,UAAU,YAAd,yBACA,oBAAIA,UAAU,YAAd,0BACA,oBAAIA,UAAU,mBAGlB,gCACIiU,KAAK7V,MAAM6T,SAASC,WACrB+B,KAAK7V,MAAM6T,SAAS4C,YACpBZ,KAAK7V,MAAMiK,kBACZ4L,KAAKtC,MAAMf,YAMPnQ,YACAmU,YACEX,KAAK7V,MAAM6T,SAASC,UACpB+B,KAAK7V,MAAM6T,SAASsC,mBAEtBN,KAAKtC,MAAMK,aACXjS,QAAU,EACZ,oBACEC,UAAU,iEADZ,SAIE,oBAAIA,UAAU,YAAYC,QAAS,EAAnC,SACE,cAACmJ,EAAA,EAAD,CACEvI,MAAOwI,IAAeyL,MACtBvL,MAAO,uBALNwL,KAAKC,UAUZvU,YACEmU,YACEX,KAAK7V,MAAM6T,SAASC,UACpB+B,KAAK7V,MAAM6T,SAASsC,mBAEtBN,KAAKtC,MAAMK,aACX9R,KAAI,SAACmK,EAAgClK,GAAjC,OACJ,qBACEH,UAAU,iEAEVO,QAAS,WACP,EAAK0Q,cAAa,GAClB,EAAKE,WAAW9G,EAAMtG,KACtB,EAAKwN,eAAelH,EAAMrE,MAC1B,EAAKqL,aACH4D,yBAAe5K,GACX4K,yBAAe5K,GACf,MAEN,EAAKkI,gBACHlI,EAAMzC,eACNyC,EAAMqF,WAdZ,UAkBE,oBAAI1P,UAAU,YAAd,SAA2BG,EAAQ,IACnC,oBAAIH,UAAU,8BAAd,SACGqK,EAAM/B,YAAYC,UAAUnC,MAC3B,IACAiE,EAAM/B,YAAYC,UAAUlC,QAEhC,oBAAIrG,UAAU,8BAAd,SACGqK,EAAM/I,QAET,oBAAItB,UAAU,8BAAd,SACG,EAAK+T,iBAAiB1J,KAEkB,QAA1C,EAAKjM,MAAM6T,SAASsC,mBACnB,oBAAIvU,UAAU,8BAAd,SACGiV,yBAAe5K,GACZT,YAAsBqL,yBAAe5K,IACrC,MAGR,qBAAIrK,UAAU,qCAAd,mBACSqK,EAAM1E,eAEf,oBAAI3F,UAAU,8BAAd,SACE,sBACEA,UAAS,iFACPkV,2BAAiB7K,GAAO8K,SAF5B,SAKGD,2BAAiB7K,GAAOX,WAG7B,oBAAI1J,UAAU,0CAAd,SACE,wBAAQA,UAAU,qDAAlB,sBAhDGG,EAAQkK,EAAMtG,QAjCvB,cAACqR,EAAA,EAAD,CACEpK,KAC4C,QAA1CiJ,KAAK7V,MAAM6T,SAASsC,kBAA8B,EAAI,cAgGrEN,KAAKtC,MAAMT,WACV+C,KAAKtC,MAAMH,aACXyC,KAAK7V,MAAM6T,SAASC,WACpB+B,KAAKtC,MAAMP,SACXiE,uBAAapB,KAAK7V,MAAM6T,SAASC,UAAW+B,KAAKtC,MAAMP,UACvD6C,KAAK7V,MAAM6T,SAAS4C,YAClB,0BAAS7U,UAAU,uBAAnB,UAEE,0BAASA,UAAU,wCAAnB,UACE,wBACEA,UAAS,sFACPiU,KAAKtC,MAAMhN,eACP,qBACA,iBAHG,sCAKT2G,SAAU2I,KAAKtC,MAAMhN,eACrBpE,QAAS,WACP,EAAK0Q,cAAa,GAClB,EAAKzE,cAAa,GAClB,EAAK5H,mBAAkB,GACvB,EAAKE,eAAe,MACpB,EAAKI,eAAe,IACpB,EAAKF,aAAa,OAbtB,SAgBE,cAAC,IAAD,CAAahF,UAAU,cAEzB,qBAAKA,UAAS,6CAAd,8BAMDiU,KAAKtC,MAAM5E,SACV,qBAAK/M,UAAU,OAAf,SACE,cAACyB,EAAA,EAAD,OAIFwS,KAAKtC,MAAM5E,SACX,0BAAS/M,UAAU,cAAnB,UAEGiU,KAAKtC,MAAML,WACV2C,KAAKtC,MAAML,UAAU5G,sBACnB4K,IAAoBC,SAAS7K,qBAC7B,8BACG2K,uBACCpB,KAAK7V,MAAM6T,SAASC,UACpB+B,KAAKtC,MAAMP,SACV9I,YAAYkB,QAAQnK,MACrB,SAACF,GAAD,OACEA,EAAKwM,SACL0J,uBACE,EAAKjX,MAAM6T,SAASC,UACpB,EAAKP,MAAMP,SACVxJ,kBAEL,cAAC,EAAD,CACE+E,QACE0I,uBACEpB,KAAK7V,MAAM6T,SAASC,UACpB+B,KAAKtC,MAAMP,SACV9I,YAAYkB,QAAQnK,MACrB,SAACF,GAAD,OACEA,EAAKwM,SACL0J,uBACE,EAAKjX,MAAM6T,SAASC,UACpB,EAAKP,MAAMP,SACVxJ,kBAGThF,mBAAoBqR,KAAK7V,MAAM6U,gBAC/BzN,UACE6P,uBACEpB,KAAK7V,MAAM6T,SAASC,UACpB+B,KAAKtC,MAAMP,SAGfyD,WAAYZ,KAAK7V,MAAM6T,SAAS4C,WAChCpI,UAAWwH,KAAKtC,MAAMlF,UACtBD,aAAcyH,KAAKzH,aACnB7H,eAAgBsP,KAAKtC,MAAMhN,eAC3BC,kBAAmBqP,KAAKrP,kBACxBC,YAAaoP,KAAKtC,MAAM9M,YACxBC,eAAgBmP,KAAKnP,eACrBG,YAAagP,KAAKtC,MAAM1M,YACxBC,eAAgB+O,KAAK/O,eACrBH,UAAWkP,KAAKtC,MAAM5M,UACtBC,aAAciP,KAAKjP,aACnBwM,YAAayC,KAAKtC,MAAMH,YACxB/J,aAAcwM,KAAK7V,MAAM6T,SAASxK,eAGpC,cAAC2B,EAAA,EAAD,CACEvI,MAAOwI,IAAeC,KACtBC,MAAO,yBAOhB0K,KAAKtC,MAAML,WACV2C,KAAKtC,MAAML,UAAU5G,sBACnB4K,IAAoB3N,YAAY+C,qBAChC,8BACG4F,GACC2D,KAAK7V,MAAM6T,SAAS1B,gBACpB0D,KAAK7V,MAAMiK,gBACXgN,uBACEpB,KAAK7V,MAAM6T,SAASC,UACpB+B,KAAKtC,MAAMP,SACVxJ,gBAEHqM,KAAK7V,MAAMiK,iBACT,cAAC,EAAD,CACEG,gBACE8H,GACE2D,KAAK7V,MAAM6T,SAAS1B,gBACpB0D,KAAK7V,MAAMiK,gBACXgN,uBACEpB,KAAK7V,MAAM6T,SAASC,UACpB+B,KAAKtC,MAAMP,SACVxJ,gBACF4I,YAEL7N,aACE2N,GACE2D,KAAK7V,MAAM6T,SAAS1B,gBACpB0D,KAAK7V,MAAMiK,gBACXgN,uBACEpB,KAAK7V,MAAM6T,SAASC,UACpB+B,KAAKtC,MAAMP,SACVxJ,gBACFa,SAEL7F,mBAAoBqR,KAAK7V,MAAM6U,gBAC/BzN,UACE6P,uBACEpB,KAAK7V,MAAM6T,SAASC,UACpB+B,KAAKtC,MAAMP,SAGfyD,WAAYZ,KAAK7V,MAAM6T,SAAS4C,WAChCxM,gBAAiB4L,KAAK7V,MAAMiK,gBAC5BZ,aAAcwM,KAAK7V,MAAM6T,SAASxK,eAItC,cAAC2B,EAAA,EAAD,CACEvI,MAAOwI,IAAeC,KACtBC,MAAO,4BAOhB0K,KAAKtC,MAAML,WACV2C,KAAKtC,MAAML,UAAU5G,sBACnB4K,IAAoB7C,YAAY/H,qBAChC,8BACGuJ,KAAK7V,MAAM6T,SAASW,WACrBqB,KAAK7V,MAAM4K,SACX2K,YACEM,KAAK7V,MAAM6T,SAASW,UACpByC,uBACEpB,KAAK7V,MAAM6T,SAASC,UACpB+B,KAAKtC,MAAMP,SACVxJ,iBAELgM,YACEK,KAAK7V,MAAM4K,QACX2K,YACEM,KAAK7V,MAAM6T,SAASW,UACpByC,uBACEpB,KAAK7V,MAAM6T,SAASC,UACpB+B,KAAKtC,MAAMP,SACVxJ,gBACF6G,QAEH,cAAC,EAAD,CACEP,cACEyF,YACEM,KAAK7V,MAAM6T,SAASW,UACpByC,uBACEpB,KAAK7V,MAAM6T,SAASC,UACpB+B,KAAKtC,MAAMP,SACVxJ,gBAGPuG,SACEyF,YACEK,KAAK7V,MAAM4K,QACX2K,YACEM,KAAK7V,MAAM6T,SAASW,UACpByC,uBACEpB,KAAK7V,MAAM6T,SAASC,UACpB+B,KAAKtC,MAAMP,SACVxJ,gBACF6G,QAGPjJ,UACE6P,uBACEpB,KAAK7V,MAAM6T,SAASC,UACpB+B,KAAKtC,MAAMP,SAGfyD,WAAYZ,KAAK7V,MAAM6T,SAAS4C,WAChCpN,aAAcwM,KAAK7V,MAAM6T,SAASxK,eAGpC,cAAC2B,EAAA,EAAD,CACEvI,MAAOwI,IAAeC,KACtBC,MAAO,kC,GA/vBfiM,aAuyBPC,GAAanR,aAzBF,SAAC,GAcnB,IAbJC,EAaG,EAbHA,KACAmR,EAYG,EAZHA,gBACAC,EAWG,EAXHA,YACA1D,EAUG,EAVHA,SACA2D,EASG,EATHA,SACAnH,EAQG,EARHA,OASA,MAAO,CACLlK,KAAMA,EACNwO,qBAAsB4C,EAAYE,gBAClCxN,gBAAiBqN,EAAgBrN,gBACjC4J,WACAgB,gBAAiB2C,EACjB5M,QAASyF,EAAOzF,WAI+B,CACjDmJ,iBACAoB,iBACAV,kBACAS,oBACAhB,uBACAU,uBACAE,wBACAC,2BACAC,sBACAC,iBACA3O,qBAXwBJ,CAYvBmM,K,qRCn6BYqF,EAtEqC,SAAC1X,GACnD,IAAM2X,EAA0B,WAM9B,IAAIC,EAA0B,GAC5BC,EAA0B,GAC1BC,EAAwB,GACxBC,EAAuB,GAEzB,IAAK,IAAMC,KAAWhY,EAAMiY,WACa,QAAnCjY,EAAMiY,WAAWD,GAAS7J,OAC5ByJ,EAAc9R,KAAK9F,EAAMiY,WAAWD,GAASE,MAAMC,UACnDN,EAAc/R,KAAK9F,EAAMiY,WAAWD,GAASE,MAAME,UACnDN,EAAYhS,KAAK9F,EAAMiY,WAAWD,GAASE,MAAMG,SACjDN,EAAWjS,KAAK9F,EAAMiY,WAAWD,GAAS7J,KAAKmK,QAAQ,KAAM,OAGjE,MAAO,CACLH,SAAUP,EACVQ,SAAUP,EACVU,OAAQT,EACRU,OAAQT,IAIZ,OACE,0BAASnW,UAAU,2BAAnB,UACE,qBAAKA,UAAU,yCAAf,SACE,sBAAMA,UAAU,gDAAhB,4CAIF,qBAAKA,UAAU,iBAAf,SACE,cAAC6W,EAAA,EAAD,CACED,OAAQb,IAA0Ba,OAClCE,gBAAiBf,IAA0Ba,OAC3CG,YAAY,EACZC,UAAU,eACVC,YAAY,SACZC,OAAQ,CACN,CACEpN,KAAM,gBACNjK,KAAMkW,IAA0BY,QAElC,CACE7M,KAAM,iBACNjK,KAAMkW,IAA0BQ,UAElC,CACEzM,KAAM,iBACNjK,KAAMkW,IAA0BS,WAGpCW,OAAQ,CAAC,UAAW,UAAW,WAC/BC,WAAY,CACVC,aAAc,EACdC,YAAY,EACZC,YAAa,MACbC,YAAa,WAEfC,SAAS,U,iBCqDJC,EA9GiD,SAACtZ,GAC/D,OACE,sBAAK4B,UAAU,wEAAf,UACE,sBAAKA,UAAU,wCAAf,UACE,cAAC,IAAD,CAAiBA,UAAU,2CAC3B,qBAAKA,UAAU,gBAAf,SACE,sBAAMA,UAAU,mCAAhB,SACG5B,EAAMuZ,mBAMb,0BAAS3X,UAAU,gCAAnB,UAEE,kCACG5B,EAAMwZ,sBAAwBxZ,EAAMwZ,qBAAqB7X,OAAS,GACjE,sBAAKC,UAAU,sEAAf,UACG5B,EAAMyZ,cACL,qBACE7X,UAAS,iBACP5B,EAAM2O,SACN3O,EAAM0Z,qBACN1Z,EAAM2Z,kBACN3Z,EAAM0S,cACF,qBACA,iBANG,YAQiB,OAAxB1S,EAAM4Z,cACF,mCACA,4BAVG,kJAYTzX,QAAS,kBACNnC,EAAM2O,UACN3O,EAAM2Z,kBACP3Z,EAAM6Z,iBAAiB,OAhB3B,SAmBE,0BAASjY,UAAU,SAAnB,UACE,cAAC,IAAD,CAAeA,UAAU,8BACzB,4CAIL5B,EAAMwZ,qBAAqB1X,KAAI,SAACgY,EAAW/X,GAAZ,OAC9B,qBAEEH,UAAS,iBACP5B,EAAM2O,SACN3O,EAAM0Z,qBACN1Z,EAAM2Z,iBACF,qBACA,iBALG,YAOP3Z,EAAM4Z,eACNE,EAAUpP,yBACR1K,EAAM4Z,cAAclP,uBAClB,mCACA,4BAXG,kJAaTvI,QAAS,kBACNnC,EAAM2O,UACN3O,EAAM0Z,sBACN1Z,EAAM2Z,kBACP3Z,EAAM6Z,iBAAiBC,IAnB3B,SAsBE,sBAAKlY,UAAU,SAAf,UACE,cAAC,IAAD,CAAeA,UAAU,8BACzB,+BAAOkY,EAAUnP,+BAvBdmP,EAAUpP,uBAAyB3I,WA+BlD,8BACE,wBACEH,UAAS,uFACP5B,EAAM0Z,qBAAuB,eAE/BvO,MAAOnL,EAAM4S,WACb1F,SACElN,EAAM2O,SACN3O,EAAM0Z,qBACN1Z,EAAM2Z,kBACN3Z,EAAM0S,cAER3F,SAAU,SAACC,GACThN,EAAM2S,cAAc3F,EAAEC,OAAO9B,OAC7BnL,EAAMyV,eAAezI,EAAEC,OAAO9B,QAblC,SAgBGnL,EAAM2U,qBAAqB7S,KAAI,SAACiY,EAAShZ,GAAV,OAC9B,wBAEEoK,MAAO4O,EAAQ/F,gBAFjB,SAIG+F,EAAQC,mBAHJD,EAAQ/F,gBAAkBjT,iBCpCzCkZ,E,kDAIJ,WAAYja,GAAmC,IAAD,8BAC5C,cAAMA,IAmBRka,qBAAuB,SAAC/O,GACtB,EAAKmH,SAAS,CAAE6H,kBAAmBhP,KArBS,EAwB9CyD,WAAa,SAACzD,GACZ,EAAKmH,SAAS,CAAE3D,QAASxD,KAzBmB,EA4B9CoL,kBAAoB,SAACpL,GACnB,EAAKmH,SAAS,CAAEgE,eAAgBnL,KA7BY,EAgC9CsH,iBAAmB,SAACtH,GAClB,EAAKmH,SAAS,CAAEI,cAAevH,KAjCa,EAoC9CiP,mBAAqB,SAACjP,GACpB,EAAKmH,SAAS,CAAE+H,gBAAiBlP,KArCW,EAwC9CmP,uBAAyB,SAACnP,GACxB,EAAKmH,SAAS,CAAEoH,oBAAqBvO,KAzCO,EA4C9CoP,iBAAmB,SAACpP,GAClB,EAAKmH,SAAS,CAAE0D,cAAe7K,KA7Ca,EA+C9CqP,oBAAsB,SAACrP,GACrB,EAAKmH,SAAS,CAAEmI,iBAAkBtP,KAhDU,EAmD9CuP,yBAA2B,SAACvP,GAC1B,EAAKmH,SAAS,CAAEqI,sBAAuBxP,KApDK,EAuD9CyP,iBAAmB,SAACzP,GAClB,EAAKmH,SAAS,CAAEuI,cAAe1P,KAxDa,EA2D9C0O,iBAAmB,SAAC1O,GAClB,EAAKmH,SAAS,CAAEsH,cAAezO,KA5Da,EA+D9C2P,aAAe,SAAC3P,GACd,EAAKmH,SAAS,CAAEyI,UAAW5P,KAhEiB,EAmE9CwH,cAAgB,SAACxH,GACf,EAAKmH,SAAS,CAAEM,WAAYzH,KApEgB,EAuE9CuJ,kBAAoB,WAkDlB,GA/CmD,OAAjD,EAAK1U,MAAMgb,aAAaxB,sBACgC,IAAxD,EAAKxZ,MAAMgb,aAAaxB,qBAAqB7X,OAE7C,EAAK3B,MAAMib,wBAAwB,EAAKf,sBAExC,EAAKA,sBAAqB,GAMU,OAApC,EAAKla,MAAM2U,sBACgC,IAA3C,EAAK3U,MAAM2U,qBAAqBhT,OAEhC,EAAK3B,MAAM4U,oBACT,SAACtJ,EAAiBpE,EAAazF,GAC7B,IAAK6J,IACH,EAAKiL,mBAAkB,GACvB,EAAK3H,YAAW,GACZ1H,EAAIvF,QACN,EAAK3B,MAAMsG,eAAe,CACxBpD,MAAOgE,EACPzE,MAAOqG,IAAgBI,SAGvBzH,GAAQA,EAAKE,OAAS,GAAG,CAC3B,IAAI6R,EAAc/R,EAAKR,MAAK,SAACF,GAAD,OAA6B,IAAnBA,EAAK0S,aAC3C,EAAKd,cACHa,EACIA,EAAYQ,gBACZvS,EAAKA,EAAKE,OAAS,GAAGqS,iBAE5B,EAAKyB,eACHjC,EACIA,EAAYQ,gBACZvS,EAAKA,EAAKE,OAAS,GAAGqS,qBAM3B,EAAKT,MAAM+C,iBACpB,EAAK1H,YAAW,GAChB,EAAK2H,mBAAkB,IAKvB3V,YAAgB,EAAK2S,MAAMX,cAC1B,EAAKW,MAAM+C,gBACZ,EAAKtW,MAAM2U,sBACX,EAAK3U,MAAM2U,qBAAqBhT,OAAS,EACzC,CACA,IAAI6R,EAAc,EAAKxT,MAAM2U,qBAAqB1T,MAChD,SAACF,GAAD,OAA6B,IAAnBA,EAAK0S,aAEjB,EAAKd,cACHa,EACIA,EAAYQ,gBACZ,EAAKhU,MAAM2U,qBACT,EAAK3U,MAAM2U,qBAAqBhT,OAAS,GACzCqS,iBAER,EAAKyB,eACHjC,EACIA,EAAYQ,gBACZ,EAAKhU,MAAM2U,qBACT,EAAK3U,MAAM2U,qBAAqBhT,OAAS,GACzCqS,kBAMP,EAAKhU,MAAM6U,gBAAgB5P,kBAC5B,EAAKsO,MAAMkH,kBAEX,EAAKza,MAAM8U,sBACX,EAAK0F,qBAAoB,IAChB,EAAKjH,MAAMkH,kBACpB,EAAKD,qBAAoB,IAIxB,EAAKxa,MAAM6U,gBAAgBxP,qBAC5B,EAAKkO,MAAMoH,uBAEX,EAAK3a,MAAM+U,yBACX,EAAK2F,0BAAyB,IACrB,EAAKnH,MAAMoH,uBACpB,EAAKD,0BAAyB,IAI7B,EAAK1a,MAAM6U,gBAAgBnP,gBAC5B,EAAK6N,MAAMsH,eAEX,EAAK7a,MAAMgV,oBACX,EAAK4F,kBAAiB,IACb,EAAKrH,MAAMsH,eACpB,EAAKD,kBAAiB,GAMW,OAA/B,EAAK5a,MAAMiK,gBACb,EAAKjK,MAAMiV,cAAa,SAAC3J,EAAiBpE,GACxC,EAAKkT,mBAAmB9O,GACxB9C,QAAQC,IAAI,CAAE6C,OAAQA,EAAQpE,IAAKA,IAC/BA,EAAIvF,QACN,EAAK3B,MAAMsG,eAAe,CACxBpD,MAAOgE,EACPzE,MAAOqG,IAAgBI,YAIpB,EAAKqK,MAAM8G,iBACpB,EAAKD,oBAAmB,IAhMkB,EAoM9C3E,eAAiB,SAACC,GAChB,EAAKjD,kBAAiB,GACtB,EAAKzS,MAAM+T,aAAa,EAAG2B,GAAW,SAACpK,EAAiBpE,IACrDoE,GAAU,EAAKmH,kBAAiB,IAClB,IAAXnH,GAAoBpE,EAAIvF,QAC1B,EAAK3B,MAAMsG,eAAe,CACxBpD,MAAOgE,EACPzE,MAAOqG,IAAgBI,YAK7B,EAAKlJ,MAAMkU,mBAAmBwB,GAAW,SAACpK,EAAiBpE,IACxDoE,GAAU,EAAKgP,uBAAuBhP,IACxB,IAAXA,GAAoBpE,EAAIvF,QAC1B,EAAK3B,MAAMsG,eAAe,CACxBpD,MAAOgE,EACPzE,MAAOqG,IAAgBI,aArNe,EA2N9CgS,kBAAoB,SAAC9T,GACnB,GAAIA,EAAUkK,WAAaC,IAAcC,oBACvC,OAAO,KAET,GAAIpK,EAAUkK,WAAaC,IAAchI,aACnC,EAAKvJ,MAAM6T,SAAS1B,gBAAiB,CACvC,IAAI/H,EAAkB,EAAKpK,MAAM6T,SAAS1B,gBAAgBlR,MACxD,SAACF,GAAD,OAAUA,EAAK4E,MAAQyB,EAAUoC,kBAEnC,GACEY,GACA,EAAKpK,MAAM6T,SAAS1B,iBACpB,EAAKnS,MAAMiK,gBACX,CAEA,IAAI1F,EAAe,EAAKvE,MAAMiK,gBAAgBhJ,MAC5C,SAACF,GAAD,OAAUA,EAAKiJ,cAAgBI,EAAiBC,YAElD,GAAI9F,EACF,OAAOA,EAAamG,uBAAuBA,wBAMnD,OAAO,MApPqC,EAuP9C0K,kBAAoB,SAAChO,GACnB,IAAIiK,EAAiBjK,EAAUoC,eAe/B,GAdIpC,EAAUkK,WAAaC,IAAcC,sBACvCH,EACEjK,EAAU8C,YAAYkB,QAAQtK,QAC5B,SAACC,GAAD,MAAqC,YAA3BA,EAAKC,qBACfW,OAAS,EACP2M,iCACE,EAAKtO,MAAM6U,gBACXzN,EAAU8C,YAAYkB,QAAQtK,QAC5B,SAACC,GAAD,MAAqC,YAA3BA,EAAKC,qBAEjBoG,GAEF,sBAEJA,EAAUkK,WAAaC,IAAchI,aACnC,EAAKvJ,MAAM6T,SAAS1B,gBAAiB,CACvC,IAAI/H,EAAkB,EAAKpK,MAAM6T,SAAS1B,gBAAgBlR,MACxD,SAACF,GAAD,OAAUA,EAAK4E,MAAQyB,EAAUoC,kBAEnC,GACEY,GACA,EAAKpK,MAAM6T,SAAS1B,iBACpB,EAAKnS,MAAMiK,gBACX,CACA,IAAI1F,EAAe,EAAKvE,MAAMiK,gBAAgBhJ,MAC5C,SAACF,GAAD,OAAUA,EAAKiJ,cAAgBI,EAAiBC,YAGhDgH,EADE9M,EACOA,EAAa+F,eAEb,yBAMjB,OAAO+G,GA7RqC,EAgS9C4G,WAAa,SACX5Q,GAWA,IAAI8T,EASE,CACJ,CACEjY,MAAO,kBACPgV,MAAO,CACLkD,IAAK/T,EAAO1F,OACZwW,SAAU9Q,EAAOvG,QACf,SAACC,GAAD,OAAUA,EAAKsa,WAAa1S,IAAoBC,YAChDjH,OACFyW,SAAU/Q,EAAOvG,QACf,SAACC,GAAD,OAAUA,EAAKsa,WAAa1S,IAAoB0D,YAChD1K,OACF0W,QAAShR,EAAOvG,QAAO,SAACC,GAAD,MAA4B,YAAlBA,EAAKsa,YAAwB1Z,QAEhEwM,KAAM,QA0BV,OAtBAmB,OAAOC,OAAOgC,KAAe+J,SAAQ,SAACC,GACpCJ,EAAOrV,KAAK,CACV5C,MAAOsI,YAAsBgQ,0BAAgBD,IAC7CrD,MAAO,CACLkD,IAAK/T,EAAOvG,QAAO,SAAC2a,GAAD,OAASA,EAAIC,aAAeH,KAAU5Z,OACzDwW,SAAU9Q,EAAOvG,QACf,SAAC2a,GAAD,OACEA,EAAIC,aAAeH,GACnBE,EAAIJ,WAAa1S,IAAoBC,YACvCjH,OACFyW,SAAU/Q,EAAOvG,QACf,SAAC2a,GAAD,OACEA,EAAIC,aAAeH,GACnBE,EAAIJ,WAAa1S,IAAoB0D,YACvC1K,OACF0W,QAAShR,EAAOvG,QACd,SAAC2a,GAAD,OAASA,EAAIC,aAAeH,GAA6B,YAAjBE,EAAIJ,YAC5C1Z,QAEJwM,KAAMoN,OAGHJ,GA5VqC,EA+V9CQ,aAAe,SACb7H,GAEA,GAAkB,OAAdA,GAAsBA,EAAUnS,QAAU,EAAG,MAAO,GACxD,IAAIia,EAAoC,GACpCC,EAAY,EAEhB,IAAK,IAAMC,KAAOhI,EAChB,GAAIxE,OAAOyM,UAAUC,eAAeC,KAAKnI,EAAWgI,GAElD,IAAK,IAAMI,KAAYpI,EAAUgI,GAAKzU,OACpC,GACEiI,OAAOyM,UAAUC,eAAeC,KAC9BnI,EAAUgI,GAAKzU,OACf6U,GAEF,CACA,IAAMjV,EAAU6M,EAAUgI,GAAKzU,OAAO6U,GAClCC,EAAmC,CACrCC,SAAUP,EACVQ,MACEvI,EAAUgI,GAAK5R,YAAYC,UAAUnC,MACrC,IACA8L,EAAUgI,GAAK5R,YAAYC,UAAUlC,MACvC+I,OAAQ8C,EAAUgI,GAAK5R,YAAYC,UAAU+G,IACzC,OACA,SACJoL,YAAaxI,EAAUgI,GAAK5R,YAAYqS,KACxCC,MAAO1I,EAAUgI,GAAK5R,YAAY+G,aAClC9I,MAAO2L,EAAUgI,GAAK5R,YAAY/B,MAClCuT,WAAY5H,EAAUgI,GAAKxK,SAC3B/J,YAAaN,EAAQK,MACrBmV,mBAAoB,EAAKvB,kBAAkBpH,EAAUgI,IACrDY,cAAe,EAAKnJ,MAAMX,WAC1B9E,KAAMnC,YAAK1E,EAAQ2E,WACnByP,SAAUpU,EAAQa,sBACdb,EAAQa,sBACR,UACJ6U,YAAa,EAAKvH,kBAAkBtB,EAAUgI,KAEhDF,EAAS9V,KAAKqW,GACdN,IAKR,OAAOD,GA7YqC,EAgZ9CgB,oBAAsB,SACpBC,GAsBA,OAAOA,EAAQ5b,MAAK,SAACF,GAAD,OAAUA,EAAKoN,OAAS,EAAKoF,MAAMwH,cApavD,EAAKxH,MAAQ,CACXX,WAAY,GACZjE,SAAS,EACT2H,gBAAgB,EAChB5D,eAAe,EACf2H,iBAAiB,EACjBX,qBAAqB,EACrB1D,eAAe,EACfyE,kBAAkB,EAClBN,mBAAmB,EACnBQ,uBAAuB,EACvBE,eAAe,EACfjB,cAAe,KACfmB,UAAW,OAhB+B,E,0CA0a9C,WAAU,IAAD,OACP,OACElF,KAAK7V,MAAM2U,sBACgC,IAA3CkB,KAAK7V,MAAM2U,qBAAqBhT,OAEzB,cAACmb,EAAA,EAAD,IAIPjH,KAAKtC,MAAM5E,SACyB,OAApCkH,KAAK7V,MAAM2U,sBACuB,OAAlCkB,KAAK7V,MAAM6T,SAASC,UAGlB,qBAAKlS,UAAU,kEAAf,6BAOF,gCAEE,cAAC,EAAD,CACE4X,qBAAsB3D,KAAK7V,MAAMgb,aAAaxB,qBAC9C7K,QAASkH,KAAKtC,MAAM5E,QACpB+K,oBAAqB7D,KAAKtC,MAAMmG,oBAChCC,iBAAkB9D,KAAKtC,MAAM4G,kBAC7BP,cAAe/D,KAAKtC,MAAMqG,cAC1BC,iBAAkBhE,KAAKgE,iBACvBjH,WAAYiD,KAAKtC,MAAMX,WACvBD,cAAekD,KAAKlD,cACpBgC,qBAAsBkB,KAAK7V,MAAM2U,qBACjC4E,YAAa,kBACbE,cAAc,EACd/G,cAAemD,KAAKtC,MAAMb,cAC1B+C,eAAgBI,KAAKJ,iBAOvB,0BAAS7T,UAAU,OAAnB,UACE,sBAAKA,UAAU,uCAAf,wBAEE,wBACEA,UAAS,0FACTuJ,MAAO0K,KAAKtC,MAAMwH,UAClBhO,SAAU,SAACC,GAAD,OACR,EAAK8N,aAAa9N,EAAEC,OAAO9B,QAJ/B,SAOG0K,KAAKoC,WACJpC,KAAK8F,aAAa9F,KAAK7V,MAAM6T,SAASC,YACtChS,KAAI,SAACf,EAAMgB,GAAP,OACJ,wBAAgCoJ,MAAOpK,EAAKoN,KAA5C,SACG3C,YAAsBzK,EAAKmC,MAAMoJ,sBADvBvL,EAAKoN,KAAOpM,WAM9B8T,KAAK+G,oBACJ/G,KAAKoC,WAAWpC,KAAK8F,aAAa9F,KAAK7V,MAAM6T,SAASC,cAEtD,cAACiJ,EAAA,EAAD,CACEpE,WAAY,CACV,CACEzV,MAAO,cACP8Z,KAAMC,IACNC,UAAW,OACXhF,MAAOrC,KAAK+G,oBACV/G,KAAKoC,WACHpC,KAAK8F,aAAa9F,KAAK7V,MAAM6T,SAASC,aAEvCoE,MAAMkD,KAEX,CACElY,MAAO,iBACP8Z,KAAMC,IACNC,UAAW,QACXhF,MAAOrC,KAAK+G,oBACV/G,KAAKoC,WACHpC,KAAK8F,aAAa9F,KAAK7V,MAAM6T,SAASC,aAEvCoE,MAAMC,UAEX,CACEjV,MAAO,iBACP8Z,KAAMC,IACNC,UAAW,SACXhF,MAAOrC,KAAK+G,oBACV/G,KAAKoC,WACHpC,KAAK8F,aAAa9F,KAAK7V,MAAM6T,SAASC,aAEvCoE,MAAME,UAEX,CACElV,MAAO,gBACP8Z,KAAMC,IACNC,UAAW,OACXhF,MAAOrC,KAAK+G,oBACV/G,KAAKoC,WACHpC,KAAK8F,aAAa9F,KAAK7V,MAAM6T,SAASC,aAEvCoE,MAAMG,UAGb8E,YAAa,EA3Cf,SA6CE,qBAAKvb,UAAU,sBAAf,SACE,cAACwb,EAAA,EAAD,CACEC,QAAS,CACP7E,OAAQ,CAAC,WAAY,WAAY,WACjC8E,OAAQ,CACNC,MAAM,EACNlT,SAAU,SACVmT,gBAAiB,SACjBC,SAAU,OACVC,WAAY,CACVxE,WAAY,EACZyE,SAAU,IAGdC,YAAa,CACXC,IAAK,CACHC,MAAO,CACLtF,OAAQ,CACN+E,MAAM,EACN7R,KAAM,CACJ6R,MAAM,EACNE,SAAU,OAEVM,MAAO,UACPC,SAAU,IAEZ7S,MAAO,CACLoS,MAAM,EACNE,SAAU,OACVQ,WAAY,+BACZF,MAAO,UACPC,QAAS,GACTE,UAAW,SAAUC,GACnB,OAAOA,IAGXC,MAAO,CACLb,MAAM,EACNc,MAAO,QACPN,MAAO,UACPG,UAAW,SAAUI,GACnB,OAAOA,EAAEC,QAAQC,aAAaC,QAC5B,SAACzX,EAAW0X,GACV,OAAO1X,EAAI0X,IAEb,SAQd3F,OAAQ,CAAC,UAAW,UAAW,YAEjCD,OAAQ,CACNjD,KAAK+G,oBACH/G,KAAKoC,WACHpC,KAAK8F,aAAa9F,KAAK7V,MAAM6T,SAASC,aAEvCoE,MAAMC,SACTtC,KAAK+G,oBACH/G,KAAKoC,WACHpC,KAAK8F,aAAa9F,KAAK7V,MAAM6T,SAASC,aAEvCoE,MAAME,SACTvC,KAAK+G,oBACH/G,KAAKoC,WACHpC,KAAK8F,aAAa9F,KAAK7V,MAAM6T,SAASC,aAEvCoE,MAAMG,SAEXsG,MAAO,aAWjB,cAAC,EAAD,CACE1G,WAAYpC,KAAKoC,WACfpC,KAAK8F,aAAa9F,KAAK7V,MAAM6T,SAASC,qB,GAjnBpBsD,aAmpBjBwH,EAAiB1Y,aAzBN,SAAC,GAcnB,IAbJC,EAaG,EAbHA,KACAmR,EAYG,EAZHA,gBACAC,EAWG,EAXHA,YACA1D,EAUG,EAVHA,SACA2D,EASG,EATHA,SACAwD,EAQG,EARHA,aASA,MAAO,CACL7U,KAAMA,EACNwO,qBAAsB4C,EAAYE,gBAClCxN,gBAAiBqN,EAAgBrN,gBACjC4J,WACAgB,gBAAiB2C,EACjBwD,kBAImD,CACrDjH,kBACA8K,sBACA3K,wBACAU,uBACAqG,6BACAnG,wBACAC,2BACAC,sBACA8J,0BACA7J,iBACA3O,qBAX4BJ,CAY3B+T,I,iCCnuBH,gRAAO,IAyBM8E,EAAqC,CAChD,CACEC,UAAW,cACXC,aAAc,iBACdC,YAAa,SACbC,kBAAmB,GACnBC,gBAAiB,IAEnB,CACEJ,UAAW,cACXC,aAAc,iBACdC,YAAa,cAEf,CACEF,UAAW,cACXC,aAAc,kBACdC,YAAa,SACbC,kBAAmB,GACnBC,gBAAiB,IAEnB,CACEJ,UAAW,cACXC,aAAc,iBACdC,YAAa,cACbC,kBAAmB,GACnBC,gBAAiB,KAoZRxe,EAAkB,SAACye,GAC9B,OAAe,OAARA,GAAsC,OAAtBA,EAAIC,MAAM,SAWtBC,EAAc,SACzBC,EACAC,GAEA,OAAOD,EAAM1e,QAAO,SAAC4e,GAAD,OAAUA,EAAKC,sBAAwBF,KAAQ,IAGxDG,EAAmB,SAC9BC,EACAC,GAEA,OAAOD,EAAW5e,MAAK,SAACF,GAAD,OAAUA,EAAK2J,yBAA2BoV,MAmBtD/V,EAAkB,SAC7BgW,EACA/V,GAEA,OAAO+V,EAAU9e,MAAK,SAACoJ,GAAD,OAAcA,EAASL,cAAgBA,MAoElDgW,EAAa,SAAC7U,GACzB,IAAI8U,EAAM9U,EAAQwL,KAAKuJ,MAAM/U,GAE7B,OAAQ,KADRA,GAAgB8U,IACKE,OAAO,GAAKF,EAAIG,WAAWC,OAAO,IAG5CC,EAAa,SACxBnV,GAEY,IADZ5J,EACW,uDADO,EAEdgf,EAAS,IAAIC,MAAMjf,EAAU,GAAGkf,KAAK,KACzC,OAAQF,EAASpV,GAAOgV,OAAO5e,IAMpBiK,EAAwB,SAACL,GACpC,OAAOA,EAAMuV,OAAO,GAAGC,cAAgBxV,EAAMgV,MAAM,K,qTC9bzCS,E,iDA9INC,EAAQC,MAASC,GAAGC,KAEbC,EAAkB,SAC7BC,EACAC,GAEA,IAAIhT,EAAwC,KAC5C,GAAuB,OAAnB+S,EAAyB,CAC3B,IAAIE,EAAQF,EAAejgB,MAAK,SAACwa,GAAD,OAASA,EAAI5X,KAAOsd,KACpD,QAAcE,IAAVD,EAAqB,CACvB,IAAIE,EAAaC,IAAqBtgB,MACpC,SAACwa,GAAD,OAAS2F,GAAS3F,EAAIK,MAAQsF,EAAMna,gBAEnBoa,IAAfC,IACFnT,EAAOmT,EAAWxF,MAIxB,OAAO3N,GAGIqT,EAAiB,SAC5B5W,EACA6W,GAEA,GAAgB,OAAZA,EAAkB,CACpB,IADoB,EAChBC,EAAc,EADE,cAED9W,GAFC,yBAEXyF,EAFW,QAGdsR,EAAOF,EAAQxgB,MAAK,SAACwa,GAAD,OAASA,EAAIpL,SAAWA,EAAOtF,kBAC1CsW,IAATM,IACFD,GAAYC,EAAKlR,cAHrB,2BAA6B,IAFT,8BAQpB,OAAOiR,EAAIE,QAAQ,GAEnB,MAAO,WAIEC,EAAkB,SAC7BjX,EACA6W,GAEA,IAAIlZ,GAAe,EACnB,GAAgB,OAAZkZ,EAAkB,CAAC,IAAD,gBACD7W,GADC,yBACXyF,EADW,aAGLgR,IADFI,EAAQxgB,MAAK,SAACwa,GAAD,OAASA,EAAIpL,SAAWA,EAAOtF,eAErDxC,GAAM,IAHV,2BAA6B,IADT,+BAQtB,OAAOA,GAGIuZ,EAA4B,SACvCC,GAEA,IAAIC,EAAuB,GAC3B,QACcX,IAAZU,GACY,KAAZA,QACmBV,IAAnBU,EAAQpgB,QACW,IAAnBogB,EAAQpgB,OAER,MAAO,CACL2J,QAAQ,EACRpE,IAAI,yBAGR,GAAI6a,EAAQpgB,OAAS,EACnB,MAAO,CACL2J,QAAQ,EACRpE,IAAI,iDAhB6B,oBAmBtB6a,GAnBsB,IAmBrC,2BAAwB,CAAC,IAAhBE,EAAe,QACtBD,EAAU,sBAAOA,GAAP,CAAmBC,KApBM,8BAsBrC,GAAI,MAAAD,EAAW,GACb,MAAO,CACL1W,QAAQ,EACRpE,IAAI,2CAGR,GAAI8a,EAAWlhB,QAAO,SAAC2a,GAAD,MAAY,MAAHA,KAAa9Z,OAAS,EACnD,MAAO,CACL2J,QAAQ,EACRpE,IAAI,4CAGR,GAAI8a,EAAWlhB,QAAO,SAAC2a,GAAD,MAAY,MAAHA,KAAa9Z,OAAS,EACnD,MAAO,CACL2J,QAAQ,EACRpE,IAAI,2DAAD,OACD8a,EAAWlhB,QAAO,SAAC2a,GAAD,MAAY,MAAHA,KAAa9Z,OADvC,MAKP,GACE,MAAAqgB,EAAWA,EAAWrgB,OAAS,IACoB,IAAnDqgB,EAAWlhB,QAAO,SAAC2a,GAAD,MAAY,MAAHA,KAAa9Z,OACxC,CAEA,IADA,IAAIugB,EAAwB,GACnB1S,EAAI,EAAGA,EAAIwS,EAAWrgB,OAAQ6N,IACjC,MAAAwS,EAAWxS,IAAoB,IAANA,IAC3B0S,EAAgBF,EAAWxS,EAAI,IAGnC,GAAiB,MAAb0S,EACF,MAAO,CACL5W,QAAQ,EACRpE,IAAI,yEAGR,GAAI,MAAA8a,EAAWA,EAAWrgB,OAAS,GACjC,MAAO,CACL2J,QAAQ,EACRpE,IAAI,gDAIV,MAAO,CACLoE,QAAQ,EACRpE,IAAI,qBAID,SAASib,EAAwBC,GACtC,IAAIC,EAAiBD,EAAaE,MAAM,KACpCC,EAAaF,EAAe,GAAGC,MAAM,KACrCE,EAAaH,EAAe,GAAGC,MAAM,KACzC,OAAO,IAAIG,KACTC,SAASH,EAAW,IACpBG,SAASH,EAAW,IAAM,EAC1BG,SAASH,EAAW,IACpBG,SAASF,EAAW,IACpBE,SAASF,EAAW,IACpBE,SAASF,EAAW,M,SAIZ5B,K,kBAAAA,E,gBAAAA,E,mBAAAA,M,KAML,IAAM+B,EAAmB,SAC9B7R,EACA8R,EACAC,GAEA,IAAIvX,EAAyBsV,EAAekC,QAEtCC,EAAc,IAAIN,KAAK5B,EAAMT,YAC7B4C,EAAW,IAAIP,KAAK3R,GAGpBmS,EAAYd,EAChBa,EAASE,UACP,KACCF,EAASG,WAAa,GACvB,IACAH,EAASI,cACT,IACAR,EACA,MAEES,EAAUlB,EACda,EAASE,UACP,KACCF,EAASG,WAAa,GACvB,IACAH,EAASI,cACT,IACAP,EACA,MAwCJ,OAnCEG,EAASE,UAAYH,EAAMG,WAC3BF,EAASG,WAAaJ,EAAMI,YAC5BH,EAASI,cAAgBL,EAAMK,iBAE/B9X,EAASsV,EAAe0C,UAIxBN,EAASE,UAAYH,EAAMG,WAC3BF,EAASG,WAAaJ,EAAMI,YAC5BH,EAASI,cAAgBL,EAAMK,iBAE/B9X,EAASsV,EAAekC,SAIxBE,EAASE,YAAcH,EAAMG,WAC7BF,EAASG,aAAeJ,EAAMI,YAC9BH,EAASI,gBAAkBL,EAAMK,gBAG/B9X,EADE2X,EAAUM,UAAYR,EAAMQ,UACrB3C,EAAe0C,QAExBL,EAAUM,WAAaR,EAAMQ,WAC7BF,EAAQE,WAAaR,EAAMQ,UAElB3C,EAAe4C,OAEf5C,EAAekC,SAOrBxX,GAGImY,EAAsB,SACjCC,EACAC,EACAC,EACAC,EAKAhc,EACAic,EACAC,EACAC,EASAC,GAEA,GAAwB,OAApBP,GAAiD,OAArBC,EAA2B,CACzDE,EACEH,EAAgB1P,gBAChBnM,EACAic,GAJuD,oBAMtCH,EAAiB/Y,SANqB,yBAMhDyF,EANgD,QAUvD,QAAiBgR,IAHFuC,EAAcM,gBAAgBjjB,MAC3C,SAACwa,GAAD,OAASA,EAAIpL,SAAWA,EAAOtF,aAEL,CAC1B,IAAIoZ,EAAS,OAAGJ,QAAH,IAAGA,OAAH,EAAGA,EAAe9iB,MAC7B,SAACwa,GAAD,OAASA,EAAI1Q,YAAcsF,EAAOtF,kBAElBsW,IAAd8C,GACFH,EACEN,EAAgB1P,gBAChB3D,EAAOtF,UACPoZ,EAAUjF,YACViF,EAAUA,UACVA,EAAUC,QACVT,EAAiB3Z,YACjBia,KAhBR,2BAA8C,IANW,iCAiDhDI,EAIP,CACJ,CACEC,KAAM,sBACNhZ,QAAQ,EACRiZ,QAAS,sBAEX,CACED,KAAM,eACNhZ,QAAQ,EACRiZ,QAAS,eAEX,CACED,KAAM,gBACNhZ,QAAQ,EACRiZ,QAAS,gBAEX,CACED,KAAM,+BACNhZ,QAAQ,EACRiZ,QAAS,qCAEX,CACED,KAAM,yBACNhZ,QAAQ,EACRiZ,QAAS,6B,4ECrBEpjB,IA9MqB,SAACnB,GACnC,IAGIwkB,EAAoBC,EAFlBC,EACH1kB,EAAM0kB,SAA6B,YAAlB1kB,EAAM0kB,QAAsC1kB,EAAM0kB,QAxGtD,WAKhB,IALiD,IAAhC/iB,EAA+B,uDAAd,EAC9B0P,EAAiB,GACjB2Q,EACF,iEACE2C,EAAmB3C,EAAWrgB,OACzB6N,EAAY,EAAGA,EAAI7N,EAAQ6N,IAClC6B,GAAU2Q,EAAWtB,OAAO/J,KAAKuJ,MAAMvJ,KAAKC,SAAW+N,IAEzD,OAAOtT,EAgG2CuT,GAElD,EAAoC3kB,mBAAiB,GAArD,mBAAO4kB,EAAP,KAAmBC,EAAnB,KACA,EAAoC7kB,mBAAiB,GAArD,mBAAO8kB,EAAP,KAAmBC,EAAnB,KACA,EAAsC/kB,mBAAiB,GAAvD,mBAAOglB,EAAP,KAAoBC,EAApB,KACA,EAA0BjlB,qBAA1B,mBAAOklB,EAAP,KAAcC,EAAd,KACA,EAAgCnlB,mBAAiB,IAAjD,mBAAOolB,EAAP,KAAiBC,EAAjB,KACA,EAAoCrlB,mBAAiB,GAArD,mBAAOslB,EAAP,KAAmBC,EAAnB,KACA,EAAgCvlB,mBAAiB,GAAjD,mBAAOwlB,EAAP,KAAiBC,EAAjB,KAEAxW,qBAAU,WACRlP,EAAMoC,YAAcujB,OAGtB,IAyBMA,EAAkB,WACtBnB,EAAQhN,SAASoO,eAAelB,GAChCD,EAAKD,EAAMqB,qBAAqB,MAChCf,EAAcL,EAAG9iB,QACjBqjB,EAAcrO,KAAKmP,KAAKjB,EAAaQ,IAGrCG,GAAeP,EAAc,GAAKI,GAClCK,EAAY/O,KAAKoP,IAAIR,EAAaF,EAAW,EAAGR,EAAa,IAM7D,IAAImB,EAASxF,MAAMyF,KAAKzF,MAAMuE,EAAa,EAvD3B,GAuD0CmB,QAAQpkB,KAChE,SAAC0N,GAAD,OAxDc,EAwDKA,KAEhB2V,GAASa,EAAOrkB,SAAWwjB,EAAMxjB,QACpCyjB,EAASY,GAGX,IAAK,IAAIxW,EAAY,EAAGA,EAAIiV,EAAG9iB,OAAQ6N,IAEnCiV,EAAGjV,GAAG3C,MAAMsZ,QADV3W,GAAK+V,GAAc/V,GAAKiW,EACJ,GAEA,QAK5B,OACE,sBAAK7jB,UAAS,UAAK5B,EAAMomB,UAAX,oBAAd,UAEGpmB,EAAMqC,QACL,qBAAKT,UAAS,UAAK5B,EAAMqmB,SAAX,gBAAd,SACGrmB,EAAMqC,QACL,sBAAKT,UAAU,yEAAf,UACE,cAAC,KAAD,CAAUA,UAAU,uCACpB,uBACEuM,KAAK,SACLxB,YAAY,SACZI,SAAU,SAACC,GAAD,OAlEJ,SAClBvL,EACA6kB,GAEA,IAAIxlB,EAAQ2jB,EAAI8B,EAAI/kB,EAAcoL,EAKlC,IAJmB,UAAf0Z,GAAmC,QAAT7kB,IAAgBA,EAAO,IACrDX,EAASW,EAAK+kB,cAEd/B,GADAD,EAAQhN,SAASoO,eAAelB,IACrBmB,qBAAqB,MAC3BrkB,EAAO,EAAGA,EAAOijB,EAAG9iB,OAAQH,IAC/B,IAAKoL,EAAO,EAAGA,EAAO5M,EAAMoB,QAAQO,OAAQiL,IAE1C,GADA2Z,EAAK9B,EAAGjjB,GAAMqkB,qBAAqB,MAAMjZ,GACjC,CAEN,IADW2Z,EAAGE,aAAeF,EAAGG,WACnBF,cAAcG,QAAQ7lB,IAAW,EAAG,CAC/C2jB,EAAGjjB,GAAMqL,MAAMsZ,QAAU,GACzB,MAEA1B,EAAGjjB,GAAMqL,MAAMsZ,QAAU,QAgDJS,CAAY5Z,EAAEC,OAAO9B,QACtCvJ,UAAU,mEACVsL,SAAUlN,EAAM2O,UAGjB3O,EAAMoC,YACL,qBAAKR,UAAU,SAAf,SACE,yBACEA,UAAU,qDACVmL,SAAU,SAACC,GAAD,OAAOsY,EAAYnU,OAAOnE,EAAEC,OAAO9B,SAC7C+B,SAAUlN,EAAM2O,QAHlB,UAKE,wBAAQxD,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,MAAd,2BAQd,sBAAKvJ,UAAU,yBAAf,UACE,wBACEA,UACE5B,EAAM6mB,WACF7mB,EAAM6mB,WADV,wBAGM7mB,EAAM8mB,SAAW,gBAHvB,2BAMFjjB,GAAI6gB,EARN,WAUI1kB,EAAM+mB,aACN,uBAAOnlB,UAAU,wEAAjB,SACE,oBACEA,UAAS,qCAAgC5B,EAAMsC,QAAtC,kCAAuEtC,EAAMsC,QAA7E,qBAAiGtC,EAAMsC,QAAvG,QADX,SAGGtC,EAAMoB,QAAQU,KAAI,SAACklB,EAAQjlB,GAAT,OACjB,oBAEEH,UAAS,UAAKolB,EAAOzlB,QAAZ,iBACPylB,EAAO1lB,UADA,sBAEK0lB,EAAOC,eAAiB,kBACtC9kB,QAAS,kBACP6kB,EAAOC,eA3NC,SAC5BvC,GAGI,IACAF,EACFhjB,EACA0lB,EACA1X,EACA2X,EACAC,EACAC,EATFC,EAEG,uDAFgB,EACnBC,EACG,uDADmB,MASpBC,EAAc,EAKhB,GAHAN,GAAY,EADZ1C,EAAQhN,SAASoO,eAAelB,GAK9B,KAAOwC,GAAW,CAMhB,IAJAA,GAAY,EACZ1lB,EAAOgjB,EAAMhjB,KAGRgO,EAAI,EAAGA,EAAIhO,EAAKG,OAAS,EAAG6N,IAS/B,GAPA6X,GAAe,EAGfF,EAAI3lB,EAAKgO,GAAGqW,qBAAqB,MAAMyB,GACvCF,EAAI5lB,EAAKgO,EAAI,GAAGqW,qBAAqB,MAAMyB,GAG/B,QAARC,GAAiBJ,GAAKC,GACxB,GAAID,EAAEM,UAAUjB,cAAgBY,EAAEK,UAAUjB,cAAe,CAEzDa,GAAe,EACf,YAEG,GAAY,SAARE,GAAkBJ,GAAKC,GAC5BD,EAAEM,UAAUjB,cAAgBY,EAAEK,UAAUjB,cAAe,CAEzDa,GAAe,EACf,MAIFA,GAAgB7lB,EAAKgO,GAAGkY,YAG1BlmB,EAAKgO,GAAGkY,WAAYC,aAAanmB,EAAKgO,EAAI,GAAIhO,EAAKgO,IACnD0X,GAAY,EAEZM,KAIoB,IAAhBA,GAA6B,QAARD,IACvBA,EAAM,OACNL,GAAY,IAgKwBU,CAAelD,EAAS3iB,IANpD,SASE,sBAAKH,UAAU,0BAAf,UACGolB,EAAO3lB,YACP2lB,EAAOC,eAAiB,cAAC,IAAD,QAVtBllB,UAiBf,uBAAO8B,GAAG,aAAajC,UAAU,gCAAjC,SACG5B,EAAMwB,YAGVxB,EAAMoC,YACL,sBAAKR,UAAU,sEAAf,UACE,8BACE,uBAAMA,UAAU,mCAAhB,0BACgByjB,EADhB,OAC8BR,EAAa,EAD3C,gBAIF,8BACE,sBAAKjjB,UAAU,wBAAf,UACE,8BACE,wBACEuM,KAAK,SACLvM,UAAS,mHACS,IAAhBqjB,GAAqB,YAEvB4C,aAAW,WACX3a,SAA0B,IAAhB+X,GAAqBjlB,EAAM2O,QACrCxM,QAAS,kBAAM+iB,EAAeD,EAAc,IAP9C,SASE,cAAC,KAAD,CAAkBrjB,UAAU,gBAGhC,8BACGujB,GACCA,EAAMrjB,KAAI,SAACgmB,EAAMC,GAAP,OACR,wBAEEnmB,UAAS,6GACPkmB,IAAS7C,EACL,WACA,8BAEN/X,SAAU4a,IAAS7C,GAAejlB,EAAM2O,QACxCxM,QAAS,kBAAM+iB,EAAe4C,IARhC,SAUGA,GATIC,QAab,8BACE,wBACE5Z,KAAK,SACLvM,UAAS,6HACPqjB,IAAgBF,GAAc,YAEhC8C,aAAW,OACX3a,SAAU+X,IAAgBF,GAAc/kB,EAAM2O,QAC9CxM,QAAS,kBAAM+iB,EAAeD,EAAc,IAP9C,SASE,cAAC,KAAD,CAAgBrjB,UAAU,gC,skBCtJjComB,EAAgB,SAACC,GAE5B,OADAA,GAAS,EAAM,IACf,uCAAO,WAAOC,GAAP,iBAAAlhB,EAAA,sEAEHmhB,cAFG,SAGe/f,IAAMggB,IAAN,UACb1kB,IAAI4E,SADS,kBAHf,OAGGC,EAHH,OAMHC,QAAQC,IAAI,CAAE4f,gBAAiB9f,EAAI9G,OAC/B6mB,EAAmC,GACpB,MAAf/f,EAAI+C,QAEW,OAAb/C,EAAI9G,MAAiB8G,EAAI9G,KAAKE,OAAS,IACzC2mB,EAAa/f,EAAI9G,MAGrBymB,EAA8B,CAC5B/Z,KAAMoa,IAAYF,gBAClBG,QAASF,IAEXL,GAAS,EAAO,IAlBb,kDAoBHzf,QAAQQ,MAAM,CAAEA,MAAOC,YAAY,EAAD,MAClCgf,GAAS,EAAOhf,YAAY,EAAD,KArBxB,0DAAP,uDAsFWwf,EAAsB,SACjCC,GAGA,OADAlgB,QAAQC,IAAI,CAAEigB,aACP,CACLva,KAAMoa,IAAYI,iBAClBH,QAASE,IAKAE,EAAuB,SAACX,GAEnC,OADAA,GAAS,EAAM,IACf,uCAAO,WAAOC,GAAP,iBAAAlhB,EAAA,sEAEHmhB,cAFG,SAGe/f,IAAMggB,IAAN,UACb1kB,IAAI4E,SADS,qBAHf,OAGGC,EAHH,OAMHC,QAAQC,IAAI,CAAEogB,yBAA0BtgB,EAAI9G,OACxCqnB,OAAiDzH,EAIjD9Y,EAAI9G,WAA+B4f,IAAvB9Y,EAAI9G,KAAKgS,YACvBqV,EAAevgB,EAAI9G,MAErB+G,QAAQC,IAAI,CAAEqgB,aAAcvgB,EAAI9G,OAEhCymB,EAAqC,CACnC/Z,KAAMoa,IAAYM,yBAClBL,QAASM,GAA8B,SAEzCb,GAAS,EAAO,GAAIa,GAA8B,QApB/C,kDAsBHtgB,QAAQQ,MAAM,CAAEA,MAAOC,YAAY,EAAD,MAClCgf,GAAS,EAAOhf,YAAY,EAAD,KAvBxB,0DAAP,uDA6BW2L,EAAqB,SAACqT,GAEjC,OADAA,GAAS,EAAM,IACf,uCAAO,WAAOC,GAAP,iBAAAlhB,EAAA,sEAEHmhB,cAFG,SAGe/f,IAAMggB,IAAN,UACb1kB,IAAI4E,SADS,cAHf,OAGGC,EAHH,OAMHC,QAAQC,IAAI,CAAEsgB,sBAAuBxgB,EAAI9G,OACrCunB,EAAuC,GACxB,MAAfzgB,EAAI+C,QAEW,OAAb/C,EAAI9G,MAAiB8G,EAAI9G,KAAKE,OAAS,IACzCqnB,EAAezgB,EAAI9G,MAGvBymB,EAAmC,CACjC/Z,KAAMoa,IAAYQ,sBAClBP,QAASQ,IAEXf,GAAS,EAAO,GAAIe,GAlBjB,kDAoBHxgB,QAAQQ,MAAM,CAAEA,MAAOC,YAAY,EAAD,MAClCgf,GAAS,EAAOhf,YAAY,EAAD,KArBxB,0DAAP,uDA2BWggB,EAAoB,SAC/BxnB,GAEA,MAAO,CACL0M,KAAMoa,IAAYW,oBAClBV,QAAS/mB,IAKA0nB,EAAoB,SAC/B1nB,GAEA,MAAO,CACL0M,KAAMoa,IAAYa,oBAClBZ,QAAS/mB,IAKA4nB,EAAoB,SAC/B5nB,GAEA,MAAO,CACL0M,KAAMoa,IAAYe,mBAClBd,QAAS/mB,IAKA8nB,EAAoB,SAAC9nB,GAChC,MAAO,CACL0M,KAAMoa,IAAYiB,oBAClBhB,QAAS/mB,IAKAgoB,EAAwB,SACnChoB,GAEA,MAAO,CACL0M,KAAMoa,IAAYmB,wBAClBlB,QAAS/mB,IAKAkoB,EAAwB,SAAC1B,GAEpC,OADAA,GAAS,EAAM,IACf,uCAAO,WAAOC,GAAP,iBAAAlhB,EAAA,sEAEHmhB,cAFG,SAGe/f,IAAMggB,IAAN,UACb1kB,IAAIkmB,UADS,wBAHf,OAGGrhB,EAHH,OAMHC,QAAQC,IAAI,CAAEsgB,sBAAuBxgB,EAAI9G,OACrCunB,EAA2C,GAC5B,MAAfzgB,EAAI+C,QAEW,OAAb/C,EAAI9G,MAAiB8G,EAAI9G,KAAKE,OAAS,IACzCqnB,EAAezgB,EAAI9G,MAGvB+G,QAAQC,IAAI,wCACZD,QAAQC,IAAI,CAAEkhB,sBAAuBphB,IACrCC,QAAQC,IAAI,wCACZyf,EAAsC,CACpC/Z,KAAMoa,IAAYsB,yBAClBrB,QAASQ,IAEXf,GAAS,EAAO,GAAIe,GArBjB,kDAuBHxgB,QAAQQ,MAAM,CAAEA,MAAOC,YAAY,EAAD,MAClCgf,GAAS,EAAOhf,YAAY,EAAD,KAxBxB,0DAAP,uDA8BW6gB,EAAwB,SACnCroB,GAEA,MAAO,CACL0M,KAAMoa,IAAYwB,wBAClBvB,QAAS/mB,IAKAuoB,EAA4B,SACvCvoB,GAEA,MAAO,CACL0M,KAAMoa,IAAY0B,4BAClBzB,QAAS/mB,IAKAyoB,EAAwB,SACnCzoB,GAEA,MAAO,CACL0M,KAAMoa,IAAY4B,wBAClB3B,QAAS/mB,IAKA2oB,EAA2B,SAACnC,GAEvC,OADAA,GAAS,EAAM,IACf,uCAAO,WAAOC,GAAP,iBAAAlhB,EAAA,sEAEHmhB,cAFG,SAGe/f,IAAMggB,IAAN,UACb1kB,IAAIkmB,UADS,2BAHf,OAGGrhB,EAHH,OAMHC,QAAQC,IAAI,CAAE4hB,4BAA6B9hB,EAAI9G,OAC3CqnB,OAAqDzH,EAIrD9Y,EAAI9G,OACNqnB,EAAevgB,EAAI9G,MAErB+G,QAAQC,IAAI,CAAEqgB,aAAcvgB,EAAI9G,OAEhCymB,EAAyC,CACvC/Z,KAAMoa,IAAY8B,4BAClB7B,QAASM,GAA8B,SAEzCb,GAAS,EAAO,GAAIa,GAA8B,QApB/C,kDAsBHtgB,QAAQQ,MAAM,CAAEA,MAAOC,YAAY,EAAD,MAClCgf,GAAS,EAAOhf,YAAY,EAAD,KAvBxB,0DAAP,wD,skBClTW6L,EAAsB,WACjC,8CAAO,WAAOoT,GAAP,eAAAlhB,EAAA,sEAEHmhB,cAFG,SAGe/f,IAAMggB,IAAN,UAAa1kB,IAAIsK,KAAjB,oBAHf,OAGGzF,EAHH,OAIHC,QAAQC,IAAI,CAAE6hB,YAAa/hB,IAC3B2f,EAAoC,CAClC/Z,KAAMoa,IAAYgC,sBAClB/B,QAASjgB,EAAI9G,OAPZ,gDAUH+G,QAAQQ,MAAM,CAAEA,MAAOC,YAAY,EAAD,MAV/B,yDAAP,uDAeWuhB,EAAyB,SAAC/oB,GACrC,8CAAO,WAAOymB,GAAP,SAAAlhB,EAAA,sDACLkhB,EAAuC,CACrC/Z,KAAMoa,IAAYkC,yBAClBjC,QAAS/mB,IAHN,2CAAP,uDAQWipB,EAAyB,SAACjpB,GACrC,8CAAO,WAAOymB,GAAP,SAAAlhB,EAAA,sDACLkhB,EAAuC,CACrC/Z,KAAMoa,IAAYoC,yBAClBnC,QAAS/mB,IAHN,2CAAP,uDAQWmpB,EAAyB,SAACnpB,GACrC,8CAAO,WAAOymB,GAAP,SAAAlhB,EAAA,sDACLkhB,EAAuC,CACrC/Z,KAAMoa,IAAYsC,yBAClBrC,QAAS/mB,IAHN,2CAAP,uDASWsT,EAAyB,WACpC,8CAAO,WAAOmT,GAAP,eAAAlhB,EAAA,sEAEHmhB,cAFG,SAGe/f,IAAMggB,IAAN,UACb1kB,IAAIsK,KADS,uBAHf,OAGGzF,EAHH,OAMHC,QAAQC,IAAI,CAAEqiB,eAAgBviB,IAC9B2f,EAAuC,CACrC/Z,KAAMoa,IAAYwC,0BAClBvC,QAASjgB,EAAI9G,OATZ,gDAaH+G,QAAQC,IAAI,CAAEuiB,uBAAuB,EAAD,KAbjC,yDAAP,uDAkBWC,EAA4B,SACvCxpB,GAEA,8CAAO,WAAOymB,GAAP,SAAAlhB,EAAA,sDACLkhB,EAA0C,CACxC/Z,KAAMoa,IAAY2C,6BAClB1C,QAAS/mB,IAHN,2CAAP,uDAQW0pB,EAA4B,SACvC1pB,GAEA,8CAAO,WAAOymB,GAAP,SAAAlhB,EAAA,sDACLkhB,EAA0C,CACxC/Z,KAAMoa,IAAY6C,6BAClB5C,QAAS/mB,IAHN,2CAAP,uDAQW4pB,EAA4B,SAAC5pB,GACxC,8CAAO,WAAOymB,GAAP,SAAAlhB,EAAA,sDACLkhB,EAA0C,CACxC/Z,KAAMoa,IAAY+C,6BAClB9C,QAAS/mB,IAHN,2CAAP,uDASWuT,EAAoB,WAC/B,8CAAO,WAAOkT,GAAP,eAAAlhB,EAAA,sEAEHmhB,cAFG,SAGe/f,IAAMggB,IAAN,UACb1kB,IAAIsK,KADS,yBAHf,OAGGzF,EAHH,OAMHC,QAAQC,IAAI,CAAE8iB,UAAWhjB,IACzB2f,EAAkC,CAChC/Z,KAAMoa,IAAYiD,oBAClBhD,QAASjgB,EAAI9G,OATZ,gDAaH+G,QAAQC,IAAI,CAAEuiB,uBAAuB,EAAD,KAbjC,yDAAP,uDAkBWS,EAAuB,SAAChqB,GACnC,8CAAO,WAAOymB,GAAP,SAAAlhB,EAAA,sDACLkhB,EAAqC,CACnC/Z,KAAMoa,IAAYmD,uBAClBlD,QAAS/mB,IAHN,2CAAP,uDAQWkqB,EAAuB,SAAClqB,GAEnC,OADA+G,QAAQC,IAAI,CAAEmjB,QAASnqB,IACvB,uCAAO,WAAOymB,GAAP,SAAAlhB,EAAA,sDACLkhB,EAAqC,CACnC/Z,KAAMoa,IAAYsD,uBAClBrD,QAAS/mB,IAHN,2CAAP,uDAQWqqB,EAAuB,SAACrqB,GACnC,8CAAO,WAAOymB,GAAP,SAAAlhB,EAAA,sDACLkhB,EAAqC,CACnC/Z,KAAMoa,IAAYwD,uBAClBvD,QAAS/mB,IAHN,2CAAP,uDASIuqB,EAAqB,SACzBC,GAEA,IAAI5a,EAAgC,GAChC6a,EAAqB,GAUzB,OATwCD,EAAenrB,QAAO,SAACqrB,GAC7D,OAAqB,OAAdA,QAAoC9K,IAAd8K,KAEtB7Q,SAAQ,SAAC6Q,GACXD,EAASjmB,SAASkmB,EAAUtkB,WAC/BwJ,EAAOvL,KAAKqmB,GACZD,EAASpmB,KAAKqmB,EAAUtkB,aAGrBwJ,GAGI+a,EAA2B,SACtCC,EACAC,EACArE,GAEA,8CAAO,WAAOC,GAAP,eAAAlhB,EAAA,6DACLihB,GAAS,EAAM,GAAI,MADd,SAGHE,cAHG,SAIe/f,IAAMggB,IAAN,UACb1kB,IAAI6F,YADS,kCAC4B8iB,EAD5B,YACgDC,IAL/D,OAIG/jB,EAJH,OAQHC,QAAQC,IAAI,wCACZD,QAAQC,IAAI,CACV2jB,yBAA0B7jB,EAC1ByjB,mBAAoBA,EAAmBzjB,EAAI9G,QAE7C+G,QAAQC,IAAI,wCACZyf,EAAwC,CACtC/Z,KAAMoa,IAAYgE,2BAClB/D,QAASwD,EAAmBzjB,EAAI9G,QAGlCwmB,GAAS,EAAO,GAAI+D,EAAmBzjB,EAAI9G,OAnBxC,kDAqBH+G,QAAQC,IAAI,CAAE2jB,yBAAyB,EAAD,KACtCnE,GAAS,EAAOhf,YAAY,EAAD,IAAS,MAtBjC,0DAAP,uDA2BWoE,EAAiB,SAAC5L,GAI7B,OAHA+G,QAAQC,IAAI,wCACZD,QAAQC,IAAI,CAAE4E,eAAgB5L,IAC9B+G,QAAQC,IAAI,wCACZ,uCAAO,WAAOyf,GAAP,SAAAlhB,EAAA,sDACLkhB,EAA+B,CAC7B/Z,KAAMoa,IAAYiE,gBAClBhE,QAAS/mB,IAHN,2CAAP,wD,uLClSIgrB,E,kDACJ,WAAYzsB,GAAkB,IAAD,8BAC3B,cAAMA,IAOR0U,kBAAoB,kBAAM,EAAK1U,MAAM0sB,eAAc,IARtB,EAS7BC,qBAAuB,kBAAM,EAAK3sB,MAAM0sB,eAAc,IANpD,EAAKnZ,MAAQ,CACX5E,SAAS,GAJgB,E,0CAW7B,WAGE,IAAwB,IAFAkH,KAAK7V,MAAMmG,KAAKymB,gBAGtC,OAAO,KAGT,IAAMC,EAAYhX,KAAK7V,MAAM8sB,OAAOC,WACpC,OACE,qBACEnrB,UAAS,2DACO,IAAdirB,EAAqB,sBAAwB,uBADtC,kGADX,SAKGhX,KAAK7V,MAAMgtB,e,GA1BUC,IAAM7V,WAuCvBtB,EAAiB5P,aAPN,SAAC,GAIvB,MAAO,CAAEC,KADuC,EAFhDA,KAGqB2mB,OAD2B,EADhDA,UAKqD,CACrDI,eACAR,oBAF4BxmB,CAG3BumB,GAwCUU,EAA2C,SAAC,GAKpC,IAAD,IAJlBjqB,aAIkB,MAJV,GAIU,MAHlB8Z,YAGkB,MAHXoQ,IAGW,MAFlB7U,cAEkB,aADlBL,aACkB,MADV,EACU,EACZmV,EAAcrQ,EACpB,OACE,0BACEpb,UAAS,WACI,IAAX2W,EACI,mCACA,4BAHG,+HADX,UAOE,0BAAS3W,UAAU,SAAnB,UACE,cAACyrB,EAAD,CAAazrB,UAAU,8BACvB,+BAAOsB,OAGRgV,EAAQ,EACP,sBAAMtW,UAAU,0DAAhB,SACGsW,IAED,U,+WC2BKhS,cAAQ,KAAM,GAAdA,EAzF6C,SAAClG,GAC3D,MAAsCC,mBAAiB,IAAvD,mBAAOqtB,EAAP,KAAoBC,EAApB,KAEA,OACE,oCAEE,sBAAK3rB,UAAU,gCAAf,UACE,cAAC,KAAD,CAAUA,UAAU,0BACpB,uBACEuM,KAAK,OACLxB,YAAY,SACZ/K,UAAU,qFACVmL,SAAU,SAACC,GAAD,OAAOugB,EAAevgB,EAAEC,OAAO9B,QACzCA,MAAOmiB,EACPpgB,SACwB,OAAtBlN,EAAMwtB,cACNC,EACEztB,EAAM0tB,SACN1tB,EAAM2tB,cAAc3Z,gBACpBhU,EAAMwtB,YAAYI,OAAOjoB,OAM/B,wBACE/D,UAAU,4EACVuM,KAAK,SACLhM,QAAS,WACPnC,EAAM6tB,oBAAmB,GACzB7tB,EAAM8tB,gBAAgB,KAL1B,sBAWwC,IAE1C,qBAAKlsB,UAAU,4DAAf,SACG5B,EAAMwtB,YACLC,EACEztB,EAAM0tB,SACN1tB,EAAM2tB,cAAc3Z,gBACpBhU,EAAMwtB,YAAYI,OAAOjoB,MAEzB,sBAAK/D,UAAU,iEAAf,UACE,qBACEA,UAAU,iCACVO,QAAS,WACPnC,EAAM6tB,oBAAmB,GACzB7tB,EAAM+tB,eAAe/tB,EAAMwtB,YAAaI,OAAOjoB,MAJnD,SAOE,oBAAG/D,UAAU,mCAAb,uBACa5B,EAAMwtB,YAAYI,OAAOI,OAAOC,iBAG/C,wBACE9f,KAAK,SACLvM,UAAU,uGACVO,QAAS,WACPnC,EAAM8tB,gBAAgB9tB,EAAMwtB,YAAaI,OAAOjoB,MAJpD,qBAYJ,qBAAK/D,UAAU,kBAAf,SACE,mBAAGA,UAAU,mCAAb,iDC5ECssB,EAAmB,SAC9B1pB,EACAmN,GAEA,IAAIC,EAAsB,GACxBC,EAAyB,GACzBC,EAAmB,GACnBC,EAAmB,GA+BrB,OA7BEJ,EAAIjR,gBAAgBiB,OAAS,GAC7B6C,EAAmBa,oBAKnBwM,EAHAE,EAAWvN,EAAmBa,oBAAoBvE,QAChD,SAACkR,GAAD,OAAOA,EAAE1M,6BAA+BqM,EAAIjR,mBAC5C,GAAGwC,MAGLyO,EAAIlR,YAAYkB,OAAS,GACzB6C,EAAmBS,mBAKnB2M,EAHAG,EAAWvN,EAAmBS,iBAAiBnE,QAC7C,SAACkR,GAAD,OAAOA,EAAE9M,0BAA4ByM,EAAIlR,eACzC,GAAGyC,OAILyO,EAAIzQ,2BACJyQ,EAAIzQ,0BAA0BitB,6BAA6BxsB,OAAS,GACpE6C,EAAmBkB,iBAEnB8C,QAAQC,IAAI,CAAEkJ,QAKdI,GAAY,QAJZD,EAAWtN,EAAmBkB,eAAe5E,QAC3C,SAACkR,GAAD,aACEA,EAAErM,OAAF,UAAUgM,EAAIzQ,iCAAd,aAAU,EAA+BitB,iCAC3C,GAAGjrB,QAIA,CACLiC,SAAUyM,EACVK,aAAcJ,EACdrM,MAAOsM,EACPJ,KAAMK,IAIG0b,EAAiB,SAC5BW,EACA1Y,EACA2Y,GAEA,OACED,EAASntB,MACP,SAACF,GAAD,OACEA,EAAK2U,YAAcA,GAAa3U,EAAKyI,iBAAmB6kB,MAmD1DC,E,kDACJ,WAAYtuB,GAAwB,IAAD,8BACjC,cAAMA,IAoBR4O,WAAa,SAAC2E,GACZ,EAAKjB,SAAS,CAAE3D,QAAS4E,KAtBQ,EAyBnCgb,eAAiB,SAAChb,GAChB,EAAKjB,SAAS,CAAEkc,YAAajb,KA1BI,EA6BnC3M,aAAe,SACbnF,GAKA,EAAK6Q,SAAS,CAAE3L,UAAWlF,KAnCM,EAsCnCgtB,cAAgB,SAAChtB,GACf,EAAK6Q,SAAS,CAAEoc,WAAYjtB,KAvCK,EA0CnCssB,eAAiB,SAACtsB,GAChB,EAAK6Q,SAAS,CAAEqc,YAAaltB,KA3CI,EA8CnCqsB,gBAAkB,SAACrsB,GACjB,EAAK6Q,SAAS,CAAEsc,aAAcntB,KA/CG,EAkDnCosB,mBAAqB,SAACpsB,GACpB,EAAK6Q,SAAS,CAAEuc,gBAAiBptB,KAnDA,EAsDnCqtB,qBAAuB,SAACrtB,GACtB,EAAK6Q,SAAS,CAAEyc,kBAAmBttB,KAvDF,EA0DnCutB,eAAiB,SAAC7jB,GAChB,EAAKmH,SAAS,CAAE2c,YAAa9jB,KA3DI,EA8DnC+jB,gBAAkB,SAACztB,GACjB,EAAK6Q,SAAS,CAAE6c,aAAc1tB,KA/DG,EAkEnC2tB,gBAAkB,SAChB5b,EACAkV,GAEA,IAAIjnB,EACJ,GAAIinB,IAAanX,IAAchI,aAI7B,IAHA9H,EAAO+R,EAAY6b,MAAMpuB,MACvB,SAACF,GAAD,OAAUA,EAAKuQ,WAAaC,IAAchI,iBAEI,SAApC+lB,YAAa9b,EAAa/R,GACpC,OAAO,OAEJ,GAAIinB,IAAanX,IAAcC,qBAIpC,IAHA/P,EAAO+R,EAAY6b,MAAMpuB,MACvB,SAACF,GAAD,OAAUA,EAAKuQ,WAAaC,IAAcC,yBAEI,SAApC8d,YAAa9b,EAAa/R,GACpC,OAAO,OAEJ,GAAIinB,IAAanX,IAAc8E,qBACpC5U,EAAO+R,EAAY6b,MAAMpuB,MACvB,SAACF,GAAD,OAAUA,EAAKuQ,WAAaC,IAAc8E,wBAEI,SAApCiZ,YAAa9b,EAAa/R,GACpC,OAAO,EAGX,OAAO,GA7F0B,EAgGnC8tB,iBAAmB,SAACrc,GAClB,IAAI7B,EAAiB,GACrB,OAAQ6B,GACN,KAAK3B,IAAchI,YACjB8H,EAAS,cACT,MACF,KAAKE,IAAcC,oBACjBH,EAAS,WACT,MACF,KAAKE,IAAc8C,YACjBhD,EAAS,OACT,MACF,KAAKE,IAAc6E,kBACjB/E,EAAS,oBACT,MACF,KAAKE,IAAc8E,mBACjBhF,EAAS,YACT,MACF,QACEA,EAAS,GAIb,OAAOA,GAvH0B,EA0HnCme,gBAAkB,SAChBC,EACA5nB,GAEA,EAAK7H,MAAM0vB,aACTD,EAAkBzb,gBAClBnM,GACA,SAACyD,EAAiBpE,EAAazF,GAC7B,EAAKmN,WAAWtD,IACXA,GAAUpE,EAAIvF,QACjB,EAAK3B,MAAMsG,eAAe,CACxBpD,MAAOgE,EACPzE,MAAOqG,IAAgBI,SAGvBzH,IACF+G,QAAQC,IAAI,wCACZD,QAAQC,IAAI,CAAE+mB,gBAAiB/tB,IAC/B+G,QAAQC,IAAI,6CA5Ie,EAkJnCiM,kBAAoB,WAC0B,OAAxC,EAAK1U,MAAMmG,KAAKwpB,qBAClB,EAAK3vB,MAAMsG,eAAe,CACxBpD,MAAO,4BACPT,MAAOqG,IAAgBI,SAEzB,EAAKlJ,MAAM4vB,cAAa,GACxB,EAAKtd,SAAS,CACZqc,YAAa,GACbkB,cAAe,KACfC,gBAAiB,GACjBX,aAAc,GACdN,iBAAiB,EACjBkB,SAAU,UACVnB,aAAc,GACdjoB,UAAW,SAGuC,OAAhD,EAAK3G,MAAM6U,gBAAgB5P,kBAC7B,EAAKjF,MAAM8U,sBAE0C,OAAnD,EAAK9U,MAAM6U,gBAAgBxP,qBAC7B,EAAKrF,MAAM+U,yBAEqC,OAA9C,EAAK/U,MAAM6U,gBAAgBnP,gBAC7B,EAAK1F,MAAMgV,oBAE4B,OAArC,EAAKhV,MAAM6T,SAASxK,cACtB,EAAKrJ,MAAMkV,iBAAgB,SAAC5J,EAAiBpE,GAC3C,EAAK0H,WAAWtD,GACXA,GACCpE,EAAIvF,OAAS,GACf,EAAK3B,MAAMsG,eAAe,CACxBpD,MAAOgE,EACPzE,MAAOqG,IAAgBI,cApLF,EA6LnC8mB,gBAAkB,SAChBC,EACA1iB,GAEA,OAAO0iB,EAAUnvB,QAAO,SAACC,GAAD,OAAUA,EAAKwM,SAAWA,KAAQ,IAjMzB,EAoMnC2E,mBAAqB,SACnBge,EACArmB,GAEA,OAAOqmB,EAAapvB,QAClB,SAACC,GAAD,OAAUA,EAAK8I,iBAAmBA,KAClC,IA1M+B,EA6MnCsmB,YAAc,SACZC,EACA/gB,GAEA,OAAO+gB,EAAMnvB,MAAK,SAACF,GAAD,OAAUA,EAAKsO,kBAAoBA,MAjNpB,EAoNnCghB,cAAgB,SACdC,GAMA,IAAIjf,EAIA,CAAEkf,WAAY,GAAIC,WAAY,GAAIC,iBAAkB,IAwCxD,OArCE,EAAKld,MAAMsc,gBAAkBte,IAAcC,qBAC3C,EAAKxR,MAAM6T,SAASzC,mBAEpBC,EAAS,CACPkf,WAAY,EAAKP,gBACf,EAAKhwB,MAAM6T,SAASzC,mBACpBkf,GACA5iB,aAAajE,QACf+mB,WAAY,EAAKR,gBACf,EAAKhwB,MAAM6T,SAASzC,mBACpBkf,GACA5iB,aAAa1M,kBACfyvB,iBAAkB,EAAKT,gBACrB,EAAKhwB,MAAM6T,SAASzC,mBACpBkf,GACA5iB,aAAa7F,SAGjB,EAAK0L,MAAMsc,gBAAkBte,IAAchI,aAC3C,EAAKvJ,MAAM6T,SAAS6c,wBAEpBrf,EAAS,CACPkf,WAAY,EAAKre,mBACf,EAAKlS,MAAM6T,SAAS6c,sBACpBJ,GACAtkB,YAAYvC,QACd+mB,WAAY,EAAKte,mBACf,EAAKlS,MAAM6T,SAAS6c,sBACpBJ,GACAtkB,YAAYtC,mBACd+mB,iBAAkB,EAAKve,mBACrB,EAAKlS,MAAM6T,SAAS6c,sBACpBJ,GACAtkB,YAAYnE,UAIXwJ,GAvQ0B,EA0QnCsf,aAAe,SAACC,GACd,EAAK5wB,MAAM4vB,cAAa,GACxB,EAAKtd,SAAS,CACZqc,YAAa,GACbkB,cAAe,KACfC,gBAAiB,GACjBX,aAAc,GACdN,iBAAiB,EACjBkB,SAAU,UACVnB,aAAc,GACdjoB,UAAW,QApRoB,EAwRnCkqB,aAxRmC,uCAwRpB,WAAOhpB,EAAiBogB,GAAxB,eAAAjhB,EAAA,0DACTpG,YAAgBiH,GADP,yCAEJ,EAAK7H,MAAMsG,eAAe,CAC/BpD,MAAO,sBACPT,MAAOqG,IAAgBI,UAJd,uBAQXif,cARW,SASO/f,IAAMggB,IAAN,UACb1kB,IAAIsK,KADS,kBACKnG,IAVZ,OASLU,EATK,OAYXC,QAAQC,IAAI,wCACZD,QAAQC,IAAI,CAAEooB,aAActoB,IAC5BC,QAAQC,IAAI,wCACRF,GACF0f,EAAS1f,EAAI9G,MAhBJ,kDAmBX+G,QAAQQ,MAAM,CAAEA,MAAK,OACrB,EAAKhJ,MAAMsG,eAAe,CACxBpD,MAAO+F,YAAY,EAAD,IAClBxG,MAAOqG,IAAgBI,SAtBd,0DAxRoB,0DAmTnC4nB,cAAgB,SAAC5d,GACf,IAAI7B,EAAiB,GAqDrB,OAnDE6B,IAAc3B,IAAcC,qBAC5B,EAAKxR,MAAM6T,SAASzC,qBAEpBC,EAAS6c,EACP,EAAKluB,MAAM6U,gBACX,EAAKmb,gBACH,EAAKhwB,MAAM6T,SAASzC,mBACpB,EAAKmC,MAAMob,cAEbjd,MAGFwB,IAAc3B,IAAchI,aAC5B,EAAKvJ,MAAM6T,SAAS6c,wBAEpBrf,EAAS,EAAKa,mBACZ,EAAKlS,MAAM6T,SAAS6c,sBACpB,EAAKnd,MAAMob,aACXtkB,SAASC,gBAGX4I,IAAc3B,IAAc8C,aAC5B,EAAKrU,MAAM4K,SACX,EAAK5K,MAAM6T,SAASkd,UACpBxb,YACE,EAAKvV,MAAM6T,SAASkd,SACpB,EAAKxd,MAAMob,cAEbnZ,YACE,EAAKxV,MAAM4K,QACX2K,YACE,EAAKvV,MAAM6T,SAASkd,SACpB,EAAKxd,MAAMob,aACVte,UAGLgB,EAASmE,YACP,EAAKxV,MAAM4K,QACX2K,YACE,EAAKvV,MAAM6T,SAASkd,SACpB,EAAKxd,MAAMob,aACVte,QACFxF,aAGHqI,IAAc3B,IAAc8E,oBAC5B,EAAK9C,MAAMia,cAEXnc,EAAS,aAAe,EAAKkC,MAAMia,YAAYI,OAAOI,OAAOC,aAGxD5c,GAzW0B,EA4WnC6J,kBAAoB,SAAChI,GACnB,IAAI7B,EAAiB,GAWrB,OATE6B,IAAc3B,IAAchI,aAC5B,EAAKvJ,MAAM6T,SAAS6c,wBAEpBrf,EAAS,EAAKa,mBACZ,EAAKlS,MAAM6T,SAAS6c,sBACpB,EAAKnd,MAAMob,aACXtkB,SAASK,uBAAuBA,wBAG7B2G,GAxX0B,EA2XnC2f,aA3XmC,uCA2XpB,WAAOhkB,GAAP,2BAAAhG,EAAA,yDACbgG,EAAEikB,iBACG,EAAK1d,MAAMsc,cAFH,yCAGJ,EAAKjpB,aAAa,CACvBK,QAAS,aACTC,IAAK,6BALI,WAQTtG,YAAgB,EAAK2S,MAAMob,aARlB,yCASJ,EAAK/nB,aAAa,CACvBK,QAAS,aACTC,IAAI,iBAAD,OAAmB,EAAKqM,MAAMsc,cAAcvjB,oBAA5C,4BAXM,UAeR,EAAKiH,MAAM0b,YAfH,yCAgBJ,EAAKroB,aAAa,CACvBK,QAAS,eACTC,IAAI,6CAlBK,WAsBTtG,YAAgB,EAAK2S,MAAM4b,cAtBlB,yCAuBJ,EAAKvoB,aAAa,CACvBK,QAAS,gBACTC,IAAI,gCAzBK,UA6BR,EAAKlH,MAAMmG,KAAKwpB,oBA7BR,0CA8BJ,EAAKlB,cAAL,6CA9BI,WAiCb,EAAKF,gBAAe,GAChB2C,EAA8B,kBAC9BC,EAA6B,SAC7BjpB,EAA0B,GAC1BH,EAAyB,GACzB7E,EAAgB,EAAK4tB,cAAc,EAAKvd,MAAMsc,eAC9CuB,EAAuB,EAAKlW,kBAAkB,EAAK3H,MAAMsc,eAG3D,EAAKtc,MAAMsc,gBAAkBte,IAAc8C,aACqB,WAAhE,EAAKgc,cAAc,EAAK9c,MAAMob,aAAa8B,iBA3ChC,kCA6CL,EAAKI,aACT,EAAKR,cAAc,EAAK9c,MAAMob,aAAa8B,kBAC3C,SAAChvB,GACCyvB,EAAsBzvB,EAAK0G,MAC3BgpB,EACE1vB,EAAK0I,UAAUnC,MAAQ,IAAMvG,EAAK0I,UAAUlC,SAlDvC,eAuDT,EAAKsL,MAAMsc,cAAkBte,IAAc8C,YAvDlC,UA0FX8T,cA1FW,UA2FO/f,IAAM2F,KAAN,UACbrK,IAAI4E,SADS,gBAEhB,CACEkB,eAAgB,EAAK+J,MAAMob,YAC3Brd,SAAU,EAAKiC,MAAMsc,cACrBjoB,KAAM,EAAK5H,MAAMmG,KAAKyB,KAAKC,QAC3B6N,UAAW,EAAK1V,MAAMmG,KAAKwpB,oBAAoB3b,gBAC/C9H,sBAAuB,EAAKqH,MAAM0b,YAAYprB,GAC9CkI,OAAQ,EAAKwH,MAAM4b,aACnBoB,WACE,EAAKhd,MAAMsc,gBAAkBte,IAAc8C,aAC3C,EAAKd,MAAMsc,gBAAkBte,IAAc8E,mBACvC,SACA,EAAKga,cAAc,EAAK9c,MAAMob,aAAa4B,WACjDC,WACE,EAAKjd,MAAMsc,gBAAkBte,IAAc8C,aAC3C,EAAKd,MAAMsc,gBAAkBte,IAAc8E,mBACvC,SACA,EAAKga,cAAc,EAAK9c,MAAMob,aAAa6B,WACjDC,iBACE,EAAKld,MAAMsc,gBAAkBte,IAAc8C,aAC3C,EAAKd,MAAMsc,gBAAkBte,IAAc8E,mBACvC,GACA,EAAKga,cAAc,EAAK9c,MAAMob,aAAa8B,iBACjDS,sBACAC,qBACAjpB,kBACAH,iBACA7E,QACAkuB,iBAxHO,QA2FL7oB,EA3FK,OA2HXC,QAAQC,IAAI,CAAE4oB,YAAa9oB,IACR,MAAfA,EAAI+C,QAAiC,MAAf/C,EAAI+C,SAC5B,EAAKtL,MAAMqxB,YAAY9oB,EAAI9G,MAC3B,EAAKzB,MAAMsG,eAAe,CACxBpD,MAAO,wBACPT,MAAOqG,IAAgBC,UAEzB,EAAK4nB,cAAa,IAlIT,mDAqIXnoB,QAAQQ,MAAM,CAAEA,MAAK,OACrB,EAAKhJ,MAAMsG,eAAe,CACxBpD,MAAO+F,YAAY,EAAD,IAClBxG,MAAOqG,IAAgBI,SAxId,QA2Ib,EAAKqlB,gBAAe,GA3IP,2DA3XoB,wDAygBnC+C,gBAAkB,SAAClqB,GACjB,EAAKkL,SAAS,CACZud,cAAejvB,YAAgBwG,GAC3B,KACCA,IAGFA,IAAgCmK,IAAchI,aACC,OAA9C,EAAKvJ,MAAM6T,SAAS6c,uBACtB,EAAK1wB,MAAMuxB,0BACT,EAAKvxB,MAAMmG,KAAKyB,KAAKC,SACrB,SACEyD,EACApE,EACAzF,GAEA,EAAKmN,WAAWtD,GACXA,GACCpE,EAAIvF,OAAS,GACf,EAAK3B,MAAMsG,eAAe,CACxBpD,MAAOgE,EACPzE,MAAOqG,IAAgBI,YAQV,OAAvB,EAAKlJ,MAAM4K,SACoB,IAA9B,EAAK5K,MAAM4K,QAAQjJ,QAAgB,EAAK4R,MAAM5E,SAE/C,EAAK3O,MAAMmV,YAAY,EAAKvG,YAC5B,EAAKA,YAAW,IAEhB,EAAKA,YAAW,IAERxH,IAAgCmK,IAAc8C,YAE/B,OAAvB,EAAKrU,MAAM4K,SACoB,IAA9B,EAAK5K,MAAM4K,QAAQjJ,QAAgB,EAAK4R,MAAM5E,SAE/C,EAAK3O,MAAMmV,YAAY,EAAKvG,YAC5B,EAAKA,YAAW,IAEhB,EAAKA,YAAW,GAGjBxH,IAAgCmK,IAAcC,oBAEA,OAA3C,EAAKxR,MAAM6T,SAASzC,oBACtB,EAAKpR,MAAMwxB,wBACT,SAAClmB,EAAiBpE,EAAazF,GAC7B,EAAKmN,WAAWtD,GACXA,GACCpE,EAAIvF,OAAS,GACf,EAAK3B,MAAMsG,eAAe,CACxBpD,MAAOgE,EACPzE,MAAOqG,IAAgBI,YAQlC9B,IAAgCmK,IAAc8E,oBAEP,OAApC,EAAKrW,MAAM6T,SAAS2Z,aACtB,EAAKxtB,MAAMyxB,eACT,EAAKzxB,MAAMmG,KAAKyB,KAAKC,SACrB,SACEyD,EACApE,EACAzF,GAEA,EAAKmN,WAAWtD,GACXA,GACCpE,EAAIvF,OAAS,GACf,EAAK3B,MAAMsG,eAAe,CACxBpD,MAAOgE,EACPzE,MAAOqG,IAAgBI,SAIzBzH,GACF,EAAK6Q,SAAS,CAAEkb,YAAa/rB,QA/lBN,EAumBnCiwB,wBAA0B,SAAC7B,GACzB,IAAIxe,EAAiB,GAErB,OAAQwe,GACN,KAAKte,IAAchI,YACjB8H,EAAM,0CACN,MACF,KAAKE,IAAcC,oBACjBH,EAAM,uCACN,MACF,KAAKE,IAAc8C,YACjBhD,EAAM,mCACN,MACF,KAAKE,IAAc6E,kBACjB/E,EAAM,gDACN,MACF,KAAKE,IAAc8E,mBACjBhF,EAAM,wCACN,MACF,QACEA,EAAS,mCAIb,OAAOA,GA5nBP,EAAKkC,MAAQ,CACX5E,SAAS,EACT6f,aAAa,EACb7nB,UAAW,KACXkpB,cAAe,KACfC,gBAAiB,GACjBX,aAAc,GACdR,YAAa,GACbE,iBAAiB,EACjBD,aAAc,GACdmB,SAAU,UACVrB,WAAY,KACZlB,YAAa,EAAKxtB,MAAM6T,SAAS2Z,YACjCuB,mBAAmB,EACnBE,YAAa,MAjBkB,E,0CAkoBnC,WAAU,IAAD,OACP,OAC0C,OAAxCpZ,KAAK7V,MAAMmG,KAAKwpB,qBACiB,OAAjC9Z,KAAK7V,MAAM6T,SAAS6Z,SAEb,KAIP,qBAAK9rB,UAAU,OAAf,SACGiU,KAAK7V,MAAM2xB,WACV,eAACpvB,EAAA,EAAD,CACEC,UAAU,EACVC,MAAOC,IAAOC,QACdC,MAAO,YACJ,EAAK2Q,MAAMib,aACV,EAAKjb,MAAMqb,aAAajtB,QAAU,GAClC,EAAKgvB,gBACN,EAAKpd,MAAMib,aACV,EAAKjb,MAAMqb,aAAajtB,OAAS,GACjC,EAAKmsB,gBAAgB,KAEzB7qB,cAAc,EACdJ,eAAe,EACfK,MACE,sBAAKtB,UAAU,0CAAf,UACGiU,KAAKtC,MAAMqb,aAAajtB,QAAU,GAAK,gBACvCkU,KAAKtC,MAAMqb,aAAajtB,OAAS,GAChCkU,KAAKtC,MAAMsc,gBACTte,IAAcC,qBAChB,mBACDqE,KAAKtC,MAAMqb,aAAajtB,OAAS,GAChCkU,KAAKtC,MAAMsc,gBAAkBte,IAAchI,aAC3C,yBAGNzG,eACE+S,KAAKtC,MAAMqb,aAAajtB,OAAS,EAC7BoB,IAAUC,WACVD,IAAU6uB,OAEhBrwB,QAAS,CAAE2B,OAAO,EAAMC,MAAM,EAAOC,QAAQ,GA9B/C,UAiCGyS,KAAKtC,MAAMqb,aAAajtB,QAAU,GACjC,sBAAMkwB,SAAU,SAAC7kB,GAAD,OAAO,EAAKgkB,aAAahkB,IAAzC,SACE,sBAAKpL,UAAU,YAAf,UACGiU,KAAKtC,MAAMmb,YACV,qBACE9sB,UAAU,+BACVO,QAAS,kBAAM,EAAKssB,cAAc,OAFpC,SAIG5Y,KAAKtC,MAAMmb,aAGhB,sBAAK9sB,UAAU,qCAAf,UAEE,sBAAKA,UAAU,qBAAf,UACE,+CACA,yBACEA,UAAS,+DACiB,UAAxBiU,KAAKtC,MAAMwc,UACX,qBAFO,YAIPla,KAAKtC,MAAM5M,WACsB,eAAjCkP,KAAKtC,MAAM5M,UAAUM,QACjB,iBACA,kBAPG,aAST8F,SAAU,SAACC,GACT,EAAKskB,gBAAgBtkB,EAAEC,OAAO9B,OAC9B,EAAK4iB,eAAe,IACpB,EAAKxa,MAAM5M,WACwB,eAAjC,EAAK4M,MAAM5M,UAAUM,SACrB,EAAKL,aAAa,OAEtBuE,MACE0K,KAAKtC,MAAMsc,cACPha,KAAKtC,MAAMsc,cACX,GAEN3iB,SACE2I,KAAKtC,MAAMib,aACa,UAAxB3Y,KAAKtC,MAAMwc,SAxBf,UA2BE,wBAAQ5kB,MAAM,GAAd,+BACCmE,OAAOC,OAAOgC,KAAezP,KAAI,SAACf,EAAMgB,GAAP,OAChC,wBACEoJ,MAAOpK,EAEPa,UAAS,UACPb,IAASwQ,IAAc6E,mBACvBrV,IAASwQ,IAAc8E,mBACnB,SACA,SAPR,SAUG7K,YACCzK,EAAKuL,oBAAoBgM,QAAQ,KAAM,OATpCvW,EAAQhB,SAclB8U,KAAKtC,MAAM5M,WACuB,eAAjCkP,KAAKtC,MAAM5M,UAAUM,SACnB,sBAAMrF,UAAU,eAAhB,SACGiU,KAAKtC,MAAM5M,UAAUO,SAO9B,sBAAKtF,UAAU,qBAAf,UACE,gCACGiU,KAAK6b,wBAAwB7b,KAAKtC,MAAMsc,iBAE3C,sBACEjuB,UAAS,sCACiB,UAAxBiU,KAAKtC,MAAMwc,SACP,kBACA,gCAHG,2BAKPla,KAAKtC,MAAMsb,gBAAkB,OAAS,OAL/B,YAOPhZ,KAAKtC,MAAM5M,WACsB,eAAjCkP,KAAKtC,MAAM5M,UAAUM,QACjB,iBACA,GAVG,qBAYP4O,KAAKtC,MAAM5E,QACP,iBACAkH,KAAKtC,MAAMsc,gBACVha,KAAKtC,MAAMsb,iBACY,UAAxBhZ,KAAKtC,MAAMwc,SACX,kBACCla,KAAKtC,MAAMsb,iBACZ,sBAEN3rB,MACG2S,KAAKtC,MAAMsc,cAER,GADA,2BAGN1tB,QAAS,YACN,EAAKoR,MAAM5E,SACc,YAAxB,EAAK4E,MAAMwc,UACX,EAAKxc,MAAMsc,gBACV,EAAKtc,MAAMsb,iBACZ,EAAKhB,oBAAmB,IACzB,EAAKta,MAAM5E,SACV,EAAK4E,MAAM5M,WACsB,eAAjC,EAAK4M,MAAM5M,UAAUM,SACrB,EAAKL,aAAa,OApCxB,UAwCGiP,KAAKtC,MAAMob,YAAYhtB,OAAS,GACjCkU,KAAKtC,MAAMsc,gBACVha,KAAKtC,MAAMsb,gBACV,mBAAGjtB,UAAU,YAAb,SACGiU,KAAKib,cAAcjb,KAAKtC,MAAMsc,kBAGhCha,KAAKtC,MAAMsb,iBACV,oBAAGjtB,UAAU,YAAb,yBACe,IACZiU,KAAKtC,MAAMsc,eACVha,KAAKtC,MAAMsc,cACRvjB,oBACAgM,QAAQ,KAAM,QAOxBzC,KAAKtC,MAAMsb,iBACVhZ,KAAKtC,MAAMsc,gBACTte,IAAcC,qBAChBqE,KAAK7V,MAAM6T,SAASzC,oBACpByE,KAAK7V,MAAM6T,SAAS6Z,UACpB7X,KAAK7V,MAAMmG,KAAKwpB,qBACd,cAACmC,EAAA,EAAD,CACEjE,mBAAoBhY,KAAKgY,mBACzBE,eAAgBlY,KAAKkY,eACrBD,gBAAiBjY,KAAKiY,gBACtBa,YAAa9Y,KAAKtC,MAAMob,YACxBC,aAAc/Y,KAAKtC,MAAMqb,aACzBxd,mBACEyE,KAAK7V,MAAM6T,SAASzC,mBAEtB5M,mBAAoBqR,KAAK7V,MAAM6U,gBAC/B6Y,SAAU7X,KAAK7V,MAAM6T,SAAS6Z,SAC9BC,cACE9X,KAAK7V,MAAMmG,KAAKwpB,sBAOvB9Z,KAAKtC,MAAMsb,iBACVhZ,KAAKtC,MAAMsc,gBACTte,IAAchI,aAChBsM,KAAK7V,MAAM6T,SAAS6c,uBACpB7a,KAAK7V,MAAM6T,SAAS6Z,UACpB7X,KAAK7V,MAAMmG,KAAKwpB,qBACd,cAACoC,EAAA,EAAD,CACElE,mBAAoBhY,KAAKgY,mBACzBE,eAAgBlY,KAAKkY,eACrBD,gBAAiBjY,KAAKiY,gBACtBa,YAAa9Y,KAAKtC,MAAMob,YACxBC,aAAc/Y,KAAKtC,MAAMqb,aACzB8B,sBACE7a,KAAK7V,MAAM6T,SAAS6c,sBAEtBhD,SAAU7X,KAAK7V,MAAM6T,SAAS6Z,SAC9BC,cACE9X,KAAK7V,MAAMmG,KAAKwpB,sBAOvB9Z,KAAKtC,MAAMsb,iBACVhZ,KAAKtC,MAAMsc,gBACTte,IAAc8C,aAChBwB,KAAK7V,MAAM6T,SAASkd,UACpBlb,KAAK7V,MAAM6T,SAAS6Z,UACpB7X,KAAK7V,MAAMmG,KAAKwpB,qBACd,cAACqC,EAAA,EAAD,CACEnE,mBAAoBhY,KAAKgY,mBACzBE,eAAgBlY,KAAKkY,eACrBD,gBAAiBjY,KAAKiY,gBACtBa,YAAa9Y,KAAKtC,MAAMob,YACxBC,aAAc/Y,KAAKtC,MAAMqb,aACzBqD,iBAAkBpc,KAAK7V,MAAM6T,SAASkd,SACtCrD,SAAU7X,KAAK7V,MAAM6T,SAAS6Z,SAC9BC,cACE9X,KAAK7V,MAAMmG,KAAKwpB,sBAOvB9Z,KAAKtC,MAAMsb,iBACVhZ,KAAKtC,MAAMsc,gBACTte,IAAc8E,oBAChBR,KAAK7V,MAAM6T,SAAS6Z,UACpB7X,KAAK7V,MAAMmG,KAAKwpB,qBACd,cAAC,EAAD,CACE9B,mBAAoBhY,KAAKgY,mBACzBE,eAAgBlY,KAAKkY,eACrBD,gBAAiBjY,KAAKiY,gBACtBa,YAAa9Y,KAAKtC,MAAMob,YACxBC,aAAc/Y,KAAKtC,MAAMqb,aACzBlB,SAAU7X,KAAK7V,MAAM6T,SAAS6Z,SAC9BC,cACE9X,KAAK7V,MAAMmG,KAAKwpB,oBAElBnC,YAAa3X,KAAKtC,MAAMia,iBAK/B3X,KAAKtC,MAAM5M,WACuB,eAAjCkP,KAAKtC,MAAM5M,UAAUM,SACnB,sBAAMrF,UAAU,eAAhB,SACGiU,KAAKtC,MAAM5M,UAAUO,SAO9B,sBAAKtF,UAAU,qBAAf,UACE,gEACA,sBACEA,UAAS,qEACPiU,KAAKtC,MAAMwb,kBAAoB,OAAS,SADjC,YAGPlZ,KAAKtC,MAAM5M,WACsB,iBAAjCkP,KAAKtC,MAAM5M,UAAUM,QACjB,iBACA,GANG,qBAQ8B,OAArC4O,KAAK7V,MAAM6T,SAASxK,aAChB,cACA,kBAENnG,MAAM,oCACNf,QAAS,YACN,EAAKoR,MAAMwb,mBACV,EAAKzc,SAAS,CAAEyc,mBAAmB,IACrC,EAAKxb,MAAM5M,WACwB,iBAAjC,EAAK4M,MAAM5M,UAAUM,SACrB,EAAKL,aAAa,OAnBxB,UAuBGiP,KAAKtC,MAAM0b,cACXpZ,KAAKtC,MAAMwb,kBACV,mBAAGntB,UAAU,YAAb,SACGiU,KAAKtC,MAAM0b,YAAYljB,UAGzB8J,KAAKtC,MAAMwb,mBACV,mBAAGntB,UAAU,YAAb,2BAMHiU,KAAKtC,MAAMwb,mBACVlZ,KAAK7V,MAAM6T,SAASxK,cAClB,cAAC6oB,EAAA,EAAD,CACEpD,qBAAsBjZ,KAAKiZ,qBAC3BE,eAAgBnZ,KAAKmZ,eACrBC,YAAapZ,KAAKtC,MAAM0b,YACxBkD,gBAAiBtc,KAAK7V,MAAM6T,SAASxK,kBAK5CwM,KAAKtC,MAAM5M,WACuB,iBAAjCkP,KAAKtC,MAAM5M,UAAUM,SACnB,sBAAMrF,UAAU,eAAhB,SACGiU,KAAKtC,MAAM5M,UAAUO,SAO9B,sBAAKtF,UAAU,gBAAf,UACE,4CACA,0BACEA,UAAS,kDACPiU,KAAKtC,MAAM5M,WACsB,kBAAjCkP,KAAKtC,MAAM5M,UAAUM,QACjB,iBACA,kBAJG,aAMT0F,YAAW,gBACXE,MAAO,CAAEC,OAAQ,QACjB3B,MAAO0K,KAAKtC,MAAM4b,aAClBpiB,SAAU,SAACC,GACT,EAAKkiB,gBAAgBliB,EAAEC,OAAO9B,OAC9B,EAAKoI,MAAM5M,WACwB,kBAAjC,EAAK4M,MAAM5M,UAAUM,SACrB,EAAKL,aAAa,OAEtBpF,KAAM,EACN0L,SAAU2I,KAAKtC,MAAMib,cAEtB3Y,KAAKtC,MAAM5M,WACuB,kBAAjCkP,KAAKtC,MAAM5M,UAAUM,SACnB,sBAAMrF,UAAU,eAAhB,SACGiU,KAAKtC,MAAM5M,UAAUO,YAOhC,sBAAKtF,UAAU,4BAAf,UACE,wBACEO,QAAS,kBAAM,EAAKwuB,gBACpB/uB,UAAS,0EACPiU,KAAKtC,MAAMib,aAAe,sBAE5BrgB,KAAK,SACLjB,SAAU2I,KAAKtC,MAAMib,aAAe3Y,KAAKtC,MAAM5E,QANjD,kBAUA,wBACE/M,UAAS,yEACPiU,KAAKtC,MAAMib,aAAe,eAE5BrgB,KAAK,SACLjB,SAAU2I,KAAKtC,MAAMib,aAAe3Y,KAAKtC,MAAM5E,QALjD,SAOGkH,KAAKtC,MAAMib,YAAc,aAAe,kBASlD3Y,KAAKtC,MAAMqb,aAAajtB,OAAS,GAChCkU,KAAK7V,MAAM6T,SAASzC,oBACpByE,KAAKtC,MAAMsc,gBACTte,IAAcC,qBACd,cAAC4gB,EAAA,EAAD,CACE7jB,QAASsH,KAAKma,gBACZna,KAAK7V,MAAM6T,SAASzC,mBACpByE,KAAKtC,MAAMqb,cAEbd,gBAAiBjY,KAAKiY,gBACtBtpB,mBAAoBqR,KAAK7V,MAAM6U,gBAC/BgZ,mBAAoBhY,KAAKgY,mBACzBE,eAAgBlY,KAAKkY,iBAM1BlY,KAAKtC,MAAMqb,aAAajtB,OAAS,GAChCkU,KAAK7V,MAAM6T,SAAS6c,uBACpB7a,KAAKtC,MAAMsc,gBAAkBte,IAAchI,aACzC,cAAC8oB,EAAA,EAAD,CACEjoB,gBAAiByL,KAAK3D,mBACpB2D,KAAK7V,MAAM6T,SAAS6c,sBACpB7a,KAAKtC,MAAMqb,cAEbpqB,mBAAoBqR,KAAK7V,MAAM6U,gBAC/BgZ,mBAAoBhY,KAAKgY,mBACzBE,eAAgBlY,KAAKkY,eACrBD,gBAAiBjY,KAAKiY,kBAM3BjY,KAAKtC,MAAMqb,aAAajtB,OAAS,GAChCkU,KAAK7V,MAAM6T,SAASkd,UACpBlb,KAAKtC,MAAMsc,gBAAkBte,IAAc8C,aAC3CwB,KAAKsa,YACHta,KAAK7V,MAAM6T,SAASkd,SACpBlb,KAAKtC,MAAMqb,eAEX,cAAC0D,EAAA,EAAD,CACEC,gBACE1c,KAAKsa,YACHta,KAAK7V,MAAM6T,SAASkd,SACpBlb,KAAKtC,MAAMqb,cAGff,mBAAoBhY,KAAKgY,mBACzBE,eAAgBlY,KAAKkY,eACrBD,gBAAiBjY,KAAKiY,2B,GAlkChB1W,aAomCTlR,iBAnBS,SAAC,GAWvB,MAAO,CACLC,KAFC,EATHA,KAYE0O,gBAHC,EARH2C,SAYE3D,SAJC,EAPHA,SAYEjJ,QALC,EANHyF,OAWkBzF,WAIoB,CACtCuK,iBACAqd,gBACAtd,oBACAwa,iBACA+B,mBACAJ,gBACAxS,qBACA0S,8BACAC,2BACA1c,wBACAC,2BACAC,sBACA1O,qBAbaJ,CAcZooB,I,sTCnrCUmE,EAAoB,SAACxK,GAChC,8CAAO,WAAOC,GAAP,eAAAlhB,EAAA,6DACLihB,GAAS,EAAM,IADV,SAGHE,cAHG,SAIe/f,IAAMggB,IAAN,UACb1kB,IAAIsK,KADS,cAJf,OAIGzF,EAJH,OAOH2f,EAAkC,CAChC/Z,KAAMoa,IAAYmK,oBAClBlK,QAASjgB,EAAI9G,OAEfwmB,GAAS,EAAO,IAXb,kDAaHzf,QAAQC,IAAI,CAAEqB,WAAW,EAAD,KACxBme,GAAS,EAAOhf,YAAY,EAAD,KAdxB,0DAAP,uDAmBW0pB,EAAuB,SAAClxB,GAInC,8CAAO,WAAOymB,GAAP,SAAAlhB,EAAA,sDACLkhB,EAAsC,CACpC/Z,KAAMoa,IAAYqK,wBAClBpK,QAAS/mB,IAHN,2CAAP,uDAUWoxB,EAAgB,SAAC5K,GAC5B,8CAAO,WAAOC,GAAP,iBAAAlhB,EAAA,6DACLihB,GAAS,EAAM,IADV,SAGHE,cAHG,SAIe/f,IAAMggB,IAAN,UAOb1kB,IAAIsK,KAPS,mBAJf,OAIGzF,EAJH,OAYCqoB,EAAkCroB,EAAI9G,KAAKK,KAAI,SAACL,GAAD,MAAW,CAC5DoC,GAAIpC,EAAKoC,GACTivB,KAAMrxB,EAAKyB,MACX4Y,IAAKra,EAAKqa,IACViX,UAAWtxB,EAAKsxB,cAElB7K,EAA8B,CAC5B/Z,KAAMoa,IAAYyK,gBAClBxK,QAASoI,IAEX3I,GAAS,EAAO,GAAI2I,GAtBjB,kDAwBHpoB,QAAQC,IAAI,CAAEqB,WAAW,EAAD,KACxBme,GAAS,EAAOhf,YAAY,EAAD,KAzBxB,0DAAP,uDAgCWgM,EAAe,SAACgT,GAC3B,8CAAO,WAAOC,GAAP,eAAAlhB,EAAA,6DACLihB,GAAS,EAAM,IADV,SAGHE,cAHG,SAIe/f,IAAMggB,IAAN,UAA4B1kB,IAAI6F,YAAhC,cAJf,OAIGhB,EAJH,OAKH2f,EAA6B,CAC3B/Z,KAAMoa,IAAY0K,aAClBzK,QAASjgB,EAAI9G,OAEfwmB,GAAS,EAAO,IATb,kDAWHzf,QAAQC,IAAI,CAAEqB,WAAW,EAAD,KACxBme,GAAS,EAAOhf,YAAY,EAAD,KAZxB,0DAAP,uDAqCWiqB,EAAiB,SAACzxB,GAE7B,OADA+G,QAAQC,IAAI,CAAEyqB,eAAgBzxB,IAC9B,uCAAO,WAAOymB,GAAP,SAAAlhB,EAAA,sDACLkhB,EAAsC,CACpC/Z,KAAMoa,IAAY4K,gBAClB3K,QAAS/mB,IAHN,2CAAP,uDAQW2xB,EAAkB,SAAC3xB,GAI9B,8CAAO,WAAOymB,GAAP,SAAAlhB,EAAA,sDACLkhB,EAAgC,CAC9B/Z,KAAMoa,IAAY8K,iBAClB7K,QAAS/mB,IAHN,2CAAP,wD,qUC7MW6xB,EAAmB,SAC9BC,GAEA,IAD4C,EACxChrB,EAA+C,GADP,cAEzBgrB,GAFyB,IAE5C,2BAA4B,CAAC,IAApBC,EAAmB,QAC1BjrB,EAAG,sBACEA,GADF,CAED,CACE1E,GAAI2vB,EAAO3vB,GACXsH,MAAOqoB,EAAOroB,MACdG,OAAQkoB,EAAOloB,WARuB,8BAY5C,OAAO/C,GAGIkrB,EAAc,SACzBF,GAEA,IADuC,EACnChrB,EAA0C,GADP,cAEpBgrB,GAFoB,IAEvC,2BAA4B,CAAC,IAApBC,EAAmB,QAC1BjrB,EAAG,sBACEA,GADF,CAED,CACE1E,GAAI2vB,EAAO3vB,GACXsH,MAAOqoB,EAAOroB,MACdG,OAAQkoB,EAAOloB,WARkB,8BAYvC,OAAO/C,GAGImrB,EAAa,SACxBH,GAEA,IADsC,EAClChrB,EAAyC,GADP,cAEnBgrB,GAFmB,IAEtC,2BAA4B,CAAC,IAApBC,EAAmB,QAC1BjrB,EAAG,sBACEA,GADF,CAED,CACE1E,GAAI2vB,EAAO3vB,GACXsH,MAAOqoB,EAAOroB,MACdG,OAAQkoB,EAAOloB,WARiB,8BAYtC,OAAO/C,GAGIorB,EAAqB,SAChCJ,GAEA,IAD8C,EAC1ChrB,EAAiD,GADP,cAE3BgrB,GAF2B,IAE9C,2BAA4B,CAAC,IAApBC,EAAmB,QAC1BjrB,EAAG,sBACEA,GADF,CAED,CACE1E,GAAI2vB,EAAO3vB,GACXsH,MAAOqoB,EAAOroB,MACdG,OAAQkoB,EAAOloB,WARyB,8BAY9C,OAAO/C,GAGIqrB,EAAgB,SAC3BL,GAEA,IADyC,EACrChrB,EAA4C,GADP,cAEtBgrB,GAFsB,IAEzC,2BAA4B,CAAC,IAApBC,EAAmB,QAC1BjrB,EAAG,sBACEA,GADF,CAED,CACE1E,GAAI2vB,EAAO3vB,GACXsH,MAAOqoB,EAAOroB,MACdG,OAAQkoB,EAAOloB,WARoB,8BAYzC,OAAO/C,GAGIsrB,EAAc,SACzBN,GAEA,IADuC,EACnChrB,EAA0C,GADP,cAEpBgrB,GAFoB,IAEvC,2BAA4B,CAAC,IAApBC,EAAmB,QAC1BjrB,EAAG,sBACEA,GADF,CAED,CACE1E,GAAI2vB,EAAO3vB,GACXsH,MAAOqoB,EAAOroB,MACdG,OAAQkoB,EAAOloB,WARkB,8BAYvC,OAAO/C,GAGIurB,EAA6B,SACxCP,GAEA,IADsD,EAClDhrB,EAAyD,GADP,cAEnCgrB,GAFmC,IAEtD,2BAA4B,CAAC,IAApBC,EAAmB,QAC1BjrB,EAAG,sBACEA,GADF,CAED,CACE1E,GAAI2vB,EAAO3vB,GACXsH,MAAOqoB,EAAOroB,MACdG,OAAQkoB,EAAOloB,WARiC,8BAYtD,OAAO/C,GAGIwrB,EAAU,SAACR,GACtB,IADyE,EACrEhrB,EAAsC,GAD+B,cAEtDgrB,GAFsD,IAEzE,2BAA4B,CAAC,IAApBC,EAAmB,QAC1BjrB,EAAG,sBACEA,GADF,CAED,CACE1E,GAAI2vB,EAAO3vB,GACXsH,MAAOqoB,EAAOroB,MACdG,OAAQkoB,EAAOloB,WARoD,8BAYzE,OAAO/C,I,iCC/IT,wBAsBeuU,IAnBG,WAChB,OACE,qBAAKlb,UAAU,OAAf,SACE,sBAAKA,UAAU,oHAAf,UACE,cAAC,IAAD,CAAeA,UAAU,yBACzB,sBAAKA,UAAU,4BAAf,UACE,sBAAMA,UAAU,sCAAhB,kCAGA,sBAAMA,UAAU,UAAhB,uG,iCCZV,gBAoCeoV,IA/BmC,SAAChX,GACjD,IAAMg0B,EAAc,WAElB,IADA,IAAIC,EAAsB,GACjBlyB,EAAQ,EAAGA,EAAQ/B,EAAM4M,KAAM7K,IACtCkyB,EAAUnuB,KAAK/D,GAUjB,OARakyB,EAAUnyB,KAAI,SAACmF,GAC1B,OACE,oBAAIrF,UAAU,oCAAd,SACE,qBAAKA,UAAU,yGADsCqF,OAQ7D,OACE,qCACE,oBAAIrF,UAAU,2BAAd,SACGoyB,KAD2C,KAG9C,oBAAIpyB,UAAU,2BAAd,SACGoyB,KAD2C,OAG9C,oBAAIpyB,UAAU,2BAAd,SACGoyB,KAD2C,a,iCC7BpD,0GAwVYE,EA+IAC,EAmBA3mB,EA1fZ,S,SAwVY0mB,K,sBAAAA,E,sBAAAA,E,qBAAAA,M,cA+IAC,K,cAAAA,E,0BAAAA,E,cAAAA,E,cAAAA,E,cAAAA,E,4BAAAA,E,oBAAAA,E,oBAAAA,E,UAAAA,E,YAAAA,E,kBAAAA,E,sDAAAA,E,gBAAAA,E,wBAAAA,E,oBAAAA,E,iBAAAA,M,cAmBA3mB,K,oBAAAA,E,qBAAAA,M,KAgNE4mB,IAAkB7qB,YAKlB6qB,IAAkB5iB,oBAKlB4iB,IAAkB/f,YAKlB+f,IAAkBhe,kBAKlBge,IAAkB/d,oB,6ECrrB1B2C,EAAa,CACjBC,aAAc,EACdC,YAAY,EACZC,YAAa,MACbC,YAAa,WA4NAX,IAzNsC,SAACzY,GACpD,MAA8BC,oBAAkB,GAAhD,mBAAO0O,EAAP,KAAgBC,EAAhB,KACA,EAA8B3O,mBAAsB,CAClDo0B,MAAO,CACLC,OAAQ,CACNC,mBAAoB,SAACC,EAAOC,EAAcC,GACxClsB,QAAQC,IAAI,CACVksB,aAAcD,EAAOpW,EAAEoW,OAAOlc,OAAOkc,EAAOE,kBAG1C50B,EAAM60B,iBACR70B,EAAM60B,gBAAgBH,EAAOE,eAAgBF,EAAOI,eAM1Dzb,UAASrZ,EAAMqZ,SAAUrZ,EAAMqZ,SAEjCuE,YAAa,CACXmX,IAAK/0B,EAAMgZ,WAAahZ,EAAMgZ,WAAaA,GAE7CR,OAAQxY,EAAMwY,OACdG,WAAY,CACVqc,SAAS,GAEXC,MAAO,CACLzc,OAAQ,CACN0c,QAAS,IAEXC,WAAYn1B,EAAM0Y,gBAClB0c,cAAe,MAEjBC,MAAO,CACLnyB,MAAO,CACLoyB,KAAMt1B,EAAM4Y,YAGhB2c,KAAM,CACJC,QAAS,GAEXC,QAAS,CACPrO,EAAG,CACDlJ,UAAW,SAAUC,GACnB,OAAOA,EAAM,IAAMne,EAAM6Y,eAI/B6c,KAAM,CACJn0B,QAAS,CACPo0B,KAAM,GACNC,MAAO,KAGXC,OAAQ,CACNP,KAAM,gBACNQ,MAAO,SACPC,cAAe,YAvDnB,mBAAO1Y,EAAP,KAAgB2Y,EAAhB,KAkMA,OAvIA9mB,qBAAU,WACJlP,EAAM+Y,QAAU/Y,EAAM+Y,OAAOpX,OAAS,GAAKgN,EAC7CqnB,EAAW,CACT3B,MAAO,CACLhb,UAASrZ,EAAMqZ,SAAUrZ,EAAMqZ,QAC/Bib,OAAQ,CACNC,mBAAoB,SAACC,EAAOC,EAAcC,GACxClsB,QAAQC,IAAI,CACVwtB,aAAcvB,EAAOpW,EAAEoW,OAAOlc,OAAOkc,EAAOE,kBAE1C50B,EAAM60B,iBACR70B,EAAM60B,gBACJH,EAAOE,eACPF,EAAOI,eAKfoB,KAAM,CACJlB,SAAS,EACTmB,gBAAgB,IAGpBvY,YAAa,CACXmX,IAAK/0B,EAAMgZ,WAAahZ,EAAMgZ,WAAaA,GAE7CR,OAAQxY,EAAMwY,OACdG,WAAY,CACVqc,SAAS,GAEXC,MAAO,CACLzc,OAAQ,CACN0c,QAAS,IAEXC,WAAYn1B,EAAM0Y,gBAClB0c,cAAe,MAEjBC,MAAO,CACLnyB,MAAO,CACLoyB,KAAMt1B,EAAM4Y,YAGhB2c,KAAM,CACJC,QAAS,GAEXC,QAAS,CACPrO,EAAG,CACDlJ,UAAW,SAAUC,GACnB,OAAOA,EAAM,IAAMne,EAAM6Y,eAI/B6c,KAAM,CACJn0B,QAAS,CACPo0B,KAAM,GACNC,MAAO,KAGXC,OAAQ,CACNP,KAAM,gBACNQ,MAAO,SACPC,cAAe,UAEjBhd,OAAQ/Y,EAAM+Y,SAEPpK,GACTqnB,EAAW,CACT3B,MAAO,CACLhb,UAASrZ,EAAMqZ,SAAUrZ,EAAMqZ,QAC/Bib,OAAQ,CACNC,mBAAoB,SAACC,EAAOC,EAAcC,GACxClsB,QAAQC,IAAI,CACVksB,aAAcD,EAAOpW,EAAEoW,OAAOlc,OAAOkc,EAAOE,kBAG1C50B,EAAM60B,iBACR70B,EAAM60B,gBACJH,EAAOE,eACPF,EAAOI,eAOfoB,KAAM,CACJlB,SAAS,EACTmB,gBAAgB,IAGpBvY,YAAa,CACXmX,IAAK/0B,EAAMgZ,WAAahZ,EAAMgZ,WAAaA,GAE7CR,OAAQxY,EAAMwY,OACdG,WAAY,CACVqc,SAAS,GAEXC,MAAO,CACLzc,OAAQ,CACN0c,QAAS,IAEXC,WAAYn1B,EAAM0Y,gBAClB0c,cAAe,MAEjBC,MAAO,CACLnyB,MAAO,CACLoyB,KAAMt1B,EAAM4Y,YAGhB2c,KAAM,CACJC,QAAS,GAEXC,QAAS,CACPrO,EAAG,CACDlJ,UAAW,SAAUC,GACnB,OAAOA,EAAM,IAAMne,EAAM6Y,eAI/B6c,KAAM,CACJn0B,QAAS,CACPo0B,KAAM,GACNC,MAAO,KAGXC,OAAQ,CACNP,KAAM,gBACNQ,MAAO,SACPC,cAAe,YAIrBnnB,GAAW,KACV,CAACD,EAAS0O,EAASrd,IAElB2O,EAEA,qBAAK/M,UAAU,kEAAf,6BAOF,qBAAKA,UAAU,SAAf,SACE,cAAC,IAAD,CACEyb,QAASA,EACTvE,OAAQ9Y,EAAM8Y,OACd3K,KAAK,MACLwQ,MAAM,OACNyX,OAAQp2B,EAAMq2B,YAAcr2B,EAAMq2B,iBAAchV,Q,iCCnQxD,kCA+EeiV,IAtEsC,SAACt2B,GA8CpD,OACE,8BACE,cAAC,IAAD,CACEoB,QAAS,CACP,CAAEC,YAAa,IAAKC,UAAW,OAAQC,QAAS,OAChD,CAAEF,YAAa,gBAAiBC,UAAW,OAAQC,QAAS,OAM5D,CAAEF,YAAa,WAAYC,UAAW,OAAQC,QAAS,OACvD,CAAEF,YAAa,SAAUC,UAAW,OAAQC,QAAS,QAGvDC,KA5DY,WAChB,IAAIC,EAA4CzB,EAAM0B,aAGtD,OAAoB,IAAhBD,EAAKE,OACA,CACL,oBAAcC,UAAU,6CAAxB,SACE,oBAAIA,UAAU,kBAAkBC,QAAS,EAAzC,4BADO,MAQNJ,EAAKK,KAAI,SAACf,EAAMgB,GAAP,OACd,qBAEEH,UAAU,6CAFZ,UAIE,oBAAIA,UAAU,kCAAd,SAAiDG,EAAQ,IACzD,oBAAIH,UAAU,gBAAd,SACE,+BAAOb,EAAKkB,sBAEd,oBAAIL,UAAU,gBAAd,SACE,+BACGhB,YAAgBG,EAAKJ,UAAY,eAAiBI,EAAKmB,gBAG5D,oBAAIN,UAAU,+BAAd,SACGhB,YAAgBG,EAAKJ,UACpBI,EAAKiF,qBACH,sBAAMpE,UAAU,kBAAhB,sBAEA,WAEAb,EAAK8E,SACP,sBAAMjE,UAAU,kBAAhB,sBAEA,eAtBCG,EAAQhB,EAAKJ,cA6ClByB,YAAY,EACZC,QAAQ,EACRC,QAAQ,a,iCCzEhB,0CA2Cei0B,IA9BqC,SAAC,GAM9C,IALLC,EAKI,EALJA,SACAC,EAII,EAJJA,SAII,IAHJC,eAGI,MAHM,QAGN,MAFJ90B,iBAEI,MAFQ,0IAER,MADJ+0B,gBACI,SAaJ,OACE,yBACEx0B,QAAS,SAAC6K,GAAD,OAVO,SAAC4pB,EAAgBH,GACnC,IACMI,EAAK,CAAEC,OAAQ,CAAEr1B,KADZs1B,QAAWC,cAAcJ,IACDK,WAAY,CAAC,SAC1CC,EAAcH,QAAWF,EAAI,CAAEM,SAAU,OAAQhpB,KAAM,UACvD1M,EAAO,IAAI21B,KAAK,CAACF,GAAc,CAAE/oB,KAPvC,oFAQAkpB,SAAiB51B,EAAMg1B,EAPH,SAYFa,CAAYd,EAAUC,IACtC70B,UAAWA,EAFb,UAIG+0B,GAAY,cAAC,IAAD,IACZD,O,+GCtCQ,MAA0B,oCCGzCa,EAAQ,KAED,IAAMC,EAAa,SAAC7lB,GACzB,IAAM8lB,EAAY9lB,EAAI+lB,SAASC,mBAE/BhmB,EAAIimB,QAAQ,YAAa,UACzBjmB,EAAIkmB,YAAY,GAChB,IAAK,IAAIroB,EAAI,EAAGA,GAAKioB,EAAWjoB,IAC9BmC,EAAImmB,QAAQtoB,GACZmC,EAAI2jB,KACF,QAAUyC,OAAOvoB,GAAK,OAASuoB,OAAON,GACtC9lB,EAAI+lB,SAASrS,SAAS1G,MAAQ,EAC9B,IACA,CACEmX,MAAO,YAiBFkC,EAAW,uCAAG,WACzBC,EACAzT,EACA0T,GAHyB,6BAAAlxB,EAAA,sDA8EzB,IAzEAkxB,GAAS,GACHC,EAAyBF,EAAeE,YAC1CF,EAAeE,YACf,IACAC,EAAkB,GACA,GACA,KAGlBzmB,EAAW,IAAI0mB,UAAMF,EAAa,KAAM,OAExCG,aAAa,GAAI,GAAI,IACzB3mB,EAAIkmB,YAAY,IAQhBlmB,EAAI4mB,SAASC,EAAM,MAAO,GAAI,GAAI,GAAI,IACtC7mB,EAAI2jB,KAAK,UAAW,GAAI,UAAMjU,EAAW,QAEzC1P,EAAIkmB,YAAY,IAChBlmB,EAAI2jB,KACF2C,EAAe/0B,MACfyO,EAAI+lB,SAASrS,SAASoT,WAAa,EACnC,UACApX,EACA,UAGF1P,EAAIkmB,YAAY,IAChBlmB,EAAI2jB,KACF2C,EAAeS,UACf/mB,EAAI+lB,SAASrS,SAASoT,WAAa,EACnC,UACApX,EACA,UAIFsX,EAAQhnB,EAAIinB,gBACVX,EAAeY,QACfC,KAWFnnB,EAAIkmB,YAAY,IAMZzQ,EAAI,GAERzV,EAAI2mB,aAAa,GAAI,GAAI,IACzB3mB,EAAI2jB,KAAJ,UAAY2C,EAAec,aAA3B,MAA6CX,EAAShR,GACtDzI,EAAQhN,EAAIqnB,aAAJ,UAAoBf,EAAec,aAAnC,OAORpnB,EAAI2mB,aAAa,GAAI,GAAI,IAChB9oB,EAAI,EAAGA,EAAImpB,EAAMh3B,OAAQ6N,IAC5B4X,EAAI,MACNA,EAAI,GACJzV,EAAIsnB,WAGNtnB,EAAI2jB,KAAKqD,EAAMnpB,GAAI4oB,EAAUzZ,EAAOyI,GACpCA,GAAQ,EArFe,OAuFzBzV,EAAI2mB,aAAa,GAAI,GAAI,IACzB3mB,EAAI2jB,KAAK,WAAY8C,EAAShR,EAAI,GAClCzI,EAAQhN,EAAIqnB,aAAa,YACzBrnB,EAAI2mB,aAAa,GAAI,GAAI,IACzB3mB,EAAI2jB,KAAK2C,EAAe7nB,OAAQgoB,EAAUzZ,EAAOyI,EAAI,GAErDzV,EAAIunB,UAAU,CACZC,KAAM3U,EACN4U,OAAQ,GACRC,OAAQ,CAAEngB,WAAY,IACtBogB,YAAa,EAEbC,UAAW,GAEXC,WAAY,CAAEC,OAAQ,OACtBC,aAAc,CAAEvxB,MAAO,CAAEwxB,UAAW,SACpCl3B,MAAO,UACPm3B,YAAY,IAGdjoB,EAAIkmB,YAAY,IACZgC,EAASloB,EAAImoB,cAAcD,OAC/BloB,EAAI2jB,KAAJ,uBAAyB2C,EAAe8B,QAAU3B,EAASyB,EAAS,IACpEloB,EAAI2jB,KACF,wBAA0B3pB,aAAK,IAAI8W,MAAOrC,YAC1CgY,EACAyB,EAAS,IAGXrC,EAAW7lB,GApHc,UAqHnBA,EACHqoB,KADG,UAGA/B,EAAe/0B,MACf,KACA+0B,EAAeY,QACf,KACAZ,EAAe7nB,OAPf,QASF,CAAE6pB,eAAe,IAElBC,KAAKhC,GAAS,IAhIQ,4CAAH,2D,gKCpBlBiC,EAAgB,SACpBtd,EACAud,GAEA,IAAI/oB,EAAoC,GAWxC,OAVAwL,EAAQvB,SAAQ,SAACrU,GACf,GAAIA,EAAQwJ,YAAc,IAAK,CAC7B,IAAIhP,EAAOwF,EACXxF,EAAKoJ,YAAc2K,EAAc4kB,EAAYnzB,EAAQoJ,QACjDmF,EAAc4kB,EAAYnzB,EAAQoJ,QAASxF,YAC3C,eACJwG,EAAOvL,KAAKrE,OAIT4P,GAGImE,EAAgB,SAAC5K,EAAmBG,GAC/C,OAAOH,EAAQ3J,MAAK,SAACF,GAAD,OAAUA,EAAKgK,YAAcA,MAGtCwK,EAAuB,SAClCsH,EACAwd,GAEA,OAAOxd,EAAQ5b,MAAK,SAACF,GAAD,OAAUA,EAAKsO,kBAAoBgrB,MA2J1Cn0B,iBATS,SAAC,GAKvB,MAAO,CACL0E,QAFC,EAHHyF,OAKkBzF,WAGoB,GAAzB1E,EA/GmC,SAAClG,GACjD,MAAsCC,mBAAiB,IAAvD,mBAAOqtB,EAAP,KAAoBC,EAApB,KAEA,OACE,oCAEE,sBAAK3rB,UAAU,gCAAf,UACE,cAAC,KAAD,CAAUA,UAAU,0BACpB,uBACEuM,KAAK,OACLxB,YAAY,SACZ/K,UAAU,qFACVmL,SAAU,SAACC,GAAD,OAAOugB,EAAevgB,EAAEC,OAAO9B,QACzCA,MAAOmiB,EACPpgB,YACGlN,EAAM4K,SACPuvB,EAAcn6B,EAAMiyB,iBAAkBjyB,EAAM4K,SAAS9J,QACnD,SAACC,GAAD,OACE0sB,YACEztB,EAAM0tB,SACN1tB,EAAM2tB,cAAc3Z,gBACpBjT,EAAKsO,oBAET1N,OAAS,KAKf,wBACEC,UAAU,4EACVuM,KAAK,SACLhM,QAAS,WACPnC,EAAM6tB,oBAAmB,GACzB7tB,EAAM8tB,gBAAgB,KAL1B,sBAWwC,IAE1C,qBAAKlsB,UAAU,4DAAf,SACG5B,EAAM4K,SACPuvB,EAAcn6B,EAAMiyB,iBAAkBjyB,EAAM4K,SAAS9J,QAAO,SAACC,GAAD,OAC1D0sB,YACEztB,EAAM0tB,SACN1tB,EAAM2tB,cAAc3Z,gBACpBjT,EAAKsO,oBAEP1N,OAAS,EACTU,YACE83B,EAAcn6B,EAAMiyB,iBAAkBjyB,EAAM4K,SAAS9J,QACnD,SAACC,GAAD,OACE0sB,YACEztB,EAAM0tB,SACN1tB,EAAM2tB,cAAc3Z,gBACpBjT,EAAKsO,oBAGXie,GACAxrB,KAAI,SAACf,EAA+BgB,GAAhC,OACJ,sBACEH,UAAS,yEACP5B,EAAM2uB,cAAgB5tB,EAAKsO,iBAC3B,yCAHJ,UAOE,qBACEzN,UAAU,iCACVO,QAAS,WACPnC,EAAM6tB,oBAAmB,GACzB7tB,EAAM+tB,eAAehtB,EAAKsO,kBAJ9B,SAOE,mBAAGzN,UAAU,mCAAb,SACGb,EAAK8J,gBAGV,wBACEsD,KAAK,SACLvM,UAAU,uGACVO,QAAS,WACPnC,EAAM8tB,gBAAgB/sB,EAAKsO,kBAJ/B,oBAbKtN,EAAQhB,EAAKsO,oBAyBtB,qBAAKzN,UAAU,kBAAf,SACE,mBAAGA,UAAU,mCAAb,iD,sOC1JN04B,EAAmB,SAAClzB,GACxB,GAA8B,IAA1BA,EAAUG,YAAmB,CAC/B,IAAMgzB,EAAanzB,EAAUC,OAAOpG,MAAK,SAACF,GAAD,OAAyB,IAAfA,EAAKuG,SACxD,GAAIizB,GACEA,EAAWzyB,wBAA0Ba,IAAoB0D,SAC3D,OAAO,EAIb,OAAO,GAGID,EAAmB,SAC9BhF,EACAE,GAMA,QAJmBF,EAAUC,OAAOpG,MAClC,SAACF,GAAD,OACEA,EAAKuG,QAAUA,GAASvG,EAAKy5B,eAAiBhuB,IAAYiuB,cA8SjDv0B,gBAAQ,KAAM,CAC3Bw0B,kBACAp0B,qBAFaJ,EAxQmC,SAAClG,GACjD,IAAMgxB,EAAY,uCAAG,4BAAAhqB,EAAA,0DACfpG,YAAgBZ,EAAM26B,eADP,yCAEV36B,EAAM4G,aAAa,CACxBK,QAAS,UACTC,IAAK,gCAJU,UAOdlH,EAAMoH,UAPQ,yCAQVpH,EAAMsG,eAAe,CAC1BpD,MAAO,wBACPT,MAAOqG,IAAgB8xB,WAVR,cAcnB56B,EAAMwG,mBAAkB,GAdL,SAgBjB2hB,cAhBiB,SAiBC/f,IAAMC,IAAN,UACb3E,IAAI4E,SADS,yBACgBtI,EAAMoH,UAAUzB,KAChD,CACEoG,OAAQ/L,EAAM26B,gBApBD,OAiBXpyB,EAjBW,OAuBjBC,QAAQC,IAAI,CAAEF,IAAKA,EAAI9G,OACJ,MAAf8G,EAAI+C,QAAiC,MAAf/C,EAAI+C,SAC5BtL,EAAM06B,cAAcnyB,EAAI9G,MACxBzB,EAAMsG,eAAe,CACnBpD,MAAO,wBACPT,MAAOqG,IAAgBC,UAEzB/I,EAAM66B,iBAAiB,IACvB76B,EAAM86B,eAAc,IA/BL,kDAkCjBtyB,QAAQQ,MAAM,CAAEA,MAAK,OACrBhJ,EAAMsG,eAAe,CACnBpD,MAAO+F,YAAY,EAAD,IAClBxG,MAAOqG,IAAgBI,SArCR,QAwCnBlJ,EAAMwG,mBAAkB,GAxCL,0DAAH,qDA2CZ2C,EAAgB,SACpBC,GAEA,GAAIpJ,EAAMqJ,aACR,OAAOrJ,EAAMqJ,aAAapI,MAAK,SAACF,GAAD,OAAUA,EAAK8C,KAAOuF,MAKzD,OACE,0BAASxH,UAAU,GAAnB,UACE,sBAAKA,UAAU,iDAAf,UAEE,0BAASA,UAAU,gBAAnB,UACE,sBAAKA,UAAU,oCAAf,UACE,sBAAKA,UAAU,gDAAf,UACE,sBAAMA,UAAS,SAAf,oBACA,sBAAMA,UAAU,kCAAhB,SACGssB,YAAiBluB,EAAMwE,mBAAoBxE,EAAMuO,SAASmD,UAG/D,wBACEvD,KAAK,SACLvM,UAAU,uGACVO,QAAS,kBAAMnC,EAAMoO,cAAcpO,EAAMqO,YAH3C,SAKGrO,EAAMqO,UAAY,OAAS,YAGhC,sBAAKzM,UAAU,gDAAf,UACE,sBAAMA,UAAS,SAAf,qBACA,sBACEA,UAAS,oBAC6B,aAApC5B,EAAMuO,QAAQvN,kBACV,kBACA,gBAHG,sBADX,SAOGwK,YAAsBxL,EAAMuO,QAAQvN,wBAGzC,sBAAKY,UAAU,gDAAf,UACE,sBAAMA,UAAS,SAAf,2BACA,sBAAMA,UAAU,gBAAhB,SACG5B,EAAMoH,UAAUiE,SAASI,UAAUC,UAGxC,sBAAK9J,UAAU,+CAAf,UACE,sBAAMA,UAAS,SAAf,qBACA,sBAAMA,UAAU,cAAhB,SACG5B,EAAMuO,QAAQb,aAAajE,aAK/BzJ,EAAMqO,WACL,qBAAKzM,UAAU,gDAAf,SACE,qBACE6B,IAAG,UAAKC,IAAIC,WAAT,YAAuB3D,EAAMuO,QAAQjL,OACxCM,IAAI,WACJhC,UAAS,kDAWhB5B,EAAMoH,UAAUC,OAAO1F,OAAS,GAC/B3B,EAAMoH,UAAUC,OAAOvF,KAAI,SAACmK,EAAOlK,GAAR,OACzB,0BAASH,UAAU,0BAAnB,UAEE,sBAAKA,UAAU,kCAAf,UACE,sBAAKA,UAAU,wDAAf,UACE,cAAC,IAAD,IACCuH,EAAcnJ,EAAMoH,UAAU8E,uBAC3B/C,EAAcnJ,EAAMoH,UAAU8E,uBAC3BH,OACH,MAEN,4BAAIE,EAAMF,SACV,sBAAMnK,UAAU,wBAAhB,SACGuK,YAASF,EAAML,gBAKnBQ,EAAiBpM,EAAMoH,UAAW6E,EAAM3E,QACvC,0BAAS1F,UAAU,OAAnB,UACE,uBAAMA,UAAU,qCAAhB,6BACmBG,EAAQ,EAD3B,OAGA,sBAAKH,UAAU,aAAf,UACE,sBAAKA,UAAU,gDAAf,UACE,sBAAMA,UAAS,SAAf,qBACA,sBACEA,UAAS,oBACPqK,EAAMnE,wBACNa,IAAoB0D,SAChB,kBACA,gBAJG,sBADX,SAQGb,YACCS,EAAMnE,sBAAsBwE,0BAIlC,sBAAK1K,UAAU,gDAAf,UACE,sBAAMA,UAAS,SAAf,2BACA,sBAAMA,UAAU,gBAAhB,SACGqK,EAAMR,UAAUC,UAGrB,sBAAK9J,UAAU,+CAAf,UACE,sBAAMA,UAAS,SAAf,qBACA,sBAAMA,UAAU,cAAhB,SACGqK,EAAMvE,gCA/C+B3F,EAAQkK,EAAMpI,UA0DtE,qCACI7D,EAAM+6B,YACN,sBAAKn5B,UAAU,mDAAf,UACE,sBACEA,UAAS,UACP5B,EAAMoH,UAAUmF,oBAAsBC,IAAYC,QAC9C,kBACAzM,EAAMoH,UAAUmF,oBAAsBC,IAAYE,QAClD,eACA,iBALG,yBADX,SASGlB,YACCxL,EAAMoH,UAAUmF,kBAAkBD,uBAIrCguB,EAAiBt6B,EAAMoH,YACtB,wBACExF,UAAU,eACVO,QAAS,kBAAMnC,EAAM86B,eAAc,IACnC5tB,SAAUlN,EAAMuG,eAHlB,wBAWLvG,EAAM+6B,YACL,sBAAKn5B,UAAU,kEAAf,UACE,sBAAKA,UAAU,cAAf,UACE,0BACE+K,YAAW,4BACXC,KAAM,GACNpL,KAAM,EACNI,UAAS,wBACP5B,EAAM2G,WAAyC,YAA5B3G,EAAM2G,UAAUM,QAC/B,MACA,OAHG,oDAKT4F,MAAO,CAAEC,OAAQ,QACjB3B,MAAOnL,EAAM26B,cACb5tB,SAAU,SAACC,GACThN,EAAM66B,iBAAiB7tB,EAAEC,OAAO9B,OAChCnL,EAAM4G,aAAa,OAErBsG,SAAUlN,EAAMuG,iBAEjBvG,EAAM2G,WAAyC,YAA5B3G,EAAM2G,UAAUM,SAClC,mBAAGrF,UAAU,eAAb,SAA6B5B,EAAM2G,UAAUO,SAGjD,sBAAKtF,UAAU,kDAAf,UACE,yBACEA,UAAU,iIACVO,QAAS,WACPnC,EAAM66B,iBAAiB,IACvB76B,EAAM86B,eAAc,GACpB96B,EAAM4G,aAAa,OAErBsG,SAAUlN,EAAMuG,eAPlB,UASE,cAAC,IAAD,CAAmB3E,UAAU,YAC7B,2CAEF,wBACEA,UAAU,iIACVsL,SAAUlN,EAAMuG,eAChBpE,QAAS,kBAAM6uB,KAHjB,SAKGhxB,EAAMuG,eACL,qBAAK3E,UAAU,GAAf,wBAEA,sBAAKA,UAAU,2CAAf,UACE,cAAC,IAAD,CAAkBA,UAAU,YAC5B,gE,iCCzUpB,oHAmBao5B,EAAyC,SACpDz2B,EACAC,GAMA,IAAIC,EAAqD,GACrDC,EAA8D,GAChEC,EAAkC,GAChCC,EAAiE,GACnEC,EAAqC,GAEnCnD,EAAe6C,EAAa7C,aAP7B,WASMoD,GACP,IAAIC,EAAmBrD,EAAaoD,GAEhCE,EAAeR,EAAmBS,iBAClCT,EAAmBS,iBAAiBhE,MAClC,SAACF,GAAD,OACEA,EAAKmE,0BACLH,EAAiBG,4BAChB,CACHhC,MAAOsB,EAAmBS,iBAAiBhE,MACzC,SAACF,GAAD,OACEA,EAAKmE,0BACLH,EAAiBG,2BAClBhC,MACHgC,wBAAyBV,EAAmBS,iBAAiBhE,MAC3D,SAACF,GAAD,OACEA,EAAKmE,0BACLH,EAAiBG,2BAClBA,yBAEL,CACEhC,MAAO,GACPgC,wBAAyBH,EAAiBG,yBAG5CE,EAAkBZ,EAAmBa,qBACrCb,EAAmBa,oBAAoBpE,MACrC,SAACF,GAAD,OACEA,EAAKuE,6BACLP,EAAiBO,8BAEnB,CACEpC,MAAOsB,EAAmBa,oBAAoBpE,MAC5C,SAACF,GAAD,OACEA,EAAKuE,6BACLP,EAAiBO,8BAClBpC,MACHoC,2BACEd,EAAmBa,oBAAoBpE,MACrC,SAACF,GAAD,OACEA,EAAKuE,6BACLP,EAAiBO,8BAClBA,2BACL7E,YAAa+D,EAAmBa,oBAAoBpE,MAClD,SAACF,GAAD,OACEA,EAAKuE,6BACLP,EAAiBO,8BAClB7E,aAQP,CACEyC,MAAO,GACPoC,2BACEP,EAAiBO,2BACnB7E,YAAa,IAGnB,GAAIuE,EAAc,CAAC,IAAD,WACPQ,GAEP,IAAIC,EAAYjB,EAAmBkB,gBAC/BlB,EAAmBkB,eAAezE,MAChC,SAACF,GAAD,OACEA,EAAK4E,MACLZ,EAAiBa,qBAAqBJ,GACnCy1B,gCAEL,CACE/3B,MAAOsB,EAAmBkB,eAAezE,MACvC,SAACF,GAAD,OACEA,EAAK4E,MACLZ,EAAiBa,qBAAqBJ,GACnCy1B,gCACJ/3B,MACHyC,IAAKnB,EAAmBkB,eAAezE,MACrC,SAACF,GAAD,OACEA,EAAK4E,MACLZ,EAAiBa,qBAAqBJ,GACnCy1B,gCACJt1B,IACHE,SAAUd,EAAiBa,qBAAqBJ,GAAOK,UAO3D,CACE3C,MAAO,GACPyC,IAAKZ,EAAiBO,2BACtBO,SAAUd,EAAiBa,qBAAqBJ,GAAOK,UAG7DpB,EAAcqB,KAAK,CACjBrF,YAAauE,EAAaE,wBAC1Ba,eAAgBf,EAAa9B,MAC7BlB,eAAgBoD,EAAgBE,2BAChCrD,kBAAmBmD,EAAgBlC,MACnC8C,qBAAsBjB,EAAiBc,SACvC3D,YAAauD,EAAUvC,MACvBvC,SAAU8E,EAAUE,IACpBE,SAAUJ,EAAUI,YA3CxB,IAAK,IAAIL,KAAST,EAAiBa,qBAAuB,EAAjDJ,GAiDNb,EAAsBsB,SAASjB,EAAaE,2BAE7CP,EAAsBmB,KAAKd,EAAaE,yBACxCR,EAAuBoB,KAAK,CAC1BrF,YAAauE,EAAaE,wBAC1Ba,eAAgBf,EAAa9B,MAC7BlB,eAAgB,GAChBC,kBAAmB,GACnB+D,qBAAsBjB,EAAiBc,SACvC3D,YAAa,GACbvB,SAAU,GACVkF,UAAU,KAMXhB,EAAyBoB,SACxBb,EAAgBE,8BAGlBT,EAAyBiB,KACvBV,EAAgBE,4BAElBV,EAA0BkB,KAAK,CAC7BrF,YAAa2E,EAAgB3E,YAC7BsF,eAAgB,GAChB/D,eAAgBoD,EAAgBE,2BAChCrD,kBAAmBmD,EAAgBlC,MACnC8C,qBAAsBjB,EAAiBc,SACvC3D,YAAa,GACbvB,SAAU,GACVkF,UAAU,OAhJlB,IAAK,IAAIf,KAAOpD,EAAe,EAAtBoD,GAuJT,MAAO,CAAEL,gBAAeC,yBAAwBE,8BAmLnCsB,gBAAQ,KAAM,CAAEI,qBAAhBJ,EAtJiD,SAAClG,GAC/D,OACE,yBAAS4B,UAAU,GAAnB,SACE,sBAAKA,UAAU,iEAAf,UACE,sBAAKA,UAAU,qBAAf,UAEE,0BAASA,UAAU,oCAAnB,UACE,sBAAMA,UAAU,mCAAhB,SACG5B,EAAMoK,gBAAgBC,SAASC,iBAElC,wBACE6D,KAAK,SACLvM,UAAU,eACVO,QAAS,WACPnC,EAAM6tB,oBAAmB,GACzB7tB,EAAM+tB,eAAe/tB,EAAMoK,gBAAgBP,gBAC3C7J,EAAM8tB,gBAAgB,KAN1B,uBAYF,sBAAKlsB,UAAU,gDAAf,UACE,sBAAMA,UAAS,SAAf,mBACA,sBAAMA,UAAU,+BAAhB,SACG+J,YAAK3L,EAAMoK,gBAAgBwB,iBAG/B,EAWD,sBAAKhK,UAAU,gDAAf,UACE,sBAAMA,UAAS,SAAf,qBACA,sBACEA,UAAS,oBACP5B,EAAMoK,gBAAgBV,qBACtBC,IAAkB4B,SACd,kBACA,gBAJG,SADX,SAQGC,YAAsBxL,EAAMoK,gBAAgBV,yBASjD,sBAAK9H,UAAU,+CAAf,UACE,sBAAMA,UAAS,SAAf,qBACA,sBACEA,UAAU,8BACViK,wBAAyB,CACvBC,OAAQ9L,EAAMoK,gBAAgB4B,YAAYvC,iBAKlD,sBAAK7H,UAAU,mCAAf,UACE,qBAAKA,UAAU,wCAAf,8BAGA,sBAAKA,UAAU,kDAAf,UACE,sBAAMA,UAAS,SAAf,mBACA,sBAAMA,UAAU,gBAAhB,SACG5B,EAAMoK,gBAAgBC,SAASE,iBAGpC,sBAAK3I,UAAU,kDAAf,UACE,sBAAMA,UAAS,SAAf,2BACA,sBAAMA,UAAU,gBAAhB,SACG5B,EAAMoK,gBAAgBC,SAASG,gBAAgBC,uBAGpD,sBAAK7I,UAAU,kDAAf,UACE,sBAAMA,UAAS,SAAf,wBACA,sBAAMA,UAAU,gBAAhB,SAEI5B,EAAMoK,gBAAgBC,SAASK,uBAC5BC,8BAIT,sBAAK/I,UAAU,kDAAf,UACE,sBAAMA,UAAS,SAAf,sBACA,sBAAMA,UAAU,0BAAhB,SACG5B,EAAMoK,gBAAgBC,SAASO,QAAQ9I,KAAI,SAACf,EAAMgB,GAAP,OAC1C,sBAEEH,UAAU,0BAFZ,UAIE,sBAAMA,UAAU,gBAAhB,SAAiCb,EAAK8J,cACtC,uBAAMjJ,UAAU,gBAAhB,cAAkCb,EAAK+J,YAAvC,OACC/I,IACC/B,EAAMoK,gBAAgBC,SAASO,QAAQjJ,OAAS,GAAK,MANlDI,EAAQhB,EAAKgK,mBAY1B,qBAAKnJ,UAAU,wCAAf,mCAGC5B,EAAMoK,gBAAgBC,SAAS3I,aAAaC,OAAS,EACpDq5B,EACEh7B,EAAMoK,gBAAgBC,SACtBrK,EAAMwE,oBACNE,uBAAuB5C,KAAI,SAACf,EAAMgB,GAAP,OAC3B,sBACEH,UAAU,wDADZ,UAIE,sBAAKA,UAAU,2DAAf,UACE,cAAC,KAAD,IACA,+BAAOb,EAAKgF,oBAEd,qBAAKnE,UAAU,uBAAf,SACE,cAAC,IAAD,CACEF,aAAcs5B,EACZh7B,EAAMoK,gBAAgBC,SACtBrK,EAAMwE,oBACNC,cAAc3D,QACd,SAACgE,GAAD,OAASA,EAAIrE,cAAgBM,EAAKN,qBAZnCsB,EAAQhB,EAAKN,gBAmBtB,cAAC,IAAD,CACEgC,MAAOwI,IAAeC,KACtBC,MAAO,gC,8KC/SR+vB,EAAb,kDAIE,WAAYl7B,GAA6B,IAAD,8BACtC,cAAMA,IAOR4O,WAAa,SAACtD,GACZ,EAAKgH,SAAS,CAAE3D,QAASrD,KATa,EAWxC6vB,iBAAmB,SAAC7vB,GAClB,EAAKgH,SAAS,CAAE8oB,cAAe9vB,KAZO,EAcxCoJ,kBAAoB,WAOlB,GAL6C,OAA3C,EAAK1U,MAAMyO,cAAcA,eACyB,IAAlD,EAAKzO,MAAMyO,cAAcA,cAAc9M,QAEvC,EAAK3B,MAAM0O,kBAAkB,EAAKE,YAEhC,EAAK5O,MAAM4P,QAAS,CACtB,IAAIwR,EAAQ,EAAKphB,MAAM4jB,cAAcyX,gBAAgBp6B,MACnD,SAACwa,GAAD,OACEA,EAAIpL,SAAW,EAAKrQ,MAAM4P,QAAQS,QAClCoL,EAAIrL,SAAW,EAAKpQ,MAAM4P,QAAQQ,QAClCzE,YAAK8P,EAAI3K,aAAenF,YAAK,EAAK3L,MAAM4P,QAAQkB,cAIG,IAApD,EAAK9Q,MAAM4jB,cAAcyX,gBAAgB15B,aAC9B0f,IAAVD,QACwBC,IAA1B,EAAKrhB,MAAMgQ,YAEX,EAAKhQ,MAAM6jB,cACT,EAAK7jB,MAAM4P,QAAQQ,OACnB,EAAKpQ,MAAMmG,KAAKyB,KAAKC,QACrB,EAAKszB,uBAGK9Z,IAAVD,QAIMC,IAFN,EAAKrhB,MAAM4jB,cAAcyX,gBAAgBp6B,MACvC,SAACF,GAAD,OAAUA,EAAKuP,cAAL,OAAoB8Q,QAApB,IAAoBA,OAApB,EAAoBA,EAAO9Q,gBAGvC,EAAKtQ,MAAMs7B,mBACTla,EAAM9Q,gBACiB+Q,IAAvB,EAAKrhB,MAAM6H,QACP,EAAK7H,MAAMmG,KAAKyB,KAAKC,QACrB,EAAK7H,MAAM6H,QACf,EAAK+G,cAnDyB,EAyDxC2sB,sBAAwB,SAACprB,GACvB,IAD6D,EACzDiO,EAAgB,EADyC,cAE5CjO,EAAaA,cAF+B,IAE7D,2BAA4C,CAC1CiO,GAD0C,QAC5Bod,YAH6C,8BAK7D,OAAOpd,GA3DP,EAAK7K,MAAQ,CACX5E,SAAS,EACTysB,eAAe,GALqB,EAJ1C,0CAoEE,WAAU,IAAD,OACHK,OACwBpa,IAA1BxL,KAAK7V,MAAMgQ,WACP6F,KAAK7V,MAAM4jB,cAAcyX,gBAAgBp6B,MACvC,SAACwa,GAAD,OACEA,EAAIpL,SAAW,EAAKrQ,MAAM4P,QAAQS,QAClCoL,EAAIrL,SAAW,EAAKpQ,MAAM4P,QAAQQ,QAClCzE,YAAK8P,EAAI3K,aAAenF,YAAK,EAAK3L,MAAM4P,QAAQkB,cAEpD+E,KAAK7V,MAAMgQ,WAAW/O,MACpB,SAACwa,GAAD,OACEA,EAAIpL,SAAW,EAAKrQ,MAAM4P,QAAQS,QAClCoL,EAAIrL,SAAW,EAAKpQ,MAAM4P,QAAQQ,QAClCzE,YAAK8P,EAAI3K,aAAenF,YAAK,EAAK3L,MAAM4P,QAAQkB,cAE1D,OAA2B,IAAvB+E,KAAKtC,MAAM5E,UAAiD,IAA7BkH,KAAKtC,MAAM6nB,cAE1C,qBAAKx5B,UAAU,4BAAf,SACE,cAAC,IAAD,WAIoByf,IAAtBoa,EAEA,qBAAK75B,UAAU,4BAAf,SACE,sBAAMA,UAAU,qBAAhB,uCAKJ,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,aAAf,cACyByf,IAAtBoa,GACC,sBAAK75B,UAAU,OAAf,UACE,sBAAKA,UAAU,6CAAf,UACE,8BACE,cAAC,IAAD,CAAmBA,UAAU,6BAE/B,qBACEA,UAAU,0BACViK,wBAAyB,CACvBC,OAAQ,YAAc+J,KAAK7V,MAAM4P,QAAQ/E,kBAI/C,sBAAKjJ,UAAU,wCAAf,UACE,qBAAKA,UAAU,kCAAf,wBAGA,qBACEA,UAAU,sBACViK,wBAAyB,CACvBC,OAAQH,YAAKkK,KAAK7V,MAAM4P,QAAQkB,iBAItC,sBAAKlP,UAAU,8BAAf,UACE,qBAAKA,UAAU,kCAAf,+BAGA,qBACEA,UAAU,sBACViK,wBAAyB,CACvBC,OAAQ+J,KAAK7V,MAAM4P,QAAQ8rB,kBAIjC,sBAAK95B,UAAU,+BAAf,UACE,qBAAKA,UAAU,kCAAf,wCAGA,qBACEA,UAAU,sBACViK,wBAAyB,CACvBC,OAAQ+J,KAAK7V,MAAM4P,QAAQ+rB,kBAOvC,qBAAK/5B,UAAU,kDAAf,uCAGuByf,IAAtBoa,EACG,YACAA,EAAkBtrB,aAAarO,KAAI,SAACf,EAAMyO,GAAP,aACjC,sBAEE5N,UAAU,kJAFZ,UAIE,qBAAKA,UAAU,8BAAf,SACE,sBAAKA,UAAU,+CAAf,UACE,qBAEEA,UAAU,oHAFZ,SAIG4N,EAAI,GAHAA,EAAI,GAKVisB,QAGOpa,IAFNoa,EAAkBvrB,UAAUjP,MAC1B,SAACwa,GAAD,OAASA,EAAImgB,cAAgB76B,EAAK86B,aAElC,sBAAKj6B,UAAU,iBAAf,UACE,qBACEA,UAAU,oCACViK,wBAAyB,CACvBC,OAAQ2vB,EAAkBvrB,UACvBjP,MACC,SAACwa,GAAD,OAASA,EAAImgB,cAAgB76B,EAAK86B,YAEnCA,SAAS56B,MACR,SAAC0gB,GAAD,OAAUA,EAAKma,WAAa/6B,EAAK+6B,YAChCvxB,eAGT,sBAAK3I,UAAU,yCAAf,wBACgB,IAC8B,OAA3C,EAAK5B,MAAMyO,cAAcA,eACxBgtB,EAAkBtrB,aAAalP,MAC7B,SAACwa,GAAD,OAASA,EAAIogB,WAAa96B,EAAK86B,aAE/B,qBAAKj6B,UAAU,OAAf,SACE,cAAC,IAAD,CACEm6B,iBAAkBh7B,EAAK+6B,SACvBD,SAAU,CACRG,WACEP,EAAkBvrB,UAAUjP,MAC1B,SAACwa,GAAD,OACEA,EAAImgB,cAAgB76B,EAAK86B,YAC1BG,WACLJ,YAAa76B,EAAK86B,SAClBxrB,OAAQorB,EAAkBvrB,UAAUjP,MAClC,SAACwa,GAAD,OACEA,EAAImgB,cAAgB76B,EAAK86B,YAC1BxrB,OACHwrB,SACEJ,EAAkBvrB,UAAUjP,MAC1B,SAACwa,GAAD,OACEA,EAAImgB,cAAgB76B,EAAK86B,YAC1BA,SACL1tB,KAAMstB,EAAkBvrB,UAAUjP,MAChC,SAACwa,GAAD,OACEA,EAAImgB,cAAgB76B,EAAK86B,YAC1B1tB,KACH8tB,SACER,EAAkBvrB,UAAUjP,MAC1B,SAACwa,GAAD,OACEA,EAAImgB,cAAgB76B,EAAK86B,YAC1BI,SACLC,aACET,EAAkBvrB,UAAUjP,MAC1B,SAACwa,GAAD,OACEA,EAAImgB,cAAgB76B,EAAK86B,YAC1BK,aACLrtB,MAAO4sB,EAAkBvrB,UAAUjP,MACjC,SAACwa,GAAD,OACEA,EAAImgB,cAAgB76B,EAAK86B,YAC1BhtB,MACH0kB,QAASkI,EAAkBvrB,UAAUjP,MACnC,SAACwa,GAAD,OACEA,EAAImgB,cAAgB76B,EAAK86B,YAC1BtI,SAEL4I,YAAa,CACX,CACEP,YAAa76B,EAAK86B,SAClBvwB,QAAQ,EACRioB,QACEkI,EAAkBtrB,aAAalP,MAC7B,SAACwa,GAAD,OACEA,EAAIogB,WAAa96B,EAAK86B,YACvBtI,UAGT9kB,cACE,EAAKzO,MAAMyO,cAAcA,cAE3B2tB,kBAAmB,EAAKp8B,MAAM2P,YAC9BxN,QAAS,4BAS7B,sBAAKP,UAAU,+CAAf,UACE,wBAEA,sBAAKA,UAAU,uGAAf,UACE,qBAAKA,UAAU,sCAAf,mBAGA,sBAAKA,UAAU,6CAAf,UACE,sBAAMA,UAAU,gBAAhB,SACGb,EAAKy6B,WAAW5Z,QAAQ,KACnB,IAHV,IAII,IACD6Z,IAAiB,UAChBA,EAAkBvrB,UAAUjP,MAC1B,SAACwa,GAAD,OAASA,EAAImgB,cAAgB76B,EAAK86B,mBAFpB,aAChB,EAEGhtB,kBAnHNW,EAAI,MAyHjB,sBAAK5N,UAAU,yDAAf,UACE,sBAAKA,UAAU,+GAAf,UACE,sBAAMA,UAAU,gBAAhB,oCACA,uBAAMA,UAAU,0BAAhB,UACG65B,GAAqBA,EAAkBhrB,YAAYmR,QAAQ,GAD9D,UAIF,8BACE,sBAAKhgB,UAAU,0BAAf,UACE,qBAAKA,UAAU,+CAAf,mCAGuByf,IAAtBoa,GACC,sBAAK75B,UAAU,mDAAf,UACGiU,KAAK0lB,sBAAsBE,GAAmB7Z,QAAQ,GADzD,KAC+D,IAC5D6Z,EAAkB9qB,mCApSrC,GAAqCyG,aAkUxB1H,EAAiBxJ,aAnBN,SAAC,GAWvB,MAAO,CACLC,KAFC,EATHA,KAYEyd,cAHC,EARHA,cAYE8M,sBAJC,EAPHA,sBAYEjiB,cALC,EANHA,iBAeqD,CACrD4tB,yBACAC,+BACAC,8BACAC,uBACAC,yBACAzY,2BACAH,mBACA6Y,uBACAC,4BACArB,wBACA5sB,wBAX4BxI,CAY3Bg1B,I,iCCnYH,mEAuMarrB,EAAkB,SAC7B2jB,EACA3oB,GAiBA,MAfuC,CACrCwF,OAAQmjB,EAAOnjB,OACfxF,YAAaA,EACb6wB,YAAalI,EAAOkI,YACpBC,OAAQnI,EAAOmI,OACfiB,MAAO,CACLC,qBAAqB,EACrBC,cAAc,EACdC,eAAe,EACfC,8BAA8B,EAC9BC,wBAAwB,GAE1B7sB,OAAQojB,EAAOpjB,OACfU,UAAW0iB,EAAO1iB,YAwDPwhB,IA5CiD,SAACtyB,GAC/D,OACE,yBAAS4B,UAAU,GAAnB,SACE,sBAAKA,UAAU,iEAAf,UACE,sBAAKA,UAAU,qBAAf,UAEE,0BAASA,UAAU,oCAAnB,UACE,sBAAMA,UAAU,mCAAhB,SACG5B,EAAMuyB,gBAAgB1nB,cAEzB,wBACEsD,KAAK,SACLvM,UAAU,eACVO,QAAS,WACPnC,EAAM6tB,oBAAmB,GACzB7tB,EAAM+tB,eAAe/tB,EAAMuyB,gBAAgBljB,iBAC3CrP,EAAM8tB,gBAAgB,KAN1B,uBAaF,sBAAKlsB,UAAU,gDAAf,UACE,sBAAMA,UAAS,SAAf,mBACA,sBAAMA,UAAU,+BAAhB,SACG+J,YAAK3L,EAAMuyB,gBAAgB3mB,mBAKlC,cAAC,IAAD,CACE+D,aAAa,EACbC,QAASC,EACP7P,EAAMuyB,gBACNvyB,EAAMuyB,gBAAgB1nB,sB,iCCvQlC,sEA0CeqyB,IA3BiB,SAACl9B,GAC/B,IAAM6gB,EAAQC,MAASC,GAAGC,KACtBmc,EAAW,IAAI1a,KAEnB,OADA0a,EAASC,QAAQvc,EAAM/S,OAAS,GAE9B,+BAEwD,IAArDuvB,2BAAiBxc,EAAO7gB,EAAM4P,QAAQkB,WACrC,sBAAKlP,UAAU,uHAAf,UACE,qBAAKA,UAAU,gBAAf,iEAGA,qBAAKA,UAAU,gBAAf,+CACA,qBAAKA,UAAU,gDAAf,SACG+J,YAAKwxB,EAAS/c,iBAInB,cAAC,IAAD,CACExQ,QAAS5P,EAAM4P,QACfD,YAAa3P,EAAM2P,kB,mHCpBhB2tB,EAAgB,SAACjO,GAC5B,IAD0E,EACtExO,EAAQ,IAAI4B,KACZ8a,EAAgC,GAFsC,cAGzDlO,GAHyD,IAG1E,2BAAwB,CAAC,IAAhBmO,EAAe,QAClBC,EAAY,IAAIhb,KAAK+a,EAAKE,YAC1BC,EAAU,IAAIlb,KAAK+a,EAAKI,UAE1BH,EAAUla,WAAa1C,EAAM0C,WAC7Boa,EAAQpa,WAAa1C,EAAM0C,WAC3Bia,EAAKK,cAAgBC,IAAsBC,OAE3CR,EAAW,sBAAOA,GAAP,CAAoBC,MAXuC,8BAc1E,OAAOD,GA4MMS,IAlMO,SAACh+B,GACrB,IAKEoQ,EACA6tB,EANF,EAAwCh+B,mBACtC,MADF,mBAAOi+B,EAAP,KAAqBC,EAArB,KAGA,EAA4Bl+B,mBAAiB,IAA7C,mBAAOoC,EAAP,KAAe+7B,EAAf,KAQA,OACE,sBAAKx8B,UAAU,GAAf,UACE,qBAAKA,UAAU,OAAf,SACE,uBACEmL,SAAU,SAACC,GAAD,OACRoxB,EAAUpxB,EAAEC,OAAO9B,QAErBgD,KAAK,OACLvM,UAAU,uDACV+K,YAAY,uBACZO,SAA+B,OAArBlN,EAAMq+B,YAAmD,IAA5Br+B,EAAMq+B,WAAW18B,WAI5D,qBAAKC,UAAU,uCAAf,SACwB,OAArB5B,EAAMq+B,WACL,cAAC,IAAD,IAC8B,IAA5Br+B,EAAMq+B,WAAW18B,OACnB,sBAAKC,UAAU,6EAAf,UACE,cAAC,KAAD,CAAUA,UAAU,aACpB,qBAAKA,UAAU,4CAAf,SACE,0DAIJ,oCACG5B,EAAMs+B,WACL,sBACE18B,UAAS,yBACmB,QAA1B5B,EAAMu+B,gBACF,6BACA,yBAHG,wHADX,UAOE,sBAAK38B,UAAU,mCAAf,UAC6B,QAA1B5B,EAAMu+B,gBACL,cAAC,IAAD,CAAe38B,UAAS,2BAExB,cAAC,KAAD,CACEA,UAAS,2BAGb,qBAAKA,UAAU,gBAAf,SACE,qBAAKA,UAAS,0BAAd,8BAGJ,qBACEO,QAAS,WACPnC,EAAMw+B,iBAAiB,QAEzB58B,UAAU,yHAJZ,wBApDZwO,EA8DmBpQ,EAAMq+B,WA7DzBJ,EA6DqC57B,EA3D9Bo8B,YAAWruB,EAAQ6tB,IA2DmBn8B,KAAI,SAACf,EAAMyO,GAAP,OACvC,sBAEE5N,UAAS,yBACmB,QAA1B5B,EAAMu+B,iBACNv+B,EAAMu+B,gBAAgBvqB,kBAAoBjT,EAAKiT,gBAC3C,6BACA,yBAJG,+CAFX,UASE,sBAAKpS,UAAU,4EAAf,UACE,sBAAKA,UAAU,mCAAf,UAC6B,QAA1B5B,EAAMu+B,iBACPv+B,EAAMu+B,gBAAgBvqB,kBACpBjT,EAAKiT,gBACL,cAAC,IAAD,CAAepS,UAAS,2BAExB,cAAC,KAAD,CACEA,UAAS,2BAGb,sBAAKA,UAAU,gBAAf,UACE,qBACEA,UAAS,UACmB,QAA1B5B,EAAMu+B,iBACNv+B,EAAMu+B,gBAAgBvqB,kBACpBjT,EAAKiT,gBACH,gBACA,gBALG,cADX,SASGjT,EAAKiZ,oBAER,sBAAKpY,UAAU,wBAAf,UACE,4CACA,sBACEA,UAAS,WACY,IAAnBb,EAAK0S,UACD,oCACA,wBAJR,UAOsB,IAAnB1S,EAAK0S,UAAqB,SAAW,qBAK9C,sBAAK7R,UAAU,mCAAf,WACqB,OAAjBs8B,GACAA,EAAalqB,kBACXjT,EAAKiT,kBACP,qBACE7R,QAAS,kBAAMg8B,EAAgBp9B,IAC/Ba,UAAU,4HAFZ,qBAOF,qBACEO,QAAS,WACPnC,EAAMw+B,iBAAiBz9B,IAEzBa,UAAU,yHAJZ,oBAQkB,OAAjBs8B,GACCA,EAAalqB,kBAAoBjT,EAAKiT,iBACpC,qBACE7R,QAAS,kBAAMg8B,EAAgB,OAC/Bv8B,UAAU,yHAFZ,yBASU,OAAjBs8B,GACCA,EAAalqB,kBAAoBjT,EAAKiT,iBACpC,qBAAKpS,UAAU,gFAAf,SACE,wBAAOA,UAAU,SAAjB,UACE,uBAAOA,UAAU,aAAjB,SACE,qBAAIA,UAAU,YAAd,UACE,oBAAIA,UAAU,YAAd,eACA,sCACA,4CACA,6CACA,6CAGJ,uBAAOA,UAAU,UAAjB,SACoB,OAAjBs8B,GACCA,EAAalqB,kBACXjT,EAAKiT,iBACPkqB,EAAa7O,MAAM1tB,OAAS,GAC5BZ,EAAKsuB,MAAMvtB,KAAI,SAAC07B,EAAMhuB,GAAP,OACb,qBAEE5N,UAAS,eAGDyf,IAFNic,EAAcv8B,EAAKsuB,OAAOpuB,MACxB,SAACwa,GAAD,OAASA,EAAInK,WAAaksB,EAAKlsB,YAE7B,sCACA,GALG,sCAFX,UAUE,oBAAI1P,UAAU,YAAd,SAA2B4N,EAAI,IAC/B,6BAAKguB,EAAKkB,aACV,6BAAK/yB,YAAK6xB,EAAKE,WAAY,gBAC3B,6BAAK/xB,YAAK6xB,EAAKI,SAAU,gBACzB,6BAAKJ,EAAKK,gBAbLruB,EAAI,eA/FpBA,EAAI,gB,iCC7GzB,2DAoDMmvB,EAAY,SAChBxuB,EACAyuB,EACA5+B,GAEA,YAC4BqhB,IAA1BrhB,EAAM6+B,gBACFC,YAAiB9+B,EAAM67B,SAAS1tB,KAAMnO,EAAMyO,eAC5CzO,EAAM6+B,iBAEV,KAAKE,2BAAyBC,eAC5B,IAAMC,EACJ3L,YAAiBnjB,GACnB,OACE,sBAAKvO,UAAU,SAAf,UACGq9B,EACEn+B,QAAO,SAAC2a,GAAD,OAAwB,IAAfA,EAAInQ,UACpBxJ,KAAI,SAACf,EAAMyO,GAAP,OACH,sBAEErN,QAASnC,EAAMmC,QACfP,UAAU,iIAHZ,UAKE,qBAAKA,UAAU,wBAAf,SACE,cAAC,IAAD,MAEF,qBAAKiK,wBAAyB,CAAEC,OAAQ/K,EAAKoK,WAPxCqE,EAAI,OAWc,IAA5BxP,EAAMo8B,mBACL,sBAAKx6B,UAAU,qDAAf,UACE,qBAAKA,UAAU,yBAAf,4BACA,8BACGg9B,EACE99B,QAAO,SAAC2a,GAAD,OAAwB,IAAfA,EAAInQ,UACpBxJ,KAAI,SAACf,EAAMyO,GAAP,OACH,sBAEErN,QAASnC,EAAMmC,QACfP,UAAU,gIAHZ,UAKE,qBAAKA,UAAU,wBAAf,SACE,cAAC,IAAD,MAEF,qBACEiK,wBAAyB,CAAEC,OAAQ/K,EAAKoK,WARrCqE,EAAI,cAiB3B,KAAKuvB,2BAAyBG,eAC5B,IAAMC,EACJ7L,YAAiBnjB,GACnB,OACE,sBAAKvO,UAAU,SAAf,UACGu9B,EACEr+B,QAAO,SAAC2a,GAAD,OAAwB,IAAfA,EAAInQ,UACpBxJ,KAAI,SAACf,EAAMyO,GAAP,OACH,sBAEErN,QAASnC,EAAMmC,QACfP,UAAU,iIAHZ,UAKE,qBAAKA,UAAU,wBAAf,SACE,cAAC,IAAD,MAEF,qBAAKiK,wBAAyB,CAAEC,OAAQ/K,EAAKoK,WAPxCqE,EAAI,OAWc,IAA5BxP,EAAMo8B,mBACL,sBAAKx6B,UAAU,qDAAf,UACE,qBAAKA,UAAU,yBAAf,4BACA,8BACGg9B,EACE99B,QAAO,SAAC2a,GAAD,OAAwB,IAAfA,EAAInQ,UACpBxJ,KAAI,SAACf,EAAMyO,GAAP,OACH,sBAEErN,QAASnC,EAAMmC,QACfP,UAAU,gIAHZ,UAKE,qBAAKA,UAAU,wBAAf,SACE,cAAC,IAAD,MAEF,qBACEiK,wBAAyB,CAAEC,OAAQ/K,EAAKoK,WARrCqE,EAAI,cAkB3B,KAAKuvB,2BAAyBK,yBAC5B,IAAMC,EACJvL,YAA2B3jB,GAC7B,OACE,sBAAKvO,UAAU,SAAf,UACGy9B,EACEv+B,QAAO,SAAC2a,GAAD,OAAwB,IAAfA,EAAInQ,UACpBxJ,KAAI,SAACf,EAAMyO,GAAP,OACH,sBAEErN,QAASnC,EAAMmC,QACfP,UAAU,iIAHZ,UAKE,qBAAKA,UAAU,wBAAf,SACE,cAAC,IAAD,MAEF,qBAAKA,UAAU,sCAAf,SACGb,EAAKoK,MAAMxJ,OAAS,EACnB,+CACU,IACR,sBAAMC,UAAU,yCAAhB,SACGb,EAAKoK,MAAM,KACN,IAJV,MAKM,IACJ,sBAAMvJ,UAAU,yCAAhB,SACGb,EAAKoK,MAAM,QAIhB,sBAAMvJ,UAAU,gBAAhB,SACGb,EAAKoK,MAAM,GAAGiV,iBArBhB5Q,EAAI,OA4Bc,IAA5BxP,EAAMo8B,mBACL,sBAAKx6B,UAAU,qDAAf,UACE,qBAAKA,UAAU,yBAAf,4BACA,8BACGg9B,EACE99B,QAAO,SAAC2a,GAAD,OAAwB,IAAfA,EAAInQ,UACpBxJ,KAAI,SAACf,EAAMyO,GAAP,OACH,sBAEErN,QAASnC,EAAMmC,QACfP,UAAU,4GAHZ,UAKE,qBAAKA,UAAU,wBAAf,SACE,cAAC,IAAD,MAEF,qBAAKA,UAAU,sCAAf,SACGb,EAAKoK,MAAMxJ,OAAS,EACnB,+CACU,IACR,sBAAMC,UAAU,yCAAhB,SACGb,EAAKoK,MAAM,KACN,IAJV,MAKM,IACJ,sBAAMvJ,UAAU,yCAAhB,SACGb,EAAKoK,MAAM,QAIhB,sBAAMvJ,UAAU,gBAAhB,SACGb,EAAKoK,MAAM,GAAGiV,iBArBhB5Q,EAAI,cAiC3B,KAAKuvB,2BAAyBO,SAC5B,IAAMC,EACJ7L,YAAWvjB,GACb,OACE,sBAAKvO,UAAU,SAAf,UACG29B,EAAgBz9B,KAAI,SAACf,EAAMyO,GAAP,OACnB,sBAEErN,QAASnC,EAAMmC,QACfP,UAAU,8IAHZ,UAKE,qBAAKA,UAAU,mDAAf,SACE,qBAAKA,UAAU,wEAAf,SACG4N,EAAI,MAGT,sBAAK5N,UAAU,sEAAf,UACE,qBACEA,UAAU,sBACViK,wBAAyB,CAAEC,OAAQ/K,EAAKoK,SAE1C,sBAAKvJ,UAAU,uDAAf,UACE,qBAAKA,UAAU,mDAAf,SACE,cAAC,IAAD,MAEF,qBACEA,UAAU,cACViK,wBAAyB,CAAEC,OAAQ/K,EAAKuK,kBApBzCkE,EAAI,OA2BgB,IAA5BxP,EAAMo8B,mBACL,sBAAKx6B,UAAU,qDAAf,UACE,qBAAKA,UAAU,yBAAf,4BACA,8BACGg9B,EAAiB98B,KAAI,SAACf,EAAMyO,GAAP,OACpB,sBAEErN,QAASnC,EAAMmC,QACfP,UAAU,6IAHZ,UAKE,qBAAKA,UAAU,mDAAf,SACE,qBAAKA,UAAU,wEAAf,SACG4N,EAAI,MAGT,sBAAK5N,UAAU,sEAAf,UACE,qBACEA,UAAU,sBACViK,wBAAyB,CAAEC,OAAQ/K,EAAKoK,SAE1C,sBAAKvJ,UAAU,uDAAf,UACE,qBAAKA,UAAU,mDAAf,SACE,cAAC,IAAD,MAEF,qBACEA,UAAU,cACViK,wBAAyB,CAAEC,OAAQ/K,EAAKuK,kBApBzCkE,EAAI,cA+BzB,KAAKuvB,2BAAyBS,UAC5B,IAAMC,EACJhM,YAAYtjB,GACd,OACE,sBAAKvO,UAAU,SAAf,UACG69B,EACE3+B,QAAO,SAAC2a,GAAD,OAAwB,IAAfA,EAAInQ,UACpBxJ,KAAI,SAACf,EAAMyO,GAAP,OACH,sBAEErN,QAASnC,EAAMmC,QACfP,UAAU,iIAHZ,UAKE,qBAAKA,UAAU,UAAf,SACE,cAAC,IAAD,MAEF,qBAAKiK,wBAAyB,CAAEC,OAAQ/K,EAAKoK,WAPxCqE,EAAI,OAWc,IAA5BxP,EAAMo8B,mBACL,sBAAKx6B,UAAU,qDAAf,UACE,qBAAKA,UAAU,yBAAf,4BACA,8BACGg9B,EACE99B,QAAO,SAAC2a,GAAD,OAAwB,IAAfA,EAAInQ,UACpBxJ,KAAI,SAACf,EAAMyO,GAAP,OACH,sBAEErN,QAASnC,EAAMmC,QACfP,UAAU,gIAHZ,UAKE,qBAAKA,UAAU,UAAf,SACE,cAAC,IAAD,MAEF,qBACEiK,wBAAyB,CAAEC,OAAQ/K,EAAKoK,WARrCqE,EAAI,cAiB3B,KAAKuvB,2BAAyBW,QAC5B,IAAMC,EACJ9L,YAAY1jB,GACd,OACE,sBAAKvO,UAAU,SAAf,UACG+9B,EAAoB79B,KAAI,SAACf,EAAMyO,GAAP,OACvB,sBAEErN,QAASnC,EAAMmC,QACfP,UAAU,iIAHZ,UAKE,qBAAKA,UAAU,UAAf,SACE,cAAC,IAAD,MAEF,qBAAKA,UAAU,sCAAf,SACGb,EAAKoK,MAAMxJ,OAAS,EACnB,+CACU,IACR,sBAAMC,UAAU,yCAAhB,SACGb,EAAKoK,MAAM,KACN,IAJV,MAKM,IACJ,sBAAMvJ,UAAU,yCAAhB,SACGb,EAAKoK,MAAM,QAIhBpK,EAAKoK,MAAMxJ,OAAS,GAClB,sBAAMC,UAAU,gBAAhB,SACGb,EAAKoK,MAAM,GAAGiV,iBAtBlB5Q,EAAI,OA8BgB,IAA5BxP,EAAMo8B,mBACL,sBAAKx6B,UAAU,qDAAf,UACE,qBAAKA,UAAU,yBAAf,4BACA,8BACGg9B,EAAiB98B,KAAI,SAACf,EAAMyO,GAAP,OACpB,sBAEErN,QAASnC,EAAMmC,QACfP,UAAU,gIAHZ,UAKE,qBAAKA,UAAU,UAAf,SACE,cAAC,IAAD,MAEF,qBAAKA,UAAU,sCAAf,SACGb,EAAKoK,MAAMxJ,OAAS,EACnB,+CACU,IACR,sBAAMC,UAAU,yCAAhB,SACGb,EAAKoK,MAAM,GAAKpK,EAAKoK,MAAM,KACtB,IAJV,MAKM,IACJ,sBAAMvJ,UAAU,yCAAhB,SACGb,EAAKoK,MAAM,GAAKpK,EAAKoK,MAAM,QAIhCpK,EAAKoK,MAAMxJ,OAAS,GAClB,sBAAMC,UAAU,gBAAhB,SACGb,EAAKoK,MAAM,GAAGiV,iBAtBlB5Q,EAAI,cAkCzB,KAAKuvB,2BAAyBa,gBAC5B,IAAMC,EACJlM,YAAmBxjB,GACrB,OACE,sBAAKvO,UAAU,SAAf,UACGi+B,EAA0B/9B,KAAI,SAACf,EAAMyO,GAAP,OAC7B,sBAEErN,QAASnC,EAAMmC,QACfP,UAAU,iIAHZ,UAKE,qBAAKA,UAAU,UAAf,SACE,cAAC,IAAD,MAEF,qBAAKA,UAAU,sCAAf,SACGb,EAAKoK,MAAMxJ,OAAS,EACnB,+CACU,IACR,sBAAMC,UAAU,yCAAhB,SACGb,EAAKoK,MAAM,KACN,IAJV,MAKM,IACJ,sBAAMvJ,UAAU,yCAAhB,SACGb,EAAKoK,MAAM,QAIhBpK,EAAKoK,MAAMxJ,OAAS,GAClB,sBAAMC,UAAU,gBAAhB,SACGb,EAAKoK,MAAM,GAAGiV,iBAtBlB5Q,EAAI,OA8BgB,IAA5BxP,EAAMo8B,mBACL,sBAAKx6B,UAAU,qDAAf,UACE,qBAAKA,UAAU,yBAAf,4BACA,8BACGg9B,EAAiB98B,KAAI,SAACf,EAAMyO,GAAP,OACpB,sBAEErN,QAASnC,EAAMmC,QACfP,UAAU,gIAHZ,UAKE,qBAAKA,UAAU,UAAf,SACE,cAAC,IAAD,MAEF,qBAAKA,UAAU,sCAAf,SACGb,EAAKoK,MAAMxJ,OAAS,EACnB,+CACU,IACR,sBAAMC,UAAU,yCAAhB,SACGb,EAAKoK,MAAM,KACN,IAJV,MAKM,IACJ,sBAAMvJ,UAAU,yCAAhB,SACGb,EAAKoK,MAAM,QAIhBpK,EAAKoK,MAAMxJ,OAAS,GAClB,sBAAMC,UAAU,gBAAhB,SACGb,EAAKoK,MAAM,GAAGiV,iBAtBlB5Q,EAAI,cAkCzB,KAAKuvB,2BAAyBe,YAC5B,IAAMC,EACJnM,YAAczjB,GAChB,OACE,sBAAKvO,UAAU,SAAf,UACGm+B,EAAsBj+B,KAAI,SAACf,EAAMyO,GAAP,OACzB,sBAEErN,QAASnC,EAAMmC,QACfP,UAAU,iIAHZ,UAKE,qBAAKA,UAAU,UAAf,SACE,cAAC,IAAD,MAEF,qBACEiK,wBAAyB,CACvBC,OAAQ/K,EAAKoK,WATZqE,EAAI,OAegB,IAA5BxP,EAAMo8B,mBACL,sBAAKx6B,UAAU,qDAAf,UACE,qBAAKA,UAAU,yBAAf,4BACA,8BACGg9B,EAAiB98B,KAAI,SAACf,EAAMyO,GAAP,OACpB,sBAEErN,QAASnC,EAAMmC,QACfP,UAAU,gIAHZ,UAKE,qBAAKA,UAAU,UAAf,SACE,cAAC,IAAD,MAEF,qBACEiK,wBAAyB,CACvBC,OAAQ/K,EAAKoK,WATZqE,EAAI,cAoBzB,KAAKuvB,2BAAyBiB,MAC5B,IAAMC,EACJlM,YAAQ5jB,GACV,OACE,sBAAKvO,UAAU,SAAf,UACGq+B,EAAgBn+B,KAAI,SAACf,EAAMyO,GAAP,OACnB,sBAEErN,QAASnC,EAAMmC,QACfP,UAAU,iIAHZ,UAKE,qBAAKA,UAAU,UAAf,SACE,cAAC,IAAD,MAEF,qBACEiK,wBAAyB,CACvBC,OAAQ/K,EAAKoK,WATZqE,EAAI,OAegB,IAA5BxP,EAAMo8B,mBACL,sBAAKx6B,UAAU,qDAAf,UACE,qBAAKA,UAAU,yBAAf,4BACA,8BACGg9B,EAAiB98B,KAAI,SAACf,EAAMyO,GAAP,OACpB,sBAEErN,QAASnC,EAAMmC,QACfP,UAAU,gIAHZ,UAKE,qBAAKA,UAAU,UAAf,SACE,cAAC,IAAD,MAEF,qBACEiK,wBAAyB,CACvBC,OAAQ/K,EAAKoK,WATZqE,EAAI,cAmBzB,KAAKuvB,2BAAyBmB,SAE9B,KAAKnB,2BAAyBoB,OAC5B,OAAO,wBACT,QACE,OAAO,qBAAKv+B,UAAU,+BAAf,4BA2DEw+B,IAvDI,SAACpgC,GAClB,IAAMwzB,EAASxzB,EAAMm8B,YAAYl7B,MAC/B,SAACF,GAAD,OAAUA,EAAK66B,cAAgB57B,EAAM67B,SAASD,eAE5CyE,EAAiBrgC,EAAM67B,SAASA,SAAS56B,MAC3C,SAACwa,GAAD,OAASA,EAAIqgB,WAAa97B,EAAM+7B,oBAYlC,QAVuB1a,IAAnBgf,GAAgCrgC,EAAM67B,SAASA,SAASl6B,OAAS,IACnE0+B,OAGQhf,IAFNrhB,EAAM67B,SAASA,SAAS56B,MACtB,SAACwa,GAAD,OAASA,EAAIqgB,WAAa97B,EAAM+7B,oBAE9B/7B,EAAM67B,SAASA,SAAS,GACxB77B,EAAM67B,SAASA,SAAS56B,MACtB,SAACwa,GAAD,OAASA,EAAIqgB,WAAa97B,EAAM+7B,0BAG3B1a,IAAXmS,QAA2CnS,IAAnBgf,EAC1B,OACE,qBAAKz+B,UAAU,sDAAf,8BAKF,IAAI0+B,EAAOD,EAAeE,aAAat/B,MACrC,SAACwa,GAAD,OAAS+kB,YAAU/kB,EAAIglB,aAAezgC,EAAM6+B,mBAG9C,OACE,mCACYxd,IAATif,EACG3B,EACEnL,EAAOD,QAAQ,GAAGC,OAClB6M,EAAe9M,QAAQ,GAAGC,OAC1BxzB,GAEFwzB,EAAOD,QACJzyB,QAAO,SAAC2a,GAAD,OAAS6kB,GAAQ7kB,EAAIilB,YAAcJ,EAAKI,aAC/C5+B,KAAI,SAAC6+B,GACJ,IAAMC,EAAQP,EAAgB9M,QAAQtyB,MACpC,SAACwa,GAAD,OACEA,EAAI9V,MAAQg7B,EAAYh7B,KACxB8V,EAAIilB,YAAcC,EAAYD,aAElC,YAAcrf,IAAVuf,EACKjC,EAAUgC,EAAYnN,OAAQoN,EAAMpN,OAAQxzB,GAE5C,+B,mGCtmBnBkyB,E,kDACJ,WAAYlyB,GAA2B,IAAD,8BACpC,cAAMA,IAORutB,eAAiB,SAACpiB,GAChB,EAAKmH,SAAS,CAAEgb,YAAaniB,KAN7B,EAAKoI,MAAQ,CACX+Z,YAAa,IAJqB,E,0CAYtC,WAAU,IAAD,OACP,OACE,gCAEE,sBAAK1rB,UAAU,gCAAf,UACE,cAAC,KAAD,CAAUA,UAAU,0BACpB,uBACEuM,KAAK,OACLxB,YAAY,SACZ/K,UAAU,qFACVmL,SAAU,SAACC,GAAD,OAAO,EAAKugB,eAAevgB,EAAEC,OAAO9B,QAC9CA,MAAO0K,KAAKtC,MAAM+Z,cAEpB,wBACE1rB,UAAU,4EACVuM,KAAK,SACLhM,QAAS,kBAAM,EAAKnC,MAAM8uB,sBAAqB,IAHjD,sBAUF,qBAAKltB,UAAU,4DAAf,SACGS,YAAOwT,KAAK7V,MAAMmyB,gBAAiBtc,KAAKtC,MAAM+Z,aAAaxrB,KAC1D,SAACf,EAA4BgB,GAA7B,OACE,kCACE,qBACEH,UAAS,4DACP,EAAK5B,MAAMivB,aACX,EAAKjvB,MAAMivB,YAAYprB,KAAO9C,EAAK8C,GAC/B,wCACA,QAEN1B,QAAS,WACP,EAAKnC,MAAM8uB,sBAAqB,GAChC,EAAK9uB,MAAMgvB,eAAejuB,IAT9B,SAYE,mBAAGa,UAAU,uBAAb,SAAqCb,EAAKgL,YAbhChK,EAAMqe,WAAarf,EAAK8C,gB,GAvCzBuT,aA+DZ8a,O,iCCrGf,yCAqFeE,IAtEiC,SAACpyB,GAC/C,OACE,yBAAS4B,UAAU,GAAnB,SACE,qBAAKA,UAAU,iEAAf,SACE,sBAAKA,UAAU,qBAAf,UACE,sBAAKA,UAAU,oCAAf,UACE,sBAAMA,UAAU,kCAAhB,SACGssB,YAAiBluB,EAAMwE,mBAAoBxE,EAAMuO,SAASmD,OAE7D,wBACEvD,KAAK,SACLvM,UAAU,eACVO,QAAS,WACPnC,EAAM6tB,oBAAmB,GACzB7tB,EAAM+tB,eAAe/tB,EAAMuO,QAAQhB,QACnCvN,EAAM8tB,gBAAgB,KAN1B,uBAYF,sBAAKlsB,UAAU,gDAAf,UACE,sBAAMA,UAAS,SAAf,qBACA,sBAAMA,UAAU,8CAAhB,SACG4J,YAAsBxL,EAAMuO,QAAQvN,wBAGzC,sBAAKY,UAAU,gDAAf,UACE,sBAAMA,UAAS,SAAf,2BACA,sBAAMA,UAAU,gBAAhB,iCAsBF,sBAAKA,UAAU,+CAAf,UACE,sBAAMA,UAAS,SAAf,qBACA,sBAAMA,UAAU,cAAhB,SACG5B,EAAMuO,QAAQb,aAAajE,aAGhC,qBAAK7H,UAAU,cAAf,SACE,qBACE6B,IAAG,UAAKC,IAAIC,WAAT,YAAuB3D,EAAMuO,QAAQjL,OACxCM,IAAI,WACJhC,UAAS,sB,ySCwGVi/B,EAAmB,SAC9BC,EACAryB,EACAqtB,EACAiF,EACAC,GAEA,IAAIC,EAAgB,GAEhBpF,EAAWiF,EAAiBjF,SAAS56B,MACvC,SAACwa,GAAD,OAASA,EAAIqgB,WAAaA,KAE5B,GAC6D,OAA3DgD,YAAiBgC,EAAiB3yB,KAAMM,IACxCqwB,YAAiBgC,EAAiB3yB,KAAMM,KACtCswB,2BAAyBmB,SAC3B,CACA,IAAIgB,EAA+C,GACnD,QAAiB7f,IAAbwa,EAAwB,CAC1B,IAAIsF,EAAsBJ,EAAgB9/B,MACxC,SAACwa,GAAD,OAASA,EAAImgB,cAAgBkF,EAAiBlF,oBAEpBva,IAAxB8f,IACFD,EAAoBC,EAAoB5N,SAG1C,IAR0B,EAQtBA,EAAUsI,EAAStI,QACnB6N,EAAevF,EAAStxB,YAAY+X,MAAM,KATpB,cAYR8e,GAZQ,yBAYjBhgB,EAZiB,QAapBO,EAAO4R,EAAQtyB,MAAK,SAACwa,GAAD,OAASA,EAAIilB,YAAche,SAAStB,EAAM,OAClE,QAAaC,IAATM,EAAoB,CAEtB,IAAIxT,EAAO0tB,EAAS0E,aAAat/B,MAC/B,SAACwa,GAAD,OAASA,EAAIilB,YAAche,SAAStB,EAAM,YAE/BC,IAATlT,GACF8yB,EAAcn7B,KAzIL,SACnBrE,EACA0M,EACA4yB,EACAC,GAEA,IADgB,EACZzN,EAAkC,GADtB,cAEG9xB,EAAK+xB,QAFR,IAEhB,2BAAgC,CAAC,IAAxBA,EAAuB,QAC9BD,EAAQztB,KAAK,CACXjC,GAAI2vB,EAAO3vB,GACXsH,MAAOqoB,EAAOroB,MACdG,OAAQkoB,EAAOloB,UANH,8BAShB,IAAI+1B,EAAmDN,EAAgB9/B,MACrE,SAACwa,GAAD,OAASA,EAAIilB,YAAcj/B,EAAKi/B,aAE9BY,EAAmC,GAIvC,YAHoBjgB,IAAhBggB,IACFC,EAAWD,EAAY7N,QAErBD,EAAQ5xB,OAAS,EACfwM,IAASozB,sBAAoBrC,eAE7B,sBAAMt9B,UAAU,QAAhB,SACE,yBACEA,UAAS,wEACa,IAApB0/B,EAAS3/B,aAC4C0f,IAArDkS,EAAQtyB,MAAK,SAACwa,GAAD,OAASA,EAAI5X,KAAOy9B,EAAS,GAAGz9B,MACzC,0BACA,2BAENsH,MAA2B,IAApBm2B,EAAS3/B,OAAe,GAAK2/B,EAAS,GAAGz9B,GAChDkJ,SAAU,SAACC,GACT,IAAIw0B,EAASjO,EAAQtyB,MAAK,SAACwa,GAAD,OAASA,EAAI5X,KAAOmJ,EAAEC,OAAO9B,cACxCkW,IAAXmgB,EACFR,EAAU,CACRr7B,IAAKlE,EAAKkE,IACV+6B,UAAWj/B,EAAKi/B,UAChBlN,OAAQ,CACN,CACE3vB,GAAI29B,EAAO39B,GACXsH,MAAOq2B,EAAOr2B,MACdG,OAAQk2B,EAAOl2B,WAKrBm2B,MAAM,oBAvBZ,UA2BE,wBAAQt2B,MAAO,GAAf,mCACCooB,EAAQzxB,KAAI,SAACf,EAAMyO,GAAP,OACX,wBAAQrE,MAAOpK,EAAK8C,GAApB,SACG9C,EAAKoK,OADqBqE,EAAI,WASvC,sBAAM5N,UAAU,qBAAhB,SACE,uBACEuJ,MACsB,IAApBm2B,EAAS3/B,OACL,GACAwM,IAASozB,sBAAoBzB,YAC7BwB,EAAS,GAAGn2B,MACZm2B,EAAS,GAAGn2B,MAAM,GAExB4B,SAAU,SAACC,GACTg0B,EAAU,CACRr7B,IAAKlE,EAAKkE,IACV+6B,UAAWj/B,EAAKi/B,UAChBlN,OAAQ,CACN,CACE3vB,GAAI0vB,EAAQ,GAAG1vB,GACfsH,MACEgD,IAASozB,sBAAoBzB,YACzB9yB,EAAEC,OAAO9B,MACT,CAAC6B,EAAEC,OAAO9B,OAChBG,OAAQioB,EAAQ,GAAGjoB,YAK3B6C,KAAK,OACLvM,UAAU,0FAMX,sDA2CG8/B,CAAa/f,EAAMxT,EAAKsyB,UAAWS,EAAmBF,SAI1DC,EAAcn7B,KAAKsb,IAbvB,2BAAiC,IAZP,gCA8B9B,OACE,qBAAKxf,UAAU,sCAAf,SACGq/B,EAAcn/B,KAAI,SAACf,EAAMyO,GAAP,OACjB,sBAAkB5N,UAAU,OAA5B,SACGb,GADQyO,EAAI,SAyiBjBmyB,EAAkBz7B,aAtBA,SAAC,GAavB,MAAO,CACLC,KAFC,EAXHA,KAcEy7B,OAHC,EAVHA,OAcEhe,cAJC,EATHA,cAcEkJ,OALC,EARHA,OAcEre,cANC,EAPHA,iBAiB+C,CAC/CozB,6BACAC,yBACApzB,wBAHsBxI,EAjiBC,SAAClG,GAAiC,IAAD,oCACxD,EAA8BC,oBAAkB,GAAhD,mBAAO0O,EAAP,KAAgBC,EAAhB,KACA,EAAoC3O,oBAAkB,GAAtD,mBAAO8hC,EAAP,KAAmBC,EAAnB,KACA,EAAgD/hC,mBAC9CD,EAAM8gC,iBAAiBjF,SAAS,GAAGC,UADrC,oBAAOC,GAAP,MAAyBkG,GAAzB,MAIMC,GAAkB,WACtB,IAD4B,EACxBC,EAGE,GAJsB,cAKPniC,EAAM8gC,iBAAiBjF,UALhB,yBAKnBuG,EALmB,QAMtBC,EAAYC,IAAkBrhC,MAChC,SAACshC,GAAD,OAAOA,EAAEzmB,MAAQsmB,EAAStG,iBAEVza,IAAdghB,IACFF,EAAK,sBAAOA,GAAP,CAAcE,MALvB,2BAAuD,IAL3B,8BAa5B,OAAOF,GAWT,OARAjzB,qBAAU,WAEgC,OAAtClP,EAAMyO,cAAcA,eACyB,IAA7CzO,EAAMyO,cAAcA,cAAc9M,QAElC3B,EAAM0O,kBAAkBE,KAEzB,CAAC5O,IAEF,qBAAK4B,UAAU,qBAAf,UACe,IAAZ+M,EACC,qBAAK/M,UAAU,oEAAf,SACE,sBAAKA,UAAU,uCAAf,UACE,qBAAKA,UAAU,qBAAf,wBACA,cAAC,IAAD,CAASuM,KAAMq0B,IAAYC,aAI/B,sBAAK7gC,UAAU,4DAAf,UACE,qBAAKA,UAAU,2BAAf,SACE,qBAAKA,UAAU,uCAAf,SACG5B,EAAM8gC,iBAAiBjF,SAAS56B,MAC/B,SAACwa,GAAD,OAASA,EAAIqgB,WAAaC,OAE1B,sBAAKn6B,UAAU,+BAAf,UACE,sBAAKA,UAAU,uCAAf,UACE,qBACEiK,wBAAyB,CACvBC,OAAQ9L,EAAM8gC,iBAAiBjF,SAAS56B,MACtC,SAACwa,GAAD,OAASA,EAAIqgB,WAAaC,MACzB74B,OAELtB,UAAU,+BAIZ,sBAAKA,UAAU,sBAAf,UACE,sBAAKA,UAAU,qGAAf,UACG5B,EAAM8gC,iBAAiBjyB,MAD1B,YAGA,sBAAKjN,UAAU,sDAAf,UACE,sBACEO,QAAS,kBAAM6/B,GAAeD,IAC9BngC,UAAU,mCAFZ,UAIE,qBAAKA,UAAU,YAAf,SACE,cAAC,IAAD,CAASA,UAAU,yBAErB,sBACEA,UAAU,gBACViL,MAAO,CAAE8R,MAAO,QAFlB,UAIE,sBAAM/c,UAAU,yCAAhB,sBAGA,sBACEsB,MAAK,UACHg/B,KAAkBjhC,MAChB,SAACwa,GAAD,OAASA,EAAIK,MAAQigB,aAFpB,aACH,EAEG5wB,MAELvJ,UAAU,2CACViL,MAAO,CAAE8R,MAAO,QAPlB,mBAUIujB,KAAkBjhC,MAChB,SAACwa,GAAD,OAASA,EAAIK,MAAQigB,aAX3B,aAUI,EAEG5wB,WAIT,qBACEvJ,UAAS,WACQ,IAAfmgC,EACI,2BACA,+BAHG,yIADX,UAOkB,IAAfA,EACC,cAAC,IAAD,CAASngC,UAAU,sBAEnB,cAAC,IAAD,CAAiBA,UAAU,iCAIjB,IAAfmgC,GACC,qBACEngC,UAAU,mCACViL,MAAO,CAAE8R,MAAO,SAFlB,SAIE,qBAAK/c,UAAU,uGAAf,SACGsgC,KAAkBpgC,KAAI,SAACf,EAAMyO,GAAP,OACrB,uBACErN,QAAS,WACPnC,EAAM8hC,oBAAoB/gC,EAAK+a,KAC/BkmB,GAAeD,GACfE,GAAoBlhC,EAAK+a,MAG3Bla,UAAS,iIACPm6B,KAAqBh7B,EAAK+a,IACtB,6CACA,qFAVR,UAaGigB,KAAqBh7B,EAAK+a,IACzB,cAAC,KAAD,CAAsBla,UAAU,iBAEhC,cAAC,KAAD,CAAwBA,UAAU,iBACjC,IACFb,EAAKoK,QAZDqE,EAAI,mBAqBe,OAAvCxP,EAAM8gC,iBAAiBlF,aAIlB,OAHNkD,YACE9+B,EAAM8gC,iBAAiB3yB,KACvBnO,EAAMyO,cAAcA,gBAEtBqwB,YACE9+B,EAAM8gC,iBAAiB3yB,KACvBnO,EAAMyO,cAAcA,iBAChBswB,2BAAyBmB,SAC7BW,EACE7gC,EAAM8gC,iBACN9gC,EAAMyO,cAAcA,cACpBstB,GACA/7B,EAAM4jB,cAAcgb,kBACpB,eAGF,qBACE/yB,wBAAyB,CACvBC,OAAQ9L,EAAM8gC,iBAAiBjF,SAAS56B,MACtC,SAACwa,GAAD,OAASA,EAAIqgB,WAAaC,MACzBxxB,aAEL3I,UAAU,gDAOtB,sBACEA,UAAS,yBACgC,OAAvC5B,EAAM8gC,iBAAiBlF,aAIjB,OAHNkD,YACE9+B,EAAM8gC,iBAAiB3yB,KACvBnO,EAAMyO,cAAcA,gBAErBqwB,YACC9+B,EAAM8gC,iBAAiB3yB,KACvBnO,EAAMyO,cAAcA,iBAChBswB,2BAAyBmB,UAC7BpB,YACE9+B,EAAM8gC,iBAAiB3yB,KACvBnO,EAAMyO,cAAcA,iBAChBswB,2BAAyBoB,OAE7B,WADA,GAdG,YAiBTh+B,QAAS,kBAAqB,IAAf4/B,GAAuBC,GAAc,IAlBtD,UAqB0C,OAAvChiC,EAAM8gC,iBAAiBlF,aAIhB,OAHNkD,YACE9+B,EAAM8gC,iBAAiB3yB,KACvBnO,EAAMyO,cAAcA,iBAErBqwB,YACC9+B,EAAM8gC,iBAAiB3yB,KACvBnO,EAAMyO,cAAcA,iBAChBswB,2BAAyBC,gBAC7BF,YACE9+B,EAAM8gC,iBAAiB3yB,KACvBnO,EAAMyO,cAAcA,iBAChBswB,2BAAyBG,iBAC/B,cAAC,IAAD,CACE/wB,KAAM2wB,YACJ9+B,EAAM8gC,iBAAiB3yB,KACvBnO,EAAMyO,cAAcA,eAEtBi0B,kBAAmB1iC,EAAM4jB,cAAcgb,iBACvC+D,uBAAwB,CACtB/G,YAAa57B,EAAM8gC,iBAAiBlF,YACpCC,cAAUxa,EACVkS,QAASD,YACPtzB,EAAM8gC,iBAAiBjF,SAAS56B,MAC9B,SAACwa,GAAD,OAASA,EAAIqgB,WAAaC,MACzBxI,QAAQ,GAAGC,QAEhBoP,YAAa5iC,EAAM8gC,iBAAiBjF,SAAS56B,MAC3C,SAACwa,GAAD,OAASA,EAAIqgB,WAAaC,MACzBxI,QAAQ,IAEbsP,iBAAkB7iC,EAAM6iC,mBAIU,OAAvC7iC,EAAM8gC,iBAAiBlF,aAIhB,OAHNkD,YACE9+B,EAAM8gC,iBAAiB3yB,KACvBnO,EAAMyO,cAAcA,gBAEtBqwB,YACE9+B,EAAM8gC,iBAAiB3yB,KACvBnO,EAAMyO,cAAcA,iBAChBswB,2BAAyBS,WAC7B,cAAC,IAAD,CACErxB,KAAM2wB,YAAgB,UACpB9+B,EAAM4jB,cAAckf,sBADA,iBACpB,EAAoC5yB,UAAUjP,MAC5C,SAACwa,GAAD,OACEA,EAAImgB,cAAgB57B,EAAM8gC,iBAAiBlF,sBAH3B,aACpB,EAGGztB,KACHnO,EAAMyO,cAAcA,eAEtBi0B,kBAAmB1iC,EAAM4jB,cAAcgb,iBACvC+D,uBAAwB,CACtB/G,YAAa57B,EAAM8gC,iBAAiBlF,YACpCC,cAAUxa,EACVkS,QAASE,YACPzzB,EAAM8gC,iBAAiBjF,SAAS56B,MAC9B,SAACwa,GAAD,OAASA,EAAIqgB,WAAaC,MACzBxI,QAAQ,GAAGC,QAEhBoP,YAAa5iC,EAAM8gC,iBAAiBjF,SAAS56B,MAC3C,SAACwa,GAAD,OAASA,EAAIqgB,WAAaC,MACzBxI,QAAQ,IAEbsP,iBAAkB7iC,EAAM6iC,mBAWU,OAAvC7iC,EAAM8gC,iBAAiBlF,aAIhB,OAHNkD,YACE9+B,EAAM8gC,iBAAiB3yB,KACvBnO,EAAMyO,cAAcA,gBAEtBqwB,YACE9+B,EAAM8gC,iBAAiB3yB,KACvBnO,EAAMyO,cAAcA,iBAChBswB,2BAAyBO,UAC7B,cAAC,IAAD,CACEvD,iBAAkBA,GAClBgH,aAAc/iC,EAAM4jB,cAAckf,eAClC30B,KAAM2wB,YAAgB,UACpB9+B,EAAM4jB,cAAckf,sBADA,iBACpB,EAAoC5yB,UAAUjP,MAC5C,SAACwa,GAAD,OACEA,EAAImgB,cAAgB57B,EAAM8gC,iBAAiBlF,sBAH3B,aACpB,EAGGztB,KACHnO,EAAMyO,cAAcA,eAEtBi0B,kBAAmB1iC,EAAM4jB,cAAcgb,iBACvC+D,uBAAwB,CACtB/G,YAAa57B,EAAM8gC,iBAAiBlF,YACpCC,cAAUxa,EACVkS,QAASG,YACP1zB,EAAM8gC,iBAAiBjF,SAAS56B,MAC9B,SAACwa,GAAD,OAASA,EAAIqgB,WAAaC,MACzBxI,QAAQ,GAAGC,QAEhBwP,gBAAiBC,YACfvP,YACE1zB,EAAM8gC,iBAAiBjF,SAAS56B,MAC9B,SAACwa,GAAD,OAASA,EAAIqgB,WAAaC,MACzBxI,QAAQ,GAAGC,SAGlBoP,YAAa5iC,EAAM8gC,iBAAiBjF,SAAS56B,MAC3C,SAACwa,GAAD,OAASA,EAAIqgB,WAAaC,MACzBxI,QAAQ,IAEbsP,iBAAkB7iC,EAAM6iC,mBAIU,OAAvC7iC,EAAM8gC,iBAAiBlF,aAIhB,OAHNkD,YACE9+B,EAAM8gC,iBAAiB3yB,KACvBnO,EAAMyO,cAAcA,gBAEtBqwB,YACE9+B,EAAM8gC,iBAAiB3yB,KACvBnO,EAAMyO,cAAcA,iBAChBswB,2BAAyBa,iBAC7B,cAAC,IAAD,CACEzxB,KAAM2wB,YAAgB,UACpB9+B,EAAM4jB,cAAckf,sBADA,iBACpB,EAAoC5yB,UAAUjP,MAC5C,SAACwa,GAAD,OACEA,EAAImgB,cAAgB57B,EAAM8gC,iBAAiBlF,sBAH3B,aACpB,EAGGztB,KACHnO,EAAMyO,cAAcA,eAEtBi0B,kBAAmB1iC,EAAM4jB,cAAcgb,iBACvC+D,uBAAwB,CACtB/G,YAAa57B,EAAM8gC,iBAAiBlF,YACpCC,cAAUxa,EACVkS,QAASI,YACP3zB,EAAM8gC,iBAAiBjF,SAAS56B,MAC9B,SAACwa,GAAD,OAASA,EAAIqgB,WAAaC,MACzBxI,QAAQ,GAAGC,QAEhBoP,YAAa5iC,EAAM8gC,iBAAiBjF,SAAS56B,MAC3C,SAACwa,GAAD,OAASA,EAAIqgB,WAAaC,MACzBxI,QAAQ,IAEbsP,iBAAkB7iC,EAAM6iC,mBAIU,OAAvC7iC,EAAM8gC,iBAAiBlF,aAIhB,OAHNkD,YACE9+B,EAAM8gC,iBAAiB3yB,KACvBnO,EAAMyO,cAAcA,gBAEtBqwB,YACE9+B,EAAM8gC,iBAAiB3yB,KACvBnO,EAAMyO,cAAcA,iBAChBswB,2BAAyBe,aAC7B,cAAC,IAAD,CACE3xB,KAAM2wB,YAAgB,UACpB9+B,EAAM4jB,cAAckf,sBADA,iBACpB,EAAoC5yB,UAAUjP,MAC5C,SAACwa,GAAD,OACEA,EAAImgB,cAAgB57B,EAAM8gC,iBAAiBlF,sBAH3B,aACpB,EAGGztB,KACHnO,EAAMyO,cAAcA,eAEtBi0B,kBAAmB1iC,EAAM4jB,cAAcgb,iBACvC+D,uBAAwB,CACtB/G,YAAa57B,EAAM8gC,iBAAiBlF,YACpCC,cAAUxa,EACVkS,QAASK,YACP5zB,EAAM8gC,iBAAiBjF,SAAS56B,MAC9B,SAACwa,GAAD,OAASA,EAAIqgB,WAAaC,MACzBxI,QAAQ,GAAGC,QAEhBoP,YAAa5iC,EAAM8gC,iBAAiBjF,SAAS56B,MAC3C,SAACwa,GAAD,OAASA,EAAIqgB,WAAaC,MACzBxI,QAAQ,IAEbsP,iBAAkB7iC,EAAM6iC,mBAKU,OAAvC7iC,EAAM8gC,iBAAiBlF,aAIhB,OAHNkD,YACE9+B,EAAM8gC,iBAAiB3yB,KACvBnO,EAAMyO,cAAcA,gBAEtBqwB,YACE9+B,EAAM8gC,iBAAiB3yB,KACvBnO,EAAMyO,cAAcA,iBAChBswB,2BAAyBW,SAC7B,cAAC,IAAD,CACEvxB,KAAM2wB,YAAgB,UACpB9+B,EAAM4jB,cAAckf,sBADA,iBACpB,EAAoC5yB,UAAUjP,MAC5C,SAACwa,GAAD,OACEA,EAAImgB,cAAgB57B,EAAM8gC,iBAAiBlF,sBAH3B,aACpB,EAGGztB,KACHnO,EAAMyO,cAAcA,eAEtBi0B,kBAAmB1iC,EAAM4jB,cAAcgb,iBACvC+D,uBAAwB,CACtB/G,YAAa57B,EAAM8gC,iBAAiBlF,YACpCC,cAAUxa,EACVkS,QAASM,YACP7zB,EAAM8gC,iBAAiBjF,SAAS56B,MAC9B,SAACwa,GAAD,OAASA,EAAIqgB,WAAaC,MACzBxI,QAAQ,GAAGC,QAEhBoP,YAAa5iC,EAAM8gC,iBAAiBjF,SAAS56B,MAC3C,SAACwa,GAAD,OAASA,EAAIqgB,WAAaC,MACzBxI,QAAQ,IAEbsP,iBAAkB7iC,EAAM6iC,mBAIU,OAAvC7iC,EAAM8gC,iBAAiBlF,aAIhB,OAHNkD,YACE9+B,EAAM8gC,iBAAiB3yB,KACvBnO,EAAMyO,cAAcA,gBAEtBqwB,YACE9+B,EAAM8gC,iBAAiB3yB,KACvBnO,EAAMyO,cAAcA,iBAChBswB,2BAAyBK,0BAC7B,cAAC,IAAD,CACEjxB,KAAM2wB,YAAgB,UACpB9+B,EAAM4jB,cAAckf,sBADA,iBACpB,EAAoC5yB,UAAUjP,MAC5C,SAACwa,GAAD,OACEA,EAAImgB,cAAgB57B,EAAM8gC,iBAAiBlF,sBAH3B,aACpB,EAGGztB,KACHnO,EAAMyO,cAAcA,eAEtBi0B,kBAAmB1iC,EAAM4jB,cAAcgb,iBACvC+D,uBAAwB,CACtB/G,YAAa57B,EAAM8gC,iBAAiBlF,YACpCC,cAAUxa,EACVkS,QAASO,YACP9zB,EAAM8gC,iBAAiBjF,SAAS56B,MAC9B,SAACwa,GAAD,OAASA,EAAIqgB,WAAaC,MACzBxI,QAAQ,GAAGC,QAEhBoP,YAAa5iC,EAAM8gC,iBAAiBjF,SAAS56B,MAC3C,SAACwa,GAAD,OAASA,EAAIqgB,WAAaC,MACzBxI,QAAQ,IAEbsP,iBAAkB7iC,EAAM6iC,mBAIU,OAAvC7iC,EAAM8gC,iBAAiBlF,aAIhB,OAHNkD,YACE9+B,EAAM8gC,iBAAiB3yB,KACvBnO,EAAMyO,cAAcA,gBAEtBqwB,YACE9+B,EAAM8gC,iBAAiB3yB,KACvBnO,EAAMyO,cAAcA,iBAChBswB,2BAAyBiB,OAC7B,cAAC,IAAD,CACE7xB,KAAM2wB,YAAgB,UACpB9+B,EAAM4jB,cAAckf,sBADA,iBACpB,EAAoC5yB,UAAUjP,MAC5C,SAACwa,GAAD,OACEA,EAAImgB,cAAgB57B,EAAM8gC,iBAAiBlF,sBAH3B,aACpB,EAGGztB,KACHnO,EAAMyO,cAAcA,eAEtBi0B,kBAAmB1iC,EAAM4jB,cAAcgb,iBACvC+D,uBAAwB,CACtB/G,YAAa57B,EAAM8gC,iBAAiBlF,YACpCC,cAAUxa,EACVkS,QAASQ,YACP/zB,EAAM8gC,iBAAiBjF,SAAS56B,MAC9B,SAACwa,GAAD,OAASA,EAAIqgB,WAAaC,MACzBxI,QAAQ,GAAGC,QAEhBoP,YAAa5iC,EAAM8gC,iBAAiBjF,SAAS56B,MAC3C,SAACwa,GAAD,OAASA,EAAIqgB,WAAaC,MACzBxI,QAAQ,IAEbsP,iBAAkB7iC,EAAM6iC,mBAIU,OAAvC7iC,EAAM8gC,iBAAiBlF,aAIhB,OAHNkD,YACE9+B,EAAM8gC,iBAAiB3yB,KACvBnO,EAAMyO,cAAcA,gBAEtBqwB,YACE9+B,EAAM8gC,iBAAiB3yB,KACvBnO,EAAMyO,cAAcA,iBAChBswB,2BAAyBoB,QAC7B,cAAC,IAAD,CACEhyB,KAAM2wB,YAAgB,UACpB9+B,EAAM4jB,cAAckf,sBADA,iBACpB,EAAoC5yB,UAAUjP,MAC5C,SAACwa,GAAD,OACEA,EAAImgB,cAAgB57B,EAAM8gC,iBAAiBlF,sBAH3B,aACpB,EAGGztB,KACHnO,EAAMyO,cAAcA,eAEtBi0B,kBAAmB1iC,EAAM4jB,cAAcgb,iBACvC+D,uBAAwB,CACtB/G,YAAa57B,EAAM8gC,iBAAiBlF,YACpCC,cAAUxa,EACVkS,QAASvzB,EAAM8gC,iBAAiBjF,SAAS56B,MACvC,SAACwa,GAAD,OAASA,EAAIqgB,WAAaC,MACzBxI,SAEL2P,cAAeljC,EAAM8gC,iBAAiBjF,SAAS56B,MAC7C,SAACwa,GAAD,OAASA,EAAIqgB,WAAaC,MAE5B8G,iBAAkB7iC,EAAM6iC,iBACxB9G,iBAAkBA,GAClBgH,aAAc/iC,EAAM4jB,cAAckf,4BAsCrCnB,O,oFC5wBTwB,EAAwB,SAC5BC,GAEA,OAAOA,EAAgBtiC,QACrB,SAACC,GAAD,OAAUA,EAAK2I,qBAAuBC,IAAkB4B,aA2I7CwmB,IAjGiD,SAAC/xB,GAC/D,IAtCAqjC,EACA/N,EAqCA,EAAsCr1B,mBAAiB,IAAvD,mBAAOqtB,EAAP,KAAoBC,EAApB,KACA,OACE,oCAEE,sBAAK3rB,UAAU,gCAAf,UACE,cAAC,KAAD,CAAUA,UAAU,0BACpB,uBACEuM,KAAK,OACLxB,YAAY,SACZ/K,UAAU,qFACVmL,SAAU,SAACC,GAAD,OAAOugB,EAAevgB,EAAEC,OAAO9B,QACzCA,MAAOmiB,EACPpgB,WACEi2B,EAAsBnjC,EAAM0wB,uBAAuB5vB,QAAO,SAACC,GAAD,OACxD0sB,YACEztB,EAAM0tB,SACN1tB,EAAM2tB,cAAc3Z,gBACpBjT,EAAK8I,mBAEPlI,OAAS,KAKf,wBACEC,UAAU,4EACVuM,KAAK,SACLhM,QAAS,WACPnC,EAAM6tB,oBAAmB,GACzB7tB,EAAM8tB,gBAAgB,KAL1B,sBAWwC,IAE1C,qBAAKlsB,UAAU,4DAAf,SACGuhC,EAAsBnjC,EAAM0wB,uBAAuB5vB,QAAO,SAACC,GAAD,OACzD0sB,YACEztB,EAAM0tB,SACN1tB,EAAM2tB,cAAc3Z,gBACpBjT,EAAK8I,mBAEPlI,OAAS,GAlFjB0hC,EAoFUF,EAAsBnjC,EAAM0wB,uBAAuB5vB,QAAO,SAACC,GAAD,OACxD0sB,YACEztB,EAAM0tB,SACN1tB,EAAM2tB,cAAc3Z,gBACpBjT,EAAK8I,mBAvFnByrB,EA0FUhI,OAxFNjM,IAAciU,GAAiB,KAATA,EAAoB+N,EACvCA,EAAQviC,QAAO,SAACwiC,GACrB,IAAIC,EAGJ,IAAK,IAAIC,KAAQF,EASf,GARAC,GAAO,EACM,aAATC,IACFD,EACED,EAAQj5B,SAASC,eACd8V,WACAoG,cACAG,QAAQ2O,EAAK9O,gBAAkB,GAElC+c,EAAM,MAEZ,OAAOA,MAyECzhC,KAAI,SAACf,EAAMgB,GAAP,OACJ,sBACEH,UAAS,yEACP5B,EAAM2uB,cAAgB5tB,EAAK8I,gBAC3B,yCAHJ,UAOE,qBACEjI,UAAU,iCACVO,QAAS,WACPnC,EAAM6tB,oBAAmB,GACzB7tB,EAAM+tB,eAAehtB,EAAK8I,iBAJ9B,SAOE,mBAAGjI,UAAU,mCAAb,SACGb,EAAKsJ,SAASC,mBAGnB,wBACE6D,KAAK,SACLvM,UAAU,uGACVO,QAAS,WACPnC,EAAM8tB,gBAAgB/sB,EAAK8I,iBAJ/B,oBAbK9H,EAAQhB,EAAK8I,mBAyBtB,qBAAKjI,UAAU,kBAAf,SACE,mBAAGA,UAAU,mCAAb,qD,4EC/FC6hC,EAAoB,SAC/BC,EACAl/B,GAEA,IAAIm/B,EAAyC,GAC7C,IAAK,IAAIn0B,KAAKk0B,EACZC,EAAa79B,KAAK,CAChBrF,YAAaijC,EAAal0B,GAAG/O,YAC7BmjC,QAASF,EAAal0B,GAAGo0B,QACzBr5B,YAAam5B,EAAal0B,GAAGjF,YAC7BpC,MAAOu7B,EAAal0B,GAAGrH,MACvB07B,SAAUH,EAAal0B,GAAGq0B,SAC1BvgC,MAAOogC,EAAal0B,GAAGlM,MACvB+Y,MAAOqnB,EAAal0B,GAAG6M,MACvBpL,aAAcyyB,EAAal0B,GAAGyB,aAC9B+c,OAAQ0V,EAAal0B,GAAGwe,OACxBhP,UAAW0kB,EAAal0B,GAAGwP,UAC3B8kB,WAAYJ,EAAal0B,GAAGs0B,WAC5BpjC,gBAAiBgjC,EAAal0B,GAAG9O,gBACjCwC,MAAOwgC,EAAal0B,GAAGtM,MACvB6gC,KAAML,EAAal0B,GAAGu0B,KACtB/iC,kBAAmB0iC,EAAal0B,GAAGxO,kBACnC0M,aAAcg2B,EAAal0B,GAAG9B,aAC9BH,OAAQm2B,EAAal0B,GAAGjC,OACxBy2B,UAAW9V,YAAiB1pB,EAAoBk/B,EAAal0B,IAAIkC,KACjExQ,0BAA2BwiC,EAAal0B,GAAGtO,4BAG/C,OAAOyiC,GAGHM,EAAuB,SAC3BP,GAOA,OALAl7B,QAAQC,IAAI,CACV2P,SAAUsrB,EAAa5iC,QACrB,SAACC,GAAD,MAAqC,aAA3BA,EAAKC,uBAGZ0iC,EAAa5iC,QAAO,SAACC,GAAD,MAAqC,aAA3BA,EAAKC,sBAoI7B8wB,IAzG2C,SAAC9xB,GACzD,IAxBAqjC,EACA/N,EAuBA,EAAsCr1B,mBAAiB,IAAvD,mBAAOqtB,EAAP,KAAoBC,EAApB,KACA,OACE,oCAEE,sBAAK3rB,UAAU,gCAAf,UACE,cAAC,KAAD,CAAUA,UAAU,0BACpB,uBACEuM,KAAK,OACLxB,YAAY,SACZ/K,UAAU,qFACVmL,SAAU,SAACC,GAAD,OAAOugB,EAAevgB,EAAEC,OAAO9B,QACzCA,MAAOmiB,EACPpgB,WACEu2B,EACEQ,EAAqBjkC,EAAMoR,oBAC3BpR,EAAMwE,oBACN1D,QAAO,SAACC,GAAD,OACP0sB,YACEztB,EAAM0tB,SACN1tB,EAAM2tB,cAAc3Z,gBACpBjT,EAAKwM,WAEP5L,OAAS,KAKf,wBACEC,UAAU,4EACVuM,KAAK,SACLhM,QAAS,WACPnC,EAAM6tB,oBAAmB,GACzB7tB,EAAM8tB,gBAAgB,KAL1B,sBAYF,qBAAKlsB,UAAU,4DAAf,SACG5B,EAAMoR,mBAAmBtQ,QAAO,SAACC,GAAD,OAC/B0sB,YACEztB,EAAM0tB,SACN1tB,EAAM2tB,cAAc3Z,gBACpBjT,EAAKwM,WAEP5L,OAAS,GAtEjB0hC,EAwEUI,EACEQ,EAAqBjkC,EAAMoR,oBAC3BpR,EAAMwE,oBACN1D,QAAO,SAACC,GAAD,OACP0sB,YACEztB,EAAM0tB,SACN1tB,EAAM2tB,cAAc3Z,gBACpBjT,EAAKwM,WA9EnB+nB,EAiFUhI,OA/ENjM,IAAciU,GAAiB,KAATA,EAAoB+N,EACvCA,EAAQviC,QACb,SAACwiC,GAAD,OACEA,EAAQU,UAAU5jB,WAAWoG,cAAcG,QAAQ2O,EAAK9O,gBACvD,MA4EK1kB,KAAI,SAAC6P,EAAK5P,GAAN,OACJ,kCACE,sBACEH,UAAS,yEACP5B,EAAM2uB,cAAgBhd,EAAIpE,QAC1B,yCAHJ,UAME,qBACE3L,UAAU,iCACVO,QAAS,WACPnC,EAAM6tB,oBAAmB,GACzB7tB,EAAM+tB,eAAepc,EAAIpE,SAJ7B,SAOE,mBAAG3L,UAAU,mCAAb,SACGssB,YAAiBluB,EAAMwE,mBAAoBmN,GAAKD,SAGrD,wBACEvD,KAAK,SACLvM,UAAU,uGACVO,QAAS,WACPnC,EAAM4uB,eAAiBjd,EAAIpE,OACvBvN,EAAM8tB,gBAAgB,IACtB9tB,EAAM8tB,gBAAgBnc,EAAIpE,SANlC,SASGvN,EAAM4uB,eAAiBjd,EAAIpE,OAAS,QAAU,aA3BvCxL,EAAQ4P,EAAIpE,WAiC5B,qBAAK3L,UAAU,kBAAf,SACE,mBAAGA,UAAU,mCAAb,qD,qOC7LCsiC,EAAsB,SAACC,GAClC,IAAItjB,EAAc,IAAI4B,KAEtB,OADa,IAAIA,KAAK0hB,EAAUvG,UACnBra,WAAa1C,EAAM0C,WAMrB6gB,EAAmB,SAC9B9yB,GAEA,OAAO+yB,IAAapjC,MAAK,SAACF,GAAD,OAAUA,EAAKuQ,WAAaA,MAG1Cge,EAAe,SAC1BgV,EACAC,GAEA,GAAID,EAAgB7wB,UAAW,CAC7B,IAAIoN,EAAQ,IAAI4B,KACd+hB,EAAc,IAAI/hB,KAAK8hB,EAAS3G,UAChC6G,EAAgB,IAAIhiB,KAAK8hB,EAAS7G,YACpC,GACE8G,EAAYjhB,WAAa1C,EAAM0C,WAC/BkhB,EAAclhB,WAAa1C,EAAM0C,WACjCghB,EAAS1G,cAAgBC,IAAsB4G,OAE/C,MAAO,OACF,GACLD,EAAclhB,UAAY1C,EAAM0C,WAChCghB,EAAS1G,cAAgBC,IAAsB4G,OAE/C,MAAO,UAGX,MAAO,UAgBIC,EAAb,kDAIE,WAAY3kC,GAA6B,IAAD,8BACtC,cAAMA,IAOR4kC,qBARwC,uCAQjB,WACrB7qB,EACAwqB,GAFqB,uBAAAv9B,EAAA,yDAIf69B,EAA6B9qB,EAAQtG,UAAY,QAAU,OAE5DtG,OAAOC,QAAP,mCAA2Cy3B,EAA3C,gBANgB,0CAOZ,GAPY,OA0BrB,IAAW/oB,KAhBNooB,EAAoBK,IACvB,EAAKvkC,MAAMsG,eAAe,CACxBpD,MAAM,8DACNT,MAAOqG,IAAgB8xB,UAIvBkK,EAAgC,CAClC9qB,kBAAmBD,EAAQC,kBAC3B5J,OAAQ2J,EAAQ3J,OAChBqD,UAAWsG,EAAQtG,UACnB4b,MAAO,GACPzjB,UAAWmO,EAAQnO,UACnBmF,UAAWgJ,EAAQhJ,UACnBiD,gBAAiB+F,EAAQ/F,iBAET+F,EAAQsV,MACpB/f,OAAOyM,UAAUC,eAAeC,KAAKlC,EAAQsV,MAAOvT,KAChD7U,EAAU8S,EAAQsV,MAAMvT,GAC1ByoB,EAASjzB,WAAarK,EAAQqK,SAC5BizB,EAAS1G,cAAgBC,IAAsBC,KACjD+G,EAAQzV,MAAMvpB,KAAK,CACjBqb,QAASojB,EAASpjB,QAClBud,WAAY6F,EAAS7F,WACrBptB,SAAUizB,EAASjzB,SACnBusB,YAAaC,IAAsB4G,OACnChH,WAAY6G,EAAS7G,WACrBE,SAAU2G,EAAS3G,SACnBmH,oBAAqBR,EAASQ,oBAC9Bp/B,IAAK4+B,EAAS5+B,IACdq/B,QAAST,EAASS,UAGpBF,EAAQzV,MAAMvpB,KAAK,CACjBqb,QAASojB,EAASpjB,QAClBud,WAAY6F,EAAS7F,WACrBptB,SAAUizB,EAASjzB,SACnBusB,YAAaC,IAAsBC,KACnCL,WAAY6G,EAAS7G,WACrBE,SAAU2G,EAAS3G,SACnBmH,oBAAqBR,EAASQ,oBAC9Bp/B,IAAK4+B,EAAS5+B,IACdq/B,QAAST,EAASS,UAItBF,EAAQzV,MAAMvpB,KAAKmB,IAxDJ,OA6DrBuB,QAAQC,IAAI,wCACZD,QAAQC,IAAI,CAAEq8B,YACdt8B,QAAQC,IAAI,wCAEZ,EAAK6J,SAAS,CAAE/L,eAAgBg+B,EAASjzB,WAjEpB,oBAmEDlJ,IAAMC,IAAN,UACb3E,IAAI4E,SADS,oBACWyR,EAAQ/F,iBACnC8wB,GArEiB,QAmEbv8B,EAnEa,OAuEnB,EAAKvI,MAAMmpB,kBAAkB5gB,EAAI9G,MACjC,EAAKzB,MAAMilC,mBAAmB18B,EAAI9G,MAClC,EAAKzB,MAAMsG,eAAe,CACxBpD,MAAM,WAAD,OAAa2hC,EAAb,kBACLpiC,MAAOqG,IAAgBo8B,OAEzB,EAAK5yB,SAAS,CAAE/L,eAAgB,KAChCiC,QAAQC,IAAI,sBAAuBF,GA9EhB,mDAgFnBC,QAAQQ,MAAM,CAAEA,MAAOC,YAAY,EAAD,MAClC,EAAKjJ,MAAMsG,eAAe,CACxBpD,MAAO+F,YAAY,EAAD,IAClBxG,MAAOqG,IAAgB8xB,UAnFN,2DARiB,wDAGtC,EAAKrnB,MAAQ,CACXhN,eAAgB,IAJoB,EAJ1C,0CAoGE,WAAU,IAAD,OACP,OACE,wBAAO3E,UAAU,6BAA6BiC,GAAG,kBAAjD,UACE,uBAAOjC,UAAU,sEAAjB,SACE,+BACE,oBAAIA,UAAU,MAAd,eACA,oBAAIA,UAAU,MAAd,uBACA,oBAAIA,UAAU,MAAd,wBACA,oBAAIA,UAAU,MAAd,sBACCiU,KAAK7V,MAAMskC,gBAAgB7wB,WAC1B,oBAAI7R,UAAU,MAAMC,QAAS,EAA7B,yBAMN,gCAEGgU,KAAK7V,MAAMskC,gBAAgBjV,MAAMvtB,KAAI,SAACf,EAAMgB,GAAP,OACpC,qBAEEH,UAAS,6CAFX,UAIE,oBAAIA,UAAU,kCAAd,SAAiDG,EAAQ,IACzD,oBAAIH,UAAU,gBAAd,SACE,sBAAMA,UAAU,UAAhB,SACGwiC,EAAiBrjC,EAAKuQ,WACrB9F,YACE44B,EAAiBrjC,EAAKuQ,UAAWotB,gBAIzC,oBAAI98B,UAAU,gBAAd,SAA+B+J,YAAK5K,EAAK28B,cACzC,oBAAI97B,UAAU,gBAAd,SAA+B+J,YAAK5K,EAAK68B,YACxC,EAAK59B,MAAMskC,gBAAgB7wB,WAC1B,6BACsD,SAAnD6b,EAAa,EAAKtvB,MAAMskC,gBAAiBvjC,GACxC,sBAAMa,UAAS,yCAAf,kBAIA,YADE0tB,EAAa,EAAKtvB,MAAMskC,gBAAiBvjC,GAE3C,sBAAMa,UAAS,wCAAf,qBAIA,sBAAMA,UAAS,uCAAf,sBAML,EAAK5B,MAAMskC,gBAAgB7wB,WAC1B,6BACGywB,EAAoBnjC,IACnB,sBAAKa,UAAU,yCAAf,UACE,sBACEA,UAAS,mBACP,EAAK2R,MAAMhN,eAAe5E,OAAS,EAC/B,qBACA,kBAENuB,MACEnC,EAAK88B,cAAgBC,IAAsBC,KACvC,uBACA,qBAEN57B,QAAS,kBACP,EAAKoR,MAAMhN,eAAe5E,QAAU,GACpC,EAAKijC,qBACH,EAAK5kC,MAAMskC,gBACXvjC,IAfN,UAmBE,sBAAMa,UAAU,yDAChB,sBACEA,UAAS,0JACPb,EAAK88B,cAAgBC,IAAsB4G,OACvC,aACA,gDAIT,EAAKnxB,MAAMhN,iBAAmBxF,EAAKuQ,UAClC,cAAC,IAAD,CAAY1P,UAAU,iEAjE3BG,EAAQhB,EAAK4E,iBAxHhC,GAAoCyR,aAuMrBlR,gBAAQ,KAAM,CAC3BijB,sBACA7iB,qBAFaJ,CAGZy+B,I,2FCvEY3F,IApLQ,SAACh/B,GACtB,IAAMmlC,EAAc,SAClBpkC,GAEA,IAAIwH,GAAM,EACV,GAAIvI,EAAM0iC,kBAAkB/gC,OAAS,EAAG,CACtC,IAAIyf,EAAQphB,EAAM0iC,kBAAkBzhC,MAClC,SAACwa,GAAD,OAASA,EAAImgB,cAAgB57B,EAAM2iC,uBAAuB/G,eAE5D,QAAcva,IAAVD,EAAqB,CACvB,IAAIgkB,EAAShkB,EAAMmS,QAAQtyB,MACzB,SAACokC,GAAD,OACEA,EAAI3E,YAAc1gC,EAAM2iC,uBAAuBC,YAAYlC,aAE/D,QAAerf,IAAX+jB,EAAsB,CACxB,IAAIje,EAAIie,EAAO5R,OAAOvyB,MAAK,SAACwa,GAAD,OAASA,EAAI5X,KAAO9C,EAAK8C,WAC1Cwd,IAAN8F,IAAgC,IAAbA,EAAE7b,SACvB/C,GAAM,KAKd,OAAOA,GAGH+8B,EAAkB,SACtBC,EACAC,GAEiD,OAA7CxlC,EAAM2iC,uBAAuB/G,aAC/B57B,EAAM6iC,iBAAiB,CACrBjH,YAAa57B,EAAM2iC,uBAAuB/G,YAC1CtwB,QAAQ,EACRioB,QAAS,CACP,CACE5tB,IAAK6/B,EAAe7/B,IACpB+6B,UAAW8E,EAAe9E,UAC1BlN,OAAQ+R,OAuGlB,OAxCAr2B,qBAAU,WACR,IAAIyS,EAAO3hB,EAAM0iC,kBAAkBzhC,MACjC,SAACwa,GAAD,OAASA,EAAImgB,cAAgB57B,EAAM2iC,uBAAuB/G,eAE5D,SACWva,IAATM,QACUN,IAATM,GAAwD,IAAlCA,EAAK4R,QAAQ,GAAGC,OAAO7xB,cAGH0f,IAAzCrhB,EAAM2iC,uBAAuBpP,cACIlS,IAAjCrhB,EAAM2iC,wBACuC,OAA7C3iC,EAAM2iC,uBAAuB/G,YAC7B,CACA,IADA,EACI2J,EAAsD,GAD1D,cAEcvlC,EAAM2iC,uBAAuBpP,SAF3C,IAEA,2BAAoD,CAAC,IAA5CvsB,EAA2C,QAClDu+B,EAAU,sBACLA,GADK,CAER,CACE1hC,GAAImD,EAAEnD,GACNsH,MAAOnE,EAAEmE,MACTG,QAAQ,MARd,mCAa0C+V,IAA1CrhB,EAAM2iC,uBAAuB9G,UAC3B77B,EAAM6iC,iBAAiB,CACrBjH,YAAa57B,EAAM2iC,uBAAuB/G,YAC1CtwB,QAAQ,EACRioB,QAAS,CACP,CACE5tB,IAAK3F,EAAM2iC,uBAAuBC,YAAYj9B,IAC9C+6B,UAAW1gC,EAAM2iC,uBAAuBC,YAAYlC,UACpDlN,OAAQ+R,SAMnB,CAACvlC,IAEF,8BACoC,OAAjCA,EAAM2iC,6BACoCthB,IAAzCrhB,EAAM2iC,uBAAuBpP,SAC7BvzB,EAAM2iC,uBAAuBpP,QAAQzxB,KAAI,SAACf,EAAMyO,GAAP,OACvC,sBACEtM,MAAM,8BAENf,QAAS,kBAzGD,SAEhBpB,EACA66B,GAEA,IAAI6J,EAAazlC,EAAM0iC,kBAAkBzhC,MACvC,SAACwa,GAAD,OAASA,EAAImgB,cAAgBA,KAE/B,QAAmBva,IAAfokB,EAA0B,CAC5B,IAAIC,EAASD,EAAWlS,QAAQtyB,MAC9B,SAAC0kC,GAAD,OACEA,EAAOjF,YACP1gC,EAAM2iC,uBAAuBC,YAAYlC,aAE7C,QAAerf,IAAXqkB,EAAsB,CAExB,IAAIE,EAAgD,GACpD,GAAI5lC,EAAMmO,OAAS4wB,2BAAyBG,eAAgB,CAAC,IAAD,gBAC5CwG,EAAOlS,QADqC,IAC1D,2BAA6B,CAAC,IAArBqS,EAAoB,QAC3BD,EAAI,sBACCA,GADD,CAEF,CACE/hC,GAAIgiC,EAAEhiC,GACNsH,MAAO06B,EAAE16B,MACTG,QAAQ,MAP4C,8BAW1Dg6B,EAAgBM,EAAM5lC,EAAM2iC,uBAAuBC,aAErD,IAhBwB,EAgBpBkD,EAA8D,GAhB1C,cAkBU,IAAhBF,EAAKjkC,OAAe+jC,EAAOlS,OAASoS,GAlB9B,IAkBxB,2BAA4D,CAAC,IAApDG,EAAmD,QAExDD,EADEC,EAAMliC,KAAO9C,EAAK8C,GACF,sBACbiiC,GADa,CAEhB,CACEjiC,GAAIkiC,EAAMliC,GACVsH,MAAO46B,EAAM56B,MACbG,OACEtL,EAAMmO,OAAS4wB,2BAAyBG,iBAEnC6G,EAAMz6B,UAIC,sBAAOw6B,GAAP,CAA2BC,IAG/CT,EACEQ,EACA9lC,EAAM2iC,uBAAuBC,cArCT,iCA4FlB5B,CAAUjgC,EAAMf,EAAM2iC,uBAAuB/G,cAE/Ch6B,UAAS,qBACe,IAAtBujC,EAAYpkC,GACR,wFACA,sDAHG,2DANX,WAYyB,IAAtBokC,EAAYpkC,GACX,mCACGf,EAAMmO,OAAS4wB,2BAAyBG,eACvC,cAAC,KAAD,CAAsBt9B,UAAU,aAEhC,cAAC,IAAD,CAAmBA,UAAU,eAG/B5B,EAAMmO,OAAS4wB,2BAAyBG,eAC1C,cAAC,KAAD,CAAwBt9B,UAAU,sBAElC,cAAC,IAAD,CAAqBA,UAAU,aAEjC,qBACEiK,wBAAyB,CAAEC,OAAQ/K,EAAKoK,OACxCvJ,UAAU,WAzBP4N,EAAI,U,2ECSNgwB,IA7JG,SAACx/B,GACjB,IAAMmlC,EAAc,SAACpkC,GACnB,IAAIwH,GAAM,EACV,GAAIvI,EAAM0iC,kBAAkB/gC,OAAS,EAAG,CACtC,IAAIyf,EAAQphB,EAAM0iC,kBAAkBzhC,MAClC,SAACwa,GAAD,OAASA,EAAImgB,cAAgB57B,EAAM2iC,uBAAuB/G,eAE5D,QAAcva,IAAVD,EAAqB,CACvB,IAAIgkB,EAAShkB,EAAMmS,QAAQtyB,MACzB,SAACokC,GAAD,OACEA,EAAI3E,YAAc1gC,EAAM2iC,uBAAuBC,YAAYlC,aAE/D,QAAerf,IAAX+jB,EAAsB,CACxB,IAAIje,EAAIie,EAAO5R,OAAOvyB,MAAK,SAACwa,GAAD,OAASA,EAAI5X,KAAO9C,EAAK8C,WAC1Cwd,IAAN8F,IAAgC,IAAbA,EAAE7b,SACvB/C,GAAM,KAKd,OAAOA,GAEH+8B,EAAkB,SACtBC,EACAC,GAEiD,OAA7CxlC,EAAM2iC,uBAAuB/G,aAC/B57B,EAAM6iC,iBAAiB,CACrBjH,YAAa57B,EAAM2iC,uBAAuB/G,YAC1CtwB,QAAQ,EACRioB,QAAS,CACP,CACE5tB,IAAK6/B,EAAe7/B,IACpB+6B,UAAW8E,EAAe9E,UAC1BlN,OAAQ+R,OA+FlB,OAxCAr2B,qBAAU,WACR,IAAIyS,EAAO3hB,EAAM0iC,kBAAkBzhC,MACjC,SAACwa,GAAD,OAASA,EAAImgB,cAAgB57B,EAAM2iC,uBAAuB/G,eAE5D,SACWva,IAATM,QACUN,IAATM,GAAwD,IAAlCA,EAAK4R,QAAQ,GAAGC,OAAO7xB,cAGH0f,IAAzCrhB,EAAM2iC,uBAAuBpP,cACIlS,IAAjCrhB,EAAM2iC,wBACuC,OAA7C3iC,EAAM2iC,uBAAuB/G,YAC7B,CACA,IADA,EACI2J,EAAiD,GADrD,cAEcvlC,EAAM2iC,uBAAuBpP,SAF3C,IAEA,2BAAoD,CAAC,IAA5CvsB,EAA2C,QAClDu+B,EAAU,sBACLA,GADK,CAER,CACE1hC,GAAImD,EAAEnD,GACNsH,MAAOnE,EAAEmE,MACTG,QAAQ,MARd,mCAY0C+V,IAA1CrhB,EAAM2iC,uBAAuB9G,UAC3B77B,EAAM6iC,iBAAiB,CACrBjH,YAAa57B,EAAM2iC,uBAAuB/G,YAC1CtwB,QAAQ,EACRioB,QAAS,CACP,CACE5tB,IAAK3F,EAAM2iC,uBAAuBC,YAAYj9B,IAC9C+6B,UAAW1gC,EAAM2iC,uBAAuBC,YAAYlC,UACpDlN,OAAQ+R,SAMnB,CAACvlC,IAGF,qBAAK4B,UAAU,GAAf,SACoC,OAAjC5B,EAAM2iC,6BACoCthB,IAAzCrhB,EAAM2iC,uBAAuBpP,SAC7BvzB,EAAM2iC,uBAAuBpP,QAAQzxB,KAAI,SAACf,EAAMyO,GAAP,OACvC,sBAEErN,QAAS,kBA/FD,SAEhBpB,EACA66B,GAEA,IAAI6J,EAAazlC,EAAM0iC,kBAAkBzhC,MACvC,SAACwa,GAAD,OAASA,EAAImgB,cAAgBA,KAE/B,QAAmBva,IAAfokB,EAA0B,CAE5B,IAAIC,EAASD,EAAWlS,QAAQtyB,MAC9B,SAAC0kC,GAAD,OACEA,EAAOjF,YACP1gC,EAAM2iC,uBAAuBC,YAAYlC,aAE7C,QAAerf,IAAXqkB,EAAsB,CACxB,IADwB,EACpBE,EAA2C,GADvB,cAEVF,EAAOlS,QAFG,IAExB,2BAA6B,CAAC,IAArBqS,EAAoB,QAC3BD,EAAI,sBACCA,GADD,CAEF,CACE/hC,GAAIgiC,EAAEhiC,GACNsH,MAAO06B,EAAE16B,MACTG,QAAQ,MARU,8BAYxBg6B,EAAgBM,EAAMF,GACtB,IAbwB,EAapBH,EAAiD,GAb7B,cAcM,IAAhBK,EAAKjkC,OAAe+jC,EAAOlS,OAASoS,GAd1B,IAcxB,2BAAwD,CAAC,IAAhDze,EAA+C,QAEpDoe,EADEpe,EAAEtjB,KAAO9C,EAAK8C,GACN,sBACL0hC,GADK,CAER,CACE1hC,GAAI9C,EAAK8C,GACTsH,MAAOpK,EAAKoK,MACZG,QAAS6b,EAAE7b,UAIL,sBAAOi6B,GAAP,CAAmBpe,KAzBT,8BA4BxBme,EAAgBC,EAAYG,KAqDtB1E,CAAUjgC,EAAMf,EAAM2iC,uBAAuB/G,cAE/Ch6B,UAAS,8BACe,IAAtBujC,EAAYpkC,GACR,wFACA,sDAHG,2DALX,WAWyB,IAAtBokC,EAAYpkC,GACX,cAAC,KAAD,CAAsBa,UAAU,aAEhC,cAAC,KAAD,CAAwBA,UAAU,aAEpC,sBAAMA,UAAU,OAAhB,SAAwBb,EAAKoK,UAfxBqE,EAAI,U,iCC7JrB,kBAiLew2B,IA5JU,SAAChmC,GACxB,IAAMmlC,EAAc,SAClBpkC,GAEA,IAAIwH,GAAM,EACV,GAAIvI,EAAM0iC,kBAAkB/gC,OAAS,EAAG,CACtC,IAAIyf,EAAQphB,EAAM0iC,kBAAkBzhC,MAClC,SAACwa,GAAD,OAASA,EAAImgB,cAAgB57B,EAAM2iC,uBAAuB/G,eAE5D,QAAcva,IAAVD,EAAqB,CACvB,IAAIgkB,EAAShkB,EAAMmS,QAAQtyB,MACzB,SAACokC,GAAD,OACEA,EAAI3E,YAAc1gC,EAAM2iC,uBAAuBC,YAAYlC,aAE/D,QAAerf,IAAX+jB,EAAsB,CACxB,IAAIje,EAAIie,EAAO5R,OAAOvyB,MAAK,SAACwa,GAAD,OAASA,EAAI5X,KAAO9C,EAAK8C,WAC1Cwd,IAAN8F,GAAkC,KAAfA,EAAEhc,MAAM,KAC7B5C,GAAM,KAKd,OAAOA,GA0BHy4B,EAAY,SAChBjgC,EACA66B,GAEA,IA3BA2J,EACAC,OA6BmBnkB,IAHFrhB,EAAM0iC,kBAAkBzhC,MACvC,SAACwa,GAAD,OAASA,EAAImgB,cAAgBA,OA5B/B2J,EAiCI,CACE,CACE1hC,GAAI7D,EAAM2iC,uBAAuBC,YAAYpP,OAAO,GAAG3vB,GACvDsH,MAAOpK,EAAKoK,MACZG,OAAQtL,EAAM2iC,uBAAuBC,YAAYpP,OAAO,GAAGloB,SApCnEk6B,EAuCIxlC,EAAM2iC,uBAAuBC,YArCgB,OAA7C5iC,EAAM2iC,uBAAuB/G,aAC/B57B,EAAM6iC,iBAAiB,CACrBjH,YAAa57B,EAAM2iC,uBAAuB/G,YAC1CtwB,QAAQ,EACRioB,QAAS,CACP,CACE5tB,IAAK6/B,EAAe7/B,IACpB+6B,UAAW8E,EAAe9E,UAC1BlN,OAAQ,CACN,CACE3vB,GAAI0hC,EAAW,GAAG1hC,GAClBsH,MAAO,CAACo6B,EAAW,GAAGp6B,OACtBG,OAAQi6B,EAAW,GAAGj6B,eA6B9B26B,EAAgB,WACpB,IAGIC,EAHA1S,EAASxzB,EAAM0iC,kBAAkBzhC,MACnC,SAACwa,GAAD,OAASA,EAAImgB,cAAgB57B,EAAM2iC,uBAAuB/G,eAW5D,OARAsK,OACa7kB,IAAXmS,OACInS,EACAmS,EAAOD,QAAQtyB,MACb,SAACokC,GAAD,OACEA,EAAI3E,YACJ1gC,EAAM2iC,uBAAuBC,YAAYlC,kBAEjCrf,IAAXmS,QAAmCnS,IAAX6kB,EACF,IAAzBA,EAAO1S,OAAO7xB,QAAgBukC,EAAO1S,OAAO,GAAGroB,MAAM,GACrD,IAsCN,OAnCA+D,qBAAU,WACR,IAAIyS,EAAO3hB,EAAM0iC,kBAAkBzhC,MACjC,SAACwa,GAAD,OAASA,EAAImgB,cAAgB57B,EAAM2iC,uBAAuB/G,qBAGjDva,IAATM,QACUN,IAATM,GAAwD,IAAlCA,EAAK4R,QAAQ,GAAGC,OAAO7xB,cAGH0f,IAAzCrhB,EAAM2iC,uBAAuBpP,cACIlS,IAAjCrhB,EAAM2iC,wBACuC,OAA7C3iC,EAAM2iC,uBAAuB/G,kBAEava,IAA1CrhB,EAAM2iC,uBAAuB9G,UAC3B77B,EAAM6iC,iBAAiB,CACrBjH,YAAa57B,EAAM2iC,uBAAuB/G,YAC1CtwB,QAAQ,EACRioB,QAAS,CACP,CACE5tB,IAAK3F,EAAM2iC,uBAAuBC,YAAYj9B,IAC9C+6B,UAAW1gC,EAAM2iC,uBAAuBC,YAAYlC,UACpDlN,OAAQ,CACN,CACE3vB,GAAI7D,EAAM2iC,uBAAuBpP,QAAQ,GAAG1vB,GAC5CsH,MAAO,CAAC,IACRG,OAAQtL,EAAM2iC,uBAAuBpP,QAAQ,GAAGjoB,eAQ/D,CAACtL,IAGF,qBAAK4B,UAAU,GAAf,SACoC,OAAjC5B,EAAM2iC,6BACoCthB,IAAzCrhB,EAAM2iC,uBAAuBpP,SAC7BvzB,EAAM2iC,uBAAuBpP,QAAQzxB,KAAI,SAACf,EAAMyO,GAAP,OACvC,qBAEE5N,UAAS,iDAFX,SAIE,uBACEmL,SAAU,SAACC,GACTg0B,EACE,CACEn9B,GAAI9C,EAAK8C,GACTsH,MAAO6B,EAAEC,OAAO9B,MAChBG,OAAQvK,EAAKuK,QAEftL,EAAM2iC,uBAAuB/G,cAGjCztB,KAAK,OACLhD,MAAO86B,IACPrkC,UAAS,kEACe,IAAtBujC,EAAYpkC,GACR,4DACA,sDAnBHyO,EAAI,U,iCCrJrB,kBAmLeswB,IA9JK,SAAC9/B,GACnB,IAAMmlC,EAAc,SAACpkC,GACnB,IAAIwH,GAAM,EACV,GAAIvI,EAAM0iC,kBAAkB/gC,OAAS,EAAG,CACtC,IAAIyf,EAAQphB,EAAM0iC,kBAAkBzhC,MAClC,SAACwa,GAAD,OAASA,EAAImgB,cAAgB57B,EAAM2iC,uBAAuB/G,eAE5D,QAAcva,IAAVD,EAAqB,CACvB,IAAIgkB,EAAShkB,EAAMmS,QAAQtyB,MACzB,SAACokC,GAAD,OACEA,EAAI3E,YAAc1gC,EAAM2iC,uBAAuBC,YAAYlC,aAE/D,QAAerf,IAAX+jB,EAAsB,CACxB,IAAIje,EAAIie,EAAO5R,OAAOvyB,MAAK,SAACwa,GAAD,OAASA,EAAI5X,KAAO9C,EAAK8C,WAC1Cwd,IAAN8F,GAA+B,KAAZA,EAAEhc,QACvB5C,GAAM,KAKd,OAAOA,GAoBHy4B,EAAY,SAChBjgC,EACA66B,GAEA,IArBA2J,EACAC,OAuBmBnkB,IAHFrhB,EAAM0iC,kBAAkBzhC,MACvC,SAACwa,GAAD,OAASA,EAAImgB,cAAgBA,OAtB/B2J,EA2BI,CACE,CACE1hC,GAAI7D,EAAM2iC,uBAAuBC,YAAYpP,OAAO,GAAG3vB,GACvDsH,MAAOpK,EAAKoK,MACZG,OAAQtL,EAAM2iC,uBAAuBC,YAAYpP,OAAO,GAAGloB,SA9BnEk6B,EAiCIxlC,EAAM2iC,uBAAuBC,YA/BgB,OAA7C5iC,EAAM2iC,uBAAuB/G,aAC/B57B,EAAM6iC,iBAAiB,CACrBjH,YAAa57B,EAAM2iC,uBAAuB/G,YAC1CtwB,QAAQ,EACRioB,QAAS,CACP,CACE5tB,IAAK6/B,EAAe7/B,IACpB+6B,UAAW8E,EAAe9E,UAC1BlN,OAAQ+R,QA2BZU,EAAgB,WACpB,IAGIC,EAHA1S,EAASxzB,EAAM0iC,kBAAkBzhC,MACnC,SAACwa,GAAD,OAASA,EAAImgB,cAAgB57B,EAAM2iC,uBAAuB/G,eAW5D,OARAsK,OACa7kB,IAAXmS,OACInS,EACAmS,EAAOD,QAAQtyB,MACb,SAACokC,GAAD,OACEA,EAAI3E,YACJ1gC,EAAM2iC,uBAAuBC,YAAYlC,kBAEjCrf,IAAXmS,QAAmCnS,IAAX6kB,EACF,IAAzBA,EAAO1S,OAAO7xB,QAAgBukC,EAAO1S,OAAO,GAAGroB,MAC/C,IAqCN,OAlCA+D,qBAAU,WACR,IAAIyS,EAAO3hB,EAAM0iC,kBAAkBzhC,MACjC,SAACwa,GAAD,OAASA,EAAImgB,cAAgB57B,EAAM2iC,uBAAuB/G,qBAGjDva,IAATM,QACUN,IAATM,GAAwD,IAAlCA,EAAK4R,QAAQ,GAAGC,OAAO7xB,cAGH0f,IAAzCrhB,EAAM2iC,uBAAuBpP,cACIlS,IAAjCrhB,EAAM2iC,wBACuC,OAA7C3iC,EAAM2iC,uBAAuB/G,kBAEava,IAA1CrhB,EAAM2iC,uBAAuB9G,UAC3B77B,EAAM6iC,iBAAiB,CACrBjH,YAAa57B,EAAM2iC,uBAAuB/G,YAC1CtwB,QAAQ,EACRioB,QAAS,CACP,CACE5tB,IAAK3F,EAAM2iC,uBAAuBC,YAAYj9B,IAC9C+6B,UAAW1gC,EAAM2iC,uBAAuBC,YAAYlC,UACpDlN,OAAQ,CACN,CACE3vB,GAAI7D,EAAM2iC,uBAAuBpP,QAAQ,GAAG1vB,GAC5CsH,MAAO,GACPG,OAAQtL,EAAM2iC,uBAAuBpP,QAAQ,GAAGjoB,eAQ/D,CAACtL,IAEF,qBAAK4B,UAAU,GAAf,cACoCyf,IAAjCrhB,EAAM2iC,uBACL,qBACE/gC,UAAS,gEADX,SAGE,0BACEuJ,MAAO,GACPvJ,UAAS,yGACTiL,MAAO,CAAEs5B,UAAW,iBAIiB9kB,IAAzCrhB,EAAM2iC,uBAAuBpP,SAC7BvzB,EAAM2iC,uBAAuBpP,QAAQzxB,KAAI,SAACf,EAAMyO,GAAP,OACvC,qBAEE5N,UAAS,gEAFX,SAIE,0BACEmL,SAAU,SAACC,GACTg0B,EACE,CACEn9B,GAAI9C,EAAK8C,GACTsH,MAAO6B,EAAEC,OAAO9B,MAChBG,OAAQvK,EAAKuK,QAEftL,EAAM2iC,uBAAuB/G,cAGjCzwB,MAAO86B,IACPrkC,UAAS,kEACe,IAAtBujC,EAAYpkC,GACR,4DACA,mDAEN8L,MAAO,CAAEs5B,UAAW,WApBjB32B,EAAI,U,iCCtJrB,kBAmLe42B,IA9JG,SAACpmC,GACjB,IAAMmlC,EAAc,SAACpkC,GACnB,IAAIwH,GAAM,EACV,GAAIvI,EAAM0iC,kBAAkB/gC,OAAS,EAAG,CACtC,IAAIyf,EAAQphB,EAAM0iC,kBAAkBzhC,MAClC,SAACwa,GAAD,OAASA,EAAImgB,cAAgB57B,EAAM2iC,uBAAuB/G,eAE5D,QAAcva,IAAVD,EAAqB,CACvB,IAAIgkB,EAAShkB,EAAMmS,QAAQtyB,MACzB,SAACokC,GAAD,OACEA,EAAI3E,YAAc1gC,EAAM2iC,uBAAuBC,YAAYlC,aAE/D,QAAerf,IAAX+jB,EAAsB,CACxB,IAAIje,EAAIie,EAAO5R,OAAOvyB,MAAK,SAACwa,GAAD,OAASA,EAAI5X,KAAO9C,EAAK8C,WAC1Cwd,IAAN8F,GAAkC,KAAfA,EAAEhc,MAAM,KAC7B5C,GAAM,KAKd,OAAOA,GAoBHy4B,EAAY,SAChBjgC,EACA66B,GAEA,IArBA2J,EACAC,OAuBmBnkB,IAHFrhB,EAAM0iC,kBAAkBzhC,MACvC,SAACwa,GAAD,OAASA,EAAImgB,cAAgBA,OAtB/B2J,EA2BI,CACE,CACE1hC,GAAI7D,EAAM2iC,uBAAuBC,YAAYpP,OAAO,GAAG3vB,GACvDsH,MAAO,CAACpK,EAAKoK,OACbG,OAAQtL,EAAM2iC,uBAAuBC,YAAYpP,OAAO,GAAGloB,SA9BnEk6B,EAiCIxlC,EAAM2iC,uBAAuBC,YA/BgB,OAA7C5iC,EAAM2iC,uBAAuB/G,aAC/B57B,EAAM6iC,iBAAiB,CACrBjH,YAAa57B,EAAM2iC,uBAAuB/G,YAC1CtwB,QAAQ,EACRioB,QAAS,CACP,CACE5tB,IAAK6/B,EAAe7/B,IACpB+6B,UAAW8E,EAAe9E,UAC1BlN,OAAQ+R,QA2BZU,EAAgB,WACpB,IAGIC,EAHA1S,EAASxzB,EAAM0iC,kBAAkBzhC,MACnC,SAACwa,GAAD,OAASA,EAAImgB,cAAgB57B,EAAM2iC,uBAAuB/G,eAW5D,OARAsK,OACa7kB,IAAXmS,OACInS,EACAmS,EAAOD,QAAQtyB,MACb,SAACokC,GAAD,OACEA,EAAI3E,YACJ1gC,EAAM2iC,uBAAuBC,YAAYlC,kBAEjCrf,IAAXmS,QAAmCnS,IAAX6kB,EACF,IAAzBA,EAAO1S,OAAO7xB,QAAgBukC,EAAO1S,OAAO,GAAGroB,MAAM,GACrD,IAgDN,OA7CA+D,qBAAU,WACR,IAAIyS,EAAO3hB,EAAM0iC,kBAAkBzhC,MACjC,SAACwa,GAAD,OAASA,EAAImgB,cAAgB57B,EAAM2iC,uBAAuB/G,qBAGjDva,IAATM,QACUN,IAATM,GAAwD,IAAlCA,EAAK4R,QAAQ,GAAGC,OAAO7xB,cAGH0f,IAAzCrhB,EAAM2iC,uBAAuBpP,cACIlS,IAAjCrhB,EAAM2iC,wBACuC,OAA7C3iC,EAAM2iC,uBAAuB/G,kBAaava,IAA1CrhB,EAAM2iC,uBAAuB9G,UAC3B77B,EAAM6iC,iBAAiB,CACrBjH,YAAa57B,EAAM2iC,uBAAuB/G,YAC1CtwB,QAAQ,EACRioB,QAAS,CACP,CACE5tB,IAAK3F,EAAM2iC,uBAAuBC,YAAYj9B,IAC9C+6B,UAAW1gC,EAAM2iC,uBAAuBC,YAAYlC,UACpDlN,OAAQ,CACN,CACE3vB,GAAI7D,EAAM2iC,uBAAuBpP,QAAQ,GAAG1vB,GAC5CsH,MAAO,CAAC,IACRG,OAAQtL,EAAM2iC,uBAAuBpP,QAAQ,GAAGjoB,eAQ/D,CAACtL,IAEF,qBAAK4B,UAAU,GAAf,SACoC,OAAjC5B,EAAM2iC,6BACoCthB,IAAzCrhB,EAAM2iC,uBAAuBpP,SAC7BvzB,EAAM2iC,uBAAuBpP,QAAQzxB,KAAI,SAACf,EAAMyO,GAAP,OACvC,qBAEE5N,UAAS,gEAFX,SAIE,uBACEmL,SAAU,SAACC,GACTg0B,EACE,CACEn9B,GAAI9C,EAAK8C,GACTsH,MAAO6B,EAAEC,OAAO9B,MAChBG,OAAQvK,EAAKuK,QAEftL,EAAM2iC,uBAAuB/G,cAGjCztB,KAAK,OACLhD,MAAO86B,IACPrkC,UAAS,kEACe,IAAtBujC,EAAYpkC,GACR,mDACA,2CAnBHyO,EAAI,U,2FC2DN4vB,IA1LkB,SAACp/B,GAChC,IAAMmlC,EAAc,SAClBpkC,GAEA,IAAIwH,GAAM,EACV,GAAIvI,EAAM0iC,kBAAkB/gC,OAAS,EAAG,CACtC,IAAIyf,EAAQphB,EAAM0iC,kBAAkBzhC,MAClC,SAACwa,GAAD,OAASA,EAAImgB,cAAgB57B,EAAM2iC,uBAAuB/G,eAE5D,QAAcva,IAAVD,EAAqB,CACvB,IAAIgkB,EAAShkB,EAAMmS,QAAQtyB,MACzB,SAACokC,GAAD,OACEA,EAAI3E,YAAc1gC,EAAM2iC,uBAAuBC,YAAYlC,aAE/D,QAAerf,IAAX+jB,EAAsB,CACxB,IAAIje,EAAIie,EAAO5R,OAAOvyB,MAAK,SAACwa,GAAD,OAASA,EAAI5X,KAAO9C,EAAK8C,WAC1Cwd,IAAN8F,IAAgC,IAAbA,EAAE7b,SACvB/C,GAAM,KAKd,OAAOA,GAGH+8B,EAAkB,SACtBC,EACAC,GAEiD,OAA7CxlC,EAAM2iC,uBAAuB/G,aAC/B57B,EAAM6iC,iBAAiB,CACrBjH,YAAa57B,EAAM2iC,uBAAuB/G,YAC1CtwB,QAAQ,EACRioB,QAAS,CACP,CACE5tB,IAAK6/B,EAAe7/B,IACpB+6B,UAAW8E,EAAe9E,UAC1BlN,OAAQ+R,OAmGlB,OAvCAr2B,qBAAU,WACR,IAAIyS,EAAO3hB,EAAM0iC,kBAAkBzhC,MACjC,SAACwa,GAAD,OAASA,EAAImgB,cAAgB57B,EAAM2iC,uBAAuB/G,eAE5D,SACWva,IAATM,QACUN,IAATM,GAAwD,IAAlCA,EAAK4R,QAAQ,GAAGC,OAAO7xB,cAGH0f,IAAzCrhB,EAAM2iC,uBAAuBpP,cACIlS,IAAjCrhB,EAAM2iC,wBACuC,OAA7C3iC,EAAM2iC,uBAAuB/G,YAC7B,CACA,IADA,EACI2J,EAAgE,GADpE,cAEcvlC,EAAM2iC,uBAAuBpP,SAF3C,IAEA,2BAAoD,CAAC,IAA5CvsB,EAA2C,QAClDu+B,EAAU,sBACLA,GADK,CAER,CACE1hC,GAAImD,EAAEnD,GACNsH,MAAOnE,EAAEmE,MACTG,QAAQ,MARd,mCAY0C+V,IAA1CrhB,EAAM2iC,uBAAuB9G,UAC3B77B,EAAM6iC,iBAAiB,CACrBjH,YAAa57B,EAAM2iC,uBAAuB/G,YAC1CtwB,QAAQ,EACRioB,QAAS,CACP,CACE5tB,IAAK3F,EAAM2iC,uBAAuBC,YAAYj9B,IAC9C+6B,UAAW1gC,EAAM2iC,uBAAuBC,YAAYlC,UACpDlN,OAAQ+R,SAMnB,CAACvlC,IAEF,8BACoC,OAAjCA,EAAM2iC,6BACoCthB,IAAzCrhB,EAAM2iC,uBAAuBpP,SAC7BvzB,EAAM2iC,uBAAuBpP,QAAQzxB,KAAI,SAACf,EAAMyO,GAAP,OACvC,sBAEErN,QAAS,kBApGD,SAChBpB,EACA66B,GAKA,QAAmBva,IAHFrhB,EAAM0iC,kBAAkBzhC,MACvC,SAACwa,GAAD,OAASA,EAAImgB,cAAgBA,KAED,CAE5B,IAAIgK,EAA0D,GAC9D,QAC2CvkB,IAAzCrhB,EAAM2iC,uBAAuBpP,SAGhB,IAFbvzB,EAAM2iC,uBAAuBpP,QAAQzyB,QACnC,SAAC2a,GAAD,OAAwB,IAAfA,EAAInQ,UACb3J,OACF,CAAC,IAAD,gBACc3B,EAAM2iC,uBAAuBC,YAAYpP,QADvD,IACA,2BAA+D,CAAC,IAAvDqS,EAAsD,QAC7DD,EAAI,sBACCA,GADD,CAEF,CACE/hC,GAAIgiC,EAAEhiC,GACNsH,MAAO06B,EAAE16B,MACTG,QAAQ,MAPd,8BAWAg6B,EAAgBM,EAAM5lC,EAAM2iC,uBAAuBC,aAErD,IArB4B,EAqBxB2C,EAAgE,GArBxC,cAsBE,IAAhBK,EAAKjkC,OACf3B,EAAM2iC,uBAAuBC,YAAYpP,OACzCoS,GAxBwB,IAsB5B,2BAEU,CAAC,IAFFze,EAEC,QAENoe,EADEpe,EAAEtjB,KAAO9C,EAAK8C,GACN,sBACL0hC,GADK,CAER,CACE1hC,GAAI9C,EAAK8C,GACTsH,MAAOpK,EAAKoK,MACZG,YAC2C+V,IAAzCrhB,EAAM2iC,uBAAuBpP,SAGhB,IAFbvzB,EAAM2iC,uBAAuBpP,QAAQzyB,QACnC,SAAC2a,GAAD,OAAwB,IAAfA,EAAInQ,UACb3J,SAEGwlB,EAAE7b,UAIH,sBAAOi6B,GAAP,CAAmBpe,KAzCL,8BA4C5Bme,EAAgBC,EAAYvlC,EAAM2iC,uBAAuBC,cAkDjD5B,CAAUjgC,EAAMf,EAAM2iC,uBAAuB/G,cAE/Ch6B,UAAS,8BACe,IAAtBujC,EAAYpkC,GACR,wFACA,sDAHG,mEALX,WAWyB,IAAtBokC,EAAYpkC,GACX,wCAC4CsgB,IAAzCrhB,EAAM2iC,uBAAuBpP,SAGjB,IAFbvzB,EAAM2iC,uBAAuBpP,QAAQzyB,QACnC,SAAC2a,GAAD,OAAwB,IAAfA,EAAInQ,UACb3J,OACA,cAAC,KAAD,CAAsBC,UAAU,aAEhC,cAAC,IAAD,CAAmBA,UAAU,oBAGUyf,IAAzCrhB,EAAM2iC,uBAAuBpP,SAGlB,IAFbvzB,EAAM2iC,uBAAuBpP,QAAQzyB,QACnC,SAAC2a,GAAD,OAAwB,IAAfA,EAAInQ,UACb3J,OACF,cAAC,KAAD,CAAwBC,UAAU,aAElC,cAAC,IAAD,CAAqBA,UAAU,aAEjC,sBAAMA,UAAU,OAAhB,SACGb,EAAKoK,MAAMxJ,OAAS,EACjBZ,EAAKoK,MACiB,IAAtBpK,EAAKoK,MAAMxJ,OACX0kC,YAAmBtlC,EAAKoK,MAAM,GAAIpK,EAAKoK,MAAM,IAC1CyW,QAAQ,GACRxB,WACHrf,EAAKoK,MAAM,OApCZqE,EAAI,U,iCCtKrB,kBA8KewwB,IAzJD,SAAChgC,GACb,IAAMmlC,EAAc,SAACpkC,GACnB,IAAIwH,GAAM,EACV,GAAIvI,EAAM0iC,kBAAkB/gC,OAAS,EAAG,CACtC,IAAIyf,EAAQphB,EAAM0iC,kBAAkBzhC,MAClC,SAACwa,GAAD,OAASA,EAAImgB,cAAgB57B,EAAM2iC,uBAAuB/G,eAE5D,QAAcva,IAAVD,EAAqB,CACvB,IAAIgkB,EAAShkB,EAAMmS,QAAQtyB,MACzB,SAACokC,GAAD,OACEA,EAAI3E,YAAc1gC,EAAM2iC,uBAAuBC,YAAYlC,aAE/D,QAAerf,IAAX+jB,EAAsB,CACxB,IAAIje,EAAIie,EAAO5R,OAAOvyB,MAAK,SAACwa,GAAD,OAASA,EAAI5X,KAAO9C,EAAK8C,WAC1Cwd,IAAN8F,GAA+B,KAAZA,EAAEhc,QACvB5C,GAAM,KAKd,OAAOA,GAoBHy4B,EAAY,SAChBjgC,EACA66B,GAEA,IArBA2J,EACAC,EAoBIC,EAAazlC,EAAM0iC,kBAAkBzhC,MACvC,SAACwa,GAAD,OAASA,EAAImgB,cAAgBA,KAE/B,QAAmBva,IAAfokB,EAA0B,CAC5B,IAAIC,EAASD,EAAWlS,QAAQtyB,MAC9B,SAAC0kC,GAAD,OACEA,EAAOjF,YACP1gC,EAAM2iC,uBAAuBC,YAAYlC,kBAE9Brf,IAAXqkB,IA9BNH,EAgCM,CACE,CACE1hC,GAAI6hC,EAAOlS,OAAO,GAAG3vB,GACrBsH,MAAOpK,EAAKoK,MACZG,OAAQo6B,EAAOlS,OAAO,GAAGloB,SAnCnCk6B,EAsCME,EApC2C,OAA7C1lC,EAAM2iC,uBAAuB/G,aAC/B57B,EAAM6iC,iBAAiB,CACrBjH,YAAa57B,EAAM2iC,uBAAuB/G,YAC1CtwB,QAAQ,EACRioB,QAAS,CACP,CACE5tB,IAAK6/B,EAAe7/B,IACpB+6B,UAAW8E,EAAe9E,UAC1BlN,OAAQ+R,SAiCZU,EAAgB,WACpB,IAGIC,EAHA1S,EAASxzB,EAAM0iC,kBAAkBzhC,MACnC,SAACwa,GAAD,OAASA,EAAImgB,cAAgB57B,EAAM2iC,uBAAuB/G,eAW5D,OARAsK,OACa7kB,IAAXmS,OACInS,EACAmS,EAAOD,QAAQtyB,MACb,SAACokC,GAAD,OACEA,EAAI3E,YACJ1gC,EAAM2iC,uBAAuBC,YAAYlC,kBAEjCrf,IAAXmS,QAAmCnS,IAAX6kB,EACF,IAAzBA,EAAO1S,OAAO7xB,QAAgBukC,EAAO1S,OAAO,GAAGroB,MAC/C,IAqCN,OAlCA+D,qBAAU,WACR,IAAIyS,EAAO3hB,EAAM0iC,kBAAkBzhC,MACjC,SAACwa,GAAD,OAASA,EAAImgB,cAAgB57B,EAAM2iC,uBAAuB/G,qBAGjDva,IAATM,QACUN,IAATM,GAAwD,IAAlCA,EAAK4R,QAAQ,GAAGC,OAAO7xB,cAGH0f,IAAzCrhB,EAAM2iC,uBAAuBpP,cACIlS,IAAjCrhB,EAAM2iC,wBACuC,OAA7C3iC,EAAM2iC,uBAAuB/G,kBAEava,IAA1CrhB,EAAM2iC,uBAAuB9G,UAC3B77B,EAAM6iC,iBAAiB,CACrBjH,YAAa57B,EAAM2iC,uBAAuB/G,YAC1CtwB,QAAQ,EACRioB,QAAS,CACP,CACE5tB,IAAK3F,EAAM2iC,uBAAuBC,YAAYj9B,IAC9C+6B,UAAW1gC,EAAM2iC,uBAAuBC,YAAYlC,UACpDlN,OAAQ,CACN,CACE3vB,GAAI7D,EAAM2iC,uBAAuBpP,QAAQ,GAAG1vB,GAC5CsH,MAAO,GACPG,OAAQtL,EAAM2iC,uBAAuBpP,QAAQ,GAAGjoB,eAQ/D,CAACtL,IAEF,qBAAK4B,UAAU,GAAf,SACoC,OAAjC5B,EAAM2iC,6BACoCthB,IAAzCrhB,EAAM2iC,uBAAuBpP,SAC7BvzB,EAAM2iC,uBAAuBpP,QAAQzxB,KAAI,SAACf,EAAMyO,GAAP,OACvC,qBAEE5N,UAAS,gEAFX,SAIE,0BACEmL,SAAU,SAACC,GACTg0B,EACE,CACEn9B,GAAI9C,EAAK8C,GACTsH,MAAO6B,EAAEC,OAAO9B,MAChBG,OAAQvK,EAAKuK,QAEftL,EAAM2iC,uBAAuB/G,cAGjCzwB,MAAO86B,IACPrkC,UAAS,kEACe,IAAtBujC,EAAYpkC,GACR,4DACA,mDAEN8L,MAAO,CAAEs5B,UAAW,YApBjB32B,EAAI,U,4GC1DN82B,EA7DQ,SAACtmC,GACtB,OAEE,cADA,CACA,OAAK4B,UAAU,uFAAf,UACE,qBAAKA,UAAU,yEAAf,SACE,sBAAKA,UAAU,mCAAf,UACE,qBACEsB,MAAM,6BACNf,QAAS,kBAAMnC,EAAMumC,aAAY,IACjC3kC,UAAU,8LAHZ,SAKE,cAAC,IAAD,CAAaA,UAAU,eAEzB,sBAAMA,UAAU,gBAAhB,0CAGJ,qBAAKA,UAAU,uBAAf,SACG5B,EAAM2iC,uBAAuBK,gBAAgBlhC,KAAI,SAACf,EAAMyO,GAAP,OAChD,sBAEErN,QAAS,WACPnC,EAAMghC,UACJ,CACEn9B,GAAI7D,EAAMwmC,eAAe3iC,GACzBsH,MAAOnL,EAAMwmC,eAAer7B,MAC5BG,OAAQvK,EAAKuK,QAEftL,EAAM2iC,uBAAuB/G,aAE/B57B,EAAMumC,aAAY,IAEpB3kC,UAAS,UACPb,EAAKuK,SACLtL,EAAMymC,SACJzmC,EAAM+7B,iBACN/7B,EAAM0mC,gBAAgB1mC,EAAMwmC,eAAe3iC,KAEzC,4DACA,gEAPG,kHAbX,UAuBE,8BACG9C,EAAKuK,SACNtL,EAAMymC,SACJzmC,EAAM+7B,iBACN/7B,EAAM0mC,gBAAgB1mC,EAAMwmC,eAAe3iC,KAE3C,cAAC,IAAD,CAAsBjC,UAAU,2BAEhC,cAAC,KAAD,CAAwBA,UAAU,eAGtC,qBAAKiK,wBAAyB,CAAEC,OAAQ/K,EAAKuK,YAjCxCkE,EAAI,YCyVN8vB,IAxWE,SAACt/B,GAChB,MAA0CC,oBAAS,GAAnD,mBAAO0mC,EAAP,KAAsBC,EAAtB,KACA,EACE3mC,mBAAiD,MADnD,mBAAOumC,EAAP,KAAuBK,EAAvB,KAqBM1B,EAAc,SAACpkC,GACnB,IAAIwH,GAAM,EACV,GAAIvI,EAAM0iC,kBAAkB/gC,OAAS,EAAG,CACtC,IAAIyf,EAAQphB,EAAM0iC,kBAAkBzhC,MAClC,SAACwa,GAAD,OAASA,EAAImgB,cAAgB57B,EAAM2iC,uBAAuB/G,eAE5D,QAAcva,IAAVD,EAAqB,CACvB,IAAIgkB,EAAShkB,EAAMmS,QAAQtyB,MACzB,SAACokC,GAAD,OACEA,EAAI3E,YAAc1gC,EAAM2iC,uBAAuBC,YAAYlC,aAE/D,QAAerf,IAAX+jB,EAAsB,CACxB,IAAIje,EAAIie,EAAO5R,OAAOvyB,MAAK,SAACwa,GAAD,OAASA,EAAI5X,KAAO9C,EAAK8C,WAC1Cwd,IAAN8F,GAAgC,KAAbA,EAAE7b,SACvB/C,GAAM,KAKd,OAAOA,GAGHy4B,EAAY,SAChBjgC,EACA66B,GAEA,IAAI6J,EAAazlC,EAAM0iC,kBAAkBzhC,MACvC,SAACwa,GAAD,OAASA,EAAImgB,cAAgBA,KAE/B,QAAmBva,IAAfokB,EAA0B,CAC5B,IAAIC,EAASD,EAAWlS,QAAQtyB,MAC9B,SAAC0kC,GAAD,OACEA,EAAOjF,YACP1gC,EAAM2iC,uBAAuBC,YAAYlC,aAE7C,QAAerf,IAAXqkB,EAAsB,CACxB,IADwB,EACpBH,EAAgD,GAD5B,cAEVG,EAAOlS,QAFG,IAExB,2BAA6B,CAAC,IAArBrM,EAAoB,QAEzBoe,EADEpe,EAAEtjB,KAAO9C,EAAK8C,GACN,sBACL0hC,GADK,CAER,CACE1hC,GAAI9C,EAAK8C,GACTsH,MAAOpK,EAAKoK,MACZG,OAAQvK,EAAKuK,UAIP,sBAAOi6B,GAAP,CAAmBpe,KAbT,+BAtDN,SACtBoe,EACAC,GAEiD,OAA7CxlC,EAAM2iC,uBAAuB/G,aAC/B57B,EAAM6iC,iBAAiB,CACrBjH,YAAa57B,EAAM2iC,uBAAuB/G,YAC1CtwB,QAAQ,EACRioB,QAAS,CACP,CACE5tB,IAAK6/B,EAAe7/B,IACpB+6B,UAAW8E,EAAe9E,UAC1BlN,OAAQ+R,MA0DZD,CAAgBC,EAAYG,MAKlCx2B,qBAAU,WACR,IAAIyS,EAAO3hB,EAAM0iC,kBAAkBzhC,MACjC,SAACwa,GAAD,OAASA,EAAImgB,cAAgB57B,EAAM2iC,uBAAuB/G,eAE5D,SACWva,IAATM,QACUN,IAATM,GAAwD,IAAlCA,EAAK4R,QAAQ,GAAGC,OAAO7xB,cAGH0f,IAAzCrhB,EAAM2iC,uBAAuBpP,cACIlS,IAAjCrhB,EAAM2iC,wBACuC,OAA7C3iC,EAAM2iC,uBAAuB/G,YAC7B,CACA,IADA,EACI2J,EAAgD,GADpD,cAEcvlC,EAAM2iC,uBAAuBpP,SAF3C,IAEA,2BAAoD,CAAC,IAA5CvsB,EAA2C,QAClDu+B,EAAU,sBACLA,GADK,CAER,CACE1hC,GAAImD,EAAEnD,GACNsH,MAAOnE,EAAEmE,MACTG,OAAQ,OARd,mCAY0C+V,IAA1CrhB,EAAM2iC,uBAAuB9G,UAC3B77B,EAAM6iC,iBAAiB,CACrBjH,YAAa57B,EAAM2iC,uBAAuB/G,YAC1CtwB,QAAQ,EACRioB,QAAS,CACP,CACE5tB,IAAK3F,EAAM2iC,uBAAuBC,YAAYj9B,IAC9C+6B,UAAW1gC,EAAM2iC,uBAAuBC,YAAYlC,UACpDlN,OAAQ+R,SAMnB,CAACvlC,IAEJ,IAmCM0mC,EAAkB,SAACvf,GACvB,IAAIye,EAAO5lC,EAAM0iC,kBAAkBzhC,MACjC,SAACwa,GAAD,OAASA,EAAImgB,cAAgB57B,EAAM2iC,uBAAuB/G,eAE5D,QAAava,IAATukB,EAAoB,CACtB,IAAIF,EAASE,EAAKrS,QAAQtyB,MACxB,SAAC0kC,GAAD,OACEA,EAAOjF,YACP1gC,EAAM2iC,uBAAuBC,YAAYlC,aAE7C,QAAerf,IAAXqkB,EAAsB,CACxB,IAAIoB,EAAMpB,EAAOlS,OAAOvyB,MAAK,SAACwa,GAAD,OAASA,EAAI5X,KAAOsjB,KACjD,QAAY9F,IAARylB,GAAoC,KAAfA,EAAIx7B,QACsB,OAA7CtL,EAAM2iC,uBAAuB/G,YAC/B,OAjDgB,SACxBmL,EACAC,EACAC,GAEA,GAA2B,OAAvBjnC,EAAM+iC,aAAuB,CAC/B,IAAImE,EAAUlnC,EAAM+iC,aAAa7yB,UAAUjP,MACzC,SAAC0gB,GAAD,OAAUA,EAAKia,cAAgBmL,KAEjC,QAAgB1lB,IAAZ6lB,EAAuB,CAAC,IAAD,gBACR5E,KADQ,yBAChB6E,EADgB,QAEnBC,EAAWF,EAAQrL,SAAS56B,MAC9B,SAACwa,GAAD,OAASA,EAAIqgB,WAAaqL,EAAKrrB,OAEjC,QAAiBuF,IAAb+lB,EAAwB,CAC1B,IAAIC,EAASD,EAAS7T,QAAQtyB,MAC5B,SAACokC,GAAD,OACEA,EAAI3E,YACJ1gC,EAAM2iC,uBAAuBC,YAAYlC,aAE7C,QAAerf,IAAXgmB,EAAsB,CACxB,IAAIC,EAAiBD,EAAO7T,OAAOvyB,MACjC,SAACsmC,GAAD,OAAQA,EAAGj8B,OAAO8U,aAAe6mB,EAAK37B,UAExC,QAAuB+V,IAAnBimB,EACF,MAAM,CAAN,EAAOA,EAAeh8B,OAAO8U,eAfrC,2BAAoC,CAAC,IAAD,yCADX,gCAuB7B,OAAO,EAiBQonB,CACLxnC,EAAM2iC,uBAAuB/G,YAC7B57B,EAAM+7B,iBACN+K,IAMV,OAAO,GAmCHL,EAAW,SAACU,EAAwB77B,GACxC,IAAI/C,EAAc,GACdk/B,EAlCuB,WAA2B,IAAD,EACjDl/B,EAA0B,GAC1BszB,EAAuC,UACzC77B,EAAM+iC,oBADmC,aACzC,EAAoB7yB,UAAUjP,MAC5B,SAACwa,GAAD,OAASA,EAAImgB,cAAgB57B,EAAM2iC,uBAAuB/G,eAE9D,QAAiBva,IAAbwa,EAAwB,CAAC,IAAD,gBACTA,EAASA,UADA,IAC1B,2BAAoC,CAAC,IAA5B96B,EAA2B,QAC9B2kC,EAAS3kC,EAAKwyB,QAAQtyB,MACxB,SAAC0kC,GAAD,OACEA,EAAOjF,YACP1gC,EAAM2iC,uBAAuBC,YAAYlC,aAE7C,QAAerf,IAAXqkB,EAYF,MAZyB,IAAD,gBACRA,EAAOlS,QADC,IACxB,2BAA+B,CAAC,IAAvBsT,EAAsB,QAC7Bv+B,EAAG,sBACEA,GADF,CAED,CACE1E,GAAIijC,EAAIjjC,GACRsjC,KAAMpmC,EAAK+6B,SACXxwB,OAAQw7B,EAAIx7B,OAAO8U,eAPD,gCAPF,+BAuB5B,OAAO7X,EAKuBm/B,GAC9B,GAAID,EAAI9lC,OAAS,EAAG,CAAC,IAAD,EACdZ,EAAI,UAAG0mC,EAAIxmC,MAAK,SAACwa,GAAD,OAASA,EAAInQ,SAAWA,YAApC,aAAG,EAA0CzH,GACrD,QAAawd,IAATtgB,EAAoB,CAAC,IAAD,EAClB4mC,EAAO,UAAGF,EAAIxmC,MAChB,SAACwa,GAAD,OAASA,EAAI5X,KAAO9C,GAAQ0a,EAAI0rB,OAASA,YADhC,aAAG,EAEX77B,YACa+V,IAAZsmB,IACFp/B,EAAMo/B,IAIZ,OAAOp/B,GAKT,OACE,qBAAK3G,UAAU,GAAf,SACoC,OAAjC5B,EAAM2iC,6BACoCthB,IAAzCrhB,EAAM2iC,uBAAuBpP,SAC7BvzB,EAAM2iC,uBAAuBpP,QAAQzxB,KAAI,SAACf,EAAMyO,GAAP,OACvC,sBAEE5N,UAAS,WACe,IAAtBujC,EAAYpkC,GACR,yBACA,YAHG,aAIiB,IAAtBokC,EAAYpkC,GAAiB,iBAAmB,WAJ3C,aAKe,IAAtBokC,EAAYpkC,GAAiB,gCAAkC,GALxD,sBAFX,UAUE,sBACEa,UAAS,uBACe,IAAtBujC,EAAYpkC,GAAiB,gBAAkB,gBADxC,qCADX,WAKyB,IAAtBokC,EAAYpkC,GACX,qBAAKa,UAAU,sGAAf,SACG4N,EAAI,IAGP,qBAAK5N,UAAU,sGAAf,SACG4N,EAAI,IAGT,qBACE3D,wBAAyB,CAAEC,OAAQ/K,EAAKoK,OACxCvJ,UAAS,eACY,OAAnB4kC,GACAA,EAAe3iC,KAAO9C,EAAK8C,KACT,IAAlB8iC,EACI,+BACA,uBAIa,IAAtBxB,EAAYpkC,GACX,sBACEmC,MAAM,kCACNf,QAAS,WACP0kC,EAAkB9lC,GAClB6lC,GAAkBD,IAEpB/kC,UAAU,8JANZ,UAQE,cAAC,IAAD,CACEA,UAAS,sCACY,OAAnB4kC,GACAA,EAAe3iC,KAAO9C,EAAK8C,KACT,IAAlB8iC,EAvDK,uBAyDD,MAGR,qBACE96B,wBAAyB,CACvBC,OAAQ26B,EACNzmC,EAAM+7B,iBACN2K,EAAgB3lC,EAAK8C,WAM7B,qBAAKjC,UAAU,4EAAf,SACE,qBACEO,QAAS,WACP0kC,EAAkB9lC,GAClB6lC,GAAkBD,IAEpBzjC,OACwB,IAAtBiiC,EAAYpkC,GACR,kCACA,mCAENa,UAAS,uBACe,IAAtBujC,EAAYpkC,IACQ,OAAnBylC,GACCA,EAAe3iC,KAAO9C,EAAK8C,KACT,IAAlB8iC,EACE,aACA,oCANG,+BAVX,UAmByB,IAAtBxB,EAAYpkC,GACT0lC,EAASzmC,EAAM+7B,iBAAkB2K,EAAgB3lC,EAAK8C,KACnC,OAAnB2iC,GACAA,EAAe3iC,KAAO9C,EAAK8C,KACT,IAAlB8iC,EACA,sBACA,sBAIV,qBAAK/kC,UAAU,6BAAf,SACgD,OAA7C5B,EAAM2iC,uBAAuB/G,kBACava,IAAzCrhB,EAAM2iC,uBAAuBpP,cACoBlS,IAAjDrhB,EAAM2iC,uBAAuBK,iBACV,OAAnBwD,IACkB,IAAlBG,GACAH,EAAe3iC,KAAO9C,EAAK8C,IACzB,cAAC,EAAD,CACE2iC,eAAgBA,EAChBoB,eAAgB,KAChBjF,uBAAwB,CACtB/G,YAAa57B,EAAM2iC,uBAAuB/G,YAC1CrI,QAASvzB,EAAM2iC,uBAAuBpP,QACtCyP,gBACEhjC,EAAM2iC,uBAAuBK,iBAEjCmC,YAAaA,EACbnE,UAAWA,EACXuF,YAAaK,EACbH,SAAUA,EACV1K,iBAAkB/7B,EAAM+7B,iBACxB2K,gBAAiBA,QAjHpBl3B,EAAI,U,qfC5NR6tB,EAAmB,SAACwK,EAAuB/5B,GACtD,IAAMg6B,EAASn8B,YAAKmC,EAAM,cACtBi6B,GACDF,EAAOzf,IAAI,SAAW,EAAI,IAAM,KAChCyf,EAAOzf,IAAI,SAAW,GAAGhI,WAC1B,IACAynB,EAAOzf,IAAI,QACX,IACAyf,EAAOzf,IAAI,QACb,OAAI,IAAI3F,KAAKqlB,GAAQvkB,UAAY,IAAId,KAAKslB,GAAgBxkB,WA8DtDykB,EAA0B,SAAChoC,GAC/B,MAA8BC,oBAAkB,GAAhD,mBAAOkmB,EAAP,KAAgB8hB,EAAhB,KACA,OAAgB,IAAZ9hB,EACK,wBAGP,sBAAKvkB,UAAU,sMAAf,UACE,sBAAKA,UAAU,+DAAf,UACE,sBAAMA,UAAU,YAAhB,gDACA,qBACEO,QAASnC,EAAMkoC,eACftmC,UAAU,mEAFZ,uBAOF,qBACEO,QAAS,kBAAM8lC,GAAW,IAC1BrmC,UAAU,yGAFZ,SAIE,cAAC,IAAD,CAASA,UAAU,mBAwBdumC,EAAb,kDAIE,WAAYnoC,GAA6B,IAAD,8BACtC,cAAMA,IAgBR4O,WAAa,SAACtD,GACZ,EAAKgH,SAAS,CAAE3D,QAASrD,KAlBa,EAoBxC88B,oBAAsB,SAAC98B,GACrB,EAAKgH,SAAS,CAAE+1B,iBAAkB/8B,KArBI,EAuBxCg9B,mBAvBwC,uCAuBnB,WAAO1gC,EAAcwI,GAArB,eAAApJ,EAAA,6DACnB,EAAK4H,YAAW,GAChBuZ,cAFmB,kBAIC/f,IAAMggB,IAAN,UACb1kB,IAAI6kC,MADS,sBACU3gC,EADV,YACkBwI,IALnB,OAIX7H,EAJW,OAOjB,EAAK+J,SAAS,CAAEk2B,eAAgBjgC,EAAI9G,OAPnB,gDAUjB+G,QAAQC,IAAI,mBAAZ,sBACAg5B,MAAMx4B,YAAY,EAAD,KAXA,QAanB,EAAK2F,YAAW,GAbG,yDAvBmB,0DAsCxC65B,uBAAyB,WACvB,EAAKn2B,SAAS,CACZ3D,SAAS,IAEX,EAAK3O,MAAMq8B,qBACT,EAAKr8B,MAAMmG,KAAKyB,KAAKC,SACrB,SAACyD,EAAiBpE,GAEd,EAAKoL,SAAS,CACZ3D,SAAS,OASjB,EAAK2D,SAAS,CACZ3D,SAAS,KAzD2B,EA6DxC+5B,iBAAmB,SAACt2B,GACsC,IAApD,EAAKpS,MAAM4jB,cAAcyX,gBAAgB15B,QAC3C,EAAK3B,MAAM6jB,cACTzR,EAAYud,oBAAoB3b,gBAChC,EAAKhU,MAAMmG,KAAKyB,KAAKC,QACrB,EAAKugC,qBAL6C,oBAQnCh2B,EAAY/H,SAASO,SARc,yBAQ7CyF,EAR6C,QAYpD,QAAiBgR,IAHF,EAAKrhB,MAAM4jB,cAAcM,gBAAgBjjB,MACtD,SAACwa,GAAD,OAASA,EAAIpL,SAAWA,EAAOtF,aAEL,CAC1B,IAAIoZ,EAAY/R,EAAYge,MAAMnvB,MAChC,SAACwa,GAAD,OAASA,EAAI1Q,YAAcsF,EAAOtF,kBAElBsW,IAAd8C,GACF,EAAKnkB,MAAMgkB,sBACT5R,EAAYud,oBAAoB3b,gBAChC3D,EAAOtF,UACPoZ,EAAUjF,YACViF,EAAUA,UACVA,EAAUC,QACVhS,EAAY/H,SAASL,YACrB,EAAK4E,cAhBb,2BAAkD,IARI,gCA7DhB,EA2FxC+5B,qBA3FwC,sBA2FjB,wCAAA3hC,EAAA,6DACrB,EAAK4H,YAAW,GADK,kBAGDxG,IAAMggB,IAAN,UACb1kB,IAAI6F,YADS,wBACkB,EAAKvJ,MAAMmG,KAAKyB,KAAKC,UAJtC,OAMnB,GAAmB,OAHbU,EAHa,QAMX+C,OAAgB,CACtB,EAAKgH,SAAS,CAAEoe,sBAAuBnoB,EAAI9G,OADrB,cAEE8G,EAAI9G,MAFN,IAEtB,2BAAS2Q,EAAyB,QAChC,EAAKs2B,iBAAiBt2B,GAHF,8BAKtB,GAC8D,OAA5D,EAAKpS,MAAM0wB,sBAAsBkY,wBACkC,IAAnE,EAAK5oC,MAAM0wB,sBAAsBkY,uBAAuBjnC,OACxD,CAAC,EAAD,YACwB4G,EAAI9G,MAD5B,IACA,2BAAS2Q,EAAyB,QAChC,EAAKpS,MAAM08B,mBAAmBtqB,GAFhC,gCAde,gDAqBnB5J,QAAQC,IAAI,gBAAZ,sBArBmB,QAuBrB,EAAKmG,YAAW,GAvBK,yDA3FiB,EAoHxCi6B,aAAe,SAAC7+B,EAAqBe,GACnC,GAAyC,OAArC,EAAKwI,MAAMmd,sBAAgC,CAC7C,IAAM/O,EAAO,EAAKpO,MAAMmd,sBAAsBzvB,MAC5C,SAACF,GAAD,OACEA,EAAKsJ,SAASL,cAAgBA,GAC9BjJ,EAAKqvB,MAAMtvB,QAAO,SAAC2a,GAAD,OAASA,EAAI1Q,YAAcA,QAEjD,QAAasW,IAATM,EAAoB,CACtB,IAAItR,EAASsR,EAAKyO,MAAMnvB,MAAK,SAACwa,GAAD,OAASA,EAAI1Q,YAAcA,KACxD,QAAesW,IAAXhR,EACF,OAAOA,GAIb,OAAO,MAlI+B,EAoIxCy4B,eApIwC,uCAoIvB,WACfj/B,EACAumB,GAFe,eAAAppB,EAAA,sDAIf,EAAKsL,SAAS,CAAE3D,SAAS,IAJV,OAAA3H,EAAA,KAKDopB,GALC,qDAKN5gB,EALM,6BAOOpH,IAAM2F,KAAN,UACbrK,IAAI6F,YADS,6BAEhB,CACEM,eAAgBA,EAChBumB,MAAOA,EAAM5gB,KAXN,OAcQ,MAdR,OAcHlE,SACN,EAAKgH,SAAS,CACZy2B,eAAgB,KAChBC,cAAc,EACdC,cAAc,EACdtlB,iBAAkB,GAClBulB,eAAgB,mCAElB,EAAKP,wBAtBI,kDAyBXngC,QAAQC,IAAI,mBAAZ,sBAzBW,iFApIuB,0DAiKxC0gC,uBAAyB,SAAC/Y,GACxB,GAAyC,OAArC,EAAK7c,MAAMmd,sBAAgC,CAC7C,IAAIte,EAAc,EAAKmB,MAAMmd,sBAAsBzvB,MACjD,SAACF,GAAD,OAAUA,EAAKsJ,SAASL,cAAgB,EAAKuJ,MAAMoQ,yBAEjCtC,IAAhBjP,EACF,EAAK02B,eAAe12B,EAAYvI,eAAgBumB,GAEhDqR,MAAM,4BAGRA,MAAM,wBA5K8B,EA+KxC2H,YAAc,SACZr+B,EACAF,EACAC,EACAu+B,EACAz5B,GAEA,OAAO,EAAKu5B,uBAAuB,CACjC,CACEp+B,UAAWA,EACXu+B,gBAAiB,SACjBnlB,UAAWklB,EAASllB,UACpBjF,YAAamqB,EAASnqB,gBA3LY,EA+LxCxK,kBAAoB,WAClB,EAAK1U,MAAM28B,uBAAuB,EAAK/tB,YAGR,KAA7B,EAAK5O,MAAMmG,KAAKyB,KAAKsJ,KACe,IAApC,EAAKlR,MAAMmG,KAAKyB,KAAKsJ,IAAIvP,QAEzB,EAAK8mC,yBAEP,EAAKE,uBACuC,OAAxC,EAAK3oC,MAAMmG,KAAKwpB,qBAClB,EAAK2Y,mBACH,EAAKtoC,MAAMmG,KAAKyB,KAAKC,QACrB,EAAK7H,MAAMmG,KAAKwpB,oBAAoB3b,iBAGI,OAAxC,EAAKhU,MAAMmG,KAAKwpB,qBAClB,EAAK3vB,MAAM6jB,cACT,EAAK7jB,MAAMmG,KAAKwpB,oBAAoB3b,gBACpC,EAAKhU,MAAMmG,KAAKyB,KAAKC,QACrB,EAAKugC,sBAnN6B,EAwNxCmB,sBAAwB,SACtBnZ,GAEA,IAAIwV,EAAiC,GACrC,GAAyC,OAArC,EAAKryB,MAAMmd,sBAAgC,CAAC,IAAD,gBAC5BN,GAD4B,yBACpCrvB,EADoC,aAKnCsgB,IAFN,EAAK9N,MAAMmd,sBAAsBzvB,MAC/B,SAAC0gB,GAAD,OAAUA,EAAKtX,SAASL,cAAgBjJ,EAAKsJ,kBAGEgX,IAA7CukB,EAAK3kC,MAAK,SAACwa,GAAD,OAASA,EAAI9V,MAAQ5E,EAAK4E,SACtCigC,EAAI,sBAAOA,GAAP,CAAa7kC,MAPvB,2BAAyB,IADoB,+BAa/C,OAAO6kC,GAzO+B,EA4OxC4D,iCAAmC,SACjCpZ,GAEA,IAAIwV,EAA0B,GAC9B,GAAyC,OAArC,EAAKryB,MAAMmd,sBAAgC,CAAC,IAAD,gBAC5BN,GAD4B,yBACpCrvB,EADoC,aAKnCsgB,IAFN,EAAK9N,MAAMmd,sBAAsBzvB,MAC/B,SAAC0gB,GAAD,OAAUA,EAAKtX,SAASL,cAAgBjJ,EAAKsJ,kBAGQgX,IAAnDukB,EAAK3kC,MAAK,SAACwa,GAAD,OAASA,EAAIpL,SAAWtP,EAAKsP,YACzCu1B,EAAI,sBAAOA,GAAP,CAAa7kC,MAPvB,2BAAyB,IADoB,+BAa/C,OAAO6kC,GA7P+B,EA+PxC6D,WAAa,SAAC75B,GACZ,IAAI85B,EAAkB,EAAKn2B,MAAMo2B,YACjC,EAAKr3B,SAAS,CACZq3B,YAAY,GAAD,mBAAMD,GAAN,CAAa95B,OAlQY,EAqQxCg6B,kBAAoB,SAClB1Z,EACAlmB,EACAe,GAEA,GAAqB,OAAjBmlB,EAAuB,CACzB,IAAI0V,EAAO1V,EAAajvB,MACtB,SAACF,GAAD,OAAUA,EAAKsJ,SAASL,cAAgBA,KAE1C,QAAaqX,IAATukB,QAGAvkB,IADAukB,EAAKv7B,SAASO,QAAQ3J,MAAK,SAACwa,GAAD,OAASA,EAAI1Q,YAAcA,KAGtD,OAAO66B,EAIb,OAAO,MAvR+B,EAyRxCiE,gBAAkB,SAACv+B,GACjB,EAAKgH,SAAS,CAAE22B,aAAc39B,KA1RQ,EA6RxC48B,eAAiB,SAACnnC,GAChB,EAAKuR,SAAS,CAAEy2B,eAAgBhoC,EAAMioC,cAAc,IACpD,EAAKa,iBAAgB,IA/RiB,EAkSxCC,WAAa,WACX,EAAKx3B,SAAS,CAAE02B,cAAc,IAC9B,EAAKa,iBAAgB,IAjSrB,EAAKt2B,MAAQ,CACX5E,SAAS,EACT05B,kBAAkB,EAClBG,eAAgB,KAChBmB,YAAa,GACbjZ,sBAAuB,KACvBqY,eAAgB,KAChBC,cAAc,EACdC,cAAc,EACdtlB,iBAAkB,GAClBulB,eAAgB,GAChBnG,aAAc,MAdsB,EAJ1C,0CA2SE,WAAU,IAAD,OACDliB,EAAQC,MAASC,GAAGC,KAE1B,OAAK+oB,YAAUl0B,KAAK7V,MAAMmG,KAAM6jC,IAAeC,gBAAgBC,KAGb,OAA9Cr0B,KAAK7V,MAAM4jB,cAAcumB,iBACpB,cAAC,IAAD,CAAUC,GAAG,aAGpB,eAAC,WAAD,WACiC,OAA9Bv0B,KAAKtC,MAAMw1B,eACV,sBAAKnnC,UAAU,uBAAf,UACE,qBAAKA,UAAU,eAAf,SACE,sBAAKA,UAAU,mCAAf,UACE,cAAC,IAAD,CACEwoC,GAAG,aACHlnC,MAAM,gBACNtB,UAAU,yGAHZ,SAKE,cAAC,IAAD,CAAaA,UAAU,uDAEzB,sBAAKA,UAAU,gBAAf,UACE,sBAAMA,UAAU,0BAAhB,sBACA,sBAAMA,UAAU,wBAAhB,2DAMyB,KAA9BiU,KAAKtC,MAAM21B,gBACV,qBACEhmC,MAAM,6BACNf,QAAS,kBAAM,EAAKmQ,SAAS,CAAE42B,eAAgB,MAC/CtnC,UAAU,kGAHZ,SAKGiU,KAAKtC,MAAM21B,kBAGQ,IAAvBrzB,KAAKtC,MAAM5E,UACoB,IAAhCkH,KAAKtC,MAAM80B,kBACmB,OAA9BxyB,KAAKtC,MAAMi1B,gBACyB,MAApC3yB,KAAKtC,MAAMmd,sBACT,qBAAK9uB,UAAU,uCAAf,SACE,cAAC,IAAD,MAIW,IAFXiU,KAAK0zB,sBACL1zB,KAAKtC,MAAMi1B,eAAe6B,cAC1B1oC,OACF,qBAAKC,UAAU,iFAAf,4BAIAiU,KAAK0zB,sBACH1zB,KAAKtC,MAAMi1B,eAAe6B,cAC1BvoC,KAAI,SAACf,EAAMyO,GAAP,qBACJ,qBAAiB5N,UAAU,kCAA3B,SACE,sBAAKA,UAAU,yDAAf,UACE,sBAAKA,UAAU,sDAAf,UACE,8BACE,cAAC,IAAD,CAA2BA,UAAU,uEAEvC,sBAAKA,UAAU,uBAAf,UACE,sBAAMA,UAAU,mEAAhB,SACGb,EAAK8J,cAER,sBAAKjJ,UAAU,8DAAf,UACE,sBAAKA,UAAU,kDAAf,mBACS+J,YAAK5K,EAAK+P,UAAW,iBAE9B,sBAAKlP,UAAU,2FAAf,yBACeb,EAAK6hB,cAEpB,sBAAKhhB,UAAU,iFAAf,qBACWb,EAAKwP,kBAIhB,OADD,EAAKs4B,aAAa9nC,EAAKsJ,SAAUtJ,EAAKsP,SAErC,sBAAKzO,UAAU,wCAAf,UACE,+CACe,IACb,sBAAMA,UAAU,gGAAhB,mBAEI,EAAKinC,aAAa9nC,EAAKsJ,SAAUtJ,EAAKsP,eAF1C,aAEI,EACIi6B,iBAIV,sBAAK1oC,UAAU,kCAAf,yBACe,IAEO,KADnB,YAAKinC,aAAa9nC,EAAKsJ,SAAUtJ,EAAKsP,eAAtC,eACGk6B,aACF,sBAAM3oC,UAAU,uIAAhB,0BAIA,sBAAMA,UAAU,gGAAhB,mBAEI,EAAKinC,aACH9nC,EAAKsJ,SACLtJ,EAAKsP,eAJX,aAEI,EAGGk6B,cAMW,KADnB,YAAK1B,aAAa9nC,EAAKsJ,SAAUtJ,EAAKsP,eAAtC,eACGk6B,cACF5nB,YACE5hB,EAAK+P,UACL/P,EAAK6hB,WACL7hB,EAAK8hB,YACDjC,IAAekC,SACnB,cAACklB,EAAD,CACEE,eAAgB,WACd,EAAK51B,SAAS,CACZy2B,eAAgB,CACdl+B,YAAa9J,EAAK8J,YAClBC,YAAa/J,EAAK+J,YAClBP,YAAaxJ,EAAK8J,YAClB2/B,cAAe,GACfz/B,UAAWhK,EAAKsP,QAElBsT,iBAAkB5iB,EAAKsJ,SACvB2+B,cAAc,IAEhB,EAAKa,iBAAgB,kBASvC,qBAAKjoC,UAAU,mDAAf,cAGQyf,IAFL,EAAK9N,MAAMo2B,YAAY1oC,MACtB,SAACwa,GAAD,OAASA,IAAQ1a,EAAK4E,QAExB5E,EAAKwP,cAAgBk6B,IAAeC,SACpC3pC,EAAKwP,cAAgBk6B,IAAeE,OAClChoB,YACE5hB,EAAK+P,UACL/P,EAAK6hB,WACL7hB,EAAK8hB,YACDjC,IAAekC,SACnB,YAAK8mB,kBACH,EAAKr2B,MAAMmd,sBACX3vB,EAAKsJ,SACLtJ,EAAKsP,eAHP,eAIG3G,sBACHC,IAAkBC,YAChB,qBAAKhI,UAAU,8FAAf,6BAIA,qBACEO,QAAS,WACP,IAAIiQ,EAAc,EAAKw3B,kBACrB,EAAKr2B,MAAMmd,sBACX3vB,EAAKsJ,SACLtJ,EAAKsP,QAEa,OAAhB+B,EAEAA,EAAY1I,qBACZC,IAAkBC,aAGlB,EAAK5J,MAAMy8B,oBACTrqB,EAAY/H,UAEd,EAAKrK,MAAMw8B,kBACTpqB,EAAY/H,SAASO,QAAQ3J,MAC3B,SAACwa,GAAD,OAASA,EAAI1Q,YAAchK,EAAKsP,WAGpC,EAAKrQ,MAAMu8B,yBACTx7B,EAAK4E,MAGP87B,MACE,iDAIJA,MAAM,kBAGV7/B,UAAS,UACPb,EAAKwP,cAAgBk6B,IAAeC,SACpC3pC,EAAKwP,cAAgBk6B,IAAeE,OAChC,wCACA,sCAJG,yCAjCX,SAwCG5pC,EAAKwP,cAAgBk6B,IAAeC,QACjC,eACA3pC,EAAKwP,cAAgBk6B,IAAeE,OACpC,uBACA,eAGN5pC,EAAKwP,cAAgBk6B,IAAeC,SACtC3pC,EAAKwP,cAAgBk6B,IAAeG,MACpC7pC,EAAKwP,cAAgBk6B,IAAeE,QACpC5pC,EAAKwP,cAAgBk6B,IAAeI,QACpC,sBAAKjpC,UAAU,6DAAf,UACE,yCACA,uBAAMA,UAAU,gCAAhB,UACGb,EAAKy6B,WAAW5Z,QAAQ,GAD3B,OAGA,qBACEzf,QAAS,kBACP,EAAKmQ,SAAS,CACZywB,aAAc,CACZ1yB,OAAQtP,EAAKsP,OACbxF,YAAa9J,EAAK8J,YAClB6wB,YAAa36B,EAAK26B,YAClBC,OAAQ56B,EAAK46B,OACbiB,MAAO77B,EAAK67B,MACZxsB,OAAQrP,EAAKqP,OACbU,UAAW/P,EAAK+P,cAItBlP,UAAU,+CAdZ,8BAoBF,qBAAKA,UAAU,oFAAf,sBAIe,IAAfb,EAAK+pC,MACP,qBACE5nC,MAAM,gCACNtB,UAAU,2GAFZ,SAIE,cAAC,IAAD,CACEghB,WAAY,IAAIH,KAAK5B,EAAMT,YAAYA,WACvC2qB,aAAcC,YACZ,IAAIvoB,KAAK5B,EAAMT,YACf,IAAIqC,KACF9W,YAAK5K,EAAK+P,UAAW,cACnB,IACA/P,EAAK6hB,aAGXqoB,QAAS,kBAAM,EAAKxB,WAAW1oC,EAAK4E,MACpCulC,cAAc,EACd1yB,QAAQ,EACR2yB,MAAI,MAIR,sBAAKvpC,UAAU,6DAAf,UACE,yCACA,uBAAMA,UAAU,gCAAhB,UACGb,EAAKy6B,WAAW5Z,QAAQ,GAD3B,OAGA,qBACEzf,QAAS,kBACP,EAAKmQ,SAAS,CACZywB,aAAc,CACZ1yB,OAAQtP,EAAKsP,OACbxF,YAAa9J,EAAK8J,YAClB6wB,YAAa36B,EAAK26B,YAClBC,OAAQ56B,EAAK46B,OACbiB,MAAO77B,EAAK67B,MACZxsB,OAAQrP,EAAKqP,OACbU,UAAW/P,EAAK+P,cAItBlP,UAAU,+CAdZ,oCAhNA4N,EAAI,MA0Oa,OAA9BqG,KAAKtC,MAAMi1B,iBACa,IAAvB3yB,KAAKtC,MAAM5E,SACXkH,KAAK2zB,iCACH3zB,KAAKtC,MAAMi1B,eAAe4C,iBAC1BzpC,OAAS,GACXkU,KAAK2zB,iCACH3zB,KAAKtC,MAAMi1B,eAAe4C,iBAC1BtpC,KAAI,SAACf,EAAMyO,GAAP,mBACJ,qBAEE5N,UAAU,uCAFZ,SAIE,sBAAKA,UAAU,yDAAf,UACE,sBAAKA,UAAU,sDAAf,UACE,qBAAKA,UAAU,GAAf,SACE,cAAC,IAAD,CAA2BA,UAAU,uEAEvC,sBAAKA,UAAU,gBAAf,UACE,sBAAMA,UAAU,8DAAhB,SACGb,EAAK8J,cAER,qBAAKjJ,UAAU,yCAAf,SAEI,OADD,EAAKinC,aAAa9nC,EAAKsJ,SAAUtJ,EAAKsP,SAErC,sBAAKzO,UAAU,wCAAf,UACE,sBAAKA,UAAU,4CAAf,yBACe,IACb,sBAAMA,UAAU,gGAAhB,mBAEI,EAAKinC,aACH9nC,EAAKsJ,SACLtJ,EAAKsP,eAJX,aAEI,EAGGi6B,iBAIT,sBAAK1oC,UAAU,kDAAf,yBACe,IAEO,KADnB,YAAKinC,aAAa9nC,EAAKsJ,SAAUtJ,EAAKsP,eAAtC,eACGk6B,aACF,sBAAM3oC,UAAU,uIAAhB,0BAIA,sBAAMA,UAAU,gGAAhB,mBAEI,EAAKinC,aACH9nC,EAAKsJ,SACLtJ,EAAKsP,eAJX,aAEI,EAGGk6B,cAMW,KADnB,YAAK1B,aAAa9nC,EAAKsJ,SAAUtJ,EAAKsP,eAAtC,eACGk6B,cACF,cAACvC,EAAD,CACEE,eAAgB,WACd,EAAK51B,SAAS,CACZy2B,eAAgB,CACdl+B,YAAa9J,EAAK8J,YAClBC,YAAa/J,EAAK+J,YAClBP,YAAaxJ,EAAK8J,YAClB2/B,cAAe,GACfz/B,UAAWhK,EAAKsP,QAElBsT,iBAAkB5iB,EAAKsJ,SACvB2+B,cAAc,IAEhB,EAAKa,iBAAgB,oBAUvC,qBAAKjoC,UAAU,0EAAf,8BAtEG4N,EAAI,UA6EQ,IAAvBqG,KAAKtC,MAAM5E,QACb,qBAAK/M,UAAU,uCAAf,SACE,cAAC,IAAD,MAGF,sBAAKA,UAAU,2GAAf,UACE,qBAAKA,UAAU,8EAAf,SACE,qBAAKA,UAAU,uBAAf,SACE,sBAAKA,UAAU,+DAAf,UACE,sBAAMA,UAAU,kCAAhB,kCAGA,qBAAKA,UAAU,0JAAf,SACE,cAAC,IAAD,CACEA,UAAU,yCACVO,QAAS,WACP,EAAKmQ,SAAS,CACZ02B,cAAc,EACdD,eAAgB,mBAQ9B,cAAC,IAAD,CACEsC,gBAAiBx1B,KAAKtC,MAAMw1B,eAC5BK,YAAavzB,KAAKuzB,YAClBU,WAAYj0B,KAAKi0B,gBAIM,OAA5Bj0B,KAAKtC,MAAMwvB,cACV,cAAC,IAAD,CACE7/B,MACE,qBAAKtB,UAAU,6CAAf,iCAIFY,UAAU,EACVC,MAAOC,IAAOC,QACdC,MAAO,kBAAM,EAAK0P,SAAS,CAAEywB,aAAc,QAC3ClgC,eAAe,EACfC,eAAgBC,IAAUC,WAC1BC,cAAc,EACd1B,QAAS,CAAE2B,OAAO,GAZpB,SAcE,cAAC,IAAD,CACE0M,QAASiG,KAAKtC,MAAMwvB,aACpBpzB,aAAa,SAtad,cAAC,IAAD,CAAUy6B,GAAG,UA/S1B,GAAqChzB,aAivBxBk0B,EAAiBplC,aAnBN,SAAC,GAWvB,MAAO,CACLC,KAFC,EATHA,KAYEyd,cAHC,EARHA,cAYE8M,sBAJC,EAPHA,sBAYE6a,QALC,EANHA,WAeqD,CACrDlP,yBACAC,+BACAC,8BACAC,uBACAC,yBACAzY,2BACAH,mBACA6Y,uBACAC,6BAT4Bz2B,CAU3BiiC,I,iCC95BH,kCA2Be/qB,IAbuB,SAACpd,GACrC,OACE,qBAAK4B,UAAU,QAAf,SACE,cAAC,IAAD,CACEyb,QAASrd,EAAMqd,QACfvE,OAAQ9Y,EAAM8Y,OACd3K,KAAK,QACLwQ,MAAK,UAAK3e,EAAM2e,MAAQ3e,EAAM2e,MAAQ,a,iCCrB9C,8FA6Ca6hB,EAAY,SACvBC,GAEA,IAAI+K,EAAoCzM,2BAAyBoB,OACjE,OAAQM,GACN,KAAKgL,oBAAkBC,WACrBF,EAAUzM,2BAAyB2M,WACnC,MACF,KAAKD,oBAAkBrM,yBACrBoM,EAAUzM,2BAAyBK,yBACnC,MACF,KAAKqM,oBAAkBzL,MACrBwL,EAAUzM,2BAAyBiB,MACnC,MACF,KAAKyL,oBAAkBnM,SACrBkM,EAAUzM,2BAAyBO,SACnC,MACF,KAAKmM,oBAAkBzM,eACrBwM,EAAUzM,2BAAyBC,eACnC,MACF,KAAKyM,oBAAkB/L,QACrB8L,EAAUzM,2BAAyBW,QACnC,MACF,KAAK+L,oBAAkB3L,YACrB0L,EAAUzM,2BAAyBe,YACnC,MACF,KAAK2L,oBAAkB7L,gBACrB4L,EAAUzM,2BAAyBa,gBACnC,MACF,KAAK6L,oBAAkBvM,eACrBsM,EAAUzM,2BAAyBG,eACnC,MACF,KAAKuM,oBAAkBjM,UACrBgM,EAAUzM,2BAAyBS,UAGvC,OAAOgM,GAsHMG,IAnHU,SAAC3rC,GAExB,OAAmC,IAA/BA,EAAM4rC,qBAEN,sBAAKhqC,UAAU,6BAAf,UACE,qBAAKA,UAAU,qBAAf,4CACA,cAAC,IAAD,OAKJ,qBAAKA,UAAS,yCAAd,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,OAAf,SACE,sBACEA,UAAU,sCACViL,MAAO,CAAEg/B,UAAW,QAFtB,UAIGrjC,QAAQC,IAAI,UAAWzI,EAAMkjC,eAC9B,8BACGpE,YACC9+B,EAAMkjC,cAAc/0B,KACpBnO,EAAMyO,cAAcA,iBAChBswB,2BAAyBoB,aAGvB9e,IAFNrhB,EAAMkjC,cAAcrH,SAAS56B,MAC3B,SAAC0gB,GAAD,OAAUA,EAAKma,WAAa97B,EAAM+7B,qBAEpC/7B,EAAMkjC,cAAcrH,SACjB56B,MAAK,SAAC0gB,GAAD,OAAUA,EAAKma,WAAa97B,EAAM+7B,oBACvCwE,aAAaz+B,KAAI,SAACf,EAAMyO,GACvB,IAAIs8B,EAAO/T,OAAOgU,aA7B1B,IA8BcC,WA9Bd,IA8B6BrqC,OAAS,GAAK6N,GAEnC,OACE,qBAEE5N,UAAU,6IAFZ,SAIE,qBAAKA,UAAU,8BAAf,SACE,sBAAKA,UAAU,+CAAf,UACE,qBAEEA,UAAU,uHAFZ,SAIGkqC,GAHIt8B,EAAI,GAKX,sBAAK5N,UAAU,iBAAf,eAIQyf,IAHLrhB,EAAMkjC,cAAcrH,SAAS56B,MAC5B,SAAC0gB,GAAD,OACEA,EAAKma,WAAa97B,EAAM+7B,oBAE1B+C,YACE/9B,EAAKoN,KACLnO,EAAMyO,cAAcA,iBAChBswB,2BAAyBmB,SAC7BW,YACE7gC,EAAMkjC,cACNljC,EAAMyO,cAAcA,cACpBzO,EAAM+7B,iBACN/7B,EAAM4jB,cAAcgb,kBACpB,SAACn9B,OAGH,qBACEG,UAAU,oCACViK,wBAAyB,CACvBC,OAAQ/K,EAAKwJ,eAKnBvK,EAAMkjC,cAAcrH,SAASl6B,OAAS,GACpC,qBACEC,UAAU,sDACViK,wBAAyB,CACvBC,OAAQ/K,EAAKwJ,eAKrB,sBAAK3I,UAAU,yCAAf,yBAEyC,OAAtC5B,EAAMyO,cAAcA,eACnB,cAAC,IAAD,CACEstB,iBAAkB/7B,EAAM+7B,iBACxBF,SAAU77B,EAAMkjC,cAChB/G,YAAan8B,EAAM4jB,cAAcgb,iBAAiB99B,QAChD,SAAC2a,GAAD,OACEA,EAAImgB,cACJ57B,EAAMkjC,cAActH,eAExBntB,cACEzO,EAAMyO,cAAcA,cAEtBtM,QAAS,aACTi6B,mBAAmB,EACnByC,gBAAiB2B,EAAUz/B,EAAK0/B,WAChCC,UAAW3/B,EAAK2/B,wBA9DvBlxB,EAAI,mB,6FCvHjC,kCA8Cey8B,IA5B6C,WAQtD,IAPJjsC,EAOG,uDAPK,CACNkD,MAAO,GACP8Z,KAAMkvB,IACNhvB,UAAW,SACXhF,MAAO,EACPi0B,eAAW9qB,GAGPgM,EAAcrtB,EAAMgd,KAC1B,OACE,sBAAKpb,UAAU,0FAAf,UACE,qBACEA,UAAS,8BAAyB5B,EAAMkd,UAA/B,sBADX,SAGE,cAACmQ,EAAD,CAAazrB,UAAS,uBAAkB5B,EAAMkd,UAAxB,YAExB,gCACE,qBAAItb,UAAU,uCAAd,UACG0e,YAAWtgB,EAAMkY,OAAQ,IACzBlY,EAAMmsC,WAAa,KAAO7rB,YAAWtgB,EAAMmsC,cAE9C,sBAAMvqC,UAAU,wBAAhB,SAAyC5B,EAAMkD,gB,iCCxCvD,yBAgDe6Z,IApC4C,SAAC/c,GAC1D,IAAMosC,EAAkBpsC,EAAMmd,aAC1Bnd,EAAMmd,YAAc,EAClBnd,EAAMmd,YAER,EACJ,OACE,sBACEvb,UAAS,6BAAwBwqC,EAAxB,yBACPA,EAAU,EADH,yBAEQA,EAAU,EAFlB,yBAGPA,EAAU,EAHH,0DADX,UAOGpsC,EAAMgtB,WACHhtB,EAAMqsC,kBAA+C,UAA3BrsC,EAAMqsC,mBAC/BrsC,EAAMqsC,mBACTrsC,EAAMgtB,SACPhtB,EAAM2Y,WAAW7W,KAAI,SAACf,EAAMgB,GAAP,OACpB,kCACE,cAAC,IAAD,CACEmB,MAAOnC,EAAKmC,MACZ8Z,KAAMjc,EAAKic,KACXE,UAAWnc,EAAKmc,UAChBhF,MAAOnX,EAAKmX,SALFnW,EAAQhB,EAAKmC,UAS5BlD,EAAMgtB,UACLhtB,EAAMqsC,kBACqB,QAA3BrsC,EAAMqsC,kBACNrsC,EAAMgtB,c,kJCyLCsf,EA7KgB,SAACtsC,GAC9B,OACE,qCAE2BqhB,IAAxBrhB,EAAMkjC,oBACoC7hB,IAAzCrhB,EAAM2iC,uBAAuBpP,SAC7BvzB,EAAMe,KAAK0/B,YAAcgL,oBAAkBjM,WAC3Cx/B,EAAM2iC,uBAAuBpP,QAC1BzyB,QAAO,SAAC6gB,GAAD,OAAUA,EAAK+e,YAAc1gC,EAAMe,KAAK2/B,aAC/C5+B,KAAI,SAAC2Z,EAAKjM,GAAN,OACH,cAACgwB,EAAA,EAAD,CAEErxB,KAAMnO,EAAMmO,KACZu0B,kBAAmB1iC,EAAM0iC,kBACzBC,uBAAwB,CACtB/G,YAAa57B,EAAM2iC,uBAAuB/G,YAC1CC,SAAU77B,EAAM2iC,uBAAuB9G,SACvCtI,QAASE,YAAYhY,EAAI+X,QACzBoP,YAAannB,GAEfonB,iBAAkB7iC,EAAM6iC,kBATnBrzB,EAAI,WAaQ6R,IAAxBrhB,EAAMkjC,oBACoC7hB,IAAzCrhB,EAAM2iC,uBAAuBpP,UAC5BvzB,EAAMe,KAAK0/B,YAAcgL,oBAAkBC,YAC1C1rC,EAAMe,KAAK0/B,YAAcgL,oBAAkB7L,kBAC7C5/B,EAAM2iC,uBAAuBpP,QAC1BzyB,QAAO,SAAC6gB,GAAD,OAAUA,EAAK+e,YAAc1gC,EAAMe,KAAK2/B,aAC/C5+B,KAAI,SAAC2Z,EAAKjM,GAAN,OACH,cAACw2B,EAAA,EAAD,CAEE73B,KAAMnO,EAAMmO,KACZu0B,kBAAmB1iC,EAAM0iC,kBACzBC,uBAAwB,CACtB/G,YAAa57B,EAAM2iC,uBAAuB/G,YAC1CC,SAAU77B,EAAM2iC,uBAAuB9G,SACvCtI,QAASI,YAAmBlY,EAAI+X,QAChCoP,YAAannB,GAEfonB,iBAAkB7iC,EAAM6iC,kBATnBrzB,EAAI,WAaQ6R,IAAxBrhB,EAAMkjC,oBACoC7hB,IAAzCrhB,EAAM2iC,uBAAuBpP,UAC5BvzB,EAAMe,KAAK0/B,YAAcgL,oBAAkBvM,gBAC1Cl/B,EAAMe,KAAK0/B,YAAcgL,oBAAkBzM,iBAC7Ch/B,EAAM2iC,uBAAuBpP,QAC1BzyB,QAAO,SAAC6gB,GAAD,OAAUA,EAAK+e,YAAc1gC,EAAMe,KAAK2/B,aAC/C5+B,KAAI,SAAC2Z,EAAKjM,GAAN,OACH,cAACwvB,EAAA,EAAD,CAEE7wB,KAAMnO,EAAMmO,KACZu0B,kBAAmB1iC,EAAM0iC,kBACzBC,uBAAwB,CACtB/G,YAAa57B,EAAM2iC,uBAAuB/G,YAC1CC,SAAU77B,EAAM2iC,uBAAuB9G,SACvCtI,QAASD,YAAiB7X,EAAI+X,QAC9BoP,YAAannB,GAEfonB,iBAAkB7iC,EAAM6iC,kBATnBrzB,EAAI,WAaQ6R,IAAxBrhB,EAAMkjC,oBACoC7hB,IAAzCrhB,EAAM2iC,uBAAuBpP,SAC7BvzB,EAAMe,KAAK0/B,YAAcgL,oBAAkBrM,0BAC3Cp/B,EAAM2iC,uBAAuBpP,QAC1BzyB,QAAO,SAAC6gB,GAAD,OAAUA,EAAK+e,YAAc1gC,EAAMe,KAAK2/B,aAC/C5+B,KAAI,SAAC2Z,EAAKjM,GAAN,OACH,cAAC4vB,EAAA,EAAD,CAEEjxB,KAAMnO,EAAMmO,KACZu0B,kBAAmB1iC,EAAM0iC,kBACzBC,uBAAwB,CACtB/G,YAAa57B,EAAM2iC,uBAAuB/G,YAC1CC,SAAU77B,EAAM2iC,uBAAuB9G,SACvCtI,QAASO,YAA2BrY,EAAI+X,QACxCoP,YAAannB,GAEfonB,iBAAkB7iC,EAAM6iC,kBATnBrzB,EAAI,WAcQ6R,IAAxBrhB,EAAMkjC,oBACoC7hB,IAAzCrhB,EAAM2iC,uBAAuBpP,SAC7BvzB,EAAMe,KAAK0/B,YAAcgL,oBAAkBnM,UAC3Ct/B,EAAM2iC,uBAAuBpP,QAC1BzyB,QAAO,SAAC6gB,GAAD,OAAUA,EAAK+e,YAAc1gC,EAAMe,KAAK2/B,aAC/C5+B,KAAI,SAAC2Z,EAAKjM,GAAN,OACH,cAAC8vB,EAAA,EAAD,CAEEnxB,KAAMnO,EAAMmO,KACZu0B,kBAAmB1iC,EAAM0iC,kBACzBC,uBAAwB,CACtB/G,YAAa57B,EAAM2iC,uBAAuB/G,YAC1CC,SAAU77B,EAAM2iC,uBAAuB9G,SACvCtI,QAASG,YAAWjY,EAAI+X,QACxBwP,gBAAiBC,YAAQvP,YAAWjY,EAAI+X,SACxCoP,YAAannB,GAEfonB,iBAAkB7iC,EAAM6iC,iBACxBE,aAAc/iC,EAAM+iC,aACpBhH,iBAAkB/7B,EAAM+7B,kBAZnBvsB,EAAI,WAgBQ6R,IAAxBrhB,EAAMkjC,oBACoC7hB,IAAzCrhB,EAAM2iC,uBAAuBpP,SAC7BvzB,EAAMe,KAAK0/B,YAAcgL,oBAAkBzL,OAC3ChgC,EAAM2iC,uBAAuBpP,QAC1BzyB,QAAO,SAAC6gB,GAAD,OAAUA,EAAK+e,YAAc1gC,EAAMe,KAAK2/B,aAC/C5+B,KAAI,SAAC2Z,EAAKjM,GAAN,OACH,cAACwwB,EAAA,EAAD,CAEE7xB,KAAMnO,EAAMmO,KACZu0B,kBAAmB1iC,EAAM0iC,kBACzBC,uBAAwB,CACtB/G,YAAa57B,EAAM2iC,uBAAuB/G,YAC1CC,SAAU77B,EAAM2iC,uBAAuB9G,SACvCtI,QAASQ,YAAQtY,EAAI+X,QACrBoP,YAAannB,GAEfonB,iBAAkB7iC,EAAM6iC,kBATnBrzB,EAAI,WAaQ6R,IAAxBrhB,EAAMkjC,oBACoC7hB,IAAzCrhB,EAAM2iC,uBAAuBpP,SAC7BvzB,EAAMe,KAAK0/B,YAAcgL,oBAAkB/L,SAC3C1/B,EAAM2iC,uBAAuBpP,QAC1BzyB,QAAO,SAAC6gB,GAAD,OAAUA,EAAK+e,YAAc1gC,EAAMe,KAAK2/B,aAC/C5+B,KAAI,SAAC2Z,EAAKjM,GAAN,OACH,cAAC42B,EAAA,EAAD,CAEEj4B,KAAMnO,EAAMmO,KACZu0B,kBAAmB1iC,EAAM0iC,kBACzBC,uBAAwB,CACtB/G,YAAa57B,EAAM2iC,uBAAuB/G,YAC1CC,SAAU77B,EAAM2iC,uBAAuB9G,SACvCtI,QAASM,YAAYpY,EAAI+X,QACzBoP,YAAannB,GAEfonB,iBAAkB7iC,EAAM6iC,kBATnBrzB,EAAI,WAaQ6R,IAAxBrhB,EAAMkjC,oBACoC7hB,IAAzCrhB,EAAM2iC,uBAAuBpP,SAC7BvzB,EAAMe,KAAK0/B,YAAcgL,oBAAkB3L,aAC3C9/B,EAAM2iC,uBAAuBpP,QAC1BzyB,QAAO,SAAC6gB,GAAD,OAAUA,EAAK+e,YAAc1gC,EAAMe,KAAK2/B,aAC/C5+B,KAAI,SAAC2Z,EAAKjM,GAAN,OACH,cAACswB,EAAA,EAAD,CAEE3xB,KAAMnO,EAAMmO,KACZu0B,kBAAmB1iC,EAAM0iC,kBACzBC,uBAAwB,CACtB/G,YAAa57B,EAAM2iC,uBAAuB/G,YAC1CC,SAAU77B,EAAM2iC,uBAAuB9G,SACvCtI,QAASK,YAAcnY,EAAI+X,QAC3BoP,YAAannB,GAEfonB,iBAAkB7iC,EAAM6iC,kBATnBrzB,EAAI,UCzER+8B,IAxFO,SAACvsC,GAuCrB,OACE,mCAC2BqhB,IAAxBrhB,EAAMkjC,eACLljC,EAAMkjC,cAAc3C,aAAa5+B,OAAS,GAC1C3B,EAAMkjC,cAAc3C,aAAaz+B,KAAI,SAACf,EAAMyO,GAC1C,IAAIs8B,EAAO/T,OAAOgU,aA3ChB,IA2CiCC,WA3CjC,IA2CgDrqC,OAAS,GAAK6N,GAChE,OACE,sBACEtM,MAAM,8BAENtB,UAAS,6DAHX,UAOE,sBAAKA,UAAU,+CAAf,UACE,8BACE,qBAAKA,UAAU,qGAAf,SACGkqC,MAGL,sBAAKlqC,UAAU,0DAAf,UACE,qBAAKA,UAAU,YAAf,SAA4Bb,EAAKwJ,cACjC,8BACE,sBAAK3I,UAAU,6DAAf,UACGb,EAAK8N,MADR,oBAMN,qBAAKjN,UAAU,qBAAf,SACE,cAAC,EAAD,CACEuM,KAAMnO,EAAMmO,KACZu0B,kBAAmB1iC,EAAM0iC,kBACzBC,uBAAwB3iC,EAAM2iC,uBAC9BE,iBAAkB7iC,EAAM6iC,iBACxBK,cAAeljC,EAAMkjC,cACrBH,aAAc/iC,EAAM+iC,aACpBhH,iBAAkB/7B,EAAM+7B,iBACxBh7B,KAAMA,EACNyrC,QAAQ,QA9BPh9B,EAAI,U,uJChFVgH,EAA0B,SACrCi2B,EACAv5B,GAEA,MAAkB,QAAdA,EACKu5B,EAGFA,EAAU3rC,QAAO,SAACC,GAAD,OAAUA,EAAKuQ,WAAa4B,MAqLvChN,iBAPS,SAAC,GAIvB,MAAO,CAAEC,KADsD,EAF/DA,KAGe0N,SADgD,EAD/DA,YAKsC,CACtCgL,qBACAC,yBACA/K,iBACAzN,qBAJaJ,EArK6C,SAAClG,GAC3D,MAA8BC,oBAAkB,GAAhD,mBAAO0O,EAAP,KAAgBC,EAAhB,KACA,EAAkD3O,oBAAkB,GAApE,mBAAOysC,EAAP,KAA0BC,EAA1B,KAEAz9B,qBAAU,WAC0B,OAA9BlP,EAAM6T,SAAS4C,WACjBzW,EAAM6e,kBAAiB,SAACvT,EAAiBpE,IACxB,IAAXoE,IACEpE,EAAIvF,OAAS,GACf3B,EAAMsG,eAAe,CACnBpD,MAAOgE,EACPzE,MAAOqG,IAAgBI,SAG3ByjC,GAAqB,GACrB/9B,GAAW,OAGN89B,IACTC,GAAqB,GACrB/9B,GAAW,MAEZ,CAAC89B,EAAmB1sC,IAEvB,IAAM4sC,EAAc,SAClB/4B,EACA6U,GAEA,IAAIrX,EAAiB,EAerB,OAbIwC,EAASC,WAA0B,QAAb4U,IACxBrX,EAASwC,EAASC,UAAUhT,QAC1B,SAACC,GAAD,OAAUA,EAAKwL,oBAAsBC,IAAYC,WACjD9K,QAEAkS,EAASC,WAA0B,QAAb4U,IACxBrX,EAASwC,EAASC,UAAUhT,QAC1B,SAACC,GAAD,OACEA,EAAKuQ,WAAaoX,GAClB3nB,EAAKwL,oBAAsBC,IAAYC,WACzC9K,QAGG0P,GAGT,OACE,eAAC,IAAMw7B,SAAP,WACE,sBAAMjrC,UAAU,eAAhB,mCAEE+M,GAAW3O,EAAMgW,gBACjB,0BAASpU,UAAU,YAAnB,UACE,qBAAKA,UAAU,wGACf,qBAAKA,UAAU,wGACf,qBAAKA,UAAU,wGACf,qBAAKA,UAAU,4GAMjB+M,IAAY3O,EAAMgW,eAAiBhW,EAAM6T,SAAS4C,YAClD,oCAEE,qBACE7U,UAAU,OACVO,QAAS,WAEPnC,EAAM8e,qBAAqB,QAJ/B,SAOE,cAAC,IAAD,CACE5b,MAAM,MACNqV,OAA6C,QAArCvY,EAAM6T,SAASsC,kBACvB+B,MAAO00B,EAAY5sC,EAAM6T,SAAU,WAIvC,qBACEjS,UAAU,OACVO,QAAS,WAEPnC,EAAM8e,qBAAqBvN,IAAchI,cAJ7C,SAOE,cAAC,IAAD,CACErG,MAAO,cACPqV,OACuC,QAArCvY,EAAM6T,SAASsC,mBACfnW,EAAM6T,SAASsC,oBAAsB5E,IAAchI,YAErD2O,MAAO00B,EAAY5sC,EAAM6T,SAAUtC,IAAchI,iBAIrD,qBACE3H,UAAU,OACVO,QAAS,WACPnC,EAAM8e,qBAAqBvN,IAAcC,sBAH7C,SAME,cAAC,IAAD,CACEtO,MAAO,WACPqV,OACuC,QAArCvY,EAAM6T,SAASsC,mBACfnW,EAAM6T,SAASsC,oBACb5E,IAAcC,oBAElB0G,MAAO00B,EACL5sC,EAAM6T,SACNtC,IAAcC,yBAKpB,qBACE5P,UAAU,OACVO,QAAS,WACPnC,EAAM8e,qBAAqBvN,IAAc8C,cAH7C,SAME,cAAC,IAAD,CACEnR,MAAO,OACPqV,OACuC,QAArCvY,EAAM6T,SAASsC,mBACfnW,EAAM6T,SAASsC,oBAAsB5E,IAAc8C,YAErD6D,MAAO00B,EAAY5sC,EAAM6T,SAAUtC,IAAc8C,kBAGpD,Y,iCC7KX,yBAgFe4B,IAtD2C,SAACjW,GACzD,IAAM8sC,EAAY,WAChB,SAAI9sC,EAAM2O,SAAW3O,EAAMsW,gBAAkBtW,EAAM0S,gBAMrD,OACE,sBAAK9Q,UAAU,wEAAf,UACE,sBAAKA,UAAU,wCAAf,UACE,cAAC,IAAD,CAAiBA,UAAU,2CAC3B,qBAAKA,UAAU,gBAAf,SACE,sBAAMA,UAAU,mCAAhB,SACG5B,EAAMkW,mBAMb,yBAAStU,UAAU,gCAAnB,SACE,8BACE,wBACEA,UAAS,uFACPkrC,IAAc,cAAgB,kBAEhC3hC,MAAOnL,EAAM4S,WAAa5S,EAAM4S,WAAWoB,gBAAkB,GAC7D9G,SAAU4/B,IACV//B,SAAU,SAACC,GAtCF,IACnBsG,EACAoC,EADApC,EAuCctT,EAAM2U,qBAtCpBe,EAuCc1I,EAAEC,OAAO9B,OAFX4hC,EAGE/sC,EAAM2S,eApClBW,EAASxS,QAAO,SAACC,GAAD,OAAUA,EAAKiT,kBAAoB0B,KAAW,IAsCpD1V,EAAMuW,mBAAkB,GACxBvW,EAAMyV,eAAezI,EAAEC,OAAO9B,QAblC,SAgBGnL,EAAM2U,qBAAqB7S,KAAI,SAACiY,EAAShZ,GAAV,OAC9B,wBAEEoK,MAAO4O,EAAQ/F,gBAFjB,SAIG+F,EAAQC,mBAHJD,EAAQ/F,gBAAkBjT,iB,seCpBnCisC,E,uRCnBN1S,EAAmB,SAAClzB,GACxB,GAA8B,IAA1BA,EAAUG,YAAmB,CAC/B,IAAMgzB,EAAanzB,EAAUC,OAAOpG,MAAK,SAACF,GAAD,OAAyB,IAAfA,EAAKuG,SACxD,GAAIizB,GACEA,EAAWzyB,wBAA0Ba,IAAoB0D,SAC3D,OAAO,EAIb,OAAO,GA2YMnG,cAAQ,KAAM,CAC3Bw0B,kBACAp0B,qBAFaJ,EA3WmC,SAAClG,GACjD,IAAMgxB,EAAY,uCAAG,4BAAAhqB,EAAA,0DACfpG,YAAgBZ,EAAM26B,eADP,yCAEV36B,EAAM4G,aAAa,CACxBK,QAAS,UACTC,IAAK,gCAJU,UAOdlH,EAAMoH,UAPQ,yCAQVpH,EAAMsG,eAAe,CAC1BpD,MAAO,oBACPT,MAAOqG,IAAgB8xB,WAVR,cAcnB56B,EAAMwG,mBAAkB,GAdL,SAgBjB2hB,cAhBiB,SAiBC/f,IAAMC,IAAN,UACb3E,IAAI4E,SADS,yBACgBtI,EAAMoH,UAAUzB,KAChD,CACEoG,OAAQ/L,EAAM26B,gBApBD,OAiBXpyB,EAjBW,OAuBjBC,QAAQC,IAAI,CAAEF,IAAKA,EAAI9G,OACJ,MAAf8G,EAAI+C,QAAiC,MAAf/C,EAAI+C,SAC5BtL,EAAM06B,cAAcnyB,EAAI9G,MACxBzB,EAAMsG,eAAe,CACnBpD,MAAO,wBACPT,MAAOqG,IAAgBC,UAEzB/I,EAAM66B,iBAAiB,IACvB76B,EAAM86B,eAAc,IA/BL,kDAkCjBtyB,QAAQQ,MAAM,CAAEA,MAAK,OACrBhJ,EAAMsG,eAAe,CACnBpD,MAAO+F,YAAY,EAAD,IAClBxG,MAAOqG,IAAgBI,SArCR,QAwCnBlJ,EAAMwG,mBAAkB,GAxCL,0DAAH,qDA2CZ2C,EAAgB,SACpBC,GAEA,GAAIpJ,EAAMqJ,aACR,OAAOrJ,EAAMqJ,aAAapI,MAAK,SAACF,GAAD,OAAUA,EAAK8C,KAAOuF,MAKzD,OACE,0BAASxH,UAAU,GAAnB,UACE,sBAAKA,UAAU,iDAAf,UAEE,0BAASA,UAAU,gBAAnB,UACE,sBAAKA,UAAU,oCAAf,UACE,sBAAMA,UAAU,mCAAhB,SACG5B,EAAMoK,gBAAgBC,SAASC,iBAElC,wBACE6D,KAAK,SACLvM,UAAU,uGACVO,QAAS,kBAAMnC,EAAMitC,iBAAiBjtC,EAAMktC,eAH9C,SAKGltC,EAAMktC,aAAe,OAAS,YAGnC,sBAAKtrC,UAAU,gDAAf,UACE,sBAAMA,UAAS,SAAf,qBACA,sBACEA,UAAS,oBACP5B,EAAMoH,UAAUiE,SAASC,SAAW3B,IAAkB4B,SAClD,kBACA,gBAHG,sBADX,SAOGC,YAAsBxL,EAAMoH,UAAUiE,SAASC,aAGpD,sBAAK1J,UAAU,gDAAf,UACE,sBAAMA,UAAS,SAAf,2BACA,sBAAMA,UAAU,gBAAhB,SACG5B,EAAMoH,UAAUiE,SAASI,UAAUC,WAGvC,EAWD,sBAAK9J,UAAU,gDAAf,UACE,sBAAMA,UAAS,SAAf,mBACA,sBAAMA,UAAU,+BAAhB,SACG+J,YAAK3L,EAAMoK,gBAAgBwB,gBAGhC,sBAAKhK,UAAU,+CAAf,UACE,sBAAMA,UAAS,SAAf,qBACA,sBACEA,UAAU,cACViK,wBAAyB,CACvBC,OAAQ9L,EAAMoH,UAAUiE,SAASU,aAMtC/L,EAAMktC,cACL,qBAAKtrC,UAAU,wDAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,wCAAf,8BAGA,sBAAKA,UAAU,kDAAf,UACE,sBAAMA,UAAS,SAAf,mBACA,sBAAMA,UAAU,gBAAhB,SACG5B,EAAMoK,gBAAgBC,SAASE,iBAGpC,sBAAK3I,UAAU,kDAAf,UACE,sBAAMA,UAAS,SAAf,2BACA,sBAAMA,UAAU,gBAAhB,SAEI5B,EAAMoK,gBAAgBC,SAASG,gBAC5BC,uBAIT,sBAAK7I,UAAU,kDAAf,UACE,sBAAMA,UAAS,SAAf,wBACA,sBAAMA,UAAU,gBAAhB,SAEI5B,EAAMoK,gBAAgBC,SAASK,uBAC5BC,8BAIT,sBAAK/I,UAAU,kDAAf,UACE,sBAAMA,UAAS,SAAf,sBACA,sBAAMA,UAAU,0BAAhB,SACG5B,EAAMoK,gBAAgBC,SAASO,QAAQ9I,KACtC,SAACf,EAAMgB,GAAP,OACE,sBAEEH,UAAU,0BAFZ,UAIE,sBAAMA,UAAU,gBAAhB,SACGb,EAAK8J,cAER,uBAAMjJ,UAAU,gBAAhB,cACIb,EAAK+J,YADT,OAGC/I,IACC/B,EAAMoK,gBAAgBC,SAASO,QAAQjJ,OAAS,GAChD,MAXGI,EAAQhB,EAAKgK,mBAkB5B,qBAAKnJ,UAAU,wCAAf,mCAGC5B,EAAMoK,gBAAgBC,SAAS3I,aAAaC,OAAS,EACpDq5B,YACEh7B,EAAMoK,gBAAgBC,SACtBrK,EAAMwE,oBACNE,uBAAuB5C,KAAI,SAACf,EAAMgB,GAAP,OAC3B,sBACEH,UAAU,wDADZ,UAIE,sBAAKA,UAAU,2DAAf,UACE,cAAC,KAAD,IACA,+BAAOb,EAAKgF,oBAEd,qBAAKnE,UAAU,uBAAf,SACE,cAAC00B,EAAA,EAAD,CACE50B,aAAcs5B,YACZh7B,EAAMoK,gBAAgBC,SACtBrK,EAAMwE,oBACNC,cAAc3D,QACd,SAACgE,GAAD,OAASA,EAAIrE,cAAgBM,EAAKN,qBAZnCsB,EAAQhB,EAAKN,gBAmBtB,cAACuK,EAAA,EAAD,CACEvI,MAAOwI,IAAeC,KACtBC,MAAO,4BAalBnL,EAAMoH,UAAUC,OAAO1F,OAAS,GAC/B3B,EAAMoH,UAAUC,OAAOvF,KAAI,SAACmK,EAAOlK,GAAR,OACzB,0BAASH,UAAU,0BAAnB,UAEE,sBAAKA,UAAU,kCAAf,UACE,sBAAKA,UAAU,wDAAf,UACE,cAAC,IAAD,IACCuH,EAAcnJ,EAAMoH,UAAU8E,uBAC3B/C,EAAcnJ,EAAMoH,UAAU8E,uBAC3BH,OACH,MAEN,4BAAIE,EAAMF,SACV,sBAAMnK,UAAU,wBAAhB,SACGuK,YAASF,EAAML,gBAKnBQ,YAAiBpM,EAAMoH,UAAW6E,EAAM3E,QACvC,0BAAS1F,UAAU,OAAnB,UACE,uBAAMA,UAAU,qCAAhB,6BACmBG,EAAQ,EAD3B,OAGA,sBAAKH,UAAU,aAAf,UACE,sBAAKA,UAAU,gDAAf,UACE,sBAAMA,UAAS,SAAf,qBACA,sBACEA,UAAS,oBACPqK,EAAMnE,wBACNa,IAAoB0D,SAChB,kBACA,gBAJG,sBADX,SAQGb,YACCS,EAAMnE,sBAAsBwE,0BAIlC,sBAAK1K,UAAU,gDAAf,UACE,sBAAMA,UAAS,SAAf,2BACA,sBAAMA,UAAU,gBAAhB,SACGqK,EAAMR,UAAUC,UAGrB,sBAAK9J,UAAU,+CAAf,UACE,sBAAMA,UAAS,SAAf,qBACA,sBAAMA,UAAU,cAAhB,SACGqK,EAAMvE,gCA/C+B3F,EAAQkK,EAAMpI,UA0DtE,qCACI7D,EAAM+6B,YACN,sBAAKn5B,UAAU,mDAAf,UACE,sBACEA,UAAS,UACP5B,EAAMoH,UAAUmF,oBAAsBC,IAAYC,QAC9C,kBACAzM,EAAMoH,UAAUmF,oBAAsBC,IAAYE,QAClD,eACA,iBALG,yBADX,SASGlB,YACCxL,EAAMoH,UAAUmF,kBAAkBD,uBAIrCguB,EAAiBt6B,EAAMoH,YACtB,wBACExF,UAAU,eACVO,QAAS,kBAAMnC,EAAM86B,eAAc,IACnC5tB,SAAUlN,EAAMuG,eAHlB,wBAWLvG,EAAM+6B,YACL,sBAAKn5B,UAAU,kEAAf,UACE,sBAAKA,UAAU,cAAf,UACE,0BACE+K,YAAW,4BACXC,KAAM,GACNpL,KAAM,EACNI,UAAS,wBACP5B,EAAM2G,WAAyC,YAA5B3G,EAAM2G,UAAUM,QAC/B,MACA,OAHG,oDAKT4F,MAAO,CAAEC,OAAQ,QACjB3B,MAAOnL,EAAM26B,cACb5tB,SAAU,SAACC,GACThN,EAAM66B,iBAAiB7tB,EAAEC,OAAO9B,OAChCnL,EAAM4G,aAAa,OAErBsG,SAAUlN,EAAMuG,iBAEjBvG,EAAM2G,WAAyC,YAA5B3G,EAAM2G,UAAUM,SAClC,mBAAGrF,UAAU,eAAb,SAA6B5B,EAAM2G,UAAUO,SAGjD,sBAAKtF,UAAU,kDAAf,UACE,yBACEA,UAAU,iIACVO,QAAS,WACPnC,EAAM66B,iBAAiB,IACvB76B,EAAM86B,eAAc,GACpB96B,EAAM4G,aAAa,OAErBsG,SAAUlN,EAAMuG,eAPlB,UASE,cAAC,IAAD,CAAmB3E,UAAU,YAC7B,2CAEF,wBACEA,UAAU,iIACVsL,SAAUlN,EAAMuG,eAChBpE,QAAS,kBAAM6uB,KAHjB,SAKGhxB,EAAMuG,eACL,qBAAK3E,UAAU,GAAf,wBAEA,sBAAKA,UAAU,2CAAf,UACE,cAAC,IAAD,CAAkBA,UAAU,YAC5B,+D,0BCpYd04B,EAAmB,SAAClzB,GACxB,GAA8B,IAA1BA,EAAUG,YAAmB,CAC/B,IAAMgzB,EAAanzB,EAAUC,OAAOpG,MAAK,SAACF,GAAD,OAAyB,IAAfA,EAAKuG,SACxD,GAAIizB,GACEA,EAAWzyB,wBAA0Ba,IAAoB0D,SAC3D,OAAO,EAIb,OAAO,GA0SMnG,eARS,SAAC,GAKvB,MAAO,CAAEuI,cADN,EAHHA,iBAOsC,CACtCC,uBACAgsB,kBACAp0B,qBAHaJ,EAxQmC,SAAClG,GACjD,MAA8BC,oBAAS,GAAvC,mBAAO0O,EAAP,KAAgBC,EAAhB,KAEAM,qBAAU,YAEgC,OAAtClP,EAAMyO,cAAcA,eAC0B,IAA7CzO,EAAMyO,cAAcA,cAAc9M,QAAgBgN,IAEnD3O,EAAM0O,kBAAkBE,KAEzB,CAACD,EAAS3O,IAEb,IAAMgxB,EAAY,uCAAG,4BAAAhqB,EAAA,0DACfpG,YAAgBZ,EAAM26B,eADP,yCAEV36B,EAAM4G,aAAa,CACxBK,QAAS,UACTC,IAAK,gCAJU,UAOdlH,EAAMoH,UAPQ,yCAQVpH,EAAMsG,eAAe,CAC1BpD,MAAO,oBACPT,MAAOqG,IAAgB8xB,WAVR,cAcnB56B,EAAMwG,mBAAkB,GAdL,SAgBjB2hB,cAhBiB,SAiBC/f,IAAMC,IAAN,UACb3E,IAAI4E,SADS,yBACgBtI,EAAMoH,UAAUzB,KAChD,CACEoG,OAAQ/L,EAAM26B,gBApBD,OAiBXpyB,EAjBW,OAuBjBC,QAAQC,IAAI,CAAEF,IAAKA,EAAI9G,OACJ,MAAf8G,EAAI+C,QAAiC,MAAf/C,EAAI+C,SAC5BtL,EAAM06B,cAAcnyB,EAAI9G,MACxBzB,EAAMsG,eAAe,CACnBpD,MAAO,wBACPT,MAAOqG,IAAgBC,UAEzB/I,EAAM66B,iBAAiB,IACvB76B,EAAM86B,eAAc,IA/BL,kDAkCjBtyB,QAAQQ,MAAM,CAAEA,MAAK,OACrBhJ,EAAMsG,eAAe,CACnBpD,MAAO+F,YAAY,EAAD,IAClBxG,MAAOqG,IAAgBI,SArCR,QAwCnBlJ,EAAMwG,mBAAkB,GAxCL,0DAAH,qDA2CZ2C,EAAgB,SACpBC,GAEA,GAAIpJ,EAAMqJ,aACR,OAAOrJ,EAAMqJ,aAAapI,MAAK,SAACF,GAAD,OAAUA,EAAK8C,KAAOuF,MAKzD,OACE,0BAASxH,UAAU,GAAnB,UACE,sBAAKA,UAAU,iDAAf,UAEE,0BAASA,UAAU,gBAAnB,UACE,sBAAKA,UAAU,oCAAf,UACE,uBAAMA,UAAU,mCAAhB,qBACW5B,EAAM+P,SAASlF,YAAa,OAEvC,wBACEsD,KAAK,SACLvM,UAAU,uGACVO,QAAS,kBAAMnC,EAAMitC,iBAAiBjtC,EAAMktC,eAH9C,SAKGltC,EAAMktC,aAAe,OAAS,YAKlCltC,EAAMktC,cACL,qBAAKtrC,UAAU,mCAAf,SACE,cAACs7B,EAAA,EAAD,CACEvtB,aAAa,EACbC,QAASC,YACP7P,EAAM8P,cACN9P,EAAM+P,SAASlF,oBAYxB7K,EAAMoH,UAAUC,OAAO1F,OAAS,GAC/B3B,EAAMoH,UAAUC,OAAOvF,KAAI,SAACmK,EAAOlK,GAAR,OACzB,0BAASH,UAAU,0BAAnB,UAEE,sBAAKA,UAAU,kCAAf,UACE,sBAAKA,UAAU,wDAAf,UACE,cAAC,IAAD,IACCuH,EAAcnJ,EAAMoH,UAAU8E,uBAC3B/C,EAAcnJ,EAAMoH,UAAU8E,uBAC3BH,OACH,MAEN,4BAAIE,EAAMF,SACV,sBAAMnK,UAAU,wBAAhB,SACGuK,YAASF,EAAML,gBAKnBQ,YAAiBpM,EAAMoH,UAAW6E,EAAM3E,QACvC,0BAAS1F,UAAU,OAAnB,UACE,uBAAMA,UAAU,qCAAhB,6BACmBG,EAAQ,EAD3B,OAGA,sBAAKH,UAAU,aAAf,UACE,sBAAKA,UAAU,gDAAf,UACE,sBAAMA,UAAS,SAAf,qBACA,sBACEA,UAAS,oBACPqK,EAAMnE,wBACNa,IAAoB0D,SAChB,kBACA,gBAJG,sBADX,SAQGb,YACCS,EAAMnE,sBAAsBwE,0BAIlC,sBAAK1K,UAAU,gDAAf,UACE,sBAAMA,UAAS,SAAf,2BACA,sBAAMA,UAAU,gBAAhB,SACG+M,EACC,qBAAK/M,UAAU,sGAEf5B,EAAMoH,UAAU8C,YAAYC,UAAUnC,MACtC,IACAhI,EAAMoH,UAAU8C,YAAYC,UAAUlC,WAI5C,sBAAKrG,UAAU,+CAAf,UACE,sBAAMA,UAAS,SAAf,qBACA,sBAAMA,UAAU,cAAhB,SACGqK,EAAMvE,gCArD+B3F,EAAQkK,EAAMpI,UAgEtE,qCACI7D,EAAM+6B,YACN,sBAAKn5B,UAAU,mDAAf,UACE,sBACEA,UAAS,UACP5B,EAAMoH,UAAUmF,oBAAsBC,IAAYC,QAC9C,kBACAzM,EAAMoH,UAAUmF,oBAAsBC,IAAYE,QAClD,eACA,iBALG,yBADX,SASGlB,YACCxL,EAAMoH,UAAUmF,kBAAkBD,uBAIrCguB,EAAiBt6B,EAAMoH,YACtB,wBACExF,UAAU,eACVO,QAAS,kBAAMnC,EAAM86B,eAAc,IACnC5tB,SAAUlN,EAAMuG,eAHlB,wBAWLvG,EAAM+6B,YACL,sBAAKn5B,UAAU,kEAAf,UACE,sBAAKA,UAAU,cAAf,UACE,0BACE+K,YAAW,4BACXC,KAAM,GACNpL,KAAM,EACNI,UAAS,wBACP5B,EAAM2G,WAAyC,YAA5B3G,EAAM2G,UAAUM,QAC/B,MACA,OAHG,oDAKT4F,MAAO,CAAEC,OAAQ,QACjB3B,MAAOnL,EAAM26B,cACb5tB,SAAU,SAACC,GACThN,EAAM66B,iBAAiB7tB,EAAEC,OAAO9B,OAChCnL,EAAM4G,aAAa,OAErBsG,SAAUlN,EAAMuG,iBAEjBvG,EAAM2G,WAAyC,YAA5B3G,EAAM2G,UAAUM,SAClC,mBAAGrF,UAAU,eAAb,SAA6B5B,EAAM2G,UAAUO,SAGjD,sBAAKtF,UAAU,kDAAf,UACE,yBACEA,UAAU,iIACVO,QAAS,WACPnC,EAAM66B,iBAAiB,IACvB76B,EAAM86B,eAAc,GACpB96B,EAAM4G,aAAa,OAErBsG,SAAUlN,EAAMuG,eAPlB,UASE,cAAC,IAAD,CAAmB3E,UAAU,YAC7B,2CAEF,wBACEA,UAAU,iIACVsL,SAAUlN,EAAMuG,eAChBpE,QAAS,kBAAM6uB,KAHjB,SAKGhxB,EAAMuG,eACL,qBAAK3E,UAAU,GAAf,wBAEA,sBAAKA,UAAU,2CAAf,UACE,cAAC,IAAD,CAAkBA,UAAU,YAC5B,+D,SCzSd04B,EAAmB,SAAClzB,GACxB,GAA8B,IAA1BA,EAAUG,YAAmB,CAC/B,IAAMgzB,EAAanzB,EAAUC,OAAOpG,MAAK,SAACF,GAAD,OAAyB,IAAfA,EAAKuG,SACxD,GAAIizB,GACEA,EAAWzyB,wBAA0Ba,IAAoB0D,SAC3D,OAAO,EAIb,OAAO,GAuQMnG,cAAQ,KAAM,CAC3Bw0B,kBACAp0B,qBAFaJ,EA7N+C,SAAClG,GAC7D,IAAMgxB,EAAY,uCAAG,4BAAAhqB,EAAA,0DACfpG,YAAgBZ,EAAM26B,eADP,yCAEV36B,EAAM4G,aAAa,CACxBK,QAAS,UACTC,IAAK,gCAJU,UAOdlH,EAAMoH,UAPQ,yCAQVpH,EAAMsG,eAAe,CAC1BpD,MAAO,wBACPT,MAAOqG,IAAgB8xB,WAVR,cAcnB56B,EAAMwG,mBAAkB,GAdL,SAgBjB2hB,cAhBiB,SAiBC/f,IAAMC,IAAN,UACb3E,IAAI4E,SADS,yBACgBtI,EAAMoH,UAAUzB,KAChD,CACEoG,OAAQ/L,EAAM26B,gBApBD,OAiBXpyB,EAjBW,OAuBjBC,QAAQC,IAAI,CAAEF,IAAKA,EAAI9G,OACJ,MAAf8G,EAAI+C,QAAiC,MAAf/C,EAAI+C,SAC5BtL,EAAM06B,cAAcnyB,EAAI9G,MACxBzB,EAAMsG,eAAe,CACnBpD,MAAO,wBACPT,MAAOqG,IAAgBC,UAEzB/I,EAAM66B,iBAAiB,IACvB76B,EAAM86B,eAAc,IA/BL,kDAkCjBtyB,QAAQQ,MAAM,CAAEA,MAAK,OACrBhJ,EAAMsG,eAAe,CACnBpD,MAAO+F,YAAY,EAAD,IAClBxG,MAAOqG,IAAgBI,SArCR,QAwCnBlJ,EAAMwG,mBAAkB,GAxCL,0DAAH,qDA2ClB,OACE,0BAAS5E,UAAU,GAAnB,UACE,sBAAKA,UAAU,iDAAf,UAEE,0BAASA,UAAU,gBAAnB,UACE,qBAAKA,UAAU,oCAAf,SACE,sBAAKA,UAAU,gDAAf,UACE,sBAAMA,UAAS,SAAf,qBACA,sBAAMA,UAAU,kCAAhB,SACG5B,EAAMwtB,YAAYI,OAAOI,OAAOC,mBAYvC,qBAAKrsB,UAAU,oBAAf,SACE,sBAAKA,UAAU,gDAAf,UACE,sBAAMA,UAAS,SAAf,uBACA,sBAAMA,UAAU,kCAAhB,SACG5B,EAAMwtB,YAAYI,OAAOI,OAAO9O,YAAYiuB,wBAUpDntC,EAAMoH,UAAUC,OAAO1F,OAAS,GAC/B3B,EAAMoH,UAAUC,OAAOvF,KAAI,SAACmK,EAAOlK,GAAR,OACzB,0BAASH,UAAU,0BAAnB,UAEE,sBAAKA,UAAU,kCAAf,UACE,4BAAIqK,EAAMF,SACV,sBAAMnK,UAAU,wBAAhB,SACGuK,YAASF,EAAML,iBA5HhCxE,EAiI8BpH,EAAMoH,UAhIpCE,EAgI+C2E,EAAM3E,QA9HlCF,EAAUC,OAAOpG,MAClC,SAACF,GAAD,OACEA,EAAKuG,QAAUA,GAASvG,EAAKy5B,eAAiBhuB,IAAYiuB,cA6HhD,0BAAS74B,UAAU,OAAnB,UACE,uBAAMA,UAAU,qCAAhB,6BACmBG,EAAQ,EAD3B,OAGA,sBAAKH,UAAU,aAAf,UACE,sBAAKA,UAAU,gDAAf,UACE,sBAAMA,UAAS,SAAf,qBACA,sBACEA,UAAS,oBACPqK,EAAMnE,wBACNa,IAAoB0D,SAChB,kBACA,gBAJG,sBADX,SAQGb,YACCS,EAAMnE,sBAAsBwE,0BAIlC,sBAAK1K,UAAU,gDAAf,UACE,sBAAMA,UAAS,SAAf,2BACA,sBAAMA,UAAU,gBAAhB,SACGqK,EAAMR,UAAUC,UAGrB,sBAAK9J,UAAU,+CAAf,UACE,sBAAMA,UAAS,SAAf,qBACA,sBAAMA,UAAU,cAAhB,SACGqK,EAAMvE,iCAxC+B3F,EAAQkK,EAAMpI,IAxH5C,IAC9BuD,EACAE,QAyKI,qCACItH,EAAM+6B,YACN,sBAAKn5B,UAAU,mDAAf,UACE,sBACEA,UAAS,UACP5B,EAAMoH,UAAUmF,oBAAsBC,IAAYC,QAC9C,kBACAzM,EAAMoH,UAAUmF,oBAAsBC,IAAYE,QAClD,eACA,iBALG,yBADX,SASGlB,YACCxL,EAAMoH,UAAUmF,kBAAkBD,uBAIrCguB,EAAiBt6B,EAAMoH,YACtB,wBACExF,UAAU,eACVO,QAAS,kBAAMnC,EAAM86B,eAAc,IACnC5tB,SAAUlN,EAAMuG,eAHlB,wBAWLvG,EAAM+6B,YACL,sBAAKn5B,UAAU,kEAAf,UACE,sBAAKA,UAAU,cAAf,UACE,0BACE+K,YAAW,4BACXC,KAAM,GACNpL,KAAM,EACNI,UAAS,wBACP5B,EAAM2G,WAAyC,YAA5B3G,EAAM2G,UAAUM,QAC/B,MACA,OAHG,oDAKT4F,MAAO,CAAEC,OAAQ,QACjB3B,MAAOnL,EAAM26B,cACb5tB,SAAU,SAACC,GACThN,EAAM66B,iBAAiB7tB,EAAEC,OAAO9B,OAChCnL,EAAM4G,aAAa,OAErBsG,SAAUlN,EAAMuG,iBAEjBvG,EAAM2G,WAAyC,YAA5B3G,EAAM2G,UAAUM,SAClC,mBAAGrF,UAAU,eAAb,SAA6B5B,EAAM2G,UAAUO,SAGjD,sBAAKtF,UAAU,kDAAf,UACE,yBACEA,UAAU,iIACVO,QAAS,WACPnC,EAAM66B,iBAAiB,IACvB76B,EAAM86B,eAAc,GACpB96B,EAAM4G,aAAa,OAErBsG,SAAUlN,EAAMuG,eAPlB,UASE,cAAC,IAAD,CAAmB3E,UAAU,YAC7B,2CAEF,wBACEA,UAAU,iIACVsL,SAAUlN,EAAMuG,eAChBpE,QAAS,kBAAM6uB,KAHjB,SAKGhxB,EAAMuG,eACL,qBAAK3E,UAAU,GAAf,wBAEA,sBAAKA,UAAU,2CAAf,UACE,cAAC,IAAD,CAAkBA,UAAU,YAC5B,+D,SCELsE,eAPS,SAAC,GAIvB,MAAO,CAAEC,KADsD,EAF/DA,KAGe0N,SADgD,EAD/DA,YAKsC,CACtCgL,qBACAC,yBACAyS,8BACAC,2BACAlrB,qBALaJ,EAtPmC,SAAClG,GACjD,MAA8BC,oBAAkB,GAAhD,mBAAO0O,EAAP,KAAgBC,EAAhB,KACA,EACE3O,oBAAkB,GADpB,mBAAOmtC,EAAP,KAAoCC,EAApC,KAEA,EACEptC,oBAAkB,GADpB,mBAAOqtC,EAAP,KAAiCC,EAAjC,KAEA,EAAkDttC,oBAAkB,GAApE,mBAAOysC,EAAP,KAA0BC,EAA1B,KAEAz9B,qBAAU,WACqC,OAAzClP,EAAM6T,SAAS6c,sBACjB1wB,EAAMuxB,0BACJvxB,EAAMmG,KAAKyB,KAAKC,SAChB,SAACyD,EAAiBpE,IACD,IAAXoE,IACEpE,EAAIvF,OAAS,GACf3B,EAAMsG,eAAe,CACnBpD,MAAOgE,EACPzE,MAAOqG,IAAgBI,SAG3BmkC,GAA+B,OAI5BD,GACTC,GAA+B,GAGS,OAAtCrtC,EAAM6T,SAASzC,oBACjB5I,QAAQC,IAAI,sDACZzI,EAAMwxB,wBAAuB,SAAClmB,EAAiBpE,IAC9B,IAAXoE,IACEpE,EAAIvF,OAAS,GACf3B,EAAMsG,eAAe,CACnBpD,MAAOgE,EACPzE,MAAOqG,IAAgBI,SAG3BqkC,GAA4B,QAGvBD,GACTC,GAA4B,GAGI,OAA9BvtC,EAAM6T,SAAS4C,WACjBzW,EAAM6e,kBAAiB,SAACvT,EAAiBpE,IACxB,IAAXoE,IACEpE,EAAIvF,OAAS,GACf3B,EAAMsG,eAAe,CACnBpD,MAAOgE,EACPzE,MAAOqG,IAAgBI,SAG3ByjC,GAAqB,OAGhBD,GACTC,GAAqB,GAIpBS,GACAE,GACAZ,IACD/9B,GAEAC,GAAW,KAEZ,CACDD,EACA+9B,EACAU,EACAE,EACAttC,IAGF,IAAM4sC,EAAc,SAClB/4B,EACA6U,GAEA,IAAIrX,EAAiB,EAkBrB,OAhBIwC,EAAS6Z,UAAyB,QAAbhF,IACvBrX,EAASwC,EAAS6Z,SAAS5sB,QACzB,SAACC,GAAD,OACEA,EAAKwL,oBAAsBC,IAAYE,SACvC3L,EAAKwL,oBAAsBC,IAAYghC,aACzC7rC,QAEAkS,EAAS6Z,UAAyB,QAAbhF,IACvBrX,EAASwC,EAAS6Z,SAAS5sB,QACzB,SAACC,GAAD,OACEA,EAAKuQ,WAAaoX,GAClB3nB,EAAKwL,oBAAsBC,IAAYE,SACvC3L,EAAKwL,oBAAsBC,IAAYghC,aACzC7rC,QAGG0P,GAGT,OACE,eAAC,IAAMw7B,SAAP,WACE,sBAAMjrC,UAAU,eAAhB,mCAEE+M,GAAW3O,EAAMgW,gBACjB,0BAASpU,UAAU,YAAnB,UACE,qBAAKA,UAAU,wGACf,qBAAKA,UAAU,wGACf,qBAAKA,UAAU,wGACf,qBAAKA,UAAU,4GAMjB+M,IAAY3O,EAAMgW,eAClB,oCAEE,qBACEpU,UAAU,OACVO,QAAS,WAEPnC,EAAM8e,qBAAqB,QAJ/B,SAOE,cAAC,IAAD,CACE5b,MAAM,MACNqV,OAA6C,QAArCvY,EAAM6T,SAASsC,kBACvB+B,MAAO00B,EAAY5sC,EAAM6T,SAAU,WAIvC,qBACEjS,UAAU,OACVO,QAAS,WAEPnC,EAAM8e,qBAAqBvN,IAAchI,cAJ7C,SAOE,cAAC,IAAD,CACErG,MAAO,cACPqV,OACuC,QAArCvY,EAAM6T,SAASsC,mBACfnW,EAAM6T,SAASsC,oBAAsB5E,IAAchI,YAErD2O,MAAO00B,EAAY5sC,EAAM6T,SAAUtC,IAAchI,iBAIrD,qBACE3H,UAAU,OACVO,QAAS,WACPnC,EAAM8e,qBAAqBvN,IAAcC,sBAH7C,SAME,cAAC,IAAD,CACEtO,MAAO,WACPqV,OACuC,QAArCvY,EAAM6T,SAASsC,mBACfnW,EAAM6T,SAASsC,oBACb5E,IAAcC,oBAElB0G,MAAO00B,EACL5sC,EAAM6T,SACNtC,IAAcC,yBAKpB,qBACE5P,UAAU,OACVO,QAAS,WACPnC,EAAM8e,qBAAqBvN,IAAc8C,cAH7C,SAME,cAAC,IAAD,CACEnR,MAAO,OACPqV,OACuC,QAArCvY,EAAM6T,SAASsC,mBACfnW,EAAM6T,SAASsC,oBAAsB5E,IAAc8C,YAErD6D,MAAO00B,EAAY5sC,EAAM6T,SAAUtC,IAAc8C,kBAIpD,W,mBJ/KC24B,K,0BAAAA,E,oBAAAA,E,YAAAA,E,sCAAAA,E,uBAAAA,M,KAQL,IAAMhd,EAAkB,SAC7B5e,EACAq8B,GAEA,IAAIp8B,EAAwCD,EAAmBnQ,MAC7D,SAACF,GAAD,OAAUA,EAAKwM,SAAWkgC,KAE5B,OAAOp8B,GAAkB,MAGdwF,EAAiB,SAC5BzP,GAEA,OAAIA,EAAUkK,WAAaC,IAAchI,YAChCyjC,EAAe56B,YAEpBhL,EAAUkK,WAAaC,IAAcC,oBAChCw7B,EAAex1B,SAEpBpQ,EAAUkK,WAAaC,IAAc8C,YAChC24B,EAAev9B,KAEpBrI,EAAUkK,WAAaC,IAAc6E,kBAChC42B,EAAeU,kBAEpBtmC,EAAUkK,WAAaC,IAAc8E,mBAChC22B,EAAeW,eADxB,GAKW72B,EAAmB,SAC9B1P,GAKA,IAAI2P,EAAiBzL,EACrB,OAAQlE,EAAUmF,mBAChB,KAAKC,IAAYghC,UACfz2B,EAAU,qCACVzL,EAASE,YAAsBgB,IAAYghC,UAAUlhC,qBACrD,MACF,KAAKE,IAAYiuB,UACf1jB,EAAU,sCACVzL,EAASE,YAAsBgB,IAAYiuB,UAAUnuB,qBACrD,MAEF,KAAKE,IAAYE,QACfqK,EAAU,oCACVzL,EAASE,YAAsBgB,IAAYE,QAAQJ,qBACnD,MAEF,QACEyK,EAAU,uCACVzL,EAASE,YAAsBgB,IAAYC,QAAQH,qBAIvD,MAAO,CAAEyK,UAASzL,WAGP2L,GAAe,SAC1Bw1B,EACArwB,GAKA,IAAI/K,EAA8Co7B,EAAUxrC,MAC1D,SAACF,GAAD,OAAUA,EAAK4E,MAAQyW,KAEzB,OAAO/K,GAAkB,MAGda,GAAqB,SAChCwe,EACA7mB,GAEA,IAAIwH,EACFqf,EAAsBzvB,MACpB,SAACF,GAAD,OAAUA,EAAK8I,iBAAmBA,KAEtC,OAAOwH,GAAkB,MAGdu8B,GAAuB,SAClCppC,EACA4M,EACAhK,GAEA,IAAIiK,EAAiB,GAGrB,GAAIjK,EAAUkK,WAAaC,IAAcC,oBAAqB,CAC5D,IAAIjD,EAAUyhB,EAAgB5e,EAAoBhK,EAAUoC,gBAC5D6H,EAAS9C,EACL2f,YAAiB1pB,EAAoB+J,GAASmD,KAC9C,qBAGN,OAAOL,GAGI+D,GAAoB,SAC/BvB,EACAgB,EACAg5B,EACAzmC,GAEA,IAAIiK,EAAiBjK,EAAUoC,eAY/B,GATEpC,EAAUkK,WAAaC,IAAcC,qBACrCqC,EAASzC,qBAETC,EAASu8B,GACP/4B,EACAhB,EAASzC,mBACThK,IAIFA,EAAUkK,WAAaC,IAAchI,aACrCsK,EAAS6c,sBACT,CACA,IAAItmB,EAAkB8H,GACpB2B,EAAS6c,sBACTtpB,EAAUoC,gBAGV6H,EADEjH,EACOA,EAAgBC,SAASC,eAEzB,wBAIb,GACElD,EAAUkK,WAAaC,IAAc8C,aACrCw5B,GACAh6B,EAASkd,SACT,CACA,IAAIzb,EAAaC,YACf1B,EAASkd,SACT3pB,EAAUoC,gBAGV6H,EADEiE,GAAcE,YAAcq4B,EAAWv4B,EAAWjF,QAC3CmF,YAAcq4B,EAAWv4B,EAAWjF,QAASxF,YAE7C,iBAUb,OANIzD,EAAUkK,WAAaC,IAAc8E,qBACvChF,EAASwC,EAAS2Z,YACd,aAAe3Z,EAAS2Z,YAAYI,OAAOI,OAAOC,YAClD,uBAGC5c,GA4CHgB,G,kDACJ,WAAYrS,GAAkB,IAAD,8BAC3B,cAAMA,IAqBR4O,WAAa,SAACzD,GACZ,EAAKmH,SAAS,CAAE3D,QAASxD,KAvBE,EA0B7BoL,kBAAoB,SAACpL,GACnB,EAAKmH,SAAS,CAAEgE,eAAgBnL,KA3BL,EA8B7B0H,aAAe,SAAC1H,GACd,EAAKmH,SAAS,CAAEQ,UAAW3H,KA/BA,EAkC7BsH,iBAAmB,SAACtH,GAClB,EAAKmH,SAAS,CAAEI,cAAevH,KAnCJ,EAsC7B2iC,aAAe,SAAC3iC,GACd,EAAKmH,SAAS,CAAEy7B,UAAW5iC,KAvCA,EA0C7BiD,aAAe,SAACjD,GACd,EAAKmH,SAAS,CAAEjE,UAAWlD,KA3CA,EA8C7B3E,kBAAoB,SAAC2E,GACnB,EAAKmH,SAAS,CAAE/L,eAAgB4E,KA/CL,EAkD7B2vB,cAAgB,SAAC3vB,GACf,EAAKmH,SAAS,CAAEyoB,WAAY5vB,KAnDD,EAsD7BvE,aAAe,SACbuE,GAKA,EAAKmH,SAAS,CAAE3L,UAAWwE,KA5DA,EA+D7B0vB,iBAAmB,SAAC1vB,GAClB,EAAKmH,SAAS,CAAEqoB,cAAexvB,KAhEJ,EAmE7B4H,WAAa,SAAC5H,GACZ,EAAKmH,SAAS,CAAEU,QAAS7H,KApEE,EAuE7BwH,cAAgB,SAACxH,GACf,EAAKmH,SAAS,CAAEM,WAAYzH,KAxED,EA2E7BwI,eAAiB,SAACxI,GAChB,EAAKmH,SAAS,CAAEsB,YAAazI,KA5EF,EA+E7B6iC,WAAa,SAACp7B,GAEyB,OAAjC,EAAK5S,MAAM6T,SAAS6Z,UAAoC,OAAf9a,EAC3C,EAAK5S,MAAMwyB,YACT,EAAKxyB,MAAMmG,KAAKyB,KAAKC,QACrB+K,EAAWoB,iBACX,SAAC1I,EAAiBpE,IACfoE,GAAU,EAAKsD,WAAWtD,IACZ,IAAXA,GAAoBpE,EAAIvF,QAC1B,EAAK3B,MAAMsG,eAAe,CACxBpD,MAAOgE,EACPzE,MAAOqG,IAAgBI,YAKtB0J,GAAc,EAAKW,MAAM5E,SAClC,EAAKC,YAAW,IAhGS,EAoG7Bq/B,WAAa,SAAC36B,GAEZ,GAA8B,OAA1B,EAAKC,MAAMX,YAAuBU,EAAS3R,OAAS,EAAG,CACzD,IAAI6R,EAAcF,EAASrS,MAAK,SAACF,GAAD,OAA6B,IAAnBA,EAAK0S,aAC/C,EAAKd,cAAca,GAA4BF,EAAS,IACxD,EAAK06B,WAAWx6B,GAA4BF,EAAS,IACrD,EAAKkc,gBACHhc,GAA4BF,EAAS,GACrC,EAAKtT,MAAMmG,KAAKyB,KAAKC,WA5GE,EAiH7B2nB,gBAAkB,SAChBC,EACA5nB,GAEA,EAAK7H,MAAM0vB,aACTD,EAAkBzb,gBAClBnM,GACA,SAACyD,EAAiBpE,EAAazF,GAC7B,EAAKmN,WAAWtD,IACXA,GAAUpE,EAAIvF,QACjB,EAAK3B,MAAMsG,eAAe,CACxBpD,MAAOgE,EACPzE,MAAOqG,IAAgBI,SAGvBzH,IACF+G,QAAQC,IAAI,wCACZD,QAAQC,IAAI,CAAE+mB,gBAAiB/tB,IAC/B+G,QAAQC,IAAI,4CAIuB,OAArC,EAAKzI,MAAM6T,SAASxK,cACtB,EAAKrJ,MAAMkV,iBAAgB,SAAC5J,EAAiBpE,GAC3C,EAAK0H,WAAWtD,GACXA,GACCpE,EAAIvF,OAAS,GACf,EAAK3B,MAAMsG,eAAe,CACxBpD,MAAOgE,EACPzE,MAAOqG,IAAgBI,aA9IN,EAsJ7BwL,kBAAoB,WAEO,OAAvB,EAAK1U,MAAM4K,SACoB,IAA9B,EAAK5K,MAAM4K,QAAQjJ,QAAgB,EAAK4R,MAAM5E,SAE/C,EAAK3O,MAAMmV,YAAY,EAAKvG,YAC5B,EAAKA,YAAW,IAEhB,EAAKA,YAAW,GAIsB,OAApC,EAAK5O,MAAM2U,qBACb,EAAK3U,MAAM4U,oBACT,SAACtJ,EAAiBpE,EAAazF,GACxB6J,IACH,EAAKiL,mBAAkB,GACnBrP,EAAIvF,QACN,EAAK3B,MAAMsG,eAAe,CACxBpD,MAAOgE,EACPzE,MAAOqG,IAAgBI,SAGvBzH,GAAQA,EAAKE,OAAS,GAEM,OAA1B,EAAK4R,MAAMX,YACb,EAAKq7B,WAAWxsC,QAO1B,EAAKwsC,WAAW,EAAKjuC,MAAM2U,sBAC3B,EAAK4B,mBAAkB,IAGpB,EAAKvW,MAAM6U,gBAAgB5P,iBAGrB,EAAKsO,MAAM5E,SACpB,EAAKC,YAAW,IAHhB,EAAK5O,MAAM8U,sBACX,EAAKlG,YAAW,KAIb,EAAK5O,MAAM6U,gBAAgBxP,qBAAuB,EAAKkO,MAAM5E,SAChE,EAAK3O,MAAM+U,yBACX,EAAKnG,YAAW,IACP,EAAK2E,MAAM5E,SACpB,EAAKC,YAAW,IAGb,EAAK5O,MAAM6U,gBAAgBnP,gBAAkB,EAAK6N,MAAM5E,SAC3D,EAAK3O,MAAMgV,oBACX,EAAKpG,YAAW,IACP,EAAK2E,MAAM5E,SACpB,EAAKC,YAAW,GAGsB,OAApC,EAAK5O,MAAM6T,SAAS2Z,aACtB,EAAKxtB,MAAMyxB,eACT,EAAKzxB,MAAMmG,KAAKyB,KAAKC,SACrB,SAACyD,EAAiBpE,GAChB,EAAK0H,WAAWtD,GACXA,GACCpE,EAAIvF,QACN,EAAK3B,MAAMsG,eAAe,CACxBpD,MAAOgE,EACPzE,MAAOqG,IAAgBI,aAxNR,EAiO7BglC,gBAAkB,SAACC,GACjB,OAAK/hC,YAAiB+hC,EAAW,IAlON,EAwO7B14B,eAAiB,SAACC,GAChB,EAAKjD,kBAAiB,GACtB,EAAKzS,MAAMwyB,YACT,EAAKxyB,MAAMmG,KAAKyB,KAAKC,QACrB6N,GACA,SAACpK,EAAiBpE,GAChB,EAAKV,kBAAkB8E,IACtBA,GAAU,EAAKmH,kBAAiB,IAClB,IAAXnH,GAAoBpE,EAAIvF,QAC1B,EAAK3B,MAAMsG,eAAe,CACxBpD,MAAOgE,EACPzE,MAAOqG,IAAgBI,aAhP/B,EAAKqK,MAAQ,CACX5E,SAAS,EACT2H,gBAAgB,EAChB1D,WAAY,KACZF,eAAe,EACfI,WAAW,EACXE,QAAS,KACT+6B,WAAW,EACXn6B,YAAa,GAGbvF,WAAW,EACX9H,gBAAgB,EAChBw0B,YAAY,EACZJ,cAAe,GACfh0B,UAAW,MAlBc,E,0CA0P7B,WAAU,IAAD,OACP,OAAwC,OAApCkP,KAAK7V,MAAM2U,qBAEX,qBAAK/S,UAAU,kEAAf,6BAM2C,IAA3CiU,KAAK7V,MAAM2U,qBAAqBhT,OAEhC,sBAAKC,UAAU,oHAAf,UACE,cAAC,IAAD,CAAeA,UAAU,yBACzB,sBAAKA,UAAU,4BAAf,UACE,sBAAMA,UAAU,sCAAhB,+BAGA,sBAAMA,UAAU,UAAhB,mGAS6B,OAAjCiU,KAAK7V,MAAM6T,SAAS6Z,SAEpB,qBAAK9rB,UAAU,kEAAf,6BAOF,iCAEIiU,KAAKtC,MAAMT,WACX,eAACgD,EAAA,EAAD,WACE,yBACElU,UAAU,oIACVO,QAAS,WACP,EAAK2rC,cAAa,IAGpB5gC,SACE2I,KAAKtC,MAAMT,WACX+C,KAAKtC,MAAM5E,SACXkH,KAAKtC,MAAMhN,eATf,UAYE,cAAC,IAAD,CAAO3E,UAAU,wCACjB,+CAIF,cAAC,EAAD,CAAcoU,cAAeH,KAAKtC,MAAMhN,qBAS1CsP,KAAKtC,MAAMT,WACX,cAACmD,EAAA,EAAD,CACEC,YAAW,UACiC,QAA1CL,KAAK7V,MAAM6T,SAASsC,kBAChB,MACAN,KAAK7V,MAAM6T,SAASsC,oBACpB5E,IAAcC,oBACd,YACAqE,KAAK7V,MAAM6T,SAASsC,oBACpB5E,IAAchI,YACd,eACAsM,KAAK7V,MAAM6T,SAASsC,oBACpB5E,IAAc8C,YACd,OACAwB,KAAK7V,MAAM6T,SAASsC,oBACpB5E,IAAc6E,kBACd,oBACAP,KAAK7V,MAAM6T,SAASsC,oBACpB5E,IAAc8E,mBACd,aACA,GAlBK,aAoBX1H,QAASkH,KAAKtC,MAAM5E,QACpB2H,eAAgBT,KAAKtC,MAAM+C,eAC3B1D,WAAYiD,KAAKtC,MAAMX,WACvBD,cAAekD,KAAKlD,cACpB4D,kBAAmBV,KAAKU,kBACxB5B,qBAAsBkB,KAAK7V,MAAM2U,qBACjCc,eAAgBI,KAAKJ,eACrB/C,cAAemD,KAAKtC,MAAMb,iBAO5BmD,KAAKtC,MAAMT,WACX,0BAASlR,UAAU,sBAAnB,UAEE,yBAASA,UAAU,mEAAnB,SACE,qBAAKA,UAAU,SAAf,SACE,uBACEmL,SAAU,SAACC,GAAD,OACR,EAAK2G,eAAe3G,EAAEC,OAAO9B,QAE/BgD,KAAK,OACLvM,UAAU,iFACV+K,YAAW,gCACXxB,MAAO0K,KAAKtC,MAAMK,YAClB1G,WACEsJ,YACEX,KAAK7V,MAAM6T,SAAS6Z,SACpB7X,KAAK7V,MAAM6T,SAASsC,mBACpBxU,OAAS,SAQnB,wBAAOC,UAAU,gBAAgBiC,GAAG,iBAApC,UACE,uBAAOjC,UAAU,sEAAjB,SACE,+BACE,oBAAIA,UAAU,YAAd,eACA,oBAAIA,UAAU,YAAd,yBAC2C,QAA1CiU,KAAK7V,MAAM6T,SAASsC,mBACnB,oBAAIvU,UAAU,YAAd,wBAEF,oBAAIA,UAAU,YAAd,yBACA,oBAAIA,UAAU,YAAd,0BACA,oBAAIA,UAAU,mBAGlB,gCACG4U,YACCX,KAAK7V,MAAM6T,SAAS6Z,SACpB7X,KAAK7V,MAAM6T,SAASsC,mBACpBxU,QAAU,EACV,oBACEC,UAAU,iEADZ,SAIE,oBAAIA,UAAU,YAAYC,QAAS,EAAnC,SACE,cAACmJ,EAAA,EAAD,CACEvI,MAAOwI,IAAeyL,MACtBvL,MAAO,uBALP,WASJ9I,YACAmU,YACEX,KAAK7V,MAAM6T,SAAS6Z,SACpB7X,KAAK7V,MAAM6T,SAASsC,mBAEtBN,KAAKtC,MAAMK,aACXjS,QAAU,EACZ,oBACEC,UAAU,iEADZ,SAIE,oBAAIA,UAAU,YAAYC,QAAS,EAAnC,SACE,cAACmJ,EAAA,EAAD,CACEvI,MAAOwI,IAAeyL,MACtBvL,MAAO,sBALP,WAUN9I,YACEmU,YACEX,KAAK7V,MAAM6T,SAAS6Z,SACpB7X,KAAK7V,MAAM6T,SAASsC,mBAEtBN,KAAKtC,MAAMK,aACX9R,KAAI,SAACmK,EAAgClK,GAAjC,OACJ,qBACEH,UAAU,iEAEVO,QAAS,WACP,EAAK0Q,cAAa,GAClB,EAAKE,WAAW9G,EAAMtG,MAL1B,UAQE,oBAAI/D,UAAU,8BAAd,SACGG,EAAQ,IAEX,oBAAIH,UAAU,8BAAd,SACGqK,EAAM/I,QAEkC,QAA1C,EAAKlD,MAAM6T,SAASsC,mBACnB,oBAAIvU,UAAU,8BAAd,SACGiV,EAAe5K,GACZT,YAAsBqL,EAAe5K,IACrC,MAGR,qBAAIrK,UAAU,qCAAd,mBACSqK,EAAM1E,eAEf,oBAAI3F,UAAU,8BAAd,SACE,sBACEA,UAAS,iFACPkV,EAAiB7K,GAAO8K,SAF5B,SAKGD,EAAiB7K,GAAOX,WAG7B,oBAAI1J,UAAU,0CAAd,SACE,wBAAQA,UAAU,qDAAlB,sBAhCGG,EAAQkK,EAAMtG,gBA8ChCkQ,KAAKtC,MAAMT,WACV+C,KAAK7V,MAAM6T,SAAS6Z,UACpB7X,KAAKtC,MAAMP,SACXiE,GAAapB,KAAK7V,MAAM6T,SAAS6Z,SAAU7X,KAAKtC,MAAMP,UACpD,0BAASpR,UAAU,2BAAnB,UAEE,0BAASA,UAAU,wCAAnB,UACE,wBACEA,UAAS,sFACPiU,KAAKtC,MAAMhN,eACP,qBACA,iBAHG,sCAKT2G,SAAU2I,KAAKtC,MAAMhN,eACrBpE,QAAS,WACP,EAAK0Q,cAAa,GAClB,EAAKzE,cAAa,GAClB,EAAK5H,mBAAkB,GACvB,EAAKI,aAAa,MAClB,EAAKk0B,eAAc,GACnB,EAAKD,iBAAiB,KAb1B,SAgBE,cAAC,IAAD,CAAaj5B,UAAU,cAExBiU,KAAKq4B,gBACJj3B,GACEpB,KAAK7V,MAAM6T,SAAS6Z,SACpB7X,KAAKtC,MAAMP,WAGb,wBACEpR,UAAS,iFACPiU,KAAKtC,MAAMhN,eACP,qBACA,iBAHG,6CAKT2G,SAAU2I,KAAKtC,MAAMhN,eANvB,SAWE,cAAC,IAAD,CAAU3E,UAAU,iBAK1B,0BAASA,UAAU,OAAnB,UAEGqV,GAAapB,KAAK7V,MAAM6T,SAAS6Z,SAAU7X,KAAKtC,MAAMP,SACpD1B,WAAaC,IAAcC,qBAC9BqE,KAAK7V,MAAM6T,SAASzC,oBACpB4e,EACEna,KAAK7V,MAAM6T,SAASzC,mBACpB6F,GACEpB,KAAK7V,MAAM6T,SAAS6Z,SACpB7X,KAAKtC,MAAMP,SACVxJ,gBAEH,cAAC,IAAD,CACE+E,QACEyhB,EACEna,KAAK7V,MAAM6T,SAASzC,mBACpB6F,GACEpB,KAAK7V,MAAM6T,SAAS6Z,SACpB7X,KAAKtC,MAAMP,SACVxJ,gBAGPhF,mBAAoBqR,KAAK7V,MAAM6U,gBAC/BzN,UACE6P,GACEpB,KAAK7V,MAAM6T,SAAS6Z,SACpB7X,KAAKtC,MAAMP,SAGf3E,UAAWwH,KAAKtC,MAAMlF,UACtBD,aAAcyH,KAAKzH,aACnB7H,eAAgBsP,KAAKtC,MAAMhN,eAC3BC,kBAAmBqP,KAAKrP,kBACxBu0B,WAAYllB,KAAKtC,MAAMwnB,WACvBD,cAAejlB,KAAKilB,cACpBH,cAAe9kB,KAAKtC,MAAMonB,cAC1BE,iBAAkBhlB,KAAKglB,iBACvBl0B,UAAWkP,KAAKtC,MAAM5M,UACtBC,aAAciP,KAAKjP,aACnByC,aAAcwM,KAAK7V,MAAM6T,SAASxK,eAGpC4N,GACEpB,KAAK7V,MAAM6T,SAAS6Z,SACpB7X,KAAKtC,MAAMP,SACV1B,WAAaC,IAAcC,qBAC5B,cAACxG,EAAA,EAAD,CACEvI,MAAOwI,IAAeC,KACtBC,MAAO,uBASZ8L,GAAapB,KAAK7V,MAAM6T,SAAS6Z,SAAU7X,KAAKtC,MAAMP,SACpD1B,WAAaC,IAAchI,aAC9BsM,KAAK7V,MAAM6T,SAAS6c,uBACpBxe,GACE2D,KAAK7V,MAAM6T,SAAS6c,sBACpBzZ,GACEpB,KAAK7V,MAAM6T,SAAS6Z,SACpB7X,KAAKtC,MAAMP,SACVxJ,gBAEH,cAAC4kC,EAAD,CACEhkC,gBACE8H,GACE2D,KAAK7V,MAAM6T,SAAS6c,sBACpBzZ,GACEpB,KAAK7V,MAAM6T,SAAS6Z,SACpB7X,KAAKtC,MAAMP,SACVxJ,gBAGPhF,mBAAoBqR,KAAK7V,MAAM6U,gBAC/BzN,UACE6P,GACEpB,KAAK7V,MAAM6T,SAAS6Z,SACpB7X,KAAKtC,MAAMP,SAGfk6B,aAAcr3B,KAAKtC,MAAMlF,UACzB4+B,gBAAiBp3B,KAAKzH,aACtB7H,eAAgBsP,KAAKtC,MAAMhN,eAC3BC,kBAAmBqP,KAAKrP,kBACxBu0B,WAAYllB,KAAKtC,MAAMwnB,WACvBD,cAAejlB,KAAKilB,cACpBH,cAAe9kB,KAAKtC,MAAMonB,cAC1BE,iBAAkBhlB,KAAKglB,iBACvBl0B,UAAWkP,KAAKtC,MAAM5M,UACtBC,aAAciP,KAAKjP,aACnByC,aAAcwM,KAAK7V,MAAM6T,SAASxK,eAGpC4N,GACEpB,KAAK7V,MAAM6T,SAAS6Z,SACpB7X,KAAKtC,MAAMP,SACV1B,WAAaC,IAAchI,aAC5B,cAACyB,EAAA,EAAD,CACEvI,MAAOwI,IAAeC,KACtBC,MAAO,0BAOZ8L,GAAapB,KAAK7V,MAAM6T,SAAS6Z,SAAU7X,KAAKtC,MAAMP,SACpD1B,WAAaC,IAAc8C,aAC9BwB,KAAK7V,MAAM6T,SAASkd,UACpBlb,KAAK7V,MAAM4K,SACX2K,YACEM,KAAK7V,MAAM6T,SAASkd,SACpB9Z,GACEpB,KAAK7V,MAAM6T,SAAS6Z,SACpB7X,KAAKtC,MAAMP,SACVxJ,iBAELgM,YACEK,KAAK7V,MAAM4K,QACX2K,YACEM,KAAK7V,MAAM6T,SAASkd,SACpB9Z,GACEpB,KAAK7V,MAAM6T,SAAS6Z,SACpB7X,KAAKtC,MAAMP,SACVxJ,gBACF6G,QAEH,cAACg+B,EAAD,CACEt+B,SACEyF,YACEK,KAAK7V,MAAM4K,QACX2K,YACEM,KAAK7V,MAAM6T,SAASkd,SACpB9Z,GACEpB,KAAK7V,MAAM6T,SAAS6Z,SACpB7X,KAAKtC,MAAMP,SACVxJ,gBACF6G,QAGPjJ,UACE6P,GACEpB,KAAK7V,MAAM6T,SAAS6Z,SACpB7X,KAAKtC,MAAMP,SAGfk6B,aAAcr3B,KAAKtC,MAAMlF,UACzB4+B,gBAAiBp3B,KAAKzH,aACtB7H,eAAgBsP,KAAKtC,MAAMhN,eAC3BC,kBAAmBqP,KAAKrP,kBACxBu0B,WAAYllB,KAAKtC,MAAMwnB,WACvBD,cAAejlB,KAAKilB,cACpBH,cAAe9kB,KAAKtC,MAAMonB,cAC1BE,iBAAkBhlB,KAAKglB,iBACvBl0B,UAAWkP,KAAKtC,MAAM5M,UACtBC,aAAciP,KAAKjP,aACnBkJ,cACEyF,YACEM,KAAK7V,MAAM6T,SAASkd,SACpB9Z,GACEpB,KAAK7V,MAAM6T,SAAS6Z,SACpB7X,KAAKtC,MAAMP,SACVxJ,gBAGPH,aAAcwM,KAAK7V,MAAM6T,SAASxK,eAGpC4N,GACEpB,KAAK7V,MAAM6T,SAAS6Z,SACpB7X,KAAKtC,MAAMP,SACV1B,WAAaC,IAAc8C,aAC5B,cAACrJ,EAAA,EAAD,CACEvI,MAAOwI,IAAeC,KACtBC,MAAO,mBAQZ8L,GAAapB,KAAK7V,MAAM6T,SAAS6Z,SAAU7X,KAAKtC,MAAMP,SACpD1B,WAAaC,IAAc8E,oBAC9BR,KAAK7V,MAAM6T,SAAS2Z,YAClB,cAAC,EAAD,CACEpmB,UACE6P,GACEpB,KAAK7V,MAAM6T,SAAS6Z,SACpB7X,KAAKtC,MAAMP,SAGfzM,eAAgBsP,KAAKtC,MAAMhN,eAC3BC,kBAAmBqP,KAAKrP,kBACxBu0B,WAAYllB,KAAKtC,MAAMwnB,WACvBD,cAAejlB,KAAKilB,cACpBH,cAAe9kB,KAAKtC,MAAMonB,cAC1BE,iBAAkBhlB,KAAKglB,iBACvBl0B,UAAWkP,KAAKtC,MAAM5M,UACtBC,aAAciP,KAAKjP,aACnB4mB,YAAa3X,KAAK7V,MAAM6T,SAAS2Z,cAGnCvW,GACEpB,KAAK7V,MAAM6T,SAAS6Z,SACpB7X,KAAKtC,MAAMP,SACV1B,WAAaC,IAAc8E,oBAC5B,cAACrL,EAAA,EAAD,CACEvI,MAAOwI,IAAeC,KACtBC,MAAO,8BAYpB0K,KAAKtC,MAAMw6B,WACV,cAACzf,EAAA,EAAD,CACEqD,UAAW9b,KAAKtC,MAAMw6B,UACtBne,aAAc/Z,KAAKi4B,sB,GAnvBX12B,aAixBPk3B,GAAiBpoC,aAtBN,SAAC,GAYnB,IAXJC,EAWG,EAXHA,KACAoR,EAUG,EAVHA,YACA1D,EASG,EATHA,SACA2D,EAQG,EARHA,SACAnH,EAOG,EAPHA,OAQA,MAAO,CACLlK,KAAMA,EACN0N,WACAc,qBAAsB4C,EAAYE,gBAClC5C,gBAAiB2C,EACjB5M,QAASyF,EAAOzF,WAImC,CACrD4nB,gBACA5d,uBACAM,oBACAC,iBACAsc,mBACA/B,iBACA5a,wBACAC,2BACAC,sBACA1O,qBAV4BJ,CAW3BmM,K,oEKz+BYpO,IAzCyB,SAACjE,GACvC,MAA8BC,oBAAkB,GAAhD,mBAAO0O,EAAP,KAAgBC,EAAhB,KACA,EAA0B3O,mBACxB,MADF,mBAAO+I,EAAP,KAAculC,EAAd,KAcA,OAXAr/B,qBAAU,WACJP,IACE/N,YAAgBZ,EAAMkE,UACxBqqC,EAAS,CAAEtnC,QAAS,WAAYC,IAAK,yBAClB,OAAV8B,GACTulC,EAAS,MAEX3/B,GAAW,MAEZ,CAAC5F,EAAO2F,EAAS3O,EAAMkE,WAGxB,qBAAKtC,UAAU,SAAf,SACGoH,EACC,qBAAKpH,UAAU,2BAAf,SAA2CoH,EAAM9B,MAEjD,wBACEzF,KAAMzB,EAAMkE,SACZiK,KAAK,kBACLvM,UAAW5B,EAAMmE,WACjBL,OAAQ,kBAAM9D,EAAMqE,gBAAe,IAJrC,SAME,wBACEZ,IAAKzD,EAAMkE,SACXtC,UAAW5B,EAAMmE,WACjBjB,MAAOlD,EAAMoE,YACbN,OAAQ,kBAAM9D,EAAMqE,gBAAe,IAJrC,SAME,2E,6VCmBCmX,EAAkB,SAC7BrN,GAEA,IAAIkD,EAAiC,MACrC,OAAQlD,GACN,KAAKoD,IAAchI,YACjB8H,EAAS27B,iBAAe56B,YACxB,MACF,KAAKb,IAAcC,oBACjBH,EAAS27B,iBAAex1B,SACxB,MACF,KAAKjG,IAAc8C,YACjBhD,EAAS27B,iBAAev9B,KACxB,MACF,KAAK8B,IAAc6E,kBACjB/E,EAAS27B,iBAAeU,kBACxB,MACF,KAAKn8B,IAAc8E,mBACjBhF,EAAS27B,iBAAeW,UACxB,MACF,QACEt8B,EAAS,MAIb,OAAOA,GAyCHm9B,EAAsD,CAC1D,CACE1yB,IAAK2yB,IAA+BpyB,MACpCnZ,MAAO,kBACPoI,QAAQ,GAEV,CACEwQ,IAAK2yB,IAA+BnyB,YACpCpZ,MAAO,cACPoI,QAAQ,GAEV,CAAEwQ,IAAK2yB,IAA+Bz9B,OAAQ9N,MAAO,SAAUoI,QAAQ,GACvE,CAAEwQ,IAAK2yB,IAA+BjyB,MAAOtZ,MAAO,QAASoI,QAAQ,GACrE,CACEwQ,IAAK2yB,IAA+B/xB,cACpCxZ,MAAO,gBACPoI,QAAQ,GAEV,CACEwQ,IAAK2yB,IAA+BhyB,mBACpCvZ,MAAO,sBACPoI,QAAQ,GAEV,CACEwQ,IAAK2yB,IAA+B3gC,KACpC5K,MAAO,aACPoI,QAAQ,GAEV,CACEwQ,IAAK2yB,IAA+BpzB,SACpCnY,MAAO,WACPoI,QAAQ,GAEV,CACEwQ,IAAK2yB,IAA+B9xB,YACpCzZ,MAAO,cACPoI,QAAQ,GAEV,CACEwQ,IAAK2yB,IAA+B/yB,WACpCxY,MAAO,aACPoI,QAAQ,GAEV,CACEwQ,IAAK2yB,IAA+BlnC,YACpCrE,MAAO,cACPoI,QAAQ,IAomCCojC,EAAiBxoC,aAtBN,SAAC,GAYnB,IAXJC,EAWG,EAXHA,KACAoR,EAUG,EAVHA,YACA1D,EASG,EATHA,SACA2D,EAQG,EARHA,SACAwD,EAOG,EAPHA,aAQA,MAAO,CACL7U,KAAMA,EACNwO,qBAAsB4C,EAAYE,gBAClC5D,WACAgB,gBAAiB2C,EACjBwD,kBAImD,CACrDjH,iBACA8K,qBACA3K,uBACAU,uBACAqG,6BACA6D,yBACAxY,qBAP4BJ,EAzkCc,SAAClG,GAC3C,MAAoCC,mBAClC,MADF,mBAAO2S,EAAP,KAAmBD,EAAnB,KAGA,EAAkC1S,mBAAyB,OAA3D,mBAAO0uC,EAAP,KAAkBC,EAAlB,KACA,EAA8B3uC,oBAAkB,GAAhD,mBAAO0O,EAAP,KAAgBC,EAAhB,KACA,EAA4C3O,oBAAkB,GAA9D,mBAAOqW,EAAP,KAAuBC,EAAvB,KACA,EAA0CtW,oBAAkB,GAA5D,mBAAOyS,EAAP,KAAsBD,EAAtB,KACA,EAA0CxS,oBAAkB,GAA5D,mBAAO+V,EAAP,KAAsBuE,EAAtB,KACA,EAAkDta,oBAAkB,GAApE,mBAAOka,EAAP,KAA0BD,EAA1B,KACA,EAAsCja,oBAAkB,GAAxD,mBAAO4uC,GAAP,KAAoBC,GAApB,KACA,GAAwC7uC,qBAAxC,qBAAO8uC,GAAP,MAAqBC,GAArB,MAIA,GAAwC/uC,mBAAiB,IAAzD,qBAAOgvC,GAAP,MAAqBC,GAArB,MACA,GAAgCjvC,oBAAkB,GAAlD,qBAAOkvC,GAAP,MAAiBC,GAAjB,MACA,GAAkCnvC,mBAAyB,OAA3D,qBAAOovC,GAAP,MAAkBC,GAAlB,MACA,GAAsCrvC,mBAAiB,IAAvD,qBAAOqtB,GAAP,MAAoBC,GAApB,MACA,GAAsDttB,mBAG5C,MAHV,qBAAOsvC,GAAP,MAA4BC,GAA5B,MAIA,GAAsCvvC,mBAAiB,IAAvD,qBAAOsZ,GAAP,MAAoBk2B,GAApB,MACA,GACExvC,mBAAwCuuC,GAD1C,qBAAOkB,GAAP,MAAsBC,GAAtB,MAEA,GAAkC1vC,oBAAkB,GAApD,qBAAO2vC,GAAP,MAAkBC,GAAlB,MACA,GAAkC5vC,mBAGxB,MAHV,qBAAO0G,GAAP,MAAkBC,GAAlB,MAIA,GAAwC3G,oBAAkB,GAA1D,qBAAO8sC,GAAP,MAAqB+C,GAArB,MACA,GAA0C7vC,mBAExC,OAFF,qBAAO2Z,GAAP,MAAsBC,GAAtB,MAkKA,GA9JA3K,qBAAU,WA6CR,GA1C8C,OAA5ClP,EAAMgb,aAAaxB,sBACgC,IAAnDxZ,EAAMgb,aAAaxB,qBAAqB7X,OAExC3B,EAAMib,wBAAwBf,GAE9BA,GAAqB,GAIW,OAA9Bla,EAAM6T,SAAS4C,YACjBzW,EAAM6e,kBAAiB,SAACvT,EAAiBpE,IACxB,IAAXoE,GACEpE,EAAIvF,OAAS,GACf3B,EAAMsG,eAAe,CACnBpD,MAAOgE,EACPzE,MAAOqG,IAAgBI,YAQE,OAA/BlJ,EAAM2U,qBACR3U,EAAM4U,oBAAmB,SAACtJ,EAAiBpE,GACpCoE,IACHiL,GAAkB,GAClB3H,GAAW,GACP1H,EAAIvF,QACN3B,EAAMsG,eAAe,CACnBpD,MAAOgE,EACPzE,MAAOqG,IAAgBI,aAKtBoN,IACT1H,GAAW,GACX2H,GAAkB,IAKH,OAAf3D,IACC0D,GACDtW,EAAM2U,sBACN3U,EAAM2U,qBAAqBhT,OAAS,EACpC,CACA,IAAI6R,EAAcxT,EAAM2U,qBAAqB1T,MAC3C,SAACF,GAAD,OAA6B,IAAnBA,EAAK0S,aAEjBd,EAAca,GAA4BxT,EAAM2U,qBAAqB,IA0CtC,OAA7B3U,EAAM6T,SAASC,WAAqC,OAAflB,EACvC5S,EAAM+T,aACJ,EACAnB,EAAWoB,iBACX,SAAC1I,EAAiBpE,IACfoE,GAAUiP,EAAiBjP,IACb,IAAXA,GAAoBpE,EAAIvF,QAC1B3B,EAAMsG,eAAe,CACnBpD,MAAOgE,EACPzE,MAAOqG,IAAgBI,YAKtB0J,GAAcoD,GACvBuE,GAAiB,KA6ClB,CAACvE,EAAeM,EAAgBtW,EAAO4S,KAE1B,IAAZjE,EACF,OACE,qBAAK/M,UAAU,kEAAf,6BAMJ,GAAI5B,EAAM2U,sBAA8D,IAAtC3U,EAAM2U,qBAAqBhT,OAC3D,OAAO,cAAC,IAAD,IA4FT,IArZA0hC,GACA/N,GA+aMya,GAAU,SAACC,GAEbV,GADEL,KAAiBe,GAA8B,QAAdX,GACtB,OAEA,OAEfH,GAAgBc,GAChBZ,IAAY,IAyERa,GAAqB,WAEzB,GAAIr9B,EAAY,CACd,IAAI1P,EAAQ,gBAAkB0P,EAAWoH,kBAIzCy1B,GAAevsC,GAGjB,GAAIlD,EAAM6T,SAASC,WAAa9T,EAAM6T,SAAS4C,WAAY,CACzD,IAAImF,EAAoC,GACpCC,EAAY,EAChB,IAAK,IAAMC,KAAO9b,EAAM6T,SAASC,UAC/B,GACExE,OAAOyM,UAAUC,eAAeC,KAAKjc,EAAM6T,SAASC,UAAWgI,GAE/D,IAAK,IAAMI,KAAYlc,EAAM6T,SAASC,UAAUgI,GAAKzU,OACnD,GACEiI,OAAOyM,UAAUC,eAAeC,KAC9Bjc,EAAM6T,SAASC,UAAUgI,GAAKzU,OAC9B6U,GAEF,CACA,IAAMjV,EAAUjH,EAAM6T,SAASC,UAAUgI,GAAKzU,OAAO6U,GAC/CwM,EAAW7R,yBAAe7W,EAAM6T,SAASC,UAAUgI,IACrDK,EAAmC,CACrCC,SAAUP,EACVQ,MACErc,EAAM6T,SAASC,UAAUgI,GAAK5R,YAAYC,UAAUnC,MACpD,IACAhI,EAAM6T,SAASC,UAAUgI,GAAK5R,YAAYC,UAAUlC,MACtD+I,OAAQhR,EAAM6T,SAASC,UAAUgI,GAAK5R,YAAYC,UAAU+G,IACxD,OACA,SACJoL,YAAatc,EAAM6T,SAASC,UAAUgI,GAAK5R,YAAYqS,KACvDC,MAAOxc,EAAM6T,SAASC,UAAUgI,GAAK5R,YAAY+G,aACjD9I,MAAOnI,EAAM6T,SAASC,UAAUgI,GAAK5R,YAAY/B,MACjDuT,WAAYgN,GAAsB,GAClCnhB,YAAaN,EAAQK,MACrBmV,mBAAoB,GACpBC,cAAe9J,EAAaA,EAAWoH,kBAAoB,GAC3DlM,KAAMnC,YAAK1E,EAAQ2E,WACnByP,SAAUpU,EAAQa,sBACdb,EAAQa,sBACR,UACJ6U,YAAa3c,EAAM6T,SAASC,UAAUgI,GAAK5Y,OAE7C,IAAK,IAAM4Y,KAAO4zB,GACZpgC,OAAOyM,UAAUC,eAAeC,KAAKyzB,GAAe5zB,KACjD4zB,GAAc5zB,GAAKxQ,eACf6Q,EAAUuzB,GAAc5zB,GAAKA,MAI1CF,EAAS9V,KAAKqW,GACdN,IAKRmzB,GAAgBpzB,GAChBA,EAAW,GACXC,EAAI,IAIFF,GAAe,SACnB7H,GAEA,GAAkB,OAAdA,EAAoB,OAAO,KAC/B,IAAI8H,EAAoC,GACpCC,EAAY,EAEhB,IAAK,IAAMC,KAAOhI,EAChB,GAAIxE,OAAOyM,UAAUC,eAAeC,KAAKnI,EAAWgI,GAElD,IAAK,IAAMI,KAAYpI,EAAUgI,GAAKzU,OACpC,GACEiI,OAAOyM,UAAUC,eAAeC,KAC9BnI,EAAUgI,GAAKzU,OACf6U,GAEF,CACA,IAAMjV,EAAU6M,EAAUgI,GAAKzU,OAAO6U,GAChCwM,EAAW7R,yBAAe/C,EAAUgI,IACtCK,EAAmC,CACrCC,SAAUP,EACVQ,MACEvI,EAAUgI,GAAK5R,YAAYC,UAAUnC,MACrC,IACA8L,EAAUgI,GAAK5R,YAAYC,UAAUlC,MACvC+I,OAAQ8C,EAAUgI,GAAK5R,YAAYC,UAAU+G,IACzC,OACA,SACJoL,YAAaxI,EAAUgI,GAAK5R,YAAYqS,KACxCC,MAAO1I,EAAUgI,GAAK5R,YAAY+G,aAClC9I,MAAO2L,EAAUgI,GAAK5R,YAAY/B,MAClCuT,WAAYgN,GAAsB,GAClCnhB,YAAaN,EAAQK,MACrBmV,mBACE3I,EAAUgI,GAAKsV,eACdxwB,YAAgBkT,EAAUgI,GAAKsV,cAC5Btd,EAAUgI,GAAKsV,aACf,KACN1U,cAAe9J,EAAaA,EAAWoH,kBAAoB,GAC3DlM,KAAMnC,YAAK1E,EAAQ2E,WACnByP,SAAUpU,EAAQa,sBACdb,EAAQa,sBACR,UACJ6U,YAAa7I,EAAUgI,GAAK5Y,MACxB4Q,EAAUgI,GAAK5Y,MACf,aASN0Y,EAAS9V,KAAKqW,GACdN,IAKR,OAAOD,GAgBHs0B,GAAkB,SAACp0B,GACvB,OACEA,IAAQ2yB,IAA+BpyB,OACvCP,IAAQ2yB,IAA+BpzB,UACvCS,IAAQ2yB,IAA+B/xB,eACvCZ,IAAQ2yB,IAA+B/yB,YACvCI,IAAQ2yB,IAA+B3gC,MAsCrCqiC,GAAkB,SACtBr8B,EACAZ,EACAk9B,EACA1X,GAEA,IAAIrnB,EAAkCyC,EAgBtC,MAfkB,QAAdZ,IACF7B,EAASA,EAAOvQ,QAAO,SAACC,GAAD,OAAUA,EAAK2a,aAAexI,MAEpC,QAAfk9B,IACF/+B,EAASA,EAAOvQ,QAAO,SAACC,GAAD,OAAUA,EAAKwG,cAAgB6oC,MAGtC,QAAd1X,IACFrnB,EAASA,EAAOvQ,QACd,SAACC,GAAD,OAC8B,OAA5BA,EAAK0b,oBACL1b,EAAK0b,qBAAuBic,EAAUhuB,2BAIrC2G,GAGT,OACE,eAAC,WAAD,WACE,eAAC,IAAD,WACE,sBAAKzP,UAAU,qBAAf,UACE,sBAAMA,UAAU,6BAAhB,mCAG6C,OAA5C5B,EAAMgb,aAAaxB,sBACpBW,EACE,cAAC,IAAD,IACqD,IAAnDna,EAAMgb,aAAaxB,qBAAqB7X,OAC1C,mDAEA,eAAC,WAAD,WACE,sBACEQ,QAAS,kBAAM0X,GAAiB,QAChCjY,UAAS,uDACW,QAAlBgY,GACI,qFACA,8DAHG,+CAFX,UAQqB,QAAlBA,GACC,cAAC,KAAD,IAEA,cAAC,KAAD,IAEF,0CAED5Z,EAAMgb,aAAaxB,qBAAqB1X,KAAI,SAACf,EAAMyO,GAAP,OAC3C,sBACErN,QAAS,kBAAM0X,GAAiB9Y,IAEhCa,UAAS,uDACW,QAAlBgY,IACAA,GAAclP,yBACZ3J,EAAK2J,uBACH,qFACA,8DALG,+CAHX,UAWqB,QAAlBkP,IACDA,GAAclP,yBACZ3J,EAAK2J,uBACL,cAAC,KAAD,IAEA,cAAC,KAAD,IAEF,+BAAO3J,EAAK4J,6BAhBP6E,EAAI,YAsBnB,sBAAK5N,UAAU,GAAf,UACE,qBAAKA,UAAU,6BAAf,8BACA,sBACEO,QAAS,kBAAM2tC,IAAgB,IAC/BluC,UAAU,gMAFZ,UAIkB,OAAfgR,EAAA,UACMA,EAAWoH,kBADjB,cACwCpH,EAAWxC,QAChD,mBACJ,cAAC,IAAD,CAAQxO,UAAU,iCAGtB,sBAAKA,UAAU,OAAf,UACE,qBAAKA,UAAU,kCAAf,0BAC+B,OAA9B5B,EAAM6T,SAAS4C,YAC2B,OAA3CkF,GAAa3b,EAAM6T,SAASC,WAC1B,cAAC,IAAD,IAhWS,SACjBzM,GAMA,IAAI8T,EAIE,CAAC,CAAEjY,MAAO,YAAagV,MAAO7Q,EAAO1F,OAAQwM,KAAM,QAiBzD,OAfAmB,OAAOC,OAAOgC,KAAe+J,SAAQ,SAACC,GAChCA,IAAahK,IAAc6E,mBAC7B+E,EAAOrV,KAAK,CACV5C,MAAOsI,YAAsBgQ,EAAgBD,IAC7CrD,MACE7Q,EAAO1F,OAAS,EACZ0F,EAAOvG,QACL,SAAC2a,GAAD,OAASA,EAAIC,aAAeF,EAAgBD,MAC5C5Z,OACF,EACNwM,KAAMoN,OAKLJ,EAsUClD,CAAW0D,GAAa3b,EAAM6T,SAASC,YAAahS,KAClD,SAACf,EAAMgB,GAAP,OACE,qBACEI,QAAS,kBACPnC,EAAM8e,qBAAqBtD,EAAgBza,EAAKoN,QAFpD,SAME,cAAC,IAAD,CACEjL,MAAOnC,EAAKmC,MACZgV,MAAOnX,EAAKmX,MACZK,QApYhB83B,EAqYkBrwC,EAAM6T,SAASsC,kBApYjCm6B,EAqYkBvvC,EAAKoN,KAnYH,QAAhBmiC,GAA0C,QAAjBD,GAEF,QAAhBC,GAA0C,QAAjBD,GAC9BC,IAAgBD,MAyXHtvC,EAAKmC,MAAQnB,GAhYR,IACxBsuC,EACAC,QA6YI,sBAAK1uC,UAAU,OAAf,UACE,qBAAKA,UAAU,kCAAf,0BAC+B,OAA9B5B,EAAM6T,SAAS4C,YAC2B,OAA3CkF,GAAa3b,EAAM6T,SAASC,WAC1B,cAAC,IAAD,IA5VU,SAClBzM,GAMA,IAAI8T,EAII,CAAC,CAAEjY,MAAO,aAAcgV,MAAO7Q,EAAO1F,OAAQ2F,MAAO,QAC3DipC,EAAmB,CAAC,EAAG,GANpB,WAOI/gC,GACP2L,EAAOrV,KAAK,CACV5C,MAAO,SAAWqtC,EAAO/gC,GACzB0I,MAAO7Q,EAAOvG,QAAO,SAAC2a,GAAD,OAASA,EAAIlU,cAAgBgpC,EAAO/gC,MAAI7N,OAC7D2F,MAAOipC,EAAO/gC,MAJlB,IAAK,IAAIA,KAAK+gC,EAAS,EAAd/gC,GAOT,OAAO2L,EA0UCq1B,CAAY70B,GAAa3b,EAAM6T,SAASC,YAAahS,KACnD,SAACf,EAAMgB,GAAP,OACE,qBACEI,QAAS,kBAAMysC,EAAa7tC,EAAKuG,QADnC,SAIE,cAAC,IAAD,CACEpE,MAAOnC,EAAKmC,MACZgV,MAAOnX,EAAKmX,MACZK,OAAQxX,EAAKuG,QAAUqnC,KALpB5tC,EAAKmC,MAAQnB,YAa9B,oCAEE,sBAAKH,UAAU,uBAAf,UACE,qBAAKA,UAAU,aAAf,SACE,qBAAKA,UAAU,gCAAf,SACE,sBAAMA,UAAU,mCAAhB,8BAKJ,qBAAKA,UAAU,aAAf,SACE,qBAAKA,UAAU,mBAAf,SACG5B,EAAM6T,SAASC,WAAa9T,EAAM6T,SAASC,UAAUnS,OAAS,GAC7D,sBAAKC,UAAU,wDAAf,UACE,cAAC,IAAD,CAAUA,UAAU,2BACpB,sBAAMA,UAAU,gBAAhB,uBACA,wBACEA,UAAU,wGACVsL,SAAUyB,EACVxM,QAAS,WACP8tC,KACAT,GAAuB,CACrBiB,WAAY,QACZnlC,QAAQ,KAPd,mBAaA,wBACE1J,UAAS,gHACPitC,IAAe,eAEjB1sC,QAAS,kBA7MJ,WACrB,GAAKqV,SAASk5B,iBAAiB,4BAA4B/uC,QAQ3D,GAAIiR,EAAY,CACd,IAAM4R,EACJhN,SAASoO,eAAe,kBACpBqS,EAA0C,CAC9C8B,OAAQ/5B,EAAMmG,KAAKyB,KAAKI,MAAQ,IAAMhI,EAAMmG,KAAKyB,KAAKK,MACtD/E,MAAO,eACP61B,aAAc,aACdF,QACuC,QAArC74B,EAAM6T,SAASsC,kBACX,YACAnW,EAAM6T,SAASsC,kBACrB/F,OAAQwC,EAAWoH,kBACnB5W,OAAQ,qBACRs1B,UACoB,QAAlB9e,GACI,gBACAA,GAAcjP,0BAEtB6Z,GAASwT,YAAYC,EAAgBzT,EAAOsqB,UAzB5C9uC,EAAMsG,eAAe,CACnBpD,MAAM,sCACNT,MAAOqG,IAAgB8xB,UAyMI+V,IACfzjC,SAAUyB,GAAWkgC,GALvB,2BAeV,sBAAKjtC,UAAU,gBAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,uBACEmL,SAAU,SAACC,GAAD,OAAOugB,GAAevgB,EAAEC,OAAO9B,QACzCgD,KAAK,OACLhD,MAAOmiB,GACP3gB,YAAY,YACZ/K,UAAU,6DACVsL,SAC+B,OAA7BlN,EAAM6T,SAASC,WACe,OAA9B9T,EAAM6T,SAAS4C,YAC4B,OAA3CkF,GAAa3b,EAAM6T,SAASC,YAC5BpB,MAIN,wBAAO9Q,UAAU,gBAAgBiC,GAAG,iBAApC,UACE,uBAAOjC,UAAU,sEAAjB,SACE,+BACE,oBAAIA,UAAU,YAAd,eACA,oBACEA,UAAU,2BACVO,QAAS,kBAAM4tC,GAAQ,UAFzB,SAIE,sBAAKnuC,UAAU,0BAAf,6BACkB,cAAC,IAAD,SAGpB,oBAAIA,UAAU,YAAd,yBACA,oBACEA,UAAU,2BACVO,QAAS,kBAAM4tC,GAAQ,WAFzB,SAIE,sBAAKnuC,UAAU,0BAAf,oBACS,cAAC,IAAD,SAGX,oBAAIA,UAAU,YAAd,mBACA,oBACEA,UAAU,2BACVO,QAAS,kBAAM4tC,GAAQ,gBAFzB,SAIE,sBAAKnuC,UAAU,0BAAf,yBACc,cAAC,IAAD,SAGhB,oBACEA,UAAU,2BACVO,QAAS,kBAAM4tC,GAAQ,eAFzB,SAIE,sBAAKnuC,UAAU,0BAAf,wBACa,cAAC,IAAD,SAGf,oBACEA,UAAU,2BACVO,QAAS,kBAAM4tC,GAAQ,gBAFzB,SAIE,sBAAKnuC,UAAU,0BAAf,yBACc,cAAC,IAAD,SAGhB,oBACEA,UAAU,2BACVO,QAAS,kBAAM4tC,GAAQ,aAFzB,SAIE,sBAAKnuC,UAAU,0BAAf,oBACS,cAAC,IAAD,SAGX,oBACEA,UAAU,2BACVO,QAAS,kBAAM4tC,GAAQ,SAFzB,SAIE,sBAAKnuC,UAAU,0BAAf,kBACO,cAAC,IAAD,cAKb,gCACgC,OAA7B5B,EAAM6T,SAASC,WACc,OAA9B9T,EAAM6T,SAAS4C,YACf/D,GAE+C,OAA3CiJ,GAAa3b,EAAM6T,SAASC,WAD9B,cAAC,IAAD,CAAclH,KAAM,KAQP,IALXujC,GACAx0B,GAAa3b,EAAM6T,SAASC,WAC5B9T,EAAM6T,SAASsC,kBACfw4B,EACA/0B,IACAjY,OACF,6BACE,oBAAIE,QAAS,GAAID,UAAU,YAA3B,SACE,sBAAKA,UAAU,oFAAf,UACE,cAAC,IAAD,CAAcA,UAAU,kEACxB,sBAAMA,UAAU,oBAAhB,yDAGA,qBAAKA,UAAU,wDAAf,SACE,qBAAIA,UAAU,2DAAd,UACE,oBACEO,QAAS,kBAAM2tC,IAAgB,IAC/BluC,UAAU,yCAFZ,8BAMA,oBAAIA,UAAU,uBAAd,gBACA,oBAAIA,UAAU,gBAAd,kCAGA,oBAAIA,UAAU,uBAAd,gBACA,oBAAIA,UAAU,gBAAd,+CASVgvC,YACEzB,IA/+BhB9L,GAi/BkB8M,GACEx0B,GAAa3b,EAAM6T,SAASC,WAC5B9T,EAAM6T,SAASsC,kBACfw4B,EACA/0B,IAp/BpB0b,GAs/BkBhI,QAp/BdjM,IAAciU,IAAiB,KAATA,GAAoB+N,GACvCA,GAAQviC,QAAO,SAACwiC,GACrB,IAAIC,EAGJ,IAAK,IAAIC,KAAQF,EAuBf,GAtBAC,GAAO,EAEI,UAATC,GACS,WAATA,GACS,gBAATA,GACS,UAATA,GACS,UAATA,GACS,gBAATA,GACS,eAATA,GACS,gBAATA,GACS,uBAATA,GACS,kBAATA,GACS,SAATA,GACS,aAATA,GAEIF,EAAQE,KACVD,EACED,EAAQE,GAAOpjB,WACZoG,cACAG,QAAQ2O,GAAK9O,gBAAkB,GAGpC+c,EAAM,MAEZ,OAAOA,MAw9BO0L,GACAI,IACAvtC,KAAI,SAACf,EAAMyO,GAAP,OACJ,qBAEE5N,UAAS,UACP4N,EAAI,IAAM,EAAI,cAAgB,WADvB,+GAFX,UAME,oBAAI5N,UAAU,YAAd,SAA2B4N,EAAI,IAC/B,oBAAI5N,UAAU,YAAd,SAA2Bb,EAAKsb,QAChC,oBAAIza,UAAU,YAAd,SAA2Bb,EAAKub,cAChC,oBAAI1a,UAAU,YAAd,SAA2Bb,EAAKiQ,SAChC,oBAAIpP,UAAU,YAAd,SAA2Bb,EAAKyb,QAChC,oBAAI5a,UAAU,YAAd,SAA2Bb,EAAK4b,cAChC,oBAAI/a,UAAU,YAAd,SAA2Bb,EAAK2a,aAChC,oBAAI9Z,UAAU,YAAd,SAA2B,SAAWb,EAAKwG,cAC3C,oBAAI3F,UAAU,YAAd,SACGb,EAAKsa,WAGR,oBAAIzZ,UAAU,YAAd,SAA2Bb,EAAK+M,SAjB3B0B,EAAI,iBA0BE,OAAxB+/B,KAA+D,IAA/BA,GAAoBjkC,QACnD,cAAC,IAAD,CACEpI,MACE,qBAAKtB,UAAU,mCAAf,SAEE,sBAAKA,UAAU,gBAAf,UACE,sBAAMA,UAAU,mCAAhB,wCAGA,uBAAMA,UAAU,oCAAhB,wBACc2tC,GAAoBkB,WADlC,kBAMNjuC,UAAU,EACVC,MAAOC,IAAOC,QACdC,MAAO,kBAAM4sC,GAAuB,OACpC3sC,eAAe,EACfC,eAAgBC,IAAU6uB,OAC1B3uB,cAAc,EACd1B,QAAS,CAAE2B,OAAO,GApBpB,SAsBE,sBAAKtB,UAAU,OAAf,UACE,sBAAKA,UAAU,0CAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,0CACA,uBACEuM,KAAK,OACLvM,UAAS,kDACP+E,IAAmC,iBAAtBA,GAAUM,QACnB,iBACA,kBAHG,aAKT0F,YAAY,qBACZxB,MAAOoO,GACPxM,SAAU,SAACC,GACTpG,GAAa,MACb6oC,GAAeziC,EAAEC,OAAO9B,QAE1B+B,SAAUyB,IAEXhI,IAAmC,iBAAtBA,GAAUM,SACtB,sBAAMrF,UAAU,eAAhB,SAAgC+E,GAAUO,SAG9C,sBAAKtF,UAAU,qBAAf,UACE,mDACA,qBAAKA,UAAU,0DAAf,SACG8tC,GAAc5tC,KAAI,SAACf,EAAMgB,GAAP,OACjB,sBAEEH,UAAS,kCACPsuC,GAAgBnvC,EAAK+a,KACjB,iBACA,sBAEN3Z,QAAS,kBACP+tC,GAAgBnvC,EAAK+a,MAjmBf,SAACA,GAC3B,IAAI/Z,EAAgB2tC,GAAcmB,WAAU,SAAC9vC,GAAD,OAAUA,EAAK+a,MAAQA,KAC/Dg1B,EAA0CpB,GAC9CoB,EAAS/uC,GAAOuJ,QAAUwlC,EAAS/uC,GAAOuJ,OAC1CqkC,GAAiBmB,GACjB,IAAIC,EAAoBD,EAAS7vC,MAAK,SAACF,GAAD,OAA0B,IAAhBA,EAAKuK,UAEnDukC,IADEkB,GAOJd,KAqlBoBe,CAAoBjwC,EAAK+a,MAE3B5Y,MACGgtC,GAAgBnvC,EAAK+a,KAElB,GADA,6BAbR,UAiBG/a,EAAKuK,OACJ,cAAC,IAAD,CAAY1J,UAAU,0BAEtB,cAAC,IAAD,CAAwBA,UAAU,YAEpC,+BAAOb,EAAKmC,UArBPnB,QAyBV4E,IAAmC,mBAAtBA,GAAUM,SACtB,sBAAMrF,UAAU,eAAhB,SAAgC+E,GAAUO,YAIhD,sBAAKtF,UAAU,iCAAf,UACE,sBACEA,UAAS,yCACTO,QAAS,kBAzeI,SAAC8uC,GAC1B,IAAIH,EAA0CpB,GAC9C,IAAK,IAAM5zB,KAAOg1B,EACZZ,GAAgBY,EAASh1B,GAAKA,OAChCg1B,EAASh1B,GAAKxQ,QAAU2lC,GAI5BtB,GAAiBmB,GACjBjB,IAAcoB,GACdhB,KA+d2BiB,CAAmBtB,KAFpC,UAIGA,GACC,cAAC,IAAD,CAAYhuC,UAAU,0BAEtB,cAAC,IAAD,CAAwBA,UAAU,YAEpC,iDAGDmtC,KAAiBpgC,GAChB,cAAC,IAAD,CACE6nB,SAAUuY,GACVtY,SAAUld,GACVmd,QAAQ,qBAQnBqW,IACC,cAAC,IAAD,CACE7pC,MACE,sBAAKtB,UAAU,mCAAf,UACE,cAAC,IAAD,CAAWA,UAAU,2BACrB,sBAAMA,UAAU,gBAAhB,gCAGJY,UAAU,EACVC,MAAOC,IAAOC,QACdC,MAAO,kBAAqB,OAAfgQ,GAAuBk9B,IAAgB,IACpDjtC,eAAe,EACfC,eAAgBC,IAAUC,WAC1BC,cAAc,EACd1B,QAAS,CAAE2B,OAAO,GAbpB,SAeE,cAAC,IAAD,CACEm7B,WAAYr+B,EAAM2U,qBAClB6pB,iBAAkB,SAACrzB,GA9vBN,IAACuK,EA+vBF,QAAVvK,GAAmBwH,EAAcxH,GACvB,QAAVA,IAhwBYuK,EAgwBsBvK,EAAM6I,gBA/vBlDvB,GAAiB,GACjBzS,EAAM+T,aAAa,EAAG2B,GAAW,SAACpK,EAAiBpE,IAChDoE,GAAUmH,GAAiB,IACb,IAAXnH,GAAoBpE,EAAIvF,QAC1B3B,EAAMsG,eAAe,CACnBpD,MAAOgE,EACPzE,MAAOqG,IAAgBI,aA0vBT,QAAViC,GAAmB2kC,IAAgB,IAErCxR,WAAW,EACXC,gBAAiB3rB,GAA0B","file":"static/js/21.187ee66f.chunk.js","sourcesContent":["import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdCancel, MdInfoOutline } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadQuestionTypes,\n  PushPopupAlert,\n  questionTypesStoreInterface,\n} from \"../../../actions\";\nimport { evaluateClaim } from \"../../../actions/claiming\";\nimport { AnswersDetails } from \"../../../components/AnswersDetails/AnswersDetails\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimExamResultsDetails,\n  claimReasonInterface,\n  ClaimStatus,\n  ClaimTypesInterfaceAPI,\n  course,\n} from \"../../../interfaces\";\nimport { ExamAnswerSheetDone } from \"../../../interfaces/exam\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { showDate } from \"../../../utils/functions\";\nimport { claimShowAnswer } from \"../Candidate/ExaminationFormView\";\nimport { isClaimEvaluated } from \"../ClaimDocView\";\nimport { claimResponseBody } from \"./AdminClaimDocView\";\n\nenum viewTabs {\n  profile = \"Applicant Profile\",\n  exam = \"Exam Details\",\n}\n\ntype AdminClaimExamViewProps = {\n  thisExamSheet: ClaimExamResultsDetails;\n  thisExam: course;\n  thisClaim: CandidateClaimInterface;\n  claimTypes: ClaimTypesInterfaceAPI[];\n  claimReasons: claimReasonInterface[] | null;\n\n  // REDUX ==================\n  auth: Auth;\n  questionTypes: questionTypesStoreInterface;\n  evaluateClaim: Function;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  PushPopupAlert: Function;\n};\n\nconst AdminClaimExamView: React.FC<AdminClaimExamViewProps> = (props) => {\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n  const [loading, setLoading] = useState(true);\n  const [actionTaken, setActionTaken] = useState<ClaimDecisionStatus | null>(\n    null\n  );\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [responseMsg, setResponseMsg] = useState<string>(\"\");\n  const [marks, setMarks] = useState<number>(0);\n  const [selectedTab, setSelectedTab] = useState<viewTabs>(viewTabs.profile);\n\n  useEffect(() => {\n    if (\n      props.questionTypes.questionTypes === null ||\n      (props.questionTypes.questionTypes.length === 0 && loading)\n    ) {\n      props.loadQuestionTypes(setLoading);\n    } else if (loading) {\n      setLoading(false);\n    }\n  }, [loading, props]);\n\n  if (loading || props.questionTypes.questionTypes === null) {\n    return <Loading />;\n  }\n\n  const handleVerify = async () => {\n    if (!actionTaken) {\n      setFormError({\n        element: \"action\",\n        msg: \"Action is required!\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    if (\n      actionTaken === ClaimDecisionStatus.ACCEPTED &&\n      (marks <= 0 || marks > 100)\n    ) {\n      setFormError({\n        element: \"marks\",\n        msg: \"Invalid marks, marks must be between 1 and 10\",\n      });\n\n      return setLoadingRequest(false);\n    }\n\n    if (isEmptyOrSpaces(responseMsg)) {\n      setFormError({\n        element: \"comment\",\n        msg: \"Reason of rejection is required\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    let subClaim = props.thisClaim.claims.find(\n      (item) => item.level === props.thisClaim.claim_level\n    );\n\n    if (subClaim) {\n      setLoadingRequest(true);\n      const api_body: claimResponseBody = {\n        sub_claim_id: subClaim.id,\n        evaluation_comment: responseMsg,\n        evaluated_by: props.auth.user.user_id,\n        decision_taken_status: actionTaken,\n        evaluator_name: props.auth.user.fname + \" \" + props.auth.user.lname,\n        evaluator_email: props.auth.user.email,\n      };\n\n      try {\n        const res = await axios.put<CandidateClaimInterface>(\n          `${API.CLAIMING}/user/evaluate/${props.thisClaim._id}`,\n          api_body\n        );\n        if (res) {\n          console.log({ evaluate_claim_res: res });\n          props.evaluateClaim(res.data);\n          // REVALIDATED DOCUMENT IF IT IS APPROVED =========================\n          if (actionTaken === ClaimDecisionStatus.ACCEPTED) {\n            await handleMarksAddition();\n          }\n          props.PushPopupAlert({\n            title: `Claim responded successfully!`,\n            theme: PopupAlertTheme.success,\n          });\n          // setDocumentId(\"null\");\n          setResponseMsg(\"\");\n          setActionTaken(null);\n        }\n      } catch (error) {\n        console.error(error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      setLoadingRequest(false);\n    }\n  };\n\n  const handleMarksAddition = async () => {\n    try {\n      await axios.put(`${API.DO_EXAM}/answersheet/user/marks/update`, {\n        answer_sheet_id: props.thisClaim.claiming_on_id,\n        marks: marks,\n      });\n    } catch (error) {\n      console.error(error);\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  // const getAnswersByQuestion = (question_id: string): ClaimGetUserAnswers[] => {\n  //   return props.thisExamSheet.user_answers.filter(\n  //     (item) => item.question === question_id\n  //   );\n  // };\n\n  const claimCandidateAnswers = (): ExamAnswerSheetDone[] => {\n    let result: ExamAnswerSheetDone[] = [\n      {\n        exam_location: props.thisExamSheet.exam_location,\n        questions: props.thisExamSheet.questions,\n        user_answers: props.thisExamSheet.user_answers,\n        user: props.thisExamSheet.user,\n        period: props.thisExamSheet.period,\n        course: props.thisExamSheet.course,\n        exam_paper: props.thisExamSheet.exam_paper,\n        user_status: props.thisExamSheet.user_status,\n        used_duration: props.thisExamSheet.used_duration,\n        total_marks: props.thisExamSheet.total_marks,\n        number_of_question_answered:\n          props.thisExamSheet.number_of_question_answered,\n        // start_time: string,\n        // end_time: string,\n        exam_total_marks: props.thisExamSheet.exam_total_marks,\n        exam_start_time: props.thisExamSheet.exam_start_time,\n        exam_end_time: props.thisExamSheet.exam_end_time,\n        exam_date: props.thisExamSheet.exam_date,\n        status: props.thisExamSheet.status,\n        createdAt: props.thisExamSheet.createdAt,\n        updatedAt: props.thisExamSheet.updatedAt,\n        disability: false,\n        gender: \"\",\n        in_education: false,\n        position: \"\",\n        answer_sheet_id: props.thisExamSheet.answer_sheet_id,\n      },\n    ];\n    // props.thisExamSheet\n\n    return result;\n  };\n\n  return (\n    <section className=\"\">\n      {/* #################### VIEW TABS ################################## */}\n      <div className=\"flex flex-row items-center mx-4\">\n        {Object.values(viewTabs).map((item, i) => (\n          <div\n            key={i}\n            onClick={() => setSelectedTab(item)}\n            className={`animate__animated ${\n              selectedTab === item\n                ? \"bg-blue-100 border-blue-600 text-blue-600 animate__zoomIn\"\n                : \"bg-white border-white text-gray-600\"\n            } hover:bg-blue-100 px-4 py-2 cursor-pointer font-bold border-b-4 hover:border-blue-600 hover:text-blue-600 rounded-t mt-1 mr-1`}\n          >\n            {item}\n          </div>\n        ))}\n      </div>\n      {/* #################### END VIEW TABS ################################## */}\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          {/* DISPLAY POSITION ==================================================== */}\n          {selectedTab === viewTabs.exam && (\n            <section className=\"w-full my-1 animate__animated animate__fadeIn rounded\">\n              <div className=\"bg-white w-full rounded p-2 mb-2\">\n                <AnswersDetails\n                  showAnswers={true}\n                  exam_id={claimShowAnswer(\n                    props.thisExamSheet,\n                    props.thisExam.course_name\n                  )}\n                  allAnswers={claimCandidateAnswers()}\n                  user_id={props.thisExamSheet.user}\n                />\n              </div>\n            </section>\n          )}\n          {/* END DISPLAY POSITION ==================================================== */}\n          {/* -------------------------------------------------------------------------------- */}\n          {/* DISPLAY PROFILE ==================================================== */}\n          {selectedTab === viewTabs.profile && (\n            <section className=\"w-full my-2 animate__animated animate__fadeIn rounded\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center gap-2\">\n                  <span className={`italic text-gray-600`}>Names:</span>\n                  <span className=\"text-gray-800 font-bold text-xl\">\n                    {props.thisClaim.userDetails.user_info.fname +\n                      \" \" +\n                      props.thisClaim.userDetails.user_info.lname}\n                  </span>\n                </div>\n              </div>\n            </section>\n          )}\n          {/* END DISPLAY PROFILE ==================================================== */}\n          {selectedTab === viewTabs.profile && (\n            <div className=\"\">\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Email:</span>\n                <span className=\"text-gray-800 font-bold text-lg\">\n                  {props.thisClaim.userDetails.email}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Phone:</span>\n                <span className=\"text-gray-800 font-bold text-lg\">\n                  {props.thisClaim.userDetails.phone_number}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Gender:</span>\n                <span className=\"text-gray-800 font-bold text-lg\">\n                  {props.thisClaim.userDetails.user_info.sex === \"M\"\n                    ? \"Male\"\n                    : \"Female\"}\n                </span>\n              </div>\n            </div>\n          )}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVEL 1 DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              <div className=\"text-gray-700 italic font-bold\">\n                Claim Comment (level {index + 1})\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2 mt-1 border rounded px-2 py-1 bg-gray-50\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-600 text-xs\">\n                  {showDate(claim.createdAt)}\n                  {/* {showDate(claim.createdAt) +\n                    \" at \" +\n                    moment.unix(claim.date_created).format(\"MM/DD/YYYY\")} */}\n                </span>\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-700 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n            </section>\n          ))}\n        {/* END CLAIM LEVEL 1 DETAILS ==================================================== */}\n      </div>\n\n      {/* FOOTER INITIAL ========================================== */}\n      {!actionTaken && (\n        <section className=\"flex items-center justify-between bg-gray-50 rounded mt-3\">\n          {/* SHOWING STATUS ===================================== */}\n          <div className=\"mx-4 my-4\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n          </div>\n\n          {props.thisClaim.last_claim_status === ClaimStatus.PENDING && (\n            <div className=\"flex items-center gap-2 px-2\">\n              <button\n                className={`px-4 py-2 font-semibold text-red-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-red-700 hover:bg-red-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.REJECTED);\n                }}\n              >\n                <MdCancel className=\"w-5 h-5\" />\n                <span>Reject</span>\n              </button>\n              <button\n                className={`px-4 py-2 font-semibold text-blue-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-blue-700 hover:bg-blue-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.ACCEPTED);\n                }}\n              >\n                <FaRegCheckCircle className=\"w-5 h-5\" />\n                <span>Accept</span>\n              </button>\n            </div>\n          )}\n        </section>\n      )}\n      {/* END FOOTER INITIAL ========================================== */}\n\n      {/* ======================================================== */}\n      {/* FOOTER RESPONSE ========================================== */}\n      {actionTaken && (\n        <section className=\"my-5 overflow-x-auto\">\n          <div className=\"italic text-gray-700 text-base my-1 mx-2\">\n            Selected decision:{\" \"}\n            <span\n              className={`font-semibold text-lg ${\n                actionTaken === ClaimDecisionStatus.ACCEPTED\n                  ? \"text-blue-700\"\n                  : \"text-yellow-800\"\n              }`}\n            >\n              {actionTaken === ClaimDecisionStatus.ACCEPTED\n                ? \"Approved\"\n                : \"Rejected\"}\n            </span>\n          </div>\n          {/* right part */}\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full space-y-1\">\n              {actionTaken === ClaimDecisionStatus.ACCEPTED && (\n                <div className=\"flex items-center justify-end w-full gap-2\">\n                  <span className=\"font-semibold\">Addition marks</span>\n                  <div className=\"px-2\">\n                    <input\n                      placeholder={`Addition marks`}\n                      className={`border border-${\n                        formError && formError.element === \"marks\"\n                          ? \"red\"\n                          : \"gray\"\n                      }-400 rounded px-3 py-1 w-auto focus:outline-none`}\n                      value={marks}\n                      onChange={(e) => {\n                        setMarks(Number(e.target.value));\n                        setFormError(null);\n                      }}\n                      disabled={loadingRequest}\n                    />\n                    {formError && formError.element === \"marks\" && (\n                      <p className=\"text-red-800\">{formError.msg}</p>\n                    )}\n                  </div>\n                </div>\n              )}\n              <div className=\"w-full px-2\">\n                <textarea\n                  placeholder={`Reason of your decision...`}\n                  cols={50}\n                  rows={actionTaken === ClaimDecisionStatus.ACCEPTED ? 2 : 3}\n                  className={`border border-${\n                    formError && formError.element === \"comment\"\n                      ? \"red\"\n                      : \"gray\"\n                  }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                  style={{ resize: \"none\" }}\n                  value={responseMsg}\n                  onChange={(e) => {\n                    setResponseMsg(e.target.value);\n                    setFormError(null);\n                  }}\n                  disabled={loadingRequest}\n                ></textarea>\n                {formError && formError.element === \"comment\" && (\n                  <p className=\"text-red-800\">{formError.msg}</p>\n                )}\n              </div>\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  setResponseMsg(\"\");\n                  setActionTaken(null);\n                  setFormError(null);\n                }}\n                disabled={loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={loadingRequest}\n                onClick={() =>\n                  window.confirm(\n                    `Are you sure you want to ${\n                      actionTaken === ClaimDecisionStatus.ACCEPTED\n                        ? \"approve\"\n                        : \"rejected\"\n                    } this document?`\n                  ) && handleVerify()\n                }\n              >\n                {loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n          {/* end right part */}\n        </section>\n      )}\n      {/* END FOOTER RESPONSE ========================================== */}\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  questionTypes,\n}: StoreState): {\n  auth: Auth;\n  questionTypes: questionTypesStoreInterface;\n} => {\n  return {\n    auth,\n    questionTypes,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  loadQuestionTypes,\n  evaluateClaim,\n  PushPopupAlert,\n})(AdminClaimExamView);\n","import React, { useState } from \"react\";\nimport { CgImage } from \"react-icons/cg\";\nimport Loading from \"../../components/Loading/Loading\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport Table from \"../../components/Table/Table\";\nimport ViewPDF from \"../../components/ViewPDF/ViewPDF\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { UserDocumentsInterface } from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { fullScreen, getFileType, isFileImage } from \"../../utils/functions\";\nimport { PositionRequirementTableInterface } from \"./ViewPosition\";\n\ninterface RequirementProps {\n  requirements: PositionRequirementTableInterface[];\n  userDocs: UserDocumentsInterface[];\n}\n\nconst ViewDocRequirements: React.FC<RequirementProps> = (props) => {\n  const [viewDoc, setViewDoc] = useState<UserDocumentsInterface | null>(null);\n  const [loadingImage, setLoadingImage] = useState<boolean>(false);\n  const [isFullscreen, setSetFullscreen] = useState<boolean>(false);\n\n  const isDocumentExist = (\n    category_id: string,\n    sub_category_id: string,\n    field_id: string\n  ): UserDocumentsInterface | undefined => {\n    if (!isEmptyOrSpaces(category_id)) {\n      let userDocs: UserDocumentsInterface[] = props.userDocs.filter(\n        (item) => item.category_id === category_id\n      );\n\n      if (!isEmptyOrSpaces(sub_category_id)) {\n        userDocs = userDocs.filter(\n          (item) =>\n            item.validation_status === \"approved\" &&\n            item.category_id === category_id &&\n            item.sub_category_id === sub_category_id\n        );\n      }\n\n      if (!isEmptyOrSpaces(field_id)) {\n        return userDocs.find(\n          (item) =>\n            item.validation_status === \"approved\" &&\n            item.category_id === category_id &&\n            item.category_subcategory_data === field_id\n        );\n      }\n    }\n    return undefined;\n  };\n  const tableData = (): JSX.Element[] => {\n    let data: PositionRequirementTableInterface[] = props.requirements;\n    if (data.length === 0) {\n      return [\n        <tr key={153} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={3}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    return data.map((item, index) => (\n      <tr\n        key={index + item.field_id}\n        className={`border-b border-gray-200 hover:bg-gray-100 ${\n          !isDocumentExist(\n            item.category_id,\n            item.subcategory_id,\n            item.field_id\n          ) && \"text-yellow-800\"\n        }`}\n      >\n        <td className=\"p-3 text-left whitespace-nowrap\">{index + 1})</td>\n        <td className=\"p-3 text-left\">\n          <span>\n            {isEmptyOrSpaces(item.field_id)\n              ? \"Any \" + item.subcategory_title\n              : item.subcategory_title + \" in \" + item.field_title}\n          </span>\n        </td>\n        <td className={`p-3 text-left text-lg italic`}>\n          {isDocumentExist(item.category_id, item.subcategory_id, item.field_id)\n            ? \"Found\"\n            : \"Not found\"}\n        </td>\n        <td className={`p-3 text-right text-lg italic`}>\n          {isDocumentExist(\n            item.category_id,\n            item.subcategory_id,\n            item.field_id\n          ) && (\n            <button\n              className=\"bg-gray-200 hover:bg-gray-300 rounded font-medium px-2 py-1 focus:outline-none\"\n              onClick={() => {\n                setViewDoc(\n                  isDocumentExist(\n                    item.category_id,\n                    item.subcategory_id,\n                    item.field_id\n                  )!\n                );\n                setLoadingImage(true);\n              }}\n            >\n              View Doc\n            </button>\n          )}\n        </td>\n      </tr>\n    ));\n  };\n  const handleFullScreen = () => {\n    if (isFullscreen) {\n      fullScreen(\"doc-img\", \"CLOSE\");\n      setSetFullscreen(false);\n    } else {\n      setSetFullscreen(true);\n      fullScreen(\"doc-img\", \"OPEN\");\n    }\n  };\n\n  return (\n    <div>\n      <Table\n        columns={[\n          { columnTitle: \"#\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Qualification\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Status\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n        ]}\n        rows={tableData}\n        pagination={false}\n        search={false}\n        thColor=\"gray\"\n      />\n\n      {viewDoc && (\n        <Modal\n          backDrop={true}\n          theme={Themes.default}\n          close={() => {\n            setViewDoc(null);\n            setLoadingImage(false);\n          }}\n          backDropClose={false}\n          widthSizeClass={ModalSize.extraLarge}\n          displayClose={true}\n          padding={{\n            title: true,\n            body: false,\n            footer: false,\n          }}\n          title=\"Doc view\"\n        >\n          {loadingImage && <Loading />}\n          {viewDoc.files && viewDoc.files.length > 0 ? (\n            isFileImage(getFileType(viewDoc.files)) ? (\n              <div className=\"relative\">\n                <img\n                  src={API.AUTH_FILES + viewDoc.files}\n                  alt=\"\"\n                  className={`w-full md:w-auto h-auto md:max-h-screen mx-auto ${\n                    loadingImage && \"hidden\"\n                  }`}\n                  id=\"doc-img\"\n                  onLoad={() => setLoadingImage(false)}\n                  onDoubleClick={() => handleFullScreen()}\n                />\n              </div>\n            ) : (\n              <ViewPDF\n                file_url={API.AUTH_FILES + viewDoc.files}\n                class_name={`w-full h-screen md:max-h-screen mx-auto ${\n                  loadingImage && \"hidden\"\n                }`}\n                frame_title={\"application PDF file view\"}\n                setLoadingFile={setLoadingImage}\n              />\n            )\n          ) : (\n            <div className=\"text-center text-red-400 py-8 animate__animated animate__fadeIn\">\n              <CgImage className=\"mx-auto w-40 h-40\" />\n              <span className=\"font-semibold text-4xl\">No Files Provided</span>\n            </div>\n          )}\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default ViewDocRequirements;\n","import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdCancel, MdInfoOutline, MdTurnedIn } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert, reAssessApplication } from \"../../../actions\";\nimport { evaluateClaim } from \"../../../actions/claiming\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  allClaimApplicationInterface,\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  claimReasonInterface,\n  ClaimStatus,\n  ClaimTypesInterfaceAPI,\n  PositionAPI,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { DATE, showDate } from \"../../../utils/functions\";\nimport { PositionRequirementTableInterface } from \"../../Positions/ViewPosition\";\nimport ViewDocRequirements from \"../../Positions/ViewDocRequirements\";\nimport { isClaimEvaluated } from \"../ClaimDocView\";\nimport { claimResponseBody } from \"./AdminClaimDocView\";\n\nexport const FC_AdminApplicationPositionDistinctCategory = (\n  thisPosition: PositionAPI,\n  documentCategories: DocumentReducerInterface\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n  let requirements = thisPosition.requirements;\n  // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n  for (let req in requirements) {\n    let thisRequirements = requirements[req];\n    // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisCategory = documentCategories.documentCategory\n      ? documentCategories.documentCategory.find(\n          (item) =>\n            item.user_detail_category_id ===\n            thisRequirements.category.user_detail_category_id\n        ) && {\n          title: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.title,\n          user_detail_category_id: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.user_detail_category_id,\n        }\n      : {\n          title: \"\",\n          user_detail_category_id:\n            thisRequirements.category.user_detail_category_id,\n        };\n    // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisSubCategory = documentCategories.documentSubCategory\n      ? documentCategories.documentSubCategory.find(\n          (item) =>\n            item.user_detail_subcategory_id ===\n            thisRequirements.subcategory.user_detail_subcategory_id\n        )\n        ? {\n            title: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.title,\n            user_detail_subcategory_id:\n              documentCategories.documentSubCategory.find(\n                (item) =>\n                  item.user_detail_subcategory_id ===\n                  thisRequirements.subcategory.user_detail_subcategory_id\n              )!.user_detail_subcategory_id,\n            category_id: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.category_id,\n          }\n        : {\n            title: \"\",\n            user_detail_subcategory_id:\n              thisRequirements.subcategory.user_detail_subcategory_id,\n            category_id: \"\",\n          }\n      : {\n          title: \"\",\n          user_detail_subcategory_id:\n            thisRequirements.subcategory.user_detail_subcategory_id,\n          category_id: \"\",\n        };\n    // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n    if (thisCategory) {\n      for (let field in thisRequirements.position_requirement) {\n        // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n        let thisField = documentCategories.documentFields\n          ? documentCategories.documentFields.find(\n              (item) =>\n                item._id === thisRequirements.position_requirement[field]._id\n            )\n            ? {\n                title: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!.title,\n                _id: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n            : {\n                title: \"\",\n                _id: thisRequirements.position_requirement[field]._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n          : {\n              title: \"\",\n              _id: thisRequirements.position_requirement[field]._id,\n              required: thisRequirements.position_requirement[field].required,\n            };\n        // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n        PositionsTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: thisField.title,\n          field_id: thisField._id,\n          required: thisField.required,\n        });\n      }\n\n      // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n      ) {\n        DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n        DistinctCategoriesTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: \"\",\n          subcategory_title: \"\",\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n\n      // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctSubCategoriesIds.includes(\n          thisSubCategory.user_detail_subcategory_id\n        )\n      ) {\n        DistinctSubCategoriesIds.push(\n          thisSubCategory.user_detail_subcategory_id\n        );\n        DistinctSubCategoriesTemp.push({\n          category_id: thisSubCategory.category_id,\n          category_title: \"\",\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n    }\n  }\n  // DistinctCategoriesIds.;\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\ntype AdminClaimAppViewProps = {\n  thisApplication: allClaimApplicationInterface;\n  thisPosition: PositionAPI;\n  documentCategories: DocumentReducerInterface;\n  thisClaim: CandidateClaimInterface;\n  claimTypes: ClaimTypesInterfaceAPI[];\n  systemPositions: PositionAPI[];\n  claimReasons: claimReasonInterface[] | null;\n\n  // REDUX ==================\n  auth: Auth;\n  reAssessApplication: Function;\n  evaluateClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst AdminClaimAppView: React.FC<AdminClaimAppViewProps> = (props) => {\n  const [viewPosition, setViewPosition] = useState<boolean>(true);\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n  const [actionTaken, setActionTaken] = useState<ClaimDecisionStatus | null>(\n    null\n  );\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [responseMsg, setResponseMsg] = useState<string>(\"\");\n\n  const handleVerify = async () => {\n    if (!actionTaken) {\n      setFormError({\n        element: \"action\",\n        msg: \"Action is required!\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    if (isEmptyOrSpaces(responseMsg)) {\n      setFormError({\n        element: \"comment\",\n        msg: \"Reason of rejection is required\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    let subClaim = props.thisClaim.claims.find(\n      (item) => item.level === props.thisClaim.claim_level\n    );\n\n    if (subClaim) {\n      setLoadingRequest(true);\n      const api_body: claimResponseBody = {\n        sub_claim_id: subClaim.id,\n        evaluation_comment: responseMsg,\n        evaluated_by: props.auth.user.user_id,\n        decision_taken_status: actionTaken,\n        evaluator_name: props.auth.user.fname + \" \" + props.auth.user.lname,\n        evaluator_email: props.auth.user.email,\n      };\n\n      try {\n        const res = await axios.put<CandidateClaimInterface>(\n          `${API.CLAIMING}/user/evaluate/${props.thisClaim._id}`,\n          api_body\n        );\n        if (res) {\n          console.log(\"====================================\");\n          console.log({ evaluate_claim_res: res });\n          console.log(\"====================================\");\n          props.evaluateClaim(res.data);\n          // REVALIDATED DOCUMENT IF IT IS APPROVED =========================\n          if (actionTaken === ClaimDecisionStatus.ACCEPTED) {\n            await overrideDecision();\n          }\n          props.PushPopupAlert({\n            title: `Claim responded successfully!`,\n            theme: PopupAlertTheme.success,\n          });\n          // setDocumentId(\"null\");\n          setResponseMsg(\"\");\n          setActionTaken(null);\n        }\n      } catch (error) {\n        console.error(error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      setLoadingRequest(false);\n    }\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  const overrideDecision = async () => {\n    try {\n      const res = await axios.patch(\n        `${API.APPLICATION}/tolerateappl/${props.thisClaim.claiming_on_id}`,\n        {\n          user_id: props.auth.user.user_id,\n          comment: responseMsg,\n          application_status: ApplicationStates.Shortlisted,\n        }\n      );\n\n      res.data &&\n        props.reAssessApplication({\n          application_id: props.thisClaim.claiming_on_id,\n          application_status: ApplicationStates.Shortlisted,\n        });\n    } catch (error) {\n      console.error({ code_error: error });\n      PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      // errorToText(error);\n    }\n    setLoadingRequest(false);\n  };\n\n  const getPositionById = (position_id: string): PositionAPI | undefined => {\n    let result = props.systemPositions.find(\n      (item) => item.position_id === position_id\n    );\n\n    return result;\n  };\n\n  return (\n    <section>\n      <div className=\"w-full py-1 divide-y-2 space-y-4\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          {/* DISPLAY PROFILE ==================================================== */}\n          <section className=\"w-full mb-4 -mt-2 pb-3 px-4 bg-white\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center gap-2 px-12\">\n                <span className={`italic text-blue-600`}>Applicant:</span>\n                <span className=\"text-blue-800 font-bold text-xl\">\n                  {props.thisClaim.userDetails.user_info.fname +\n                    \" \" +\n                    props.thisClaim.userDetails.user_info.lname}\n                </span>\n              </div>\n              {false && (\n                <button\n                  type=\"button\"\n                  className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                  onClick={() => setViewPosition(!viewPosition)}\n                >\n                  {viewPosition ? \"Hide\" : \"More\"}\n                </button>\n              )}\n            </div>\n          </section>\n          {/* DISPLAY POSITION ==================================================== */}\n          <section className=\"w-full mb-4 bg-white px-4 py-2 rounded\">\n            <div className=\"bg-white w-full\">\n              <div className=\"text-gray-800 text-2xl font-bold\">\n                Position Details\n              </div>\n              <div className=\"flex items-center\">\n                <div className=\"flex items-center gap-2\">\n                  <span className={`italic text-gray-600`}>Name:</span>\n                  <span className=\"text-gray-800 font-bold text-2xl\">\n                    {getPositionById(props.thisApplication.position)\n                      ? getPositionById(props.thisApplication.position)!\n                          .position_title\n                      : \"Position not found\"}\n                  </span>\n                </div>\n              </div>\n              <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                <span className={`italic`}>Desc:</span>\n                <span className=\"font-semibold\">\n                  {getPositionById(props.thisApplication.position)\n                    ? getPositionById(props.thisApplication.position)!\n                        .description\n                    : \"\"}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                <span className={`italic`}>School level:</span>\n                <span className=\"font-semibold\">\n                  {getPositionById(props.thisApplication.position)\n                    ? getPositionById(props.thisApplication.position)!\n                        .school_level_id.school_level_name\n                    : \"\"}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                <span className={`italic`}>Institute:</span>\n                <span className=\"font-semibold\">\n                  {getPositionById(props.thisApplication.position)\n                    ? getPositionById(props.thisApplication.position)!\n                        .education_institute_id.education_category_title\n                    : \"\"}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                <span className={`italic`}>Exams:</span>\n                <span className=\"flex items-center gap-2\">\n                  {getPositionById(props.thisApplication.position) ? (\n                    getPositionById(\n                      props.thisApplication.position\n                    )!.courses.map((item, index) => (\n                      <div\n                        key={index + item.course_id}\n                        className=\"flex items-center gap-1\"\n                      >\n                        <span className=\"font-semibold\">\n                          {item.course_name}\n                        </span>\n                        <span className=\"text-gray-600\">\n                          ({item.course_code})\n                        </span>\n                        {index !==\n                          getPositionById(props.thisApplication.position)!\n                            .courses.length -\n                            1 && \",\"}\n                      </div>\n                    ))\n                  ) : (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"No courses found\"}\n                    />\n                  )}\n                </span>\n              </div>\n\n              <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                Position Requirements\n              </div>\n              {getPositionById(props.thisApplication.position) ? (\n                getPositionById(props.thisApplication.position)!.requirements\n                  .length > 0 ? (\n                  FC_AdminApplicationPositionDistinctCategory(\n                    getPositionById(props.thisApplication.position)!,\n                    props.documentCategories\n                  ).DistinctCategoriesTemp.map((item, index) => (\n                    <div\n                      className=\"bg-gray-100props.thisApplication.position rounded p-2\"\n                      key={index + item.category_id}\n                    >\n                      <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                        <MdTurnedIn />\n                        <span>{item.category_title}</span>\n                      </div>\n                      <div className=\"border bg-white mt-1\">\n                        <ViewDocRequirements\n                          requirements={FC_AdminApplicationPositionDistinctCategory(\n                            getPositionById(props.thisApplication.position)!,\n                            props.documentCategories\n                          ).PositionsTemp.filter(\n                            (req) => req.category_id === item.category_id\n                          )}\n                          userDocs={props.thisClaim.userDetails.details}\n                        />\n                      </div>\n                    </div>\n                  ))\n                ) : (\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"No requirements\"}\n                  ></NoResult>\n                )\n              ) : (\n                <NoResult\n                  theme={NoResultThemes.Dark}\n                  value={\"No requirements\"}\n                ></NoResult>\n              )}\n            </div>\n          </section>\n          {/* END DISPLAY POSITION ==================================================== */}\n          {/* -------------------------------------------------------------------------------- */}\n          {/* END DISPLAY PROFILE ==================================================== */}\n          {/* {selectedTab === viewTabs.profile && (\n            <div className=\"flex items-center\">\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Position name:</span>\n                <span className=\"text-gray-800 font-bold text-2xl\">\n                  {getPositionById(props.thisApplication.position)\n                    ? getPositionById(props.thisApplication.position)!\n                        .position_title\n                    : \"Position not found\"}\n                </span>\n              </div>\n            </div>\n          )} */}\n          <section className=\"px-4 py-2 bg-white rounded\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Status:</span>\n              <span\n                className={`font-bold ${\n                  props.thisClaim.previous\n                    ? props.thisClaim.previous.status ===\n                      ApplicationStates.Rejected\n                    : props.thisApplication.application_status ===\n                      ApplicationStates.Rejected\n                    ? \"text-yellow-900\"\n                    : \"text-blue-600\"\n                } rounded px-3 py-1`}\n              >\n                {props.thisClaim.previous\n                  ? capitalizeFirstLetter(props.thisClaim.previous.status)\n                  : capitalizeFirstLetter(\n                      props.thisApplication.application_status\n                    )}\n              </span>\n            </div>\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Evaluated by:</span>\n              <span className=\"font-semibold\">\n                {props.thisClaim.previous.evaluater.name}\n              </span>\n            </div>\n            {false && (\n              <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                <span className={`italic`}>Session:</span>\n                <span className=\"font-bold text-gray-900 py-1\">\n                  {props.thisApplication.application_session}\n                </span>\n              </div>\n            )}\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Date:</span>\n              <span className=\"font-bold text-gray-900 py-1\">\n                {DATE(props.thisApplication.createdAt)}\n              </span>\n            </div>\n            <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Reason:</span>\n              <span\n                className=\"font-normal\"\n                dangerouslySetInnerHTML={{\n                  __html: props.thisClaim.previous\n                    ? props.thisClaim.previous.reason\n                    : props.thisApplication.override_by.comment,\n                }}\n              ></span>\n            </div>\n          </section>\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVEL 1 DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section\n              className=\"flex flex-col px-4 pt-2 pb-3 rounded bg-white\"\n              key={index + claim.id}\n            >\n              <div className=\"text-gray-700 italic font-bold\">\n                Claim Comment (level {index + 1})\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2 mt-1 border rounded px-4 py-1 bg-gray-50\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-600 text-xs\">\n                  {showDate(claim.createdAt)}\n                  {/* {showDate(claim.createdAt) +\n                    \" at \" +\n                    moment.unix(claim.date_created).format(\"MM/DD/YYYY\")} */}\n                </span>\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-700 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span\n                        className=\"font-normal\"\n                        dangerouslySetInnerHTML={{\n                          __html: claim.evaluation_comment,\n                        }}\n                      ></span>\n                    </div>\n                  </div>\n                </section>\n              )}\n            </section>\n          ))}\n        {/* END CLAIM LEVEL 1 DETAILS ==================================================== */}\n      </div>\n\n      {/* FOOTER INITIAL ========================================== */}\n      {!actionTaken && (\n        <section className=\"flex items-center justify-between bg-gray-50 rounded mt-3\">\n          {/* SHOWING STATUS ===================================== */}\n          <div className=\"mx-4 my-4\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n          </div>\n\n          {props.thisClaim.last_claim_status === ClaimStatus.PENDING && (\n            <div className=\"flex items-center gap-2 px-2\">\n              <button\n                className={`px-4 py-2 font-semibold text-red-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-red-700 hover:bg-red-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.REJECTED);\n                }}\n              >\n                <MdCancel className=\"w-5 h-5\" />\n                <span>Reject</span>\n              </button>\n              <button\n                className={`px-4 py-2 font-semibold text-blue-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-blue-700 hover:bg-blue-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.ACCEPTED);\n                }}\n              >\n                <FaRegCheckCircle className=\"w-5 h-5\" />\n                <span>Accept</span>\n              </button>\n            </div>\n          )}\n        </section>\n      )}\n      {/* END FOOTER INITIAL ========================================== */}\n\n      {/* ======================================================== */}\n      {/* FOOTER RESPONSE ========================================== */}\n      {actionTaken && (\n        <section className=\"my-5 overflow-x-auto\">\n          <div className=\"italic text-gray-700 text-base my-1 mx-2\">\n            Selected decision:{\" \"}\n            <span\n              className={`font-semibold text-lg ${\n                actionTaken === ClaimDecisionStatus.ACCEPTED\n                  ? \"text-blue-700\"\n                  : \"text-yellow-800\"\n              }`}\n            >\n              {actionTaken === ClaimDecisionStatus.ACCEPTED\n                ? \"Approved\"\n                : \"Rejected\"}\n            </span>\n          </div>\n          {/* right part */}\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your decision...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  formError && formError.element === \"comment\" ? \"red\" : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={responseMsg}\n                onChange={(e) => {\n                  setResponseMsg(e.target.value);\n                  setFormError(null);\n                }}\n                disabled={loadingRequest}\n              ></textarea>\n              {formError && formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  setResponseMsg(\"\");\n                  setActionTaken(null);\n                  setFormError(null);\n                }}\n                disabled={loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={loadingRequest}\n                onClick={() =>\n                  window.confirm(\n                    `Are you sure you want to ${\n                      actionTaken === ClaimDecisionStatus.ACCEPTED\n                        ? \"approve\"\n                        : \"rejected\"\n                    } this document?`\n                  ) && handleVerify()\n                }\n              >\n                {loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n          {/* end right part */}\n        </section>\n      )}\n      {/* END FOOTER RESPONSE ========================================== */}\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n}: StoreState): {\n  auth: Auth;\n} => {\n  return {\n    auth: auth,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  evaluateClaim,\n  reAssessApplication,\n  PushPopupAlert,\n})(AdminClaimAppView);\n","import axios from \"axios\";\nimport React from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdCancel, MdInfoOutline } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { adminDisplayClaimTitle } from \".\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport { evaluateClaim } from \"../../../actions/claiming\";\nimport { verifyDocument } from \"../../../actions/document\";\nimport { VerifyDocumentInterface } from \"../../../actions/users\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  claimReasonInterface,\n  ClaimStatus,\n  ClaimTypesInterfaceAPI,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport {\n  DocValidationStatusInterface,\n  UserDocumentsInterface,\n} from \"../../../shared/interfaces\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { showDate } from \"../../../utils/functions\";\nimport { isClaimEvaluated } from \"../ClaimDocView\";\n\nexport type claimResponseBody = {\n  sub_claim_id: string;\n  evaluation_comment: string;\n  evaluated_by: string;\n  evaluator_name: string;\n  evaluator_email: string;\n  decision_taken_status: ClaimDecisionStatus;\n};\n\ntype AdminClaimDocViewProps = {\n  thisDoc: UserDocumentsInterface;\n  documentCategories: DocumentReducerInterface;\n  thisClaim: CandidateClaimInterface;\n  claimReasons: claimReasonInterface[] | null;\n  candidateId: string;\n  claimTypes: ClaimTypesInterfaceAPI[];\n  viewImage: boolean;\n  setViewImage: (value: boolean) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  actionTaken: ClaimDecisionStatus | null;\n  setActionTaken: (value: ClaimDecisionStatus | null) => void;\n  responseMsg: string;\n  setResponseMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX ==================\n  auth: Auth;\n  verifyDocument: Function;\n  evaluateClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst AdminClaimDocView: React.FC<AdminClaimDocViewProps> = (props) => {\n  const handleVerify = async () => {\n    if (!props.actionTaken) {\n      props.setFormError({\n        element: \"action\",\n        msg: \"Action is required!\",\n      });\n      return props.setLoadingRequest(false);\n    }\n\n    if (isEmptyOrSpaces(props.responseMsg)) {\n      props.setFormError({\n        element: \"comment\",\n        msg: \"Reason of rejection is required\",\n      });\n      return props.setLoadingRequest(false);\n    }\n\n    let subClaim = props.thisClaim.claims.find(\n      (item) => item.level === props.thisClaim.claim_level\n    );\n\n    if (subClaim) {\n      props.setLoadingRequest(true);\n      const api_body: claimResponseBody = {\n        sub_claim_id: subClaim.id,\n        evaluation_comment: props.responseMsg,\n        evaluated_by: props.auth.user.user_id,\n        decision_taken_status: props.actionTaken,\n        evaluator_name: props.auth.user.fname + \" \" + props.auth.user.lname,\n        evaluator_email: props.auth.user.email,\n      };\n\n      try {\n        const res = await axios.put<CandidateClaimInterface>(\n          `${API.CLAIMING}/user/evaluate/${props.thisClaim._id}`,\n          api_body\n        );\n        if (res) {\n          console.log({ evaluate_claim_res: res });\n          props.evaluateClaim(res.data);\n          // REVALIDATED DOCUMENT IF IT IS APPROVED =========================\n          if (props.actionTaken === ClaimDecisionStatus.ACCEPTED) {\n            await FC_DocValidation();\n          }\n          props.PushPopupAlert({\n            title: `Claim responded successfully!`,\n            theme: PopupAlertTheme.success,\n          });\n          // setDocumentId(\"null\");\n          props.setResponseMsg(\"\");\n          props.setActionTaken(null);\n        }\n      } catch (error) {\n        console.error(error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      props.setLoadingRequest(false);\n    }\n  };\n\n  const FC_DocValidation = async () => {\n    const api_body: VerifyDocumentInterface = {\n      user_id: props.thisClaim.user,\n      doc_id: props.thisClaim.claiming_on_id,\n      validation_status:\n        props.actionTaken === ClaimDecisionStatus.ACCEPTED\n          ? DocValidationStatusInterface.APPROVED\n          : DocValidationStatusInterface.REJECTED,\n      validated_by: {\n        user_id: props.auth.user.user_id,\n        comment: props.responseMsg,\n        validation_status:\n          props.actionTaken === ClaimDecisionStatus.ACCEPTED\n            ? DocValidationStatusInterface.APPROVED\n            : DocValidationStatusInterface.REJECTED,\n      },\n      in_education: false,\n      disability: false,\n    };\n    const api_redux: VerifyDocumentInterface = {\n      user_id: props.thisClaim.user,\n      doc_id: props.thisClaim.claiming_on_id,\n      validation_status:\n        props.actionTaken === ClaimDecisionStatus.ACCEPTED\n          ? DocValidationStatusInterface.APPROVED\n          : DocValidationStatusInterface.REJECTED,\n      validated_by: {\n        user_id: props.auth.user.user_id,\n        comment: props.responseMsg,\n        validation_status:\n          props.actionTaken === ClaimDecisionStatus.ACCEPTED\n            ? DocValidationStatusInterface.APPROVED\n            : DocValidationStatusInterface.REJECTED,\n        date: \"\",\n      },\n      in_education: false,\n      disability: false,\n    };\n\n    try {\n      const res = await axios.post<VerifyDocumentInterface>(\n        `${API.AUTH}/validateuserdoc`,\n        api_body\n      );\n      if (res) {\n        props.verifyDocument(api_redux);\n        await FC_shortListing(props.thisClaim.user);\n        // setDocumentId(\"null\");\n      }\n    } catch (error) {\n      console.error(error);\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  const FC_shortListing = async (candidate_id: string) => {\n    try {\n      const res = await axios.patch(\n        `${API.APPLICATION}/doccheckshortlist/${candidate_id}`\n      );\n      console.log({ res });\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2\">\n              <span className={`italic text-gray-600`}>Names:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.thisClaim.userDetails.user_info.fname +\n                  \" \" +\n                  props.thisClaim.userDetails.user_info.lname}\n              </span>\n            </div>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewImage(!props.viewImage)}\n            >\n              {props.viewImage ? \"Hide\" : \"View\"}\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <span className={`italic text-gray-600`}>Title:</span>\n            <span className=\"text-gray-800 font-bold text-2xl\">\n              {/* {ClaimGetDocTitle(props.documentCategories, props.thisDoc).main} */}\n              {props.thisClaim.userDetails.details.filter(\n                (item) => item.validation_status !== \"waiting\"\n              ).length > 0\n                ? adminDisplayClaimTitle(\n                    props.documentCategories,\n                    props.thisClaim.userDetails.details.filter(\n                      (item) => item.validation_status !== \"waiting\"\n                    ),\n                    props.thisClaim\n                  )\n                : \"-\"}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span className=\"font-bold text-yellow-900 rounded px-3 py-1\">\n              {props.thisClaim.previous\n                ? capitalizeFirstLetter(props.thisClaim.previous.status)\n                : capitalizeFirstLetter(props.thisDoc.validation_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {props.thisClaim.previous.evaluater.name}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisClaim.previous\n                ? props.thisClaim.previous.reason\n                : props.thisDoc.validated_by.commet}\n            </span>\n          </div>\n\n          {/* DISPLAY IMAGE ==================================================== */}\n          {props.viewImage && (\n            <div className=\"w-full my-1 animate__animated animate__fadeIn\">\n              <img\n                src={`${API.AUTH_FILES}/${props.thisDoc.files}`}\n                alt=\"doc file\"\n                className={`w-full animate__animated animate__fadeIn`}\n              />\n            </div>\n          )}\n          {/* END DISPLAY IMAGE ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVEL 1 DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              <div className=\"text-gray-700 italic font-bold\">\n                Claim Comment (level {index + 1})\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2 mt-1 border rounded px-4 py-1 bg-gray-50\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt)}\n                </span>\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-700 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n            </section>\n          ))}\n        {/* END CLAIM LEVEL 1 DETAILS ==================================================== */}\n      </div>\n\n      {/* FOOTER INITIAL ========================================== */}\n      {!props.actionTaken && (\n        <section className=\"flex items-center justify-between bg-gray-50 rounded mt-3\">\n          {/* SHOWING STATUS ===================================== */}\n          <div className=\"mx-4\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n          </div>\n\n          {props.thisClaim.last_claim_status === ClaimStatus.PENDING && (\n            <div className=\"flex items-center gap-2 px-2\">\n              <button\n                className={`px-4 py-2 font-semibold text-red-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-red-700 hover:bg-red-800`}\n                onClick={() => {\n                  props.setActionTaken(ClaimDecisionStatus.REJECTED);\n                }}\n              >\n                <MdCancel className=\"w-5 h-5\" />\n                <span>Reject</span>\n              </button>\n              <button\n                className={`px-4 py-2 font-semibold text-blue-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-blue-700 hover:bg-blue-800`}\n                onClick={() => {\n                  props.setActionTaken(ClaimDecisionStatus.ACCEPTED);\n                }}\n              >\n                <FaRegCheckCircle className=\"w-5 h-5\" />\n                <span>Accept</span>\n              </button>\n            </div>\n          )}\n        </section>\n      )}\n      {/* END FOOTER INITIAL ========================================== */}\n\n      {/* ======================================================== */}\n      {/* FOOTER RESPONSE ========================================== */}\n      {props.actionTaken && (\n        <section className=\"my-5 overflow-x-auto\">\n          <div className=\"italic text-gray-700 text-base my-1 mx-2\">\n            Selected decision:{\" \"}\n            <span\n              className={`font-semibold text-lg ${\n                props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                  ? \"text-blue-700\"\n                  : \"text-yellow-800\"\n              }`}\n            >\n              {props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                ? \"Approved\"\n                : \"Rejected\"}\n            </span>\n          </div>\n          {/* right part */}\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your decision...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.responseMsg}\n                onChange={(e) => {\n                  props.setResponseMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setResponseMsg(\"\");\n                  props.setActionTaken(null);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() =>\n                  window.confirm(\n                    `Are you sure you want to ${\n                      props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                        ? \"approve\"\n                        : \"rejected\"\n                    } this document?`\n                  ) && handleVerify()\n                }\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n          {/* end right part */}\n        </section>\n      )}\n      {/* END FOOTER RESPONSE ========================================== */}\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n}: StoreState): {\n  auth: Auth;\n} => {\n  return {\n    auth: auth,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  evaluateClaim,\n  verifyDocument,\n  PushPopupAlert,\n})(AdminClaimDocView);\n","import React, { Component } from \"react\";\nimport { MdArrowBack, MdInfoOutline } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Auth, loadCourses, PushPopupAlert } from \"../../../actions\";\nimport {\n  getAllClaims,\n  getAllApplications,\n  getClaimReasons,\n  getAllAnswers,\n} from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport { getPositions } from \"../../../actions/settings\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport TableLoading from \"../../../components/Loading/TableLoading\";\nimport { SideNavigation } from \"../../../components/Navigation/SideNavigation\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  SessionPlanInterface,\n  PositionAPI,\n  allClaimApplicationInterface,\n  CandidateClaimInterface,\n  PlansTypeKeys,\n  ClaimDecisionStatus,\n  ClaimTypesInterface,\n  course,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { UserDocumentsInterface } from \"../../../shared/interfaces\";\nimport { DATE } from \"../../../utils/functions\";\nimport search from \"../../../utils/search\";\nimport { getClaimById, whichClaimStatus, whichClaimType } from \"../Candidate\";\nimport { getCourseById, getCourseIdBySheetId } from \"../Candidate/FormExamList\";\nimport ClaimHeaderTitle from \"../ClaimHeaderTitle\";\nimport AdminClaimAppView from \"./AdminClaimAppView\";\nimport AdminClaimDocView from \"./AdminClaimDocView\";\nimport AdminClaimExamView from \"./AdminClaimExamView\";\nimport AdminFilterByType, {\n  filterClaimsByClaimType,\n} from \"./AdminFilterByType\";\n\n// export const getUserDocuments = (\n//   userList: UserInterface[],\n//   user_id: String\n// ): { user: UserInterface; document: UserDocumentsInterface[] } | null => {\n//   const thisUser = userList.find((item) => item.user_id === user_id);\n//   if (thisUser) {\n//     const thisDoc = thisUser.details.filter(\n//       (item) => item.validation_status !== \"waiting\"\n//     );\n//     return { user: thisUser, document: thisDoc };\n//   }\n//   return null;\n// };\n\nexport const adminDisplayClaimTitle = (\n  documentCategories: DocumentReducerInterface,\n  candidateDocuments: UserDocumentsInterface[],\n  thisClaim: CandidateClaimInterface\n): string => {\n  let result: string = \"\";\n\n  // CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n  if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n    let thisDoc = candidateDocuments.find(\n      (item) => item.doc_id === thisClaim.claiming_on_id\n    );\n    result = thisDoc\n      ? AdminClaimGetDocTitle(documentCategories, thisDoc).main\n      : \"Document not found\";\n  }\n  // END CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n\n  return result;\n};\n\nexport const AdminClaimGetDocTitle = (\n  documentCategories: DocumentReducerInterface,\n  doc: UserDocumentsInterface\n): { category: string; sub_category: string; field: string; main: string } => {\n  let DocCategory: string = \"\",\n    DocSubCategory: string = \"\",\n    DocField: string = \"\",\n    DocTitle: string = \"\";\n  if (\n    doc.sub_category_id &&\n    doc.sub_category_id.length > 0 &&\n    documentCategories.documentSubCategory\n  ) {\n    DocTitle = documentCategories.documentSubCategory.filter(\n      (c) => c.user_detail_subcategory_id === doc.sub_category_id\n    )[0].title;\n    DocSubCategory = DocTitle;\n  } else if (\n    doc.category_id.length > 0 &&\n    documentCategories.documentCategory\n  ) {\n    DocTitle = documentCategories.documentCategory.filter(\n      (c) => c.user_detail_category_id === doc.category_id\n    )[0].title;\n    DocCategory = DocTitle;\n  }\n  if (\n    doc.category_subcategory_data.length > 0 &&\n    documentCategories.documentFields\n  ) {\n    DocField = documentCategories.documentFields.filter(\n      (c) => c._id === doc.category_subcategory_data\n    )[0].title;\n    DocTitle += \" in \" + DocField;\n  }\n\n  return {\n    category: DocCategory,\n    sub_category: DocSubCategory,\n    field: DocField,\n    main: DocTitle,\n  };\n};\n\nexport const getApplicationById = (\n  allApplications: allClaimApplicationInterface[] | null,\n  systemPositions: PositionAPI[] | null,\n  application_id: String\n): {\n  application: allClaimApplicationInterface;\n  position: PositionAPI;\n} | null => {\n  if (allApplications) {\n    let thisApplication = allApplications.find(\n      (item) => item._id === application_id\n    );\n    if (thisApplication && systemPositions) {\n      let thisPosition = systemPositions.find(\n        (item) => item.position_id === thisApplication!.position\n      );\n      if (thisPosition) {\n        return { application: thisApplication, position: thisPosition };\n      }\n    }\n  }\n  return null;\n};\n\ntype AppProps = {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  systemPositions: PositionAPI[] | null;\n  courses: course[] | null;\n  loadCourses: Function;\n  getPositions: Function;\n  getClaimReasons: Function;\n  getAllApplications: Function;\n  getAllClaims: Function;\n  getAllAnswers: Function;\n  GetAllSessionPlans: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  verifyAllDocument: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype AppState = {\n  loading: boolean;\n  loadingData: boolean;\n  thisPeriod: SessionPlanInterface | null;\n  viewClaim: boolean;\n  periodChanged: boolean;\n  claimId: string | null;\n  claimType: string | null;\n  candidateId: string | null;\n  searchClaim: string;\n\n  // FOR FORM ================\n  viewImage: boolean;\n  loadingRequest: boolean;\n  actionTaken: ClaimDecisionStatus | null;\n  responseMsg: string;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n};\n\nclass Index extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingData: false,\n      thisPeriod: null,\n      viewClaim: false,\n      periodChanged: false,\n      claimId: null,\n      claimType: null,\n      candidateId: null,\n      searchClaim: \"\",\n\n      // FOR FORM ================\n      viewImage: false,\n      loadingRequest: false,\n      actionTaken: null,\n      responseMsg: \"\",\n      formError: null,\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingData = (value: boolean) => {\n    this.setState({ loadingData: value });\n  };\n\n  setPeriodChanged = (value: boolean) => {\n    this.setState({ periodChanged: value });\n  };\n\n  setThisPeriod = (value: SessionPlanInterface | null) => {\n    this.setState({ thisPeriod: value });\n  };\n\n  setViewClaim = (value: boolean) => {\n    this.setState({ viewClaim: value });\n  };\n\n  // ------------------------------\n  setClaimId = (value: string | null) => {\n    this.setState({ claimId: value });\n  };\n  setClaimType = (value: string | null) => {\n    this.setState({ claimType: value });\n  };\n  setCandidateId = (value: string | null) => {\n    this.setState({ candidateId: value });\n  };\n  setViewImage = (value: boolean) => {\n    this.setState({ viewImage: value });\n  };\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n\n  setActionTaken = (value: ClaimDecisionStatus | null) => {\n    this.setState({ actionTaken: value });\n  };\n\n  setResponseMsg = (value: string) => {\n    this.setState({ responseMsg: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n\n  setDefaultSession = (sessions: SessionPlanInterface[]) => {\n    // SETTING ACTIVE SESSION ==========================\n    if (this.state.thisPeriod === null) {\n      let thisSession = sessions.find((item) => item.is_active === true);\n      this.setThisPeriod(thisSession ? thisSession : sessions[0]);\n      this.loadsAllClaims(thisSession ? thisSession : sessions[0]);\n    }\n  };\n\n  setSearchClaim = (value: string) => {\n    this.setState({ searchClaim: value });\n  };\n\n  loadsAllClaims = (thisSession: SessionPlanInterface) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (this.props.claiming.allClaims === null) {\n      this.props.getAllClaims(\n        2,\n        thisSession.session_plan_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    }\n  };\n\n  loadsApplications = (application_id: string) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (\n      !this.props.claiming.allApplications.find(\n        (item) => item._id === application_id\n      )\n    ) {\n      this.props.getAllApplications(\n        application_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    }\n  };\n\n  loadsController = (file_id: string, claimType: PlansTypeKeys) => {\n    if (claimType === PlansTypeKeys.APPLICATION)\n      this.loadsApplications(file_id);\n    if (claimType === PlansTypeKeys.EXAMINATION) this.loadsAlAnswers(file_id);\n  };\n\n  loadsAlAnswers = (answersheet_id: string) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (\n      !this.props.claiming.allAnswer.find(\n        (item) => item.answer_sheet_id === answersheet_id\n      )\n    ) {\n      this.props.getAllAnswers(\n        answersheet_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    }\n  };\n\n  componentDidMount = () => {\n    // LOADING APPLICATION SESSION ====================================\n    if (this.props.application_sessions === null) {\n      this.props.GetAllSessionPlans(\n        (status: boolean, msg: string, data?: SessionPlanInterface[]) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data && data.length > 0) {\n              this.setDefaultSession(data);\n            }\n          }\n        }\n      );\n    } else if (this.props.application_sessions.length > 0) {\n      this.setDefaultSession(this.props.application_sessions);\n    }\n\n    // LOADING DOCUMENT CATEGORIES ==========================\n    if (!this.props.documentReducer.documentCategory) {\n      this.props.getDocumentCategory();\n      this.setLoading(false);\n    }\n\n    // LOADING DOCUMENT CLARIFICATIONS ==========================\n    if (!this.props.documentReducer.documentSubCategory) {\n      this.props.getDocumentSubCategory();\n      this.setLoading(false);\n    }\n\n    // LOADING DOCUMENT FIELDS ==========================\n    if (!this.props.documentReducer.documentFields) {\n      this.props.getDocumentFields();\n      this.setLoading(false);\n    }\n\n    if (this.props.systemPositions === null) {\n      this.props.getPositions((status: boolean, msg: string) => {\n        this.setLoading(status);\n        console.log({ status: status, msg: msg });\n        if (msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n\n    if (this.props.claiming.claimReasons === null) {\n      this.props.getClaimReasons((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (!status) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n\n    if (\n      this.props.courses === null ||\n      (this.props.courses.length === 0 && this.state.loading)\n    ) {\n      this.props.loadCourses(this.setLoading);\n      this.setLoading(false);\n    } else {\n      this.setLoading(false);\n    }\n  };\n\n  displayClaimTitle = (\n    thisClaim: CandidateClaimInterface\n  ): string | JSX.Element => {\n    let result: string = thisClaim.claiming_on_id;\n    if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      let thisDocs = thisClaim.userDetails.details.filter(\n        (item) => item.validation_status !== \"waiting\"\n      );\n      result =\n        thisDocs.length > 0\n          ? adminDisplayClaimTitle(\n              this.props.documentReducer,\n              thisDocs,\n              thisClaim\n            )\n          : \"Document not found\";\n    }\n    if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n      if (this.props.claiming.allApplications) {\n        let thisApplication = this.props.claiming.allApplications.find(\n          (item) => item._id === thisClaim.claiming_on_id\n        );\n        if (\n          thisApplication &&\n          this.props.claiming.allApplications &&\n          this.props.systemPositions\n        ) {\n          let thisPosition = this.props.systemPositions.find(\n            (item) => item.position_id === thisApplication!.position\n          );\n          if (thisPosition) {\n            result = thisPosition.position_title;\n          } else {\n            result = \"Application not found\";\n          }\n        }\n      }\n    }\n\n    if (\n      thisClaim.type_key === PlansTypeKeys.EXAMINATION &&\n      this.props.courses &&\n      this.props.claiming.allAnswer\n    ) {\n      let thisAnswer = getCourseIdBySheetId(\n        this.props.claiming.allAnswer,\n        thisClaim.claiming_on_id\n      );\n      if (thisAnswer && getCourseById(this.props.courses, thisAnswer.course)) {\n        result =\n          \"Exam of \" +\n          getCourseById(this.props.courses, thisAnswer.course)!.course_name;\n      } else {\n        result = \"Unknown exam\";\n      }\n    }\n\n    return result;\n  };\n\n  onPeriodChange = (period_id: string) => {\n    this.setPeriodChanged(true);\n    this.props.getAllClaims(2, period_id, (status: boolean, msg: string) => {\n      !status && this.setPeriodChanged(false);\n      this.setLoadingData(status);\n      if (status === false && msg.length) {\n        this.props.PushPopupAlert({\n          title: msg,\n          theme: PopupAlertTheme.danger,\n        });\n      }\n    });\n  };\n\n  getLastClaimDate = (claim: CandidateClaimInterface): string => {\n    let result: string = DATE(claim.createdAt);\n    const claimsLength: number = claim.claims.length;\n    result = DATE(claim.claims[claimsLength - 1].createdAt);\n    return result;\n  };\n\n  render() {\n    if (this.props.application_sessions === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    if (this.props.application_sessions.length === 0) {\n      return (\n        <div className=\"bg-yellow-100 rounded flex flex-col items-center justify-center p-6 my-8 text-yellow-900 border border-yellow-900\">\n          <MdInfoOutline className=\"text-6xl md:text-9xl\" />\n          <div className=\"text-center flex flex-col\">\n            <span className=\"text-2xl md:text-4xl font-extrabold\">\n              No active session\n            </span>\n            <span className=\"text-lg\">\n              Please Wait for the system to publish the sessions or contact the\n              administrator\n            </span>\n          </div>\n        </div>\n      );\n    }\n\n    if (this.props.claiming.allClaims === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {/* SIDE NAVIGATION */}\n        {!this.state.viewClaim && (\n          <SideNavigation>\n            {/* FILTER SECTION */}\n            <AdminFilterByType loadingClaims={this.state.loadingData} />\n            {/* END FILTER SECTION */}\n          </SideNavigation>\n        )}\n        {/* END SIDE NAVIGATION */}\n\n        {/* 00000000000000000000000000000000000 */}\n\n        {/* CLAIM TITLE ===================================== */}\n        {!this.state.viewClaim && (\n          <ClaimHeaderTitle\n            headerTitle={`${\n              this.props.claiming.selectedClaimType === \"all\"\n                ? \"All\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION\n                ? \"Documents\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.APPLICATION\n                ? \"Applications\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.EXAMINATION\n                ? \"Exam\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.MARKS_PUBLICATION\n                ? \"Marks publication\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.PLACEMENT_TRANSFER\n                ? \"Placements\"\n                : \"\"\n            } Claiming`}\n            loading={this.state.loadingData}\n            loadingSession={this.state.loading}\n            thisPeriod={this.state.thisPeriod}\n            setThisPeriod={this.setThisPeriod}\n            setLoadingSession={this.setLoadingData}\n            application_sessions={this.props.application_sessions}\n            onPeriodChange={this.onPeriodChange}\n            periodChanged={this.state.periodChanged}\n          />\n        )}\n        {/* END CLAIM TITLE ===================================== */}\n\n        {/* 00000000000000000000000000000000000 */}\n\n        {/* CLAIM CONTENT LIST ===================================== */}\n        {!this.state.viewClaim && (\n          <section className=\"bg-white w-full p-1\">\n            {/* FILTER FORM =================================== */}\n            <section className=\"flex flex-col-reverse sm:flex-row items-center gap-2 w-full my-2\">\n              <div className=\"w-full\">\n                <input\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                    this.setSearchClaim(e.target.value)\n                  }\n                  type=\"text\"\n                  className=\"input-white h-10 text-sm border-2 border-gray-400 focus:border-gray-500 w-full\"\n                  placeholder={`Search claim by title or type`}\n                  value={this.state.searchClaim}\n                  disabled={\n                    filterClaimsByClaimType(\n                      this.props.claiming.allClaims,\n                      this.props.claiming.selectedClaimType\n                    ).length > 0\n                      ? false\n                      : true\n                  }\n                />\n              </div>\n            </section>\n            {/* END FILTER FORM =================================== */}\n            <div className=\"w-full overflow-x-auto\">\n              <table className=\"w-full shadow\" id=\"report_content\">\n                <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                  <tr>\n                    <td className=\"px-2 py-2\">#</td>\n                    <td className=\"px-2 py-2\">Applicant names</td>\n                    <td className=\"px-2 py-2\">Claim title</td>\n                    <td className=\"px-2 py-2\">Claim date</td>\n                    {this.props.claiming.selectedClaimType === \"all\" && (\n                      <td className=\"px-2 py-2\">Claim type</td>\n                    )}\n                    <td className=\"px-2 py-2\">Claim level</td>\n                    <td className=\"px-2 py-2\">Claim status</td>\n                    <td className=\"px-2 py-2\"></td>\n                  </tr>\n                </thead>\n                <tbody>\n                  {!this.props.claiming.allClaims ||\n                  !this.props.claiming.claimTypes ||\n                  !this.props.systemPositions ||\n                  this.state.loadingData ? (\n                    <TableLoading\n                      cols={\n                        this.props.claiming.selectedClaimType === \"all\" ? 8 : 7\n                      }\n                    />\n                  ) : search(\n                      filterClaimsByClaimType(\n                        this.props.claiming.allClaims,\n                        this.props.claiming.selectedClaimType\n                      ),\n                      this.state.searchClaim\n                    ).length <= 0 ? (\n                    <tr\n                      className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                      key={Math.random()}\n                    >\n                      <td className=\"px-3 py-1\" colSpan={8}>\n                        <NoResult\n                          theme={NoResultThemes.Light}\n                          value={\"No claim found!\"}\n                        />\n                      </td>\n                    </tr>\n                  ) : (\n                    search(\n                      filterClaimsByClaimType(\n                        this.props.claiming.allClaims,\n                        this.props.claiming.selectedClaimType\n                      ),\n                      this.state.searchClaim\n                    ).map((claim: CandidateClaimInterface, index) => (\n                      <tr\n                        className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                        key={index + claim._id}\n                        onClick={() => {\n                          this.setViewClaim(true);\n                          this.setClaimId(claim._id);\n                          this.setCandidateId(claim.user);\n                          this.setClaimType(\n                            whichClaimType(claim)\n                              ? whichClaimType(claim)!\n                              : null\n                          );\n                          this.loadsController(\n                            claim.claiming_on_id,\n                            claim.type_key\n                          );\n                        }}\n                      >\n                        <td className=\"px-3 py-1\">{index + 1}</td>\n                        <td className=\"px-3 py-1 whitespace-nowrap\">\n                          {claim.userDetails.user_info.fname +\n                            \" \" +\n                            claim.userDetails.user_info.lname}\n                        </td>\n                        <td className=\"px-3 py-1 whitespace-nowrap\">\n                          {claim.title}\n                        </td>\n                        <td className=\"px-3 py-1 whitespace-nowrap\">\n                          {this.getLastClaimDate(claim)}\n                        </td>\n                        {this.props.claiming.selectedClaimType === \"all\" && (\n                          <td className=\"px-3 py-1 whitespace-nowrap\">\n                            {whichClaimType(claim)\n                              ? capitalizeFirstLetter(whichClaimType(claim)!)\n                              : \"-\"}\n                          </td>\n                        )}\n                        <td className=\"px-3 py-1 whitespace-nowrap italic\">\n                          Level {claim.claim_level}\n                        </td>\n                        <td className=\"px-3 py-1 whitespace-nowrap\">\n                          <span\n                            className={`inline-block rounded-full duration-300 text-xs font-semibold px-3 py-1 ${\n                              whichClaimStatus(claim).classes\n                            }`}\n                          >\n                            {whichClaimStatus(claim).status}\n                          </span>\n                        </td>\n                        <td className=\"px-3 py-1 text-center whitespace-nowrap\">\n                          <button className=\"btn bg-blue-500 text-white group-hover:bg-blue-600\">\n                            View\n                          </button>\n                        </td>\n                      </tr>\n                    ))\n                  )}\n                </tbody>\n              </table>\n            </div>\n          </section>\n        )}\n        {/* END CLAIM CONTENT LIST ===================================== */}\n\n        {/* 00000000000000000000000000000000000 */}\n\n        {/* view claim */}\n        {this.state.viewClaim &&\n          this.state.candidateId &&\n          this.props.claiming.allClaims &&\n          this.state.claimId &&\n          getClaimById(this.props.claiming.allClaims, this.state.claimId) &&\n          this.props.claiming.claimTypes && (\n            <section className=\"bg-white w-full my-4\">\n              {/* VIEW CLAIM HEADER =============================== */}\n              <section className=\"flex items-center gap-2 py-2 border-b\">\n                <button\n                  className={`ml-3 bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n                    this.state.loadingRequest\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } animate__animated animate__fadeIn`}\n                  disabled={this.state.loadingRequest}\n                  onClick={() => {\n                    this.setViewClaim(false);\n                    this.setViewImage(true);\n                    this.setLoadingRequest(false);\n                    this.setActionTaken(null);\n                    this.setResponseMsg(\"\");\n                    this.setFormError(null);\n                  }}\n                >\n                  <MdArrowBack className=\"w-7 h-7\" />\n                </button>\n                <div className={`text-gray-600 font-extrabold text-2xl px-2`}>\n                  Viewing claim\n                </div>\n              </section>\n              {/* END VIEW CLAIM HEADER =============================== */}\n\n              {this.state.loading && (\n                <div className=\"my-4\">\n                  <Loading />\n                </div>\n              )}\n\n              {!this.state.loading && (\n                <section className=\"bg-gray-200\">\n                  {/* FOR DOCUMENT ========================== */}\n                  {this.state.claimType &&\n                    this.state.claimType.toLocaleLowerCase() ===\n                      ClaimTypesInterface.DOCUMENT.toLocaleLowerCase() && (\n                      <div>\n                        {getClaimById(\n                          this.props.claiming.allClaims!,\n                          this.state.claimId!\n                        )!.userDetails.details.find(\n                          (item) =>\n                            item.doc_id ===\n                            getClaimById(\n                              this.props.claiming.allClaims!,\n                              this.state.claimId!\n                            )!.claiming_on_id\n                        ) ? (\n                          <AdminClaimDocView\n                            thisDoc={\n                              getClaimById(\n                                this.props.claiming.allClaims!,\n                                this.state.claimId!\n                              )!.userDetails.details.find(\n                                (item) =>\n                                  item.doc_id ===\n                                  getClaimById(\n                                    this.props.claiming.allClaims!,\n                                    this.state.claimId!\n                                  )!.claiming_on_id\n                              )!\n                            }\n                            documentCategories={this.props.documentReducer}\n                            thisClaim={\n                              getClaimById(\n                                this.props.claiming.allClaims,\n                                this.state.claimId\n                              )!\n                            }\n                            claimTypes={this.props.claiming.claimTypes}\n                            viewImage={this.state.viewImage}\n                            setViewImage={this.setViewImage}\n                            loadingRequest={this.state.loadingRequest}\n                            setLoadingRequest={this.setLoadingRequest}\n                            actionTaken={this.state.actionTaken}\n                            setActionTaken={this.setActionTaken}\n                            responseMsg={this.state.responseMsg}\n                            setResponseMsg={this.setResponseMsg}\n                            formError={this.state.formError}\n                            setFormError={this.setFormError}\n                            candidateId={this.state.candidateId}\n                            claimReasons={this.props.claiming.claimReasons}\n                          />\n                        ) : (\n                          <NoResult\n                            theme={NoResultThemes.Dark}\n                            value={\"Document not found\"}\n                          />\n                        )}\n                      </div>\n                    )}\n\n                  {/* FOR APPLICATION ========================== */}\n                  {this.state.claimType &&\n                    this.state.claimType.toLocaleLowerCase() ===\n                      ClaimTypesInterface.APPLICATION.toLocaleLowerCase() && (\n                      <div>\n                        {getApplicationById(\n                          this.props.claiming.allApplications,\n                          this.props.systemPositions,\n                          getClaimById(\n                            this.props.claiming.allClaims,\n                            this.state.claimId\n                          )!.claiming_on_id\n                        ) ? (\n                          this.props.systemPositions && (\n                            <AdminClaimAppView\n                              thisApplication={\n                                getApplicationById(\n                                  this.props.claiming.allApplications,\n                                  this.props.systemPositions,\n                                  getClaimById(\n                                    this.props.claiming.allClaims,\n                                    this.state.claimId\n                                  )!.claiming_on_id\n                                )!.application\n                              }\n                              thisPosition={\n                                getApplicationById(\n                                  this.props.claiming.allApplications,\n                                  this.props.systemPositions,\n                                  getClaimById(\n                                    this.props.claiming.allClaims,\n                                    this.state.claimId\n                                  )!.claiming_on_id\n                                )!.position\n                              }\n                              documentCategories={this.props.documentReducer}\n                              thisClaim={\n                                getClaimById(\n                                  this.props.claiming.allClaims,\n                                  this.state.claimId\n                                )!\n                              }\n                              claimTypes={this.props.claiming.claimTypes}\n                              systemPositions={this.props.systemPositions}\n                              claimReasons={this.props.claiming.claimReasons}\n                            />\n                          )\n                        ) : (\n                          <NoResult\n                            theme={NoResultThemes.Dark}\n                            value={\"Application not found\"}\n                          />\n                        )}\n                      </div>\n                    )}\n\n                  {/* FOR EXAMINATION ========================== */}\n                  {this.state.claimType &&\n                    this.state.claimType.toLocaleLowerCase() ===\n                      ClaimTypesInterface.EXAMINATION.toLocaleLowerCase() && (\n                      <div>\n                        {this.props.claiming.allAnswer &&\n                        this.props.courses &&\n                        getCourseIdBySheetId(\n                          this.props.claiming.allAnswer,\n                          getClaimById(\n                            this.props.claiming.allClaims,\n                            this.state.claimId\n                          )!.claiming_on_id\n                        ) &&\n                        getCourseById(\n                          this.props.courses,\n                          getCourseIdBySheetId(\n                            this.props.claiming.allAnswer,\n                            getClaimById(\n                              this.props.claiming.allClaims,\n                              this.state.claimId\n                            )!.claiming_on_id\n                          )!.course\n                        ) ? (\n                          <AdminClaimExamView\n                            thisExamSheet={\n                              getCourseIdBySheetId(\n                                this.props.claiming.allAnswer,\n                                getClaimById(\n                                  this.props.claiming.allClaims,\n                                  this.state.claimId\n                                )!.claiming_on_id\n                              )!\n                            }\n                            thisExam={\n                              getCourseById(\n                                this.props.courses,\n                                getCourseIdBySheetId(\n                                  this.props.claiming.allAnswer,\n                                  getClaimById(\n                                    this.props.claiming.allClaims,\n                                    this.state.claimId\n                                  )!.claiming_on_id\n                                )!.course\n                              )!\n                            }\n                            thisClaim={\n                              getClaimById(\n                                this.props.claiming.allClaims,\n                                this.state.claimId\n                              )!\n                            }\n                            claimTypes={this.props.claiming.claimTypes}\n                            claimReasons={this.props.claiming.claimReasons}\n                          />\n                        ) : (\n                          <NoResult\n                            theme={NoResultThemes.Dark}\n                            value={\"Exam not found\"}\n                          />\n                        )}\n                      </div>\n                    )}\n                </section>\n              )}\n            </section>\n          )}\n        {/* end view claim */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system_settings,\n  sessionPlan,\n  claiming,\n  document,\n  course,\n}: StoreState): {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  systemPositions: PositionAPI[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  courses: course[] | null;\n} => {\n  return {\n    auth: auth,\n    application_sessions: sessionPlan.allSessionPlans,\n    systemPositions: system_settings.systemPositions,\n    claiming,\n    documentReducer: document,\n    courses: course.courses,\n  };\n};\n\nexport const AdminClaim = connect(mapStateToProps, {\n  getAllClaims,\n  loadCourses,\n  getAllAnswers,\n  getClaimReasons,\n  getAllApplications,\n  GetAllSessionPlans,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  getPositions,\n  PushPopupAlert,\n})(Index);\n","import React from \"react\";\nimport VBarChart from \"../ChartComponents/VBarChart\";\n\ntype AllClaimChartProps = {\n  ClaimTypes: {\n    title: string;\n    count: {\n      all: number;\n      accepted: number;\n      rejected: number;\n      pending: number;\n    };\n    type: string | \"all\";\n  }[];\n};\n\nconst AllClaimChart: React.FC<AllClaimChartProps> = (props) => {\n  const FC_GetAllClaimChartData = (): {\n    accepted: number[];\n    rejected: number[];\n    active: number[];\n    labels: string[];\n  } => {\n    let acceptedArray: number[] = [],\n      rejectedArray: number[] = [],\n      activeArray: number[] = [],\n      labelArray: string[] = [];\n\n    for (const typeKey in props.ClaimTypes) {\n      if (props.ClaimTypes[typeKey].type !== \"all\") {\n        acceptedArray.push(props.ClaimTypes[typeKey].count.accepted);\n        rejectedArray.push(props.ClaimTypes[typeKey].count.rejected);\n        activeArray.push(props.ClaimTypes[typeKey].count.pending);\n        labelArray.push(props.ClaimTypes[typeKey].type.replace(/_/g, \" \"));\n      }\n    }\n    return {\n      accepted: acceptedArray,\n      rejected: rejectedArray,\n      active: activeArray,\n      labels: labelArray,\n    };\n  };\n\n  return (\n    <section className=\"my-3 max-w-full bg-white\">\n      <div className=\"flex items-center justify-between px-3\">\n        <span className=\"text-gray-600 font-semibold text-xl py-4 px-0\">\n          Claim chart on country level\n        </span>\n      </div>\n      <div className=\"mb-4 pb-2 px-3\">\n        <VBarChart\n          labels={FC_GetAllClaimChartData().labels}\n          categoriesLabel={FC_GetAllClaimChartData().labels}\n          dataLabels={false}\n          yaxisText=\"(Applicants)\"\n          tooltipText=\"Claims\"\n          series={[\n            {\n              name: \"Pending Claim\",\n              data: FC_GetAllClaimChartData().active,\n            },\n            {\n              name: \"Accepted Claim\",\n              data: FC_GetAllClaimChartData().accepted,\n            },\n            {\n              name: \"Rejected Claim\",\n              data: FC_GetAllClaimChartData().rejected,\n            },\n          ]}\n          colors={[\"#4b5563\", \"#469769\", \"#d97724\"]}\n          defaultBar={{\n            borderRadius: 4,\n            horizontal: false,\n            columnWidth: \"95%\",\n            endingShape: \"rounded\",\n          }}\n          stacked={true}\n        />\n      </div>\n    </section>\n  );\n};\n\nexport default AllClaimChart;\n","import React from \"react\";\nimport { AiFillDashboard } from \"react-icons/ai\";\nimport { MdBrightness1 } from \"react-icons/md\";\nimport { SessionPlanInterface } from \"../../../interfaces\";\nimport { education_category } from \"../../../interfaces/education_category\";\n\ntype ClaimDashBoardTitleProps = {\n  reportTitle: string;\n  education_categories: education_category[] | null;\n  loading: boolean;\n  loadingApplications: boolean;\n  loadingEducation: boolean;\n  thisEducation: education_category | null;\n  allEducation: boolean;\n  periodChanged: boolean;\n  setThisEducation: (value: education_category | null) => void;\n  thisPeriod: string;\n  setThisPeriod: (value: string) => void;\n  application_sessions: SessionPlanInterface[];\n  onPeriodChange: (period_id: string) => void;\n};\n\nconst ClaimDashBoardTitle: React.FC<ClaimDashBoardTitleProps> = (props) => {\n  return (\n    <div className=\"mt-3 rounded flex flex-col md:flex-row md:justify-between items-start\">\n      <div className=\"flex flex-row items-center gap-3 mb-2\">\n        <AiFillDashboard className=\"text-6xl text-blue-600 hidden md:block\" />\n        <div className=\"flex flex-col\">\n          <span className=\"text-blue-600 text-3xl font-bold\">\n            {props.reportTitle}\n          </span>\n        </div>\n      </div>\n\n      {/* FILTER SECTION PERIOD && EDUCATION */}\n      <section className=\"w-full md:w-auto my-2 md:my-0\">\n        {/* EDUCATION CATEGORY sections */}\n        <section>\n          {props.education_categories && props.education_categories.length > 0 && (\n            <div className=\"flex items-start md:items-center justify-start md:justify-end gap-2\">\n              {props.allEducation && (\n                <div\n                  className={`w-auto ${\n                    props.loading ||\n                    props.loadingApplications ||\n                    props.loadingEducation ||\n                    props.periodChanged\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } ${\n                    props.thisEducation === null\n                      ? \"bg-blue-500 text-white font-bold\"\n                      : \"bg-gray-100 text-blue-800\"\n                  } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex items-center animate__animated animate__zoomIn`}\n                  onClick={() =>\n                    !props.loading &&\n                    !props.loadingEducation &&\n                    props.setThisEducation(null)\n                  }\n                >\n                  <section className=\"flex-1\">\n                    <MdBrightness1 className=\"inline-block mr-1 text-xs\" />\n                    <span>All</span>\n                  </section>\n                </div>\n              )}\n              {props.education_categories.map((education, index) => (\n                <div\n                  key={education.education_institute_id + index}\n                  className={`w-auto ${\n                    props.loading ||\n                    props.loadingApplications ||\n                    props.loadingEducation\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } ${\n                    props.thisEducation &&\n                    education.education_institute_id ===\n                      props.thisEducation.education_institute_id\n                      ? \"bg-blue-500 text-white font-bold\"\n                      : \"bg-gray-100 text-blue-800\"\n                  } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex items-center animate__animated animate__zoomIn`}\n                  onClick={() =>\n                    !props.loading &&\n                    !props.loadingApplications &&\n                    !props.loadingEducation &&\n                    props.setThisEducation(education)\n                  }\n                >\n                  <div className=\"flex-1\">\n                    <MdBrightness1 className=\"inline-block mr-1 text-xs\" />\n                    <span>{education.education_category_title}</span>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </section>\n        {/* end EDUCATION CATEGORY sections */}\n        <div>\n          <select\n            className={`bg-white text-gray-600 border border-gray-400 rounded p-2 focus:outline-none ${\n              props.loadingApplications && \"cursor-wait\"\n            }`}\n            value={props.thisPeriod}\n            disabled={\n              props.loading ||\n              props.loadingApplications ||\n              props.loadingEducation ||\n              props.periodChanged\n            }\n            onChange={(e) => {\n              props.setThisPeriod(e.target.value);\n              props.onPeriodChange(e.target.value);\n            }}\n          >\n            {props.application_sessions.map((session, item) => (\n              <option\n                key={session.session_plan_id + item}\n                value={session.session_plan_id}\n              >\n                {session.session_plan_name}\n              </option>\n            ))}\n          </select>\n        </div>\n      </section>\n      {/* END FILTER SECTION PERIOD && EDUCATION */}\n    </div>\n  );\n};\n\nexport default ClaimDashBoardTitle;\n","import React, { Component } from \"react\";\nimport { FaBookOpen } from \"react-icons/fa\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  schoolLevelsStoreInterface,\n  getAllClaims,\n  GetClaimingTypes,\n  getAllApplications,\n  loadEducationCategories,\n  setSelectedClaimType,\n  PushPopupAlert,\n} from \"../../../actions\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport { getPositions } from \"../../../actions/settings\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport {\n  SessionPlanInterface,\n  PositionAPI,\n  education_category,\n  PlansTypeKeys,\n  CandidateClaimInterface,\n  ClaimToPrintInterface,\n  ClaimDecisionStatus,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { DATE } from \"../../../utils/functions\";\nimport { reportClaimType } from \"../../Admin/Claiming/ClaimingReport\";\nimport { adminDisplayClaimTitle } from \"../../Claimings/Admin\";\nimport NoSession from \"../../SessionSettings/NoSession\";\nimport PieChart from \"../ChartComponents/PieChart\";\nimport ExamDashboardLabels from \"../ExamDashboard/ExamDashboardLabels\";\nimport AllClaimChart from \"./AllClaimChart\";\nimport ClaimDashBoardTitle from \"./ClaimDashBoardTitle\";\n\ninterface WaitingListDashboardProps {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  systemPositions: PositionAPI[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  setSelectedClaimType: Function;\n  getPositions: Function;\n  getAllClaims: Function;\n  GetClaimingTypes: Function;\n  getAllApplications: Function;\n  GetAllSessionPlans: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface WaitingListDashboardStates {\n  thisPeriod: string;\n  loading: boolean;\n  loadingSession: boolean;\n  periodChanged: boolean;\n  loadingPosition: boolean;\n  loadingApplications: boolean;\n  loadingClaims: boolean;\n  loadingDocuments: boolean;\n  loadingInstitutes: boolean;\n  loadingClarifications: boolean;\n  loadingFields: boolean;\n  thisEducation: education_category | null;\n  thisLabel: PlansTypeKeys | \"all\";\n}\nclass _ClaimDashboard extends Component<\n  WaitingListDashboardProps,\n  WaitingListDashboardStates\n> {\n  constructor(props: WaitingListDashboardProps) {\n    super(props);\n\n    this.state = {\n      thisPeriod: \"\",\n      loading: true,\n      loadingSession: true,\n      periodChanged: false,\n      loadingPosition: true,\n      loadingApplications: true,\n      loadingClaims: true,\n      loadingDocuments: true,\n      loadingInstitutes: true,\n      loadingClarifications: true,\n      loadingFields: true,\n      thisEducation: null,\n      thisLabel: \"all\",\n    };\n  }\n\n  setLoadingInstitutes = (value: boolean) => {\n    this.setState({ loadingInstitutes: value });\n  };\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingSession = (value: boolean) => {\n    this.setState({ loadingSession: value });\n  };\n\n  setPeriodChanged = (value: boolean) => {\n    this.setState({ periodChanged: value });\n  };\n\n  setLoadingPosition = (value: boolean) => {\n    this.setState({ loadingPosition: value });\n  };\n\n  setLoadingApplications = (value: boolean) => {\n    this.setState({ loadingApplications: value });\n  };\n\n  setLoadingClaims = (value: boolean) => {\n    this.setState({ loadingClaims: value });\n  };\n  setLoadingDocuments = (value: boolean) => {\n    this.setState({ loadingDocuments: value });\n  };\n\n  setLoadingClarifications = (value: boolean) => {\n    this.setState({ loadingClarifications: value });\n  };\n\n  setLoadingFields = (value: boolean) => {\n    this.setState({ loadingFields: value });\n  };\n\n  setThisEducation = (value: education_category | null) => {\n    this.setState({ thisEducation: value });\n  };\n\n  setThisLabel = (value: PlansTypeKeys | \"all\") => {\n    this.setState({ thisLabel: value });\n  };\n\n  setThisPeriod = (value: string) => {\n    this.setState({ thisPeriod: value });\n  };\n\n  componentDidMount = () => {\n    // LOADING EDUCATION CATEGORY =================================\n    if (\n      this.props.schoolLevels.education_categories === null ||\n      this.props.schoolLevels.education_categories.length === 0\n    ) {\n      this.props.loadEducationCategories(this.setLoadingInstitutes);\n    } else {\n      this.setLoadingInstitutes(false);\n    }\n    // END LOADING EDUCATION CATEGORY =================================\n\n    // LOADING APPLICATION SESSION ====================================\n    if (\n      this.props.application_sessions === null ||\n      this.props.application_sessions.length === 0\n    ) {\n      this.props.GetAllSessionPlans(\n        (status: boolean, msg: string, data?: SessionPlanInterface[]) => {\n          if (!status) {\n            this.setLoadingSession(false);\n            this.setLoading(false);\n            if (msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data && data.length > 0) {\n              let thisSession = data.find((item) => item.is_active === true);\n              this.setThisPeriod(\n                thisSession\n                  ? thisSession.session_plan_id\n                  : data[data.length - 1].session_plan_id\n              );\n              this.onPeriodChange(\n                thisSession\n                  ? thisSession.session_plan_id\n                  : data[data.length - 1].session_plan_id\n              );\n            }\n          }\n        }\n      );\n    } else if (this.state.loadingSession) {\n      this.setLoading(false);\n      this.setLoadingSession(false);\n    }\n\n    // SETTING ACTIVE SESSION ==========================\n    if (\n      isEmptyOrSpaces(this.state.thisPeriod) &&\n      !this.state.loadingSession &&\n      this.props.application_sessions &&\n      this.props.application_sessions.length > 0\n    ) {\n      let thisSession = this.props.application_sessions.find(\n        (item) => item.is_active === true\n      );\n      this.setThisPeriod(\n        thisSession\n          ? thisSession.session_plan_id\n          : this.props.application_sessions[\n              this.props.application_sessions.length - 1\n            ].session_plan_id\n      );\n      this.onPeriodChange(\n        thisSession\n          ? thisSession.session_plan_id\n          : this.props.application_sessions[\n              this.props.application_sessions.length - 1\n            ].session_plan_id\n      );\n    }\n\n    // LOADING DOCUMENT CATEGORIES ==========================\n    if (\n      !this.props.documentReducer.documentCategory &&\n      this.state.loadingDocuments\n    ) {\n      this.props.getDocumentCategory();\n      this.setLoadingDocuments(false);\n    } else if (this.state.loadingDocuments) {\n      this.setLoadingDocuments(false);\n    }\n    // LOADING DOCUMENT CLARIFICATIONS ==========================\n    if (\n      !this.props.documentReducer.documentSubCategory &&\n      this.state.loadingClarifications\n    ) {\n      this.props.getDocumentSubCategory();\n      this.setLoadingClarifications(false);\n    } else if (this.state.loadingClarifications) {\n      this.setLoadingClarifications(false);\n    }\n    // LOADING DOCUMENT FIELDS ==========================\n    if (\n      !this.props.documentReducer.documentFields &&\n      this.state.loadingFields\n    ) {\n      this.props.getDocumentFields();\n      this.setLoadingFields(false);\n    } else if (this.state.loadingFields) {\n      this.setLoadingFields(false);\n    }\n\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n\n    // LOADING POSITIONS ==============================================\n    if (this.props.systemPositions === null) {\n      this.props.getPositions((status: boolean, msg: string) => {\n        this.setLoadingPosition(status);\n        console.log({ status: status, msg: msg });\n        if (msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    } else if (this.state.loadingPosition) {\n      this.setLoadingPosition(false);\n    }\n  };\n\n  onPeriodChange = (period_id: string) => {\n    this.setPeriodChanged(true);\n    this.props.getAllClaims(2, period_id, (status: boolean, msg: string) => {\n      !status && this.setPeriodChanged(false);\n      if (status === false && msg.length) {\n        this.props.PushPopupAlert({\n          title: msg,\n          theme: PopupAlertTheme.danger,\n        });\n      }\n    });\n\n    this.props.getAllApplications(period_id, (status: boolean, msg: string) => {\n      !status && this.setLoadingApplications(status);\n      if (status === false && msg.length) {\n        this.props.PushPopupAlert({\n          title: msg,\n          theme: PopupAlertTheme.danger,\n        });\n      }\n    });\n  };\n\n  getClaimInstitute = (thisClaim: CandidateClaimInterface): string | null => {\n    if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      return null;\n    }\n    if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n      if (this.props.claiming.allApplications) {\n        let thisApplication = this.props.claiming.allApplications.find(\n          (item) => item._id === thisClaim.claiming_on_id\n        );\n        if (\n          thisApplication &&\n          this.props.claiming.allApplications &&\n          this.props.systemPositions\n        ) {\n          // return thisApplication.\n          let thisPosition = this.props.systemPositions.find(\n            (item) => item.position_id === thisApplication!.position\n          );\n          if (thisPosition) {\n            return thisPosition.education_institute_id.education_institute_id;\n          }\n        }\n      }\n    }\n\n    return null;\n  };\n\n  displayClaimTitle = (thisClaim: CandidateClaimInterface): string => {\n    let result: string = thisClaim.claiming_on_id;\n    if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      result =\n        thisClaim.userDetails.details.filter(\n          (item) => item.validation_status !== \"waiting\"\n        ).length > 0\n          ? adminDisplayClaimTitle(\n              this.props.documentReducer,\n              thisClaim.userDetails.details.filter(\n                (item) => item.validation_status !== \"waiting\"\n              ),\n              thisClaim\n            )\n          : \"Document not found\";\n    }\n    if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n      if (this.props.claiming.allApplications) {\n        let thisApplication = this.props.claiming.allApplications.find(\n          (item) => item._id === thisClaim.claiming_on_id\n        );\n        if (\n          thisApplication &&\n          this.props.claiming.allApplications &&\n          this.props.systemPositions\n        ) {\n          let thisPosition = this.props.systemPositions.find(\n            (item) => item.position_id === thisApplication!.position\n          );\n          if (thisPosition) {\n            result = thisPosition.position_title;\n          } else {\n            result = \"Application not found\";\n          }\n        }\n      }\n    }\n\n    return result;\n  };\n\n  ClaimTypes = (\n    claims: ClaimToPrintInterface[]\n  ): {\n    title: string;\n    count: {\n      all: number;\n      accepted: number;\n      rejected: number;\n      pending: number;\n    };\n    type: PlansTypeKeys | \"all\";\n  }[] => {\n    let output: {\n      title: string;\n      count: {\n        all: number;\n        accepted: number;\n        rejected: number;\n        pending: number;\n      };\n      type: PlansTypeKeys | \"all\";\n    }[] = [\n      {\n        title: \"All claim types\",\n        count: {\n          all: claims.length,\n          accepted: claims.filter(\n            (item) => item.decision === ClaimDecisionStatus.ACCEPTED\n          ).length,\n          rejected: claims.filter(\n            (item) => item.decision === ClaimDecisionStatus.REJECTED\n          ).length,\n          pending: claims.filter((item) => item.decision === \"PENDING\").length,\n        },\n        type: \"all\",\n      },\n    ];\n\n    Object.values(PlansTypeKeys).forEach((PlansKey) => {\n      output.push({\n        title: capitalizeFirstLetter(reportClaimType(PlansKey)),\n        count: {\n          all: claims.filter((itm) => itm.claim_type === PlansKey).length,\n          accepted: claims.filter(\n            (itm) =>\n              itm.claim_type === PlansKey &&\n              itm.decision === ClaimDecisionStatus.ACCEPTED\n          ).length,\n          rejected: claims.filter(\n            (itm) =>\n              itm.claim_type === PlansKey &&\n              itm.decision === ClaimDecisionStatus.REJECTED\n          ).length,\n          pending: claims.filter(\n            (itm) => itm.claim_type === PlansKey && itm.decision === \"PENDING\"\n          ).length,\n        },\n        type: PlansKey,\n      });\n    });\n    return output;\n  };\n\n  FC_ClaimData = (\n    allClaims: CandidateClaimInterface[] | null\n  ): ClaimToPrintInterface[] => {\n    if (allClaims === null || allClaims.length <= 0) return [];\n    let arrayNew: ClaimToPrintInterface[] = [];\n    let n: number = 1;\n    // LOOP IN ALL CLAIM ONE BY ONE ###########################\n    for (const key in allClaims) {\n      if (Object.prototype.hasOwnProperty.call(allClaims, key)) {\n        // LOOP IN ALL CLAIM OF ONE FILE ONE BY ONE ===========================\n        for (const keyClaim in allClaims[key].claims) {\n          if (\n            Object.prototype.hasOwnProperty.call(\n              allClaims[key].claims,\n              keyClaim\n            )\n          ) {\n            const element = allClaims[key].claims[keyClaim];\n            let dataArray: ClaimToPrintInterface = {\n              claim_id: n,\n              names:\n                allClaims[key].userDetails.user_info.fname +\n                \" \" +\n                allClaims[key].userDetails.user_info.lname,\n              gender: allClaims[key].userDetails.user_info.sex\n                ? \"Male\"\n                : \"Female\",\n              national_id: allClaims[key].userDetails.n_id,\n              phone: allClaims[key].userDetails.phone_number,\n              email: allClaims[key].userDetails.email,\n              claim_type: allClaims[key].type_key,\n              claim_level: element.level,\n              education_category: this.getClaimInstitute(allClaims[key]),\n              claim_session: this.state.thisPeriod,\n              date: DATE(element.createdAt),\n              decision: element.decision_taken_status\n                ? element.decision_taken_status\n                : \"PENDING\",\n              claim_title: this.displayClaimTitle(allClaims[key]),\n            };\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n      }\n    }\n    return arrayNew;\n  };\n\n  getClaimDataByTitle = (\n    allData: {\n      title: string;\n      count: {\n        all: number;\n        accepted: number;\n        rejected: number;\n        pending: number;\n      };\n      type: PlansTypeKeys | \"all\";\n    }[]\n  ):\n    | {\n        title: string;\n        count: {\n          all: number;\n          accepted: number;\n          rejected: number;\n          pending: number;\n        };\n        type: PlansTypeKeys | \"all\";\n      }\n    | undefined => {\n    return allData.find((item) => item.type === this.state.thisLabel);\n  };\n\n  render() {\n    if (\n      this.props.application_sessions &&\n      this.props.application_sessions.length === 0\n    ) {\n      return <NoSession />;\n    }\n\n    if (\n      this.state.loading ||\n      this.props.application_sessions === null ||\n      this.props.claiming.allClaims === null\n    ) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {/* HEADER TITLE */}\n        <ClaimDashBoardTitle\n          education_categories={this.props.schoolLevels.education_categories}\n          loading={this.state.loading}\n          loadingApplications={this.state.loadingApplications}\n          loadingEducation={this.state.loadingInstitutes}\n          thisEducation={this.state.thisEducation}\n          setThisEducation={this.setThisEducation}\n          thisPeriod={this.state.thisPeriod}\n          setThisPeriod={this.setThisPeriod}\n          application_sessions={this.props.application_sessions}\n          reportTitle={\"Claim Dashboard\"}\n          allEducation={true}\n          periodChanged={this.state.periodChanged}\n          onPeriodChange={this.onPeriodChange}\n        />\n        {/* END HEADER TITLE */}\n\n        {/* ===================================================================================== */}\n\n        {/* CLAIM ALL STATUS LABELS ======================================= */}\n        <section className=\"my-2\">\n          <div className=\"text-2xl font-semibold text-gray-600\">\n            Claim type:\n            <select\n              className={`bg-white text-gray-600 border-2 border-blue-600 rounded-lg px-2 py-1 focus:outline-none`}\n              value={this.state.thisLabel}\n              onChange={(e) =>\n                this.setThisLabel(e.target.value as PlansTypeKeys | \"all\")\n              }\n            >\n              {this.ClaimTypes(\n                this.FC_ClaimData(this.props.claiming.allClaims)!\n              ).map((item, index: number) => (\n                <option key={item.type + index} value={item.type}>\n                  {capitalizeFirstLetter(item.title.toLocaleLowerCase())}\n                </option>\n              ))}\n            </select>\n          </div>\n          {this.getClaimDataByTitle(\n            this.ClaimTypes(this.FC_ClaimData(this.props.claiming.allClaims)!)\n          ) && (\n            <ExamDashboardLabels\n              dataLabels={[\n                {\n                  title: \"Total claim\",\n                  icon: FaBookOpen,\n                  iconColor: \"blue\",\n                  count: this.getClaimDataByTitle(\n                    this.ClaimTypes(\n                      this.FC_ClaimData(this.props.claiming.allClaims)!\n                    )\n                  )!.count.all,\n                },\n                {\n                  title: \"Accepted Claim\",\n                  icon: FaBookOpen,\n                  iconColor: \"green\",\n                  count: this.getClaimDataByTitle(\n                    this.ClaimTypes(\n                      this.FC_ClaimData(this.props.claiming.allClaims)!\n                    )\n                  )!.count.accepted,\n                },\n                {\n                  title: \"Rejected Claim\",\n                  icon: FaBookOpen,\n                  iconColor: \"yellow\",\n                  count: this.getClaimDataByTitle(\n                    this.ClaimTypes(\n                      this.FC_ClaimData(this.props.claiming.allClaims)!\n                    )\n                  )!.count.rejected,\n                },\n                {\n                  title: \"Pending Claim\",\n                  icon: FaBookOpen,\n                  iconColor: \"gray\",\n                  count: this.getClaimDataByTitle(\n                    this.ClaimTypes(\n                      this.FC_ClaimData(this.props.claiming.allClaims)!\n                    )\n                  )!.count.pending,\n                },\n              ]}\n              labelsOnRow={5}\n            >\n              <div className=\"flex justify-center\">\n                <PieChart\n                  options={{\n                    labels: [\"Accepted\", \"Rejected\", \"Pending\"],\n                    legend: {\n                      show: false,\n                      position: \"bottom\",\n                      horizontalAlign: \"center\",\n                      fontSize: \"16px\",\n                      itemMargin: {\n                        horizontal: 3,\n                        vertical: 0,\n                      },\n                    },\n                    plotOptions: {\n                      pie: {\n                        donut: {\n                          labels: {\n                            show: true,\n                            name: {\n                              show: true,\n                              fontSize: \"16px\",\n                              //   fontFamily: \"Rubik\",\n                              color: \"#2564eb\",\n                              offsetY: -10,\n                            },\n                            value: {\n                              show: true,\n                              fontSize: \"20px\",\n                              fontFamily: \"Helvetica, Arial, sans-serif\",\n                              color: \"#2564eb\",\n                              offsetY: 10,\n                              formatter: function (val) {\n                                return val;\n                              },\n                            },\n                            total: {\n                              show: true,\n                              label: \"Total\",\n                              color: \"#2564eb\",\n                              formatter: function (w) {\n                                return w.globals.seriesTotals.reduce(\n                                  (a: number, b: number) => {\n                                    return a + b;\n                                  },\n                                  0\n                                );\n                              },\n                            },\n                          },\n                        },\n                      },\n                    },\n                    colors: [\"#469769\", \"#d97724\", \"#4b5563\"],\n                  }}\n                  series={[\n                    this.getClaimDataByTitle(\n                      this.ClaimTypes(\n                        this.FC_ClaimData(this.props.claiming.allClaims)!\n                      )\n                    )!.count.accepted,\n                    this.getClaimDataByTitle(\n                      this.ClaimTypes(\n                        this.FC_ClaimData(this.props.claiming.allClaims)!\n                      )\n                    )!.count.rejected,\n                    this.getClaimDataByTitle(\n                      this.ClaimTypes(\n                        this.FC_ClaimData(this.props.claiming.allClaims)!\n                      )\n                    )!.count.pending,\n                  ]}\n                  width={210}\n                />\n              </div>\n            </ExamDashboardLabels>\n          )}\n        </section>\n        {/* CLAIM STATUS ON COUNTRY LEVEL LABELS ======================================= */}\n\n        {/* ===================================================================================== */}\n\n        {/* EXAM PERFORMANCE ON COUNTRY CHART ======================================= */}\n        <AllClaimChart\n          ClaimTypes={this.ClaimTypes(\n            this.FC_ClaimData(this.props.claiming.allClaims)\n          )}\n        />\n        {/* END EXAM PERFORMANCE ON COUNTRY CHART ======================================= */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system_settings,\n  sessionPlan,\n  claiming,\n  document,\n  schoolLevels,\n}: StoreState): {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  systemPositions: PositionAPI[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n} => {\n  return {\n    auth: auth,\n    application_sessions: sessionPlan.allSessionPlans,\n    systemPositions: system_settings.systemPositions,\n    claiming,\n    documentReducer: document,\n    schoolLevels,\n  };\n};\n\nexport const ClaimDashboard = connect(mapStateToProps, {\n  getAllClaims,\n  GetClaimingTypes,\n  getAllApplications,\n  GetAllSessionPlans,\n  loadEducationCategories,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  setSelectedClaimType,\n  getPositions,\n  PushPopupAlert,\n})(_ClaimDashboard);\n","import { NumberFormat } from \"xlsx\";\nimport { education_category } from \"../interfaces\";\nimport { PositionAPI } from \"../interfaces/position\";\nimport {\n  AccessTaskInterface,\n  CustomeAccessInterface,\n  PositionInterface,\n  PostSchoolInterface,\n  RoleToUserInterface,\n  SchoolInfoInterface,\n  SchoolLevelInterface,\n  SystemUserRoleInterface,\n} from \"./interfaces\";\n\nexport const data_tasks: AccessTaskInterface[] = [\n  {\n    id: \"11233242\",\n    task: \"Do Exam\",\n    key: \"do_exam\",\n    permitted: {\n      create: false,\n      view: false,\n      update: false,\n      delete: false,\n    },\n  },\n  {\n    id: \"1123382242\",\n    task: \"Do Application\",\n    key: \"do_application\",\n    permitted: {\n      create: false,\n      view: false,\n      update: false,\n      delete: false,\n    },\n  },\n];\n\nexport const data_school: SchoolInfoInterface[] = [\n  {\n    school_id: \"32762426329\",\n    school_title: \"G.S. De Gitega\",\n    district_id: \"234242\",\n    number_of_females: 10,\n    number_of_males: 12,\n  },\n  {\n    school_id: \"32762426329\",\n    school_title: \"G.S. De Gitega\",\n    district_id: \"7322342684\",\n  },\n  {\n    school_id: \"32762426329\",\n    school_title: \"Rucee De Kigali\",\n    district_id: \"234242\",\n    number_of_females: 10,\n    number_of_males: 12,\n  },\n  {\n    school_id: \"32762426329\",\n    school_title: \"G.S. De Gitega\",\n    district_id: \"73232432684\",\n    number_of_females: 10,\n    number_of_males: 12,\n  },\n];\n\nexport const data_school_level: SchoolLevelInterface[] = [\n  {\n    school_level_id: \"324234r2ee432\",\n    school_level_name: \"Ordinary Level\",\n    description: \"Ordinary Level description\",\n    education_institute: [\"6100449ceabcc3b4623752e2\"],\n    courses: [],\n  },\n  {\n    school_level_name: \"A level\",\n    description: \"A level description\",\n    education_institute: [\n      \"6100592f646ddb0771e8fc50\",\n      \"61005941646ddb0771e8fc51\",\n    ],\n    courses: [],\n    school_level_id: \"61005974646ddb0771e8fc52\",\n  },\n  {\n    school_level_name: \"O level\",\n    description: \"O level description\",\n    education_institute: [\"6100592f646ddb0771e8fc50\"],\n    courses: [],\n    school_level_id: \"61005989646ddb0771e8fc53\",\n  },\n  {\n    school_level_name: \"Primary\",\n    description: \"Primary description\",\n    education_institute: [\"6100592f646ddb0771e8fc50\"],\n    courses: [],\n    school_level_id: \"61005999646ddb0771e8fc54\",\n  },\n  {\n    school_level_name: \"Ordinary Level\",\n    description: \"Ordinary Level description\",\n    education_institute: [\"610045218bdc25b50cc8bcbc\"],\n    courses: [],\n    school_level_id: \"61065114ea5d9b48e9677606\",\n  },\n];\n\nexport const data_position: PositionInterface[] = [\n  {\n    courses: [\n      {\n        course_name: \"Physics\",\n        course_code: \"P21\",\n        description: \"description of P21\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"610252c47d84ba2313cf6148\",\n      },\n      {\n        course_name: \"Mathematics\",\n        course_code: \"m211\",\n        description: \"description of m211\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"610252fd7d84ba2313cf6149\",\n      },\n    ],\n    position_title: \"Teaching mathematics\",\n    description: \"Teaching mathematics\",\n    school_level_id: {\n      school_level_name: \"A level\",\n      description: \"A level description\",\n      education_institute: [\n        \"6100592f646ddb0771e8fc50\",\n        \"61005941646ddb0771e8fc51\",\n      ],\n      courses: [],\n      school_level_id: \"61005974646ddb0771e8fc52\",\n    },\n    education_institute_id: {\n      education_category_title: \"REB\",\n      school_levels: [],\n      description: \"REB\",\n      education_institute_id: \"6100592f646ddb0771e8fc50\",\n    },\n    requirements: [\n      {\n        user_detail_category_id: \"60fc4868f485d8dd91ed321e\",\n        title: \"Education\",\n        user_required_docs: [\n          {\n            user_detail_subcategory_id: \"60fc48dbf485d8dd91ed321f\",\n            title: \"A1\",\n          },\n        ],\n      },\n    ],\n    position_id: \"610254047d84ba2313cf614a\",\n  },\n  {\n    courses: [\n      {\n        course_name: \"Physics\",\n        course_code: \"P21\",\n        description: \"description of P21\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"610252c47d84ba2313cf6148\",\n      },\n      {\n        course_name: \"English\",\n        course_code: \"e213\",\n        description: \"description of e213\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"6102e72675cc702bbd1582e3\",\n      },\n    ],\n    position_title: \"Teaching Physics\",\n    description: \"Teaching Physics\",\n    school_level_id: {\n      school_level_name: \"A level\",\n      description: \"A level description\",\n      education_institute: [\n        \"6100592f646ddb0771e8fc50\",\n        \"61005941646ddb0771e8fc51\",\n      ],\n      courses: [],\n      school_level_id: \"61005974646ddb0771e8fc52\",\n    },\n    education_institute_id: {\n      education_category_title: \"REB\",\n      school_levels: [],\n      description: \"REB\",\n      education_institute_id: \"6100592f646ddb0771e8fc50\",\n    },\n    requirements: [\n      {\n        user_detail_category_id: \"60fc4868f485d8dd91ed321e\",\n        title: \"Education\",\n        user_required_docs: [\n          {\n            user_detail_subcategory_id: \"60fc48dbf485d8dd91ed321f\",\n            title: \"A1\",\n          },\n        ],\n      },\n      {\n        user_detail_category_id: \"60fc47dff485d8dd91ed3219\",\n        title: \"Language\",\n        user_required_docs: [\n          {\n            user_detail_subcategory_id: \"6102e7ec248f742b674c67ad\",\n            title: \"English\",\n          },\n        ],\n      },\n    ],\n    position_id: \"6102ea2975cc702bbd1582e5\",\n  },\n  {\n    courses: [\n      {\n        course_name: \"Biology\",\n        course_code: \"b213\",\n        description: \"description of b213\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"6103a37975cc702bbd1582e6\",\n      },\n      {\n        course_name: \"English\",\n        course_code: \"e213\",\n        description: \"description of e213\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"6102e72675cc702bbd1582e3\",\n      },\n    ],\n    position_title: \"Teaching Biology\",\n    description: \"Teaching Biology\",\n    school_level_id: {\n      school_level_name: \"A level\",\n      description: \"A level description\",\n      education_institute: [\n        \"6100592f646ddb0771e8fc50\",\n        \"61005941646ddb0771e8fc51\",\n      ],\n      courses: [],\n      school_level_id: \"61005974646ddb0771e8fc52\",\n    },\n    education_institute_id: {\n      education_category_title: \"REB\",\n      school_levels: [],\n      description: \"REB\",\n      education_institute_id: \"6100592f646ddb0771e8fc50\",\n    },\n    requirements: [\n      {\n        user_detail_category_id: \"60fc4868f485d8dd91ed321e\",\n        title: \"A0\",\n        user_required_docs: [\n          {\n            user_detail_subcategory_id: \"60fc48eff485d8dd91ed3221\",\n            title: \"A0\",\n          },\n        ],\n      },\n      {\n        user_detail_category_id: \"60fc47dff485d8dd91ed3219\",\n        title: \"Language\",\n        user_required_docs: [\n          {\n            user_detail_subcategory_id: \"6102e7ec248f742b674c67ad\",\n            title: \"English\",\n          },\n          {\n            user_detail_subcategory_id: \"6102e84c248f742b674c67af\",\n            title: \"Ikinyarwanda\",\n          },\n        ],\n      },\n    ],\n    position_id: \"6103a54075cc702bbd1582e8\",\n  },\n  {\n    courses: [\n      {\n        course_name: \"Biology\",\n        course_code: \"b213\",\n        description: \"description of b213\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"6103a37975cc702bbd1582e6\",\n      },\n      {\n        course_name: \"English\",\n        course_code: \"e213\",\n        description: \"description of e213\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"6102e72675cc702bbd1582e3\",\n      },\n    ],\n    position_title: \"Teaching basic Biology\",\n    description: \"Teaching basic Biology\",\n    school_level_id: {\n      school_level_name: \"O level\",\n      description: \"O level description\",\n      education_institute: [\"6100592f646ddb0771e8fc50\"],\n      courses: [],\n      school_level_id: \"61005989646ddb0771e8fc53\",\n    },\n    education_institute_id: {\n      education_category_title: \"REB\",\n      school_levels: [],\n      description: \"REB\",\n      education_institute_id: \"6100592f646ddb0771e8fc50\",\n    },\n    requirements: [\n      {\n        user_detail_category_id: \"60fc4868f485d8dd91ed321e\",\n        title: \"Education\",\n        user_required_docs: [\n          {\n            user_detail_subcategory_id: \"60fc48dbf485d8dd91ed321f\",\n            title: \"A1\",\n          },\n        ],\n      },\n      {\n        user_detail_category_id: \"60fc47dff485d8dd91ed3219\",\n        title: \"Language\",\n        user_required_docs: [\n          {\n            user_detail_subcategory_id: \"6102e7ec248f742b674c67ad\",\n            title: \"English\",\n          },\n          {\n            user_detail_subcategory_id: \"6102e84c248f742b674c67af\",\n            title: \"Ikinyarwanda\",\n          },\n        ],\n      },\n    ],\n    position_id: \"6103a6ca75cc702bbd1582e9\",\n  },\n  {\n    courses: [\n      {\n        course_name: \"Biology\",\n        course_code: \"b213\",\n        description: \"description of b213\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"6103a37975cc702bbd1582e6\",\n      },\n      {\n        course_name: \"English\",\n        course_code: \"e213\",\n        description: \"description of e213\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"6102e72675cc702bbd1582e3\",\n      },\n    ],\n    position_title: \"Teaching basic Biology\",\n    description: \"Teaching basic Biology\",\n    school_level_id: {\n      school_level_name: \"O level\",\n      description: \"O level description\",\n      education_institute: [\"6100592f646ddb0771e8fc50\"],\n      courses: [],\n      school_level_id: \"61005989646ddb0771e8fc53\",\n    },\n    education_institute_id: {\n      education_category_title: \"WDA\",\n      school_levels: [],\n      description: \"WDA\",\n      education_institute_id: \"61005941646ddb0771e8fc51\",\n    },\n    requirements: [\n      {\n        user_detail_category_id: \"60fc4868f485d8dd91ed321e\",\n        title: \"Education\",\n        user_required_docs: [\n          {\n            user_detail_subcategory_id: \"60fc48dbf485d8dd91ed321f\",\n            title: \"A1\",\n          },\n        ],\n      },\n      {\n        user_detail_category_id: \"60fc47dff485d8dd91ed3219\",\n        title: \"Language\",\n        user_required_docs: [\n          {\n            user_detail_subcategory_id: \"6102e7ec248f742b674c67ad\",\n            title: \"English\",\n          },\n          {\n            user_detail_subcategory_id: \"6102e84c248f742b674c67af\",\n            title: \"Ikinyarwanda\",\n          },\n        ],\n      },\n    ],\n    position_id: \"6103a78475cc702bbd1582ea\",\n  },\n  {\n    courses: [\n      {\n        course_name: \"Biology\",\n        course_code: \"b213\",\n        description: \"description of b213\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"6103a37975cc702bbd1582e6\",\n      },\n      {\n        course_name: \"English\",\n        course_code: \"e213\",\n        description: \"description of e213\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"6102e72675cc702bbd1582e3\",\n      },\n    ],\n    position_title: \"Teaching basic physics\",\n    description: \"Teaching basic physics\",\n    school_level_id: {\n      school_level_name: \"A level\",\n      description: \"A level description\",\n      education_institute: [\n        \"6100592f646ddb0771e8fc50\",\n        \"61005941646ddb0771e8fc51\",\n      ],\n      courses: [],\n      school_level_id: \"61005974646ddb0771e8fc52\",\n    },\n    education_institute_id: {\n      education_category_title: \"WDA\",\n      school_levels: [],\n      description: \"WDA\",\n      education_institute_id: \"61005941646ddb0771e8fc51\",\n    },\n    requirements: [\n      {\n        user_detail_category_id: \"60fc4868f485d8dd91ed321e\",\n        title: \"Education\",\n        user_required_docs: [\n          {\n            user_detail_subcategory_id: \"60fc48dbf485d8dd91ed321f\",\n            title: \"A1\",\n          },\n        ],\n      },\n      {\n        user_detail_category_id: \"60fc47dff485d8dd91ed3219\",\n        title: \"Language\",\n        user_required_docs: [\n          {\n            user_detail_subcategory_id: \"6102e7ec248f742b674c67ad\",\n            title: \"English\",\n          },\n          {\n            user_detail_subcategory_id: \"6102e84c248f742b674c67af\",\n            title: \"Ikinyarwanda\",\n          },\n        ],\n      },\n    ],\n    position_id: \"6103a7ec75cc702bbd1582eb\",\n  },\n];\n\nexport const data_posts_school: PostSchoolInterface[] = [];\n\nexport const isEmptyOrSpaces = (str: string): boolean => {\n  return str === null || str.match(/^ *$/) !== null;\n};\n\nexport const getUserTitle = (\n  accessRoles: SystemUserRoleInterface[],\n  roleId: string\n): string => {\n  const result = accessRoles.find((e) => e.system_user_role_id === roleId);\n  return result ? result.role : \"\";\n};\n\nexport const getRoleById = (\n  roles: SystemUserRoleInterface[],\n  roleId: string\n): SystemUserRoleInterface => {\n  return roles.filter((role) => role.system_user_role_id === roleId)[0];\n};\n\nexport const getInstituteById = (\n  institutes: education_category[],\n  instituteId: string\n): education_category | undefined => {\n  return institutes.find((item) => item.education_institute_id === instituteId);\n};\n\nexport const getPositionById_old = (\n  positions: PositionAPI[],\n  position_id: string\n): PositionAPI => {\n  console.log({\n    positions,\n    position_id,\n    data: positions.filter(\n      (position) => position.position_id === position_id\n    )[0],\n  });\n  return positions.filter(\n    (position) => position.position_id === position_id\n  )[0];\n};\n\nexport const getPositionById = (\n  positions: PositionAPI[],\n  position_id: string\n): PositionAPI | undefined => {\n  return positions.find((position) => position.position_id === position_id);\n};\n\nexport const getSchoolById = (\n  schools: SchoolInfoInterface[],\n  school_id: string\n): SchoolInfoInterface => {\n  return schools.filter((school) => school.school_id === school_id)[0];\n};\n\nexport const getPostById = (\n  posts: PostSchoolInterface[],\n  post_id: string\n): PostSchoolInterface => {\n  return posts.filter((post) => post.school_id === post_id)[0];\n};\n\nexport const getPostsBySchoolId = (\n  posts: PostSchoolInterface[],\n  school_id: string\n): PostSchoolInterface[] => {\n  return posts.filter((post) => post.school_id === school_id);\n};\n\nexport const getPostsByIds = (\n  posts: PostSchoolInterface[],\n  school_id: string,\n  position_id: string\n): PostSchoolInterface[] => {\n  return posts.filter(\n    (post) => post.school_id === school_id && post.position_id === position_id\n  );\n};\n\nexport const displayDate = (dateToDisplay: Date): string => {\n  return new Intl.DateTimeFormat(\"en-GB\", {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"2-digit\",\n  }).format(dateToDisplay);\n};\n\nexport const userAccess = (\n  defaultAccess: RoleToUserInterface,\n  customAccess: CustomeAccessInterface\n): RoleToUserInterface => {\n  // const data = defaultAccess.access.map((default,index,customAccess)=>{\n  //   let data_custom = customAccess\n  //   if\n  // })\n  // return customAccess.filter((custom) => custom.id === accecc_id)[0];\n  return defaultAccess;\n};\n\n// export const groupBy = (list: [], keyGetter: Function) => {\n//   const map = new Map();\n//   list.forEach((item) => {\n//     const key = keyGetter(item);\n//     const collection = map.get(key);\n//     if (!collection) {\n//       map.set(key, [item]);\n//     } else {\n//       collection.push(item);\n//     }\n//   });\n//   return map;\n// };\n\nexport const toTwoDigit = (value: number): string => {\n  var dec = value - Math.floor(value);\n  value = value - dec;\n  return (\"0\" + value).slice(-2) + dec.toString().substr(1);\n};\n\nexport const toAnyDigit = (\n  value: NumberFormat,\n  padding: number = 3\n): string => {\n  var zeroes = new Array(padding + 1).join(\"0\");\n  return (zeroes + value).slice(-padding);\n};\n\nexport const choosenSchool = \"611fce914ce2093472232f5f\";\nexport const choosenDistrict = \"610bd1f3334bb2405fa5061e\";\n\nexport const capitalizeFirstLetter = (value: string): string => {\n  return value.charAt(0).toUpperCase() + value.slice(1);\n};\n\nexport const isDateExpiried = (paramDate: string) => {\n  const thisDate = new Date(paramDate);\n  const today = new Date();\n  if (thisDate.getTime() < today.getTime()) {\n    return true;\n  }\n\n  return false;\n};\n\nexport const exportData = [\n  {\n    userId: 1,\n    id: 1,\n    title:\n      \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\n    body: \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\",\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: \"qui est esse\",\n    body: \"est rerum tempore vitae\\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\\nqui aperiam non debitis possimus qui neque nisi nulla\",\n  },\n  {\n    userId: 1,\n    id: 3,\n    title: \"ea molestias quasi exercitationem repellat qui ipsa sit aut\",\n    body: \"et iusto sed quo iure\\nvoluptatem occaecati omnis eligendi aut ad\\nvoluptatem doloribus vel accusantium quis pariatur\\nmolestiae porro eius odio et labore et velit aut\",\n  },\n  {\n    userId: 1,\n    id: 4,\n    title: \"eum et est occaecati\",\n    body: \"ullam et saepe reiciendis voluptatem adipisci\\nsit amet autem assumenda provident rerum culpa\\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\\nquis sunt voluptatem rerum illo velit\",\n  },\n  {\n    userId: 1,\n    id: 5,\n    title: \"nesciunt quas odio\",\n    body: \"repudiandae veniam quaerat sunt sed\\nalias aut fugiat sit autem sed est\\nvoluptatem omnis possimus esse voluptatibus quis\\nest aut tenetur dolor neque\",\n  },\n  {\n    userId: 1,\n    id: 6,\n    title: \"dolorem eum magni eos aperiam quia\",\n    body: \"ut aspernatur corporis harum nihil quis provident sequi\\nmollitia nobis aliquid molestiae\\nperspiciatis et ea nemo ab reprehenderit accusantium quas\\nvoluptate dolores velit et doloremque molestiae\",\n  },\n  {\n    userId: 1,\n    id: 7,\n    title: \"magnam facilis autem\",\n    body: \"dolore placeat quibusdam ea quo vitae\\nmagni quis enim qui quis quo nemo aut saepe\\nquidem repellat excepturi ut quia\\nsunt ut sequi eos ea sed quas\",\n  },\n  {\n    userId: 1,\n    id: 8,\n    title: \"dolorem dolore est ipsam\",\n    body: \"dignissimos aperiam dolorem qui eum\\nfacilis quibusdam animi sint suscipit qui sint possimus cum\\nquaerat magni maiores excepturi\\nipsam ut commodi dolor voluptatum modi aut vitae\",\n  },\n  {\n    userId: 1,\n    id: 9,\n    title: \"nesciunt iure omnis dolorem tempora et accusantium\",\n    body: \"consectetur animi nesciunt iure dolore\\nenim quia ad\\nveniam autem ut quam aut nobis\\net est aut quod aut provident voluptas autem voluptas\",\n  },\n  {\n    userId: 1,\n    id: 10,\n    title: \"optio molestias id quia eum\",\n    body: \"quo et expedita modi cum officia vel magni\\ndoloribus qui repudiandae\\nvero nisi sit\\nquos veniam quod sed accusamus veritatis error\",\n  },\n  {\n    userId: 2,\n    id: 11,\n    title: \"et ea vero quia laudantium autem\",\n    body: \"delectus reiciendis molestiae occaecati non minima eveniet qui voluptatibus\\naccusamus in eum beatae sit\\nvel qui neque voluptates ut commodi qui incidunt\\nut animi commodi\",\n  },\n  {\n    userId: 2,\n    id: 12,\n    title: \"in quibusdam tempore odit est dolorem\",\n    body: \"itaque id aut magnam\\npraesentium quia et ea odit et ea voluptas et\\nsapiente quia nihil amet occaecati quia id voluptatem\\nincidunt ea est distinctio odio\",\n  },\n  {\n    userId: 2,\n    id: 13,\n    title: \"dolorum ut in voluptas mollitia et saepe quo animi\",\n    body: \"aut dicta possimus sint mollitia voluptas commodi quo doloremque\\niste corrupti reiciendis voluptatem eius rerum\\nsit cumque quod eligendi laborum minima\\nperferendis recusandae assumenda consectetur porro architecto ipsum ipsam\",\n  },\n  {\n    userId: 2,\n    id: 14,\n    title: \"voluptatem eligendi optio\",\n    body: \"fuga et accusamus dolorum perferendis illo voluptas\\nnon doloremque neque facere\\nad qui dolorum molestiae beatae\\nsed aut voluptas totam sit illum\",\n  },\n  {\n    userId: 2,\n    id: 15,\n    title: \"eveniet quod temporibus\",\n    body: \"reprehenderit quos placeat\\nvelit minima officia dolores impedit repudiandae molestiae nam\\nvoluptas recusandae quis delectus\\nofficiis harum fugiat vitae\",\n  },\n  {\n    userId: 2,\n    id: 16,\n    title:\n      \"sint suscipit perspiciatis velit dolorum rerum ipsa laboriosam odio\",\n    body: \"suscipit nam nisi quo aperiam aut\\nasperiores eos fugit maiores voluptatibus quia\\nvoluptatem quis ullam qui in alias quia est\\nconsequatur magni mollitia accusamus ea nisi voluptate dicta\",\n  },\n  {\n    userId: 2,\n    id: 17,\n    title: \"fugit voluptas sed molestias voluptatem provident\",\n    body: \"eos voluptas et aut odit natus earum\\naspernatur fuga molestiae ullam\\ndeserunt ratione qui eos\\nqui nihil ratione nemo velit ut aut id quo\",\n  },\n  {\n    userId: 2,\n    id: 18,\n    title: \"voluptate et itaque vero tempora molestiae\",\n    body: \"eveniet quo quis\\nlaborum totam consequatur non dolor\\nut et est repudiandae\\nest voluptatem vel debitis et magnam\",\n  },\n  {\n    userId: 2,\n    id: 19,\n    title: \"adipisci placeat illum aut reiciendis qui\",\n    body: \"illum quis cupiditate provident sit magnam\\nea sed aut omnis\\nveniam maiores ullam consequatur atque\\nadipisci quo iste expedita sit quos voluptas\",\n  },\n  {\n    userId: 2,\n    id: 20,\n    title: \"doloribus ad provident suscipit at\",\n    body: \"qui consequuntur ducimus possimus quisquam amet similique\\nsuscipit porro ipsam amet\\neos veritatis officiis exercitationem vel fugit aut necessitatibus totam\\nomnis rerum consequatur expedita quidem cumque explicabo\",\n  },\n  {\n    userId: 3,\n    id: 21,\n    title: \"asperiores ea ipsam voluptatibus modi minima quia sint\",\n    body: \"repellat aliquid praesentium dolorem quo\\nsed totam minus non itaque\\nnihil labore molestiae sunt dolor eveniet hic recusandae veniam\\ntempora et tenetur expedita sunt\",\n  },\n  {\n    userId: 3,\n    id: 22,\n    title: \"dolor sint quo a velit explicabo quia nam\",\n    body: \"eos qui et ipsum ipsam suscipit aut\\nsed omnis non odio\\nexpedita earum mollitia molestiae aut atque rem suscipit\\nnam impedit esse\",\n  },\n  {\n    userId: 3,\n    id: 23,\n    title: \"maxime id vitae nihil numquam\",\n    body: \"veritatis unde neque eligendi\\nquae quod architecto quo neque vitae\\nest illo sit tempora doloremque fugit quod\\net et vel beatae sequi ullam sed tenetur perspiciatis\",\n  },\n  {\n    userId: 3,\n    id: 24,\n    title: \"autem hic labore sunt dolores incidunt\",\n    body: \"enim et ex nulla\\nomnis voluptas quia qui\\nvoluptatem consequatur numquam aliquam sunt\\ntotam recusandae id dignissimos aut sed asperiores deserunt\",\n  },\n  {\n    userId: 3,\n    id: 25,\n    title: \"rem alias distinctio quo quis\",\n    body: \"ullam consequatur ut\\nomnis quis sit vel consequuntur\\nipsa eligendi ipsum molestiae et omnis error nostrum\\nmolestiae illo tempore quia et distinctio\",\n  },\n  {\n    userId: 3,\n    id: 26,\n    title: \"est et quae odit qui non\",\n    body: \"similique esse doloribus nihil accusamus\\nomnis dolorem fuga consequuntur reprehenderit fugit recusandae temporibus\\nperspiciatis cum ut laudantium\\nomnis aut molestiae vel vero\",\n  },\n  {\n    userId: 3,\n    id: 27,\n    title: \"quasi id et eos tenetur aut quo autem\",\n    body: \"eum sed dolores ipsam sint possimus debitis occaecati\\ndebitis qui qui et\\nut placeat enim earum aut odit facilis\\nconsequatur suscipit necessitatibus rerum sed inventore temporibus consequatur\",\n  },\n  {\n    userId: 3,\n    id: 28,\n    title: \"delectus ullam et corporis nulla voluptas sequi\",\n    body: \"non et quaerat ex quae ad maiores\\nmaiores recusandae totam aut blanditiis mollitia quas illo\\nut voluptatibus voluptatem\\nsimilique nostrum eum\",\n  },\n  {\n    userId: 3,\n    id: 29,\n    title: \"iusto eius quod necessitatibus culpa ea\",\n    body: \"odit magnam ut saepe sed non qui\\ntempora atque nihil\\naccusamus illum doloribus illo dolor\\neligendi repudiandae odit magni similique sed cum maiores\",\n  },\n  {\n    userId: 3,\n    id: 30,\n    title: \"a quo magni similique perferendis\",\n    body: \"alias dolor cumque\\nimpedit blanditiis non eveniet odio maxime\\nblanditiis amet eius quis tempora quia autem rem\\na provident perspiciatis quia\",\n  },\n  {\n    userId: 4,\n    id: 31,\n    title: \"ullam ut quidem id aut vel consequuntur\",\n    body: \"debitis eius sed quibusdam non quis consectetur vitae\\nimpedit ut qui consequatur sed aut in\\nquidem sit nostrum et maiores adipisci atque\\nquaerat voluptatem adipisci repudiandae\",\n  },\n  {\n    userId: 4,\n    id: 32,\n    title: \"doloremque illum aliquid sunt\",\n    body: \"deserunt eos nobis asperiores et hic\\nest debitis repellat molestiae optio\\nnihil ratione ut eos beatae quibusdam distinctio maiores\\nearum voluptates et aut adipisci ea maiores voluptas maxime\",\n  },\n  {\n    userId: 4,\n    id: 33,\n    title: \"qui explicabo molestiae dolorem\",\n    body: \"rerum ut et numquam laborum odit est sit\\nid qui sint in\\nquasi tenetur tempore aperiam et quaerat qui in\\nrerum officiis sequi cumque quod\",\n  },\n  {\n    userId: 4,\n    id: 34,\n    title: \"magnam ut rerum iure\",\n    body: \"ea velit perferendis earum ut voluptatem voluptate itaque iusto\\ntotam pariatur in\\nnemo voluptatem voluptatem autem magni tempora minima in\\nest distinctio qui assumenda accusamus dignissimos officia nesciunt nobis\",\n  },\n  {\n    userId: 4,\n    id: 35,\n    title: \"id nihil consequatur molestias animi provident\",\n    body: \"nisi error delectus possimus ut eligendi vitae\\nplaceat eos harum cupiditate facilis reprehenderit voluptatem beatae\\nmodi ducimus quo illum voluptas eligendi\\net nobis quia fugit\",\n  },\n  {\n    userId: 4,\n    id: 36,\n    title: \"fuga nam accusamus voluptas reiciendis itaque\",\n    body: \"ad mollitia et omnis minus architecto odit\\nvoluptas doloremque maxime aut non ipsa qui alias veniam\\nblanditiis culpa aut quia nihil cumque facere et occaecati\\nqui aspernatur quia eaque ut aperiam inventore\",\n  },\n  {\n    userId: 4,\n    id: 37,\n    title: \"provident vel ut sit ratione est\",\n    body: \"debitis et eaque non officia sed nesciunt pariatur vel\\nvoluptatem iste vero et ea\\nnumquam aut expedita ipsum nulla in\\nvoluptates omnis consequatur aut enim officiis in quam qui\",\n  },\n  {\n    userId: 4,\n    id: 38,\n    title: \"explicabo et eos deleniti nostrum ab id repellendus\",\n    body: \"animi esse sit aut sit nesciunt assumenda eum voluptas\\nquia voluptatibus provident quia necessitatibus ea\\nrerum repudiandae quia voluptatem delectus fugit aut id quia\\nratione optio eos iusto veniam iure\",\n  },\n  {\n    userId: 4,\n    id: 39,\n    title: \"eos dolorem iste accusantium est eaque quam\",\n    body: \"corporis rerum ducimus vel eum accusantium\\nmaxime aspernatur a porro possimus iste omnis\\nest in deleniti asperiores fuga aut\\nvoluptas sapiente vel dolore minus voluptatem incidunt ex\",\n  },\n  {\n    userId: 4,\n    id: 40,\n    title: \"enim quo cumque\",\n    body: \"ut voluptatum aliquid illo tenetur nemo sequi quo facilis\\nipsum rem optio mollitia quas\\nvoluptatem eum voluptas qui\\nunde omnis voluptatem iure quasi maxime voluptas nam\",\n  },\n  {\n    userId: 5,\n    id: 41,\n    title: \"non est facere\",\n    body: \"molestias id nostrum\\nexcepturi molestiae dolore omnis repellendus quaerat saepe\\nconsectetur iste quaerat tenetur asperiores accusamus ex ut\\nnam quidem est ducimus sunt debitis saepe\",\n  },\n  {\n    userId: 5,\n    id: 42,\n    title:\n      \"commodi ullam sint et excepturi error explicabo praesentium voluptas\",\n    body: \"odio fugit voluptatum ducimus earum autem est incidunt voluptatem\\nodit reiciendis aliquam sunt sequi nulla dolorem\\nnon facere repellendus voluptates quia\\nratione harum vitae ut\",\n  },\n  {\n    userId: 5,\n    id: 43,\n    title:\n      \"eligendi iste nostrum consequuntur adipisci praesentium sit beatae perferendis\",\n    body: \"similique fugit est\\nillum et dolorum harum et voluptate eaque quidem\\nexercitationem quos nam commodi possimus cum odio nihil nulla\\ndolorum exercitationem magnam ex et a et distinctio debitis\",\n  },\n  {\n    userId: 5,\n    id: 44,\n    title: \"optio dolor molestias sit\",\n    body: \"temporibus est consectetur dolore\\net libero debitis vel velit laboriosam quia\\nipsum quibusdam qui itaque fuga rem aut\\nea et iure quam sed maxime ut distinctio quae\",\n  },\n  {\n    userId: 5,\n    id: 45,\n    title: \"ut numquam possimus omnis eius suscipit laudantium iure\",\n    body: \"est natus reiciendis nihil possimus aut provident\\nex et dolor\\nrepellat pariatur est\\nnobis rerum repellendus dolorem autem\",\n  },\n  {\n    userId: 5,\n    id: 46,\n    title: \"aut quo modi neque nostrum ducimus\",\n    body: \"voluptatem quisquam iste\\nvoluptatibus natus officiis facilis dolorem\\nquis quas ipsam\\nvel et voluptatum in aliquid\",\n  },\n  {\n    userId: 5,\n    id: 47,\n    title: \"quibusdam cumque rem aut deserunt\",\n    body: \"voluptatem assumenda ut qui ut cupiditate aut impedit veniam\\noccaecati nemo illum voluptatem laudantium\\nmolestiae beatae rerum ea iure soluta nostrum\\neligendi et voluptate\",\n  },\n  {\n    userId: 5,\n    id: 48,\n    title: \"ut voluptatem illum ea doloribus itaque eos\",\n    body: \"voluptates quo voluptatem facilis iure occaecati\\nvel assumenda rerum officia et\\nillum perspiciatis ab deleniti\\nlaudantium repellat ad ut et autem reprehenderit\",\n  },\n  {\n    userId: 5,\n    id: 49,\n    title: \"laborum non sunt aut ut assumenda perspiciatis voluptas\",\n    body: \"inventore ab sint\\nnatus fugit id nulla sequi architecto nihil quaerat\\neos tenetur in in eum veritatis non\\nquibusdam officiis aspernatur cumque aut commodi aut\",\n  },\n  {\n    userId: 5,\n    id: 50,\n    title:\n      \"repellendus qui recusandae incidunt voluptates tenetur qui omnis exercitationem\",\n    body: \"error suscipit maxime adipisci consequuntur recusandae\\nvoluptas eligendi et est et voluptates\\nquia distinctio ab amet quaerat molestiae et vitae\\nadipisci impedit sequi nesciunt quis consectetur\",\n  },\n  {\n    userId: 6,\n    id: 51,\n    title: \"soluta aliquam aperiam consequatur illo quis voluptas\",\n    body: \"sunt dolores aut doloribus\\ndolore doloribus voluptates tempora et\\ndoloremque et quo\\ncum asperiores sit consectetur dolorem\",\n  },\n  {\n    userId: 6,\n    id: 52,\n    title: \"qui enim et consequuntur quia animi quis voluptate quibusdam\",\n    body: \"iusto est quibusdam fuga quas quaerat molestias\\na enim ut sit accusamus enim\\ntemporibus iusto accusantium provident architecto\\nsoluta esse reprehenderit qui laborum\",\n  },\n  {\n    userId: 6,\n    id: 53,\n    title: \"ut quo aut ducimus alias\",\n    body: \"minima harum praesentium eum rerum illo dolore\\nquasi exercitationem rerum nam\\nporro quis neque quo\\nconsequatur minus dolor quidem veritatis sunt non explicabo similique\",\n  },\n  {\n    userId: 6,\n    id: 54,\n    title: \"sit asperiores ipsam eveniet odio non quia\",\n    body: \"totam corporis dignissimos\\nvitae dolorem ut occaecati accusamus\\nex velit deserunt\\net exercitationem vero incidunt corrupti mollitia\",\n  },\n  {\n    userId: 6,\n    id: 55,\n    title: \"sit vel voluptatem et non libero\",\n    body: \"debitis excepturi ea perferendis harum libero optio\\neos accusamus cum fuga ut sapiente repudiandae\\net ut incidunt omnis molestiae\\nnihil ut eum odit\",\n  },\n  {\n    userId: 6,\n    id: 56,\n    title: \"qui et at rerum necessitatibus\",\n    body: \"aut est omnis dolores\\nneque rerum quod ea rerum velit pariatur beatae excepturi\\net provident voluptas corrupti\\ncorporis harum reprehenderit dolores eligendi\",\n  },\n  {\n    userId: 6,\n    id: 57,\n    title: \"sed ab est est\",\n    body: \"at pariatur consequuntur earum quidem\\nquo est laudantium soluta voluptatem\\nqui ullam et est\\net cum voluptas voluptatum repellat est\",\n  },\n  {\n    userId: 6,\n    id: 58,\n    title: \"voluptatum itaque dolores nisi et quasi\",\n    body: \"veniam voluptatum quae adipisci id\\net id quia eos ad et dolorem\\naliquam quo nisi sunt eos impedit error\\nad similique veniam\",\n  },\n  {\n    userId: 6,\n    id: 59,\n    title: \"qui commodi dolor at maiores et quis id accusantium\",\n    body: \"perspiciatis et quam ea autem temporibus non voluptatibus qui\\nbeatae a earum officia nesciunt dolores suscipit voluptas et\\nanimi doloribus cum rerum quas et magni\\net hic ut ut commodi expedita sunt\",\n  },\n  {\n    userId: 6,\n    id: 60,\n    title:\n      \"consequatur placeat omnis quisquam quia reprehenderit fugit veritatis facere\",\n    body: \"asperiores sunt ab assumenda cumque modi velit\\nqui esse omnis\\nvoluptate et fuga perferendis voluptas\\nillo ratione amet aut et omnis\",\n  },\n  {\n    userId: 7,\n    id: 61,\n    title: \"voluptatem doloribus consectetur est ut ducimus\",\n    body: \"ab nemo optio odio\\ndelectus tenetur corporis similique nobis repellendus rerum omnis facilis\\nvero blanditiis debitis in nesciunt doloribus dicta dolores\\nmagnam minus velit\",\n  },\n  {\n    userId: 7,\n    id: 62,\n    title: \"beatae enim quia vel\",\n    body: \"enim aspernatur illo distinctio quae praesentium\\nbeatae alias amet delectus qui voluptate distinctio\\nodit sint accusantium autem omnis\\nquo molestiae omnis ea eveniet optio\",\n  },\n  {\n    userId: 7,\n    id: 63,\n    title:\n      \"voluptas blanditiis repellendus animi ducimus error sapiente et suscipit\",\n    body: \"enim adipisci aspernatur nemo\\nnumquam omnis facere dolorem dolor ex quis temporibus incidunt\\nab delectus culpa quo reprehenderit blanditiis asperiores\\naccusantium ut quam in voluptatibus voluptas ipsam dicta\",\n  },\n  {\n    userId: 7,\n    id: 64,\n    title: \"et fugit quas eum in in aperiam quod\",\n    body: \"id velit blanditiis\\neum ea voluptatem\\nmolestiae sint occaecati est eos perspiciatis\\nincidunt a error provident eaque aut aut qui\",\n  },\n  {\n    userId: 7,\n    id: 65,\n    title: \"consequatur id enim sunt et et\",\n    body: \"voluptatibus ex esse\\nsint explicabo est aliquid cumque adipisci fuga repellat labore\\nmolestiae corrupti ex saepe at asperiores et perferendis\\nnatus id esse incidunt pariatur\",\n  },\n  {\n    userId: 7,\n    id: 66,\n    title: \"repudiandae ea animi iusto\",\n    body: \"officia veritatis tenetur vero qui itaque\\nsint non ratione\\nsed et ut asperiores iusto eos molestiae nostrum\\nveritatis quibusdam et nemo iusto saepe\",\n  },\n  {\n    userId: 7,\n    id: 67,\n    title: \"aliquid eos sed fuga est maxime repellendus\",\n    body: \"reprehenderit id nostrum\\nvoluptas doloremque pariatur sint et accusantium quia quod aspernatur\\net fugiat amet\\nnon sapiente et consequatur necessitatibus molestiae\",\n  },\n  {\n    userId: 7,\n    id: 68,\n    title: \"odio quis facere architecto reiciendis optio\",\n    body: \"magnam molestiae perferendis quisquam\\nqui cum reiciendis\\nquaerat animi amet hic inventore\\nea quia deleniti quidem saepe porro velit\",\n  },\n  {\n    userId: 7,\n    id: 69,\n    title: \"fugiat quod pariatur odit minima\",\n    body: \"officiis error culpa consequatur modi asperiores et\\ndolorum assumenda voluptas et vel qui aut vel rerum\\nvoluptatum quisquam perspiciatis quia rerum consequatur totam quas\\nsequi commodi repudiandae asperiores et saepe a\",\n  },\n  {\n    userId: 7,\n    id: 70,\n    title: \"voluptatem laborum magni\",\n    body: \"sunt repellendus quae\\nest asperiores aut deleniti esse accusamus repellendus quia aut\\nquia dolorem unde\\neum tempora esse dolore\",\n  },\n  {\n    userId: 8,\n    id: 71,\n    title: \"et iusto veniam et illum aut fuga\",\n    body: \"occaecati a doloribus\\niste saepe consectetur placeat eum voluptate dolorem et\\nqui quo quia voluptas\\nrerum ut id enim velit est perferendis\",\n  },\n  {\n    userId: 8,\n    id: 72,\n    title: \"sint hic doloribus consequatur eos non id\",\n    body: \"quam occaecati qui deleniti consectetur\\nconsequatur aut facere quas exercitationem aliquam hic voluptas\\nneque id sunt ut aut accusamus\\nsunt consectetur expedita inventore velit\",\n  },\n  {\n    userId: 8,\n    id: 73,\n    title: \"consequuntur deleniti eos quia temporibus ab aliquid at\",\n    body: \"voluptatem cumque tenetur consequatur expedita ipsum nemo quia explicabo\\naut eum minima consequatur\\ntempore cumque quae est et\\net in consequuntur voluptatem voluptates aut\",\n  },\n  {\n    userId: 8,\n    id: 74,\n    title: \"enim unde ratione doloribus quas enim ut sit sapiente\",\n    body: \"odit qui et et necessitatibus sint veniam\\nmollitia amet doloremque molestiae commodi similique magnam et quam\\nblanditiis est itaque\\nquo et tenetur ratione occaecati molestiae tempora\",\n  },\n  {\n    userId: 8,\n    id: 75,\n    title: \"dignissimos eum dolor ut enim et delectus in\",\n    body: \"commodi non non omnis et voluptas sit\\nautem aut nobis magnam et sapiente voluptatem\\net laborum repellat qui delectus facilis temporibus\\nrerum amet et nemo voluptate expedita adipisci error dolorem\",\n  },\n  {\n    userId: 8,\n    id: 76,\n    title: \"doloremque officiis ad et non perferendis\",\n    body: \"ut animi facere\\ntotam iusto tempore\\nmolestiae eum aut et dolorem aperiam\\nquaerat recusandae totam odio\",\n  },\n  {\n    userId: 8,\n    id: 77,\n    title: \"necessitatibus quasi exercitationem odio\",\n    body: \"modi ut in nulla repudiandae dolorum nostrum eos\\naut consequatur omnis\\nut incidunt est omnis iste et quam\\nvoluptates sapiente aliquam asperiores nobis amet corrupti repudiandae provident\",\n  },\n  {\n    userId: 8,\n    id: 78,\n    title: \"quam voluptatibus rerum veritatis\",\n    body: \"nobis facilis odit tempore cupiditate quia\\nassumenda doloribus rerum qui ea\\nillum et qui totam\\naut veniam repellendus\",\n  },\n  {\n    userId: 8,\n    id: 79,\n    title: \"pariatur consequatur quia magnam autem omnis non amet\",\n    body: \"libero accusantium et et facere incidunt sit dolorem\\nnon excepturi qui quia sed laudantium\\nquisquam molestiae ducimus est\\nofficiis esse molestiae iste et quos\",\n  },\n  {\n    userId: 8,\n    id: 80,\n    title: \"labore in ex et explicabo corporis aut quas\",\n    body: \"ex quod dolorem ea eum iure qui provident amet\\nquia qui facere excepturi et repudiandae\\nasperiores molestias provident\\nminus incidunt vero fugit rerum sint sunt excepturi provident\",\n  },\n  {\n    userId: 9,\n    id: 81,\n    title: \"tempora rem veritatis voluptas quo dolores vero\",\n    body: \"facere qui nesciunt est voluptatum voluptatem nisi\\nsequi eligendi necessitatibus ea at rerum itaque\\nharum non ratione velit laboriosam quis consequuntur\\nex officiis minima doloremque voluptas ut aut\",\n  },\n  {\n    userId: 9,\n    id: 82,\n    title: \"laudantium voluptate suscipit sunt enim enim\",\n    body: \"ut libero sit aut totam inventore sunt\\nporro sint qui sunt molestiae\\nconsequatur cupiditate qui iste ducimus adipisci\\ndolor enim assumenda soluta laboriosam amet iste delectus hic\",\n  },\n  {\n    userId: 9,\n    id: 83,\n    title: \"odit et voluptates doloribus alias odio et\",\n    body: \"est molestiae facilis quis tempora numquam nihil qui\\nvoluptate sapiente consequatur est qui\\nnecessitatibus autem aut ipsa aperiam modi dolore numquam\\nreprehenderit eius rem quibusdam\",\n  },\n  {\n    userId: 9,\n    id: 84,\n    title:\n      \"optio ipsam molestias necessitatibus occaecati facilis veritatis dolores aut\",\n    body: \"sint molestiae magni a et quos\\neaque et quasi\\nut rerum debitis similique veniam\\nrecusandae dignissimos dolor incidunt consequatur odio\",\n  },\n  {\n    userId: 9,\n    id: 85,\n    title: \"dolore veritatis porro provident adipisci blanditiis et sunt\",\n    body: \"similique sed nisi voluptas iusto omnis\\nmollitia et quo\\nassumenda suscipit officia magnam sint sed tempora\\nenim provident pariatur praesentium atque animi amet ratione\",\n  },\n  {\n    userId: 9,\n    id: 86,\n    title: \"placeat quia et porro iste\",\n    body: \"quasi excepturi consequatur iste autem temporibus sed molestiae beatae\\net quaerat et esse ut\\nvoluptatem occaecati et vel explicabo autem\\nasperiores pariatur deserunt optio\",\n  },\n  {\n    userId: 9,\n    id: 87,\n    title: \"nostrum quis quasi placeat\",\n    body: \"eos et molestiae\\nnesciunt ut a\\ndolores perspiciatis repellendus repellat aliquid\\nmagnam sint rem ipsum est\",\n  },\n  {\n    userId: 9,\n    id: 88,\n    title: \"sapiente omnis fugit eos\",\n    body: \"consequatur omnis est praesentium\\nducimus non iste\\nneque hic deserunt\\nvoluptatibus veniam cum et rerum sed\",\n  },\n  {\n    userId: 9,\n    id: 89,\n    title: \"sint soluta et vel magnam aut ut sed qui\",\n    body: \"repellat aut aperiam totam temporibus autem et\\narchitecto magnam ut\\nconsequatur qui cupiditate rerum quia soluta dignissimos nihil iure\\ntempore quas est\",\n  },\n  {\n    userId: 9,\n    id: 90,\n    title: \"ad iusto omnis odit dolor voluptatibus\",\n    body: \"minus omnis soluta quia\\nqui sed adipisci voluptates illum ipsam voluptatem\\neligendi officia ut in\\neos soluta similique molestias praesentium blanditiis\",\n  },\n  {\n    userId: 10,\n    id: 91,\n    title: \"aut amet sed\",\n    body: \"libero voluptate eveniet aperiam sed\\nsunt placeat suscipit molestias\\nsimilique fugit nam natus\\nexpedita consequatur consequatur dolores quia eos et placeat\",\n  },\n  {\n    userId: 10,\n    id: 92,\n    title: \"ratione ex tenetur perferendis\",\n    body: \"aut et excepturi dicta laudantium sint rerum nihil\\nlaudantium et at\\na neque minima officia et similique libero et\\ncommodi voluptate qui\",\n  },\n  {\n    userId: 10,\n    id: 93,\n    title: \"beatae soluta recusandae\",\n    body: \"dolorem quibusdam ducimus consequuntur dicta aut quo laboriosam\\nvoluptatem quis enim recusandae ut sed sunt\\nnostrum est odit totam\\nsit error sed sunt eveniet provident qui nulla\",\n  },\n  {\n    userId: 10,\n    id: 94,\n    title: \"qui qui voluptates illo iste minima\",\n    body: \"aspernatur expedita soluta quo ab ut similique\\nexpedita dolores amet\\nsed temporibus distinctio magnam saepe deleniti\\nomnis facilis nam ipsum natus sint similique omnis\",\n  },\n  {\n    userId: 10,\n    id: 95,\n    title: \"id minus libero illum nam ad officiis\",\n    body: \"earum voluptatem facere provident blanditiis velit laboriosam\\npariatur accusamus odio saepe\\ncumque dolor qui a dicta ab doloribus consequatur omnis\\ncorporis cupiditate eaque assumenda ad nesciunt\",\n  },\n  {\n    userId: 10,\n    id: 96,\n    title: \"quaerat velit veniam amet cupiditate aut numquam ut sequi\",\n    body: \"in non odio excepturi sint eum\\nlabore voluptates vitae quia qui et\\ninventore itaque rerum\\nveniam non exercitationem delectus aut\",\n  },\n  {\n    userId: 10,\n    id: 97,\n    title: \"quas fugiat ut perspiciatis vero provident\",\n    body: \"eum non blanditiis soluta porro quibusdam voluptas\\nvel voluptatem qui placeat dolores qui velit aut\\nvel inventore aut cumque culpa explicabo aliquid at\\nperspiciatis est et voluptatem dignissimos dolor itaque sit nam\",\n  },\n  {\n    userId: 10,\n    id: 98,\n    title: \"laboriosam dolor voluptates\",\n    body: \"doloremque ex facilis sit sint culpa\\nsoluta assumenda eligendi non ut eius\\nsequi ducimus vel quasi\\nveritatis est dolores\",\n  },\n  {\n    userId: 10,\n    id: 99,\n    title: \"temporibus sit alias delectus eligendi possimus magni\",\n    body: \"quo deleniti praesentium dicta non quod\\naut est molestias\\nmolestias et officia quis nihil\\nitaque dolorem quia\",\n  },\n  {\n    userId: 10,\n    id: 100,\n    title: \"at nam consequatur ea labore ea harum\",\n    body: \"cupiditate quo est a modi nesciunt soluta\\nipsa voluptas error itaque dicta in\\nautem qui minus magnam et distinctio eum\\naccusamus ratione error aut\",\n  },\n];\n","import { candidateExamStoreInterface } from \"../actions/candidate_exam\";\nimport {\n  applicationExamAPI,\n  ApplicationPeriodGet,\n} from \"../interfaces/application\";\nimport { ExamAnswerSheetDone } from \"../interfaces/exam\";\nimport { PositionAPI, PositionAPICourse } from \"../interfaces/position\";\nimport { questionType, questionTypeElements } from \"../interfaces/question\";\nimport moment from \"moment-timezone\";\nimport { TimeZone } from \"./app.config\";\nimport { questionTypeElementsType } from \"@mastrecruit/common\";\n\nconst today = moment().tz(TimeZone);\n\nexport const getQuestionType = (\n  question_types: questionType[] | null,\n  type_id: string\n) => {\n  let type: questionTypeElementsType | null = null;\n  if (question_types !== null) {\n    let check = question_types.find((itm) => itm.id === type_id);\n    if (check !== undefined) {\n      let check_type = questionTypeElements.find(\n        (itm) => check && itm.key === check.element\n      );\n      if (check_type !== undefined) {\n        type = check_type.key;\n      }\n    }\n  }\n  return type;\n};\n\nexport const findTotalMarks = (\n  courses: PositionAPICourse[],\n  results: ExamAnswerSheetDone[] | null\n) => {\n  if (results !== null) {\n    let sum: number = 0;\n    for (let course of courses) {\n      let test = results.find((itm) => itm.course === course.course_id);\n      if (test !== undefined) {\n        sum = sum + test.total_marks;\n      }\n    }\n    return sum.toFixed(2);\n  } else {\n    return \"Wait...\";\n  }\n};\n\nexport const CheckIfExamDone = (\n  courses: PositionAPICourse[],\n  results: ExamAnswerSheetDone[] | null\n) => {\n  let res: boolean = false;\n  if (results !== null) {\n    for (let course of courses) {\n      let test = results.find((itm) => itm.course === course.course_id);\n      if (test !== undefined) {\n        res = true;\n      }\n    }\n  }\n  return res;\n};\n\nexport const validateCalculatedFormula = (\n  formula: string\n): { status: boolean; msg: string } => {\n  let characters: string[] = [];\n  if (\n    formula === undefined ||\n    formula === \"\" ||\n    formula.length === undefined ||\n    formula.length === 0\n  ) {\n    return {\n      status: false,\n      msg: `Please type a formula`,\n    };\n  }\n  if (formula.length < 3) {\n    return {\n      status: false,\n      msg: `The formula in not valid, it is not complete!`,\n    };\n  }\n  for (let el of formula) {\n    characters = [...characters, el];\n  }\n  if (characters[0] !== `\"`) {\n    return {\n      status: false,\n      msg: `Formula should start with (\") character`,\n    };\n  }\n  if (characters.filter((itm) => itm === `\"`).length < 2) {\n    return {\n      status: false,\n      msg: `Formula is missing closing (\") character`,\n    };\n  }\n  if (characters.filter((itm) => itm === `\"`).length > 2) {\n    return {\n      status: false,\n      msg: `Formula is invalid, because it has many (\") characters (${\n        characters.filter((itm) => itm === `\"`).length\n      })`,\n    };\n  }\n  if (\n    characters[characters.length - 1] !== `\"` &&\n    characters.filter((itm) => itm === `\"`).length === 2\n  ) {\n    let nextCharacter: string = \"\";\n    for (let i = 0; i < characters.length; i++) {\n      if (characters[i] === `\"` && i !== 0) {\n        nextCharacter = characters[i + 1];\n      }\n    }\n    if (nextCharacter !== `;`) {\n      return {\n        status: false,\n        msg: `Formula is missing separation character (;) between formula and error`,\n      };\n    }\n    if (characters[characters.length - 1] === `;`) {\n      return {\n        status: false,\n        msg: `Formula is missing error after (;) character`,\n      };\n    }\n  }\n  return {\n    status: true,\n    msg: `Formula is valid`,\n  };\n};\n\nexport function convertFromStringToDate(responseDate: string) {\n  let dateComponents = responseDate.split(\"T\");\n  let datePieces = dateComponents[0].split(\"-\");\n  let timePieces = dateComponents[1].split(\":\");\n  return new Date(\n    parseInt(datePieces[2]),\n    parseInt(datePieces[1]) - 1,\n    parseInt(datePieces[0]),\n    parseInt(timePieces[0]),\n    parseInt(timePieces[1]),\n    parseInt(timePieces[2])\n  );\n}\n\nexport enum ExamTimeStatus {\n  Waiting = \"Waiting\",\n  Online = \"Online\",\n  Expired = \"Expired\",\n}\n\nexport const validateExamDate = (\n  exam_date: string,\n  start_time: string,\n  end_time: string\n) => {\n  let status: ExamTimeStatus = ExamTimeStatus.Expired;\n  // Dates\n  const toDay: Date = new Date(today.toString());\n  const examDate = new Date(exam_date);\n\n  // Time\n  const startTime = convertFromStringToDate(\n    examDate.getDate() +\n      \"-\" +\n      (examDate.getMonth() + 1) +\n      \"-\" +\n      examDate.getFullYear() +\n      \"T\" +\n      start_time +\n      \":0\"\n  );\n  const endTime = convertFromStringToDate(\n    examDate.getDate() +\n      \"-\" +\n      (examDate.getMonth() + 1) +\n      \"-\" +\n      examDate.getFullYear() +\n      \"T\" +\n      end_time +\n      \":0\"\n  );\n\n  // check exam date\n  if (\n    examDate.getDate() > toDay.getDate() ||\n    examDate.getMonth() > toDay.getMonth() ||\n    examDate.getFullYear() > toDay.getFullYear()\n  ) {\n    status = ExamTimeStatus.Waiting;\n  }\n\n  if (\n    examDate.getDate() < toDay.getDate() ||\n    examDate.getMonth() < toDay.getMonth() ||\n    examDate.getFullYear() < toDay.getFullYear()\n  ) {\n    status = ExamTimeStatus.Expired;\n  }\n\n  if (\n    examDate.getDate() === toDay.getDate() &&\n    examDate.getMonth() === toDay.getMonth() &&\n    examDate.getFullYear() === toDay.getFullYear()\n  ) {\n    if (startTime.getTime() > toDay.getTime()) {\n      status = ExamTimeStatus.Waiting;\n    } else if (\n      startTime.getTime() <= toDay.getTime() &&\n      endTime.getTime() >= toDay.getTime()\n    ) {\n      status = ExamTimeStatus.Online;\n    } else {\n      status = ExamTimeStatus.Expired;\n    }\n  }\n  // console.log(\n  //   \"Dates comparison: \" + examDate.getDate() + \"=>\" + toDay.getDate()\n  // );\n  // console.log(\"Exam Status: \", status);\n  return status;\n};\n\nexport const InitializeExamsDone = (\n  selected_period: ApplicationPeriodGet | null,\n  selectedPosition: PositionAPI | null,\n  candidateExam: candidateExamStoreInterface,\n  loadExamsDone: (\n    periodId: string,\n    userId: string,\n    callback: (loading: boolean) => void\n  ) => void,\n  user_id: string,\n  setLoadingExamsDone: (status: boolean) => void,\n  selectedExams: applicationExamAPI[] | null,\n  InitializeExamDetails: (\n    periodId: string,\n    courseId: string,\n    district_id: string,\n    center_id: string,\n    room_id: string,\n    position_id: string,\n    callback: (loading: boolean) => void\n  ) => void,\n  setLoadingExams: (status: boolean) => void\n) => {\n  if (selected_period !== null && selectedPosition !== null) {\n    loadExamsDone(\n      selected_period.session_plan_id,\n      user_id,\n      setLoadingExamsDone\n    );\n    for (let course of selectedPosition.courses) {\n      let testDone = candidateExam.user_exams_temp.find(\n        (itm) => itm.course === course.course_id\n      );\n      if (testDone === undefined) {\n        let center_id = selectedExams?.find(\n          (itm) => itm.course_id === course.course_id\n        );\n        if (center_id !== undefined) {\n          InitializeExamDetails(\n            selected_period.session_plan_id,\n            course.course_id,\n            center_id.district_id,\n            center_id.center_id,\n            center_id.room_id,\n            selectedPosition.position_id,\n            setLoadingExams\n          );\n        }\n      }\n    }\n  }\n};\n\nexport const getActiveExam = (\n  candidateExam: candidateExamStoreInterface\n): ExamAnswerSheetDone | null => {\n  if (candidateExam.user_exams_done.length > 0) {\n    for (let exam of candidateExam.user_exams_done) {\n      if (\n        validateExamDate(\n          exam.exam_date,\n          exam.exam_start_time,\n          exam.exam_end_time\n        ) === ExamTimeStatus.Online\n      ) {\n        return exam;\n      }\n    }\n  }\n  return null;\n};\n\nexport const proctoringDefaultRules: {\n  rule: string;\n  status: boolean;\n  caption: string;\n}[] = [\n  {\n    rule: \"right_click_enabled\",\n    status: false,\n    caption: \"Enable right click\",\n  },\n  {\n    rule: \"copy_enabled\",\n    status: false,\n    caption: \"Enable copy\",\n  },\n  {\n    rule: \"paste_enabled\",\n    status: false,\n    caption: \"Enable paste\",\n  },\n  {\n    rule: \"stop_candidate_when_comeback\",\n    status: false,\n    caption: \"Enable Candidate when coming back\",\n  },\n  {\n    rule: \"allow_to_leave_browser\",\n    status: false,\n    caption: \"Enable to leave browser\",\n  },\n];\n","import React, { useEffect, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport { MdNavigateBefore, MdNavigateNext, MdSearch } from \"react-icons/md\";\n\nconst FC_makeID = (length: number = 5): string => {\n  let result: string = \"\";\n  let characters: string =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  let charactersLength = characters.length;\n  for (let i: number = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\nexport const sortThisColumn = (\n  tableId: string,\n  colIndex: number = 0,\n  dir: \"asc\" | \"desc\" = \"asc\"\n) => {\n  var table,\n    rows,\n    switching,\n    i,\n    x,\n    y,\n    shouldSwitch,\n    switchcount = 0;\n  table = document.getElementById(tableId) as HTMLTableElement;\n  switching = true;\n  /* Make a loop that will continue until\n  no switching has been done: */\n  if (table) {\n    while (switching) {\n      //start by saying: no switching is done:\n      switching = false;\n      rows = table.rows;\n      /*Loop through all table rows (except the\n    first, which contains table headers):*/\n      for (i = 1; i < rows.length - 1; i++) {\n        //start by saying there should be no switching:\n        shouldSwitch = false;\n        /*Get the two elements you want to compare,\n      one from current row and one from the next:*/\n        x = rows[i].getElementsByTagName(\"TD\")[colIndex];\n        y = rows[i + 1].getElementsByTagName(\"TD\")[colIndex];\n        /*check if the two rows should switch place,\n      based on the direction, asc or desc:*/\n        if (dir === \"asc\" && x && y) {\n          if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        } else if (dir === \"desc\" && x && y) {\n          if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        }\n      }\n      if (shouldSwitch && rows[i].parentNode) {\n        /*If a switch has been marked, make the switch\n      and mark that a switch has been done:*/\n        rows[i].parentNode!.insertBefore(rows[i + 1], rows[i]);\n        switching = true;\n        //Each time a switch is done, increase this count by 1:\n        switchcount++;\n      } else {\n        /*If no switching has been done AND the direction is \"asc\",\n      set the direction to \"desc\" and run the while loop again.*/\n        if (switchcount === 0 && dir === \"asc\") {\n          dir = \"desc\";\n          switching = true;\n        }\n      }\n      // if (i === 0) continue;\n      // rows.cells[i].style.backgroundColor = \"blue\";\n    }\n  }\n};\n\nexport interface TableColumnsInterface {\n  columnTitle: JSX.Element | string;\n  alignText: string;\n  padding?: string;\n  isSortAllowed?: boolean;\n}\n\ninterface TableProps {\n  columns: TableColumnsInterface[];\n  rows: Function;\n  hideColumns?: boolean;\n  pagination?: boolean;\n  search?: boolean;\n  tableSize?: string;\n  tableClass?: string;\n  tableId?: string;\n  rounded?: boolean;\n  searchBG?: string;\n  thColor?: string;\n  loading?: boolean;\n}\n\nconst Table: React.FC<TableProps> = (props) => {\n  const startPage = 1;\n  const tableId =\n    !props.tableId || props.tableId === \"myTable\" ? FC_makeID() : props.tableId;\n  let table: HTMLElement, tr: HTMLCollectionOf<HTMLTableRowElement>;\n  const [totalItems, setTotalItems] = useState<number>(0);\n  const [totalPages, setTotalPages] = useState<number>(1);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [pages, setPages] = useState<number[]>();\n  const [pageSize, setPageSize] = useState<number>(10);\n  const [startIndex, setStartIndex] = useState<number>(0);\n  const [endIndex, setEndIndex] = useState<number>(0);\n\n  useEffect(() => {\n    props.pagination && tablePagination();\n  });\n\n  const filterTable = (\n    data: string,\n    filterType?: \"default\" | \"field\"\n  ): void => {\n    var filter, tr, td, rows: number, cols: number, txtValue;\n    if (filterType === \"field\" && data === \"all\") data = \"\";\n    filter = data.toLowerCase();\n    table = document.getElementById(tableId!)!;\n    tr = table.getElementsByTagName(\"tr\");\n    for (rows = 0; rows < tr.length; rows++) {\n      for (cols = 0; cols < props.columns.length; cols++) {\n        td = tr[rows].getElementsByTagName(\"td\")[cols];\n        if (td) {\n          txtValue = td.textContent || td.innerText;\n          if (txtValue.toLowerCase().indexOf(filter) > -1) {\n            tr[rows].style.display = \"\";\n            break;\n          } else {\n            tr[rows].style.display = \"none\";\n          }\n        }\n      }\n    }\n  };\n\n  const tablePagination = (): void => {\n    table = document.getElementById(tableId)!;\n    tr = table.getElementsByTagName(\"tr\");\n    setTotalItems(tr.length);\n    setTotalPages(Math.ceil(totalItems / pageSize));\n\n    // calculate start and end item indexes on the current page\n    setStartIndex((currentPage - 1) * pageSize);\n    setEndIndex(Math.min(startIndex + pageSize - 1, totalItems - 1));\n\n    /**\n     * TODO!\n     * There is a problem with this condition\n     */\n    let _pages = Array.from(Array(totalPages + 1 - startPage).keys()).map(\n      (i) => startPage + i\n    );\n    if (!pages || _pages.length !== pages.length) {\n      setPages(_pages);\n    }\n\n    for (let i: number = 0; i < tr.length; i++) {\n      if (i >= startIndex && i <= endIndex) {\n        tr[i].style.display = \"\";\n      } else {\n        tr[i].style.display = \"none\";\n      }\n    }\n  };\n\n  return (\n    <div className={`${props.tableSize} overflow-x-auto`}>\n      {/* search box  */}\n      {props.search && (\n        <div className={`${props.searchBG} w-full mb-2`}>\n          {props.search && (\n            <div className=\"bg-white rounded flex items-center w-full p-2 border-2 border-gray-500\">\n              <MdSearch className=\"h-5 w-5 fill-current text-gray-400\" />\n              <input\n                type=\"search\"\n                placeholder=\"search\"\n                onChange={(e) => filterTable(e.target.value)}\n                className=\"w-full h-6 pl-4 text-sm outline-none focus:outline-none bg-white\"\n                disabled={props.loading}\n              />\n\n              {props.pagination && (\n                <div className=\"select\">\n                  <select\n                    className=\"text-base outline-none focus:outline-none bg-white\"\n                    onChange={(e) => setPageSize(Number(e.target.value))}\n                    disabled={props.loading}\n                  >\n                    <option value=\"10\">10</option>\n                    <option value=\"25\">25</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                  </select>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n      <div className=\"overflow-x-auto w-full\">\n        <table\n          className={\n            props.tableClass\n              ? props.tableClass\n              : `w-full shadow ${\n                  props.rounded && \"sm:rounded-lg\"\n                } table-auto order-table`\n          }\n          id={tableId}\n        >\n          {!props.hideColumns && (\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-base\">\n              <tr\n                className={`text-left tracking-wide bg-${props.thColor}-100 border-b-2 border-${props.thColor}-500 text-${props.thColor}-600`}\n              >\n                {props.columns.map((column, index) => (\n                  <th\n                    key={index}\n                    className={`${column.padding} text-${\n                      column.alignText\n                    } px-3 py-2 ${column.isSortAllowed && \"cursor-pointer\"}`}\n                    onClick={() =>\n                      column.isSortAllowed && sortThisColumn(tableId, index)\n                    }\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      {column.columnTitle}\n                      {column.isSortAllowed && <BiSort />}\n                    </div>\n                  </th>\n                ))}\n              </tr>\n            </thead>\n          )}\n          <tbody id=\"table-data\" className=\"bg-white text-black text-base\">\n            {props.rows()}\n          </tbody>\n        </table>\n        {props.pagination && (\n          <div className=\"sm:flex-1 sm:flex sm:items-center sm:justify-between mt-4 work-sans\">\n            <div>\n              <span className=\"text-xs xs:text-sm text-gray-900\">\n                Showing 1 to {pageSize} of {totalItems - 1} Entries\n              </span>\n            </div>\n            <div>\n              <nav className=\"inline-flex shadow-sm\">\n                <div>\n                  <button\n                    type=\"button\"\n                    className={`inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 text-sm font-medium text-gray-500 ${\n                      currentPage !== 1 && \"bg-white\"\n                    }`}\n                    aria-label=\"Previous\"\n                    disabled={currentPage === 1 || props.loading}\n                    onClick={() => setCurrentPage(currentPage - 1)}\n                  >\n                    <MdNavigateBefore className=\"h-5 w-5\" />\n                  </button>\n                </div>\n                <div>\n                  {pages &&\n                    pages.map((page, pageIndex) => (\n                      <button\n                        key={pageIndex}\n                        className={`-ml-px inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium text-gray-700 ${\n                          page !== currentPage\n                            ? \"bg-white\"\n                            : \"bg-gray-100 cursor-default\"\n                        }`}\n                        disabled={page === currentPage || props.loading}\n                        onClick={() => setCurrentPage(page)}\n                      >\n                        {page}\n                      </button>\n                    ))}\n                </div>\n                <div>\n                  <button\n                    type=\"button\"\n                    className={`inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 text-sm leading-5 font-medium text-gray-500 ${\n                      currentPage !== totalPages && \"bg-white\"\n                    }`}\n                    aria-label=\"Next\"\n                    disabled={currentPage === totalPages || props.loading}\n                    onClick={() => setCurrentPage(currentPage + 1)}\n                  >\n                    <MdNavigateNext className=\"h-5 w-5\" />\n                  </button>\n                </div>\n              </nav>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Table;\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport {\n  AcademicSessionInterface,\n  PlansTypeInterface,\n  SessionPlanInterface,\n} from \"../interfaces\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// GET ACTIVE PLAN TYPES\nexport interface GetPlansTypesAction {\n  type: ActionTypes.GET_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// GET INACTIVE PLAN TYPES\nexport interface GetDeletedPlansTypesAction {\n  type: ActionTypes.GET_DELETED_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// CREATE PLAN TYPE\nexport interface CreatePlansTypeAction {\n  type: ActionTypes.CREATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// UPDATE PLAN TYPE\nexport interface UpdatePlansTypeAction {\n  type: ActionTypes.UPDATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// DELETE PLAN TYPE\nexport interface DeletePlansTypeAction {\n  type: ActionTypes.DELETE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// SET PLAN TYPE =====================================\nexport interface setSelectedPlanTypeActions {\n  type: ActionTypes.SELECT_PLAN_TYPE;\n  payload: PlansTypeInterface | \"all\";\n}\n\n// GET ALL SESSION PLAN\nexport interface GetAllSessionPlansAction {\n  type: ActionTypes.GET_ALL_SESSION_PLANS;\n  payload: SessionPlanInterface[];\n}\n\n// GET ACTIVE SESSION PLAN\nexport interface GetActiveSessionPlanAction {\n  type: ActionTypes.GET_ACTIVE_SESSION_PLANS;\n  payload: SessionPlanInterface | \"none\";\n}\n\n// CREATE SESSION PLAN\nexport interface CreateSessionPlansAction {\n  type: ActionTypes.CREATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// UPDATE SESSION PLAN\nexport interface UpdateSessionPlansAction {\n  type: ActionTypes.UPDATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// ACTIVATE SESSION PLAN\nexport interface ActivateSessionPlansAction {\n  type: ActionTypes.SESSION_ACTIVATION;\n  payload: SessionPlanInterface;\n}\n\n// DELETE SESSION PLAN\nexport interface DeleteSessionPlanAction {\n  type: ActionTypes.DELETE_SESSION_PLAN;\n  payload: string;\n}\n\n// GET ALL ACADEMIC SESSION\nexport interface GetAllAcademicSessionAction {\n  type: ActionTypes.GET_ALL_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface[];\n}\n\n// CREATE ACADEMIC SESSION\nexport interface CreateAcademicSessionAction {\n  type: ActionTypes.CREATE_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface;\n}\n\n// UPDATE ACADEMIC SESSION\nexport interface UpdateAcademicSessionAction {\n  type: ActionTypes.UPDATE_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface;\n}\n\n// ACTIVATE ACADEMIC SESSION\nexport interface ActivateAcademicSessionAction {\n  type: ActionTypes.ACADEMIC_SESSION_ACTIVATION;\n  payload: AcademicSessionInterface;\n}\n\n// DELETE ACADEMIC SESSION\nexport interface DeleteAcademicSessionAction {\n  type: ActionTypes.DELETE_ACADEMIC_SESSION;\n  payload: string;\n}\n\n// GET ACTIVE ACADEMIC SESSION\nexport interface GetActiveAcademicSessionAction {\n  type: ActionTypes.GET_ACTIVE_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface | \"none\";\n}\n\nexport type SessionActionType =\n  | GetPlansTypesAction\n  | GetDeletedPlansTypesAction\n  | CreatePlansTypeAction\n  | UpdatePlansTypeAction\n  | DeletePlansTypeAction\n  | GetAllSessionPlansAction\n  | GetActiveSessionPlanAction\n  | CreateSessionPlansAction\n  | UpdateSessionPlansAction\n  | ActivateSessionPlansAction\n  | DeleteSessionPlanAction\n  | setSelectedPlanTypeActions\n  | GetAllAcademicSessionAction\n  | CreateAcademicSessionAction\n  | UpdateAcademicSessionAction\n  | ActivateAcademicSessionAction\n  | DeleteAcademicSessionAction\n  | GetActiveAcademicSessionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type`\n      );\n      console.log({ GET_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetPlansTypesAction>({\n        type: ActionTypes.GET_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetDeletedPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type/deleted`\n      );\n      console.log({ GET_DELETED_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetDeletedPlansTypesAction>({\n        type: ActionTypes.GET_DELETED_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE PLAN TYPE\nexport const createPlanType = (\n  data: PlansTypeInterface\n): CreatePlansTypeAction => {\n  return {\n    type: ActionTypes.CREATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// UPDATE PLAN TYPE\nexport const updatePlanType = (\n  data: PlansTypeInterface\n): UpdatePlansTypeAction => {\n  return {\n    type: ActionTypes.UPDATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// DELETE PLAN TYPE\nexport const deletePlanType = (\n  data: PlansTypeInterface\n): DeletePlansTypeAction => {\n  return {\n    type: ActionTypes.DELETE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// SELECT PLAN TYPES ==========================\nexport const setSelectedPlanType = (\n  thisType: PlansTypeInterface | \"all\"\n): setSelectedPlanTypeActions => {\n  console.log({ thisType });\n  return {\n    type: ActionTypes.SELECT_PLAN_TYPE,\n    payload: thisType,\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const getActiveSessionPlan = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface>(\n        `${API.CLAIMING}/session/active/`\n      );\n      console.log({ GET_ACTIVE_SESSION_PLANS: res.data });\n      let session_plan: SessionPlanInterface | undefined = undefined;\n      // if (res.status === 200) {\n      //   // setApplications(res.data);\n      // }\n      if (res.data && res.data.is_active !== undefined) {\n        session_plan = res.data;\n      }\n      console.log({ session_plan: res.data });\n\n      dispatch<GetActiveSessionPlanAction>({\n        type: ActionTypes.GET_ACTIVE_SESSION_PLANS,\n        payload: session_plan ? session_plan : \"none\",\n      });\n      callback(false, \"\", session_plan ? session_plan : \"none\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ALL PLAN TYPES ==========================\nexport const GetAllSessionPlans = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface[]>(\n        `${API.CLAIMING}/session/`\n      );\n      console.log({ GET_ALL_SESSION_PLANS: res.data });\n      let session_data: SessionPlanInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          session_data = res.data;\n        }\n      }\n      dispatch<GetAllSessionPlansAction>({\n        type: ActionTypes.GET_ALL_SESSION_PLANS,\n        payload: session_data,\n      });\n      callback(false, \"\", session_data);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE SESSION PLAN\nexport const createSessionPlan = (\n  data: SessionPlanInterface\n): CreateSessionPlansAction => {\n  return {\n    type: ActionTypes.CREATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// UPDATE SESSION PLAN\nexport const updateSessionPlan = (\n  data: SessionPlanInterface\n): UpdateSessionPlansAction => {\n  return {\n    type: ActionTypes.UPDATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// ACTIVATE SESSION PLAN\nexport const sessionActivation = (\n  data: SessionPlanInterface\n): ActivateSessionPlansAction => {\n  return {\n    type: ActionTypes.SESSION_ACTIVATION,\n    payload: data,\n  };\n};\n\n// DELETE SESSION PLAN\nexport const deleteSessionPlan = (data: string): DeleteSessionPlanAction => {\n  return {\n    type: ActionTypes.DELETE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// CREATE ACADEMIC SESSION\nexport const createAcademicSession = (\n  data: AcademicSessionInterface\n): CreateAcademicSessionAction => {\n  return {\n    type: ActionTypes.CREATE_ACADEMIC_SESSION,\n    payload: data,\n  };\n};\n\n// GET ALL ACADEMIC SESSION ==========================\nexport const GetAllAcademicSession = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<AcademicSessionInterface[]>(\n        `${API.PLACEMENT}/postrequestperiod/`\n      );\n      console.log({ GET_ALL_SESSION_PLANS: res.data });\n      let session_data: AcademicSessionInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          session_data = res.data;\n        }\n      }\n      console.log(\"====================================\");\n      console.log({ GetAllAcademicSession: res });\n      console.log(\"====================================\");\n      dispatch<GetAllAcademicSessionAction>({\n        type: ActionTypes.GET_ALL_ACADEMIC_SESSION,\n        payload: session_data,\n      });\n      callback(false, \"\", session_data);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// UPDATE ACADEMIC SESSION\nexport const updateAcademicSession = (\n  data: AcademicSessionInterface\n): UpdateAcademicSessionAction => {\n  return {\n    type: ActionTypes.UPDATE_ACADEMIC_SESSION,\n    payload: data,\n  };\n};\n\n// ACTIVATE ACADEMIC SESSION\nexport const academicSessionActivation = (\n  data: AcademicSessionInterface\n): ActivateAcademicSessionAction => {\n  return {\n    type: ActionTypes.ACADEMIC_SESSION_ACTIVATION,\n    payload: data,\n  };\n};\n\n// DELETE ACADEMIC SESSION\nexport const deleteAcademicSession = (\n  data: string\n): DeleteAcademicSessionAction => {\n  return {\n    type: ActionTypes.DELETE_ACADEMIC_SESSION,\n    payload: data,\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const getActiveAcademicSession = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<AcademicSessionInterface>(\n        `${API.PLACEMENT}/postrequestperiod/one`\n      );\n      console.log({ GET_ACTIVE_ACADEMIC_SESSION: res.data });\n      let session_plan: AcademicSessionInterface | undefined = undefined;\n      // if (res.status === 200) {\n      //   // setApplications(res.data);\n      // }\n      if (res.data) {\n        session_plan = res.data;\n      }\n      console.log({ session_plan: res.data });\n\n      dispatch<GetActiveAcademicSessionAction>({\n        type: ActionTypes.GET_ACTIVE_ACADEMIC_SESSION,\n        payload: session_plan ? session_plan : \"none\",\n      });\n      callback(false, \"\", session_plan ? session_plan : \"none\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  CandidatesInterface,\n  DocumentCategoryInterface,\n  DocumentFieldsInterface,\n  DocumentSubCategoryInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { VerifyDocumentInterface } from \"./users\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// CATEGORY\nexport interface GetDocumentCategoryAction {\n  type: ActionTypes.GET_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface[];\n}\n\nexport interface CreateDocumentCategoryAction {\n  type: ActionTypes.CREATE_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface;\n}\n\nexport interface UpdateDocumentCategoryAction {\n  type: ActionTypes.UPDATE_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface;\n}\n\nexport interface DeleteDocumentCategoryAction {\n  type: ActionTypes.DELETE_DOCUMENT_CATEGORY;\n  payload: string;\n}\n\n// SUB CATEGORY\nexport interface GetDocumentSubCategoryAction {\n  type: ActionTypes.GET_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface[];\n}\n\nexport interface CreateDocumentSubCategoryAction {\n  type: ActionTypes.CREATE_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface;\n}\n\nexport interface UpdateDocumentSubCategoryAction {\n  type: ActionTypes.UPDATE_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface;\n}\n\nexport interface DeleteDocumentSubCategoryAction {\n  type: ActionTypes.DELETE_DOCUMENT_SUB_CATEGORY;\n  payload: string;\n}\n\n// FIELDS\nexport interface GetDocumentFieldsAction {\n  type: ActionTypes.GET_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface[];\n}\n\nexport interface CreateDocumentFieldsAction {\n  type: ActionTypes.CREATE_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface;\n}\n\nexport interface UpdateDocumentFieldsAction {\n  type: ActionTypes.UPDATE_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface;\n}\n\nexport interface DeleteDocumentFieldsAction {\n  type: ActionTypes.DELETE_DOCUMENT_FIELDS;\n  payload: string;\n}\n\n// DOCUMENT CHECKING\nexport interface GetCandidatesInInstituteAtion {\n  type: ActionTypes.GET_CANDIDATE_IN_INSTITUTE;\n  payload: CandidatesInterface[];\n}\n\nexport interface VerifyDocumentAction {\n  type: ActionTypes.VERIFY_DOCUMENT;\n  payload: VerifyDocumentInterface;\n}\n\nexport type DocumentCategoryActionType =\n  | GetDocumentCategoryAction\n  | CreateDocumentCategoryAction\n  | UpdateDocumentCategoryAction\n  | DeleteDocumentCategoryAction\n  | GetDocumentSubCategoryAction\n  | CreateDocumentSubCategoryAction\n  | UpdateDocumentSubCategoryAction\n  | DeleteDocumentSubCategoryAction\n  | GetDocumentFieldsAction\n  | CreateDocumentFieldsAction\n  | UpdateDocumentFieldsAction\n  | DeleteDocumentFieldsAction\n  | GetCandidatesInInstituteAtion\n  | VerifyDocumentAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// CATEGORY\n\nexport const getDocumentCategory = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get(`${API.AUTH}/detailcategory`);\n      console.log({ docCategory: res });\n      dispatch<GetDocumentCategoryAction>({\n        type: ActionTypes.GET_DOCUMENT_CATEGORY,\n        payload: res.data,\n      });\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n    }\n  };\n};\n\nexport const createDocumentCategory = (data: DocumentCategoryInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentCategoryAction>({\n      type: ActionTypes.CREATE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentCategory = (data: DocumentCategoryInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentCategoryAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentCategory = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentCategoryAction>({\n      type: ActionTypes.DELETE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\n// SUB CATEGORY\nexport const getDocumentSubCategory = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<DocumentSubCategoryInterface[]>(\n        `${API.AUTH}/detailsubcategory`\n      );\n      console.log({ docSubCategory: res });\n      dispatch<GetDocumentSubCategoryAction>({\n        type: ActionTypes.GET_DOCUMENT_SUB_CATEGORY,\n        payload: res.data,\n        // payload: response.data,\n      });\n    } catch (error) {\n      console.log({ doc_SUB_category_error: error });\n    }\n  };\n};\n\nexport const createDocumentSubCategory = (\n  data: DocumentSubCategoryInterface\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentSubCategoryAction>({\n      type: ActionTypes.CREATE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentSubCategory = (\n  data: DocumentSubCategoryInterface\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentSubCategoryAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentSubCategory = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentSubCategoryAction>({\n      type: ActionTypes.DELETE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\n// FIELDS\nexport const getDocumentFields = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<DocumentFieldsInterface[]>(\n        `${API.AUTH}/categorysubcatedata`\n      );\n      console.log({ docFields: res });\n      dispatch<GetDocumentFieldsAction>({\n        type: ActionTypes.GET_DOCUMENT_FIELDS,\n        payload: res.data,\n        // payload: response.data,\n      });\n    } catch (error) {\n      console.log({ doc_SUB_category_error: error });\n    }\n  };\n};\n\nexport const createDocumentFields = (data: DocumentFieldsInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentFieldsAction>({\n      type: ActionTypes.CREATE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentFields = (data: DocumentFieldsInterface) => {\n  console.log({ reducer: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentFieldsAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentFields = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentFieldsAction>({\n      type: ActionTypes.DELETE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\n// REMOVE DUPLICATION IN CANDIDATES IN EDUCATION CATEGORY PER SESSION\nconst distinctCandidates = (\n  candidatesData: CandidatesInterface[]\n): CandidatesInterface[] => {\n  let result: CandidatesInterface[] = [];\n  let user_ids: string[] = [];\n  const newArray: CandidatesInterface[] = candidatesData.filter((candidate) => {\n    return candidate !== null && candidate !== undefined;\n  });\n  newArray.forEach((candidate) => {\n    if (!user_ids.includes(candidate.user_id)) {\n      result.push(candidate);\n      user_ids.push(candidate.user_id);\n    }\n  });\n  return result;\n};\n// CANDIDATE IN EDUCATION CATEGORY PER SESSION\nexport const getCandidatesInInstitute = (\n  educatin_type_id: string,\n  session_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\", null);\n    try {\n      setAxiosToken();\n      const res = await axios.get<CandidatesInterface[]>(\n        `${API.APPLICATION}/educationtypeuserdocs/${educatin_type_id}/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({\n        getCandidatesInInstitute: res,\n        distinctCandidates: distinctCandidates(res.data),\n      });\n      console.log(\"====================================\");\n      dispatch<GetCandidatesInInstituteAtion>({\n        type: ActionTypes.GET_CANDIDATE_IN_INSTITUTE,\n        payload: distinctCandidates(res.data),\n        // payload: response.data,\n      });\n      callback(false, \"\", distinctCandidates(res.data));\n    } catch (error) {\n      console.log({ getCandidatesInInstitute: error });\n      callback(false, errorToText(error), null);\n    }\n  };\n};\n\nexport const verifyDocument = (data: VerifyDocumentInterface) => {\n  console.log(\"====================================\");\n  console.log({ verifyDocument: data });\n  console.log(\"====================================\");\n  return async (dispatch: Dispatch) => {\n    dispatch<VerifyDocumentAction>({\n      type: ActionTypes.VERIFY_DOCUMENT,\n      payload: data,\n    });\n  };\n};\n","import React, { FC, ReactElement, ReactNode } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, System } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { NavToogle, PageHasSubNav } from \"../../actions\";\nimport { MdBrightness1, MdSearch } from \"react-icons/md\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  system: System;\n  PageHasSubNav: Function;\n  NavToogle: Function;\n  children: ReactNode;\n}\n//\ninterface AppState {\n  loading: boolean;\n}\n\nclass _SideNavigation extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount = () => this.props.PageHasSubNav(true);\n  componentWillUnmount = () => this.props.PageHasSubNav(false);\n\n  render() {\n    const isAuthenticated = this.props.auth.isAuthenticated;\n\n    if (isAuthenticated === false) {\n      return null;\n    }\n\n    const navActive = this.props.system.navigation;\n    return (\n      <div\n        className={`fixed w-48 p-1 pr-2 pl-6 text-gray-700 bg-white ${\n          navActive === true ? \"lg:left-16  left-16\" : \" -left-72 lg:left-16\"\n        }  top-0 bottom-0 pt-20 z-30 shadow-lg  transition-all duration-500 ease-in-out overflow-y-auto`}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n}: StoreState): { auth: Auth; system: System } => {\n  return { auth: auth, system: system };\n};\n\nexport const SideNavigation = connect(mapStateToProps, {\n  NavToogle,\n  PageHasSubNav,\n})(_SideNavigation);\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SearchComponentInterface = {\n  data: any[];\n};\n\nexport const Search: FC<SearchComponentInterface> = ({\n  data,\n}): ReactElement => {\n  return (\n    <div className=\"m-1 rounded-md shadow-md border border-blue-400 bg-white p-1 flex \">\n      <label htmlFor=\"search-text\" className=\"inline-block text-2xl\">\n        <MdSearch className=\"inline-block text-blue-400\" />\n      </label>\n      <input\n        type=\"search\"\n        className=\"outline-none bg-transparent flex-1 pl-1\"\n        placeholder=\"Search\"\n        id=\"search-text\"\n      />\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype MainItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const MainItem: FC<MainItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n  return (\n    <section\n      className={`${\n        active === true\n          ? \"bg-blue-500 text-white font-bold\"\n          : \"bg-blue-100 text-blue-800\"\n      } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex cursor-pointer items-center`}\n    >\n      <section className=\"flex-1\">\n        <IconDefined className=\"inline-block mr-1 text-xs\" />\n        <span>{title}</span>\n      </section>\n\n      {count > 0 ? (\n        <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n          {count}\n        </span>\n      ) : null}\n    </section>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemContainerComponentInterface = {\n  children: ReactNode;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const SubItemContainer: FC<SubItemContainerComponentInterface> = ({\n  children,\n}): ReactElement => {\n  return (\n    <div className=\"ml-3 overflow-y-auto border-l-2 border-blue-200 -mt-1 pt-2 mb-2 pl-1 cursor-pointer\">\n      {children}\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n * @important Remenber to use these components inside the <SubItemContainer>...</SubItemContainer>\n */\nexport const SubItem: FC<SubItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n\n  return (\n    <div\n      className={`animate__animated animate__zoomIn animate__faster ${\n        active === true ? \"bg-blue-500 text-white font-bold\" : \" text-blue-800\"\n      } text-blue-800 bg-blue-200 rounded-md px-1 mb-1 flex items-center py-1 font-bold`}\n    >\n      <IconDefined\n        className={`inline-block mr-0.1 text-xs ${\n          active === true ? \"text-white\" : \"\"\n        }`}\n      />\n      <span\n        className={`inline-block pl-1 ${active === true ? \"text-white\" : \"\"}`}\n      >\n        {title}\n      </span>\n      {count >= 1 ? (\n        <span\n          className={`text-sm fint-bold ${active === true ? \"text-white\" : \"\"}`}\n        >\n          {count}\n        </span>\n      ) : null}\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { ApplicationSession } from \"../../../actions\";\nimport {\n  course,\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimExamResultsDetails,\n} from \"../../../interfaces\";\nimport { candidatePlacementInterface } from \"../../../interfaces/placement\";\nimport { isClaimAllowed } from \"./ClaimForm\";\n\nexport const getCourseById = (courses: course[], course_id: string) => {\n  return courses.find((item) => item.course_id === course_id);\n};\n\nexport const getCourseIdBySheetId = (\n  allData: ClaimExamResultsDetails[],\n  sheet_id: string\n) => {\n  return allData.find((item) => item.answer_sheet_id === sheet_id);\n};\n\nexport const searchApplication = (\n  objList: claimApplicationsInterface[],\n  text: any\n): claimApplicationsInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (prop === \"position\") {\n        flag =\n          product.position.position_title\n            .toString()\n            .toLowerCase()\n            .indexOf(text.toLowerCase()) > -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n  // return objList.filter((product) =>\n  //   product.position.position_title.includes(text)\n  // );\n};\n\ntype FormPlacementListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  claimFileId: string;\n  viewThisFile: string;\n  myPlacement: candidatePlacementInterface | null;\n  myClaims: CandidateClaimInterface[];\n  activeSession: ApplicationSession;\n\n  // REDUX //////////////////////\n};\n\nconst FormPlacementList: React.FC<FormPlacementListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            props.myPlacement === null ||\n            isClaimAllowed(\n              props.myClaims,\n              props.activeSession.session_plan_id,\n              props.myPlacement.placed._id\n            )\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Close\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}{\" \"}\n      {/* searchData(props.candidateAnswers, searchInput) */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {props.myPlacement ? (\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            props.myPlacement.placed._id\n          ) && (\n            <div className=\"group flex items-center justify-between my-1 hover:bg-gray-100\">\n              <div\n                className=\"p-1 w-full mr-2 cursor-pointer\"\n                onClick={() => {\n                  props.setChooseClaimFile(false);\n                  props.setClaimFileId(props.myPlacement!.placed._id);\n                }}\n              >\n                <p className=\"text-base font-medium text-black\">\n                  Placed on {props.myPlacement.placed.school.school_name}\n                </p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                onClick={() => {\n                  props.setViewThisFile(props.myPlacement!.placed._id);\n                }}\n              >\n                View\n              </button>\n            </div>\n          )\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No placement to claim on!\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\n// const mapStateToProps = ({\n//   course,\n// }: StoreState): {\n//   courses: course[] | null;\n// } => {\n//   return {\n//     courses: course.courses,\n//   };\n// };\nexport default connect(null, {})(FormPlacementList);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, loadCourses, PushPopupAlert } from \"../../../actions\";\nimport {\n  createClaim,\n  DocumentClaimUser,\n  GetClaimingTypes,\n  getClaimReasons,\n  getMyAnswers,\n  getMyClaims,\n  getMyPlacement,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n} from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimExamResultsDetails,\n  claimReasonInterface,\n  course,\n  PlansInterface,\n  PlansTypeKeys,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { candidatePlacementInterface } from \"../../../interfaces/placement\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { API } from \"../../../utils/api\";\nimport { setAxiosToken } from \"../../../utils/AxiosToken\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { isPlanActive } from \"../../SessionSettings/ApplicationSession/SessionDetails\";\nimport ApplicationFormView from \"./ApplicationFormView\";\nimport ChooseReason from \"./ChooseReason\";\nimport DocFormView from \"./DocFormView\";\nimport ExaminationFormView from \"./ExaminationFormView\";\nimport FormApplicationList from \"./FormApplicationList\";\nimport FormDocumentList from \"./FormDocumentList\";\nimport FormExamList, {\n  getCourseById,\n  getCourseIdBySheetId,\n} from \"./FormExamList\";\nimport FormPlacementList from \"./FormPlacementList\";\n\nexport const ClaimGetDocTitle = (\n  documentCategories: DocumentReducerInterface,\n  doc: DocumentClaimUser\n): { category: string; sub_category: string; field: string; main: string } => {\n  let DocCategory: string = \"\",\n    DocSubCategory: string = \"\",\n    DocField: string = \"\",\n    DocTitle: string = \"\";\n  if (\n    doc.sub_category_id.length > 0 &&\n    documentCategories.documentSubCategory\n  ) {\n    DocTitle = documentCategories.documentSubCategory.filter(\n      (c) => c.user_detail_subcategory_id === doc.sub_category_id\n    )[0].title;\n    DocSubCategory = DocTitle;\n  } else if (\n    doc.category_id.length > 0 &&\n    documentCategories.documentCategory\n  ) {\n    DocTitle = documentCategories.documentCategory.filter(\n      (c) => c.user_detail_category_id === doc.category_id\n    )[0].title;\n    DocCategory = DocTitle;\n  }\n  if (\n    doc.category_subcategory_data &&\n    doc.category_subcategory_data.category_subcategory_Data_id.length > 0 &&\n    documentCategories.documentFields\n  ) {\n    console.log({ doc });\n    DocField = documentCategories.documentFields.filter(\n      (c) =>\n        c._id === doc.category_subcategory_data?.category_subcategory_Data_id\n    )[0].title;\n    DocTitle += \" in \" + DocField;\n  }\n\n  return {\n    category: DocCategory,\n    sub_category: DocSubCategory,\n    field: DocField,\n    main: DocTitle,\n  };\n};\n\nexport const isClaimAllowed = (\n  allClaim: CandidateClaimInterface[],\n  period_id: string,\n  claimOnId: string\n): boolean => {\n  if (\n    allClaim.find(\n      (item) =>\n        item.period_id === period_id && item.claiming_on_id === claimOnId\n    )\n  ) {\n    return false;\n  }\n  return true;\n};\n\ntype ClaimFormProps = {\n  // REQUIRED PROPS\n  formState: boolean;\n  setFormState: (value: boolean, response?: boolean) => void;\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  courses: course[] | null;\n  loadCourses: Function;\n  getMyAnswers: Function;\n  getMyPlacement: Function;\n  getClaimReasons: Function;\n  createClaim: Function;\n  GetClaimingTypes: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  getMyRejectedApplications: Function;\n  getMyRejectedDocuments: Function;\n  getMyClaims: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype ClaimFormState = {\n  loading: boolean;\n  loadingForm: boolean;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  thisClaimType: PlansTypeKeys | null;\n  thisClaimTypeId: string;\n  claimComment: string;\n  claimFileId: string;\n  chooseClaimFile: boolean;\n  chooseClaimReason: boolean;\n  claimReason: claimReasonInterface | null;\n  myPlacement: candidatePlacementInterface | null;\n  viewThisFile: string;\n  formType: \"DEFAULT\" | \"PROPS\";\n  alertError: string | null;\n};\n\nclass ClaimForm extends Component<ClaimFormProps, ClaimFormState> {\n  constructor(props: ClaimFormProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      loadingForm: false,\n      formError: null,\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      claimFileId: \"\",\n      chooseClaimFile: false,\n      viewThisFile: \"\",\n      formType: \"DEFAULT\",\n      alertError: null,\n      myPlacement: this.props.claiming.myPlacement,\n      chooseClaimReason: false,\n      claimReason: null,\n    };\n  }\n\n  setLoading = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  setLoadingForm = (state: boolean) => {\n    this.setState({ loadingForm: state });\n  };\n\n  setFormError = (\n    data: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: data });\n  };\n\n  setAlertError = (data: string | null) => {\n    this.setState({ alertError: data });\n  };\n\n  setClaimFileId = (data: string) => {\n    this.setState({ claimFileId: data });\n  };\n\n  setViewThisFile = (data: string) => {\n    this.setState({ viewThisFile: data });\n  };\n\n  setChooseClaimFile = (data: boolean) => {\n    this.setState({ chooseClaimFile: data });\n  };\n\n  setChooseClaimReason = (data: boolean) => {\n    this.setState({ chooseClaimReason: data });\n  };\n\n  setClaimReason = (value: claimReasonInterface | null) => {\n    this.setState({ claimReason: value });\n  };\n\n  setClaimComment = (data: string) => {\n    this.setState({ claimComment: data });\n  };\n\n  isClaimTypeOpen = (\n    thisSession: SessionPlanInterface,\n    thisType: PlansTypeKeys\n  ): boolean => {\n    let data: PlansInterface | undefined;\n    if (thisType === PlansTypeKeys.APPLICATION) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.APPLICATION\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    } else if (thisType === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.DOCUMENT_VALIDATION\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    } else if (thisType === PlansTypeKeys.PLACEMENT_TRANSFER) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.PLACEMENT_TRANSFER\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  displayClaimType = (claimType: PlansTypeKeys): string => {\n    let result: string = \"\";\n    switch (claimType) {\n      case PlansTypeKeys.APPLICATION:\n        result = \"application\";\n        break;\n      case PlansTypeKeys.DOCUMENT_VALIDATION:\n        result = \"document\";\n        break;\n      case PlansTypeKeys.EXAMINATION:\n        result = \"exam\";\n        break;\n      case PlansTypeKeys.MARKS_PUBLICATION:\n        result = \"marks publication\";\n        break;\n      case PlansTypeKeys.PLACEMENT_TRANSFER:\n        result = \"placement\";\n        break;\n      default:\n        result = \"\";\n        break;\n    }\n\n    return result;\n  };\n\n  loadExamAnswers = (\n    activeSessionPlan: SessionPlanInterface,\n    user_id: string\n  ) => {\n    this.props.getMyAnswers(\n      activeSessionPlan.session_plan_id,\n      user_id,\n      (status: boolean, msg: string, data: ClaimExamResultsDetails[]) => {\n        this.setLoading(status);\n        if (!status && msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n        if (data) {\n          console.log(\"====================================\");\n          console.log({ loadExamAnswers: data });\n          console.log(\"====================================\");\n        }\n      }\n    );\n  };\n\n  componentDidMount = () => {\n    if (this.props.auth.application_session === null) {\n      this.props.PushPopupAlert({\n        title: \"No session active session\",\n        theme: PopupAlertTheme.danger,\n      });\n      this.props.setFormState(false);\n      this.setState({\n        claimFileId: \"\",\n        thisClaimType: null,\n        thisClaimTypeId: \"\",\n        claimComment: \"\",\n        chooseClaimFile: false,\n        formType: \"DEFAULT\",\n        viewThisFile: \"\",\n        formError: null,\n      });\n    } else {\n      if (this.props.documentReducer.documentCategory === null) {\n        this.props.getDocumentCategory();\n      }\n      if (this.props.documentReducer.documentSubCategory === null) {\n        this.props.getDocumentSubCategory();\n      }\n      if (this.props.documentReducer.documentFields === null) {\n        this.props.getDocumentFields();\n      }\n      if (this.props.claiming.claimReasons === null) {\n        this.props.getClaimReasons((status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          }\n        });\n      }\n    }\n  };\n\n  getDocumentById = (\n    documents: DocumentClaimUser[],\n    doc_id: string\n  ): DocumentClaimUser => {\n    return documents.filter((item) => item.doc_id === doc_id)[0];\n  };\n\n  getApplicationById = (\n    applications: claimApplicationsInterface[],\n    application_id: string\n  ): claimApplicationsInterface => {\n    return applications.filter(\n      (item) => item.application_id === application_id\n    )[0];\n  };\n\n  getExamById = (\n    exams: ClaimExamResultsDetails[],\n    answer_sheet_id: string\n  ): ClaimExamResultsDetails | undefined => {\n    return exams.find((item) => item.answer_sheet_id === answer_sheet_id);\n  };\n\n  getValidation = (\n    thisId: string\n  ): {\n    old_reason: string;\n    old_status: string;\n    old_evaluated_by: string;\n  } => {\n    let result: {\n      old_reason: string;\n      old_status: string;\n      old_evaluated_by: string;\n    } = { old_reason: \"\", old_status: \"\", old_evaluated_by: \"\" };\n\n    if (\n      this.state.thisClaimType === PlansTypeKeys.DOCUMENT_VALIDATION &&\n      this.props.claiming.candidateDocuments\n    ) {\n      result = {\n        old_reason: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.comment,\n        old_status: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.validation_status,\n        old_evaluated_by: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.user_id,\n      };\n    } else if (\n      this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n      this.props.claiming.candidateApplications\n    ) {\n      result = {\n        old_reason: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.comment,\n        old_status: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.application_status,\n        old_evaluated_by: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.user_id,\n      };\n    }\n\n    return result;\n  };\n\n  cleanToClose = (response?: boolean) => {\n    this.props.setFormState(false);\n    this.setState({\n      claimFileId: \"\",\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      chooseClaimFile: false,\n      formType: \"DEFAULT\",\n      viewThisFile: \"\",\n      formError: null,\n    });\n  };\n\n  loadUserById = async (user_id: string, callback: Function) => {\n    if (isEmptyOrSpaces(user_id)) {\n      return this.props.PushPopupAlert({\n        title: \"No user id provided\",\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    try {\n      setAxiosToken();\n      const res = await axios.get<UserInterface>(\n        `${API.AUTH}/users/${user_id}`\n      );\n      console.log(\"====================================\");\n      console.log({ loadUserById: res });\n      console.log(\"====================================\");\n      if (res) {\n        callback(res.data);\n      }\n    } catch (error) {\n      console.error({ error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  getClaimTitle = (claimType: PlansTypeKeys): string => {\n    let result: string = \"\";\n    if (\n      claimType === PlansTypeKeys.DOCUMENT_VALIDATION &&\n      this.props.claiming.candidateDocuments\n    ) {\n      result = ClaimGetDocTitle(\n        this.props.documentReducer,\n        this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          this.state.claimFileId\n        )\n      ).main;\n    }\n    if (\n      claimType === PlansTypeKeys.APPLICATION &&\n      this.props.claiming.candidateApplications\n    ) {\n      result = this.getApplicationById(\n        this.props.claiming.candidateApplications,\n        this.state.claimFileId\n      ).position.position_title;\n    }\n    if (\n      claimType === PlansTypeKeys.EXAMINATION &&\n      this.props.courses &&\n      this.props.claiming.myAnswer &&\n      getCourseIdBySheetId(\n        this.props.claiming.myAnswer,\n        this.state.claimFileId\n      ) &&\n      getCourseById(\n        this.props.courses,\n        getCourseIdBySheetId(\n          this.props.claiming.myAnswer,\n          this.state.claimFileId\n        )!.course\n      )\n    ) {\n      result = getCourseById(\n        this.props.courses,\n        getCourseIdBySheetId(\n          this.props.claiming.myAnswer,\n          this.state.claimFileId\n        )!.course\n      )!.course_name;\n    }\n    if (\n      claimType === PlansTypeKeys.PLACEMENT_TRANSFER &&\n      this.state.myPlacement\n    ) {\n      result = \"Placed on \" + this.state.myPlacement.placed.school.school_name;\n    }\n\n    return result;\n  };\n\n  getClaimInstitute = (claimType: PlansTypeKeys): string => {\n    let result: string = \"\";\n    if (\n      claimType === PlansTypeKeys.APPLICATION &&\n      this.props.claiming.candidateApplications\n    ) {\n      result = this.getApplicationById(\n        this.props.claiming.candidateApplications,\n        this.state.claimFileId\n      ).position.education_institute_id.education_institute_id;\n    }\n\n    return result;\n  };\n\n  handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!this.state.thisClaimType) {\n      return this.setFormError({\n        element: \"claim_type\",\n        msg: \"Claim type is required!\",\n      });\n    }\n    if (isEmptyOrSpaces(this.state.claimFileId)) {\n      return this.setFormError({\n        element: \"claim_file\",\n        msg: `Please select ${this.state.thisClaimType.toLocaleLowerCase()} you are claiming on!`,\n      });\n    }\n\n    if (!this.state.claimReason) {\n      return this.setFormError({\n        element: \"claim_reason\",\n        msg: `Please select the reason of your claim!`,\n      });\n    }\n\n    if (isEmptyOrSpaces(this.state.claimComment)) {\n      return this.setFormError({\n        element: \"claim_comment\",\n        msg: `Claim comment is required!`,\n      });\n    }\n\n    if (!this.props.auth.application_session) {\n      return this.setAlertError(`No active claiming session is available!`);\n    }\n\n    this.setLoadingForm(true);\n    let old_evaluator_email: string = \"info@system.com\";\n    let old_evaluator_name: string = \"System\";\n    let evaluator_email: string = \"\";\n    let evaluator_name: string = \"\";\n    let title: string = this.getClaimTitle(this.state.thisClaimType);\n    let institute_id: string = this.getClaimInstitute(this.state.thisClaimType);\n\n    if (\n      this.state.thisClaimType !== PlansTypeKeys.EXAMINATION &&\n      this.getValidation(this.state.claimFileId).old_evaluated_by !== \"system\"\n    ) {\n      await this.loadUserById(\n        this.getValidation(this.state.claimFileId).old_evaluated_by,\n        (data: UserInterface) => {\n          old_evaluator_email = data.email;\n          old_evaluator_name =\n            data.user_info.fname + \" \" + data.user_info.lname;\n        }\n      );\n    }\n\n    if (this.state.thisClaimType === PlansTypeKeys.EXAMINATION) {\n    }\n\n    try {\n      // console.log(\"====================================\");\n      // console.log({\n      //   claiming_on_id: this.state.claimFileId,\n      //   type_key: this.state.thisClaimType,\n      //   user: this.props.auth.user.user_id,\n      //   period_id: this.props.auth.application_session.session_plan_id,\n      //   default_claim_resaons: this.state.claimReason.id,\n      //   reason: this.state.claimComment,\n      //   old_reason:\n      //     this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n      //     this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n      //       ? \"System\"\n      //       : this.getValidation(this.state.claimFileId).old_reason,\n      //   old_status:\n      //     this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n      //     this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n      //       ? \"Failed\"\n      //       : this.getValidation(this.state.claimFileId).old_status,\n      //   old_evaluated_by:\n      //     this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n      //     this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n      //       ? \"\"\n      //       : this.getValidation(this.state.claimFileId).old_evaluated_by,\n      //   old_evaluator_email,\n      //   old_evaluator_name,\n      //   evaluator_email,\n      //   evaluator_name,\n      //   title,\n      // });\n      // console.log(\"====================================\");\n\n      setAxiosToken();\n      const res = await axios.post<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/create`,\n        {\n          claiming_on_id: this.state.claimFileId,\n          type_key: this.state.thisClaimType,\n          user: this.props.auth.user.user_id,\n          period_id: this.props.auth.application_session.session_plan_id,\n          default_claim_resaons: this.state.claimReason.id,\n          reason: this.state.claimComment,\n          old_reason:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"System\"\n              : this.getValidation(this.state.claimFileId).old_reason,\n          old_status:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"Failed\"\n              : this.getValidation(this.state.claimFileId).old_status,\n          old_evaluated_by:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"\"\n              : this.getValidation(this.state.claimFileId).old_evaluated_by,\n          old_evaluator_email,\n          old_evaluator_name,\n          evaluator_email,\n          evaluator_name,\n          title,\n          institute_id,\n        }\n      );\n      console.log({ createClaim: res });\n      if (res.status === 201 || res.status === 200) {\n        this.props.createClaim(res.data);\n        this.props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        this.cleanToClose(true);\n      }\n    } catch (error) {\n      console.error({ error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.setLoadingForm(false);\n  };\n\n  selectClaimType = (thisClaim: string) => {\n    this.setState({\n      thisClaimType: isEmptyOrSpaces(thisClaim)\n        ? null\n        : (thisClaim as PlansTypeKeys),\n    });\n\n    if ((thisClaim as PlansTypeKeys) === PlansTypeKeys.APPLICATION) {\n      if (this.props.claiming.candidateApplications === null) {\n        this.props.getMyRejectedApplications(\n          this.props.auth.user.user_id,\n          (\n            status: boolean,\n            msg: string,\n            data?: claimApplicationsInterface[]\n          ) => {\n            this.setLoading(status);\n            if (!status) {\n              if (msg.length > 0) {\n                this.props.PushPopupAlert({\n                  title: msg,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n            }\n          }\n        );\n      }\n      if (\n        this.props.courses === null ||\n        (this.props.courses.length === 0 && this.state.loading)\n      ) {\n        this.props.loadCourses(this.setLoading);\n        this.setLoading(false);\n      } else {\n        this.setLoading(false);\n      }\n    } else if ((thisClaim as PlansTypeKeys) === PlansTypeKeys.EXAMINATION) {\n      if (\n        this.props.courses === null ||\n        (this.props.courses.length === 0 && this.state.loading)\n      ) {\n        this.props.loadCourses(this.setLoading);\n        this.setLoading(false);\n      } else {\n        this.setLoading(false);\n      }\n    } else if (\n      (thisClaim as PlansTypeKeys) === PlansTypeKeys.DOCUMENT_VALIDATION\n    ) {\n      if (this.props.claiming.candidateDocuments === null) {\n        this.props.getMyRejectedDocuments(\n          (status: boolean, msg: string, data?: DocumentClaimUser[]) => {\n            this.setLoading(status);\n            if (!status) {\n              if (msg.length > 0) {\n                this.props.PushPopupAlert({\n                  title: msg,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n            }\n          }\n        );\n      }\n    } else if (\n      (thisClaim as PlansTypeKeys) === PlansTypeKeys.PLACEMENT_TRANSFER\n    ) {\n      if (this.props.claiming.myPlacement === null) {\n        this.props.getMyPlacement(\n          this.props.auth.user.user_id,\n          (\n            status: boolean,\n            msg: string,\n            data?: candidatePlacementInterface | null\n          ) => {\n            this.setLoading(status);\n            if (!status) {\n              if (msg.length > 0) {\n                this.props.PushPopupAlert({\n                  title: msg,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n            }\n            if (data) {\n              this.setState({ myPlacement: data });\n            }\n          }\n        );\n      }\n    }\n  };\n\n  generateChooseFileTitle = (thisClaimType: PlansTypeKeys | null): string => {\n    let result: string = \"\";\n\n    switch (thisClaimType) {\n      case PlansTypeKeys.APPLICATION:\n        result = `Select application you are claiming on?`;\n        break;\n      case PlansTypeKeys.DOCUMENT_VALIDATION:\n        result = `Select document you are claiming on?`;\n        break;\n      case PlansTypeKeys.EXAMINATION:\n        result = `Select exam you are claiming on?`;\n        break;\n      case PlansTypeKeys.MARKS_PUBLICATION:\n        result = `Select marks publication you are claiming on?`;\n        break;\n      case PlansTypeKeys.PLACEMENT_TRANSFER:\n        result = `Select placement you are claiming on?`;\n        break;\n      default:\n        result = \"Select file you are claiming on?\";\n        break;\n    }\n\n    return result;\n  };\n\n  render() {\n    if (\n      this.props.auth.application_session === null ||\n      this.props.claiming.myClaims === null\n    ) {\n      return null;\n    }\n\n    return (\n      <div className=\"pb-3\">\n        {this.props.formState && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={(): void => {\n              !this.state.loadingForm &&\n                this.state.viewThisFile.length <= 0 &&\n                this.cleanToClose();\n              !this.state.loadingForm &&\n                this.state.viewThisFile.length > 0 &&\n                this.setViewThisFile(\"\");\n            }}\n            displayClose={true}\n            backDropClose={false}\n            title={\n              <div className=\"text-gray-900 font-bold text-xl md:ml-1\">\n                {this.state.viewThisFile.length <= 0 && \"Claiming form\"}\n                {this.state.viewThisFile.length > 0 &&\n                  this.state.thisClaimType ===\n                    PlansTypeKeys.DOCUMENT_VALIDATION &&\n                  \"Viewing document\"}\n                {this.state.viewThisFile.length > 0 &&\n                  this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n                  \"Viewing application\"}\n              </div>\n            }\n            widthSizeClass={\n              this.state.viewThisFile.length > 0\n                ? ModalSize.extraLarge\n                : ModalSize.medium\n            }\n            padding={{ title: true, body: false, footer: false }}\n          >\n            {/* CLAIM FORM ============================================== */}\n            {this.state.viewThisFile.length <= 0 && (\n              <form onSubmit={(e) => this.handleSubmit(e)}>\n                <div className=\"px-6 pb-3\">\n                  {this.state.alertError && (\n                    <div\n                      className=\"alert-warning cursor-pointer\"\n                      onClick={() => this.setAlertError(null)}\n                    >\n                      {this.state.alertError}\n                    </div>\n                  )}\n                  <div className=\"text-base text-gray-700 sm:text-lg\">\n                    {/* SELECT CLAIM TYPE ============================================== */}\n                    <div className=\"flex flex-col mb-2\">\n                      <label>Claim type</label>\n                      <select\n                        className={`rounded px-2 py-2 w-full bg-white focus:outline-none ${\n                          this.state.formType === \"PROPS\" &&\n                          \"cursor-not-allowed\"\n                        } ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_type\"\n                            ? \"border-red-500\"\n                            : \"border-gray-500\"\n                        } border-2`}\n                        onChange={(e: React.ChangeEvent<HTMLSelectElement>) => {\n                          this.selectClaimType(e.target.value);\n                          this.setClaimFileId(\"\");\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_type\" &&\n                            this.setFormError(null);\n                        }}\n                        value={\n                          this.state.thisClaimType\n                            ? this.state.thisClaimType\n                            : \"\"\n                        }\n                        disabled={\n                          this.state.loadingForm ||\n                          this.state.formType === \"PROPS\"\n                        }\n                      >\n                        <option value=\"\">Choose claim type</option>\n                        {Object.values(PlansTypeKeys).map((item, index) => (\n                          <option\n                            value={item}\n                            key={index + item}\n                            className={`${\n                              item === PlansTypeKeys.MARKS_PUBLICATION ||\n                              item === PlansTypeKeys.PLACEMENT_TRANSFER\n                                ? \"hidden\"\n                                : \"block\"\n                            }`}\n                          >\n                            {capitalizeFirstLetter(\n                              item.toLocaleLowerCase().replace(/_/g, \" \")\n                            )}\n                          </option>\n                        ))}\n                      </select>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_type\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END SELECT CLAIM TYPE ============================================== */}\n\n                    {/* SELECT FILE TO CLAIM ON ============================================== */}\n                    <div className=\"flex flex-col mb-2\">\n                      <label>\n                        {this.generateChooseFileTitle(this.state.thisClaimType)}\n                      </label>\n                      <div\n                        className={`text-left bg-white border-2 ${\n                          this.state.formType !== \"PROPS\"\n                            ? \"border-gray-700\"\n                            : \"border-gray-400 text-gray-500\"\n                        } rounded w-full ${\n                          this.state.chooseClaimFile ? \"h-64\" : \"h-10\"\n                        } ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_file\"\n                            ? \"border-red-500\"\n                            : \"\"\n                        } border-2 ${\n                          this.state.loading\n                            ? \"cursor-waiting\"\n                            : this.state.thisClaimType &&\n                              !this.state.chooseClaimFile &&\n                              this.state.formType !== \"PROPS\"\n                            ? \"cursor-pointer\"\n                            : !this.state.chooseClaimFile &&\n                              \"cursor-not-allowed\"\n                        }`}\n                        title={\n                          !this.state.thisClaimType\n                            ? \"Choose claim type first!\"\n                            : \"\"\n                        }\n                        onClick={() => {\n                          !this.state.loading &&\n                            this.state.formType === \"DEFAULT\" &&\n                            this.state.thisClaimType &&\n                            !this.state.chooseClaimFile &&\n                            this.setChooseClaimFile(true);\n                          !this.state.loading &&\n                            this.state.formError &&\n                            this.state.formError.element === \"claim_file\" &&\n                            this.setFormError(null);\n                        }}\n                      >\n                        {/* DISPLAYING FILTERED SELECTING FILE ============================ */}\n                        {this.state.claimFileId.length > 0 &&\n                        this.state.thisClaimType &&\n                        !this.state.chooseClaimFile ? (\n                          <p className=\"my-1 mx-2\">\n                            {this.getClaimTitle(this.state.thisClaimType)}\n                          </p>\n                        ) : (\n                          !this.state.chooseClaimFile && (\n                            <p className=\"my-1 mx-2\">\n                              Select Claim{\" \"}\n                              {this.state.thisClaimType &&\n                                this.state.thisClaimType\n                                  .toLocaleLowerCase()\n                                  .replace(/_/g, \" \")}\n                            </p>\n                          )\n                        )}\n                        {/* END DISPLAYING FILTERED SELECTING FILE ============================ */}\n\n                        {/* LISTING OF REJECTED DOCUMENTS ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.DOCUMENT_VALIDATION &&\n                          this.props.claiming.candidateDocuments &&\n                          this.props.claiming.myClaims &&\n                          this.props.auth.application_session && (\n                            <FormDocumentList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              claimFileId={this.state.claimFileId}\n                              viewThisFile={this.state.viewThisFile}\n                              candidateDocuments={\n                                this.props.claiming.candidateDocuments\n                              }\n                              documentCategories={this.props.documentReducer}\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.auth.application_session\n                              }\n                            />\n                          )}\n                        {/* END LISTING OF REJECTED DOCUMENTS ============================ */}\n                        {/* ---------------------------------------------------------- */}\n                        {/* LISTING OF REJECTED APPLICATION ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.APPLICATION &&\n                          this.props.claiming.candidateApplications &&\n                          this.props.claiming.myClaims &&\n                          this.props.auth.application_session && (\n                            <FormApplicationList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              claimFileId={this.state.claimFileId}\n                              viewThisFile={this.state.viewThisFile}\n                              candidateApplications={\n                                this.props.claiming.candidateApplications\n                              }\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.auth.application_session\n                              }\n                            />\n                          )}\n                        {/* END LISTING OF REJECTED APPLICATION ============================ */}\n                        {/* ---------------------------------------------------------- */}\n                        {/* LISTING OF FAILED EXAM ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.EXAMINATION &&\n                          this.props.claiming.myAnswer &&\n                          this.props.claiming.myClaims &&\n                          this.props.auth.application_session && (\n                            <FormExamList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              claimFileId={this.state.claimFileId}\n                              viewThisFile={this.state.viewThisFile}\n                              candidateAnswers={this.props.claiming.myAnswer}\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.auth.application_session\n                              }\n                            />\n                          )}\n                        {/* END LISTING OF FAILED EXAM ============================ */}\n                        {/* ---------------------------------------------------------- */}\n                        {/* PENDING PLACEMENT ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.PLACEMENT_TRANSFER &&\n                          this.props.claiming.myClaims &&\n                          this.props.auth.application_session && (\n                            <FormPlacementList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              claimFileId={this.state.claimFileId}\n                              viewThisFile={this.state.viewThisFile}\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.auth.application_session\n                              }\n                              myPlacement={this.state.myPlacement}\n                            />\n                          )}\n                        {/* END LISTING OF FAILED Placement ============================ */}\n                      </div>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_file\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END SELECT FILE TO CLAIM ON ============================================== */}\n\n                    {/* CLAIM REASONS ========================================== */}\n                    <div className=\"flex flex-col mb-2\">\n                      <label>Choose reason of your claim</label>\n                      <div\n                        className={`text-left bg-white border-2 border-gray-700 rounded w-full ${\n                          this.state.chooseClaimReason ? \"h-64\" : \"h-auto\"\n                        } ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_reason\"\n                            ? \"border-red-500\"\n                            : \"\"\n                        } border-2 ${\n                          this.props.claiming.claimReasons === null\n                            ? \"cursor-wait\"\n                            : \"cursor-pointer\"\n                        }`}\n                        title=\"Choose the reason for your claim!\"\n                        onClick={() => {\n                          !this.state.chooseClaimReason &&\n                            this.setState({ chooseClaimReason: true });\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_reason\" &&\n                            this.setFormError(null);\n                        }}\n                      >\n                        {/* DISPLAYING SELECTED REASON ============================ */}\n                        {this.state.claimReason &&\n                        !this.state.chooseClaimReason ? (\n                          <p className=\"my-1 mx-2\">\n                            {this.state.claimReason.reason}\n                          </p>\n                        ) : (\n                          !this.state.chooseClaimReason && (\n                            <p className=\"my-1 mx-2\">Select reason</p>\n                          )\n                        )}\n                        {/* END DISPLAYING SELECTED REASON ============================ */}\n\n                        {/* LISTING OF CLAIM REASONS ============================ */}\n                        {this.state.chooseClaimReason &&\n                          this.props.claiming.claimReasons && (\n                            <ChooseReason\n                              setChooseClaimReason={this.setChooseClaimReason}\n                              setClaimReason={this.setClaimReason}\n                              claimReason={this.state.claimReason}\n                              allClaimReasons={this.props.claiming.claimReasons}\n                            />\n                          )}\n                        {/* END LISTING OF CLAIM REASONS ============================ */}\n                      </div>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_reason\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END CLAIM REASONS ========================================== */}\n\n                    {/* CLAIM COMMENT ============================================== */}\n                    <div className=\"flex flex-col\">\n                      <label>Comment</label>\n                      <textarea\n                        className={`text-left input-white w-20 inline-block ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_comment\"\n                            ? \"border-red-500\"\n                            : \"border-gray-500\"\n                        } border-2`}\n                        placeholder={`Claim comment`}\n                        style={{ resize: \"none\" }}\n                        value={this.state.claimComment}\n                        onChange={(e) => {\n                          this.setClaimComment(e.target.value);\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_comment\" &&\n                            this.setFormError(null);\n                        }}\n                        rows={3}\n                        disabled={this.state.loadingForm}\n                      ></textarea>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_comment\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END CLAIM COMMENT ============================================== */}\n                  </div>\n\n                  <div className=\"pt-3 flex justify-between\">\n                    <button\n                      onClick={() => this.cleanToClose()}\n                      className={`btn bg-gray-400 text-white hover:bg-gray-600 focus:outline-none ${\n                        this.state.loadingForm && \"cursor-not-allowed\"\n                      }`}\n                      type=\"button\"\n                      disabled={this.state.loadingForm || this.state.loading}\n                    >\n                      Exit\n                    </button>\n                    <button\n                      className={`btn bg-primary text-white hover:bg-blue-600 focus:outline-none ${\n                        this.state.loadingForm && \"cursor-wait\"\n                      }`}\n                      type=\"submit\"\n                      disabled={this.state.loadingForm || this.state.loading}\n                    >\n                      {this.state.loadingForm ? \"Loading...\" : \"Claim\"}\n                    </button>\n                  </div>\n                </div>\n              </form>\n            )}\n            {/* END CLAIM FORM ============================================== */}\n\n            {/* CLAIM DOCUMENT VIEW ============================================== */}\n            {this.state.viewThisFile.length > 0 &&\n              this.props.claiming.candidateDocuments &&\n              this.state.thisClaimType ===\n                PlansTypeKeys.DOCUMENT_VALIDATION && (\n                <DocFormView\n                  thisDoc={this.getDocumentById(\n                    this.props.claiming.candidateDocuments,\n                    this.state.viewThisFile\n                  )}\n                  setViewThisFile={this.setViewThisFile}\n                  documentCategories={this.props.documentReducer}\n                  setChooseClaimFile={this.setChooseClaimFile}\n                  setClaimFileId={this.setClaimFileId}\n                />\n              )}\n            {/* END CLAIM DOCUMENT VIEW ============================================== */}\n            {/* ------------------------------------------------------------------------- */}\n            {/* CLAIM APPLICATION VIEW ============================================== */}\n            {this.state.viewThisFile.length > 0 &&\n              this.props.claiming.candidateApplications &&\n              this.state.thisClaimType === PlansTypeKeys.APPLICATION && (\n                <ApplicationFormView\n                  thisApplication={this.getApplicationById(\n                    this.props.claiming.candidateApplications,\n                    this.state.viewThisFile\n                  )}\n                  documentCategories={this.props.documentReducer}\n                  setChooseClaimFile={this.setChooseClaimFile}\n                  setClaimFileId={this.setClaimFileId}\n                  setViewThisFile={this.setViewThisFile}\n                />\n              )}\n            {/* END CLAIM APPLICATION VIEW ============================================== */}\n            {/* ------------------------------------------------------------------------- */}\n            {/* CLAIM EXAMINATION VIEW ============================================== */}\n            {this.state.viewThisFile.length > 0 &&\n              this.props.claiming.myAnswer &&\n              this.state.thisClaimType === PlansTypeKeys.EXAMINATION &&\n              this.getExamById(\n                this.props.claiming.myAnswer,\n                this.state.viewThisFile\n              ) && (\n                <ExaminationFormView\n                  thisAnswerSheet={\n                    this.getExamById(\n                      this.props.claiming.myAnswer,\n                      this.state.viewThisFile\n                    )!\n                  }\n                  setChooseClaimFile={this.setChooseClaimFile}\n                  setClaimFileId={this.setClaimFileId}\n                  setViewThisFile={this.setViewThisFile}\n                  // thisAnswerSheet={undefined}\n                  // setViewThisFile={undefined}\n                  // setChooseClaimFile={undefined}\n                  // setClaimFileId={undefined}\n                />\n              )}\n            {/* END CLAIM EXAMINATION VIEW ============================================== */}\n          </Modal>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  document,\n  claiming,\n  course,\n}: StoreState): {\n  auth: Auth;\n  documentReducer: DocumentReducerInterface;\n  claiming: ClaimingReducerType;\n  courses: course[] | null;\n} => {\n  return {\n    auth: auth,\n    documentReducer: document,\n    claiming,\n    courses: course.courses,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  loadCourses,\n  getMyClaims,\n  getClaimReasons,\n  getMyAnswers,\n  getMyPlacement,\n  createClaim,\n  GetClaimingTypes,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  PushPopupAlert,\n})(ClaimForm);\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AccessTaskInterface,\n  PermissionInterface,\n  SystemSettingsInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PositionAPI } from \"../interfaces/position\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// SYSTEM SETTINGS  ==============\nexport interface GetSystemSettingsAction {\n  type: ActionTypes.GET_SYSTEM_SETTINGS;\n  payload: SystemSettingsInterface[];\n}\n\nexport interface DisableSystemSettingsAction {\n  type: ActionTypes.DISABLE_SYSTEM_SETTINGS;\n  payload: {\n    system_setting_id: string;\n    status: \"enabled\" | \"disabled\";\n  };\n}\n\n// ROLE TASKS ACCESS SETTINGS ===================================\nexport interface GetTaskAccessAction {\n  type: ActionTypes.GET_TASK_ACCESS;\n  payload: AccessTaskInterface[];\n}\n\n// POSITIONS SETTINGS ===================================\nexport interface PositionCreateInterface {\n  position_id?: string;\n  position_title: string;\n  description: string;\n  school_level_id: string;\n  subcategory_id: string;\n  education_institute_id: string;\n  courses: string[];\n  requirements: {\n    user_detail_category_id: string;\n    user_detail_subcategory_id: string;\n    position_requirement: {\n      category_subcategory_data_id: string;\n      required: boolean;\n    }[];\n    required: boolean;\n  }[];\n}\nexport interface GetPositionsAction {\n  type: ActionTypes.GET_POSTIONS;\n  payload: PositionAPI[];\n}\n\nexport interface CreatePositionsAction {\n  type: ActionTypes.CREATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface UpdatePositionsAction {\n  type: ActionTypes.UPDATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface DeletePositionSettingAction {\n  type: ActionTypes.DELETE_POSITION;\n  payload: string;\n}\n\nexport interface PublishPositionAction {\n  type: ActionTypes.PUBLISH_POSITION;\n  payload: {\n    position_id: string;\n    status: boolean;\n  };\n}\n\nexport type SystemActionType =\n  | GetSystemSettingsAction\n  | DisableSystemSettingsAction\n  | GetTaskAccessAction\n  | GetPositionsAction\n  | CreatePositionsAction\n  | UpdatePositionsAction\n  | DeletePositionSettingAction\n  | PublishPositionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSystemSettings = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<SystemSettingsInterface[]>(\n        `${API.AUTH}/settings`\n      );\n      dispatch<GetSystemSettingsAction>({\n        type: ActionTypes.GET_SYSTEM_SETTINGS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const disableSystemSetting = (data: {\n  system_setting_id: string;\n  status: \"enabled\" | \"disabled\";\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableSystemSettingsAction>({\n      type: ActionTypes.DISABLE_SYSTEM_SETTINGS,\n      payload: data,\n    });\n  };\n};\n\n// ============================ tasks access =======================\n\nexport const GetTaskAccess = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<\n        {\n          id: string;\n          title: string;\n          key: string;\n          permitted: PermissionInterface;\n        }[]\n      >(`${API.AUTH}/allroleaccess`);\n      let response: AccessTaskInterface[] = res.data.map((data) => ({\n        id: data.id,\n        task: data.title,\n        key: data.key,\n        permitted: data.permitted,\n      }));\n      dispatch<GetTaskAccessAction>({\n        type: ActionTypes.GET_TASK_ACCESS,\n        payload: response,\n      });\n      callback(false, \"\", response);\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// ============================ positions =======================\n\nexport const getPositions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(`${API.APPLICATION}/position`);\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createPosition = (data: PositionCreateInterface) => {\n  console.log({ createPosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreatePositionsAction>({\n      type: ActionTypes.CREATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const updatePosition = (data: PositionCreateInterface) => {\n  console.log({ updatePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdatePositionsAction>({\n      type: ActionTypes.UPDATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const deletePosition = (data: string) => {\n  console.log({ deletePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<DeletePositionSettingAction>({\n      type: ActionTypes.DELETE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const publishPosition = (data: {\n  position_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<PublishPositionAction>({\n      type: ActionTypes.PUBLISH_POSITION,\n      payload: data,\n    });\n  };\n};\n","import {\n  CalculatedMultipleChoiceQuestionAnswerInterface,\n  EmbeddedQuestionAnswerInterface,\n  EssayQuestionAnswerInterface,\n  MatchingQuestionAnswerInterface,\n  MultipleChoiceQuestionAnswerInterface,\n  NumericalQuestionAnswerInterface,\n  ShortAnswerQuestionAnswerInterface,\n  SimpleCalculatedQuestionAnswerInterface,\n  TrueFalseQuestionAnswerInterface,\n} from \"../../../interfaces/question\";\n\nexport const toMultipleChoice = (\n  answers: any[]\n): MultipleChoiceQuestionAnswerInterface[] => {\n  let res: MultipleChoiceQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [\n      ...res,\n      {\n        id: answer.id,\n        value: answer.value,\n        status: answer.status,\n      },\n    ];\n  }\n  return res;\n};\n\nexport const toTrueFalse = (\n  answers: any[]\n): TrueFalseQuestionAnswerInterface[] => {\n  let res: TrueFalseQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [\n      ...res,\n      {\n        id: answer.id,\n        value: answer.value,\n        status: answer.status,\n      },\n    ];\n  }\n  return res;\n};\n\nexport const toMatching = (\n  answers: any[]\n): MatchingQuestionAnswerInterface[] => {\n  let res: MatchingQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [\n      ...res,\n      {\n        id: answer.id,\n        value: answer.value,\n        status: answer.status,\n      },\n    ];\n  }\n  return res;\n};\n\nexport const toSimpleCalculated = (\n  answers: any[]\n): SimpleCalculatedQuestionAnswerInterface[] => {\n  let res: SimpleCalculatedQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [\n      ...res,\n      {\n        id: answer.id,\n        value: answer.value,\n        status: answer.status,\n      },\n    ];\n  }\n  return res;\n};\n\nexport const toShortAnswer = (\n  answers: any[]\n): ShortAnswerQuestionAnswerInterface[] => {\n  let res: ShortAnswerQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [\n      ...res,\n      {\n        id: answer.id,\n        value: answer.value,\n        status: answer.status,\n      },\n    ];\n  }\n  return res;\n};\n\nexport const toNumerical = (\n  answers: any[]\n): NumericalQuestionAnswerInterface[] => {\n  let res: NumericalQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [\n      ...res,\n      {\n        id: answer.id,\n        value: answer.value,\n        status: answer.status,\n      },\n    ];\n  }\n  return res;\n};\n\nexport const toCalculatedMultipleChoice = (\n  answers: any[]\n): CalculatedMultipleChoiceQuestionAnswerInterface[] => {\n  let res: CalculatedMultipleChoiceQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [\n      ...res,\n      {\n        id: answer.id,\n        value: answer.value,\n        status: answer.status,\n      },\n    ];\n  }\n  return res;\n};\n\nexport const toEssay = (answers: any[]): EssayQuestionAnswerInterface[] => {\n  let res: EssayQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [\n      ...res,\n      {\n        id: answer.id,\n        value: answer.value,\n        status: answer.status,\n      },\n    ];\n  }\n  return res;\n};\n\nexport const toEmbedded = (\n  answers: any[]\n): EmbeddedQuestionAnswerInterface[] => {\n  let res: EmbeddedQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [\n      ...res,\n      {\n        id: answer.id,\n        value: answer.value,\n        status: answer.status,\n      },\n    ];\n  }\n  return res;\n};\n","import React from \"react\";\nimport { MdInfoOutline } from \"react-icons/md\";\n\nconst NoSession = () => {\n  return (\n    <div className=\"my-5\">\n      <div className=\"bg-yellow-100 rounded flex flex-col items-center justify-center p-6 my-8 text-yellow-900 border border-yellow-900\">\n        <MdInfoOutline className=\"text-6xl md:text-9xl\" />\n        <div className=\"text-center flex flex-col\">\n          <span className=\"text-2xl md:text-4xl font-extrabold\">\n            No session available\n          </span>\n          <span className=\"text-lg\">\n            Please Wait for the system to publish the sessions or contact the\n            administrator\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NoSession;\n","import React from \"react\";\n\ntype TableLoadingProps = {\n  cols: number;\n};\nconst TableLoading: React.FC<TableLoadingProps> = (props) => {\n  const displayCols = (): JSX.Element[] => {\n    let colsArray: number[] = [];\n    for (let index = 0; index < props.cols; index++) {\n      colsArray.push(index);\n    }\n    let result = colsArray.map((element) => {\n      return (\n        <td className=\"p-3 text-center whitespace-nowrap\" key={element}>\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      );\n    });\n\n    return result;\n  };\n  return (\n    <>\n      <tr className=\"border-b border-gray-200\" key={228}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={22648}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={229768}>\n        {displayCols()}\n      </tr>\n    </>\n  );\n};\n\nexport default TableLoading;\n","import {\n  ApplicationStates,\n  SESSION_PLAN_KEYS,\n} from \"../interfaces/application\";\n\nexport interface SystemSettingsInterface {\n  system_setting_id: string;\n  name: string;\n  key: string;\n  status: \"enabled\" | \"disabled\";\n}\n\nexport interface ApplicationSessionInterface {\n  is_active: boolean;\n  application_session_name: string;\n  period: string;\n  application_start_date: string;\n  application_end_date: string;\n  createdAt: string;\n  updatedAt: string;\n  application_session_id: string;\n}\n\nexport interface UserInfoInterface {\n  document_type?: string;\n  issue_number?: string;\n  date_of_issue?: string;\n  date_of_expiry?: string;\n  place_of_issue?: string;\n  application_number?: string;\n  fname: string;\n  lname: string;\n  sex: \"M\" | \"F\";\n  father_names: string;\n  mother_names: string;\n  date_of_birth: string;\n  place_of_birth?: string;\n  country_of_birth: string;\n  village_id: string;\n  village: string;\n  cell: string;\n  sector: string;\n  district: string;\n  province: string;\n  photo?: string;\n  civil_status?: string;\n  spouse?: any;\n  status?: string;\n}\n\nexport interface UserInterface {\n  user_id: string;\n  _id?: string;\n  n_id?: string;\n  phone_number: string;\n  email: string;\n  password?: string;\n  user_info: UserInfoInterface;\n  details: UserDocumentsInterface[];\n  user_photo?: string;\n  default_access: RoleToUserInterface | null;\n  custome_access: CustomeAccessInterface | null;\n  is_active: boolean;\n}\n\nexport interface CandidateDetailsInterface_old {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: string;\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  } | null;\n  doc_history_status: string;\n  get_in_date: string;\n  approved?: string;\n}\n\nexport interface CandidateDetailsInterface {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: string;\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  } | null;\n  doc_history_status: string;\n  get_in_date: string;\n  approved?: string;\n}\n\nexport interface DocInterface {\n  category_subcategory_data: string;\n  school: string;\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  approved: string;\n  doc_id: string;\n  validated_by: null;\n  validation_status: string;\n  doc_history_status: string;\n  get_in_date: string;\n  date_modefied: string;\n}\n\nexport interface CandidateRoleToUserInterface {\n  key: string;\n  status: number;\n  access: boolean;\n  assigned_date: string;\n}\n\nexport interface CandidatesInterface_old {\n  user_id: string;\n  n_id: string;\n  fname: string;\n  lname: string;\n  phone_number: string;\n  district: string;\n  email: string;\n  details: CandidateDetailsInterface[];\n}\n\nexport interface ApplicationExamsInterface {\n  course_id: string;\n  proctoring_type: string;\n  center_id: string;\n  room_id: string;\n}\n\nexport interface CandidatesInterface {\n  user_id: string;\n  n_id: string;\n  fname: string;\n  lname: string;\n  phone_number: string;\n  district: string;\n  email: string;\n  in_education?: boolean;\n  disability?: boolean;\n  residence: {\n    province_id: string;\n    province_name: string;\n    district_id: string;\n    district_name: string;\n    sector_id: string;\n    sector_name: string;\n  };\n  details: CandidateDetailsInterface[];\n  exams: ApplicationExamsInterface[];\n}\n\nexport interface CustomeAccessInterface {\n  access: AccessTaskInterface[];\n  user_id: string;\n  custome_user_access_id: string;\n}\n\nexport interface UserDocumentsInterface {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: { title: string; school_id: string | null };\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  approved: \"waiting\" | \"approved\" | \"rejected\";\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    commet: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  };\n}\n\nexport interface SystemUserRoleInterface {\n  system_user_role_id: string;\n  role: string;\n  status: boolean;\n  access: AccessTaskInterface[];\n  district_required?: boolean;\n  school_required?: boolean;\n  room_required?: boolean;\n  education_institution_required?: boolean;\n  school_id: string;\n  district_id: string;\n}\n\nexport interface CustomeUserAccessInterface {\n  user_id: string;\n  access?: [\n    {\n      id: string;\n      task: string;\n      key: string;\n      permitted: {\n        create: boolean;\n        delete: boolean;\n        update: boolean;\n        view: boolean;\n      };\n    }\n  ];\n}\n\nexport interface PermissionInterface {\n  create: boolean;\n  view: boolean;\n  update: boolean;\n  delete: boolean;\n}\n\nexport interface AccessTaskInterface {\n  id: string;\n  task: string;\n  key: string;\n  permitted: PermissionInterface;\n}\n\nexport interface RoleToUserInterface {\n  system_user_role_id: string;\n  role: string;\n  access: AccessTaskInterface[];\n  status?: number;\n  school_id: string;\n  district_id: string;\n  room_id: string;\n  education_institution_id: string;\n}\n\nexport interface RoomsInterface {\n  occupied: number;\n  isUsed: boolean;\n  room_type: string;\n  room_number: number;\n  capacity: number;\n  _id: string;\n}\n\nexport interface CentersInterface {\n  rooms: RoomsInterface[];\n  isUsed: boolean;\n  _id: string;\n  center_name: string;\n  center_code: number;\n  district_id: string;\n}\n\nexport interface SectorInterface {\n  district_code: number;\n  district_id: string;\n  sector_name: string;\n  sector_code: number;\n  sector_id: string;\n}\n\nexport interface AllDistrictInterface {\n  sectors: string[];\n  centers: string[];\n  district_name: string;\n  district_code: string;\n  province_code: string;\n  province_id: string;\n  status: number;\n  createdAt: string;\n  updatedAt: string;\n  district_id: string;\n}\nexport interface DistrictInterface {\n  centers: CentersInterface[];\n  sectors: SectorInterface[];\n  province_code: number;\n  province_id: string;\n  district_name: string;\n  district_code: number;\n  _id: string;\n}\n\nexport interface RoomLocationInterface {\n  districts: DistrictInterface[];\n  province_name: string;\n  province_code: number;\n  _id: string;\n}\n\nexport interface AssignRoleToUserActionInterface {\n  user_id: string;\n  data: RoleToUserInterface;\n}\n\nexport interface AssignRoleToUserActionInterface {\n  user_id: string;\n  data: RoleToUserInterface;\n}\n\nexport enum PostRequestStatusInterface {\n  INITIATED = \"initiated\",\n  CONFIRMED = \"confirmed\",\n  RECEIVED = \"received\",\n}\n\nexport interface PostSchoolInterface_old {\n  post_at_school_id: string;\n  school_id: string;\n  position_id: string;\n  district_id: string;\n  needed_posts: number;\n  confirmed_posts?: number;\n  occupied_posts?: number;\n  requested_by: string;\n  confirmed_by?: string;\n  received_posts?: number;\n  request_date: Date;\n  approval_date?: Date;\n  post_at_school_status: PostRequestStatusInterface;\n}\n\nexport interface PostSchoolInterface {\n  _id: string;\n  school_id: string;\n  position_id: string;\n  district_id: string;\n  needed_posts: number;\n  male_number: number;\n  female_number: number;\n  description: string;\n  confirmed_posts?: number;\n  occupied_posts?: number;\n  requested_by: string;\n  confirmed_by?: string;\n  received_posts?: number;\n  request_date: Date;\n  approval_date?: Date;\n  requested_post_status: PostRequestStatusInterface;\n  school: {\n    _id: string;\n    school_name: string;\n    school_code: string;\n    province_id: string;\n    province_code: string;\n    district_id: {\n      _id: string;\n      district_name: string;\n    };\n    district_code: string;\n    sector_code: string;\n    sector_id: string;\n    school_status: string;\n    status: number;\n    createdAt: string;\n    updatedAt: string;\n  };\n  post_request_session_id: string;\n}\n\nexport interface SchoolInfoInterface {\n  school_id: string;\n  school_title: string;\n  district_id: string;\n  number_of_females?: number;\n  number_of_males?: number;\n}\n\nexport interface SchoolsInterface {\n  _id: string;\n  status: boolean;\n  school_name: string;\n  school_code: number;\n  province_id: string;\n  province_code: number;\n  district_id: string;\n  district_code: number;\n  sector_id: string;\n  sector_code: number;\n  education_category_id: string;\n}\n\nexport interface MySchoolInterface {\n  _id: string;\n  school_name: string;\n  school_code: string;\n  province_id: string;\n  province_code: string;\n  district_id: {\n    _id: string;\n    district_name: string;\n  };\n  district_code: string;\n  sector_code: string;\n  sector_id: string;\n  school_status: string;\n  status: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface SchoolLevelInterface {\n  school_level_id: string;\n  school_level_name: string;\n  description: string;\n  education_institute: string[];\n  courses: [];\n}\n\nexport interface CourseInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n}\n\nexport interface EducationInstituteInterface {\n  education_category_title: string;\n  school_levels: [];\n  description: string;\n  education_institute_id: string;\n}\n\nexport interface PositionRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface PositionInterface {\n  courses: CourseInterface[];\n  position_title: string;\n  description: string;\n  school_level_id: SchoolLevelInterface;\n  education_institute_id: EducationInstituteInterface;\n  requirements: PositionRequirementInterface[];\n  position_id: string;\n}\n\nexport enum DocumentAttributesInterface {\n  \"Title\" = \"title\",\n  \"Description\" = \"description\",\n  \"Files\" = \"files\",\n  \"email\" = \"email\",\n  \"names\" = \"names\",\n  \"phone_number\" = \"phone_number\",\n  \"position\" = \"position\",\n  \"relation\" = \"relation\",\n  \"src\" = \"src\",\n  \"year\" = \"year\",\n  \"company\" = \"company\",\n  \"category_subcategory_data\" = \"category_subcategory_data\",\n  \"others\" = \"others\",\n  \"start_year\" = \"start_year\",\n  \"end_year\" = \"end_year\",\n  \"School\" = \"School\",\n}\n\nexport enum DocValidationStatusInterface {\n  APPROVED = \"approved\",\n  REJECTED = \"rejected\",\n}\n\nexport interface DocumentCategoryInterface {\n  user_detail_category_id: string;\n  title: string;\n  description: string;\n  fields: DocumentAttributesInterface[];\n}\n\nexport interface DocumentSubCategoryInterface {\n  category_id: string;\n  title: string;\n  description: string;\n  user_detail_subcategory_id: string;\n}\n\nexport interface DocumentFieldsInterface {\n  _id: string;\n  category_id: string;\n  subcategory_id: string | null;\n  title: string;\n  description: string;\n  others: [];\n}\n\nexport interface ApplicationAssessmentInterface {\n  application_id: string;\n  user_id: string;\n  application_session: string;\n  application_status: string;\n  n_id: string;\n  phone_number: string;\n  email: string;\n  fname: string;\n  lname: string;\n  sex: \"M\" | \"F\";\n  district: string;\n  position: PositionApplicationInterface;\n  details: CandidateDetailsInterface[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface AdminApplicationsToPrintInterface {\n  application_id: number;\n  names: string;\n  gender?: string;\n  national_id?: string;\n  phone?: string;\n  email?: string;\n  position: string;\n  education_category?: string;\n  application_session?: string;\n  district?: string;\n  date?: string;\n  decision?: ApplicationStates;\n}\n\nexport interface PositionApplicationInterface {\n  courses: string[];\n  position_title: string;\n  description: string;\n  school_level_id: string;\n  education_institute_id: string;\n  requirements: PositionRequirementInterface[];\n  position_id: string;\n}\n\nexport interface PositionRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface ApplicationRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface PeriodInterface {\n  is_active: string;\n  application_session_name: string;\n  period: string;\n  application_start_date: string;\n  application_end_date: string;\n  createdAt: string;\n  updatedAt: string;\n  application_session_id: string;\n}\n\nexport interface LocationRoomTableInterface {\n  province_id: string;\n  province_name: string;\n  district_id: string;\n  district_name: string;\n  center_id: string;\n  center_name: string;\n  room_id: string;\n  room_name: string;\n  capacity: number;\n  occupied: number;\n}\n\nexport interface LocationSectorTableInterface {\n  province_id: string;\n  province_name: string;\n  province_code: number;\n  district_id: string;\n  district_name: string;\n  district_code: number;\n  sector_id: string;\n  sector_name: string;\n  sector_code: number;\n}\n\nexport interface PositionRequirementsFieldInterface {\n  category_id: string;\n  category_name: string;\n  sub_category_id: string;\n  sub_category_name: string;\n  field_id: string;\n  field_name: string;\n  sub_category_required: boolean;\n  required: boolean;\n  isAnyField: boolean;\n}\n\nexport interface PositionRequirementsQualificationInterface {\n  category_id: string;\n  category_name: string;\n  sub_category_id: string;\n  sub_category_name: string;\n  fields: DocumentFieldsInterface[];\n  required: boolean;\n}\n\nexport interface ApplicationPeriodInterface {\n  _id: string;\n  application_status: ApplicationStates;\n  userInfo: {\n    n_id: string;\n    phone_number: string;\n    email: string;\n    user_info: {\n      document_type: string;\n      issue_number: string;\n      date_of_issue: string;\n      date_of_expiry: string;\n      place_of_issue: string;\n      application_number: string;\n      fname: string;\n      lname: string;\n      father_names: string;\n      mother_names: string;\n      sex: string;\n      date_of_birth: string;\n      place_of_birth: string;\n      country_of_birth: string;\n      village_id: string;\n      village: string;\n      cell: string;\n      sector: string;\n      district: string;\n      province: string;\n      civil_status: string;\n      spouse: null;\n      status: string;\n      photo: string;\n    };\n  };\n  user_id: string;\n  position: string;\n  application_session: string;\n  exams: ApplicationExamsInterface[];\n}\n\nexport const getDocCategoryById = (\n  subDocs: DocumentCategoryInterface[],\n  docId: string\n): DocumentCategoryInterface => {\n  return subDocs.filter((doc) => doc.user_detail_category_id === docId)[0];\n};\n\nexport const getSubDocCategoryById = (\n  subDocs: DocumentSubCategoryInterface[],\n  docId: string\n): DocumentSubCategoryInterface => {\n  return subDocs.filter((doc) => doc.user_detail_subcategory_id === docId)[0];\n};\n\nexport const SESSION_PLAN_TYPES: {\n  type_id: number;\n  type_title: string;\n  type_key: SESSION_PLAN_KEYS;\n}[] = [\n  {\n    type_id: 1,\n    type_title: \"Application\",\n    type_key: SESSION_PLAN_KEYS.APPLICATION,\n  },\n  {\n    type_id: 2,\n    type_title: \"Document Validation\",\n    type_key: SESSION_PLAN_KEYS.DOCUMENT_VALIDATION,\n  },\n  {\n    type_id: 3,\n    type_title: \"Examination\",\n    type_key: SESSION_PLAN_KEYS.EXAMINATION,\n  },\n  {\n    type_id: 4,\n    type_title: \"Marks Publication\",\n    type_key: SESSION_PLAN_KEYS.MARKS_PUBLICATION,\n  },\n  {\n    type_id: 5,\n    type_title: \"Placement and Transfer\",\n    type_key: SESSION_PLAN_KEYS.PLACEMENT_TRANSFER,\n  },\n];\n","import { ApexOptions } from \"apexcharts\";\nimport React, { useEffect, useState } from \"react\";\nimport Chart from \"react-apexcharts\";\n\ntype VBarCharPropstInterface = {\n  labels: string[];\n  categoriesLabel: any;\n  bar?: {\n    borderRadius: number;\n    horizontal: boolean;\n    columnWidth: string;\n    endingShape: string;\n  };\n  dataLabels: boolean;\n  yaxisText: string;\n  tooltipText: string;\n  series: {\n    name: string;\n    data: number[];\n  }[];\n  defaultBar?: {\n    borderRadius: number;\n    horizontal: boolean;\n    columnWidth: string;\n    endingShape: string;\n  };\n  colors?: any[];\n  title?: {\n    text: string;\n    align: string;\n    margin: number;\n    offestY: number;\n    style: {\n      fontSize: string;\n    };\n  };\n  stacked?: boolean;\n  FC_LoadSelected?: (labelIndex: number, seriesIndex: number) => void;\n  chartHeight?: number;\n};\n\nconst defaultBar = {\n  borderRadius: 4,\n  horizontal: false,\n  columnWidth: \"95%\",\n  endingShape: \"rounded\",\n};\n\nconst VBarChart: React.FC<VBarCharPropstInterface> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [options, setOptions] = useState<ApexOptions>({\n    chart: {\n      events: {\n        dataPointSelection: (event, chartContext, config) => {\n          console.log({\n            labelClicked: config.w.config.labels[config.dataPointIndex],\n            // seriesClicked: config.w.config.series[config.dataPointIndex],\n          });\n          if (props.FC_LoadSelected) {\n            props.FC_LoadSelected(config.dataPointIndex, config.seriesIndex);\n          }\n          // console.log(config.seriesIndex);\n          // console.log(config.dataPointIndex);\n        },\n      },\n      stacked: props.stacked ? props.stacked : false,\n    },\n    plotOptions: {\n      bar: props.defaultBar ? props.defaultBar : defaultBar,\n    },\n    labels: props.labels,\n    dataLabels: {\n      enabled: true,\n    },\n    xaxis: {\n      labels: {\n        rotate: -45,\n      },\n      categories: props.categoriesLabel,\n      tickPlacement: \"on\",\n    },\n    yaxis: {\n      title: {\n        text: props.yaxisText,\n      },\n    },\n    fill: {\n      opacity: 1,\n    },\n    tooltip: {\n      y: {\n        formatter: function (val: number) {\n          return val + \" \" + props.tooltipText;\n        },\n      },\n    },\n    grid: {\n      padding: {\n        left: 30, // or whatever value that works\n        right: 30, // or whatever value that works\n      },\n    },\n    noData: {\n      text: \"No data found\",\n      align: \"center\",\n      verticalAlign: \"middle\",\n    },\n  });\n\n  useEffect(() => {\n    if (props.colors && props.colors.length > 0 && loading) {\n      setOptions({\n        chart: {\n          stacked: props.stacked ? props.stacked : false,\n          events: {\n            dataPointSelection: (event, chartContext, config) => {\n              console.log({\n                chartClicked: config.w.config.labels[config.dataPointIndex],\n              });\n              if (props.FC_LoadSelected) {\n                props.FC_LoadSelected(\n                  config.dataPointIndex,\n                  config.seriesIndex\n                );\n              }\n            },\n          },\n          zoom: {\n            enabled: true,\n            autoScaleYaxis: true,\n          },\n        },\n        plotOptions: {\n          bar: props.defaultBar ? props.defaultBar : defaultBar,\n        },\n        labels: props.labels,\n        dataLabels: {\n          enabled: true,\n        },\n        xaxis: {\n          labels: {\n            rotate: -45,\n          },\n          categories: props.categoriesLabel,\n          tickPlacement: \"on\",\n        },\n        yaxis: {\n          title: {\n            text: props.yaxisText,\n          },\n        },\n        fill: {\n          opacity: 1,\n        },\n        tooltip: {\n          y: {\n            formatter: function (val: number) {\n              return val + \" \" + props.tooltipText;\n            },\n          },\n        },\n        grid: {\n          padding: {\n            left: 30, // or whatever value that works\n            right: 30, // or whatever value that works\n          },\n        },\n        noData: {\n          text: \"No data found\",\n          align: \"center\",\n          verticalAlign: \"middle\",\n        },\n        colors: props.colors,\n      });\n    } else if (loading) {\n      setOptions({\n        chart: {\n          stacked: props.stacked ? props.stacked : false,\n          events: {\n            dataPointSelection: (event, chartContext, config) => {\n              console.log({\n                labelClicked: config.w.config.labels[config.dataPointIndex],\n                // seriesClicked: config.w.config.series[config.dataPointIndex],\n              });\n              if (props.FC_LoadSelected) {\n                props.FC_LoadSelected(\n                  config.dataPointIndex,\n                  config.seriesIndex\n                );\n              }\n              // console.log(config.seriesIndex);\n              // console.log(config.dataPointIndex);\n            },\n          },\n          zoom: {\n            enabled: true,\n            autoScaleYaxis: true,\n          },\n        },\n        plotOptions: {\n          bar: props.defaultBar ? props.defaultBar : defaultBar,\n        },\n        labels: props.labels,\n        dataLabels: {\n          enabled: true,\n        },\n        xaxis: {\n          labels: {\n            rotate: -45,\n          },\n          categories: props.categoriesLabel,\n          tickPlacement: \"on\",\n        },\n        yaxis: {\n          title: {\n            text: props.yaxisText,\n          },\n        },\n        fill: {\n          opacity: 1,\n        },\n        tooltip: {\n          y: {\n            formatter: function (val: number) {\n              return val + \" \" + props.tooltipText;\n            },\n          },\n        },\n        grid: {\n          padding: {\n            left: 30, // or whatever value that works\n            right: 30, // or whatever value that works\n          },\n        },\n        noData: {\n          text: \"No data found\",\n          align: \"center\",\n          verticalAlign: \"middle\",\n        },\n      });\n    }\n    setLoading(false);\n  }, [loading, options, props]);\n\n  if (loading) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading Data...\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"w-full\">\n      <Chart\n        options={options}\n        series={props.series}\n        type=\"bar\"\n        width=\"100%\"\n        height={props.chartHeight ? props.chartHeight : undefined}\n      />\n    </div>\n  );\n};\n\nexport default VBarChart;\n","import React from \"react\";\nimport Table from \"../../components/Table/Table\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { PositionRequirementTableInterface } from \"./ViewPosition\";\n\ninterface RequirementProps {\n  requirements: PositionRequirementTableInterface[];\n}\n\nconst ViewRequirements: React.FC<RequirementProps> = (props) => {\n  const tableData = (): JSX.Element[] => {\n    let data: PositionRequirementTableInterface[] = props.requirements;\n    // let data: PositionSubcategoryData[] =\n    //   props.position_requirement.position_requirement;\n    if (data.length === 0) {\n      return [\n        <tr key={153} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={3}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    return data.map((item, index) => (\n      <tr\n        key={index + item.field_id}\n        className=\"border-b border-gray-200 hover:bg-gray-100\"\n      >\n        <td className=\"p-3 text-left whitespace-nowrap\">{index + 1}</td>\n        <td className=\"p-3 text-left\">\n          <span>{item.subcategory_title}</span>\n        </td>\n        <td className=\"p-3 text-left\">\n          <span>\n            {isEmptyOrSpaces(item.field_id) ? \"Any document\" : item.field_title}\n          </span>\n        </td>\n        <td className=\"p-3 text-left text-lg italic\">\n          {isEmptyOrSpaces(item.field_id) ? (\n            item.subcategory_required ? (\n              <span className=\"text-yellow-800\">Required</span>\n            ) : (\n              \"Optional\"\n            )\n          ) : item.required ? (\n            <span className=\"text-yellow-800\">Required</span>\n          ) : (\n            \"Optional\"\n          )}\n        </td>\n      </tr>\n    ));\n  };\n\n  return (\n    <div>\n      <Table\n        columns={[\n          { columnTitle: \"#\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Qualification\", alignText: \"left\", padding: \"p-3\" },\n          // {\n          //   columnTitle: \"Qualification Status\",\n          //   alignText: \"left\",\n          //   padding: \"p-3\",\n          // },\n          { columnTitle: \"Document\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Status\", alignText: \"left\", padding: \"p-3\" },\n          // { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n        ]}\n        rows={tableData}\n        pagination={false}\n        search={false}\n        thColor=\"gray\"\n      />\n    </div>\n  );\n};\n\nexport default ViewRequirements;\n","import React from \"react\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport { RiFileExcel2Fill } from \"react-icons/ri\";\n\ninterface ExportToExcelProps {\n  fileData: any[];\n  fileName: string;\n  btnName?: string;\n  className?: string;\n  showIcon?: boolean;\n}\n\nconst ExportToExcel: React.FC<ExportToExcelProps> = ({\n  fileData,\n  fileName,\n  btnName = \"Excel\",\n  className = \"flex items-center gap-1 px-4 py-1 rounded text-green-700 bg-white border hover:text-white hover:bg-green-700 border-green-700 font-bold\",\n  showIcon = true,\n}) => {\n  const fileType =\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n  const fileExtension = \".xlsx\";\n\n  const exportToCSV = (apiData: any[], fileName: string) => {\n    const ws = XLSX.utils.json_to_sheet(apiData);\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n    const data = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n\n  return (\n    <button\n      onClick={(e) => exportToCSV(fileData, fileName)}\n      className={className}\n    >\n      {showIcon && <RiFileExcel2Fill />}\n      {btnName}\n    </button>\n  );\n};\n\nexport default ExportToExcel;\n","export default __webpack_public_path__ + \"static/media/mineduc.11a9ae1c.png\";","import jsPDF from \"jspdf\";\nimport { DATE } from \"../../utils/functions\";\nimport Logo from \"../../utils/mineduc.png\";\nrequire(\"jspdf-autotable\");\n\nexport const addFooters = (doc: any) => {\n  const pageCount = doc.internal.getNumberOfPages();\n\n  doc.setFont(\"helvetica\", \"italic\");\n  doc.setFontSize(8);\n  for (var i = 1; i <= pageCount; i++) {\n    doc.setPage(i);\n    doc.text(\n      \"Page \" + String(i) + \" of \" + String(pageCount),\n      doc.internal.pageSize.width / 2,\n      297,\n      {\n        align: \"center\",\n      }\n    );\n  }\n};\n\nexport type reportSettingsInterface = {\n  doneBy: string;\n  title: string;\n  subjectTitle: string;\n  subject: string;\n  institute: string;\n  period: string;\n  footer: string;\n  orientation?: \"p\" | \"l\";\n};\n\nexport const generatePDF = async (\n  reportSettings: reportSettingsInterface,\n  table: HTMLElement,\n  callBack: (status: boolean) => void\n) => {\n  callBack(true);\n  const orientation: \"p\" | \"l\" = reportSettings.orientation\n    ? reportSettings.orientation\n    : \"p\";\n  var lMargin: number = 20; //left margin in mm\n  var rMargin: number = 20; //right margin in mm\n  var pdfInMM: number = 185; // width of A4 in mm\n\n  //   var doc = new jsPDF(\"p\", \"mm\", \"a4\");\n  var doc: any = new jsPDF(orientation, \"mm\", \"a4\");\n\n  doc.setTextColor(95, 95, 95);\n  doc.setFontSize(28);\n  // doc.text(\n  //   this.props.reportTitle,\n  //   doc.internal.pageSize.getWidth() / 2,\n  //   30,\n  //   undefined,\n  //   \"center\"\n  // );\n  doc.addImage(Logo, \"png\", 20, 20, 10, 10);\n  doc.text(\"MINEDUC\", 32, 28.5, undefined, \"left\");\n  //   doc.setTextColor(19, 90, 152);\n  doc.setFontSize(26);\n  doc.text(\n    reportSettings.title,\n    doc.internal.pageSize.getWidth() / 2,\n    42.7,\n    undefined,\n    \"center\"\n  );\n\n  doc.setFontSize(20);\n  doc.text(\n    reportSettings.institute,\n    doc.internal.pageSize.getWidth() / 2,\n    53.7,\n    undefined,\n    \"center\"\n  );\n\n  var lines;\n  lines = doc.splitTextToSize(\n    reportSettings.subject,\n    pdfInMM - lMargin - rMargin\n  );\n  // if (reportSettings.position) {\n  // } else if (reportSettings.subject) {\n  //   lines = doc.splitTextToSize(\n  //     reportSettings.subject,\n  //     pdfInMM - lMargin - rMargin\n  //   );\n  // }\n\n  //   doc.setTextColor(0, 123, 255);\n  doc.setFontSize(16);\n  //   doc.text(lines, doc.internal.pageSize.getWidth() / 2, 45, {\n  //     maxWidth: 85,\n  //     align: \"center\",\n  //   });\n\n  var y = 63,\n    width;\n  doc.setTextColor(95, 95, 95);\n  doc.text(`${reportSettings.subjectTitle}: `, lMargin, y);\n  width = doc.getTextWidth(`${reportSettings.subjectTitle}: `);\n  // if (reportSettings.position) {\n  // } else if (reportSettings.position) {\n  //   doc.text(`Subject: `, lMargin, y);\n  //   width = doc.getTextWidth(\"Subject: \");\n  // }\n  // doc.setFontType(\"bold\");\n  doc.setTextColor(38, 38, 38);\n  for (var i = 0; i < lines.length; i++) {\n    if (y > 280) {\n      y = 10;\n      doc.addPage();\n    }\n    // doc.text(15, y, lines[i]);\n    doc.text(lines[i], lMargin + width, y);\n    y = y + 7;\n  }\n  doc.setTextColor(95, 95, 95);\n  doc.text(\"Period: \", lMargin, y + 3);\n  width = doc.getTextWidth(\"Period: \");\n  doc.setTextColor(38, 38, 38);\n  doc.text(reportSettings.period, lMargin + width, y + 3);\n\n  doc.autoTable({\n    html: table,\n    startY: 85,\n    margin: { horizontal: 20 },\n    cellPadding: 3, // Horizontal cell padding\n    // fontSize: 12,\n    rowHeight: 20,\n    // styles: { overflow: \"linebreak\" },\n    bodyStyles: { valign: \"top\" },\n    columnStyles: { email: { cellWidth: \"wrap\" } },\n    theme: \"striped\",\n    tableWidth: true,\n  });\n\n  doc.setFontSize(12);\n  let finalY = doc.lastAutoTable.finalY; // The y position on the page\n  doc.text(`Reported by: ${reportSettings.doneBy}`, lMargin, finalY + 15);\n  doc.text(\n    \"Report downloaded on \" + DATE(new Date().toString()),\n    lMargin,\n    finalY + 23\n  );\n\n  addFooters(doc);\n  await doc\n    .save(\n      `${\n        reportSettings.title +\n        \": \" +\n        reportSettings.subject +\n        \": \" +\n        reportSettings.period\n      }.pdf`,\n      { returnPromise: true }\n    )\n    .then(callBack(false));\n};\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { ApplicationSession } from \"../../../actions\";\nimport {\n  course,\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimExamResultsDetails,\n} from \"../../../interfaces\";\nimport { StoreState } from \"../../../reducers\";\nimport { search } from \"../../../utils/functions\";\nimport { isClaimAllowed } from \"./ClaimForm\";\n\nconst getFailedExam = (\n  allData: ClaimExamResultsDetails[],\n  allCourses: course[]\n): ClaimExamResultsDetails[] => {\n  let result: ClaimExamResultsDetails[] = [];\n  allData.forEach((element) => {\n    if (element.total_marks < 100) {\n      let data = element;\n      data.course_name = getCourseById(allCourses, element.course)\n        ? getCourseById(allCourses, element.course)!.course_name\n        : \"Unknown exam\";\n      result.push(data);\n    }\n  });\n\n  return result;\n};\n\nexport const getCourseById = (courses: course[], course_id: string) => {\n  return courses.find((item) => item.course_id === course_id);\n};\n\nexport const getCourseIdBySheetId = (\n  allData: ClaimExamResultsDetails[],\n  sheet_id: string\n) => {\n  return allData.find((item) => item.answer_sheet_id === sheet_id);\n};\n\nexport const searchApplication = (\n  objList: claimApplicationsInterface[],\n  text: any\n): claimApplicationsInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (prop === \"position\") {\n        flag =\n          product.position.position_title\n            .toString()\n            .toLowerCase()\n            .indexOf(text.toLowerCase()) > -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n  // return objList.filter((product) =>\n  //   product.position.position_title.includes(text)\n  // );\n};\n\ntype FormExamListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  claimFileId: string;\n  viewThisFile: string;\n  candidateAnswers: ClaimExamResultsDetails[];\n  myClaims: CandidateClaimInterface[];\n  activeSession: ApplicationSession;\n\n  // REDUX //////////////////////\n  courses: course[] | null;\n};\n\nconst FormExamList: React.FC<FormExamListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            !props.courses ||\n            getFailedExam(props.candidateAnswers, props.courses).filter(\n              (item) =>\n                isClaimAllowed(\n                  props.myClaims,\n                  props.activeSession.session_plan_id,\n                  item.answer_sheet_id\n                )\n            ).length > 0\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Close\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}{\" \"}\n      {/* searchData(props.candidateAnswers, searchInput) */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {props.courses &&\n        getFailedExam(props.candidateAnswers, props.courses).filter((item) =>\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            item.answer_sheet_id\n          )\n        ).length > 0 ? (\n          search(\n            getFailedExam(props.candidateAnswers, props.courses).filter(\n              (item) =>\n                isClaimAllowed(\n                  props.myClaims,\n                  props.activeSession.session_plan_id,\n                  item.answer_sheet_id\n                )\n            ),\n            searchInput\n          ).map((item: ClaimExamResultsDetails, index: number) => (\n            <div\n              className={`group flex items-center justify-between my-1 hover:bg-gray-100 ${\n                props.claimFileId === item.answer_sheet_id &&\n                \"bg-blue-50 border-l-4 border-blue-500\"\n              }`}\n              key={index + item.answer_sheet_id}\n            >\n              <div\n                className=\"p-1 w-full mr-2 cursor-pointer\"\n                onClick={() => {\n                  props.setChooseClaimFile(false);\n                  props.setClaimFileId(item.answer_sheet_id);\n                }}\n              >\n                <p className=\"text-base font-medium text-black\">\n                  {item.course_name}\n                </p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                onClick={() => {\n                  props.setViewThisFile(item.answer_sheet_id);\n                }}\n              >\n                View\n              </button>\n            </div>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No failed exam available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  course,\n}: StoreState): {\n  courses: course[] | null;\n} => {\n  return {\n    courses: course.courses,\n  };\n};\nexport default connect(mapStateToProps, {})(FormExamList);\n","import axios from \"axios\";\nimport React from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdInfoOutline } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { createReClaim, DocumentClaimUser } from \"../../actions/claiming\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  claimReasonInterface,\n  ClaimStatus,\n} from \"../../interfaces\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { DocumentReducerInterface } from \"../../reducers/document\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { errorToText, showDate } from \"../../utils/functions\";\nimport { ClaimGetDocTitle } from \"./Candidate/ClaimForm\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nexport const isClaimEvaluated = (\n  thisClaim: CandidateClaimInterface,\n  level: number\n): boolean => {\n  const _thisClaim = thisClaim.claims.find(\n    (item) =>\n      item.level === level && item.claim_status === ClaimStatus.EVALUATED\n  );\n  if (_thisClaim) {\n    return true;\n  }\n  return false;\n};\n\ntype ClaimDocViewProps = {\n  thisDoc: DocumentClaimUser;\n  // setViewThisFile: (value: string) => void;\n  documentCategories: DocumentReducerInterface;\n  claimReasons: claimReasonInterface[] | null;\n  thisClaim: CandidateClaimInterface;\n  viewImage: boolean;\n  setViewImage: (value: boolean) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  reClaiming: boolean;\n  setReClaiming: (value: boolean) => void;\n  reClaimingMsg: string;\n  setReClaimingMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX DATA =====================\n  createReClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst ClaimDocView: React.FC<ClaimDocViewProps> = (props) => {\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim sent successful\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim._id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Title:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {ClaimGetDocTitle(props.documentCategories, props.thisDoc).main}\n              </span>\n            </div>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewImage(!props.viewImage)}\n            >\n              {props.viewImage ? \"Hide\" : \"View\"}\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisDoc.validation_status === \"rejected\"\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } rounded px-3 py-1`}\n            >\n              {capitalizeFirstLetter(props.thisDoc.validation_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {props.thisClaim.previous.evaluater.name}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisDoc.validated_by.comment}\n            </span>\n          </div>\n\n          {/* DISPLAY IMAGE ==================================================== */}\n          {props.viewImage && (\n            <div className=\"w-full my-1 animate__animated animate__fadeIn\">\n              <img\n                src={`${API.AUTH_FILES}/${props.thisDoc.files}`}\n                alt=\"doc file\"\n                className={`w-full animate__animated animate__fadeIn`}\n              />\n            </div>\n          )}\n          {/* END DISPLAY IMAGE ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt)}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-center justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <button\n                className=\"btn btn-blue\"\n                onClick={() => props.setReClaiming(true)}\n                disabled={props.loadingRequest}\n              >\n                Reclaim\n              </button>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your reclaim...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nexport default connect(null, {\n  createReClaim,\n  PushPopupAlert,\n})(ClaimDocView);\n","import React from \"react\";\nimport { MdTurnedIn } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../../actions\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  claimApplicationsInterface,\n  claimApplicationsPositionInterface,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { DATE } from \"../../../utils/functions\";\nimport { PositionRequirementTableInterface } from \"../../Positions/ViewPosition\";\nimport ViewRequirements from \"../../Positions/ViewRequirements\";\n\nexport const FC_ApplicationPositionDistinctCategory = (\n  thisPosition: claimApplicationsPositionInterface,\n  documentCategories: DocumentReducerInterface\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n  let requirements = thisPosition.requirements;\n  // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n  for (let req in requirements) {\n    let thisRequirements = requirements[req];\n    // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisCategory = documentCategories.documentCategory\n      ? documentCategories.documentCategory.find(\n          (item) =>\n            item.user_detail_category_id ===\n            thisRequirements.user_detail_category_id\n        ) && {\n          title: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.user_detail_category_id\n          )!.title,\n          user_detail_category_id: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.user_detail_category_id\n          )!.user_detail_category_id,\n        }\n      : {\n          title: \"\",\n          user_detail_category_id: thisRequirements.user_detail_category_id,\n        };\n    // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisSubCategory = documentCategories.documentSubCategory\n      ? documentCategories.documentSubCategory.find(\n          (item) =>\n            item.user_detail_subcategory_id ===\n            thisRequirements.user_detail_subcategory_id\n        )\n        ? {\n            title: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.user_detail_subcategory_id\n            )!.title,\n            user_detail_subcategory_id:\n              documentCategories.documentSubCategory.find(\n                (item) =>\n                  item.user_detail_subcategory_id ===\n                  thisRequirements.user_detail_subcategory_id\n              )!.user_detail_subcategory_id,\n            category_id: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.user_detail_subcategory_id\n            )!.category_id,\n          }\n        : {\n            title: \"\",\n            user_detail_subcategory_id:\n              thisRequirements.user_detail_subcategory_id,\n            category_id: \"\",\n          }\n      : {\n          title: \"\",\n          user_detail_subcategory_id:\n            thisRequirements.user_detail_subcategory_id,\n          category_id: \"\",\n        };\n    // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n    if (thisCategory) {\n      for (let field in thisRequirements.position_requirement) {\n        // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n        let thisField = documentCategories.documentFields\n          ? documentCategories.documentFields.find(\n              (item) =>\n                item._id ===\n                thisRequirements.position_requirement[field]\n                  .category_subcategory_data_id\n            )\n            ? {\n                title: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]\n                      .category_subcategory_data_id\n                )!.title,\n                _id: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]\n                      .category_subcategory_data_id\n                )!._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n            : {\n                title: \"\",\n                _id: thisRequirements.user_detail_subcategory_id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n          : {\n              title: \"\",\n              _id: thisRequirements.user_detail_subcategory_id,\n              required: thisRequirements.position_requirement[field].required,\n            };\n        // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n        PositionsTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: thisField.title,\n          field_id: thisField._id,\n          required: thisField.required,\n        });\n      }\n\n      // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n      ) {\n        DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n        DistinctCategoriesTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: \"\",\n          subcategory_title: \"\",\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n\n      // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctSubCategoriesIds.includes(\n          thisSubCategory.user_detail_subcategory_id\n        )\n      ) {\n        DistinctSubCategoriesIds.push(\n          thisSubCategory.user_detail_subcategory_id\n        );\n        DistinctSubCategoriesTemp.push({\n          category_id: thisSubCategory.category_id,\n          category_title: \"\",\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n    }\n  }\n  // DistinctCategoriesIds.;\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\nexport const showEvaluator = (\n  userList: UserInterface[],\n  user_id: string\n): string => {\n  let result: string = \"\";\n  if (user_id === \"system\") {\n    result = \"System\";\n  } else {\n    // let user = getUserDocuments(userList, user_id);\n    // let user = undefined;\n    // if (user) {\n    //   result = user.user.user_info.fname + \" \" + user.user.user_info.lname;\n    // }\n  }\n  return result;\n};\n\ntype ApplicationFormViewProps = {\n  thisApplication: claimApplicationsInterface;\n  setViewThisFile: (value: string) => void;\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  documentCategories: DocumentReducerInterface;\n  PushPopupAlert: Function;\n};\n\nconst ApplicationFormView: React.FC<ApplicationFormViewProps> = (props) => {\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          {/* APPLICATION TITLE ========== */}\n          <section className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              {props.thisApplication.position.position_title}\n            </span>\n            <button\n              type=\"button\"\n              className=\"btn btn-blue\"\n              onClick={() => {\n                props.setChooseClaimFile(false);\n                props.setClaimFileId(props.thisApplication.application_id);\n                props.setViewThisFile(\"\");\n              }}\n            >\n              Choose\n            </button>\n          </section>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisApplication.createdAt)}\n            </span>\n          </div>\n          {false && (\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Session:</span>\n              <span className=\"font-bold text-gray-900 py-1\">\n                {\n                  props.thisApplication.application_session\n                    .application_session_name\n                }\n              </span>\n            </div>\n          )}\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisApplication.application_status ===\n                ApplicationStates.Rejected\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } py-1`}\n            >\n              {capitalizeFirstLetter(props.thisApplication.application_status)}\n            </span>\n          </div>\n          {/* <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {props.thisApplication.}\n            </span>\n          </div> */}\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span\n              className=\"font-semibold text-gray-900\"\n              dangerouslySetInnerHTML={{\n                __html: props.thisApplication.override_by.comment,\n              }}\n            ></span>\n          </div>\n        </div>\n        <div className=\"bg-white w-full rounded p-2 mb-2\">\n          <div className=\"text-gray-800 text-2xl font-bold my-2\">\n            Position Details\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Desc:</span>\n            <span className=\"font-semibold\">\n              {props.thisApplication.position.description}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>School level:</span>\n            <span className=\"font-semibold\">\n              {props.thisApplication.position.school_level_id.school_level_name}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Institute:</span>\n            <span className=\"font-semibold\">\n              {\n                props.thisApplication.position.education_institute_id\n                  .education_category_title\n              }\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Courses:</span>\n            <span className=\"flex items-center gap-2\">\n              {props.thisApplication.position.courses.map((item, index) => (\n                <div\n                  key={index + item.course_id}\n                  className=\"flex items-center gap-1\"\n                >\n                  <span className=\"font-semibold\">{item.course_name}</span>\n                  <span className=\"text-gray-600\">({item.course_code})</span>\n                  {index !==\n                    props.thisApplication.position.courses.length - 1 && \",\"}\n                </div>\n              ))}\n            </span>\n          </div>\n\n          <div className=\"text-gray-800 text-2xl font-bold my-2\">\n            Position Requirements\n          </div>\n          {props.thisApplication.position.requirements.length > 0 ? (\n            FC_ApplicationPositionDistinctCategory(\n              props.thisApplication.position,\n              props.documentCategories\n            ).DistinctCategoriesTemp.map((item, index) => (\n              <div\n                className=\"bg-gray-100props.thisApplication.position rounded p-2\"\n                key={index + item.category_id}\n              >\n                <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                  <MdTurnedIn />\n                  <span>{item.category_title}</span>\n                </div>\n                <div className=\"border bg-white mt-1\">\n                  <ViewRequirements\n                    requirements={FC_ApplicationPositionDistinctCategory(\n                      props.thisApplication.position,\n                      props.documentCategories\n                    ).PositionsTemp.filter(\n                      (req) => req.category_id === item.category_id\n                    )}\n                  />\n                </div>\n              </div>\n            ))\n          ) : (\n            <NoResult\n              theme={NoResultThemes.Dark}\n              value={\"No requirements\"}\n            ></NoResult>\n          )}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default connect(null, { PushPopupAlert })(ApplicationFormView);\n","import React, { Component } from \"react\";\nimport FindAnswer from \"../../containers/DoExam/DoExamTitle/FindAnswer\";\nimport { ExamAnswerSheetDone } from \"../../interfaces/exam\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  CandidateApplicationsStoreInterface,\n  candidateExamStoreInterface,\n  FC_GetProfileDetails,\n  LoadCandidateApplications,\n  setSelectedCandidateExam,\n  setSelectedCourse,\n  setSelectedPosition,\n  InitializeExamDetails,\n  loadExamsDone,\n  AddUserApplication,\n  loadApplicationPeriods,\n  requestUserAnswers,\n  loadQuestionTypes,\n  questionTypesStoreInterface,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { DATE } from \"../../utils/functions\";\nimport { AiOutlineFileText } from \"react-icons/ai\";\nimport { ExamDoneDetailsAnswers } from \"../../containers/CandidateExams/CandidateExams\";\nimport Loading from \"../Loading/Loading\";\n\ninterface AnswersDetailsProps {\n  exam_id: ExamDoneDetailsAnswers;\n  showAnswers: boolean;\n  allAnswers?: ExamAnswerSheetDone[];\n  user_id?: string;\n  questionTypes: questionTypesStoreInterface;\n  requestUserAnswers: (\n    exam_id: string,\n    user_id: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  FC_GetProfileDetails: Function;\n  auth: Auth;\n  candidateExam: candidateExamStoreInterface;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  loadExamsDone: (\n    periodId: string,\n    userId: string,\n    callback: (loading: boolean) => void\n  ) => void;\n}\ninterface AnswersDetailsState {\n  loading: boolean;\n  loadingStatus: boolean;\n}\n\nexport class _AnswersDetails extends Component<\n  AnswersDetailsProps,\n  AnswersDetailsState\n> {\n  constructor(props: AnswersDetailsProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      loadingStatus: false,\n    };\n  }\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  };\n  setLoadingStatus = (status: boolean) => {\n    this.setState({ loadingStatus: status });\n  };\n  componentDidMount = () => {\n    if (\n      this.props.questionTypes.questionTypes === null ||\n      this.props.questionTypes.questionTypes.length === 0\n    ) {\n      this.props.loadQuestionTypes(this.setLoading);\n    }\n    if (this.props.exam_id) {\n      let check = this.props.candidateExam.user_exams_done.find(\n        (itm) =>\n          itm.course === this.props.exam_id.course &&\n          itm.period === this.props.exam_id.period &&\n          DATE(itm.exam_date) === DATE(this.props.exam_id.exam_date)\n      );\n      // Check if user exams loaded\n      if (\n        (this.props.candidateExam.user_exams_done.length === 0 ||\n          check === undefined) &&\n        this.props.allAnswers === undefined\n      ) {\n        this.props.loadExamsDone(\n          this.props.exam_id.period,\n          this.props.auth.user.user_id,\n          this.setLoadingStatus\n        );\n      }\n      if (check !== undefined) {\n        if (\n          this.props.candidateExam.user_exams_done.find(\n            (item) => item.exam_paper === check?.exam_paper\n          ) === undefined\n        ) {\n          this.props.requestUserAnswers(\n            check.exam_paper,\n            this.props.user_id === undefined\n              ? this.props.auth.user.user_id\n              : this.props.user_id,\n            this.setLoading\n          );\n        }\n      }\n    }\n  };\n  userAnswersTotalMarks = (user_answers: ExamAnswerSheetDone) => {\n    let total: number = 0;\n    for (let item of user_answers.user_answers) {\n      total += item.user_marks;\n    }\n    return total;\n  };\n  render() {\n    let user_exam_details: ExamAnswerSheetDone | undefined =\n      this.props.allAnswers === undefined\n        ? this.props.candidateExam.user_exams_done.find(\n            (itm) =>\n              itm.course === this.props.exam_id.course &&\n              itm.period === this.props.exam_id.period &&\n              DATE(itm.exam_date) === DATE(this.props.exam_id.exam_date)\n          )\n        : this.props.allAnswers.find(\n            (itm) =>\n              itm.course === this.props.exam_id.course &&\n              itm.period === this.props.exam_id.period &&\n              DATE(itm.exam_date) === DATE(this.props.exam_id.exam_date)\n          );\n    if (this.state.loading === true || this.state.loadingStatus === true) {\n      return (\n        <div className=\"my-6 rounded bg-white p-3\">\n          <Loading />\n        </div>\n      );\n    }\n    if (user_exam_details === undefined) {\n      return (\n        <div className=\"my-6 rounded bg-white p-3\">\n          <span className=\"text-4xl font-bold\">Exam details not found!</span>\n        </div>\n      );\n    }\n    return (\n      <div className=\"p-2 bg-gray-100\">\n        <div className=\"mb-5 -mt-5\">\n          {user_exam_details !== undefined && (\n            <div className=\"mt-5\">\n              <div className=\"px-3 mb-2 flex flex-row items-center gap-3\">\n                <div>\n                  <AiOutlineFileText className=\"text-5xl text-gray-500\" />\n                </div>\n                <div\n                  className=\"text-2xl font-extrabold\"\n                  dangerouslySetInnerHTML={{\n                    __html: \"Exam for \" + this.props.exam_id.course_name,\n                  }}\n                ></div>\n              </div>\n              <div className=\" p-3 bg-white rounded-t mb-0 border-b\">\n                <div className=\"text-sm text-gray-500 font-bold\">\n                  Exam date:\n                </div>\n                <div\n                  className=\"text-base font-bold\"\n                  dangerouslySetInnerHTML={{\n                    __html: DATE(this.props.exam_id.exam_date),\n                  }}\n                ></div>\n              </div>\n              <div className=\" p-3 bg-white mb-0 border-b\">\n                <div className=\"text-sm text-gray-500 font-bold\">\n                  Exam description:\n                </div>\n                <div\n                  className=\"text-base font-bold\"\n                  dangerouslySetInnerHTML={{\n                    __html: this.props.exam_id.discription,\n                  }}\n                ></div>\n              </div>\n              <div className=\" p-3 bg-white rounded-b mb-0\">\n                <div className=\"text-sm text-gray-500 font-bold\">\n                  Exam terms and conditions:\n                </div>\n                <div\n                  className=\"text-base font-bold\"\n                  dangerouslySetInnerHTML={{\n                    __html: this.props.exam_id.termes,\n                  }}\n                ></div>\n              </div>\n            </div>\n          )}\n        </div>\n        <div className=\"text-2xl font-extrabold text-blue-600 px-2 mb-3\">\n          Exam answers & marks\n        </div>\n        {user_exam_details === undefined\n          ? \"Not Found\"\n          : user_exam_details.user_answers.map((item, i) => (\n              <div\n                key={i + 1}\n                className=\"bg-white hover:bg-white border border-white hover:border-blue-400 px-2 py-2 rounded  animate__animated animate__fadeIn animate__fast group mb-2\"\n              >\n                <div className=\"grid md:grid-cols-11 w-full\">\n                  <div className=\"col-span-12 flex flex-row items-center gap-3\">\n                    <div\n                      key={i + 1}\n                      className=\"w-6 h-6 p-2 rounded-full bg-gray-600 flex justify-center items-center font-bold text-lg text-white cursor-pointer\"\n                    >\n                      {i + 1}\n                    </div>\n                    {user_exam_details &&\n                      user_exam_details.questions.find(\n                        (itm) => itm.question_id === item.question\n                      ) !== undefined && (\n                        <div className=\"text-sm w-full\">\n                          <div\n                            className=\"font-bold text-gray-700 text-base\"\n                            dangerouslySetInnerHTML={{\n                              __html: user_exam_details.questions\n                                .find(\n                                  (itm) => itm.question_id === item.question\n                                )!\n                                .question.find(\n                                  (test) => test.language === item.language\n                                )!.description,\n                            }}\n                          ></div>\n                          <div className=\"text-blue-700 font-bold text-sm w-full\">\n                            Answer:&nbsp;{\" \"}\n                            {this.props.questionTypes.questionTypes !== null &&\n                              user_exam_details.user_answers.find(\n                                (itm) => itm.question === item.question\n                              ) && (\n                                <div className=\"mb-2\">\n                                  <FindAnswer\n                                    selectedLanguage={item.language}\n                                    question={{\n                                      is_deleted:\n                                        user_exam_details.questions.find(\n                                          (itm) =>\n                                            itm.question_id === item.question\n                                        )!.is_deleted,\n                                      question_id: item.question,\n                                      course: user_exam_details.questions.find(\n                                        (itm) =>\n                                          itm.question_id === item.question\n                                      )!.course,\n                                      question:\n                                        user_exam_details.questions.find(\n                                          (itm) =>\n                                            itm.question_id === item.question\n                                        )!.question,\n                                      type: user_exam_details.questions.find(\n                                        (itm) =>\n                                          itm.question_id === item.question\n                                      )!.type,\n                                      chapters:\n                                        user_exam_details.questions.find(\n                                          (itm) =>\n                                            itm.question_id === item.question\n                                        )!.chapters,\n                                      customNumber:\n                                        user_exam_details.questions.find(\n                                          (itm) =>\n                                            itm.question_id === item.question\n                                        )!.customNumber,\n                                      marks: user_exam_details.questions.find(\n                                        (itm) =>\n                                          itm.question_id === item.question\n                                      )!.marks,\n                                      answers: user_exam_details.questions.find(\n                                        (itm) =>\n                                          itm.question_id === item.question\n                                      )!.answers,\n                                    }}\n                                    answersList={[\n                                      {\n                                        question_id: item.question,\n                                        status: true,\n                                        answers:\n                                          user_exam_details.user_answers.find(\n                                            (itm) =>\n                                              itm.question === item.question\n                                          )!.answers,\n                                      },\n                                    ]}\n                                    questionTypes={\n                                      this.props.questionTypes.questionTypes\n                                    }\n                                    showCorrectAnswer={this.props.showAnswers}\n                                    onClick={() => {}}\n                                  />\n                                </div>\n                              )}\n                          </div>\n                        </div>\n                      )}\n                  </div>\n                </div>\n                <div className=\"col-span-1 flex items-center justify-between\">\n                  <div></div>\n\n                  <div className=\"w-max flex flex-col items-end justify-center bg-blue-50 rounded-md px-3 py-1 group-hover:bg-blue-100\">\n                    <div className=\"text-sm font-semibold text-gray-700\">\n                      Marks\n                    </div>\n                    <div className=\"text-sm font-extrabold text-gray-900 -mt-1\">\n                      <span className=\"text-blue-500\">\n                        {item.user_marks.toFixed(2)}\n                      </span>{\" \"}\n                      /{\" \"}\n                      {user_exam_details &&\n                        user_exam_details.questions.find(\n                          (itm) => itm.question_id === item.question\n                        )?.marks}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n        <div className=\"flex flex-row items-center justify-between gap-3 mb-10\">\n          <div className=\"bg-blue-100 p-3 pr-3 text-blue-700 flex flex-col items-start justify-center rounded-lg border-2 border-white\">\n            <span className=\"text-gray-700\">Total marks percentage</span>\n            <span className=\"text-3xl font-extrabold\">\n              {user_exam_details && user_exam_details.total_marks.toFixed(2)}%\n            </span>\n          </div>\n          <div>\n            <div className=\"bg-white rounded-lg p-3\">\n              <div className=\"text-gray-500 font-bold text-base text-right\">\n                Exam total marks\n              </div>\n              {user_exam_details !== undefined && (\n                <div className=\"font-extrabold text-3xl text-gray-900 text-right\">\n                  {this.userAnswersTotalMarks(user_exam_details).toFixed(2)} /{\" \"}\n                  {user_exam_details.exam_total_marks}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  candidateExam,\n  candidateApplications,\n  questionTypes,\n}: StoreState): {\n  auth: Auth;\n  candidateExam: candidateExamStoreInterface;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  questionTypes: questionTypesStoreInterface;\n} => {\n  return {\n    auth: auth,\n    candidateExam: candidateExam,\n    candidateApplications: candidateApplications,\n    questionTypes: questionTypes,\n  };\n};\n\nexport const AnswersDetails = connect(mapStateToProps, {\n  FC_GetProfileDetails,\n  LoadCandidateApplications,\n  setSelectedCandidateExam,\n  setSelectedCourse,\n  setSelectedPosition,\n  InitializeExamDetails,\n  loadExamsDone,\n  AddUserApplication,\n  loadApplicationPeriods,\n  requestUserAnswers,\n  loadQuestionTypes,\n})(_AnswersDetails);\n","import React from \"react\";\nimport { AnswersDetails } from \"../../../components/AnswersDetails/AnswersDetails\";\nimport {\n  claimApplicationsPositionInterface,\n  ClaimExamResultsDetails,\n} from \"../../../interfaces\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { DATE } from \"../../../utils/functions\";\nimport { ExamDoneDetailsAnswers } from \"../../CandidateExams/CandidateExams\";\nimport { PositionRequirementTableInterface } from \"../../Positions/ViewPosition\";\n\nexport const FC_ApplicationPositionDistinctCategory = (\n  thisPosition: claimApplicationsPositionInterface,\n  documentCategories: DocumentReducerInterface\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n  let requirements = thisPosition.requirements;\n  // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n  for (let req in requirements) {\n    let thisRequirements = requirements[req];\n    // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisCategory = documentCategories.documentCategory\n      ? documentCategories.documentCategory.find(\n          (item) =>\n            item.user_detail_category_id ===\n            thisRequirements.user_detail_category_id\n        ) && {\n          title: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.user_detail_category_id\n          )!.title,\n          user_detail_category_id: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.user_detail_category_id\n          )!.user_detail_category_id,\n        }\n      : {\n          title: \"\",\n          user_detail_category_id: thisRequirements.user_detail_category_id,\n        };\n    // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisSubCategory = documentCategories.documentSubCategory\n      ? documentCategories.documentSubCategory.find(\n          (item) =>\n            item.user_detail_subcategory_id ===\n            thisRequirements.user_detail_subcategory_id\n        )\n        ? {\n            title: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.user_detail_subcategory_id\n            )!.title,\n            user_detail_subcategory_id:\n              documentCategories.documentSubCategory.find(\n                (item) =>\n                  item.user_detail_subcategory_id ===\n                  thisRequirements.user_detail_subcategory_id\n              )!.user_detail_subcategory_id,\n            category_id: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.user_detail_subcategory_id\n            )!.category_id,\n          }\n        : {\n            title: \"\",\n            user_detail_subcategory_id:\n              thisRequirements.user_detail_subcategory_id,\n            category_id: \"\",\n          }\n      : {\n          title: \"\",\n          user_detail_subcategory_id:\n            thisRequirements.user_detail_subcategory_id,\n          category_id: \"\",\n        };\n    // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n    if (thisCategory) {\n      for (let field in thisRequirements.position_requirement) {\n        // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n        let thisField = documentCategories.documentFields\n          ? documentCategories.documentFields.find(\n              (item) =>\n                item._id ===\n                thisRequirements.position_requirement[field]\n                  .category_subcategory_data_id\n            )\n            ? {\n                title: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]\n                      .category_subcategory_data_id\n                )!.title,\n                _id: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]\n                      .category_subcategory_data_id\n                )!._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n            : {\n                title: \"\",\n                _id: thisRequirements.user_detail_subcategory_id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n          : {\n              title: \"\",\n              _id: thisRequirements.user_detail_subcategory_id,\n              required: thisRequirements.position_requirement[field].required,\n            };\n        // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n        PositionsTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: thisField.title,\n          field_id: thisField._id,\n          required: thisField.required,\n        });\n      }\n\n      // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n      ) {\n        DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n        DistinctCategoriesTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: \"\",\n          subcategory_title: \"\",\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n\n      // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctSubCategoriesIds.includes(\n          thisSubCategory.user_detail_subcategory_id\n        )\n      ) {\n        DistinctSubCategoriesIds.push(\n          thisSubCategory.user_detail_subcategory_id\n        );\n        DistinctSubCategoriesTemp.push({\n          category_id: thisSubCategory.category_id,\n          category_title: \"\",\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n    }\n  }\n  // DistinctCategoriesIds.;\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\nexport const showEvaluator = (\n  userList: UserInterface[],\n  user_id: string\n): string => {\n  let result: string = \"\";\n  if (user_id === \"system\") {\n    result = \"System\";\n  } else {\n    // let user = getUserDocuments(userList, user_id);\n    // let user = undefined;\n    // if (user) {\n    //   result = user.user.user_info.fname + \" \" + user.user.user_info.lname;\n    // }\n  }\n  return result;\n};\n\nexport const claimShowAnswer = (\n  answer: ClaimExamResultsDetails,\n  course_name: string\n): ExamDoneDetailsAnswers => {\n  const result: ExamDoneDetailsAnswers = {\n    course: answer.course,\n    course_name: course_name,\n    discription: answer.discription,\n    termes: answer.termes,\n    rules: {\n      right_click_enabled: false,\n      copy_enabled: false,\n      paste_enabled: false,\n      stop_candidate_when_comeback: false,\n      allow_to_leave_browser: false,\n    },\n    period: answer.period,\n    exam_date: answer.exam_date,\n  };\n  return result;\n};\n\ntype ExaminationFormViewProps = {\n  thisAnswerSheet: ClaimExamResultsDetails;\n  setViewThisFile: (value: string) => void;\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n};\n\nconst ExaminationFormView: React.FC<ExaminationFormViewProps> = (props) => {\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          {/* APPLICATION TITLE ========== */}\n          <section className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              {props.thisAnswerSheet.course_name}\n            </span>\n            <button\n              type=\"button\"\n              className=\"btn btn-blue\"\n              onClick={() => {\n                props.setChooseClaimFile(false);\n                props.setClaimFileId(props.thisAnswerSheet.answer_sheet_id);\n                props.setViewThisFile(\"\");\n              }}\n            >\n              Choose\n            </button>\n          </section>\n\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisAnswerSheet.createdAt)}\n            </span>\n          </div>\n        </div>\n        {/* QUESTIONS ----------------------------- */}\n        <AnswersDetails\n          showAnswers={false}\n          exam_id={claimShowAnswer(\n            props.thisAnswerSheet,\n            props.thisAnswerSheet.course_name\n          )}\n        />\n        {/* END QUESTIONS ----------------------------- */}\n      </div>\n    </section>\n  );\n};\n\nexport default ExaminationFormView;\n","import moment from \"moment\";\nimport React from \"react\";\nimport {\n  compareWithToday,\n  ExamDoneDetailsAnswers,\n} from \"../../containers/CandidateExams/CandidateExams\";\nimport { TimeZone } from \"../../utils/app.config\";\nimport { DATE } from \"../../utils/functions\";\nimport { AnswersDetails } from \"./AnswersDetails\";\n\ninterface CandidateAnswersDetailsProps {\n  exam_id: ExamDoneDetailsAnswers;\n  showAnswers: boolean;\n}\n\nconst CandidateAnswersDetails = (props: CandidateAnswersDetailsProps) => {\n  const today = moment().tz(TimeZone);\n  let tomorrow = new Date();\n  tomorrow.setDate(today.date() + 1);\n  return (\n    <div>\n      {/* Check if period is open for claims */}\n      {compareWithToday(today, props.exam_id.exam_date) === false ? (\n        <div className=\"bg-yellow-100 text-yellow-800 font-extrabold text-center flex flex-col items-center justify-center text-lg px-2 py-6\">\n          <div className=\"mb-5 text-3xl\">\n            Please wait, the exam details will be visible soon!\n          </div>\n          <div className=\"text-gray-600\">Exam details will be visible from</div>\n          <div className=\"bg-white rounded-full px-3 py-1 text-gray-700\">\n            {DATE(tomorrow.toString())}\n          </div>\n        </div>\n      ) : (\n        <AnswersDetails\n          exam_id={props.exam_id}\n          showAnswers={props.showAnswers}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default CandidateAnswersDetails;\n","import React, { useState } from \"react\";\nimport {\n  MdCheckCircle,\n  MdRadioButtonUnchecked,\n  MdSearch,\n} from \"react-icons/md\";\nimport Loading from \"../../components/Loading/Loading\";\nimport {\n  PlansInterface,\n  SessionPlanInterface,\n  SessionPlanTypeStatus,\n} from \"../../interfaces\";\nimport { DATE } from \"../../utils/functions\";\nimport searchData from \"../../utils/search\";\n\nexport const isPlansActive = (plans: PlansInterface[]): PlansInterface[] => {\n  let today = new Date();\n  let activePlans: PlansInterface[] = [];\n  for (let plan of plans) {\n    let startDate = new Date(plan.start_date);\n    let endDate = new Date(plan.end_date);\n    if (\n      startDate.getTime() <= today.getTime() &&\n      endDate.getTime() >= today.getTime() &&\n      plan.type_status === SessionPlanTypeStatus.OPEN\n    ) {\n      activePlans = [...activePlans, plan];\n    }\n  }\n  return activePlans;\n};\n\ninterface ChooseSessionProps {\n  allSession: SessionPlanInterface[] | null;\n  setSelectSession: (period: SessionPlanInterface | \"all\") => void;\n  currentSelected: SessionPlanInterface | \"all\";\n  chooseAll: boolean;\n}\n\nconst ChooseSession = (props: ChooseSessionProps) => {\n  const [selectedPlan, setSelectedPlan] = useState<SessionPlanInterface | null>(\n    null\n  );\n  const [search, setSearch] = useState<string>(\"\");\n  const getSearch = (\n    period: SessionPlanInterface[],\n    searched: string\n  ): SessionPlanInterface[] => {\n    return searchData(period, searched) as SessionPlanInterface[];\n  };\n\n  return (\n    <div className=\"\">\n      <div className=\"px-3\">\n        <input\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n            setSearch(e.target.value)\n          }\n          type=\"text\"\n          className=\"py-3 px-4 w-full rounded border border-gray-400 mb-3\"\n          placeholder=\"Search by year, name\"\n          disabled={props.allSession === null || props.allSession.length === 0}\n        />\n      </div>\n\n      <div className=\"bg-gray-100 px-3 pt-3 pb-2 rounded-b\">\n        {props.allSession === null ? (\n          <Loading />\n        ) : props.allSession.length === 0 ? (\n          <div className=\"flex flex-col text-gray-400 items-center justify-center mb-2 bg-white py-4\">\n            <MdSearch className=\"text-6xl\" />\n            <div className=\"flex flex-col items-center justify-center\">\n              <span>No session found!</span>\n            </div>\n          </div>\n        ) : (\n          <section>\n            {props.chooseAll && (\n              <div\n                className={`rounded border ${\n                  props.currentSelected === \"all\"\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2 flex flex-col md:flex-row items-start md:items-center md:justify-between`}\n              >\n                <div className=\"flex flex-row items-center gap-3\">\n                  {props.currentSelected === \"all\" ? (\n                    <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                  ) : (\n                    <MdRadioButtonUnchecked\n                      className={`text-gray-300 text-4xl`}\n                    />\n                  )}\n                  <div className=\"flex flex-col\">\n                    <div className={`text-gray-600 font-bold`}>All session</div>\n                  </div>\n                </div>\n                <div\n                  onClick={() => {\n                    props.setSelectSession(\"all\");\n                  }}\n                  className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                >\n                  Select\n                </div>\n              </div>\n            )}\n            {getSearch(props.allSession, search).map((item, i) => (\n              <div\n                key={i + 1}\n                className={`rounded border ${\n                  props.currentSelected !== \"all\" &&\n                  props.currentSelected.session_plan_id === item.session_plan_id\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2`}\n              >\n                <div className=\"flex flex-col md:flex-row items-start md:items-center md:justify-between \">\n                  <div className=\"flex flex-row items-center gap-3\">\n                    {props.currentSelected !== \"all\" &&\n                    props.currentSelected.session_plan_id ===\n                      item.session_plan_id ? (\n                      <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                    ) : (\n                      <MdRadioButtonUnchecked\n                        className={`text-gray-300 text-4xl`}\n                      />\n                    )}\n                    <div className=\"flex flex-col\">\n                      <div\n                        className={`${\n                          props.currentSelected !== \"all\" &&\n                          props.currentSelected.session_plan_id ===\n                            item.session_plan_id\n                            ? \"text-blue-600\"\n                            : \"text-gray-600\"\n                        } font-bold`}\n                      >\n                        {item.session_plan_name}\n                      </div>\n                      <div className=\"text-sm text-gray-500\">\n                        <span>Status: </span>\n                        <span\n                          className={`${\n                            item.is_active === true\n                              ? \"text-gray-900 font-bold underline\"\n                              : \"text-gray-500 italic\"\n                          }`}\n                        >\n                          {item.is_active === true ? \"Active\" : \"Expired\"}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"flex flex-row items-center gap-2\">\n                    {(selectedPlan === null ||\n                      selectedPlan.session_plan_id !==\n                        item.session_plan_id) && (\n                      <div\n                        onClick={() => setSelectedPlan(item)}\n                        className=\"bg-gray-50 group-hover:bg-blue-100 font-semibold text-gray-400 group-hover:text-blue-600 rounded px-3 py-2 cursor-pointer\"\n                      >\n                        Details\n                      </div>\n                    )}\n                    <div\n                      onClick={() => {\n                        props.setSelectSession(item);\n                      }}\n                      className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                    >\n                      Select\n                    </div>\n                    {selectedPlan !== null &&\n                      selectedPlan.session_plan_id === item.session_plan_id && (\n                        <div\n                          onClick={() => setSelectedPlan(null)}\n                          className=\"bg-red-100 group-hover:bg-red-200 font-semibold text-red-600 group-hover:text-red-800 rounded px-3 py-2 cursor-pointer\"\n                        >\n                          Close\n                        </div>\n                      )}\n                  </div>\n                </div>\n                {selectedPlan !== null &&\n                  selectedPlan.session_plan_id === item.session_plan_id && (\n                    <div className=\"bg-white rounded border border-blue-50 mt-2 animate__animated animate__fadeIn\">\n                      <table className=\"w-full\">\n                        <thead className=\"bg-blue-50\">\n                          <tr className=\"text-left\">\n                            <th className=\"px-3 py-3\">#</th>\n                            <th>Plan</th>\n                            <th>Start date</th>\n                            <th>Ending date</th>\n                            <th>Status</th>\n                          </tr>\n                        </thead>\n                        <tbody className=\"text-sm\">\n                          {selectedPlan !== null &&\n                            selectedPlan.session_plan_id ===\n                              item.session_plan_id &&\n                            selectedPlan.plans.length > 0 &&\n                            item.plans.map((plan, i) => (\n                              <tr\n                                key={i + 1}\n                                className={`${\n                                  isPlansActive(item.plans).find(\n                                    (itm) => itm.type_key === plan.type_key\n                                  ) !== undefined\n                                    ? \"bg-blue-100 text-blue-600 font-bold\"\n                                    : \"\"\n                                } text-left border-b border-blue-50`}\n                              >\n                                <td className=\"px-3 py-1\">{i + 1}</td>\n                                <td>{plan.type_title}</td>\n                                <td>{DATE(plan.start_date, \"DD/MM/YYYY\")}</td>\n                                <td>{DATE(plan.end_date, \"DD/MM/YYYY\")}</td>\n                                <td>{plan.type_status}</td>\n                              </tr>\n                            ))}\n                        </tbody>\n                      </table>\n                    </div>\n                  )}\n              </div>\n            ))}\n          </section>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ChooseSession;\n","import React from \"react\";\nimport {\n  BsCheckSquareFill,\n  BsCheckCircleFill,\n  BsArrowRightSquareFill,\n  BsArrowRightCircleFill,\n} from \"react-icons/bs\";\nimport { QuestionAnswersStore } from \"../../../actions\";\nimport {\n  CalculatedMultipleChoiceQuestionAnswerInterface,\n  MatchingQuestionAnswerInterface,\n  MultipleChoiceQuestionAnswerInterface,\n  QuestionInterface,\n  questionType,\n  TrueFalseQuestionAnswerInterface,\n  NumericalQuestionAnswerInterface,\n  ShortAnswerQuestionAnswerInterface,\n  SimpleCalculatedQuestionAnswerInterface,\n  QuestionLanguage,\n  LanguageInterface,\n  EssayQuestionAnswerInterface,\n  QuestionAnswerInterface,\n  QuestionAnswerFormat,\n} from \"../../../interfaces\";\nimport {\n  toCalculatedMultipleChoice,\n  toEssay,\n  toMatching,\n  toMultipleChoice,\n  toNumerical,\n  toShortAnswer,\n  toSimpleCalculated,\n  toTrueFalse,\n} from \"../QuestionDetails/ConvertingAnswers\";\nimport { findQuestionType } from \"../utils/utils\";\nimport {\n  QuestionForHybrid,\n  questionTypeElementsType,\n} from \"@mastrecruit/common\";\nimport { findQType } from \"./FindAnswerHybrid\";\n\ninterface FindAnswerProps {\n  question: QuestionInterface;\n  answersList: QuestionAnswersStore[];\n  selectedLanguage: QuestionLanguage | LanguageInterface;\n  questionTypes: questionType[];\n  showCorrectAnswer: boolean;\n  subQuestionType?: questionTypeElementsType;\n  reference?: number;\n  onClick: () => void;\n}\n\nconst resultDiv = (\n  user_answers: QuestionAnswerFormat[],\n  question_answers: QuestionAnswerFormat[],\n  props: FindAnswerProps\n): JSX.Element => {\n  switch (\n    props.subQuestionType === undefined\n      ? findQuestionType(props.question.type, props.questionTypes)\n      : props.subQuestionType\n  ) {\n    case questionTypeElementsType.MultipleChoice:\n      const userAnswer: MultipleChoiceQuestionAnswerInterface[] =\n        toMultipleChoice(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswer\n            .filter((itm) => itm.status === true)\n            .map((item, i) => (\n              <div\n                key={i + 1}\n                onClick={props.onClick}\n                className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n              >\n                <div className=\"text-xl text-blue-600\">\n                  <BsCheckSquareFill />\n                </div>\n                <div dangerouslySetInnerHTML={{ __html: item.value }}></div>\n              </div>\n            ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers\n                  .filter((itm) => itm.status === true)\n                  .map((item, i) => (\n                    <div\n                      key={i + 1}\n                      onClick={props.onClick}\n                      className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                    >\n                      <div className=\"text-xl text-blue-600\">\n                        <BsCheckSquareFill />\n                      </div>\n                      <div\n                        dangerouslySetInnerHTML={{ __html: item.value }}\n                      ></div>\n                    </div>\n                  ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    case questionTypeElementsType.SingleMultiple:\n      const userAnswerSingle: MultipleChoiceQuestionAnswerInterface[] =\n        toMultipleChoice(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswerSingle\n            .filter((itm) => itm.status === true)\n            .map((item, i) => (\n              <div\n                key={i + 1}\n                onClick={props.onClick}\n                className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n              >\n                <div className=\"text-xl text-blue-600\">\n                  <BsCheckCircleFill />\n                </div>\n                <div dangerouslySetInnerHTML={{ __html: item.value }}></div>\n              </div>\n            ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers\n                  .filter((itm) => itm.status === true)\n                  .map((item, i) => (\n                    <div\n                      key={i + 1}\n                      onClick={props.onClick}\n                      className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                    >\n                      <div className=\"text-xl text-blue-600\">\n                        <BsCheckCircleFill />\n                      </div>\n                      <div\n                        dangerouslySetInnerHTML={{ __html: item.value }}\n                      ></div>\n                    </div>\n                  ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n\n    case questionTypeElementsType.CalculatedMultipleChoice:\n      const userAnswer1: CalculatedMultipleChoiceQuestionAnswerInterface[] =\n        toCalculatedMultipleChoice(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswer1\n            .filter((itm) => itm.status === true)\n            .map((item, i) => (\n              <div\n                key={i + 1}\n                onClick={props.onClick}\n                className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n              >\n                <div className=\"text-xl text-blue-600\">\n                  <BsCheckSquareFill />\n                </div>\n                <div className=\"text-base font-normal text-gray-500\">\n                  {item.value.length > 1 ? (\n                    <>\n                      Between{\" \"}\n                      <span className=\"underline text-gray-600 font-extrabold\">\n                        {item.value[0]}\n                      </span>{\" \"}\n                      and{\" \"}\n                      <span className=\"underline text-gray-600 font-extrabold\">\n                        {item.value[1]}\n                      </span>\n                    </>\n                  ) : (\n                    <span className=\"text-gray-700\">\n                      {item.value[0].toString()}\n                    </span>\n                  )}\n                </div>\n              </div>\n            ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers\n                  .filter((itm) => itm.status === true)\n                  .map((item, i) => (\n                    <div\n                      key={i + 1}\n                      onClick={props.onClick}\n                      className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 mb-1 py-3 font-bold\"\n                    >\n                      <div className=\"text-xl text-blue-600\">\n                        <BsCheckSquareFill />\n                      </div>\n                      <div className=\"text-base font-normal text-gray-500\">\n                        {item.value.length > 1 ? (\n                          <>\n                            Between{\" \"}\n                            <span className=\"underline text-blue-600 font-extrabold\">\n                              {item.value[0]}\n                            </span>{\" \"}\n                            and{\" \"}\n                            <span className=\"underline text-blue-600 font-extrabold\">\n                              {item.value[1]}\n                            </span>\n                          </>\n                        ) : (\n                          <span className=\"text-blue-600\">\n                            {item.value[0].toString()}\n                          </span>\n                        )}\n                      </div>\n                    </div>\n                  ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n\n    case questionTypeElementsType.Matching:\n      const userAnswerMatch: MatchingQuestionAnswerInterface[] =\n        toMatching(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswerMatch.map((item, i) => (\n            <div\n              key={i + 1}\n              onClick={props.onClick}\n              className=\"bg-gray-100 rounded cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 font-bold border border-blue-300\"\n            >\n              <div className=\"text-xl text-blue-600 font-bold p-3 pr-1 md:pr-3\">\n                <div className=\"h-8 w-8 p-3 bg-blue-100 rounded-full flex items-center justify-center\">\n                  {i + 1}\n                </div>\n              </div>\n              <div className=\"flex flex-col lg:flex-row items-center gap-3 w-full h-full truncate\">\n                <div\n                  className=\"w-full mt-3 lg:mb-0\"\n                  dangerouslySetInnerHTML={{ __html: item.value }}\n                ></div>\n                <div className=\"flex flex-row items-center gap-3 w-full mb-3 lg:mb-0\">\n                  <div className=\"text-3xl text-gray-500 group-hover:text-blue-600\">\n                    <BsArrowRightSquareFill />\n                  </div>\n                  <div\n                    className=\"w-full mr-2\"\n                    dangerouslySetInnerHTML={{ __html: item.status }}\n                  ></div>\n                </div>\n              </div>\n            </div>\n          ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers.map((item, i) => (\n                  <div\n                    key={i + 1}\n                    onClick={props.onClick}\n                    className=\"bg-blue-50 rounded cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 font-bold border border-blue-300\"\n                  >\n                    <div className=\"text-xl text-blue-600 font-bold p-3 pr-1 md:pr-3\">\n                      <div className=\"h-8 w-8 p-3 bg-blue-100 rounded-full flex items-center justify-center\">\n                        {i + 1}\n                      </div>\n                    </div>\n                    <div className=\"flex flex-col lg:flex-row items-center gap-3 w-full h-full truncate\">\n                      <div\n                        className=\"w-full mt-3 lg:mb-0\"\n                        dangerouslySetInnerHTML={{ __html: item.value }}\n                      ></div>\n                      <div className=\"flex flex-row items-center gap-3 w-full mb-3 lg:mb-0\">\n                        <div className=\"text-3xl text-gray-500 group-hover:text-blue-600\">\n                          <BsArrowRightSquareFill />\n                        </div>\n                        <div\n                          className=\"w-full mr-2\"\n                          dangerouslySetInnerHTML={{ __html: item.status }}\n                        ></div>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    case questionTypeElementsType.TrueFalse:\n      const userAnswerTureFalse: TrueFalseQuestionAnswerInterface[] =\n        toTrueFalse(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswerTureFalse\n            .filter((itm) => itm.status === true)\n            .map((item, i) => (\n              <div\n                key={i + 1}\n                onClick={props.onClick}\n                className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n              >\n                <div className=\"text-xl\">\n                  <BsArrowRightCircleFill />\n                </div>\n                <div dangerouslySetInnerHTML={{ __html: item.value }}></div>\n              </div>\n            ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers\n                  .filter((itm) => itm.status === true)\n                  .map((item, i) => (\n                    <div\n                      key={i + 1}\n                      onClick={props.onClick}\n                      className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-blue-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                    >\n                      <div className=\"text-xl\">\n                        <BsArrowRightCircleFill />\n                      </div>\n                      <div\n                        dangerouslySetInnerHTML={{ __html: item.value }}\n                      ></div>\n                    </div>\n                  ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    case questionTypeElementsType.Numeric:\n      const userAnswerNumerical: NumericalQuestionAnswerInterface[] =\n        toNumerical(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswerNumerical.map((item, i) => (\n            <div\n              key={i + 1}\n              onClick={props.onClick}\n              className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n            >\n              <div className=\"text-xl\">\n                <BsArrowRightCircleFill />\n              </div>\n              <div className=\"text-gray-600 text-base font-normal\">\n                {item.value.length > 1 ? (\n                  <>\n                    Between{\" \"}\n                    <span className=\"underline text-gray-600 font-extrabold\">\n                      {item.value[0]}\n                    </span>{\" \"}\n                    and{\" \"}\n                    <span className=\"underline text-gray-600 font-extrabold\">\n                      {item.value[1]}\n                    </span>\n                  </>\n                ) : (\n                  item.value.length > 0 && (\n                    <span className=\"text-gray-700\">\n                      {item.value[0].toString()}\n                    </span>\n                  )\n                )}\n              </div>\n            </div>\n          ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers.map((item, i) => (\n                  <div\n                    key={i + 1}\n                    onClick={props.onClick}\n                    className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-blue-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                  >\n                    <div className=\"text-xl\">\n                      <BsArrowRightCircleFill />\n                    </div>\n                    <div className=\"text-gray-600 text-base font-normal\">\n                      {item.value.length > 1 ? (\n                        <>\n                          Between{\" \"}\n                          <span className=\"underline text-blue-600 font-extrabold\">\n                            {item.value[0] - item.value[1]}\n                          </span>{\" \"}\n                          and{\" \"}\n                          <span className=\"underline text-blue-600 font-extrabold\">\n                            {item.value[0] + item.value[1]}\n                          </span>\n                        </>\n                      ) : (\n                        item.value.length > 0 && (\n                          <span className=\"text-blue-700\">\n                            {item.value[0].toString()}\n                          </span>\n                        )\n                      )}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    case questionTypeElementsType.SimpleCalculate:\n      const userAnswerSimpleCalculate: SimpleCalculatedQuestionAnswerInterface[] =\n        toSimpleCalculated(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswerSimpleCalculate.map((item, i) => (\n            <div\n              key={i + 1}\n              onClick={props.onClick}\n              className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n            >\n              <div className=\"text-xl\">\n                <BsArrowRightCircleFill />\n              </div>\n              <div className=\"text-gray-600 text-base font-normal\">\n                {item.value.length > 1 ? (\n                  <>\n                    Between{\" \"}\n                    <span className=\"underline text-gray-600 font-extrabold\">\n                      {item.value[0]}\n                    </span>{\" \"}\n                    and{\" \"}\n                    <span className=\"underline text-gray-600 font-extrabold\">\n                      {item.value[1]}\n                    </span>\n                  </>\n                ) : (\n                  item.value.length > 0 && (\n                    <span className=\"text-gray-700\">\n                      {item.value[0].toString()}\n                    </span>\n                  )\n                )}\n              </div>\n            </div>\n          ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers.map((item, i) => (\n                  <div\n                    key={i + 1}\n                    onClick={props.onClick}\n                    className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-blue-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                  >\n                    <div className=\"text-xl\">\n                      <BsArrowRightCircleFill />\n                    </div>\n                    <div className=\"text-gray-600 text-base font-normal\">\n                      {item.value.length > 1 ? (\n                        <>\n                          Between{\" \"}\n                          <span className=\"underline text-blue-600 font-extrabold\">\n                            {item.value[0]}\n                          </span>{\" \"}\n                          and{\" \"}\n                          <span className=\"underline text-blue-600 font-extrabold\">\n                            {item.value[1]}\n                          </span>\n                        </>\n                      ) : (\n                        item.value.length > 0 && (\n                          <span className=\"text-blue-700\">\n                            {item.value[0].toString()}\n                          </span>\n                        )\n                      )}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    case questionTypeElementsType.ShortAnswer:\n      const userAnswerShortAnswer: ShortAnswerQuestionAnswerInterface[] =\n        toShortAnswer(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswerShortAnswer.map((item, i) => (\n            <div\n              key={i + 1}\n              onClick={props.onClick}\n              className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n            >\n              <div className=\"text-xl\">\n                <BsArrowRightCircleFill />\n              </div>\n              <div\n                dangerouslySetInnerHTML={{\n                  __html: item.value,\n                }}\n              ></div>\n            </div>\n          ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers.map((item, i) => (\n                  <div\n                    key={i + 1}\n                    onClick={props.onClick}\n                    className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-blue-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                  >\n                    <div className=\"text-xl\">\n                      <BsArrowRightCircleFill />\n                    </div>\n                    <div\n                      dangerouslySetInnerHTML={{\n                        __html: item.value,\n                      }}\n                    ></div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    // Essay\n    case questionTypeElementsType.Essay:\n      const userAnswerEssay: EssayQuestionAnswerInterface[] =\n        toEssay(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswerEssay.map((item, i) => (\n            <div\n              key={i + 1}\n              onClick={props.onClick}\n              className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n            >\n              <div className=\"text-xl\">\n                <BsArrowRightCircleFill />\n              </div>\n              <div\n                dangerouslySetInnerHTML={{\n                  __html: item.value,\n                }}\n              ></div>\n            </div>\n          ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers.map((item, i) => (\n                  <div\n                    key={i + 1}\n                    onClick={props.onClick}\n                    className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-blue-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                  >\n                    <div className=\"text-xl\">\n                      <BsArrowRightCircleFill />\n                    </div>\n                    <div\n                      dangerouslySetInnerHTML={{\n                        __html: item.value,\n                      }}\n                    ></div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    case questionTypeElementsType.Embedded:\n      return <div></div>;\n    case questionTypeElementsType.Hybrid:\n      return <div></div>;\n    default:\n      return <div className=\"text-blue-600 font-extrabold\">Answer added</div>;\n  }\n};\n\nconst FindAnswer = (props: FindAnswerProps) => {\n  const answer = props.answersList.find(\n    (item) => item.question_id === props.question.question_id\n  );\n  let UserAnswersSel = props.question.question.find(\n    (itm) => itm.language === props.selectedLanguage\n  );\n  if (UserAnswersSel === undefined && props.question.question.length > 0) {\n    UserAnswersSel =\n      props.question.question.find(\n        (itm) => itm.language === props.selectedLanguage\n      ) === undefined\n        ? props.question.question[0]\n        : props.question.question.find(\n            (itm) => itm.language === props.selectedLanguage\n          )!;\n  }\n  if (answer === undefined || UserAnswersSel === undefined) {\n    return (\n      <div className=\"text-yellow-600 font-extrabold text-2xl text-center\">\n        No answer found!\n      </div>\n    );\n  } else {\n    let SubQ = UserAnswersSel.sub_question.find(\n      (itm) => findQType(itm.typeShort) === props.subQuestionType\n    );\n\n    return (\n      <div>\n        {SubQ === undefined\n          ? resultDiv(\n              answer.answers[0].answer,\n              UserAnswersSel.answers[0].answer,\n              props\n            )\n          : answer.answers\n              .filter((itm) => SubQ && itm.reference === SubQ.reference)\n              .map((user_answer) => {\n                const testQ = UserAnswersSel!.answers.find(\n                  (itm) =>\n                    itm._id === user_answer._id &&\n                    itm.reference === user_answer.reference\n                );\n                if (testQ !== undefined) {\n                  return resultDiv(user_answer.answer, testQ.answer, props);\n                } else {\n                  return <div></div>;\n                }\n              })}\n      </div>\n    );\n  }\n};\n\nexport default FindAnswer;\n","import React, { Component } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { claimReasonInterface } from \"../../../interfaces\";\nimport search from \"../../../utils/search\";\n\nexport const claimReasonsData = [\n  { key: 1, reason: \"Not placed (Sinahawe umwanya)\" },\n  {\n    key: 2,\n    reason:\n      \"Not placed with higher marks (Sinahawe umwanya kandi hari abo ndusha twakoze bimwe bawuhawe)\",\n  },\n  {\n    key: 3,\n    reason:\n      \"Want to change district of placement (Nifuza guhindurirwa akarere nahawemo umwanya)\",\n  },\n  {\n    key: 4,\n    reason: \"Rejected offer by mistake (Nibeshye nanga umwanya nahawe)\",\n  },\n  {\n    key: 0,\n    reason: \"None of the above (nta na kimwe muri ibyo byavuzwe haruguru)\",\n  },\n];\n\ntype ChooseReasonProps = {\n  claimReason: claimReasonInterface | null;\n  setClaimReason: (value: claimReasonInterface | null) => void;\n  setChooseClaimReason: (value: boolean) => void;\n  allClaimReasons: claimReasonInterface[];\n};\n\ntype ChooseReasonState = {\n  searchInput: string;\n};\n\nclass ChooseReason extends Component<ChooseReasonProps, ChooseReasonState> {\n  constructor(props: ChooseReasonProps) {\n    super(props);\n\n    this.state = {\n      searchInput: \"\",\n    };\n  }\n\n  setSearchInput = (value: string) => {\n    this.setState({ searchInput: value });\n  };\n\n  render() {\n    return (\n      <div>\n        {/* SEARCH PART */}\n        <div className=\"flex items-center w-full my-1\">\n          <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n          <input\n            type=\"text\"\n            placeholder=\"Search\"\n            className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n            onChange={(e) => this.setSearchInput(e.target.value)}\n            value={this.state.searchInput}\n          />\n          <button\n            className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n            type=\"button\"\n            onClick={() => this.props.setChooseClaimReason(false)}\n          >\n            Close\n          </button>\n        </div>\n        {/* END SEARCH PART ///////////////// */}\n\n        <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n          {search(this.props.allClaimReasons, this.state.searchInput).map(\n            (item: claimReasonInterface, index) => (\n              <section key={index.toString() + item.id}>\n                <div\n                  className={`py-1 w-full px-2 hover:bg-gray-100 cursor-pointer ${\n                    this.props.claimReason &&\n                    this.props.claimReason.id === item.id\n                      ? \"border-l-4 border-blue-500 bg-blue-50\"\n                      : \"my-1\"\n                  }`}\n                  onClick={() => {\n                    this.props.setChooseClaimReason(false);\n                    this.props.setClaimReason(item);\n                  }}\n                >\n                  <p className=\"text-base text-black\">{item.reason}</p>\n                </div>\n              </section>\n            )\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ChooseReason;\n","import React from \"react\";\nimport { DocumentClaimUser } from \"../../../actions/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { ClaimGetDocTitle } from \"./ClaimForm\";\n\ntype DocFormViewProps = {\n  thisDoc: DocumentClaimUser;\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  documentCategories: DocumentReducerInterface;\n};\n\nconst DocFormView: React.FC<DocFormViewProps> = (props) => {\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-xl\">\n              {ClaimGetDocTitle(props.documentCategories, props.thisDoc).main}\n            </span>\n            <button\n              type=\"button\"\n              className=\"btn btn-blue\"\n              onClick={() => {\n                props.setChooseClaimFile(false);\n                props.setClaimFileId(props.thisDoc.doc_id);\n                props.setViewThisFile(\"\");\n              }}\n            >\n              Choose\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span className=\"font-bold text-yellow-900 rounded px-3 py-1\">\n              {capitalizeFirstLetter(props.thisDoc.validation_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              ################\n              {/* {loadingUsers ? (\n                <div className=\"w-24 h-3 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n              ) : getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                ) ? (\n                getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                )!.user.user_info.fname +\n                \" \" +\n                getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                )!.user.user_info.lname\n              ) : (\n                \"-\"\n              )} */}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisDoc.validated_by.comment}\n            </span>\n          </div>\n          <div className=\"w-full my-1\">\n            <img\n              src={`${API.AUTH_FILES}/${props.thisDoc.files}`}\n              alt=\"doc file\"\n              className={`w-full`}\n            />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default DocFormView;\n","import React, { useEffect, useState } from \"react\";\nimport { MdRadioButtonChecked, MdRadioButtonUnchecked } from \"react-icons/md\";\nimport {\n  QuestionAnswerFormat,\n  QuestionAnswerInterface,\n  QuestionInterface,\n  QuestionLanguage,\n  QuestionLanguages,\n  questionType,\n} from \"../../interfaces/index\";\nimport { newAnswer } from \"../../containers/DoExam/DoExam\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  candidateExamStoreInterface,\n  examDataInterface,\n  System,\n  setSelectedExamQuestion,\n  setQuestionLanguage,\n  questionTypesStoreInterface,\n  loadQuestionTypes,\n  QuestionAnswersStore,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { LoadingType } from \"../../components/Loading/LoadingV2\";\nimport {\n  toCalculatedMultipleChoice,\n  toEmbedded,\n  toEssay,\n  toMatching,\n  toMultipleChoice,\n  toNumerical,\n  toShortAnswer,\n  toSimpleCalculated,\n  toTrueFalse,\n} from \"../../containers/DoExam/QuestionDetails/ConvertingAnswers\";\nimport { BiWorld } from \"react-icons/bi\";\nimport { AiFillCaretDown } from \"react-icons/ai\";\nimport { FaTimes } from \"react-icons/fa\";\nimport { findQuestionType } from \"../../containers/DoExam/utils/utils\";\nimport MultipleChoice from \"../../containers/DoExam/QuestionDetails/Answers/MultipleChoice\";\nimport TrueFalse from \"../../containers/DoExam/QuestionDetails/Answers/TrueFalse\";\nimport SimpleCalculated from \"../../containers/DoExam/QuestionDetails/Answers/SimpleCalculated\";\nimport Matching from \"../../containers/DoExam/QuestionDetails/Answers/Matching\";\nimport ShortAnswer from \"../../containers/DoExam/QuestionDetails/Answers/ShortAnswer\";\nimport Numerical from \"../../containers/DoExam/QuestionDetails/Answers/Numerical\";\nimport CalculatedMultipleChoice from \"../../containers/DoExam/QuestionDetails/Answers/CalculatedMultipleChoice\";\nimport { Shuffle } from \"../../utils/functions\";\nimport Essay from \"../../containers/DoExam/QuestionDetails/Answers/Essay\";\nimport {\n  QuestionForEmbedded,\n  QuestionForHybrid,\n  questionShortElementsType,\n  questionTypeElementsType,\n  regExEmbedded,\n} from \"@mastrecruit/common\";\nimport Embedded from \"../../containers/DoExam/QuestionDetails/Answers/Embedded\";\nimport Hybrid from \"../../containers/DoExam/QuestionDetails/Answers/Hybrid\";\nimport HybridAnswers from \"../../containers/DoExam/QuestionDetails/Answers/HybridAnswers\";\n\ninterface QuestionDetailsProps {\n  selectedQuestion: QuestionInterface;\n  setSelectedQuestion: (question: QuestionInterface) => void;\n  answerQuestionFn: (answer: QuestionAnswersStore) => void;\n  questionAnswers: newAnswer[] | undefined;\n  doExam: examDataInterface;\n  auth: Auth;\n  candidateExam: candidateExamStoreInterface;\n  system: System;\n  setSelectedExamQuestion: (\n    exam_id: string,\n    question_id: string | null\n  ) => void;\n  setQuestionLanguage: (lang: QuestionLanguage) => void;\n  questionTypes: questionTypesStoreInterface;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  preview: boolean;\n  submitQuestionAnswer: boolean;\n}\n\nconst returnSelect = (\n  data: QuestionAnswerInterface,\n  type: questionShortElementsType | QuestionForEmbedded | QuestionForHybrid,\n  questionAnswers: QuestionAnswerInterface[],\n  addAnswer: (data: QuestionAnswerInterface) => void\n): JSX.Element => {\n  let answers: QuestionAnswerFormat[] = [];\n  for (let answer of data.answer) {\n    answers.push({\n      id: answer.id,\n      value: answer.value,\n      status: answer.status,\n    });\n  }\n  let answerCheck: QuestionAnswerInterface | undefined = questionAnswers.find(\n    (itm) => itm.reference === data.reference\n  );\n  let answered: QuestionAnswerFormat[] = [];\n  if (answerCheck !== undefined) {\n    answered = answerCheck.answer;\n  }\n  if (answers.length > 0) {\n    if (type === QuestionForEmbedded.SingleMultiple) {\n      return (\n        <span className=\"w-max\">\n          <select\n            className={`px-3 py-2 rounded text-base max-w-full border border-gray-300 ${\n              answered.length !== 0 &&\n              answers.find((itm) => itm.id === answered[0].id) !== undefined\n                ? \"text-blue-600 font-bold\"\n                : \"text-gray-700 font-bold\" //Example of condition of changing color\n            }`}\n            value={answered.length === 0 ? \"\" : answered[0].id}\n            onChange={(e) => {\n              let select = answers.find((itm) => itm.id === e.target.value);\n              if (select !== undefined) {\n                addAnswer({\n                  _id: data._id,\n                  reference: data.reference,\n                  answer: [\n                    {\n                      id: select.id,\n                      value: select.value,\n                      status: select.status,\n                    },\n                  ],\n                });\n              } else {\n                alert(\"Invalid choice!\");\n              }\n            }}\n          >\n            <option value={\"\"}>Choose correct answer</option>\n            {answers.map((item, i) => (\n              <option value={item.id} key={i + 1}>\n                {item.value}\n              </option>\n            ))}\n          </select>\n        </span>\n      );\n    } else {\n      return (\n        <span className=\"w-max bg-green-100\">\n          <input\n            value={\n              answered.length === 0\n                ? \"\"\n                : type === QuestionForEmbedded.ShortAnswer\n                ? answered[0].value\n                : answered[0].value[0]\n            }\n            onChange={(e) => {\n              addAnswer({\n                _id: data._id,\n                reference: data.reference,\n                answer: [\n                  {\n                    id: answers[0].id,\n                    value:\n                      type === QuestionForEmbedded.ShortAnswer\n                        ? e.target.value\n                        : [e.target.value],\n                    status: answers[0].status,\n                  },\n                ],\n              });\n            }}\n            type=\"text\"\n            className=\"bg-white px-3 py-1 rounded text-base text-blue-600 font-bold border border-gray-300\"\n          />\n        </span>\n      );\n    }\n  } else {\n    return <div>Question not valid!</div>;\n  }\n};\n\nexport const EmbeddedQuestion = (\n  selectedQuestion: QuestionInterface,\n  questionTypes: questionType[] | null,\n  language: QuestionLanguage,\n  questionAnswers: QuestionAnswersStore[],\n  addAnswer: (data: QuestionAnswerInterface) => void\n): JSX.Element => {\n  let newTextResult = [];\n  // Testing Question\n  let question = selectedQuestion.question.find(\n    (itm) => itm.language === language\n  );\n  if (\n    findQuestionType(selectedQuestion.type, questionTypes) !== null &&\n    findQuestionType(selectedQuestion.type, questionTypes) ===\n      questionTypeElementsType.Embedded\n  ) {\n    let answeredQuestions: QuestionAnswerInterface[] = [];\n    if (question !== undefined) {\n      let userQuestionAnswers = questionAnswers.find(\n        (itm) => itm.question_id === selectedQuestion.question_id\n      );\n      if (userQuestionAnswers !== undefined) {\n        answeredQuestions = userQuestionAnswers.answers;\n      }\n\n      var answers = question.answers;\n      var originalText = question.description.split(\" \");\n      // var newTexts = question.description.match(regExEmbedded);\n\n      for (let check of originalText) {\n        let test = answers.find((itm) => itm.reference === parseInt(check[1]));\n        if (test !== undefined) {\n          // Find type of subQuestion\n          let type = question.sub_question.find(\n            (itm) => itm.reference === parseInt(check[1])\n          );\n          if (type !== undefined) {\n            newTextResult.push(\n              returnSelect(test, type.typeShort, answeredQuestions, addAnswer)\n            );\n          }\n        } else {\n          newTextResult.push(check);\n        }\n      }\n    }\n  }\n  return (\n    <div className=\"w-full text-base font-semibold mt-2\">\n      {newTextResult.map((item, i) => (\n        <span key={i + 1} className=\"mr-1\">\n          {item}\n        </span>\n      ))}\n    </div>\n  );\n};\n\nconst _QuestionPreview = (props: QuestionDetailsProps) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [selectLang, setSelectLang] = useState<boolean>(false);\n  const [selectedLanguage, setSelectedLanguage] = useState(\n    props.selectedQuestion.question[0].language\n  );\n\n  const filterLanguages = () => {\n    let langs: {\n      key: QuestionLanguage;\n      value: string;\n    }[] = [];\n    for (let langItem of props.selectedQuestion.question) {\n      let testLangQ = QuestionLanguages.find(\n        (l) => l.key === langItem.language\n      );\n      if (testLangQ !== undefined) {\n        langs = [...langs, testLangQ];\n      }\n    }\n    return langs;\n  };\n\n  useEffect(() => {\n    if (\n      props.questionTypes.questionTypes === null ||\n      props.questionTypes.questionTypes.length === 0\n    ) {\n      props.loadQuestionTypes(setLoading);\n    }\n  }, [props]);\n  return (\n    <div className=\"bg-gray-800 h-full\">\n      {loading === true ? (\n        <div className=\"bg-gray-200 px-3 py-2 rounded my-2 overflow-y-auto pb-80 md:pb-60\">\n          <div className=\"rounded bg-white px-4 py-4 mt-5 mx-4\">\n            <div className=\"text-2xl mx-4 mb-3\">Loading...</div>\n            <Loading type={LoadingType.white} />\n          </div>\n        </div>\n      ) : (\n        <div className=\"bg-gray-200 px-3 py-2 my-2 overflow-y-auto pb-40 md:pb-10\">\n          <div className=\"flex flex-row gap-2 mt-2\">\n            <div className=\"flex flex-row justify-between w-full\">\n              {props.selectedQuestion.question.find(\n                (itm) => itm.language === selectedLanguage\n              ) && (\n                <div className=\"text-md flex flex-col w-full\">\n                  <div className=\"flex flex-row justify-between w-full\">\n                    <div\n                      dangerouslySetInnerHTML={{\n                        __html: props.selectedQuestion.question.find(\n                          (itm) => itm.language === selectedLanguage\n                        )!.title,\n                      }}\n                      className=\"text-sm text-gray-600 mb-2\"\n                    ></div>\n\n                    {/* Languages */}\n                    <div className=\"flex flex-row gap-2\">\n                      <div className=\"px-3 py-1 rounded-full flex items-center justify-center text-base font-bold bg-white text-blue-800\">\n                        {props.selectedQuestion.marks} marks\n                      </div>\n                      <div className=\"bg-white rounded h-10 hover:bg-white cursor-pointer\">\n                        <div\n                          onClick={() => setSelectLang(!selectLang)}\n                          className=\"flex flex-row items-center gap-2\"\n                        >\n                          <div className=\"rounded-l\">\n                            <BiWorld className=\"text-2xl my-2 ml-2\" />\n                          </div>\n                          <div\n                            className=\"flex flex-col\"\n                            style={{ width: \"97px\" }}\n                          >\n                            <span className=\"text-xs font-bold italic text-gray-700\">\n                              Language\n                            </span>\n                            <span\n                              title={\n                                filterLanguages().find(\n                                  (itm) => itm.key === selectedLanguage\n                                )?.value\n                              }\n                              className=\"text-sm font-bold text-blue-600 truncate\"\n                              style={{ width: \"97px\" }}\n                            >\n                              {\n                                filterLanguages().find(\n                                  (itm) => itm.key === selectedLanguage\n                                )?.value\n                              }\n                            </span>\n                          </div>\n                          <div\n                            className={`${\n                              selectLang === true\n                                ? \"bg-yellow-800 text-white\"\n                                : \"bg-gray-50 hover:bg-blue-600\"\n                            } h-10 rounded-r border-l border-gray-300 flex flex-row items-center justify-center cursor-pointer hover:text-white hover:border-white`}\n                          >\n                            {selectLang === true ? (\n                              <FaTimes className=\"text-xl my-2 mx-2\" />\n                            ) : (\n                              <AiFillCaretDown className=\"text-xl mb-1 mt-2 mx-2\" />\n                            )}\n                          </div>\n                        </div>\n                        {selectLang === true && (\n                          <div\n                            className=\"relative rounded overflow-hidden\"\n                            style={{ width: \"182px\" }}\n                          >\n                            <div className=\"bg-blue-700 animate__animated animate__fadeIn animate__faster rounded-b w-full right-0 flex flex-col\">\n                              {filterLanguages().map((item, i) => (\n                                <span\n                                  onClick={() => {\n                                    props.setQuestionLanguage(item.key);\n                                    setSelectLang(!selectLang);\n                                    setSelectedLanguage(item.key);\n                                  }}\n                                  key={i + 1}\n                                  className={`flex flex-row items-center animate__animated animate__fadeInDown animate__faster text-white text-sm px-2 py-2 border-2 ${\n                                    selectedLanguage === item.key\n                                      ? \"bg-blue-800 font-extrabold border-blue-800\"\n                                      : \"bg-blue-500 text-blue-100 border-blue-500 hover:bg-blue-700 hover:border-blue-700\"\n                                  }`}\n                                >\n                                  {selectedLanguage === item.key ? (\n                                    <MdRadioButtonChecked className=\"text-xl mr-2\" />\n                                  ) : (\n                                    <MdRadioButtonUnchecked className=\"text-xl mr-2\" />\n                                  )}{\" \"}\n                                  {item.value}\n                                </span>\n                              ))}\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                  {props.selectedQuestion.question_id !== null &&\n                  findQuestionType(\n                    props.selectedQuestion.type,\n                    props.questionTypes.questionTypes\n                  ) !== null &&\n                  findQuestionType(\n                    props.selectedQuestion.type,\n                    props.questionTypes.questionTypes\n                  ) === questionTypeElementsType.Embedded ? (\n                    EmbeddedQuestion(\n                      props.selectedQuestion,\n                      props.questionTypes.questionTypes,\n                      selectedLanguage,\n                      props.candidateExam.question_answers,\n                      () => {}\n                    )\n                  ) : (\n                    <div\n                      dangerouslySetInnerHTML={{\n                        __html: props.selectedQuestion.question.find(\n                          (itm) => itm.language === selectedLanguage\n                        )!.description,\n                      }}\n                      className=\"text-lg text-gray-800 font-bold mt-2\"\n                    ></div>\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n          <div\n            className={`my-4 py-2 px-2 ${\n              props.selectedQuestion.question_id !== null &&\n              findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) !== null &&\n              (findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) === questionTypeElementsType.Embedded ||\n                findQuestionType(\n                  props.selectedQuestion.type,\n                  props.questionTypes.questionTypes\n                ) === questionTypeElementsType.Hybrid)\n                ? \"\"\n                : \"bg-white\"\n            } rounded`}\n            onClick={() => selectLang === true && setSelectLang(false)}\n          >\n            {/* Single and Multiple choice */}\n            {props.selectedQuestion.question_id !== null &&\n              findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) !== null &&\n              (findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) === questionTypeElementsType.MultipleChoice ||\n                findQuestionType(\n                  props.selectedQuestion.type,\n                  props.questionTypes.questionTypes\n                ) === questionTypeElementsType.SingleMultiple) && (\n                <MultipleChoice\n                  type={findQuestionType(\n                    props.selectedQuestion.type,\n                    props.questionTypes.questionTypes\n                  )}\n                  available_answers={props.candidateExam.question_answers}\n                  selectedQuestionAnswer={{\n                    question_id: props.selectedQuestion.question_id,\n                    question: undefined,\n                    answers: toMultipleChoice(\n                      props.selectedQuestion.question.find(\n                        (itm) => itm.language === selectedLanguage\n                      )!.answers[0].answer\n                    ),\n                    selectedAns: props.selectedQuestion.question.find(\n                      (itm) => itm.language === selectedLanguage\n                    )!.answers[0],\n                  }}\n                  answerQuestionFn={props.answerQuestionFn}\n                />\n              )}\n            {/* True and False */}\n            {props.selectedQuestion.question_id !== null &&\n              findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) !== null &&\n              findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) === questionTypeElementsType.TrueFalse && (\n                <TrueFalse\n                  type={findQuestionType(\n                    props.candidateExam.candidate_exam?.questions.find(\n                      (itm) =>\n                        itm.question_id === props.selectedQuestion.question_id\n                    )?.type,\n                    props.questionTypes.questionTypes\n                  )}\n                  available_answers={props.candidateExam.question_answers}\n                  selectedQuestionAnswer={{\n                    question_id: props.selectedQuestion.question_id,\n                    question: undefined,\n                    answers: toTrueFalse(\n                      props.selectedQuestion.question.find(\n                        (itm) => itm.language === selectedLanguage\n                      )!.answers[0].answer\n                    ),\n                    selectedAns: props.selectedQuestion.question.find(\n                      (itm) => itm.language === selectedLanguage\n                    )!.answers[0],\n                  }}\n                  answerQuestionFn={props.answerQuestionFn}\n                />\n              )}\n            {/* Matching Question */}\n            {/* {console.log(\n              \"Type: \",\n              findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              )\n            )} */}\n            {props.selectedQuestion.question_id !== null &&\n              findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) !== null &&\n              findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) === questionTypeElementsType.Matching && (\n                <Matching\n                  selectedLanguage={selectedLanguage}\n                  selectedExam={props.candidateExam.candidate_exam}\n                  type={findQuestionType(\n                    props.candidateExam.candidate_exam?.questions.find(\n                      (itm) =>\n                        itm.question_id === props.selectedQuestion.question_id\n                    )?.type,\n                    props.questionTypes.questionTypes\n                  )}\n                  available_answers={props.candidateExam.question_answers}\n                  selectedQuestionAnswer={{\n                    question_id: props.selectedQuestion.question_id,\n                    question: undefined,\n                    answers: toMatching(\n                      props.selectedQuestion.question.find(\n                        (itm) => itm.language === selectedLanguage\n                      )!.answers[0].answer\n                    ),\n                    shuffledAnswers: Shuffle(\n                      toMatching(\n                        props.selectedQuestion.question.find(\n                          (itm) => itm.language === selectedLanguage\n                        )!.answers[0].answer\n                      )\n                    ),\n                    selectedAns: props.selectedQuestion.question.find(\n                      (itm) => itm.language === selectedLanguage\n                    )!.answers[0],\n                  }}\n                  answerQuestionFn={props.answerQuestionFn}\n                />\n              )}\n            {/* Simple Calculated */}\n            {props.selectedQuestion.question_id !== null &&\n              findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) !== null &&\n              findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) === questionTypeElementsType.SimpleCalculate && (\n                <SimpleCalculated\n                  type={findQuestionType(\n                    props.candidateExam.candidate_exam?.questions.find(\n                      (itm) =>\n                        itm.question_id === props.selectedQuestion.question_id\n                    )?.type,\n                    props.questionTypes.questionTypes\n                  )}\n                  available_answers={props.candidateExam.question_answers}\n                  selectedQuestionAnswer={{\n                    question_id: props.selectedQuestion.question_id,\n                    question: undefined,\n                    answers: toSimpleCalculated(\n                      props.selectedQuestion.question.find(\n                        (itm) => itm.language === selectedLanguage\n                      )!.answers[0].answer\n                    ),\n                    selectedAns: props.selectedQuestion.question.find(\n                      (itm) => itm.language === selectedLanguage\n                    )!.answers[0],\n                  }}\n                  answerQuestionFn={props.answerQuestionFn}\n                />\n              )}\n            {/* Short Answer */}\n            {props.selectedQuestion.question_id !== null &&\n              findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) !== null &&\n              findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) === questionTypeElementsType.ShortAnswer && (\n                <ShortAnswer\n                  type={findQuestionType(\n                    props.candidateExam.candidate_exam?.questions.find(\n                      (itm) =>\n                        itm.question_id === props.selectedQuestion.question_id\n                    )?.type,\n                    props.questionTypes.questionTypes\n                  )}\n                  available_answers={props.candidateExam.question_answers}\n                  selectedQuestionAnswer={{\n                    question_id: props.selectedQuestion.question_id,\n                    question: undefined,\n                    answers: toShortAnswer(\n                      props.selectedQuestion.question.find(\n                        (itm) => itm.language === selectedLanguage\n                      )!.answers[0].answer\n                    ),\n                    selectedAns: props.selectedQuestion.question.find(\n                      (itm) => itm.language === selectedLanguage\n                    )!.answers[0],\n                  }}\n                  answerQuestionFn={props.answerQuestionFn}\n                />\n              )}\n\n            {/* Numerical */}\n            {props.selectedQuestion.question_id !== null &&\n              findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) !== null &&\n              findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) === questionTypeElementsType.Numeric && (\n                <Numerical\n                  type={findQuestionType(\n                    props.candidateExam.candidate_exam?.questions.find(\n                      (itm) =>\n                        itm.question_id === props.selectedQuestion.question_id\n                    )?.type,\n                    props.questionTypes.questionTypes\n                  )}\n                  available_answers={props.candidateExam.question_answers}\n                  selectedQuestionAnswer={{\n                    question_id: props.selectedQuestion.question_id,\n                    question: undefined,\n                    answers: toNumerical(\n                      props.selectedQuestion.question.find(\n                        (itm) => itm.language === selectedLanguage\n                      )!.answers[0].answer\n                    ),\n                    selectedAns: props.selectedQuestion.question.find(\n                      (itm) => itm.language === selectedLanguage\n                    )!.answers[0],\n                  }}\n                  answerQuestionFn={props.answerQuestionFn}\n                />\n              )}\n            {/* Calculated Multiple choice */}\n            {props.selectedQuestion.question_id !== null &&\n              findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) !== null &&\n              findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) === questionTypeElementsType.CalculatedMultipleChoice && (\n                <CalculatedMultipleChoice\n                  type={findQuestionType(\n                    props.candidateExam.candidate_exam?.questions.find(\n                      (itm) =>\n                        itm.question_id === props.selectedQuestion.question_id\n                    )?.type,\n                    props.questionTypes.questionTypes\n                  )}\n                  available_answers={props.candidateExam.question_answers}\n                  selectedQuestionAnswer={{\n                    question_id: props.selectedQuestion.question_id,\n                    question: undefined,\n                    answers: toCalculatedMultipleChoice(\n                      props.selectedQuestion.question.find(\n                        (itm) => itm.language === selectedLanguage\n                      )!.answers[0].answer\n                    ),\n                    selectedAns: props.selectedQuestion.question.find(\n                      (itm) => itm.language === selectedLanguage\n                    )!.answers[0],\n                  }}\n                  answerQuestionFn={props.answerQuestionFn}\n                />\n              )}\n            {/* Essay answer */}\n            {props.selectedQuestion.question_id !== null &&\n              findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) !== null &&\n              findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) === questionTypeElementsType.Essay && (\n                <Essay\n                  type={findQuestionType(\n                    props.candidateExam.candidate_exam?.questions.find(\n                      (itm) =>\n                        itm.question_id === props.selectedQuestion.question_id\n                    )?.type,\n                    props.questionTypes.questionTypes\n                  )}\n                  available_answers={props.candidateExam.question_answers}\n                  selectedQuestionAnswer={{\n                    question_id: props.selectedQuestion.question_id,\n                    question: undefined,\n                    answers: toEssay(\n                      props.selectedQuestion.question.find(\n                        (itm) => itm.language === selectedLanguage\n                      )!.answers[0].answer\n                    ),\n                    selectedAns: props.selectedQuestion.question.find(\n                      (itm) => itm.language === selectedLanguage\n                    )!.answers[0],\n                  }}\n                  answerQuestionFn={props.answerQuestionFn}\n                />\n              )}\n            {/* Hybrid answer unique: it combines th above questions */}\n            {props.selectedQuestion.question_id !== null &&\n              findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) !== null &&\n              findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) === questionTypeElementsType.Hybrid && (\n                <HybridAnswers\n                  type={findQuestionType(\n                    props.candidateExam.candidate_exam?.questions.find(\n                      (itm) =>\n                        itm.question_id === props.selectedQuestion.question_id\n                    )?.type,\n                    props.questionTypes.questionTypes\n                  )}\n                  available_answers={props.candidateExam.question_answers}\n                  selectedQuestionAnswer={{\n                    question_id: props.selectedQuestion.question_id,\n                    question: undefined,\n                    answers: props.selectedQuestion.question.find(\n                      (itm) => itm.language === selectedLanguage\n                    )!.answers,\n                  }}\n                  wholeQuestion={props.selectedQuestion.question.find(\n                    (itm) => itm.language === selectedLanguage\n                  )}\n                  answerQuestionFn={props.answerQuestionFn}\n                  selectedLanguage={selectedLanguage}\n                  selectedExam={props.candidateExam.candidate_exam}\n                />\n              )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  doExam,\n  candidateExam,\n  system,\n  questionTypes,\n}: StoreState): {\n  auth: Auth;\n  doExam: examDataInterface;\n  candidateExam: candidateExamStoreInterface;\n  system: System;\n  questionTypes: questionTypesStoreInterface;\n} => {\n  return {\n    auth: auth,\n    doExam: doExam,\n    candidateExam: candidateExam,\n    system: system,\n    questionTypes: questionTypes,\n  };\n};\n\nconst QuestionPreview = connect(mapStateToProps, {\n  setSelectedExamQuestion,\n  setQuestionLanguage,\n  loadQuestionTypes,\n})(_QuestionPreview);\n\nexport default QuestionPreview;\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { ApplicationSession } from \"../../../actions\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { isClaimAllowed } from \"./ClaimForm\";\n\nconst getRejectedApplicants = (\n  applicationData: claimApplicationsInterface[]\n): claimApplicationsInterface[] => {\n  return applicationData.filter(\n    (item) => item.application_status === ApplicationStates.Rejected\n  );\n};\n\nexport const searchApplication = (\n  objList: claimApplicationsInterface[],\n  text: any\n): claimApplicationsInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (prop === \"position\") {\n        flag =\n          product.position.position_title\n            .toString()\n            .toLowerCase()\n            .indexOf(text.toLowerCase()) > -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n  // return objList.filter((product) =>\n  //   product.position.position_title.includes(text)\n  // );\n};\n\ntype FormApplicationListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  claimFileId: string;\n  viewThisFile: string;\n  candidateApplications: claimApplicationsInterface[];\n  myClaims: CandidateClaimInterface[];\n  activeSession: ApplicationSession;\n};\n\nconst FormApplicationList: React.FC<FormApplicationListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            getRejectedApplicants(props.candidateApplications).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.application_id\n              )\n            ).length > 0\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Close\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}{\" \"}\n      {/* searchData(props.candidateApplications, searchInput) */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {getRejectedApplicants(props.candidateApplications).filter((item) =>\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            item.application_id\n          )\n        ).length > 0 ? (\n          searchApplication(\n            getRejectedApplicants(props.candidateApplications).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.application_id\n              )\n            ),\n            searchInput\n          ).map((item, index) => (\n            <div\n              className={`group flex items-center justify-between my-1 hover:bg-gray-100 ${\n                props.claimFileId === item.application_id &&\n                \"bg-blue-50 border-l-4 border-blue-500\"\n              }`}\n              key={index + item.application_id}\n            >\n              <div\n                className=\"p-1 w-full mr-2 cursor-pointer\"\n                onClick={() => {\n                  props.setChooseClaimFile(false);\n                  props.setClaimFileId(item.application_id);\n                }}\n              >\n                <p className=\"text-base font-medium text-black\">\n                  {item.position.position_title}\n                </p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                onClick={() => {\n                  props.setViewThisFile(item.application_id);\n                }}\n              >\n                View\n              </button>\n            </div>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No Rejected document available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default FormApplicationList;\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { ClaimGetDocTitle, isClaimAllowed } from \"./ClaimForm\";\nimport { DocumentClaimUser } from \"../../../actions/claiming\";\nimport { CategorySubcategoryData } from \"../../../interfaces/candidatesInterfaces\";\nimport { CandidateClaimInterface } from \"../../../interfaces\";\nimport { ApplicationSession } from \"../../../actions\";\n\nexport interface DocumentTitleInterface {\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  school: {\n    school_name: string;\n    _id: string;\n    status: boolean;\n    education_category_id?: {\n      education_category_title: string;\n      _id: string;\n    };\n    district_id?: {\n      district_name: string;\n      _id: string;\n    };\n  } | null;\n  school_id: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  validation_status: string;\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: string;\n    date: string;\n  };\n  doc_id: string;\n  doc_title: string;\n  category_subcategory_data: CategorySubcategoryData | null;\n}\n\nexport const DocumentTitleData = (\n  documentData: DocumentClaimUser[],\n  documentCategories: DocumentReducerInterface\n): DocumentTitleInterface[] | [] => {\n  let documentTemp: DocumentTitleInterface[] = [];\n  for (let i in documentData) {\n    documentTemp.push({\n      category_id: documentData[i].category_id,\n      company: documentData[i].company,\n      description: documentData[i].description,\n      email: documentData[i].email,\n      end_year: documentData[i].end_year,\n      files: documentData[i].files,\n      names: documentData[i].names,\n      phone_number: documentData[i].phone_number,\n      school: documentData[i].school,\n      school_id: documentData[i].school_id,\n      start_year: documentData[i].start_year,\n      sub_category_id: documentData[i].sub_category_id,\n      title: documentData[i].title,\n      year: documentData[i].year,\n      validation_status: documentData[i].validation_status,\n      validated_by: documentData[i].validated_by,\n      doc_id: documentData[i].doc_id,\n      doc_title: ClaimGetDocTitle(documentCategories, documentData[i]).main,\n      category_subcategory_data: documentData[i].category_subcategory_data,\n    });\n  }\n  return documentTemp;\n};\n\nconst getRejectedDocuments = (\n  documentData: DocumentClaimUser[]\n): DocumentClaimUser[] => {\n  console.log({\n    rejected: documentData.filter(\n      (item) => item.validation_status === \"rejected\"\n    ),\n  });\n  return documentData.filter((item) => item.validation_status === \"rejected\");\n};\n\nexport const searchDocuments = (\n  objList: DocumentTitleInterface[],\n  text: any\n): DocumentTitleInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter(\n    (product) =>\n      product.doc_title.toString().toLowerCase().indexOf(text.toLowerCase()) >\n      -1\n  );\n};\n\ntype FormDocumentListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  claimFileId: string;\n  viewThisFile: string;\n  candidateDocuments: DocumentClaimUser[];\n  documentCategories: DocumentReducerInterface;\n  myClaims: CandidateClaimInterface[];\n  activeSession: ApplicationSession;\n};\n\nconst FormDocumentList: React.FC<FormDocumentListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            DocumentTitleData(\n              getRejectedDocuments(props.candidateDocuments),\n              props.documentCategories\n            ).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.doc_id\n              )\n            ).length > 0\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Close\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {props.candidateDocuments.filter((item) =>\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            item.doc_id\n          )\n        ).length > 0 ? (\n          searchDocuments(\n            DocumentTitleData(\n              getRejectedDocuments(props.candidateDocuments),\n              props.documentCategories\n            ).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.doc_id\n              )\n            ),\n            searchInput\n          ).map((doc, index) => (\n            <section key={index + doc.doc_id}>\n              <div\n                className={`group flex items-center justify-between my-1 hover:bg-gray-100 ${\n                  props.claimFileId === doc.doc_id &&\n                  \"bg-blue-50 border-l-4 border-blue-500\"\n                }`}\n              >\n                <div\n                  className=\"p-1 w-full mr-2 cursor-pointer\"\n                  onClick={() => {\n                    props.setChooseClaimFile(false);\n                    props.setClaimFileId(doc.doc_id);\n                  }}\n                >\n                  <p className=\"text-base font-medium text-black\">\n                    {ClaimGetDocTitle(props.documentCategories, doc).main}\n                  </p>\n                </div>\n                <button\n                  type=\"button\"\n                  className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                  onClick={() => {\n                    props.viewThisFile === doc.doc_id\n                      ? props.setViewThisFile(\"\")\n                      : props.setViewThisFile(doc.doc_id);\n                  }}\n                >\n                  {props.viewThisFile === doc.doc_id ? \"Close\" : \"View\"}\n                </button>\n              </div>\n            </section>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No Rejected document available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default FormDocumentList;\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { VscLoading } from \"react-icons/vsc\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../../actions\";\nimport { updateSessionPlan } from \"../../../actions/session\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport {\n  allPlanTypes,\n  PlansInterface,\n  PlansTypeInterface,\n  PlansTypeKeys,\n  SessionPlanInterface,\n  SessionPlanTypeStatus,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { DATE, errorToText } from \"../../../utils/functions\";\n\nexport const isActivationAllowed = (thisPlans: PlansInterface): boolean => {\n  let today: Date = new Date(),\n    end_date = new Date(thisPlans.end_date);\n  if (end_date.getTime() >= today.getTime()) {\n    return true;\n  }\n  return false;\n};\n\nexport const getPlanTypeByKey = (\n  type_key: PlansTypeKeys\n): PlansTypeInterface | undefined => {\n  return allPlanTypes.find((item) => item.type_key === type_key);\n};\n\nexport const isPlanActive = (\n  viewThisSession: SessionPlanInterface,\n  thisPlan: PlansInterface\n): \"OPEN\" | \"CLOSED\" | \"WAITING\" => {\n  if (viewThisSession.is_active) {\n    let today = new Date(),\n      planEndDate = new Date(thisPlan.end_date),\n      planStartDate = new Date(thisPlan.start_date);\n    if (\n      planEndDate.getTime() >= today.getTime() &&\n      planStartDate.getTime() <= today.getTime() &&\n      thisPlan.type_status !== SessionPlanTypeStatus.CLOSED\n    ) {\n      return \"OPEN\";\n    } else if (\n      planStartDate.getTime() > today.getTime() &&\n      thisPlan.type_status !== SessionPlanTypeStatus.CLOSED\n    ) {\n      return \"WAITING\";\n    }\n  }\n  return \"CLOSED\";\n};\n\ntype SessionDetailsProps = {\n  viewThisSession: SessionPlanInterface;\n  setViewThisSession: (data: SessionPlanInterface) => void;\n\n  // REDUX ----------------\n  updateSessionPlan: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype SessionDetailsState = {\n  loadingRequest: string;\n};\n\nexport class SessionDetails extends Component<\n  SessionDetailsProps,\n  SessionDetailsState\n> {\n  constructor(props: SessionDetailsProps) {\n    super(props);\n\n    this.state = {\n      loadingRequest: \"\",\n    };\n  }\n\n  handlePlanActivation = async (\n    session: SessionPlanInterface,\n    thisPlan: PlansInterface\n  ) => {\n    const newState: \"open\" | \"close\" = session.is_active ? \"close\" : \"open\";\n\n    if (!window.confirm(`Are you sure you want to ${newState} this plan?`)) {\n      return true;\n    }\n\n    if (!isActivationAllowed(thisPlan)) {\n      this.props.PushPopupAlert({\n        title: `Opening/Closing plan which has been expired is not allowed!`,\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    let newData: SessionPlanInterface = {\n      session_plan_name: session.session_plan_name,\n      period: session.period,\n      is_active: session.is_active,\n      plans: [],\n      createdAt: session.createdAt,\n      updatedAt: session.updatedAt,\n      session_plan_id: session.session_plan_id,\n    };\n    for (const key in session.plans) {\n      if (Object.prototype.hasOwnProperty.call(session.plans, key)) {\n        const element = session.plans[key];\n        if (thisPlan.type_key === element.type_key) {\n          if (thisPlan.type_status === SessionPlanTypeStatus.OPEN) {\n            newData.plans.push({\n              type_id: thisPlan.type_id,\n              type_title: thisPlan.type_title,\n              type_key: thisPlan.type_key,\n              type_status: SessionPlanTypeStatus.CLOSED,\n              start_date: thisPlan.start_date,\n              end_date: thisPlan.end_date,\n              allowed_claim_level: thisPlan.allowed_claim_level,\n              _id: thisPlan._id,\n              history: thisPlan.history,\n            });\n          } else {\n            newData.plans.push({\n              type_id: thisPlan.type_id,\n              type_title: thisPlan.type_title,\n              type_key: thisPlan.type_key,\n              type_status: SessionPlanTypeStatus.OPEN,\n              start_date: thisPlan.start_date,\n              end_date: thisPlan.end_date,\n              allowed_claim_level: thisPlan.allowed_claim_level,\n              _id: thisPlan._id,\n              history: thisPlan.history,\n            });\n          }\n        } else {\n          newData.plans.push(element);\n        }\n      }\n    }\n\n    console.log(\"====================================\");\n    console.log({ newData });\n    console.log(\"====================================\");\n\n    this.setState({ loadingRequest: thisPlan.type_key });\n    try {\n      const res = await axios.put<SessionPlanInterface>(\n        `${API.CLAIMING}/session/${session.session_plan_id}`,\n        newData\n      );\n      this.props.updateSessionPlan(res.data);\n      this.props.setViewThisSession(res.data);\n      this.props.PushPopupAlert({\n        title: `Session ${newState}d successfully`,\n        theme: PopupAlertTheme.info,\n      });\n      this.setState({ loadingRequest: \"\" });\n      console.log(\"updateSessionPlan: \", res);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.warning,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <table className=\"w-full bg-white shadow p-5\" id=\"session_content\">\n        <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n          <tr>\n            <td className=\"p-2\">#</td>\n            <td className=\"p-2\">Plan Type</td>\n            <td className=\"p-2\">Start Date</td>\n            <td className=\"p-2\">End date</td>\n            {this.props.viewThisSession.is_active && (\n              <td className=\"p-2\" colSpan={2}>\n                Status\n              </td>\n            )}\n          </tr>\n        </thead>\n        <tbody>\n          {/* WHILE DATA FOUND ====================== */}\n          {this.props.viewThisSession.plans.map((item, index) => (\n            <tr\n              key={index + item._id}\n              className={`border-b border-gray-200 hover:bg-gray-100`}\n            >\n              <td className=\"p-2 text-left whitespace-nowrap\">{index + 1}</td>\n              <td className=\"p-2 text-left\">\n                <span className=\"text-lg\">\n                  {getPlanTypeByKey(item.type_key) &&\n                    capitalizeFirstLetter(\n                      getPlanTypeByKey(item.type_key)!.type_title\n                    )}\n                </span>\n              </td>\n              <td className=\"p-2 text-left\">{DATE(item.start_date)}</td>\n              <td className=\"p-2 text-left\">{DATE(item.end_date)}</td>\n              {this.props.viewThisSession.is_active && (\n                <td>\n                  {isPlanActive(this.props.viewThisSession, item) === \"OPEN\" ? (\n                    <span className={`px-2 py-1 font-semibold text-green-700`}>\n                      Open\n                    </span>\n                  ) : isPlanActive(this.props.viewThisSession, item) ===\n                    \"WAITING\" ? (\n                    <span className={`px-2 py-1 font-semibold text-gray-700`}>\n                      Waiting\n                    </span>\n                  ) : (\n                    <span className={`px-2 py-1 font-semibold text-red-700`}>\n                      Closed\n                    </span>\n                  )}\n                </td>\n              )}\n              {this.props.viewThisSession.is_active && (\n                <td>\n                  {isActivationAllowed(item) && (\n                    <div className=\"flex items-center justify-center gap-1\">\n                      <div\n                        className={`relative ${\n                          this.state.loadingRequest.length > 0\n                            ? \"cursor-not-allowed\"\n                            : \"cursor-pointer\"\n                        }`}\n                        title={\n                          item.type_status === SessionPlanTypeStatus.OPEN\n                            ? \"Deactivating session\"\n                            : \"Activating session\"\n                        }\n                        onClick={() =>\n                          this.state.loadingRequest.length <= 0 &&\n                          this.handlePlanActivation(\n                            this.props.viewThisSession,\n                            item\n                          )\n                        }\n                      >\n                        <span className=\"block w-14 h-8 bg-gray-100 rounded-full shadow-inner\"></span>\n                        <span\n                          className={`absolute block w-6 h-6 mt-1 ml-1 rounded-full shadow inset-y-0 left-0 focus-within:shadow-outline transition-transform duration-500 ease-in-out ${\n                            item.type_status === SessionPlanTypeStatus.CLOSED\n                              ? \"bg-red-500\"\n                              : \"bg-green-500 transform translate-x-full\"\n                          }`}\n                        ></span>\n                      </div>\n                      {this.state.loadingRequest === item.type_key && (\n                        <VscLoading className=\"animate__animated animate__rotateIn animate__infinite\" />\n                      )}\n                    </div>\n                  )}\n                </td>\n              )}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nexport default connect(null, {\n  updateSessionPlan,\n  PushPopupAlert,\n})(SessionDetails);\n","import React, { useEffect } from \"react\";\nimport { ImCheckboxChecked, ImCheckboxUnchecked } from \"react-icons/im\";\nimport { MdRadioButtonChecked, MdRadioButtonUnchecked } from \"react-icons/md\";\nimport { QuestionAnswersStore } from \"../../../../actions\";\nimport {\n  MultipleChoiceQuestionAnswerInterface,\n  QuestionAnswerInterface,\n  QuestionItemInterface,\n} from \"../../../../interfaces/question\";\nimport { questionTypeElementsType } from \"@mastrecruit/common\";\n\ninterface MultipleChoiceProps {\n  type: questionTypeElementsType | null;\n  available_answers: QuestionAnswersStore[];\n  selectedQuestionAnswer: {\n    question_id: string | null;\n    question: QuestionItemInterface | undefined;\n    answers: MultipleChoiceQuestionAnswerInterface[] | undefined;\n    selectedAns: QuestionAnswerInterface;\n  };\n  answerQuestionFn: (answer: QuestionAnswersStore) => void;\n}\n\nconst MultipleChoice = (props: MultipleChoiceProps) => {\n  const checkAnswer = (\n    item: MultipleChoiceQuestionAnswerInterface\n  ): boolean => {\n    let res = false;\n    if (props.available_answers.length > 0) {\n      let check = props.available_answers.find(\n        (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n      );\n      if (check !== undefined) {\n        let checkA = check.answers.find(\n          (tes) =>\n            tes.reference === props.selectedQuestionAnswer.selectedAns.reference\n        );\n        if (checkA !== undefined) {\n          let x = checkA.answer.find((itm) => itm.id === item.id);\n          if (x !== undefined && x.status === true) {\n            res = true;\n          }\n        }\n      }\n    }\n    return res;\n  };\n\n  const addAnswerItemFn = (\n    newAnswers: MultipleChoiceQuestionAnswerInterface[],\n    questionAnswer: QuestionAnswerInterface\n  ) => {\n    if (props.selectedQuestionAnswer.question_id !== null) {\n      props.answerQuestionFn({\n        question_id: props.selectedQuestionAnswer.question_id,\n        status: false,\n        answers: [\n          {\n            _id: questionAnswer._id,\n            reference: questionAnswer.reference,\n            answer: newAnswers,\n          },\n        ],\n      });\n    }\n  };\n  const addAnswer = (\n    // Problem here!\n    item: MultipleChoiceQuestionAnswerInterface,\n    question_id: string | null\n  ) => {\n    let oldAnswers = props.available_answers.find(\n      (itm) => itm.question_id === question_id\n    );\n    if (oldAnswers !== undefined) {\n      let selAns = oldAnswers.answers.find(\n        (tester) =>\n          tester.reference ===\n          props.selectedQuestionAnswer.selectedAns.reference\n      );\n      if (selAns !== undefined) {\n        // Check type of question\n        let temp: MultipleChoiceQuestionAnswerInterface[] = [];\n        if (props.type === questionTypeElementsType.SingleMultiple) {\n          for (let t of selAns.answer) {\n            temp = [\n              ...temp,\n              {\n                id: t.id,\n                value: t.value,\n                status: false,\n              },\n            ];\n          }\n          addAnswerItemFn(temp, props.selectedQuestionAnswer.selectedAns);\n        }\n        let newAnswersMultiple: MultipleChoiceQuestionAnswerInterface[] = [];\n\n        for (let xItem of temp.length === 0 ? selAns.answer : temp) {\n          if (xItem.id === item.id) {\n            newAnswersMultiple = [\n              ...newAnswersMultiple,\n              {\n                id: xItem.id,\n                value: xItem.value,\n                status:\n                  props.type === questionTypeElementsType.SingleMultiple\n                    ? true\n                    : !xItem.status,\n              },\n            ];\n          } else {\n            newAnswersMultiple = [...newAnswersMultiple, xItem];\n          }\n\n          addAnswerItemFn(\n            newAnswersMultiple,\n            props.selectedQuestionAnswer.selectedAns\n          );\n        }\n      }\n    }\n  };\n  useEffect(() => {\n    let test = props.available_answers.find(\n      (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n    );\n    if (\n      test === undefined ||\n      (test !== undefined && test.answers[0].answer.length === 0)\n    ) {\n      if (\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.selectedQuestionAnswer !== undefined &&\n        props.selectedQuestionAnswer.question_id !== null\n      ) {\n        let newAnswers: MultipleChoiceQuestionAnswerInterface[] = [];\n        for (let a of props.selectedQuestionAnswer.answers) {\n          newAnswers = [\n            ...newAnswers,\n            {\n              id: a.id,\n              value: a.value,\n              status: false,\n            },\n          ];\n        }\n\n        props.selectedQuestionAnswer.question !== undefined &&\n          props.answerQuestionFn({\n            question_id: props.selectedQuestionAnswer.question_id,\n            status: true,\n            answers: [\n              {\n                _id: props.selectedQuestionAnswer.selectedAns._id,\n                reference: props.selectedQuestionAnswer.selectedAns.reference,\n                answer: newAnswers,\n              },\n            ],\n          });\n      }\n    }\n  }, [props]);\n  return (\n    <div>\n      {props.selectedQuestionAnswer !== null &&\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.selectedQuestionAnswer.answers.map((item, i) => (\n          <div\n            title=\"Click to choose this option\"\n            key={i + 1}\n            onClick={() =>\n              addAnswer(item, props.selectedQuestionAnswer.question_id)\n            }\n            className={`px-2 py-2 ${\n              checkAnswer(item) === true\n                ? \"border bg-blue-100 border-white text-blue-600 hover:border-blue-600 rounded font-bold\"\n                : \"border-b bg-white border-gray-100 hover:bg-gray-100\"\n            } flex flex-row justify-left items-center cursor-pointer`}\n          >\n            {checkAnswer(item) === true ? (\n              <>\n                {props.type === questionTypeElementsType.SingleMultiple ? (\n                  <MdRadioButtonChecked className=\"text-2xl\" />\n                ) : (\n                  <ImCheckboxChecked className=\"text-2xl\" />\n                )}\n              </>\n            ) : props.type === questionTypeElementsType.SingleMultiple ? (\n              <MdRadioButtonUnchecked className=\"text-2xl truncate\" />\n            ) : (\n              <ImCheckboxUnchecked className=\"text-2xl\" />\n            )}\n            <div\n              dangerouslySetInnerHTML={{ __html: item.value }}\n              className=\"ml-2\"\n            ></div>\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default MultipleChoice;\n","import React, { useEffect } from \"react\";\nimport { MdRadioButtonChecked, MdRadioButtonUnchecked } from \"react-icons/md\";\nimport { QuestionAnswersStore } from \"../../../../actions\";\nimport {\n  QuestionAnswerInterface,\n  QuestionItemInterface,\n  TrueFalseQuestionAnswerInterface,\n} from \"../../../../interfaces/question\";\nimport { questionTypeElementsType } from \"@mastrecruit/common\";\n\ninterface TrueFalseProps {\n  type: questionTypeElementsType | null;\n  available_answers: QuestionAnswersStore[];\n  selectedQuestionAnswer: {\n    question_id: string | null;\n    question: QuestionItemInterface | undefined;\n    answers: TrueFalseQuestionAnswerInterface[] | undefined;\n    selectedAns: QuestionAnswerInterface;\n  };\n  answerQuestionFn: (answer: QuestionAnswersStore) => void;\n}\n\nconst TrueFalse = (props: TrueFalseProps) => {\n  const checkAnswer = (item: TrueFalseQuestionAnswerInterface): boolean => {\n    let res = false;\n    if (props.available_answers.length > 0) {\n      let check = props.available_answers.find(\n        (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n      );\n      if (check !== undefined) {\n        let checkA = check.answers.find(\n          (tes) =>\n            tes.reference === props.selectedQuestionAnswer.selectedAns.reference\n        );\n        if (checkA !== undefined) {\n          let x = checkA.answer.find((itm) => itm.id === item.id);\n          if (x !== undefined && x.status === true) {\n            res = true;\n          }\n        }\n      }\n    }\n    return res;\n  };\n  const addAnswerItemFn = (\n    newAnswers: TrueFalseQuestionAnswerInterface[],\n    questionAnswer: QuestionAnswerInterface\n  ) => {\n    if (props.selectedQuestionAnswer.question_id !== null) {\n      props.answerQuestionFn({\n        question_id: props.selectedQuestionAnswer.question_id,\n        status: false,\n        answers: [\n          {\n            _id: questionAnswer._id,\n            reference: questionAnswer.reference,\n            answer: newAnswers,\n          },\n        ],\n      });\n    }\n  };\n\n  const addAnswer = (\n    //This has a problem\n    item: TrueFalseQuestionAnswerInterface,\n    question_id: string | null\n  ) => {\n    let oldAnswers = props.available_answers.find(\n      (itm) => itm.question_id === question_id\n    );\n    if (oldAnswers !== undefined) {\n      // Check type of question\n      let selAns = oldAnswers.answers.find(\n        (tester) =>\n          tester.reference ===\n          props.selectedQuestionAnswer.selectedAns.reference\n      );\n      if (selAns !== undefined) {\n        let temp: TrueFalseQuestionAnswerInterface[] = [];\n        for (let t of selAns.answer) {\n          temp = [\n            ...temp,\n            {\n              id: t.id,\n              value: t.value,\n              status: false,\n            },\n          ];\n        }\n        addAnswerItemFn(temp, selAns);\n        let newAnswers: TrueFalseQuestionAnswerInterface[] = [];\n        for (let x of temp.length === 0 ? selAns.answer : temp) {\n          if (x.id === item.id) {\n            newAnswers = [\n              ...newAnswers,\n              {\n                id: item.id,\n                value: item.value,\n                status: !x.status,\n              },\n            ];\n          } else {\n            newAnswers = [...newAnswers, x];\n          }\n        }\n        addAnswerItemFn(newAnswers, selAns);\n      }\n    }\n  };\n\n  useEffect(() => {\n    let test = props.available_answers.find(\n      (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n    );\n    if (\n      test === undefined ||\n      (test !== undefined && test.answers[0].answer.length === 0)\n    ) {\n      if (\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.selectedQuestionAnswer !== undefined &&\n        props.selectedQuestionAnswer.question_id !== null\n      ) {\n        let newAnswers: TrueFalseQuestionAnswerInterface[] = [];\n        for (let a of props.selectedQuestionAnswer.answers) {\n          newAnswers = [\n            ...newAnswers,\n            {\n              id: a.id,\n              value: a.value,\n              status: false,\n            },\n          ];\n        }\n        props.selectedQuestionAnswer.question !== undefined &&\n          props.answerQuestionFn({\n            question_id: props.selectedQuestionAnswer.question_id,\n            status: true,\n            answers: [\n              {\n                _id: props.selectedQuestionAnswer.selectedAns._id,\n                reference: props.selectedQuestionAnswer.selectedAns.reference,\n                answer: newAnswers,\n              },\n            ],\n          });\n      }\n    }\n  }, [props]);\n\n  return (\n    <div className=\"\">\n      {props.selectedQuestionAnswer !== null &&\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.selectedQuestionAnswer.answers.map((item, i) => (\n          <div\n            key={i + 1}\n            onClick={() =>\n              addAnswer(item, props.selectedQuestionAnswer.question_id)\n            }\n            className={`px-2 py-2 border-b ${\n              checkAnswer(item) === true\n                ? \"border bg-blue-100 border-white text-blue-600 hover:border-blue-600 rounded font-bold\"\n                : \"border-b bg-white border-gray-100 hover:bg-gray-100\"\n            } flex flex-row justify-left items-center cursor-pointer`}\n          >\n            {checkAnswer(item) === true ? (\n              <MdRadioButtonChecked className=\"text-2xl\" />\n            ) : (\n              <MdRadioButtonUnchecked className=\"text-2xl\" />\n            )}\n            <span className=\"ml-2\">{item.value}</span>\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default TrueFalse;\n","import React, { useEffect } from \"react\";\nimport { QuestionAnswersStore } from \"../../../../actions\";\nimport {\n  QuestionAnswerInterface,\n  QuestionItemInterface,\n  SimpleCalculatedQuestionAnswerInterface,\n} from \"../../../../interfaces/question\";\nimport { questionTypeElementsType } from \"@mastrecruit/common\";\n\ninterface SimpleCalculatedProps {\n  type: questionTypeElementsType | null;\n  available_answers: QuestionAnswersStore[];\n  selectedQuestionAnswer: {\n    question_id: string | null;\n    question: QuestionItemInterface | undefined;\n    answers: SimpleCalculatedQuestionAnswerInterface[] | undefined;\n    selectedAns: QuestionAnswerInterface;\n  };\n  answerQuestionFn: (answer: QuestionAnswersStore) => void;\n}\n\nconst SimpleCalculated = (props: SimpleCalculatedProps) => {\n  const checkAnswer = (\n    item: SimpleCalculatedQuestionAnswerInterface\n  ): boolean => {\n    let res = false;\n    if (props.available_answers.length > 0) {\n      let check = props.available_answers.find(\n        (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n      );\n      if (check !== undefined) {\n        let checkA = check.answers.find(\n          (tes) =>\n            tes.reference === props.selectedQuestionAnswer.selectedAns.reference\n        );\n        if (checkA !== undefined) {\n          let x = checkA.answer.find((itm) => itm.id === item.id);\n          if (x !== undefined && x.value[0] !== \"\") {\n            res = true;\n          }\n        }\n      }\n    }\n    return res;\n  };\n  const addAnswerItemFn = (\n    newAnswers: { id: string; value: string; status: boolean }[],\n    questionAnswer: QuestionAnswerInterface\n  ) => {\n    if (props.selectedQuestionAnswer.question_id !== null) {\n      props.answerQuestionFn({\n        question_id: props.selectedQuestionAnswer.question_id,\n        status: false,\n        answers: [\n          {\n            _id: questionAnswer._id,\n            reference: questionAnswer.reference,\n            answer: [\n              {\n                id: newAnswers[0].id,\n                value: [newAnswers[0].value],\n                status: newAnswers[0].status,\n              },\n            ],\n          },\n        ],\n      });\n    }\n  };\n  const addAnswer = (\n    item: { id: string; value: string; status: boolean },\n    question_id: string | null\n  ) => {\n    let oldAnswers = props.available_answers.find(\n      (itm) => itm.question_id === question_id\n    );\n    if (oldAnswers !== undefined) {\n      // Check type of question\n      addAnswerItemFn(\n        [\n          {\n            id: props.selectedQuestionAnswer.selectedAns.answer[0].id,\n            value: item.value,\n            status: props.selectedQuestionAnswer.selectedAns.answer[0].status,\n          },\n        ],\n        props.selectedQuestionAnswer.selectedAns\n      );\n    }\n  };\n  const answeredValue = () => {\n    let answer = props.available_answers.find(\n      (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n    );\n    let checkB: QuestionAnswerInterface | undefined = undefined;\n    checkB =\n      answer === undefined\n        ? undefined\n        : answer.answers.find(\n            (tes) =>\n              tes.reference ===\n              props.selectedQuestionAnswer.selectedAns.reference\n          );\n    return answer !== undefined && checkB !== undefined\n      ? checkB.answer.length !== 0 && checkB.answer[0].value[0]\n      : \"\";\n  };\n\n  useEffect(() => {\n    let test = props.available_answers.find(\n      (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n    );\n    if (\n      test === undefined ||\n      (test !== undefined && test.answers[0].answer.length === 0)\n    ) {\n      if (\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.selectedQuestionAnswer !== undefined &&\n        props.selectedQuestionAnswer.question_id !== null\n      ) {\n        props.selectedQuestionAnswer.question !== undefined &&\n          props.answerQuestionFn({\n            question_id: props.selectedQuestionAnswer.question_id,\n            status: true,\n            answers: [\n              {\n                _id: props.selectedQuestionAnswer.selectedAns._id,\n                reference: props.selectedQuestionAnswer.selectedAns.reference,\n                answer: [\n                  {\n                    id: props.selectedQuestionAnswer.answers[0].id,\n                    value: [\"\"],\n                    status: props.selectedQuestionAnswer.answers[0].status,\n                  },\n                ],\n              },\n            ],\n          });\n      }\n    }\n  }, [props]);\n\n  return (\n    <div className=\"\">\n      {props.selectedQuestionAnswer !== null &&\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.selectedQuestionAnswer.answers.map((item, i) => (\n          <div\n            key={i + 1}\n            className={`-mx-2 -my-2 flex flex-col justify-left rounded`}\n          >\n            <input\n              onChange={(e) => {\n                addAnswer(\n                  {\n                    id: item.id,\n                    value: e.target.value,\n                    status: item.status,\n                  },\n                  props.selectedQuestionAnswer.question_id\n                );\n              }}\n              type=\"text\"\n              value={answeredValue()}\n              className={`px-3 py-2 rounded focus:outline-none focus:border-none ${\n                checkAnswer(item) === true\n                  ? \"border-2 text-blue-600 font-bold bg-white border-blue-600\"\n                  : \"border text-gray-700 border-gray-500 bg-gray-50\"\n              }`}\n            />\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default SimpleCalculated;\n","import React, { useEffect } from \"react\";\nimport { QuestionAnswersStore } from \"../../../../actions\";\nimport {\n  QuestionAnswerInterface,\n  QuestionItemInterface,\n  ShortAnswerQuestionAnswerInterface,\n} from \"../../../../interfaces/question\";\nimport { questionTypeElementsType } from \"@mastrecruit/common\";\n\ninterface ShortAnswerProps {\n  type: questionTypeElementsType | null;\n  available_answers: QuestionAnswersStore[];\n  selectedQuestionAnswer: {\n    question_id: string | null;\n    question: QuestionItemInterface | undefined;\n    answers: ShortAnswerQuestionAnswerInterface[] | undefined;\n    selectedAns: QuestionAnswerInterface;\n  };\n  answerQuestionFn: (answer: QuestionAnswersStore) => void;\n}\n\nconst ShortAnswer = (props: ShortAnswerProps) => {\n  const checkAnswer = (item: ShortAnswerQuestionAnswerInterface): boolean => {\n    let res = false;\n    if (props.available_answers.length > 0) {\n      let check = props.available_answers.find(\n        (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n      );\n      if (check !== undefined) {\n        let checkA = check.answers.find(\n          (tes) =>\n            tes.reference === props.selectedQuestionAnswer.selectedAns.reference\n        );\n        if (checkA !== undefined) {\n          let x = checkA.answer.find((itm) => itm.id === item.id);\n          if (x !== undefined && x.value !== \"\") {\n            res = true;\n          }\n        }\n      }\n    }\n    return res;\n  };\n  const addAnswerItemFn = (\n    newAnswers: ShortAnswerQuestionAnswerInterface[],\n    questionAnswer: QuestionAnswerInterface\n  ) => {\n    if (props.selectedQuestionAnswer.question_id !== null) {\n      props.answerQuestionFn({\n        question_id: props.selectedQuestionAnswer.question_id,\n        status: false,\n        answers: [\n          {\n            _id: questionAnswer._id,\n            reference: questionAnswer.reference,\n            answer: newAnswers,\n          },\n        ],\n      });\n    }\n  };\n  const addAnswer = (\n    item: { id: string; value: string; status: boolean },\n    question_id: string | null\n  ) => {\n    let oldAnswers = props.available_answers.find(\n      (itm) => itm.question_id === question_id\n    );\n    if (oldAnswers !== undefined) {\n      // Check type of question\n      addAnswerItemFn(\n        [\n          {\n            id: props.selectedQuestionAnswer.selectedAns.answer[0].id,\n            value: item.value,\n            status: props.selectedQuestionAnswer.selectedAns.answer[0].status,\n          },\n        ],\n        props.selectedQuestionAnswer.selectedAns\n      );\n    }\n  };\n  const answeredValue = () => {\n    let answer = props.available_answers.find(\n      (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n    );\n    let checkB: QuestionAnswerInterface | undefined = undefined;\n    checkB =\n      answer === undefined\n        ? undefined\n        : answer.answers.find(\n            (tes) =>\n              tes.reference ===\n              props.selectedQuestionAnswer.selectedAns.reference\n          );\n    return answer !== undefined && checkB !== undefined\n      ? checkB.answer.length !== 0 && checkB.answer[0].value\n      : \"\";\n  };\n\n  useEffect(() => {\n    let test = props.available_answers.find(\n      (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n    );\n    if (\n      test === undefined ||\n      (test !== undefined && test.answers[0].answer.length === 0)\n    ) {\n      if (\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.selectedQuestionAnswer !== undefined &&\n        props.selectedQuestionAnswer.question_id !== null\n      ) {\n        props.selectedQuestionAnswer.question !== undefined &&\n          props.answerQuestionFn({\n            question_id: props.selectedQuestionAnswer.question_id,\n            status: true,\n            answers: [\n              {\n                _id: props.selectedQuestionAnswer.selectedAns._id,\n                reference: props.selectedQuestionAnswer.selectedAns.reference,\n                answer: [\n                  {\n                    id: props.selectedQuestionAnswer.answers[0].id,\n                    value: \"\",\n                    status: props.selectedQuestionAnswer.answers[0].status,\n                  },\n                ],\n              },\n            ],\n          });\n      }\n    }\n  }, [props]);\n  return (\n    <div className=\"\">\n      {props.selectedQuestionAnswer === undefined ? (\n        <div\n          className={`-mx-2 -my-2 flex flex-col justify-left rounded cursor-pointer`}\n        >\n          <textarea\n            value={\"\"}\n            className={`px-3 py-2 rounded focus:outline-none focus:border-none border text-gray-700 border-gray-500 bg-gray-50`}\n            style={{ minHeight: \"80px\" }}\n          ></textarea>\n        </div>\n      ) : (\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.selectedQuestionAnswer.answers.map((item, i) => (\n          <div\n            key={i + 1}\n            className={`-mx-2 -my-2 flex flex-col justify-left rounded cursor-pointer`}\n          >\n            <textarea\n              onChange={(e) => {\n                addAnswer(\n                  {\n                    id: item.id,\n                    value: e.target.value,\n                    status: item.status,\n                  },\n                  props.selectedQuestionAnswer.question_id\n                );\n              }}\n              value={answeredValue()}\n              className={`px-3 py-2 rounded focus:outline-none focus:border-none ${\n                checkAnswer(item) === true\n                  ? \"border-2 text-blue-600 font-bold bg-white border-blue-600\"\n                  : \"border text-gray-700 border-gray-500 bg-gray-50\"\n              }`}\n              style={{ minHeight: \"80px\" }}\n            ></textarea>\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\n\nexport default ShortAnswer;\n","import React, { useEffect } from \"react\";\nimport { QuestionAnswersStore } from \"../../../../actions\";\nimport {\n  NumericalQuestionAnswerInterface,\n  QuestionAnswerInterface,\n  QuestionItemInterface,\n} from \"../../../../interfaces/question\";\nimport { questionTypeElementsType } from \"@mastrecruit/common\";\n\ninterface NumericalProps {\n  type: questionTypeElementsType | null;\n  available_answers: QuestionAnswersStore[];\n  selectedQuestionAnswer: {\n    question_id: string | null;\n    question: QuestionItemInterface | undefined;\n    answers: NumericalQuestionAnswerInterface[] | undefined;\n    selectedAns: QuestionAnswerInterface;\n  };\n  answerQuestionFn: (answer: QuestionAnswersStore) => void;\n}\n\nconst Numerical = (props: NumericalProps) => {\n  const checkAnswer = (item: NumericalQuestionAnswerInterface): boolean => {\n    let res = false;\n    if (props.available_answers.length > 0) {\n      let check = props.available_answers.find(\n        (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n      );\n      if (check !== undefined) {\n        let checkA = check.answers.find(\n          (tes) =>\n            tes.reference === props.selectedQuestionAnswer.selectedAns.reference\n        );\n        if (checkA !== undefined) {\n          let x = checkA.answer.find((itm) => itm.id === item.id);\n          if (x !== undefined && x.value[0] !== \"\") {\n            res = true;\n          }\n        }\n      }\n    }\n    return res;\n  };\n  const addAnswerItemFn = (\n    newAnswers: { id: string; value: string[]; status: number[] }[],\n    questionAnswer: QuestionAnswerInterface\n  ) => {\n    if (props.selectedQuestionAnswer.question_id !== null) {\n      props.answerQuestionFn({\n        question_id: props.selectedQuestionAnswer.question_id,\n        status: false,\n        answers: [\n          {\n            _id: questionAnswer._id,\n            reference: questionAnswer.reference,\n            answer: newAnswers,\n          },\n        ],\n      });\n    }\n  };\n  const addAnswer = (\n    item: { id: string; value: string; status: number[] },\n    question_id: string | null\n  ) => {\n    let oldAnswers = props.available_answers.find(\n      (itm) => itm.question_id === question_id\n    );\n    if (oldAnswers !== undefined) {\n      // Check type of question\n      addAnswerItemFn(\n        [\n          {\n            id: props.selectedQuestionAnswer.selectedAns.answer[0].id,\n            value: [item.value],\n            status: props.selectedQuestionAnswer.selectedAns.answer[0].status,\n          },\n        ],\n        props.selectedQuestionAnswer.selectedAns\n      );\n    }\n  };\n  const answeredValue = () => {\n    let answer = props.available_answers.find(\n      (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n    );\n    let checkB: QuestionAnswerInterface | undefined = undefined;\n    checkB =\n      answer === undefined\n        ? undefined\n        : answer.answers.find(\n            (tes) =>\n              tes.reference ===\n              props.selectedQuestionAnswer.selectedAns.reference\n          );\n    return answer !== undefined && checkB !== undefined\n      ? checkB.answer.length !== 0 && checkB.answer[0].value[0]\n      : \"\";\n  };\n\n  useEffect(() => {\n    let test = props.available_answers.find(\n      (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n    );\n    if (\n      test === undefined ||\n      (test !== undefined && test.answers[0].answer.length === 0)\n    ) {\n      if (\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.selectedQuestionAnswer !== undefined &&\n        props.selectedQuestionAnswer.question_id !== null\n      ) {\n        // props.answerQuestionFn({\n        //   question_id: props.selectedQuestionAnswer.question_id,\n        //   status: true,\n        //   answer: [\n        //     {\n        //       id: props.selectedQuestionAnswer.answers[0].id,\n        //       value: [\"\"],\n        //       status: props.selectedQuestionAnswer.answers[0].status,\n        //     },\n        //   ],\n        // });\n        props.selectedQuestionAnswer.question !== undefined &&\n          props.answerQuestionFn({\n            question_id: props.selectedQuestionAnswer.question_id,\n            status: true,\n            answers: [\n              {\n                _id: props.selectedQuestionAnswer.selectedAns._id,\n                reference: props.selectedQuestionAnswer.selectedAns.reference,\n                answer: [\n                  {\n                    id: props.selectedQuestionAnswer.answers[0].id,\n                    value: [\"\"],\n                    status: props.selectedQuestionAnswer.answers[0].status,\n                  },\n                ],\n              },\n            ],\n          });\n      }\n    }\n  }, [props]);\n  return (\n    <div className=\"\">\n      {props.selectedQuestionAnswer !== null &&\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.selectedQuestionAnswer.answers.map((item, i) => (\n          <div\n            key={i + 1}\n            className={`-mx-2 -my-2 flex flex-col justify-left rounded cursor-pointer`}\n          >\n            <input\n              onChange={(e) => {\n                addAnswer(\n                  {\n                    id: item.id,\n                    value: e.target.value,\n                    status: item.status,\n                  },\n                  props.selectedQuestionAnswer.question_id\n                );\n              }}\n              type=\"text\"\n              value={answeredValue()}\n              className={`px-3 py-2 rounded focus:outline-none focus:border-none ${\n                checkAnswer(item) === true\n                  ? \"border-2 text-blue-600 font-bold border-blue-600\"\n                  : \"border text-gray-700 border-gray-500\"\n              }`}\n            />\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default Numerical;\n","import React, { useEffect } from \"react\";\nimport { ImCheckboxChecked, ImCheckboxUnchecked } from \"react-icons/im\";\nimport { MdRadioButtonChecked, MdRadioButtonUnchecked } from \"react-icons/md\";\nimport { QuestionAnswersStore } from \"../../../../actions\";\nimport {\n  CalculatedMultipleChoiceQuestionAnswerInterface,\n  QuestionAnswerInterface,\n  QuestionItemInterface,\n} from \"../../../../interfaces/question\";\nimport { getRandomArbitrary } from \"../../utils/utils\";\nimport { questionTypeElementsType } from \"@mastrecruit/common\";\n\ninterface CalculatedMultipleChoiceProps {\n  type: questionTypeElementsType | null;\n  available_answers: QuestionAnswersStore[];\n  selectedQuestionAnswer: {\n    question_id: string | null;\n    question: QuestionItemInterface | undefined;\n    answers: CalculatedMultipleChoiceQuestionAnswerInterface[] | undefined;\n    selectedAns: QuestionAnswerInterface;\n  };\n  answerQuestionFn: (answer: QuestionAnswersStore) => void;\n}\n\nconst CalculatedMultipleChoice = (props: CalculatedMultipleChoiceProps) => {\n  const checkAnswer = (\n    item: CalculatedMultipleChoiceQuestionAnswerInterface\n  ): boolean => {\n    let res = false;\n    if (props.available_answers.length > 0) {\n      let check = props.available_answers.find(\n        (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n      );\n      if (check !== undefined) {\n        let checkA = check.answers.find(\n          (tes) =>\n            tes.reference === props.selectedQuestionAnswer.selectedAns.reference\n        );\n        if (checkA !== undefined) {\n          let x = checkA.answer.find((itm) => itm.id === item.id);\n          if (x !== undefined && x.status === true) {\n            res = true;\n          }\n        }\n      }\n    }\n    return res;\n  };\n\n  const addAnswerItemFn = (\n    newAnswers: CalculatedMultipleChoiceQuestionAnswerInterface[],\n    questionAnswer: QuestionAnswerInterface\n  ) => {\n    if (props.selectedQuestionAnswer.question_id !== null) {\n      props.answerQuestionFn({\n        question_id: props.selectedQuestionAnswer.question_id,\n        status: false,\n        answers: [\n          {\n            _id: questionAnswer._id,\n            reference: questionAnswer.reference,\n            answer: newAnswers,\n          },\n        ],\n      });\n    }\n  };\n  const addAnswer = (\n    item: CalculatedMultipleChoiceQuestionAnswerInterface,\n    question_id: string | null\n  ) => {\n    let oldAnswers = props.available_answers.find(\n      (itm) => itm.question_id === question_id\n    );\n    if (oldAnswers !== undefined) {\n      // Check type of question\n      let temp: CalculatedMultipleChoiceQuestionAnswerInterface[] = [];\n      if (\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.selectedQuestionAnswer.answers.filter(\n          (itm) => itm.status === true\n        ).length === 1\n      ) {\n        for (let t of props.selectedQuestionAnswer.selectedAns.answer) {\n          temp = [\n            ...temp,\n            {\n              id: t.id,\n              value: t.value,\n              status: false,\n            },\n          ];\n        }\n        addAnswerItemFn(temp, props.selectedQuestionAnswer.selectedAns);\n      }\n      let newAnswers: CalculatedMultipleChoiceQuestionAnswerInterface[] = [];\n      for (let x of temp.length === 0\n        ? props.selectedQuestionAnswer.selectedAns.answer\n        : temp) {\n        if (x.id === item.id) {\n          newAnswers = [\n            ...newAnswers,\n            {\n              id: item.id,\n              value: item.value,\n              status:\n                props.selectedQuestionAnswer.answers !== undefined &&\n                props.selectedQuestionAnswer.answers.filter(\n                  (itm) => itm.status === true\n                ).length === 1\n                  ? true\n                  : !x.status,\n            },\n          ];\n        } else {\n          newAnswers = [...newAnswers, x];\n        }\n      }\n      addAnswerItemFn(newAnswers, props.selectedQuestionAnswer.selectedAns);\n    }\n  };\n  useEffect(() => {\n    let test = props.available_answers.find(\n      (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n    );\n    if (\n      test === undefined ||\n      (test !== undefined && test.answers[0].answer.length === 0)\n    ) {\n      if (\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.selectedQuestionAnswer !== undefined &&\n        props.selectedQuestionAnswer.question_id !== null\n      ) {\n        let newAnswers: CalculatedMultipleChoiceQuestionAnswerInterface[] = [];\n        for (let a of props.selectedQuestionAnswer.answers) {\n          newAnswers = [\n            ...newAnswers,\n            {\n              id: a.id,\n              value: a.value,\n              status: false,\n            },\n          ];\n        }\n        props.selectedQuestionAnswer.question !== undefined &&\n          props.answerQuestionFn({\n            question_id: props.selectedQuestionAnswer.question_id,\n            status: true,\n            answers: [\n              {\n                _id: props.selectedQuestionAnswer.selectedAns._id,\n                reference: props.selectedQuestionAnswer.selectedAns.reference,\n                answer: newAnswers,\n              },\n            ],\n          });\n      }\n    }\n  }, [props]);\n  return (\n    <div>\n      {props.selectedQuestionAnswer !== null &&\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.selectedQuestionAnswer.answers.map((item, i) => (\n          <div\n            key={i + 1}\n            onClick={() =>\n              addAnswer(item, props.selectedQuestionAnswer.question_id)\n            }\n            className={`px-2 py-2 border-b ${\n              checkAnswer(item) === true\n                ? \"border bg-blue-100 border-white text-blue-600 hover:border-blue-600 rounded font-bold\"\n                : \"border-b bg-white border-gray-100 hover:bg-gray-100\"\n            } flex flex-row justify-left items-center rounded cursor-pointer`}\n          >\n            {checkAnswer(item) === true ? (\n              <>\n                {props.selectedQuestionAnswer.answers !== undefined &&\n                props.selectedQuestionAnswer.answers.filter(\n                  (itm) => itm.status === true\n                ).length === 1 ? (\n                  <MdRadioButtonChecked className=\"text-2xl\" />\n                ) : (\n                  <ImCheckboxChecked className=\"text-2xl\" />\n                )}\n              </>\n            ) : props.selectedQuestionAnswer.answers !== undefined &&\n              props.selectedQuestionAnswer.answers.filter(\n                (itm) => itm.status === true\n              ).length === 1 ? (\n              <MdRadioButtonUnchecked className=\"text-2xl\" />\n            ) : (\n              <ImCheckboxUnchecked className=\"text-2xl\" />\n            )}\n            <span className=\"ml-2\">\n              {item.value.length > 2\n                ? item.value\n                : item.value.length === 2\n                ? getRandomArbitrary(item.value[0], item.value[1])\n                    .toFixed(2)\n                    .toString()\n                : item.value[0]}\n            </span>\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default CalculatedMultipleChoice;\n","import React, { useEffect } from \"react\";\nimport { QuestionAnswersStore } from \"../../../../actions\";\nimport {\n  EssayQuestionAnswerInterface,\n  QuestionAnswerInterface,\n  QuestionItemInterface,\n} from \"../../../../interfaces/question\";\nimport { questionTypeElementsType } from \"@mastrecruit/common\";\n\ninterface EssayQuestionProps {\n  type: questionTypeElementsType | null;\n  available_answers: QuestionAnswersStore[];\n  selectedQuestionAnswer: {\n    question_id: string | null;\n    question: QuestionItemInterface | undefined;\n    answers: EssayQuestionAnswerInterface[] | undefined;\n    selectedAns: QuestionAnswerInterface;\n  };\n  answerQuestionFn: (answer: QuestionAnswersStore) => void;\n}\n\nconst Essay = (props: EssayQuestionProps) => {\n  const checkAnswer = (item: EssayQuestionAnswerInterface): boolean => {\n    let res = false;\n    if (props.available_answers.length > 0) {\n      let check = props.available_answers.find(\n        (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n      );\n      if (check !== undefined) {\n        let checkA = check.answers.find(\n          (tes) =>\n            tes.reference === props.selectedQuestionAnswer.selectedAns.reference\n        );\n        if (checkA !== undefined) {\n          let x = checkA.answer.find((itm) => itm.id === item.id);\n          if (x !== undefined && x.value !== \"\") {\n            res = true;\n          }\n        }\n      }\n    }\n    return res;\n  };\n  const addAnswerItemFn = (\n    newAnswers: { id: string; value: string; status: boolean }[],\n    questionAnswer: QuestionAnswerInterface\n  ) => {\n    if (props.selectedQuestionAnswer.question_id !== null) {\n      props.answerQuestionFn({\n        question_id: props.selectedQuestionAnswer.question_id,\n        status: false,\n        answers: [\n          {\n            _id: questionAnswer._id,\n            reference: questionAnswer.reference,\n            answer: newAnswers,\n          },\n        ],\n      });\n    }\n  };\n  const addAnswer = (\n    item: { id: string; value: string; status: boolean },\n    question_id: string | null\n  ) => {\n    let oldAnswers = props.available_answers.find(\n      (itm) => itm.question_id === question_id\n    );\n    if (oldAnswers !== undefined) {\n      let selAns = oldAnswers.answers.find(\n        (tester) =>\n          tester.reference ===\n          props.selectedQuestionAnswer.selectedAns.reference\n      );\n      if (selAns !== undefined) {\n        addAnswerItemFn(\n          [\n            {\n              id: selAns.answer[0].id,\n              value: item.value,\n              status: selAns.answer[0].status,\n            },\n          ],\n          selAns\n        );\n      }\n    }\n  };\n  const answeredValue = () => {\n    let answer = props.available_answers.find(\n      (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n    );\n    let checkB: QuestionAnswerInterface | undefined = undefined;\n    checkB =\n      answer === undefined\n        ? undefined\n        : answer.answers.find(\n            (tes) =>\n              tes.reference ===\n              props.selectedQuestionAnswer.selectedAns.reference\n          );\n    return answer !== undefined && checkB !== undefined\n      ? checkB.answer.length !== 0 && checkB.answer[0].value\n      : \"\";\n  };\n\n  useEffect(() => {\n    let test = props.available_answers.find(\n      (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n    );\n    if (\n      test === undefined ||\n      (test !== undefined && test.answers[0].answer.length === 0)\n    ) {\n      if (\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.selectedQuestionAnswer !== undefined &&\n        props.selectedQuestionAnswer.question_id !== null\n      ) {\n        props.selectedQuestionAnswer.question !== undefined &&\n          props.answerQuestionFn({\n            question_id: props.selectedQuestionAnswer.question_id,\n            status: true,\n            answers: [\n              {\n                _id: props.selectedQuestionAnswer.selectedAns._id,\n                reference: props.selectedQuestionAnswer.selectedAns.reference,\n                answer: [\n                  {\n                    id: props.selectedQuestionAnswer.answers[0].id,\n                    value: \"\",\n                    status: props.selectedQuestionAnswer.answers[0].status,\n                  },\n                ],\n              },\n            ],\n          });\n      }\n    }\n  }, [props]);\n  return (\n    <div className=\"\">\n      {props.selectedQuestionAnswer !== null &&\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.selectedQuestionAnswer.answers.map((item, i) => (\n          <div\n            key={i + 1}\n            className={`-mx-2 -my-2 flex flex-col justify-left rounded cursor-pointer`}\n          >\n            <textarea\n              onChange={(e) => {\n                addAnswer(\n                  {\n                    id: item.id,\n                    value: e.target.value,\n                    status: item.status,\n                  },\n                  props.selectedQuestionAnswer.question_id\n                );\n              }}\n              value={answeredValue()}\n              className={`px-3 py-2 rounded focus:outline-none focus:border-none ${\n                checkAnswer(item) === true\n                  ? \"border-2 text-blue-600 font-bold bg-white border-blue-600\"\n                  : \"border text-gray-700 border-gray-500 bg-gray-50\"\n              }`}\n              style={{ minHeight: \"300px\" }}\n            ></textarea>\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default Essay;\n","import React from \"react\";\nimport { MdArrowBack, MdRadioButtonUnchecked } from \"react-icons/md\";\nimport { RiCheckboxCircleFill } from \"react-icons/ri\";\nimport {\n  MatchingQuestionAnswerInterface,\n  QuestionLanguage,\n} from \"../../../../interfaces\";\n\ninterface MatchingSelectProps {\n  selectedAnswer: MatchingQuestionAnswerInterface;\n  selectedStatus: string | null;\n  selectedQuestionAnswer: {\n    question_id: string;\n    answers: MatchingQuestionAnswerInterface[];\n    shuffledAnswers: MatchingQuestionAnswerInterface[];\n  };\n  checkAnswer: (item: MatchingQuestionAnswerInterface) => boolean;\n  addAnswer: (\n    item: MatchingQuestionAnswerInterface,\n    question_id: string | null\n  ) => void;\n  closeWindow: (status: boolean) => void;\n  findWord: (lang: QuestionLanguage, status: string | false) => string;\n  selectedLanguage: QuestionLanguage;\n  checkIfSelected: (x: string) => any;\n}\n\nconst MatchingSelect = (props: MatchingSelectProps) => {\n  return (\n    // <div className=\"\">\n    <div className=\"bg-gray-200 rounded-b animate__animated animate__fadeInUp animate__faster -mx-2 mt-2\">\n      <div className=\"text-lg font-bold px-3 pt-2 flex flex-row items-center justify-between\">\n        <div className=\"flex flex-row items-center gap-3\">\n          <div\n            title=\"Click to close this window\"\n            onClick={() => props.closeWindow(false)}\n            className=\"h-10 w-10 text-center bg-gray-50 border border-white hover:border-blue-400 text-gray-900 rounded-full flex items-center justify-center cursor-pointer hover:bg-blue-100 hover:text-blue-700\"\n          >\n            <MdArrowBack className=\"text-2xl\" />\n          </div>\n          <span className=\"text-gray-800\">Choose correct matching</span>\n        </div>\n      </div>\n      <div className=\"bg-gray-200 p-2 mx-0\">\n        {props.selectedQuestionAnswer.shuffledAnswers.map((item, i) => (\n          <div\n            key={i + 1}\n            onClick={() => {\n              props.addAnswer(\n                {\n                  id: props.selectedAnswer.id,\n                  value: props.selectedAnswer.value,\n                  status: item.status,\n                },\n                props.selectedQuestionAnswer.question_id\n              );\n              props.closeWindow(false);\n            }}\n            className={`${\n              item.status ===\n              props.findWord(\n                props.selectedLanguage,\n                props.checkIfSelected(props.selectedAnswer.id)\n              )\n                ? \"border-2 border-white bg-blue-100 font-bold text-blue-700\"\n                : \"border text-gray-500 hover:text-gray-900 hover:font-extrabold\"\n            } cursor-pointer rounded bg-white hover:bg-blue-50 hover:border-white p-3 mb-2 flex flex-row items-center gap-3`}\n          >\n            <div>\n              {item.status ===\n              props.findWord(\n                props.selectedLanguage,\n                props.checkIfSelected(props.selectedAnswer.id)\n              ) ? (\n                <RiCheckboxCircleFill className=\"text-3xl text-blue-600\" />\n              ) : (\n                <MdRadioButtonUnchecked className=\"text-3xl\" />\n              )}\n            </div>\n            <div dangerouslySetInnerHTML={{ __html: item.status }}></div>\n          </div>\n        ))}\n      </div>\n    </div>\n    // </div>\n  );\n};\n\nexport default MatchingSelect;\n","import React, { useEffect, useState } from \"react\";\nimport { BsFillCaretRightFill } from \"react-icons/bs\";\nimport { QuestionAnswersStore } from \"../../../../actions\";\nimport { CandidateExam } from \"../../../../interfaces/exam\";\nimport {\n  MatchingQuestionAnswerInterface,\n  MatchingStatuses,\n  QuestionAnswerInterface,\n  QuestionInterface,\n  QuestionItemInterface,\n  QuestionLanguage,\n  QuestionLanguages,\n} from \"../../../../interfaces/question\";\nimport MatchingSelect from \"./MatchingSelect\";\nimport { questionTypeElementsType } from \"@mastrecruit/common\";\n\ninterface MatchingProps {\n  selectedExam: CandidateExam | null;\n  selectedLanguage: QuestionLanguage;\n  type: questionTypeElementsType | null;\n  available_answers: QuestionAnswersStore[];\n  selectedQuestionAnswer: {\n    question_id: string | null;\n    question: QuestionItemInterface | undefined;\n    answers: MatchingQuestionAnswerInterface[] | undefined;\n    shuffledAnswers: MatchingQuestionAnswerInterface[] | undefined;\n    selectedAns: QuestionAnswerInterface;\n  };\n  answerQuestionFn: (answer: QuestionAnswersStore) => void;\n}\n\nconst Matching = (props: MatchingProps) => {\n  const [displayWindow, setDisplayWindow] = useState(false);\n  const [selectedAnswer, setSelectedAnswer] =\n    useState<MatchingQuestionAnswerInterface | null>(null);\n  const addAnswerItemFn = (\n    newAnswers: MatchingQuestionAnswerInterface[],\n    questionAnswer: QuestionAnswerInterface\n  ) => {\n    if (props.selectedQuestionAnswer.question_id !== null) {\n      props.answerQuestionFn({\n        question_id: props.selectedQuestionAnswer.question_id,\n        status: false,\n        answers: [\n          {\n            _id: questionAnswer._id,\n            reference: questionAnswer.reference,\n            answer: newAnswers,\n          },\n        ],\n      });\n    }\n  };\n\n  const checkAnswer = (item: MatchingQuestionAnswerInterface): boolean => {\n    let res = false;\n    if (props.available_answers.length > 0) {\n      let check = props.available_answers.find(\n        (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n      );\n      if (check !== undefined) {\n        let checkA = check.answers.find(\n          (tes) =>\n            tes.reference === props.selectedQuestionAnswer.selectedAns.reference\n        );\n        if (checkA !== undefined) {\n          let x = checkA.answer.find((itm) => itm.id === item.id);\n          if (x !== undefined && x.status !== \"\") {\n            res = true;\n          }\n        }\n      }\n    }\n    return res;\n  };\n\n  const addAnswer = (\n    item: MatchingQuestionAnswerInterface,\n    question_id: string | null\n  ) => {\n    let oldAnswers = props.available_answers.find(\n      (itm) => itm.question_id === question_id\n    );\n    if (oldAnswers !== undefined) {\n      let selAns = oldAnswers.answers.find(\n        (tester) =>\n          tester.reference ===\n          props.selectedQuestionAnswer.selectedAns.reference\n      );\n      if (selAns !== undefined) {\n        let newAnswers: MatchingQuestionAnswerInterface[] = [];\n        for (let x of selAns.answer) {\n          if (x.id === item.id) {\n            newAnswers = [\n              ...newAnswers,\n              {\n                id: item.id,\n                value: item.value,\n                status: item.status,\n              },\n            ];\n          } else {\n            newAnswers = [...newAnswers, x];\n          }\n        }\n        addAnswerItemFn(newAnswers, selAns);\n      }\n    }\n  };\n\n  useEffect(() => {\n    let test = props.available_answers.find(\n      (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n    );\n    if (\n      test === undefined ||\n      (test !== undefined && test.answers[0].answer.length === 0)\n    ) {\n      if (\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.selectedQuestionAnswer !== undefined &&\n        props.selectedQuestionAnswer.question_id !== null\n      ) {\n        let newAnswers: MatchingQuestionAnswerInterface[] = [];\n        for (let a of props.selectedQuestionAnswer.answers) {\n          newAnswers = [\n            ...newAnswers,\n            {\n              id: a.id,\n              value: a.value,\n              status: \"\",\n            },\n          ];\n        }\n        props.selectedQuestionAnswer.question !== undefined &&\n          props.answerQuestionFn({\n            question_id: props.selectedQuestionAnswer.question_id,\n            status: true,\n            answers: [\n              {\n                _id: props.selectedQuestionAnswer.selectedAns._id,\n                reference: props.selectedQuestionAnswer.selectedAns.reference,\n                answer: newAnswers,\n              },\n            ],\n          });\n      }\n    }\n  }, [props]);\n\n  const checkAnswerStatus = (\n    selectedQuestionId: string,\n    selectedLang: QuestionLanguage,\n    ansi: MatchingQuestionAnswerInterface\n  ) => {\n    if (props.selectedExam !== null) {\n      let testing = props.selectedExam.questions.find(\n        (test) => test.question_id === selectedQuestionId\n      );\n      if (testing !== undefined) {\n        for (let lang of QuestionLanguages) {\n          let testLang = testing.question.find(\n            (itm) => itm.language === lang.key\n          );\n          if (testLang !== undefined) {\n            let checkE = testLang.answers.find(\n              (tes) =>\n                tes.reference ===\n                props.selectedQuestionAnswer.selectedAns.reference\n            );\n            if (checkE !== undefined) {\n              let testAnswerLang = checkE.answer.find(\n                (it) => it.status.toString() === ansi.status\n              );\n              if (testAnswerLang !== undefined) {\n                return testAnswerLang.status.toString();\n              }\n            }\n          }\n        }\n      }\n    }\n    return false;\n  };\n\n  const checkIfSelected = (x: string) => {\n    let temp = props.available_answers.find(\n      (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n    );\n    if (temp !== undefined) {\n      let selAns = temp.answers.find(\n        (tester) =>\n          tester.reference ===\n          props.selectedQuestionAnswer.selectedAns.reference\n      );\n      if (selAns !== undefined) {\n        let ans = selAns.answer.find((itm) => itm.id === x);\n        if (ans !== undefined && ans.status !== \"\") {\n          if (props.selectedQuestionAnswer.question_id !== null) {\n            return checkAnswerStatus(\n              props.selectedQuestionAnswer.question_id,\n              props.selectedLanguage,\n              ans\n            );\n          }\n        }\n      }\n    }\n    return false;\n  };\n\n  const ReturnMatchingStatus = (): MatchingStatuses[] => {\n    let res: MatchingStatuses[] = [];\n    let question: QuestionInterface | undefined =\n      props.selectedExam?.questions.find(\n        (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n      );\n    if (question !== undefined) {\n      for (let item of question.question) {\n        let selAns = item.answers.find(\n          (tester) =>\n            tester.reference ===\n            props.selectedQuestionAnswer.selectedAns.reference\n        );\n        if (selAns !== undefined) {\n          for (let ans of selAns.answer) {\n            res = [\n              ...res,\n              {\n                id: ans.id,\n                lang: item.language,\n                status: ans.status.toString(),\n              },\n            ];\n          }\n        } else {\n          break;\n        }\n      }\n    }\n    return res;\n  };\n\n  const findWord = (lang: QuestionLanguage, status: string | false) => {\n    let res: string = \"\";\n    let arr: MatchingStatuses[] = ReturnMatchingStatus();\n    if (arr.length > 0) {\n      let item = arr.find((itm) => itm.status === status)?.id;\n      if (item !== undefined) {\n        let newItem = arr.find(\n          (itm) => itm.id === item && itm.lang === lang\n        )?.status;\n        if (newItem !== undefined) {\n          res = newItem;\n        }\n      }\n    }\n    return res;\n  };\n\n  const translateClass = \" transform rotate-90\";\n\n  return (\n    <div className=\"\">\n      {props.selectedQuestionAnswer !== null &&\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.selectedQuestionAnswer.answers.map((item, i) => (\n          <div\n            key={i + 1}\n            className={`${\n              checkAnswer(item) === true\n                ? \"px-2 mb-2 py-2 md:py-0\"\n                : \"px-2 py-2\"\n            } ${checkAnswer(item) === true ? \"border rounded\" : \"border-b\"} ${\n              checkAnswer(item) === true ? \"text-blue-600 border-blue-200\" : \"\"\n            } grid grid-cols-12`}\n          >\n            <div\n              className={`col-span-12 ${\n                checkAnswer(item) === true ? \"md:col-span-6\" : \"md:col-span-8\"\n              } flex flex-row items-center gap-2`}\n            >\n              {checkAnswer(item) === true ? (\n                <div className=\"flex items-center justify-center w-8 h-8 bg-blue-100 text-blue-600 text-xl font-normal rounded-full\">\n                  {i + 1}\n                </div>\n              ) : (\n                <div className=\"flex items-center justify-center w-8 h-8 bg-gray-100 text-gray-500 text-xl font-normal rounded-full\">\n                  {i + 1}\n                </div>\n              )}\n              <div\n                dangerouslySetInnerHTML={{ __html: item.value }}\n                className={`ml-2 ${\n                  selectedAnswer !== null &&\n                  selectedAnswer.id === item.id &&\n                  displayWindow === true\n                    ? \"text-blue-600 font-extrabold\"\n                    : \"text-gray-600\"\n                }`}\n              ></div>\n            </div>\n            {checkAnswer(item) === true ? (\n              <div\n                title=\"Click to change selected choice\"\n                onClick={() => {\n                  setSelectedAnswer(item);\n                  setDisplayWindow(!displayWindow);\n                }}\n                className=\"flex flex-row items-center gap-2 col-span-12 md:col-span-6 cursor-pointer md:hover:bg-blue-50 py-4 pr-2 -mr-2 rounded-r md:pl-4 md:border-l border-blue-200\"\n              >\n                <BsFillCaretRightFill\n                  className={`text-xl transition transform${\n                    selectedAnswer !== null &&\n                    selectedAnswer.id === item.id &&\n                    displayWindow === true\n                      ? translateClass\n                      : \"\"\n                  }`}\n                />\n                <div\n                  dangerouslySetInnerHTML={{\n                    __html: findWord(\n                      props.selectedLanguage,\n                      checkIfSelected(item.id)\n                    ),\n                  }}\n                ></div>\n              </div>\n            ) : (\n              <div className=\"col-span-12 md:col-span-4 flex items-center md:justify-start mt-2 md:mt-0\">\n                <div\n                  onClick={() => {\n                    setSelectedAnswer(item);\n                    setDisplayWindow(!displayWindow);\n                  }}\n                  title={\n                    checkAnswer(item) === true\n                      ? \"Click to change selected choice\"\n                      : \"Click to choose correct matching\"\n                  }\n                  className={`btn text-sm ${\n                    checkAnswer(item) === true ||\n                    (selectedAnswer !== null &&\n                      selectedAnswer.id === item.id &&\n                      displayWindow === true)\n                      ? \"bg-blue-50\"\n                      : \"bg-yellow-100 hover:bg-yellow-200\"\n                  } text-center cursor-pointer`}\n                >\n                  {checkAnswer(item) === true\n                    ? findWord(props.selectedLanguage, checkIfSelected(item.id))\n                    : selectedAnswer !== null &&\n                      selectedAnswer.id === item.id &&\n                      displayWindow === true\n                    ? \"Close matching list\"\n                    : \"Choose matching\"}\n                </div>\n              </div>\n            )}\n            <div className=\"col-span-12 md:col-span-12\">\n              {props.selectedQuestionAnswer.question_id !== null &&\n                props.selectedQuestionAnswer.answers !== undefined &&\n                props.selectedQuestionAnswer.shuffledAnswers !== undefined &&\n                selectedAnswer !== null &&\n                displayWindow === true &&\n                selectedAnswer.id === item.id && (\n                  <MatchingSelect\n                    selectedAnswer={selectedAnswer}\n                    selectedStatus={null}\n                    selectedQuestionAnswer={{\n                      question_id: props.selectedQuestionAnswer.question_id,\n                      answers: props.selectedQuestionAnswer.answers,\n                      shuffledAnswers:\n                        props.selectedQuestionAnswer.shuffledAnswers,\n                    }}\n                    checkAnswer={checkAnswer}\n                    addAnswer={addAnswer}\n                    closeWindow={setDisplayWindow}\n                    findWord={findWord}\n                    selectedLanguage={props.selectedLanguage}\n                    checkIfSelected={checkIfSelected}\n                  />\n                )}\n            </div>\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default Matching;\n","import React, { Component, Fragment, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { BiArrowBack } from \"react-icons/bi\";\nimport { BsFillFileEarmarkTextFill } from \"react-icons/bs\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment-timezone\";\nimport { TimeZone } from \"../../utils/app.config\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  Auth,\n  CandidateApplicationsStoreInterface,\n  candidateExamStoreInterface,\n  FC_Access,\n  FC_GetProfileDetails,\n  LoadCandidateApplications,\n  setSelectedCandidateExam,\n  setSelectedCourse,\n  setSelectedPosition,\n  InitializeExamDetails,\n  loadExamsDone,\n  AddUserApplication,\n  loadApplicationPeriods,\n  applicationPeriodsStoreInterface,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { UserExamStatus, UserExamsListInterface } from \"../../interfaces/exam\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { DATE, getMinutesFromTwoDates } from \"../../utils/functions\";\nimport { CountDown } from \"../../components/CountDown/CountDown\";\nimport { ExamTimeStatus, validateExamDate } from \"../../utils/question_bank\";\nimport { course, PositionAPI, PositionAPICourse } from \"../../interfaces\";\nimport {\n  ApplicationStates,\n  GetApplicationsAPI,\n} from \"../../interfaces/application\";\nimport { UserAccessList } from \"../../utils/auth_access\";\nimport { MdClose } from \"react-icons/md\";\nimport ChooseExamCenter, {\n  LocationTableInterface,\n} from \"../Application/ExamCenter/ChooseExamCenter\";\nimport { sentExamInterface } from \"../Application/ExamCenter/ExamCenter\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport CandidateAnswersDetails from \"../../components/AnswersDetails/CandidateAnswersDetails\";\n\nexport const compareWithToday = (tooday: moment.Moment, date: string) => {\n  const myDate = DATE(date, \"MM/DD/YYYY\");\n  let todayConverted =\n    (tooday.get(\"month\") < 9 ? \"0\" : \"\") +\n    (tooday.get(\"month\") + 1).toString() +\n    \"/\" +\n    tooday.get(\"date\") +\n    \"/\" +\n    tooday.get(\"year\");\n  if (new Date(myDate).getTime() < new Date(todayConverted).getTime()) {\n    return true;\n  }\n  return false;\n};\n\nexport interface ExamDoneDetailsAnswers {\n  course: string;\n  course_name: string;\n  discription: string;\n  termes: string;\n  rules: {\n    right_click_enabled: boolean;\n    copy_enabled: boolean;\n    paste_enabled: boolean;\n    stop_candidate_when_comeback: boolean;\n    allow_to_leave_browser: boolean;\n  };\n  period: string;\n  exam_date: string;\n}\n\ninterface NotPreparedExam {\n  course: string;\n  course_name: string;\n  course_code: string;\n  position: string;\n}\ninterface changeLocProps {\n  changeLocation: () => void;\n}\ninterface CandidateExamsProps {\n  FC_GetProfileDetails: Function;\n  auth: Auth;\n  candidateExam: candidateExamStoreInterface;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  LoadCandidateApplications: (\n    user_id: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  setSelectedCandidateExam: (exam_id: string) => void;\n  setSelectedCourse: (course: course | null) => void;\n  setSelectedPosition: (position: PositionAPI) => void;\n  InitializeExamDetails: (\n    periodId: string,\n    courseId: string,\n    district_id: string,\n    center_id: string,\n    room_id: string,\n    position_id: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  loadExamsDone: (\n    periodId: string,\n    userId: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  AddUserApplication: (application: GetApplicationsAPI) => void;\n  periods: applicationPeriodsStoreInterface;\n  loadApplicationPeriods: (callback: (loading: boolean) => void) => void;\n}\n\nconst ChangeLocationComponent = (props: changeLocProps): JSX.Element => {\n  const [display, setDisplay] = useState<boolean>(true);\n  if (display === false) {\n    return <div></div>;\n  }\n  return (\n    <div className=\"absolute right-2 left-2 md:right-1/4 md:left-1/4 lg:left-1/2 lg:right-auto bg-yellow-50 shadow-xl rounded py-1 px-1 flex flex-row justify-between items-center gap-2 text-yellow-800 -mt-5 lg:-mt-8\">\n      <div className=\"flex flex-row gap-2 items-center justify-between w-full pl-1\">\n        <span className=\"font-bold\">You are advised to change location</span>\n        <div\n          onClick={props.changeLocation}\n          className=\"px-2 py-1 rounded bg-blue-100 text-blue-600 w-max cursor-pointer\"\n        >\n          Change\n        </div>\n      </div>\n      <div\n        onClick={() => setDisplay(false)}\n        className=\"bg-yellow-100 text-yellow-600 rounded-full flex items-center justify-center p-1 h-8 w-8 cursor-pointer\"\n      >\n        <MdClose className=\"text-4xl\" />\n      </div>\n    </div>\n  );\n};\n\ninterface candidatePendingExamsList {\n  preparedExam: UserExamsListInterface[];\n  notPreparedExam: NotPreparedExam[];\n}\ninterface CandidateExamsState {\n  loading: boolean;\n  loadingExamsDone: boolean;\n  candidateExams: candidatePendingExamsList | null;\n  activeExams: string[];\n  candidateApplications: GetApplicationsAPI[] | null;\n  selectedCourse: course | null;\n  centersModal: boolean;\n  maxExamModal: boolean;\n  selectedPosition: string;\n  successMessage: string;\n  selectedExam: ExamDoneDetailsAnswers | null;\n}\n\nexport class _CandidateExams extends Component<\n  CandidateExamsProps,\n  CandidateExamsState\n> {\n  constructor(props: CandidateExamsProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      loadingExamsDone: false,\n      candidateExams: null,\n      activeExams: [],\n      candidateApplications: null,\n      selectedCourse: null,\n      centersModal: false,\n      maxExamModal: false,\n      selectedPosition: \"\",\n      successMessage: \"\",\n      selectedExam: null,\n    };\n  }\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  };\n  setloadingExamsDone = (status: boolean) => {\n    this.setState({ loadingExamsDone: status });\n  };\n  loadCandidateExams = async (user: string, period: string) => {\n    this.setLoading(true);\n    setAxiosToken();\n    try {\n      const res = await axios.get<candidatePendingExamsList>(\n        `${API.QBank}/exam/user/${user}/${period}`\n      );\n      this.setState({ candidateExams: res.data });\n      // console.log(\"My exams list: \", res.data);\n    } catch (error: any) {\n      console.log(\"My exams error: \", { ...error });\n      alert(errorToText(error));\n    }\n    this.setLoading(false);\n  };\n  loadUserProfileDetails = () => {\n    this.setState({\n      loading: true,\n    });\n    this.props.FC_GetProfileDetails(\n      this.props.auth.user.user_id,\n      (status: boolean, msg: string) => {\n        if (status === true) {\n          this.setState({\n            loading: false,\n          });\n        } else {\n          this.setState({\n            loading: false,\n          });\n        }\n      }\n    );\n    this.setState({\n      loading: false,\n    });\n  };\n\n  InitializationFn = (application: GetApplicationsAPI) => {\n    if (this.props.candidateExam.user_exams_done.length === 0) {\n      this.props.loadExamsDone(\n        application.application_session.session_plan_id,\n        this.props.auth.user.user_id,\n        this.setloadingExamsDone\n      );\n    }\n    for (let course of application.position.courses) {\n      let testDone = this.props.candidateExam.user_exams_temp.find(\n        (itm) => itm.course === course.course_id\n      );\n      if (testDone === undefined) {\n        let center_id = application.exams.find(\n          (itm) => itm.course_id === course.course_id\n        );\n        if (center_id !== undefined) {\n          this.props.InitializeExamDetails(\n            application.application_session.session_plan_id,\n            course.course_id,\n            center_id.district_id,\n            center_id.center_id,\n            center_id.room_id,\n            application.position.position_id,\n            this.setLoading\n          );\n        }\n      }\n    }\n  };\n  loadUserApplications = async () => {\n    this.setLoading(true);\n    try {\n      const res = await axios.get<GetApplicationsAPI[]>(\n        `${API.APPLICATION}/application/${this.props.auth.user.user_id}`\n      );\n      if (res.status === 200) {\n        this.setState({ candidateApplications: res.data });\n        for (let application of res.data) {\n          this.InitializationFn(application);\n        }\n        if (\n          this.props.candidateApplications.candidate_applications === null ||\n          this.props.candidateApplications.candidate_applications.length === 0\n        ) {\n          for (let application of res.data) {\n            this.props.AddUserApplication(application);\n          }\n        }\n      }\n    } catch (error: any) {\n      console.log(\"Appl ex Err: \", { ...error });\n    }\n    this.setLoading(false);\n  };\n  findLocation = (position_id: string, course_id: string) => {\n    if (this.state.candidateApplications !== null) {\n      const test = this.state.candidateApplications.find(\n        (item) =>\n          item.position.position_id === position_id &&\n          item.exams.filter((itm) => itm.course_id === course_id)\n      );\n      if (test !== undefined) {\n        let course = test.exams.find((itm) => itm.course_id === course_id);\n        if (course !== undefined) {\n          return course;\n        }\n      }\n    }\n    return null;\n  };\n  updateLocation = async (\n    application_id: string,\n    exams: sentExamInterface[]\n  ) => {\n    this.setState({ loading: true });\n    for (let i in exams) {\n      try {\n        const res = await axios.post(\n          `${API.APPLICATION}/application/updatemissed`,\n          {\n            application_id: application_id,\n            exams: exams[i],\n          }\n        );\n        if (res.status === 200) {\n          this.setState({\n            selectedCourse: null,\n            centersModal: false,\n            maxExamModal: false,\n            selectedPosition: \"\",\n            successMessage: \"Location updated successfully!\",\n          });\n          this.loadUserApplications();\n        }\n      } catch (error: any) {\n        console.log(\"Update loc err: \", { ...error });\n      }\n    }\n  };\n  updateLocationFunction = (exams: sentExamInterface[]) => {\n    if (this.state.candidateApplications !== null) {\n      let application = this.state.candidateApplications.find(\n        (item) => item.position.position_id === this.state.selectedPosition\n      );\n      if (application !== undefined) {\n        this.updateLocation(application.application_id, exams);\n      } else {\n        alert(\"Invalid application\");\n      }\n    } else {\n      alert(\"Missing application\");\n    }\n  };\n  addLocation = (\n    course_id: string,\n    course_name: string,\n    course_code: string,\n    location: LocationTableInterface,\n    exam_id: string\n  ) => {\n    return this.updateLocationFunction([\n      {\n        course_id: course_id,\n        proctoring_type: \"Center\",\n        center_id: location.center_id,\n        district_id: location.district_id,\n      },\n    ]);\n  };\n  componentDidMount = () => {\n    this.props.loadApplicationPeriods(this.setLoading);\n\n    if (\n      this.props.auth.user.sex === \"\" ||\n      this.props.auth.user.sex.length === 0\n    ) {\n      this.loadUserProfileDetails();\n    }\n    this.loadUserApplications();\n    if (this.props.auth.application_session !== null) {\n      this.loadCandidateExams(\n        this.props.auth.user.user_id,\n        this.props.auth.application_session.session_plan_id\n      );\n    }\n    if (this.props.auth.application_session !== null) {\n      this.props.loadExamsDone(\n        this.props.auth.application_session.session_plan_id,\n        this.props.auth.user.user_id,\n        this.setloadingExamsDone\n      );\n    }\n  };\n\n  removeDuplicatesExams = (\n    exams: UserExamsListInterface[]\n  ): UserExamsListInterface[] => {\n    let temp: UserExamsListInterface[] = [];\n    if (this.state.candidateApplications !== null) {\n      for (let item of exams) {\n        if (\n          this.state.candidateApplications.find(\n            (test) => test.position.position_id === item.position\n          ) !== undefined\n        ) {\n          if (temp.find((itm) => itm._id === item._id) === undefined) {\n            temp = [...temp, item];\n          }\n        }\n      }\n    }\n    return temp;\n  };\n\n  removeDuplicatesNotPreparedExams = (\n    exams: NotPreparedExam[]\n  ): NotPreparedExam[] => {\n    let temp: NotPreparedExam[] = [];\n    if (this.state.candidateApplications !== null) {\n      for (let item of exams) {\n        if (\n          this.state.candidateApplications.find(\n            (test) => test.position.position_id === item.position\n          ) !== undefined\n        ) {\n          if (temp.find((itm) => itm.course === item.course) === undefined) {\n            temp = [...temp, item];\n          }\n        }\n      }\n    }\n    return temp;\n  };\n  setTimeOut = (exam_id: string) => {\n    let temps: string[] = this.state.activeExams;\n    this.setState({\n      activeExams: [...temps, exam_id],\n    });\n  };\n  selectApplication = (\n    applications: GetApplicationsAPI[] | null,\n    position_id: string,\n    course_id: string\n  ): GetApplicationsAPI | null => {\n    if (applications !== null) {\n      let temp = applications.find(\n        (item) => item.position.position_id === position_id\n      );\n      if (temp !== undefined) {\n        if (\n          temp.position.courses.find((itm) => itm.course_id === course_id) !==\n          undefined\n        ) {\n          return temp;\n        }\n      }\n    }\n    return null;\n  };\n  setMaxExamModal = (status: boolean) => {\n    this.setState({ maxExamModal: status });\n  };\n\n  changeLocation = (item: PositionAPICourse) => {\n    this.setState({ selectedCourse: item, centersModal: true });\n    this.setMaxExamModal(true);\n  };\n\n  closeModal = () => {\n    this.setState({ centersModal: false });\n    this.setMaxExamModal(false);\n  };\n\n  render() {\n    const today = moment().tz(TimeZone);\n    // console.log(\"TODAY: \", today.get(\"days\"));\n    if (!FC_Access(this.props.auth, UserAccessList.MY_APPLICATION).view) {\n      return <Redirect to=\"/\" />;\n    }\n    if (this.props.candidateExam.selected_exam_id !== null) {\n      return <Redirect to=\"/do-exam\" />;\n    }\n    return (\n      <Fragment>\n        {this.state.selectedCourse === null ? (\n          <div className=\"mt-2 -ml-2 mr-3 pb-5\">\n            <div className=\"rounded mt-2\">\n              <div className=\"flex flex-row items-center gap-3\">\n                <Link\n                  to=\"/apps-page\"\n                  title=\"Back to menus\"\n                  className=\"bg-white group hover:bg-blue-50 h-10 w-10 flex items-center justify-center rounded-full cursor-pointer\"\n                >\n                  <BiArrowBack className=\"text-3xl text-blue-600 group-hover:text-blue-800\" />\n                </Link>\n                <div className=\"flex flex-col\">\n                  <span className=\"font-extrabold text-3xl\">My exams</span>\n                  <span className=\"text-gray-600 text-sm\">\n                    List of exams that are assigned to me\n                  </span>\n                </div>\n              </div>\n            </div>\n            {this.state.successMessage !== \"\" && (\n              <div\n                title=\"Click to close the message\"\n                onClick={() => this.setState({ successMessage: \"\" })}\n                className=\"animate__animated animate__zoomIn px-3 py-2 bg-green-500 text-white my-2 rounded cursor-pointer\"\n              >\n                {this.state.successMessage}\n              </div>\n            )}\n            {this.state.loading === true ||\n            this.state.loadingExamsDone === true ||\n            this.state.candidateExams === null ||\n            this.state.candidateApplications == null ? (\n              <div className=\"px-4 pt-5 pb-1 bg-white mt-2 rounded\">\n                <Loading />\n              </div>\n            ) : this.removeDuplicatesExams(\n                this.state.candidateExams.preparedExam\n              ).length === 0 ? (\n              <div className=\"bg-gray-50 rounded px-4 py-5 text-center font-bold mt-2 text-2xl text-gray-400\">\n                No exams found\n              </div>\n            ) : (\n              this.removeDuplicatesExams(\n                this.state.candidateExams.preparedExam\n              ).map((item, i) => (\n                <div key={i + 1} className=\"my-2 rounded bg-white p-2 group\">\n                  <div className=\"flex flex-col md:flex-row items-center justify-between\">\n                    <div className=\"flex flex-col md:flex-row items-center gap-2 w-full\">\n                      <div>\n                        <BsFillFileEarmarkTextFill className=\"hidden md:block text-4xl text-gray-300 group-hover:text-blue-600\" />\n                      </div>\n                      <div className=\"flex flex-col w-full\">\n                        <span className=\"text-base text-gray-800 font-extrabold group-hover:text-blue-600\">\n                          {item.course_name}\n                        </span>\n                        <div className=\"flex flex-row items-center justify-start w-full gap-3 -mt-1\">\n                          <div className=\"text-sm text-gray-500 group-hover:text-blue-600\">\n                            Date: {DATE(item.exam_date, \"DD/MM/YYYY\")}\n                          </div>\n                          <div className=\"hidden md:block text-sm bg-gray-100 underline text-gray-500  font-bold rounded-full px-2\">\n                            Start time: {item.start_time}\n                          </div>\n                          <div className=\"hidden md:block text-sm bg-blue-100 text-blue-900  font-bold rounded-full px-2\">\n                            Status: {item.user_status}\n                          </div>\n                        </div>\n                        {this.findLocation(item.position, item.course) !==\n                          null && (\n                          <div className=\"flex flex-row items-center gap-2 mt-2\">\n                            <div>\n                              Exam center:{\" \"}\n                              <span className=\"text-sm bg-gray-100 text-blue-900 group-hover:text-blue-600 font-bold rounded-full px-2 w-max\">\n                                {\n                                  this.findLocation(item.position, item.course)\n                                    ?.center_name\n                                }\n                              </span>\n                            </div>\n                            <div className=\"w-max flex flex-col md:flex-row\">\n                              Room number:{\" \"}\n                              {this.findLocation(item.position, item.course)\n                                ?.room_number === 0 ? (\n                                <span className=\"text-sm bg-yellow-100 text-yellow-900 group-hover:text-yellow-800 font-bold rounded-full px-2 w-max flex items-center justify-center\">\n                                  Waiting room\n                                </span>\n                              ) : (\n                                <span className=\"text-sm bg-gray-100 text-blue-900 group-hover:text-blue-600 font-bold rounded-full px-2 w-max\">\n                                  {\n                                    this.findLocation(\n                                      item.position,\n                                      item.course\n                                    )?.room_number\n                                  }\n                                </span>\n                              )}\n                              {/* Change loc */}\n                              {this.findLocation(item.position, item.course)\n                                ?.room_number === 0 &&\n                                validateExamDate(\n                                  item.exam_date,\n                                  item.start_time,\n                                  item.end_time\n                                ) !== ExamTimeStatus.Expired && (\n                                  <ChangeLocationComponent\n                                    changeLocation={() => {\n                                      this.setState({\n                                        selectedCourse: {\n                                          course_name: item.course_name,\n                                          course_code: item.course_code,\n                                          description: item.course_name,\n                                          school_levels: [],\n                                          course_id: item.course,\n                                        },\n                                        selectedPosition: item.position,\n                                        centersModal: true,\n                                      });\n                                      this.setMaxExamModal(true);\n                                    }}\n                                  />\n                                )}\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                    <div className=\"lg:w-full flex flex-row items-center justify-end\">\n                      {this.state.activeExams.find(\n                        (itm) => itm === item._id\n                      ) !== undefined ||\n                      item.user_status === UserExamStatus.Editing ||\n                      item.user_status === UserExamStatus.Paused ? (\n                        validateExamDate(\n                          item.exam_date,\n                          item.start_time,\n                          item.end_time\n                        ) !== ExamTimeStatus.Expired ? (\n                          this.selectApplication(\n                            this.state.candidateApplications,\n                            item.position,\n                            item.course\n                          )?.application_status !==\n                          ApplicationStates.Shortlisted ? (\n                            <div className=\"text-yellow-800 font-extrabold text-base bg-yellow-100 rounded px-3 py-1 cursor-not-allowed\">\n                              Not shortlisted\n                            </div>\n                          ) : (\n                            <div\n                              onClick={() => {\n                                let application = this.selectApplication(\n                                  this.state.candidateApplications,\n                                  item.position,\n                                  item.course\n                                );\n                                if (application !== null) {\n                                  if (\n                                    application.application_status ===\n                                    ApplicationStates.Shortlisted\n                                  ) {\n                                    // Select exam\n                                    this.props.setSelectedPosition(\n                                      application.position\n                                    );\n                                    this.props.setSelectedCourse(\n                                      application.position.courses.find(\n                                        (itm) => itm.course_id === item.course\n                                      )!\n                                    );\n                                    this.props.setSelectedCandidateExam(\n                                      item._id\n                                    );\n                                  } else {\n                                    alert(\n                                      \"Corresponding application is not shortlisted!\"\n                                    );\n                                  }\n                                } else {\n                                  alert(\"Invalid exam!\");\n                                }\n                              }}\n                              className={`${\n                                item.user_status === UserExamStatus.Editing ||\n                                item.user_status === UserExamStatus.Paused\n                                  ? \"bg-green-600 group-hover:bg-green-800\"\n                                  : \"bg-blue-600 group-hover:bg-blue-800\"\n                              } btn  text-white cursor-pointer w-max`}\n                            >\n                              {item.user_status === UserExamStatus.Editing\n                                ? \"Back to Exam\"\n                                : item.user_status === UserExamStatus.Paused\n                                ? \"Paused, back to exam\"\n                                : \"Start Exam\"}\n                            </div>\n                          )\n                        ) : item.user_status === UserExamStatus.Editing ||\n                          item.user_status === UserExamStatus.Done ||\n                          item.user_status === UserExamStatus.Paused ||\n                          item.user_status === UserExamStatus.Removed ? (\n                          <div className=\"text-blue-700 flex flex-col items-end justify-center w-max\">\n                            <span>Marks</span>\n                            <span className=\"text-2xl font-extrabold -mt-2\">\n                              {item.user_marks.toFixed(2)}%\n                            </span>\n                            <div\n                              onClick={() =>\n                                this.setState({\n                                  selectedExam: {\n                                    course: item.course,\n                                    course_name: item.course_name,\n                                    discription: item.discription,\n                                    termes: item.termes,\n                                    rules: item.rules,\n                                    period: item.period,\n                                    exam_date: item.exam_date,\n                                  },\n                                })\n                              }\n                              className=\"btn bg-blue-100 text-blue-700 cursor-pointer\"\n                            >\n                              Check details\n                            </div>\n                          </div>\n                        ) : (\n                          <div className=\"bg-yellow-100 text-yellow-700 font-extrabold text-base px-3 py-1 rounded-md w-max\">\n                            Expired\n                          </div>\n                        )\n                      ) : item.found === false ? (\n                        <div\n                          title=\"Please wait for the exam time\"\n                          className=\"text-lg lg:text-xl font-extrabold bg-green-100 text-green-700 px-3 py-1 rounded cursor-not-allowed w-max\"\n                        >\n                          <CountDown\n                            start_time={new Date(today.toString()).toString()}\n                            duration_min={getMinutesFromTwoDates(\n                              new Date(today.toString()),\n                              new Date(\n                                DATE(item.exam_date, \"MM/DD/YYYY\") +\n                                  \" \" +\n                                  item.start_time\n                              )\n                            )}\n                            timeout={() => this.setTimeOut(item._id)}\n                            returnString={true}\n                            labels={true}\n                            days\n                          />\n                        </div>\n                      ) : (\n                        <div className=\"text-blue-700 flex flex-col items-end justify-center w-max\">\n                          <span>Marks</span>\n                          <span className=\"text-2xl font-extrabold -mt-2\">\n                            {item.user_marks.toFixed(2)}%\n                          </span>\n                          <div\n                            onClick={() =>\n                              this.setState({\n                                selectedExam: {\n                                  course: item.course,\n                                  course_name: item.course_name,\n                                  discription: item.discription,\n                                  termes: item.termes,\n                                  rules: item.rules,\n                                  period: item.period,\n                                  exam_date: item.exam_date,\n                                },\n                              })\n                            }\n                            className=\"btn bg-blue-100 text-blue-700 cursor-pointer\"\n                          >\n                            Check details\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              ))\n            )}\n            {/* Not prepared exams */}\n            {this.state.candidateExams !== null &&\n              this.state.loading !== true &&\n              this.removeDuplicatesNotPreparedExams(\n                this.state.candidateExams.notPreparedExam\n              ).length > 0 &&\n              this.removeDuplicatesNotPreparedExams(\n                this.state.candidateExams.notPreparedExam\n              ).map((item, i) => (\n                <div\n                  key={i + 1}\n                  className=\"my-2 rounded bg-white p-2 py-3 group\"\n                >\n                  <div className=\"flex flex-col md:flex-row items-center justify-between\">\n                    <div className=\"flex flex-col md:flex-row items-center gap-2 w-full\">\n                      <div className=\"\">\n                        <BsFillFileEarmarkTextFill className=\"hidden md:block text-4xl text-gray-300 group-hover:text-blue-600\" />\n                      </div>\n                      <div className=\"flex flex-col\">\n                        <span className=\"text-base text-gray-600 font-bold group-hover:text-blue-600\">\n                          {item.course_name}\n                        </span>\n                        <div className=\"flex flex-row items-center gap-3 -mt-1\">\n                          {this.findLocation(item.position, item.course) !==\n                            null && (\n                            <div className=\"flex flex-row items-center gap-2 mt-2\">\n                              <div className=\"flex flex-col md:flex-row md:items-center\">\n                                Exam center:{\" \"}\n                                <span className=\"text-sm bg-gray-100 text-blue-900 group-hover:text-blue-600 font-bold rounded-full px-2 w-max\">\n                                  {\n                                    this.findLocation(\n                                      item.position,\n                                      item.course\n                                    )?.center_name\n                                  }\n                                </span>\n                              </div>\n                              <div className=\"w-max flex flex-col md:flex-row md:items-center\">\n                                Room number:{\" \"}\n                                {this.findLocation(item.position, item.course)\n                                  ?.room_number === 0 ? (\n                                  <span className=\"text-sm bg-yellow-100 text-yellow-900 group-hover:text-yellow-800 font-bold rounded-full px-2 w-max flex items-center justify-center\">\n                                    Waiting room\n                                  </span>\n                                ) : (\n                                  <span className=\"text-sm bg-gray-100 text-blue-900 group-hover:text-blue-600 font-bold rounded-full px-2 w-max\">\n                                    {\n                                      this.findLocation(\n                                        item.position,\n                                        item.course\n                                      )?.room_number\n                                    }\n                                  </span>\n                                )}\n                                {/* Change loc */}\n                                {this.findLocation(item.position, item.course)\n                                  ?.room_number === 0 && (\n                                  <ChangeLocationComponent\n                                    changeLocation={() => {\n                                      this.setState({\n                                        selectedCourse: {\n                                          course_name: item.course_name,\n                                          course_code: item.course_code,\n                                          description: item.course_name,\n                                          school_levels: [],\n                                          course_id: item.course,\n                                        },\n                                        selectedPosition: item.position,\n                                        centersModal: true,\n                                      });\n                                      this.setMaxExamModal(true);\n                                    }}\n                                  />\n                                )}\n                              </div>\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"bg-gray-100 text-gray-600 font-extrabold text-base px-3 py-1 rounded-md\">\n                      Not prepared\n                    </div>\n                  </div>\n                </div>\n              ))}\n          </div>\n        ) : this.state.loading === true ? (\n          <div className=\"px-4 pt-5 pb-1 bg-white mt-2 rounded\">\n            <Loading />\n          </div>\n        ) : (\n          <div className=\"animate__animated animate__fadeInUp animate__faster mt-2 mr-1 -ml-3 rounded-t-md bg-white shadow-md pb-5\">\n            <div className=\"flex flex-row gap-4 items-center justify-between bg-blue-100 py-2 px-2 mb-2\">\n              <div className=\"flex flex-col w-full\">\n                <div className=\"flex flex-row gap-2 items-center justify-between w-full pl-2\">\n                  <span className=\"font-bold text-xl text-gray-800\">\n                    Change exam location\n                  </span>\n                  <div className=\"bg-white hover:text-yellow-700 hover:bg-white rounded-full p-1 h-10 w-10 border-2 border-white hover:border-yellow-600 flex items-center justify-center\">\n                    <MdClose\n                      className=\"cursor-pointer font-extrabold text-3xl\"\n                      onClick={() => {\n                        this.setState({\n                          centersModal: false,\n                          selectedCourse: null,\n                        });\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <ChooseExamCenter\n              positionCourses={this.state.selectedCourse}\n              addLocation={this.addLocation}\n              closeModal={this.closeModal}\n            />\n          </div>\n        )}\n        {this.state.selectedExam !== null && (\n          <Modal\n            title={\n              <div className=\"text-2xl font-extrabold text-blue-600 px-2\">\n                Exam result details\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() => this.setState({ selectedExam: null })}\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{ title: true }}\n          >\n            <CandidateAnswersDetails\n              exam_id={this.state.selectedExam}\n              showAnswers={false}\n            />\n          </Modal>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  candidateExam,\n  candidateApplications,\n  periods,\n}: StoreState): {\n  auth: Auth;\n  candidateExam: candidateExamStoreInterface;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n} => {\n  return {\n    auth: auth,\n    candidateExam: candidateExam,\n    candidateApplications: candidateApplications,\n    periods: periods,\n  };\n};\n\nexport const CandidateExams = connect(mapStateToProps, {\n  FC_GetProfileDetails,\n  LoadCandidateApplications,\n  setSelectedCandidateExam,\n  setSelectedCourse,\n  setSelectedPosition,\n  InitializeExamDetails,\n  loadExamsDone,\n  AddUserApplication,\n  loadApplicationPeriods,\n})(_CandidateExams);\n","import React from \"react\";\nimport Chart from \"react-apexcharts\";\n\ntype chartType = {\n  options: {\n    labels: string[];\n    legend?: ApexLegend;\n    plotOptions?: ApexPlotOptions;\n    colors?: any[];\n  };\n  series: number[];\n  width?: number;\n};\n\nconst PieChart: React.FC<chartType> = (props) => {\n  return (\n    <div className=\"donut\">\n      <Chart\n        options={props.options}\n        series={props.series}\n        type=\"donut\"\n        width={`${props.width ? props.width : \"380\"}`}\n      />\n    </div>\n  );\n};\n\nexport default PieChart;\n","import {\n  QuestionForEmbedded,\n  QuestionForHybrid,\n  questionShortElementsType,\n  questionTypeElementsType,\n} from \"@mastrecruit/common\";\nimport React from \"react\";\nimport { MdCheckCircle, MdClose } from \"react-icons/md\";\nimport { Auth } from \"../../../actions/auth\";\nimport { candidateExamStoreInterface } from \"../../../actions/candidate_exam\";\nimport { questionTypesStoreInterface } from \"../../../actions/questionTypes\";\nimport { System } from \"../../../actions/system\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { EmbeddedQuestion } from \"../../../components/QuestionPreview/QuestionPreview\";\nimport { course } from \"../../../interfaces/course\";\nimport {\n  QuestionAnswerInterface,\n  QuestionInterface,\n  QuestionLanguage,\n} from \"../../../interfaces/question\";\nimport {\n  ExamAnsweredQuestions,\n  ExamPendingQuestions,\n  findQuestionType,\n} from \"../utils/utils\";\nimport FindAnswer from \"./FindAnswer\";\n\ninterface QuestionsReviewProps {\n  auth: Auth;\n  candidateExam: candidateExamStoreInterface;\n  system: System;\n  setSelectedExamQuestion: (\n    exam_id: string,\n    question_id: string | null\n  ) => void;\n  submitQuestionAnswer: boolean;\n  questionTypes: questionTypesStoreInterface;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  submitExam: () => void;\n  selectedExam: course | null;\n  setSubmitModal: (status: boolean) => void;\n  selectedLanguage: QuestionLanguage;\n  wholeQuestion: QuestionInterface;\n}\n\nexport const findQType = (\n  typeShort: questionShortElementsType | QuestionForEmbedded | QuestionForHybrid\n): questionTypeElementsType => {\n  let changed: questionTypeElementsType = questionTypeElementsType.Hybrid;\n  switch (typeShort) {\n    case QuestionForHybrid.Calculated:\n      changed = questionTypeElementsType.Calculated;\n      break;\n    case QuestionForHybrid.CalculatedMultipleChoice:\n      changed = questionTypeElementsType.CalculatedMultipleChoice;\n      break;\n    case QuestionForHybrid.Essay:\n      changed = questionTypeElementsType.Essay;\n      break;\n    case QuestionForHybrid.Matching:\n      changed = questionTypeElementsType.Matching;\n      break;\n    case QuestionForHybrid.MultipleChoice:\n      changed = questionTypeElementsType.MultipleChoice;\n      break;\n    case QuestionForHybrid.Numeric:\n      changed = questionTypeElementsType.Numeric;\n      break;\n    case QuestionForHybrid.ShortAnswer:\n      changed = questionTypeElementsType.ShortAnswer;\n      break;\n    case QuestionForHybrid.SimpleCalculate:\n      changed = questionTypeElementsType.SimpleCalculate;\n      break;\n    case QuestionForHybrid.SingleMultiple:\n      changed = questionTypeElementsType.SingleMultiple;\n      break;\n    case QuestionForHybrid.TrueFalse:\n      changed = questionTypeElementsType.TrueFalse;\n      break;\n  }\n  return changed;\n};\n\nconst FindAnswerHybrid = (props: QuestionsReviewProps) => {\n  let str = \"a\";\n  if (props.submitQuestionAnswer === true) {\n    return (\n      <div className=\"bg-white rounded mx-4 my-4\">\n        <div className=\"text-gray-600 mx-4\">Saving changes, Please wait...</div>\n        <Loading />\n      </div>\n    );\n  }\n  return (\n    <div className={`pt-4 border-t border-gray-300 bg-white`}>\n      <div className=\"px-4 pb-2\">\n        <div className=\"my-2\">\n          <div\n            className=\"flex flex-col gap-3 overflow-y-auto\"\n            style={{ maxHeight: \"100%\" }}\n          >\n            {console.log(\"Whole: \", props.wholeQuestion)}\n            <div>\n              {findQuestionType(\n                props.wholeQuestion.type,\n                props.questionTypes.questionTypes\n              ) === questionTypeElementsType.Hybrid &&\n                props.wholeQuestion.question.find(\n                  (test) => test.language === props.selectedLanguage\n                ) !== undefined &&\n                props.wholeQuestion.question\n                  .find((test) => test.language === props.selectedLanguage)!\n                  .sub_question.map((item, i) => {\n                    let stri = String.fromCharCode(\n                      str.charCodeAt(str.length - 1) + i\n                    );\n                    return (\n                      <div\n                        key={i + 1}\n                        className=\"bg-white hover:bg-white border border-white hover:border-blue-400 px-2 py-2 rounded  animate__animated animate__fadeIn animate__fast group\"\n                      >\n                        <div className=\"grid md:grid-cols-12 w-full\">\n                          <div className=\"col-span-12 flex flex-row items-center gap-3\">\n                            <div\n                              key={i + 1}\n                              className=\"w-6 h-6 p-2 rounded-full bg-blue-100 flex justify-center items-center font-bold text-lg text-blue-600 cursor-pointer\"\n                            >\n                              {stri}\n                            </div>\n                            <div className=\"text-sm w-full\">\n                              {props.wholeQuestion.question.find(\n                                (test) =>\n                                  test.language === props.selectedLanguage\n                              ) !== undefined ? (\n                                findQuestionType(\n                                  item.type,\n                                  props.questionTypes.questionTypes\n                                ) === questionTypeElementsType.Embedded ? (\n                                  EmbeddedQuestion(\n                                    props.wholeQuestion!,\n                                    props.questionTypes.questionTypes,\n                                    props.selectedLanguage,\n                                    props.candidateExam.question_answers,\n                                    (data: QuestionAnswerInterface) => {}\n                                  )\n                                ) : (\n                                  <div\n                                    className=\"font-bold text-gray-700 text-base\"\n                                    dangerouslySetInnerHTML={{\n                                      __html: item.description,\n                                    }}\n                                  ></div>\n                                )\n                              ) : (\n                                props.wholeQuestion.question.length > 0 && (\n                                  <div\n                                    className=\"font-bold text-gray-700 text-base max-h-20 truncate\"\n                                    dangerouslySetInnerHTML={{\n                                      __html: item.description,\n                                    }}\n                                  ></div>\n                                )\n                              )}\n                              <div className=\"text-blue-700 font-bold text-sm w-full\">\n                                Answer: &nbsp;\n                                {props.questionTypes.questionTypes !== null && (\n                                  <FindAnswer\n                                    selectedLanguage={props.selectedLanguage}\n                                    question={props.wholeQuestion}\n                                    answersList={props.candidateExam.question_answers.filter(\n                                      (itm) =>\n                                        itm.question_id ===\n                                        props.wholeQuestion.question_id\n                                    )}\n                                    questionTypes={\n                                      props.questionTypes.questionTypes\n                                    }\n                                    onClick={() => {}}\n                                    showCorrectAnswer={false}\n                                    subQuestionType={findQType(item.typeShort)}\n                                    reference={item.reference}\n                                  />\n                                )}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    );\n                  })}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FindAnswerHybrid;\n","import React, { FC } from \"react\";\nimport { IconType } from \"react-icons\";\nimport { FaUsers } from \"react-icons/fa\";\nimport { toAnyDigit } from \"../../shared/dataTest\";\n\nexport type DashboardLabelItemInterface = {\n  // TITLE: Application or Exam or Shortlisted ....\n  title: string;\n  // ICON: FaExpand ....\n  icon: IconType;\n  // ICON COLOR: blue, indigo, gray ....\n  iconColor: string;\n  // COUNT: 0,1,2,3,5,23,563 ....\n  count: number;\n  // COUNT: 0,1,2,3,5,23,563 ....\n  countOver?: number;\n};\n\nconst DashboardLabelItem: FC<DashboardLabelItemInterface> = (\n  props = {\n    title: \"\",\n    icon: FaUsers,\n    iconColor: \"indigo\",\n    count: 0,\n    countOver: undefined,\n  }\n) => {\n  const IconDefined = props.icon;\n  return (\n    <div className=\"flex items-center px-6 py-4 bg-white w-full rounded-md space-x-2 mb-2 lg:mb-0 shadow-md\">\n      <div\n        className={`p-3 rounded-full bg-${props.iconColor}-200 bg-opacity-75`}\n      >\n        <IconDefined className={`h-8 w-8 text-${props.iconColor}-600`} />\n      </div>\n      <div>\n        <h1 className=\"text-3xl font-semibold text-gray-700\">\n          {toAnyDigit(props.count)}{\" \"}\n          {props.countOver && \"/ \" + toAnyDigit(props.countOver)}\n        </h1>\n        <span className=\"text-gray-500 text-lg\">{props.title}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default DashboardLabelItem;\n","import React from \"react\";\nimport DashboardLabelItem, {\n  DashboardLabelItemInterface,\n} from \"../DashboardLabelItem\";\n\ntype DashboardLabelProps = {\n  dataLabels: DashboardLabelItemInterface[];\n  labelsOnRow?: number;\n  childrenPosition?: \"START\" | \"END\";\n  children?: JSX.Element;\n};\n\nconst ExamDashboardLabels: React.FC<DashboardLabelProps> = (props) => {\n  const numCols: number = props.labelsOnRow\n    ? props.labelsOnRow > 4\n      ? props.labelsOnRow\n      : 4\n    : 4;\n  return (\n    <div\n      className={`grid 2xl:grid-cols-${numCols} xl:grid-cols-${\n        numCols - 1\n      } lg:grid-cols-${numCols - 2} md:grid-cols-${\n        numCols - 3\n      } sm:grid-cols-2 grid-cols-1 gap-4 items-center mx-auto`}\n    >\n      {props.children &&\n        ((props.childrenPosition && props.childrenPosition === \"START\") ||\n          !props.childrenPosition) &&\n        props.children}\n      {props.dataLabels.map((item, index) => (\n        <section key={index + item.title}>\n          <DashboardLabelItem\n            title={item.title}\n            icon={item.icon}\n            iconColor={item.iconColor}\n            count={item.count}\n          />\n        </section>\n      ))}\n      {props.children &&\n        props.childrenPosition &&\n        props.childrenPosition === \"END\" &&\n        props.children}\n    </div>\n  );\n};\n\nexport default ExamDashboardLabels;\n","import React, { useEffect } from \"react\";\nimport { ImCheckboxChecked, ImCheckboxUnchecked } from \"react-icons/im\";\nimport { MdRadioButtonChecked, MdRadioButtonUnchecked } from \"react-icons/md\";\nimport { QuestionAnswersStore } from \"../../../../actions\";\nimport {\n  MultipleChoiceQuestionAnswerInterface,\n  QuestionAnswerInterface,\n  QuestionItemInterface,\n  QuestionLanguage,\n  SubQuestionInterface,\n} from \"../../../../interfaces/question\";\nimport {\n  questionTypeElementsType,\n  QuestionForHybrid,\n} from \"@mastrecruit/common\";\nimport Hybrid from \"./Hybrid\";\nimport TrueFalse from \"./TrueFalse\";\nimport {\n  toCalculatedMultipleChoice,\n  toEssay,\n  toMatching,\n  toMultipleChoice,\n  toNumerical,\n  toShortAnswer,\n  toSimpleCalculated,\n  toTrueFalse,\n} from \"../ConvertingAnswers\";\nimport SimpleCalculated from \"./SimpleCalculated\";\nimport MultipleChoice from \"./MultipleChoice\";\nimport CalculatedMultipleChoice from \"./CalculatedMultipleChoice\";\nimport Matching from \"./Matching\";\nimport { Shuffle } from \"../../../../utils/functions\";\nimport { CandidateExam } from \"../../../../interfaces/exam\";\nimport Essay from \"./Essay\";\nimport Numerical from \"./Numerical\";\nimport ShortAnswer from \"./ShortAnswer\";\n\n// All question types except Embedded and Hybrid\n\ninterface AnswersTypesCollectionProps {\n  type: questionTypeElementsType | null;\n  available_answers: QuestionAnswersStore[];\n  selectedQuestionAnswer: {\n    question_id: string | null;\n    question: QuestionItemInterface | undefined;\n    answers: QuestionAnswerInterface[] | undefined;\n  };\n  answerQuestionFn: (answer: QuestionAnswersStore) => void;\n  wholeQuestion: QuestionItemInterface | undefined;\n  selectedExam: CandidateExam | null;\n  selectedLanguage: QuestionLanguage;\n  item: SubQuestionInterface;\n  hybrid: boolean;\n}\n\nconst AnswersTypesCollection = (props: AnswersTypesCollectionProps) => {\n  return (\n    <div>\n      {/* TrueFalse */}\n      {props.wholeQuestion !== undefined &&\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.item.typeShort === QuestionForHybrid.TrueFalse &&\n        props.selectedQuestionAnswer.answers\n          .filter((test) => test.reference === props.item.reference)\n          .map((itm, i) => (\n            <TrueFalse\n              key={i + 1}\n              type={props.type}\n              available_answers={props.available_answers}\n              selectedQuestionAnswer={{\n                question_id: props.selectedQuestionAnswer.question_id,\n                question: props.selectedQuestionAnswer.question,\n                answers: toTrueFalse(itm.answer),\n                selectedAns: itm,\n              }}\n              answerQuestionFn={props.answerQuestionFn}\n            />\n          ))}\n      {/* Calculated */}\n      {props.wholeQuestion !== undefined &&\n        props.selectedQuestionAnswer.answers !== undefined &&\n        (props.item.typeShort === QuestionForHybrid.Calculated ||\n          props.item.typeShort === QuestionForHybrid.SimpleCalculate) &&\n        props.selectedQuestionAnswer.answers\n          .filter((test) => test.reference === props.item.reference)\n          .map((itm, i) => (\n            <SimpleCalculated\n              key={i + 1}\n              type={props.type}\n              available_answers={props.available_answers}\n              selectedQuestionAnswer={{\n                question_id: props.selectedQuestionAnswer.question_id,\n                question: props.selectedQuestionAnswer.question,\n                answers: toSimpleCalculated(itm.answer),\n                selectedAns: itm,\n              }}\n              answerQuestionFn={props.answerQuestionFn}\n            />\n          ))}\n      {/* MultipleChoice */}\n      {props.wholeQuestion !== undefined &&\n        props.selectedQuestionAnswer.answers !== undefined &&\n        (props.item.typeShort === QuestionForHybrid.SingleMultiple ||\n          props.item.typeShort === QuestionForHybrid.MultipleChoice) &&\n        props.selectedQuestionAnswer.answers\n          .filter((test) => test.reference === props.item.reference)\n          .map((itm, i) => (\n            <MultipleChoice\n              key={i + 1}\n              type={props.type}\n              available_answers={props.available_answers}\n              selectedQuestionAnswer={{\n                question_id: props.selectedQuestionAnswer.question_id,\n                question: props.selectedQuestionAnswer.question,\n                answers: toMultipleChoice(itm.answer),\n                selectedAns: itm,\n              }}\n              answerQuestionFn={props.answerQuestionFn}\n            />\n          ))}\n      {/* Calculated MultipleChoice */}\n      {props.wholeQuestion !== undefined &&\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.item.typeShort === QuestionForHybrid.CalculatedMultipleChoice &&\n        props.selectedQuestionAnswer.answers\n          .filter((test) => test.reference === props.item.reference)\n          .map((itm, i) => (\n            <CalculatedMultipleChoice\n              key={i + 1}\n              type={props.type}\n              available_answers={props.available_answers}\n              selectedQuestionAnswer={{\n                question_id: props.selectedQuestionAnswer.question_id,\n                question: props.selectedQuestionAnswer.question,\n                answers: toCalculatedMultipleChoice(itm.answer),\n                selectedAns: itm,\n              }}\n              answerQuestionFn={props.answerQuestionFn}\n            />\n          ))}\n\n      {/* Matching */}\n      {props.wholeQuestion !== undefined &&\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.item.typeShort === QuestionForHybrid.Matching &&\n        props.selectedQuestionAnswer.answers\n          .filter((test) => test.reference === props.item.reference)\n          .map((itm, i) => (\n            <Matching\n              key={i + 1}\n              type={props.type}\n              available_answers={props.available_answers}\n              selectedQuestionAnswer={{\n                question_id: props.selectedQuestionAnswer.question_id,\n                question: props.selectedQuestionAnswer.question,\n                answers: toMatching(itm.answer),\n                shuffledAnswers: Shuffle(toMatching(itm.answer)),\n                selectedAns: itm,\n              }}\n              answerQuestionFn={props.answerQuestionFn}\n              selectedExam={props.selectedExam}\n              selectedLanguage={props.selectedLanguage}\n            />\n          ))}\n      {/* Esssay */}\n      {props.wholeQuestion !== undefined &&\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.item.typeShort === QuestionForHybrid.Essay &&\n        props.selectedQuestionAnswer.answers\n          .filter((test) => test.reference === props.item.reference)\n          .map((itm, i) => (\n            <Essay\n              key={i + 1}\n              type={props.type}\n              available_answers={props.available_answers}\n              selectedQuestionAnswer={{\n                question_id: props.selectedQuestionAnswer.question_id,\n                question: props.selectedQuestionAnswer.question,\n                answers: toEssay(itm.answer),\n                selectedAns: itm,\n              }}\n              answerQuestionFn={props.answerQuestionFn}\n            />\n          ))}\n      {/* Numerical */}\n      {props.wholeQuestion !== undefined &&\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.item.typeShort === QuestionForHybrid.Numeric &&\n        props.selectedQuestionAnswer.answers\n          .filter((test) => test.reference === props.item.reference)\n          .map((itm, i) => (\n            <Numerical\n              key={i + 1}\n              type={props.type}\n              available_answers={props.available_answers}\n              selectedQuestionAnswer={{\n                question_id: props.selectedQuestionAnswer.question_id,\n                question: props.selectedQuestionAnswer.question,\n                answers: toNumerical(itm.answer),\n                selectedAns: itm,\n              }}\n              answerQuestionFn={props.answerQuestionFn}\n            />\n          ))}\n      {/* ShortAnswer */}\n      {props.wholeQuestion !== undefined &&\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.item.typeShort === QuestionForHybrid.ShortAnswer &&\n        props.selectedQuestionAnswer.answers\n          .filter((test) => test.reference === props.item.reference)\n          .map((itm, i) => (\n            <ShortAnswer\n              key={i + 1}\n              type={props.type}\n              available_answers={props.available_answers}\n              selectedQuestionAnswer={{\n                question_id: props.selectedQuestionAnswer.question_id,\n                question: props.selectedQuestionAnswer.question,\n                answers: toShortAnswer(itm.answer),\n                selectedAns: itm,\n              }}\n              answerQuestionFn={props.answerQuestionFn}\n            />\n          ))}\n    </div>\n  );\n};\n\nexport default AnswersTypesCollection;\n","import React, { useEffect } from \"react\";\nimport { ImCheckboxChecked, ImCheckboxUnchecked } from \"react-icons/im\";\nimport { MdRadioButtonChecked, MdRadioButtonUnchecked } from \"react-icons/md\";\nimport { QuestionAnswersStore } from \"../../../../actions\";\nimport {\n  MultipleChoiceQuestionAnswerInterface,\n  QuestionAnswerInterface,\n  QuestionItemInterface,\n  QuestionLanguage,\n} from \"../../../../interfaces/question\";\nimport {\n  questionTypeElementsType,\n  QuestionForHybrid,\n} from \"@mastrecruit/common\";\nimport Hybrid from \"./Hybrid\";\nimport TrueFalse from \"./TrueFalse\";\nimport {\n  toCalculatedMultipleChoice,\n  toEssay,\n  toMatching,\n  toMultipleChoice,\n  toNumerical,\n  toShortAnswer,\n  toSimpleCalculated,\n  toTrueFalse,\n} from \"../ConvertingAnswers\";\nimport SimpleCalculated from \"./SimpleCalculated\";\nimport MultipleChoice from \"./MultipleChoice\";\nimport CalculatedMultipleChoice from \"./CalculatedMultipleChoice\";\nimport Matching from \"./Matching\";\nimport { Shuffle } from \"../../../../utils/functions\";\nimport { CandidateExam } from \"../../../../interfaces/exam\";\nimport Essay from \"./Essay\";\nimport Numerical from \"./Numerical\";\nimport ShortAnswer from \"./ShortAnswer\";\nimport AnswersTypesCollection from \"./AnswersTypesCollection\";\n\ninterface HybridProps {\n  type: questionTypeElementsType | null;\n  available_answers: QuestionAnswersStore[];\n  selectedQuestionAnswer: {\n    question_id: string | null;\n    question: QuestionItemInterface | undefined;\n    answers: QuestionAnswerInterface[] | undefined;\n  };\n  answerQuestionFn: (answer: QuestionAnswersStore) => void;\n  wholeQuestion: QuestionItemInterface | undefined;\n  selectedExam: CandidateExam | null;\n  selectedLanguage: QuestionLanguage;\n}\n\nconst HybridAnswers = (props: HybridProps) => {\n  let str = \"a\";\n  // useEffect(() => {\n  //   if (props.selectedQuestionAnswer.question_id !== null) {\n  //     // Check if question is already there in answersList\n  //     let checkAnswerAvail = props.available_answers.find(\n  //       (item) => item.question_id === props.selectedQuestionAnswer.question_id\n  //     );\n  //     if (props.wholeQuestion !== undefined) {\n  //       let answersRes: QuestionAnswerInterface[] = [];\n  //       if (checkAnswerAvail === undefined) {\n  //         answersRes = props.wholeQuestion.answers;\n  //       } else {\n  //         for (let newAns of props.wholeQuestion.answers) {\n  //           if (\n  //             checkAnswerAvail.answers.find(\n  //               (item) => item._id === newAns._id\n  //             ) === undefined\n  //           ) {\n  //             console.log(\"Ans not duplicted: \", newAns);\n  //             answersRes = [\n  //               ...answersRes,\n  //               {\n  //                 _id: newAns._id,\n  //                 reference: newAns.reference,\n  //                 answer: [],\n  //               },\n  //             ];\n  //           }\n  //         }\n  //       }\n  //       props.answerQuestionFn({\n  //         question_id: props.selectedQuestionAnswer.question_id,\n  //         status: false, //Check if submitted online\n  //         answers: answersRes,\n  //       });\n  //     }\n  //   }\n  // }, [props]);\n  return (\n    <div>\n      {props.wholeQuestion !== undefined &&\n        props.wholeQuestion.sub_question.length > 0 &&\n        props.wholeQuestion.sub_question.map((item, i) => {\n          let stri = String.fromCharCode(str.charCodeAt(str.length - 1) + i);\n          return (\n            <div\n              title=\"Click to choose this option\"\n              key={i + 1}\n              className={`px-2 py-2\n             bg-white\n            rounded mb-2`}\n            >\n              <div className=\"flex flex-row items-center w-full gap-2 mb-2\">\n                <div>\n                  <div className=\"flex items-center justify-center h-8 w-8 rounded-full bg-gray-100 border border-gray-400 font-bold\">\n                    {stri}\n                  </div>\n                </div>\n                <div className=\"flex flex-row items-center justify-between w-full gap-2\">\n                  <div className=\"font-bold\">{item.description}</div>\n                  <div>\n                    <div className=\"bg-blue-100 text-blue-600 px-3 py-1 rounded-full font-bold\">\n                      {item.marks} marks\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"border-t px-2 py-2\">\n                <AnswersTypesCollection\n                  type={props.type}\n                  available_answers={props.available_answers}\n                  selectedQuestionAnswer={props.selectedQuestionAnswer}\n                  answerQuestionFn={props.answerQuestionFn}\n                  wholeQuestion={props.wholeQuestion}\n                  selectedExam={props.selectedExam}\n                  selectedLanguage={props.selectedLanguage}\n                  item={item}\n                  hybrid={true}\n                />\n              </div>\n            </div>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default HybridAnswers;\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport {\n  getAllClaims,\n  GetClaimingTypes,\n  setSelectedClaimType,\n} from \"../../../actions/claiming\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport { MainItem } from \"../../../components/Navigation/SideNavigation\";\nimport {\n  CandidateClaimInterface,\n  ClaimStatus,\n  PlansTypeKeys,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\n\nexport const filterClaimsByClaimType = (\n  claimList: CandidateClaimInterface[],\n  claimType: PlansTypeKeys | \"all\"\n): CandidateClaimInterface[] => {\n  if (claimType === \"all\") {\n    return claimList;\n  }\n\n  return claimList.filter((item) => item.type_key === claimType);\n};\n\ntype AdminFilterByTypeProps = {\n  loadingClaims: boolean;\n  FC_CountByType?: Function;\n\n  // REDUX PROPS =======================================\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  GetClaimingTypes: Function;\n  setSelectedClaimType: Function;\n  getAllClaims: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\nconst AdminFilterByType: React.FC<AdminFilterByTypeProps> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingClaimTypes, setLoadingClaimTypes] = useState<boolean>(true);\n\n  useEffect(() => {\n    if (props.claiming.claimTypes === null) {\n      props.GetClaimingTypes((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          setLoadingClaimTypes(false);\n          setLoading(false);\n        }\n      });\n    } else if (loadingClaimTypes) {\n      setLoadingClaimTypes(false);\n      setLoading(false);\n    }\n  }, [loadingClaimTypes, props]);\n\n  const countClaims = (\n    claiming: ClaimingReducerType,\n    thisType: PlansTypeKeys | \"all\"\n  ): number => {\n    let result: number = 0;\n\n    if (claiming.allClaims && thisType === \"all\") {\n      result = claiming.allClaims.filter(\n        (item) => item.last_claim_status === ClaimStatus.PENDING\n      ).length;\n    }\n    if (claiming.allClaims && thisType !== \"all\") {\n      result = claiming.allClaims.filter(\n        (item) =>\n          item.type_key === thisType &&\n          item.last_claim_status === ClaimStatus.PENDING\n      ).length;\n    }\n\n    return result;\n  };\n\n  return (\n    <React.Fragment>\n      <span className=\"mt-2 text-sm\">Filter by claim type</span>\n      {/* WHILE LOADING DATA ================================== */}\n      {(loading || props.loadingClaims) && (\n        <section className=\"space-y-2\">\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </section>\n      )}\n      {/* END WHILE LOADING DATA ================================== */}\n\n      {/* AFTER LOADING DATA ================================== */}\n      {!loading && !props.loadingClaims && props.claiming.claimTypes && (\n        <section>\n          {/* ALL ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(\"ALL\");\n              props.setSelectedClaimType(\"all\");\n            }}\n          >\n            <MainItem\n              title=\"All\"\n              active={props.claiming.selectedClaimType === \"all\"}\n              count={countClaims(props.claiming, \"all\")}\n            />\n          </div>\n          {/* APPLICATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(ClaimTypesInterface.DOCUMENT);\n              props.setSelectedClaimType(PlansTypeKeys.APPLICATION);\n            }}\n          >\n            <MainItem\n              title={\"Application\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.APPLICATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.APPLICATION)}\n            />\n          </div>\n          {/* DOCUMENT ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.DOCUMENT_VALIDATION);\n            }}\n          >\n            <MainItem\n              title={\"Document\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION\n              }\n              count={countClaims(\n                props.claiming,\n                PlansTypeKeys.DOCUMENT_VALIDATION\n              )}\n            />\n          </div>\n          {/* EXAMINATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.EXAMINATION);\n            }}\n          >\n            <MainItem\n              title={\"Exam\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.EXAMINATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.EXAMINATION)}\n            />\n          </div>\n          {false && (\n            <div\n              className=\"mt-2\"\n              onClick={() => {\n                props.setSelectedClaimType(PlansTypeKeys.PLACEMENT_TRANSFER);\n              }}\n            >\n              <MainItem\n                title={\"Placement\"}\n                active={\n                  props.claiming.selectedClaimType !== \"all\" &&\n                  props.claiming.selectedClaimType ===\n                    PlansTypeKeys.PLACEMENT_TRANSFER\n                }\n                count={countClaims(\n                  props.claiming,\n                  PlansTypeKeys.PLACEMENT_TRANSFER\n                )}\n              />\n            </div>\n          )}\n        </section>\n      )}\n      {/* END AFTER LOADING DATA ================================== */}\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  claiming,\n}: StoreState): { auth: Auth; claiming: ClaimingReducerType } => {\n  return { auth, claiming };\n};\n\nexport default connect(mapStateToProps, {\n  GetClaimingTypes,\n  setSelectedClaimType,\n  getAllClaims,\n  PushPopupAlert,\n})(AdminFilterByType);\n","import React from \"react\";\nimport { AiFillDashboard } from \"react-icons/ai\";\nimport { SessionPlanInterface } from \"../../interfaces\";\n\ntype ClaimHeaderTitleProps = {\n  headerTitle: string;\n  loading: boolean;\n  loadingSession: boolean;\n  periodChanged: boolean;\n  thisPeriod: SessionPlanInterface | null;\n  setThisPeriod: (state: SessionPlanInterface | null) => void;\n  setLoadingSession: (state: boolean) => void;\n  application_sessions: SessionPlanInterface[];\n  onPeriodChange: (period_id: string) => void;\n};\n\nconst selectPeriod = (\n  sessions: SessionPlanInterface[],\n  period_id: string,\n  setThisPeriod: (state: SessionPlanInterface | null) => void\n) => {\n  setThisPeriod(\n    sessions.filter((item) => item.session_plan_id === period_id)[0]\n  );\n};\n\nconst ClaimHeaderTitle: React.FC<ClaimHeaderTitleProps> = (props) => {\n  const isLoading = (): boolean => {\n    if (props.loading || props.loadingSession || props.periodChanged) {\n      return true;\n    }\n    return false;\n  };\n\n  return (\n    <div className=\"mt-3 rounded flex flex-col md:flex-row md:justify-between items-start\">\n      <div className=\"flex flex-row items-center gap-3 mb-2\">\n        <AiFillDashboard className=\"text-6xl text-blue-600 hidden md:block\" />\n        <div className=\"flex flex-col\">\n          <span className=\"text-blue-600 text-3xl font-bold\">\n            {props.headerTitle}\n          </span>\n        </div>\n      </div>\n\n      {/* FILTER SECTION PERIOD && EDUCATION */}\n      <section className=\"w-full md:w-auto my-2 md:my-0\">\n        <div>\n          <select\n            className={`bg-white text-gray-600 border border-gray-400 rounded p-2 focus:outline-none ${\n              isLoading() ? \"cursor-wait\" : \"cursor-default\"\n            }`}\n            value={props.thisPeriod ? props.thisPeriod.session_plan_id : \"\"}\n            disabled={isLoading()}\n            onChange={(e) => {\n              selectPeriod(\n                props.application_sessions,\n                e.target.value,\n                props.setThisPeriod\n              );\n              props.setLoadingSession(true);\n              props.onPeriodChange(e.target.value);\n            }}\n          >\n            {props.application_sessions.map((session, item) => (\n              <option\n                key={session.session_plan_id + item}\n                value={session.session_plan_id}\n              >\n                {session.session_plan_name}\n              </option>\n            ))}\n          </select>\n        </div>\n      </section>\n      {/* END FILTER SECTION PERIOD && EDUCATION */}\n    </div>\n  );\n};\n\nexport default ClaimHeaderTitle;\n","import React, { Component } from \"react\";\nimport { MdAdd, MdArrowBack, MdDelete, MdInfoOutline } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Auth, loadCourses, PushPopupAlert } from \"../../../actions\";\nimport {\n  DocumentClaimUser,\n  getClaimReasons,\n  getMyAnswers,\n  getMyClaims,\n  getMyPlacement,\n} from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport { SideNavigation } from \"../../../components/Navigation/SideNavigation\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimStatus,\n  PlansTypeKeys,\n  SessionPlanInterface,\n  course,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport search from \"../../../utils/search\";\nimport { filterClaimsByClaimType } from \"../Admin/AdminFilterByType\";\nimport ClaimApplView from \"../ClaimApplView\";\nimport ClaimDocView, { isClaimEvaluated } from \"../ClaimDocView\";\nimport ClaimExamView from \"../ClaimExamView\";\nimport ClaimHeaderTitle from \"../ClaimHeaderTitle\";\nimport ClaimPlacementView from \"../ClaimPlacementView\";\nimport ClaimForm, { ClaimGetDocTitle } from \"./ClaimForm\";\nimport FilterByType from \"./FilterByType\";\nimport { getCourseById, getCourseIdBySheetId } from \"./FormExamList\";\n\nexport enum ClaimTypesEnum {\n  application = \"application\",\n  document = \"document\",\n  exam = \"exam\",\n  marks_publication = \"marks publication\",\n  placement = \"placement\",\n}\n\nexport const getDocumentById = (\n  candidateDocuments: DocumentClaimUser[],\n  document_id: string\n): DocumentClaimUser | null => {\n  let result: DocumentClaimUser | undefined = candidateDocuments.find(\n    (item) => item.doc_id === document_id\n  );\n  return result ? result : null;\n};\n\nexport const whichClaimType = (\n  thisClaim: CandidateClaimInterface\n): ClaimTypesEnum | undefined => {\n  if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n    return ClaimTypesEnum.application;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n    return ClaimTypesEnum.document;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.EXAMINATION) {\n    return ClaimTypesEnum.exam;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.MARKS_PUBLICATION) {\n    return ClaimTypesEnum.marks_publication;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.PLACEMENT_TRANSFER) {\n    return ClaimTypesEnum.placement;\n  }\n};\n\nexport const whichClaimStatus = (\n  thisClaim: CandidateClaimInterface\n): {\n  classes: string;\n  status: string;\n} => {\n  let classes: string, status: string;\n  switch (thisClaim.last_claim_status) {\n    case ClaimStatus.COMPLETED:\n      classes = \"text-blue-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.COMPLETED.toLocaleLowerCase());\n      break;\n    case ClaimStatus.EVALUATED:\n      classes = \"text-green-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.EVALUATED.toLocaleLowerCase());\n      break;\n\n    case ClaimStatus.DELETED:\n      classes = \"text-red-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.DELETED.toLocaleLowerCase());\n      break;\n\n    default:\n      classes = \"text-yellow-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.PENDING.toLocaleLowerCase());\n      break;\n  }\n\n  return { classes, status };\n};\n\nexport const getClaimById = (\n  claimList: CandidateClaimInterface[],\n  claim_id: string\n): CandidateClaimInterface | null => {\n  // console.log(\"====================================\");\n  // console.log({ claimList, claim_id });\n  // console.log(\"====================================\");\n  let result: CandidateClaimInterface | undefined = claimList.find(\n    (item) => item._id === claim_id\n  );\n  return result ? result : null;\n};\n\nexport const getApplicationById = (\n  candidateApplications: claimApplicationsInterface[],\n  application_id: string\n): claimApplicationsInterface | null => {\n  let result: claimApplicationsInterface | undefined =\n    candidateApplications.find(\n      (item) => item.application_id === application_id\n    );\n  return result ? result : null;\n};\n\nexport const displayDocClaimTitle = (\n  documentCategories: DocumentReducerInterface,\n  candidateDocuments: DocumentClaimUser[],\n  thisClaim: CandidateClaimInterface\n): string => {\n  let result: string = \"\";\n\n  // CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n  if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n    let thisDoc = getDocumentById(candidateDocuments, thisClaim.claiming_on_id);\n    result = thisDoc\n      ? ClaimGetDocTitle(documentCategories, thisDoc).main\n      : \"Document not found\";\n  }\n  // END CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n  return result;\n};\n\nexport const displayClaimTitle = (\n  claiming: ClaimingReducerType,\n  documentReducer: DocumentReducerInterface,\n  allCourse: course[] | null,\n  thisClaim: CandidateClaimInterface\n): string => {\n  let result: string = thisClaim.claiming_on_id;\n\n  if (\n    thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION &&\n    claiming.candidateDocuments\n  ) {\n    result = displayDocClaimTitle(\n      documentReducer,\n      claiming.candidateDocuments,\n      thisClaim\n    );\n  }\n  if (\n    thisClaim.type_key === PlansTypeKeys.APPLICATION &&\n    claiming.candidateApplications\n  ) {\n    let thisApplication = getApplicationById(\n      claiming.candidateApplications,\n      thisClaim.claiming_on_id\n    );\n    if (thisApplication) {\n      result = thisApplication.position.position_title;\n    } else {\n      result = \"Application not found\";\n    }\n  }\n\n  if (\n    thisClaim.type_key === PlansTypeKeys.EXAMINATION &&\n    allCourse &&\n    claiming.myAnswer\n  ) {\n    let thisAnswer = getCourseIdBySheetId(\n      claiming.myAnswer,\n      thisClaim.claiming_on_id\n    );\n    if (thisAnswer && getCourseById(allCourse, thisAnswer.course)) {\n      result = getCourseById(allCourse, thisAnswer.course)!.course_name;\n    } else {\n      result = \"Exam not found\";\n    }\n  }\n\n  if (thisClaim.type_key === PlansTypeKeys.PLACEMENT_TRANSFER) {\n    result = claiming.myPlacement\n      ? \"Placed on \" + claiming.myPlacement.placed.school.school_name\n      : \"Placement not found\";\n  }\n\n  return result;\n};\n\n// -------------------------------------------------------------------------\n\ntype AppProps = {\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  application_sessions: SessionPlanInterface[] | null;\n  courses: course[] | null;\n  documentReducer: DocumentReducerInterface;\n  getMyPlacement: Function;\n  getMyClaims: Function;\n  loadCourses: Function;\n  getMyAnswers: Function;\n  getClaimReasons: Function;\n  GetAllSessionPlans: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype AppState = {\n  loading: boolean;\n  loadingSession: boolean;\n  thisPeriod: SessionPlanInterface | null;\n  periodChanged: boolean;\n  viewClaim: boolean;\n  claimId: string | null;\n  claimForm: boolean;\n\n  // FOR FORM ================\n  viewImage: boolean;\n  loadingRequest: boolean;\n  reClaiming: boolean;\n  reClaimingMsg: string;\n  searchClaim: string;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n};\n\nclass Index extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingSession: true,\n      thisPeriod: null,\n      periodChanged: false,\n      viewClaim: false,\n      claimId: null,\n      claimForm: false,\n      searchClaim: \"\",\n\n      // FOR FORM ================\n      viewImage: false,\n      loadingRequest: false,\n      reClaiming: false,\n      reClaimingMsg: \"\",\n      formError: null,\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingSession = (value: boolean) => {\n    this.setState({ loadingSession: value });\n  };\n\n  setViewClaim = (value: boolean) => {\n    this.setState({ viewClaim: value });\n  };\n\n  setPeriodChanged = (value: boolean) => {\n    this.setState({ periodChanged: value });\n  };\n\n  setClaimForm = (value: boolean) => {\n    this.setState({ claimForm: value });\n  };\n\n  setViewImage = (value: boolean) => {\n    this.setState({ viewImage: value });\n  };\n\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n\n  setReClaiming = (value: boolean) => {\n    this.setState({ reClaiming: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n\n  setReClaimingMsg = (value: string) => {\n    this.setState({ reClaimingMsg: value });\n  };\n\n  setClaimId = (value: string | null) => {\n    this.setState({ claimId: value });\n  };\n\n  setThisPeriod = (value: SessionPlanInterface | null) => {\n    this.setState({ thisPeriod: value });\n  };\n\n  setSearchClaim = (value: string) => {\n    this.setState({ searchClaim: value });\n  };\n\n  loadClaims = (thisPeriod: SessionPlanInterface) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (this.props.claiming.myClaims === null && thisPeriod !== null) {\n      this.props.getMyClaims(\n        this.props.auth.user.user_id,\n        thisPeriod.session_plan_id,\n        (status: boolean, msg: string) => {\n          !status && this.setLoading(status);\n          if (status === false && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    } else if (thisPeriod && this.state.loading) {\n      this.setLoading(false);\n    }\n  };\n\n  setSession = (sessions: SessionPlanInterface[]) => {\n    // SETTING ACTIVE SESSION ==========================\n    if (this.state.thisPeriod === null && sessions.length > 0) {\n      let thisSession = sessions.find((item) => item.is_active === true);\n      this.setThisPeriod(thisSession ? thisSession : sessions[0]);\n      this.loadClaims(thisSession ? thisSession : sessions[0]);\n      this.loadExamAnswers(\n        thisSession ? thisSession : sessions[0],\n        this.props.auth.user.user_id\n      );\n    }\n  };\n\n  loadExamAnswers = (\n    activeSessionPlan: SessionPlanInterface,\n    user_id: string\n  ) => {\n    this.props.getMyAnswers(\n      activeSessionPlan.session_plan_id,\n      user_id,\n      (status: boolean, msg: string, data: SessionPlanInterface | \"none\") => {\n        this.setLoading(status);\n        if (!status && msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n        if (data) {\n          console.log(\"====================================\");\n          console.log({ loadExamAnswers: data });\n          console.log(\"====================================\");\n        }\n      }\n    );\n    if (this.props.claiming.claimReasons === null) {\n      this.props.getClaimReasons((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (!status) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n  };\n\n  componentDidMount = () => {\n    if (\n      this.props.courses === null ||\n      (this.props.courses.length === 0 && this.state.loading)\n    ) {\n      this.props.loadCourses(this.setLoading);\n      this.setLoading(false);\n    } else {\n      this.setLoading(false);\n    }\n\n    // LOADING APPLICATION SESSION ====================================\n    if (this.props.application_sessions === null) {\n      this.props.GetAllSessionPlans(\n        (status: boolean, msg: string, data?: SessionPlanInterface[]) => {\n          if (!status) {\n            this.setLoadingSession(false);\n            if (msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data && data.length > 0) {\n              // SETTING ACTIVE SESSION ==========================\n              if (this.state.thisPeriod === null) {\n                this.setSession(data);\n              }\n            }\n          }\n        }\n      );\n    } else {\n      this.setSession(this.props.application_sessions);\n      this.setLoadingSession(false);\n    }\n\n    if (!this.props.documentReducer.documentCategory) {\n      this.props.getDocumentCategory();\n      this.setLoading(false);\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n    if (!this.props.documentReducer.documentSubCategory && this.state.loading) {\n      this.props.getDocumentSubCategory();\n      this.setLoading(false);\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n\n    if (!this.props.documentReducer.documentFields && this.state.loading) {\n      this.props.getDocumentFields();\n      this.setLoading(false);\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n\n    if (this.props.claiming.myPlacement === null) {\n      this.props.getMyPlacement(\n        this.props.auth.user.user_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          }\n        }\n      );\n    }\n  };\n\n  isDeleteAllowed = (thisCLaim: CandidateClaimInterface): boolean => {\n    if (!isClaimEvaluated(thisCLaim, 1)) {\n      return true;\n    }\n    return false;\n  };\n\n  onPeriodChange = (period_id: string) => {\n    this.setPeriodChanged(true);\n    this.props.getMyClaims(\n      this.props.auth.user.user_id,\n      period_id,\n      (status: boolean, msg: string) => {\n        this.setLoadingRequest(status);\n        !status && this.setPeriodChanged(false);\n        if (status === false && msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      }\n    );\n  };\n\n  render() {\n    if (this.props.application_sessions === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    if (this.props.application_sessions.length === 0) {\n      return (\n        <div className=\"bg-yellow-100 rounded flex flex-col items-center justify-center p-6 my-8 text-yellow-900 border border-yellow-900\">\n          <MdInfoOutline className=\"text-6xl md:text-9xl\" />\n          <div className=\"text-center flex flex-col\">\n            <span className=\"text-2xl md:text-4xl font-extrabold\">\n              No active session\n            </span>\n            <span className=\"text-lg\">\n              Please Wait for the system to publish the sessions or contact the\n              administrator\n            </span>\n          </div>\n        </div>\n      );\n    }\n\n    if (this.props.claiming.myClaims === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {/* SIDE NAVIGATION */}\n        {!this.state.viewClaim && (\n          <SideNavigation>\n            <button\n              className=\"btn mb-3 border-2 border-blue-500 hover:bg-blue-500 hover:text-white flex items-center flex-1 font-bold w-full focus:outline-none\"\n              onClick={() => {\n                this.setClaimForm(true);\n                // alert(\"clicked\");\n              }}\n              disabled={\n                this.state.viewClaim ||\n                this.state.loading ||\n                this.state.loadingRequest\n              }\n            >\n              <MdAdd className=\"inline-block mr-1 text-xl font-bold\" />\n              <span>Claiming</span>\n            </button>\n\n            {/* FILTER SECTION */}\n            <FilterByType loadingClaims={this.state.loadingRequest} />\n            {/* END FILTER SECTION */}\n          </SideNavigation>\n        )}\n        {/* END SIDE NAVIGATION */}\n\n        {/* ------------------------------------------------------------------- */}\n\n        {/* CLAIM TITLE ===================================== */}\n        {!this.state.viewClaim && (\n          <ClaimHeaderTitle\n            headerTitle={`${\n              this.props.claiming.selectedClaimType === \"all\"\n                ? \"All\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION\n                ? \"Documents\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.APPLICATION\n                ? \"Applications\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.EXAMINATION\n                ? \"Exam\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.MARKS_PUBLICATION\n                ? \"Marks publication\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.PLACEMENT_TRANSFER\n                ? \"Placements\"\n                : \"\"\n            } Claiming`}\n            loading={this.state.loading}\n            loadingSession={this.state.loadingSession}\n            thisPeriod={this.state.thisPeriod}\n            setThisPeriod={this.setThisPeriod}\n            setLoadingSession={this.setLoadingSession}\n            application_sessions={this.props.application_sessions}\n            onPeriodChange={this.onPeriodChange}\n            periodChanged={this.state.periodChanged}\n          />\n        )}\n        {/* END CLAIM TITLE ===================================== */}\n\n        {/* ----------------------------------------------------------------------- */}\n\n        {!this.state.viewClaim && (\n          <section className=\"bg-white w-full p-1\">\n            {/* FILTER FORM =================================== */}\n            <section className=\"flex flex-col-reverse sm:flex-row items-center gap-2 w-full my-2\">\n              <div className=\"w-full\">\n                <input\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                    this.setSearchClaim(e.target.value)\n                  }\n                  type=\"text\"\n                  className=\"input-white h-10 text-sm border-2 border-gray-400 focus:border-gray-500 w-full\"\n                  placeholder={`Search claim by title or type`}\n                  value={this.state.searchClaim}\n                  disabled={\n                    filterClaimsByClaimType(\n                      this.props.claiming.myClaims,\n                      this.props.claiming.selectedClaimType\n                    ).length > 0\n                      ? false\n                      : true\n                  }\n                />\n              </div>\n            </section>\n            {/* END FILTER FORM =================================== */}\n            <table className=\"w-full shadow\" id=\"report_content\">\n              <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                <tr>\n                  <td className=\"px-2 py-2\">#</td>\n                  <td className=\"px-2 py-2\">Claim title</td>\n                  {this.props.claiming.selectedClaimType === \"all\" && (\n                    <td className=\"px-2 py-2\">Claim type</td>\n                  )}\n                  <td className=\"px-2 py-2\">Claim level</td>\n                  <td className=\"px-2 py-2\">Claim status</td>\n                  <td className=\"px-2 py-2\"></td>\n                </tr>\n              </thead>\n              <tbody>\n                {filterClaimsByClaimType(\n                  this.props.claiming.myClaims,\n                  this.props.claiming.selectedClaimType\n                ).length <= 0 ? (\n                  <tr\n                    className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                    key=\"key3201\"\n                  >\n                    <td className=\"px-3 py-1\" colSpan={4}>\n                      <NoResult\n                        theme={NoResultThemes.Light}\n                        value={\"No claim found!\"}\n                      />\n                    </td>\n                  </tr>\n                ) : search(\n                    filterClaimsByClaimType(\n                      this.props.claiming.myClaims,\n                      this.props.claiming.selectedClaimType\n                    ),\n                    this.state.searchClaim\n                  ).length <= 0 ? (\n                  <tr\n                    className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                    key=\"key3201\"\n                  >\n                    <td className=\"px-3 py-1\" colSpan={4}>\n                      <NoResult\n                        theme={NoResultThemes.Light}\n                        value={\"Nothing found!\"}\n                      />\n                    </td>\n                  </tr>\n                ) : (\n                  search(\n                    filterClaimsByClaimType(\n                      this.props.claiming.myClaims,\n                      this.props.claiming.selectedClaimType\n                    ),\n                    this.state.searchClaim\n                  ).map((claim: CandidateClaimInterface, index) => (\n                    <tr\n                      className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                      key={index + claim._id}\n                      onClick={() => {\n                        this.setViewClaim(true);\n                        this.setClaimId(claim._id);\n                      }}\n                    >\n                      <td className=\"px-3 py-1 whitespace-nowrap\">\n                        {index + 1}\n                      </td>\n                      <td className=\"px-3 py-1 whitespace-nowrap\">\n                        {claim.title}\n                      </td>\n                      {this.props.claiming.selectedClaimType === \"all\" && (\n                        <td className=\"px-3 py-1 whitespace-nowrap\">\n                          {whichClaimType(claim)\n                            ? capitalizeFirstLetter(whichClaimType(claim)!)\n                            : \"-\"}\n                        </td>\n                      )}\n                      <td className=\"px-3 py-1 whitespace-nowrap italic\">\n                        Level {claim.claim_level}\n                      </td>\n                      <td className=\"px-3 py-1 whitespace-nowrap\">\n                        <span\n                          className={`inline-block rounded-full duration-300 text-xs font-semibold px-3 py-1 ${\n                            whichClaimStatus(claim).classes\n                          }`}\n                        >\n                          {whichClaimStatus(claim).status}\n                        </span>\n                      </td>\n                      <td className=\"px-3 py-1 text-center whitespace-nowrap\">\n                        <button className=\"btn bg-blue-500 text-white group-hover:bg-blue-600\">\n                          View\n                        </button>\n                      </td>\n                    </tr>\n                  ))\n                )}\n              </tbody>\n            </table>\n          </section>\n        )}\n\n        {/* ----------------------------------------------------------------------- */}\n\n        {this.state.viewClaim &&\n          this.props.claiming.myClaims &&\n          this.state.claimId &&\n          getClaimById(this.props.claiming.myClaims, this.state.claimId) && (\n            <section className=\"bg-white w-full p-1 my-4\">\n              {/* VIEW CLAIM HEADER =============================== */}\n              <section className=\"flex items-center gap-2 py-2 border-b\">\n                <button\n                  className={`ml-3 bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n                    this.state.loadingRequest\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } animate__animated animate__fadeIn`}\n                  disabled={this.state.loadingRequest}\n                  onClick={() => {\n                    this.setViewClaim(false);\n                    this.setViewImage(false);\n                    this.setLoadingRequest(false);\n                    this.setFormError(null);\n                    this.setReClaiming(false);\n                    this.setReClaimingMsg(\"\");\n                  }}\n                >\n                  <MdArrowBack className=\"w-7 h-7\" />\n                </button>\n                {this.isDeleteAllowed(\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!\n                ) && (\n                  <button\n                    className={`bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n                      this.state.loadingRequest\n                        ? \"cursor-not-allowed\"\n                        : \"cursor-pointer\"\n                    } animate__animated animate__fadeIn hidden`}\n                    disabled={this.state.loadingRequest}\n                    // onClick={() => {\n                    //   this.handleDelete();\n                    // }}\n                  >\n                    <MdDelete className=\"w-7 h-7\" />\n                  </button>\n                )}\n              </section>\n              {/* END VIEW CLAIM HEADER =============================== */}\n              <section className=\"my-2\">\n                {/* VIEWING CLAIM OF A DOCUMENT ===================== */}\n                {getClaimById(this.props.claiming.myClaims, this.state.claimId)!\n                  .type_key === PlansTypeKeys.DOCUMENT_VALIDATION &&\n                this.props.claiming.candidateDocuments &&\n                getDocumentById(\n                  this.props.claiming.candidateDocuments,\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.claiming_on_id\n                ) ? (\n                  <ClaimDocView\n                    thisDoc={\n                      getDocumentById(\n                        this.props.claiming.candidateDocuments,\n                        getClaimById(\n                          this.props.claiming.myClaims,\n                          this.state.claimId\n                        )!.claiming_on_id\n                      )!\n                    }\n                    documentCategories={this.props.documentReducer}\n                    thisClaim={\n                      getClaimById(\n                        this.props.claiming.myClaims,\n                        this.state.claimId\n                      )!\n                    }\n                    viewImage={this.state.viewImage}\n                    setViewImage={this.setViewImage}\n                    loadingRequest={this.state.loadingRequest}\n                    setLoadingRequest={this.setLoadingRequest}\n                    reClaiming={this.state.reClaiming}\n                    setReClaiming={this.setReClaiming}\n                    reClaimingMsg={this.state.reClaimingMsg}\n                    setReClaimingMsg={this.setReClaimingMsg}\n                    formError={this.state.formError}\n                    setFormError={this.setFormError}\n                    claimReasons={this.props.claiming.claimReasons}\n                  />\n                ) : (\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.type_key === PlansTypeKeys.DOCUMENT_VALIDATION && (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"Document not found\"}\n                    />\n                  )\n                )}\n                {/* END VIEWING CLAIM OF A DOCUMENT ===================== */}\n\n                {/* ############################################################### */}\n\n                {/* VIEWING CLAIM OF AN APPLICATION ===================== */}\n                {getClaimById(this.props.claiming.myClaims, this.state.claimId)!\n                  .type_key === PlansTypeKeys.APPLICATION &&\n                this.props.claiming.candidateApplications &&\n                getApplicationById(\n                  this.props.claiming.candidateApplications,\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.claiming_on_id\n                ) ? (\n                  <ClaimApplView\n                    thisApplication={\n                      getApplicationById(\n                        this.props.claiming.candidateApplications,\n                        getClaimById(\n                          this.props.claiming.myClaims,\n                          this.state.claimId\n                        )!.claiming_on_id\n                      )!\n                    }\n                    documentCategories={this.props.documentReducer}\n                    thisClaim={\n                      getClaimById(\n                        this.props.claiming.myClaims,\n                        this.state.claimId\n                      )!\n                    }\n                    viewPosition={this.state.viewImage}\n                    setViewPosition={this.setViewImage}\n                    loadingRequest={this.state.loadingRequest}\n                    setLoadingRequest={this.setLoadingRequest}\n                    reClaiming={this.state.reClaiming}\n                    setReClaiming={this.setReClaiming}\n                    reClaimingMsg={this.state.reClaimingMsg}\n                    setReClaimingMsg={this.setReClaimingMsg}\n                    formError={this.state.formError}\n                    setFormError={this.setFormError}\n                    claimReasons={this.props.claiming.claimReasons}\n                  />\n                ) : (\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.type_key === PlansTypeKeys.APPLICATION && (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"Application not found\"}\n                    />\n                  )\n                )}\n                {/* END VIEWING CLAIM OF AN APPLICATION ===================== */}\n\n                {/* VIEWING CLAIM OF AN EXAM ===================== */}\n                {getClaimById(this.props.claiming.myClaims, this.state.claimId)!\n                  .type_key === PlansTypeKeys.EXAMINATION &&\n                this.props.claiming.myAnswer &&\n                this.props.courses &&\n                getCourseIdBySheetId(\n                  this.props.claiming.myAnswer,\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.claiming_on_id\n                ) &&\n                getCourseById(\n                  this.props.courses,\n                  getCourseIdBySheetId(\n                    this.props.claiming.myAnswer,\n                    getClaimById(\n                      this.props.claiming.myClaims,\n                      this.state.claimId\n                    )!.claiming_on_id\n                  )!.course\n                ) ? (\n                  <ClaimExamView\n                    thisExam={\n                      getCourseById(\n                        this.props.courses,\n                        getCourseIdBySheetId(\n                          this.props.claiming.myAnswer,\n                          getClaimById(\n                            this.props.claiming.myClaims,\n                            this.state.claimId\n                          )!.claiming_on_id\n                        )!.course\n                      )!\n                    }\n                    thisClaim={\n                      getClaimById(\n                        this.props.claiming.myClaims,\n                        this.state.claimId\n                      )!\n                    }\n                    viewPosition={this.state.viewImage}\n                    setViewPosition={this.setViewImage}\n                    loadingRequest={this.state.loadingRequest}\n                    setLoadingRequest={this.setLoadingRequest}\n                    reClaiming={this.state.reClaiming}\n                    setReClaiming={this.setReClaiming}\n                    reClaimingMsg={this.state.reClaimingMsg}\n                    setReClaimingMsg={this.setReClaimingMsg}\n                    formError={this.state.formError}\n                    setFormError={this.setFormError}\n                    thisExamSheet={\n                      getCourseIdBySheetId(\n                        this.props.claiming.myAnswer,\n                        getClaimById(\n                          this.props.claiming.myClaims,\n                          this.state.claimId\n                        )!.claiming_on_id\n                      )!\n                    }\n                    claimReasons={this.props.claiming.claimReasons}\n                  />\n                ) : (\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.type_key === PlansTypeKeys.EXAMINATION && (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"Exam not found\"}\n                    />\n                  )\n                )}\n                {/* END VIEWING CLAIM OF AN EXAM ===================== */}\n\n                {/* ----------------------------------------------------------- */}\n                {/* VIEWING CLAIM OF A DOCUMENT ===================== */}\n                {getClaimById(this.props.claiming.myClaims, this.state.claimId)!\n                  .type_key === PlansTypeKeys.PLACEMENT_TRANSFER &&\n                this.props.claiming.myPlacement ? (\n                  <ClaimPlacementView\n                    thisClaim={\n                      getClaimById(\n                        this.props.claiming.myClaims,\n                        this.state.claimId\n                      )!\n                    }\n                    loadingRequest={this.state.loadingRequest}\n                    setLoadingRequest={this.setLoadingRequest}\n                    reClaiming={this.state.reClaiming}\n                    setReClaiming={this.setReClaiming}\n                    reClaimingMsg={this.state.reClaimingMsg}\n                    setReClaimingMsg={this.setReClaimingMsg}\n                    formError={this.state.formError}\n                    setFormError={this.setFormError}\n                    myPlacement={this.props.claiming.myPlacement}\n                  />\n                ) : (\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.type_key === PlansTypeKeys.PLACEMENT_TRANSFER && (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"Placement not found\"}\n                    />\n                  )\n                )}\n                {/* END VIEWING CLAIM OF A DOCUMENT ===================== */}\n              </section>\n            </section>\n          )}\n        {/* end view claim */}\n\n        {/* ----------------------------------------------------------------------- */}\n        {/* CLAIM FORM  ################ */}\n        {this.state.claimForm && (\n          <ClaimForm\n            formState={this.state.claimForm}\n            setFormState={this.setClaimForm}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  sessionPlan,\n  claiming,\n  document,\n  course,\n}: StoreState): {\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  application_sessions: SessionPlanInterface[] | null;\n  documentReducer: DocumentReducerInterface;\n  courses: course[] | null;\n} => {\n  return {\n    auth: auth,\n    claiming,\n    application_sessions: sessionPlan.allSessionPlans,\n    documentReducer: document,\n    courses: course.courses,\n  };\n};\n\nexport const CandidateClaim = connect(mapStateToProps, {\n  getMyClaims,\n  GetAllSessionPlans,\n  getClaimReasons,\n  loadCourses,\n  getMyPlacement,\n  getMyAnswers,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  PushPopupAlert,\n})(Index);\n","import axios from \"axios\";\nimport React from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdInfoOutline, MdTurnedIn } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { createReClaim } from \"../../actions/claiming\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimDecisionStatus,\n  claimReasonInterface,\n  ClaimStatus,\n} from \"../../interfaces\";\nimport { ApplicationStates } from \"../../interfaces/application\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { DocumentReducerInterface } from \"../../reducers/document\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { DATE, errorToText, showDate } from \"../../utils/functions\";\nimport ViewRequirements from \"../Positions/ViewRequirements\";\nimport { FC_ApplicationPositionDistinctCategory } from \"./Candidate/ApplicationFormView\";\nimport { isClaimEvaluated } from \"./ClaimDocView\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\ntype ClaimDocViewProps = {\n  thisApplication: claimApplicationsInterface;\n  documentCategories: DocumentReducerInterface;\n  claimReasons: claimReasonInterface[] | null;\n  thisClaim: CandidateClaimInterface;\n  viewPosition: boolean;\n  setViewPosition: (value: boolean) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  reClaiming: boolean;\n  setReClaiming: (value: boolean) => void;\n  reClaimingMsg: string;\n  setReClaimingMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX DATA =====================\n  createReClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst ClaimDocView: React.FC<ClaimDocViewProps> = (props) => {\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim is required\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim._id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              {props.thisApplication.position.position_title}\n            </span>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewPosition(!props.viewPosition)}\n            >\n              {props.viewPosition ? \"Hide\" : \"More\"}\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisClaim.previous.status === ApplicationStates.Rejected\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } rounded px-3 py-1`}\n            >\n              {capitalizeFirstLetter(props.thisClaim.previous.status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {props.thisClaim.previous.evaluater.name}\n            </span>\n          </div>\n          {false && (\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Session:</span>\n              <span className=\"font-bold text-gray-900 py-1\">\n                {\n                  props.thisApplication.application_session\n                    .application_session_name\n                }\n              </span>\n            </div>\n          )}\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisApplication.createdAt)}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span\n              className=\"font-normal\"\n              dangerouslySetInnerHTML={{\n                __html: props.thisClaim.previous.reason,\n              }}\n            ></span>\n          </div>\n\n          {/* DISPLAY POSITION ==================================================== */}\n          {props.viewPosition && (\n            <div className=\"w-full my-1 animate__animated animate__fadeIn rounded\">\n              <div className=\"bg-white w-full\">\n                <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                  Position Details\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Desc:</span>\n                  <span className=\"font-semibold\">\n                    {props.thisApplication.position.description}\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>School level:</span>\n                  <span className=\"font-semibold\">\n                    {\n                      props.thisApplication.position.school_level_id\n                        .school_level_name\n                    }\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Institute:</span>\n                  <span className=\"font-semibold\">\n                    {\n                      props.thisApplication.position.education_institute_id\n                        .education_category_title\n                    }\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Courses:</span>\n                  <span className=\"flex items-center gap-2\">\n                    {props.thisApplication.position.courses.map(\n                      (item, index) => (\n                        <div\n                          key={index + item.course_id}\n                          className=\"flex items-center gap-1\"\n                        >\n                          <span className=\"font-semibold\">\n                            {item.course_name}\n                          </span>\n                          <span className=\"text-gray-600\">\n                            ({item.course_code})\n                          </span>\n                          {index !==\n                            props.thisApplication.position.courses.length - 1 &&\n                            \",\"}\n                        </div>\n                      )\n                    )}\n                  </span>\n                </div>\n\n                <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                  Position Requirements\n                </div>\n                {props.thisApplication.position.requirements.length > 0 ? (\n                  FC_ApplicationPositionDistinctCategory(\n                    props.thisApplication.position,\n                    props.documentCategories\n                  ).DistinctCategoriesTemp.map((item, index) => (\n                    <div\n                      className=\"bg-gray-100props.thisApplication.position rounded p-2\"\n                      key={index + item.category_id}\n                    >\n                      <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                        <MdTurnedIn />\n                        <span>{item.category_title}</span>\n                      </div>\n                      <div className=\"border bg-white mt-1\">\n                        <ViewRequirements\n                          requirements={FC_ApplicationPositionDistinctCategory(\n                            props.thisApplication.position,\n                            props.documentCategories\n                          ).PositionsTemp.filter(\n                            (req) => req.category_id === item.category_id\n                          )}\n                        />\n                      </div>\n                    </div>\n                  ))\n                ) : (\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"No requirements\"}\n                  ></NoResult>\n                )}\n              </div>\n            </div>\n          )}\n          {/* END DISPLAY POSITION ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt)}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-center justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <button\n                className=\"btn btn-blue\"\n                onClick={() => props.setReClaiming(true)}\n                disabled={props.loadingRequest}\n              >\n                Reclaim\n              </button>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your reclaim...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nexport default connect(null, {\n  createReClaim,\n  PushPopupAlert,\n})(ClaimDocView);\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdInfoOutline } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport {\n  loadQuestionTypes,\n  PushPopupAlert,\n  questionTypesStoreInterface,\n} from \"../../actions\";\nimport { createReClaim } from \"../../actions/claiming\";\nimport CandidateAnswersDetails from \"../../components/AnswersDetails/CandidateAnswersDetails\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimExamResultsDetails,\n  claimReasonInterface,\n  ClaimStatus,\n  course,\n} from \"../../interfaces\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { errorToText, showDate } from \"../../utils/functions\";\nimport { claimShowAnswer } from \"./Candidate/ExaminationFormView\";\nimport { isClaimEvaluated } from \"./ClaimDocView\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\ntype ClaimDocViewProps = {\n  thisExam: course;\n  thisExamSheet: ClaimExamResultsDetails;\n  thisClaim: CandidateClaimInterface;\n  viewPosition: boolean;\n  claimReasons: claimReasonInterface[] | null;\n  setViewPosition: (value: boolean) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  reClaiming: boolean;\n  setReClaiming: (value: boolean) => void;\n  reClaimingMsg: string;\n  setReClaimingMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX DATA =====================\n  questionTypes: questionTypesStoreInterface;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  createReClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst ClaimDocView: React.FC<ClaimDocViewProps> = (props) => {\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (\n      props.questionTypes.questionTypes === null ||\n      (props.questionTypes.questionTypes.length === 0 && loading)\n    ) {\n      props.loadQuestionTypes(setLoading);\n    }\n  }, [loading, props]);\n\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim is required\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim._id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              Exam of {props.thisExam.course_name}{\" \"}\n            </span>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewPosition(!props.viewPosition)}\n            >\n              {props.viewPosition ? \"Hide\" : \"More\"}\n            </button>\n          </div>\n\n          {/* DISPLAY EXAM SHEET ==================================================== */}\n          {props.viewPosition && (\n            <div className=\"bg-white w-full rounded p-2 mb-2\">\n              <CandidateAnswersDetails\n                showAnswers={false}\n                exam_id={claimShowAnswer(\n                  props.thisExamSheet,\n                  props.thisExam.course_name\n                )}\n              />\n            </div>\n          )}\n          {/* END DISPLAY POSITION ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt)}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {loading ? (\n                          <div className=\"w-24 h-3 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n                        ) : (\n                          props.thisClaim.userDetails.user_info.fname +\n                          \" \" +\n                          props.thisClaim.userDetails.user_info.lname\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-center justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <button\n                className=\"btn btn-blue\"\n                onClick={() => props.setReClaiming(true)}\n                disabled={props.loadingRequest}\n              >\n                Reclaim\n              </button>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your reclaim...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  questionTypes,\n}: StoreState): {\n  questionTypes: questionTypesStoreInterface;\n} => {\n  return { questionTypes: questionTypes };\n};\n\nexport default connect(mapStateToProps, {\n  loadQuestionTypes,\n  createReClaim,\n  PushPopupAlert,\n})(ClaimDocView);\n","import axios from \"axios\";\nimport React from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { createReClaim } from \"../../actions/claiming\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimStatus,\n} from \"../../interfaces\";\nimport { candidatePlacementInterface } from \"../../interfaces/placement\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { errorToText, showDate } from \"../../utils/functions\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nexport const isClaimEvaluated = (\n  thisClaim: CandidateClaimInterface,\n  level: number\n): boolean => {\n  const _thisClaim = thisClaim.claims.find(\n    (item) =>\n      item.level === level && item.claim_status === ClaimStatus.EVALUATED\n  );\n  if (_thisClaim) {\n    return true;\n  }\n  return false;\n};\n\ntype ClaimPlacementViewProps = {\n  myPlacement: candidatePlacementInterface;\n  thisClaim: CandidateClaimInterface;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  reClaiming: boolean;\n  setReClaiming: (value: boolean) => void;\n  reClaimingMsg: string;\n  setReClaimingMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX DATA =====================\n  createReClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst ClaimPlacementView: React.FC<ClaimPlacementViewProps> = (props) => {\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim sent successful\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim._id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>School:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.myPlacement.placed.school.school_name}\n              </span>\n            </div>\n          </div>\n          {/* <div className=\"flex items-center\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Position:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.myPlacement.placed.school.school_name}\n              </span>\n            </div>\n          </div> */}\n          <div className=\"flex items-center\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>District:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.myPlacement.placed.school.district_id.district_name}\n              </span>\n            </div>\n          </div>\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt)}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-center justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <button\n                className=\"btn btn-blue\"\n                onClick={() => props.setReClaiming(true)}\n                disabled={props.loadingRequest}\n              >\n                Reclaim\n              </button>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your reclaim...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nexport default connect(null, {\n  createReClaim,\n  PushPopupAlert,\n})(ClaimPlacementView);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport {\n  GetClaimingTypes,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  setSelectedClaimType,\n} from \"../../../actions/claiming\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport { MainItem } from \"../../../components/Navigation/SideNavigation\";\nimport { ClaimStatus, PlansTypeKeys } from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\n\ntype FilterByTypeProps = {\n  // thisClaimType: ClaimTypesInterface | \"ALL\";\n  // setThisClaimType: React.Dispatch<\n  //   React.SetStateAction<ClaimTypesInterface | \"ALL\">\n  // >;\n  loadingClaims: boolean;\n  FC_CountByType?: Function;\n\n  // REDUX PROPS =======================================\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  GetClaimingTypes: Function;\n  setSelectedClaimType: Function;\n  getMyRejectedApplications: Function;\n  getMyRejectedDocuments: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\nconst FilterByType: React.FC<FilterByTypeProps> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingRejectedApplications, setLoadingRejectedApplications] =\n    useState<boolean>(true);\n  const [loadingRejectedDocuments, setLoadingRejectedDocuments] =\n    useState<boolean>(true);\n  const [loadingClaimTypes, setLoadingClaimTypes] = useState<boolean>(true);\n\n  useEffect(() => {\n    if (props.claiming.candidateApplications === null) {\n      props.getMyRejectedApplications(\n        props.auth.user.user_id,\n        (status: boolean, msg: string) => {\n          if (status === false) {\n            if (msg.length > 0) {\n              props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            setLoadingRejectedApplications(false);\n          }\n        }\n      );\n    } else if (loadingRejectedApplications) {\n      setLoadingRejectedApplications(false);\n    }\n\n    if (props.claiming.candidateDocuments === null) {\n      console.log(\"filterrrrrrrrrrrrrrrrrrrr loadingRejectedDocuments\");\n      props.getMyRejectedDocuments((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          setLoadingRejectedDocuments(false);\n        }\n      });\n    } else if (loadingRejectedDocuments) {\n      setLoadingRejectedDocuments(false);\n    }\n\n    if (props.claiming.claimTypes === null) {\n      props.GetClaimingTypes((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          setLoadingClaimTypes(false);\n        }\n      });\n    } else if (loadingClaimTypes) {\n      setLoadingClaimTypes(false);\n    }\n\n    if (\n      !loadingRejectedApplications &&\n      !loadingRejectedDocuments &&\n      !loadingClaimTypes &&\n      loading\n    ) {\n      setLoading(false);\n    }\n  }, [\n    loading,\n    loadingClaimTypes,\n    loadingRejectedApplications,\n    loadingRejectedDocuments,\n    props,\n  ]);\n\n  const countClaims = (\n    claiming: ClaimingReducerType,\n    thisType: PlansTypeKeys | \"all\"\n  ): number => {\n    let result: number = 0;\n\n    if (claiming.myClaims && thisType === \"all\") {\n      result = claiming.myClaims.filter(\n        (item) =>\n          item.last_claim_status !== ClaimStatus.DELETED &&\n          item.last_claim_status !== ClaimStatus.COMPLETED\n      ).length;\n    }\n    if (claiming.myClaims && thisType !== \"all\") {\n      result = claiming.myClaims.filter(\n        (item) =>\n          item.type_key === thisType &&\n          item.last_claim_status !== ClaimStatus.DELETED &&\n          item.last_claim_status !== ClaimStatus.COMPLETED\n      ).length;\n    }\n\n    return result;\n  };\n\n  return (\n    <React.Fragment>\n      <span className=\"mt-2 text-sm\">Filter by claim type</span>\n      {/* WHILE LOADING DATA ================================== */}\n      {(loading || props.loadingClaims) && (\n        <section className=\"space-y-2\">\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </section>\n      )}\n      {/* END WHILE LOADING DATA ================================== */}\n\n      {/* AFTER LOADING DATA ================================== */}\n      {!loading && !props.loadingClaims && (\n        <section>\n          {/* ALL ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(\"ALL\");\n              props.setSelectedClaimType(\"all\");\n            }}\n          >\n            <MainItem\n              title=\"All\"\n              active={props.claiming.selectedClaimType === \"all\"}\n              count={countClaims(props.claiming, \"all\")}\n            />\n          </div>\n          {/* APPLICATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(ClaimTypesInterface.DOCUMENT);\n              props.setSelectedClaimType(PlansTypeKeys.APPLICATION);\n            }}\n          >\n            <MainItem\n              title={\"Application\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.APPLICATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.APPLICATION)}\n            />\n          </div>\n          {/* DOCUMENT ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.DOCUMENT_VALIDATION);\n            }}\n          >\n            <MainItem\n              title={\"Document\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION\n              }\n              count={countClaims(\n                props.claiming,\n                PlansTypeKeys.DOCUMENT_VALIDATION\n              )}\n            />\n          </div>\n          {/* EXAMINATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.EXAMINATION);\n            }}\n          >\n            <MainItem\n              title={\"Exam\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.EXAMINATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.EXAMINATION)}\n            />\n          </div>\n          {/* PLACEMENT TRANSFER ================================= */}\n          {false && (\n            <div\n              className=\"mt-2\"\n              onClick={() => {\n                props.setSelectedClaimType(PlansTypeKeys.PLACEMENT_TRANSFER);\n              }}\n            >\n              <MainItem\n                title={\"Placement\"}\n                active={\n                  props.claiming.selectedClaimType !== \"all\" &&\n                  props.claiming.selectedClaimType ===\n                    PlansTypeKeys.PLACEMENT_TRANSFER\n                }\n                count={countClaims(\n                  props.claiming,\n                  PlansTypeKeys.PLACEMENT_TRANSFER\n                )}\n              />\n            </div>\n          )}\n          {/* <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setThisClaimType(ClaimTypesInterface.APPLICATION);\n            }}\n          >\n            <MainItem\n              title={capitalizeFirstLetter(ClaimTypesInterface.APPLICATION)}\n              active={props.thisClaimType === ClaimTypesInterface.APPLICATION}\n              count={countClaims(props.claiming).applications}\n            />\n          </div>\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setThisClaimType(ClaimTypesInterface.PLACEMENT);\n            }}\n          >\n            <MainItem\n              title={capitalizeFirstLetter(ClaimTypesInterface.PLACEMENT)}\n              active={props.thisClaimType === ClaimTypesInterface.PLACEMENT}\n              count={countClaims(props.claiming).placement}\n            />\n          </div> */}\n        </section>\n      )}\n      {/* END AFTER LOADING DATA ================================== */}\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  claiming,\n}: StoreState): { auth: Auth; claiming: ClaimingReducerType } => {\n  return { auth, claiming };\n};\n\nexport default connect(mapStateToProps, {\n  GetClaimingTypes,\n  setSelectedClaimType,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  PushPopupAlert,\n})(FilterByType);\n","import React, { useEffect, useState } from \"react\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\n\ntype ViewPDFProps = {\n  file_url: string;\n  class_name: string;\n  frame_title: string;\n  setLoadingFile: (state: boolean) => void;\n};\n\nconst ViewPDF: React.FC<ViewPDFProps> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<{ element: string; msg: string } | null>(\n    null\n  );\n  useEffect(() => {\n    if (loading) {\n      if (isEmptyOrSpaces(props.file_url)) {\n        setError({ element: \"PDF_FILE\", msg: \"File url is required\" });\n      } else if (error !== null) {\n        setError(null);\n      }\n      setLoading(false);\n    }\n  }, [error, loading, props.file_url]);\n\n  return (\n    <div className=\"w-full\">\n      {error ? (\n        <div className=\"alert-warning mt-2 mx-14\">{error.msg}</div>\n      ) : (\n        <object\n          data={props.file_url}\n          type=\"application/pdf\"\n          className={props.class_name}\n          onLoad={() => props.setLoadingFile(false)}\n        >\n          <iframe\n            src={props.file_url}\n            className={props.class_name}\n            title={props.frame_title}\n            onLoad={() => props.setLoadingFile(false)}\n          >\n            <p>This browser does not support PDF!</p>\n          </iframe>\n        </object>\n      )}\n    </div>\n  );\n};\n\nexport default ViewPDF;\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { BiExport, BiSort } from \"react-icons/bi\";\nimport { FiEdit } from \"react-icons/fi\";\nimport { ImFilesEmpty } from \"react-icons/im\";\nimport {\n  MdCheckBox,\n  MdCheckBoxOutlineBlank,\n  MdHistory,\n  MdRadioButtonChecked,\n  MdRadioButtonUnchecked,\n} from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadEducationCategories,\n  PushPopupAlert,\n  schoolLevelsStoreInterface,\n} from \"../../../actions\";\nimport {\n  getAllClaims,\n  getAllApplications,\n  setSelectedClaimType,\n  GetClaimingTypes,\n} from \"../../../actions/claiming\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport {\n  generatePDF,\n  reportSettingsInterface,\n} from \"../../../components/DownloadPDF/rest\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport {\n  SideNavigation,\n  MainItem,\n} from \"../../../components/Navigation/SideNavigation\";\nimport {\n  CandidateClaimInterface,\n  claimReportContentInterface,\n  claimReportContentKeyInterface,\n  ClaimToPrintInterface,\n} from \"../../../interfaces/claimings\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport ExportToExcel from \"../../../utils/ExportToExcel\";\nimport { DATE, sortThisArray } from \"../../../utils/functions\";\nimport { ClaimTypesEnum, whichClaimType } from \"../../Claimings/Candidate\";\nimport TableLoading from \"../../../components/Loading/TableLoading\";\nimport {\n  education_category,\n  PlansTypeKeys,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport ChooseSession from \"../../SessionSettings/ChooseSession\";\nimport NoSession from \"../../SessionSettings/NoSession\";\n\nexport const reportClaimType = (\n  type: PlansTypeKeys | \"all\"\n): ClaimTypesEnum | \"all\" => {\n  let result: ClaimTypesEnum | \"all\" = \"all\";\n  switch (type) {\n    case PlansTypeKeys.APPLICATION:\n      result = ClaimTypesEnum.application;\n      break;\n    case PlansTypeKeys.DOCUMENT_VALIDATION:\n      result = ClaimTypesEnum.document;\n      break;\n    case PlansTypeKeys.EXAMINATION:\n      result = ClaimTypesEnum.exam;\n      break;\n    case PlansTypeKeys.MARKS_PUBLICATION:\n      result = ClaimTypesEnum.marks_publication;\n      break;\n    case PlansTypeKeys.PLACEMENT_TRANSFER:\n      result = ClaimTypesEnum.placement;\n      break;\n    default:\n      result = \"all\";\n      break;\n  }\n\n  return result;\n};\n\nconst searchData = (\n  objList: ClaimToPrintInterface[],\n  text: string\n): ClaimToPrintInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (\n        prop === \"names\" ||\n        prop === \"gender\" ||\n        prop === \"national_id\" ||\n        prop === \"phone\" ||\n        prop === \"email\" ||\n        prop === \"claim_title\" ||\n        prop === \"claim_type\" ||\n        prop === \"claim_level\" ||\n        prop === \"education_category\" ||\n        prop === \"claim_session\" ||\n        prop === \"date\" ||\n        prop === \"decision\"\n      ) {\n        if (product[prop]) {\n          flag =\n            product[prop]!.toString()\n              .toLowerCase()\n              .indexOf(text.toLowerCase()) > -1;\n        }\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n};\n\nconst defaultReportContent: claimReportContentInterface[] = [\n  {\n    key: claimReportContentKeyInterface.names,\n    title: \"Applicant Names\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.national_id,\n    title: \"National ID\",\n    status: true,\n  },\n  { key: claimReportContentKeyInterface.gender, title: \"Gender\", status: true },\n  { key: claimReportContentKeyInterface.phone, title: \"Phone\", status: true },\n  {\n    key: claimReportContentKeyInterface.claim_session,\n    title: \"Claim Session\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.education_category,\n    title: \"Education Institute\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.date,\n    title: \"Claim Date\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.decision,\n    title: \"Decision\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.claim_title,\n    title: \"Claim Title\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.claim_type,\n    title: \"Claim Type\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.claim_level,\n    title: \"Claim Level\",\n    status: true,\n  },\n];\n\ntype AppProps = {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  // systemPositions: PositionAPI[] | null;\n  // courses: course[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  // loadCourses: Function;\n  // getAllAnswers: Function;\n  setSelectedClaimType: Function;\n  // getPositions: Function;\n  getAllClaims: Function;\n  GetClaimingTypes: Function;\n  // getAllApplications: Function;\n  GetAllSessionPlans: Function;\n  // getDocumentCategory: Function;\n  // getDocumentSubCategory: Function;\n  // getDocumentFields: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\nconst _ClaimingReport: React.FC<AppProps> = (props) => {\n  const [thisPeriod, setThisPeriod] = useState<SessionPlanInterface | null>(\n    null\n  );\n  const [thisLevel, setThisLevel] = useState<number | \"all\">(\"all\");\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingSession, setLoadingSession] = useState<boolean>(true);\n  const [periodChanged, setPeriodChanged] = useState<boolean>(false);\n  const [loadingClaims, setLoadingClaims] = useState<boolean>(true);\n  const [loadingInstitutes, setLoadingInstitutes] = useState<boolean>(true);\n  const [downloading, setDownloading] = useState<boolean>(false);\n  const [claimToPrint, setClaimToPrint] = useState<\n    ClaimToPrintInterface[] | null\n  >();\n\n  const [sortProperty, setSortProperty] = useState<string>(\"\");\n  const [isSorted, setIsSorted] = useState<boolean>(false);\n  const [sortOrder, setSortOrder] = useState<\"ASC\" | \"DESC\">(\"ASC\");\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const [generateReportModal, setGenerateReportModal] = useState<{\n    reportType: \"EXCEL\" | \"PDF\";\n    status: boolean;\n  } | null>(null);\n  const [reportTitle, setReportTitle] = useState<string>(\"\");\n  const [reportContent, setReportContent] =\n    useState<claimReportContentInterface[]>(defaultReportContent);\n  const [selectAll, setSelectAll] = useState<boolean>(true);\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [selectPeriod, setSelectPeriod] = useState<boolean>(false);\n  const [thisEducation, setThisEducation] = useState<\n    education_category | \"all\"\n  >(\"all\");\n\n  useEffect(() => {\n    // LOADING EDUCATION CATEGORY =================================\n    if (\n      props.schoolLevels.education_categories === null ||\n      props.schoolLevels.education_categories.length === 0\n    ) {\n      props.loadEducationCategories(setLoadingInstitutes);\n    } else {\n      setLoadingInstitutes(false);\n    }\n    // END LOADING EDUCATION CATEGORY =================================\n    // LOADING CLAIM TYPES ========================================\n    if (props.claiming.claimTypes === null) {\n      props.GetClaimingTypes((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n    // END LOADING CLAIM TYPES ========================================\n    // LOADING APPLICATION SESSION ====================================\n    if (props.application_sessions === null) {\n      props.GetAllSessionPlans((status: boolean, msg: string) => {\n        if (!status) {\n          setLoadingSession(false);\n          setLoading(false);\n          if (msg.length) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    } else if (loadingSession) {\n      setLoading(false);\n      setLoadingSession(false);\n    }\n\n    // SETTING ACTIVE SESSION ==========================\n    if (\n      thisPeriod === null &&\n      !loadingSession &&\n      props.application_sessions &&\n      props.application_sessions.length > 0\n    ) {\n      let thisSession = props.application_sessions.find(\n        (item) => item.is_active === true\n      );\n      setThisPeriod(thisSession ? thisSession : props.application_sessions[0]);\n      // if (props.claiming.allAnswer === null) {\n      //   props.getAllAnswers(\n      //     thisSession\n      //       ? thisSession.session_plan_id\n      //       : props.application_sessions[0].session_plan_id,\n      //     (status: boolean, msg: string) => {\n      //       setLoading(status);\n      //       if (!status && msg.length) {\n      //         props.PushPopupAlert({\n      //           title: msg,\n      //           theme: PopupAlertTheme.danger,\n      //         });\n      //       }\n      //     }\n      //   );\n      // }\n    }\n\n    // LOADING DOCUMENT CATEGORIES ==========================\n    // if (!props.documentReducer.documentCategory && loadingDocuments) {\n    //   props.getDocumentCategory();\n    //   setLoadingDocuments(false);\n    // } else if (loadingDocuments) {\n    //   setLoadingDocuments(false);\n    // }\n    // LOADING DOCUMENT CLARIFICATIONS ==========================\n    // if (!props.documentReducer.documentSubCategory && loadingClarifications) {\n    //   props.getDocumentSubCategory();\n    //   setLoadingClarifications(false);\n    // } else if (loadingClarifications) {\n    //   setLoadingClarifications(false);\n    // }\n    // LOADING DOCUMENT FIELDS ==========================\n    // if (!props.documentReducer.documentFields && loadingFields) {\n    //   props.getDocumentFields();\n    //   setLoadingFields(false);\n    // } else if (loadingFields) {\n    //   setLoadingFields(false);\n    // }\n\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (props.claiming.allClaims === null && thisPeriod !== null) {\n      props.getAllClaims(\n        2,\n        thisPeriod.session_plan_id,\n        (status: boolean, msg: string) => {\n          !status && setLoadingClaims(status);\n          if (status === false && msg.length) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    } else if (thisPeriod && loadingClaims) {\n      setLoadingClaims(false);\n    }\n\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    // if (props.claiming.allApplications === null && thisPeriod !== null) {\n    //   props.getAllApplications(\n    //     thisPeriod.session_plan_id,\n    //     (status: boolean, msg: string) => {\n    //       !status && setLoadingApplications(status);\n    //       if (status === false && msg.length) {\n    //         props.PushPopupAlert({\n    //           title: msg,\n    //           theme: PopupAlertTheme.danger,\n    //         });\n    //       }\n    //     }\n    //   );\n    // } else if (thisPeriod && loadingApplications) {\n    //   setLoadingApplications(false);\n    // }\n\n    // if (props.systemPositions === null) {\n    //   props.getPositions((status: boolean, msg: string) => {\n    //     setLoadingPosition(status);\n    //     console.log({ status: status, msg: msg });\n    //     if (msg.length) {\n    //       props.PushPopupAlert({\n    //         title: msg,\n    //         theme: PopupAlertTheme.danger,\n    //       });\n    //     }\n    //   });\n    // } else if (loadingPosition) {\n    //   setLoadingPosition(false);\n    // }\n\n    // LOADING COURSE ====================================\n    // if (\n    //   props.courses === null ||\n    //   (props.courses.length === 0 && loadingCourses)\n    // ) {\n    //   props.loadCourses(setLoadingCourses);\n    // } else if (loadingCourses) {\n    //   setLoadingCourses(false);\n    // }\n  }, [loadingClaims, loadingSession, props, thisPeriod]);\n\n  if (loading === true) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading Data...\n      </div>\n    );\n  }\n\n  if (props.application_sessions && props.application_sessions.length === 0) {\n    return <NoSession />;\n  }\n\n  // const displayClaimTitle = (thisClaim: CandidateClaimInterface): string => {\n  //   let result: string = thisClaim.claiming_on_id;\n  //   if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n  //     result =\n  //       thisClaim.userDetails.details.filter(\n  //         (item) => item.validation_status !== \"waiting\"\n  //       ).length > 0\n  //         ? adminDisplayClaimTitle(\n  //             props.documentReducer,\n  //             thisClaim.userDetails.details.filter(\n  //               (item) => item.validation_status !== \"waiting\"\n  //             ),\n  //             thisClaim\n  //           )\n  //         : \"Document not found\";\n  //   }\n  //   if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n  //     if (props.claiming.allApplications) {\n  //       let thisApplication = props.claiming.allApplications.find(\n  //         (item) => item._id === thisClaim.claiming_on_id\n  //       );\n  //       if (\n  //         thisApplication &&\n  //         props.claiming.allApplications &&\n  //         props.systemPositions\n  //       ) {\n  //         let thisPosition = props.systemPositions.find(\n  //           (item) => item.position_id === thisApplication!.position\n  //         );\n  //         if (thisPosition) {\n  //           result = thisPosition.position_title;\n  //         } else {\n  //           result = \"Application not found\";\n  //         }\n  //       }\n  //     }\n  //   }\n\n  //   if (\n  //     thisClaim.type_key === PlansTypeKeys.EXAMINATION &&\n  //     props.courses &&\n  //     props.claiming.allAnswer\n  //   ) {\n  //     let thisAnswer = getCourseIdBySheetId(\n  //       props.claiming.allAnswer,\n  //       thisClaim.claiming_on_id\n  //     );\n  //     if (thisAnswer && getCourseById(props.courses, thisAnswer.course)) {\n  //       result =\n  //         \"Exam of \" +\n  //         getCourseById(props.courses, thisAnswer.course)!.course_name;\n  //     } else {\n  //       result = \"Unknown exam\";\n  //     }\n  //   }\n\n  //   return result;\n  // };\n\n  // const getClaimInstitute = (\n  //   thisClaim: CandidateClaimInterface\n  // ): string | null => {\n  //   if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n  //     return null;\n  //   }\n  //   // if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n  //   //   if (props.claiming.allApplications) {\n  //   //     let thisApplication = props.claiming.allApplications.find(\n  //   //       (item) => item._id === thisClaim.claiming_on_id\n  //   //     );\n  //   //     if (\n  //   //       thisApplication &&\n  //   //       props.claiming.allApplications &&\n  //   //       props.systemPositions\n  //   //     ) {\n  //   //       // return thisApplication.\n  //   //       let thisPosition = props.systemPositions.find(\n  //   //         (item) => item.position_id === thisApplication!.position\n  //   //       );\n  //   //       if (thisPosition) {\n  //   //         return thisPosition.education_institute_id.education_institute_id;\n  //   //       }\n  //   //     }\n  //   //   }\n  //   // }\n\n  //   return null;\n  // };\n\n  const onPeriodChange = (period_id: string) => {\n    setPeriodChanged(true);\n    props.getAllClaims(2, period_id, (status: boolean, msg: string) => {\n      !status && setPeriodChanged(false);\n      if (status === false && msg.length) {\n        props.PushPopupAlert({\n          title: msg,\n          theme: PopupAlertTheme.danger,\n        });\n      }\n    });\n  };\n\n  const isClaimTypeActive = (\n    selectedType: PlansTypeKeys | \"all\",\n    currentType: PlansTypeKeys | \"all\"\n  ): boolean => {\n    if (currentType === \"all\" && selectedType === \"all\") {\n      return true;\n    } else if (currentType !== \"all\" && selectedType !== \"all\") {\n      if (currentType === selectedType) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  const setSort = (thisProperty: string) => {\n    if (sortProperty === thisProperty && sortOrder === \"ASC\") {\n      setSortOrder(\"DESC\");\n    } else {\n      setSortOrder(\"ASC\");\n    }\n    setSortProperty(thisProperty);\n    setIsSorted(true);\n  };\n\n  const ClaimTypes = (\n    claims: ClaimToPrintInterface[]\n  ): {\n    title: string;\n    count: number;\n    type: PlansTypeKeys | \"all\";\n  }[] => {\n    let output: {\n      title: string;\n      count: number;\n      type: PlansTypeKeys | \"all\";\n    }[] = [{ title: \"All types\", count: claims.length, type: \"all\" }];\n\n    Object.values(PlansTypeKeys).forEach((PlansKey) => {\n      if (PlansKey !== PlansTypeKeys.MARKS_PUBLICATION) {\n        output.push({\n          title: capitalizeFirstLetter(reportClaimType(PlansKey)),\n          count:\n            claims.length > 0\n              ? claims.filter(\n                  (itm) => itm.claim_type === reportClaimType(PlansKey)\n                ).length\n              : 0,\n          type: PlansKey,\n        });\n      }\n    });\n\n    return output;\n  };\n\n  const ClaimLevels = (\n    claims: ClaimToPrintInterface[]\n  ): {\n    title: string;\n    count: number;\n    level: number | \"all\";\n  }[] => {\n    let output: {\n        title: string;\n        count: number;\n        level: number | \"all\";\n      }[] = [{ title: \"All levels\", count: claims.length, level: \"all\" }],\n      levels: number[] = [1, 2];\n    for (let i in levels) {\n      output.push({\n        title: \"Level \" + levels[i],\n        count: claims.filter((itm) => itm.claim_level === levels[i]).length,\n        level: levels[i],\n      });\n    }\n    return output;\n  };\n\n  const updateReportContent = (key: claimReportContentKeyInterface) => {\n    let index: number = reportContent.findIndex((item) => item.key === key);\n    let newArray: claimReportContentInterface[] = reportContent;\n    newArray[index].status = !newArray[index].status;\n    setReportContent(newArray);\n    let isSelectAllNeeded = newArray.find((item) => item.status === false);\n    if (isSelectAllNeeded) {\n      setSelectAll(false);\n    } else {\n      setSelectAll(true);\n    }\n\n    // UPDATE APPLICATION LIST FOR UPDATE ==============================\n    updateClaimToPrint();\n  };\n\n  const updateClaimToPrint = () => {\n    // UPDATE REPORT TITLE ========================\n    if (thisPeriod) {\n      let title = \"Claim Report \" + thisPeriod.session_plan_name;\n      // if (thisLevel!==\"all\") {\n      //   title = \"Claim Report - Level \"+thisLevel + thisPeriod.session_plan_name;\n      // }\n      setReportTitle(title);\n    }\n    // UPDATE CONTENT =============================\n    if (props.claiming.allClaims && props.claiming.claimTypes) {\n      let arrayNew: ClaimToPrintInterface[] = [];\n      let n: number = 1;\n      for (const key in props.claiming.allClaims) {\n        if (\n          Object.prototype.hasOwnProperty.call(props.claiming.allClaims, key)\n        ) {\n          for (const keyClaim in props.claiming.allClaims[key].claims) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                props.claiming.allClaims[key].claims,\n                keyClaim\n              )\n            ) {\n              const element = props.claiming.allClaims[key].claims[keyClaim];\n              const thisType = whichClaimType(props.claiming.allClaims[key]);\n              let dataArray: ClaimToPrintInterface = {\n                claim_id: n,\n                names:\n                  props.claiming.allClaims[key].userDetails.user_info.fname +\n                  \" \" +\n                  props.claiming.allClaims[key].userDetails.user_info.lname,\n                gender: props.claiming.allClaims[key].userDetails.user_info.sex\n                  ? \"Male\"\n                  : \"Female\",\n                national_id: props.claiming.allClaims[key].userDetails.n_id!,\n                phone: props.claiming.allClaims[key].userDetails.phone_number,\n                email: props.claiming.allClaims[key].userDetails.email,\n                claim_type: thisType ? thisType : \"\",\n                claim_level: element.level,\n                education_category: \"\",\n                claim_session: thisPeriod ? thisPeriod.session_plan_name : \"\",\n                date: DATE(element.createdAt),\n                decision: element.decision_taken_status\n                  ? element.decision_taken_status\n                  : \"PENDING\",\n                claim_title: props.claiming.allClaims[key].title,\n              };\n              for (const key in reportContent) {\n                if (Object.prototype.hasOwnProperty.call(reportContent, key)) {\n                  if (!reportContent[key].status) {\n                    delete dataArray[reportContent[key].key];\n                  }\n                }\n              }\n              arrayNew.push(dataArray);\n              n++;\n            }\n          }\n        }\n      }\n      setClaimToPrint(arrayNew);\n      arrayNew = [];\n      n = 1;\n    }\n  };\n\n  const FC_ClaimData = (\n    allClaims: CandidateClaimInterface[] | null\n  ): ClaimToPrintInterface[] | null => {\n    if (allClaims === null) return null;\n    let arrayNew: ClaimToPrintInterface[] = [];\n    let n: number = 1;\n    // LOOP IN ALL CLAIM ONE BY ONE ###########################\n    for (const key in allClaims) {\n      if (Object.prototype.hasOwnProperty.call(allClaims, key)) {\n        // LOOP IN ALL CLAIM OF ONE FILE ONE BY ONE ===========================\n        for (const keyClaim in allClaims[key].claims) {\n          if (\n            Object.prototype.hasOwnProperty.call(\n              allClaims[key].claims,\n              keyClaim\n            )\n          ) {\n            const element = allClaims[key].claims[keyClaim];\n            const thisType = whichClaimType(allClaims[key]);\n            let dataArray: ClaimToPrintInterface = {\n              claim_id: n,\n              names:\n                allClaims[key].userDetails.user_info.fname +\n                \" \" +\n                allClaims[key].userDetails.user_info.lname,\n              gender: allClaims[key].userDetails.user_info.sex\n                ? \"Male\"\n                : \"Female\",\n              national_id: allClaims[key].userDetails.n_id!,\n              phone: allClaims[key].userDetails.phone_number,\n              email: allClaims[key].userDetails.email,\n              claim_type: thisType ? thisType : \"\",\n              claim_level: element.level,\n              education_category:\n                allClaims[key].institute_id &&\n                !isEmptyOrSpaces(allClaims[key].institute_id)\n                  ? allClaims[key].institute_id\n                  : null,\n              claim_session: thisPeriod ? thisPeriod.session_plan_name : \"\",\n              date: DATE(element.createdAt),\n              decision: element.decision_taken_status\n                ? element.decision_taken_status\n                : \"PENDING\",\n              claim_title: allClaims[key].title\n                ? allClaims[key].title\n                : \"Undefined\",\n            };\n            // for (const key in reportContent) {\n            //   if (Object.prototype.hasOwnProperty.call(reportContent, key)) {\n            //     if (!reportContent[key].status) {\n            //       delete dataArray[reportContent[key].key];\n            //     }\n            //   }\n            // }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n      }\n    }\n    return arrayNew;\n  };\n\n  const resetReportContent = (currentState: boolean) => {\n    let newArray: claimReportContentInterface[] = reportContent;\n    for (const key in newArray) {\n      if (isChangeAllowed(newArray[key].key)) {\n        newArray[key].status = !currentState;\n      }\n    }\n\n    setReportContent(newArray);\n    setSelectAll(!currentState);\n    updateClaimToPrint();\n  };\n\n  const isChangeAllowed = (key: claimReportContentKeyInterface): boolean => {\n    if (\n      key === claimReportContentKeyInterface.names ||\n      key === claimReportContentKeyInterface.decision ||\n      key === claimReportContentKeyInterface.claim_session ||\n      key === claimReportContentKeyInterface.claim_type ||\n      key === claimReportContentKeyInterface.date\n    ) {\n      return false;\n    }\n    return true;\n  };\n\n  const FC_GeneratePDF = () => {\n    if (!document.querySelectorAll(\"#report_content tbody tr\").length) {\n      props.PushPopupAlert({\n        title: `Can't generate Report of empty Data`,\n        theme: PopupAlertTheme.warning,\n      });\n      return;\n    }\n\n    if (thisPeriod) {\n      const table: HTMLElement | null =\n        document.getElementById(\"report_content\");\n      const reportSettings: reportSettingsInterface = {\n        doneBy: props.auth.user.fname + \" \" + props.auth.user.lname,\n        title: \"Claim Report\",\n        subjectTitle: \"Claim type\",\n        subject:\n          props.claiming.selectedClaimType === \"all\"\n            ? \"All Types\"\n            : props.claiming.selectedClaimType,\n        period: thisPeriod.session_plan_name,\n        footer: \"Online Recruitment\",\n        institute:\n          thisEducation === \"all\"\n            ? \"All institute\"\n            : thisEducation.education_category_title,\n      };\n      table && generatePDF(reportSettings, table, setDownloading);\n    }\n  };\n\n  const FC_FilterClaims = (\n    allClaims: ClaimToPrintInterface[],\n    claimType: PlansTypeKeys | \"all\",\n    claimLevel: number | \"all\",\n    institute: education_category | \"all\"\n  ): ClaimToPrintInterface[] => {\n    let result: ClaimToPrintInterface[] = allClaims;\n    if (claimType !== \"all\") {\n      result = result.filter((item) => item.claim_type === claimType);\n    }\n    if (claimLevel !== \"all\") {\n      result = result.filter((item) => item.claim_level === claimLevel);\n    }\n\n    if (institute !== \"all\") {\n      result = result.filter(\n        (item) =>\n          item.education_category === null ||\n          item.education_category === institute.education_institute_id\n      );\n    }\n\n    return result;\n  };\n\n  return (\n    <Fragment>\n      <SideNavigation>\n        <div className=\"flex flex-col mb-4\">\n          <span className=\"text-sm text-gray-600 mb-2\">\n            Education categories:\n          </span>\n          {props.schoolLevels.education_categories === null ||\n          loadingInstitutes ? (\n            <Loading />\n          ) : props.schoolLevels.education_categories.length === 0 ? (\n            <span>No result found</span>\n          ) : (\n            <Fragment>\n              <div\n                onClick={() => setThisEducation(\"all\")}\n                className={`border rounded px-2 py-2 mb-2 cursor-pointer ${\n                  thisEducation === \"all\"\n                    ? \"bg-blue-600 text-white hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                    : \"hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                } font-bold flex flex-row items-center gap-2`}\n              >\n                {thisEducation === \"all\" ? (\n                  <MdRadioButtonChecked />\n                ) : (\n                  <MdRadioButtonUnchecked />\n                )}\n                <span>All</span>\n              </div>\n              {props.schoolLevels.education_categories.map((item, i) => (\n                <div\n                  onClick={() => setThisEducation(item)}\n                  key={i + 1}\n                  className={`border rounded px-2 py-2 mb-2 cursor-pointer ${\n                    thisEducation !== \"all\" &&\n                    thisEducation.education_institute_id ===\n                      item.education_institute_id\n                      ? \"bg-blue-600 text-white hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                      : \"hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                  } font-bold flex flex-row items-center gap-2`}\n                >\n                  {thisEducation !== \"all\" &&\n                  thisEducation.education_institute_id ===\n                    item.education_institute_id ? (\n                    <MdRadioButtonChecked />\n                  ) : (\n                    <MdRadioButtonUnchecked />\n                  )}\n                  <span>{item.education_category_title}</span>\n                </div>\n              ))}\n            </Fragment>\n          )}\n        </div>\n        <div className=\"\">\n          <div className=\"text-gray-600 text-sm mb-2\">Selected period:</div>\n          <div\n            onClick={() => setSelectPeriod(true)}\n            className=\"font-bold bg-blue-50 border border-blue-200 rounded py-2 cursor-pointer text-xs px-2 hover:underline  text-blue-600  mb-4 w-full flex flex-row items-center animate__animated animate__zoomIn\"\n          >\n            {thisPeriod !== null\n              ? `${thisPeriod.session_plan_name} - ${thisPeriod.period}`\n              : \"Filter by period\"}\n            <FiEdit className=\"text-3xl text-blue-600\" />\n          </div>\n        </div>\n        <div className=\"pt-1\">\n          <div className=\"text-sm text-gray-700 pb-2 pt-2\">Claim types:</div>\n          {props.claiming.claimTypes === null ||\n          FC_ClaimData(props.claiming.allClaims) === null ? (\n            <Loading />\n          ) : (\n            ClaimTypes(FC_ClaimData(props.claiming.allClaims)!).map(\n              (item, index: number) => (\n                <div\n                  onClick={() =>\n                    props.setSelectedClaimType(reportClaimType(item.type))\n                  }\n                  key={item.title + index}\n                >\n                  <MainItem\n                    title={item.title}\n                    count={item.count}\n                    active={isClaimTypeActive(\n                      props.claiming.selectedClaimType,\n                      item.type\n                    )}\n                  />\n                </div>\n              )\n            )\n          )}\n        </div>\n        <div className=\"pt-1\">\n          <div className=\"text-sm text-gray-700 pb-2 pt-2\">Claim level:</div>\n          {props.claiming.claimTypes === null ||\n          FC_ClaimData(props.claiming.allClaims) === null ? (\n            <Loading />\n          ) : (\n            ClaimLevels(FC_ClaimData(props.claiming.allClaims)!).map(\n              (item, index: number) => (\n                <div\n                  onClick={() => setThisLevel(item.level)}\n                  key={item.title + index}\n                >\n                  <MainItem\n                    title={item.title}\n                    count={item.count}\n                    active={item.level === thisLevel}\n                  />\n                </div>\n              )\n            )\n          )}\n        </div>\n      </SideNavigation>\n      <section>\n        {/* REPORT TITLE ============================================ */}\n        <div className=\"grid md:grid-cols-12\">\n          <div className=\"col-span-8\">\n            <div className=\"mt-4 mx-4 flex flex-col gap-1\">\n              <span className=\"text-3xl font-bold text-gray-700\">\n                Claim report\n              </span>\n            </div>\n          </div>\n          <div className=\"col-span-4\">\n            <div className=\"float-right mt-2\">\n              {props.claiming.allClaims && props.claiming.allClaims.length > 0 && (\n                <div className=\"flex flex-row items-center justify-end font-bold mb-2\">\n                  <BiExport className=\"text-2xl text-gray-500\" />\n                  <span className=\"text-gray-500\">Export as</span>\n                  <button\n                    className=\"px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200\"\n                    disabled={loading}\n                    onClick={() => {\n                      updateClaimToPrint();\n                      setGenerateReportModal({\n                        reportType: \"EXCEL\",\n                        status: true,\n                      });\n                    }}\n                  >\n                    EXCEL\n                  </button>\n                  <button\n                    className={`px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200 ${\n                      downloading && \"cursor-wait\"\n                    }`}\n                    onClick={() => FC_GeneratePDF()}\n                    disabled={loading || downloading}\n                  >\n                    PDF\n                  </button>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n        {/* END REPORT TITLE ============================================ */}\n        <div className=\"bg-white my-4\">\n          <div className=\"w-full px-2 py-2\">\n            <input\n              onChange={(e) => setSearchInput(e.target.value)}\n              type=\"text\"\n              value={searchInput}\n              placeholder=\"Search...\"\n              className=\"w-full bg-gray-100 py-2 px-3 rounded focus:border-gray-800\"\n              disabled={\n                props.claiming.allClaims === null ||\n                props.claiming.claimTypes === null ||\n                FC_ClaimData(props.claiming.allClaims) === null ||\n                periodChanged\n              }\n            />\n          </div>\n          <table className=\"w-full shadow\" id=\"report_content\">\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n              <tr>\n                <td className=\"px-2 py-2\">#</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"names\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Applicant names <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">National ID</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"gender\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Gender <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">Phone</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"claim_title\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Claim Title <BiSort />\n                  </div>\n                </td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"claim_type\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Claim Type <BiSort />\n                  </div>\n                </td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"claim_level\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Claim Level <BiSort />\n                  </div>\n                </td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"decision\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Status <BiSort />\n                  </div>\n                </td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"date\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Date <BiSort />\n                  </div>\n                </td>\n              </tr>\n            </thead>\n            <tbody>\n              {props.claiming.allClaims === null ||\n              props.claiming.claimTypes === null ||\n              periodChanged ? (\n                <TableLoading cols={10} />\n              ) : FC_ClaimData(props.claiming.allClaims) === null ? (\n                <TableLoading cols={10} />\n              ) : FC_FilterClaims(\n                  FC_ClaimData(props.claiming.allClaims)!,\n                  props.claiming.selectedClaimType,\n                  thisLevel,\n                  thisEducation\n                ).length === 0 ? (\n                <tr>\n                  <td colSpan={10} className=\"px-2 py-2\">\n                    <div className=\"flex flex-col text-gray-400 items-center justify-center bg-gray-100 rounded py-10\">\n                      <ImFilesEmpty className=\"text-8xl text-gray-400 mb-2 animate__animated animate__shakeX\" />\n                      <span className=\"text-sm font-bold\">\n                        No result found! Please try to search again\n                      </span>\n                      <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n                        <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                          <li\n                            onClick={() => setSelectPeriod(true)}\n                            className=\"underline text-gray-500 cursor-pointer\"\n                          >\n                            Filter by period\n                          </li>\n                          <li className=\"text-gray-400 italic\">or</li>\n                          <li className=\"text-gray-500\">\n                            Filter by Claim type\n                          </li>\n                          <li className=\"text-gray-400 italic\">or</li>\n                          <li className=\"text-gray-500\">\n                            Filter by Claim Level\n                          </li>\n                        </ul>\n                      </div>\n                    </div>\n                  </td>\n                </tr>\n              ) : (\n                sortThisArray(\n                  isSorted,\n                  searchData(\n                    FC_FilterClaims(\n                      FC_ClaimData(props.claiming.allClaims)!,\n                      props.claiming.selectedClaimType,\n                      thisLevel,\n                      thisEducation\n                    ),\n                    searchInput\n                  ),\n                  sortProperty,\n                  sortOrder\n                ).map((item, i) => (\n                  <tr\n                    key={i + 1}\n                    className={`${\n                      i % 2 !== 0 ? \"bg-gray-100\" : \"bg-white\"\n                    } text-gray-600 hover:bg-blue-100 hover:text-blue-700 border-b border-gray-300 hover:border-blue-500 text-sm`}\n                  >\n                    <td className=\"px-2 py-2\">{i + 1}</td>\n                    <td className=\"px-2 py-2\">{item.names}</td>\n                    <td className=\"px-2 py-2\">{item.national_id}</td>\n                    <td className=\"px-2 py-2\">{item.gender}</td>\n                    <td className=\"px-2 py-2\">{item.phone}</td>\n                    <td className=\"px-2 py-2\">{item.claim_title}</td>\n                    <td className=\"px-2 py-2\">{item.claim_type}</td>\n                    <td className=\"px-2 py-2\">{\"Level \" + item.claim_level}</td>\n                    <td className=\"px-2 py-2\">\n                      {item.decision}\n                      {/* {capitalizeFirstLetter(item.decision)} */}\n                    </td>\n                    <td className=\"px-2 py-2\">{item.date}</td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </section>\n      {/* GENERATE DYNAMIC REPORT CONTENT MODAL */}\n      {generateReportModal !== null && generateReportModal.status === true && (\n        <Modal\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              {/* <IoBriefcase className=\"text-5xl text-gray-500\" /> */}\n              <div className=\"flex flex-col\">\n                <span className=\"font-bold text-2xl text-gray-500\">\n                  Generating Report contents\n                </span>\n                <span className=\"text-sm text-blue-600 font-normal\">\n                  Generating {generateReportModal.reportType} Report\n                </span>\n              </div>\n            </div>\n          }\n          backDrop={true}\n          theme={Themes.default}\n          close={() => setGenerateReportModal(null)}\n          backDropClose={false}\n          widthSizeClass={ModalSize.medium}\n          displayClose={true}\n          padding={{ title: true }}\n        >\n          <div className=\"px-6\">\n            <div className=\"my-2 text-base text-gray-700 sm:text-lg\">\n              <div className=\"flex flex-col\">\n                <label>Title</label>\n                <input\n                  type=\"text\"\n                  className={`text-left input-white w-20 inline-block ${\n                    formError && formError.element === \"report_title\"\n                      ? \"border-red-500\"\n                      : \"border-gray-500\"\n                  } border-2`}\n                  placeholder=\"Sub Category Title\"\n                  value={reportTitle}\n                  onChange={(e) => {\n                    setFormError(null);\n                    setReportTitle(e.target.value);\n                  }}\n                  disabled={loading}\n                />\n                {formError && formError.element === \"report_title\" && (\n                  <span className=\"text-red-500\">{formError.msg}</span>\n                )}\n              </div>\n              <div className=\"flex flex-col mt-2\">\n                <label>Report content</label>\n                <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                  {reportContent.map((item, index) => (\n                    <div\n                      key={index}\n                      className={`flex items-center gap-1 ${\n                        isChangeAllowed(item.key)\n                          ? \"cursor-pointer\"\n                          : \"cursor-not-allowed\"\n                      }`}\n                      onClick={() =>\n                        isChangeAllowed(item.key) &&\n                        updateReportContent(item.key)\n                      }\n                      title={\n                        !isChangeAllowed(item.key)\n                          ? \"Required for every report!\"\n                          : \"\"\n                      }\n                    >\n                      {item.status ? (\n                        <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                      ) : (\n                        <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                      )}\n                      <span>{item.title}</span>\n                    </div>\n                  ))}\n                </div>\n                {formError && formError.element === \"report_content\" && (\n                  <span className=\"text-red-500\">{formError.msg}</span>\n                )}\n              </div>\n            </div>\n            <div className=\"flex justify-between mb-2 mt-4\">\n              <div\n                className={`flex items-center gap-1 cursor-pointer`}\n                onClick={() => resetReportContent(selectAll)}\n              >\n                {selectAll ? (\n                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                ) : (\n                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                )}\n                <span>Select all</span>\n              </div>\n\n              {claimToPrint && !loading && (\n                <ExportToExcel\n                  fileData={claimToPrint}\n                  fileName={reportTitle}\n                  btnName=\"Generate\"\n                />\n              )}\n            </div>\n          </div>\n        </Modal>\n      )}\n      {/* END GENERATE DYNAMIC REPORT CONTENT MODAL */}\n      {selectPeriod && (\n        <Modal\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              <MdHistory className=\"text-5xl text-blue-600\" />\n              <span className=\"flex flex-col\">Choose a period</span>\n            </div>\n          }\n          backDrop={true}\n          theme={Themes.default}\n          close={() => thisPeriod !== null && setSelectPeriod(false)}\n          backDropClose={true}\n          widthSizeClass={ModalSize.extraLarge}\n          displayClose={true}\n          padding={{ title: true }}\n        >\n          <ChooseSession\n            allSession={props.application_sessions}\n            setSelectSession={(value: SessionPlanInterface | \"all\") => {\n              value !== \"all\" && setThisPeriod(value);\n              value !== \"all\" && onPeriodChange(value.session_plan_id);\n              value !== \"all\" && setSelectPeriod(false);\n            }}\n            chooseAll={false}\n            currentSelected={thisPeriod ? thisPeriod : \"all\"}\n          />\n        </Modal>\n      )}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  sessionPlan,\n  claiming,\n  document,\n  schoolLevels,\n}: StoreState): {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n} => {\n  return {\n    auth: auth,\n    application_sessions: sessionPlan.allSessionPlans,\n    claiming,\n    documentReducer: document,\n    schoolLevels,\n  };\n};\n\nexport const ClaimingReport = connect(mapStateToProps, {\n  getAllClaims,\n  GetClaimingTypes,\n  getAllApplications,\n  GetAllSessionPlans,\n  loadEducationCategories,\n  setSelectedClaimType,\n  PushPopupAlert,\n})(_ClaimingReport);\n"],"sourceRoot":""}
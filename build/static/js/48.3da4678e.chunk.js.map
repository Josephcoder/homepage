{"version":3,"sources":["containers/district/Schools/index.tsx","actions/schools.ts"],"names":["LocationsSectorInArray","LocationData","locationTemp","p","districts","d","sectors","s","push","province_id","_id","province_name","province_code","district_id","district_name","district_code","sector_id","sector_name","sector_code","getSchoolById","schools","school_id","find","school","index","props","setLoading","state","setState","loading","setLoadingSchool","loadingSchool","setLoadingRequest","loadingRequest","setError","data","error","componentDidMount","allRoom","length","getAllRoom","status","msg","console","education_categories","loadEducationCategories","getSchools","log","loadingCandidatesError","schoolList","handleSubmit","e","a","preventDefault","isEmptyOrSpaces","schoolName","element","schoolCode","instituteId","districtId","sectorId","thisSector","getSectors","item","modalState","axios","post","API","APPLICATION","school_name","school_code","education_category_id","res","createSchool","shool_id","PushPopupAlert","title","theme","PopupAlertTheme","success","provinceId","thisSchool","patch","updateSchool","doc_category_error","errorToText","danger","handleDelete","schoolId","window","confirm","delete","deleteSchool","province_error","countSchool","FILTER_TYPE","FILTER_VALUE","counts","filter","toTwoDigit","getProvinceByCode","getDistrictByCode","province","undefined","getSectorByCode","district","getDistrictData","result","toString","forEach","key","Object","prototype","hasOwnProperty","call","filterSchools","institute","searchInput","districtFilterStatus","edicationCategoryFilterStatus","provinceFilterStatus","thisEdication","thisProvince","thisDistrict","this","className","Fragment","onChange","target","value","type","placeholder","disabled","Number","map","education_institute_id","education_category_title","search","colSpan","education","backDrop","Themes","default","close","displayClose","backDropClose","widthSizeClass","ModalSize","medium","padding","body","footer","onSubmit","sector","onClick","Component","Schools","connect","auth","schoolLevels","locations","roomLocation","callback","dispatch","get","ActionTypes","GET_SCHOOLS","payload","GET_SCHOOLS_BY_ID","CREATE_SCHOOL","UPDATE_SCHOOL","DELETE_SCHOOL","fetchSchoolPosts","PLACEMENT","schoolPosts","FETCH_SCHOOL_POSTS","getSchoolPlacement","GET_SCHOOL_PLACEMENT","createSchoolPost","CREATE_SCHOOL_POST","updateSchoolPost","TYPE","UPDATE_SCHOOL_POST","fetchDistrictPosts","FETCH_DISTRICT_POSTS","getDistrictPlacement","GET_DISTRICT_PLACEMENT","getInstitutePlacementLimit","institute_id","session_id","GET_INSTITUTE_PLACEMENT_LIMIT","getDistrictPlacementLimit","GET_DISTRICT_PLACEMENT_LIMIT","updateInstitutePlacementLimit","UPDATE_INSTITUTE_PLACEMENT_LIMIT"],"mappings":"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","file":"static/js/48.3da4678e.chunk.js","sourcesContent":["import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { BiBuildingHouse } from \"react-icons/bi\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadEducationCategories,\n  PushPopupAlert,\n} from \"../../../actions\";\nimport { getAllRoom } from \"../../../actions/location\";\nimport {\n  createSchool,\n  getSchools,\n  updateSchool,\n  deleteSchool,\n} from \"../../../actions/schools\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport { education_category } from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { isEmptyOrSpaces, toTwoDigit } from \"../../../shared/dataTest\";\nimport {\n  SchoolsInterface,\n  RoomLocationInterface,\n  DistrictInterface,\n  LocationSectorTableInterface,\n  SectorInterface,\n} from \"../../../shared/interfaces\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { search } from \"../../../utils/functions\";\n\nexport const LocationsSectorInArray = (\n  LocationData: RoomLocationInterface[]\n): LocationSectorTableInterface[] | [] => {\n  let locationTemp: LocationSectorTableInterface[] = [];\n  for (let p in LocationData) {\n    let districts = LocationData[p].districts;\n    for (let d in districts) {\n      let sectors = districts[d].sectors;\n      for (let s in sectors) {\n        locationTemp.push({\n          province_id: LocationData[p]._id,\n          province_name: LocationData[p].province_name,\n          province_code: LocationData[p].province_code,\n          district_id: districts[d]._id,\n          district_name: districts[d].district_name,\n          district_code: districts[d].district_code,\n          sector_id: sectors[s].sector_id,\n          sector_name: sectors[s].sector_name,\n          sector_code: sectors[s].sector_code,\n        });\n      }\n    }\n  }\n  return locationTemp;\n};\n\nexport const getSchoolById = (\n  schools: SchoolsInterface[],\n  school_id: string\n): SchoolsInterface | undefined => {\n  return schools.find((school) => school._id === school_id);\n};\ninterface AppProps {\n  auth: Auth;\n  education_categories: education_category[] | null;\n  allRoom: RoomLocationInterface[];\n  schools: SchoolsInterface[];\n  getSchools: Function;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  createSchool: Function;\n  getAllRoom: Function;\n  updateSchool: Function;\n  deleteSchool: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface AppState {\n  loading: boolean;\n  loadingSchool: boolean;\n  loadingRequest: boolean;\n  districtFilterStatus: boolean;\n  edicationCategoryFilterStatus: boolean;\n  provinceFilterStatus: boolean;\n  searchInput: string;\n  thisEdication: string | \"ALL\";\n  thisProvince: number | \"ALL\";\n  thisDistrict: number | \"ALL\";\n  district: DistrictInterface[];\n  schoolList: SchoolsInterface[];\n  modalState: \"\" | \"CREATE\" | \"UPDATE\";\n  error: { element: string; msg: string } | null;\n  schoolName: string;\n  schoolCode: number;\n  thisSchool: SchoolsInterface | null;\n  instituteId: string;\n  provinceId: string;\n  districtId: string;\n  sectorId: string;\n}\n\nclass index extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingSchool: true,\n      loadingRequest: false,\n      searchInput: \"\",\n      districtFilterStatus: false,\n      edicationCategoryFilterStatus: false,\n      provinceFilterStatus: false,\n      thisEdication: \"ALL\",\n      thisProvince: \"ALL\",\n      thisDistrict: \"ALL\",\n      district: [],\n      schoolList: this.props.schools,\n      modalState: \"\",\n      error: null,\n      schoolName: \"\",\n      schoolCode: 0,\n      thisSchool: null,\n      instituteId: \"\",\n      provinceId: \"\",\n      districtId: \"\",\n      sectorId: \"\",\n    };\n  }\n\n  setLoading = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  setLoadingSchool = (state: boolean) => {\n    this.setState({ loadingSchool: state });\n  };\n\n  setLoadingRequest = (state: boolean) => {\n    this.setState({ loadingRequest: state });\n  };\n\n  setError = (\n    data: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ error: data });\n  };\n\n  componentDidMount = () => {\n    if (!this.props.allRoom.length && this.state.loading) {\n      this.props.getAllRoom((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (!status && msg.length > 0) console.error(msg);\n      });\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n\n    if (\n      this.props.education_categories === null ||\n      this.props.education_categories.length === 0\n    ) {\n      this.props.loadEducationCategories(this.setLoading);\n    }\n\n    if (!this.props.schools.length && this.state.loadingSchool) {\n      this.props.getSchools(\n        (status: boolean, msg: string, data?: SchoolsInterface[]) => {\n          console.log(status, msg);\n          this.setLoadingSchool(status);\n          if (!status) {\n            if (msg.length > 0) {\n              console.error({ loadingCandidatesError: msg });\n            }\n            if (data) {\n              this.setState({ schoolList: data });\n            }\n          }\n        }\n      );\n    } else {\n      this.setLoadingSchool(false);\n    }\n  };\n\n  handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (isEmptyOrSpaces(this.state.schoolName)) {\n      return this.setError({\n        element: \"school_name\",\n        msg: \"School name is required\",\n      });\n    }\n    if (this.state.schoolCode <= 0) {\n      return this.setError({\n        element: \"school_code\",\n        msg: \"Invalid school code, School code less than 0\",\n      });\n    }\n    if (isEmptyOrSpaces(this.state.instituteId)) {\n      return this.setError({\n        element: \"edication_id\",\n        msg: \"Education Institute is required\",\n      });\n    }\n    if (isEmptyOrSpaces(this.state.districtId)) {\n      return this.setError({\n        element: \"districtId_id\",\n        msg: \"District is required\",\n      });\n    }\n    if (isEmptyOrSpaces(this.state.sectorId)) {\n      return this.setError({\n        element: \"sector_id\",\n        msg: \"Sector is required\",\n      });\n    }\n\n    const thisSector = this.getSectors()!.find(\n      (item) => item.sector_id === this.state.sectorId\n    );\n\n    if (!thisSector) {\n      return this.setError({\n        element: \"sector_id\",\n        msg: \"Unknown selected sector\",\n      });\n    }\n\n    this.setLoadingRequest(true);\n    try {\n      let res;\n      if (this.state.modalState === \"CREATE\") {\n        res = await axios.post<{\n          data: {\n            status: boolean;\n            school_name: string;\n            school_code: number;\n            district_id: string;\n            sector_id: string;\n            sector_code: number;\n            education_category_id: string;\n            shool_id: string;\n          };\n        }>(`${API.APPLICATION}/schools`, {\n          school_name: this.state.schoolName,\n          school_code: this.state.schoolCode,\n          district_id: this.state.districtId,\n          sector_id: this.state.sectorId,\n          sector_code: thisSector.sector_code,\n          education_category_id: this.state.instituteId,\n        });\n        if (res.data) {\n          console.log({ res });\n          // this.setState({\n          //   schoolList: [\n          //     ...this.props.schools,\n          //     {\n          //       _id: res.data.data.shool_id,\n          //       status: res.data.data.status,\n          //       school_name: res.data.data.school_name,\n          //       school_code: res.data.data.school_code,\n          //       sector_id: res.data.data.sector_id,\n          //       sector_code: res.data.data.sector_code,\n          //       district_id: res.data.data.district_id,\n          //       district_code: res.data.data.district_code,\n          //       province_id: res.data.data.province_id,\n          //       province_code: res.data.data.province_code,\n          //       education_category_id: res.data.data.education_category_id,\n          //     },\n          //   ],\n          // });\n          this.props.createSchool({\n            _id: res.data.data.shool_id,\n            status: res.data.data.status,\n            school_name: res.data.data.school_name,\n            school_code: res.data.data.school_code,\n            sector_code: res.data.data.sector_code,\n            district_id: res.data.data.district_id,\n            sector_id: res.data.data.sector_id,\n            education_category_id: res.data.data.education_category_id,\n          });\n          this.props.PushPopupAlert({\n            title: \"New School created successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          this.setLoadingRequest(false);\n          this.setState({\n            schoolName: \"\",\n            schoolCode: 0,\n            districtId: \"\",\n            sectorId: \"\",\n            instituteId: \"\",\n            provinceId: \"\",\n            thisSchool: null,\n            modalState: \"\",\n          });\n        }\n      } else if (this.state.thisSchool && this.state.modalState === \"UPDATE\") {\n        res = await axios.patch<{ update: SchoolsInterface }>(\n          `${API.APPLICATION}/schools`,\n          {\n            school_id: this.state.thisSchool._id,\n            school_name: this.state.schoolName,\n            school_code: this.state.schoolCode,\n            district_id: this.state.districtId,\n            sector_id: this.state.sectorId,\n            sector_code: thisSector.sector_code,\n            education_category_id: this.state.instituteId,\n          }\n        );\n        if (res.data) {\n          console.log({ res });\n          this.props.updateSchool({\n            _id: this.state.thisSchool._id,\n            status: true,\n            sector_code: thisSector.sector_code,\n            school_name: this.state.schoolName,\n            school_code: this.state.schoolCode,\n            district_id: this.state.districtId,\n            sector_id: this.state.sectorId,\n            education_category_id: this.state.instituteId,\n          });\n          this.props.PushPopupAlert({\n            title: \"School updated successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          this.setLoadingRequest(false);\n          this.setState({\n            schoolName: \"\",\n            schoolCode: 0,\n            districtId: \"\",\n            sectorId: \"\",\n            instituteId: \"\",\n            provinceId: \"\",\n            thisSchool: null,\n            modalState: \"\",\n          });\n        }\n      }\n    } catch (error) {\n      console.log({ doc_category_error: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      this.setLoadingRequest(false);\n    }\n  };\n\n  handleDelete = async (schoolId: string) => {\n    if (window.confirm(\"Are you sure do you want to delete this room?\")) {\n      this.setLoadingRequest(true);\n      try {\n        const res = await axios.delete<SchoolsInterface>(\n          `${API.APPLICATION}/schools/${schoolId}`\n        );\n\n        if (res.data) {\n          console.log({ res });\n          this.props.deleteSchool(schoolId);\n          this.props.PushPopupAlert({\n            title: \"School deleted successfully\",\n            theme: PopupAlertTheme.success,\n          });\n        }\n      } catch (error) {\n        console.log({ province_error: error });\n        this.props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      this.setLoadingRequest(false);\n    }\n  };\n\n  countSchool = (\n    FILTER_TYPE: \"DEFAULT\" | \"EDUCATION\" | \"DISTRICT\" = \"DEFAULT\",\n    FILTER_VALUE: string = \"ALL\"\n  ): string => {\n    let counts: number = 0;\n    if (FILTER_TYPE === \"DEFAULT\") {\n      counts = this.props.schools.length;\n    } else if (FILTER_TYPE === \"EDUCATION\") {\n      counts = this.props.schools.filter(\n        (item) => item.education_category_id === FILTER_VALUE\n      ).length;\n    } else if (FILTER_TYPE === \"DISTRICT\") {\n      counts = this.props.schools.filter(\n        (item) => item.district_id === FILTER_VALUE\n      ).length;\n    }\n    return toTwoDigit(counts);\n  };\n\n  getProvinceByCode = (\n    province_code: number\n  ): RoomLocationInterface | undefined => {\n    return this.props.allRoom.find(\n      (item) => item.province_code === province_code\n    );\n  };\n\n  getDistrictByCode = (\n    province_code: number,\n    district_code: number\n  ): DistrictInterface | undefined => {\n    let province = this.props.allRoom.find(\n      (item) => item.province_code === province_code\n    );\n    return province\n      ? province.districts.find((item) => item.district_code === district_code)\n      : undefined;\n  };\n\n  getSectorByCode = (\n    province_code: number,\n    district_code: number,\n    sector_code: number\n  ): SectorInterface | undefined => {\n    const province = this.props.allRoom.find(\n      (item) => item.province_code === province_code\n    );\n\n    if (province && province.districts) {\n      const district = province.districts.find(\n        (item) => item.district_code === district_code\n      );\n      return district && district.sectors\n        ? district.sectors.find((item) => item.sector_code === sector_code)\n        : undefined;\n    }\n  };\n  getSectors = () => {\n    let province = this.props.allRoom.find(\n      (province) => province._id === this.state.provinceId\n    );\n    if (province && province.districts.length > 0) {\n      let district = province.districts.find(\n        (item) => item._id === this.state.districtId\n      );\n      if (district) {\n        return district.sectors;\n      }\n    }\n    return null;\n  };\n\n  getDistrictData = (province_code: number | null): DistrictInterface[] => {\n    let result: DistrictInterface[] = [];\n    if (province_code) {\n      let province = this.props.allRoom.find(\n        (item) => item.province_code.toString() === province_code.toString()\n      );\n      result = province ? province.districts : [];\n    } else {\n      this.props.allRoom.forEach((element) => {\n        for (const key in element.districts) {\n          if (Object.prototype.hasOwnProperty.call(element.districts, key)) {\n            result.push(element.districts[key]);\n          }\n        }\n      });\n    }\n\n    return result;\n  };\n\n  filterSchools = (\n    institute: string | \"ALL\",\n    province: number | \"ALL\",\n    district: number | \"ALL\"\n  ): SchoolsInterface[] => {\n    let result: SchoolsInterface[] = this.props.schools;\n\n    if (institute !== \"ALL\") {\n      result = result.filter(\n        (item) => item.education_category_id === institute\n      );\n    }\n\n    if (province !== \"ALL\") {\n      result = result.filter(\n        (item) => item.province_code.toString() === province.toString()\n      );\n    }\n\n    if (district !== \"ALL\") {\n      result = result.filter(\n        (item) => item.district_code.toString() === district.toString()\n      );\n    }\n\n    return result;\n  };\n\n  render() {\n    if (this.state.loadingSchool || this.state.loading) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading schools...\n        </div>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        {/* BODY =================================== */}\n        <div className=\"w-full my-5 px-1\">\n          {/* header title */}\n          <div className=\"flex items-start justify-between my-4\">\n            <div className=\"flex flex-row items-center\">\n              <BiBuildingHouse className=\"text-blue-500 text-5xl\" />\n              <div className=\"flex flex-col\">\n                <h1 className=\"text-4xl font-semibold\">Schools Management</h1>\n                {/* <div className=\"flex flex-row items-center mx-2 md:gap-3 gap-2\">\n                  <div className=\"flex flex-col mt-1\">\n                    <span className=\"text-gray-600 text-base\">\n                      All School(s)\n                    </span>\n                    <span className=\"text-gray-600 text-2xl font-bold\">\n                      {this.countSchool()}\n                    </span>\n                  </div>\n                  {this.props.education_categories &&\n                    this.props.education_categories.length > 0 &&\n                    this.props.education_categories.map((education, index) => (\n                      <div\n                        className=\"flex flex-col mt-1\"\n                        key={index + education.education_institute_id}\n                      >\n                        <span className=\"text-gray-600 text-base\">\n                          {education.education_category_title}\n                        </span>\n                        <span className=\"text-gray-600 text-2xl font-bold\">\n                          {this.countSchool(\n                            \"EDUCATION\",\n                            education.education_institute_id\n                          )}\n                        </span>\n                      </div>\n                    ))}\n                </div> */}\n              </div>\n            </div>\n          </div>\n          {/* end header title */}\n\n          <div className=\"md:w-98 bg-white mx-auto md:p-2\">\n            {/* FILTER FORM =================================== */}\n            <section className=\"flex flex-col-reverse sm:flex-row items-center gap-2 w-full my-2\">\n              <div className=\"w-full sm:w-3/4\">\n                <input\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                    this.setState({ searchInput: e.target.value })\n                  }\n                  type=\"text\"\n                  className=\"input-white h-10 text-sm border-2 border-gray-400 focus:border-gray-500 w-full\"\n                  placeholder={`Search school with name or code`}\n                  value={this.state.searchInput}\n                  disabled={this.props.allRoom.length > 0 ? false : true}\n                />\n              </div>\n              <div className=\"w-full sm:w-1/4\">\n                <select\n                  className=\"input-white h-10 text-sm border-2 border-gray-400 focus:border-gray-500 w-full\"\n                  placeholder={`Filter by status`}\n                  onChange={(e: React.ChangeEvent<HTMLSelectElement>) =>\n                    this.setState({\n                      thisProvince:\n                        e.target.value === \"ALL\"\n                          ? \"ALL\"\n                          : Number(e.target.value),\n                    })\n                  }\n                  value={this.state.thisProvince}\n                  disabled={this.props.allRoom.length > 0 ? false : true}\n                >\n                  <option value=\"ALL\">All province</option>\n                  {this.props.allRoom.length > 0 ? (\n                    this.props.allRoom.map((item, index) => (\n                      <option value={item.province_code} key={index + item._id}>\n                        {item.province_name}\n                      </option>\n                    ))\n                  ) : (\n                    <option value=\"\" disabled>\n                      No province found!\n                    </option>\n                  )}\n                </select>\n              </div>\n              <div className=\"w-full sm:w-1/4\">\n                <select\n                  className=\"input-white h-10 text-sm border-2 border-gray-400 focus:border-gray-500 w-full\"\n                  placeholder={`Filter by status`}\n                  onChange={(e: React.ChangeEvent<HTMLSelectElement>) =>\n                    this.setState({\n                      thisDistrict:\n                        e.target.value !== \"ALL\"\n                          ? Number(e.target.value)\n                          : \"ALL\",\n                    })\n                  }\n                  value={this.state.thisDistrict}\n                  disabled={this.props.allRoom.length > 0 ? false : true}\n                >\n                  <option value=\"ALL\">All district</option>\n                  {this.getDistrictData(\n                    this.state.thisProvince !== \"ALL\"\n                      ? this.state.thisProvince\n                      : null\n                  ).length > 0 ? (\n                    this.getDistrictData(\n                      this.state.thisProvince !== \"ALL\"\n                        ? this.state.thisProvince\n                        : null\n                    ).map((item, index) => (\n                      <option value={item.district_code} key={index + item._id}>\n                        {item.district_name}\n                      </option>\n                    ))\n                  ) : (\n                    <option value=\"\" disabled>\n                      No district found!\n                    </option>\n                  )}\n                </select>\n              </div>\n              <div className=\"w-full sm:w-1/4\">\n                <select\n                  className=\"input-white h-10 text-sm border-2 border-gray-400 focus:border-gray-500 w-full\"\n                  placeholder={`Filter by institute`}\n                  onChange={(e: React.ChangeEvent<HTMLSelectElement>) =>\n                    this.setState({ thisEdication: e.target.value })\n                  }\n                  value={this.state.thisEdication}\n                  disabled={this.props.allRoom.length > 0 ? false : true}\n                >\n                  <option value=\"ALL\">All institute</option>\n                  {this.props.education_categories &&\n                  this.props.education_categories.length > 0 ? (\n                    this.props.education_categories.map((item, index) => (\n                      <option\n                        value={item.education_institute_id}\n                        key={index + item.education_institute_id}\n                      >\n                        {item.education_category_title}\n                      </option>\n                    ))\n                  ) : (\n                    <option value=\"\" disabled>\n                      No institute found!\n                    </option>\n                  )}\n                </select>\n              </div>\n            </section>\n            {/* END FILTER FORM =================================== */}\n\n            <div className=\"rounded border border-gray-100 my-1 shadow-sm animate__animated animate__fadeIn\">\n              <table className=\"w-full z-0\">\n                <thead className=\"bg-gray-50\">\n                  <tr className=\"text-left\">\n                    <th className=\"px-3 py-3\">#</th>\n                    <th>School code</th>\n                    <th>School name</th>\n                    <th>Institute</th>\n                    <th>Province</th>\n                    <th>District</th>\n                    {/* <th>Sector</th> */}\n                    {/* <th>Status</th> */}\n                  </tr>\n                </thead>\n                <tbody className=\"text-sm\">\n                  {!search(\n                    this.filterSchools(\n                      this.state.thisEdication,\n                      this.state.thisProvince,\n                      this.state.thisDistrict\n                    ),\n                    this.state.searchInput\n                  ).length && (\n                    <tr\n                      key={1}\n                      className=\"border-b border-gray-200 hover:bg-gray-100\"\n                    >\n                      <td className=\"p-3 text-center\" colSpan={8}>\n                        No School Found\n                      </td>\n                    </tr>\n                  )}\n                  {this.props.schools.length > 0 &&\n                    !this.state.loading &&\n                    search(\n                      this.filterSchools(\n                        this.state.thisEdication,\n                        this.state.thisProvince,\n                        this.state.thisDistrict\n                      ),\n                      this.state.searchInput\n                    ).map((school: SchoolsInterface, index: number) => (\n                      <tr\n                        key={index + school._id}\n                        className=\"border-b border-gray-200 hover:bg-gray-100\"\n                      >\n                        <td className=\"p-3 text-left whitespace-nowrap\">\n                          {index + 1}\n                        </td>\n                        <td className=\"py-3 text-left\">{school.school_code}</td>\n                        <td className=\"py-3 text-left\">{school.school_name}</td>\n                        <td className=\"py-3 text-left\">\n                          {this.props.education_categories &&\n                          this.props.education_categories.filter(\n                            (education) =>\n                              education.education_institute_id ===\n                              school.education_category_id\n                          ).length > 0\n                            ? this.props.education_categories.filter(\n                                (education) =>\n                                  education.education_institute_id ===\n                                  school.education_category_id\n                              )[0].education_category_title\n                            : \"No Institute\"}\n                        </td>\n                        <td className=\"py-3 text-left\">\n                          {this.getProvinceByCode(school.province_code)\n                            ? this.getProvinceByCode(school.province_code)!\n                                .province_name\n                            : \"No province \"}\n                        </td>\n                        <td className=\"py-3 text-left\">\n                          {this.getDistrictByCode(\n                            school.province_code,\n                            school.district_code\n                          )\n                            ? this.getDistrictByCode(\n                                school.province_code,\n                                school.district_code\n                              )!.district_name\n                            : \"No district\"}\n                        </td>\n                        {/* <td className=\"py-3 text-left\">\n                          {this.getSectorByCode(\n                            school.province_code,\n                            school.district_code,\n                            school.sector_code\n                          )\n                            ? this.getSectorByCode(\n                                school.province_code,\n                                school.district_code,\n                                school.sector_code\n                              )!.sector_name\n                            : \"No sector \"+school.sector_code}\n                        </td> */}\n                        {/* <td className=\"py-3\">\n                          <div className=\"flex items-center gap-2 float-right\">\n                            <button\n                              className={`bg-blue-600 text-white font-bold py-1 px-2 flex items-center rounded focus:outline-none ${\n                                this.state.loadingRequest\n                                  ? \"cursor-not-allowed\"\n                                  : null\n                              }`}\n                              title=\"Edit School\"\n                              disabled={this.state.loadingRequest}\n                              onClick={() => {\n                                this.setState({\n                                  modalState: \"UPDATE\",\n                                  thisSchool: school,\n                                  schoolName: school.school_name,\n                                  schoolCode: school.school_code,\n                                  instituteId: school.education_category_id,\n                                  districtId: school.district_id,\n                                  sectorId: school.sector_id,\n                                  provinceId: this.props.allRoom.find((item) =>\n                                    item.districts.find(\n                                      (d) => d._id === school.district_id\n                                    )\n                                  )\n                                    ? this.props.allRoom.find((item) =>\n                                        item.districts.find(\n                                          (d) => d._id === school.district_id\n                                        )\n                                      )!._id\n                                    : \"\",\n                                });\n                              }}\n                            >\n                              <MdModeEdit className=\"w-4 h-4\" />\n                              Edit\n                            </button>\n                            <button\n                              className={`bg-red-700 text-white font-bold py-1 px-2 flex items-center rounded focus:outline-none ${\n                                this.state.loadingRequest\n                                  ? \"cursor-not-allowed\"\n                                  : null\n                              }`}\n                              title=\"Delete\"\n                              disabled={this.state.loadingRequest}\n                              onClick={() => this.handleDelete(school._id)}\n                            >\n                              <MdModeEdit className=\"w-4 h-4\" />\n                              Delete\n                            </button>\n                          </div>\n                        </td> */}\n                      </tr>\n                    ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n\n        {/* modal control */}\n        {this.state.modalState && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={(): void =>\n              this.setState({\n                modalState: \"\",\n                thisSchool: null,\n                schoolName: \"\",\n                instituteId: \"\",\n                districtId: \"\",\n                provinceId: \"\",\n              })\n            }\n            displayClose={true}\n            backDropClose={false}\n            title={\n              <div className=\"text-gray-600 font-bold text-3xl md:ml-4 inline-flex items-center gap-2\">\n                <BiBuildingHouse className=\"w-11 h-11 text-gray-500 hover:bg-gray-500 hover:text-gray-50 rounded-full p-0 foucs:outline-none\" />\n                {this.state.modalState === \"CREATE\" ? \"CREATE \" : \"UPDATE \"}{\" \"}\n                SCHOOL\n              </div>\n            }\n            widthSizeClass={ModalSize.medium}\n            padding={{ title: true, body: false, footer: false }}\n          >\n            <div className=\"mx-8 mb-8\">\n              <form onSubmit={(e) => this.handleSubmit(e)}>\n                <div className=\"py-4 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n                  <div className=\"flex flex-col\">\n                    <label>School name</label>\n                    <input\n                      type=\"text\"\n                      className={`text-left input-white w-20 inline-block border-2 ${\n                        this.state.error &&\n                        this.state.error.element === \"school_name\"\n                          ? \"border-red-700\"\n                          : \"border-gray-500\"\n                      }`}\n                      placeholder=\"School name\"\n                      value={this.state.schoolName}\n                      onChange={(e) => {\n                        this.setError(null);\n                        this.setState({ schoolName: e.target.value });\n                      }}\n                      disabled={this.state.loadingRequest}\n                    />\n                    {this.state.error &&\n                      this.state.error.element === \"school_name\" && (\n                        <span className=\"text-red-700\">\n                          {this.state.error.msg}\n                        </span>\n                      )}\n                  </div>\n\n                  <div className=\"flex flex-col\">\n                    <label>School code</label>\n                    <input\n                      type=\"number\"\n                      className={`text-left input-white w-20 inline-block border-2 ${\n                        this.state.error &&\n                        this.state.error.element === \"school_code\"\n                          ? \"border-red-700\"\n                          : \"border-gray-500\"\n                      }`}\n                      placeholder=\"School code\"\n                      value={this.state.schoolCode}\n                      onChange={(e) => {\n                        this.setError(null);\n                        this.setState({ schoolCode: Number(e.target.value) });\n                      }}\n                      disabled={this.state.loadingRequest}\n                    />\n                    {this.state.error &&\n                      this.state.error.element === \"school_code\" && (\n                        <span className=\"text-red-700\">\n                          {this.state.error.msg}\n                        </span>\n                      )}\n                  </div>\n\n                  {/* INSTITUTES ================= */}\n                  <div className=\"flex flex-col\">\n                    <label>Institutes</label>\n                    {/* block appearance-none w-full bg-grey-lighter border\n                  border-grey-lighter text-grey-darker py-3 px-4 pr-8 rounded */}\n                    <select\n                      className={`text-left input-white w-full block border-2 py-3 px-4 pr-8 ${\n                        this.state.error &&\n                        this.state.error.element === \"edication_id\"\n                          ? \"border-red-700\"\n                          : \"border-gray-500\"\n                      }`}\n                      value={this.state.instituteId}\n                      onChange={(e) =>\n                        this.setState({\n                          instituteId: e.target.value,\n                        })\n                      }\n                      disabled={this.state.loadingRequest}\n                    >\n                      <option value=\"\" disabled>\n                        Choose Institute\n                      </option>\n                      {this.props.education_categories &&\n                        this.props.education_categories.map(\n                          (institute, index) => (\n                            <option\n                              value={institute.education_institute_id}\n                              key={index + institute.education_institute_id}\n                            >\n                              {institute.education_category_title}\n                            </option>\n                          )\n                        )}\n                    </select>\n                    {this.state.error &&\n                      this.state.error.element === \"edication_id\" && (\n                        <span className=\"text-red-700\">\n                          {this.state.error.msg}\n                        </span>\n                      )}\n                  </div>\n\n                  {/* PROVINCE ================= */}\n                  <div className=\"flex flex-col\">\n                    <label>Province</label>\n                    <select\n                      className={`text-left input-white w-20 inline-block border-2 border-gray-500`}\n                      value={this.state.provinceId}\n                      onChange={(e) =>\n                        this.setState({ provinceId: e.target.value })\n                      }\n                      disabled={this.state.loadingRequest}\n                    >\n                      <option value=\"\" disabled>\n                        Choose province\n                      </option>\n                      {this.props.allRoom &&\n                        this.props.allRoom.map((province, index) => (\n                          <option\n                            value={province._id}\n                            key={index + province._id}\n                          >\n                            {province.province_name}\n                          </option>\n                        ))}\n                    </select>\n                  </div>\n\n                  {/* DISTRICT ================= */}\n                  {this.state.provinceId.length > 0 && (\n                    <div className=\"flex flex-col\">\n                      <label>Sector</label>\n                      <select\n                        className={`text-left input-white w-20 inline-block border-2 ${\n                          this.state.error &&\n                          this.state.error.element === \"districtId_id\"\n                            ? \"border-red-700\"\n                            : \"border-gray-500\"\n                        }`}\n                        value={this.state.districtId}\n                        onChange={(e) =>\n                          this.setState({ districtId: e.target.value })\n                        }\n                        disabled={this.state.loadingRequest}\n                      >\n                        <option value=\"\" disabled>\n                          Choose district\n                        </option>\n                        {this.props.allRoom &&\n                        this.props.allRoom.filter(\n                          (province) => province._id === this.state.provinceId\n                        )[0].districts.length > 0 ? (\n                          this.props.allRoom\n                            .filter(\n                              (province) =>\n                                province._id === this.state.provinceId\n                            )[0]\n                            .districts.map((district, index) => (\n                              <option\n                                value={district._id}\n                                key={index + district._id}\n                              >\n                                {district.district_name}\n                              </option>\n                            ))\n                        ) : (\n                          <option key={702} disabled={true}>\n                            No District Found\n                          </option>\n                        )}\n                      </select>\n                      {this.state.error &&\n                        this.state.error.element === \"districtId_id\" && (\n                          <span className=\"text-red-700\">\n                            {this.state.error.msg}\n                          </span>\n                        )}\n                    </div>\n                  )}\n\n                  {/* DISTRICT ================= */}\n                  {this.state.provinceId.length > 0 && (\n                    <div className=\"flex flex-col\">\n                      <label>Sector</label>\n                      <select\n                        className={`text-left input-white w-20 inline-block border-2 ${\n                          this.state.error &&\n                          this.state.error.element === \"sector_id\"\n                            ? \"border-red-700\"\n                            : \"border-gray-500\"\n                        }`}\n                        value={this.state.sectorId}\n                        onChange={(e) =>\n                          this.setState({ sectorId: e.target.value })\n                        }\n                        disabled={this.state.loadingRequest}\n                      >\n                        <option value=\"\" disabled>\n                          Choose sector\n                        </option>\n                        {this.props.allRoom && this.getSectors() ? (\n                          this.getSectors()!.map((sector, index) => (\n                            <option\n                              value={sector.sector_id}\n                              key={index + sector.sector_id}\n                            >\n                              {sector.sector_name}\n                            </option>\n                          ))\n                        ) : (\n                          <option key={702} disabled={true}>\n                            No Sector Found\n                          </option>\n                        )}\n                      </select>\n                      {this.state.error &&\n                        this.state.error.element === \"sector_id\" && (\n                          <span className=\"text-red-700\">\n                            {this.state.error.msg}\n                          </span>\n                        )}\n                    </div>\n                  )}\n                </div>\n                <div className=\"pt-4 flex justify-between\">\n                  <button\n                    onClick={() =>\n                      this.setState({\n                        modalState: \"\",\n                        thisSchool: null,\n                        schoolName: \"\",\n                        instituteId: \"\",\n                        districtId: \"\",\n                        provinceId: \"\",\n                      })\n                    }\n                    className={`btn bg-gray-400 text-white hover:bg-gray-600 focus:outline-none`}\n                    type=\"button\"\n                    disabled={this.state.loadingRequest}\n                  >\n                    Exit\n                  </button>\n                  <button\n                    className={`btn bg-primary text-white hover:bg-blue-600 focus:outline-none ${\n                      this.state.loadingRequest ? \"animate-pulse\" : null\n                    }`}\n                    type=\"submit\"\n                    disabled={this.state.loadingRequest}\n                  >\n                    {this.state.loadingRequest ? \"Loading...\" : \"Save\"}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </Modal>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  schools,\n  schoolLevels,\n  locations,\n}: StoreState): {\n  auth: Auth;\n  schools: SchoolsInterface[];\n  education_categories: education_category[] | null;\n  allRoom: RoomLocationInterface[];\n} => {\n  return {\n    auth: auth,\n    schools: schools.schools,\n    education_categories: schoolLevels.education_categories,\n    allRoom: locations.roomLocation,\n  };\n};\n\nexport const Schools = connect(mapStateToProps, {\n  createSchool,\n  getSchools,\n  updateSchool,\n  getAllRoom,\n  deleteSchool,\n  loadEducationCategories,\n  PushPopupAlert,\n})(index);\n","import { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  MySchoolInterface,\n  PostSchoolInterface,\n  SchoolInfoInterface,\n  SchoolsInterface,\n} from \"../shared/interfaces\";\n// import { setAxiosToken } from \"../utils/AxiosToken\";\nimport axios from \"axios\";\nimport { API } from \"../utils/api\";\nimport { errorToText } from \"../utils/errors\";\nimport { placedCandidateInterface } from \"../interfaces/marks_publication\";\nimport { PlacementListInterface } from \"../containers/PlacementLimit/PlacementLimit\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\nexport interface GetSchoolsAction {\n  type: ActionTypes.GET_SCHOOLS;\n  payload: SchoolsInterface[];\n}\n\nexport interface GetSchoolByIdAction {\n  type: ActionTypes.GET_SCHOOLS_BY_ID;\n  payload: MySchoolInterface;\n}\n\nexport interface GetSchoolsInfoAction {\n  type: ActionTypes.GET_SCHOOLS_INFO;\n  payload: SchoolInfoInterface[];\n}\n\nexport interface CreateSchoolAction {\n  type: ActionTypes.CREATE_SCHOOL;\n  payload: SchoolsInterface;\n}\n\nexport interface UpdateSchoolAction {\n  type: ActionTypes.UPDATE_SCHOOL;\n  payload: SchoolsInterface;\n}\n\nexport interface DeleteSchoolAction {\n  type: ActionTypes.DELETE_SCHOOL;\n  payload: string;\n}\n\n// School Posts interfaces\nexport interface FetchSchoolPostsAction {\n  type: ActionTypes.FETCH_SCHOOL_POSTS;\n  payload: PostSchoolInterface[];\n}\n\n// School Placements interfaces\nexport interface GetSchoolPlacementAction {\n  type: ActionTypes.GET_SCHOOL_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\n// District School Placements interfaces\nexport interface GetDistrictPlacementAction {\n  type: ActionTypes.GET_DISTRICT_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\n// District School Placements interfaces\nexport interface GetSessionPlacementAction {\n  type: ActionTypes.GET_SESSION_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\nexport interface FetchDistrictPostsAction {\n  type: ActionTypes.FETCH_DISTRICT_POSTS;\n  payload: PostSchoolInterface[];\n}\n\nexport interface CreateSchoolPostAction {\n  type: ActionTypes.CREATE_SCHOOL_POST;\n  payload: PostSchoolInterface;\n}\n\nexport interface UpdateSchoolPostAction {\n  type: ActionTypes.UPDATE_SCHOOL_POST;\n  payload: {\n    TYPE: \"DISTRICT\" | \"SCHOOL\" | \"RECEIVED\";\n    data: PostSchoolInterface;\n  };\n}\n\nexport interface DeleteSchoolPostAction {\n  type: ActionTypes.DELETE_SCHOOL_POST;\n  payload: PostSchoolInterface[];\n}\n\n// Get Institute Limit Posts Action interfaces\nexport interface GetInstitutePlacementLimitAction {\n  type: ActionTypes.GET_INSTITUTE_PLACEMENT_LIMIT;\n  payload: PlacementListInterface[];\n}\n\nexport interface GetDistrictPlacementLimitAction {\n  type: ActionTypes.GET_DISTRICT_PLACEMENT_LIMIT;\n  payload: PlacementListInterface[];\n}\n\nexport interface UpdateInstitutePlacementLimitAction {\n  type: ActionTypes.UPDATE_INSTITUTE_PLACEMENT_LIMIT;\n  payload: { limit_id: string; confirmed_post: number };\n}\n\nexport type SchoolActionType =\n  | GetSchoolsAction\n  | GetSchoolByIdAction\n  | GetSchoolsInfoAction\n  | CreateSchoolAction\n  | UpdateSchoolAction\n  | DeleteSchoolAction\n  | FetchSchoolPostsAction\n  | GetSchoolPlacementAction\n  | FetchDistrictPostsAction\n  | CreateSchoolPostAction\n  | UpdateSchoolPostAction\n  | DeleteSchoolPostAction\n  | GetDistrictPlacementAction\n  | GetSessionPlacementAction\n  | GetInstitutePlacementLimitAction\n  | GetDistrictPlacementLimitAction\n  | UpdateInstitutePlacementLimitAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSchools = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      const res = await axios.get<SchoolsInterface[]>(\n        `${API.APPLICATION}/school`\n      );\n      dispatch<GetSchoolsAction>({\n        type: ActionTypes.GET_SCHOOLS,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSchoolById = (schoolId: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<MySchoolInterface>(\n        `${API.APPLICATION}/schools/${schoolId}`\n      );\n      dispatch<GetSchoolByIdAction>({\n        type: ActionTypes.GET_SCHOOLS_BY_ID,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// export const getSchoolsInfo = () => {\n//   return async (dispatch: Dispatch) => {\n//     setAxiosToken();\n//     const response = await axios.get<SchoolInfoInterface[]>(url);\n\n//     dispatch<GetSchoolsInfoAction>({\n//       type: ActionTypes.GET_SCHOOLS_INFO,\n//       payload: response.data,\n//     });\n//   };\n// };\n\nexport const createSchool = (data: SchoolsInterface) => {\n  console.log({ schools: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateSchoolAction>({\n      type: ActionTypes.CREATE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const updateSchool = (data: SchoolsInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateSchoolAction>({\n      type: ActionTypes.UPDATE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteSchool = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteSchoolAction>({\n      type: ActionTypes.DELETE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const fetchSchoolPosts = (school_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PostSchoolInterface[]>(\n        `${API.PLACEMENT}/requestpost/school/${school_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ schoolPosts: res });\n      console.log(\"====================================\");\n\n      dispatch<FetchSchoolPostsAction>({\n        type: ActionTypes.FETCH_SCHOOL_POSTS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSchoolPlacement = (school_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/school/${school_id}`\n      );\n\n      console.log({ getSchoolPlacement: res.data });\n\n      dispatch<GetSchoolPlacementAction>({\n        type: ActionTypes.GET_SCHOOL_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createSchoolPost = (data: PostSchoolInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateSchoolPostAction>({\n      type: ActionTypes.CREATE_SCHOOL_POST,\n      payload: data,\n    });\n  };\n};\n\nexport const updateSchoolPost = (\n  TYPE: \"DISTRICT\" | \"SCHOOL\" | \"RECEIVED\",\n  data: PostSchoolInterface\n) => {\n  console.log({ TYPE, data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateSchoolPostAction>({\n      type: ActionTypes.UPDATE_SCHOOL_POST,\n      payload: { TYPE, data },\n    });\n  };\n};\n\nexport const deleteSchoolPost = (data: PostSchoolInterface[]) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteSchoolPostAction>({\n      type: ActionTypes.DELETE_SCHOOL_POST,\n      payload: data,\n    });\n  };\n};\n\nexport const fetchDistrictPosts = (district_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PostSchoolInterface[]>(\n        `${API.PLACEMENT}/requestpost/district/${district_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ fetchDistrictPosts: res });\n      console.log(\"====================================\");\n\n      dispatch<FetchDistrictPostsAction>({\n        type: ActionTypes.FETCH_DISTRICT_POSTS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getDistrictPlacement = (\n  district_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/district/${district_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getDistrictPlacement: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetDistrictPlacementAction>({\n        type: ActionTypes.GET_DISTRICT_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSessionPlacement = (session_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/session/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getSessionPlacement: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetSessionPlacementAction>({\n        type: ActionTypes.GET_SESSION_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getInstitutePlacementLimit = (\n  institute_id: string,\n  session_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PlacementListInterface[]>(\n        `${API.PLACEMENT}/confirmedpostrequest/institute/${institute_id}/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getInstitutePlacementLimit: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetInstitutePlacementLimitAction>({\n        type: ActionTypes.GET_INSTITUTE_PLACEMENT_LIMIT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getDistrictPlacementLimit = (\n  district_id: string,\n  session_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PlacementListInterface[]>(\n        `${API.PLACEMENT}/confirmedpostrequest/district/${district_id}/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getDistrictPlacementLimit: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetDistrictPlacementLimitAction>({\n        type: ActionTypes.GET_DISTRICT_PLACEMENT_LIMIT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const updateInstitutePlacementLimit = (data: {\n  limit_id: string;\n  confirmed_post: number;\n}) => {\n  console.log(\"====================================\");\n  console.log({ updateInstitutePlacementLimit: data });\n  console.log(\"====================================\");\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateInstitutePlacementLimitAction>({\n      type: ActionTypes.UPDATE_INSTITUTE_PLACEMENT_LIMIT,\n      payload: data,\n    });\n  };\n};\n"],"sourceRoot":""}
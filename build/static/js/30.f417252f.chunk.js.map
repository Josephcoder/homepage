{"version":3,"sources":["shared/dataTest.tsx","components/Navigation/SideNavigation.tsx","actions/session.ts","actions/settings.ts","containers/SessionSettings/NoSession.tsx","components/Loading/TableLoading.tsx","utils/ExportToExcel.tsx","utils/mineduc.png","components/DownloadPDF/rest.tsx","containers/SessionSettings/ChooseSession.tsx","interfaces/waitingList.ts","components/ContractViewer/DistrictView.tsx","components/ContractViewer/ProvinceView.tsx","components/ContractViewer/SchoolView.tsx","components/ContractViewer/SectorView.tsx","components/ContractViewer/ContractViewer.tsx","containers/Admin/WaitingList/WaitingListReport.tsx"],"names":["isEmptyOrSpaces","str","match","getRoleById","roles","roleId","filter","role","system_user_role_id","getInstituteById","institutes","instituteId","find","item","education_institute_id","getPositionById","positions","position_id","position","toTwoDigit","value","dec","Math","floor","slice","toString","substr","toAnyDigit","padding","zeroes","Array","join","capitalizeFirstLetter","charAt","toUpperCase","_SideNavigation","props","componentDidMount","PageHasSubNav","componentWillUnmount","state","loading","this","auth","isAuthenticated","navActive","system","navigation","className","children","React","Component","SideNavigation","connect","NavToogle","MainItem","title","icon","MdBrightness1","active","count","IconDefined","GetPlansTypes","callback","dispatch","a","setAxiosToken","axios","get","API","CLAIMING","res","console","log","GET_PLANS_TYPES","data","plan_types","status","length","type","ActionTypes","payload","error","errorToText","setSelectedPlanType","thisType","SELECT_PLAN_TYPE","getActiveSessionPlan","GET_ACTIVE_SESSION_PLANS","session_plan","undefined","is_active","GetAllSessionPlans","GET_ALL_SESSION_PLANS","session_data","createSessionPlan","CREATE_SESSION_PLAN","updateSessionPlan","UPDATE_SESSION_PLAN","sessionActivation","SESSION_ACTIVATION","deleteSessionPlan","DELETE_SESSION_PLAN","createAcademicSession","CREATE_ACADEMIC_SESSION","GetAllAcademicSession","PLACEMENT","GET_ALL_ACADEMIC_SESSION","updateAcademicSession","UPDATE_ACADEMIC_SESSION","academicSessionActivation","ACADEMIC_SESSION_ACTIVATION","deleteAcademicSession","DELETE_ACADEMIC_SESSION","getActiveAcademicSession","GET_ACTIVE_ACADEMIC_SESSION","getSystemSettings","AUTH","GET_SYSTEM_SETTINGS","code_error","disableSystemSetting","DISABLE_SYSTEM_SETTINGS","GetTaskAccess","response","map","id","task","key","permitted","GET_TASK_ACCESS","getPositions","APPLICATION","GET_POSTIONS","deletePosition","DELETE_POSITION","publishPosition","PUBLISH_POSITION","NoSession","TableLoading","displayCols","colsArray","index","cols","push","element","ExportToExcel","fileData","fileName","btnName","showIcon","onClick","e","apiData","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","exportToCSV","require","addFooters","doc","pageCount","internal","getNumberOfPages","setFont","setFontSize","i","setPage","text","String","pageSize","width","align","generatePDF","reportSettings","table","callBack","orientation","lMargin","jsPDF","setTextColor","addImage","Logo","getWidth","institute","lines","splitTextToSize","subject","pdfInMM","y","subjectTitle","getTextWidth","addPage","period","autoTable","html","startY","margin","horizontal","cellPadding","rowHeight","bodyStyles","valign","columnStyles","email","cellWidth","theme","tableWidth","finalY","lastAutoTable","doneBy","DATE","Date","save","returnPromise","then","isPlansActive","plans","today","activePlans","plan","startDate","start_date","endDate","end_date","getTime","type_status","SessionPlanTypeStatus","OPEN","ChooseSession","searched","useState","selectedPlan","setSelectedPlan","search","setSearch","onChange","target","placeholder","disabled","allSession","chooseAll","currentSelected","setSelectSession","searchData","session_plan_id","session_plan_name","itm","type_key","type_title","memo","WaitingListStatus","applicantGender","waitingListReportContentKeyInterface","DistrictView","result","districts","strict","forEach","district","displayMessage","ProvinceView","provinces","province","SchoolView","schools","school","SectorView","sectors","sector","ContractViewer","locations","FC_getLocations","msg","FC_GetWaitingLocationList","setState","selectedSchool","contract","values","FC_LoadSchoolsByIDs","err","Loading","ProvincesList","DistrictList","SectorList","el","findIt","province_code","province_name","district_code","district_name","sector_code","sector_name","thisCandidate","candidates","thisPosition","school_code","school_name","waitingLocation","FC_LoadSchoolsByDistrict","getPeriodById","period_id","defaultReportContent","names","national_id","gender","phone","user_position_marks","waitingList_session","education_category","date","waiting_status","position_title","_WaitingListReport","setLoading","setLoadingWaitingList","loadingWaitingList","setThisPeriod","thisPeriod","setWaitingListToPrint","waitingListToPrint","setThisWaitingListStatus","thisWaitingListStatus","setThisPosition","setSelectPosition","selectPosition","setSortProperty","sortProperty","setIsSorted","isSorted","setSortOrder","sortOrder","setSearchInput","searchInput","setSearchPositionInput","searchPositionInput","setDownloading","downloading","setGenerateReportModal","generateReportModal","setReportTitle","reportTitle","setReportContent","reportContent","setSelectAll","selectAll","setFormError","formError","setSelectPeriod","selectPeriod","setThisEducation","thisEducation","schoolLevels","education_categories","loadEducationCategories","application_sessions","PushPopupAlert","PopupAlertTheme","danger","systemPositions","getWaitingList","setSort","thisProperty","showStatus","WAITING","PENDING","PLACED","FC_WaitingListStatus","WaitingList","output","statusArray","Object","updateReportContent","findIndex","newArray","updateWaitingListToPrint","session","waitingList","arrayNew","n","prototype","hasOwnProperty","call","thisSession","session_id","dataArray","user_info","fname","lname","sex","n_id","phone_number","Number","marks","toFixed","education_category_title","createdAt","FC_WaitingListData","allWaitList","waitingList_id","_id","male","female","education_category_id","waitingList_session_id","resetReportContent","currentState","isChangeAllowed","generateReportTitle","FC_GeneratePDF","document","querySelectorAll","getElementById","user","footer","warning","FC_FilterWaitingList","waitingListStatus","viewContractor","waitingData","selectedWaiting","objList","reportType","colSpan","sortThisArray","product","flag","prop","toLowerCase","indexOf","Modal","backDrop","Themes","default","close","backDropClose","widthSizeClass","ModalSize","extraLarge","displayClose","LoadingV2","LoadingType","dark","style","fontStyle","school_level_id","school_level_name","medium","body","WaitingListReport","system_settings","sessionPlan","allSessionPlans"],"mappings":"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","file":"static/js/30.f417252f.chunk.js","sourcesContent":["import { education_category } from \"../interfaces\";\nimport { PositionAPI } from \"../interfaces/position\";\nimport {\n  CustomeAccessInterface,\n  PostSchoolInterface,\n  RoleToUserInterface,\n  SchoolInfoInterface,\n  SystemUserRoleInterface,\n} from \"./interfaces\";\n\nexport const data_posts_school: PostSchoolInterface[] = [];\n\nexport const isEmptyOrSpaces = (str: string): boolean => {\n  return str === null || str.match(/^ *$/) !== null;\n};\n\nexport const getUserTitle = (\n  accessRoles: SystemUserRoleInterface[],\n  roleId: string\n): string => {\n  const result = accessRoles.find((e) => e.system_user_role_id === roleId);\n  return result ? result.role : \"\";\n};\n\nexport const getRoleById = (\n  roles: SystemUserRoleInterface[],\n  roleId: string\n): SystemUserRoleInterface => {\n  return roles.filter((role) => role.system_user_role_id === roleId)[0];\n};\n\nexport const getInstituteById = (\n  institutes: education_category[],\n  instituteId: string\n): education_category | undefined => {\n  return institutes.find((item) => item.education_institute_id === instituteId);\n};\n\nexport const getPositionById_old = (\n  positions: PositionAPI[],\n  position_id: string\n): PositionAPI => {\n  console.log({\n    positions,\n    position_id,\n    data: positions.filter(\n      (position) => position.position_id === position_id\n    )[0],\n  });\n  return positions.filter(\n    (position) => position.position_id === position_id\n  )[0];\n};\n\nexport const getPositionById = (\n  positions: PositionAPI[],\n  position_id: string\n): PositionAPI | undefined => {\n  return positions.find((position) => position.position_id === position_id);\n};\n\nexport const getSchoolById = (\n  schools: SchoolInfoInterface[],\n  school_id: string\n): SchoolInfoInterface => {\n  return schools.filter((school) => school.school_id === school_id)[0];\n};\n\nexport const getPostById = (\n  posts: PostSchoolInterface[],\n  post_id: string\n): PostSchoolInterface => {\n  return posts.filter((post) => post.school_id === post_id)[0];\n};\n\nexport const getPostsBySchoolId = (\n  posts: PostSchoolInterface[],\n  school_id: string\n): PostSchoolInterface[] => {\n  return posts.filter((post) => post.school_id === school_id);\n};\n\nexport const getPostsByIds = (\n  posts: PostSchoolInterface[],\n  school_id: string,\n  position_id: string\n): PostSchoolInterface[] => {\n  return posts.filter(\n    (post) => post.school_id === school_id && post.position_id === position_id\n  );\n};\n\nexport const displayDate = (dateToDisplay: Date): string => {\n  return new Intl.DateTimeFormat(\"en-GB\", {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"2-digit\",\n  }).format(dateToDisplay);\n};\n\nexport const userAccess = (\n  defaultAccess: RoleToUserInterface,\n  customAccess: CustomeAccessInterface\n): RoleToUserInterface => {\n  // const data = defaultAccess.access.map((default,index,customAccess)=>{\n  //   let data_custom = customAccess\n  //   if\n  // })\n  // return customAccess.filter((custom) => custom.id === accecc_id)[0];\n  return defaultAccess;\n};\n\n// export const groupBy = (list: [], keyGetter: Function) => {\n//   const map = new Map();\n//   list.forEach((item) => {\n//     const key = keyGetter(item);\n//     const collection = map.get(key);\n//     if (!collection) {\n//       map.set(key, [item]);\n//     } else {\n//       collection.push(item);\n//     }\n//   });\n//   return map;\n// };\n\nexport const toTwoDigit = (value: number): string => {\n  var dec = value - Math.floor(value);\n  value = value - dec;\n  return (\"0\" + value).slice(-2) + dec.toString().substr(1);\n};\n\nexport const toAnyDigit = (\n  value: string | number,\n  padding: number = 3\n): string => {\n  var zeroes = new Array(padding + 1).join(\"0\");\n  return (zeroes + value).slice(-padding);\n};\n\nexport const capitalizeFirstLetter = (value: string): string => {\n  return value.charAt(0).toUpperCase() + value.slice(1);\n};\n\nexport const isDateExpiried = (paramDate: string) => {\n  const thisDate = new Date(paramDate);\n  const today = new Date();\n  if (thisDate.getTime() < today.getTime()) {\n    return true;\n  }\n\n  return false;\n};\n","import React, { FC, ReactElement, ReactNode } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, System } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { NavToogle, PageHasSubNav } from \"../../actions\";\nimport { MdBrightness1, MdSearch } from \"react-icons/md\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  system: System;\n  PageHasSubNav: Function;\n  NavToogle: Function;\n  children: ReactNode;\n}\n//\ninterface AppState {\n  loading: boolean;\n}\n\nclass _SideNavigation extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount = () => this.props.PageHasSubNav(true);\n  componentWillUnmount = () => this.props.PageHasSubNav(false);\n\n  render() {\n    const isAuthenticated = this.props.auth.isAuthenticated;\n\n    if (isAuthenticated === false) {\n      return null;\n    }\n\n    const navActive = this.props.system.navigation;\n    return (\n      <div\n        className={`fixed w-48 p-1 pr-2 pl-6 text-gray-700 bg-white ${\n          navActive === true ? \"lg:left-16  left-16\" : \" -left-72 lg:left-16\"\n        }  top-0 bottom-0 pt-20 z-30 shadow-lg  transition-all duration-500 ease-in-out overflow-y-auto`}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n}: StoreState): { auth: Auth; system: System } => {\n  return { auth: auth, system: system };\n};\n\nexport const SideNavigation = connect(mapStateToProps, {\n  NavToogle,\n  PageHasSubNav,\n})(_SideNavigation);\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SearchComponentInterface = {\n  data: any[];\n};\n\nexport const Search: FC<SearchComponentInterface> = ({\n  data,\n}): ReactElement => {\n  return (\n    <div className=\"m-1 rounded-md shadow-md border border-blue-400 bg-white p-1 flex \">\n      <label htmlFor=\"search-text\" className=\"inline-block text-2xl\">\n        <MdSearch className=\"inline-block text-blue-400\" />\n      </label>\n      <input\n        type=\"search\"\n        className=\"outline-none bg-transparent flex-1 pl-1\"\n        placeholder=\"Search\"\n        id=\"search-text\"\n      />\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype MainItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const MainItem: FC<MainItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n  return (\n    <section\n      className={`${\n        active === true\n          ? \"bg-blue-500 text-white font-bold\"\n          : \"bg-blue-100 text-blue-800\"\n      } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex cursor-pointer items-center`}\n    >\n      <section className=\"flex-1\">\n        <IconDefined className=\"inline-block mr-1 text-xs\" />\n        <span>{title}</span>\n      </section>\n\n      {count > 0 ? (\n        <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n          {count}\n        </span>\n      ) : null}\n    </section>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemContainerComponentInterface = {\n  children: ReactNode;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const SubItemContainer: FC<SubItemContainerComponentInterface> = ({\n  children,\n}): ReactElement => {\n  return (\n    <div className=\"ml-3 overflow-y-auto border-l-2 border-blue-200 -mt-1 pt-2 mb-2 pl-1 cursor-pointer\">\n      {children}\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n * @important Remenber to use these components inside the <SubItemContainer>...</SubItemContainer>\n */\nexport const SubItem: FC<SubItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n\n  return (\n    <div\n      className={`animate__animated animate__zoomIn animate__faster ${\n        active === true ? \"bg-blue-500 text-white font-bold\" : \" text-blue-800\"\n      } text-blue-800 bg-blue-200 rounded-md px-1 mb-1 flex items-center py-1 font-bold`}\n    >\n      <IconDefined\n        className={`inline-block mr-0.1 text-xs ${\n          active === true ? \"text-white\" : \"\"\n        }`}\n      />\n      <span\n        className={`inline-block pl-1 ${active === true ? \"text-white\" : \"\"}`}\n      >\n        {title}\n      </span>\n      {count >= 1 ? (\n        <span\n          className={`text-sm fint-bold ${active === true ? \"text-white\" : \"\"}`}\n        >\n          {count}\n        </span>\n      ) : null}\n    </div>\n  );\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport {\n  AcademicSessionInterface,\n  PlansTypeInterface,\n  SessionPlanInterface,\n} from \"../interfaces\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// GET ACTIVE PLAN TYPES\nexport interface GetPlansTypesAction {\n  type: ActionTypes.GET_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// GET INACTIVE PLAN TYPES\nexport interface GetDeletedPlansTypesAction {\n  type: ActionTypes.GET_DELETED_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// CREATE PLAN TYPE\nexport interface CreatePlansTypeAction {\n  type: ActionTypes.CREATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// UPDATE PLAN TYPE\nexport interface UpdatePlansTypeAction {\n  type: ActionTypes.UPDATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// DELETE PLAN TYPE\nexport interface DeletePlansTypeAction {\n  type: ActionTypes.DELETE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// SET PLAN TYPE =====================================\nexport interface setSelectedPlanTypeActions {\n  type: ActionTypes.SELECT_PLAN_TYPE;\n  payload: PlansTypeInterface | \"all\";\n}\n\n// GET ALL SESSION PLAN\nexport interface GetAllSessionPlansAction {\n  type: ActionTypes.GET_ALL_SESSION_PLANS;\n  payload: SessionPlanInterface[];\n}\n\n// GET ACTIVE SESSION PLAN\nexport interface GetActiveSessionPlanAction {\n  type: ActionTypes.GET_ACTIVE_SESSION_PLANS;\n  payload: SessionPlanInterface | \"none\";\n}\n\n// CREATE SESSION PLAN\nexport interface CreateSessionPlansAction {\n  type: ActionTypes.CREATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// UPDATE SESSION PLAN\nexport interface UpdateSessionPlansAction {\n  type: ActionTypes.UPDATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// ACTIVATE SESSION PLAN\nexport interface ActivateSessionPlansAction {\n  type: ActionTypes.SESSION_ACTIVATION;\n  payload: SessionPlanInterface;\n}\n\n// DELETE SESSION PLAN\nexport interface DeleteSessionPlanAction {\n  type: ActionTypes.DELETE_SESSION_PLAN;\n  payload: string;\n}\n\n// GET ALL ACADEMIC SESSION\nexport interface GetAllAcademicSessionAction {\n  type: ActionTypes.GET_ALL_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface[];\n}\n\n// CREATE ACADEMIC SESSION\nexport interface CreateAcademicSessionAction {\n  type: ActionTypes.CREATE_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface;\n}\n\n// UPDATE ACADEMIC SESSION\nexport interface UpdateAcademicSessionAction {\n  type: ActionTypes.UPDATE_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface;\n}\n\n// ACTIVATE ACADEMIC SESSION\nexport interface ActivateAcademicSessionAction {\n  type: ActionTypes.ACADEMIC_SESSION_ACTIVATION;\n  payload: AcademicSessionInterface;\n}\n\n// DELETE ACADEMIC SESSION\nexport interface DeleteAcademicSessionAction {\n  type: ActionTypes.DELETE_ACADEMIC_SESSION;\n  payload: string;\n}\n\n// GET ACTIVE ACADEMIC SESSION\nexport interface GetActiveAcademicSessionAction {\n  type: ActionTypes.GET_ACTIVE_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface | \"none\";\n}\n\nexport type SessionActionType =\n  | GetPlansTypesAction\n  | GetDeletedPlansTypesAction\n  | CreatePlansTypeAction\n  | UpdatePlansTypeAction\n  | DeletePlansTypeAction\n  | GetAllSessionPlansAction\n  | GetActiveSessionPlanAction\n  | CreateSessionPlansAction\n  | UpdateSessionPlansAction\n  | ActivateSessionPlansAction\n  | DeleteSessionPlanAction\n  | setSelectedPlanTypeActions\n  | GetAllAcademicSessionAction\n  | CreateAcademicSessionAction\n  | UpdateAcademicSessionAction\n  | ActivateAcademicSessionAction\n  | DeleteAcademicSessionAction\n  | GetActiveAcademicSessionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type`\n      );\n      console.log({ GET_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetPlansTypesAction>({\n        type: ActionTypes.GET_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetDeletedPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type/deleted`\n      );\n      console.log({ GET_DELETED_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetDeletedPlansTypesAction>({\n        type: ActionTypes.GET_DELETED_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE PLAN TYPE\nexport const createPlanType = (\n  data: PlansTypeInterface\n): CreatePlansTypeAction => {\n  return {\n    type: ActionTypes.CREATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// UPDATE PLAN TYPE\nexport const updatePlanType = (\n  data: PlansTypeInterface\n): UpdatePlansTypeAction => {\n  return {\n    type: ActionTypes.UPDATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// DELETE PLAN TYPE\nexport const deletePlanType = (\n  data: PlansTypeInterface\n): DeletePlansTypeAction => {\n  return {\n    type: ActionTypes.DELETE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// SELECT PLAN TYPES ==========================\nexport const setSelectedPlanType = (\n  thisType: PlansTypeInterface | \"all\"\n): setSelectedPlanTypeActions => {\n  console.log({ thisType });\n  return {\n    type: ActionTypes.SELECT_PLAN_TYPE,\n    payload: thisType,\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const getActiveSessionPlan = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface>(\n        `${API.CLAIMING}/session/active/`\n      );\n      console.log({ GET_ACTIVE_SESSION_PLANS: res.data });\n      let session_plan: SessionPlanInterface | undefined = undefined;\n      // if (res.status === 200) {\n      //   // setApplications(res.data);\n      // }\n      if (res.data && res.data.is_active !== undefined) {\n        session_plan = res.data;\n      }\n      console.log({ session_plan: res.data });\n\n      dispatch<GetActiveSessionPlanAction>({\n        type: ActionTypes.GET_ACTIVE_SESSION_PLANS,\n        payload: session_plan ? session_plan : \"none\",\n      });\n      callback(false, \"\", session_plan ? session_plan : \"none\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ALL PLAN TYPES ==========================\nexport const GetAllSessionPlans = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface[]>(\n        `${API.CLAIMING}/session/`\n      );\n      console.log({ GET_ALL_SESSION_PLANS: res.data });\n      let session_data: SessionPlanInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          session_data = res.data;\n        }\n      }\n      dispatch<GetAllSessionPlansAction>({\n        type: ActionTypes.GET_ALL_SESSION_PLANS,\n        payload: session_data,\n      });\n      callback(false, \"\", session_data);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE SESSION PLAN\nexport const createSessionPlan = (\n  data: SessionPlanInterface\n): CreateSessionPlansAction => {\n  return {\n    type: ActionTypes.CREATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// UPDATE SESSION PLAN\nexport const updateSessionPlan = (\n  data: SessionPlanInterface\n): UpdateSessionPlansAction => {\n  return {\n    type: ActionTypes.UPDATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// ACTIVATE SESSION PLAN\nexport const sessionActivation = (\n  data: SessionPlanInterface\n): ActivateSessionPlansAction => {\n  return {\n    type: ActionTypes.SESSION_ACTIVATION,\n    payload: data,\n  };\n};\n\n// DELETE SESSION PLAN\nexport const deleteSessionPlan = (data: string): DeleteSessionPlanAction => {\n  return {\n    type: ActionTypes.DELETE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// CREATE ACADEMIC SESSION\nexport const createAcademicSession = (\n  data: AcademicSessionInterface\n): CreateAcademicSessionAction => {\n  return {\n    type: ActionTypes.CREATE_ACADEMIC_SESSION,\n    payload: data,\n  };\n};\n\n// GET ALL ACADEMIC SESSION ==========================\nexport const GetAllAcademicSession = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<AcademicSessionInterface[]>(\n        `${API.PLACEMENT}/postrequestperiod/`\n      );\n      console.log({ GET_ALL_SESSION_PLANS: res.data });\n      let session_data: AcademicSessionInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          session_data = res.data;\n        }\n      }\n      console.log(\"====================================\");\n      console.log({ GetAllAcademicSession: res });\n      console.log(\"====================================\");\n      dispatch<GetAllAcademicSessionAction>({\n        type: ActionTypes.GET_ALL_ACADEMIC_SESSION,\n        payload: session_data,\n      });\n      callback(false, \"\", session_data);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// UPDATE ACADEMIC SESSION\nexport const updateAcademicSession = (\n  data: AcademicSessionInterface\n): UpdateAcademicSessionAction => {\n  return {\n    type: ActionTypes.UPDATE_ACADEMIC_SESSION,\n    payload: data,\n  };\n};\n\n// ACTIVATE ACADEMIC SESSION\nexport const academicSessionActivation = (\n  data: AcademicSessionInterface\n): ActivateAcademicSessionAction => {\n  return {\n    type: ActionTypes.ACADEMIC_SESSION_ACTIVATION,\n    payload: data,\n  };\n};\n\n// DELETE ACADEMIC SESSION\nexport const deleteAcademicSession = (\n  data: string\n): DeleteAcademicSessionAction => {\n  return {\n    type: ActionTypes.DELETE_ACADEMIC_SESSION,\n    payload: data,\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const getActiveAcademicSession = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<AcademicSessionInterface>(\n        `${API.PLACEMENT}/postrequestperiod/one`\n      );\n      console.log({ GET_ACTIVE_ACADEMIC_SESSION: res.data });\n      let session_plan: AcademicSessionInterface | undefined = undefined;\n      // if (res.status === 200) {\n      //   // setApplications(res.data);\n      // }\n      if (res.data) {\n        session_plan = res.data;\n      }\n      console.log({ session_plan: res.data });\n\n      dispatch<GetActiveAcademicSessionAction>({\n        type: ActionTypes.GET_ACTIVE_ACADEMIC_SESSION,\n        payload: session_plan ? session_plan : \"none\",\n      });\n      callback(false, \"\", session_plan ? session_plan : \"none\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AccessTaskInterface,\n  PermissionInterface,\n  SystemSettingsInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PositionAPI } from \"../interfaces/position\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// SYSTEM SETTINGS  ==============\nexport interface GetSystemSettingsAction {\n  type: ActionTypes.GET_SYSTEM_SETTINGS;\n  payload: SystemSettingsInterface[];\n}\n\nexport interface DisableSystemSettingsAction {\n  type: ActionTypes.DISABLE_SYSTEM_SETTINGS;\n  payload: {\n    system_setting_id: string;\n    status: \"enabled\" | \"disabled\";\n  };\n}\n\n// ROLE TASKS ACCESS SETTINGS ===================================\nexport interface GetTaskAccessAction {\n  type: ActionTypes.GET_TASK_ACCESS;\n  payload: AccessTaskInterface[];\n}\n\n// POSITIONS SETTINGS ===================================\nexport interface PositionCreateInterface {\n  position_id?: string;\n  position_title: string;\n  position_code: string;\n  description: string;\n  school_level_id: string;\n  subcategory_id: string;\n  education_institute_id: string;\n  courses: string[];\n  requirements: {\n    user_detail_category_id: string;\n    user_detail_subcategory_id: string;\n    position_requirement: {\n      category_subcategory_data_id: string;\n      required: boolean;\n    }[];\n    required: boolean;\n  }[];\n}\nexport interface GetPositionsAction {\n  type: ActionTypes.GET_POSTIONS;\n  payload: PositionAPI[];\n}\n\nexport interface CreatePositionsAction {\n  type: ActionTypes.CREATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface UpdatePositionsAction {\n  type: ActionTypes.UPDATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface DeletePositionSettingAction {\n  type: ActionTypes.DELETE_POSITION;\n  payload: string;\n}\n\nexport interface PublishPositionAction {\n  type: ActionTypes.PUBLISH_POSITION;\n  payload: {\n    position_id: string;\n    status: boolean;\n  };\n}\n\nexport type SystemActionType =\n  | GetSystemSettingsAction\n  | DisableSystemSettingsAction\n  | GetTaskAccessAction\n  | GetPositionsAction\n  | CreatePositionsAction\n  | UpdatePositionsAction\n  | DeletePositionSettingAction\n  | PublishPositionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSystemSettings = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<SystemSettingsInterface[]>(\n        `${API.AUTH}/settings`\n      );\n      dispatch<GetSystemSettingsAction>({\n        type: ActionTypes.GET_SYSTEM_SETTINGS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const disableSystemSetting = (data: {\n  system_setting_id: string;\n  status: \"enabled\" | \"disabled\";\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableSystemSettingsAction>({\n      type: ActionTypes.DISABLE_SYSTEM_SETTINGS,\n      payload: data,\n    });\n  };\n};\n\n// ============================ tasks access =======================\n\nexport const GetTaskAccess = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<\n        {\n          id: string;\n          title: string;\n          key: string;\n          permitted: PermissionInterface;\n        }[]\n      >(`${API.AUTH}/allroleaccess`);\n      let response: AccessTaskInterface[] = res.data.map((data) => ({\n        id: data.id,\n        task: data.title,\n        key: data.key,\n        permitted: data.permitted,\n      }));\n      dispatch<GetTaskAccessAction>({\n        type: ActionTypes.GET_TASK_ACCESS,\n        payload: response,\n      });\n      callback(false, \"\", response);\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// ============================ positions =======================\n\nexport const getPositions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(`${API.APPLICATION}/position`);\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createPosition = (data: PositionCreateInterface) => {\n  console.log({ createPosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreatePositionsAction>({\n      type: ActionTypes.CREATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const updatePosition = (data: PositionCreateInterface) => {\n  console.log({ updatePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdatePositionsAction>({\n      type: ActionTypes.UPDATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const deletePosition = (data: string) => {\n  console.log({ deletePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<DeletePositionSettingAction>({\n      type: ActionTypes.DELETE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const publishPosition = (data: {\n  position_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<PublishPositionAction>({\n      type: ActionTypes.PUBLISH_POSITION,\n      payload: data,\n    });\n  };\n};\n","import React from \"react\";\nimport { MdInfoOutline } from \"react-icons/md\";\n\nconst NoSession = () => {\n  return (\n    <div className=\"my-5\">\n      <div className=\"bg-yellow-100 rounded flex flex-col items-center justify-center p-6 my-8 text-yellow-900 border border-yellow-900\">\n        <MdInfoOutline className=\"text-6xl md:text-9xl\" />\n        <div className=\"text-center flex flex-col\">\n          <span className=\"text-2xl md:text-4xl font-extrabold\">\n            No session available\n          </span>\n          <span className=\"text-lg\">\n            Please Wait for the system to publish the sessions or contact the\n            administrator\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NoSession;\n","import React from \"react\";\n\ntype TableLoadingProps = {\n  cols: number;\n};\nconst TableLoading: React.FC<TableLoadingProps> = (props) => {\n  const displayCols = (): JSX.Element[] => {\n    let colsArray: number[] = [];\n    for (let index = 0; index < props.cols; index++) {\n      colsArray.push(index);\n    }\n    let result = colsArray.map((element) => {\n      return (\n        <td className=\"p-3 text-center whitespace-nowrap\" key={element}>\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      );\n    });\n\n    return result;\n  };\n  return (\n    <>\n      <tr className=\"border-b border-gray-200\" key={228}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={22648}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={229768}>\n        {displayCols()}\n      </tr>\n    </>\n  );\n};\n\nexport default TableLoading;\n","import React from \"react\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport { RiFileExcel2Fill } from \"react-icons/ri\";\n\ninterface ExportToExcelProps {\n  fileData: any[];\n  fileName: string;\n  btnName?: string;\n  className?: string;\n  showIcon?: boolean;\n}\n\nconst ExportToExcel: React.FC<ExportToExcelProps> = ({\n  fileData,\n  fileName,\n  btnName = \"Excel\",\n  className = \"flex items-center gap-1 px-4 py-1 rounded text-green-700 bg-white border hover:text-white hover:bg-green-700 border-green-700 font-bold\",\n  showIcon = true,\n}) => {\n  const fileType =\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n  const fileExtension = \".xlsx\";\n\n  const exportToCSV = (apiData: any[], fileName: string) => {\n    const ws = XLSX.utils.json_to_sheet(apiData);\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n    const data = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n\n  return (\n    <button\n      onClick={(e) => exportToCSV(fileData, fileName)}\n      className={className}\n    >\n      {showIcon && <RiFileExcel2Fill />}\n      {btnName}\n    </button>\n  );\n};\n\nexport default ExportToExcel;\n","export default __webpack_public_path__ + \"static/media/mineduc.11a9ae1c.png\";","import jsPDF from \"jspdf\";\nimport { DATE } from \"../../utils/functions\";\nimport Logo from \"../../utils/mineduc.png\";\nrequire(\"jspdf-autotable\");\n\nexport const addFooters = (doc: any) => {\n  const pageCount = doc.internal.getNumberOfPages();\n\n  doc.setFont(\"helvetica\", \"italic\");\n  doc.setFontSize(8);\n  for (var i = 1; i <= pageCount; i++) {\n    doc.setPage(i);\n    doc.text(\n      \"Page \" + String(i) + \" of \" + String(pageCount),\n      doc.internal.pageSize.width / 2,\n      297,\n      {\n        align: \"center\",\n      }\n    );\n  }\n};\n\nexport type reportSettingsInterface = {\n  doneBy: string;\n  title: string;\n  subjectTitle: string;\n  subject: string;\n  institute: string;\n  period: string;\n  footer: string;\n  orientation?: \"p\" | \"l\";\n};\n\nexport const generatePDF = async (\n  reportSettings: reportSettingsInterface,\n  table: HTMLElement,\n  callBack: (status: boolean) => void\n) => {\n  callBack(true);\n  const orientation: \"p\" | \"l\" = reportSettings.orientation\n    ? reportSettings.orientation\n    : \"p\";\n  var lMargin: number = 20; //left margin in mm\n  var rMargin: number = 20; //right margin in mm\n  var pdfInMM: number = 185; // width of A4 in mm\n\n  //   var doc = new jsPDF(\"p\", \"mm\", \"a4\");\n  var doc: any = new jsPDF(orientation, \"mm\", \"a4\");\n\n  doc.setTextColor(95, 95, 95);\n  doc.setFontSize(28);\n  // doc.text(\n  //   this.props.reportTitle,\n  //   doc.internal.pageSize.getWidth() / 2,\n  //   30,\n  //   undefined,\n  //   \"center\"\n  // );\n  doc.addImage(Logo, \"png\", 20, 20, 10, 10);\n  doc.text(\"MINEDUC\", 32, 28.5, undefined, \"left\");\n  //   doc.setTextColor(19, 90, 152);\n  doc.setFontSize(26);\n  doc.text(\n    reportSettings.title,\n    doc.internal.pageSize.getWidth() / 2,\n    42.7,\n    undefined,\n    \"center\"\n  );\n\n  doc.setFontSize(20);\n  doc.text(\n    reportSettings.institute,\n    doc.internal.pageSize.getWidth() / 2,\n    53.7,\n    undefined,\n    \"center\"\n  );\n\n  var lines;\n  lines = doc.splitTextToSize(\n    reportSettings.subject,\n    pdfInMM - lMargin - rMargin\n  );\n  // if (reportSettings.position) {\n  // } else if (reportSettings.subject) {\n  //   lines = doc.splitTextToSize(\n  //     reportSettings.subject,\n  //     pdfInMM - lMargin - rMargin\n  //   );\n  // }\n\n  //   doc.setTextColor(0, 123, 255);\n  doc.setFontSize(16);\n  //   doc.text(lines, doc.internal.pageSize.getWidth() / 2, 45, {\n  //     maxWidth: 85,\n  //     align: \"center\",\n  //   });\n\n  var y = 63,\n    width;\n  doc.setTextColor(95, 95, 95);\n  doc.text(`${reportSettings.subjectTitle}: `, lMargin, y);\n  width = doc.getTextWidth(`${reportSettings.subjectTitle}: `);\n  // if (reportSettings.position) {\n  // } else if (reportSettings.position) {\n  //   doc.text(`Subject: `, lMargin, y);\n  //   width = doc.getTextWidth(\"Subject: \");\n  // }\n  // doc.setFontType(\"bold\");\n  doc.setTextColor(38, 38, 38);\n  for (var i = 0; i < lines.length; i++) {\n    if (y > 280) {\n      y = 10;\n      doc.addPage();\n    }\n    // doc.text(15, y, lines[i]);\n    doc.text(lines[i], lMargin + width, y);\n    y = y + 7;\n  }\n  doc.setTextColor(95, 95, 95);\n  doc.text(\"Period: \", lMargin, y + 3);\n  width = doc.getTextWidth(\"Period: \");\n  doc.setTextColor(38, 38, 38);\n  doc.text(reportSettings.period, lMargin + width, y + 3);\n\n  doc.autoTable({\n    html: table,\n    startY: 85,\n    margin: { horizontal: 20 },\n    cellPadding: 3, // Horizontal cell padding\n    // fontSize: 12,\n    rowHeight: 20,\n    // styles: { overflow: \"linebreak\" },\n    bodyStyles: { valign: \"top\" },\n    columnStyles: { email: { cellWidth: \"wrap\" } },\n    theme: \"striped\",\n    tableWidth: true,\n  });\n\n  doc.setFontSize(12);\n  let finalY = doc.lastAutoTable.finalY; // The y position on the page\n  doc.text(`Reported by: ${reportSettings.doneBy}`, lMargin, finalY + 15);\n  doc.text(\n    \"Report downloaded on \" + DATE(new Date().toString()),\n    lMargin,\n    finalY + 23\n  );\n\n  addFooters(doc);\n  await doc\n    .save(\n      `${\n        reportSettings.title +\n        \": \" +\n        reportSettings.subject +\n        \": \" +\n        reportSettings.period\n      }.pdf`,\n      { returnPromise: true }\n    )\n    .then(callBack(false));\n};\n","import React, { useState } from \"react\";\nimport {\n  MdCheckCircle,\n  MdRadioButtonUnchecked,\n  MdSearch,\n} from \"react-icons/md\";\nimport Loading from \"../../components/Loading/Loading\";\nimport {\n  PlansInterface,\n  SessionPlanInterface,\n  SessionPlanTypeStatus,\n} from \"../../interfaces\";\nimport { DATE } from \"../../utils/functions\";\nimport searchData from \"../../utils/search\";\n\nexport const isPlansActive = (plans: PlansInterface[]): PlansInterface[] => {\n  let today = new Date();\n  let activePlans: PlansInterface[] = [];\n  for (let plan of plans) {\n    let startDate = new Date(plan.start_date);\n    let endDate = new Date(plan.end_date);\n    if (\n      startDate.getTime() <= today.getTime() &&\n      endDate.getTime() >= today.getTime() &&\n      plan.type_status === SessionPlanTypeStatus.OPEN\n    ) {\n      activePlans = [...activePlans, plan];\n    }\n  }\n  return activePlans;\n};\n\ninterface ChooseSessionProps {\n  allSession: SessionPlanInterface[] | null;\n  setSelectSession: (period: SessionPlanInterface | \"all\") => void;\n  currentSelected: SessionPlanInterface | \"all\";\n  chooseAll: boolean;\n}\n\nconst ChooseSession = (props: ChooseSessionProps) => {\n  const [selectedPlan, setSelectedPlan] = useState<SessionPlanInterface | null>(\n    null\n  );\n  const [search, setSearch] = useState<string>(\"\");\n  const getSearch = (\n    period: SessionPlanInterface[],\n    searched: string\n  ): SessionPlanInterface[] => {\n    return searchData(period, searched) as SessionPlanInterface[];\n  };\n\n  return (\n    <div className=\"\">\n      <div className=\"px-3\">\n        <input\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n            setSearch(e.target.value)\n          }\n          type=\"text\"\n          className=\"py-3 px-4 w-full rounded border border-gray-400 mb-3\"\n          placeholder=\"Search by year, name\"\n          disabled={props.allSession === null || props.allSession.length === 0}\n        />\n      </div>\n\n      <div className=\"bg-gray-100 px-3 pt-3 pb-2 rounded-b\">\n        {props.allSession === null ? (\n          <Loading />\n        ) : props.allSession.length === 0 ? (\n          <div className=\"flex flex-col text-gray-400 items-center justify-center mb-2 bg-white py-4\">\n            <MdSearch className=\"text-6xl\" />\n            <div className=\"flex flex-col items-center justify-center\">\n              <span>No session found!</span>\n            </div>\n          </div>\n        ) : (\n          <section>\n            {props.chooseAll && (\n              <div\n                className={`rounded border ${\n                  props.currentSelected === \"all\"\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2 flex flex-col md:flex-row items-start md:items-center md:justify-between`}\n              >\n                <div className=\"flex flex-row items-center gap-3\">\n                  {props.currentSelected === \"all\" ? (\n                    <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                  ) : (\n                    <MdRadioButtonUnchecked\n                      className={`text-gray-300 text-4xl`}\n                    />\n                  )}\n                  <div className=\"flex flex-col\">\n                    <div className={`text-gray-600 font-bold`}>All session</div>\n                  </div>\n                </div>\n                <div\n                  onClick={() => {\n                    props.setSelectSession(\"all\");\n                  }}\n                  className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                >\n                  Select\n                </div>\n              </div>\n            )}\n            {getSearch(props.allSession, search).map((item, i) => (\n              <div\n                key={i + 1}\n                className={`rounded border ${\n                  props.currentSelected !== \"all\" &&\n                  props.currentSelected.session_plan_id === item.session_plan_id\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2`}\n              >\n                <div className=\"flex flex-col md:flex-row items-start md:items-center md:justify-between \">\n                  <div className=\"flex flex-row items-center gap-3\">\n                    {props.currentSelected !== \"all\" &&\n                    props.currentSelected.session_plan_id ===\n                      item.session_plan_id ? (\n                      <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                    ) : (\n                      <MdRadioButtonUnchecked\n                        className={`text-gray-300 text-4xl`}\n                      />\n                    )}\n                    <div className=\"flex flex-col\">\n                      <div\n                        className={`${\n                          props.currentSelected !== \"all\" &&\n                          props.currentSelected.session_plan_id ===\n                            item.session_plan_id\n                            ? \"text-blue-600\"\n                            : \"text-gray-600\"\n                        } font-bold`}\n                      >\n                        {item.session_plan_name}\n                      </div>\n                      <div className=\"text-sm text-gray-500\">\n                        <span>Status: </span>\n                        <span\n                          className={`${\n                            item.is_active === true\n                              ? \"text-gray-900 font-bold underline\"\n                              : \"text-gray-500 italic\"\n                          }`}\n                        >\n                          {item.is_active === true ? \"Active\" : \"Expired\"}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"flex flex-row items-center gap-2\">\n                    {(selectedPlan === null ||\n                      selectedPlan.session_plan_id !==\n                        item.session_plan_id) && (\n                      <div\n                        onClick={() => setSelectedPlan(item)}\n                        className=\"bg-gray-50 group-hover:bg-blue-100 font-semibold text-gray-400 group-hover:text-blue-600 rounded px-3 py-2 cursor-pointer\"\n                      >\n                        Details\n                      </div>\n                    )}\n                    <div\n                      onClick={() => {\n                        props.setSelectSession(item);\n                      }}\n                      className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                    >\n                      Select\n                    </div>\n                    {selectedPlan !== null &&\n                      selectedPlan.session_plan_id === item.session_plan_id && (\n                        <div\n                          onClick={() => setSelectedPlan(null)}\n                          className=\"bg-red-100 group-hover:bg-red-200 font-semibold text-red-600 group-hover:text-red-800 rounded px-3 py-2 cursor-pointer\"\n                        >\n                          Close\n                        </div>\n                      )}\n                  </div>\n                </div>\n                {selectedPlan !== null &&\n                  selectedPlan.session_plan_id === item.session_plan_id && (\n                    <div className=\"bg-white rounded border border-blue-50 mt-2 animate__animated animate__fadeIn\">\n                      <table className=\"w-full\">\n                        <thead className=\"bg-blue-50\">\n                          <tr className=\"text-left\">\n                            <th className=\"px-3 py-3\">#</th>\n                            <th>Plan</th>\n                            <th>Start date</th>\n                            <th>Ending date</th>\n                            <th>Status</th>\n                          </tr>\n                        </thead>\n                        <tbody className=\"text-sm\">\n                          {selectedPlan !== null &&\n                            selectedPlan.session_plan_id ===\n                              item.session_plan_id &&\n                            selectedPlan.plans.length > 0 &&\n                            item.plans.map((plan, i) => (\n                              <tr\n                                key={i + 1}\n                                className={`${\n                                  isPlansActive(item.plans).find(\n                                    (itm) => itm.type_key === plan.type_key\n                                  ) !== undefined\n                                    ? \"bg-blue-100 text-blue-600 font-bold\"\n                                    : \"\"\n                                } text-left border-b border-blue-50`}\n                              >\n                                <td className=\"px-3 py-1\">{i + 1}</td>\n                                <td>{plan.type_title}</td>\n                                <td>{DATE(plan.start_date, \"DD/MM/YYYY\")}</td>\n                                <td>{DATE(plan.end_date, \"DD/MM/YYYY\")}</td>\n                                <td>{plan.type_status}</td>\n                              </tr>\n                            ))}\n                        </tbody>\n                      </table>\n                    </div>\n                  )}\n              </div>\n            ))}\n          </section>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(ChooseSession);\n","import { PContractItem } from \"./candidate_placement_contract\";\n\nexport type ViewContractType = {\n  province: PContractItem;\n  district: PContractItem;\n  sector: PContractItem;\n  school: PContractItem;\n};\nexport interface WaitingListInterface {\n  _id: string;\n  status: WaitingListStatus;\n  user_id: string;\n  marks: number;\n  in_education: boolean;\n  session_id: string;\n  position_id: string;\n  gender: string;\n  createdAt: string;\n  updatedAt: string;\n  __v: number;\n  n_id: string;\n  phone_number: string;\n  email: string;\n  contract: ViewContractType;\n  user_info: {\n    document_type: string;\n    issue_number: string;\n    date_of_issue: string;\n    date_of_expiry: string;\n    place_of_issue: string;\n    application_number: string;\n    fname: string;\n    lname: string;\n    father_names: string;\n    mother_names: string;\n    sex: string;\n    date_of_birth: string;\n    place_of_birth: string;\n    country_of_birth: string;\n    village_id: string;\n    village: string;\n    cell: string;\n    sector: string;\n    district: string;\n    province: string;\n    civil_status: string;\n    spouse: null;\n    status: string;\n    photo: string;\n  };\n}\n\nexport enum WaitingListStatus {\n  WAITING = \"waiting\",\n  PENDING = \"pending\",\n  PLACED = \"placed\",\n}\n\nexport enum applicantGender {\n  male = \"Male\",\n  female = \"Female\",\n  null = \"-\",\n}\n\nexport interface WaitingListToPrintInterface {\n  id: string;\n  names: string;\n  gender: string;\n  national_id: string;\n  phone: string;\n  email: string;\n  user_position_marks: number;\n  position_title: string;\n  education_category: string;\n  waitingList_session: string;\n  date: string;\n  waiting_status: string;\n}\nexport interface WaitingListDataInterface {\n  waitingList_id: string;\n  names: string;\n  gender: applicantGender;\n  national_id: string;\n  phone: string;\n  email: string;\n  user_position_marks: number;\n  position_id: string;\n  position_title: string;\n  education_category_id: string;\n  education_category: string;\n  waitingList_session: string;\n  waitingList_session_id: string;\n  date: string;\n  waiting_status: string;\n  status: WaitingListStatus;\n}\n\nexport enum waitingListReportContentKeyInterface {\n  names = \"names\",\n  gender = \"gender\",\n  national_id = \"national_id\",\n  email = \"email\",\n  phone = \"phone\",\n  user_position_marks = \"user_position_marks\",\n  position_title = \"position_title\",\n  education_category = \"education_category\",\n  date = \"date\",\n  waiting_status = \"waiting_status\",\n  waitingList_session = \"waitingList_session\",\n}\n\nexport interface waitingListReportContentInterface {\n  key: waitingListReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n","import React from \"react\";\nimport { FaAngleDoubleRight } from \"react-icons/fa\";\nimport { ContractItemList } from \"../../containers/PlacementContract/Contract/Contract\";\n\ninterface AppProps {\n  data: ContractItemList[];\n  strict: boolean;\n  //   expandClick?: () => void;\n  //   loading: boolean;\n}\n\nconst DistrictView: React.FC<AppProps> = (props) => {\n  const displayMessage = (): JSX.Element => {\n    let result: JSX.Element = <></>;\n    let districts: string = \"\";\n    if (props.data.length === 0)\n      result = (\n        <p>\n          The system will place me in the available posts from all districts of\n          the selected provinces.\n        </p>\n      );\n    else if (props.strict === false && props.data.length > 0) {\n      props.data.forEach((district, index) => {\n        districts += district.title;\n        if (index <= props.data.length - 1) districts += \", \";\n      });\n\n      result = (\n        <p>\n          The system will place you in the available posts{\" \"}\n          <span className=\"font-semibold\">starting</span> from{\" \"}\n          <span className=\"font-semibold\">{districts}</span> and all remaining\n          districts of the selected provinces.\n        </p>\n      );\n    } else if (props.strict === true && props.data.length > 0) {\n      props.data.forEach((district, index) => {\n        districts += district.title;\n        if (index <= props.data.length - 2) districts += \", \";\n        if (index === props.data.length - 2 && index > 0) districts += \" and \";\n      });\n\n      result = (\n        <p>\n          The system will <span className=\"font-semibold\">only</span> place me\n          in available posts in{\" \"}\n          <span className=\"font-semibold\">{districts}</span>.\n        </p>\n      );\n    }\n    return result;\n  };\n\n  return (\n    <div className=\"bg-white mt-9 px-4\">\n      <div className=\"flex flex-row items-center gap-1\">\n        <FaAngleDoubleRight />\n        <span className={`font-extrabold text-lg`}>\n          Preferences at district level\n        </span>\n      </div>\n\n      <p>{displayMessage()}</p>\n    </div>\n  );\n};\n\nexport default DistrictView;\n","import React from \"react\";\nimport { FaAngleDoubleRight } from \"react-icons/fa\";\nimport { ContractItemList } from \"../../containers/PlacementContract/Contract/Contract\";\n\ninterface AppProps {\n  data: ContractItemList[];\n  strict: boolean;\n  //   expandClick?: () => void;\n  //   loading: boolean;\n}\n\nconst ProvinceView: React.FC<AppProps> = (props) => {\n  const displayMessage = (): JSX.Element => {\n    let result: JSX.Element = <></>;\n    let provinces: string = \"\";\n    if (props.data.length === 0)\n      result = (\n        <p>\n          The system will place me in the available posts from all provinces.\n        </p>\n      );\n    else if (props.strict === false && props.data.length > 0) {\n      props.data.forEach((province, index) => {\n        provinces += province.title;\n        if (index <= props.data.length - 1) provinces += \", \";\n      });\n\n      result = (\n        <p>\n          The system will place me in the available posts{\" \"}\n          <span className=\"font-semibold\">starting</span> from{\" \"}\n          <span className=\"font-semibold\">{provinces}</span> and all remaining\n          provinces.\n        </p>\n      );\n    } else if (props.strict === true && props.data.length > 0) {\n      props.data.forEach((province, index) => {\n        provinces += province.title;\n        if (index <= props.data.length - 2) provinces += \", \";\n        if (index === props.data.length - 2 && index > 0) provinces += \" and \";\n      });\n\n      result = (\n        <p>\n          The system will <span className=\"font-semibold\">only</span> place me\n          in available posts in{\" \"}\n          <span className=\"font-semibold\">{provinces}</span>.\n        </p>\n      );\n    }\n    return result;\n  };\n\n  return (\n    <div className=\"bg-white mt-9 px-4\">\n      <div className=\"flex flex-row items-center gap-1\">\n        <FaAngleDoubleRight />\n        <span className={`font-extrabold text-lg`}>\n          Preferences at province level\n        </span>\n      </div>\n\n      <p>{displayMessage()}</p>\n    </div>\n  );\n};\n\nexport default ProvinceView;\n","import React from \"react\";\nimport { FaAngleDoubleRight } from \"react-icons/fa\";\nimport { ContractItemList } from \"../../containers/PlacementContract/Contract/Contract\";\n\ninterface AppProps {\n  data: ContractItemList[];\n  strict: boolean;\n  //   expandClick?: () => void;\n  //   loading: boolean;\n}\n\nconst SchoolView: React.FC<AppProps> = (props) => {\n  const displayMessage = (): JSX.Element => {\n    let result: JSX.Element = <></>;\n    let schools: string = \"\";\n    if (props.data.length === 0)\n      result = (\n        <p>\n          The system will place me in the available posts from all Schools of\n          the selected provinces, districts, and sectors.\n        </p>\n      );\n    else if (props.strict === false && props.data.length > 0) {\n      props.data.forEach((school, index) => {\n        schools += school.title;\n        if (index <= props.data.length - 1) schools += \", \";\n      });\n\n      result = (\n        <p>\n          The system will place me in the available posts{\" \"}\n          <span className=\"font-semibold\">starting</span> from{\" \"}\n          <span className=\"font-semibold\">{schools}</span> and in all remaining\n          schools from the selected schools, districts, and sectors.\n        </p>\n      );\n    } else if (props.strict === true && props.data.length > 0) {\n      props.data.forEach((school, index) => {\n        schools += school.title;\n        if (index <= props.data.length - 2) schools += \", \";\n        if (index === props.data.length - 2 && index > 0) schools += \" and \";\n      });\n\n      result = (\n        <p>\n          The system will <span className=\"font-semibold\">only</span> place me\n          in available posts in <span className=\"font-semibold\">{schools}</span>\n          .\n        </p>\n      );\n    }\n    return result;\n  };\n\n  return (\n    <div className=\"bg-white mt-9 px-4\">\n      <div className=\"flex flex-row items-center gap-1\">\n        <FaAngleDoubleRight />\n        <span className={`font-extrabold text-lg`}>\n          Preferences at school level\n        </span>\n      </div>\n\n      <p>{displayMessage()}</p>\n    </div>\n  );\n};\n\nexport default SchoolView;\n","import React from \"react\";\nimport { FaAngleDoubleRight } from \"react-icons/fa\";\nimport { ContractItemList } from \"../../containers/PlacementContract/Contract/Contract\";\n\ninterface AppProps {\n  data: ContractItemList[];\n  strict: boolean;\n  //   expandClick?: () => void;\n  //   loading: boolean;\n}\n\nconst SectorView: React.FC<AppProps> = (props) => {\n  const displayMessage = (): JSX.Element => {\n    let result: JSX.Element = <></>;\n    let sectors: string = \"\";\n    if (props.data.length === 0)\n      result = (\n        <p>The system will place me in the available posts from all sectors.</p>\n      );\n    else if (props.strict === false && props.data.length > 0) {\n      props.data.forEach((sector, index) => {\n        sectors += sector.title;\n        if (index <= props.data.length - 1) sectors += \", \";\n      });\n\n      result = (\n        <p>\n          The system will place me in the available posts{\" \"}\n          <span className=\"font-semibold\">starting</span> from{\" \"}\n          <span className=\"font-semibold\">{sectors}</span> and all remaining\n          sectors of the selected provinces and districts.\n        </p>\n      );\n    } else if (props.strict === true && props.data.length > 0) {\n      props.data.forEach((sector, index) => {\n        sectors += sector.title;\n        if (index <= props.data.length - 2) sectors += \", \";\n        if (index === props.data.length - 2 && index > 0) sectors += \" and \";\n      });\n\n      result = (\n        <p>\n          The system will <span className=\"font-semibold\">only</span> place me\n          in available posts in <span className=\"font-semibold\">{sectors}</span>\n          .\n        </p>\n      );\n    }\n    return result;\n  };\n\n  return (\n    <div className=\"bg-white mt-9 px-4\">\n      <div className=\"flex flex-row items-center gap-1\">\n        <FaAngleDoubleRight />\n        <span className={`font-extrabold text-lg`}>\n          Preferences at sector level\n        </span>\n      </div>\n\n      <p>{displayMessage()}</p>\n    </div>\n  );\n};\n\nexport default SectorView;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  FC_getLocations,\n  FC_LoadSchoolsByDistrict,\n  FC_LoadSchoolsByIDs,\n  FT_LoadSchoolsByDistrict,\n  FT_LoadSchoolsByIDs,\n  LocationAPI,\n  SchoolContract,\n} from \"../../actions\";\nimport {\n  FC_GetWaitingLocationList,\n  FT_GetWaitingLocationList,\n} from \"../../actions/location\";\nimport { ContractItemList } from \"../../containers/PlacementContract/Contract/Contract\";\nimport { ViewContractType } from \"../../interfaces/waitingList\";\nimport { StoreState } from \"../../reducers\";\nimport Loading from \"../Loading/Loading\";\nimport DistrictView from \"./DistrictView\";\nimport ProvinceView from \"./ProvinceView\";\nimport SchoolView from \"./SchoolView\";\nimport SectorView from \"./SectorView\";\n\ninterface ContractViewerProps {\n  // FROM PROPS\n  candidates: string;\n  position: string;\n  contract: ViewContractType;\n\n  // FROM REDUX =========\n  locations: LocationAPI | null;\n  FC_LoadSchoolsByDistrict: FT_LoadSchoolsByDistrict;\n  FC_LoadSchoolsByIDs: FT_LoadSchoolsByIDs;\n  FC_GetWaitingLocationList: FT_GetWaitingLocationList;\n}\n\ninterface ContractViewerState {\n  loading: boolean;\n  selectedSchool: SchoolContract[] | null;\n}\n\nclass ContractViewer extends Component<\n  ContractViewerProps,\n  ContractViewerState\n> {\n  constructor(props: ContractViewerProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      selectedSchool: null,\n    };\n  }\n\n  componentDidMount = () => {\n    if (this.props.locations === null)\n      FC_getLocations(\n        (status: boolean, data: LocationAPI | null, msg: string) => {\n          if (status === true && data !== null) {\n            this.props.FC_GetWaitingLocationList(data);\n            this.setState({\n              loading: false,\n            });\n          } else {\n            this.setState({\n              loading: false,\n            });\n          }\n        }\n      );\n    // else this.setState({ loading: false });\n    if (\n      this.state.selectedSchool === null &&\n      this.props.contract.school.values.length >= 1\n    ) {\n      this.setState({\n        loading: true,\n      });\n      this.props.FC_LoadSchoolsByIDs(\n        this.props.contract.school.values.map((itm) => itm.toString()),\n        (status, schools, err) => {\n          if (status === true) {\n            this.setState({\n              selectedSchool: schools,\n              loading: false,\n            });\n          }\n        }\n      );\n    } else this.setState({ loading: false, selectedSchool: [] });\n  };\n\n  render() {\n    if (\n      this.state.loading === true ||\n      this.props.locations === null ||\n      this.state.selectedSchool === null\n    ) {\n      return (\n        <div className=\"bg-white mt-6 mx-6 p-6 h-full flex flex-col items-start justify-center rounded\">\n          <div className=\"text-xl mx-4 my-4 animate-pulse\">\n            Loading contract, Please wait...\n          </div>\n          <Loading />\n        </div>\n      );\n    }\n\n    let ProvincesList: ContractItemList[] = [];\n    let DistrictList: ContractItemList[] = [];\n    let SectorList: ContractItemList[] = [];\n\n    if (this.props.contract !== null) {\n      // * Province\n      this.props.contract.province.values.forEach((el) => {\n        if (this.props.locations !== null) {\n          let findIt = this.props.locations.provinces.find(\n            (element) => element.province_code === el.toString()\n          );\n          if (findIt !== undefined) {\n            ProvincesList.push({\n              id: findIt.province_code,\n              title: findIt.province_name,\n            } as ContractItemList);\n          }\n        }\n      });\n\n      // * Province\n      this.props.contract.district.values.forEach((el) => {\n        if (this.props.locations !== null) {\n          let findIt = this.props.locations.districts.find(\n            (element) => element.district_code === el.toString()\n          );\n          if (findIt !== undefined) {\n            DistrictList.push({\n              id: findIt.district_code,\n              title: findIt.district_name,\n            } as ContractItemList);\n          }\n        }\n      });\n\n      // * Sector\n      this.props.contract.sector.values.forEach((el) => {\n        if (this.props.locations !== null) {\n          let findIt = this.props.locations.sectors.find(\n            (element) => element.sector_code === el.toString()\n          );\n          if (findIt !== undefined) {\n            SectorList.push({\n              id: findIt.sector_code,\n              title: findIt.sector_name,\n            } as ContractItemList);\n          }\n        }\n      });\n    }\n\n    const thisCandidate: JSX.Element = (\n      <span className=\"font-semibold\">{this.props.candidates}</span>\n    );\n    const thisPosition: JSX.Element = (\n      <span className=\"font-semibold\">{this.props.position}</span>\n    );\n\n    return (\n      <div className=\"pb-4\">\n        <div className=\"px-4\">\n          <h2 className=\"text-black text-center font-semibold text-2xl sm:text-3xl underline\">\n            Placement Preferences\n          </h2>\n\n          <div className=\"mt-6 text-lg flex flex-col\">\n            <p>Names: {thisCandidate}</p>\n            <p>Position: {thisPosition}</p>\n          </div>\n\n          {/* <p className=\"mt-5\">\n            This preferences were made by {thisCandidate} on {thisPosition}, by\n            Tempor in laborum culpa et consectetur elit occaecat cupidatat est\n            voluptate tempor deserunt non ea.\n          </p> */}\n        </div>\n\n        <ProvinceView\n          data={ProvincesList}\n          strict={this.props.contract.province.strict}\n        />\n\n        <DistrictView\n          data={DistrictList}\n          strict={this.props.contract.district.strict}\n        />\n\n        <SectorView\n          data={SectorList}\n          strict={this.props.contract.sector.strict}\n        />\n\n        <SchoolView\n          data={this.state.selectedSchool.map((itm) => ({\n            id: itm.school_code,\n            title: itm.school_name,\n          }))}\n          strict={this.props.contract.school.strict}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  locations,\n}: StoreState): {\n  locations: LocationAPI | null;\n} => {\n  return { locations: locations.waitingLocation };\n};\nexport default React.memo(\n  connect(mapStateToProps, {\n    FC_LoadSchoolsByDistrict,\n    FC_LoadSchoolsByIDs,\n    FC_GetWaitingLocationList,\n  })(ContractViewer)\n);\n","import React, { Component, Fragment } from \"react\";\nimport { BiExport, BiFilterAlt, BiSort } from \"react-icons/bi\";\nimport { FiEdit } from \"react-icons/fi\";\nimport { ImFilesEmpty } from \"react-icons/im\";\nimport { IoIosBriefcase } from \"react-icons/io\";\nimport { IoFilter } from \"react-icons/io5\";\nimport {\n  MdCheckBox,\n  MdCheckBoxOutlineBlank,\n  MdHistory,\n  MdRadioButtonChecked,\n  MdRadioButtonUnchecked,\n  MdSearch,\n} from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  schoolLevelsStoreInterface,\n  loadEducationCategories,\n  PushPopupAlert,\n} from \"../../../actions\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport { getPositions } from \"../../../actions/settings\";\nimport { getWaitingList } from \"../../../actions/waitingList\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport ContractViewer from \"../../../components/ContractViewer/ContractViewer\";\nimport {\n  generatePDF,\n  reportSettingsInterface,\n} from \"../../../components/DownloadPDF/rest\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport LoadingV2, { LoadingType } from \"../../../components/Loading/LoadingV2\";\nimport TableLoading from \"../../../components/Loading/TableLoading\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport {\n  SideNavigation,\n  MainItem,\n} from \"../../../components/Navigation/SideNavigation\";\nimport {\n  SessionPlanInterface,\n  PositionAPI,\n  education_category,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport {\n  applicantGender,\n  WaitingListDataInterface,\n  WaitingListInterface,\n  waitingListReportContentInterface,\n  waitingListReportContentKeyInterface,\n  WaitingListStatus,\n  WaitingListToPrintInterface,\n} from \"../../../interfaces/waitingList\";\nimport { StoreState } from \"../../../reducers\";\nimport {\n  capitalizeFirstLetter,\n  getPositionById,\n} from \"../../../shared/dataTest\";\nimport ExportToExcel from \"../../../utils/ExportToExcel\";\nimport { DATE, search, sortThisArray } from \"../../../utils/functions\";\nimport ChooseSession from \"../../SessionSettings/ChooseSession\";\nimport NoSession from \"../../SessionSettings/NoSession\";\n\nexport const getPeriodById = (\n  allSession: SessionPlanInterface[],\n  period_id: string\n): SessionPlanInterface | undefined => {\n  return allSession.find((item) => item.session_plan_id === period_id);\n};\n\nconst searchData = (\n  objList: WaitingListDataInterface[],\n  text: string\n): WaitingListDataInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (\n        prop === \"names\" ||\n        prop === \"gender\" ||\n        prop === \"national_id\" ||\n        prop === \"phone\" ||\n        prop === \"email\" ||\n        prop === \"user_position_marks\" ||\n        prop === \"position_title\" ||\n        prop === \"education_category\" ||\n        prop === \"waitingList_session\" ||\n        prop === \"date\" ||\n        prop === \"waiting_status\"\n      ) {\n        if (product[prop]) {\n          flag =\n            product[prop]!.toString()\n              .toLowerCase()\n              .indexOf(text.toLowerCase()) > -1;\n        }\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n};\n\nconst defaultReportContent: waitingListReportContentInterface[] = [\n  {\n    key: waitingListReportContentKeyInterface.names,\n    title: \"Applicant Names\",\n    status: true,\n  },\n  {\n    key: waitingListReportContentKeyInterface.national_id,\n    title: \"National ID\",\n    status: true,\n  },\n  {\n    key: waitingListReportContentKeyInterface.gender,\n    title: \"Gender\",\n    status: true,\n  },\n  {\n    key: waitingListReportContentKeyInterface.phone,\n    title: \"Phone\",\n    status: true,\n  },\n  {\n    key: waitingListReportContentKeyInterface.user_position_marks,\n    title: \"Applicant marks\",\n    status: true,\n  },\n  {\n    key: waitingListReportContentKeyInterface.waitingList_session,\n    title: \"Waiting list Session\",\n    status: true,\n  },\n  {\n    key: waitingListReportContentKeyInterface.education_category,\n    title: \"Education Institute\",\n    status: true,\n  },\n  {\n    key: waitingListReportContentKeyInterface.date,\n    title: \"Waiting list Date\",\n    status: true,\n  },\n  {\n    key: waitingListReportContentKeyInterface.waiting_status,\n    title: \"Waiting list Status\",\n    status: true,\n  },\n  {\n    key: waitingListReportContentKeyInterface.position_title,\n    title: \"Position\",\n    status: true,\n  },\n];\n\ntype AppProps = {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  systemPositions: PositionAPI[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  waitingList: WaitingListInterface[] | null;\n  getWaitingList: Function;\n  getPositions: Function;\n  GetAllSessionPlans: Function;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype AppState = {\n  thisPeriod: SessionPlanInterface | \"all\";\n  loading: boolean;\n  loadingWaitingList: boolean;\n  waitingListToPrint: WaitingListToPrintInterface[] | null;\n  thisWaitingListStatus: WaitingListStatus | \"all\";\n  thisPosition: PositionAPI | null;\n  selectPosition: boolean;\n  sortProperty: string;\n  isSorted: boolean;\n  sortOrder: \"ASC\" | \"DESC\";\n  searchInput: string;\n  searchPositionInput: string;\n  downloading: boolean;\n  generateReportModal: {\n    reportType: \"EXCEL\" | \"PDF\";\n    status: boolean;\n  } | null;\n  reportTitle: string;\n  reportContent: waitingListReportContentInterface[];\n  selectAll: boolean;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  selectPeriod: boolean;\n  selectedWaiting: WaitingListDataInterface | null;\n  thisEducation: education_category | \"all\";\n};\n\nclass _WaitingListReport extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      thisPeriod: \"all\",\n      loading: true,\n      loadingWaitingList: true,\n      waitingListToPrint: null,\n      thisWaitingListStatus: \"all\",\n      thisPosition: null,\n      selectPosition: false,\n      sortProperty: \"\",\n      isSorted: false,\n      sortOrder: \"ASC\",\n      searchInput: \"\",\n      searchPositionInput: \"\",\n      downloading: false,\n      generateReportModal: null,\n      reportTitle: \"\",\n      reportContent: defaultReportContent,\n      selectAll: true,\n      formError: null,\n      selectPeriod: false,\n      thisEducation: \"all\",\n      selectedWaiting: null,\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingWaitingList = (value: boolean) => {\n    this.setState({ loadingWaitingList: value });\n  };\n\n  setThisPeriod = (value: SessionPlanInterface | \"all\") => {\n    this.setState({ thisPeriod: value });\n  };\n\n  setWaitingListToPrint = (value: WaitingListToPrintInterface[] | null) => {\n    this.setState({ waitingListToPrint: value });\n  };\n\n  setThisWaitingListStatus = (value: WaitingListStatus | \"all\") => {\n    this.setState({ thisWaitingListStatus: value });\n  };\n\n  setThisPosition = (value: PositionAPI | null) => {\n    this.setState({ thisPosition: value });\n  };\n\n  setSelectPosition = (value: boolean) => {\n    this.setState({ selectPosition: value });\n  };\n\n  setSortProperty = (value: string | \"all\") => {\n    this.setState({ sortProperty: value });\n  };\n\n  setIsSorted = (value: boolean) => {\n    this.setState({ isSorted: value });\n  };\n\n  setSortOrder = (value: \"ASC\" | \"DESC\") => {\n    this.setState({ sortOrder: value });\n  };\n\n  setSearchInput = (value: string) => {\n    this.setState({ searchInput: value });\n  };\n\n  setSearchPositionInput = (value: string) => {\n    this.setState({ searchPositionInput: value });\n  };\n\n  setDownloading = (value: boolean) => {\n    this.setState({ downloading: value });\n  };\n\n  setGenerateReportModal = (\n    value: {\n      reportType: \"EXCEL\" | \"PDF\";\n      status: boolean;\n    } | null\n  ) => {\n    this.setState({ generateReportModal: value });\n  };\n\n  setReportTitle = (value: string) => {\n    this.setState({ reportTitle: value });\n  };\n\n  setReportContent = (value: waitingListReportContentInterface[]) => {\n    this.setState({ reportContent: value });\n  };\n\n  setSelectAll = (value: boolean) => {\n    this.setState({ selectAll: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n\n  setSelectPeriod = (value: boolean) => {\n    this.setState({ selectPeriod: value });\n  };\n\n  setThisEducation = (value: education_category | \"all\") => {\n    this.setState({ thisEducation: value });\n  };\n\n  componentDidMount = () => {\n    // LOADING EDUCATION CATEGORY =================================\n    if (\n      this.props.schoolLevels.education_categories === null ||\n      this.props.schoolLevels.education_categories.length === 0\n    ) {\n      this.props.loadEducationCategories(this.setLoading);\n    }\n    // END LOADING EDUCATION CATEGORY =================================\n    // ###################################################################\n    // LOADING APPLICATION SESSION ====================================\n    if (this.props.application_sessions === null) {\n      this.props.GetAllSessionPlans((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (!status) {\n          if (msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n    // END LOADING APPLICATION SESSION ====================================\n    // ###################################################################\n    // LOADING POSITIONS ====================================\n    if (this.props.systemPositions === null) {\n      this.props.getPositions((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    }\n\n    // LOADING WAITING LIST ========================================\n    if (this.state.loadingWaitingList) {\n      this.props.getWaitingList((status: boolean, msg: string) => {\n        this.setLoadingWaitingList(status);\n        if (status === false) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n    // END LOADING CLAIM TYPES ========================================\n  };\n\n  setSort = (thisProperty: string) => {\n    if (\n      this.state.sortProperty === thisProperty &&\n      this.state.sortOrder === \"ASC\"\n    ) {\n      this.setSortOrder(\"DESC\");\n    } else {\n      this.setSortOrder(\"ASC\");\n    }\n    this.setSortProperty(thisProperty);\n    this.setIsSorted(true);\n  };\n\n  showStatus = (status: WaitingListStatus | \"all\"): string => {\n    let result: string = \"\";\n    switch (status) {\n      case WaitingListStatus.WAITING:\n        result = \"Waiting\";\n        break;\n      case WaitingListStatus.PENDING:\n        result = \"Placed & pending\";\n        break;\n      case WaitingListStatus.PLACED:\n        result = \"Placed & confirmed\";\n        break;\n      default:\n        result = \"All\";\n        break;\n    }\n\n    return result;\n  };\n\n  FC_WaitingListStatus = (\n    WaitingList: WaitingListDataInterface[]\n  ): {\n    title: string;\n    count: number;\n    type: WaitingListStatus | \"all\";\n  }[] => {\n    let output: {\n      title: string;\n      count: number;\n      type: WaitingListStatus | \"all\";\n    }[] = [{ title: \"All status\", count: WaitingList.length, type: \"all\" }];\n    const statusArray = Object.values(WaitingListStatus);\n    for (let i in statusArray) {\n      output.push({\n        title: capitalizeFirstLetter(statusArray[i]),\n        count: WaitingList.filter((itm) => itm.status === statusArray[i])\n          .length,\n        type: statusArray[i],\n      });\n    }\n    return output;\n  };\n\n  updateReportContent = (key: waitingListReportContentKeyInterface) => {\n    let index: number = this.state.reportContent.findIndex(\n      (item) => item.key === key\n    );\n    let newArray: waitingListReportContentInterface[] =\n      this.state.reportContent;\n    newArray[index].status = !newArray[index].status;\n    this.setReportContent(newArray);\n    let isSelectAllNeeded = newArray.find((item) => item.status === false);\n    if (isSelectAllNeeded) {\n      this.setSelectAll(false);\n    } else {\n      this.setSelectAll(true);\n    }\n\n    // UPDATE APPLICATION LIST FOR UPDATE ==============================\n    this.updateWaitingListToPrint();\n  };\n\n  updateWaitingListToPrint = () => {\n    // UPDATE REPORT TITLE ========================\n    if (this.state.thisPosition) {\n      let session: string = \"\";\n      if (this.state.thisPeriod === \"all\") {\n        session = \"All session\";\n      } else {\n        session = this.state.thisPeriod.session_plan_name;\n      }\n      this.setReportTitle(\n        \"Waiting list - \" +\n          this.state.thisPosition.position_title +\n          \" - \" +\n          session\n      );\n    }\n    // UPDATE CONTENT =============================\n    if (\n      this.props.systemPositions &&\n      this.props.waitingList &&\n      this.props.application_sessions\n    ) {\n      let arrayNew: WaitingListToPrintInterface[] = [];\n      let n: number = 1;\n      for (const key in this.props.waitingList) {\n        if (Object.prototype.hasOwnProperty.call(this.props.waitingList, key)) {\n          const element = this.props.waitingList[key];\n          const thisPosition = getPositionById(\n            this.props.systemPositions,\n            element.position_id\n          );\n          const thisSession = getPeriodById(\n            this.props.application_sessions,\n            element.session_id\n          );\n          let dataArray: WaitingListToPrintInterface = {\n            id: n.toString(),\n            names: element.user_info.fname + \" \" + element.user_info.lname,\n            gender: element.user_info.sex === \"M\" ? \"Male\" : \"Female\",\n            national_id: element.n_id,\n            phone: element.phone_number,\n            email: element.email,\n            user_position_marks: Number(element.marks.toFixed(2)),\n            position_title: thisPosition\n              ? thisPosition.position_title\n              : \"Unknown position\",\n            education_category: thisPosition\n              ? thisPosition.education_institute_id.education_category_title\n              : \"-\",\n            waitingList_session: thisSession\n              ? thisSession.session_plan_name\n              : \"Unknown session\",\n            date: DATE(element.createdAt),\n            waiting_status: this.showStatus(element.status),\n          };\n\n          for (const key in this.state.reportContent) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                this.state.reportContent,\n                key\n              )\n            ) {\n              if (!this.state.reportContent[key].status) {\n                delete dataArray[this.state.reportContent[key].key];\n              }\n            }\n          }\n          arrayNew.push(dataArray);\n          n++;\n        }\n      }\n      this.setWaitingListToPrint(arrayNew);\n      arrayNew = [];\n      n = 1;\n    }\n  };\n\n  FC_WaitingListData = (\n    allWaitList: WaitingListInterface[] | null,\n    systemPositions: PositionAPI[] | null\n  ): WaitingListDataInterface[] | null => {\n    if (\n      allWaitList === null ||\n      systemPositions === null ||\n      this.props.application_sessions === null\n    )\n      return null;\n    let arrayNew: WaitingListDataInterface[] = [];\n    // LOOP IN ALL WAITING LIST ONE BY ONE ###########################\n    for (const key in allWaitList) {\n      const element = allWaitList[key];\n      if (element.user_info) {\n        const thisPosition = getPositionById(\n          systemPositions,\n          element.position_id\n        );\n        const thisSession = getPeriodById(\n          this.props.application_sessions,\n          element.session_id\n        );\n        let dataArray: WaitingListDataInterface = {\n          names: element.user_info.fname + \" \" + element.user_info.lname,\n          waitingList_id: element._id,\n          gender:\n            element.user_info.sex === \"M\"\n              ? applicantGender.male\n              : applicantGender.female,\n          national_id: element.n_id,\n          phone: element.phone_number,\n          email: element.email,\n          user_position_marks: Number(element.marks.toFixed(2)),\n          position_id: thisPosition\n            ? thisPosition.position_id\n            : \"Unknown position\",\n          position_title: thisPosition\n            ? thisPosition.position_title\n            : \"Unknown position\",\n          education_category: thisPosition\n            ? thisPosition.education_institute_id.education_category_title\n            : \"\",\n          education_category_id: thisPosition\n            ? thisPosition.education_institute_id.education_institute_id\n            : \"\",\n          waitingList_session: thisSession\n            ? thisSession.session_plan_name\n            : \"Unknown session\",\n          date: DATE(element.createdAt),\n          waiting_status: this.showStatus(element.status),\n          status: element.status,\n          waitingList_session_id: element.session_id,\n        };\n        arrayNew.push(dataArray);\n      }\n    }\n    return arrayNew;\n  };\n\n  resetReportContent = (currentState: boolean) => {\n    let newArray: waitingListReportContentInterface[] =\n      this.state.reportContent;\n    for (const key in newArray) {\n      if (this.isChangeAllowed(newArray[key].key)) {\n        newArray[key].status = !currentState;\n      }\n    }\n\n    this.setReportContent(newArray);\n    this.setSelectAll(!currentState);\n    this.updateWaitingListToPrint();\n  };\n\n  isChangeAllowed = (key: waitingListReportContentKeyInterface): boolean => {\n    if (\n      key === waitingListReportContentKeyInterface.names ||\n      key === waitingListReportContentKeyInterface.waiting_status ||\n      key === waitingListReportContentKeyInterface.waitingList_session ||\n      key === waitingListReportContentKeyInterface.position_title ||\n      key === waitingListReportContentKeyInterface.date ||\n      key === waitingListReportContentKeyInterface.user_position_marks ||\n      key === waitingListReportContentKeyInterface.national_id ||\n      key === waitingListReportContentKeyInterface.education_category\n    ) {\n      return false;\n    }\n    return true;\n  };\n\n  generateReportTitle = (position_title: string) => {\n    let session: string = \"\";\n    if (this.state.thisPeriod === \"all\") {\n      session = \"All session\";\n    } else {\n      session = this.state.thisPeriod.session_plan_name;\n    }\n    this.setReportTitle(\"Waiting list - \" + position_title + \" - \" + session);\n  };\n\n  FC_GeneratePDF = () => {\n    if (!document.querySelectorAll(\"#report_content tbody tr\").length) {\n      this.props.PushPopupAlert({\n        title: `Can't generate Report of empty Data`,\n        theme: PopupAlertTheme.warning,\n      });\n      return;\n    }\n\n    let session: string = \"\";\n    if (this.state.thisPeriod === \"all\") {\n      session = \"All session\";\n    } else {\n      session = this.state.thisPeriod.session_plan_name;\n    }\n    const table: HTMLElement | null = document.getElementById(\"report_content\");\n    const reportSettings: reportSettingsInterface = {\n      doneBy: this.props.auth.user.fname + \" \" + this.props.auth.user.lname,\n      title: this.state.reportTitle,\n      subjectTitle: \"Position\",\n      subject: this.state.thisPosition\n        ? this.state.thisPosition.position_title\n        : \"All position\",\n      period: session,\n      footer: \"Online Teacher Recruitment\",\n      institute: this.state.thisPosition\n        ? this.state.thisPosition.education_institute_id\n            .education_category_title\n        : \"\",\n    };\n    table && generatePDF(reportSettings, table, this.setDownloading);\n  };\n\n  FC_FilterWaitingList = (\n    allWaitList: WaitingListDataInterface[],\n    waitingListStatus: WaitingListStatus | \"all\",\n    thisSession: SessionPlanInterface | \"all\",\n    institute: education_category | \"all\",\n    position: PositionAPI | null\n  ): WaitingListDataInterface[] => {\n    let result: WaitingListDataInterface[] = allWaitList;\n    if (waitingListStatus !== \"all\") {\n      result = result.filter((item) => item.status === waitingListStatus);\n    }\n\n    if (position) {\n      result = result.filter(\n        (item) => item.position_id === position.position_id\n      );\n    }\n\n    if (thisSession !== \"all\") {\n      result = result.filter(\n        (item) => item.waitingList_session_id === thisSession.session_plan_id\n      );\n    }\n\n    if (institute !== \"all\") {\n      result = result.filter(\n        (item) => item.education_category === institute.education_category_title\n      );\n    }\n\n    return result;\n  };\n\n  viewContractor = (\n    waitingData: WaitingListDataInterface\n  ): WaitingListInterface | undefined => {\n    let result = undefined;\n\n    if (this.props.waitingList)\n      result = this.props.waitingList.find(\n        (item) => item._id === waitingData.waitingList_id\n      );\n    return result;\n  };\n\n  render() {\n    if (\n      this.props.application_sessions &&\n      this.props.application_sessions.length === 0\n    ) {\n      return <NoSession />;\n    }\n\n    return (\n      <div>\n        <SideNavigation>\n          <div className=\"flex flex-col mb-4\">\n            <span className=\"text-sm text-gray-600 mb-2\">\n              Education categories:\n            </span>\n            {this.props.schoolLevels.education_categories === null ? (\n              <Loading />\n            ) : this.props.schoolLevels.education_categories.length === 0 ? (\n              <span>No institute found</span>\n            ) : (\n              <Fragment>\n                <div\n                  onClick={() => this.setThisEducation(\"all\")}\n                  className={`border rounded px-2 py-2 mb-2 cursor-pointer ${\n                    this.state.thisEducation === \"all\"\n                      ? \"bg-blue-600 text-white hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                      : \"hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                  } font-bold flex flex-row items-center gap-2`}\n                >\n                  {this.state.thisEducation === \"all\" ? (\n                    <MdRadioButtonChecked />\n                  ) : (\n                    <MdRadioButtonUnchecked />\n                  )}\n                  <span>All</span>\n                </div>\n                {this.props.schoolLevels.education_categories.map((item, i) => (\n                  <div\n                    onClick={() => this.setThisEducation(item)}\n                    key={i + 1}\n                    className={`border rounded px-2 py-2 mb-2 cursor-pointer ${\n                      this.state.thisEducation !== \"all\" &&\n                      this.state.thisEducation.education_institute_id ===\n                        item.education_institute_id\n                        ? \"bg-blue-600 text-white hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                        : \"hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                    } font-bold flex flex-row items-center gap-2`}\n                  >\n                    {this.state.thisEducation !== \"all\" &&\n                    this.state.thisEducation.education_institute_id ===\n                      item.education_institute_id ? (\n                      <MdRadioButtonChecked />\n                    ) : (\n                      <MdRadioButtonUnchecked />\n                    )}\n                    <span>{item.education_category_title}</span>\n                  </div>\n                ))}\n              </Fragment>\n            )}\n          </div>\n          <div className=\"\">\n            <div className=\"text-gray-600 text-sm mb-2\">Selected period:</div>\n            <div\n              onClick={() => this.setSelectPeriod(true)}\n              className=\"font-bold bg-blue-50 border border-blue-200 rounded py-2 cursor-pointer text-base px-2 hover:underline  text-blue-600  mb-4 w-full flex flex-row items-center gap-2 justify-between animate__animated animate__zoomIn\"\n            >\n              {this.state.thisPeriod !== \"all\"\n                ? `${this.state.thisPeriod.session_plan_name} - ${this.state.thisPeriod.period}`\n                : \"All session\"}\n              <FiEdit className=\"text-xl text-blue-600\" />\n            </div>\n          </div>\n\n          <div className=\"pt-1\">\n            <div className=\"text-sm text-gray-700 pb-2 pt-2\">Claim types:</div>\n            {this.state.loadingWaitingList ||\n            this.FC_WaitingListData(\n              this.props.waitingList,\n              this.props.systemPositions\n            ) === null ? (\n              <Loading />\n            ) : (\n              this.FC_WaitingListStatus(\n                this.FC_WaitingListData(\n                  this.props.waitingList,\n                  this.props.systemPositions\n                )!\n              ).map((item, index: number) => (\n                <div\n                  onClick={() => this.setThisWaitingListStatus(item.type)}\n                  key={item.title + index}\n                >\n                  <MainItem\n                    title={item.title}\n                    count={item.count}\n                    active={this.state.thisWaitingListStatus === item.type}\n                  />\n                </div>\n              ))\n            )}\n          </div>\n        </SideNavigation>\n\n        <section>\n          {/* REPORT TITLE ============================================ */}\n          <div className=\"grid md:grid-cols-12\">\n            <div className=\"col-span-6\">\n              <div className=\"mt-4 mx-4 flex flex-col gap-1\">\n                <span className=\"text-3xl font-bold text-gray-700\">\n                  Waiting list report\n                </span>\n                <div\n                  onClick={() => this.setSelectPosition(true)}\n                  className=\"flex flex-row gap-2\"\n                >\n                  <span className=\"text-gray-500\">Selected position: </span>\n                  <span className=\"text-blue-600 font-bold underline cursor-pointer\">\n                    {this.state.thisPosition !== null\n                      ? this.state.thisPosition.position_title\n                      : \"All position\"}\n                  </span>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-span-6\">\n              <div className=\"float-right mt-2\">\n                {this.props.waitingList && this.props.waitingList.length > 0 && (\n                  <div className=\"flex flex-row items-center justify-end font-bold mb-2\">\n                    <BiExport className=\"text-2xl text-gray-500\" />\n                    <span className=\"text-gray-500\">Export as</span>\n                    <button\n                      className=\"px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200\"\n                      disabled={this.state.loading}\n                      onClick={() => {\n                        this.updateWaitingListToPrint();\n                        this.setGenerateReportModal({\n                          reportType: \"EXCEL\",\n                          status: true,\n                        });\n                      }}\n                    >\n                      EXCEL\n                    </button>\n                    <button\n                      className={`px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200 ${\n                        this.state.downloading && \"cursor-wait\"\n                      }`}\n                      onClick={() => this.FC_GeneratePDF()}\n                      disabled={this.state.loading || this.state.downloading}\n                    >\n                      PDF\n                    </button>\n                  </div>\n                )}\n                <div\n                  onClick={() => this.setSelectPosition(true)}\n                  className=\"btn bg-blue-50 border border-blue-300 text-blue-600 cursor-pointer hover:bg-blue-100 flex flex-row items-center justify-center gap-2 text-sm \"\n                >\n                  <BiFilterAlt className=\"text-xl\" />\n                  Filter by position\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* END REPORT TITLE ============================================ */}\n\n          <div className=\"bg-white my-4\">\n            <div className=\"w-full px-2 py-2\">\n              <input\n                onChange={(e) => this.setSearchInput(e.target.value)}\n                type=\"text\"\n                value={this.state.searchInput}\n                placeholder=\"Search...\"\n                className=\"w-full bg-gray-100 py-2 px-3 rounded focus:border-gray-800\"\n                disabled={\n                  this.state.loadingWaitingList ||\n                  this.FC_WaitingListData(\n                    this.props.waitingList,\n                    this.props.systemPositions\n                  ) === null\n                }\n              />\n            </div>\n            <div className=\"w-full overflow-x-auto\">\n              <table className=\"w-full shadow\" id=\"report_content\">\n                <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                  <tr>\n                    <td className=\"px-2 py-2\">#</td>\n                    <td\n                      className=\"px-2 py-2 cursor-pointer\"\n                      onClick={() => this.setSort(\"names\")}\n                    >\n                      <div className=\"flex items-center gap-1\">\n                        Applicant names <BiSort />\n                      </div>\n                    </td>\n                    <td className=\"px-2 py-2\">National ID</td>\n                    <td\n                      className=\"px-2 py-2 cursor-pointer\"\n                      onClick={() => this.setSort(\"gender\")}\n                    >\n                      <div className=\"flex items-center gap-1\">\n                        Gender <BiSort />\n                      </div>\n                    </td>\n                    <td className=\"px-2 py-2\">Phone</td>\n                    <td\n                      className=\"px-2 py-2 cursor-pointer\"\n                      onClick={() => this.setSort(\"user_position_marks\")}\n                    >\n                      <div className=\"flex items-center gap-1\">\n                        Marks <BiSort />\n                      </div>\n                    </td>\n                    <td\n                      className=\"px-2 py-2 cursor-pointer\"\n                      onClick={() => this.setSort(\"position_title\")}\n                    >\n                      <div className=\"flex items-center gap-1\">\n                        Position <BiSort />\n                      </div>\n                    </td>\n                    <td\n                      className=\"px-2 py-2 cursor-pointer\"\n                      onClick={() => this.setSort(\"education_category\")}\n                    >\n                      <div className=\"flex items-center gap-1\">\n                        Institute <BiSort />\n                      </div>\n                    </td>\n                    <td\n                      className=\"px-2 py-2 cursor-pointer\"\n                      onClick={() => this.setSort(\"waiting_status\")}\n                    >\n                      <div className=\"flex items-center gap-1\">\n                        Status <BiSort />\n                      </div>\n                    </td>\n                    <td\n                      className=\"px-2 py-2 cursor-pointer\"\n                      onClick={() => this.setSort(\"waitingList_session\")}\n                    >\n                      <div className=\"flex items-center gap-1\">\n                        Session <BiSort />\n                      </div>\n                    </td>\n                    <td\n                      className=\"px-2 py-2 cursor-pointer\"\n                      onClick={() => this.setSort(\"date\")}\n                    >\n                      <div className=\"flex items-center gap-1\">\n                        Date <BiSort />\n                      </div>\n                    </td>\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.state.loadingWaitingList ? (\n                    <TableLoading cols={11} />\n                  ) : this.FC_WaitingListData(\n                      this.props.waitingList,\n                      this.props.systemPositions\n                    ) === null ? (\n                    <TableLoading cols={10} />\n                  ) : this.FC_FilterWaitingList(\n                      this.FC_WaitingListData(\n                        this.props.waitingList,\n                        this.props.systemPositions\n                      )!,\n                      this.state.thisWaitingListStatus,\n                      this.state.thisPeriod,\n                      this.state.thisEducation,\n                      this.state.thisPosition\n                    ).length === 0 ? (\n                    <tr>\n                      <td colSpan={11} className=\"px-2 py-2\">\n                        <div className=\"flex flex-col text-gray-400 items-center justify-center bg-gray-100 rounded py-10\">\n                          <ImFilesEmpty className=\"text-8xl text-gray-400 mb-2 animate__animated animate__shakeX\" />\n                          <span className=\"text-sm font-bold\">\n                            No result found! Please try to search again\n                          </span>\n                          <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n                            <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                              <li\n                                onClick={() => this.setSelectPosition(true)}\n                                className=\"underline text-gray-500 cursor-pointer\"\n                              >\n                                Filter by position\n                              </li>\n                              <li className=\"text-gray-400 italic\">or</li>\n                              <li\n                                className=\"text-gray-500 underline\"\n                                onClick={() => this.setSelectPeriod(true)}\n                              >\n                                Filter by period\n                              </li>\n                            </ul>\n                          </div>\n                        </div>\n                      </td>\n                    </tr>\n                  ) : (\n                    sortThisArray(\n                      this.state.isSorted,\n                      searchData(\n                        this.FC_FilterWaitingList(\n                          this.FC_WaitingListData(\n                            this.props.waitingList,\n                            this.props.systemPositions\n                          )!,\n                          this.state.thisWaitingListStatus,\n                          this.state.thisPeriod,\n                          this.state.thisEducation,\n                          this.state.thisPosition\n                        ),\n                        this.state.searchInput\n                      ),\n                      this.state.sortProperty,\n                      this.state.sortOrder\n                    ).map((item: WaitingListDataInterface, i: number) => (\n                      <tr\n                        key={i + 1}\n                        className={`${\n                          i % 2 !== 0 ? \"bg-gray-100\" : \"bg-white\"\n                        } text-gray-600 hover:bg-blue-100 hover:text-blue-700 cursor-pointer border-b border-gray-300 hover:border-blue-500 text-sm`}\n                        onClick={() => this.setState({ selectedWaiting: item })}\n                      >\n                        <td className=\"px-2 py-2\">{i + 1}</td>\n                        <td className=\"px-2 py-2\">{item.names}</td>\n                        <td className=\"px-2 py-2\">{item.national_id}</td>\n                        <td className=\"px-2 py-2\">{item.gender}</td>\n                        <td className=\"px-2 py-2\">{item.phone}</td>\n                        <td className=\"px-2 py-2\">\n                          {item.user_position_marks}\n                        </td>\n                        <td className=\"px-2 py-2\">{item.position_title}</td>\n                        <td className=\"px-2 py-2\">{item.education_category}</td>\n                        <td className=\"px-2 py-2\">\n                          {capitalizeFirstLetter(\n                            item.waiting_status.toLowerCase()\n                          )}\n                        </td>\n                        <td className=\"px-2 py-2\">\n                          {item.waitingList_session}\n                        </td>\n                        <td className=\"px-2 py-2\">{item.date}</td>\n                      </tr>\n                    ))\n                  )}\n                </tbody>\n              </table>\n            </div>\n          </div>\n\n          {/* CHOOSING POSITION MODAL */}\n          {this.state.selectPosition && (\n            <Modal\n              title={\n                <div className=\"flex flex-row gap-4 items-center\">\n                  <IoFilter className=\"text-5xl text-blue-600\" />\n                  <div className=\"flex flex-col\">\n                    <span className=\"font-bold text-xl text-blue-600\">\n                      Filter by a position\n                    </span>\n                  </div>\n                </div>\n              }\n              backDrop={true}\n              theme={Themes.default}\n              close={() => {\n                this.setSelectPosition(false);\n                this.setSearchPositionInput(\"\");\n              }}\n              backDropClose={true}\n              widthSizeClass={ModalSize.extraLarge}\n              displayClose={true}\n              padding={{ title: true }}\n            >\n              <div className=\"px-2 pb-2\">\n                {this.props.systemPositions === null ? (\n                  <LoadingV2 type={LoadingType.dark} />\n                ) : this.props.systemPositions.length === 0 ? (\n                  <div className=\"flex flex-col text-gray-400 items-center justify-center\">\n                    <MdSearch className=\"text-6xl\" />\n                    <div className=\"flex flex-col items-center justify-center\">\n                      <span>No positions found! Please go back!</span>\n                    </div>\n                  </div>\n                ) : (\n                  <>\n                    <div className=\"flex flex-col\">\n                      <span className=\"text-gray-600 text-xs font-bold\">\n                        Filter by position name\n                      </span>\n                      <input\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                          this.setSearchPositionInput(e.target.value)\n                        }\n                        type=\"text\"\n                        className=\"mb-4 bg-gray-100 px-3 py-2 rounded\"\n                        placeholder=\"Keyword...\"\n                      />\n                    </div>\n                    <div\n                      onClick={() => {\n                        this.generateReportTitle(\"All position\");\n                        this.setThisPosition(null);\n                        this.setSelectPosition(false);\n                        this.setSearchPositionInput(\"\");\n                      }}\n                      className=\"bg-white cursor-pointer rounded  px-3 py-2 border border-gray-200 hover:border-blue-500 hover:bg-blue-100 mb-2\"\n                    >\n                      <div className=\"grid lg:grid-cols-12\">\n                        <div className=\"col-span-12 lg:col-span-10\">\n                          <div className=\"flex flex-row items-center gap-3\">\n                            <div>\n                              <IoIosBriefcase className=\"text-4xl md:text-5xl text-blue-600\" />\n                            </div>\n                            <div className=\"flex flex-col\">\n                              <span className=\"text-base lg:text-lg font-bold text-gray-700\">\n                                All position\n                              </span>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-span-12 lg:col-span-2 hidden lg:block\">\n                          <div className=\"h-full flex items-center justify-end\">\n                            <div className=\"btn bg-blue-600 text-white float-right\">\n                              Choose\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    {search(\n                      this.props.systemPositions,\n                      this.state.searchPositionInput\n                    ).map((item: PositionAPI, key: number) => (\n                      <div\n                        key={key + 1}\n                        onClick={() => {\n                          this.generateReportTitle(item.position_title);\n                          this.setThisPosition(item);\n                          this.setSelectPosition(false);\n                          this.setSearchPositionInput(\"\");\n                        }}\n                        className=\"bg-white cursor-pointer rounded  px-3 py-2 border border-gray-200 hover:border-blue-500 hover:bg-blue-100 mb-2\"\n                      >\n                        <div className=\"grid lg:grid-cols-12\">\n                          <div className=\"col-span-12 lg:col-span-10\">\n                            <div className=\"flex flex-row items-center gap-3\">\n                              <div>\n                                <IoIosBriefcase className=\"text-4xl md:text-5xl text-blue-600\" />\n                              </div>\n                              <div className=\"flex flex-col\">\n                                <span className=\"text-xs lg:text-sm font-bold text-gray-700\">\n                                  {item.position_title}\n                                </span>\n                                <span className=\"text-xs text-gray-500 italic\">\n                                  School level:{\" \"}\n                                  <span\n                                    className=\"text-gray-800 font-light\"\n                                    style={{ fontStyle: \"normal\" }}\n                                  >\n                                    {item.school_level_id.school_level_name}\n                                  </span>\n                                </span>\n                                <span className=\"text-xs font-bold text-blue-600 bg-blue-100 w-max px-3 py-1 rounded-full\">\n                                  {\n                                    item.education_institute_id\n                                      .education_category_title\n                                  }\n                                </span>\n                              </div>\n                            </div>\n                          </div>\n                          <div className=\"col-span-12 lg:col-span-2 hidden lg:block\">\n                            <div className=\"h-full flex items-center justify-end\">\n                              <div className=\"btn bg-blue-600 text-white float-right\">\n                                Choose\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </>\n                )}\n              </div>\n            </Modal>\n          )}\n          {/* END CHOOSING POSITION MODAL */}\n\n          {/* ####################################################################################### */}\n\n          {/* CHOOSING PERIOD CONTENT MODAL */}\n          {this.state.selectPeriod && (\n            <Modal\n              title={\n                <div className=\"flex flex-row gap-4 items-center\">\n                  <MdHistory className=\"text-5xl text-blue-600\" />\n                  <span className=\"flex flex-col\">Choose a period</span>\n                </div>\n              }\n              backDrop={true}\n              theme={Themes.default}\n              close={() => this.setSelectPeriod(false)}\n              backDropClose={true}\n              widthSizeClass={ModalSize.extraLarge}\n              displayClose={true}\n              padding={{ title: true }}\n            >\n              <ChooseSession\n                allSession={this.props.application_sessions}\n                setSelectSession={(value: SessionPlanInterface | \"all\") => {\n                  this.setThisPeriod(value);\n                  this.setSelectPeriod(false);\n                }}\n                chooseAll={true}\n                currentSelected={this.state.thisPeriod}\n              />\n            </Modal>\n          )}\n          {/* END CHOOSING PERIOD CONTENT MODAL */}\n\n          {/* ####################################################################################### */}\n\n          {/* GENERATE DYNAMIC REPORT CONTENT MODAL */}\n          {this.state.generateReportModal !== null &&\n            this.state.generateReportModal.status === true && (\n              <Modal\n                title={\n                  <div className=\"flex flex-row gap-4 items-center\">\n                    {/* <IoBriefcase className=\"text-5xl text-gray-500\" /> */}\n                    <div className=\"flex flex-col\">\n                      <span className=\"font-bold text-2xl text-gray-500\">\n                        Generating Report contents\n                      </span>\n                      <span className=\"text-sm text-blue-600 font-normal\">\n                        Generating {this.state.generateReportModal.reportType}{\" \"}\n                        Report\n                      </span>\n                    </div>\n                  </div>\n                }\n                backDrop={true}\n                theme={Themes.default}\n                close={() => this.setGenerateReportModal(null)}\n                backDropClose={false}\n                widthSizeClass={ModalSize.medium}\n                displayClose={true}\n                padding={{ title: true }}\n              >\n                <div className=\"px-6\">\n                  <div className=\"my-2 text-base text-gray-700 sm:text-lg\">\n                    <div className=\"flex flex-col\">\n                      <label>Title</label>\n                      <input\n                        type=\"text\"\n                        className={`text-left input-white w-20 inline-block ${\n                          this.state.formError &&\n                          this.state.formError.element === \"report_title\"\n                            ? \"border-red-500\"\n                            : \"border-gray-500\"\n                        } border-2`}\n                        placeholder=\"Sub Category Title\"\n                        value={this.state.reportTitle}\n                        onChange={(e) => {\n                          this.setFormError(null);\n                          this.setReportTitle(e.target.value);\n                        }}\n                        disabled={this.state.loading}\n                      />\n                      {this.state.formError &&\n                        this.state.formError.element === \"report_title\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    <div className=\"flex flex-col mt-2\">\n                      <label>Report content</label>\n                      <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                        {this.state.reportContent.map((item, index) => (\n                          <div\n                            key={index}\n                            className={`flex items-center gap-1 ${\n                              this.isChangeAllowed(item.key)\n                                ? \"cursor-pointer\"\n                                : \"cursor-not-allowed\"\n                            }`}\n                            onClick={() =>\n                              this.isChangeAllowed(item.key) &&\n                              this.updateReportContent(item.key)\n                            }\n                            title={\n                              !this.isChangeAllowed(item.key)\n                                ? \"Required for every report!\"\n                                : \"\"\n                            }\n                          >\n                            {item.status ? (\n                              <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                            ) : (\n                              <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                            )}\n                            <span>{item.title}</span>\n                          </div>\n                        ))}\n                      </div>\n                      {this.state.formError &&\n                        this.state.formError.element === \"report_content\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                  </div>\n                  <div className=\"flex justify-between mb-2 mt-4\">\n                    <div\n                      className={`flex items-center gap-1 cursor-pointer`}\n                      onClick={() =>\n                        this.resetReportContent(this.state.selectAll)\n                      }\n                    >\n                      {this.state.selectAll ? (\n                        <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                      ) : (\n                        <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                      )}\n                      <span>Select all</span>\n                    </div>\n\n                    {this.state.waitingListToPrint && !this.state.loading && (\n                      <ExportToExcel\n                        fileData={this.state.waitingListToPrint}\n                        fileName={this.state.reportTitle}\n                        btnName=\"Generate\"\n                      />\n                    )}\n                  </div>\n                </div>\n              </Modal>\n            )}\n          {/* END GENERATE DYNAMIC REPORT CONTENT MODAL */}\n\n          {/* ####################################################################################### */}\n\n          {/* CHOOSING PERIOD CONTENT MODAL */}\n          {this.state.selectedWaiting &&\n            this.viewContractor(this.state.selectedWaiting) && (\n              <Modal\n                title={\n                  <div className=\"flex flex-row gap-4 items-center\">\n                    {/* <FaFileContract className=\"text-4xl text-blue-600\" />\n                    <span className=\"text-3xl\">\n                      {this.state.selectedWaiting.names +\n                        \"'s placement preferences\"}\n                    </span> */}\n                  </div>\n                }\n                backDrop={true}\n                theme={Themes.default}\n                close={() => this.setState({ selectedWaiting: null })}\n                backDropClose={true}\n                widthSizeClass={ModalSize.extraLarge}\n                displayClose={true}\n                padding={{ title: true, body: true }}\n              >\n                <div className=\"mb-7\">\n                  <ContractViewer\n                    contract={\n                      this.viewContractor(this.state.selectedWaiting)!.contract\n                    }\n                    candidates={this.state.selectedWaiting.names}\n                    position={this.state.selectedWaiting.position_title}\n                  />\n                </div>\n              </Modal>\n            )}\n        </section>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system_settings,\n  sessionPlan,\n  schoolLevels,\n  waitingList,\n}: StoreState): {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  systemPositions: PositionAPI[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  waitingList: WaitingListInterface[] | null;\n} => {\n  return {\n    auth: auth,\n    application_sessions: sessionPlan.allSessionPlans,\n    systemPositions: system_settings.systemPositions,\n    schoolLevels,\n    waitingList,\n  };\n};\n\nexport const WaitingListReport = connect(mapStateToProps, {\n  getWaitingList,\n  GetAllSessionPlans,\n  loadEducationCategories,\n  getPositions,\n  PushPopupAlert,\n})(_WaitingListReport);\n"],"sourceRoot":""}
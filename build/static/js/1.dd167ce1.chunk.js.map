{"version":3,"sources":["interfaces/candidatesInterfaces.ts","interfaces/events.ts","interfaces/position.ts","components/NoResult/NoResult.tsx","components/ApplicationPeriods/ApplicationPeriods.tsx","containers/Application/ApplicationSteps/ApplicationSteps.tsx","utils/question_bank.ts","containers/ApplicationsDashboard/ApplicationHistory/ApplicationHistory.tsx","containers/ApplicationsDashboard/ExamDetails/ExamDetails.tsx","containers/ApplicationsDashboard/Exams.tsx","containers/ApplicationsDashboard/ApplicationsDashboard.tsx"],"names":["DocumentStatus","Events","ExamEvents","ExamEventTypes","validateDocCategory","requirement","userDocuments","undefined","find","item","category_id","category","user_detail_category_id","validateDocSubcategory","result","position_requirement","length","i","filterData","category_subcategory_data","category_subcategory_Data_id","_id","required","push","category_subcat_id","user_detail_subcategory_id","subcategory","validateDocSubcategoryOptional","returnValidatePosition","requirements","documents","status","NoResultThemes","NoResult","props","className","theme","Dark","value","component","ApplicationPeriods","type","placeholder","applicationPeriods","map","onClick","setSelectedPeriod","showPeriodFilter","is_active","application_session_name","DATE","application_start_date","application_end_date","ApplicationStepsTypes","getQuestionType","question_types","type_id","check","itm","id","check_type","questionTypeElements","key","element","findTotalMarks","courses","results","sum","course","test","course_id","user_total_marks","toFixed","CheckIfExamDone","res","ApplicationHistory","applicationHistory","date","comment","ApplicationStatesDescription","application_status","caption","ExamDetails","setLoading","setState","loading","componentDidMount","locationsData","Locations_list","loadAllLocationsData","loadApplicationPeriods","state","this","candidateExam","selected_exam_id","to","examDetails","locationDetails","Loading","LoadingType","dark","setSelectedCandidateExam","exam_date","start_time","duration","discription","termes","center_id","province_name","district_name","center_name","room_number","proctoring_type","Component","_PostExams","renderExam","user_id","exam","examStatus","Editing","loadExam","redirect","closeModal","centersModal","setMaxExamModal","updateLocationFunction","exams","selected_application","updateLocation","setLoadingExams","loadingExams","setLoadingExamsDone","loadingExamsDone","numberOfIncomplete","count","filter","findLocation","course_name","course_code","location","exam_id","findExam","courseId","user_exams_temp","current_temp","testDone","user_exams_done","exam_status","UserExamStatus","findCourse","selectedExams","x","appointmentDetailsModal","pendingCourses","selectedPosition","InitializationFn","periods","selected_period","loadExamsDone","application_session_id","auth","user","InitializeExamDetails","loadCourses","doExam","exam_answers","displayResults","changeLocation","selectedCourse","selectedLocation","applicationHistoryState","Done","parseInt","selectedApplicationDetails","ApplicationStates","Rejected","deleteApplication","changeLocationError","Alert","title","description","AlertInterface","danger","setSelectedCourse","positions","selected_position","position_id","setSelectedPosition","Modal","backDrop","Themes","default","close","backDropClose","widthSizeClass","ModalSize","extraLarge","displayClose","padding","period","setSelectedLocationData","maxWidth","ChooseExamCenter","positionCourses","addLocation","large","PostExams","connect","prepareExam","loadExamsList","_ApplicationsDashboard","filteredApplications","applications","Status","searchPeriod","appl","application_session","closeApplicationDetails","applicationStatuses","application","output","maxExamModal","LoadApplications","a","number_of_incomplete","axios","get","API","APPLICATION","console","log","data","position","application_id","incrementIncomplete","applicationError","post","noRoomsApplication","PushPopupAlert","PopupAlertTheme","success","response","errors","field","newArr","removeLocation","message","changeLoadingState","window","confirm","delete","warning","setShowFilterStatus","loadAllPositions","apply","currentStep","Step3","initiateApplication","Step1","doTestStatus","applicationDetails","selectedApplicationStatus","FC_Access","UserAccessList","MY_APPLICATION","view","SideNavigation","positions_list","active","LoadingV2","Initiated","Shortlisted","position_title","createdAt","marginTop","ModalMarginTop","small","none","Exams","application_history","body","ApplicationsDashboard","system"],"mappings":"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","file":"static/js/1.dd167ce1.chunk.js","sourcesContent":["export interface CandidateInterface {\n  n_id: string;\n  fname: string;\n  lname: string;\n  date_of_birth: string;\n  district: string;\n  email: string;\n  phone_number: string;\n  stopped: boolean;\n  user_id: string;\n  // more details\n  application_number: string;\n  cell: string;\n  civil_status: string;\n  country_of_birth: string;\n  date_of_expiry: string;\n  date_of_issue: string;\n  document_type: string;\n  father_names: string;\n  issue_number: string;\n  mother_names: string;\n  photo: string;\n  place_of_birth: string;\n  place_of_issue: string;\n  province: string;\n  sector: string;\n  sex: string;\n  spouse?: any;\n  status: string;\n  village: string;\n  village_id: string;\n  // temporary details\n  active?: boolean;\n  ref?: any;\n  muted?: boolean;\n  room_id?: string;\n  video?: boolean;\n  stream?: any;\n  peer?: any;\n  peer_id?: any;\n  type?: any;\n  id?: string;\n}\n\nexport interface DocumentsCategories {\n  description: string;\n  fields: string[];\n  title: string;\n  user_detail_category_id: string;\n}\n\nexport interface DocumentsCategoriesWithCount {\n  description: string;\n  fields: string[];\n  title: string;\n  user_detail_category_id: string;\n  count: number;\n}\n\nexport interface DocumentSubCategories {\n  category_id: string;\n  description: string;\n  title: string;\n  user_detail_subcategory_id: string;\n}\n// export interface CategorySubcategoryData {\n//   category_id: string;\n//   category_subcategory_id: string;\n//   description: string;\n//   others: {\n//     key: string;\n//     value: string;\n//   }[];\n//   subcategory_id: string;\n//   title: string;\n// }\n\nexport interface CategorySubcategoryData {\n  category_id: string;\n  subcategory_id: string;\n  title: string;\n  description: string;\n  others: {\n    key: string;\n    value: string;\n  }[];\n  category_subcategory_Data_id: string;\n}\n\nexport interface DocumentUser_API {\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  school: string;\n  school_id: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  validation_status: string;\n  doc_id: string;\n  category_subcategory_data: string;\n}\n\nexport interface DocumentUser {\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  school: {\n    school_name: string;\n    _id: string;\n    status: boolean;\n    education_category_id?: {\n      education_category_title: string;\n      _id: string;\n    };\n    district_id?: {\n      district_name: string;\n      _id: string;\n    };\n  } | null;\n  school_id: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  validation_status: string;\n  doc_id: string;\n  category_subcategory_data: CategorySubcategoryData | null;\n}\n\nexport interface SchoolInterface {\n  district_id: string;\n  education_category_id: string;\n  school_name: string;\n  status: boolean;\n  _id: string;\n}\n\nexport enum DocumentStatus {\n  Waiting = \"waiting\",\n  Rejected = \"rejected\",\n  Approved = \"approved\",\n}\n\nexport interface CandidateProctoringInterfaceAPI {\n  course_code: string;\n  course_id: string;\n  course_name: string;\n  district: string;\n  education_institute_id: string;\n  email: string;\n  fname: string;\n  lname: string;\n  n_id: string;\n  phone_number: string;\n  position_id: string;\n  position_title: string;\n  school_level_id: string;\n  user_id: string;\n}\n\nexport interface CandidateProctoringInterface\n  extends CandidateProctoringInterfaceAPI {\n  active: boolean;\n  stopped: boolean;\n  ref?: any;\n  muted?: boolean;\n  peer?: any;\n  peer_id?: any;\n}\n","export enum Events {\n  USER_CONNECTED = \"user-connected\",\n  USER_DISCONNECTED = \"user-disconnected\",\n  JOIN_ROOM = \"join-room\",\n  UPDATED_ROOM_LIST = \"UPDATED_ROOM_LIST\",\n}\n\nexport enum ExamEvents {\n  START_EXAM_CLIENT = \"START_EXAM_CLIENT\",\n  START_EXAM_SERVER = \"START_EXAM_SERVER\",\n\n  STOP_EXAM_CLIENT = \"STOP_EXAM_CLIENT\",\n  STOP_EXAM_SERVER = \"STOP_EXAM_SERVER\",\n\n  CAND_EVENT_CLIENT = \"CAND_EVENT_CLIENT\",\n  CAND_EVENT_SERVER = \"CAND_EVENT_SERVER\",\n\n  CAND_CONTINUE_EXAM_SERVER = \"CAND_CONTINUE_EXAM_SERVER\",\n  CAND_CONTINUE_EXAM_CLIENT = \"CAND_CONTINUE_EXAM_CLIENT\",\n\n  CAND_STOP_EXAM_CLIENT = \"CAND_STOP_EXAM_CLIENT\",\n  CAND_STOP_EXAM_SERVER = \"CAND_STOP_EXAM_SERVER\",\n\n  CAND_RESTART_EXAM_CLIENT = \"CAND_RESTART_EXAM_CLIENT\",\n  CAND_RESTART_EXAM_SERVER = \"CAND_RESTART_EXAM_SERVER\",\n\n  ALL_CAND_RESTART_EXAM_CLIENT = \"ALL_CAND_RESTART_EXAM_CLIENT\",\n  ALL_CAND_RESTART_EXAM_SERVER = \"ALL_CAND_RESTART_EXAM_SERVER\",\n\n  CAND_WARNING_EXAM_CLIENT = \"CAND_WARNING_EXAM_CLIENT\",\n  CAND_WARNING_EXAM_SERVER = \"CAND_WARNING_EXAM_SERVER\",\n\n  CAND_BRODCAST_MSG_CLIENT = \"CAND_BRODCAST_MSG_CLIENT\",\n  CAND_BRODCAST_MSG_SERVER = \"CAND_BRODCAST_MSG_SERVER\",\n\n  CAND_PRIVATE_MSG_CLIENT = \"CAND_PRIVATE_MSG_CLIENT\",\n  CAND_PRIVATE_MSG_SERVER = \"CAND_PRIVATE_MSG_SERVER\",\n\n  CAND_EXAM_EVENT_CLIENT = \"CAND_EXAM_EVENT_CLIENT\",\n  CAND_EXAM_EVENT_SERVER = \"CAND_EXAM_EVENT_SERVER\",\n}\n\nexport enum ExamEventTypes {\n  PASTE_A_TEXT = \"PASTE A TEXT\",\n  MOVE_MOUSE_OUT = \"MOVE MOUSE OUT WINDOW\",\n}\n\nexport interface EventInterface {\n  event_id: string;\n  user_id: string;\n  event_type: string;\n  description: string;\n  room_id: string;\n  done_by?: string;\n  time: string;\n}\n","import { DocumentUser } from \".\";\n\nexport interface PositionAPICourse {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n}\n\nexport interface PositionAPI {\n  courses: PositionAPICourse[];\n  position_title: string;\n  description: string;\n  school_level_id: {\n    school_level_name: string;\n    description: string;\n    education_institute: string[];\n    courses: [];\n    school_level_id: string;\n  };\n  education_institute_id: {\n    education_category_title: string;\n    school_levels: [];\n    description: string;\n    education_institute_id: string;\n  };\n  requirements: PositionRequirements[];\n  isDeleted: boolean;\n  position_id: string;\n}\n\nexport interface PositionRequirementsOld {\n  user_detail_category_id: string;\n  title: string;\n  description: string;\n  fields: string[];\n  user_required_docs: {\n    category_id: string;\n    description: string;\n    title: string;\n    user_detail_subcategory_id: string;\n  }[];\n}\n\nexport interface PositionRequirements {\n  category: {\n    description: string;\n    fields: string[];\n    title: string;\n    user_detail_category_id: string;\n  };\n  subcategory: {\n    category_id: string;\n    description: string;\n    title: string;\n    user_detail_subcategory_id: string;\n  };\n  position_requirement: PositionSubcategoryData[];\n  required: boolean;\n}\n\nexport interface PositionSubcategoryData {\n  category_id: string;\n  subcategory_id: string;\n  description: string;\n  required: boolean;\n  title: string;\n  others: { key: string; value: string }[];\n  _id: string;\n  __v?: string;\n}\n\nexport const validateDocCategory = (\n  requirement: PositionRequirements,\n  userDocuments: DocumentUser[]\n) => {\n  if (\n    userDocuments.find(\n      (item) =>\n        item.category_id === requirement.category.user_detail_category_id\n    )?.category_id === undefined\n  ) {\n    return requirement.category.user_detail_category_id;\n  } else {\n    return null;\n  }\n};\n\n// If true, should return null\nexport const validateDocSubcategoryData = (\n  requirement: PositionSubcategoryData,\n  UserData: DocumentUser[]\n): string | null => {\n  let result: string | null = null;\n  // for (let requirement of requirements) {\n  if (\n    UserData.find(\n      (itm) =>\n        itm.category_subcategory_data &&\n        itm.category_subcategory_data.category_subcategory_Data_id ===\n          requirement._id\n    ) === undefined\n  ) {\n    result = requirement.subcategory_id;\n  }\n  // }\n  return result;\n};\n\nexport const validateDocSubcategory = (\n  requirement: PositionRequirements,\n  userDocuments: DocumentUser[]\n) => {\n  let result: {\n    category_subcat_id: string | null;\n    category_id: string | null;\n    user_detail_subcategory_id: string | null;\n  }[] = [];\n  if (requirement.position_requirement.length > 0) {\n    for (let i in requirement.position_requirement) {\n      let filterData = userDocuments.find((item) => item.category_subcategory_data &&\n        item.category_subcategory_data.category_subcategory_Data_id === requirement.position_requirement[i]._id\n        )?.category_subcategory_data;\n      if ((filterData === undefined || filterData === null) \n        && requirement.position_requirement[i].required === true\n      ) {\n        result.push({\n          category_subcat_id: requirement.position_requirement[i]._id,\n          category_id: requirement.category.user_detail_category_id,\n          user_detail_subcategory_id:\n            requirement.subcategory.user_detail_subcategory_id,\n        });\n      }\n    }\n  }\n  return result;\n};\n\n\nexport const validateDocSubcategoryOptional = (\n  requirement: PositionRequirements,\n  userDocuments: DocumentUser[]\n) => {\n  let result: {\n    category_subcat_id: string | null;\n    category_id: string | null;\n    user_detail_subcategory_id: string | null;\n  }[] = [];\n  if (requirement.position_requirement.length > 0) {\n    for (let i in requirement.position_requirement) {\n      let filterData = userDocuments.find((item) => item.category_subcategory_data &&\n        item.category_subcategory_data.category_subcategory_Data_id === requirement.position_requirement[i]._id\n        )?.category_subcategory_data;\n      if ((filterData === undefined || filterData === null) \n        && requirement.position_requirement[i].required === false\n      ) {\n        result.push({\n          category_subcat_id: requirement.position_requirement[i]._id,\n          category_id: requirement.category.user_detail_category_id,\n          user_detail_subcategory_id:\n            requirement.subcategory.user_detail_subcategory_id,\n        });\n      }\n    }\n  }\n  return result;\n};\n\nexport const returnValidatePosition = (\n  requirements: PositionRequirements[],\n  documents: DocumentUser[]\n) => {\n  let status = true;\n  for (let i in requirements) {\n    if (requirements[i].position_requirement.length === 0) {\n      if (\n        requirements[i] !== null &&\n        documents !== null &&\n        validateDocCategory(requirements[i], documents) !== null &&\n        validateDocCategory(requirements[i], documents) !== undefined\n      ) {\n        status = false;\n      }\n    } else {\n      if (validateDocSubcategory(requirements[i], documents).length !== 0) {\n        status = false;\n      }\n    }\n  }\n  return status;\n};\n","import React from 'react'\nimport { RiSearchLine } from 'react-icons/ri'\n\nexport enum NoResultThemes {\n  Dark = \"Dark\",\n  Light = \"Light\",\n}\n\ninterface NoResultProps {\n  theme: NoResultThemes;\n  value: string;\n  component?: any;\n}\n\nconst NoResult = (props: NoResultProps) => {\n  return (\n    <div className={`flex flex-col py-4 justify-center items-center text-gray-500 border-2 border-white ${props.theme === NoResultThemes.Dark ? \"bg-gray-100\" : \"bg-white\"} rounded`}>\n      <RiSearchLine className=\"text-6xl text-gray-500 animate__animated animate__shakeX\" />\n      <span className=\"text-xl mb-3\">{props.value}</span>\n      {props.component !== undefined &&\n      props.component}\n    </div>\n  )\n}\n\nexport default NoResult\n","import React from 'react'\nimport { FaBusinessTime } from 'react-icons/fa';\nimport { ApplicationPeriodGet } from '../../interfaces/application';\nimport { DATE } from '../../utils/functions';\nimport Loading from '../Loading/Loading';\n\ninterface ApplicationPeriodsProps {\n  applicationPeriods: ApplicationPeriodGet[] | null;\n  setSelectedPeriod: (period: ApplicationPeriodGet) => void;\n  showPeriodFilter: (status: boolean) => void;\n}\n\nconst ApplicationPeriods = (props: ApplicationPeriodsProps) => {\n  return (\n    <div className=\"-mt-4\">\n      <input type=\"text\" className=\"input-white border -mt-2 mb-3\" placeholder=\"Search by year, name\" />\n      {props.applicationPeriods === null ? <Loading /> : props.applicationPeriods.map((item, i) => (\n        <div onClick={() => {props.setSelectedPeriod(item); props.showPeriodFilter(false)}} key={i + 1} \n          className={`flex flex-col md:flex-row items-start md:items-center md:justify-between rounded border ${item.is_active === true ? \"bg-blue-50 border-blue-100\" : \"bg-gray-50 border-gray-100 \"} hover:bg-blue-100 hover:border-blue-500 px-2 py-2 cursor-pointer mb-2`}>\n          <div className=\"flex flex-row items-center gap-3\">\n            <FaBusinessTime className={`${item.is_active === true ? \"text-blue-600\" : \"text-gray-500\"} text-4xl`} />\n            <div className=\"flex flex-col\">\n              <div className={`${item.is_active === true ? \"text-blue-600\" : \"text-gray-600\"} font-bold`}>{item.application_session_name}</div>\n              <div className=\"text-sm text-gray-500\"><span>Status: </span><span className={`${item.is_active === true ? \"text-blue-600\" : \"text-gray-600\"}`}>{item.is_active === true ? \"Active\" : \"Expired\"}</span></div>\n            </div>\n          </div>\n          <div className=\"flex flex-col items-start md:items-end md:justify-end\">\n            <div className=\"text-xs md:text-sm text-right text-gray-500\"><span>Start: </span><span className={`${item.is_active === true ? \"text-blue-600\" : \"text-gray-600\"} text-right font-bold`}>{DATE(item.application_start_date, \"DD/MM/YYYY\")}</span></div>\n            <div className=\"text-xs md:text-sm text-right text-gray-500\"><span>End: </span><span className={`${item.is_active === true ? \"text-blue-600\" : \"text-gray-600\"} text-right font-bold`}>{DATE(item.application_end_date, \"DD/MM/YYYY\")}</span></div>\n          </div>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default ApplicationPeriods\n","import React from 'react'\nimport ApplicationStepItem, { ApplicationStepInterface } from './ApplicationStepItem'\n\nexport enum ApplicationStepsTypes {\n  Step1, Step2, Step3\n}\n\ninterface ApplicationStepsProps {\n  currentStep: ApplicationStepsTypes;\n  setApplicationStep: (step: ApplicationStepsTypes) => void;\n}\n\nconst ApplicationSteps = ({currentStep, setApplicationStep}: ApplicationStepsProps) => {\n  const steps: ApplicationStepInterface[] = [\n    {\n      step: ApplicationStepsTypes.Step1,\n      stepNumber: 1,\n      title: \"Requirements\",\n      description: \"Check the position and its requirements\",\n    },\n    {\n      step: ApplicationStepsTypes.Step2,\n      stepNumber: 2,\n      title: \"Psychometric test\",\n      description: \"Do psychometric test\",\n    },\n    {\n      step: ApplicationStepsTypes.Step3,\n      stepNumber: 3,\n      title: \"Exam centre\",\n      description: \"Choose the examination centre\",\n    },\n  ]\n  return (\n    <div className=\"grid md:grid-cols-3 gap-2 w-full mt-4\">\n      {steps.map((item: ApplicationStepInterface, i: number) => (\n        <ApplicationStepItem \n          currentStep={currentStep}\n          stepItem={item}\n          setApplicationStep={setApplicationStep}\n        />\n      ))}\n    </div>\n  )\n}\n\nexport default ApplicationSteps\n","import { ExamResultsDetails } from \"../interfaces/exam\";\nimport { PositionAPICourse } from \"../interfaces/position\";\nimport { questionType, questionTypeElements, questionTypeElementsType } from \"../interfaces/question\";\n\nexport const getQuestionType = (question_types: questionType[] | null, type_id: string) => {\n  let type: questionTypeElementsType | null = null;\n  if (question_types !== null) {\n    let check = question_types.find(itm => itm.id === type_id);\n    if (check !== undefined) {\n      let check_type = questionTypeElements.find(itm => check && itm.key === check.element);\n      if (check_type !== undefined) {\n        type = check_type.key\n      }\n    }\n  }\n  return type;\n}\n\nexport const findTotalMarks = (courses: PositionAPICourse[], results: ExamResultsDetails[] | null) => {\n  if (results !== null) {\n    let sum: number = 0;\n    for (let course of courses) {\n      let test = results.find(itm => itm.course === course.course_id);\n      if (test !== undefined) {\n        sum = sum + test.user_total_marks;\n      }\n    }\n    return sum.toFixed(2)\n  } else {\n    return \"Wait...\"\n  }\n}\n\nexport const CheckIfExamDone = (courses: PositionAPICourse[], results: ExamResultsDetails[] | null) => {\n  let res: boolean = false;\n  if (results !== null) {\n    for (let course of courses) {\n      let test = results.find(itm => itm.course === course.course_id);\n      if (test !== undefined) {\n        res = true;\n      }\n    }\n  }\n  return res;\n}","import React from 'react'\nimport { applicationHistory, ApplicationStatesDescription } from '../../../interfaces/application'\nimport { DATE } from '../../../utils/functions'\n\ninterface ApplicationHistoryProps {\n  applicationHistory: applicationHistory[];\n}\n\nconst ApplicationHistory = (props: ApplicationHistoryProps) => {\n  return (\n    <div className=\"flex flex-col justify-between items-start gap-1 bg-blue-50 px-3 py-2\">\n      {/* <span className=\"text-sm text-blue-800 font-bold\">Application status history</span> */}\n      <hr className=\"bg-blue-600\" />\n      <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-3\">\n      {props.applicationHistory !== undefined &&\n        props.applicationHistory.length > 0 && \n        props.applicationHistory.map((item, i) => (\n          <div key={i + 1} className=\"col-span-1 flex flex-col border border-blue-500 rounded px-3 py-2\">\n            <div className=\"flex flex-row gap-2 justify-start items-center text-xs\">\n              <span className=\"text-gray-500\">Date:</span>\n              <span className=\"font-bold\">{DATE(item.date, \"DD/MM/YYYY\")}</span>\n            </div>\n            <div className=\"flex flex-row gap-2 justify-start items-center text-xs\">\n              <span className=\"text-gray-500\">Action:</span>\n              <span className=\"font-bold\">{item.comment}</span>\n            </div>\n            <div className=\"flex flex-row gap-2 justify-start items-center text-xs\">\n              <span className=\"text-gray-500\">Application status:</span>\n              <span className=\"font-bold\">{ApplicationStatesDescription.find(itm => itm.key === item.application_status)?.caption}</span>\n            </div>\n          </div>\n        ))}\n      </div> \n    </div>\n  )\n}\n\nexport default ApplicationHistory\n","import React, { Component } from 'react'\nimport { MdInfo, MdLocationOn } from 'react-icons/md';\nimport { Redirect } from 'react-router-dom';\nimport { applicationPeriodsStoreInterface } from '../../../actions/application_periods';\nimport { candidateExamStoreInterface, InitialExamDetails } from '../../../actions/candidate_exam';\nimport { LocationsDataStoreInterface } from '../../../actions/locations_data';\nimport Loading from '../../../components/Loading/Loading';\nimport { LoadingType } from '../../../components/Loading/LoadingV2';\nimport { course } from '../../../interfaces';\nimport { applicationExamAPI } from '../../../interfaces/application';\nimport { ExamItemResponse } from '../../../interfaces/prepare_exam';\nimport { DATE } from '../../../utils/functions';\nimport { LocationTableInterface } from '../../Application/ExamCenter/ChooseExamCenter';\n\ninterface ExamDetailsProps {\n  locationDetails: applicationExamAPI | undefined;\n  examDetails: InitialExamDetails | null;\n  locationsData: LocationsDataStoreInterface;\n  loadAllLocationsData: (callback: (loading: boolean) => void) => void;\n  setSelectedLocationData: (locationData: LocationTableInterface) => void;\n  periods: applicationPeriodsStoreInterface;\n  loadApplicationPeriods: (callback: (loading: boolean) => void) => void;\n  candidateExam: candidateExamStoreInterface;\n  setSelectedCandidateExam: (exam_id: string) => void;\n  // selectedCourse: course;\n}\ninterface ExamDetailsState {\n  loading: boolean;\n}\n\nclass ExamDetails extends Component<ExamDetailsProps, ExamDetailsState> {\n  constructor(props: ExamDetailsProps) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n      loading: false,\n\t\t};\n\t}\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  }\n  componentDidMount = () => {\n    if (this.props.locationsData.Locations_list === null || this.props.locationsData.Locations_list.length === 0) {\n      this.props.loadAllLocationsData(this.setLoading);\n    }\n    // if (this.props.periods.applicationPeriods === null || this.props.periods.applicationPeriods.length === 0 || this.props.periods.selected_period === null) {\n      this.props.loadApplicationPeriods(this.setLoading);\n    // } \n  }\n  render() {\n    if (this.props.candidateExam.selected_exam_id !== null) {\n      return <Redirect to=\"/do-exam\" />\n    }\n    if (this.props.examDetails === null) {\n      return (\n        <div className=\"bg-yellow-50 text-yellow-800 font-bold rounded px-2 py-4 text-center text-3xl border border-yellow-600 mx-4 my-4\">\n          No Exam details found!\n        </div>\n      )\n    }\n    if (this.props.locationDetails === undefined) {\n      return (\n        <div className=\"bg-yellow-50 text-yellow-800 font-bold rounded px-2 py-4 text-center text-3xl border border-yellow-600 mx-4 my-4\">\n          No exam location details found!\n        </div>\n      )\n    }\n    return (\n      <div>\n        {this.state.loading === true ? \n        <div className=\"px-4 py-4 rounded bg-gray-100\">\n          <Loading type={LoadingType.dark} />\n        </div>:\n        <div>\n          <div className=\"bg-gray-100 rounded mx-2 mb-2 px-2 py-2\">\n            <div className=\"font-bold text-xl text-blue-600 mb-4 flex flex-row items-center justify-between gap-2 bg-white py-2 px-2 rounded\">\n              <div className=\"flex flex-row items-center gap-2\">\n                <MdInfo className=\"text-4xl text-blue-600\" />\n                Exam information\n              </div>\n              <button onClick={() => {\n                // this.props.setSelectedCourse(this.props.selectedCourse);\n                this.props.examDetails && this.props.setSelectedCandidateExam(this.props.examDetails.id)\n              }} type=\"button\" className={`btn ${this.props.candidateExam.selected_exam_id !== null ? \"bg-yellow-700 hover:bg-yellow-900\" : \"bg-green-600 hover:bg-green-700\"} text-white cursor-pointer text-base`}>{this.props.candidateExam.selected_exam_id !== null ? \"Return to Exam\" : \"Start Exam\"}</button>\n            </div>\n            <div className=\"grid md:grid-cols-3 gap-4\">\n              <div className=\"col-span-1\">\n                <div className=\"flex flex-col pl-2 border-gray-300 pb-2\">\n                  <span className=\"text-gray-500 text-sm italic\">Exam date:</span>\n                  <span className=\"text-gray-700 font-bold\">{DATE(this.props.examDetails.exam_date, \"DD/MM/YYYY\")}</span>\n                </div>\n              </div>\n              <div className=\"col-span-1\">\n                <div className=\"flex flex-col pl-2 border-gray-300 pb-2\">\n                  <span className=\"text-gray-500 text-sm italic\">Exam start time:</span>\n                  <span className=\"text-gray-700 font-bold\">{this.props.examDetails.start_time}</span>\n                </div>\n              </div>\n              <div className=\"col-span-1\">\n                <div className=\"flex flex-col pl-2 border-gray-300 pb-2\">\n                  <span className=\"text-gray-500 text-sm italic\">Exam duration:</span>\n                  <span className=\"text-gray-700 font-bold\">{this.props.examDetails.duration} hours</span>\n                </div>\n              </div>\n              <div className=\"col-span-3\">\n                <div className=\"flex flex-col px-2 pb-2\">\n                  <span className=\"text-gray-500 text-sm italic\">Exam description:</span>\n                  <span className=\"text-gray-700 font-bold px-2 py-2 rounded bg-white mt-2\">\n                    {this.props.examDetails.discription}\n                  </span>\n                </div>\n              </div>\n              <div className=\"col-span-3\">\n                <div className=\"flex flex-col px-2 pb-2\">\n                  <span className=\"text-gray-500 text-sm italic\">Terms and conditions / Rules:</span>\n                  <div className=\"text-gray-700 font-bold px-2 py-2 rounded bg-white mt-2\">\n                    {this.props.examDetails.termes}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"bg-gray-100 rounded mx-2 mb-2 px-2 py-2\">\n            <div className=\"font-bold text-xl text-blue-600 mb-4 flex flex-row items-center justify-between gap-2 bg-white py-2 px-2 rounded\">\n              <div className=\"flex flex-row items-center gap-2\">\n                <MdLocationOn className=\"text-4xl text-blue-600\" />\n                Examination location\n              </div>\n            </div>\n            <div className=\"grid md:grid-cols-3 gap-4 px-2\">\n              <div className=\"col-span-1\">\n                <div className=\"flex flex-col border-b border-gray-300 pb-2\">\n                  <span className=\"text-gray-500 text-sm italic\">Province:</span>\n                  <span className=\"text-gray-700 font-bold\">{this.props.locationsData.Locations_list && this.props.locationsData.Locations_list.find(itm => this.props.locationDetails !== undefined && itm.center_id === this.props.locationDetails.center_id)?.province_name}</span>\n                </div>\n              </div>\n              <div className=\"col-span-1\">\n                <div className=\"flex flex-col border-b border-gray-300 pb-2\">\n                  <span className=\"text-gray-500 text-sm italic\">District:</span>\n                  <span className=\"text-gray-700 font-bold\">{this.props.locationsData.Locations_list && this.props.locationsData.Locations_list.find(itm => this.props.locationDetails !== undefined && itm.center_id === this.props.locationDetails.center_id)?.district_name}</span>\n                </div>\n              </div>\n              <div className=\"col-span-1\">\n                <div className=\"flex flex-col border-b border-gray-300 pb-2\">\n                  <span className=\"text-gray-500 text-sm italic\">Center: </span>\n                  <span className=\"text-gray-700 font-bold\">{this.props.locationDetails.center_name}</span>\n                </div>\n              </div>\n              <div className=\"col-span-1\">\n                <div className=\"flex flex-col border-b border-gray-300 pb-2\">\n                  <span className=\"text-gray-500 text-sm italic\">Room number: </span>\n                  <span className=\"text-gray-700 font-bold\">{this.props.locationDetails.room_number}</span>\n                </div>\n              </div>\n              <div className=\"col-span-1\">\n                <div className=\"flex flex-col border-b border-gray-300 pb-2\">\n                  <span className=\"text-gray-500 text-sm italic\">Proctoring type</span>\n                  <span className=\"text-gray-700 font-bold\">{this.props.locationDetails.proctoring_type}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>}\n      </div>\n    )\n  }\n}\n\nexport default ExamDetails\n","import React, { Component } from 'react'\n\nimport { Fragment } from 'react'\nimport { MdHistory, MdInfo } from 'react-icons/md'\nimport { Redirect } from 'react-router-dom'\nimport Modal, { Themes, ModalSize } from '../../components/Modal/Modal'\nimport ChooseExamCenter, { LocationTableInterface } from '../Application/ExamCenter/ChooseExamCenter'\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadExam,\n  examDataInterface,\n  PrepareExamsStoreInterface,\n  loadExamsList,\n  LocationsDataStoreInterface,\n  loadAllLocationsData,\n  setSelectedLocationData,\n  applicationPeriodsStoreInterface,\n  loadApplicationPeriods,\n  candidateExamStoreInterface,\n  setSelectedCandidateExam,\n  courseStoreInterface,\n  loadCourses,\n  setSelectedCourse,\n  InitializeExamDetails,\n  InitialExamDetails,\n  setSelectedPeriod,\n  setSelectedPosition,\n  positionsStoreInterface,\n  loadExamsDone,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport Loading from '../../components/Loading/Loading'\nimport { ExamInterface, examStatus, UserExamStatus } from '../../interfaces/exam'\nimport { course, PositionAPI } from '../../interfaces/index'\nimport { applicationExamAPI, applicationHistory, ApplicationPeriodGet, ApplicationStates, GetApplicationsAPI } from '../../interfaces/application'\nimport { sentExamInterface } from '../Application/ExamCenter/ExamCenter'\nimport Alert, { AlertInterface } from '../../components/Alert/Alert'\nimport { RiErrorWarningLine } from 'react-icons/ri'\nimport { BsFileEarmarkText } from 'react-icons/bs'\nimport { IoMdTrash } from 'react-icons/io'\nimport { DATE } from '../../utils/functions'\nimport ApplicationHistory from './ApplicationHistory/ApplicationHistory'\nimport ExamDetails from './ExamDetails/ExamDetails'\nimport { CheckIfExamDone, findTotalMarks } from '../../utils/question_bank'\n\ninterface PostExamsProps {\n  doExam: examDataInterface;\n  auth: Auth;\n  loadExam: (user_id: string, exam: ExamInterface) => void;\n  selectedPosition: PositionAPI;\n  selectedExams: applicationExamAPI[] | null;\n  selected_application: string | null;\n  updateLocation: (application_id: string, exams: sentExamInterface[]) => void;\n  changeLocationError: string | null,\n  loading: boolean,\n  incrementIncomplete: () => void;\n  applicationHistory: applicationHistory[] | undefined;\n  deleteApplication: (id: string) => void;\n  selectedApplicationDetails: GetApplicationsAPI | null;\n  locationsData: LocationsDataStoreInterface;\n  loadAllLocationsData: (callback: (loading: boolean) => void) => void;\n  setSelectedLocationData: (locationData: LocationTableInterface) => void;\n  periods: applicationPeriodsStoreInterface;\n  loadApplicationPeriods: (callback: (loading: boolean) => void) => void;\n  candidateExam: candidateExamStoreInterface;\n  setSelectedCandidateExam: (exam_id: string) => void;\n  course: courseStoreInterface;\n  loadCourses: (callback: (loading: boolean) => void) => void;\n  setSelectedCourse: (course: course | null) => void;\n  InitializeExamDetails: (periodId: string, courseId: string, callback: (loading: boolean) => void) => void;\n  setSelectedPeriod: (period: ApplicationPeriodGet) => void;\n  positions: positionsStoreInterface;\n  setSelectedPosition: (position: PositionAPI) => void;\n  loadExamsDone: (periodId: string, userId: string, callback: (loading: boolean) => void) => void;\n  setMaxExamModal: (status: boolean) => void;\n}\ninterface PostExamsState {\n  appointmentDetailsModal: {\n    status: boolean;\n    item: InitialExamDetails | null;\n  };\n  redirect: boolean;\n  displayResults: boolean;\n  changeLocation: {\n    status: boolean;\n    location: ExamInterface | null;\n  };\n  centersModal: boolean;\n  selectedCourse: course | null,\n  selectedLocation: applicationExamAPI | null,\n  applicationHistoryState: boolean;\n  loading: boolean;\n  loadingExams: boolean;\n  loadingExamsDone: boolean;\n}\n\nclass _PostExams extends Component<PostExamsProps, PostExamsState> {\n  constructor(props: PostExamsProps) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n      appointmentDetailsModal: {\n        status: false,\n        item: null,\n      },\n      redirect: false,\n      displayResults: false,\n      changeLocation: {\n        status: false,\n        location: null,\n      },\n      centersModal: false,\n      selectedCourse: null,\n      selectedLocation: null,\n      applicationHistoryState: false,\n      loading: false,\n      loadingExams: false,\n      loadingExamsDone: true,\n    };\n\t}\n\n  renderExam = (user_id: string, exam: ExamInterface) => {\n    exam.status = examStatus.Editing;\n    this.props.loadExam(user_id, exam);\n    this.setState({ redirect: true });\n  }\n\n  closeModal = () => {\n    this.setState({ centersModal: false });\n    this.props.setMaxExamModal(false);\n  }\n\n  updateLocationFunction = (exams: sentExamInterface[]) => {\n    if (this.props.selected_application !== null) {\n      this.props.updateLocation(this.props.selected_application, exams);\n    }\n  }\n\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status});\n  }\n  setLoadingExams = (status: boolean) => {\n    this.setState({ loadingExams: status});\n  }\n  setLoadingExamsDone = (status: boolean) => {\n    this.setState({ loadingExamsDone: status});\n  }\n\n  numberOfIncomplete = (\n    exams: sentExamInterface[], courses: {\n    course_name: string;\n    course_code: string;\n    description: string;\n    school_levels: string[];\n    course_id: string;\n    }[]) => {\n    let count: number = 0;\n      for (let i in courses) {\n        if (exams.filter(item => item.course_id === courses[i].course_id).length === 0) {\n          count = count + 1;\n        }\n      }\n    return count;\n\n  }\n\n  findLocation = (\n    course_id: string, \n    course_name: string,\n    course_code: string,\n    location: LocationTableInterface,\n    exam_id: string,\n  ) => {\n    return this.updateLocationFunction([{\n      course_id: course_id, \n      proctoring_type: \"Center\",\n      center_id: location.center_id\n    }])\n  }\n\n  findExam = (courseId: string) => {\n    if (this.props.candidateExam.user_exams_temp !== null) {\n      let current_temp = this.props.candidateExam.user_exams_temp.find(itm => itm.course === courseId);\n      let testDone = this.props.candidateExam.user_exams_done.find(itm => itm.course === courseId);\n      if (current_temp !== undefined && (testDone === undefined || testDone.exam_status === UserExamStatus.Editing)) {\n        return current_temp;\n      }\n    }\n    return null;\n  }\n\n  findCourse = (course_id: string): applicationExamAPI | null => {\n    if (this.props.selectedExams !== null) {\n      let x: applicationExamAPI | null | undefined = this.props.selectedExams.find(itm => this.state.appointmentDetailsModal && itm.course_id === course_id)\n      if (x !== undefined && x !== null) {\n        return x;\n      }\n    }\n    return null\n  }\n\n  pendingCourses = () => {\n    let count = 0;\n    for(let course of this.props.selectedPosition.courses) {\n      if (this.props.candidateExam.user_exams_temp !== null) {\n        // let current_temp = this.props.candidateExam.user_exams_temp.find(itm => itm.course === course.course_id);\n        let testDone = this.props.candidateExam.user_exams_done.find(itm => itm.course === course.course_id);\n        if (testDone === undefined) {\n          count = count + 1;\n        }\n      }\n    }\n    return count;\n  }\n\n  InitializationFn = () => {\n    if (this.props.periods.selected_period !== null && this.props.selectedPosition !== null) {\n      this.props.loadExamsDone(this.props.periods.selected_period.application_session_id, this.props.auth.user.user_id, this.setLoadingExamsDone);\n      // if (this.state.loadingExamsDone === false) {\n        for(let course of this.props.selectedPosition.courses) {\n          let testDone = this.props.candidateExam.user_exams_temp.find(itm => itm.course === course.course_id);\n          if (testDone === undefined) {\n            this.props.InitializeExamDetails(\n              this.props.periods.selected_period.application_session_id,\n              course.course_id,\n              this.setLoadingExams\n            )\n          }\n        }\n      // }\n    }\n  }\n\n  componentDidMount = () => {\n    this.props.loadApplicationPeriods(this.setLoading);\n    if (this.props.course.courses === null || this.props.course.courses.length === 0) {\n      this.props.loadCourses(this.setLoading);\n    }\n    this.InitializationFn();\n    if (this.props.doExam.exam_answers) {\n      if (this.props.doExam.exam_answers.status === examStatus.Editing) {\n        this.setState({ redirect: true });\n      }\n    }\n  }\n\n  render() {\n    if (this.props.candidateExam.selected_exam_id !== null) {\n      return <Redirect to=\"/do-exam\" />\n    }\n    if (this.state.redirect === true) {\n      return <Redirect to=\"/do-exam\" />\n    }\n    if (this.props.loading === true) { return <Loading /> }\n    return (\n      this.props.selectedExams === null ? \"No result found!\" :\n      <Fragment>\n        <div className=\"\">\n          <div className=\"px-2 md:py-2\">\n            <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center\">\n              <div onClick={() => this.setState({ applicationHistoryState: true })}className=\"btn bg-gray-100 text-gray-600 border border-gray-300 text-sm flex flex-row items-center gap-2 cursor-pointer hover:border-blue-500 hover:bg-blue-50 hover:text-blue-600 my-3 md:mt-0\">\n                <MdHistory className=\"text-xl\" />\n                <span>View application history</span>\n              </div>\n              <div className={`grid ${this.pendingCourses() > 0 ? \"grid-cols-3\" : \"grid-cols-2\"} gap-4`}>\n                <div className=\"col-span-1 flex justify-start md:justify-end\">\n                  <div className=\"flex flex-row items-center\">\n                    <div className=\"flex flex-col\">\n                      <span className=\"text-xs md:text-md text-gray-500 font-bold text-left md:text-right\">Total</span>\n                      <span className=\"text-xl md:text-xl font-bold text-gray-700 text-left md:text-right\">{this.props.selectedExams.length}</span>\n                    </div>\n                  </div>\n                </div>\n                {this.pendingCourses() > 0 &&\n                <div className=\"col-span-1 flex justify-start md:justify-end\">\n                  <div className=\"flex flex-row items-center\">\n                    <div className=\"flex flex-col\">\n                      <span className=\"text-xs md:text-md text-gray-500 font-bold text-left md:text-right\">Pending</span>\n                      <span className=\"text-xl md:text-xl font-bold text-gray-700 text-left md:text-right\">{\n                      this.props.selectedPosition !== null &&\n                      this.pendingCourses()}</span>\n                    </div>\n                  </div>\n                </div>}\n                <div className=\"col-span-1 flex justify-start md:justify-end\">\n                  <div className=\"flex flex-row items-center\">\n                    <div className=\"flex flex-col\">\n                      <span className=\"text-xs md:text-md text-gray-500 font-bold text-left md:text-right\">Total marks</span>\n                      {this.state.loadingExams === true || this.state.loadingExamsDone === true ? <span>Wait...</span> :\n                      <span className=\"text-xl md:text-xl font-bold text-gray-700 text-left md:text-right\">{this.props.candidateExam.user_exams_done.find(itm => itm.exam_status === UserExamStatus.Done)?.exam_id !== undefined ? (parseInt(findTotalMarks(this.props.selectedPosition.courses, this.props.candidateExam.user_exams_done))/this.props.selectedPosition.courses.length).toFixed(1) : \"...\"}%</span>}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"font-bold flex flex-col md:flex-row items-start md:items-center justify-start md:justify-between gap-2 mt-8\">\n              {this.props.selectedApplicationDetails && this.props.selectedApplicationDetails.application_status !== ApplicationStates.Rejected ?\n              <div className=\"text-xl flex flex-row items-center gap-2\">\n                <BsFileEarmarkText className=\"text-2xl\" />\n                <span>Exams list</span>\n              </div> : <div></div>}\n              {this.state.loadingExams === false && this.state.loadingExamsDone === false && CheckIfExamDone(this.props.selectedPosition.courses, this.props.candidateExam.user_exams_done) === false &&\n              <div onClick={() => this.props.selected_application && this.props.deleteApplication(this.props.selected_application)} className=\"btn flex flex-row gap-2 items-center text-red-700 bg-red-50 cursor-pointer hover:bg-red-100 hover:text-red-900\">\n                <IoMdTrash className=\"text-xl \" />\n                <span className=\"text-sm\">Remove application</span>\n              </div>}\n            </div>\n          </div>\n          {this.props.selectedApplicationDetails && this.props.selectedApplicationDetails.application_status !== ApplicationStates.Rejected &&\n          <div className=\"px-2 pb-2 mt-3\">\n            <div>\n              {this.props.changeLocationError !== null && \n              <Alert \n                title=\"Error\"\n                description={this.props.changeLocationError}\n                theme={AlertInterface.danger}\n              />}\n            </div>\n            {this.state.loading === true ? \n            <div className=\"rounded border px-4 py-4 flex flex-col gap-3\">\n              <span className=\"text-gray-500 text-xl ml-4\">Loading...</span>\n              <Loading />\n            </div> :\n            <div className=\"grid md:grid-cols-1 lg:grid-cols-1 gap-3\">\n              \n              {this.props.selectedPosition === null || this.props.selectedExams === null ? <Loading /> : \n              this.props.selectedPosition.courses.length === 0 ? \"No Exams found!\" :\n              this.props.selectedPosition.courses.map((item, i) => (\n                <>\n                {this.props.loading === true && this.state.selectedCourse?.course_id === item.course_id ? <Loading /> : \n                <div key={i + 1} className={`border px-2 py-2 rounded ${this.state.selectedCourse?.course_id === item.course_id ? \"border-blue-500 bg-blue-50\" : this.props.selectedExams === null ? \"\" : this.props.selectedExams.find(itm => itm.course_id === item.course_id) !== undefined ? this.props.candidateExam.user_exams_done.find(itm => itm.course === item.course_id) !== undefined ? this.props.candidateExam.user_exams_done.find(itm => itm.course === item.course_id)?.exam_status === UserExamStatus.Editing ? \"bg-yellow-50 border-yellow-300 hover:bg-yellow-50\" : \"bg-blue-50 border-white hover:bg-blue-100\" : \"bg-white border-blue-200 hover:bg-blue-100\" : \"bg-yellow-50 hover:bg-white border-yellow-600\"}`}>\n                  <div className=\"grid md:grid-cols-12 gap-2\">\n                    <div className=\"col-span-4 flex fex-row items-center gap-3\">\n                      <div className=\"flex flex-col\">\n                        <span className={`font-bold ${this.props.selectedExams?.find(itm => itm.course_id === item.course_id) !== undefined ? \"text-blue-600\" : \"text-yellow-700\"} text-lg truncate`}>{item.course_name}</span>\n                        <div className=\"flex flex-row justify-start items-center gap-2\">\n                          {this.props.candidateExam.user_exams_done.find(itm => itm.course === item.course_id) === undefined &&\n                          <span className=\"text-gray-500 text-xs\">Exam date: </span>}\n                          {this.props.selectedExams === null || this.state.loadingExams === true ? \n                          <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">Checking...</div> : \n                          this.findExam(item.course_id) !== null ? \n                          <div className=\"flex flex-row items-center gap-2\">\n                            <span className=\"font-bold text-blue-600 text-sm\">{DATE(this.findExam(item.course_id)!.exam_date, \"DD/MM/YYYY\")}</span>\n                            <span className={`bg-blue-100 text-blue-600 font-bold px-2 py-1 rounded-full text-sm`}>{this.findExam(item.course_id)!.start_time}</span>\n                          </div> : this.props.candidateExam.user_exams_done.find(itm => itm.course === item.course_id) !== undefined ?\n                          <span className=\"font-bold text-blue-600 text-sm\">Exam was done! {this.props.candidateExam.user_exams_done.find(itm => itm.course === item.course_id)?.exam_date !== undefined && DATE(this.props.candidateExam.user_exams_done.filter(itm => itm.course === item.course_id)[0].exam_date, \"DD/MM/YYYY\")}<span className=\"bg-blue-100 text-blue-700 rounded-full px-2 py-1 ml-3 text-xs\">{this.props.candidateExam.user_exams_done.find(itm => itm.course === item.course_id)?.exam_status}</span></span> :\n                          <span className={`text-gray-600 text-sm italic`}>Waiting for preparation</span>}\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"col-span-4 flex flex-col items-start justify-center\">\n                    {this.props.selectedExams === null ? \"\" : this.props.selectedExams.find(itm => itm.course_id === item.course_id) !== undefined ? \n                      <>\n                        <div className=\"flex flex-row justify-start items-center gap-2\">\n                          <span className=\"text-gray-500 text-xs\">Proctoring type: </span>\n                          <span className=\"text-gray-700 font-bold text-sm\">{this.props.selectedExams === null ? \"\" : this.props.selectedExams.find(itm => itm.course_id === item.course_id) !== undefined && this.props.selectedExams.find(itm => itm.course_id === item.course_id)?.proctoring_type}</span>\n                        </div>\n                        <div className=\"flex flex-row justify-start items-center gap-2\">\n                          <span className=\"text-gray-500 text-xs\">Exam location: </span>\n                          <span className={`text-gray-700 font-bold text-sm`}>{this.props.selectedExams === null ? \"\" : this.props.selectedExams.find(itm => itm.course_id === item.course_id) !== undefined ? this.props.selectedExams.find(itm => itm.course_id === item.course_id)?.center_name : <span className=\"italic text-xs\">No location selected</span>}</span>\n                        </div>\n                      </> : \n                      <div className=\"flex flex-row gap-2 items-center justify-start\">\n                        <RiErrorWarningLine className=\"text-xl text-yellow-700\" />\n                        <span className=\"text-yellow-700 italic text-sm\">No location selected</span>\n                      </div>}\n                    </div>\n                    <div className=\"col-span-4 flex items-center justify-start md:justify-end\">\n                    {this.props.selectedExams === null ? \"\" : this.props.selectedExams.find(itm => itm.course_id === item.course_id) !== undefined ? \n                      <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                        {this.state.loadingExams === true || this.state.loadingExamsDone === true ? <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">Checking...</div> : this.props.candidateExam.user_exams_done.find(itm => itm.course === item.course_id) === undefined &&\n                        <div onClick={() => {\n                          this.setState({ selectedCourse: item, centersModal: true });\n                          this.props.setMaxExamModal(true);\n                        }} className=\"btn text-blue-600 border border-white cursor-pointer hover:bg-blue-600 hover:text-white bg-blue-100 text-sm w-40 text-center\">Change location</div>}\n                        {this.state.loadingExams === true || this.state.loadingExamsDone === true ? <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">Checking...</div> : this.findExam(item.course_id) !== null && this.findExam(item.course_id)?.course !== undefined && this.props.candidateExam.user_exams_done.find(itm => itm.course === item.course_id)?.exam_status !== UserExamStatus.Editing &&\n                        <div onClick={() => {\n                          this.props.course.courses && this.props.setSelectedCourse(this.props.course.courses.find(itm => itm.course_id === item.course_id)!);\n                          this.findExam(item.course_id) !== null && this.setState({ appointmentDetailsModal: { status: true, item: this.findExam(item.course_id)} });\n                        }} className=\"btn border border-blue-500 text-blue-600 cursor-pointer hover:bg-blue-600 hover:text-white text-sm text-center\">Details</div>}\n                        {this.state.loadingExams === true || this.state.loadingExamsDone === true ? <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">Checking...</div> : this.props.periods.selected_period !== null && this.props.periods.selected_period.is_active === true &&\n                        this.findExam(item.course_id) !== null && this.findExam(item.course_id)?.id !== undefined &&\n                        <div onClick={() => {\n                          if (this.props.selectedPosition !== null) {\n                            if (this.props.positions.selected_position === null || this.props.positions.selected_position.position_id !== this.props.selectedPosition.position_id) {\n                              this.props.setSelectedPosition(this.props.selectedPosition);\n                            }\n                            this.props.selectedExams !== null && this.props.course.courses && this.props.setSelectedCourse(this.props.course.courses.find(itm => itm.course_id === item.course_id)!);\n                            this.props.selectedExams !== null && this.findExam(item.course_id) !== null && this.props.setSelectedCandidateExam(this.findExam(item.course_id)!.id);\n                          }\n                        }} className={`btn border ${this.props.candidateExam.user_exams_done.find(itm => itm.course === item.course_id)?.exam_status !== UserExamStatus.Editing ? \"border-blue-500 bg-blue-600 hover:text-blue-600\" : \"border-yellow-500 bg-yellow-600 hover:text-yellow-600\"} text-white cursor-pointer hover:bg-white text-sm w-max text-center`}>\n                          {this.props.candidateExam.user_exams_done.find(itm => itm.course === item.course_id)?.exam_status !== UserExamStatus.Editing ? \"Start exam\" : \"Back to Exam\"}\n                        </div>}\n                      </div> : \n                      <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                        {this.props.candidateExam.user_exams_done.find(itm => itm.course === item.course_id) === undefined &&\n                        <div onClick={() => this.setState({ selectedCourse: item, centersModal: true })} className=\"btn cursor-pointer bg-yellow-700 hover:bg-yellow-50 border border-yellow-700 hover:text-yellow-700 text-white text-sm w-36 text-center\">Choose location</div>}\n                      </div>}\n                      {this.props.candidateExam.user_exams_done.find(itm => itm.course === item.course_id) !== undefined && this.props.candidateExam.user_exams_done.find(itm => itm.course === item.course_id)?.exam_status !== UserExamStatus.Editing &&\n                      <div className=\"flex flex-row gap-2 items-center\">\n                        <div className={`text-blue-600 flex flex-col gap-0 text-right ml-2`}>\n                          <span className=\"text-sm\">Marks</span>\n                          <span className=\"text-lg font-bold -mt-1\">{this.props.candidateExam.user_exams_done.find(itm => itm.course === item.course_id)?.user_total_marks.toFixed(2)}%</span>\n                        </div>\n                        <div className=\"btn bg-white text-blue-700 border border-blue-700\">View details</div>\n                      </div>}\n                    </div>\n                  </div>\n                </div>}\n                </>\n              ))\n            }\n            </div>}\n          </div>}\n        </div>\n        {this.state.appointmentDetailsModal.status === true &&\n        <Modal\n          title={<div className=\"text-blue-600 font-bold text-2xl\">{this.state.appointmentDetailsModal.item !== null && <>{this.findCourse(this.state.appointmentDetailsModal.item!.course)?.course_name}</>}</div>}\n          backDrop={true}\n          theme={Themes.default}\n          close={() => this.setState({ appointmentDetailsModal: { status: false, item: null}, displayResults: false })}\n          backDropClose={false}\n          widthSizeClass={ModalSize.extraLarge}\n          displayClose={true}\n          padding={{title: true,}} >\n          {this.state.appointmentDetailsModal.item !== null ?\n          <>\n            {this.findExam(this.state.appointmentDetailsModal.item.course) === null ? \n            <div className=\"text-yellow-700 font-bold text-center text-3xl bg-yellow-50 border border-yellow-200 rounded px-4 py-4 mx-4 my-4\">\n            No exam found for selected course</div> :\n            this.props.periods.applicationPeriods && \n            (this.props.periods.applicationPeriods.find(itm => this.state.appointmentDetailsModal.item && itm.application_session_id === this.state.appointmentDetailsModal.item.period)?.is_active === false ||\n            this.props.periods.applicationPeriods.find(itm => this.state.appointmentDetailsModal.item && itm.application_session_id === this.state.appointmentDetailsModal.item.period)?.is_active === undefined) ?\n            <div className=\"text-yellow-700 font-bold text-center text-3xl bg-yellow-50 border border-yellow-200 rounded px-4 py-4 mx-4 my-4 flex flex-col items-center\">\n              <div>No exam for the selected period</div>\n              <div onClick={() => this.props.loadApplicationPeriods(this.setLoading)} className=\"btn bg-white text-gray-700 w-max text-base border border-gray-700 mt-4 cursor-pointer\">Reload</div>\n            </div> :\n            <ExamDetails \n              locationDetails={this.props.selectedExams.find(itm => this.state.appointmentDetailsModal.item && itm.course_id === this.state.appointmentDetailsModal.item.course)}\n              examDetails={this.findExam(this.state.appointmentDetailsModal.item.course)}\n              locationsData={this.props.locationsData}\n              loadAllLocationsData={this.props.loadAllLocationsData}\n              setSelectedLocationData={this.props.setSelectedLocationData} \n              periods={this.props.periods} \n              loadApplicationPeriods={this.props.loadApplicationPeriods}\n              candidateExam={this.props.candidateExam} \n              setSelectedCandidateExam={this.props.setSelectedCandidateExam} />}\n          </> : \n          <div className=\"rounded bg-yellow-100 px-2 py-2 flex flex-col gap-4 items-center justify-center\">\n            <MdInfo className=\"text-9xl text-yellow-800\" />\n            <div className=\"text-4xl font-bold text-yellow-800\">\n              No Exam found!\n            </div>\n          </div>}\n        </Modal>}\n        {this.state.centersModal === true && this.state.selectedCourse !== null &&\n        <Modal\n          title={<div className=\"text-gray-800 font-bold text-2xl\">Choose exam center location</div>}\n          backDrop={true}\n          theme={Themes.default}\n          close={() => {this.setState({ centersModal: false }); this.props.setMaxExamModal(false)}}\n          backDropClose={false}\n          widthSizeClass={ModalSize.maxWidth}\n          displayClose={true}\n          padding={{title: true,}} >\n          {this.props.selected_application &&\n          this.props.selectedPosition &&\n            <ChooseExamCenter\n              positionCourses={this.state.selectedCourse}\n              addLocation={this.findLocation}\n              closeModal={this.closeModal}\n            />}\n        </Modal>\n        }\n        {this.state.applicationHistoryState === true &&\n        <Modal\n          title={<div className=\"text-blue-800 font-bold text-xl flex flex-row justify-center items-center gap-2\"><MdHistory className=\"text-3xl\" /><span>Application status history</span></div>}\n          backDrop={true}\n          theme={Themes.default}\n          close={() => this.setState({ applicationHistoryState: false })}\n          backDropClose={true}\n          widthSizeClass={ModalSize.large}\n          displayClose={true}\n          padding={{title: true,}} >\n            {this.props.applicationHistory === undefined ?  <div className=\"text-yellow-700 font-bold text-2xl text-center\">No application history found!</div> :\n            <ApplicationHistory applicationHistory={this.props.applicationHistory} />}\n        </Modal>}\n      </Fragment>\n    )\n  }\n}\n\n\nconst mapStateToProps = ({\n  auth,\n  doExam,\n  prepareExam,\n  locationsData,\n  periods,\n  candidateExam,\n  course,\n  positions,\n}: StoreState): { auth: Auth; doExam: examDataInterface, prepareExam: PrepareExamsStoreInterface; locationsData: LocationsDataStoreInterface; periods: applicationPeriodsStoreInterface; candidateExam: candidateExamStoreInterface; course: courseStoreInterface; positions: positionsStoreInterface; } => {\n  return { auth: auth, doExam: doExam, prepareExam: prepareExam, locationsData: locationsData, periods: periods, candidateExam: candidateExam, course: course, positions: positions, };\n};\n\nconst PostExams = connect(mapStateToProps, {\n  loadExam,\n  loadExamsList,\n  loadAllLocationsData,\n  setSelectedLocationData,\n  loadApplicationPeriods,\n  setSelectedCandidateExam,\n  loadCourses,\n  setSelectedCourse,\n  InitializeExamDetails,\n  setSelectedPeriod,\n  setSelectedPosition,\n  loadExamsDone,\n})(_PostExams);\n\nexport default PostExams;","import React, { Component, Fragment } from 'react'\nimport { MdAdd, } from 'react-icons/md'\nimport { Link, Redirect } from 'react-router-dom'\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  initiateApplication,\n  removeLocation,\n  loadApplicationPeriods,\n  applicationPeriodsStoreInterface,\n  setSelectedPeriod,\n  System,\n  PushPopupAlert,\n  positionsStoreInterface,\n  loadAllPositions,\n  FC_Access,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { applicationStoreInterface, initialApplicationInterface } from '../../actions/application';\nimport { ApplicationStepsTypes } from '../Application/ApplicationSteps/ApplicationSteps';\nimport { applicationExamAPI, ApplicationPeriodGet, ApplicationStates, ApplicationStatesDescription, GetApplicationsAPI, NoRoomsInterface } from '../../interfaces/application';\nimport Exams from './Exams';\nimport { PositionAPI } from '../../interfaces/index';\nimport axios from 'axios';\nimport { API } from '../../utils/api';\nimport { sentExamInterface } from '../Application/ExamCenter/ExamCenter';\nimport Loading from '../../components/Loading/Loading';\nimport { AiOutlineFilter } from 'react-icons/ai';\nimport { IoBriefcase, IoBriefcaseOutline } from 'react-icons/io5';\nimport Modal, { ModalMarginTop, ModalSize, Themes } from '../../components/Modal/Modal';\nimport { SideNavigation, MainItem, } from '../../components/Navigation/SideNavigation';\nimport { BsCaretRightFill } from 'react-icons/bs';\nimport LoadingV2, { LoadingType } from '../../components/Loading/LoadingV2';\nimport { PopupAlertData } from '../../components/Alert/Popup';\nimport { PopupAlertTheme } from '../../interfaces/popupAlert';\nimport { RiFileForbidLine } from 'react-icons/ri';\nimport { IoMdList } from 'react-icons/io';\nimport NoResult, { NoResultThemes } from '../../components/NoResult/NoResult';\nimport ApplicationPeriods from '../../components/ApplicationPeriods/ApplicationPeriods';\nimport { DATE } from '../../utils/functions';\nimport { UserAccessList } from '../../utils/auth_access';\n\ninterface ApplicationsDashboardState {\n  selectedPosition: PositionAPI | null;\n  selectedExams: applicationExamAPI[] | null;\n  applications: GetApplicationsAPI[] | [] | null;\n  selected_application: string | null;\n  noRoomsApplication: NoRoomsInterface[] | null | [];\n  loading: boolean;\n  applicationError: string | null;\n  number_of_incomplete: number,\n  applicationDetails: boolean,\n  selectedApplicationStatus: ApplicationStates | null,\n  showPeriodFilter: boolean,\n  maxExamModal: boolean,\n}\ninterface ApplicationsDashboardProps {\n  auth: Auth;\n  application: applicationStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n  initiateApplication: (initial: initialApplicationInterface) => void;\n  removeLocation: (course_id: string) => void;\n  loadApplicationPeriods: (callback: (loading: boolean) => void) => void;\n  setSelectedPeriod: (period: ApplicationPeriodGet) => void;\n  system: System;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  positions: positionsStoreInterface;\n  loadAllPositions: (callback: (loading: boolean) => void) => void;\n  FC_Access: Function;\n}\n\nclass _ApplicationsDashboard extends Component<ApplicationsDashboardProps, ApplicationsDashboardState> {\n  constructor(props: ApplicationsDashboardProps) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n      selectedPosition: null,\n      selectedExams: null,\n      applications: null,\n      selected_application: null,\n      noRoomsApplication: null,\n      loading: false,\n      applicationError: null,\n      number_of_incomplete: 0,\n      applicationDetails: false,\n      selectedApplicationStatus: null,\n      showPeriodFilter: false,\n      maxExamModal: false,\n\t\t};\n\t}\n\n  filteredApplications = (applications: GetApplicationsAPI[], Status: ApplicationStates | null, searchPeriod?: ApplicationPeriodGet | null) => {\n    let appl:GetApplicationsAPI[];\n    if (searchPeriod !== undefined && searchPeriod !== null) {\n      appl = applications.filter(itm => itm.application_session.application_session_id === searchPeriod.application_session_id);\n    } else {\n      appl = applications;\n    }\n    if (Status === null) {\n      return appl;\n    } else {\n      return appl.filter(item => item.application_status === Status);\n    }\n  }\n\n  closeApplicationDetails = () => {\n    this.setState({ selected_application: null });\n    this.setState({ selectedPosition: null, selected_application: null })\n    this.setState({ selectedExams: null });\n  }\n\n  applicationStatuses = (application: GetApplicationsAPI[]): { title: string, count: number, status: ApplicationStates }[] => {\n    let output: { title: string, count: number, status: ApplicationStates }[] = [];\n    for (let i in ApplicationStatesDescription) {\n      output.push({\n        title: ApplicationStatesDescription[i].caption,\n        count: application.filter(itm => itm.application_status === ApplicationStatesDescription[i].key).length,\n        status: ApplicationStatesDescription[i].key\n      })\n    }\n    return output;\n  }\n\n  setMaxExamModal = (status: boolean) => {\n    this.setState({ maxExamModal: status });\n  }\n\n  LoadApplications = async () => {\n    this.setState({ number_of_incomplete: 0 });\n    if (this.props.auth.user.user_id) {\n      const user_id = this.props.auth.user.user_id;\n      const selected_position = this.state.selectedPosition;\n      this.setState({ applications: null });\n      this.setState({ selectedPosition: null });\n      this.setState({ selectedExams: null });\n      \n      try {\n        const res = await axios.get<GetApplicationsAPI[]>(`${API.APPLICATION}/application/${user_id}`);\n        if (res.status === 200) {\n          console.log(\"Apps: \", res.data)\n          this.setState({ applications: res.data });\n          if (res.data !== null) {\n            if (res.data.length > 0) {\n              // let done = false;\n              for (let i in res.data) {\n                let courses = res.data[i].position.courses;\n                let exams = res.data[i].exams;\n                if (res.data[i].position.position_id === selected_position?.position_id) {\n                  this.setState({ selectedPosition: res.data[i].position });\n                  this.setState({ selectedExams: exams });\n                }\n                for ( let x in courses) {\n                  if (exams.filter(itm => itm.course_id === courses[x].course_id).length === 0 && res.data[i].application_status !== ApplicationStates.Rejected) {\n                    this.setState({ selected_application: res.data[i].application_id });\n                    this.setState({ selectedPosition: res.data[i].position, selected_application: res.data[i].application_id })\n                    this.setState({ selectedExams: res.data[i].exams });\n                    this.incrementIncomplete();\n                  }\n                }\n              }\n            }\n          }\n        }\n        console.log(\"Applications: \", this.state.applications);\n      } catch (error) {\n        console.log(\"Applications err: \", error);\n      }\n    }\n  }\n\n  updateLocation = async (application_id: string, exams: sentExamInterface[]) => {\n    this.setState({ loading: true });\n    this.setState({ applicationError: null });\n    console.log(application_id);\n    for(let i in exams) {\n      try {\n        const res = await axios.post(`${API.APPLICATION}/application/updatemissed`, {\n          application_id: application_id,\n          exams: exams[i]\n        });\n        if (res.status === 200 && this.state.noRoomsApplication !== null) {\n          this.setState({ noRoomsApplication: this.state.noRoomsApplication?.filter(itm => itm.course_id !== exams[i].course_id) });\n        }\n        if (res.status === 200) {\n          this.props.PushPopupAlert({\n            title: `Location updated successfully`,\n            description: \"Location has updated successfully! You can continue to update before starting of the examination!\",\n            theme: PopupAlertTheme.success,\n          });\n        }\n        this.LoadApplications();\n      } catch (error: any) {\n        if (error.response) {\n          if (error.response.data) {\n            if (error.response.data.errors !== undefined) {\n              if (error.response.data.errors.length > 0) {\n                if (this.state.noRoomsApplication) {\n                  let newArr: sentExamInterface[];\n                  if (error.response.data.errors[0].field !== undefined) {\n                    newArr = this.state.noRoomsApplication?.filter(itm => itm.course_id === error.response.data.errors[0].field.course_id);\n                    if (newArr !== undefined)  {\n                      for (let i in newArr) {\n                        this.props.removeLocation(newArr[i].course_id);\n                      }\n                    }\n                  }\n                }\n                this.setState({ applicationError: error.response.data.errors[0].message });\n                this.props.PushPopupAlert({\n                  title: error.response.data.errors[0].message,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n            } else {\n              this.props.PushPopupAlert({\n                title: \"Something went wrong! Please try again\",\n                theme: PopupAlertTheme.danger,\n              });\n              this.setState({ applicationError: \"Something went wrong! Please try again\" });\n            }\n          }\n        }\n        console.log(\"Change error: \", {...error});\n      }\n    }\n    if (this.state.selectedPosition) {\n      this.setState({ selectedPosition: this.state.selectedPosition });\n    }\n    this.setState({ selected_application: application_id });\n    this.setState({ loading: false });\n  }\n\n  incrementIncomplete = () => {\n    this.setState({ number_of_incomplete: this.state.number_of_incomplete + 1 });\n  }\n\n  changeLoadingState = (state: boolean) => {\n    this.setState({ loading: state });\n  }\n\n  deleteApplication = async (id: string) => {\n    if (window.confirm(\"Are you sure do you want to delete this application?\") && id) {\n      this.changeLoadingState(true);\n      try {\n        await axios.delete(`${API.APPLICATION}/application/${id}`);\n        this.props.PushPopupAlert({\n          title: `Application deleted successfully!`,\n          theme: PopupAlertTheme.success,\n        });\n        this.setState({ selectedExams: null });\n        this.LoadApplications();\n      } catch (error: any) {\n        this.props.PushPopupAlert({\n          title: `Failed to delete application!`,\n          theme: PopupAlertTheme.warning,\n        });\n      }\n      this.changeLoadingState(false);\n    }\n  }\n\n  setShowFilterStatus = (status: boolean) => {\n    this.setState({ showPeriodFilter: status})\n  }\n\n  componentDidMount = () => {\n    this.props.loadApplicationPeriods(this.changeLoadingState);\n    this.LoadApplications();\n    this.props.loadAllPositions(this.changeLoadingState);\n    if (this.props.application.apply === undefined || this.props.application.apply.currentStep === ApplicationStepsTypes.Step3) {\n      this.props.initiateApplication({\n        user_id: this.props.auth.user.user_id, \n        selectedPosition: null, \n        currentStep: ApplicationStepsTypes.Step1,\n        positions: null,\n        doTestStatus: {\n          status: false,\n        },\n        selectedLocation: []\n      });\n    }\n    if (this.state.applications !== null) {\n      if (this.state.applications.length > 0) {\n        if (this.state.selectedPosition === null) {\n          this.setState({ selectedPosition: this.state.applications[0].position, selected_application: this.state.applications[0].application_id })\n        }\n        if (this.state.selectedExams === null) {\n          this.setState({ selectedExams: this.state.applications[0].exams })\n        }\n      }\n    }\n  }\n  render() {\n    if (!FC_Access(this.props.auth, UserAccessList.MY_APPLICATION).view) {\n      return <Redirect to=\"/\" />\n    }\n    return (\n      <Fragment>\n        <SideNavigation>\n          {this.props.positions.positions_list === null ? <div className=\"btn bg-gray-500 text-white mb-4 w-full flex flex-row items-center gap-3 cursor-not-allowed animate__animated animate__zoomIn\">\n            <RiFileForbidLine className=\"text-2xl text-white\" /> Please wait...\n          </div> :\n          this.props.positions.positions_list.length > 0 && this.props.periods.applicationPeriods && this.props.periods.applicationPeriods.filter(itm => itm.is_active === true).length !== 0 ?\n          <Link to=\"/apply\">\n            <div className=\"btn btn-blue text-white mb-4 w-full flex flex-row items-center gap-3 animate__animated animate__zoomIn\">\n              <MdAdd className=\"text-2xl text-white\" /> Apply\n            </div>\n          </Link> : \n          <div className=\"btn bg-gray-200 cursor-not-allowed text-gray-500 mb-4 w-full flex flex-row items-center animate__animated animate__zoomIn\">\n            No vacancies!\n          </div>}\n          {/* <div className=\"mb-6\"></div> */}\n          {/* <Search data={[1, 2, 3]} /> */}\n          <div \n          onClick={() => this.setState({ selectedApplicationStatus: null })} \n          className={`cursor-pointer ${this.state.selectedApplicationStatus !== null ? \"text-gray-600 hover:text-blue-600 border border-gray-200 hover:border-blue-600 hover:bg-blue-100 bg-white\" : \"text-blue-600 border border-blue-600 hover:bg-blue-100 bg-blue-100\"} flex flex-row items-center gap-2 px-2 py-1 rounded font-bold`}>\n            <IoMdList className=\"text-xl\" />\n            <span>View all ({this.state.applications && this.filteredApplications(this.state.applications, this.state.selectedApplicationStatus, this.props.periods.selected_period) ? this.filteredApplications(this.state.applications, this.state.selectedApplicationStatus, this.props.periods.selected_period).length : 0})</span>\n          </div>\n          <div className=\"pt-1\">\n            {this.state.applications && this.filteredApplications(this.state.applications, null, this.props.periods.selected_period) === null ? <Loading /> : this.state.applications && this.applicationStatuses(this.filteredApplications(this.state.applications, null, this.props.periods.selected_period)).map((itm: { title: string; count: number, status: ApplicationStates }, i: number) => (\n              itm.count > 0 &&\n              <Fragment key={itm.title}>\n                <div onClick={() => this.setState({ selectedApplicationStatus: itm.status })}>\n                  <MainItem title={itm.title} count={itm.count} active={this.state.selectedApplicationStatus === itm.status ? true : false} />\n                </div>\n              </Fragment>\n            ))}\n          </div>\n        </SideNavigation>\n        <div className=\"pr-2\">\n          <div className=\"mt-2 rounded px-3 md:px-4 py-3 md:py-3\">\n            <div className=\"flex flex-col\">\n              <div className=\"flex flex-col md:flex-row justify-between md:items-center\">\n                <div className=\"flex flex-col gap-1\">\n                  <span className=\"text-blue-600 text-2xl md:text-2xl lg:text-2xl font-bold\">My Applications <span className=\"md:hidden\">({this.state.applications && this.filteredApplications(this.state.applications, this.state.selectedApplicationStatus, this.props.periods.selected_period) ? this.filteredApplications(this.state.applications, this.state.selectedApplicationStatus, this.props.periods.selected_period).length : 0})</span></span>\n                  <div className=\"text-gray-700 font-bold text-xs md:text-sm lg:text-md flex flex-row gap-1 items-center\"><AiOutlineFilter className=\"text-2xl\" /> Selected period <span onClick={() => this.setState({ showPeriodFilter: true })} className={`px-2 ${this.props.periods.selected_period !== null? \"text-blue-600 hover:bg-blue-100 border-2 border-gray-200 hover:border-blue-600 underline\" : \"bg-white text-gray-600 hover:bg-gray-100 border border-gray-300\"}  rounded-full py-1 flex flex-row justify-center items-center font-bold cursor-pointer`}>{this.props.periods.selected_period !== null ? <><BsCaretRightFill className=\"mr-3\" />{this.props.periods.selected_period.application_session_name}</> : \"Choose period\"}</span></div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"mb-2\">\n            <div className=\"grid grid-cols-12 gap-3\">\n              <div className=\"col-span-12\">\n                <div className={`grid md:grid-cols-1 lg:grid-cols-1 gap-2`}>\n                  <div className=\"ml-2 -my-2 md:hidden lg:hidden xl:hidden\">\n                    {this.props.positions.positions_list === null ? <div className=\"btn bg-gray-500 text-white mb-4 w-full flex flex-row items-center gap-3 animate__animated animate__zoomIn justify-center\">\n                      <RiFileForbidLine className=\"text-2xl text-white\" /> Please wait...\n                    </div> :\n                    this.props.positions.positions_list.length > 0 ?\n                    <Link to=\"/apply\">\n                      <div className=\"btn btn-blue text-white mb-4 w-full flex flex-row items-center gap-3 animate__animated animate__zoomIn justify-center\">\n                        <MdAdd className=\"text-2xl text-white\" /> Create application\n                      </div>\n                    </Link> : \n                    <div className=\"btn bg-gray-400 text-white mb-4 w-full flex flex-row items-center gap-3 animate__animated animate__zoomIn justify-center\">\n                      <RiFileForbidLine className=\"text-2xl text-white\" /> No vacancies!\n                    </div>}\n                  </div>\n                  {this.state.applications === null ? <LoadingV2 type={LoadingType.dark} /> :\n                  this.filteredApplications(this.state.applications, this.state.selectedApplicationStatus, this.props.periods.selected_period).length === 0 ? \n                  <div className=\"ml-2\">\n                  <NoResult \n                  theme={NoResultThemes.Dark} \n                  value=\"No Applications found!\" \n                  component={<div className=\"ml-2 -my-2 hidden md:block\">\n                    {this.props.positions.positions_list !== null && this.props.positions.positions_list.length > 0 && this.props.periods.applicationPeriods && this.props.periods.applicationPeriods.filter(itm => itm.is_active === true).length !== 0 &&\n                    <Link to=\"/apply\">\n                      <div className=\"text-blue-600 font-bold underline mb-2 hover:text-blue-800 animate__animated animate__zoomIn\">\n                        Click here to create new application\n                      </div>\n                    </Link>}\n                  </div>} \n                  /></div> :\n                  this.filteredApplications(this.state.applications, this.state.selectedApplicationStatus, this.props.periods.selected_period).map((item, i) => (\n                    <div \n                      onClick={() => { \n                        this.setState({ selectedPosition: item.position, selected_application: item.application_id }); \n                        this.setState({ selectedExams: item.exams })}} \n                      className={`bg-white rounded ${this.state.selectedPosition?.position_id === item.position.position_id ? \"border-2 border-blue-600 shadow\" : item.application_status === ApplicationStates.Initiated ? \"border-gray-200 bg-gray-50 px-3 py-3 hover:border-gray-500\" : item.application_status === ApplicationStates.Rejected ? \"px-3 py-3 bg-white border-white\" : item.application_status === ApplicationStates.Shortlisted ? \"border-gray-200 bg-white px-3 py-3 hover:border-blue-600\" : \"px-3 py-3 bg-white border-yellow-600 hover:border-yellow-500\"} flex flex-col cursor-pointer font-normal hover:font-bold border ml-2`}>\n                      <div className={`grid md:grid-cols-12 ${this.state.selectedPosition?.position_id === item.position.position_id ? \"bg-gray-100 pr-3 rounded-t py-2\" : \"bg-white\"}`}>\n                        <div className=\"col-span-1 flex items-center justify-center\">\n                          {item.application_status === ApplicationStates.Initiated ?\n                          <IoBriefcaseOutline className=\"text-5xl text-gray-600\" /> :\n                          item.application_status === ApplicationStates.Rejected ?\n                          <IoBriefcase className=\"text-5xl text-yellow-900\" /> :\n                          item.application_status === ApplicationStates.Shortlisted ?\n                          <IoBriefcaseOutline className=\"text-5xl text-blue-600\" /> :\n                          <IoBriefcase className=\"text-5xl text-yellow-700\" />}\n                        </div>\n                        <div className=\"col-span-7\">\n                          <span className={`font-extrabold ${item.application_status !== ApplicationStates.Initiated ? item.application_status === ApplicationStates.Rejected ? \"text-yellow-900\" : item.application_status === ApplicationStates.Shortlisted ? \"text-blue-600\" : \"text-yellow-700\" : \"text-blue-600\"}`}>{item.position.position_title}</span>\n                          <div className=\"flex flex-col text-xs text-gray-600 mt-3\">\n                            <div className=\"flex flex-row gap-2\">\n                              <span className={`${item.application_status !== ApplicationStates.Initiated ? item.application_status === ApplicationStates.Rejected ? \"text-yellow-900\" : item.application_status === ApplicationStates.Shortlisted ? \"text-blue-600\" : \"text-yellow-700\" : \"text-gray-500\"}`}>Date:</span>\n                              <span className={`${item.application_status !== ApplicationStates.Initiated ? item.application_status === ApplicationStates.Rejected ? \"text-yellow-900\" : item.application_status === ApplicationStates.Shortlisted ? \"text-blue-600\" : \"text-yellow-700\" : \"text-black\"} font-bold`}>{DATE(item.createdAt, \"DD/MM/YYYY\")}</span>\n                            </div>\n                            <div className=\"flex flex-row gap-2\">\n                              <span className={`${item.application_status !== ApplicationStates.Initiated ? item.application_status === ApplicationStates.Rejected ? \"text-yellow-900\" : item.application_status === ApplicationStates.Shortlisted ? \"text-blue-600\" : \"text-yellow-700\" : \"text-gray-500\"}`}>Application period:</span>\n                              <span className={`${item.application_status !== ApplicationStates.Initiated ? item.application_status === ApplicationStates.Rejected ? \"text-yellow-900\" : item.application_status === ApplicationStates.Shortlisted ? \"text-blue-600\" : \"text-yellow-700\" : \"text-black\"} font-bold`}>{item.application_session && item.application_session.application_session_name} - {item.application_session && item.application_session.period}</span>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-span-4 flex md:justify-end items-center\">\n                          <div className=\"flex flex-col float-left text-sm md:justify-end\">\n                            <span className={`${item.application_status === ApplicationStates.Rejected ? \"text-yellow-700\" : \"text-gray-500\"} md:text-right`}>Status</span>\n                            {item.application_status === ApplicationStates.Initiated ? \n                            <span className={`font-bold ${this.state.selectedPosition?.position_id === item.position.position_id ? \"bg-gray-600 text-gray-100 border border-gray-500 rounded-full\" : \"bg-gray-50 text-gray-800 rounded\"} px-3 py-1`}>{ApplicationStatesDescription.find(itm => itm.key === item.application_status)?.caption }</span>:\n                            item.application_status === ApplicationStates.Rejected ? \n                            <span className={`font-bold ${this.state.selectedPosition?.position_id === item.position.position_id ? \"bg-yellow-900 text-yellow-100 border border-yellow-700 rounded-full\" : \"bg-yellow-100 text-yellow-900 rounded\"} px-3 py-1`}>{ApplicationStatesDescription.find(itm => itm.key === item.application_status)?.caption }</span> :\n                            item.application_status === ApplicationStates.Shortlisted ? \n                            <span className={`font-bold ${this.state.selectedPosition?.position_id === item.position.position_id ? \"bg-blue-900 text-blue-100 border border-blue-700 rounded-full\" : \"bg-blue-100 text-blue-900 rounded\"} px-3 py-1`}>{ApplicationStatesDescription.find(itm => itm.key === item.application_status)?.caption }</span> :\n                            <span className={`font-bold ${this.state.selectedPosition?.position_id === item.position.position_id ? \"bg-yellow-600 text-yellow-100 border border-yellow-500 rounded-full\" : \"bg-yellow-100 text-yellow-700 rounded\"} px-3 py-1`}>{ApplicationStatesDescription.find(itm => itm.key === item.application_status)?.caption }</span>\n                            }\n                          </div>\n                        </div>\n                      </div>\n                      \n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        {this.state.selectedPosition !== null && this.state.selectedExams !== null &&\n        <Modal\n          title={<div className=\"flex flex-row gap-4 items-center\">\n            <IoBriefcaseOutline className=\"text-5xl text-blue-600\" />\n            <div className=\"flex flex-col\">\n              <span className=\"font-bold text-xl text-blue-600\">{this.state.selectedPosition.position_title}</span>\n              <span className=\"text-sm text-gray-500 font-normal pl-1\">\n                {this.state.applications !== null && this.state.selectedPosition !== null && this.state.applications.find(itm => itm.position.position_id === this.state.selectedPosition?.position_id)?.application_session.application_session_name} - {this.state.applications !== null && this.state.selectedPosition !== null && this.state.applications.find(itm => itm.position.position_id === this.state.selectedPosition?.position_id)?.application_session.period}\n              </span>\n              </div>\n            </div>}\n          backDrop={true}\n          theme={Themes.default}\n          close={() => this.closeApplicationDetails()}\n          backDropClose={true}\n          widthSizeClass={ModalSize.maxWidth}\n          displayClose={true}\n          padding={{title: true,}}\n          marginTop={this.state.maxExamModal === false ? ModalMarginTop.small : ModalMarginTop.none} >\n            <div className=\"border-t border-gray-200 -mt-2 px-2 pb-2\">\n                <Exams \n                  selectedExams={this.state.selectedExams}\n                  selectedPosition={this.state.selectedPosition}\n                  selected_application={this.state.selected_application}\n                  updateLocation={this.updateLocation}\n                  changeLocationError={this.state.applicationError}\n                  loading={this.state.loading}\n                  incrementIncomplete={this.incrementIncomplete}\n                  applicationHistory={this.state.applications !== null && this.state.selectedPosition !== null ? this.state.applications.find(itm => itm.position.position_id === this.state.selectedPosition?.position_id)?.application_history : undefined}\n                  deleteApplication={this.deleteApplication}\n                  selectedApplicationDetails={this.state.applications && this.state.applications.find(itm => itm.application_id === this.state.selected_application)!}\n                  setMaxExamModal={this.setMaxExamModal}\n                />\n            </div>\n        </Modal>}\n        {this.state.showPeriodFilter === true &&\n        <Modal\n          title={<div className=\"text-2xl\">Filter by period</div>}\n          backDrop={true}\n          theme={Themes.default}\n          close={() => this.setState({ showPeriodFilter: false })}\n          backDropClose={true}\n          widthSizeClass={ModalSize.extraLarge}\n          displayClose={true}\n          padding={{title: true, body: true}} >\n            <ApplicationPeriods \n              applicationPeriods={this.props.periods.applicationPeriods} \n              setSelectedPeriod={this.props.setSelectedPeriod} \n              showPeriodFilter={this.setShowFilterStatus}\n            />\n        </Modal>}\n      </Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  application,\n  periods,\n  system,\n  positions,\n}: StoreState): { auth: Auth; application: applicationStoreInterface, periods: applicationPeriodsStoreInterface; system: System; positions: positionsStoreInterface, } => {\n  return { auth: auth, application: application, periods, system: system, positions: positions, };\n};\n\nexport const ApplicationsDashboard = connect(mapStateToProps, {\n  initiateApplication,\n  removeLocation,\n  loadApplicationPeriods,\n  setSelectedPeriod,\n  PushPopupAlert,\n  loadAllPositions,\n  FC_Access,\n})(_ApplicationsDashboard);"],"sourceRoot":""}
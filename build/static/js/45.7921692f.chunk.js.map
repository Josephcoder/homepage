{"version":3,"sources":["containers/Admin/Applications/ApplicationDetails.tsx","containers/Admin/Applications/Applications.tsx","actions/session.ts","components/Navigation/SideNavigation.tsx","utils/ExportToExcel.tsx","utils/mineduc.png","components/DownloadPDF/rest.tsx","containers/SessionSettings/ChooseSession.tsx","assets/profile.png"],"names":["tabs","reportContentKeyInterface","ApplicationDetails","props","tabStatusClass","status","state","loading","tab","profile","className","onClick","setState","this","position","src","noImage","alt","selectedApplication","fname","lname","n_id","sex","phone_number","email","district","application_session","application_session_name","period","createdAt","ApplicationStatesDescription","find","itm","key","application_status","caption","application_history","map","item","i","date","comment","position_title","description","courses","course_name","course_code","Component","ignoreThisApplicationStatus","ApplicationStates","Failed","Pass","Rejected","defaultReportContent","names","title","national_id","gender","phone","education_category","decision","_Applications","setLoadingState","loadAllApplications","callback","a","axios","get","API","APPLICATION","position_id","session_plan_id","res","applicationListData","data","console","log","error","errorToText","componentDidMount","schoolLevels","education_categories","length","loadEducationCategories","sessionPlan","allSessionPlans","GetAllSessionPlans","msg","PushPopupAlert","theme","PopupAlertTheme","danger","selected_period","active_period","is_active","selectPeriod","defaultSelectedPeriod","positions","positions_list","loadAllPositions","selected_position","selectPosition","errorMessage","isEmptyOrSpaces","warning","reportTitle","session_plan_name","AdminApplicationStatuses","application","output","count","includes","push","filter","filteredApplications","applications","Status","appl","education_institute_id","setDownloading","downloading","updateApplicationToPrint","arrayNew","n","Object","prototype","hasOwnProperty","call","element","dataArray","application_id","education_category_title","application_session_id","reportContent","applicationsToPrint","updateReportContent","index","findIndex","newArray","selectAll","generateThisPDF","document","querySelectorAll","table","getElementById","reportSettings","doneBy","auth","user","subjectTitle","subject","footer","institute","selectedEducationCategory","orientation","generatePDF","isChangeAllowed","resetReportContent","currentState","setSort","thisProperty","sortProperty","sortOrder","isSorted","selectedApplicationStatus","applicationDetailsModal","generateReportModal","searchInput","searchPositionInput","formError","prevProps","prevState","Fragment","SideNavigation","Loading","active","disabled","reportType","onChange","e","target","value","type","placeholder","id","colSpan","sortThisArray","searchData","selected_application","capitalizeFirstLetter","DATE","Modal","backDrop","Themes","default","close","backDropClose","widthSizeClass","ModalSize","extraLarge","displayClose","padding","ChooseSession","allSession","setSelectSession","chooseAll","currentSelected","LoadingV2","LoadingType","dark","to","setSelectedPosition","style","fontStyle","school_level_id","school_level_name","medium","ExportToExcel","fileData","fileName","btnName","Applications","connect","GetPlansTypes","dispatch","setAxiosToken","CLAIMING","GET_PLANS_TYPES","plan_types","ActionTypes","payload","setSelectedPlanType","thisType","SELECT_PLAN_TYPE","getActiveSessionPlan","GET_ACTIVE_SESSION_PLANS","session_plan","undefined","GET_ALL_SESSION_PLANS","session_data","createSessionPlan","CREATE_SESSION_PLAN","updateSessionPlan","UPDATE_SESSION_PLAN","sessionActivation","SESSION_ACTIVATION","deleteSessionPlan","DELETE_SESSION_PLAN","createAcademicSession","CREATE_ACADEMIC_SESSION","GetAllAcademicSession","PLACEMENT","GET_ALL_ACADEMIC_SESSION","updateAcademicSession","UPDATE_ACADEMIC_SESSION","academicSessionActivation","ACADEMIC_SESSION_ACTIVATION","deleteAcademicSession","DELETE_ACADEMIC_SESSION","getActiveAcademicSession","GET_ACTIVE_ACADEMIC_SESSION","_SideNavigation","PageHasSubNav","componentWillUnmount","isAuthenticated","navActive","system","navigation","children","React","NavToogle","MainItem","icon","MdBrightness1","IconDefined","showIcon","apiData","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","exportToCSV","require","addFooters","doc","pageCount","internal","getNumberOfPages","setFont","setFontSize","setPage","text","String","pageSize","width","align","callBack","lMargin","jsPDF","setTextColor","addImage","Logo","getWidth","lines","splitTextToSize","pdfInMM","y","getTextWidth","addPage","autoTable","html","startY","margin","horizontal","cellPadding","rowHeight","bodyStyles","valign","columnStyles","cellWidth","tableWidth","finalY","lastAutoTable","Date","toString","save","returnPromise","then","isPlansActive","plans","today","activePlans","plan","startDate","start_date","endDate","end_date","getTime","type_status","SessionPlanTypeStatus","OPEN","searched","useState","selectedPlan","setSelectedPlan","search","setSearch","type_key","type_title"],"mappings":"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","file":"static/js/45.7921692f.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { FaRegUserCircle } from 'react-icons/fa'\nimport { GrStatusInfo } from 'react-icons/gr'\nimport { AdminApplicationsList, ApplicationStatesDescription } from '../../../interfaces/application';\nimport noImage from '../../../assets/profile.png';\n\nenum tabs {\n  profile = \"profile\",\n  position = \"position\",\n}\ninterface ApplicationDetailsProps {\n  selectedApplication: AdminApplicationsList\n}\n\ninterface ApplicationDetailsState {\n  loading: boolean;\n  tab: tabs,\n}\n\nclass ApplicationDetails extends Component<ApplicationDetailsProps, ApplicationDetailsState> {\n  constructor(props: ApplicationDetailsProps) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n      loading: false,\n      tab: tabs.profile,\n\t\t};\n\t}\n  tabStatusClass = (status: boolean) => {\n    return status === true ?\n    \"col-span-6 bg-white hover:bg-blue-100 py-4 px-3 cursor-pointer text-lg border-b-4 border-blue-600 text-blue-600 font-bold flex flex-row items-center justify-start bg-blue-50 gap-3 animate__animated animate__pulse\" :\n    \"col-span-6 bg-white hover:bg-blue-50 py-4 px-3 cursor-pointer text-lg border-b-4 border-white hover:border-blue-200 text-gray-600 hover:text-blue-700 flex flex-row items-center justify-start gap-3\"\n  }\n  render() {\n    return (\n      <div className=\"px-2 py-2 border-t\">\n        {/* Tabs */}\n        <div className=\"rounded grid md:grid-cols-12\">\n          <div onClick={() => this.setState({ tab: tabs.profile })} className={`${this.state.tab === tabs.profile ? this.tabStatusClass(true) : this.tabStatusClass(false)}`}>\n            <FaRegUserCircle className=\"text-3xl\" />\n            Applicant profile\n          </div>\n          <div onClick={() => this.setState({ tab: tabs.position })} className={`${this.state.tab === tabs.position ? this.tabStatusClass(true) : this.tabStatusClass(false)}`}>\n            <GrStatusInfo className=\"text-3xl\" />\n            Position requirements\n          </div>\n        </div>\n        {/* Tab contents */}\n        <div className=\"border rounded px-4 py-4 mt-3\">\n          {this.state.tab === tabs.profile ? \n          <div className=\"grid md:grid-cols-12\">\n            <div className=\"col-span-6\">\n              <div className=\"text-3xl text-blue-600 font-bold mb-6\">General information</div>\n              <div className=\"\">\n                <div className=\"px-2 py-2\">\n                  <img src={noImage} alt=\"\" className=\"h-28 w-28 rounded-full mb-2\" />\n                </div>\n              </div>\n              <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                <span className=\"text-gray-500 italic\">First name: </span>\n                <span className=\"font-bold\">{this.props.selectedApplication.fname}</span>\n              </div>\n              <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                <span className=\"text-gray-500 italic\">Last name: </span>\n                <span className=\"font-bold\">{this.props.selectedApplication.lname}</span>\n              </div>\n              <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                <span className=\"text-gray-500 italic\">National ID: </span>\n                <span className=\"font-bold\">{this.props.selectedApplication.n_id}</span>\n              </div>\n              <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                <span className=\"text-gray-500 italic\">Gender: </span>\n                <span className=\"font-bold\">{this.props.selectedApplication.sex}</span>\n              </div>\n              <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                <span className=\"text-gray-500 italic\">Phone number: </span>\n                <span className=\"font-bold\">{this.props.selectedApplication.phone_number}</span>\n              </div>\n              <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                <span className=\"text-gray-500 italic\">Email: </span>\n                <span className=\"font-bold\">{this.props.selectedApplication.email}</span>\n              </div>\n              <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                <span className=\"text-gray-500 italic\">District: </span>\n                <span className=\"font-bold\">{this.props.selectedApplication.district}</span>\n              </div>\n            </div>\n          </div> : \n          <div>\n              <div className=\"text-2xl text-blue-600 font-bold mb-3\">Application details</div>\n              <div className=\"border px-3 py-3 rounded mb-6\">\n                <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                  <span className=\"text-gray-500 italic\">Application period: </span>\n                  <span className=\"font-bold\">{this.props.selectedApplication.application_session.application_session_name} - {this.props.selectedApplication.application_session.period}</span>\n                </div>\n                <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                  <span className=\"text-gray-500 italic\">Application date: </span>\n                  <span className=\"font-bold\">{this.props.selectedApplication.application_session.createdAt}</span>\n                </div>\n                <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                  <span className=\"text-gray-500 italic\">Application status: </span>\n                  <span className=\"font-bold\">{ApplicationStatesDescription.find(itm => itm.key === this.props.selectedApplication.application_status)?.caption}</span>\n                </div>\n                <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                  <span className=\"text-gray-500 italic\">Application history: </span>\n                  <span className=\"font-bold\">\n                    <ol className=\"text-gray-500 text-sm\">\n                      {this.props.selectedApplication.application_history.map((item, i) => (\n                        <li key={i + 1}className=\"\">{i + 1}) {item.date} ({item.comment})</li>\n                      ))}\n                    </ol>\n                  </span>\n                </div>\n              </div>\n              <div className=\"text-2xl text-blue-600 font-bold mb-3\">Position details</div>\n              <div className=\"border px-3 py-3 rounded\">\n                <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                  <span className=\"text-gray-500 italic\">Position name: </span>\n                  <span className=\"font-bold\">{this.props.selectedApplication.position.position_title}</span>\n                </div>\n                <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                  <span className=\"text-gray-500 italic\">Position description: </span>\n                  <span className=\"font-bold\">{this.props.selectedApplication.position.description}</span>\n                </div>\n                <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                  <span className=\"text-gray-500 italic\">Position exams: </span>\n                  <span className=\"font-bold\">\n                    <ol>\n                      {this.props.selectedApplication.position.courses.map((item, i) => (\n                        <li key={i + 1}>({i + 1}) Course name: {item.course_name} - {item.course_code}</li>\n                      ))}\n                    </ol>\n                  </span>\n                </div>\n              </div>\n          </div>}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ApplicationDetails\n","import axios from \"axios\";\nimport React, { Component, Fragment } from \"react\";\nimport { BiExport, BiFilterAlt, BiSort } from \"react-icons/bi\";\nimport { FiEdit } from \"react-icons/fi\";\nimport { ImFilesEmpty } from \"react-icons/im\";\nimport { IoIosBriefcase } from \"react-icons/io\";\nimport { IoFilter } from \"react-icons/io5\";\nimport {\n  MdCheckBox,\n  MdCheckBoxOutlineBlank,\n  MdHistory,\n  MdRadioButtonChecked,\n  MdRadioButtonUnchecked,\n  MdSearch,\n} from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Auth,\n  schoolLevelsStoreInterface,\n  loadAllPositions,\n  setSelectedPosition,\n  loadEducationCategories,\n  PushPopupAlert,\n  positionsStoreInterface,\n} from \"../../../actions\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport {\n  generatePDF,\n  reportSettingsInterface,\n} from \"../../../components/DownloadPDF/rest\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport LoadingV2, { LoadingType } from \"../../../components/Loading/LoadingV2\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport {\n  MainItem,\n  SideNavigation,\n} from \"../../../components/Navigation/SideNavigation\";\nimport {\n  ApplicationStates,\n  AdminApplicationsList,\n  ApplicationStatesDescription,\n} from \"../../../interfaces/application\";\nimport {\n  education_category,\n  PositionAPI,\n  SessionPlanInterface,\n} from \"../../../interfaces/index\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { SessionPlanReducerInterface } from \"../../../reducers/session\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { AdminApplicationsToPrintInterface } from \"../../../shared/interfaces\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport ExportToExcel from \"../../../utils/ExportToExcel\";\nimport { DATE, sortThisArray } from \"../../../utils/functions\";\nimport searchData from \"../../../utils/search\";\nimport ChooseSession from \"../../SessionSettings/ChooseSession\";\nimport ApplicationDetails from \"./ApplicationDetails\";\n\nexport const ignoreThisApplicationStatus: ApplicationStates[] = [\n  ApplicationStates.Failed,\n  ApplicationStates.Pass,\n  ApplicationStates.Rejected,\n];\n\nexport enum reportContentKeyInterface {\n  \"names\" = \"names\",\n  \"gender\" = \"gender\",\n  \"national_id\" = \"national_id\",\n  \"email\" = \"email\",\n  \"phone\" = \"phone\",\n  \"district\" = \"district\",\n  \"application_session\" = \"application_session\",\n  \"education_category\" = \"education_category\",\n  \"date\" = \"date\",\n  \"decision\" = \"decision\",\n  \"position\" = \"position\",\n}\nexport interface reportContentInterface {\n  key: reportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n\nconst defaultReportContent: reportContentInterface[] = [\n  {\n    key: reportContentKeyInterface.names,\n    title: \"Applicant Names\",\n    status: true,\n  },\n  {\n    key: reportContentKeyInterface.national_id,\n    title: \"National ID\",\n    status: true,\n  },\n  { key: reportContentKeyInterface.gender, title: \"Gender\", status: true },\n  { key: reportContentKeyInterface.phone, title: \"Phone\", status: true },\n  {\n    key: reportContentKeyInterface.application_session,\n    title: \"Application Period\",\n    status: true,\n  },\n  {\n    key: reportContentKeyInterface.education_category,\n    title: \"Education Institute\",\n    status: true,\n  },\n  {\n    key: reportContentKeyInterface.date,\n    title: \"Application Date\",\n    status: true,\n  },\n  { key: reportContentKeyInterface.decision, title: \"Decision\", status: true },\n  {\n    key: reportContentKeyInterface.position,\n    title: \"Position Title\",\n    status: true,\n  },\n];\n\ninterface loadAllApplicationsProps {\n  auth: Auth;\n  GetAllSessionPlans: Function;\n  loadAllPositions: (callback: (loading: boolean) => void) => void;\n  setSelectedPosition: (position: PositionAPI) => void;\n  positions: positionsStoreInterface;\n  sessionPlan: SessionPlanReducerInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface loadAllApplicationsState {\n  loading: boolean;\n  selectedEducationCategory: education_category | \"all\";\n  defaultSelectedPeriod: SessionPlanInterface | null;\n  applicationListData: AdminApplicationsList[] | null;\n  selectedApplicationStatus: ApplicationStates | \"ALL\" | null;\n  selected_period: SessionPlanInterface | null;\n  selectPosition: boolean;\n  selectPeriod: boolean;\n  applicationDetailsModal: {\n    selected_application: AdminApplicationsList;\n    status: boolean;\n  } | null;\n  generateReportModal: {\n    reportType: \"EXCEL\" | \"PDF\";\n    status: boolean;\n  } | null;\n  searchInput: string | \"\";\n  searchPositionInput: string | \"\";\n  applicationsToPrint: AdminApplicationsToPrintInterface[] | null;\n  reportTitle: string;\n  reportContent: reportContentInterface[];\n  selectAll: boolean;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  sortProperty: string;\n  isSorted: boolean;\n  sortOrder: \"ASC\" | \"DESC\";\n  downloading: boolean;\n}\nclass _Applications extends Component<\n  loadAllApplicationsProps,\n  loadAllApplicationsState\n> {\n  constructor(props: loadAllApplicationsProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      defaultSelectedPeriod: null,\n      selectedEducationCategory: \"all\",\n      selectedApplicationStatus: \"ALL\",\n      applicationListData: null,\n      selectPosition: false,\n      selectPeriod: false,\n      applicationDetailsModal: null,\n      generateReportModal: null,\n      searchInput: \"\",\n      searchPositionInput: \"\",\n      reportTitle: \"Application Report\",\n      selectAll: true,\n      applicationsToPrint: null,\n      formError: null,\n      reportContent: defaultReportContent,\n      sortProperty: \"\",\n      isSorted: false,\n      sortOrder: \"ASC\",\n      selected_period: null,\n      downloading: false,\n    };\n  }\n\n  setLoadingState = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  loadAllApplications = async (\n    position: PositionAPI | null,\n    period: SessionPlanInterface | null,\n    callback: (loading: boolean, msg: string) => void\n  ) => {\n    if (position !== null && period !== null) {\n      callback(true, \"\");\n      try {\n        const res = await axios.get<AdminApplicationsList[]>(\n          `${API.APPLICATION}/application/${position.position_id}/${period.session_plan_id}`\n        );\n        this.setState({ applicationListData: res.data });\n        console.log(\"applicationListData: \", res.data);\n        callback(false, \"\");\n      } catch (error: any) {\n        console.error({ error: errorToText(error) });\n        callback(false, errorToText(error));\n      }\n    }\n  };\n\n  componentDidMount = () => {\n    if (\n      this.props.schoolLevels.education_categories === null ||\n      this.props.schoolLevels.education_categories.length === 0\n    ) {\n      this.props.loadEducationCategories(this.setLoadingState);\n    }\n\n    if (\n      this.props.sessionPlan.allSessionPlans === null ||\n      this.props.sessionPlan.allSessionPlans.length <= 0\n    ) {\n      this.props.GetAllSessionPlans(\n        (status: boolean, msg: string, data?: SessionPlanInterface[]) => {\n          this.setLoadingState(status);\n          if (!status && msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          if (data && data.length > 0) {\n            if (this.state.selected_period === null) {\n              let active_period = data.find((item) => item.is_active);\n              if (active_period) {\n                this.setState({ selected_period: active_period });\n                this.setState({\n                  selectPeriod: false,\n                  defaultSelectedPeriod: active_period,\n                });\n              } else if (data.length > 0) {\n                active_period = data[data.length - 1];\n                this.setState({ selected_period: active_period });\n                this.setState({\n                  selectPeriod: false,\n                  defaultSelectedPeriod: active_period,\n                });\n              } else {\n                this.setState({ selectPeriod: true });\n              }\n            }\n          }\n        }\n      );\n    }\n\n    if (\n      this.state.selected_period === null &&\n      this.props.sessionPlan.allSessionPlans &&\n      this.props.sessionPlan.allSessionPlans.length > 0\n    ) {\n      let active_period = this.props.sessionPlan.allSessionPlans.find(\n        (item) => item.is_active\n      );\n      if (active_period) {\n        this.setState({\n          selected_period: active_period,\n          selectPeriod: false,\n          defaultSelectedPeriod: active_period,\n        });\n      } else if (this.props.sessionPlan.allSessionPlans.length > 0) {\n        active_period =\n          this.props.sessionPlan.allSessionPlans[\n            this.props.sessionPlan.allSessionPlans.length - 1\n          ];\n        this.setState({\n          selected_period: active_period,\n          selectPeriod: false,\n          defaultSelectedPeriod: active_period,\n        });\n      } else {\n        this.setState({ selectPeriod: true });\n      }\n    }\n\n    if (this.props.positions.positions_list === null) {\n      this.props.loadAllPositions(this.setLoadingState);\n    }\n\n    if (this.props.positions.selected_position === null) {\n      this.setState({ selectPosition: true });\n    }\n\n    this.loadAllApplications(\n      this.props.positions.selected_position,\n      this.state.selected_period,\n      (status: boolean, errorMessage: string) => {\n        this.setLoadingState(status);\n        if (!isEmptyOrSpaces(errorMessage)) {\n          this.props.PushPopupAlert({\n            title: errorMessage,\n            theme: PopupAlertTheme.warning,\n          });\n        }\n      }\n    );\n\n    if (this.props.positions.selected_position && this.state.selected_period) {\n      this.setState({\n        reportTitle:\n          this.props.positions.selected_position.position_title +\n          \" - Application Report - \" +\n          this.state.selected_period.session_plan_name,\n      });\n    }\n  };\n\n  componentDidUpdate(\n    prevProps: loadAllApplicationsProps,\n    prevState: loadAllApplicationsState\n  ) {\n    if (prevState.loading !== this.state.loading) {\n      // UPDATE APPLICATION LIST FOR UPDATE ==============================\n      this.updateApplicationToPrint();\n    }\n  }\n\n  AdminApplicationStatuses = (\n    application: AdminApplicationsList[]\n  ): { title: string; count: number; status: ApplicationStates | \"ALL\" }[] => {\n    let output: {\n      title: string;\n      count: number;\n      status: ApplicationStates | \"ALL\";\n    }[] = [{ title: \"All\", count: application.length, status: \"ALL\" }];\n    for (let i in ApplicationStatesDescription) {\n      if (\n        !ignoreThisApplicationStatus.includes(\n          ApplicationStatesDescription[i].key\n        )\n      ) {\n        output.push({\n          title: ApplicationStatesDescription[i].caption,\n          count: application.filter(\n            (itm) =>\n              itm.application_status === ApplicationStatesDescription[i].key\n          ).length,\n          status: ApplicationStatesDescription[i].key,\n        });\n      }\n    }\n    return output;\n  };\n\n  filteredApplications = (\n    applications: AdminApplicationsList[] | null,\n    Status: ApplicationStates | \"ALL\" | null,\n    education_category: education_category | \"all\"\n  ) => {\n    let appl: AdminApplicationsList[] | null = applications;\n    if (education_category !== \"all\" && applications !== null) {\n      appl = applications.filter(\n        (itm) =>\n          itm.position.education_institute_id.education_institute_id ===\n          education_category.education_institute_id\n      );\n    }\n    if (Status === null || Status === \"ALL\") {\n      return appl;\n    } else {\n      if (appl === null) {\n        return appl;\n      } else {\n        return appl.filter((item) => item.application_status === Status);\n      }\n    }\n  };\n\n  setDownloading = (status: boolean) => {\n    this.setState({ downloading: status });\n  };\n\n  updateApplicationToPrint = () => {\n    if (this.state.applicationListData) {\n      let arrayNew: AdminApplicationsToPrintInterface[] = [];\n      let n: number = 1;\n      for (const key in this.state.applicationListData) {\n        if (\n          Object.prototype.hasOwnProperty.call(\n            this.state.applicationListData,\n            key\n          )\n        ) {\n          const element = this.state.applicationListData[key];\n          let dataArray: AdminApplicationsToPrintInterface = {\n            application_id: n,\n            names: element.fname + \" \" + element.lname,\n            national_id: element.n_id,\n            gender: element.sex === \"M\" ? \"Male\" : \"Female\",\n            position: element.position.position_title,\n            phone: element.phone_number,\n            email: element.email,\n            education_category:\n              element.position.education_institute_id.education_category_title,\n            application_session:\n              element.application_session.application_session_id,\n            district: element.district,\n            date: element.createdAt,\n            decision: element.application_status,\n          };\n\n          for (const key in this.state.reportContent) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                this.state.reportContent,\n                key\n              )\n            ) {\n              if (!this.state.reportContent[key].status) {\n                delete dataArray[this.state.reportContent[key].key];\n              }\n            }\n          }\n          arrayNew.push(dataArray);\n          n++;\n        }\n      }\n      this.setState({ applicationsToPrint: arrayNew });\n      arrayNew = [];\n      n = 1;\n      // this.props.applicationsToPrint=;\n    }\n  };\n\n  updateReportContent = (key: reportContentKeyInterface) => {\n    let index: number = this.state.reportContent.findIndex(\n      (item) => item.key === key\n    );\n    let newArray: reportContentInterface[] = this.state.reportContent;\n    newArray[index].status = !newArray[index].status;\n    this.setState({ reportContent: newArray });\n    let isSelectAllNeeded = newArray.find((item) => item.status === false);\n    if (isSelectAllNeeded) {\n      this.setState({ selectAll: false });\n    } else {\n      this.setState({ selectAll: true });\n    }\n\n    // UPDATE APPLICATION LIST FOR UPDATE ==============================\n    this.updateApplicationToPrint();\n  };\n\n  generateThisPDF = () => {\n    if (!document.querySelectorAll(\"#report_content tbody tr\").length) {\n      this.props.PushPopupAlert({\n        title: `Can't generate Report of empty Data`,\n        theme: PopupAlertTheme.warning,\n      });\n      return false;\n    }\n\n    if (this.props.positions.selected_position && this.state.selected_period) {\n      const table: HTMLElement | null =\n        document.getElementById(\"report_content\");\n      const reportSettings: reportSettingsInterface = {\n        doneBy: this.props.auth.user.fname + \" \" + this.props.auth.user.lname,\n        title: \"Applications Report\",\n        subjectTitle: \"Position\",\n        subject: this.props.positions.selected_position.position_title,\n        period: this.state.selected_period.session_plan_name,\n        footer: \"Online Recruitment\",\n        institute:\n          this.state.selectedEducationCategory === \"all\"\n            ? \"All institute\"\n            : this.state.selectedEducationCategory.education_category_title,\n        orientation: \"l\",\n      };\n      console.log(\"====================================\");\n      console.log({ table });\n      console.log(\"====================================\");\n      table && generatePDF(reportSettings, table, this.setDownloading);\n    }\n  };\n\n  isChangeAllowed = (key: reportContentKeyInterface): boolean => {\n    if (\n      key === reportContentKeyInterface.names ||\n      key === reportContentKeyInterface.decision ||\n      key === reportContentKeyInterface.application_session\n    ) {\n      return false;\n    }\n    return true;\n  };\n\n  resetReportContent = (currentState: boolean) => {\n    let newArray: reportContentInterface[] = this.state.reportContent;\n    for (const key in newArray) {\n      if (this.isChangeAllowed(newArray[key].key)) {\n        newArray[key].status = !currentState;\n      }\n    }\n\n    this.setState({\n      reportContent: newArray,\n      selectAll: !currentState,\n    });\n\n    this.updateApplicationToPrint();\n  };\n\n  setSort = (thisProperty: string) => {\n    if (\n      this.state.sortProperty === thisProperty &&\n      this.state.sortOrder === \"ASC\"\n    ) {\n      this.setState({\n        sortProperty: thisProperty,\n        isSorted: true,\n        sortOrder: \"DESC\",\n      });\n    } else {\n      this.setState({\n        sortProperty: thisProperty,\n        isSorted: true,\n        sortOrder: \"ASC\",\n      });\n    }\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <SideNavigation>\n          <div className=\"flex flex-col mb-4\">\n            <span className=\"text-sm text-gray-600 mb-2\">\n              Education categories:\n            </span>\n            {this.props.schoolLevels.education_categories === null ? (\n              <Loading />\n            ) : this.props.schoolLevels.education_categories.length === 0 ? (\n              <span>No result found</span>\n            ) : (\n              <section>\n                <div\n                  onClick={() => {\n                    this.setState({ selectedEducationCategory: \"all\" });\n                  }}\n                  className={`border rounded px-2 py-2 mb-2 cursor-pointer ${\n                    this.state.selectedEducationCategory === \"all\"\n                      ? \"bg-blue-600 text-white hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                      : \"hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                  } font-bold flex flex-row items-center gap-2`}\n                >\n                  {this.state.selectedEducationCategory === \"all\" ? (\n                    <MdRadioButtonChecked />\n                  ) : (\n                    <MdRadioButtonUnchecked />\n                  )}\n                  <span>ALL</span>\n                </div>\n                {this.props.schoolLevels.education_categories.map((item, i) => (\n                  <div\n                    onClick={() => {\n                      this.setState({ selectedEducationCategory: item });\n                    }}\n                    key={i + 1}\n                    className={`border rounded px-2 py-2 mb-2 cursor-pointer ${\n                      this.state.selectedEducationCategory !== \"all\" &&\n                      this.state.selectedEducationCategory\n                        .education_institute_id === item.education_institute_id\n                        ? \"bg-blue-600 text-white hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                        : \"hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                    } font-bold flex flex-row items-center gap-2`}\n                  >\n                    {this.state.selectedEducationCategory !== \"all\" &&\n                    this.state.selectedEducationCategory\n                      .education_institute_id ===\n                      item.education_institute_id ? (\n                      <MdRadioButtonChecked />\n                    ) : (\n                      <MdRadioButtonUnchecked />\n                    )}\n                    <span>{item.education_category_title}</span>\n                  </div>\n                ))}\n              </section>\n            )}\n          </div>\n          <div className=\"\">\n            <div className=\"text-gray-600 text-sm mb-2\">Selected period:</div>\n            <div\n              onClick={() => this.setState({ selectPeriod: true })}\n              className=\"font-bold bg-blue-50 border border-blue-200 rounded py-2 cursor-pointer text-xs px-2 hover:underline  text-blue-600  mb-4 w-full flex flex-row items-center animate__animated animate__zoomIn\"\n            >\n              {this.state.selected_period !== null\n                ? this.state.selected_period.session_plan_name\n                : \"Filter by period\"}\n              <FiEdit className=\"text-3xl text-blue-600\" />\n            </div>\n          </div>\n          {/* <Search data={[1, 2, 3]} /> */}\n          {this.props.positions.selected_position && (\n            <div className=\"pt-1\">\n              <div className=\"text-sm text-gray-700 pb-2 pt-2\">\n                Application statuses:\n              </div>\n              {this.state.applicationListData === null ? (\n                <Loading />\n              ) : (\n                this.AdminApplicationStatuses(\n                  this.state.applicationListData!\n                ).map(\n                  (\n                    itm: {\n                      title: string;\n                      count: number;\n                      status: ApplicationStates | \"ALL\";\n                    },\n                    i: number\n                  ) => (\n                    // itm.count > 0 &&\n                    <Fragment key={itm.title}>\n                      <div\n                        onClick={() =>\n                          this.setState({\n                            selectedApplicationStatus: itm.status,\n                          })\n                        }\n                      >\n                        <MainItem\n                          title={itm.title}\n                          count={itm.count}\n                          active={\n                            this.state.selectedApplicationStatus === itm.status\n                              ? true\n                              : false\n                          }\n                        />\n                      </div>\n                    </Fragment>\n                  )\n                )\n              )}\n            </div>\n          )}\n        </SideNavigation>\n\n        <section>\n          {/* REPORT TITLE ========================================= */}\n          <div className=\"grid md:grid-cols-12\">\n            <div className=\"col-span-8\">\n              <div className=\"mt-4 mx-4 flex flex-col gap-1\">\n                <span className=\"text-xl font-bold text-gray-700\">\n                  Applications Report\n                </span>\n                <div\n                  onClick={() => this.setState({ selectPosition: true })}\n                  className=\"flex flex-row gap-2 items-end\"\n                >\n                  <span className=\"text-gray-500 text-xl\">Position:</span>\n                  <span className=\"text-blue-600 font-bold underline cursor-pointer text-3xl\">\n                    {this.props.positions.selected_position !== null\n                      ? this.props.positions.selected_position.position_title\n                      : \"No position selected, Click to select\"}\n                  </span>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-span-4\">\n              <div className=\"float-right mt-2\">\n                {this.state.applicationsToPrint &&\n                  this.state.applicationsToPrint.length > 0 && (\n                    <div className=\"flex flex-row items-center justify-end font-bold mb-2\">\n                      <BiExport className=\"text-2xl text-gray-500\" />\n                      <span className=\"text-gray-500\">Export as</span>\n                      {/* EXCEL BUTTON ================= */}\n                      <button\n                        className={`px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200 ${\n                          this.state.downloading && \"cursor-wait\"\n                        }`}\n                        disabled={this.state.loading || this.state.downloading}\n                        onClick={() =>\n                          this.setState({\n                            generateReportModal: {\n                              reportType: \"EXCEL\",\n                              status: true,\n                            },\n                          })\n                        }\n                      >\n                        EXCEL\n                      </button>\n                      {/* PDF BUTTON ================= */}\n                      <button\n                        className=\"px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200\"\n                        onClick={() => this.generateThisPDF()}\n                        disabled={this.state.loading}\n                      >\n                        PDF\n                      </button>\n                    </div>\n                  )}\n                <div\n                  onClick={() => this.setState({ selectPosition: true })}\n                  className=\"btn bg-blue-50 border border-blue-300 text-blue-600 cursor-pointer hover:bg-blue-100 flex flex-row items-center justify-center gap-2 text-sm \"\n                >\n                  <BiFilterAlt className=\"text-xl\" />\n                  Filter by position\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* END REPORT TITLE ========================================= */}\n          <div className=\"bg-white my-4\">\n            <div className=\"w-full px-2 py-2\">\n              <input\n                onChange={(e) => this.setState({ searchInput: e.target.value })}\n                type=\"text\"\n                value={this.state.searchInput}\n                placeholder=\"Search...\"\n                className=\"w-full bg-gray-100 py-2 px-3 rounded\"\n              />\n            </div>\n            <table className=\"w-full shadow\" id=\"report_content\">\n              <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                <tr>\n                  <td className=\"px-2 py-2\">#</td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"fname\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Applicant names <BiSort />\n                    </div>\n                  </td>\n                  <td className=\"px-2 py-2\">National ID</td>\n                  <td className=\"px-2 py-2\">Gender</td>\n                  <td className=\"px-2 py-2\">Phone</td>\n                  <td className=\"px-2 py-2\">Position</td>\n                  <td className=\"px-2 py-2\">Res. District</td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"application_status\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Status <BiSort />\n                    </div>\n                  </td>\n                  <td className=\"px-2 py-2\">Date</td>\n                </tr>\n              </thead>\n              <tbody>\n                {!this.props.positions.selected_position ? (\n                  <tr>\n                    <td colSpan={9} className=\"px-2 py-2\">\n                      <div className=\"flex flex-col text-gray-400 items-center justify-center bg-gray-100 rounded py-10\">\n                        <ImFilesEmpty className=\"text-8xl text-gray-400 mb-2 animate__animated animate__shakeX\" />\n                        <span className=\"text-sm font-bold\">\n                          No position selected! Please select position to get\n                          data\n                        </span>\n                        <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n                          <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                            <li\n                              onClick={() =>\n                                this.setState({ selectPosition: true })\n                              }\n                              className=\"underline text-blue-600 cursor-pointer\"\n                            >\n                              Choose position\n                            </li>\n                          </ul>\n                        </div>\n                      </div>\n                    </td>\n                  </tr>\n                ) : this.state.applicationListData === null ||\n                  this.filteredApplications(\n                    this.state.applicationListData,\n                    this.state.selectedApplicationStatus,\n                    this.state.selectedEducationCategory\n                  ) === null ? (\n                  <tr>\n                    <td colSpan={9} className=\"px-2 py-2\">\n                      <Loading />\n                    </td>\n                  </tr>\n                ) : this.filteredApplications(\n                    this.state.applicationListData,\n                    this.state.selectedApplicationStatus,\n                    this.state.selectedEducationCategory\n                  )!.length === 0 ? (\n                  <tr>\n                    <td colSpan={9} className=\"px-2 py-2\">\n                      <div className=\"flex flex-col text-gray-400 items-center justify-center bg-gray-100 rounded py-10\">\n                        <ImFilesEmpty className=\"text-8xl text-gray-400 mb-2 animate__animated animate__shakeX\" />\n                        <span className=\"text-sm font-bold\">\n                          No result found! Please try to search again\n                        </span>\n                        <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n                          <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                            <li\n                              onClick={() =>\n                                this.setState({ selectPeriod: true })\n                              }\n                              className=\"underline text-gray-500 cursor-pointer\"\n                            >\n                              Filter by period\n                            </li>\n                            <li className=\"text-gray-400 italic\">or</li>\n                            <li\n                              onClick={() =>\n                                this.setState({ selectPosition: true })\n                              }\n                              className=\"underline text-blue-600 cursor-pointer\"\n                            >\n                              Filter by position\n                            </li>\n                          </ul>\n                        </div>\n                      </div>\n                    </td>\n                  </tr>\n                ) : (\n                  sortThisArray(\n                    this.state.isSorted,\n                    searchData(\n                      this.filteredApplications(\n                        this.state.applicationListData,\n                        this.state.selectedApplicationStatus,\n                        this.state.selectedEducationCategory\n                      )!,\n                      this.state.searchInput\n                    ),\n                    this.state.sortProperty,\n                    this.state.sortOrder\n                  ).map((item, i) => (\n                    <tr\n                      onClick={() =>\n                        this.setState({\n                          applicationDetailsModal: {\n                            selected_application: item,\n                            status: true,\n                          },\n                        })\n                      }\n                      key={i + 1}\n                      className={`${\n                        i % 2 !== 0 ? \"bg-gray-100\" : \"bg-white\"\n                      } text-gray-600 hover:bg-blue-100 hover:text-blue-700 cursor-pointer border-b border-gray-300 hover:border-blue-500 text-sm`}\n                    >\n                      <td className=\"px-2 py-2\">{i + 1}</td>\n                      <td className=\"px-2 py-2\">\n                        {item.fname} {item.lname}\n                      </td>\n                      <td className=\"px-2 py-2\">{item.n_id}</td>\n                      <td className=\"px-2 py-2\">\n                        {item.sex === \"M\" ? \"Male\" : \"Female\"}\n                      </td>\n                      <td className=\"px-2 py-2\">{item.phone_number}</td>\n                      <td className=\"px-2 py-2\">\n                        {item.position.position_title}\n                      </td>\n                      <td className=\"px-2 py-2\">{item.district}</td>\n                      <td className=\"px-2 py-2\">\n                        {capitalizeFirstLetter(item.application_status)}\n                      </td>\n                      <td className=\"px-2 py-2\">{DATE(item.createdAt)}</td>\n                    </tr>\n                  ))\n                )}\n              </tbody>\n            </table>\n          </div>\n        </section>\n\n        {/* PERIOD && POSITION CONTENT MODAL */}\n        {(this.state.selectPosition === true ||\n          this.state.selectPeriod === true) && (\n          <Modal\n            title={\n              <div className=\"flex flex-row gap-4 items-center\">\n                {this.state.selectPeriod === true ? (\n                  <MdHistory className=\"text-5xl text-blue-600\" />\n                ) : (\n                  <IoFilter className=\"text-5xl text-blue-600\" />\n                )}\n                <div className=\"flex flex-col\">\n                  <span className=\"font-bold text-xl text-blue-600\">\n                    {this.state.selectPeriod === true\n                      ? \"Choose a period\"\n                      : \"Filter by a position\"}\n                  </span>\n                </div>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() =>\n              this.setState({\n                selectPosition: false,\n                selectPeriod: false,\n                searchPositionInput: \"\",\n              })\n            }\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{ title: true }}\n          >\n            <div className=\"px-2 pb-2\">\n              {this.state.selectPeriod === true ? (\n                <ChooseSession\n                  allSession={this.props.sessionPlan.allSessionPlans}\n                  setSelectSession={(value: SessionPlanInterface | \"all\") => {\n                    if (value !== \"all\") {\n                      this.setState({ selected_period: value });\n                      this.loadAllApplications(\n                        this.props.positions.selected_position,\n                        value,\n                        (status: boolean, errorMessage: string) => {\n                          this.setLoadingState(status);\n                          if (!isEmptyOrSpaces(errorMessage)) {\n                            this.props.PushPopupAlert({\n                              title: errorMessage,\n                              theme: PopupAlertTheme.warning,\n                            });\n                          }\n                        }\n                      );\n                      this.setState({\n                        selectPeriod: false,\n                        applicationListData: null,\n                      });\n                    }\n                  }}\n                  chooseAll={false}\n                  currentSelected={\n                    this.state.selected_period\n                      ? this.state.selected_period\n                      : \"all\"\n                  }\n                />\n              ) : this.state.selectPosition === true &&\n                this.props.positions.positions_list === null ? (\n                <LoadingV2 type={LoadingType.dark} />\n              ) : this.props.positions.positions_list!.length === 0 ? (\n                <div className=\"flex flex-col text-gray-400 items-center justify-center\">\n                  <MdSearch className=\"text-6xl\" />\n                  <div className=\"flex flex-col items-center justify-center\">\n                    <span>No positions found! Please go back!</span>\n                    <Link\n                      to=\"/\"\n                      className=\"btn bg-yellow-100 text-yellow-700 my-4 hover:bg-yellow-200\"\n                    >\n                      Go back\n                    </Link>\n                  </div>\n                </div>\n              ) : (\n                <>\n                  <div className=\"flex flex-col\">\n                    <span className=\"text-gray-600 text-xs font-bold\">\n                      Filter by position name\n                    </span>\n                    <input\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                        this.setState({ searchPositionInput: e.target.value })\n                      }\n                      type=\"text\"\n                      className=\"mb-4 bg-gray-100 px-3 py-2 rounded\"\n                      placeholder=\"Keyword...\"\n                    />\n                  </div>\n                  {searchData(\n                    this.props.positions.positions_list!,\n                    this.state.searchPositionInput\n                  ).map((item, key) => (\n                    <div\n                      key={key + 1}\n                      onClick={() => {\n                        this.props.setSelectedPosition(item);\n                        this.loadAllApplications(\n                          item,\n                          this.state.selected_period\n                            ? this.state.selected_period\n                            : this.state.defaultSelectedPeriod,\n                          (status: boolean, errorMessage: string) => {\n                            this.setLoadingState(status);\n                            if (!isEmptyOrSpaces(errorMessage)) {\n                              this.props.PushPopupAlert({\n                                title: errorMessage,\n                                theme: PopupAlertTheme.warning,\n                              });\n                            }\n                          }\n                        );\n                        this.setState({\n                          selectPosition: false,\n                          searchPositionInput: \"\",\n                          applicationListData: null,\n                          reportTitle:\n                            this.props.positions.selected_position\n                              ?.position_title +\n                            \" - Application Report - \" +\n                            this.state.selected_period\n                              ? this.state.selected_period!.session_plan_name\n                              : this.state.defaultSelectedPeriod\n                              ? this.state.defaultSelectedPeriod!\n                                  .session_plan_name\n                              : \"\",\n                        });\n                      }}\n                      className=\"bg-white cursor-pointer rounded  px-3 py-2 border border-gray-200 hover:border-blue-500 hover:bg-blue-100 mb-2\"\n                    >\n                      <div className=\"grid lg:grid-cols-12\">\n                        <div className=\"col-span-12 lg:col-span-10\">\n                          <div className=\"flex flex-row items-center gap-3\">\n                            <div>\n                              <IoIosBriefcase className=\"text-4xl md:text-5xl text-blue-600\" />\n                            </div>\n                            <div className=\"flex flex-col\">\n                              <span className=\"text-xs lg:text-sm font-bold text-gray-700\">\n                                {item.position_title}\n                              </span>\n                              <span className=\"text-xs text-gray-500 italic\">\n                                School level:{\" \"}\n                                <span\n                                  className=\"text-gray-800 font-light\"\n                                  style={{ fontStyle: \"normal\" }}\n                                >\n                                  {item.school_level_id.school_level_name}\n                                </span>\n                              </span>\n                              <span className=\"text-xs font-bold text-blue-600 bg-blue-100 w-max px-3 py-1 rounded-full\">\n                                {\n                                  item.education_institute_id\n                                    .education_category_title\n                                }\n                              </span>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-span-12 lg:col-span-2 hidden lg:block\">\n                          <div className=\"h-full flex items-center justify-end\">\n                            <div className=\"btn bg-blue-600 text-white float-right\">\n                              Choose\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </>\n              )}\n            </div>\n          </Modal>\n        )}\n        {/* END PERIOD && POSITION CONTENT MODAL */}\n\n        {/* APPLICATION DETAIL CONTENT MODAL */}\n        {this.state.applicationDetailsModal !== null &&\n          this.state.applicationDetailsModal.status === true && (\n            <Modal\n              title={\n                <div className=\"flex flex-row gap-4 items-center\">\n                  {/* <IoBriefcase className=\"text-5xl text-gray-500\" /> */}\n                  <div className=\"flex flex-col\">\n                    <span className=\"font-bold text-2xl text-gray-500\">\n                      {\n                        this.state.applicationDetailsModal.selected_application\n                          .fname\n                      }{\" \"}\n                      {\n                        this.state.applicationDetailsModal.selected_application\n                          .lname\n                      }\n                    </span>\n                    <span className=\"text-sm text-blue-600 font-normal\">\n                      Position:{\" \"}\n                      {\n                        this.state.applicationDetailsModal.selected_application\n                          .position.position_title\n                      }\n                    </span>\n                  </div>\n                </div>\n              }\n              backDrop={true}\n              theme={Themes.default}\n              close={() => this.setState({ applicationDetailsModal: null })}\n              backDropClose={true}\n              widthSizeClass={ModalSize.extraLarge}\n              displayClose={true}\n              padding={{ title: true }}\n            >\n              <ApplicationDetails\n                selectedApplication={\n                  this.state.applicationDetailsModal.selected_application\n                }\n              />\n            </Modal>\n          )}\n        {/* END APPLICATION DETAIL CONTENT MODAL */}\n\n        {/* GENERATE DYNAMIC REPORT CONTENT MODAL */}\n        {this.state.generateReportModal !== null &&\n          this.state.generateReportModal.status === true && (\n            <Modal\n              title={\n                <div className=\"flex flex-row gap-4 items-center\">\n                  {/* <IoBriefcase className=\"text-5xl text-gray-500\" /> */}\n                  <div className=\"flex flex-col\">\n                    <span className=\"font-bold text-2xl text-gray-500\">\n                      Generating Report contents\n                    </span>\n                    <span className=\"text-sm text-blue-600 font-normal\">\n                      Generating {this.state.generateReportModal.reportType}{\" \"}\n                      Report\n                    </span>\n                  </div>\n                </div>\n              }\n              backDrop={true}\n              theme={Themes.default}\n              close={() => this.setState({ generateReportModal: null })}\n              backDropClose={false}\n              widthSizeClass={ModalSize.medium}\n              displayClose={true}\n              padding={{ title: true }}\n            >\n              <div className=\"px-6\">\n                <div className=\"my-2 text-base text-gray-700 sm:text-lg\">\n                  <div className=\"flex flex-col\">\n                    <label>Title</label>\n                    <input\n                      type=\"text\"\n                      className={`text-left input-white w-20 inline-block ${\n                        this.state.formError &&\n                        this.state.formError.element === \"report_title\"\n                          ? \"border-red-500\"\n                          : \"border-gray-500\"\n                      } border-2`}\n                      placeholder=\"Sub Category Title\"\n                      value={this.state.reportTitle}\n                      onChange={(e) => {\n                        this.setState({\n                          formError: null,\n                          reportTitle: e.target.value,\n                        });\n                      }}\n                      disabled={this.state.loading}\n                    />\n                    {this.state.formError &&\n                      this.state.formError.element === \"report_title\" && (\n                        <span className=\"text-red-500\">\n                          {this.state.formError.msg}\n                        </span>\n                      )}\n                  </div>\n                  <div className=\"flex flex-col mt-2\">\n                    <label>Report content</label>\n                    <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                      {this.state.reportContent.map((item, index) => (\n                        <div\n                          key={index}\n                          className={`flex items-center gap-1 ${\n                            this.isChangeAllowed(item.key)\n                              ? \"cursor-pointer\"\n                              : \"cursor-not-allowed\"\n                          }`}\n                          onClick={() =>\n                            this.isChangeAllowed(item.key) &&\n                            this.updateReportContent(item.key)\n                          }\n                          title={\n                            !this.isChangeAllowed(item.key)\n                              ? \"Required for every report!\"\n                              : \"\"\n                          }\n                        >\n                          {item.status ? (\n                            <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                          ) : (\n                            <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                          )}\n                          <span>{item.title}</span>\n                        </div>\n                      ))}\n                    </div>\n                    {this.state.formError &&\n                      this.state.formError.element === \"report_content\" && (\n                        <span className=\"text-red-500\">\n                          {this.state.formError.msg}\n                        </span>\n                      )}\n                  </div>\n                </div>\n                <div className=\"flex justify-between mb-2 mt-4\">\n                  <div\n                    className={`flex items-center gap-1 cursor-pointer`}\n                    onClick={() =>\n                      this.resetReportContent(this.state.selectAll)\n                    }\n                  >\n                    {this.state.selectAll ? (\n                      <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                    ) : (\n                      <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                    )}\n                    <span>Select all</span>\n                  </div>\n\n                  {this.state.applicationsToPrint && !this.state.loading && (\n                    <ExportToExcel\n                      fileData={this.state.applicationsToPrint}\n                      fileName={this.state.reportTitle}\n                      btnName=\"Generate\"\n                    />\n                  )}\n                </div>\n              </div>\n            </Modal>\n          )}\n        {/* END GENERATE DYNAMIC REPORT CONTENT MODAL */}\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  positions,\n  sessionPlan,\n  schoolLevels,\n}: StoreState): {\n  auth: Auth;\n  positions: positionsStoreInterface;\n  sessionPlan: SessionPlanReducerInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n} => {\n  return {\n    auth: auth,\n    positions: positions,\n    sessionPlan,\n    schoolLevels: schoolLevels,\n  };\n};\n\nexport const Applications = connect(mapStateToProps, {\n  GetAllSessionPlans,\n  loadAllPositions,\n  setSelectedPosition,\n  loadEducationCategories,\n  PushPopupAlert,\n})(_Applications);\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport {\n  AcademicSessionInterface,\n  PlansTypeInterface,\n  SessionPlanInterface,\n} from \"../interfaces\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// GET ACTIVE PLAN TYPES\nexport interface GetPlansTypesAction {\n  type: ActionTypes.GET_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// GET INACTIVE PLAN TYPES\nexport interface GetDeletedPlansTypesAction {\n  type: ActionTypes.GET_DELETED_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// CREATE PLAN TYPE\nexport interface CreatePlansTypeAction {\n  type: ActionTypes.CREATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// UPDATE PLAN TYPE\nexport interface UpdatePlansTypeAction {\n  type: ActionTypes.UPDATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// DELETE PLAN TYPE\nexport interface DeletePlansTypeAction {\n  type: ActionTypes.DELETE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// SET PLAN TYPE =====================================\nexport interface setSelectedPlanTypeActions {\n  type: ActionTypes.SELECT_PLAN_TYPE;\n  payload: PlansTypeInterface | \"all\";\n}\n\n// GET ALL SESSION PLAN\nexport interface GetAllSessionPlansAction {\n  type: ActionTypes.GET_ALL_SESSION_PLANS;\n  payload: SessionPlanInterface[];\n}\n\n// GET ACTIVE SESSION PLAN\nexport interface GetActiveSessionPlanAction {\n  type: ActionTypes.GET_ACTIVE_SESSION_PLANS;\n  payload: SessionPlanInterface | \"none\";\n}\n\n// CREATE SESSION PLAN\nexport interface CreateSessionPlansAction {\n  type: ActionTypes.CREATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// UPDATE SESSION PLAN\nexport interface UpdateSessionPlansAction {\n  type: ActionTypes.UPDATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// ACTIVATE SESSION PLAN\nexport interface ActivateSessionPlansAction {\n  type: ActionTypes.SESSION_ACTIVATION;\n  payload: SessionPlanInterface;\n}\n\n// DELETE SESSION PLAN\nexport interface DeleteSessionPlanAction {\n  type: ActionTypes.DELETE_SESSION_PLAN;\n  payload: string;\n}\n\n// GET ALL ACADEMIC SESSION\nexport interface GetAllAcademicSessionAction {\n  type: ActionTypes.GET_ALL_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface[];\n}\n\n// CREATE ACADEMIC SESSION\nexport interface CreateAcademicSessionAction {\n  type: ActionTypes.CREATE_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface;\n}\n\n// UPDATE ACADEMIC SESSION\nexport interface UpdateAcademicSessionAction {\n  type: ActionTypes.UPDATE_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface;\n}\n\n// ACTIVATE ACADEMIC SESSION\nexport interface ActivateAcademicSessionAction {\n  type: ActionTypes.ACADEMIC_SESSION_ACTIVATION;\n  payload: AcademicSessionInterface;\n}\n\n// DELETE ACADEMIC SESSION\nexport interface DeleteAcademicSessionAction {\n  type: ActionTypes.DELETE_ACADEMIC_SESSION;\n  payload: string;\n}\n\n// GET ACTIVE ACADEMIC SESSION\nexport interface GetActiveAcademicSessionAction {\n  type: ActionTypes.GET_ACTIVE_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface | \"none\";\n}\n\nexport type SessionActionType =\n  | GetPlansTypesAction\n  | GetDeletedPlansTypesAction\n  | CreatePlansTypeAction\n  | UpdatePlansTypeAction\n  | DeletePlansTypeAction\n  | GetAllSessionPlansAction\n  | GetActiveSessionPlanAction\n  | CreateSessionPlansAction\n  | UpdateSessionPlansAction\n  | ActivateSessionPlansAction\n  | DeleteSessionPlanAction\n  | setSelectedPlanTypeActions\n  | GetAllAcademicSessionAction\n  | CreateAcademicSessionAction\n  | UpdateAcademicSessionAction\n  | ActivateAcademicSessionAction\n  | DeleteAcademicSessionAction\n  | GetActiveAcademicSessionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type`\n      );\n      console.log({ GET_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetPlansTypesAction>({\n        type: ActionTypes.GET_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetDeletedPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type/deleted`\n      );\n      console.log({ GET_DELETED_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetDeletedPlansTypesAction>({\n        type: ActionTypes.GET_DELETED_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE PLAN TYPE\nexport const createPlanType = (\n  data: PlansTypeInterface\n): CreatePlansTypeAction => {\n  return {\n    type: ActionTypes.CREATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// UPDATE PLAN TYPE\nexport const updatePlanType = (\n  data: PlansTypeInterface\n): UpdatePlansTypeAction => {\n  return {\n    type: ActionTypes.UPDATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// DELETE PLAN TYPE\nexport const deletePlanType = (\n  data: PlansTypeInterface\n): DeletePlansTypeAction => {\n  return {\n    type: ActionTypes.DELETE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// SELECT PLAN TYPES ==========================\nexport const setSelectedPlanType = (\n  thisType: PlansTypeInterface | \"all\"\n): setSelectedPlanTypeActions => {\n  console.log({ thisType });\n  return {\n    type: ActionTypes.SELECT_PLAN_TYPE,\n    payload: thisType,\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const getActiveSessionPlan = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface>(\n        `${API.CLAIMING}/session/active/`\n      );\n      console.log({ GET_ACTIVE_SESSION_PLANS: res.data });\n      let session_plan: SessionPlanInterface | undefined = undefined;\n      // if (res.status === 200) {\n      //   // setApplications(res.data);\n      // }\n      if (res.data && res.data.is_active !== undefined) {\n        session_plan = res.data;\n      }\n      console.log({ session_plan: res.data });\n\n      dispatch<GetActiveSessionPlanAction>({\n        type: ActionTypes.GET_ACTIVE_SESSION_PLANS,\n        payload: session_plan ? session_plan : \"none\",\n      });\n      callback(false, \"\", session_plan ? session_plan : \"none\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ALL PLAN TYPES ==========================\nexport const GetAllSessionPlans = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface[]>(\n        `${API.CLAIMING}/session/`\n      );\n      console.log({ GET_ALL_SESSION_PLANS: res.data });\n      let session_data: SessionPlanInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          session_data = res.data;\n        }\n      }\n      dispatch<GetAllSessionPlansAction>({\n        type: ActionTypes.GET_ALL_SESSION_PLANS,\n        payload: session_data,\n      });\n      callback(false, \"\", session_data);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE SESSION PLAN\nexport const createSessionPlan = (\n  data: SessionPlanInterface\n): CreateSessionPlansAction => {\n  return {\n    type: ActionTypes.CREATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// UPDATE SESSION PLAN\nexport const updateSessionPlan = (\n  data: SessionPlanInterface\n): UpdateSessionPlansAction => {\n  return {\n    type: ActionTypes.UPDATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// ACTIVATE SESSION PLAN\nexport const sessionActivation = (\n  data: SessionPlanInterface\n): ActivateSessionPlansAction => {\n  return {\n    type: ActionTypes.SESSION_ACTIVATION,\n    payload: data,\n  };\n};\n\n// DELETE SESSION PLAN\nexport const deleteSessionPlan = (data: string): DeleteSessionPlanAction => {\n  return {\n    type: ActionTypes.DELETE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// CREATE ACADEMIC SESSION\nexport const createAcademicSession = (\n  data: AcademicSessionInterface\n): CreateAcademicSessionAction => {\n  return {\n    type: ActionTypes.CREATE_ACADEMIC_SESSION,\n    payload: data,\n  };\n};\n\n// GET ALL ACADEMIC SESSION ==========================\nexport const GetAllAcademicSession = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<AcademicSessionInterface[]>(\n        `${API.PLACEMENT}/postrequestperiod/`\n      );\n      console.log({ GET_ALL_SESSION_PLANS: res.data });\n      let session_data: AcademicSessionInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          session_data = res.data;\n        }\n      }\n      console.log(\"====================================\");\n      console.log({ GetAllAcademicSession: res });\n      console.log(\"====================================\");\n      dispatch<GetAllAcademicSessionAction>({\n        type: ActionTypes.GET_ALL_ACADEMIC_SESSION,\n        payload: session_data,\n      });\n      callback(false, \"\", session_data);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// UPDATE ACADEMIC SESSION\nexport const updateAcademicSession = (\n  data: AcademicSessionInterface\n): UpdateAcademicSessionAction => {\n  return {\n    type: ActionTypes.UPDATE_ACADEMIC_SESSION,\n    payload: data,\n  };\n};\n\n// ACTIVATE ACADEMIC SESSION\nexport const academicSessionActivation = (\n  data: AcademicSessionInterface\n): ActivateAcademicSessionAction => {\n  return {\n    type: ActionTypes.ACADEMIC_SESSION_ACTIVATION,\n    payload: data,\n  };\n};\n\n// DELETE ACADEMIC SESSION\nexport const deleteAcademicSession = (\n  data: string\n): DeleteAcademicSessionAction => {\n  return {\n    type: ActionTypes.DELETE_ACADEMIC_SESSION,\n    payload: data,\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const getActiveAcademicSession = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<AcademicSessionInterface>(\n        `${API.PLACEMENT}/postrequestperiod/one`\n      );\n      console.log({ GET_ACTIVE_ACADEMIC_SESSION: res.data });\n      let session_plan: AcademicSessionInterface | undefined = undefined;\n      // if (res.status === 200) {\n      //   // setApplications(res.data);\n      // }\n      if (res.data) {\n        session_plan = res.data;\n      }\n      console.log({ session_plan: res.data });\n\n      dispatch<GetActiveAcademicSessionAction>({\n        type: ActionTypes.GET_ACTIVE_ACADEMIC_SESSION,\n        payload: session_plan ? session_plan : \"none\",\n      });\n      callback(false, \"\", session_plan ? session_plan : \"none\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n","import React, { FC, ReactElement, ReactNode } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, System } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { NavToogle, PageHasSubNav } from \"../../actions\";\nimport { MdBrightness1, MdSearch } from \"react-icons/md\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  system: System;\n  PageHasSubNav: Function;\n  NavToogle: Function;\n  children: ReactNode;\n}\n//\ninterface AppState {\n  loading: boolean;\n}\n\nclass _SideNavigation extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount = () => this.props.PageHasSubNav(true);\n  componentWillUnmount = () => this.props.PageHasSubNav(false);\n\n  render() {\n    const isAuthenticated = this.props.auth.isAuthenticated;\n\n    if (isAuthenticated === false) {\n      return null;\n    }\n\n    const navActive = this.props.system.navigation;\n    return (\n      <div\n        className={`fixed w-48 p-1 pr-2 pl-6 text-gray-700 bg-white ${\n          navActive === true ? \"lg:left-16  left-16\" : \" -left-72 lg:left-16\"\n        }  top-0 bottom-0 pt-20 z-30 shadow-lg  transition-all duration-500 ease-in-out overflow-y-auto`}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n}: StoreState): { auth: Auth; system: System } => {\n  return { auth: auth, system: system };\n};\n\nexport const SideNavigation = connect(mapStateToProps, {\n  NavToogle,\n  PageHasSubNav,\n})(_SideNavigation);\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SearchComponentInterface = {\n  data: any[];\n};\n\nexport const Search: FC<SearchComponentInterface> = ({\n  data,\n}): ReactElement => {\n  return (\n    <div className=\"m-1 rounded-md shadow-md border border-blue-400 bg-white p-1 flex \">\n      <label htmlFor=\"search-text\" className=\"inline-block text-2xl\">\n        <MdSearch className=\"inline-block text-blue-400\" />\n      </label>\n      <input\n        type=\"search\"\n        className=\"outline-none bg-transparent flex-1 pl-1\"\n        placeholder=\"Search\"\n        id=\"search-text\"\n      />\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype MainItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const MainItem: FC<MainItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n  return (\n    <section\n      className={`${\n        active === true\n          ? \"bg-blue-500 text-white font-bold\"\n          : \"bg-blue-100 text-blue-800\"\n      } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex cursor-pointer items-center`}\n    >\n      <section className=\"flex-1\">\n        <IconDefined className=\"inline-block mr-1 text-xs\" />\n        <span>{title}</span>\n      </section>\n\n      {count > 0 ? (\n        <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n          {count}\n        </span>\n      ) : null}\n    </section>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemContainerComponentInterface = {\n  children: ReactNode;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const SubItemContainer: FC<SubItemContainerComponentInterface> = ({\n  children,\n}): ReactElement => {\n  return (\n    <div className=\"ml-3 overflow-y-auto border-l-2 border-blue-200 -mt-1 pt-2 mb-2 pl-1 cursor-pointer\">\n      {children}\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n * @important Remenber to use these components inside the <SubItemContainer>...</SubItemContainer>\n */\nexport const SubItem: FC<SubItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n\n  return (\n    <div\n      className={`animate__animated animate__zoomIn animate__faster ${\n        active === true ? \"bg-blue-500 text-white font-bold\" : \" text-blue-800\"\n      } text-blue-800 bg-blue-200 rounded-md px-1 mb-1 flex items-center py-1 font-bold`}\n    >\n      <IconDefined\n        className={`inline-block mr-0.1 text-xs ${\n          active === true ? \"text-white\" : \"\"\n        }`}\n      />\n      <span\n        className={`inline-block pl-1 ${active === true ? \"text-white\" : \"\"}`}\n      >\n        {title}\n      </span>\n      {count >= 1 ? (\n        <span\n          className={`text-sm fint-bold ${active === true ? \"text-white\" : \"\"}`}\n        >\n          {count}\n        </span>\n      ) : null}\n    </div>\n  );\n};\n","import React from \"react\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport { RiFileExcel2Fill } from \"react-icons/ri\";\n\ninterface ExportToExcelProps {\n  fileData: any[];\n  fileName: string;\n  btnName?: string;\n  className?: string;\n  showIcon?: boolean;\n}\n\nconst ExportToExcel: React.FC<ExportToExcelProps> = ({\n  fileData,\n  fileName,\n  btnName = \"Excel\",\n  className = \"flex items-center gap-1 px-4 py-1 rounded text-green-700 bg-white border hover:text-white hover:bg-green-700 border-green-700 font-bold\",\n  showIcon = true,\n}) => {\n  const fileType =\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n  const fileExtension = \".xlsx\";\n\n  const exportToCSV = (apiData: any[], fileName: string) => {\n    const ws = XLSX.utils.json_to_sheet(apiData);\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n    const data = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n\n  return (\n    <button\n      onClick={(e) => exportToCSV(fileData, fileName)}\n      className={className}\n    >\n      {showIcon && <RiFileExcel2Fill />}\n      {btnName}\n    </button>\n  );\n};\n\nexport default ExportToExcel;\n","export default __webpack_public_path__ + \"static/media/mineduc.11a9ae1c.png\";","import jsPDF from \"jspdf\";\nimport { DATE } from \"../../utils/functions\";\nimport Logo from \"../../utils/mineduc.png\";\nrequire(\"jspdf-autotable\");\n\nexport const addFooters = (doc: any) => {\n  const pageCount = doc.internal.getNumberOfPages();\n\n  doc.setFont(\"helvetica\", \"italic\");\n  doc.setFontSize(8);\n  for (var i = 1; i <= pageCount; i++) {\n    doc.setPage(i);\n    doc.text(\n      \"Page \" + String(i) + \" of \" + String(pageCount),\n      doc.internal.pageSize.width / 2,\n      297,\n      {\n        align: \"center\",\n      }\n    );\n  }\n};\n\nexport type reportSettingsInterface = {\n  doneBy: string;\n  title: string;\n  subjectTitle: string;\n  subject: string;\n  institute: string;\n  period: string;\n  footer: string;\n  orientation?: \"p\" | \"l\";\n};\n\nexport const generatePDF = async (\n  reportSettings: reportSettingsInterface,\n  table: HTMLElement,\n  callBack: (status: boolean) => void\n) => {\n  callBack(true);\n  const orientation: \"p\" | \"l\" = reportSettings.orientation\n    ? reportSettings.orientation\n    : \"p\";\n  var lMargin: number = 20; //left margin in mm\n  var rMargin: number = 20; //right margin in mm\n  var pdfInMM: number = 185; // width of A4 in mm\n\n  //   var doc = new jsPDF(\"p\", \"mm\", \"a4\");\n  var doc: any = new jsPDF(orientation, \"mm\", \"a4\");\n\n  doc.setTextColor(95, 95, 95);\n  doc.setFontSize(28);\n  // doc.text(\n  //   this.props.reportTitle,\n  //   doc.internal.pageSize.getWidth() / 2,\n  //   30,\n  //   undefined,\n  //   \"center\"\n  // );\n  doc.addImage(Logo, \"png\", 20, 20, 10, 10);\n  doc.text(\"MINEDUC\", 32, 28.5, undefined, \"left\");\n  //   doc.setTextColor(19, 90, 152);\n  doc.setFontSize(26);\n  doc.text(\n    reportSettings.title,\n    doc.internal.pageSize.getWidth() / 2,\n    42.7,\n    undefined,\n    \"center\"\n  );\n\n  doc.setFontSize(20);\n  doc.text(\n    reportSettings.institute,\n    doc.internal.pageSize.getWidth() / 2,\n    53.7,\n    undefined,\n    \"center\"\n  );\n\n  var lines;\n  lines = doc.splitTextToSize(\n    reportSettings.subject,\n    pdfInMM - lMargin - rMargin\n  );\n  // if (reportSettings.position) {\n  // } else if (reportSettings.subject) {\n  //   lines = doc.splitTextToSize(\n  //     reportSettings.subject,\n  //     pdfInMM - lMargin - rMargin\n  //   );\n  // }\n\n  //   doc.setTextColor(0, 123, 255);\n  doc.setFontSize(16);\n  //   doc.text(lines, doc.internal.pageSize.getWidth() / 2, 45, {\n  //     maxWidth: 85,\n  //     align: \"center\",\n  //   });\n\n  var y = 63,\n    width;\n  doc.setTextColor(95, 95, 95);\n  doc.text(`${reportSettings.subjectTitle}: `, lMargin, y);\n  width = doc.getTextWidth(`${reportSettings.subjectTitle}: `);\n  // if (reportSettings.position) {\n  // } else if (reportSettings.position) {\n  //   doc.text(`Subject: `, lMargin, y);\n  //   width = doc.getTextWidth(\"Subject: \");\n  // }\n  // doc.setFontType(\"bold\");\n  doc.setTextColor(38, 38, 38);\n  for (var i = 0; i < lines.length; i++) {\n    if (y > 280) {\n      y = 10;\n      doc.addPage();\n    }\n    // doc.text(15, y, lines[i]);\n    doc.text(lines[i], lMargin + width, y);\n    y = y + 7;\n  }\n  doc.setTextColor(95, 95, 95);\n  doc.text(\"Period: \", lMargin, y + 3);\n  width = doc.getTextWidth(\"Period: \");\n  doc.setTextColor(38, 38, 38);\n  doc.text(reportSettings.period, lMargin + width, y + 3);\n\n  doc.autoTable({\n    html: table,\n    startY: 85,\n    margin: { horizontal: 20 },\n    cellPadding: 3, // Horizontal cell padding\n    // fontSize: 12,\n    rowHeight: 20,\n    // styles: { overflow: \"linebreak\" },\n    bodyStyles: { valign: \"top\" },\n    columnStyles: { email: { cellWidth: \"wrap\" } },\n    theme: \"striped\",\n    tableWidth: true,\n  });\n\n  doc.setFontSize(12);\n  let finalY = doc.lastAutoTable.finalY; // The y position on the page\n  doc.text(`Reported by: ${reportSettings.doneBy}`, lMargin, finalY + 15);\n  doc.text(\n    \"Report downloaded on \" + DATE(new Date().toString()),\n    lMargin,\n    finalY + 23\n  );\n\n  addFooters(doc);\n  await doc\n    .save(\n      `${\n        reportSettings.title +\n        \": \" +\n        reportSettings.subject +\n        \": \" +\n        reportSettings.period\n      }.pdf`,\n      { returnPromise: true }\n    )\n    .then(callBack(false));\n};\n","import React, { useState } from \"react\";\nimport {\n  MdCheckCircle,\n  MdRadioButtonUnchecked,\n  MdSearch,\n} from \"react-icons/md\";\nimport Loading from \"../../components/Loading/Loading\";\nimport {\n  PlansInterface,\n  SessionPlanInterface,\n  SessionPlanTypeStatus,\n} from \"../../interfaces\";\nimport { DATE } from \"../../utils/functions\";\nimport searchData from \"../../utils/search\";\n\nexport const isPlansActive = (plans: PlansInterface[]): PlansInterface[] => {\n  let today = new Date();\n  let activePlans: PlansInterface[] = [];\n  for (let plan of plans) {\n    let startDate = new Date(plan.start_date);\n    let endDate = new Date(plan.end_date);\n    if (\n      startDate.getTime() <= today.getTime() &&\n      endDate.getTime() >= today.getTime() &&\n      plan.type_status === SessionPlanTypeStatus.OPEN\n    ) {\n      activePlans = [...activePlans, plan];\n    }\n  }\n  return activePlans;\n};\n\ninterface ChooseSessionProps {\n  allSession: SessionPlanInterface[] | null;\n  setSelectSession: (period: SessionPlanInterface | \"all\") => void;\n  currentSelected: SessionPlanInterface | \"all\";\n  chooseAll: boolean;\n}\n\nconst ChooseSession = (props: ChooseSessionProps) => {\n  const [selectedPlan, setSelectedPlan] = useState<SessionPlanInterface | null>(\n    null\n  );\n  const [search, setSearch] = useState<string>(\"\");\n  const getSearch = (\n    period: SessionPlanInterface[],\n    searched: string\n  ): SessionPlanInterface[] => {\n    return searchData(period, searched) as SessionPlanInterface[];\n  };\n\n  return (\n    <div className=\"\">\n      <div className=\"px-3\">\n        <input\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n            setSearch(e.target.value)\n          }\n          type=\"text\"\n          className=\"py-3 px-4 w-full rounded border border-gray-400 mb-3\"\n          placeholder=\"Search by year, name\"\n          disabled={props.allSession === null || props.allSession.length === 0}\n        />\n      </div>\n\n      <div className=\"bg-gray-100 px-3 pt-3 pb-2 rounded-b\">\n        {props.allSession === null ? (\n          <Loading />\n        ) : props.allSession.length === 0 ? (\n          <div className=\"flex flex-col text-gray-400 items-center justify-center mb-2 bg-white py-4\">\n            <MdSearch className=\"text-6xl\" />\n            <div className=\"flex flex-col items-center justify-center\">\n              <span>No session found!</span>\n            </div>\n          </div>\n        ) : (\n          <section>\n            {props.chooseAll && (\n              <div\n                className={`rounded border ${\n                  props.currentSelected === \"all\"\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2 flex flex-col md:flex-row items-start md:items-center md:justify-between`}\n              >\n                <div className=\"flex flex-row items-center gap-3\">\n                  {props.currentSelected === \"all\" ? (\n                    <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                  ) : (\n                    <MdRadioButtonUnchecked\n                      className={`text-gray-300 text-4xl`}\n                    />\n                  )}\n                  <div className=\"flex flex-col\">\n                    <div className={`text-gray-600 font-bold`}>All session</div>\n                  </div>\n                </div>\n                <div\n                  onClick={() => {\n                    props.setSelectSession(\"all\");\n                  }}\n                  className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                >\n                  Select\n                </div>\n              </div>\n            )}\n            {getSearch(props.allSession, search).map((item, i) => (\n              <div\n                key={i + 1}\n                className={`rounded border ${\n                  props.currentSelected !== \"all\" &&\n                  props.currentSelected.session_plan_id === item.session_plan_id\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2`}\n              >\n                <div className=\"flex flex-col md:flex-row items-start md:items-center md:justify-between \">\n                  <div className=\"flex flex-row items-center gap-3\">\n                    {props.currentSelected !== \"all\" &&\n                    props.currentSelected.session_plan_id ===\n                      item.session_plan_id ? (\n                      <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                    ) : (\n                      <MdRadioButtonUnchecked\n                        className={`text-gray-300 text-4xl`}\n                      />\n                    )}\n                    <div className=\"flex flex-col\">\n                      <div\n                        className={`${\n                          props.currentSelected !== \"all\" &&\n                          props.currentSelected.session_plan_id ===\n                            item.session_plan_id\n                            ? \"text-blue-600\"\n                            : \"text-gray-600\"\n                        } font-bold`}\n                      >\n                        {item.session_plan_name}\n                      </div>\n                      <div className=\"text-sm text-gray-500\">\n                        <span>Status: </span>\n                        <span\n                          className={`${\n                            item.is_active === true\n                              ? \"text-gray-900 font-bold underline\"\n                              : \"text-gray-500 italic\"\n                          }`}\n                        >\n                          {item.is_active === true ? \"Active\" : \"Expired\"}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"flex flex-row items-center gap-2\">\n                    {(selectedPlan === null ||\n                      selectedPlan.session_plan_id !==\n                        item.session_plan_id) && (\n                      <div\n                        onClick={() => setSelectedPlan(item)}\n                        className=\"bg-gray-50 group-hover:bg-blue-100 font-semibold text-gray-400 group-hover:text-blue-600 rounded px-3 py-2 cursor-pointer\"\n                      >\n                        Details\n                      </div>\n                    )}\n                    <div\n                      onClick={() => {\n                        props.setSelectSession(item);\n                      }}\n                      className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                    >\n                      Select\n                    </div>\n                    {selectedPlan !== null &&\n                      selectedPlan.session_plan_id === item.session_plan_id && (\n                        <div\n                          onClick={() => setSelectedPlan(null)}\n                          className=\"bg-red-100 group-hover:bg-red-200 font-semibold text-red-600 group-hover:text-red-800 rounded px-3 py-2 cursor-pointer\"\n                        >\n                          Close\n                        </div>\n                      )}\n                  </div>\n                </div>\n                {selectedPlan !== null &&\n                  selectedPlan.session_plan_id === item.session_plan_id && (\n                    <div className=\"bg-white rounded border border-blue-50 mt-2 animate__animated animate__fadeIn\">\n                      <table className=\"w-full\">\n                        <thead className=\"bg-blue-50\">\n                          <tr className=\"text-left\">\n                            <th className=\"px-3 py-3\">#</th>\n                            <th>Plan</th>\n                            <th>Start date</th>\n                            <th>Ending date</th>\n                            <th>Status</th>\n                          </tr>\n                        </thead>\n                        <tbody className=\"text-sm\">\n                          {selectedPlan !== null &&\n                            selectedPlan.session_plan_id ===\n                              item.session_plan_id &&\n                            selectedPlan.plans.length > 0 &&\n                            item.plans.map((plan, i) => (\n                              <tr\n                                key={i + 1}\n                                className={`${\n                                  isPlansActive(item.plans).find(\n                                    (itm) => itm.type_key === plan.type_key\n                                  ) !== undefined\n                                    ? \"bg-blue-100 text-blue-600 font-bold\"\n                                    : \"\"\n                                } text-left border-b border-blue-50`}\n                              >\n                                <td className=\"px-3 py-1\">{i + 1}</td>\n                                <td>{plan.type_title}</td>\n                                <td>{DATE(plan.start_date, \"DD/MM/YYYY\")}</td>\n                                <td>{DATE(plan.end_date, \"DD/MM/YYYY\")}</td>\n                                <td>{plan.type_status}</td>\n                              </tr>\n                            ))}\n                        </tbody>\n                      </table>\n                    </div>\n                  )}\n              </div>\n            ))}\n          </section>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ChooseSession;\n","export default __webpack_public_path__ + \"static/media/profile.a9136072.png\";"],"sourceRoot":""}
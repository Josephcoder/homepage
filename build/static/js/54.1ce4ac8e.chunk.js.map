{"version":3,"sources":["assets/profile.png","components/ClaimForm/ClaimFormComponent.tsx","containers/ProfileDetails/EditProfileDetails.tsx","containers/ProfileDetails/Profile.tsx","containers/ProfileDetails/DocumentDetails.tsx","components/EditUserDocument/EditUserDocument.tsx","components/ChangePassword/ChangePassword.tsx","containers/ProfileDetails/DocumensList.tsx","components/PrintCV/PrintCV.tsx","containers/ProfileDetails/ProfileDetails.tsx"],"names":["ClaimFormComponent","props","isDocumentIdValid","documents","doc_id","doc","find","item","validated_by","validation_status","status","msg","alert","PopupAlertTheme","info","claiming","myClaims","state","activeSession","isClaimAllowed","session_plan_id","success","warning","isApplicationIdValid","applications","app_id","app","application_id","console","log","application_status","ApplicationStates","Rejected","setLoading","setState","loading","setLoadingForm","loadingForm","setFormError","data","formError","setAlertError","alertError","setClaimFileId","claimFileId","setViewThisFile","viewThisFile","setChooseClaimFile","chooseClaimFile","setClaimComment","claimComment","isClaimTypeOpen","thisSession","thisType","PlansTypeKeys","APPLICATION","plans","type_key","isPlanActive","DOCUMENT_VALIDATION","PLACEMENT_TRANSFER","isClaimBtnValid","file_id","claim_type","PushPopupAlert","title","theme","setFormState","thisClaimType","thisClaimTypeId","formType","displayClaimType","claimType","result","EXAMINATION","MARKS_PUBLICATION","isClaimsAllowed","thisPeriod","getMyClaims","auth","user","user_id","length","danger","claim","claiming_on_id","period_id","found_claim","componentDidMount","sessionPlan","activeSessionPlan","getActiveSessionPlan","_isClaimsAllowed","documentReducer","documentCategory","getDocumentCategory","documentSubCategory","getDocumentSubCategory","documentFields","getDocumentFields","candidateApplications","getMyRejectedApplications","_isApplicationIdValid","candidateDocuments","getMyRejectedDocuments","_isDocumentIdValid","getDocumentById","filter","getApplicationById","getValidation","thisId","old_reason","old_status","old_evaluated_by","comment","override_by","cleanToClose","handleSubmit","e","a","preventDefault","element","isEmptyOrSpaces","toLocaleLowerCase","setAxiosToken","axios","post","API","CLAIMING","reason","res","createClaim","error","errorToText","selectClaimType","thisClaim","generateChooseFileTitle","this","className","claims","map","itm","date_created","evaluation_comment","decision_taken_status","onSubmit","onClick","onChange","target","value","disabled","Object","values","index","capitalizeFirstLetter","replace","ClaimGetDocTitle","main","position","position_title","documentCategories","placeholder","style","resize","rows","type","thisDoc","thisApplication","Component","connect","document","GetClaimingTypes","getApplicationSessions","ErrorTarget","Profile","changePassword","editProfile","access_name","district_name","school_name","fname","lname","father_names","mother_names","sex","date_of_birth","place_of_birth","country_of_birth","district","email","n_id","phone_number","province","civil_status","village","cell","sector","src","ProfileImage","alt","DocumentDetails","category","sub_category","close","categories","sub_categories","Delete","Update","useState","openClaim","setOpenClaim","selectedCat","selectedSubCat","getCat","user_detail_category_id","category_id","undefined","sub_category_id","getSubCat","user_detail_subcategory_id","Modal","widthSizeClass","ModalSize","extraLarge","backDrop","backDropClose","displayClose","Themes","default","padding","body","footer","files","AUTH_FILES","category_subcategory_data","school","DocumentStatus","Approved","description","company","names","start_year","end_year","year","education_category_id","education_category_title","district_id","ErrorType","_EditProfileDetails","handleChange","none","currentTarget","name","updateAccountHandler","validateEmail","FC_UpdateProfile","main_success","main__error","medium","htmlFor","required","React","EditProfileDetails","_EditUserDocument","submitHandler","userDocument","fields_access","fields","toLowerCase","includes","FC_EditUserDocument","main_error","inputChangeHandler","Alert","AlertInterface","readOnly","EditUserDocument","_ChangePassword","uppercase","hasUppercase","lowercase","hasLowercase","special","hasSpecialcase","number","hasNumber","PASSWORD_MIN_LENGTH","PASSWORD_MAX_LENGTH","old_password","password_validation","new_password","re_new_password","FC_ChangePassword","ValidationDesign","ChangePassword","DocumentsList","selected_category","selected_sub_category","selectDoc","addNewDoc","documents_list","i","category_itm","sub_category_itm","colorBackground","colorBorder","Waiting","PrintCV","documentTypes","id","width","sub_cat_check","EDUCATION_CATEGORY_ID","sub_cat","cat","sub_categories_list","_ProfileDetails","CvRef","FC_GetProfileDetails","User_access","FC_Access","UserAccessList","do_exam","categoryHandler","subCategoryHandler","selectDocHandler","selected_doc","editDocHandler","edit_doc","addNewDocHandler","prevState","create_new_doc","deleteDocHandler","window","confirm","FC_DeleteDocument","updateDocHandler","update_doc","changePasswordHadler","updateProfileHandler","updateProfile","sideNavHandler","side_nav","openCB_Toogle","printCV","createRef","document_types","category_with_counts","count","SideNavigation","active","AddUserDocument","user_access","role","PureComponent","ProfileDetails"],"mappings":"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","file":"static/js/54.1ce4ac8e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/profile.a9136072.png\";","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../actions\";\nimport {\n  createClaim,\n  DocumentClaimUser,\n  GetClaimingTypes,\n  getMyClaims,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n} from \"../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../actions/document\";\nimport { getActiveSessionPlan } from \"../../actions/session\";\nimport { getApplicationSessions } from \"../../actions/settings\";\nimport { PopupAlertData } from \"../Alert/Popup\";\nimport ApplicationFormView from \"../../containers/Claimings/Candidate/ApplicationFormView\";\nimport {\n  isClaimAllowed,\n  ClaimGetDocTitle,\n} from \"../../containers/Claimings/Candidate/ClaimForm\";\nimport DocFormView from \"../../containers/Claimings/Candidate/DocFormView\";\nimport FormApplicationList from \"../../containers/Claimings/Candidate/FormApplicationList\";\nimport FormDocumentList from \"../../containers/Claimings/Candidate/FormDocumentList\";\nimport { isPlanActive } from \"../../containers/SessionSettings/SessionDetails\";\nimport {\n  PlansTypeKeys,\n  SessionPlanInterface,\n  claimApplicationsInterface,\n  PlansInterface,\n  CandidateClaimInterface,\n} from \"../../interfaces\";\nimport { ApplicationStates } from \"../../interfaces/application\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { ClaimingReducerType } from \"../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../reducers/document\";\nimport { SessionPlanReducerInterface } from \"../../reducers/session\";\nimport { isEmptyOrSpaces, capitalizeFirstLetter } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { errorToText } from \"../../utils/errors\";\n\ntype ClaimFormProps = {\n  // FOR SHORTCUT BUTTONS CALL\n  // REQUIRED PROPS\n  claim_type: PlansTypeKeys;\n  file_id: string;\n  setFormState: (value: boolean, response?: boolean) => void;\n  auth: Auth;\n  sessionPlan: SessionPlanReducerInterface;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  getActiveSessionPlan: Function;\n  createClaim: Function;\n  GetClaimingTypes: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  getMyRejectedApplications: Function;\n  getMyRejectedDocuments: Function;\n  getMyClaims: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype ClaimFormState = {\n  loading: boolean;\n  loadingForm: boolean;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  thisClaimType: PlansTypeKeys | null;\n  thisClaimTypeId: string;\n  claimComment: string;\n  claimFileId: string;\n  chooseClaimFile: boolean;\n  viewThisFile: string;\n  formType: \"DEFAULT\" | \"PROPS\";\n  alertError: string | null;\n  activeSession: SessionPlanInterface | null;\n  found_claim: CandidateClaimInterface | null;\n};\n\nclass ClaimFormComponent extends Component<ClaimFormProps, ClaimFormState> {\n  constructor(props: ClaimFormProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingForm: false,\n      formError: null,\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      claimFileId: \"\",\n      chooseClaimFile: false,\n      viewThisFile: \"\",\n      formType: \"DEFAULT\",\n      alertError: null,\n      activeSession: null,\n      found_claim: null,\n    };\n  }\n\n  isDocumentIdValid = (\n    documents: DocumentClaimUser[],\n    doc_id: string\n  ): {\n    status: boolean;\n    msg: string;\n    alert: PopupAlertTheme;\n  } => {\n    let doc = documents.find((item) => item.doc_id === doc_id);\n    if (doc) {\n      // CHECK IF DOCUMENT HAS REJECTED STATUS\n      if (doc.validated_by.validation_status !== \"rejected\") {\n        return {\n          status: false,\n          msg: \"Only rejected document are allowed for claim\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n      // CHECK IF DOCUMENT HAS ALREADY CLAIMED ON\n      if (\n        this.props.claiming.myClaims &&\n        this.state.activeSession &&\n        isClaimAllowed(\n          this.props.claiming.myClaims,\n          this.state.activeSession.session_plan_id,\n          doc_id\n        )\n      ) {\n        return {\n          status: false,\n          msg: \"This document already in claiming list!\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n      return { status: true, msg: \"\", alert: PopupAlertTheme.success };\n    } else {\n      return {\n        status: false,\n        msg: \"Invalid document id\",\n        alert: PopupAlertTheme.warning,\n      };\n    }\n    // return {\n    //   status: false,\n    //   msg: \"No Documents, please try again\",\n    //   alert: PopupAlertTheme.info,\n    // };\n  };\n\n  isApplicationIdValid = (\n    applications: claimApplicationsInterface[],\n    app_id: string\n  ): {\n    status: boolean;\n    msg: string;\n    alert: PopupAlertTheme;\n  } => {\n    let app = applications.find((item) => item.application_id === app_id);\n    console.log(\"====================================\");\n    console.log({ app, app_id });\n    console.log(\"====================================\");\n    if (app) {\n      // CHECK IF DOCUMENT HAS REJECTED STATUS\n      if (app.application_status !== ApplicationStates.Rejected) {\n        return {\n          status: false,\n          msg: \"Only rejected application are allowed for claim\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n      // CHECK IF DOCUMENT HAS ALREADY CLAIMED ON\n      if (\n        this.props.claiming.myClaims &&\n        this.state.activeSession &&\n        isClaimAllowed(\n          this.props.claiming.myClaims,\n          this.state.activeSession.session_plan_id,\n          app.application_id\n        )\n      ) {\n        return {\n          status: false,\n          msg: \"This application already in claiming list!\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n      return { status: true, msg: \"\", alert: PopupAlertTheme.info };\n    } else {\n      return {\n        status: false,\n        msg: \"Invalid application id\",\n        alert: PopupAlertTheme.warning,\n      };\n    }\n    // return {\n    //   status: false,\n    //   msg: \"No Application, please try again!\",\n    //   alert: PopupAlertTheme.info,\n    // };\n  };\n\n  setLoading = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  setLoadingForm = (state: boolean) => {\n    this.setState({ loadingForm: state });\n  };\n\n  setFormError = (\n    data: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: data });\n  };\n\n  setAlertError = (data: string | null) => {\n    this.setState({ alertError: data });\n  };\n\n  setClaimFileId = (data: string) => {\n    this.setState({ claimFileId: data });\n  };\n\n  setViewThisFile = (data: string) => {\n    this.setState({ viewThisFile: data });\n  };\n\n  setChooseClaimFile = (data: boolean) => {\n    this.setState({ chooseClaimFile: data });\n  };\n\n  setClaimComment = (data: string) => {\n    this.setState({ claimComment: data });\n  };\n\n  isClaimTypeOpen = (\n    thisSession: SessionPlanInterface,\n    thisType: PlansTypeKeys\n  ): boolean => {\n    let data: PlansInterface | undefined;\n    if (thisType === PlansTypeKeys.APPLICATION) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.APPLICATION\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    } else if (thisType === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.DOCUMENT_VALIDATION\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    } else if (thisType === PlansTypeKeys.PLACEMENT_TRANSFER) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.PLACEMENT_TRANSFER\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  isClaimBtnValid = (thisSession: SessionPlanInterface) => {\n    if (this.props.file_id || this.props.claim_type) {\n      // CHECK IF CLAIM TYPE && CLAIM FILE PROPS ARE PASSED PROPS\n      if (!this.props.claim_type) {\n        this.props.PushPopupAlert({\n          title: \"Claim type is required!\",\n          theme: PopupAlertTheme.warning,\n        });\n        this.props.setFormState(false);\n        this.setState({\n          claimFileId: \"\",\n          thisClaimType: null,\n          thisClaimTypeId: \"\",\n          claimComment: \"\",\n          chooseClaimFile: false,\n          formType: \"DEFAULT\",\n          viewThisFile: \"\",\n          formError: null,\n        });\n      } else if (!this.props.file_id) {\n        this.props.PushPopupAlert({\n          title: \"Claim file is required!\",\n          theme: PopupAlertTheme.warning,\n        });\n        this.props.setFormState(false);\n        this.setState({\n          claimFileId: \"\",\n          thisClaimType: null,\n          thisClaimTypeId: \"\",\n          claimComment: \"\",\n          chooseClaimFile: false,\n          formType: \"DEFAULT\",\n          viewThisFile: \"\",\n          formError: null,\n        });\n      } else if (!this.isClaimTypeOpen(thisSession, this.props.claim_type)) {\n        // IF CLAIM TYPE && CLAIM FILE PROPS ARE PASSED PROPS\n        // CHECK IF CLAIM TYPE IS OPEN ================\n        this.props.PushPopupAlert({\n          title: \"Claim type is closed!\",\n          theme: PopupAlertTheme.warning,\n        });\n        this.props.setFormState(false);\n        this.setState({\n          claimFileId: \"\",\n          thisClaimType: null,\n          thisClaimTypeId: \"\",\n          claimComment: \"\",\n          chooseClaimFile: false,\n          formType: \"DEFAULT\",\n          viewThisFile: \"\",\n          formError: null,\n        });\n      }\n    }\n  };\n\n  displayClaimType = (claimType: PlansTypeKeys): string => {\n    let result: string = \"\";\n    switch (claimType) {\n      case PlansTypeKeys.APPLICATION:\n        result = \"application\";\n        break;\n      case PlansTypeKeys.DOCUMENT_VALIDATION:\n        result = \"document\";\n        break;\n      case PlansTypeKeys.EXAMINATION:\n        result = \"exam\";\n        break;\n      case PlansTypeKeys.MARKS_PUBLICATION:\n        result = \"marks publication\";\n        break;\n      case PlansTypeKeys.PLACEMENT_TRANSFER:\n        result = \"placement\";\n        break;\n      default:\n        result = \"\";\n        break;\n    }\n\n    return result;\n  };\n\n  isClaimsAllowed = (\n    thisPeriod: SessionPlanInterface\n  ): {\n    status: boolean;\n    msg: string;\n    alert: PopupAlertTheme;\n  } => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (\n      this.props.claiming.myClaims === null &&\n      this.props.file_id &&\n      this.props.claim_type\n    ) {\n      this.props.getMyClaims(\n        this.props.auth.user.user_id,\n        thisPeriod.session_plan_id,\n        (status: boolean, msg: string, data?: CandidateClaimInterface[]) => {\n          // !status && setLoadingClaims(status);\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          if (data) {\n            let claim = data.find(\n              (item) =>\n                item.claiming_on_id === this.props.file_id &&\n                item.period_id === thisPeriod.session_plan_id\n            );\n            if (claim) {\n              this.setState({ found_claim: claim });\n              return {\n                status: true,\n                msg: `You have already claimed on this ${this.displayClaimType(\n                  this.props.claim_type!\n                )}`,\n                alert: PopupAlertTheme.info,\n              };\n            }\n          }\n        }\n      );\n    } else if (\n      this.props.claiming.myClaims &&\n      this.props.file_id &&\n      this.props.claim_type\n    ) {\n      let claim = this.props.claiming.myClaims.find(\n        (item) =>\n          item.claiming_on_id === this.props.file_id &&\n          item.period_id === thisPeriod.session_plan_id\n      );\n      if (claim) {\n        this.setState({ found_claim: claim });\n\n        return {\n          status: true,\n          msg: `You have already claimed on this ${this.displayClaimType(\n            this.props.claim_type!\n          )}`,\n          alert: PopupAlertTheme.info,\n        };\n      }\n    }\n\n    return {\n      status: true,\n      msg: \"\",\n      alert: PopupAlertTheme.success,\n    };\n  };\n\n  componentDidMount = () => {\n    if (\n      this.props.sessionPlan.activeSessionPlan === null ||\n      this.props.sessionPlan.activeSessionPlan === \"none\"\n    ) {\n      this.props.getActiveSessionPlan(\n        (status: boolean, msg: string, data: SessionPlanInterface | \"none\") => {\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          if (data && data === \"none\") {\n            this.props.PushPopupAlert({\n              title: \"No session active session\",\n              theme: PopupAlertTheme.danger,\n            });\n            this.props.setFormState(false);\n            this.setState({\n              claimFileId: \"\",\n              thisClaimType: null,\n              thisClaimTypeId: \"\",\n              claimComment: \"\",\n              chooseClaimFile: false,\n              formType: \"DEFAULT\",\n              viewThisFile: \"\",\n              formError: null,\n            });\n          } else if (data) {\n            let _isClaimsAllowed = this.isClaimsAllowed(data);\n            if (!_isClaimsAllowed.status) {\n              this.props.PushPopupAlert({\n                title: _isClaimsAllowed.msg,\n                theme: _isClaimsAllowed.alert,\n              });\n            }\n            // this.props.setFormState(false);\n            this.setState({ activeSession: data });\n            this.isClaimBtnValid(data);\n          }\n        }\n      );\n    } else {\n      this.setState({\n        activeSession: this.props.sessionPlan.activeSessionPlan,\n      });\n      this.isClaimBtnValid(this.props.sessionPlan.activeSessionPlan);\n      let _isClaimsAllowed = this.isClaimsAllowed(\n        this.props.sessionPlan.activeSessionPlan\n      );\n      if (!_isClaimsAllowed.status) {\n        this.props.PushPopupAlert({\n          title: _isClaimsAllowed.msg,\n          theme: _isClaimsAllowed.alert,\n        });\n        this.props.setFormState(false);\n      }\n      this.setLoading(false);\n    }\n\n    if (this.props.documentReducer.documentCategory === null) {\n      this.props.getDocumentCategory();\n    }\n    if (this.props.documentReducer.documentSubCategory === null) {\n      this.props.getDocumentSubCategory();\n    }\n    if (this.props.documentReducer.documentFields === null) {\n      this.props.getDocumentFields();\n    }\n\n    if (this.props.claiming.candidateApplications === null) {\n      this.props.getMyRejectedApplications(\n        this.props.auth.user.user_id,\n        (status: boolean, msg: string, data?: claimApplicationsInterface[]) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data) {\n              // PROPS VALIDATION PROCESS ###############\n              if (\n                this.props.claim_type &&\n                this.props.file_id &&\n                this.state.formType === \"DEFAULT\"\n              ) {\n                if (this.props.claim_type === PlansTypeKeys.APPLICATION) {\n                  let _isApplicationIdValid = this.isApplicationIdValid(\n                    data,\n                    this.props.file_id\n                  );\n                  if (!_isApplicationIdValid.status) {\n                    this.props.PushPopupAlert({\n                      title: _isApplicationIdValid.msg,\n                      theme: _isApplicationIdValid.alert,\n                    });\n                    this.props.setFormState(false);\n                  } else {\n                    this.setState({\n                      thisClaimType: this.props.claim_type,\n                      claimFileId: this.props.file_id,\n                      formType: \"PROPS\",\n                    });\n                  }\n                }\n              }\n            }\n          }\n        }\n      );\n    }\n\n    if (this.props.claiming.candidateDocuments === null) {\n      this.props.getMyRejectedDocuments(\n        (status: boolean, msg: string, data?: DocumentClaimUser[]) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data) {\n              // PROPS VALIDATION PROCESS ###############\n              if (\n                this.props.claim_type &&\n                this.props.file_id &&\n                this.state.formType === \"DEFAULT\"\n              ) {\n                if (\n                  this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION\n                ) {\n                  let _isDocumentIdValid = this.isDocumentIdValid(\n                    data,\n                    this.props.file_id\n                  );\n                  if (!_isDocumentIdValid.status) {\n                    this.props.PushPopupAlert({\n                      title: _isDocumentIdValid.msg,\n                      theme: _isDocumentIdValid.alert,\n                    });\n                    // setAlertError(_isDocumentIdValid.msg);\n                    this.props.setFormState(false);\n                  } else {\n                    this.setState({\n                      thisClaimType: this.props.claim_type,\n                      claimFileId: this.props.file_id,\n                      formType: \"PROPS\",\n                    });\n                  }\n                }\n              }\n            }\n          }\n        }\n      );\n    }\n\n    // PROPS VALIDATION PROCESS ###############\n    if (\n      this.props.claim_type &&\n      this.props.file_id &&\n      this.state.formType === \"DEFAULT\"\n    ) {\n      this.setState({ thisClaimType: this.props.claim_type });\n      if (\n        this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION &&\n        this.props.claiming.candidateDocuments\n      ) {\n        let _isDocumentIdValid = this.isDocumentIdValid(\n          this.props.claiming.candidateDocuments,\n          this.props.file_id\n        );\n        if (!_isDocumentIdValid.status) {\n          this.props.PushPopupAlert({\n            title: _isDocumentIdValid.msg,\n            theme: _isDocumentIdValid.alert,\n          });\n          // setAlertError(_isDocumentIdValid.msg);\n          this.props.setFormState(false);\n        } else {\n          this.setState({\n            thisClaimType: this.props.claim_type,\n            claimFileId: this.props.file_id,\n            formType: \"PROPS\",\n          });\n        }\n      }\n      if (\n        this.props.claim_type === PlansTypeKeys.APPLICATION &&\n        this.props.claiming.candidateApplications\n      ) {\n        let _isApplicationIdValid = this.isApplicationIdValid(\n          this.props.claiming.candidateApplications,\n          this.props.file_id\n        );\n        if (!_isApplicationIdValid.status) {\n          this.props.PushPopupAlert({\n            title: _isApplicationIdValid.msg,\n            theme: _isApplicationIdValid.alert,\n          });\n          this.props.setFormState(false);\n        } else {\n          this.setState({\n            thisClaimType: this.props.claim_type,\n            claimFileId: this.props.file_id,\n            formType: \"PROPS\",\n          });\n        }\n      }\n    }\n  };\n\n  getDocumentById = (\n    documents: DocumentClaimUser[],\n    doc_id: string\n  ): DocumentClaimUser => {\n    return documents.filter((item) => item.doc_id === doc_id)[0];\n  };\n\n  getApplicationById = (\n    applications: claimApplicationsInterface[],\n    application_id: string\n  ): claimApplicationsInterface => {\n    return applications.filter(\n      (item) => item.application_id === application_id\n    )[0];\n  };\n\n  getValidation = (\n    thisId: string\n  ): {\n    old_reason: string;\n    old_status: string;\n    old_evaluated_by: string;\n  } => {\n    let result: {\n      old_reason: string;\n      old_status: string;\n      old_evaluated_by: string;\n    } = { old_reason: \"\", old_status: \"\", old_evaluated_by: \"\" };\n\n    if (\n      this.state.thisClaimType === PlansTypeKeys.DOCUMENT_VALIDATION &&\n      this.props.claiming.candidateDocuments\n    ) {\n      result = {\n        old_reason: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.comment,\n        old_status: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.validation_status,\n        old_evaluated_by: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.user_id,\n      };\n    } else if (\n      this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n      this.props.claiming.candidateApplications\n    ) {\n      result = {\n        old_reason: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.comment,\n        old_status: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.application_status,\n        old_evaluated_by: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.user_id,\n      };\n    }\n\n    return result;\n  };\n\n  cleanToClose = () => {\n    this.props.setFormState(false);\n    this.setState({\n      claimFileId: \"\",\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      chooseClaimFile: false,\n      formType: \"DEFAULT\",\n      viewThisFile: \"\",\n      formError: null,\n    });\n  };\n\n  handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!this.state.thisClaimType) {\n      return this.setFormError({\n        element: \"claim_type\",\n        msg: \"Claim type is required!\",\n      });\n    }\n    if (isEmptyOrSpaces(this.state.claimFileId)) {\n      return this.setFormError({\n        element: \"claim_file\",\n        msg: `Please select ${this.state.thisClaimType.toLocaleLowerCase()} you are claiming on!`,\n      });\n    }\n    if (isEmptyOrSpaces(this.state.claimComment)) {\n      return this.setFormError({\n        element: \"claim_comment\",\n        msg: `Claim comment is required!`,\n      });\n    }\n\n    if (!this.state.activeSession) {\n      return this.setAlertError(`No active claiming session is available!`);\n    }\n\n    this.setLoadingForm(true);\n    try {\n      setAxiosToken();\n      const res = await axios.post<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/create`,\n        {\n          claiming_on_id: this.state.claimFileId,\n          type_key: this.state.thisClaimType,\n          user: this.props.auth.user.user_id,\n          period_id: this.state.activeSession.session_plan_id,\n          reason: this.state.claimComment,\n          old_reason: this.getValidation(this.state.claimFileId).old_reason,\n          old_status: this.getValidation(this.state.claimFileId).old_status,\n          old_evaluated_by: this.getValidation(this.state.claimFileId)\n            .old_evaluated_by,\n        }\n      );\n      console.log({ createClaim: res.data });\n      if (res.status === 201 || res.status === 200) {\n        this.props.createClaim(res.data);\n        this.props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        this.cleanToClose();\n        this.props.setFormState(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.props.setFormState(false);\n    this.setLoadingForm(false);\n  };\n\n  selectClaimType = (thisClaim: string) => {\n    this.setState({\n      thisClaimType: isEmptyOrSpaces(thisClaim)\n        ? null\n        : (thisClaim as PlansTypeKeys),\n    });\n  };\n\n  generateChooseFileTitle = (thisClaimType: PlansTypeKeys | null): string => {\n    let result: string = \"\";\n\n    switch (thisClaimType) {\n      case PlansTypeKeys.APPLICATION:\n        result = `Select application you are claiming on?`;\n        break;\n      case PlansTypeKeys.DOCUMENT_VALIDATION:\n        result = `Select document you are claiming on?`;\n        break;\n      case PlansTypeKeys.EXAMINATION:\n        result = `Select exam you are claiming on?`;\n        break;\n      case PlansTypeKeys.MARKS_PUBLICATION:\n        result = `Select marks publication you are claiming on?`;\n        break;\n      case PlansTypeKeys.PLACEMENT_TRANSFER:\n        result = `Select placement you are claiming on?`;\n        break;\n      default:\n        result = \"Select file you are claiming on?\";\n        break;\n    }\n\n    return result;\n  };\n\n  render() {\n    if (this.state.found_claim !== null) {\n      return (\n        <div>\n          <h2 className=\"text-center text-2xl font-bold p-3 text-gray-500\">\n            Claims on this {this.displayClaimType(this.props.claim_type!)}\n          </h2>\n          {this.state.found_claim.claims.length >= 1 ? (\n            <div>\n              {this.state.found_claim.claims.map((itm) => (\n                <div className=\"p-2 border rounded mb-2\">\n                  <div className=\"p-1 border-b\">\n                    <span className=\"text-gray-400\">Created date:</span>{\" \"}\n                    <b>{itm.date_created}</b>\n                  </div>\n                  <div className=\"p-1 border-b\">\n                    <span className=\"text-gray-400\">Reason:</span>{\" \"}\n                    <p>{itm.reason}</p>\n                  </div>\n                  <div className=\"p-1 border-b\">\n                    <span className=\"text-gray-400\">Evaluation comment:</span>{\" \"}\n                    <p>{itm.evaluation_comment}</p>\n                  </div>\n                  <div className=\"p-1\">\n                    <span className=\"text-gray-400 block\">decision:</span>{\" \"}\n                    <h3 className=\"text-xl font-bold\">\n                      {itm.decision_taken_status}\n                    </h3>\n                  </div>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div>No claims found!</div>\n          )}\n        </div>\n      );\n    }\n\n    if (\n      this.state.loading ||\n      this.state.activeSession === null ||\n      (this.props.claiming.myClaims === null &&\n        this.props.file_id &&\n        this.props.claim_type)\n    ) {\n      return null;\n    }\n    return (\n      <div className=\"pb-3\">\n        {/* CLAIM FORM ============================================== */}\n        {this.state.viewThisFile.length <= 0 && (\n          <form onSubmit={(e) => this.handleSubmit(e)}>\n            <div className=\"px-6 pb-3\">\n              {this.state.alertError && (\n                <div\n                  className=\"alert-warning cursor-pointer\"\n                  onClick={() => this.setAlertError(null)}\n                >\n                  {this.state.alertError}\n                </div>\n              )}\n              <div className=\"text-base text-gray-700 sm:text-lg\">\n                {/* SELECT CLAIM TYPE ============================================== */}\n                <div className=\"flex flex-col mb-2\">\n                  <label>Claim type</label>\n                  <select\n                    className={`rounded px-2 py-2 w-full bg-white focus:outline-none ${\n                      this.state.formType === \"PROPS\" && \"cursor-not-allowed\"\n                    } ${\n                      this.state.formError &&\n                      this.state.formError.element === \"claim_type\"\n                        ? \"border-red-500\"\n                        : \"border-gray-500\"\n                    } border-2`}\n                    onChange={(e: React.ChangeEvent<HTMLSelectElement>) => {\n                      this.selectClaimType(e.target.value);\n                      this.setClaimFileId(\"\");\n                      this.state.formError &&\n                        this.state.formError.element === \"claim_type\" &&\n                        this.setFormError(null);\n                    }}\n                    value={\n                      this.state.thisClaimType ? this.state.thisClaimType : \"\"\n                    }\n                    disabled={\n                      this.state.loadingForm || this.state.formType === \"PROPS\"\n                    }\n                  >\n                    <option value=\"\">Choose claim type</option>\n                    {Object.values(PlansTypeKeys).map((item, index) => (\n                      <option value={item} key={index + item}>\n                        {capitalizeFirstLetter(\n                          item.toLocaleLowerCase().replace(/_/g, \" \")\n                        )}\n                      </option>\n                    ))}\n                  </select>\n                  {this.state.formError &&\n                    this.state.formError.element === \"claim_type\" && (\n                      <span className=\"text-red-500\">\n                        {this.state.formError.msg}\n                      </span>\n                    )}\n                </div>\n                {/* END SELECT CLAIM TYPE ============================================== */}\n\n                {/* SELECT FILE TO CLAIM ON ============================================== */}\n                <div className=\"flex flex-col mb-2\">\n                  <label>\n                    {this.generateChooseFileTitle(this.state.thisClaimType)}\n                  </label>\n                  <div\n                    className={`text-left bg-white border-2 ${\n                      this.state.formType !== \"PROPS\"\n                        ? \"border-gray-700\"\n                        : \"border-gray-400 text-gray-500\"\n                    } rounded w-full ${\n                      this.state.chooseClaimFile ? \"h-64\" : \"h-10\"\n                    } ${\n                      this.state.formError &&\n                      this.state.formError.element === \"claim_file\"\n                        ? \"border-red-500\"\n                        : \"\"\n                    } border-2 ${\n                      this.state.thisClaimType &&\n                      !this.state.chooseClaimFile &&\n                      this.state.formType !== \"PROPS\"\n                        ? \"cursor-pointer\"\n                        : !this.state.chooseClaimFile && \"cursor-not-allowed\"\n                    }`}\n                    title={\n                      !this.state.thisClaimType\n                        ? \"Choose claim type first!\"\n                        : \"\"\n                    }\n                    onClick={() => {\n                      this.state.formType === \"DEFAULT\" &&\n                        this.state.thisClaimType &&\n                        !this.state.chooseClaimFile &&\n                        this.setChooseClaimFile(true);\n                      this.state.formError &&\n                        this.state.formError.element === \"claim_file\" &&\n                        this.setFormError(null);\n                    }}\n                  >\n                    {/* DISPLAYING FILTERED SELECTING FILE ============================ */}\n                    {this.state.claimFileId.length > 0 &&\n                    !this.state.chooseClaimFile ? (\n                      <p className=\"my-1 mx-2\">\n                        {this.state.thisClaimType ===\n                          PlansTypeKeys.DOCUMENT_VALIDATION &&\n                          this.props.claiming.candidateDocuments &&\n                          ClaimGetDocTitle(\n                            this.props.documentReducer,\n                            this.getDocumentById(\n                              this.props.claiming.candidateDocuments,\n                              this.state.claimFileId\n                            )\n                          ).main}\n                        {this.state.thisClaimType ===\n                          PlansTypeKeys.APPLICATION &&\n                          this.props.claiming.candidateApplications &&\n                          this.getApplicationById(\n                            this.props.claiming.candidateApplications,\n                            this.state.claimFileId\n                          ).position.position_title}\n                      </p>\n                    ) : (\n                      !this.state.chooseClaimFile && (\n                        <p className=\"my-1 mx-2\">\n                          Select Claim{\" \"}\n                          {this.state.thisClaimType &&\n                            this.state.thisClaimType\n                              .toLocaleLowerCase()\n                              .replace(/_/g, \" \")}\n                        </p>\n                      )\n                    )}\n                    {/* END DISPLAYING FILTERED SELECTING FILE ============================ */}\n\n                    {/* LISTING OF REJECTED DOCUMENTS ============================ */}\n                    {this.state.chooseClaimFile &&\n                      this.state.thisClaimType ===\n                        PlansTypeKeys.DOCUMENT_VALIDATION &&\n                      this.props.claiming.candidateDocuments &&\n                      this.props.claiming.myClaims &&\n                      this.props.sessionPlan.activeSessionPlan &&\n                      this.props.sessionPlan.activeSessionPlan !== \"none\" && (\n                        <FormDocumentList\n                          setChooseClaimFile={this.setChooseClaimFile}\n                          setClaimFileId={this.setClaimFileId}\n                          setViewThisFile={this.setViewThisFile}\n                          viewThisFile={this.state.viewThisFile}\n                          candidateDocuments={\n                            this.props.claiming.candidateDocuments\n                          }\n                          documentCategories={this.props.documentReducer}\n                          myClaims={this.props.claiming.myClaims}\n                          activeSession={\n                            this.props.sessionPlan.activeSessionPlan\n                          }\n                        />\n                      )}\n                    {/* END LISTING OF REJECTED DOCUMENTS ============================ */}\n                    {/* LISTING OF REJECTED APPLICATION ============================ */}\n                    {this.state.chooseClaimFile &&\n                      this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n                      this.props.claiming.candidateApplications &&\n                      this.props.claiming.myClaims &&\n                      this.props.sessionPlan.activeSessionPlan &&\n                      this.props.sessionPlan.activeSessionPlan !== \"none\" && (\n                        <FormApplicationList\n                          setChooseClaimFile={this.setChooseClaimFile}\n                          setClaimFileId={this.setClaimFileId}\n                          setViewThisFile={this.setViewThisFile}\n                          viewThisFile={this.state.viewThisFile}\n                          candidateApplications={\n                            this.props.claiming.candidateApplications\n                          }\n                          myClaims={this.props.claiming.myClaims}\n                          activeSession={\n                            this.props.sessionPlan.activeSessionPlan\n                          }\n                        />\n                      )}\n                    {/* END LISTING OF REJECTED APPLICATION ============================ */}\n                  </div>\n                  {this.state.formError &&\n                    this.state.formError.element === \"claim_file\" && (\n                      <span className=\"text-red-500\">\n                        {this.state.formError.msg}\n                      </span>\n                    )}\n                </div>\n                {/* END SELECT FILE TO CLAIM ON ============================================== */}\n\n                {/* CLAIM COMMENT ============================================== */}\n                <div className=\"flex flex-col\">\n                  <label>Comment</label>\n                  <textarea\n                    className={`text-left input-white w-20 inline-block ${\n                      this.state.formError &&\n                      this.state.formError.element === \"claim_comment\"\n                        ? \"border-red-500\"\n                        : \"border-gray-500\"\n                    } border-2`}\n                    placeholder={`Claim comment`}\n                    style={{ resize: \"none\" }}\n                    value={this.state.claimComment}\n                    onChange={(e) => {\n                      this.setClaimComment(e.target.value);\n                      this.state.formError &&\n                        this.state.formError.element === \"claim_comment\" &&\n                        this.setFormError(null);\n                    }}\n                    rows={3}\n                    disabled={this.state.loadingForm}\n                  ></textarea>\n                  {this.state.formError &&\n                    this.state.formError.element === \"claim_comment\" && (\n                      <span className=\"text-red-500\">\n                        {this.state.formError.msg}\n                      </span>\n                    )}\n                </div>\n                {/* END CLAIM COMMENT ============================================== */}\n              </div>\n              <div className=\"pt-3 flex justify-between\">\n                <button\n                  onClick={() => this.cleanToClose()}\n                  className={`btn bg-gray-400 text-white hover:bg-gray-600 focus:outline-none ${\n                    this.state.loadingForm && \"cursor-not-allowed\"\n                  }`}\n                  type=\"button\"\n                  disabled={this.state.loadingForm}\n                >\n                  Exit\n                </button>\n                <button\n                  className={`btn bg-primary text-white hover:bg-blue-600 focus:outline-none ${\n                    this.state.loadingForm && \"cursor-wait\"\n                  }`}\n                  type=\"submit\"\n                  disabled={this.state.loadingForm}\n                >\n                  {this.state.loadingForm ? \"Loading...\" : \"Claim\"}\n                </button>\n              </div>\n            </div>\n          </form>\n        )}\n        {/* END CLAIM FORM ============================================== */}\n\n        {/* CLAIM DOCUMENT VIEW ============================================== */}\n        {this.state.viewThisFile.length > 0 &&\n          this.props.claiming.candidateDocuments &&\n          this.state.thisClaimType === PlansTypeKeys.DOCUMENT_VALIDATION && (\n            <DocFormView\n              thisDoc={this.getDocumentById(\n                this.props.claiming.candidateDocuments,\n                this.state.viewThisFile\n              )}\n              setViewThisFile={this.setViewThisFile}\n              documentCategories={this.props.documentReducer}\n              setChooseClaimFile={this.setChooseClaimFile}\n              setClaimFileId={this.setClaimFileId}\n            />\n          )}\n        {/* END CLAIM DOCUMENT VIEW ============================================== */}\n        {/* CLAIM APPLICATION VIEW ============================================== */}\n        {this.state.viewThisFile.length > 0 &&\n          this.props.claiming.candidateApplications &&\n          this.state.thisClaimType === PlansTypeKeys.APPLICATION && (\n            <ApplicationFormView\n              thisApplication={this.getApplicationById(\n                this.props.claiming.candidateApplications,\n                this.state.viewThisFile\n              )}\n              documentCategories={this.props.documentReducer}\n              setChooseClaimFile={this.setChooseClaimFile}\n              setClaimFileId={this.setClaimFileId}\n              setViewThisFile={this.setViewThisFile}\n            />\n          )}\n        {/* END CLAIM APPLICATION VIEW ============================================== */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  document,\n  claiming,\n  sessionPlan,\n}: StoreState): {\n  auth: Auth;\n  sessionPlan: SessionPlanReducerInterface;\n  documentReducer: DocumentReducerInterface;\n  claiming: ClaimingReducerType;\n} => {\n  return {\n    auth: auth,\n    sessionPlan,\n    documentReducer: document,\n    claiming,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getActiveSessionPlan,\n  getMyClaims,\n  createClaim,\n  GetClaimingTypes,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  getApplicationSessions,\n  PushPopupAlert,\n})(ClaimFormComponent);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { validateEmail } from \"../../utils/validation\";\nimport {\n  FC_UpdateProfile,\n  FC_UpdateProfile_Interface,\n} from \"../../actions/auth\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  close: Function;\n  FC_UpdateProfile: Function;\n}\nenum ErrorTarget {\n  email,\n  phone_number,\n  main__error,\n  main_success,\n  none,\n}\ninterface AppState {\n  loading: boolean;\n  error: {\n    target: ErrorTarget;\n    msg: string;\n  };\n  phone_number: string;\n  email: string;\n}\n\nclass _EditProfileDetails extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      error: {\n        target: ErrorTarget.none,\n        msg: \"\",\n      },\n      phone_number: this.props.auth.user.phone_number,\n      email: this.props.auth.user.email,\n    };\n  }\n\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    this.setState({\n      ...this.state,\n      error: {\n        target: ErrorTarget.none,\n        msg: \"\",\n      },\n      [e.currentTarget.name]: e.target.value,\n    } as Pick<AppState, keyof AppState>);\n  };\n\n  updateAccountHandler = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (this.state.email.length <= 4 || !validateEmail(this.state.email)) {\n      return this.setState({\n        error: {\n          target: ErrorTarget.email,\n          msg: \"Please enter a email\",\n        },\n      });\n    }\n\n    // check for errors\n    if (this.state.phone_number.length <= 4) {\n      return this.setState({\n        error: {\n          target: ErrorTarget.phone_number,\n          msg: \"Phone number is required\",\n        },\n      });\n    }\n\n    this.setState({\n      loading: true,\n      error: {\n        target: ErrorTarget.none,\n        msg: \"\",\n      },\n    });\n\n    this.props.FC_UpdateProfile(\n      {\n        email: this.state.email,\n        phone_number: this.state.phone_number,\n        user_id: this.props.auth.user.user_id,\n      } as FC_UpdateProfile_Interface,\n      (status: boolean, msg: string) => {\n        if (status === true) {\n          this.setState({\n            loading: false,\n            error: {\n              target: ErrorTarget.main_success,\n              msg: \"Your profile details updated successfully\",\n            },\n          });\n        } else {\n          this.setState({\n            loading: false,\n            error: {\n              target: ErrorTarget.main__error,\n              msg: msg,\n            },\n          });\n        }\n      }\n    );\n  };\n\n  render() {\n    return (\n      <>\n        <Modal\n          widthSizeClass={ModalSize.medium}\n          backDrop={true}\n          backDropClose={false}\n          close={() => this.props.close()}\n          displayClose={true}\n          theme={Themes.default}\n          title={\n            <label className=\"text-xl m-0 text-bold text-gray-700\">\n              Edit profile\n            </label>\n          }\n          padding={{ body: true, footer: true, title: true }}\n        >\n          <div className=\" \">\n            <div className=\"p-1 rounded-md text-gray-500 text-sm\">\n              You can only update the Email and the phone number, other info are\n              poulled from NIDA database\n            </div>\n          </div>\n\n          <div className=\"bg-white rounded-b-md \">\n            <form onSubmit={this.updateAccountHandler}>\n              {this.state.error.target === ErrorTarget.main_success && (\n                <div className=\"p-2 m-2 text-center rounded-md bg-green-200 text-green-700 animate__zoomIn animate__animated\">\n                  {this.state.error.msg}\n                </div>\n              )}\n\n              {this.state.error.target === ErrorTarget.main__error && (\n                <div className=\"p-2 m-2 text-center rounded-md bg-red-200 text-red-700 animate__zoomIn animate__animated\">\n                  {this.state.error.msg}\n                </div>\n              )}\n\n              <div className=\"mt-2\">\n                <div className=\"p-2 \">\n                  <label htmlFor=\"title\" className=\"d-block\">\n                    Email\n                  </label>\n                  <input\n                    type=\"email\"\n                    name=\"email\"\n                    value={this.state.email}\n                    className={`font-bold input-white w-20 inline-block  ${\n                      this.state.error?.target === ErrorTarget.email\n                        ? \"border-red-500 border-2\"\n                        : \"border-gray-500 border-2\"\n                    }`}\n                    placeholder=\"myemail@email.com\"\n                    onChange={this.handleChange}\n                    disabled={this.state.loading}\n                    required\n                  />\n                  {this.state.error?.target === ErrorTarget.email && (\n                    <span className=\"text-red-600\">\n                      {this.state.error?.msg}\n                    </span>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"mt-2\">\n                <div className=\"p-2 \">\n                  <label htmlFor=\"title\" className=\"d-block\">\n                    Phone number\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"phone_number\"\n                    value={this.state.phone_number}\n                    className={`font-bold input-white w-20 inline-block  ${\n                      this.state.error?.target === ErrorTarget.phone_number\n                        ? \"border-red-500 border-2\"\n                        : \"border-gray-500 border-2\"\n                    }`}\n                    placeholder=\"0700000000\"\n                    onChange={this.handleChange}\n                    disabled={this.state.loading}\n                    required\n                  />\n                  {this.state.error?.target === ErrorTarget.phone_number && (\n                    <span className=\"text-red-600\">\n                      {this.state.error?.msg}\n                    </span>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"p-2\">\n                <button\n                  className=\"py-2 font-bold  px-8 rounded bg-hero text-white inline-block\"\n                  disabled={this.state.loading}\n                  type=\"submit\"\n                >\n                  {this.state.loading === true ? (\n                    <b className=\"animate__animated animate__fadeIn animate__infinite\">\n                      Updating profile...\n                    </b>\n                  ) : (\n                    \"Update profile\"\n                  )}\n                </button>\n              </div>\n            </form>\n          </div>\n        </Modal>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({ auth }: StoreState): { auth: Auth } => {\n  return { auth: auth };\n};\n\nexport const EditProfileDetails = connect(mapStateToProps, {\n  FC_UpdateProfile,\n})(_EditProfileDetails);\n","import React, { FC, Fragment, ReactElement } from \"react\";\nimport { MdLock, MdModeEdit } from \"react-icons/md\";\nimport ProfileImage from \"../../assets/profile.png\";\nimport { CandidateInterface } from \"../../interfaces\";\ntype ProfileProps = {\n  user: CandidateInterface;\n  changePassword: Function;\n  editProfile: Function;\n  access_name: string;\n  district_name: string;\n  school_name: string;\n};\n\nconst Profile: FC<ProfileProps> = ({\n  user,\n  changePassword,\n  editProfile,\n  access_name,\n  district_name,\n  school_name,\n}): ReactElement => {\n  const {\n    fname,\n    lname,\n    father_names,\n    mother_names,\n    sex,\n    date_of_birth,\n    place_of_birth,\n    country_of_birth,\n    district,\n    email,\n    n_id,\n    phone_number,\n    province,\n    civil_status,\n    // photo,\n    village,\n    cell,\n    sector,\n  } = user;\n  return (\n    <Fragment>\n      <div className=\" bg-blue-200 p-3 h-20 rounded-t z-0 flex flex-col lg:items-center items-end lg:flex-row-reverse\">\n        <button\n          onClick={() => editProfile()}\n          className=\"py-1 px-2 rounded-md bg-blue-500 lg:mb-0 mb-1 text-white hover:bg-blue-600 hover:text-white  mx-1\"\n        >\n          <MdModeEdit className=\"inline-block mr-2\" />\n          Edit profile\n        </button>\n        <button\n          className=\"py-1 px-2 rounded-md bg-blue-500 text-white hover:bg-blue-600 hover:text-white mr-1\"\n          onClick={() => changePassword()}\n        >\n          <MdLock className=\"inline-block mr-2\" />\n          Change password\n        </button>\n      </div>\n      <div className=\"bg-red-3000 h-0 p-3 -mt-5 rounded-t flex items-center z-0\">\n        <img\n          src={ProfileImage}\n          alt=\"Profile\"\n          className=\"w-24 h-24 object-cover  shadow-lg   rounded-md border-2 border-gray-500-- border-blue-400\"\n        />\n        <section className=\"pl-2 pt-8 mt-10\">\n          <h1 className=\" text-2xl font-bold text-gray-600\">\n            {fname} {lname}\n          </h1>\n          <span className=\"inline-block px-2 bg-yellow-300 rounded-full\">\n            {access_name}\n          </span>\n        </section>\n      </div>\n      <div className=\"bg-white p-3 rounded-b -mt-1- pt-12 shadow\">\n        <div className=\"grid lg:grid-cols-2 gap-4 mt-3 border-t pt-2 px-2\">\n          {district_name.length > 0 && (\n            <div className=\"mb-2 flex flex-col border-b py-1\">\n              <i className=\"text-gray-400 \">Email:</i>{\" \"}\n              <b className=\"text-lg\">\n                {access_name} on {district_name} district\n              </b>\n            </div>\n          )}\n\n          {school_name.length > 0 && (\n            <div className=\"mb-2 flex flex-col border-b py-1\">\n              <i className=\"text-gray-400 \">Email:</i>{\" \"}\n              <b className=\"text-lg\">\n                {access_name} of {school_name}\n              </b>\n            </div>\n          )}\n\n          {email.length > 0 && (\n            <div className=\"mb-2 flex flex-col border-b py-1\">\n              <i className=\"text-gray-400 \">Email:</i>{\" \"}\n              <b className=\"text-lg\">{email}</b>\n            </div>\n          )}\n\n          {phone_number.length > 0 && (\n            <div className=\"mb-2 flex flex-col border-b py-1\">\n              <i className=\"text-gray-400 \">Phone number:</i>{\" \"}\n              <b className=\"text-lg\">{phone_number}</b>\n            </div>\n          )}\n        </div>\n        <div className=\"grid lg:grid-cols-2 gap-4 mt-3 pt-2 px-2\">\n          <div className=\"\">\n            <div className=\"hover:bg-blue-100\"></div>\n\n            {n_id.length > 0 && (\n              <div className=\"mb-2 flex flex-col border-b py-1\">\n                <i className=\"text-gray-400 \">NID:</i>{\" \"}\n                <b className=\"text-lg\">{n_id}</b>\n              </div>\n            )}\n\n            {fname.length > 0 && (\n              <div className=\"mb-2 flex flex-col border-b py-1\">\n                <i className=\"text-gray-400 \">First name:</i>{\" \"}\n                <b className=\"text-lg\">{fname}</b>\n              </div>\n            )}\n\n            {lname.length > 0 && (\n              <div className=\"mb-2 flex flex-col border-b py-1\">\n                <i className=\"text-gray-400 \">Last name:</i>{\" \"}\n                <b className=\"text-lg\">{lname}</b>\n              </div>\n            )}\n\n            {father_names.length > 0 && (\n              <div className=\"mb-2 flex flex-col border-b py-1\">\n                <i className=\"text-gray-400 \">Father's name:</i>{\" \"}\n                <b className=\"text-lg\">{father_names}</b>\n              </div>\n            )}\n\n            {mother_names.length > 0 && (\n              <div className=\"mb-2 flex flex-col border-b py-1\">\n                <i className=\"text-gray-400 \">Mother's name:</i>{\" \"}\n                <b className=\"text-lg\">{mother_names}</b>\n              </div>\n            )}\n\n            {sex.length > 0 && (\n              <div className=\"mb-2 flex flex-col border-b py-1\">\n                <i className=\"text-gray-400 \">Sex:</i>{\" \"}\n                <b className=\"text-lg\">{sex}</b>\n              </div>\n            )}\n\n            {date_of_birth.length > 0 && (\n              <div className=\"mb-2 flex flex-col border-b py-1\">\n                <i className=\"text-gray-400 \">DOB:</i>{\" \"}\n                <b className=\"text-lg\">{date_of_birth}</b>\n              </div>\n            )}\n          </div>\n          <div className=\"\">\n            {district.length > 0 && (\n              <div className=\"mb-2 flex flex-col border-b py-1\">\n                <i className=\"text-gray-400 \">District:</i>{\" \"}\n                <b className=\"text-lg\">{district}</b>\n              </div>\n            )}\n\n            {village.length > 0 && (\n              <div className=\"mb-2 flex flex-col border-b py-1\">\n                <i className=\"text-gray-400 \">Village:</i>{\" \"}\n                <b className=\"text-lg\">{village}</b>\n              </div>\n            )}\n\n            {cell.length > 0 && (\n              <div className=\"mb-2 flex flex-col border-b py-1\">\n                <i className=\"text-gray-400 \">cell:</i>{\" \"}\n                <b className=\"text-lg\">{cell}</b>\n              </div>\n            )}\n\n            {sector.length > 0 && (\n              <div className=\"mb-2 flex flex-col border-b py-1\">\n                <i className=\"text-gray-400 \">Sector:</i>{\" \"}\n                <b className=\"text-lg\">{sector}</b>\n              </div>\n            )}\n\n            {province.length > 0 && (\n              <div className=\"mb-2 flex flex-col border-b py-1\">\n                <i className=\"text-gray-400 \">province:</i>{\" \"}\n                <b className=\"text-lg\">{province}</b>\n              </div>\n            )}\n\n            {civil_status.length > 0 && (\n              <div className=\"mb-2 flex flex-col border-b py-1\">\n                <i className=\"text-gray-400 \">Civil status:</i>{\" \"}\n                <b className=\"text-lg\">{civil_status}</b>\n              </div>\n            )}\n\n            {place_of_birth.length > 0 && (\n              <div className=\"mb-2 flex flex-col border-b py-1\">\n                <i className=\"text-gray-400 \">Place of birth:</i>{\" \"}\n                <b className=\"text-lg\">{place_of_birth}</b>\n              </div>\n            )}\n            {country_of_birth.length > 0 && (\n              <div className=\"mb-2 flex flex-col border-b py-1\">\n                <i className=\"text-gray-400 \">Country of birth:</i>{\" \"}\n                <b className=\"text-lg\">{country_of_birth}</b>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\nexport default Profile;\n","import React, { FC, ReactElement, useState } from \"react\";\nimport { MdDelete, MdError, MdModeEdit } from \"react-icons/md\";\nimport ClaimFormComponent from \"../../components/ClaimForm/ClaimFormComponent\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport {\n  DocumentUser,\n  DocumentSubCategories,\n  DocumentsCategories,\n  DocumentStatus,\n  PlansTypeKeys,\n} from \"../../interfaces\";\nimport { API } from \"../../utils/api\";\ntype DocumentDetailsProps = {\n  doc: DocumentUser;\n  category: DocumentsCategories | null;\n  sub_category: DocumentSubCategories | null;\n  categories: DocumentsCategories[];\n  sub_categories: DocumentSubCategories[];\n  close: Function;\n  Delete: Function;\n  Update: Function;\n};\n\nconst DocumentDetails: FC<DocumentDetailsProps> = ({\n  doc,\n  category,\n  sub_category,\n  close,\n  categories,\n  sub_categories,\n  Delete,\n  Update,\n}): ReactElement => {\n  const [openClaim, setOpenClaim] = useState(false);\n  //  get selected category\n  let selectedCat = category;\n  let selectedSubCat = sub_category;\n  if (category === null) {\n    let getCat = categories.find(\n      (itm) => itm.user_detail_category_id === doc.category_id\n    );\n    selectedCat = getCat === undefined ? null : getCat;\n  }\n\n  if (\n    sub_category === null &&\n    doc.sub_category_id !== undefined &&\n    doc.sub_category_id.length >= 1\n  ) {\n    let getSubCat = sub_categories.find(\n      (itm) => itm.user_detail_subcategory_id === doc.sub_category_id\n    );\n    selectedSubCat = getSubCat === undefined ? null : getSubCat;\n  }\n  return (\n    <>\n      <Modal\n        widthSizeClass={ModalSize.extraLarge}\n        backDrop={true}\n        backDropClose={false}\n        close={() => close()}\n        displayClose={true}\n        theme={Themes.default}\n        title={\n          <label className=\"text-xl m-0 text-bold text-gray-700\">\n            {selectedCat?.title}{\" \"}\n            {selectedSubCat !== null && \" - \" + selectedSubCat.title}\n          </label>\n        }\n        padding={{ body: true, footer: true, title: true }}\n      >\n        {doc.files !== undefined && doc?.files?.length > 1 && (\n          <div className=\"bg-gray-900 w-full p-1\">\n            <img\n              src={API.AUTH_FILES + doc.files}\n              alt=\"Document file details\"\n              className=\"w-full rounded\"\n            />\n          </div>\n        )}\n        <div className=\"p-3 \">\n          <div className=\"flex\">\n            <div className=\"flex-1\">\n              {doc.validation_status !== undefined &&\n                doc?.files?.length >= 4 && (\n                  <span className=\"text-sm bg-yellow-200 py-0.5 px-2 rounded-full text-yellow-800\">\n                    {doc?.validation_status}\n                  </span>\n                )}\n              <h2 className=\"text-xl mt-1 mb-4 font-bold text-blue-800\">\n                <span className=\"font-thin text-blue-600\">\n                  {\" \"}\n                  {selectedCat?.title}\n                </span>{\" \"}\n                {doc.category_subcategory_data?.title}\n                {doc.title && \" - \" + doc.title}\n              </h2>\n            </div>\n\n            <div className=\"ml-1\">\n              {doc.school === null && doc.category_subcategory_data === null && (\n                <button\n                  onClick={() => Update(doc as DocumentUser)}\n                  className=\"py-1 rounded px-3 text-sm mb-1 block w-full bg-blue-200 hover:bg-blue-300 text-blue-800\"\n                >\n                  <MdModeEdit className=\"inline-block\" />\n                  Edit\n                </button>\n              )}\n            </div>\n            <div className=\"ml-1 \">\n              {doc.validation_status !== DocumentStatus.Approved && (\n                <>\n                  {openClaim === false && (\n                    <button\n                      onClick={() => {\n                        Delete(doc.doc_id);\n                        close();\n                      }}\n                      className=\"py-1 rounded px-3 text-sm mb-1 block w-full bg-red-200 hover:bg-red-300 text-red-800\"\n                    >\n                      <MdDelete className=\"inline-block\" /> Delete\n                    </button>\n                  )}\n\n                  <button\n                    onClick={() => setOpenClaim(!openClaim)}\n                    className=\"py-1 rounded px-3 text-sm mb-1 block w-full bg-gray-200 hover:bg-gray-300 text-gray-800\"\n                  >\n                    <MdError className=\"inline-block\" />{\" \"}\n                    {openClaim === true ? \"Close claim\" : \"Claim\"}\n                  </button>\n                </>\n              )}\n            </div>\n          </div>\n\n          {openClaim === true ? (\n            <div className=\"p-2\">\n              <ClaimFormComponent\n                claim_type={PlansTypeKeys.DOCUMENT_VALIDATION}\n                file_id={doc.doc_id}\n                setFormState={() => setOpenClaim(false)}\n              />\n            </div>\n          ) : (\n            <div className=\"\">\n              {doc.description.length >= 1 && (\n                <div className=\"mb-2 py-1 border-b pb-3 border-gray-200\">\n                  <label className=\"block text-gray-500 text-sm\">\n                    Description:\n                  </label>\n                  <span className=\"\">{doc.description}</span>\n                </div>\n              )}\n\n              <div className=\"grid grid-cols-2 gap-4\">\n                {selectedCat !== null && (\n                  <div className=\"mb-2 py-1 border-b border-gray-200\">\n                    <label className=\"block text-gray-500 text-sm\">\n                      Category:\n                    </label>\n                    <b>{selectedCat.title}</b>\n                  </div>\n                )}\n                {selectedSubCat !== null && (\n                  <div className=\"mb-2 py-1 border-b border-gray-200\">\n                    <label className=\"block text-gray-500 text-sm\">\n                      Sub category:\n                    </label>\n                    <b>{selectedSubCat.title}</b>\n                  </div>\n                )}\n\n                {doc.company !== undefined && doc.company.length >= 1 && (\n                  <div className=\"mb-2 py-1 border-b border-gray-200\">\n                    <label className=\"block text-gray-500 text-sm\">\n                      Company:\n                    </label>\n                    <b>{doc.company}</b>\n                  </div>\n                )}\n                {doc.names !== undefined && doc.names.length >= 1 && (\n                  <div className=\"mb-2 py-1 border-b border-gray-200\">\n                    <label className=\"block text-gray-500 text-sm\">\n                      Names:\n                    </label>\n                    <b>{doc.names}</b>\n                  </div>\n                )}\n                {doc.email !== undefined && doc.email.length >= 1 && (\n                  <div className=\"mb-2 py-1 border-b border-gray-200\">\n                    <label className=\"block text-gray-500 text-sm\">\n                      Email:\n                    </label>\n                    <b>{doc.email}</b>\n                  </div>\n                )}\n                {doc.phone_number !== undefined &&\n                  doc.phone_number.length >= 1 && (\n                    <div className=\"mb-2 py-1 border-b border-gray-200\">\n                      <label className=\"block text-gray-500 text-sm\">\n                        Phone Number:\n                      </label>\n                      <b>{doc.phone_number}</b>\n                    </div>\n                  )}\n                {doc.start_year !== undefined && doc.start_year.length >= 1 && (\n                  <div className=\"mb-2 py-1 border-b border-gray-200\">\n                    <label className=\"block text-gray-500 text-sm\">\n                      Start Year:\n                    </label>\n                    <b>{doc.start_year}</b>\n                  </div>\n                )}\n                {doc.end_year !== undefined && doc.end_year.length >= 1 && (\n                  <div className=\"mb-2 py-1 border-b border-gray-200\">\n                    <label className=\"block text-gray-500 text-sm\">\n                      End Year:\n                    </label>\n                    <b>{doc.end_year}</b>\n                  </div>\n                )}\n                {doc.year !== undefined && doc.year.length >= 1 && (\n                  <div className=\"mb-2 py-1 border-b border-gray-200\">\n                    <label className=\"block text-gray-500 text-sm\">Year:</label>\n                    <b>{doc.year}</b>\n                  </div>\n                )}\n\n                {doc.category_subcategory_data !== undefined &&\n                  doc.category_subcategory_data !== null && (\n                    <div className=\"mb-2 py-1 border-b border-gray-200\">\n                      <b>{doc.category_subcategory_data.title}</b>\n                      <label className=\"block text-gray-500 text-sm\">\n                        {doc.category_subcategory_data.description}\n                      </label>\n                    </div>\n                  )}\n\n                {doc.school !== undefined && doc.school !== null && (\n                  <div className=\"mb-2 py-1 border-b border-gray-200\">\n                    <label className=\"block text-gray-500 text-sm\">\n                      School\n                    </label>\n                    <b>{doc.school.school_name}</b>\n\n                    {doc.school.education_category_id\n                      ?.education_category_title && (\n                      <i className=\"block\">\n                        {\n                          doc.school.education_category_id\n                            ?.education_category_title\n                        }\n                      </i>\n                    )}\n\n                    {doc.school.district_id?.district_name && (\n                      <span className=\"block\">\n                        District: <b>{doc.school.district_id?.district_name}</b>{\" \"}\n                      </span>\n                    )}\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n        </div>\n      </Modal>\n    </>\n  );\n};\nexport default DocumentDetails;\n","import React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, FC_EditUserDocument } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { DocumentsCategories, DocumentUser } from \"../../interfaces\";\nimport Alert, { AlertInterface } from \"../../components/Alert/Alert\";\nimport Modal, { ModalSize, Themes } from \"../Modal/Modal\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  categories: DocumentsCategories[];\n  document: DocumentUser;\n  close: Function;\n  FC_EditUserDocument: Function;\n}\nenum ErrorType {\n  title,\n  company,\n  description,\n  email,\n  end_year,\n  files,\n  names,\n  phone_number,\n  school,\n  start_year,\n  sub_category_id,\n  main_error,\n  main_success,\n  none,\n  year,\n}\ninterface AppState {\n  loading: boolean;\n  document: DocumentUser;\n  category: DocumentsCategories | null;\n  error: {\n    target: ErrorType;\n    msg: string;\n  };\n  success: boolean;\n  title: string;\n  description: string;\n  company: string;\n  email: string;\n  end_year: string;\n  names: string;\n  phone_number: string;\n  school: string;\n  start_year: string;\n  year: string;\n}\n\nclass _EditUserDocument extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      success: false,\n      category: null,\n      error: {\n        target: ErrorType.none,\n        msg: \"\",\n      },\n      document: this.props.document,\n      title: \"\",\n      description: \"\",\n      email: \"\",\n      end_year: \"\",\n      names: \"\",\n      phone_number: \"\",\n      school: \"\",\n      start_year: \"\",\n      year: \"\",\n      company: \"\",\n    };\n  }\n\n  componentDidMount = () => {\n    if (this.props.categories.length <= 0 || this.props.document === null) {\n      this.setState({\n        error: {\n          target: ErrorType.none,\n          msg: \"The document selected does not have a category\",\n        },\n      });\n    } else {\n      const category = this.props.categories.find(\n        (itm) => itm.user_detail_category_id === this.props.document.category_id\n      );\n      if (category === undefined) {\n        this.setState({\n          error: {\n            target: ErrorType.none,\n            msg: \"The document selected does not have a category\",\n          },\n        });\n      } else {\n        this.setState({\n          category: category,\n          title: this.props.document.title,\n          description: this.props.document.description,\n          email: this.props.document.email,\n          end_year: this.props.document.end_year,\n          names: this.props.document.names,\n          phone_number: this.props.document.phone_number,\n          school: \"\",\n          start_year: this.props.document.start_year,\n          year: this.props.document.year,\n          company: this.props.document.company,\n        });\n      }\n    }\n  };\n\n  submitHandler = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    this.setState({\n      error: {\n        target: ErrorType.none,\n        msg: \"\",\n      },\n    });\n    let userDocument = {\n      ...this.props.document,\n      title: this.state.title,\n      description: this.state.description,\n      email: this.state.email,\n      end_year: this.state.end_year,\n      names: this.state.names,\n      phone_number: this.state.phone_number,\n      start_year: this.state.start_year,\n      year: this.state.year,\n      company: this.state.company,\n    } as DocumentUser;\n\n    const fields_access =\n      this.state.category?.fields === undefined\n        ? []\n        : this.state.category?.fields.map((name) => name.toLowerCase());\n\n    // title\n    if (fields_access.includes(\"title\") === true) {\n      if (this.state.title.length <= 0) {\n        return this.setState({\n          error: {\n            target: ErrorType.title,\n            msg: \"Please add the title\",\n          },\n        });\n      }\n    }\n\n    // description\n    if (fields_access.includes(\"description\") === true) {\n      if (this.state.description.length <= 0) {\n        return this.setState({\n          error: {\n            target: ErrorType.description,\n            msg: \"Please add the description\",\n          },\n        });\n      }\n    }\n\n    // school\n    if (fields_access.includes(\"school\") === true) {\n      if (this.state.school.length <= 0) {\n        return this.setState({\n          error: {\n            target: ErrorType.school,\n            msg: \"Please add the school\",\n          },\n        });\n      }\n    }\n\n    // email\n    if (fields_access.includes(\"email\") === true) {\n      if (this.state.email.length <= 0) {\n        return this.setState({\n          error: {\n            target: ErrorType.email,\n            msg: \"Please add the email\",\n          },\n        });\n      }\n    }\n\n    // names\n    if (fields_access.includes(\"names\") === true) {\n      if (this.state.names.length <= 0) {\n        return this.setState({\n          error: {\n            target: ErrorType.names,\n            msg: \"Please add the names\",\n          },\n        });\n      }\n    }\n\n    // phone_number\n    if (fields_access.includes(\"phone_number\") === true) {\n      if (this.state.phone_number.length <= 0) {\n        return this.setState({\n          error: {\n            target: ErrorType.phone_number,\n            msg: \"Please add the phone_number\",\n          },\n        });\n      }\n    }\n\n    // company\n    if (fields_access.includes(\"company\") === true) {\n      if (this.state.company.length <= 0) {\n        return this.setState({\n          error: {\n            target: ErrorType.company,\n            msg: \"Please add the company\",\n          },\n        });\n      }\n    }\n\n    // year\n    if (fields_access.includes(\"year\") === true) {\n      if (this.state.year.length <= 0) {\n        return this.setState({\n          error: {\n            target: ErrorType.year,\n            msg: \"Please add the year\",\n          },\n        });\n      }\n    }\n\n    // start_year\n    if (fields_access.includes(\"start_year\") === true) {\n      if (this.state.start_year.length <= 0) {\n        return this.setState({\n          error: {\n            target: ErrorType.start_year,\n            msg: \"Please add the start_year\",\n          },\n        });\n      }\n    }\n\n    // end_year\n    if (fields_access.includes(\"end_year\") === true) {\n      if (this.state.end_year.length <= 0) {\n        return this.setState({\n          error: {\n            target: ErrorType.end_year,\n            msg: \"Please add the end_year\",\n          },\n        });\n      }\n    }\n\n    this.setState({\n      loading: true,\n    });\n    // send the data\n    this.props.FC_EditUserDocument(\n      userDocument,\n      this.props.auth.user.user_id,\n      (status: boolean, msg: string) => {\n        if (status === true) {\n          this.setState({\n            loading: false,\n            success: true,\n          });\n        } else {\n          this.setState({\n            loading: false,\n            error: {\n              target: ErrorType.main_error,\n              msg: msg,\n            },\n          });\n        }\n      }\n    );\n  };\n\n  inputChangeHandler = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    this.setState({\n      ...this.state,\n      error: {\n        target: ErrorType.none,\n        msg: \"\",\n      },\n      [e.currentTarget.name]: e.target.value,\n    } as Pick<AppState, keyof AppState>);\n  };\n\n  render() {\n    let fields_access: string[] =\n      this.state.category?.fields === undefined\n        ? []\n        : this.state.category?.fields.map((name) => name.toLowerCase());\n\n    return (\n      <Fragment>\n        <Modal\n          widthSizeClass={ModalSize.medium}\n          backDrop={true}\n          backDropClose={false}\n          close={() => this.props.close()}\n          displayClose={true}\n          theme={Themes.default}\n          title={\n            <label className=\"text-xl m-0 text-bold text-gray-700\">\n              Update document\n            </label>\n          }\n          padding={{ body: true, footer: true, title: true }}\n        >\n          <div className=\"p-2\">\n            {this.state.error.target === ErrorType.main_error && (\n              <Alert\n                theme={AlertInterface.danger}\n                title={this.state.error.msg}\n              />\n            )}\n\n            {this.state.error.target === ErrorType.main_success && (\n              <Alert\n                theme={AlertInterface.success}\n                title={this.state.error.msg}\n              />\n            )}\n\n            {this.state.success === true && (\n              <Alert\n                theme={AlertInterface.success}\n                title={\"Details updated successfully\"}\n              />\n            )}\n\n            <div className=\"mt-1\">\n              <div className=\"p-2\">\n                <label htmlFor=\"title\" className=\"d-block\">\n                  Category\n                </label>\n\n                <div className=\"input-white w-20 inline-block border-gray-300 border-2 font-bold bg-blue-200\">\n                  {this.state.category?.title}\n                </div>\n              </div>\n            </div>\n            <form onSubmit={this.submitHandler}>\n              <div className=\"bg-white\">\n                {fields_access.includes(\"category_subcategory_data\") ===\n                  true && (\n                  <div className=\"p-2\">\n                    <label htmlFor=\"title\" className=\"d-block\">\n                      Title\n                    </label>\n                    <input\n                      value={\n                        this.props.document.category_subcategory_data?.title\n                      }\n                      type=\"text\"\n                      name=\"title\"\n                      // onChange={}\n                      className={`input-white w-20 inline-block  ${\n                        this.state.error?.target === ErrorType.title\n                          ? \"border-red-500 border-2\"\n                          : \"border-gray-500 border-2\"\n                      }`}\n                      placeholder=\"Enter the title\"\n                      disabled={true}\n                      readOnly\n                    />\n                    {this.state.error?.target === ErrorType.title && (\n                      <span className=\"text-red-600\">\n                        {this.state.error?.msg}\n                      </span>\n                    )}\n                  </div>\n                )}\n\n                {fields_access.includes(\"school\") === true && (\n                  <div className=\"p-2\">\n                    <label htmlFor=\"title\" className=\"d-block\">\n                      Title\n                    </label>\n                    <input\n                      value={this.props.document.school?.school_name}\n                      type=\"text\"\n                      name=\"title\"\n                      // onChange={}\n                      className={`input-white w-20 inline-block  ${\n                        this.state.error?.target === ErrorType.title\n                          ? \"border-red-500 border-2\"\n                          : \"border-gray-500 border-2\"\n                      }`}\n                      placeholder=\"Enter the title\"\n                      disabled={true}\n                      readOnly\n                    />\n                    {this.state.error?.target === ErrorType.title && (\n                      <span className=\"text-red-600\">\n                        {this.state.error?.msg}\n                      </span>\n                    )}\n                  </div>\n                )}\n\n                {fields_access.includes(\"title\") === true && (\n                  <div className=\"p-2\">\n                    <label htmlFor=\"title\" className=\"d-block\">\n                      Title\n                    </label>\n                    <input\n                      value={this.state.title}\n                      type=\"text\"\n                      name=\"title\"\n                      onChange={this.inputChangeHandler}\n                      className={`input-white w-20 inline-block  ${\n                        this.state.error?.target === ErrorType.title\n                          ? \"border-red-500 border-2\"\n                          : \"border-gray-500 border-2\"\n                      }`}\n                      placeholder=\"Enter the title\"\n                      disabled={this.state.loading}\n                    />\n                    {this.state.error?.target === ErrorType.title && (\n                      <span className=\"text-red-600\">\n                        {this.state.error?.msg}\n                      </span>\n                    )}\n                  </div>\n                )}\n\n                {fields_access.includes(\"description\") === true && (\n                  <div className=\"p-2\">\n                    <label htmlFor=\"description\" className=\"d-block\">\n                      Description\n                    </label>\n                    <input\n                      value={this.state.description}\n                      type=\"text\"\n                      name=\"description\"\n                      onChange={this.inputChangeHandler}\n                      className={`input-white w-20 inline-block  ${\n                        this.state.error?.target === ErrorType.description\n                          ? \"border-red-500 border-2\"\n                          : \"border-gray-500 border-2\"\n                      }`}\n                      placeholder=\"Enter the description\"\n                      disabled={this.state.loading}\n                    />\n                    {this.state.error?.target === ErrorType.description && (\n                      <span className=\"text-red-600\">\n                        {this.state.error?.msg}\n                      </span>\n                    )}\n                  </div>\n                )}\n\n                {fields_access.includes(\"email\") === true && (\n                  <div className=\"p-2\">\n                    <label htmlFor=\"email\" className=\"d-block\">\n                      Email\n                    </label>\n                    <input\n                      value={this.state.email}\n                      type=\"text\"\n                      name=\"email\"\n                      onChange={this.inputChangeHandler}\n                      className={`input-white w-20 inline-block  ${\n                        this.state.error?.target === ErrorType.email\n                          ? \"border-red-500 border-2\"\n                          : \"border-gray-500 border-2\"\n                      }`}\n                      placeholder=\"Your email\"\n                      disabled={this.state.loading}\n                    />\n                    {this.state.error?.target === ErrorType.email && (\n                      <span className=\"text-red-600\">\n                        {this.state.error?.msg}\n                      </span>\n                    )}\n                  </div>\n                )}\n\n                {fields_access.includes(\"names\") === true && (\n                  <div className=\"p-2\">\n                    <label htmlFor=\"names\" className=\"d-block\">\n                      Names\n                    </label>\n                    <input\n                      value={this.state.names}\n                      type=\"text\"\n                      name=\"names\"\n                      onChange={this.inputChangeHandler}\n                      className={`input-white w-20 inline-block  ${\n                        this.state.error?.target === ErrorType.names\n                          ? \"border-red-500 border-2\"\n                          : \"border-gray-500 border-2\"\n                      }`}\n                      placeholder=\"Your names\"\n                      disabled={this.state.loading}\n                    />\n                    {this.state.error?.target === ErrorType.names && (\n                      <span className=\"text-red-600\">\n                        {this.state.error?.msg}\n                      </span>\n                    )}\n                  </div>\n                )}\n\n                {fields_access.includes(\"phone_number\") === true && (\n                  <div className=\"p-2\">\n                    <label htmlFor=\"phone_number\" className=\"d-block\">\n                      Phone number\n                    </label>\n                    <input\n                      value={this.state.phone_number}\n                      type=\"text\"\n                      name=\"phone_number\"\n                      onChange={this.inputChangeHandler}\n                      className={`input-white w-20 inline-block  ${\n                        this.state.error?.target === ErrorType.phone_number\n                          ? \"border-red-500 border-2\"\n                          : \"border-gray-500 border-2\"\n                      }`}\n                      placeholder=\"Your phone_number\"\n                      disabled={this.state.loading}\n                    />\n                    {this.state.error?.target === ErrorType.phone_number && (\n                      <span className=\"text-red-600\">\n                        {this.state.error?.msg}\n                      </span>\n                    )}\n                  </div>\n                )}\n\n                {fields_access.includes(\"company\") === true && (\n                  <div className=\"p-2\">\n                    <label htmlFor=\"company\" className=\"d-block\">\n                      Company\n                    </label>\n                    <input\n                      value={this.state.company}\n                      type=\"text\"\n                      name=\"company\"\n                      onChange={this.inputChangeHandler}\n                      className={`input-white w-20 inline-block  ${\n                        this.state.error?.target === ErrorType.company\n                          ? \"border-red-500 border-2\"\n                          : \"border-gray-500 border-2\"\n                      }`}\n                      placeholder=\"Company name\"\n                      disabled={this.state.loading}\n                    />\n                    {this.state.error?.target === ErrorType.company && (\n                      <span className=\"text-red-600\">\n                        {this.state.error?.msg}\n                      </span>\n                    )}\n                  </div>\n                )}\n\n                {fields_access.includes(\"year\") === true && (\n                  <div className=\"p-2\">\n                    <label htmlFor=\"year\" className=\"d-block\">\n                      Year\n                    </label>\n                    <input\n                      value={this.state.year}\n                      type=\"date\"\n                      name=\"year\"\n                      onChange={this.inputChangeHandler}\n                      className={`input-white w-20 inline-block  ${\n                        this.state.error?.target === ErrorType.year\n                          ? \"border-red-500 border-2\"\n                          : \"border-gray-500 border-2\"\n                      }`}\n                      placeholder=\"year\"\n                      disabled={this.state.loading}\n                    />\n                    {this.state.error?.target === ErrorType.year && (\n                      <span className=\"text-red-600\">\n                        {this.state.error?.msg}\n                      </span>\n                    )}\n                  </div>\n                )}\n\n                {fields_access.includes(\"start_year\") === true && (\n                  <div className=\"p-2\">\n                    <label htmlFor=\"start_year\" className=\"d-block\">\n                      Start year\n                    </label>\n                    <input\n                      value={this.state.start_year}\n                      type=\"date\"\n                      name=\"start_year\"\n                      onChange={this.inputChangeHandler}\n                      className={`input-white w-20 inline-block  ${\n                        this.state.error?.target === ErrorType.start_year\n                          ? \"border-red-500 border-2\"\n                          : \"border-gray-500 border-2\"\n                      }`}\n                      placeholder=\"start_year\"\n                      disabled={this.state.loading}\n                    />\n                    {this.state.error?.target === ErrorType.start_year && (\n                      <span className=\"text-red-600\">\n                        {this.state.error?.msg}\n                      </span>\n                    )}\n                  </div>\n                )}\n\n                {fields_access.includes(\"end_year\") === true && (\n                  <div className=\"p-2\">\n                    <label htmlFor=\"end_year\" className=\"d-block\">\n                      End year\n                    </label>\n                    <input\n                      value={this.state.end_year}\n                      type=\"date\"\n                      name=\"end_year\"\n                      onChange={this.inputChangeHandler}\n                      className={`input-white w-20 inline-block  ${\n                        this.state.error?.target === ErrorType.end_year\n                          ? \"border-red-500 border-2\"\n                          : \"border-gray-500 border-2\"\n                      }`}\n                      placeholder=\"end_year\"\n                      disabled={this.state.loading}\n                    />\n                    {this.state.error?.target === ErrorType.end_year && (\n                      <span className=\"text-red-600\">\n                        {this.state.error?.msg}\n                      </span>\n                    )}\n                  </div>\n                )}\n\n                <div className=\"p-2  text-right\">\n                  <button\n                    className=\"py-2 font-bold  px-8 rounded bg-hero text-white inline-block\"\n                    disabled={this.state.loading}\n                    type=\"submit\"\n                  >\n                    {this.state.loading === true\n                      ? \"Loading...\"\n                      : \"Update document\"}\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </Modal>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({ auth }: StoreState): { auth: Auth } => {\n  return { auth: auth };\n};\n\nexport const EditUserDocument = connect(mapStateToProps, {\n  FC_EditUserDocument,\n})(_EditUserDocument);\n","import React from \"react\";\nimport { MdCheckCircle, MdPanoramaFishEye } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Auth } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport {\n  FC_ChangePassword,\n  FC_ChangePassword_Interface,\n} from \"../../actions/auth\";\nimport {\n  PASSWORD_MIN_LENGTH,\n  PASSWORD_MAX_LENGTH,\n} from \"../../utils/app.config\";\nimport {\n  hasUppercase,\n  hasLowercase,\n  hasNumber,\n  hasSpecialcase,\n} from \"../../utils/validation\";\nimport Modal, { ModalSize, Themes } from \"../Modal/Modal\";\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  close: Function;\n  FC_ChangePassword: Function;\n}\n\nenum ErrorTarget {\n  old_password,\n  new_password,\n  re_new_password,\n  main__error,\n  main_success,\n  none,\n}\ninterface AppState {\n  loading: boolean;\n  error: {\n    target: ErrorTarget;\n    msg: string;\n  };\n  old_password: string;\n  new_password: string;\n  re_new_password: string;\n  password_validation: {\n    uppercase: boolean;\n    lowercase: boolean;\n    number: boolean;\n    length: boolean;\n    special: boolean;\n  };\n}\n\nclass _ChangePassword extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      error: {\n        target: ErrorTarget.none,\n        msg: \"\",\n      },\n      old_password: \"\",\n      new_password: \"\",\n      re_new_password: \"\",\n      password_validation: {\n        uppercase: false,\n        lowercase: false,\n        number: false,\n        length: false,\n        special: false,\n      },\n    };\n  }\n\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    if (e.currentTarget.name === \"new_password\") {\n      this.setState({\n        ...this.state,\n        error: {\n          target: ErrorTarget.none,\n          msg: \"\",\n        },\n        [e.currentTarget.name]: e.target.value,\n        password_validation: {\n          uppercase: hasUppercase(e.target.value),\n          lowercase: hasLowercase(e.target.value),\n          special: hasSpecialcase(e.target.value),\n          number: hasNumber(e.target.value),\n          length:\n            e.target.value.length >= PASSWORD_MIN_LENGTH &&\n            e.target.value.length < PASSWORD_MAX_LENGTH,\n        },\n      } as Pick<AppState, keyof AppState>);\n    } else {\n      this.setState({\n        ...this.state,\n        error: {\n          target: ErrorTarget.none,\n          msg: \"\",\n        },\n        [e.currentTarget.name]: e.target.value,\n      } as Pick<AppState, keyof AppState>);\n    }\n  };\n\n  updateAccountHandler = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (this.state.old_password.length <= 4) {\n      return this.setState({\n        error: {\n          target: ErrorTarget.old_password,\n          msg: \"Please enter the current password\",\n        },\n      });\n    }\n\n    if (\n      !(\n        this.state.password_validation.uppercase &&\n        this.state.password_validation.lowercase &&\n        this.state.password_validation.number &&\n        this.state.password_validation.special &&\n        this.state.password_validation.length\n      )\n    ) {\n      return this.setState({\n        error: {\n          target: ErrorTarget.new_password,\n          msg: \"Password must pass the validation test\",\n        },\n      });\n    }\n\n    // check for errors\n    if (this.state.new_password !== this.state.re_new_password) {\n      return this.setState({\n        error: {\n          target: ErrorTarget.re_new_password,\n          msg: \"Does not match to the new password\",\n        },\n      });\n    }\n\n    this.setState({\n      loading: true,\n      error: {\n        target: ErrorTarget.none,\n        msg: \"\",\n      },\n    });\n\n    this.props.FC_ChangePassword(\n      {\n        new_password: this.state.new_password,\n        old_password: this.state.old_password,\n        user_id: this.props.auth.user.user_id,\n      } as FC_ChangePassword_Interface,\n      (status: boolean, msg: string) => {\n        if (status === true) {\n          this.setState({\n            loading: false,\n            old_password: \"\",\n            new_password: \"\",\n            re_new_password: \"\",\n            error: {\n              target: ErrorTarget.main_success,\n              msg: \"Your password has been updated successfully\",\n            },\n          });\n        } else {\n          this.setState({\n            loading: false,\n            error: {\n              target: ErrorTarget.main__error,\n              msg: msg,\n            },\n          });\n        }\n      }\n    );\n  };\n\n  render() {\n    let ValidationDesign = !(\n      this.state.password_validation.uppercase &&\n      this.state.password_validation.lowercase &&\n      this.state.password_validation.number &&\n      this.state.password_validation.special &&\n      this.state.password_validation.length\n    ) ? (\n      <div className=\"px-2 mb-2 bg-white rounded shadow-lg mx-2 p-2 -mt-2\">\n        <div className=\"p-1 border-gray-200 border rounded-full flex\">\n          {this.state.password_validation.lowercase && (\n            <div className=\"bg-blue-500 pt-1 rounded-l-full inline-block- w-1/6\"></div>\n          )}\n          {this.state.password_validation.uppercase && (\n            <div className=\"bg-blue-500 pt-1  inline-block- w-1/6\"></div>\n          )}\n          {this.state.password_validation.number && (\n            <div className=\"bg-blue-500 pt-1  inline-block- w-1/6\"></div>\n          )}\n          {this.state.password_validation.length && (\n            <div className=\"bg-blue-500 pt-1  inline-block- w-1/6\"></div>\n          )}\n          {this.state.password_validation.special && (\n            <div className=\"bg-blue-500 pt-1 rounded-r-full inline-block- w-2/6\"></div>\n          )}\n        </div>\n\n        <h5>Password must:</h5>\n        <div className=\"pt-1 text-sm\">\n          <div\n            className={`${\n              this.state.password_validation.lowercase\n                ? \"text-green-600 font-bold\"\n                : \"text-gray-500\"\n            }`}\n          >\n            {this.state.password_validation.lowercase ? (\n              <MdCheckCircle className=\"inline-block\" />\n            ) : (\n              <MdPanoramaFishEye className=\"inline-block\" />\n            )}{\" \"}\n            <span>Include a lowercase character</span>\n          </div>\n\n          <div\n            className={`${\n              this.state.password_validation.uppercase\n                ? \"text-green-600 font-bold\"\n                : \"text-gray-500\"\n            }`}\n          >\n            {this.state.password_validation.uppercase ? (\n              <MdCheckCircle className=\"inline-block\" />\n            ) : (\n              <MdPanoramaFishEye className=\"inline-block\" />\n            )}{\" \"}\n            <span>Include an uppercase character</span>\n          </div>\n\n          <div\n            className={`${\n              this.state.password_validation.number\n                ? \"text-green-600 font-bold\"\n                : \"text-gray-500\"\n            }`}\n          >\n            {this.state.password_validation.number ? (\n              <MdCheckCircle className=\"inline-block\" />\n            ) : (\n              <MdPanoramaFishEye className=\"inline-block\" />\n            )}{\" \"}\n            <span>Include a Number</span>\n          </div>\n\n          <div\n            className={`${\n              this.state.password_validation.length\n                ? \"text-green-600 font-bold\"\n                : \"text-gray-500\"\n            }`}\n          >\n            {this.state.password_validation.length ? (\n              <MdCheckCircle className=\"inline-block\" />\n            ) : (\n              <MdPanoramaFishEye className=\"inline-block\" />\n            )}{\" \"}\n            <span>\n              Between {PASSWORD_MIN_LENGTH} and {PASSWORD_MAX_LENGTH} character\n            </span>\n          </div>\n\n          <div\n            className={`${\n              this.state.password_validation.special\n                ? \"text-green-600 font-bold\"\n                : \"text-gray-500\"\n            }`}\n          >\n            {this.state.password_validation.special ? (\n              <MdCheckCircle className=\"inline-block\" />\n            ) : (\n              <MdPanoramaFishEye className=\"inline-block\" />\n            )}{\" \"}\n            <span>A special character</span>\n          </div>\n        </div>\n      </div>\n    ) : null;\n\n    return (\n      <>\n        <Modal\n          widthSizeClass={ModalSize.medium}\n          backDrop={true}\n          backDropClose={false}\n          close={() => this.props.close()}\n          displayClose={true}\n          theme={Themes.default}\n          title={\n            <label className=\"text-xl m-0 text-bold text-gray-700\">\n              Change password\n            </label>\n          }\n          padding={{ body: true, footer: true, title: true }}\n        >\n          <div className=\"bg-white rounded-b-md\">\n            <form onSubmit={this.updateAccountHandler}>\n              {this.state.error.target === ErrorTarget.main_success && (\n                <div className=\"p-2 m-2 text-center rounded-md bg-green-200 text-green-700 animate__zoomIn animate__animated\">\n                  {this.state.error.msg}\n                </div>\n              )}\n\n              {this.state.error.target === ErrorTarget.main__error && (\n                <div className=\"p-2 m-2 text-center rounded-md bg-red-200 text-red-700 animate__zoomIn animate__animated\">\n                  {this.state.error.msg}\n                </div>\n              )}\n\n              <div className=\"mt-2\">\n                <div className=\"p-2 \">\n                  <label htmlFor=\"title\" className=\"d-block\">\n                    Current password\n                  </label>\n                  <input\n                    type=\"password\"\n                    name=\"old_password\"\n                    value={this.state.old_password}\n                    className={`font-bold input-white w-20 inline-block  ${\n                      this.state.error?.target === ErrorTarget.old_password\n                        ? \"border-red-500 border-2\"\n                        : \"border-gray-500 border-2\"\n                    }`}\n                    placeholder=\"Current password\"\n                    onChange={this.handleChange}\n                    disabled={this.state.loading}\n                    required\n                  />\n                  {this.state.error?.target === ErrorTarget.old_password && (\n                    <span className=\"text-red-600\">\n                      {this.state.error?.msg}\n                    </span>\n                  )}\n                </div>\n              </div>\n              <div className=\"mt-3\">\n                <div className=\"p-2 \">\n                  <label\n                    htmlFor=\"title\"\n                    className=\"d-block\"\n                    title=\"Re-enter the new password\"\n                  >\n                    New Password\n                  </label>\n                  <input\n                    type=\"password\"\n                    name=\"new_password\"\n                    value={this.state.new_password}\n                    className={`font-bold input-white w-20 inline-block  ${\n                      this.state.error?.target === ErrorTarget.new_password\n                        ? \"border-red-500 border-2\"\n                        : \"border-gray-500 border-2\"\n                    }`}\n                    placeholder=\"New password\"\n                    onChange={this.handleChange}\n                    disabled={this.state.loading}\n                    required\n                  />\n                  {this.state.error?.target === ErrorTarget.new_password && (\n                    <span className=\"text-red-600\">\n                      {this.state.error?.msg}\n                    </span>\n                  )}\n                </div>\n              </div>\n              {ValidationDesign}\n\n              <div className=\"mt-2\">\n                <div className=\"p-2 \">\n                  <label\n                    htmlFor=\"title\"\n                    className=\"d-block\"\n                    title=\"Re-enter the new password\"\n                  >\n                    Re-Password\n                  </label>\n                  <input\n                    type=\"password\"\n                    name=\"re_new_password\"\n                    value={this.state.re_new_password}\n                    className={`font-bold input-white w-20 inline-block  ${\n                      this.state.error?.target === ErrorTarget.re_new_password\n                        ? \"border-red-500 border-2\"\n                        : \"border-gray-500 border-2\"\n                    }`}\n                    placeholder=\"Re-New password\"\n                    onChange={this.handleChange}\n                    disabled={this.state.loading}\n                    required\n                  />\n                  {this.state.error?.target === ErrorTarget.re_new_password && (\n                    <span className=\"text-red-600\">\n                      {this.state.error?.msg}\n                    </span>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"p-2\">\n                <button\n                  className=\"py-2 font-bold  px-8 rounded bg-hero text-white inline-block\"\n                  disabled={this.state.loading}\n                  type=\"submit\"\n                >\n                  {this.state.loading === true ? (\n                    <b className=\"animate__animated animate__fadeIn animate__infinite\">\n                      Changing password...\n                    </b>\n                  ) : (\n                    \"Change password\"\n                  )}\n                </button>\n              </div>\n            </form>\n          </div>\n        </Modal>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({ auth }: StoreState): { auth: Auth } => {\n  return { auth: auth };\n};\n\nexport const ChangePassword = connect(mapStateToProps, {\n  FC_ChangePassword,\n})(_ChangePassword);\n","import React, { FC, Fragment, ReactElement } from \"react\";\nimport {\n  MdAttachFile,\n  MdCardMembership,\n  MdDeleteForever,\n  MdNoteAdd,\n} from \"react-icons/md\";\nimport {\n  DocumentUser,\n  DocumentSubCategories,\n  DocumentsCategories,\n  DocumentStatus,\n} from \"../../interfaces\";\n\ntype DocumentsListProps = {\n  documents: DocumentUser[];\n  selected_category: DocumentsCategories | null;\n  selected_sub_category: DocumentSubCategories | null;\n  selectDoc: Function;\n  addNewDoc: Function;\n  categories: DocumentsCategories[];\n  sub_categories: DocumentSubCategories[];\n  Delete: Function;\n};\n\nconst DocumentsList: FC<DocumentsListProps> = ({\n  documents,\n  selected_category,\n  selected_sub_category,\n  selectDoc,\n  addNewDoc,\n  categories,\n  sub_categories,\n  Delete,\n}): ReactElement => {\n  // let subCategoriesByCategory: DocumentSubCategories[] = sub_categories.filter(\n  //   (sub_cat: DocumentSubCategories) =>\n  //     sub_cat.category_id === selected_category?.user_detail_category_id\n  // );\n  let documents_list: DocumentUser[] = [];\n  if (selected_category === null) {\n    // * no category selected\n    documents_list = documents;\n  } else {\n    //* nothing is selected in subcategory (default)\n    if (selected_sub_category === null) {\n      // check if the category has sub categories\n      documents_list = documents.filter(\n        (doc: DocumentUser) =>\n          doc.category_id === selected_category?.user_detail_category_id\n      );\n    } else if (selected_sub_category !== null) {\n      documents_list = documents.filter(\n        (doc: DocumentUser) =>\n          doc.category_id === selected_category.user_detail_category_id &&\n          doc.sub_category_id ===\n            selected_sub_category.user_detail_subcategory_id\n      );\n    }\n  }\n  return (\n    <div className=\"\">\n      <div className=\"p-2 border-b border-gray-200 rounded-md flex bg-white justify-between items-center\">\n        <section>\n          <h1\n            className={`${\n              selected_sub_category === null ? \"text-2xl\" : \"text-xl\"\n            }  m-0  text-blue-800`}\n          >\n            {selected_category === null ? (\n              \"All details\"\n            ) : (\n              <Fragment>\n                {selected_category?.title}{\" \"}\n                {selected_sub_category !== null && (\n                  <b className=\"block -mt-1\"> {selected_sub_category.title}</b>\n                )}\n              </Fragment>\n            )}\n          </h1>\n          <p className=\"m-0 text-sm text-gray-400\">\n            {selected_sub_category === null\n              ? selected_category?.description\n              : selected_sub_category.description}\n          </p>\n        </section>\n\n        <button\n          className=\"px-3 py-1 bg-blue-600 rounded hover:bg-blue-800 text-white\"\n          onClick={() => addNewDoc()}\n        >\n          <MdNoteAdd className=\"text-3xl mx-auto block\" />\n          <span className=\"text-sm\">Add new</span>\n        </button>\n\n        {/* {(selected_sub_category === null &&\n          subCategoriesByCategory.length === 0) ||\n        !(\n          selected_sub_category === null && subCategoriesByCategory.length >= 1\n        ) ? (\n          <button\n            className=\"px-3 py-1 bg-blue-600 rounded hover:bg-blue-800 text-white\"\n            onClick={() => addNewDoc()}\n          >\n            <MdNoteAdd className=\"text-3xl mx-auto block\" />\n            <span className=\"text-sm\">Add new</span>\n          </button>\n        ) : selected_sub_category === null &&\n          subCategoriesByCategory.length >= 1 ? (\n          <section className=\"text-right\">\n            <button\n              className=\"px-3 py-1 inline-block bg-gray-300 rounded text-gray-700\"\n              disabled\n            >\n              <MdNoteAdd className=\"text-2xl mx-auto block\" />\n              <span className=\"text-xs\">Add new</span>\n            </button>\n            <span className=\"text-xs block\">Select a sub cateogry</span>\n          </section>\n        ) : null} */}\n      </div>\n      <div className=\"p-2 \">\n        {documents_list.length <= 0 ? (\n          <div className=\"p-4 text-center  text-gray-500\">\n            <MdCardMembership className=\"text-7xl mx-auto my-2\" />\n            <h2 className=\"text-2xl mb-2\">No data found on</h2>\n            <h1 className=\"text-xl mb-2 text-blue-900\">\n              {selected_category === null\n                ? \"Any category\"\n                : selected_category?.title}{\" \"}\n              {selected_sub_category !== null && (\n                <b className=\"block\"> {selected_sub_category?.title} </b>\n              )}\n            </h1>\n            <p>\n              Please click on <b>Add new</b> and improve your CV\n            </p>\n          </div>\n        ) : (\n          documents_list.map((doc: DocumentUser, i) => {\n            let category_itm = categories.find(\n              (itm) => itm.user_detail_category_id === doc.category_id\n            );\n            let sub_category_itm = sub_categories.find(\n              (itm) => itm.user_detail_subcategory_id === doc.sub_category_id\n            );\n\n            let colorBackground: string = \"\";\n            let colorBorder: string = \"\";\n\n            if (doc.validation_status === DocumentStatus.Approved) {\n              colorBackground = \"white\";\n              colorBorder = \"green-500 \";\n            } else if (doc.validation_status === DocumentStatus.Waiting) {\n              colorBackground = \"white\";\n              colorBorder = \"blue-500 \";\n            } else if (doc.validation_status === DocumentStatus.Rejected) {\n              colorBackground = \"red-100\";\n              colorBorder = \"red-500 \";\n            }\n\n            return (\n              <div\n                key={i}\n                className={`flex px-0.5 py-2 cursor-pointer mb-2 rounded shadow-sm-- hover:shadow border hover:bg-blue-100  border-${colorBorder}-100  items-center bg-${colorBackground}`}\n              >\n                <div className=\"flex-1 pl-2\" onClick={() => selectDoc(doc)}>\n                  <span className=\"text-sm block text-gray-600\">\n                    {category_itm?.title}\n                  </span>\n                  <div className=\"  text-lg m-0  text-gray-900\">\n                    <h3 className=\"font-bold inline-block\">\n                      {sub_category_itm?.title}\n                      {doc.title && \" - \" + doc.title}\n                    </h3>\n\n                    <h3 className=\"inline-block ml-2\">\n                      {doc.category_subcategory_data?.title}\n                    </h3>\n                  </div>\n                  {doc.validation_status !== undefined &&\n                    doc?.files?.length >= 4 && (\n                      <span\n                        className={`text-sm  bg-${colorBorder}-500 py-0.5 px-2 rounded-full text-white`}\n                      >\n                        {doc?.validation_status}\n                      </span>\n                    )}\n                </div>\n                <div className=\" mx-2\" onClick={() => selectDoc(doc)}>\n                  {doc.files !== undefined && doc.files?.length >= 4 && (\n                    <button className=\"p-2\" title=\"This item has a file\">\n                      <MdAttachFile\n                        className={`text-4xl text-${colorBorder}-400`}\n                      />\n                    </button>\n                  )}\n                </div>\n                {doc.validation_status !== DocumentStatus.Approved && (\n                  <div className=\"px-3\">\n                    <button\n                      onClick={() => Delete(doc.doc_id)}\n                      className=\"text-4xl text-red-600\"\n                    >\n                      <MdDeleteForever />\n                    </button>\n                  </div>\n                )}\n              </div>\n            );\n          })\n        )}\n      </div>\n    </div>\n  );\n};\nexport default DocumentsList;\n","import React, { FC, ReactElement } from \"react\";\nimport {\n  CandidateInterface,\n  DocumentsCategories,\n  DocumentSubCategories,\n  DocumentUser,\n} from \"../../interfaces\";\nimport { EDUCATION_CATEGORY_ID } from \"../../utils/app.config\";\n\ntype PrintCVProps = {\n  user: CandidateInterface;\n  documentTypes: {\n    sub_categories: DocumentSubCategories[];\n    categories: DocumentsCategories[];\n  };\n  documents: DocumentUser[];\n};\n\nconst PrintCV: FC<PrintCVProps> = ({\n  user,\n  documentTypes,\n  documents,\n}): ReactElement => {\n  const { categories, sub_categories } = documentTypes;\n\n  if (documents.length <= 0) {\n    return (\n      <div className=\"p-4 text-center\">\n        <h1 className=\"text-3xl font-bold text-gray-500\">\n          You have no data to generate the CV\n        </h1>\n        <h3>Please complete the details in order to get your profile</h3>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <div id=\"content\" className=\"p-3 border\" style={{ width: \"2480\" }}>\n        <div className=\"py-1\"></div>\n        <div className=\" \">\n          <div className=\"flex\">\n            <div className=\"\">\n              <img\n                src=\"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png\"\n                alt=\"Profile details\"\n                className=\"w-28\"\n              />\n            </div>\n            <div className=\"flex-1 pl-3\">\n              <h1 className=\"text-3xl font-bold\">\n                {user.fname} {user.lname}\n              </h1>\n              <section className=\"border-t my-1\">\n                <span className=\"text-gray-500 inlinr-block mr-2\">Sex:</span>\n                <b>{user.sex}</b>\n              </section>\n              <section className=\"border-t my-1\">\n                <span className=\"text-gray-500 inlinr-block mr-2\">Email:</span>\n                <b>{user.email}</b>\n              </section>\n              <section className=\"border-t my-1\">\n                <span className=\"text-gray-500 inlinr-block mr-2\">Phone:</span>\n                <b>{user.phone_number}</b>\n              </section>\n            </div>\n          </div>\n        </div>\n        <div className=\"mt-2 border-t grid grid-flow-col gap-4\">\n          <div className=\"\">\n            <h1 className=\"p-1 mb-1 bg-gray-600 text-center text-lg font-bold text-white\">\n              Education\n            </h1>\n            {sub_categories\n              .filter(\n                (sub_cat_check) =>\n                  sub_cat_check.category_id === EDUCATION_CATEGORY_ID\n              )\n              .map((sub_cat) => {\n                let documents_list = documents.filter(\n                  (doc) =>\n                    doc.sub_category_id === sub_cat.user_detail_subcategory_id\n                );\n                if (documents_list.length <= 0) return null;\n\n                return (\n                  <div\n                    key={sub_cat.user_detail_subcategory_id}\n                    className=\"border p-2 rounded mb-2\"\n                  >\n                    <h1 className=\"text-xl text-blue-500 font-bold\">\n                      {sub_cat.title}\n                    </h1>\n                    <div className=\"mt-1\">\n                      {documents_list.map((doc) => (\n                        <div key={doc.doc_id} className=\"p-1 border-t\">\n                          <b>\n                            {doc.category_subcategory_data\n                              ? doc.category_subcategory_data.title\n                              : \"Document\"}\n                          </b>\n                          <p>{doc.school?.school_name}</p>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                );\n              })}\n          </div>\n\n          <div className=\"\">\n            {categories\n              .filter(\n                (cat) => cat.user_detail_category_id !== EDUCATION_CATEGORY_ID\n              )\n              .map((category) => {\n                let sub_categories_list = sub_categories.filter(\n                  (itm) => itm.category_id === category.user_detail_category_id\n                );\n                if (sub_categories_list.length <= 0) return null;\n\n                return (\n                  <section key={category.user_detail_category_id}>\n                    <h1 className=\"p-1 mb-1 bg-gray-600 text-center text-xl font-bold text-white\">\n                      {category.title}\n                    </h1>\n                    {sub_categories_list.map((sub_cat) => {\n                      let documents_list = documents.filter(\n                        (doc) =>\n                          doc.sub_category_id ===\n                          sub_cat.user_detail_subcategory_id\n                      );\n                      if (documents_list.length <= 0) return null;\n\n                      return (\n                        <div\n                          key={sub_cat.user_detail_subcategory_id}\n                          className=\"border p-2 rounded mb-2\"\n                        >\n                          <h1 className=\"text-xl text-blue-500 font-bold\">\n                            {sub_cat.title}\n                          </h1>\n                          <div className=\"mt-1\">\n                            {documents_list.map((doc) => (\n                              <div key={doc.doc_id} className=\"p-1 border-t\">\n                                {doc.title.length >= 2 && <b>{doc.title} </b>}-{\" \"}\n                                <b>{sub_cat.title}</b> -{\" \"}\n                                <b>\n                                  {doc.category_subcategory_data\n                                    ? doc.category_subcategory_data.title\n                                    : \"Document\"}\n                                </b>\n                                <p>{doc.school?.school_name}</p>\n                              </div>\n                            ))}\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </section>\n                );\n              })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default PrintCV;\n","import React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  FC_GetProfileDetails,\n  FC_DeleteDocument,\n  FC_Access,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport {\n  DocumentSubCategories,\n  DocumentsCategories,\n  DocumentsCategoriesWithCount,\n  DocumentUser,\n} from \"../../interfaces\";\n\nimport Profile from \"./Profile\";\nimport DocumentDetails from \"./DocumentDetails\";\nimport { AddUserDocument } from \"../../components/AddUserDocument/AddUserDocument\";\nimport { EditProfileDetails } from \"./EditProfileDetails\";\nimport { EditUserDocument } from \"../../components/EditUserDocument/EditUserDocument\";\nimport { ChangePassword } from \"../../components/ChangePassword/ChangePassword\";\nimport DocumentsList from \"./DocumensList\";\nimport {\n  MainItem,\n  SideNavigation,\n  // SubItem,\n  // SubItemContainer,\n} from \"../../components/Navigation/SideNavigation\";\nimport { MdAssignmentInd } from \"react-icons/md\";\nimport { UserAccessList } from \"../../utils/auth_access\";\nimport PrintCV from \"../../components/PrintCV/PrintCV\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\n// import { useReactToPrint } from 'react-to-print';\n// import ReactToPrint from \"react-to-print\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  FC_GetProfileDetails: Function;\n  FC_DeleteDocument: Function;\n}\n\ninterface AppState {\n  loading: boolean;\n  selected_category: DocumentsCategories | null;\n  selected_sub_category: DocumentSubCategories | null;\n  selected_doc: DocumentUser | null;\n  edit_doc: DocumentUser | null;\n  create_new_doc: boolean;\n  error: {\n    target: string;\n    msg: string;\n  };\n  updateProfile: boolean;\n  changePassword: boolean;\n  side_nav: boolean;\n  printCV: boolean;\n}\n\nclass _ProfileDetails extends React.PureComponent<AppProps, AppState> {\n  CvRef: any;\n  constructor(props: AppProps) {\n    super(props);\n    this.CvRef = React.createRef();\n    this.state = {\n      loading: false,\n      selected_category: null,\n      selected_sub_category: null,\n      selected_doc: null,\n      edit_doc: null,\n      create_new_doc: false,\n      error: {\n        target: \"\",\n        msg: \"\",\n      },\n      updateProfile: false,\n      changePassword: false,\n      side_nav: false,\n      printCV: false,\n    };\n  }\n\n  componentDidMount = () => {\n    this.setState({\n      loading: true,\n    });\n    this.props.FC_GetProfileDetails(\n      this.props.auth.user.user_id,\n      (status: boolean, msg: string) => {\n        if (status === true) {\n          this.setState({\n            loading: false,\n          });\n        } else {\n          this.setState({\n            loading: false,\n            error: {\n              msg: msg,\n              target: \"all\",\n            },\n          });\n        }\n      }\n    );\n\n    console.log({\n      User_access: FC_Access(this.props.auth, UserAccessList.do_exam),\n    });\n  };\n\n  categoryHandler = (value: DocumentsCategories | null) =>\n    this.setState({\n      selected_category: value,\n      selected_sub_category: null,\n    });\n\n  subCategoryHandler = (value: DocumentSubCategories) =>\n    this.setState({\n      selected_sub_category: value,\n    });\n\n  selectDocHandler = (value: DocumentUser | null) => {\n    this.setState({\n      selected_doc: value,\n    });\n  };\n\n  editDocHandler = (value: DocumentUser | null) => {\n    this.setState({\n      edit_doc: value,\n    });\n  };\n\n  addNewDocHandler = () =>\n    this.setState((prevState: AppState) => ({\n      create_new_doc: !prevState.create_new_doc,\n    }));\n\n  deleteDocHandler = (id: string) => {\n    if (window.confirm(\"Are you sure you want to delete?\") === true) {\n      this.props.FC_DeleteDocument(\n        { doc_id: id, user_id: this.props.auth.user.user_id },\n        (status: boolean, msg: string) => {\n          if (status === true) {\n            console.log(\"Success\");\n          } else {\n            this.setState({\n              error: {\n                target: \"all\",\n                msg: \"\",\n              },\n            });\n          }\n        }\n      );\n    }\n  };\n\n  updateDocHandler = (doc: DocumentUser | null) => {\n    console.log({ update_doc: doc });\n    this.setState({\n      edit_doc: doc,\n      selected_doc: null,\n    });\n  };\n\n  changePasswordHadler = () =>\n    this.setState((prevState: AppState) => ({\n      changePassword: !prevState.changePassword,\n    }));\n\n  updateProfileHandler = () =>\n    this.setState((prevState: AppState) => ({\n      updateProfile: !prevState.updateProfile,\n    }));\n\n  sideNavHandler = () =>\n    this.setState((prevState: AppState) => ({\n      side_nav: !prevState.side_nav,\n    }));\n\n  openCB_Toogle = () =>\n    this.setState((prevState: AppState) => ({\n      printCV: !prevState.printCV,\n    }));\n\n  //  handlePrint = () => useReactToPrint({\n  //     content: () => this.CvRef.current,\n  //   });\n\n  render() {\n    const {\n      user,\n      document_types: { categories, sub_categories },\n      documents,\n    } = this.props.auth;\n    let category_with_counts: DocumentsCategoriesWithCount[] = categories.map(\n      (cat: DocumentsCategories) => {\n        return {\n          ...cat,\n          count: documents.filter(\n            (doc) => doc.category_id === cat.user_detail_category_id\n          ).length,\n        } as DocumentsCategoriesWithCount;\n      }\n    );\n\n    if (this.state.loading === true) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading profile...\n        </div>\n      );\n    }\n    return (\n      <Fragment>\n        {/* print CV */}\n        {this.state.printCV === true && (\n          <Modal\n            widthSizeClass={ModalSize.extraLarge}\n            backDrop={true}\n            backDropClose={true}\n            close={() => this.openCB_Toogle()}\n            displayClose={true}\n            theme={Themes.default}\n            title={\n              <label className=\"text-xl m-0 text-bold text-gray-700\">\n                Your CV{\" \"}\n              </label>\n            }\n            padding={{ body: true, footer: true, title: true }}\n          >\n            <PrintCV\n              user={this.props.auth.user}\n              documentTypes={this.props.auth.document_types}\n              documents={this.props.auth.documents}\n              // close={this.openCB_Toogle}\n            />\n          </Modal>\n        )}\n        <SideNavigation>\n          {/* <Search data={[1, 2, 3]} /> */}\n\n          <section onClick={() => this.categoryHandler(null)} className=\"mt-4\">\n            <MainItem\n              title={\"Profile\"}\n              count={0}\n              active={this.state.selected_category === null ? true : false}\n            />\n          </section>\n          <div className=\"pt-1\">\n            {category_with_counts.map((itm, i: number) => (\n              <Fragment key={itm.title}>\n                <section\n                  onClick={() => this.categoryHandler(itm)}\n                  title={itm.description}\n                >\n                  <MainItem\n                    title={itm.title}\n                    count={itm.count}\n                    active={\n                      this.state.selected_category?.user_detail_category_id ===\n                      itm.user_detail_category_id\n                        ? true\n                        : false\n                    }\n                  />\n                </section>\n\n                {/* {this.state.selected_category?.user_detail_category_id ===\n                  itm.user_detail_category_id &&\n                  sub_categories.filter(\n                    (el) => el.category_id === itm.user_detail_category_id\n                  ).length >= 1 && (\n                    <SubItemContainer>\n                      {sub_categories\n                        .filter(\n                          (el) => el.category_id === itm.user_detail_category_id\n                        )\n                        .map((sub_itm) => (\n                          <section\n                            key={sub_itm.user_detail_subcategory_id}\n                            onClick={() => this.subCategoryHandler(sub_itm)}\n                            title={sub_itm.description}\n                          >\n                            <SubItem\n                              title={sub_itm.title}\n                              icon={MdLabel}\n                              active={\n                                this.state.selected_sub_category\n                                  ?.user_detail_subcategory_id ===\n                                sub_itm.user_detail_subcategory_id\n                                  ? true\n                                  : false\n                              }\n                            />\n                          </section>\n                        ))}\n                    </SubItemContainer>\n                  )} */}\n              </Fragment>\n            ))}\n          </div>\n\n          <button\n            onClick={this.openCB_Toogle}\n            className=\"btn bg-blue-200 text-blue-600 text-center mt-2 w-full\"\n          >\n            <MdAssignmentInd className=\"inline-block mr-1\" /> Open my CV\n          </button>\n        </SideNavigation>\n\n        {this.state.create_new_doc === true && (\n          <AddUserDocument\n            close={this.addNewDocHandler}\n            category={this.state.selected_category}\n            sub_category={null}\n          />\n        )}\n\n        {this.state.edit_doc !== null && (\n          <EditUserDocument\n            categories={this.props.auth.document_types.categories}\n            document={this.state.edit_doc}\n            close={() => this.setState({ edit_doc: null })}\n          />\n        )}\n\n        {this.state.selected_doc !== null && (\n          <Fragment>\n            <DocumentDetails\n              category={this.state.selected_category}\n              sub_category={this.state.selected_sub_category}\n              doc={this.state.selected_doc}\n              categories={categories}\n              sub_categories={sub_categories}\n              close={() => this.selectDocHandler(null)}\n              Update={this.updateDocHandler}\n              Delete={this.deleteDocHandler}\n            />\n          </Fragment>\n        )}\n\n        {/* // edit progile */}\n        {this.state.updateProfile === true && (\n          <EditProfileDetails close={this.updateProfileHandler} />\n        )}\n\n        {/* // edit progile */}\n        {this.state.changePassword === true && (\n          <ChangePassword close={this.changePasswordHadler} />\n        )}\n\n        <div className=\"\">\n          <div className=\"mt-3  pt-2\">\n            <div className=\"shadow rounded bg-white bg-opacity-50\">\n              {this.state.selected_category === null ? (\n                <Profile\n                  user={user}\n                  access_name={this.props.auth.user_access.role}\n                  district_name={this.props.auth.user_access.district_name}\n                  school_name={this.props.auth.user_access.school_name}\n                  changePassword={this.changePasswordHadler}\n                  editProfile={this.updateProfileHandler}\n                />\n              ) : (\n                <DocumentsList\n                  documents={documents}\n                  selected_category={this.state.selected_category}\n                  selected_sub_category={this.state.selected_sub_category}\n                  selectDoc={this.selectDocHandler}\n                  addNewDoc={this.addNewDocHandler}\n                  categories={categories}\n                  sub_categories={sub_categories}\n                  Delete={this.deleteDocHandler}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({ auth }: StoreState): { auth: Auth } => {\n  return { auth: auth };\n};\n\nexport const ProfileDetails = connect(mapStateToProps, {\n  FC_GetProfileDetails,\n  FC_DeleteDocument,\n})(_ProfileDetails);\n"],"sourceRoot":""}
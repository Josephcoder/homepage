{"version":3,"sources":["components/Modal/Modal.tsx","components/Table/Table.tsx","components/Navigation/SideNavigation.tsx","actions/users.ts","containers/UserManagement/UserAccess.tsx","containers/UserManagement/UserList.tsx","shared/blank_profile.png","containers/UserManagement/UserRole.tsx","containers/UserManagement/index.tsx"],"names":["Themes","ModalMarginTop","ModalSize","Modal","props","themeColor","title","backDrop","theme","close","backDropClose","widthSizeClass","displayClose","padding","body","footer","primary","secondary","danger","success","warning","onClick","className","undefined","marginTop","none","style","width","maxHeight","height","maxWidth","overflowY","margin","zIndex","default","children","sortThisColumn","tableId","table","rows","switching","i","x","y","shouldSwitch","colIndex","dir","switchcount","document","getElementById","length","getElementsByTagName","innerHTML","toLowerCase","parentNode","insertBefore","Table","tr","columns","hideColumns","pagination","search","tableSize","tableClass","rounded","searchBG","thColor","loading","result","characters","charactersLength","charAt","Math","floor","random","FC_makeID","useState","totalItems","setTotalItems","totalPages","setTotalPages","currentPage","setCurrentPage","pages","setPages","pageSize","setPageSize","startIndex","setStartIndex","endIndex","setEndIndex","useEffect","tablePagination","ceil","min","_pages","Array","from","keys","map","display","type","placeholder","onChange","e","data","filterType","filter","td","cols","textContent","innerText","indexOf","filterTable","target","value","disabled","Number","id","column","index","alignText","isSortAllowed","columnTitle","aria-label","page","pageIndex","_SideNavigation","componentDidMount","PageHasSubNav","componentWillUnmount","state","this","auth","isAuthenticated","navActive","system","navigation","React","Component","SideNavigation","connect","NavToogle","MainItem","icon","MdBrightness1","active","count","IconDefined","SubItemContainer","SubItem","fetchUserAccess","dispatch","a","setAxiosToken","axios","get","API","AUTH","res","console","log","users_response","ActionTypes","FETCH_USERS_ACCESS","payload","error","user_error","blockUserToSystem","BLOCK_USER_TO_SYSTEM","unBlockUserToSystem","UNBLOCK_USER_TO_SYSTEM","assignRoleToUserAccess","ASSIGN_ROLE_TO_USER","customizeUserAccess","CUSTOMIZE_USER_ACCESS","resetUserAccess","RESET_USER_ACCESS","verifyAllDocument","VERIFY_ALL_DOCUMENT","UserAccess","userInfo","setFeedBack","setUserAccess","feedBack","userAccess","currentAccess","setCurrentAccess","setLoadind","loadindRequest","setLoadindRequest","createPermission","setCreatePermission","viewPermission","setViewPermission","updatePermission","setUpdatePermission","deletePermission","setDeletePermission","overrideUserAccess","default_access","custome_access","overideAccess","key","access","findCustom","find","custom","push","Object","entries","handleCustomization","preventDefault","message","task","findIndex","permitted","create","view","update","delete","user_id","custome_user_access_id","patch","post","customize_access","errorToText","onSubmit","checked","ModalState","roleList","district","schoolList","roomList","setChangeRole","setLoading","loadingForm","setLoadingForm","roleId","setRoleId","provinceId","setProvinceId","districtId","setDistrictId","schoolId","setSchoolId","roomId","setRoomlId","centerId","setCenterId","selectedRole","setSelectedRole","system_user_role_id","role","LOAD_province","district_id","LocationsInArray","item","province_id","room_id","room_found","center_id","center","school_id","LOAD_school","_id","assignRoleToUser","window","confirm","formData","status","school_required","district_required","room_required","role_error","Loading","required","province","province_name","districts","district_name","school","school_name","center_name","room","room_name","colSpan","LocationData","locationTemp","p","d","centers","c","rooms","r","examination_center_id","examination_center_room_id","room_number","toString","capacity","occupied","users","userTypes","manageUser","setManageUser","manageUserId","setManageUserId","changeRole","loadingRequest","setLoadingRequest","loadingRequestType","setLoadingRequestType","setSchoolList","setRoomList","roomTable","setRoomTables","loadSchools","APPLICATION","loadRooms","blockUser","actionType","restUserAccess","resetedAccess","user","reseting_user_access","info","user_info","fname","lname","email","sex","getRoleById","capitalizeFirstLetter","userItem","src","photo","profile","alt","dist","n_id","phone_number","is_active","TabTypes","UserManagment","userList","accessRoles","fetchAccessRoles","allUser","activeUser","blockedUser","labelCounts","setLabelCounts","All_Users","userTabs","setDistrict","userData","setUserData","filterByRoleLevel","setFilerByRoleLevel","loadDistrict","filterByRole","code_error","sub_itm","MdLabel","Blocked_Users","Active_Users"],"mappings":"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","file":"static/js/26.f76b03a7.chunk.js","sourcesContent":["/**\n * @description Modal design\n * @done_by Niyongabo\n */\nimport { MdClose } from \"react-icons/md\";\n\nexport enum Themes {\n  default = \"default\",\n  primary = \"primary\",\n  secondary = \"secondary\",\n  danger = \"danger\",\n  success = \"success\",\n  warning = \"warning\",\n}\n\nexport enum ModalMarginTop {\n  none = \"top-0\",\n  small = \"top-28\",\n  medium = \"top-1/3\",\n  large = \"top-1/2\",\n  extra = \"top-2/3\",\n}\n\nexport enum ModalSize {\n  small = \"max-w-sm\",\n  medium = \"max-w-screen-sm\",\n  large = \"max-w-screen-md\",\n  extraLarge = \"max-w-screen-lg\",\n  maxWidth = \"max-w-screen h-full\",\n}\n\ninterface ModalInterface {\n  title?: any;\n  backDrop: boolean;\n  theme: Themes;\n  close: Function;\n  backDropClose: boolean;\n  footer?: any;\n  children: any;\n  widthSizeClass: ModalSize;\n  displayClose: boolean;\n  padding: { title?: boolean; body?: boolean; footer?: boolean };\n  marginTop?: ModalMarginTop;\n}\n\nconst Modal = (props: ModalInterface): JSX.Element => {\n  const {\n    title,\n    backDrop,\n    theme,\n    close,\n    backDropClose,\n    widthSizeClass,\n    displayClose,\n    padding = { title: true, body: true, footer: true },\n  }: ModalInterface = props;\n\n  let themeColor: string;\n\n  switch (theme) {\n    case Themes.primary:\n      themeColor = \"blue-500\";\n      break;\n    case Themes.secondary:\n      themeColor = \"gray-300\";\n      break;\n    case Themes.danger:\n      themeColor = \"red-500\";\n      break;\n    case Themes.success:\n      themeColor = \"green-500\";\n      break;\n    case Themes.warning:\n      themeColor = \"yellow-500\";\n      break;\n    default:\n      themeColor = \"white\";\n      break;\n  }\n  return (\n    <>\n      <div onClick={(): void => backDropClose && close()} className={`animate__animated animate__fadeIn animate__faster modal fixed bg-black bg-opacity-${backDrop === true ? '60' : '0'}`}></div>\n      <div className={`fixed items-center justify-items-center ${props.marginTop === undefined ? ModalMarginTop.none : props.marginTop} left-0 right-0 bottom-0 bg-white rounded shadow-xl self-center ${widthSizeClass} animate__animated ${props.marginTop !== undefined && props.marginTop !== ModalMarginTop.none ? \"animate__fadeInUp\" : \"animate__zoomIn\"} animate__faster`} style={{width: '100%', maxHeight: '99vh', height: `${widthSizeClass === ModalSize.maxWidth ? props.marginTop === undefined ? \"100%\" : \"unset\" : \"fit-content\"}`, overflowY: 'auto', margin: 'auto', zIndex: 99999999}}>\n        <div className={`flex justify-between bg-${themeColor} ${padding.title === true ? \"py-4 px-4\" : \"\" } rounded-t text-${theme === Themes.default || theme === Themes.secondary ? \"black\" : \"white\"}`}>\n          {!title || title === \"\" ? <div></div> : (<h4 className={`text-lg font-bold `}>{title}</h4>)}\n          {displayClose === false ? \"\" : <div className=\"hover:text-red-600 hover:bg-red-100 rounded-full p-1 h-8 w-8\"><MdClose className=\"cursor-pointer font-extrabold text-2xl\" onClick={():void => close()} /></div>}\n        </div>\n        <div\n          className={`space-x-3 ${padding.body === true ? \"py-4 px-4\" : \"\"}`}\n        >\n          <div>{props.children !== \"\" ? props.children : \"\"}</div>\n        </div>\n        {props.footer !== undefined && props.footer !== \"\" ? (\n          <div\n            className={`flex float-right ${\n              padding.footer === true ? \"py-4 px-4\" : \"\"\n            }`}\n          >\n            {props.footer}\n          </div>\n        ) : ( \n          \"\"\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Modal;\n","import React, { useEffect, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport { MdNavigateBefore, MdNavigateNext, MdSearch } from \"react-icons/md\";\n\nconst FC_makeID = (length: number = 5): string => {\n  let result: string = \"\";\n  let characters: string =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  let charactersLength = characters.length;\n  for (let i: number = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\nexport const sortThisColumn = (\n  tableId: string,\n  colIndex: number = 0,\n  dir: \"asc\" | \"desc\" = \"asc\"\n) => {\n  var table,\n    rows,\n    switching,\n    i,\n    x,\n    y,\n    shouldSwitch,\n    switchcount = 0;\n  table = document.getElementById(tableId) as HTMLTableElement;\n  switching = true;\n  /* Make a loop that will continue until\n  no switching has been done: */\n  if (table) {\n    while (switching) {\n      //start by saying: no switching is done:\n      switching = false;\n      rows = table.rows;\n      /*Loop through all table rows (except the\n    first, which contains table headers):*/\n      for (i = 1; i < rows.length - 1; i++) {\n        //start by saying there should be no switching:\n        shouldSwitch = false;\n        /*Get the two elements you want to compare,\n      one from current row and one from the next:*/\n        x = rows[i].getElementsByTagName(\"TD\")[colIndex];\n        y = rows[i + 1].getElementsByTagName(\"TD\")[colIndex];\n        /*check if the two rows should switch place,\n      based on the direction, asc or desc:*/\n        if (dir === \"asc\" && x && y) {\n          if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        } else if (dir === \"desc\" && x && y) {\n          if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        }\n      }\n      if (shouldSwitch && rows[i].parentNode) {\n        /*If a switch has been marked, make the switch\n      and mark that a switch has been done:*/\n        rows[i].parentNode!.insertBefore(rows[i + 1], rows[i]);\n        switching = true;\n        //Each time a switch is done, increase this count by 1:\n        switchcount++;\n      } else {\n        /*If no switching has been done AND the direction is \"asc\",\n      set the direction to \"desc\" and run the while loop again.*/\n        if (switchcount === 0 && dir === \"asc\") {\n          dir = \"desc\";\n          switching = true;\n        }\n      }\n      // if (i === 0) continue;\n      // rows.cells[i].style.backgroundColor = \"blue\";\n    }\n  }\n};\n\nexport interface TableColumnsInterface {\n  columnTitle: JSX.Element | string;\n  alignText: string;\n  padding?: string;\n  isSortAllowed?: boolean;\n}\n\ninterface TableProps {\n  columns: TableColumnsInterface[];\n  rows: Function;\n  hideColumns?: boolean;\n  pagination?: boolean;\n  search?: boolean;\n  tableSize?: string;\n  tableClass?: string;\n  tableId?: string;\n  rounded?: boolean;\n  searchBG?: string;\n  thColor?: string;\n  loading?: boolean;\n}\n\nconst Table: React.FC<TableProps> = ({\n  rows,\n  columns,\n  hideColumns = false,\n  pagination = false,\n  search = false,\n  tableSize = \"w-full\",\n  tableClass,\n  tableId = \"myTable\",\n  rounded = false,\n  searchBG = \"bg-gray-200\",\n  thColor = \"blue\",\n  loading = false,\n}) => {\n  const startPage = 1;\n  tableId = tableId === \"myTable\" ? FC_makeID() : tableId;\n  let table: HTMLElement, tr: HTMLCollectionOf<HTMLTableRowElement>;\n  const [totalItems, setTotalItems] = useState<number>(0);\n  const [totalPages, setTotalPages] = useState<number>(1);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [pages, setPages] = useState<number[]>();\n  const [pageSize, setPageSize] = useState<number>(10);\n  const [startIndex, setStartIndex] = useState<number>(0);\n  const [endIndex, setEndIndex] = useState<number>(0);\n\n  useEffect(() => {\n    pagination && tablePagination();\n  });\n\n  const filterTable = (\n    data: string,\n    filterType?: \"default\" | \"field\"\n  ): void => {\n    var filter, tr, td, rows: number, cols: number, txtValue;\n    if (filterType === \"field\" && data === \"all\") data = \"\";\n    filter = data.toLowerCase();\n    table = document.getElementById(tableId)!;\n    tr = table.getElementsByTagName(\"tr\");\n    for (rows = 0; rows < tr.length; rows++) {\n      for (cols = 0; cols < columns.length; cols++) {\n        td = tr[rows].getElementsByTagName(\"td\")[cols];\n        if (td) {\n          txtValue = td.textContent || td.innerText;\n          if (txtValue.toLowerCase().indexOf(filter) > -1) {\n            tr[rows].style.display = \"\";\n            break;\n          } else {\n            tr[rows].style.display = \"none\";\n          }\n        }\n      }\n    }\n  };\n\n  const tablePagination = (): void => {\n    table = document.getElementById(tableId)!;\n    tr = table.getElementsByTagName(\"tr\");\n    setTotalItems(tr.length);\n    setTotalPages(Math.ceil(totalItems / pageSize));\n\n    // calculate start and end item indexes on the current page\n    setStartIndex((currentPage - 1) * pageSize);\n    setEndIndex(Math.min(startIndex + pageSize - 1, totalItems - 1));\n\n    /**\n     * TODO!\n     * There is a problem with this condition\n     */\n    let _pages = Array.from(Array(totalPages + 1 - startPage).keys()).map(\n      (i) => startPage + i\n    );\n    if (!pages || _pages.length !== pages.length) {\n      setPages(_pages);\n    }\n\n    for (let i: number = 0; i < tr.length; i++) {\n      if (i >= startIndex && i <= endIndex) {\n        tr[i].style.display = \"\";\n      } else {\n        tr[i].style.display = \"none\";\n      }\n    }\n  };\n\n  return (\n    <div className={`${tableSize}`}>\n      {/* search box  */}\n      {search && (\n        <div className={`${searchBG} w-full mb-2`}>\n          {search && (\n            <div className=\"bg-white rounded flex items-center w-full p-2 border-2 border-gray-500\">\n              <MdSearch className=\"h-5 w-5 fill-current text-gray-400\" />\n              <input\n                type=\"search\"\n                placeholder=\"search\"\n                onChange={(e) => filterTable(e.target.value)}\n                className=\"w-full h-6 pl-4 text-sm outline-none focus:outline-none bg-transparent\"\n                disabled={loading}\n              />\n\n              {pagination && (\n                <div className=\"select\">\n                  <select\n                    className=\"text-base outline-none focus:outline-none bg-transparent\"\n                    onChange={(e) => setPageSize(Number(e.target.value))}\n                    disabled={loading}\n                  >\n                    <option value=\"10\">10</option>\n                    <option value=\"25\">25</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                  </select>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n      <table\n        className={\n          tableClass\n            ? tableClass\n            : `w-full shadow ${\n                rounded && \"sm:rounded-lg\"\n              } table-auto order-table max-w-full`\n        }\n        id={tableId}\n      >\n        {!hideColumns && (\n          <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-base\">\n            <tr\n              className={`text-left tracking-wide bg-${thColor}-100 border-b-2 border-${thColor}-500 text-${thColor}-600 overflow-hidden`}\n            >\n              {columns.map((column, index) => (\n                <th\n                  key={index}\n                  className={`${column.padding} text-${\n                    column.alignText\n                  } px-3 py-2 ${column.isSortAllowed && \"cursor-pointer\"}`}\n                  onClick={() =>\n                    column.isSortAllowed && sortThisColumn(tableId, index)\n                  }\n                >\n                  <div className=\"flex items-center gap-1\">\n                    {column.columnTitle}\n                    {column.isSortAllowed && <BiSort />}\n                  </div>\n                </th>\n              ))}\n            </tr>\n          </thead>\n        )}\n        <tbody id=\"table-data\" className=\"bg-white text-black text-base\">\n          {rows()}\n        </tbody>\n      </table>\n      {pagination && (\n        <div className=\"sm:flex-1 sm:flex sm:items-center sm:justify-between mt-4 work-sans\">\n          <div>\n            <span className=\"text-xs xs:text-sm text-gray-900\">\n              Showing 1 to {pageSize} of {totalItems - 1} Entries\n            </span>\n          </div>\n          <div>\n            <nav className=\"inline-flex shadow-sm\">\n              <div>\n                <button\n                  type=\"button\"\n                  className={`inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 text-sm font-medium text-gray-500 ${\n                    currentPage !== 1 && \"bg-white\"\n                  }`}\n                  aria-label=\"Previous\"\n                  disabled={currentPage === 1 || loading}\n                  onClick={() => setCurrentPage(currentPage - 1)}\n                >\n                  <MdNavigateBefore className=\"h-5 w-5\" />\n                </button>\n              </div>\n              <div>\n                {pages &&\n                  pages.map((page, pageIndex) => (\n                    <button\n                      key={pageIndex}\n                      className={`-ml-px inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium text-gray-700 ${\n                        page !== currentPage\n                          ? \"bg-white\"\n                          : \"bg-gray-100 cursor-default\"\n                      }`}\n                      disabled={page === currentPage || loading}\n                      onClick={() => setCurrentPage(page)}\n                    >\n                      {page}\n                    </button>\n                  ))}\n              </div>\n              <div>\n                <button\n                  type=\"button\"\n                  className={`inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 text-sm leading-5 font-medium text-gray-500 ${\n                    currentPage !== totalPages && \"bg-white\"\n                  }`}\n                  aria-label=\"Next\"\n                  disabled={currentPage === totalPages || loading}\n                  onClick={() => setCurrentPage(currentPage + 1)}\n                >\n                  <MdNavigateNext className=\"h-5 w-5\" />\n                </button>\n              </div>\n            </nav>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Table;\n","import React, { FC, ReactElement, ReactNode } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, System } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { NavToogle, PageHasSubNav } from \"../../actions\";\nimport { MdBrightness1, MdSearch } from \"react-icons/md\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  system: System;\n  PageHasSubNav: Function;\n  NavToogle: Function;\n  children: ReactNode;\n}\n//\ninterface AppState {\n  loading: boolean;\n}\n\nclass _SideNavigation extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount = () => this.props.PageHasSubNav(true);\n  componentWillUnmount = () => this.props.PageHasSubNav(false);\n\n  render() {\n    const isAuthenticated = this.props.auth.isAuthenticated;\n\n    if (isAuthenticated === false) {\n      return null;\n    }\n\n    const navActive = this.props.system.navigation;\n    return (\n      <div\n        className={`fixed w-48 p-1 pr-2 pl-6 text-gray-700 bg-white ${\n          navActive === true ? \"lg:left-16  left-16\" : \" -left-72 lg:left-16\"\n        }  top-0 bottom-0 pt-20 z-30 shadow-lg  transition-all duration-500 ease-in-out overflow-y-auto`}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n}: StoreState): { auth: Auth; system: System } => {\n  return { auth: auth, system: system };\n};\n\nexport const SideNavigation = connect(mapStateToProps, {\n  NavToogle,\n  PageHasSubNav,\n})(_SideNavigation);\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SearchComponentInterface = {\n  data: any[];\n};\n\nexport const Search: FC<SearchComponentInterface> = ({\n  data,\n}): ReactElement => {\n  return (\n    <div className=\"m-1 rounded-md shadow-md border border-blue-400 bg-white p-1 flex \">\n      <label htmlFor=\"search-text\" className=\"inline-block text-2xl\">\n        <MdSearch className=\"inline-block text-blue-400\" />\n      </label>\n      <input\n        type=\"search\"\n        className=\"outline-none bg-transparent flex-1 pl-1\"\n        placeholder=\"Search\"\n        id=\"search-text\"\n      />\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype MainItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const MainItem: FC<MainItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n  return (\n    <section\n      className={`${\n        active === true\n          ? \"bg-blue-500 text-white font-bold\"\n          : \"bg-blue-100 text-blue-800\"\n      } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex cursor-pointer items-center`}\n    >\n      <section className=\"flex-1\">\n        <IconDefined className=\"inline-block mr-1 text-xs\" />\n        <span>{title}</span>\n      </section>\n\n      {count > 0 ? (\n        <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n          {count}\n        </span>\n      ) : null}\n    </section>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemContainerComponentInterface = {\n  children: ReactNode;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const SubItemContainer: FC<SubItemContainerComponentInterface> = ({\n  children,\n}): ReactElement => {\n  return (\n    <div className=\"ml-3 overflow-y-auto border-l-2 border-blue-200 -mt-1 pt-2 mb-2 pl-1 cursor-pointer\">\n      {children}\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n * @important Remenber to use these components inside the <SubItemContainer>...</SubItemContainer>\n */\nexport const SubItem: FC<SubItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n\n  return (\n    <div\n      className={`animate__animated animate__zoomIn animate__faster ${\n        active === true ? \"bg-blue-500 text-white font-bold\" : \" text-blue-800\"\n      } text-blue-800 bg-blue-200 rounded-md px-1 mb-1 flex items-center py-1 font-bold`}\n    >\n      <IconDefined\n        className={`inline-block mr-0.1 text-xs ${\n          active === true ? \"text-white\" : \"\"\n        }`}\n      />\n      <span\n        className={`inline-block pl-1 ${active === true ? \"text-white\" : \"\"}`}\n      >\n        {title}\n      </span>\n      {count >= 1 ? (\n        <span\n          className={`text-sm fint-bold ${active === true ? \"text-white\" : \"\"}`}\n        >\n          {count}\n        </span>\n      ) : null}\n    </div>\n  );\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AssignRoleToUserActionInterface,\n  CustomeAccessInterface,\n  UserInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\ninterface FetchUsersAction {\n  type: ActionTypes.FETCH_USERS_ACCESS;\n  payload: UserInterface[];\n}\n\ninterface BlockUserToSystem {\n  type: ActionTypes.BLOCK_USER_TO_SYSTEM | ActionTypes.UNBLOCK_USER_TO_SYSTEM;\n  payload: string;\n}\n\ninterface AssignRoleToUserAction {\n  type: ActionTypes.ASSIGN_ROLE_TO_USER;\n  payload: AssignRoleToUserActionInterface;\n}\n\ninterface CustomizeUserAccessAction {\n  type: ActionTypes.CUSTOMIZE_USER_ACCESS;\n  payload: CustomeAccessInterface;\n}\n\ninterface ResetUserAccessAction {\n  type: ActionTypes.RESET_USER_ACCESS;\n  payload: string;\n}\n\nexport interface VerifyDocumentInterface {\n  user_id: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date?: string;\n  };\n}\n\ninterface VerifyAllDocumentAction {\n  type: ActionTypes.VERIFY_ALL_DOCUMENT;\n  payload: VerifyDocumentInterface;\n}\n\nexport type AccessUserActionType =\n  | FetchUsersAction\n  | BlockUserToSystem\n  | AssignRoleToUserAction\n  | CustomizeUserAccessAction\n  | ResetUserAccessAction\n  | VerifyAllDocumentAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const fetchUserAccess = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<UserInterface[]>(`${API.AUTH}/users`);\n      console.log({ users_response: res });\n      dispatch<FetchUsersAction>({\n        type: ActionTypes.FETCH_USERS_ACCESS,\n        payload: res.data,\n      });\n    } catch (error) {\n      console.error({ user_error: error });\n    }\n  };\n};\n\nexport const blockUserToSystem = (data: string) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<BlockUserToSystem>({\n      type: ActionTypes.BLOCK_USER_TO_SYSTEM,\n      payload: data,\n    });\n  };\n};\n\nexport const unBlockUserToSystem = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<BlockUserToSystem>({\n      type: ActionTypes.UNBLOCK_USER_TO_SYSTEM,\n      payload: data,\n    });\n  };\n};\n\nexport const assignRoleToUserAccess = (\n  data: AssignRoleToUserActionInterface\n) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<AssignRoleToUserAction>({\n      type: ActionTypes.ASSIGN_ROLE_TO_USER,\n      payload: data,\n      // payload: response.data,\n    });\n  };\n};\n\nexport const customizeUserAccess = (data: CustomeAccessInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CustomizeUserAccessAction>({\n      type: ActionTypes.CUSTOMIZE_USER_ACCESS,\n      payload: data,\n    });\n  };\n};\n\nexport const resetUserAccess = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<ResetUserAccessAction>({\n      type: ActionTypes.RESET_USER_ACCESS,\n      payload: data,\n    });\n  };\n};\n\nexport const verifyAllDocument = (data: VerifyDocumentInterface) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<VerifyAllDocumentAction>({\n      type: ActionTypes.VERIFY_ALL_DOCUMENT,\n      payload: data,\n    });\n  };\n};\n","import axios from \"axios\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { BiRightArrowAlt } from \"react-icons/bi\";\nimport {\n  MdDelete,\n  MdEdit,\n  MdHighlightOff,\n  MdRemoveRedEye,\n  MdSettings,\n} from \"react-icons/md\";\nimport { SiAddthis } from \"react-icons/si\";\nimport { TiInputChecked } from \"react-icons/ti\";\nimport { connect } from \"react-redux\";\nimport { customizeUserAccess } from \"../../actions/users\";\nimport Table from \"../../components/Table/Table\";\nimport {\n  AccessTaskInterface,\n  CustomeAccessInterface,\n  UserInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\n\ninterface AppProps {\n  userInfo: UserInterface;\n  manageUserId: string;\n  customizeUserAccess: Function;\n  setFeedBack: React.Dispatch<\n    React.SetStateAction<{\n      type: \"success\" | \"danger\" | \"warning\" | \"\";\n      message: string;\n    }>\n  >;\n  feedBack: {\n    type: \"success\" | \"danger\" | \"warning\" | \"\";\n    message: string;\n  };\n  setUserAccess: React.Dispatch<\n    React.SetStateAction<AccessTaskInterface[] | null>\n  >;\n  userAccess: AccessTaskInterface[] | null;\n  setCurrentAccess: React.Dispatch<\n    React.SetStateAction<AccessTaskInterface | null>\n  >;\n  currentAccess: AccessTaskInterface | null;\n}\n\nconst _UserAccess: React.FC<AppProps> = ({\n  userInfo,\n  customizeUserAccess,\n  setFeedBack,\n  feedBack,\n  setUserAccess,\n  userAccess,\n  currentAccess,\n  setCurrentAccess,\n}) => {\n  const [loading, setLoadind] = useState<boolean>(true);\n  const [loadindRequest, setLoadindRequest] = useState<boolean>(false);\n  // const [currentAccess, setCurrentAccess] =\n  //   useState<AccessTaskInterface | null>();\n  // const [userAccess, setUserAccess] = useState<AccessTaskInterface[] | null>();\n  const [createPermission, setCreatePermission] = useState<boolean>(false);\n  const [viewPermission, setViewPermission] = useState<boolean>(false);\n  const [updatePermission, setUpdatePermission] = useState<boolean>(false);\n  const [deletePermission, setDeletePermission] = useState<boolean>(false);\n\n  const overrideUserAccess = (\n    default_access: AccessTaskInterface[],\n    custome_access: AccessTaskInterface[]\n  ) => {\n    console.log({ default_access, custome_access });\n    if (default_access && custome_access && custome_access.length > 0) {\n      let overideAccess: AccessTaskInterface[] = [];\n      for (const [key, access] of Object.entries(default_access)) {\n        const findCustom = custome_access.find(\n          (custom) => custom.id === access.id\n        );\n        if (findCustom) {\n          overideAccess.push(findCustom);\n        } else {\n          overideAccess.push(access);\n        }\n        console.log(key);\n      }\n      setUserAccess(overideAccess);\n    }\n  };\n\n  useEffect(() => {\n    const overrideUserAccess = (\n      default_access: AccessTaskInterface[],\n      custome_access: AccessTaskInterface[]\n    ) => {\n      if (default_access && custome_access && custome_access.length > 0) {\n        let overideAccess: AccessTaskInterface[] = [];\n        for (const [key, access] of Object.entries(default_access)) {\n          const findCustom = custome_access.find(\n            (custom) => custom.id === access.id\n          );\n          if (findCustom) {\n            overideAccess.push(findCustom);\n          } else {\n            overideAccess.push(access);\n          }\n          console.log(key);\n        }\n        setUserAccess(overideAccess);\n      }\n    };\n\n    if (userInfo && userInfo.custome_access) {\n      userInfo.default_access &&\n        overrideUserAccess(\n          userInfo.default_access.access,\n          userInfo.custome_access.access\n        );\n    }\n    console.log(\"nturebase\");\n  }, [userInfo, setUserAccess]);\n\n  useEffect(() => {\n    if (userInfo && !userInfo.custome_access) {\n      userInfo.default_access && setUserAccess(userInfo.default_access.access);\n    }\n    setLoadind(false);\n  }, [userInfo, setUserAccess]);\n\n  const tableData = (): JSX.Element[] => {\n    if (!userAccess)\n      return [\n        <tr key={46}>\n          <td>No data</td>\n        </tr>,\n      ];\n    return userAccess.map((access, i) => (\n      <tr\n        key={i + access.id}\n        className={`text-left border-b border-gray-200 cursor-pointer ${\n          currentAccess &&\n          currentAccess.id === access.id &&\n          \"bg-gray-300 shadow-md my-3 hover:bg-gray-100\"\n        }`}\n        onClick={() =>\n          currentAccess\n            ? (setCurrentAccess(null),\n              setCreatePermission(false),\n              setViewPermission(false),\n              setUpdatePermission(false),\n              setDeletePermission(false))\n            : (setCurrentAccess(access),\n              setCreatePermission(access.permitted.create),\n              setViewPermission(access.permitted.view),\n              setUpdatePermission(access.permitted.update),\n              setDeletePermission(access.permitted.delete))\n        }\n      >\n        <td className=\"px-2 py-1\">\n          <label className=\"inline-flex items-center\">\n            {/* <input\n              type=\"radio\"\n              name=\"taskAccess\"\n              value={access.id}\n              className=\"form-radio h-4 w-4 text-gray-600\"\n              onChange={() => {\n                currentAccess\n                  ? this.setState({ currentAccess: null })\n                  : this.setState({ currentAccess: access });\n              }}\n              checked={currentAccess ? true : false}\n            /> */}\n            <span className=\"text-gray-900 capitalize text-xl font-normal cursor-pointer\">\n              {access.task}\n            </span>\n          </label>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.create ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.create ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.create ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.view ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.view ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.view ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.update ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.update ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.update ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.delete ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.delete ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.delete ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n      </tr>\n    ));\n  };\n\n  const handleCustomization = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setLoadindRequest(true);\n    setFeedBack({\n      type: \"\",\n      message: \"\",\n    });\n    let task: [] | CustomeAccessInterface | null = null;\n    task = userInfo.custome_access;\n    let index = -1;\n\n    try {\n      if (task && currentAccess) {\n        index = task.access.findIndex(\n          (access) => access.id === currentAccess.id\n        );\n        if (index >= 0) {\n          task.access[index].permitted.create = createPermission;\n          task.access[index].permitted.view = viewPermission;\n          task.access[index].permitted.update = updatePermission;\n          task.access[index].permitted.delete = deletePermission;\n        } else {\n          task.access.push({\n            id: currentAccess.id,\n            task: currentAccess.task,\n            key: currentAccess.key,\n            permitted: {\n              create: createPermission,\n              view: viewPermission,\n              update: updatePermission,\n              delete: deletePermission,\n            },\n          });\n        }\n      } else if (currentAccess) {\n        task = {\n          access: [\n            {\n              id: currentAccess.id,\n              task: currentAccess.task,\n              key: currentAccess.key,\n              permitted: {\n                create: createPermission,\n                view: viewPermission,\n                update: updatePermission,\n                delete: deletePermission,\n              },\n            },\n          ],\n          user_id: userInfo.user_id,\n          custome_user_access_id: \"\",\n        };\n      }\n\n      if (task) {\n        let res;\n        if (userInfo.custome_access !== null) {\n          res = await axios.patch<{ data: CustomeAccessInterface }>(\n            `${API.AUTH}/custaccess`,\n            {\n              access: task.access,\n              user_id: userInfo.user_id,\n            }\n          );\n        } else {\n          res = await axios.post<{ data: CustomeAccessInterface }>(\n            `${API.AUTH}/custaccess`,\n            {\n              access: task.access,\n              user_id: userInfo.user_id,\n            }\n          );\n        }\n\n        if (res) {\n          task.custome_user_access_id = res.data.data.custome_user_access_id;\n          console.log({ task });\n          console.log(res.data.data);\n\n          customizeUserAccess(task);\n          task &&\n            userInfo.default_access &&\n            overrideUserAccess(userInfo.default_access.access, task.access);\n          setFeedBack({\n            type: \"success\",\n            message: `Reseting User Access complete successfully`,\n          });\n\n          task = null;\n          setCurrentAccess(null);\n          setCreatePermission(false);\n          setViewPermission(false);\n          setUpdatePermission(false);\n          setDeletePermission(false);\n        }\n      }\n    } catch (error) {\n      console.error({ customize_access: error });\n      setFeedBack({\n        type: \"danger\",\n        message: errorToText(error),\n      });\n    }\n    setLoadindRequest(false);\n  };\n\n  if (loading === true || userInfo === null) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading User Access...\n      </div>\n    );\n  }\n\n  if (loading) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading...\n      </div>\n    );\n  }\n\n  return (\n    <Fragment>\n      <div className=\"grid grid-cols-5 gap-4 my-4\">\n        <div className=\"col-span-2 bg-white w-full shadow-lg text-center p-2\">\n          <span className=\"text-gray-600 mt-2 font-semibold text-2xl\">\n            Settings\n          </span>\n          {!loading && (\n            <Table\n              columns={[\n                {\n                  columnTitle: \"Access Name\",\n                  alignText: \"left\",\n                  padding: \"p-3\",\n                },\n                { columnTitle: \"Create\", alignText: \"left\" },\n                { columnTitle: \"View\", alignText: \"left\" },\n                { columnTitle: \"Update\", alignText: \"left\" },\n                { columnTitle: \"Delete\", alignText: \"left\" },\n              ]}\n              rows={tableData}\n              pagination={false}\n              search={true}\n              searchBG=\"bg-gray-50\"\n              thColor=\"gray\"\n            />\n          )}\n        </div>\n        <div className=\"col-span-3\">\n          {!currentAccess ? (\n            <div className=\"w-full flex flex-col items-center text-gray-600 gap-1 py-3\">\n              <MdSettings className=\"w-20 h-20\" />\n              <span className=\"text-12\">Choose Access to Customize</span>\n            </div>\n          ) : (\n            <div>\n              <h1 className=\"text-3xl font-medium text-center my-3 text-gray-900\">\n                Customize User Access\n              </h1>\n              <div className=\"flex justify-center\">\n                <h2 className=\"text-2xl font-semibold text-center text-gray-600 flex flex-row items-center\">\n                  <BiRightArrowAlt className=\"w-7 h-7\" />\n                  {currentAccess.task}\n                </h2>\n              </div>\n\n              <div className=\"flex flex-col\">\n                <form\n                  className=\"flex flex-col items-center\"\n                  onSubmit={(e) => handleCustomization(e)}\n                >\n                  <div className=\"inline-flex gap-2 items-center\">\n                    <SiAddthis className=\"w-7 h-7 text-gray-600\" />\n                    <div className=\"flex flex-col\">\n                      <h3 className=\"font-semibold text-xl\">Create</h3>\n                      <span className=\"text-gray-600 text-sm md:pr-1\">\n                        This permission gives the user the ability to create\n                      </span>\n                    </div>\n                    <input\n                      type=\"checkbox\"\n                      className=\"form-checkbox h-7 w-7 text-teal-600\"\n                      onChange={() => setCreatePermission(!createPermission)}\n                      checked={createPermission}\n                      disabled={loadindRequest}\n                    />\n                  </div>\n                  <div className=\"inline-flex gap-2 items-center\">\n                    <MdRemoveRedEye className=\"w-7 h-7 text-gray-600\" />\n                    <div className=\"flex flex-col\">\n                      <h3 className=\"font-semibold text-xl\">View</h3>\n                      <span className=\"text-gray-600 text-sm md:pr-4\">\n                        This permission gives the user the ability to view\n                      </span>\n                    </div>\n                    <input\n                      type=\"checkbox\"\n                      className=\"form-checkbox h-7 w-7 text-teal-600\"\n                      onChange={() => setViewPermission(!viewPermission)}\n                      checked={viewPermission}\n                      disabled={loadindRequest}\n                    />\n                  </div>\n                  <div className=\"inline-flex gap-2 items-center\">\n                    <MdEdit className=\"w-7 h-7 text-gray-600\" />\n                    <div className=\"flex flex-col\">\n                      <h3 className=\"font-semibold text-xl\">Update</h3>\n                      <span className=\"text-gray-600 text-sm\">\n                        This permission gives the user the ability to update\n                      </span>\n                    </div>\n                    <input\n                      type=\"checkbox\"\n                      className=\"form-checkbox h-7 w-7 text-teal-600\"\n                      onChange={() => setUpdatePermission(!updatePermission)}\n                      checked={updatePermission}\n                      disabled={loadindRequest}\n                    />\n                  </div>\n                  <div className=\"inline-flex gap-2 items-center\">\n                    <MdDelete className=\"w-7 h-7 text-gray-600\" />\n                    <div className=\"flex flex-col\">\n                      <h3 className=\"font-semibold text-xl\">Delete</h3>\n                      <span className=\"text-gray-600 text-sm md:pr-1\">\n                        This permission gives the user the ability to delete\n                      </span>\n                    </div>\n                    <input\n                      type=\"checkbox\"\n                      className=\"form-checkbox h-7 w-7 text-teal-600\"\n                      onChange={() => setDeletePermission(!deletePermission)}\n                      checked={deletePermission}\n                      disabled={loadindRequest}\n                    />\n                  </div>\n\n                  <div className=\"flex items-center justify-center w-full py-3 gap-2\">\n                    {/* <button className=\"btn btn-secondary bg-red-600\">Back</button> */}\n                    <button\n                      className=\"btn bg-gray-500 hover:bg-gray-700 focus:outline-none text-white\"\n                      disabled={loadindRequest}\n                      onClick={() => {\n                        setCurrentAccess(null);\n                        setCreatePermission(false);\n                        setViewPermission(false);\n                        setUpdatePermission(false);\n                        setDeletePermission(false);\n                      }}\n                    >\n                      Cancel\n                    </button>\n                    <button className=\"btn btn-blue\" disabled={loadindRequest}>\n                      {!loadindRequest ? \"Save Change\" : \"Processing..\"}\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport const UserAccess = connect(null, {\n  customizeUserAccess,\n})(_UserAccess);\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { MdErrorOutline, MdClose, MdLock } from \"react-icons/md\";\nimport Table from \"../../components/Table/Table\";\n\nimport { capitalizeFirstLetter, getRoleById } from \"../../shared/dataTest\";\nimport { connect } from \"react-redux\";\nimport {\n  AccessTaskInterface,\n  DistrictInterface,\n  LocationRoomTableInterface,\n  RoomLocationInterface,\n  SchoolsInterface,\n  SystemUserRoleInterface,\n  UserInterface,\n} from \"../../shared/interfaces\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport profile from \"../../shared/blank_profile.png\"; // with im\nimport { UserAccess } from \"./UserAccess\";\nimport UserRole from \"./UserRole\";\nimport {\n  blockUserToSystem,\n  unBlockUserToSystem,\n  resetUserAccess,\n} from \"../../actions/users\";\nimport { errorToText } from \"../../utils/errors\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport Loading from \"../../components/Loading/Loading\";\n\nexport enum ModalState {\n  View_User = \"View User Info\",\n  Add_Access = \"Add Access To User\",\n  Update_Access = \"Update User Access\",\n  Close_Modal = \"Close Modal\",\n}\n\ninterface AppProps {\n  users: UserInterface[];\n  roleList: SystemUserRoleInterface[];\n  userTypes: \"all\" | \"active\" | \"blocked\";\n  district: DistrictInterface[];\n  blockUserToSystem: Function;\n  unBlockUserToSystem: Function;\n  resetUserAccess: Function;\n}\n\n// Tobe replaced with Emmy's function\nexport const LocationsInArray = (\n  LocationData: RoomLocationInterface[]\n): LocationRoomTableInterface[] | [] => {\n  let locationTemp: LocationRoomTableInterface[] = [];\n  for (let p in LocationData) {\n    let districts = LocationData[p].districts;\n    for (let d in districts) {\n      let centers = districts[d].centers;\n      for (let c in centers) {\n        let rooms = centers[c].rooms;\n        for (let r in rooms) {\n          locationTemp.push({\n            province_id: LocationData[p].province_id,\n            province_name: LocationData[p].province_name,\n            district_id: districts[d].district_id,\n            district_name: districts[d].district_name,\n            center_id: centers[c].examination_center_id,\n            center_name: centers[c].center_name,\n            room_id: rooms[r].examination_center_room_id,\n            room_name: rooms[r].room_number.toString(),\n            capacity: rooms[r].capacity,\n            occupied: rooms[r].occupied,\n          });\n        }\n      }\n    }\n  }\n  return locationTemp;\n};\n\nconst UserList: React.FC<AppProps> = ({\n  users,\n  roleList,\n  userTypes,\n  district,\n  blockUserToSystem,\n  unBlockUserToSystem,\n  resetUserAccess,\n}) => {\n  const [feedBack, setFeedBack] = useState<{\n    type: \"success\" | \"danger\" | \"warning\" | \"\";\n    message: string;\n  }>({ type: \"\", message: \"\" });\n  const [manageUser, setManageUser] = useState<UserInterface | null>();\n  const [manageUserId, setManageUserId] = useState<string>(\"\");\n  const [changeRole, setChangeRole] = useState<boolean>(false);\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n  const [loadingRequestType, setLoadingRequestType] = useState<\n    \"RESET\" | \"STATUS\" | \"CHANGE_ROLE\" | null\n  >(null);\n  const [schoolList, setSchoolList] = useState<SchoolsInterface[] | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [roomList, setRoomList] = useState<RoomLocationInterface[] | null>(\n    null\n  );\n  const [roomTable, setRoomTables] = useState<\n    LocationRoomTableInterface[] | null\n  >(null);\n  const [userAccess, setUserAccess] = useState<AccessTaskInterface[] | null>(\n    null\n  );\n  const [currentAccess, setCurrentAccess] =\n    useState<AccessTaskInterface | null>(null);\n\n  const loadSchools = async () => {\n    console.log(\"jk\");\n    setFeedBack({ type: \"\", message: \"\" });\n    setLoading(true);\n    try {\n      const res = await axios.get<SchoolsInterface[]>(\n        `${API.APPLICATION}/schools`\n      );\n      setSchoolList(res.data);\n      setLoading(false);\n    } catch (error) {\n      setFeedBack({ type: \"danger\", message: errorToText(error) });\n    }\n  };\n\n  useEffect(() => {\n    const loadRooms = async () => {\n      setFeedBack({ type: \"\", message: \"\" });\n      setLoading(true);\n\n      try {\n        const res = await axios.get<RoomLocationInterface[]>(\n          `${API.APPLICATION}/roomlocation`\n        );\n        setRoomList(res.data);\n        setRoomTables(LocationsInArray(res.data));\n        setLoading(false);\n      } catch (error) {\n        setFeedBack({ type: \"danger\", message: errorToText(error) });\n      }\n    };\n\n    loadSchools();\n    loadRooms();\n  }, []);\n\n  const tableData = (): JSX.Element[] => {\n    if (loading === true) {\n      return [\n        <tr key={1} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={8}>\n            <Loading />\n          </td>\n        </tr>,\n      ];\n    }\n\n    let data: UserInterface[] = users;\n    if (data.length <= 0) {\n      return [\n        <tr key={1} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={8}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    return data.map((user: UserInterface, index: number) => (\n      <tr key={index} className=\"border-b border-gray-200 hover:bg-gray-100\">\n        <td className=\"p-3 text-left whitespace-nowrap\">{index + 1}</td>\n        <td className=\"p-3 text-left\">\n          {console.log({ info: user.user_info })}\n          <span>\n            {user.user_info &&\n              user.user_info.fname + \" \" + user.user_info.lname}\n          </span>\n        </td>\n        <td className=\"p-3 text-left\">{user.email}</td>\n        {/* <td className=\"p-3 text-left\">{user.phone_number}</td> */}\n        <td className=\"p-3 text-left\">\n          {user.user_info && user.user_info.sex === \"M\" ? \"Male\" : \"Female\"}\n        </td>\n        <td className=\"p-3 text-left text-blue-700 text-base font-medium\">\n          {user.default_access &&\n            user.default_access.system_user_role_id &&\n            user.default_access.system_user_role_id && (\n              <span\n                className={`px-2 py-1 font-semibold rounded text-blue-700 bg-blue-100 dark:bg-blue-700 dark:text-blue-100`}\n              >\n                {getRoleById(roleList, user.default_access.system_user_role_id)\n                  ?.role &&\n                  capitalizeFirstLetter(\n                    getRoleById(\n                      roleList,\n                      user.default_access.system_user_role_id\n                    )?.role\n                  )}\n              </span>\n            )}\n        </td>\n        {/* {userTypes === \"all\" && (\n          <td>\n            {user.is_active ? (\n              <span className={`px-2 py-1 font-semibold text-green-700`}>\n                Active\n              </span>\n            ) : (\n              <span className={`px-2 py-1 font-semibold text-red-700`}>\n                Blocked\n              </span>\n            )}\n          </td>\n        )} */}\n        <td className=\"px-3 text-center\">\n          <button\n            className=\"btn bg-gray-200 hover:bg-blue-700 hover:text-white focus:outline-none\"\n            title=\"Manage User Access\"\n            onClick={() => {\n              setManageUser(user);\n              setManageUserId(user.user_id);\n            }}\n          >\n            Manage\n          </button>\n        </td>\n      </tr>\n    ));\n  };\n\n  const blockUser = (\n    user_id: string,\n    actionType: \"block\" | \"un-block\" = \"block\"\n  ): void => {\n    setFeedBack({\n      type: \"\",\n      message: \"\",\n    });\n    if (!user_id) {\n      setFeedBack({\n        type: \"warning\",\n        message: \"User Access is required doesn't exist\",\n      });\n    }\n\n    setLoadingRequest(true);\n\n    if (!window.confirm(`Are sure you want to ${actionType} this user?`)) {\n      return setLoadingRequest(false);\n    }\n    actionType === \"block\"\n      ? blockUserToSystem(user_id)\n      : unBlockUserToSystem(user_id);\n\n    setFeedBack({\n      type: \"success\",\n      message: `User has been ${\n        actionType === \"block\" ? \"block\" : \"unblock\"\n      }ed!`,\n    });\n\n    setLoadingRequest(false);\n    user_id = \"\";\n  };\n\n  const restUserAccess = async (user_id: string) => {\n    setFeedBack({\n      type: \"\",\n      message: \"\",\n    });\n    if (!user_id) {\n      setFeedBack({\n        type: \"warning\",\n        message: \"User Access is required doesn't exist\",\n      });\n    }\n\n    if (!window.confirm(`Are sure you want to reset to default access?`)) {\n      return setLoadingRequest(false);\n    }\n\n    setLoadingRequest(true);\n    setLoadingRequestType(\"RESET\");\n\n    try {\n      const res = await axios.delete(`${API.AUTH}/custaccess/user/${user_id}`);\n      res && resetUserAccess(user_id);\n      let resetedAccess: UserInterface = users.filter(\n        (user) => user.user_id === user_id\n      )[0];\n      resetedAccess.default_access &&\n        setUserAccess(resetedAccess.default_access.access);\n      setFeedBack({\n        type: \"success\",\n        message: `Reseting User Access complete successfully`,\n      });\n      setCurrentAccess(null);\n    } catch (error) {\n      console.error({ reseting_user_access: error });\n      setFeedBack({\n        type: \"danger\",\n        message: errorToText(error),\n      });\n    }\n\n    setLoadingRequest(false);\n    setLoadingRequestType(null);\n    user_id = \"\";\n  };\n\n  return (\n    <Fragment>\n      {feedBack && feedBack.type !== \"\" && (\n        <div\n          className={`alert-${feedBack.type} flex flex-row items-center relative`}\n        >\n          <span className=\"absolute top-0 bottom-0 right-0 px-4 py-3\">\n            <MdClose\n              className=\"h-5 w-5 text-gray-700 hover:font-bold\"\n              title=\"Close\"\n              onClick={() => setFeedBack({ type: \"\", message: \"\" })}\n            />\n          </span>\n          <MdErrorOutline className=\"h-10 w-10\" />\n          <div className=\"alert-content ml-4\">\n            <div className=\"alert-title font-semibold text-lg\">\n              {feedBack.type === \"success\" ? \"Success\" : \"Error\"}\n            </div>\n            <div className=\"alert-description text-sm\">{feedBack.message}</div>\n          </div>\n        </div>\n      )}\n      <div className=\"grid md:grid-cols-5 gap-2 mb-5\">\n        <div className={`md:col-span-5 rounded`}>\n          <div className=\"my-2 flex sm:flex-row flex-col justify-between\">\n            <div className=\"flex flex-col md:flex-row gap-1 items-center mx-1.5\">\n              {/* <span className=\"text-lg\">All User</span>\n              <MdChevronRight className=\"w-7 h-7\" />\n              <span className=\"text-lg underline\">All User</span> */}\n            </div>\n            {/* will be used later */}\n            {/* <div className=\"flex flex-row items-center gap-1\">\n              <button className=\"btn flex items-center p-1 bg-red-700 hover:bg-red-800 text-gray-100\">\n                <AiFillFilePdf className=\"h-6 w-6\" />\n                <p className=\" text-lg font-medium ml-2 \">PDF</p>\n              </button>\n\n              <button className=\"btn flex items-center p-1 bg-green-700 hover:bg-green-800 text-gray-100\">\n                <RiFileExcel2Fill className=\"w-6 h-6\" />\n                <div>\n                  <p className=\" text-lg font-medium ml-2 \">EXCEL</p>\n                </div>\n              </button>\n            </div> */}\n          </div>\n          {users && (\n            <Table\n              columns={[\n                { columnTitle: \"#\", alignText: \"left\", padding: \"p-3\" },\n                { columnTitle: \"Names\", alignText: \"left\", padding: \"p-3\" },\n                { columnTitle: \"Email\", alignText: \"left\", padding: \"p-3\" },\n                { columnTitle: \"Gender\", alignText: \"left\", padding: \"p-3\" },\n                { columnTitle: \"Role\", alignText: \"left\", padding: \"p-3\" },\n                // { columnTitle: \"Status\", alignText: \"left\", padding: \"p-3\" },\n                { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n              ]}\n              rows={tableData}\n              pagination={true}\n              search={true}\n              thColor=\"gray\"\n              loading={loading}\n            />\n          )}\n        </div>\n      </div>\n\n      {/* modal control */}\n      {manageUser && (\n        <Modal\n          backDrop={true}\n          theme={Themes.default}\n          close={(): void => {\n            setManageUser(null);\n            setChangeRole(false);\n            setFeedBack({ message: \"\", type: \"\" });\n          }}\n          displayClose={true}\n          backDropClose={false}\n          title={\n            <div className=\"text-gray-600 font-bold text-3xl md:ml-4\">\n              {manageUser.user_info.fname}'s access setting\n            </div>\n          }\n          widthSizeClass={ModalSize.maxWidth}\n          padding={{ title: true, body: false, footer: false }}\n        >\n          {/* User Access Select */}\n          <div className=\"bg-gray-100 h-auto px-12 py-3\">\n            {feedBack && feedBack.type !== \"\" && (\n              <div\n                className={`alert-${feedBack.type} flex flex-row items-center relative mb-4`}\n              >\n                <span className=\"absolute top-0 bottom-0 right-0 px-4 py-3\">\n                  <MdClose\n                    className=\"h-5 w-5 text-gray-700 hover:font-bold\"\n                    title=\"Close\"\n                    onClick={() => setFeedBack({ type: \"\", message: \"\" })}\n                  />\n                </span>\n                <MdErrorOutline className=\"h-10 w-10\" />\n                <div className=\"alert-content ml-4\">\n                  <div className=\"alert-title font-semibold text-lg\">\n                    {feedBack.type === \"success\" ? \"Success\" : \"Error\"}\n                  </div>\n                  <div className=\"alert-description text-sm\">\n                    {feedBack.message}\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {/* header */}\n            <div className=\"bg-white shadow-md px-4 py-2 flex flex-col md:flex-row items-center gap-x-14\">\n              {users\n                .filter((user) => user.user_id === manageUserId)\n                .map((userItem) => (\n                  <div\n                    key={userItem.user_id}\n                    className=\"flex items-center gap-3\"\n                  >\n                    <img\n                      src={\n                        userItem.user_info.photo !== \"pic\"\n                          ? userItem.user_info.photo\n                          : profile\n                      }\n                      alt=\"\"\n                      className=\"rounded-full w-32 h-32\"\n                    />\n                    <div className=\"flex flex-col gap-1\">\n                      <span className=\"text-2xl font-semibold\">\n                        {userItem.user_info.fname +\n                          \" \" +\n                          userItem.user_info.lname}\n                      </span>\n                      <div className=\"flex items-center\">\n                        <MdLock className=\"w-5 h-5\" />\n                        <span className=\"text-lg font-medium\">\n                          {userItem.default_access &&\n                            getRoleById(\n                              roleList,\n                              userItem.default_access.system_user_role_id\n                            ).role}\n                        </span>\n                      </div>\n                      <div className=\"flex items-center gap-1\">\n                        <span className=\"text-gray-500\">Level:</span>\n                        <span className=\"text-base font-medium\">\n                          {userItem.default_access &&\n                          getRoleById(\n                            roleList,\n                            userItem.default_access.system_user_role_id\n                          ).district_required\n                            ? \"District\"\n                            : userItem.default_access &&\n                              getRoleById(\n                                roleList,\n                                userItem.default_access.system_user_role_id\n                              ).school_required\n                            ? \"School\"\n                            : userItem.default_access &&\n                              getRoleById(\n                                roleList,\n                                userItem.default_access.system_user_role_id\n                              ).room_required\n                            ? \"Room\"\n                            : \"-\"}\n                        </span>\n                      </div>\n                      {userItem.default_access &&\n                      getRoleById(\n                        roleList,\n                        userItem.default_access.system_user_role_id\n                      ).district_required ? (\n                        <div className=\"flex items-center gap-1\">\n                          <span className=\"text-gray-500\">District:</span>\n                          <span className=\"text-base font-medium\">\n                            {userItem.default_access &&\n                              district &&\n                              district.filter(\n                                (dist) =>\n                                  dist.district_id ===\n                                  userItem.default_access?.district_id\n                              )[0].district_name}\n                          </span>\n                        </div>\n                      ) : userItem.default_access &&\n                        getRoleById(\n                          roleList,\n                          userItem.default_access.system_user_role_id\n                        ).school_required ? (\n                        <div className=\"flex items-center gap-1\">\n                          <span className=\"text-gray-500\">School:</span>\n                          <span className=\"text-base font-medium\">\n                            {schoolList &&\n                              schoolList.find(\n                                (school) =>\n                                  school._id ===\n                                  userItem.default_access?.school_id\n                              )?.school_name}\n                          </span>\n                        </div>\n                      ) : (\n                        userItem.default_access &&\n                        getRoleById(\n                          roleList,\n                          userItem.default_access.system_user_role_id\n                        ).room_required && (\n                          <div className=\"flex items-center gap-1\">\n                            <span className=\"text-gray-500\">Room:</span>\n                            <span className=\"text-base font-medium\">\n                              {roomTable &&\n                                roomTable.find(\n                                  (room) =>\n                                    room.room_id ===\n                                    userItem.default_access?.room_id\n                                )?.room_name}\n                            </span>\n                          </div>\n                        )\n                      )}\n                    </div>\n                  </div>\n                ))}\n              {users\n                .filter((user) => user.user_id === manageUserId)\n                .map((userItem) => (\n                  <div key={userItem.user_id} className=\"flex flex-col\">\n                    <div className=\"flex items-center gap-1\">\n                      <span className=\"text-gray-500\">NID:</span>\n                      <span className=\"text-base font-medium\">\n                        {userItem.n_id}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-1\">\n                      <span className=\"text-gray-500\">Email:</span>\n                      <span className=\"text-base font-medium\">\n                        {userItem.email}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-1\">\n                      <span className=\"text-gray-500\">Phone:</span>\n                      <span className=\"text-base font-medium\">\n                        {userItem.phone_number}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-1\">\n                      <span className=\"text-gray-500\">Status:</span>\n                      <span className=\"text-base font-medium\">\n                        {userItem.is_active === false ? \"Blocked\" : \"Active\"}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-1\">\n                      {userItem.custome_access && (\n                        <button\n                          className={`px-2 py-1 font-semibold text-gray-50 inline-flex items-center rounded ${\n                            loadingRequestType && loadingRequestType === \"RESET\"\n                              ? \"cursor-wait bg-gray-400\"\n                              : \"bg-gray-600\"\n                          }`}\n                          onClick={() => restUserAccess(userItem.user_id)}\n                          disabled={loadingRequest}\n                        >\n                          <MdLock className=\"w-4 h-4 fill-current\" />\n                          <span>\n                            {loadingRequestType &&\n                            loadingRequestType === \"RESET\"\n                              ? \"Reseting...\"\n                              : \"Reset Access\"}\n                          </span>\n                        </button>\n                      )}\n                      {!changeRole && (\n                        <button\n                          className=\"bg-yellow-600 px-2 py-1 font-semibold text-black inline-flex items-center rounded\"\n                          onClick={() => setChangeRole(true)}\n                        >\n                          <MdLock className=\"w-4 h-4 fill-current\" />\n                          <span>Change Role</span>\n                        </button>\n                      )}\n                      {userItem.is_active ? (\n                        <button\n                          className={`px-2 py-1 font-semibold hidden text-gray-100 inline-flex items-center rounded ${\n                            loadingRequestType &&\n                            loadingRequestType === \"STATUS\"\n                              ? \"cursor-wait bg-red-500\"\n                              : \"bg-red-700\"\n                          }`}\n                          onClick={() =>\n                            !loadingRequest &&\n                            manageUser &&\n                            blockUser(userItem.user_id)\n                          }\n                          disabled={loadingRequest}\n                        >\n                          <MdLock className=\"w-4 h-4 fill-current\" />\n                          <span>\n                            {loadingRequestType &&\n                            loadingRequestType === \"RESET\"\n                              ? \"Loading...\"\n                              : \"Activate\"}\n                          </span>\n                        </button>\n                      ) : (\n                        <button\n                          className={`px-2 py-1 font-semibold hidden text-gray-100 inline-flex items-center rounded ${\n                            loadingRequestType &&\n                            loadingRequestType === \"STATUS\"\n                              ? \"cursor-wait bg-yellow-500\"\n                              : \"bg-yellow-700\"\n                          }`}\n                          onClick={() =>\n                            !loadingRequest &&\n                            manageUser &&\n                            blockUser(userItem.user_id)\n                          }\n                          disabled={loadingRequest}\n                        >\n                          <MdLock className=\"w-4 h-4 fill-current\" />\n                          <span>\n                            {loadingRequestType &&\n                            loadingRequestType === \"RESET\"\n                              ? \"Loading...\"\n                              : \"Re-Activate\"}\n                          </span>\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                ))}\n            </div>\n            {/* end header */}\n\n            {/* content */}\n            {manageUser && changeRole ? (\n              <UserRole\n                userInfo={manageUser}\n                roleList={roleList}\n                district={district}\n                feedBack={feedBack}\n                setFeedBack={setFeedBack}\n                schoolList={schoolList}\n                roomList={roomList}\n                setChangeRole={setChangeRole}\n              />\n            ) : (\n              <UserAccess\n                userInfo={\n                  users.filter((user) => user.user_id === manageUserId)[0]\n                }\n                manageUserId={manageUserId}\n                feedBack={feedBack}\n                setFeedBack={setFeedBack}\n                setUserAccess={setUserAccess}\n                userAccess={userAccess}\n                setCurrentAccess={setCurrentAccess}\n                currentAccess={currentAccess}\n              />\n            )}\n            {/* end content */}\n          </div>\n        </Modal>\n      )}\n      {/* modal control */}\n    </Fragment>\n  );\n};\n\n// const mapStateToProps = ({ users }: StoreState): { users: UserInterface[] } => {\n//   return { users: users };\n// };\n\nexport default connect(null, {\n  blockUserToSystem,\n  unBlockUserToSystem,\n  resetUserAccess,\n})(UserList);\n","export default __webpack_public_path__ + \"static/media/blank_profile.c3f94521.png\";","import axios from \"axios\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { MdHighlightOff } from \"react-icons/md\";\nimport { TiInputChecked } from \"react-icons/ti\";\nimport { connect } from \"react-redux\";\nimport { assignRoleToUserAccess } from \"../../actions/users\";\nimport Loading from \"../../components/Loading/Loading\";\nimport Table from \"../../components/Table/Table\";\nimport {\n  AssignRoleToUserActionInterface,\n  DistrictInterface,\n  LocationRoomTableInterface,\n  RoomLocationInterface,\n  SchoolsInterface,\n  SystemUserRoleInterface,\n  UserInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport { LocationsInArray } from \"./UserList\";\n\ninterface AppProps {\n  userInfo: UserInterface;\n  roleList: SystemUserRoleInterface[];\n  district: DistrictInterface[];\n  setFeedBack: React.Dispatch<\n    React.SetStateAction<{\n      type: \"success\" | \"danger\" | \"warning\" | \"\";\n      message: string;\n    }>\n  >;\n  feedBack: {\n    type: \"success\" | \"danger\" | \"warning\" | \"\";\n    message: string;\n  };\n  assignRoleToUserAccess: Function;\n  schoolList: SchoolsInterface[] | null;\n  roomList: RoomLocationInterface[] | null;\n  setChangeRole: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst UserRole: React.FC<AppProps> = ({\n  userInfo,\n  roleList,\n  district,\n  setFeedBack,\n  feedBack,\n  assignRoleToUserAccess,\n  schoolList,\n  roomList,\n  setChangeRole,\n}) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingForm, setLoadingForm] = useState<boolean>(true);\n  const [loadindRequest, setLoadindRequest] = useState<boolean>(false);\n  const [roleId, setRoleId] = useState<string>(\"\");\n  const [provinceId, setProvinceId] = useState<string>(\"\");\n  const [districtId, setDistrictId] = useState<string>(\"\");\n  const [schoolId, setSchoolId] = useState<string>(\"\");\n  const [roomId, setRoomlId] = useState<string>(\"\");\n  const [centerId, setCenterId] = useState<string>(\"\");\n  const [selectedRole, setSelectedRole] =\n    useState<SystemUserRoleInterface | null>(null);\n\n  useEffect(() => {\n    if (roleList.length && userInfo) {\n      if (userInfo.default_access && loadingForm) {\n        if (!roleId.length) {\n          setRoleId(userInfo.default_access.system_user_role_id);\n          let result = roleList.find(\n            (role) => role.system_user_role_id === roleId\n          );\n          if (result) {\n            setSelectedRole(result);\n          }\n        }\n        let LOAD_province: LocationRoomTableInterface | undefined;\n        if (userInfo.default_access.district_id && roomList) {\n          LOAD_province = LocationsInArray(roomList).find(\n            (item) => item.district_id === userInfo.default_access!.district_id\n          );\n          LOAD_province && setProvinceId(LOAD_province.province_id);\n        } else if (userInfo.default_access.room_id && roomList) {\n          console.log({ room_found: roomList });\n          LOAD_province = LocationsInArray(roomList).find(\n            (item) => item.room_id === userInfo.default_access!.room_id\n          );\n          LOAD_province && console.log({ room_found: roomList });\n          LOAD_province && setProvinceId(LOAD_province.province_id);\n          LOAD_province && setDistrictId(LOAD_province.district_id);\n          LOAD_province && setCenterId(LOAD_province.center_id);\n          LOAD_province && console.log({ center: LOAD_province.center_id });\n          setRoomlId(userInfo.default_access.room_id);\n          setLoadingForm(false);\n        } else if (\n          userInfo.default_access.school_id &&\n          roomList &&\n          schoolList\n        ) {\n          let LOAD_school: SchoolsInterface | undefined = schoolList.find(\n            (item) => item._id === userInfo.default_access!.school_id\n          );\n          if (LOAD_school) {\n            LOAD_province = LocationsInArray(roomList).find(\n              (item) => item.district_id === LOAD_school?.district_id\n            );\n            LOAD_province && setProvinceId(LOAD_province.province_id);\n            LOAD_province && setDistrictId(LOAD_province.district_id);\n            setSchoolId(userInfo.default_access.school_id);\n            setLoadingForm(false);\n          }\n        } else {\n          setLoadingForm(false);\n        }\n      }\n\n      setLoading(false);\n    }\n  }, [\n    loadingForm,\n    roleId,\n    roleList,\n    roomId.length,\n    roomList,\n    schoolList,\n    userInfo,\n  ]);\n\n  // useEffect(() => {\n  //   if (roleList) {\n  //     let result = roleList.find((role) => role.system_user_role_id === roleId);\n  //     if (result) {\n  //       setSelectedRole(result);\n  //     }\n  //   }\n  // }, [roleList, roleId]);\n\n  // useEffect(() => {\n  //   if (selectedRole && selectedRole.school_required) {\n  //     console.log(\"school\");\n  //     loadSchools();\n  //   }\n  // },[]);\n\n  // useEffect(() => {\n  //   if (selectedRole && selectedRole.room_required) {\n  //     console.log(\"roomsss\");\n  //     loadRooms();\n  //   }\n  // });\n\n  const tableData = (): JSX.Element[] => {\n    if (!selectedRole && roleList) {\n      let result = roleList.find((role) => role.system_user_role_id === roleId);\n      if (result) {\n        setSelectedRole(result);\n        !districtId.length && setDistrictId(result.district_id);\n        !schoolId.length && setSchoolId(result.school_id);\n      }\n    }\n    if (selectedRole) {\n      return selectedRole.access.map((access, i) => (\n        <tr\n          key={i + access.id}\n          className={`text-left border-b border-gray-200 hover:bg-gray-100`}\n        >\n          <td className=\"px-2 py-1\">\n            <label className=\"inline-flex items-center\">\n              <span className=\"text-gray-900 capitalize text-xl font-normal cursor-pointer\">\n                {access.task}\n              </span>\n            </label>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.create ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.create ? (\n                <TiInputChecked />\n              ) : (\n                <MdHighlightOff />\n              )}\n              {access.permitted.create ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.view ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.view ? <TiInputChecked /> : <MdHighlightOff />}\n              {access.permitted.view ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.update ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.update ? (\n                <TiInputChecked />\n              ) : (\n                <MdHighlightOff />\n              )}\n              {access.permitted.update ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.delete ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.delete ? (\n                <TiInputChecked />\n              ) : (\n                <MdHighlightOff />\n              )}\n              {access.permitted.delete ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n        </tr>\n      ));\n    }\n    const optionB = [\n      <tr key=\"55re\">\n        <td colSpan={5} className=\"text-center px-2 py-2\">\n          No Default Access Available on this Role.\n        </td>\n      </tr>,\n    ];\n    return optionB;\n  };\n\n  const assignRoleToUser = async () => {\n    if (!selectedRole) {\n      return false;\n    }\n    if (!window.confirm(`Are sure you want to change user role?`)) {\n      return false;\n    }\n    setLoadindRequest(true);\n    let formData: AssignRoleToUserActionInterface = {\n      user_id: userInfo.user_id,\n      data: {\n        system_user_role_id: roleId,\n        status: 1,\n        role: selectedRole.role,\n        access: selectedRole.access,\n        school_id: selectedRole.school_required ? schoolId : \"\",\n        district_id: selectedRole.district_required ? districtId : \"\",\n        room_id: selectedRole.room_required ? roomId : \"\",\n      },\n    };\n\n    try {\n      const res = await axios.post(`${API.AUTH}/addroletouser`, {\n        user_id: userInfo.user_id,\n        system_user_role_id: roleId,\n        status: 1,\n        role: selectedRole.role,\n        access: true,\n        school_id: selectedRole.school_required ? schoolId : \"\",\n        district_id: selectedRole.district_required ? districtId : \"\",\n        room_id: selectedRole.room_required ? roomId : \"\",\n      });\n      if (res) {\n        assignRoleToUserAccess(formData);\n        setLoadindRequest(false);\n        setChangeRole(false);\n        setFeedBack({\n          type: \"success\",\n          message: `Assigning Role to User completed successfully`,\n        });\n      }\n    } catch (error) {\n      console.log({ role_error: error });\n      setFeedBack({ type: \"danger\", message: errorToText(error) });\n    }\n  };\n\n  if (loading === true || userInfo === null) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading...\n      </div>\n    );\n  }\n  return (\n    <Fragment>\n      <div className=\"grid grid-cols-3 gap-8 my-4\">\n        {/* left panel */}\n        <div className=\"col-span-1 bg-white w-full shadow-lg p-2\">\n          <div className=\"px-12 py-5 bg-white mx-auto rounded-2xl w-100\">\n            <h3 className=\"font-semibold text-2xl text-gray-800 mb-4\">\n              Change User Role\n            </h3>\n            {loadingForm ? (\n              <Loading />\n            ) : (\n              <div className=\"space-y-5\">\n                <div className=\"space-y-2\">\n                  <label className=\"text-sm font-medium text-gray-700 tracking-wide\">\n                    User Role\n                  </label>\n                  <select\n                    className=\"block w-full text-base bg-gray-50 text-grey-darker border border-gray-300 px-4 py-3 md:w-full focus:outline-none\"\n                    required\n                    value={roleId}\n                    onChange={(e) => {\n                      setRoleId(e.target.value);\n                      setProvinceId(\"\");\n                      setDistrictId(\"\");\n                      setSchoolId(\"\");\n                      setCenterId(\"\");\n                      setRoomlId(\"\");\n                    }}\n                    disabled={loadindRequest}\n                  >\n                    <option value=\"\">Choose Role</option>\n                    {roleList.map((role) => (\n                      <option\n                        key={role.system_user_role_id}\n                        value={role.system_user_role_id}\n                      >\n                        {role.role}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n                {selectedRole && selectedRole.room_required && (\n                  <div className=\"space-y-2\">\n                    <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                      Province\n                    </label>\n                    <select\n                      className=\"block w-full text-base bg-gray-50 text-grey-darker border border-gray-300 px-4 py-3 md:w-full focus:outline-none\"\n                      required\n                      onChange={(e) => {\n                        setProvinceId(e.target.value);\n                        setDistrictId(\"\");\n                        setSchoolId(\"\");\n                        setCenterId(\"\");\n                        setRoomlId(\"\");\n                      }}\n                      value={provinceId}\n                      disabled={loadindRequest}\n                    >\n                      <option value=\"\">Seleted province</option>\n                      {roomList &&\n                        roomList.map((province) => (\n                          <option\n                            key={province.province_id}\n                            value={province.province_id}\n                          >\n                            {province.province_name}\n                          </option>\n                        ))}\n                    </select>\n                  </div>\n                )}\n                {selectedRole &&\n                  (selectedRole.district_required ||\n                    selectedRole.room_required) && (\n                    <div className=\"space-y-2\">\n                      <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                        District\n                      </label>\n                      <select\n                        className=\"block w-full text-base bg-gray-50 text-grey-darker border border-gray-300 px-4 py-3 md:w-full focus:outline-none\"\n                        required\n                        onChange={(e) => {\n                          setDistrictId(e.target.value);\n                          setSchoolId(\"\");\n                          setCenterId(\"\");\n                          setRoomlId(\"\");\n                        }}\n                        value={districtId}\n                        disabled={loadindRequest}\n                      >\n                        <option value=\"\">Seleted district</option>\n                        {!provinceId\n                          ? district.map((district) => (\n                              <option\n                                key={district.district_id}\n                                value={district.district_id}\n                              >\n                                {district.district_name}\n                              </option>\n                            ))\n                          : roomList &&\n                            roomList\n                              .filter(\n                                (province) =>\n                                  province.province_id === provinceId\n                              )[0]\n                              .districts.map((district) => (\n                                <option\n                                  key={district.district_id}\n                                  value={district.district_id}\n                                >\n                                  {district.district_name}\n                                </option>\n                              ))}\n                      </select>\n                    </div>\n                  )}\n                {selectedRole && selectedRole.school_required && (\n                  <div className=\"space-y-2\">\n                    <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                      School\n                    </label>\n                    <select\n                      className=\"block w-full text-base bg-gray-50 text-grey-darker border border-gray-300 px-4 py-3 md:w-full focus:outline-none\"\n                      required\n                      onChange={(e) => {\n                        setSchoolId(e.target.value);\n                        setCenterId(\"\");\n                        setRoomlId(\"\");\n                      }}\n                      disabled={loadindRequest}\n                      value={schoolId}\n                    >\n                      <option value=\"\">Seleted school</option>\n                      {schoolList &&\n                        schoolList.map((school) => (\n                          <option value={school._id} key={school._id}>\n                            {school.school_name}\n                          </option>\n                        ))}\n                    </select>\n                  </div>\n                )}\n\n                {selectedRole && selectedRole.room_required && (\n                  <div className=\"space-y-2\">\n                    <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                      Center\n                    </label>\n                    <select\n                      className=\"block w-full text-base bg-gray-50 text-grey-darker border border-gray-300 px-4 py-3 md:w-full focus:outline-none\"\n                      required\n                      onChange={(e) => {\n                        setCenterId(e.target.value);\n                        setRoomlId(\"\");\n                      }}\n                      disabled={loadindRequest}\n                      value={centerId}\n                    >\n                      <option value=\"\">\n                        Select center:{\" \"}\n                        {districtId && districtId.length > 0\n                          ? console.log({ districtId })\n                          : \"Nta district\"}\n                      </option>\n                      {districtId &&\n                        districtId.length > 0 &&\n                        roomList &&\n                        LocationsInArray(roomList)\n                          .filter(\n                            (district) => district.district_id === districtId\n                          )\n                          .map((center, index) => (\n                            <option\n                              value={center.center_id}\n                              key={center.center_id + index}\n                            >\n                              {center.center_name}\n                            </option>\n                          ))}\n                    </select>\n                  </div>\n                )}\n\n                {selectedRole && selectedRole.room_required && (\n                  <div className=\"space-y-2\">\n                    <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                      Room\n                    </label>\n                    <select\n                      className=\"block w-full text-base bg-gray-50 text-grey-darker border border-gray-300 px-4 py-3 md:w-full focus:outline-none\"\n                      required\n                      onChange={(e) => setRoomlId(e.target.value)}\n                      disabled={loadindRequest}\n                      value={roomId}\n                    >\n                      <option value=\"\">Select room</option>\n                      {centerId &&\n                        roomList &&\n                        LocationsInArray(roomList)\n                          .filter((center) => center.center_id === centerId)\n                          .map((room, index) => (\n                            <option\n                              value={room.room_id}\n                              key={room.room_id + 300}\n                            >\n                              {room.room_name}\n                            </option>\n                          ))}\n                    </select>\n                  </div>\n                )}\n\n                <div className=\"flex justify-between 2xl:justify-start gap-2\">\n                  <button\n                    className=\"btn bg-gray-500 text-gray-50 focus:outline-none\"\n                    onClick={() => setChangeRole(false)}\n                    disabled={loadindRequest}\n                  >\n                    Back\n                  </button>\n                  <button\n                    className=\"btn btn-blue focus:outline-none\"\n                    onClick={() => assignRoleToUser()}\n                    disabled={loadindRequest}\n                  >\n                    {loadindRequest ? \"Loading...\" : \"Save Change\"}\n                  </button>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n        {/* end left panel */}\n\n        {/* right panel */}\n        <div className=\"col-span-2 bg-white w-full shadow-lg text-center py-4 px-12\">\n          <div className=\"my-4\">\n            <span className=\"text-gray-600 font-semibold text-2xl\">\n              {selectedRole?.role}'s Default Access\n            </span>\n          </div>\n          {!loading && (\n            <Table\n              columns={[\n                {\n                  columnTitle: \"Access Name\",\n                  alignText: \"left\",\n                  padding: \"p-3\",\n                },\n                { columnTitle: \"Create\", alignText: \"left\" },\n                { columnTitle: \"View\", alignText: \"left\" },\n                { columnTitle: \"Update\", alignText: \"left\" },\n                { columnTitle: \"Delete\", alignText: \"left\" },\n              ]}\n              rows={tableData}\n              pagination={false}\n              search={false}\n              searchBG=\"bg-gray-50\"\n              thColor=\"gray\"\n              tableId=\"defaultAccess\"\n            />\n          )}\n        </div>\n        {/* end right panel */}\n      </div>\n    </Fragment>\n  );\n};\n\nexport default connect(null, { assignRoleToUserAccess })(UserRole);\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  MdClose,\n  MdErrorOutline,\n  MdLabel,\n  MdSupervisorAccount,\n} from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { StoreState } from \"../../reducers\";\n\nimport { fetchUserAccess } from \"../../actions/users\";\nimport { fetchAccessRoles } from \"../../actions/access\";\n\nimport UserList from \"./UserList\";\n\nimport {\n  DistrictInterface,\n  SystemUserRoleInterface,\n  UserInterface,\n} from \"../../shared/interfaces\";\nimport {\n  MainItem,\n  SideNavigation,\n  SubItem,\n  SubItemContainer,\n} from \"../../components/Navigation/SideNavigation\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\n\nenum TabTypes {\n  All_Users = \"All Users\",\n  Active_Users = \"Active Users\",\n  Blocked_Users = \"Blocked Users\",\n}\n\ninterface AppProps {\n  userList: UserInterface[];\n  accessRoles: SystemUserRoleInterface[];\n  fetchUserAccess: Function;\n  fetchAccessRoles: Function;\n}\n\nconst _UserManagment: React.FC<AppProps> = ({\n  userList,\n  accessRoles,\n  fetchUserAccess,\n  fetchAccessRoles,\n}) => {\n  const [labelCounts, setLabelCounts] = useState<{\n    allUser: number;\n    activeUser: number;\n    blockedUser: number;\n  }>({\n    allUser: 0,\n    activeUser: 0,\n    blockedUser: 0,\n  });\n  const [userTabs, setUserTabs] = useState<TabTypes>(TabTypes.All_Users);\n  const [feedBack, setFeedBack] = useState<{\n    type: \"success\" | \"danger\" | \"warning\" | \"\";\n    message: string;\n  }>();\n  const [district, setDistrict] = useState<DistrictInterface[]>();\n  const [userData, setUserData] = useState<UserInterface[]>();\n  const [filterByRoleLevel, setFilerByRoleLevel] = useState<\"all\" | string>(\"\");\n  const [loading, setLoading] = useState<boolean>(true);\n\n  useEffect(() => {\n    if (!accessRoles.length) {\n      fetchAccessRoles();\n    }\n    if (!userList.length) {\n      fetchUserAccess();\n    }\n    if (!district) {\n      loadDistrict();\n    }\n    if (accessRoles.length && userList.length) {\n      console.log({ userList });\n      setUserData(userList);\n      // REAL CODES TO BE USED ======================\n      // setLabelCounts({\n      //   allUser: userList.length,\n      //   activeUser: userList.filter((user) => user.is_active).length,\n      //   blockedUser: userList.filter((user) => !user.is_active).length,\n      // });\n\n      // FAKE CODES TO BE USED FOR DISPLAY ======================\n      setLabelCounts({\n        allUser: userList.length,\n        activeUser: userList.filter((user) => !user.is_active).length,\n        blockedUser: userList.filter((user) => user.is_active).length,\n      });\n      setLoading(false);\n    }\n  }, [\n    accessRoles.length,\n    userList,\n    district,\n    fetchAccessRoles,\n    fetchUserAccess,\n  ]);\n\n  const handleTabs = (): JSX.Element => {\n    if (userTabs === TabTypes.Blocked_Users && district && userData) {\n      return (\n        <UserList\n          users={userData.filter((user) => !user.is_active)}\n          roleList={accessRoles}\n          userTypes=\"blocked\"\n          district={district}\n        />\n      );\n    } else if (userTabs === TabTypes.Active_Users && district && userData) {\n      return (\n        <UserList\n          users={userData.filter((user) => user.is_active)}\n          roleList={accessRoles}\n          userTypes=\"active\"\n          district={district}\n        />\n      );\n    } else if (district && userData) {\n      return (\n        <UserList\n          users={userData}\n          roleList={accessRoles}\n          userTypes=\"all\"\n          district={district}\n        />\n      );\n    } else return <div></div>;\n  };\n\n  const filterByRole = (value: string = \"all\") => {\n    let result: UserInterface[];\n    if (value === \"all\") {\n      setFilerByRoleLevel(\"all\");\n      setUserData(userList);\n      setLabelCounts({\n        allUser: userList.length,\n        activeUser: userList.filter((user) => user.is_active).length,\n        blockedUser: userList.filter((user) => !user.is_active).length,\n      });\n    } else {\n      setFilerByRoleLevel(value);\n      result = userList.filter(\n        (user) =>\n          user.default_access &&\n          user.default_access.system_user_role_id === value\n      );\n      setUserData(result);\n      setLabelCounts({\n        allUser: result.length,\n        activeUser: result.filter((user) => user.is_active).length,\n        blockedUser: result.filter((user) => !user.is_active).length,\n      });\n    }\n  };\n\n  const countByRole = (value: string): number => {\n    if (value === \"all\") {\n      return userList.length;\n    }\n    return userList.filter(\n      (user) =>\n        user.default_access && user.default_access.system_user_role_id === value\n    ).length;\n  };\n\n  const loadDistrict = async () => {\n    try {\n      const res = await axios.get<DistrictInterface[]>(\n        `${API.APPLICATION}/district`\n      );\n      setDistrict(res.data);\n    } catch (error) {\n      console.log({ code_error: error });\n    }\n  };\n\n  if (loading === true) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading users...\n      </div>\n    );\n  }\n\n  return (\n    <Fragment>\n      <SideNavigation>\n        {/* <Search data={[1, 2, 3]} /> */}\n\n        <span className=\"text-sm mt-2\">Filter by role</span>\n        <section className=\"mt-2\" onClick={() => filterByRole(\"all\")}>\n          <MainItem\n            title={\"Users by Role\"}\n            count={countByRole(\"all\")}\n            active={filterByRoleLevel === \"all\" ? true : false}\n          />\n        </section>\n        {filterByRoleLevel && (\n          <SubItemContainer>\n            {accessRoles.length &&\n              accessRoles.map((sub_itm, i: number) => (\n                <section\n                  key={sub_itm.system_user_role_id}\n                  onClick={() => filterByRole(sub_itm.system_user_role_id)}\n                >\n                  <SubItem\n                    title={sub_itm.role}\n                    icon={MdLabel}\n                    active={\n                      filterByRoleLevel !== \"id\" &&\n                      sub_itm.system_user_role_id === filterByRoleLevel\n                        ? true\n                        : false\n                    }\n                  />\n                </section>\n              ))}\n          </SubItemContainer>\n        )}\n\n        {/* <span className=\"text-sm mt-2\">Filter by Status</span> */}\n        {/* <section\n          className=\"mt-2\"\n          onClick={() => setUserTabs(TabTypes.All_Users)}\n        >\n          <MainItem\n            title={\"All Status\"}\n            count={labelCounts.allUser}\n            active={userTabs === TabTypes.All_Users ? true : false}\n          />\n        </section>\n        {\n          <SubItemContainer>\n            <section onClick={() => setUserTabs(TabTypes.Active_Users)}>\n              <SubItem\n                title=\"Active\"\n                icon={MdLabel}\n                active={userTabs === TabTypes.Active_Users ? true : false}\n              />\n            </section>\n            <section onClick={() => setUserTabs(TabTypes.Blocked_Users)}>\n              <SubItem\n                title=\"Blocked\"\n                icon={MdLabel}\n                active={userTabs === TabTypes.Blocked_Users ? true : false}\n              />\n            </section>\n          </SubItemContainer>\n        } */}\n      </SideNavigation>\n      {/* Title */}\n      <div className=\"w-full my-5 px-1\">\n        {/* header title */}\n        <div className=\"flex flex-row items-center\">\n          <MdSupervisorAccount className=\"text-blue-700 w-36 h-36\" />\n          <div className=\"flex flex-col\">\n            <h1 className=\"text-3xl font-semibold\">System Users Management</h1>\n            <div className=\"flex flex-row items-center mx-2 md:gap-3 gap-2\">\n              <div className=\"flex flex-col mt-1\">\n                <span className=\"text-gray-600 text-base\">All User(s)</span>\n                <span className=\"text-gray-600 text-2xl font-bold\">\n                  {labelCounts.allUser}\n                </span>\n              </div>\n              {userTabs !== TabTypes.Blocked_Users && (\n                <div className=\"flex flex-col mt-1\">\n                  <span className=\"text-gray-600 text-base\">\n                    Active User(s)\n                  </span>\n                  <span className=\"text-gray-600 text-2xl font-bold\">\n                    {labelCounts.activeUser}\n                  </span>\n                </div>\n              )}\n              {userTabs !== TabTypes.Active_Users && (\n                <div className=\"flex flex-col mt-1\">\n                  <span className=\"text-gray-600 text-base\">\n                    Blocked User(s)\n                  </span>\n                  <span className=\"text-gray-600 text-2xl font-bold\">\n                    {labelCounts.blockedUser}\n                  </span>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n        {/* end header title */}\n      </div>\n      {/* Feedback */}\n      {feedBack && feedBack.type !== \"\" && (\n        <div\n          className={`alert-${feedBack.type} flex flex-row items-center relative my-2`}\n        >\n          <span className=\"absolute top-0 bottom-0 right-0 px-4 py-3\">\n            <MdClose\n              className=\"h-5 w-5 text-gray-700 hover:font-bold\"\n              title=\"Close\"\n              onClick={() => setFeedBack({ type: \"\", message: \"\" })}\n            />\n          </span>\n          <MdErrorOutline className=\"h-10 w-10\" />\n          <div className=\"alert-content ml-4\">\n            <div className=\"alert-title font-semibold text-lg\">\n              {feedBack.type === \"success\" ? \"Success\" : \"Error\"}\n            </div>\n            <div className=\"alert-description text-sm\">{feedBack.message}</div>\n          </div>\n        </div>\n      )}\n      <div className=\"bg-white shadow-md p-2 overflow-x-auto\">\n        {handleTabs()}\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  users,\n  access,\n}: StoreState): {\n  userList: UserInterface[];\n  accessRoles: SystemUserRoleInterface[];\n} => {\n  return { userList: users, accessRoles: access.accessRoles };\n};\n\nexport const UserManagment = connect(mapStateToProps, {\n  fetchUserAccess,\n  fetchAccessRoles,\n})(_UserManagment);\n"],"sourceRoot":""}
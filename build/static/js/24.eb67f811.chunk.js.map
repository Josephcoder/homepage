{"version":3,"sources":["containers/AdminDashboard/CenteDashboard/CenterDashboardTitle.tsx","containers/AdminDashboard/CenteDashboard/RoomChart.tsx","containers/AdminDashboard/CenteDashboard/CenterDashboard.tsx","components/Navigation/SideNavigation.tsx","actions/users.ts","containers/SessionSettings/NoSession.tsx","containers/Admin/ExamReport/DoneExamList.tsx","containers/AdminDashboard/ChartComponents/VBarChart.tsx","containers/Admin/ExamReport/ExamReport.tsx","containers/Admin/ExamReport/CandiadtePerformancePerDistrict.tsx","containers/Admin/ExamReport/ExamPerformancePerDistrict.tsx","containers/Admin/ExamReport/ExamReportFilters.tsx","containers/Admin/ExamReport/ExamReportTitle.tsx","utils/ExportToExcel.tsx","utils/mineduc.png","components/DownloadPDF/rest.tsx","actions/schools.ts","containers/UserManagement/UserList.tsx","containers/UserManagement/RoleList.tsx","containers/UserManagement/UserRole.tsx","shared/blank_profile.png","containers/SessionSettings/ChooseSession.tsx","containers/Admin/ExamReport/CandidatePerformance.tsx","containers/Admin/ExamReport/ExamList.tsx","containers/Admin/ExamReport/ExamReportModals.tsx","containers/AdminDashboard/ChartComponents/PieChart.tsx","containers/UserManagement/UserAccess.tsx","containers/AdminDashboard/DashboardLabelItem.tsx","containers/Admin/ExamReport/ExamPerformance.tsx","containers/AdminDashboard/ExamDashboard/ExamDashboardLabels.tsx","containers/Locations/ViewDistricts.tsx","containers/Locations/ViewProvince.tsx","containers/Locations/ViewSectors.tsx","containers/Locations/Locations.tsx","containers/AdminDashboard/ExamDashboard/ExamDashboardTitle.tsx","containers/AdminDashboard/ExamDashboard/ExamPreparationChart.tsx","containers/AdminDashboard/ExamDashboard/ExamProgressChart.tsx","containers/AdminDashboard/ExamDashboard/ExamPerformanceChart.tsx","containers/AdminDashboard/ExamDashboard/ExamDashboard.tsx","interfaces/center_report.ts","interfaces/user_by_type.ts","containers/Admin/CenterReport/DistrictList.tsx"],"names":["CenterDashboardTitle","props","useState","searchInput","setSearchInput","className","loading","value","thisPeriod","disabled","onChange","e","setThisPeriod","application_sessions","target","map","session","item","session_plan_id","session_plan_name","onClick","setChooseDistrict","selectedDistrict","district_name","setChooseExam","selectedExam","course_name","chooseDistrict","Modal","title","backDrop","theme","Themes","default","close","backDropClose","widthSizeClass","ModalSize","small","displayClose","padding","DistrictList","districtList","getDistrictInRoom","reportMainData","setSelectedDistrict","loadindRequest","isModal","chooseExam","extraLarge","courses","examsList","Loading","type","placeholder","FC_reportExamList","length","setSelectedExam","searchExamList","i","course_id","course_code","React","memo","RoomChart","distinctDistricts","district_ids","key","allData","includes","district_id","push","generateChartData","categories","labels","occupied","remaining","thisOccupation","thisRemaining","thisDefaultOccupation","thisDefaultRemaining","districtName","forEach","district","thisDistrict","filter","room_number","course_in_room","find","itemCourse","capacity","series","name","data","VBarChart","this","categoriesLabel","dataLabels","yaxisText","tooltipText","colors","defaultBar","borderRadius","horizontal","columnWidth","endingShape","stacked","Component","filterRoom","dataList","result","defaultValue","all","room_type","full","remain","invigilator","isEmptyOrSpaces","_CenterDashboard","setLoading","status","setState","setSelectSession","selectSession","setSelectedSession","thisSession","selectedSession","allSession","sessionId","loadReportMainData","a","axios","get","API","APPLICATION","res","console","log","error","reportMainData_error","PushPopupAlert","errorToText","PopupAlertTheme","danger","loadInvigilator","callback","AUTH","UserByTypeKeys","INVIGILATOR","invigilatorData","invigilatorData_error","loadExamData","loadCourses","loadingExam","loadExamsList","componentDidMount","state","sessionPlan","allSessionPlans","GetAllSessionPlans","errorMsg","sessionData","warning","activeSession","is_active","roomDataFilter","element","formError","NoSession","ExamDashboardLabels","icon","FaLaptopHouse","iconColor","count","roomWithOccupation","labelsOnRow","PieChart","options","legend","show","position","horizontalAlign","fontSize","itemMargin","vertical","plotOptions","pie","donut","color","offsetY","fontFamily","formatter","val","total","label","w","globals","seriesTotals","reduce","b","width","CenterDashboard","connect","auth","course","prepareExam","_SideNavigation","PageHasSubNav","componentWillUnmount","isAuthenticated","navActive","system","navigation","children","SideNavigation","NavToogle","MainItem","MdBrightness1","active","IconDefined","documentValidationStatus","userPageLimit","fetchUserAccess","page","dispatch","setAxiosToken","ActionTypes","FETCH_USERS_ACCESS","payload","users","next","previous","total_users","user_error","blockUserToSystem","user_id","BLOCK_USER_TO_SYSTEM","id","unBlockUserToSystem","UNBLOCK_USER_TO_SYSTEM","assignRoleToUserAccess","ASSIGN_ROLE_TO_USER","customizeUserAccess","CUSTOMIZE_USER_ACCESS","resetUserAccess","RESET_USER_ACCESS","ExaminationProgressReportContentKeyInterface","examinationProgressIsChangeAllowed","COURSER_NAME","COURSE_CODE","PERIOD","STATUS","defaultExaminationProgressContent","SCHOOL_LEVEL","DATE","TIME","DURATION","displayStatus","FC_reportDoneExamList","allCourses","allExams","doneExams","ids","Object","prototype","hasOwnProperty","call","courser","doneExam","period","description","school_levels","exam","preparation_status","exam_status","FC_reportDoneExamListFilter","thisList","thisValue","searchExamData","objList","text","undefined","product","flag","prop","toString","toLowerCase","indexOf","DoneExamList","isSorted","setIsSorted","sortProperty","setSortProperty","sortOrder","setSortOrder","setSort","thisProperty","courseListData","examsListData","doneExamsData","filterExamProgress","colSpan","sortThisArray","capitalizeFirstLetter","exam_date","start_time","duration","getPeriodById","chart","events","dataPointSelection","event","chartContext","config","labelClicked","dataPointIndex","FC_LoadSelected","seriesIndex","bar","enabled","xaxis","rotate","tickPlacement","yaxis","fill","opacity","tooltip","y","grid","left","right","noData","align","verticalAlign","setOptions","useEffect","chartClicked","zoom","autoScaleYaxis","height","chartHeight","reportTitleType","FC_CandiadtePerformancePerDistrictFilter","swap","exam_stastus","exam_location","j","user_total_marks","adminExamReport","candidatePerformanceData","FC_reportCandidatePerformanceData","reportCourseId","reportDistrictId","filterApplicantPerformance","searchCandidatePerformanceData","slice","controlRowsByStatus","user_name","national_id","user_email","user_phone","timestampToDate","timeAMPM","end_time","ReportUserExamStatus","Editing","Number","toFixed","FC_ExamPerformancePerDistrictPropsData","examsData","pass","failed","exam_ids","toLocaleLowerCase","_marks","candidatesByExam","_key","user","total_marks","user_status","pass_applicant","failed_applicant","applicants","NoResult","NoResultThemes","Dark","search","ExamReportFilters","reportTitle","EXAM_PERFORMANCE","EXAM_DISTRICT_PERFORMANCE","EXAM_PREPARATION","setFilterPreparation","filterPreparation","EXAMINATION_PROGRESS","setFilterExamProgress","APPLICANTS_PERFORMANCE","APPLICANTS_DISTRICT_PERFORMANCE","setFilterApplicantPerformance","values","index","schoolLevels","SetReportDistrictId","changeReport","setChangeReport","districtModal","setDistrictModal","excelModal","setExcelModal","courseModal","setCourseModal","dataToPrint","updateExamToPrint","setGenerateReportModal","reportType","downloading","downlaodPDF","ExamReportModals","modalFor","ModalForTypes","generateReportModal","modalState","changeModalState","excelReportTitle","setExcelReportTitle","examsToPrint","examPreparationReportContent","setExamPreparationReportContent","examPerformanceToPrint","examPerformanceReportContent","setExamPerformanceReportContent","exam30PerformanceToPrint","exam30PerformanceReportContent","setExam30PerformanceReportContent","examinationProgressToPrint","examinationProgressReportContent","setExaminationProgressExamPerformanceReportContent","candidateExamPerformanceToPrint","candidateExamPerformanceReportContent","setCandidateExamPerformanceReportContent","candidate30ExamPerformanceToPrint","candidate30ExamPerformanceReportContent","setCandidate30ExamPerformanceReportContent","setReportTitle","choose_district","districtId","loadExaminationProgress","DoneExam","selectedEducationCategory","choose_exam","AllExamData","finished","thisExam","getExamByCourseId","periods","period_id","loadAllExams","selected_period","_ExamReport","setLoadingCourses","loadingCourses","setLoadingExams","loadingExams","setDownloading","setLoadingDoneExam","loadingDoneExam","setLoadingCandidatesExamPerformance","loadingCandidatesExamPerformance","setLoadingExamPerformance","loadingExamPerformance","setLoadingSettings","loadingSettings","setSelectPeriod","selectPeriod","setSelectedPeriod","setExamsToPrint","setExamPerformanceToPrint","setExam30PerformanceToPrint","setExaminationProgressToPrint","setCandidateExamPerformanceToPrint","setCandidate30ExamPerformanceToPrint","selectDefaultSession","active_period","msg","education_categories","loadEducationCategories","setSelectedEducationCategory","loadSchoolLevels","application_session","loadDoneExam","CandidatesExamPerformance","loadCandidatesExamPerformance","order","sortBy","ReportGetCandidatePerformanceSortTypes","ExamPerformance","loadPerfomranceExam","onPeriodChange","getLevelbyId","level_id","school_level_id","getCourses","search_all","level","levelDetail","education_institute","education_institute_id","arrayNew","n","school_level","findLevel","school_level_name","dataArray","exam_period","exam_time","exam_duration","FC_reportExamPerformanceData","exam_performance","applicant_id","exam_start_time","exam_end_time","performance_status","applicant_name","email","phone","marks","addToTitle","document","querySelectorAll","table","getElementById","reportSettings","doneBy","fname","lname","subjectTitle","subject","footer","institute","education_category_title","orientation","generatePDF","defaultExamPreparationReportContent","defaultExamPerformanceContent","defaultCandidateExamPerformanceContent","ExamList","examsPerformanceData","Light","component","CandidatePerformance","applicationPeriods","ExamReport","ExportToExcel","fileData","fileName","btnName","showIcon","apiData","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","exportToCSV","require","addFooters","doc","pageCount","internal","getNumberOfPages","setFont","setFontSize","setPage","String","pageSize","callBack","lMargin","jsPDF","setTextColor","addImage","Logo","getWidth","lines","splitTextToSize","pdfInMM","getTextWidth","addPage","autoTable","html","startY","margin","cellPadding","rowHeight","bodyStyles","valign","columnStyles","cellWidth","tableWidth","finalY","lastAutoTable","Date","save","returnPromise","then","getSchools","GET_SCHOOLS","getSchoolById","schoolId","GET_SCHOOLS_BY_ID","createSchool","schools","CREATE_SCHOOL","updateSchool","UPDATE_SCHOOL","deleteSchool","DELETE_SCHOOL","fetchSchoolPosts","school_id","PLACEMENT","schoolPosts","FETCH_SCHOOL_POSTS","getSchoolPlacement","GET_SCHOOL_PLACEMENT","createSchoolPost","CREATE_SCHOOL_POST","updateSchoolPost","TYPE","UPDATE_SCHOOL_POST","fetchDistrictPosts","FETCH_DISTRICT_POSTS","getDistrictPlacement","GET_DISTRICT_PLACEMENT","getInstitutePlacementLimit","institute_id","session_id","GET_INSTITUTE_PLACEMENT_LIMIT","getDistrictPlacementLimit","GET_DISTRICT_PLACEMENT_LIMIT","updateInstitutePlacementLimit","UPDATE_INSTITUTE_PLACEMENT_LIMIT","ModalState","RoleList","roleList","setChooseRole","role","handleSelectRole","system_user_role_id","UserRole","setRoleId","roleId","setSelectedRole","selectedRole","setProvinceId","provinceId","setDistrictId","setCenterId","centerId","setRoomId","roomId","setLoadingForm","loadingForm","setSchoolId","setChooseSchool","chooseSchool","setInstituteId","instituteId","setFormError","setLoadingRequest","loadingRequest","chooseRole","setDefaultState","default_access","LOAD_province","LOAD_district","district_required","roomList","distinctDistrict","_id","province_id","room_required","LocationsInArray","room_id","center_id","school_required","schoolList","LOAD_school","userInfo","vvvvv","role_id","tableData","access","task","permitted","create","view","update","delete","Math","random","assignRoleToUser","preventDefault","window","confirm","education_institution_required","formData","education_institution_id","post","currentPage","setChangeRole","success","role_error","location","districts","keyDistrict","distinctCenter","rooms","distinctRoom","onSubmit","province","province_name","school","school_name","center","center_name","room","room_name","Table","columns","columnTitle","alignText","rows","pagination","searchBG","thColor","tableId","getUserById","userId","LocationData","locationTemp","p","d","centers","c","r","UserList","setManageUserId","manageUserId","setLoadingSchool","loadingSchool","setLoadingRequestType","loadingRequestType","setRoomList","setRoomTables","roomTable","setCurrentAccess","currentAccess","setSchoolList","setUserAccess","userAccess","allRoom","getAllRoom","loadingUser","setManageUser","user_info","sex","getRoleById","blockUser","actionType","patch","info","blockUser_ERROR","restUserAccess","resetedAccess","reseting_user_access","manageUser","src","photo","profile","alt","getInstituteById","n_id","phone_number","custome_access","changeRole","UserAccess","locations","roomLocation","isPlansActive","plans","today","activePlans","plan","startDate","start_date","endDate","end_date","getTime","type_status","SessionPlanTypeStatus","OPEN","ChooseSession","searched","selectedPlan","setSelectedPlan","setSearch","chooseAll","currentSelected","searchData","itm","type_key","type_title","CandidateExamPerformanceReportContentKeyInterface","candidateExamPerformanceIsChangeAllowed","APPLICANT","N_ID","EMAIL","PHONE","MARKS","START_TIME","END_TIME","FC_reportCandidatePerformanceDataFilter","examPreparationReportContentKeyInterface","examPreparationIsChangeAllowed","FC_reportExamListFilter","thisStatus","createdAt","FC_DistinctDistrict","flags","output","l","SetReportCourseId","selectAll","setSelectAll","loadingLocation","setLoadingLocation","setError","isChangeAllowed","examPerformanceIsChangeAllowed","updateExamPerformanceReportContent","findIndex","newArray","isSelectAllNeeded","updateCandidateExamPerformanceReportContent","showGenerateBtn","medium","updateExamPreparationReportContent","updateExaminationProgressReportContent","currentState","resetReportContent","isAllDistrictAllowed","selectDistrict","_UserAccess","setViewPermission","viewPermission","setLoadindRequest","setCreatePermission","createPermission","setUpdatePermission","updatePermission","setDeletePermission","deletePermission","setLoadind","overrideUserAccess","overideAccess","findCustom","custom","handleCustomization","custome_user_access_id","customize_access","to","checked","DashboardLabelItem","FaUsers","countOver","toAnyDigit","examPerformanceReportContentKeyInterface","PERFORMANCE","examPerformance","answer_sheet_id","Fragment","numCols","childrenPosition","FC_CreateDistrict","FC_UpdateDistrict","FC_DeleteDistrict","setDistrictName","districtCode","setDistrictCode","handleSubmit","actionTypes","thisProvince","province_code","district_code","sectors","setActionTypes","setThisDistrict","doc_category_error","body","FC_CreateProvince","FC_UpdateProvince","FC_DeleteProvince","provinceTitle","setProvinceTitle","provinceCode","setProvinceCode","updated","setThisProvince","province_error","FC_CreateSector","FC_UpdateSector","FC_DeleteSector","sectorName","setSectorName","sectorCode","setSectorCode","sector_name","sector_code","sector_id","thisSector","setThisSector","sector_error","handleDelete","sectorId","district_error","sector","Locations","ViewDistricts","ExamDashboardTitle","education","loadingEducation","thisEducation","setThisEducation","ExamPreparationChart","examPreparationProgress","ExamProgressChart","progressData","ExamPerformanceChart","loadCoursesByInstitute","courseList","completeExams","remainingExams","dataFound","loadExamPreparationProgress","isDatePast","dateParam","date","moment","format","todayDate","pastDate","diff","loadExamAttendance","applicantList","_ExamDashboard","setChangingPeriod","changingPeriod","loadByPeriods","sessions","action","FaBookOpen","ExamDashboard","centerReportContentKeyInterface","invigilators","thisRoom","getRoomOccupation","roles_to_users","isUsed","invigilatorReportContentKeyInterface","bgWhite"],"mappings":"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","file":"static/js/24.eb67f811.chunk.js","sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport { AiFillDashboard } from \"react-icons/ai\";\nimport { CgFileDocument } from \"react-icons/cg\";\nimport { FiEdit } from \"react-icons/fi\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport { course, SessionPlanInterface } from \"../../../interfaces\";\nimport {\n  centerReportInterface,\n  getDistrictInRoom,\n  roomDistrictInterface,\n} from \"../../../interfaces/center_report\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport DistrictList from \"../../Admin/CenterReport/DistrictList\";\nimport {\n  examPreparationStateInterface,\n  FC_reportExamList,\n  searchExamList,\n} from \"../../Admin/ExamReport/ExamList\";\n\ntype CenterReportTitleProps = {\n  // FOR SETTINGS ==============================\n  loading: boolean;\n\n  //   FOR APPLICATION SESSION ============================\n  thisPeriod: string;\n  setThisPeriod: (\n    allSession: SessionPlanInterface[],\n    sessionId: string\n  ) => void;\n  application_sessions: SessionPlanInterface[];\n  chooseDistrict: boolean;\n  setChooseDistrict: (status: boolean) => void;\n  selectedDistrict: roomDistrictInterface | \"all\";\n  setSelectedDistrict: (data: roomDistrictInterface | \"all\") => void;\n  chooseExam: boolean;\n  setChooseExam: (status: boolean) => void;\n  selectedExam: examPreparationStateInterface | \"all\";\n  setSelectedExam: (data: examPreparationStateInterface | \"all\") => void;\n  reportMainData: centerReportInterface[];\n  examsList: ExamItemResponse[] | null;\n  courses: course[] | null;\n};\n\nconst CenterDashboardTitle: React.FC<CenterReportTitleProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n\n  return (\n    <Fragment>\n      <div className=\"mt-3 rounded flex flex-col md:flex-row md:justify-between items-start\">\n        <div className=\"flex flex-row items-center gap-3 mb-2\">\n          <AiFillDashboard className=\"text-7xl text-blue-600 hidden md:block\" />\n          <div className=\"flex flex-col\">\n            <span className=\"text-blue-600 text-3xl font-bold\">\n              Center Dashboard\n            </span>\n          </div>\n        </div>\n\n        {/* FILTER SECTION PERIOD && EDUCATION */}\n        <section className=\"w-full flex flex-col items-end md:w-auto my-2 md:my-0\">\n          <div>\n            <select\n              className={`bg-white text-gray-600 border border-gray-400 rounded p-2 focus:outline-none ${\n                props.loading && \"cursor-wait\"\n              }`}\n              value={props.thisPeriod}\n              disabled={props.loading}\n              onChange={(e) => {\n                props.setThisPeriod(props.application_sessions, e.target.value);\n              }}\n            >\n              {props.application_sessions.map((session, item) => (\n                <option\n                  key={session.session_plan_id + item}\n                  value={session.session_plan_id}\n                >\n                  {session.session_plan_name}\n                </option>\n              ))}\n            </select>\n          </div>\n          {/* DISTRICT sections */}\n          <div className=\"mt-1 w-full\">\n            <div\n              onClick={() => props.setChooseDistrict(true)}\n              className=\"font-bold bg-gray-50 border border-gray-400 rounded py-2 cursor-pointer text-xs px-2 hover:underline justify-between text-gray-600 w-full flex flex-row items-center animate__animated animate__zoomIn\"\n            >\n              {props.selectedDistrict !== \"all\"\n                ? `${props.selectedDistrict.district_name}`\n                : \"All district\"}\n              <FiEdit className=\"text-lg text-gray-600\" />\n            </div>\n          </div>\n          {/* end DISTRICT sections */}\n\n          {/* DISTRICT sections */}\n          <div className=\"mt-1 w-full\">\n            <div\n              onClick={() => props.setChooseExam(true)}\n              className=\"font-bold bg-gray-50 border border-gray-400 rounded py-2 cursor-pointer text-xs px-2 hover:underline justify-between text-gray-600 w-full flex flex-row items-center animate__animated animate__zoomIn\"\n            >\n              {props.selectedExam !== \"all\"\n                ? `${props.selectedExam.course_name}`\n                : \"All exam\"}\n              <FiEdit className=\"text-lg text-gray-600\" />\n            </div>\n          </div>\n          {/* end DISTRICT sections */}\n        </section>\n        {/* END FILTER SECTION PERIOD && EDUCATION */}\n      </div>\n\n      {props.chooseDistrict && (\n        <Modal\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              <CgFileDocument className=\"text-3xl text-blue-600\" />\n              <div className=\"flex flex-col\">\n                <span className=\"font-bold text-xl text-blue-600\">\n                  Choose district\n                </span>\n              </div>\n            </div>\n          }\n          backDrop={true}\n          theme={Themes.default}\n          close={() => props.setChooseDistrict(false)}\n          backDropClose={true}\n          widthSizeClass={ModalSize.small}\n          displayClose={true}\n          padding={{ title: true }}\n        >\n          <DistrictList\n            setChooseDistrict={props.setChooseDistrict}\n            districtList={getDistrictInRoom(props.reportMainData)}\n            setSelectedDistrict={props.setSelectedDistrict}\n            loadindRequest={props.loading}\n            isModal={true}\n            selectedDistrict={props.selectedDistrict}\n          />\n        </Modal>\n      )}\n\n      {props.chooseExam && (\n        <Modal\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              <CgFileDocument className=\"text-5xl text-blue-600\" />\n              <div className=\"flex flex-col\">\n                <span className=\"font-bold text-xl text-blue-600\">\n                  Choose exam\n                </span>\n              </div>\n            </div>\n          }\n          backDrop={true}\n          theme={Themes.default}\n          close={() => props.setChooseExam(false)}\n          backDropClose={true}\n          widthSizeClass={ModalSize.extraLarge}\n          displayClose={true}\n          padding={{ title: true }}\n        >\n          {props.courses === null || props.examsList === null ? (\n            <Loading />\n          ) : (\n            <div className=\"px-2 pb-2\">\n              <div className=\"w-full py-2\">\n                <input\n                  onChange={(e) => setSearchInput(e.target.value)}\n                  type=\"text\"\n                  value={searchInput}\n                  placeholder=\"Search...\"\n                  className=\"w-full bg-white py-2 px-3 rounded border border-gray-400\"\n                  disabled={\n                    FC_reportExamList(props.courses, props.examsList).length <=\n                    0\n                      ? true\n                      : false\n                  }\n                />\n              </div>\n              <div\n                onClick={() => {\n                  props.setSelectedExam(\"all\");\n                  props.setChooseExam(false);\n                }}\n                className={`flex items-center border rounded px-2 py-2 cursor-pointer group hover:bg-blue-100 hover:border-blue-500 mb-3 justify-between ${\n                  props.selectedExam === \"all\"\n                    ? \"bg-blue-50 border-blue-400\"\n                    : \"bg-white border-gray-200\"\n                }`}\n              >\n                <div>\n                  <div className=\"text-sm font-medium italic\">\n                    code: <span className=\"text-blue-500\">-</span>\n                  </div>\n                  <div className=\"font-bold text-lg\">All exams</div>\n                </div>\n                <div className=\"btn bg-blue-400 group-hover:bg-blue-600 text-white mr-2\">\n                  Choose\n                </div>\n              </div>\n              {searchExamList(\n                FC_reportExamList(props.courses, props.examsList),\n                searchInput\n              ).map((item, i) => (\n                <div\n                  onClick={() => {\n                    props.setSelectedExam(item);\n                    props.setChooseExam(false);\n                  }}\n                  key={i + 1}\n                  className={`flex items-center border rounded px-2 py-2 cursor-pointer group hover:bg-blue-100 hover:border-blue-500 mb-3 justify-between ${\n                    props.selectedExam !== \"all\" &&\n                    props.selectedExam.course_id === item.course_id\n                      ? \"bg-blue-50 border-blue-400\"\n                      : \"bg-white border-gray-200\"\n                  }`}\n                >\n                  <div>\n                    <div className=\"text-sm font-medium italic\">\n                      code:{\" \"}\n                      <span className=\"text-blue-500\">{item.course_code}</span>\n                    </div>\n                    <div className=\"font-bold text-lg\">{item.course_name}</div>\n                  </div>\n                  <div className=\"btn bg-blue-400 group-hover:bg-blue-600 text-white mr-2\">\n                    Choose\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </Modal>\n      )}\n    </Fragment>\n  );\n};\n\nexport default React.memo(CenterDashboardTitle);\n","import React, { Component, Fragment } from \"react\";\nimport { centerReportInterface } from \"../../../interfaces/center_report\";\nimport { examPreparationStateInterface } from \"../../Admin/ExamReport/ExamList\";\nimport VBarChart from \"../ChartComponents/VBarChart\";\n\ntype RoomChartProps = {\n  allData: centerReportInterface[];\n  // selectedDistrict: roomDistrictInterface | \"all\";\n  // selectedSession: SessionPlanInterface | null;\n  selectedExam: examPreparationStateInterface | \"all\";\n};\n\nexport class RoomChart extends Component<RoomChartProps> {\n  // generateChartData = (): {\n  //   series: {\n  //     name: string;\n  //     data: number[];\n  //   }[];\n  //   categories: (string | string[])[];\n  //   labels: string[];\n  // } => {\n  //   let categories: (string | string[])[] = [],\n  //     labels: string[] = [],\n  //     occupied: number[] = [],\n  //     remaining: number[] = [],\n  //     district_ids: string[] = [];\n  //   for (const key in this.props.allData) {\n  //     if (\n  //       !district_ids.includes(this.props.allData[key]._id) &&\n  //       this.props.allData[key].room_number !== 0\n  //     ) {\n  //       district_ids.push(this.props.allData[key]._id);\n  //       occupied.push(this.props.allData[key].occupied);\n  //       remaining.push(\n  //         this.props.allData[key].capacity - this.props.allData[key].occupied\n  //       );\n  //       categories.push([\n  //         this.props.allData[key].district_name,\n  //         this.props.allData[key].center_name,\n  //         this.props.allData[key].room_number.toString(),\n  //       ]);\n  //       labels.push(\n  //         this.props.allData[key].district_name +\n  //           \" \" +\n  //           this.props.allData[key].center_name +\n  //           \" \" +\n  //           this.props.allData[key].room_number.toString()\n  //       );\n  //     }\n  //   }\n  //   return {\n  //     series: [\n  //       {\n  //         name: \"Occupied room\",\n  //         data: occupied,\n  //       },\n  //       {\n  //         name: \"Remaining room\",\n  //         data: remaining,\n  //       },\n  //     ],\n  //     categories,\n  //     labels,\n  //   };\n  // };\n\n  distinctDistricts = (): string[] => {\n    let district_ids: string[] = [];\n    for (const key in this.props.allData) {\n      if (!district_ids.includes(this.props.allData[key].district_id)) {\n        district_ids.push(this.props.allData[key].district_id);\n      }\n    }\n    return district_ids;\n  };\n\n  generateChartData = (): {\n    series: {\n      name: string;\n      data: number[];\n    }[];\n    categories: (string | string[])[];\n    labels: string[];\n  } => {\n    let categories: (string | string[])[] = [],\n      labels: string[] = [],\n      occupied: number[] = [],\n      remaining: number[] = [],\n      district_ids: string[] = [];\n    let thisOccupation: number = 0,\n      thisRemaining: number = 0,\n      thisDefaultOccupation: number = 0,\n      thisDefaultRemaining: number = 0,\n      districtName: string = \"\";\n    this.distinctDistricts().forEach((district) => {\n      const thisDistrict = this.props.allData.filter(\n        (item) => item.district_id === district\n      );\n\n      for (const key in thisDistrict) {\n        if (thisDistrict[key].room_number !== 0) {\n          districtName = thisDistrict[key].district_name;\n          const selectedExam = this.props.selectedExam;\n          if (selectedExam !== \"all\") {\n            thisDefaultOccupation = thisDistrict[key].course_in_room.find(\n              (itemCourse) => itemCourse.course_id === selectedExam.course_id\n            )\n              ? thisDistrict[key].course_in_room.find(\n                  (itemCourse) =>\n                    itemCourse.course_id === selectedExam.course_id\n                )!.occupied\n              : 0;\n            thisDefaultRemaining =\n              thisDistrict[key].capacity -\n              (thisDistrict[key].course_in_room.find(\n                (itemCourse) => itemCourse.course_id === selectedExam.course_id\n              )\n                ? thisDistrict[key].course_in_room.find(\n                    (itemCourse) =>\n                      itemCourse.course_id === selectedExam.course_id\n                  )!.occupied\n                : 0);\n          } else {\n            thisDefaultOccupation = thisDistrict[key].occupied;\n            thisDefaultRemaining =\n              thisDistrict[key].capacity - thisDistrict[key].occupied;\n          }\n          thisOccupation += thisDefaultOccupation;\n          thisRemaining += thisDefaultRemaining;\n        }\n      }\n      if (!district_ids.includes(district)) {\n        district_ids.push(district);\n        occupied.push(thisOccupation);\n        remaining.push(thisRemaining);\n        categories.push([districtName]);\n        labels.push(districtName);\n      }\n      districtName = \"\";\n      thisRemaining = 0;\n      thisOccupation = 0;\n    });\n\n    return {\n      series: [\n        {\n          name: \"Occupied room\",\n          data: occupied,\n        },\n        {\n          name: \"Remaining room\",\n          data: remaining,\n        },\n      ],\n      categories,\n      labels,\n    };\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <div className=\"w-full\">\n          <VBarChart\n            labels={this.generateChartData().labels}\n            categoriesLabel={this.generateChartData().categories}\n            dataLabels={true}\n            yaxisText=\" sit(s)\"\n            tooltipText=\" sit(s)\"\n            series={this.generateChartData().series}\n            colors={[\"#059669\", \"#374151\"]}\n            defaultBar={{\n              borderRadius: 4,\n              horizontal: true,\n              columnWidth: \"95%\",\n              endingShape: \"rounded\",\n            }}\n            // chartHeight={\n            //   this.generateChartData().series.length <= 10 ? 550 : 1000\n            // }\n            stacked={true}\n          />\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default React.memo(RoomChart);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { FaLaptopHouse } from \"react-icons/fa\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadCourses,\n  loadExamsList,\n  PushPopupAlert,\n} from \"../../../actions\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport { SessionPlanInterface, course } from \"../../../interfaces\";\nimport {\n  centerReportInterface,\n  centerReportInterface_NEW,\n  roomDistrictInterface,\n  roomWithOccupation,\n} from \"../../../interfaces/center_report\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport {\n  UserByTypeInterfaceAPI,\n  UserByTypeKeys,\n} from \"../../../interfaces/user_by_type\";\nimport { StoreState } from \"../../../reducers\";\nimport { SessionPlanReducerInterface } from \"../../../reducers/session\";\nimport { isEmptyOrSpaces } from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { examPreparationStateInterface } from \"../../Admin/ExamReport/ExamList\";\nimport NoSession from \"../../SessionSettings/NoSession\";\nimport PieChart from \"../ChartComponents/PieChart\";\nimport ExamDashboardLabels from \"../ExamDashboard/ExamDashboardLabels\";\nimport CenterDashboardTitle from \"./CenterDashboardTitle\";\nimport RoomChart from \"./RoomChart\";\n\nexport const filterRoom = (\n  dataList: centerReportInterface_NEW[],\n  thisDistrict: roomDistrictInterface | \"all\"\n): {\n  all: centerReportInterface_NEW[];\n  full: centerReportInterface_NEW[];\n  remain: centerReportInterface_NEW[];\n  invigilator: centerReportInterface_NEW[];\n} => {\n  let result: centerReportInterface_NEW[] = dataList,\n    defaultValue: boolean = false;\n  if (thisDistrict !== \"all\") {\n    // roomWithOccupation;\n    result = result.filter(\n      (item) => item.district_id === thisDistrict.district_id\n    );\n  }\n  // RETURN DEFAULT VALUES ====================\n  else {\n    defaultValue = true;\n  }\n  return defaultValue\n    ? {\n        all: dataList.filter((item) => item.room_type !== \"Default\"),\n        full: dataList.filter(\n          (item) =>\n            item.room_type !== \"Default\" && item.occupied >= item.capacity\n        ),\n        remain: dataList.filter(\n          (item) =>\n            item.room_type !== \"Default\" && item.occupied < item.capacity\n        ),\n        invigilator: dataList.filter(\n          (item) =>\n            item.room_type !== \"Default\" && !isEmptyOrSpaces(item.invigilator)\n        ),\n      }\n    : {\n        all: result,\n        full: result.filter((item) => item.occupied >= item.capacity),\n        remain: result.filter((item) => item.occupied < item.capacity),\n        invigilator: dataList.filter(\n          (item) => !isEmptyOrSpaces(item.invigilator)\n        ),\n      };\n};\n\ninterface CenterDashboardProps {\n  //   REDUX ############################\n  auth: Auth;\n  sessionPlan: SessionPlanReducerInterface;\n  courses: course[] | null;\n  examsList: ExamItemResponse[] | null;\n  GetAllSessionPlans: Function;\n  loadCourses: Function;\n  loadExamsList: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface CenterDashboardState {\n  loading: boolean;\n  loadingExam: boolean;\n  selectSession: boolean;\n  selectedSession: SessionPlanInterface | null;\n  reportMainData: centerReportInterface[] | null;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  selectedDistrict: roomDistrictInterface | \"all\";\n  chooseDistrict: boolean;\n  invigilatorData: UserByTypeInterfaceAPI[] | null;\n  selectedExam: examPreparationStateInterface | \"all\";\n  chooseExam: boolean;\n}\n\nclass _CenterDashboard extends Component<\n  CenterDashboardProps,\n  CenterDashboardState\n> {\n  constructor(props: CenterDashboardProps) {\n    super(props);\n    this.state = {\n      loading: true,\n      loadingExam: true,\n      selectSession: false,\n      selectedSession: null,\n      reportMainData: null,\n      formError: null,\n      selectedDistrict: \"all\",\n      chooseDistrict: false,\n      invigilatorData: null,\n      chooseExam: false,\n      selectedExam: \"all\",\n    };\n  }\n\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  };\n\n  setSelectSession = (status: boolean) => {\n    this.setState({ selectSession: status });\n  };\n\n  setSelectedSession = (thisSession: SessionPlanInterface) => {\n    this.setState({ selectedSession: thisSession });\n  };\n\n  setThisPeriod = (allSession: SessionPlanInterface[], sessionId: string) => {\n    let thisSession: SessionPlanInterface | undefined = allSession.find(\n      (item) => item.session_plan_id === sessionId\n    );\n    if (thisSession) {\n      this.setState({ selectedSession: thisSession });\n      this.loadReportMainData(thisSession);\n    }\n  };\n\n  loadReportMainData = async (thisSession: SessionPlanInterface) => {\n    try {\n      const res = await axios.get<centerReportInterface[]>(\n        `${API.APPLICATION}/currentroomoccupation/${thisSession.session_plan_id}`\n      );\n      console.log(\"====================================\");\n      console.log({ reportMainData: res.data });\n      console.log(\"====================================\");\n      this.setState({ reportMainData: res.data });\n    } catch (error) {\n      console.error({ reportMainData_error: error });\n      // callback(false, errorToText(error));\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  loadInvigilator = async (callback: Function) => {\n    callback(true);\n    try {\n      const res = await axios.get<UserByTypeInterfaceAPI[]>(\n        `${API.AUTH}/userbytype/${UserByTypeKeys.INVIGILATOR}`\n      );\n      console.log(\"====================================\");\n      console.log({ invigilatorData: res.data });\n      console.log(\"====================================\");\n      this.setState({ invigilatorData: res.data });\n      callback(false);\n    } catch (error) {\n      console.error({ invigilatorData_error: error });\n      // callback(false, errorToText(error));\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  loadExamData = () => {\n    if (this.props.courses === null || this.props.courses.length === 0) {\n      this.props.loadCourses((status: boolean) => {\n        this.setState({ loadingExam: status });\n      });\n    } else {\n      this.setState({ loadingExam: false });\n    }\n\n    if (this.props.examsList === null || this.props.examsList.length === 0) {\n      this.props.loadExamsList((status: boolean) => {\n        this.setState({ loadingExam: status });\n      });\n    } else {\n      this.setState({ loadingExam: false });\n    }\n  };\n\n  componentDidMount = () => {\n    if (this.state.invigilatorData === null) {\n      this.loadInvigilator(this.setLoading);\n    }\n\n    if (\n      this.props.sessionPlan.allSessionPlans === null ||\n      this.props.sessionPlan.allSessionPlans.length === 0\n    ) {\n      this.props.GetAllSessionPlans(\n        (\n          status: boolean,\n          errorMsg: string,\n          sessionData: SessionPlanInterface[]\n        ) => {\n          this.setLoading(status);\n          if (!status) {\n            if (!isEmptyOrSpaces(errorMsg)) {\n              this.props.PushPopupAlert({\n                title: errorMsg,\n                theme: PopupAlertTheme.warning,\n              });\n            }\n\n            if (sessionData && sessionData.length > 0) {\n              let activeSession = sessionData.find((item) => item.is_active);\n              if (activeSession) {\n                this.setSelectedSession(activeSession);\n                if (this.state.reportMainData === null) {\n                  this.loadReportMainData(activeSession);\n                }\n              } else {\n                this.setSelectedSession(sessionData[sessionData.length - 1]);\n                if (this.state.reportMainData === null) {\n                  this.loadReportMainData(sessionData[sessionData.length - 1]);\n                }\n              }\n            }\n          }\n        }\n      );\n    } else {\n      if (this.props.sessionPlan.allSessionPlans.length > 0) {\n        let activeSession = this.props.sessionPlan.allSessionPlans.find(\n          (item) => item.is_active\n        );\n        if (activeSession) {\n          this.setSelectedSession(activeSession);\n          if (this.state.reportMainData === null) {\n            this.loadReportMainData(activeSession);\n          }\n        } else {\n          this.setSelectedSession(\n            this.props.sessionPlan.allSessionPlans[\n              this.props.sessionPlan.allSessionPlans.length - 1\n            ]\n          );\n          if (this.state.reportMainData === null) {\n            this.loadReportMainData(\n              this.props.sessionPlan.allSessionPlans[\n                this.props.sessionPlan.allSessionPlans.length - 1\n              ]\n            );\n          }\n        }\n        this.setLoading(false);\n      }\n    }\n\n    if (this.props.courses === null || this.props.courses.length === 0) {\n      this.props.loadCourses((status: boolean) => {\n        this.setState({ loadingExam: status });\n      });\n    } else {\n      this.setState({ loadingExam: false });\n    }\n\n    if (this.props.examsList === null || this.props.examsList.length === 0) {\n      this.props.loadExamsList((status: boolean) => {\n        this.setState({ loadingExam: status });\n      });\n    } else {\n      this.setState({ loadingExam: false });\n    }\n  };\n\n  setChooseDistrict = (status: boolean) => {\n    this.setState({ chooseDistrict: status });\n  };\n\n  setSelectedDistrict = (data: roomDistrictInterface | \"all\") => {\n    this.setState({ selectedDistrict: data });\n  };\n\n  setChooseExam = (status: boolean) => {\n    this.setState({ chooseExam: status });\n  };\n\n  setSelectedExam = (data: examPreparationStateInterface | \"all\") => {\n    this.setState({ selectedExam: data });\n  };\n\n  roomDataFilter = (\n    allData: centerReportInterface[],\n    selectedExam: examPreparationStateInterface | \"all\"\n  ): centerReportInterface[] => {\n    if (selectedExam !== \"all\") {\n      return allData.filter((item) =>\n        item.course_in_room.filter(\n          (element) => element.course_id === selectedExam.course_id\n        )\n      );\n    }\n    return allData;\n  };\n\n  render() {\n    if (\n      this.props.sessionPlan.allSessionPlans &&\n      this.props.sessionPlan.allSessionPlans.length === 0\n    ) {\n      return <NoSession />;\n    }\n\n    if (\n      this.state.selectedSession === null ||\n      this.props.sessionPlan.allSessionPlans === null ||\n      this.state.reportMainData === null ||\n      this.state.invigilatorData === null\n    ) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    return (\n      <section>\n        <CenterDashboardTitle\n          loading={this.state.loading}\n          thisPeriod={this.state.selectedSession.session_plan_id}\n          setThisPeriod={this.setThisPeriod}\n          application_sessions={this.props.sessionPlan.allSessionPlans}\n          chooseDistrict={this.state.chooseDistrict}\n          setChooseDistrict={this.setChooseDistrict}\n          selectedDistrict={this.state.selectedDistrict}\n          setSelectedDistrict={this.setSelectedDistrict}\n          reportMainData={this.state.reportMainData}\n          chooseExam={this.state.chooseExam}\n          setChooseExam={this.setChooseExam}\n          selectedExam={this.state.selectedExam}\n          setSelectedExam={this.setSelectedExam}\n          examsList={this.props.examsList}\n          courses={this.props.courses}\n        />\n\n        {this.state.reportMainData && (\n          <section className=\"my-2\">\n            <div className=\"text-2xl font-semibold text-gray-600\">\n              Room occupation status\n            </div>\n            <ExamDashboardLabels\n              dataLabels={[\n                {\n                  title: \"Total room\",\n                  icon: FaLaptopHouse,\n                  iconColor: \"blue\",\n                  count: filterRoom(\n                    roomWithOccupation(\n                      this.state.reportMainData,\n                      this.state.invigilatorData\n                    ),\n                    this.state.selectedDistrict\n                  ).all.length,\n                },\n                {\n                  title: \"Full room\",\n                  icon: FaLaptopHouse,\n                  iconColor: \"green\",\n                  count: filterRoom(\n                    roomWithOccupation(\n                      this.state.reportMainData,\n                      this.state.invigilatorData\n                    ),\n                    this.state.selectedDistrict\n                  ).full.length,\n                },\n                {\n                  title: \"Available room\",\n                  icon: FaLaptopHouse,\n                  iconColor: \"gray\",\n                  count: filterRoom(\n                    roomWithOccupation(\n                      this.state.reportMainData,\n                      this.state.invigilatorData\n                    ),\n                    this.state.selectedDistrict\n                  ).remain.length,\n                },\n                {\n                  title: \"Room with invigilator\",\n                  icon: FaLaptopHouse,\n                  iconColor: \"gray\",\n                  count: filterRoom(\n                    roomWithOccupation(\n                      this.state.reportMainData,\n                      this.state.invigilatorData\n                    ),\n                    this.state.selectedDistrict\n                  ).invigilator.length,\n                },\n              ]}\n              labelsOnRow={5}\n            >\n              <div className=\"flex justify-center\">\n                <PieChart\n                  options={{\n                    labels: [\"Prepared\", \"Remaining\"],\n                    legend: {\n                      show: false,\n                      position: \"bottom\",\n                      horizontalAlign: \"center\",\n                      fontSize: \"16px\",\n                      itemMargin: {\n                        horizontal: 3,\n                        vertical: 0,\n                      },\n                    },\n                    plotOptions: {\n                      pie: {\n                        donut: {\n                          labels: {\n                            show: true,\n                            name: {\n                              show: true,\n                              fontSize: \"16px\",\n                              //   fontFamily: \"Rubik\",\n                              color: \"#2564eb\",\n                              offsetY: -10,\n                            },\n                            value: {\n                              show: true,\n                              fontSize: \"20px\",\n                              fontFamily: \"Helvetica, Arial, sans-serif\",\n                              color: \"#2564eb\",\n                              offsetY: 10,\n                              formatter: function (val) {\n                                return val;\n                              },\n                            },\n                            total: {\n                              show: true,\n                              label: \"Total\",\n                              color: \"#2564eb\",\n                              formatter: function (w) {\n                                return w.globals.seriesTotals.reduce(\n                                  (a: number, b: number) => {\n                                    return a + b;\n                                  },\n                                  0\n                                );\n                              },\n                            },\n                          },\n                        },\n                      },\n                    },\n                    colors: [\"#469769\", \"#4b5563\"],\n                  }}\n                  series={[\n                    filterRoom(\n                      roomWithOccupation(\n                        this.state.reportMainData,\n                        this.state.invigilatorData\n                      ),\n                      this.state.selectedDistrict\n                    ).full.length,\n                    filterRoom(\n                      roomWithOccupation(\n                        this.state.reportMainData,\n                        this.state.invigilatorData\n                      ),\n                      this.state.selectedDistrict\n                    ).remain.length,\n                  ]}\n                  width={210}\n                />\n              </div>\n            </ExamDashboardLabels>\n          </section>\n        )}\n\n        <section className=\"my-3 max-w-full bg-white\">\n          <div className=\"flex items-center justify-between px-3\">\n            <span className=\"text-gray-600 font-semibold text-xl py-4 px-0\">\n              Room availability{\" \"}\n              {this.state.selectedDistrict === \"all\"\n                ? \"on country level\"\n                : \"in \" +\n                  this.state.selectedDistrict.district_name +\n                  \" district\"}\n            </span>\n          </div>\n          <div className=\"mb-4 pb-2 px-3\">\n            <RoomChart\n              allData={this.roomDataFilter(\n                roomWithOccupation(\n                  this.state.reportMainData,\n                  this.state.invigilatorData\n                ),\n                this.state.selectedExam\n              )}\n              selectedExam={this.state.selectedExam}\n            />\n          </div>\n        </section>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  sessionPlan,\n  course,\n  prepareExam,\n}: StoreState): {\n  auth: Auth;\n  sessionPlan: SessionPlanReducerInterface;\n  courses: course[] | null;\n  examsList: ExamItemResponse[] | null;\n} => {\n  return {\n    auth: auth,\n    sessionPlan,\n    courses: course.courses,\n    examsList: prepareExam.examsList,\n  };\n};\n\nexport const CenterDashboard = connect(mapStateToProps, {\n  GetAllSessionPlans,\n  loadCourses,\n  loadExamsList,\n  PushPopupAlert,\n})(_CenterDashboard);\n","import React, { FC, ReactElement, ReactNode } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, System } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { NavToogle, PageHasSubNav } from \"../../actions\";\nimport { MdBrightness1, MdSearch } from \"react-icons/md\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  system: System;\n  PageHasSubNav: Function;\n  NavToogle: Function;\n  children: ReactNode;\n}\n//\ninterface AppState {\n  loading: boolean;\n}\n\nclass _SideNavigation extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount = () => this.props.PageHasSubNav(true);\n  componentWillUnmount = () => this.props.PageHasSubNav(false);\n\n  render() {\n    const isAuthenticated = this.props.auth.isAuthenticated;\n\n    if (isAuthenticated === false) {\n      return null;\n    }\n\n    const navActive = this.props.system.navigation;\n    return (\n      <div\n        className={`fixed w-48 p-1 pr-2 pl-6 text-gray-700 bg-white ${\n          navActive === true ? \"lg:left-16  left-16\" : \" -left-72 lg:left-16\"\n        }  top-0 bottom-0 pt-20 z-30 shadow-lg  transition-all duration-500 ease-in-out overflow-y-auto`}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n}: StoreState): { auth: Auth; system: System } => {\n  return { auth: auth, system: system };\n};\n\nexport const SideNavigation = connect(mapStateToProps, {\n  NavToogle,\n  PageHasSubNav,\n})(_SideNavigation);\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SearchComponentInterface = {\n  data: any[];\n};\n\nexport const Search: FC<SearchComponentInterface> = ({\n  data,\n}): ReactElement => {\n  return (\n    <div className=\"m-1 rounded-md shadow-md border border-blue-400 bg-white p-1 flex \">\n      <label htmlFor=\"search-text\" className=\"inline-block text-2xl\">\n        <MdSearch className=\"inline-block text-blue-400\" />\n      </label>\n      <input\n        type=\"search\"\n        className=\"outline-none bg-transparent flex-1 pl-1\"\n        placeholder=\"Search\"\n        id=\"search-text\"\n      />\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype MainItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const MainItem: FC<MainItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n  return (\n    <section\n      className={`${\n        active === true\n          ? \"bg-blue-500 text-white font-bold\"\n          : \"bg-blue-100 text-blue-800\"\n      } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex cursor-pointer items-center`}\n    >\n      <section className=\"flex-1\">\n        <IconDefined className=\"inline-block mr-1 text-xs\" />\n        <span>{title}</span>\n      </section>\n\n      {count > 0 ? (\n        <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n          {count}\n        </span>\n      ) : null}\n    </section>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemContainerComponentInterface = {\n  children: ReactNode;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const SubItemContainer: FC<SubItemContainerComponentInterface> = ({\n  children,\n}): ReactElement => {\n  return (\n    <div className=\"ml-3 overflow-y-auto border-l-2 border-blue-200 -mt-1 pt-2 mb-2 pl-1 cursor-pointer\">\n      {children}\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n * @important Remenber to use these components inside the <SubItemContainer>...</SubItemContainer>\n */\nexport const SubItem: FC<SubItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n\n  return (\n    <div\n      className={`animate__animated animate__zoomIn animate__faster ${\n        active === true ? \"bg-blue-500 text-white font-bold\" : \" text-blue-800\"\n      } text-blue-800 bg-blue-200 rounded-md px-1 mb-1 flex items-center py-1 font-bold`}\n    >\n      <IconDefined\n        className={`inline-block mr-0.1 text-xs ${\n          active === true ? \"text-white\" : \"\"\n        }`}\n      />\n      <span\n        className={`inline-block pl-1 ${active === true ? \"text-white\" : \"\"}`}\n      >\n        {title}\n      </span>\n      {count >= 1 ? (\n        <span\n          className={`text-sm fint-bold ${active === true ? \"text-white\" : \"\"}`}\n        >\n          {count}\n        </span>\n      ) : null}\n    </div>\n  );\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AssignRoleToUserActionInterface,\n  CustomeAccessInterface,\n  UserInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\n\nexport const userPageLimit: number = 30;\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\nexport interface FetchUsersAction {\n  type: ActionTypes.FETCH_USERS_ACCESS;\n  payload: UserAccessInterface;\n}\n\nexport interface BlockUserToSystem {\n  type: ActionTypes.BLOCK_USER_TO_SYSTEM | ActionTypes.UNBLOCK_USER_TO_SYSTEM;\n  payload: { id: string; page: number };\n}\n\nexport interface AssignRoleToUserAction {\n  type: ActionTypes.ASSIGN_ROLE_TO_USER;\n  payload: { data: AssignRoleToUserActionInterface; page: number };\n}\n\nexport interface CustomizeUserAccessAction {\n  type: ActionTypes.CUSTOMIZE_USER_ACCESS;\n  payload: { data: CustomeAccessInterface; page: number };\n}\n\nexport interface ResetUserAccessAction {\n  type: ActionTypes.RESET_USER_ACCESS;\n  payload: { user_id: string; page: number };\n}\n\nexport type fetchUserAccessInterface = {\n  users: UserInterface[] | null;\n  next: {\n    page: number;\n    limit: number;\n  } | null;\n  previous: {\n    page: number;\n    limit: number;\n  } | null;\n  total_users: number;\n};\n\nexport type UserAccessInterface = {\n  users: { data: UserInterface[]; page: number }[] | null;\n  next: {\n    page: number;\n    limit: number;\n  } | null;\n  previous: {\n    page: number;\n    limit: number;\n  } | null;\n  total_users: number;\n};\n\nexport enum documentValidationStatus {\n  waiting = \"waiting\",\n  approved = \"approved\",\n  rejected = \"rejected\",\n}\n\nexport interface VerifyDocumentInterface {\n  user_id: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date?: string;\n  };\n  in_education: boolean;\n  disability: boolean;\n}\n\nexport type AccessUserActionType =\n  | FetchUsersAction\n  | BlockUserToSystem\n  | AssignRoleToUserAction\n  | CustomizeUserAccessAction\n  | ResetUserAccessAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const fetchUserAccess = (page: number, callback?: Function) => {\n  callback && callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<fetchUserAccessInterface>(\n        `${API.AUTH}/users?page=${page}&limit=${userPageLimit}`\n      );\n      console.log(\"====================================\");\n      console.log({ fetchUserAccess: res });\n      console.log(\"====================================\");\n      dispatch<FetchUsersAction>({\n        type: ActionTypes.FETCH_USERS_ACCESS,\n        payload: {\n          users: [{ data: res.data.users!, page: page }],\n          next: res.data.next,\n          previous: res.data.previous,\n          total_users: res.data.total_users,\n        },\n      });\n      callback && callback(false, \"\", res.data.users);\n    } catch (error) {\n      console.error({ user_error: error });\n      callback && callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const blockUserToSystem = (user_id: string, page: number) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<BlockUserToSystem>({\n      type: ActionTypes.BLOCK_USER_TO_SYSTEM,\n      payload: { id: user_id, page },\n    });\n  };\n};\n\nexport const unBlockUserToSystem = (user_id: string, page: number) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<BlockUserToSystem>({\n      type: ActionTypes.UNBLOCK_USER_TO_SYSTEM,\n      payload: { id: user_id, page },\n    });\n  };\n};\n\nexport const assignRoleToUserAccess = (\n  data: AssignRoleToUserActionInterface,\n  page: number\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<AssignRoleToUserAction>({\n      type: ActionTypes.ASSIGN_ROLE_TO_USER,\n      payload: { data, page },\n    });\n  };\n};\n\nexport const customizeUserAccess = (\n  data: CustomeAccessInterface,\n  page: number\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CustomizeUserAccessAction>({\n      type: ActionTypes.CUSTOMIZE_USER_ACCESS,\n      payload: { data, page },\n    });\n  };\n};\n\nexport const resetUserAccess = (data: string, page: number) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<ResetUserAccessAction>({\n      type: ActionTypes.RESET_USER_ACCESS,\n      payload: { user_id: data, page },\n    });\n  };\n};\n","import React from \"react\";\nimport { MdInfoOutline } from \"react-icons/md\";\n\nconst NoSession = () => {\n  return (\n    <div className=\"my-5\">\n      <div className=\"bg-yellow-100 rounded flex flex-col items-center justify-center p-6 my-8 text-yellow-900 border border-yellow-900\">\n        <MdInfoOutline className=\"text-6xl md:text-9xl\" />\n        <div className=\"text-center flex flex-col\">\n          <span className=\"text-2xl md:text-4xl font-extrabold\">\n            No session available\n          </span>\n          <span className=\"text-lg\">\n            Please Wait for the system to publish the sessions or contact the\n            administrator\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NoSession;\n","import React, { Fragment, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { SessionPlanInterface } from \"../../../interfaces\";\nimport { course } from \"../../../interfaces/course\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport { ExamDoneAndRemainingByPeriodInterface } from \"../../../interfaces/reports\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { DATE, sortThisArray } from \"../../../utils/functions\";\n// import searchExamData from \"../../../utils/search\";\nimport { getPeriodById } from \"./ExamReport\";\n\n// EXCEL FILE FUNCTIONS ================================\nexport interface ExaminationProgressToPrintInterface {\n  course_id: number;\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string;\n  exam_period: string;\n  exam_date: string;\n  exam_time: string;\n  exam_duration: string;\n  exam_status: string;\n}\n\nexport enum ExaminationProgressReportContentKeyInterface {\n  COURSER_NAME = \"course_name\",\n  COURSE_CODE = \"course_code\",\n  SCHOOL_LEVEL = \"school_levels\",\n  PERIOD = \"exam_period\",\n  DATE = \"exam_date\",\n  TIME = \"exam_time\",\n  DURATION = \"exam_duration\",\n  STATUS = \"exam_status\",\n}\n\nexport interface ExaminationProgressReportContentInterface {\n  key: ExaminationProgressReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n\nexport const examinationProgressIsChangeAllowed = (\n  key: ExaminationProgressReportContentKeyInterface\n): boolean => {\n  if (\n    key === ExaminationProgressReportContentKeyInterface.COURSER_NAME ||\n    key === ExaminationProgressReportContentKeyInterface.COURSE_CODE ||\n    key === ExaminationProgressReportContentKeyInterface.PERIOD ||\n    key === ExaminationProgressReportContentKeyInterface.STATUS\n  ) {\n    return false;\n  }\n  return true;\n};\n\nexport const defaultExaminationProgressContent: ExaminationProgressReportContentInterface[] =\n  [\n    {\n      key: ExaminationProgressReportContentKeyInterface.COURSER_NAME,\n      title: \"Course names\",\n      status: true,\n    },\n    {\n      key: ExaminationProgressReportContentKeyInterface.COURSE_CODE,\n      title: \"Course code\",\n      status: true,\n    },\n    {\n      key: ExaminationProgressReportContentKeyInterface.SCHOOL_LEVEL,\n      title: \"School levels\",\n      status: true,\n    },\n    {\n      key: ExaminationProgressReportContentKeyInterface.PERIOD,\n      title: \"Exam period\",\n      status: true,\n    },\n    {\n      key: ExaminationProgressReportContentKeyInterface.DATE,\n      title: \"Exam date\",\n      status: true,\n    },\n    {\n      key: ExaminationProgressReportContentKeyInterface.TIME,\n      title: \"Exam time\",\n      status: true,\n    },\n    {\n      key: ExaminationProgressReportContentKeyInterface.DURATION,\n      title: \"Exam duration\",\n      status: true,\n    },\n    {\n      key: ExaminationProgressReportContentKeyInterface.STATUS,\n      title: \"Exam Status\",\n      status: true,\n    },\n  ];\n\n// END EXCEL FILE FUNCTIONS ================================\n\nexport const displayStatus = (status: string): string => {\n  if (status === \"Done\") {\n    return \"Completed\";\n  }\n  if (status === \"Editing\") {\n    return \"In exam\";\n  }\n  return status;\n};\n\nexport interface examProgressStateInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n  exam: ExamItemResponse | null;\n  preparation_status: string;\n}\n\nexport const FC_reportDoneExamList = (\n  allCourses: course[],\n  allExams: ExamItemResponse[],\n  doneExams: ExamDoneAndRemainingByPeriodInterface[]\n): examProgressStateInterface[] => {\n  let result: examProgressStateInterface[] = [],\n    ids: string[] = [];\n  for (const key in allExams) {\n    if (Object.prototype.hasOwnProperty.call(allExams, key)) {\n      if (ids.includes(allExams[key].id)) continue;\n      ids.push(allExams[key].id);\n      let courser = allCourses.find(\n        (item) => item.course_id === allExams[key].course\n      );\n      if (courser) {\n        let doneExam = doneExams.find(\n          (item) =>\n            item.course === allExams[key].course &&\n            item.period === allExams[key].period\n        );\n        result.push({\n          course_name: courser.course_name,\n          course_code: courser.course_code,\n          description: courser.description,\n          school_levels: courser.school_levels,\n          course_id: courser.course_id,\n          exam: allExams[key],\n          preparation_status: doneExam ? doneExam.exam_status : \"remaining\",\n        });\n      }\n    }\n  }\n  return result;\n};\n\nexport const FC_reportDoneExamListFilter = (\n  thisList: examProgressStateInterface[],\n  thisValue: \"all\" | \"Done\" | \"Active\"\n): examProgressStateInterface[] => {\n  if (thisValue === \"all\") {\n    return thisList;\n  } else {\n    return thisList.filter((item) => item.preparation_status === thisValue);\n  }\n};\n\nexport const searchExamData = (\n  objList: examProgressStateInterface[],\n  text: string\n): examProgressStateInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (\n        prop === \"course_name\" ||\n        prop === \"course_code\" ||\n        prop === \"preparation_status\"\n      ) {\n        flag =\n          product[prop].toString().toLowerCase().indexOf(text.toLowerCase()) >\n          -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n};\n\ntype DoneExamListProps = {\n  loading: boolean;\n  examsListData: ExamItemResponse[] | null;\n  courseListData: course[] | null;\n  thisPeriod: SessionPlanInterface[];\n  doneExamsData: ExamDoneAndRemainingByPeriodInterface[] | null;\n\n  // for filter purpose =============================\n  filterExamProgress: \"all\" | \"Done\" | \"Active\";\n};\n\nconst DoneExamList: React.FC<DoneExamListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const [isSorted, setIsSorted] = useState<boolean>(false);\n  const [sortProperty, setSortProperty] = useState<string>(\"\");\n  const [sortOrder, setSortOrder] = useState<\"ASC\" | \"DESC\">(\"ASC\");\n\n  const setSort = (thisProperty: string) => {\n    if (sortProperty === thisProperty && sortOrder === \"ASC\") {\n      setSortOrder(\"DESC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    } else {\n      setSortOrder(\"ASC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    }\n  };\n\n  return (\n    <Fragment>\n      <div className=\"bg-white my-4\">\n        <div className=\"w-full px-2 py-2\">\n          <input\n            onChange={(e) => setSearchInput(e.target.value)}\n            type=\"text\"\n            value={searchInput}\n            placeholder=\"Search...\"\n            className=\"w-full bg-gray-100 py-2 px-3 rounded\"\n            disabled={\n              props.courseListData &&\n              props.examsListData &&\n              props.doneExamsData &&\n              FC_reportDoneExamListFilter(\n                FC_reportDoneExamList(\n                  props.courseListData,\n                  props.examsListData,\n                  props.doneExamsData\n                ),\n                props.filterExamProgress\n              ).length <= 0\n                ? true\n                : false\n            }\n          />\n        </div>\n        <table className=\"w-full shadow\" id=\"report_content\">\n          <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n            <tr>\n              <td className=\"px-2 py-2\">#</td>\n              <td\n                className=\"px-2 py-2 cursor-pointer\"\n                onClick={() => setSort(\"course_name\")}\n              >\n                <div className=\"flex items-center gap-1\">\n                  Course <BiSort />\n                </div>\n              </td>\n              <td className=\"px-2 py-2\">Exam date</td>\n              <td className=\"px-2 py-2\">Exam time</td>\n              <td className=\"px-2 py-2\">Exam duration</td>\n              <td className=\"px-2 py-2\">Exam Period</td>\n              <td\n                className=\"px-2 py-2 cursor-pointer\"\n                onClick={() => setSort(\"preparation_status\")}\n              >\n                <div className=\"flex items-center gap-1\">\n                  Exam Status <BiSort />\n                </div>\n              </td>\n            </tr>\n          </thead>\n          <tbody>\n            {props.courseListData === null || props.loading ? (\n              <tr>\n                <td colSpan={7} className=\"px-2 py-2\">\n                  <Loading />\n                </td>\n              </tr>\n            ) : props.examsListData &&\n              props.doneExamsData &&\n              FC_reportDoneExamListFilter(\n                FC_reportDoneExamList(\n                  props.courseListData,\n                  props.examsListData,\n                  props.doneExamsData\n                ),\n                props.filterExamProgress\n              ).length <= 0 ? (\n              <tr>\n                <td colSpan={7} className=\"px-2 py-2 text-center\">\n                  No Exam list available!\n                </td>\n              </tr>\n            ) : (\n              props.examsListData &&\n              props.doneExamsData &&\n              sortThisArray(\n                isSorted,\n                searchExamData(\n                  FC_reportDoneExamListFilter(\n                    FC_reportDoneExamList(\n                      props.courseListData,\n                      props.examsListData,\n                      props.doneExamsData\n                    ),\n                    props.filterExamProgress\n                  ),\n                  searchInput\n                ),\n                sortProperty,\n                sortOrder\n              ).map((item, i) => (\n                <tr\n                  key={i + 1}\n                  className={`${\n                    item.preparation_status === \"Done\"\n                      ? \"bg-blue-50\"\n                      : \"bg-white\"\n                  } text-gray-600 hover:bg-blue-100 hover:text-blue-700 border-b border-gray-300 hover:border-blue-500 text-sm`}\n                >\n                  <td className=\"px-2 py-2\">{i + 1}</td>\n                  <td className=\"px-2 py-2\">\n                    {capitalizeFirstLetter(item.course_name)} (\n                    <span className=\"font-semibold\">{item.course_code}</span>)\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam ? DATE(item.exam.exam_date) : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam ? item.exam.start_time : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam ? item.exam!.duration + \" min\" : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam\n                      ? getPeriodById(props.thisPeriod, item.exam.period)\n                        ? getPeriodById(props.thisPeriod, item.exam.period)!\n                            .session_plan_name\n                        : \"-\"\n                      : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {capitalizeFirstLetter(\n                      displayStatus(item.preparation_status)\n                    )}\n                  </td>\n                </tr>\n              ))\n            )}\n          </tbody>\n        </table>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default React.memo(DoneExamList);\n","import { ApexOptions } from \"apexcharts\";\nimport React, { useEffect, useState } from \"react\";\nimport Chart from \"react-apexcharts\";\n\ntype VBarCharPropstInterface = {\n  labels: string[];\n  categoriesLabel: any;\n  bar?: {\n    borderRadius: number;\n    horizontal: boolean;\n    columnWidth: string;\n    endingShape: string;\n  };\n  dataLabels: boolean;\n  yaxisText: string;\n  tooltipText: string;\n  series: {\n    name: string;\n    data: number[];\n  }[];\n  defaultBar?: {\n    borderRadius: number;\n    horizontal: boolean;\n    columnWidth: string;\n    endingShape: string;\n  };\n  colors?: any[];\n  title?: {\n    text: string;\n    align: string;\n    margin: number;\n    offestY: number;\n    style: {\n      fontSize: string;\n    };\n  };\n  stacked?: boolean;\n  FC_LoadSelected?: (labelIndex: number, seriesIndex: number) => void;\n  chartHeight?: number;\n};\n\nconst defaultBar = {\n  borderRadius: 4,\n  horizontal: false,\n  columnWidth: \"95%\",\n  endingShape: \"rounded\",\n};\n\nconst VBarChart: React.FC<VBarCharPropstInterface> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [options, setOptions] = useState<ApexOptions>({\n    chart: {\n      events: {\n        dataPointSelection: (event, chartContext, config) => {\n          console.log({\n            labelClicked: config.w.config.labels[config.dataPointIndex],\n            // seriesClicked: config.w.config.series[config.dataPointIndex],\n          });\n          if (props.FC_LoadSelected) {\n            props.FC_LoadSelected(config.dataPointIndex, config.seriesIndex);\n          }\n          // console.log(config.seriesIndex);\n          // console.log(config.dataPointIndex);\n        },\n      },\n      stacked: props.stacked ? props.stacked : false,\n    },\n    plotOptions: {\n      bar: props.defaultBar ? props.defaultBar : defaultBar,\n    },\n    labels: props.labels,\n    dataLabels: {\n      enabled: true,\n    },\n    xaxis: {\n      labels: {\n        rotate: -45,\n      },\n      categories: props.categoriesLabel,\n      tickPlacement: \"on\",\n    },\n    yaxis: {\n      title: {\n        text: props.yaxisText,\n      },\n    },\n    fill: {\n      opacity: 1,\n    },\n    tooltip: {\n      y: {\n        formatter: function (val: number) {\n          return val + \" \" + props.tooltipText;\n        },\n      },\n    },\n    grid: {\n      padding: {\n        left: 30, // or whatever value that works\n        right: 30, // or whatever value that works\n      },\n    },\n    noData: {\n      text: \"No data found\",\n      align: \"center\",\n      verticalAlign: \"middle\",\n    },\n  });\n\n  useEffect(() => {\n    if (props.colors && props.colors.length > 0 && loading) {\n      setOptions({\n        chart: {\n          stacked: props.stacked ? props.stacked : false,\n          events: {\n            dataPointSelection: (event, chartContext, config) => {\n              console.log({\n                chartClicked: config.w.config.labels[config.dataPointIndex],\n              });\n              if (props.FC_LoadSelected) {\n                props.FC_LoadSelected(\n                  config.dataPointIndex,\n                  config.seriesIndex\n                );\n              }\n            },\n          },\n          zoom: {\n            enabled: true,\n            autoScaleYaxis: true,\n          },\n        },\n        plotOptions: {\n          bar: props.defaultBar ? props.defaultBar : defaultBar,\n        },\n        labels: props.labels,\n        dataLabels: {\n          enabled: true,\n        },\n        xaxis: {\n          labels: {\n            rotate: -45,\n          },\n          categories: props.categoriesLabel,\n          tickPlacement: \"on\",\n        },\n        yaxis: {\n          title: {\n            text: props.yaxisText,\n          },\n        },\n        fill: {\n          opacity: 1,\n        },\n        tooltip: {\n          y: {\n            formatter: function (val: number) {\n              return val + \" \" + props.tooltipText;\n            },\n          },\n        },\n        grid: {\n          padding: {\n            left: 30, // or whatever value that works\n            right: 30, // or whatever value that works\n          },\n        },\n        noData: {\n          text: \"No data found\",\n          align: \"center\",\n          verticalAlign: \"middle\",\n        },\n        colors: props.colors,\n      });\n    } else if (loading) {\n      setOptions({\n        chart: {\n          stacked: props.stacked ? props.stacked : false,\n          events: {\n            dataPointSelection: (event, chartContext, config) => {\n              console.log({\n                labelClicked: config.w.config.labels[config.dataPointIndex],\n                // seriesClicked: config.w.config.series[config.dataPointIndex],\n              });\n              if (props.FC_LoadSelected) {\n                props.FC_LoadSelected(\n                  config.dataPointIndex,\n                  config.seriesIndex\n                );\n              }\n              // console.log(config.seriesIndex);\n              // console.log(config.dataPointIndex);\n            },\n          },\n          zoom: {\n            enabled: true,\n            autoScaleYaxis: true,\n          },\n        },\n        plotOptions: {\n          bar: props.defaultBar ? props.defaultBar : defaultBar,\n        },\n        labels: props.labels,\n        dataLabels: {\n          enabled: true,\n        },\n        xaxis: {\n          labels: {\n            rotate: -45,\n          },\n          categories: props.categoriesLabel,\n          tickPlacement: \"on\",\n        },\n        yaxis: {\n          title: {\n            text: props.yaxisText,\n          },\n        },\n        fill: {\n          opacity: 1,\n        },\n        tooltip: {\n          y: {\n            formatter: function (val: number) {\n              return val + \" \" + props.tooltipText;\n            },\n          },\n        },\n        grid: {\n          padding: {\n            left: 30, // or whatever value that works\n            right: 30, // or whatever value that works\n          },\n        },\n        noData: {\n          text: \"No data found\",\n          align: \"center\",\n          verticalAlign: \"middle\",\n        },\n      });\n    }\n    setLoading(false);\n  }, [loading, options, props]);\n\n  if (loading) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading Data...\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"w-full\">\n      <Chart\n        options={options}\n        series={props.series}\n        type=\"bar\"\n        width=\"100%\"\n        height={props.chartHeight ? props.chartHeight : undefined}\n      />\n    </div>\n  );\n};\n\nexport default React.memo(VBarChart);\n","import React, { Component } from \"react\";\nimport { BiFilterAlt } from \"react-icons/bi\";\nimport { FiEdit } from \"react-icons/fi\";\nimport { MdRadioButtonChecked, MdRadioButtonUnchecked } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  schoolLevelsStoreInterface,\n  setSelectedPeriod,\n  loadCourses,\n  loadExamsList,\n  loadEducationCategories,\n  loadDoneExam,\n  loadSchoolLevels,\n  loadPerfomranceExam,\n  loadCandidatesExamPerformance,\n  setSelectedEducationCategory,\n  PushPopupAlert,\n  FilterParamType,\n  ReportGetCandidatePerformanceSortTypes,\n} from \"../../../actions\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport {\n  generatePDF,\n  reportSettingsInterface,\n} from \"../../../components/DownloadPDF/rest\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { SideNavigation } from \"../../../components/Navigation/SideNavigation\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  course,\n  education_category,\n  ReportUserExamStatus,\n  school_level,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport {\n  ExamItemResponse,\n  PrepareExamStatus,\n  QuestionNumberFormat,\n} from \"../../../interfaces/prepare_exam\";\nimport { StoreState } from \"../../../reducers\";\nimport { ExamReportReducerType } from \"../../../reducers/exam_report\";\nimport { SessionPlanReducerInterface } from \"../../../reducers/session\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { DATE, timestampToDate } from \"../../../utils/functions\";\nimport NoSession from \"../../SessionSettings/NoSession\";\nimport CandiadtePerformancePerDistrict, {\n  FC_CandiadtePerformancePerDistrictFilter,\n} from \"./CandiadtePerformancePerDistrict\";\nimport CandidatePerformance, {\n  CandidateExamPerformanceToPrintInterface,\n  CandidateExamPerformanceReportContentInterface,\n  defaultCandidateExamPerformanceContent,\n  candidatePerfomranceStateInterface,\n  FC_reportCandidatePerformanceData,\n} from \"./CandidatePerformance\";\nimport DoneExamList, {\n  ExaminationProgressToPrintInterface,\n  ExaminationProgressReportContentInterface,\n  defaultExaminationProgressContent,\n  displayStatus,\n  examProgressStateInterface,\n  FC_reportDoneExamList,\n} from \"./DoneExamList\";\nimport ExamList, {\n  ExamPreparationToPrintInterface,\n  examPreparationReportContentInterface,\n  defaultExamPreparationReportContent,\n  examPreparationStateInterface,\n  FC_reportExamList,\n} from \"./ExamList\";\nimport ExamPerformance, {\n  ExamPerformanceToPrintInterface,\n  examPerformanceReportContentInterface,\n  defaultExamPerformanceContent,\n  examPerformanceStateInterface,\n  FC_reportExamPerformanceData,\n} from \"./ExamPerformance\";\nimport ExamPerformancePerDistrict, {\n  FC_ExamPerformancePerDistrictPropsData,\n} from \"./ExamPerformancePerDistrict\";\nimport ExamReportFilters from \"./ExamReportFilters\";\nimport ExamReportModals, { ModalForTypes } from \"./ExamReportModals\";\nimport ExamReportTitle from \"./ExamReportTitle\";\n\nexport interface reportCourseInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n  exam: {\n    questions: string[];\n    status: number;\n    period: string;\n    course: string;\n    exam_status: PrepareExamStatus;\n    termes: string;\n    questions_per_page: number;\n    exam_date: string;\n    start_time: string;\n    duration: number;\n    number_format: QuestionNumberFormat;\n    discription: string;\n    createdAt: string;\n    updatedAt: string;\n    id: string;\n  };\n}\n\nexport const getExamByCourseId = (\n  allExams: ExamItemResponse[],\n  course_id: string\n): ExamItemResponse | undefined => {\n  return allExams.find((item) => item.course === course_id);\n};\n\nexport const getPeriodById = (\n  periods: SessionPlanInterface[],\n  period_id: string\n): SessionPlanInterface | undefined => {\n  return periods.find((item) => item.session_plan_id === period_id);\n};\n\nexport const loadAllExams = (\n  examsList: ExamItemResponse[] | null,\n  selected_period: SessionPlanInterface | null\n): ExamItemResponse[] | null => {\n  let result: ExamItemResponse[] | null = examsList;\n  if (result && selected_period) {\n    result = result.filter(\n      (item) => item.period === selected_period?.session_plan_id\n    );\n  } else {\n    result = examsList;\n  }\n  return result;\n};\n\n// TYPES OF REPORTS ======================================\nexport enum reportTitleType {\n  APPLICANTS_PERFORMANCE = \"Exam report\",\n  EXAM_PREPARATION = \"List of prepared and not prepared exams\",\n  EXAM_PERFORMANCE = \"Exam performance\",\n  EXAMINATION_PROGRESS = \"List of complete & remaining exams\",\n  EXAM_DISTRICT_PERFORMANCE = \"Top 30 exams passed in\", // ADD DISTRICT NAME EX: Muhanga District\n  APPLICANTS_DISTRICT_PERFORMANCE = \"Top 30 applicants performance\", // ADD DISTRICT NAME EX: Muhanga District && EXAM NAME EX: Physics\n}\n\ninterface ExamReportProps {\n  auth: Auth;\n  periods: SessionPlanReducerInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n  courses: course[] | null;\n  examsList: ExamItemResponse[] | null;\n  adminExamReport: ExamReportReducerType;\n  GetAllSessionPlans: Function;\n  loadEducationCategories: Function;\n  setSelectedEducationCategory: (\n    education_category: education_category\n  ) => void;\n  loadCourses: (callback: (loading: boolean) => void) => void;\n  loadExamsList: (callback: (loading: boolean) => void) => void;\n  loadDoneExam: (period_id: string, callback: Function) => void;\n  loadPerfomranceExam: (period_id: string, callback: Function) => void;\n  loadSchoolLevels: (callback: (loading: boolean) => void) => void;\n  loadCandidatesExamPerformance: (\n    dataBody: FilterParamType | null,\n    callback: Function\n  ) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface ExamReportState {\n  loading: boolean;\n  loadingCourses: boolean;\n  loadingExams: boolean;\n  downloading: boolean;\n  loadingDoneExam: boolean;\n  loadingCandidatesExamPerformance: boolean;\n  loadingExamPerformance: boolean;\n  loadingSettings: boolean;\n\n  // FILTER STATES =======================================\n  filterPreparation: \"prepared\" | \"not prepared\" | \"all\";\n  filterExamProgress: \"Done\" | \"Active\" | \"all\";\n  filterApplicantPerformance: ReportUserExamStatus | \"all\";\n  // END FILTER STATES =======================================\n\n  selectPeriod: boolean;\n  generateReportModal: {\n    reportType: \"EXCEL\" | \"PDF\";\n    status: boolean;\n  } | null;\n  districtModal: boolean;\n  selected_period: SessionPlanInterface | null;\n\n  // GENERATE EXCEL REPORT =======================================\n  // WHAT TO PRINT ########################################\n  reportTitle: reportTitleType;\n  // WHAT TITLE TO PRINT ########################################\n  excelReportTitle: string;\n  // SET DEFAULT CONTENT ########################################\n  // ############### EXAM PREPARATION ######################\n  examsToPrint: ExamPreparationToPrintInterface[] | null;\n  examPreparationReportContent: examPreparationReportContentInterface[];\n  // ############### EXAM PERFORMANCE ######################\n  examPerformanceToPrint: ExamPerformanceToPrintInterface[] | null;\n  examPerformanceReportContent: examPerformanceReportContentInterface[];\n  // ############### TOP 30 EXAM PERFORMANCE ######################\n  exam30PerformanceToPrint: ExamPerformanceToPrintInterface[] | null;\n  exam30PerformanceReportContent: examPerformanceReportContentInterface[];\n  // ############### EXAMINATION PROGRESS ######################\n  examinationProgressToPrint: ExaminationProgressToPrintInterface[] | null;\n  examinationProgressReportContent: ExaminationProgressReportContentInterface[];\n  // ############### CANDIDATE EXAM PERFORMANCE ######################\n  candidateExamPerformanceToPrint:\n    | CandidateExamPerformanceToPrintInterface[]\n    | null;\n\n  candidateExamPerformanceReportContent: CandidateExamPerformanceReportContentInterface[];\n  // ############### CANDIDATE EXAM PERFORMANCE ######################\n\n  candidate30ExamPerformanceToPrint:\n    | CandidateExamPerformanceToPrintInterface[]\n    | null;\n\n  candidate30ExamPerformanceReportContent: CandidateExamPerformanceReportContentInterface[];\n  // END GENERATE EXCEL REPORT =======================================\n}\n\nclass _ExamReport extends Component<ExamReportProps, ExamReportState> {\n  constructor(props: ExamReportProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingCourses: true,\n      loadingExams: true,\n      downloading: false,\n      loadingDoneExam: true,\n      loadingCandidatesExamPerformance: true,\n      loadingExamPerformance: true,\n      loadingSettings: true,\n      selectPeriod: false,\n      districtModal: false,\n\n      // FILTER STATES =======================================\n      filterPreparation: \"all\",\n      filterExamProgress: \"all\",\n      filterApplicantPerformance: \"all\",\n      // END FILTER STATES =======================================\n\n      generateReportModal: null,\n      selected_period: null,\n\n      // GENERATE EXCEL REPORT =======================================\n      // WHAT TO PRINT ########################################\n      reportTitle: reportTitleType.APPLICANTS_PERFORMANCE,\n      // WHAT TITLE TO PRINT ########################################\n      excelReportTitle: reportTitleType.APPLICANTS_PERFORMANCE,\n      // SET DEFAULT CONTENT ########################################\n      // ############### EXAM PREPARATION ######################\n      examsToPrint: null,\n      examPreparationReportContent: defaultExamPreparationReportContent,\n      // ############### EXAM PERFORMANCE ######################\n      examPerformanceToPrint: null,\n      examPerformanceReportContent: defaultExamPerformanceContent,\n      // ############### TOP 30 EXAM PERFORMANCE ######################\n      exam30PerformanceToPrint: null,\n      exam30PerformanceReportContent: defaultExamPerformanceContent,\n      // ############### EXAMINATION PROGRESS ######################\n      examinationProgressToPrint: null,\n      examinationProgressReportContent: defaultExaminationProgressContent,\n      // ############### CANDIDATE EXAM PERFORMANCE ######################\n      candidateExamPerformanceToPrint: null,\n\n      candidateExamPerformanceReportContent:\n        defaultCandidateExamPerformanceContent,\n      // ############### CANDIDATE EXAM PERFORMANCE ######################\n\n      candidate30ExamPerformanceToPrint: null,\n\n      candidate30ExamPerformanceReportContent:\n        defaultCandidateExamPerformanceContent,\n      // END GENERATE EXCEL REPORT =======================================\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingCourses = (value: boolean) => {\n    this.setState({ loadingCourses: value });\n  };\n\n  setLoadingExams = (value: boolean) => {\n    this.setState({ loadingExams: value });\n  };\n\n  setDownloading = (value: boolean) => {\n    this.setState({ downloading: value });\n  };\n\n  setLoadingDoneExam = (value: boolean) => {\n    this.setState({ loadingDoneExam: value });\n  };\n\n  setLoadingCandidatesExamPerformance = (value: boolean) => {\n    this.setState({ loadingCandidatesExamPerformance: value });\n  };\n\n  setLoadingExamPerformance = (value: boolean) => {\n    this.setState({ loadingExamPerformance: value });\n  };\n\n  setLoadingSettings = (value: boolean) => {\n    this.setState({ loadingSettings: value });\n  };\n\n  setSelectPeriod = (value: boolean) => {\n    this.setState({ selectPeriod: value });\n  };\n\n  setDistrictModal = (value: boolean) => {\n    this.setState({ districtModal: value });\n  };\n\n  setFilterPreparation = (value: \"prepared\" | \"not prepared\" | \"all\") => {\n    this.setState({ filterPreparation: value });\n  };\n\n  setFilterExamProgress = (value: \"Done\" | \"Active\" | \"all\") => {\n    this.setState({ filterExamProgress: value });\n  };\n\n  setFilterApplicantPerformance = (value: ReportUserExamStatus | \"all\") => {\n    this.setState({ filterApplicantPerformance: value });\n  };\n\n  setGenerateReportModal = (\n    value: {\n      reportType: \"EXCEL\" | \"PDF\";\n      status: boolean;\n    } | null\n  ) => {\n    this.setState({ generateReportModal: value });\n  };\n\n  setSelectedPeriod = (value: SessionPlanInterface | null) => {\n    this.setState({ selected_period: value });\n  };\n\n  setReportTitle = (value: reportTitleType) => {\n    this.setState({ reportTitle: value });\n  };\n\n  setExcelReportTitle = (value: string) => {\n    this.setState({ excelReportTitle: value });\n  };\n\n  setExamsToPrint = (value: ExamPreparationToPrintInterface[] | null) => {\n    this.setState({ examsToPrint: value });\n  };\n\n  setExamPreparationReportContent = (\n    value: examPreparationReportContentInterface[]\n  ) => {\n    this.setState({ examPreparationReportContent: value });\n  };\n  setExamPerformanceToPrint = (\n    value: ExamPerformanceToPrintInterface[] | null\n  ) => {\n    this.setState({ examPerformanceToPrint: value });\n  };\n  setExamPerformanceReportContent = (\n    value: examPerformanceReportContentInterface[]\n  ) => {\n    this.setState({ examPerformanceReportContent: value });\n  };\n\n  setExam30PerformanceToPrint = (\n    value: ExamPerformanceToPrintInterface[] | null\n  ) => {\n    this.setState({ exam30PerformanceToPrint: value });\n  };\n  setExam30PerformanceReportContent = (\n    value: examPerformanceReportContentInterface[]\n  ) => {\n    this.setState({ exam30PerformanceReportContent: value });\n  };\n  setExaminationProgressToPrint = (\n    value: ExaminationProgressToPrintInterface[] | null\n  ) => {\n    this.setState({ examinationProgressToPrint: value });\n  };\n  setExaminationProgressExamPerformanceReportContent = (\n    value: ExaminationProgressReportContentInterface[]\n  ) => {\n    this.setState({ examinationProgressReportContent: value });\n  };\n\n  setCandidateExamPerformanceToPrint = (\n    value: CandidateExamPerformanceToPrintInterface[] | null\n  ) => {\n    this.setState({ candidateExamPerformanceToPrint: value });\n  };\n\n  setCandidateExamPerformanceReportContent = (\n    value: CandidateExamPerformanceReportContentInterface[]\n  ) => {\n    this.setState({ candidateExamPerformanceReportContent: value });\n  };\n\n  setCandidate30ExamPerformanceToPrint = (\n    value: CandidateExamPerformanceToPrintInterface[] | null\n  ) => {\n    this.setState({ candidate30ExamPerformanceToPrint: value });\n  };\n\n  setCandidate30ExamPerformanceReportContent = (\n    value: CandidateExamPerformanceReportContentInterface[]\n  ) => {\n    this.setState({ candidate30ExamPerformanceReportContent: value });\n  };\n\n  selectDefaultSession = (allSession: SessionPlanInterface[]) => {\n    if (allSession.length > 0) {\n      let active_period = allSession.find((item) => item.is_active);\n      this.setSelectedPeriod(active_period ? active_period : allSession[0]);\n    }\n    this.setSelectPeriod(false);\n  };\n\n  componentDidMount = () => {\n    if (\n      this.props.periods.allSessionPlans === null ||\n      this.props.periods.allSessionPlans.length === 0\n    ) {\n      this.props.GetAllSessionPlans(\n        (status: boolean, msg: string, data?: SessionPlanInterface[]) => {\n          this.setLoadingSettings(status);\n          if (!status) {\n            if (!isEmptyOrSpaces(msg)) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (\n              data &&\n              data.length > 0 &&\n              this.state.selected_period === null\n            ) {\n              this.selectDefaultSession(data);\n            }\n          }\n        }\n      );\n    } else if (this.state.selected_period === null) {\n      this.selectDefaultSession(this.props.periods.allSessionPlans);\n    }\n\n    if (\n      this.props.schoolLevels.education_categories === null ||\n      this.props.schoolLevels.education_categories.length\n    ) {\n      this.props.loadEducationCategories(\n        (status: boolean, msg: string, data?: education_category[]) => {\n          this.setLoadingSettings(status);\n          if (!status) {\n            if (!isEmptyOrSpaces(msg)) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (\n              data &&\n              data.length > 0 &&\n              !this.props.schoolLevels.selectedEducationCategory\n            ) {\n              this.props.setSelectedEducationCategory(data[0]);\n            }\n          }\n        }\n      );\n    } else if (!this.props.schoolLevels.selectedEducationCategory) {\n      this.props.setSelectedEducationCategory(\n        this.props.schoolLevels.education_categories[0]\n      );\n    }\n\n    if (\n      this.props.schoolLevels.school_levels === null ||\n      this.props.schoolLevels.school_levels.length <= 0\n    ) {\n      this.props.loadSchoolLevels(this.setLoadingSettings);\n    }\n\n    if (\n      this.props.courses === null ||\n      (this.props.courses.length === 0 && this.state.loadingCourses)\n    ) {\n      this.props.loadCourses(this.setLoadingCourses);\n    } else if (this.state.loadingCourses) {\n      this.setLoadingCourses(false);\n    }\n\n    if (\n      this.props.examsList === null ||\n      (this.props.examsList.length === 0 && this.state.loadingExams)\n    ) {\n      this.props.loadExamsList(this.setLoadingExams);\n    } else if (this.state.loadingExams) {\n      this.setLoadingExams(false);\n    }\n\n    if (\n      this.props.auth.application_session &&\n      this.props.auth.application_session.session_plan_id &&\n      (this.props.adminExamReport.DoneExam === null ||\n        (this.props.adminExamReport.DoneExam.length === 0 &&\n          this.state.loadingDoneExam))\n    ) {\n      this.props.loadDoneExam(\n        this.props.auth.application_session.session_plan_id,\n        (status: boolean, msg: string) => {\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            this.setLoadingDoneExam(false);\n          }\n        }\n      );\n    } else if (this.state.loadingDoneExam) {\n      this.setLoadingDoneExam(false);\n    }\n\n    if (\n      this.props.auth.application_session &&\n      this.props.auth.application_session.session_plan_id &&\n      (this.props.adminExamReport.CandidatesExamPerformance === null ||\n        (this.props.adminExamReport.CandidatesExamPerformance.length === 0 &&\n          this.state.loadingCandidatesExamPerformance))\n    ) {\n      this.props.loadCandidatesExamPerformance(\n        {\n          order: \"desc\",\n          sortBy: ReportGetCandidatePerformanceSortTypes.DATE,\n          filter: {\n            period: this.props.auth.application_session.session_plan_id,\n          },\n        },\n        (status: boolean, msg: string) => {\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            this.setLoadingCandidatesExamPerformance(false);\n          }\n        }\n      );\n    } else if (this.state.loadingCandidatesExamPerformance) {\n      this.setLoadingCandidatesExamPerformance(false);\n    }\n\n    if (\n      this.props.auth.application_session &&\n      this.props.auth.application_session.session_plan_id &&\n      (this.props.adminExamReport.ExamPerformance === null ||\n        (this.props.adminExamReport.ExamPerformance.length === 0 &&\n          this.state.loadingExamPerformance))\n    ) {\n      this.props.loadPerfomranceExam(\n        this.props.auth.application_session.session_plan_id,\n        (status: boolean, msg: string) => {\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            this.setLoadingExamPerformance(false);\n          }\n        }\n      );\n    } else if (this.state.loadingExamPerformance) {\n      this.setLoadingExamPerformance(false);\n    }\n\n    if (this.state.excelReportTitle === this.state.reportTitle) {\n      let result: string = \"\";\n      if (\n        this.state.excelReportTitle ===\n          reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n        this.props.adminExamReport.reportDistrictId\n      ) {\n        result += ` ${this.props.adminExamReport.reportDistrictId.district_name} district`;\n      } else if (\n        this.state.excelReportTitle ===\n        reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE\n      ) {\n        if (this.props.adminExamReport.reportDistrictId) {\n          result += ` in ${this.props.adminExamReport.reportDistrictId.district_name} district`;\n        }\n        if (this.props.adminExamReport.reportCourseId) {\n          result += ` in exam of ${this.props.adminExamReport.reportCourseId.course_name}(${this.props.adminExamReport.reportCourseId.course_code})`;\n        }\n      } else {\n        result = \"\";\n      }\n      this.setExcelReportTitle(this.state.excelReportTitle + result);\n      this.setLoading(false);\n    }\n  };\n\n  onPeriodChange = (period_id: string) => {\n    this.props.loadDoneExam(period_id, (status: boolean, msg: string) => {\n      this.setLoadingDoneExam(status);\n      if (!status) {\n        if (msg.length > 0) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n        this.setLoadingDoneExam(false);\n      }\n    });\n\n    this.props.loadPerfomranceExam(\n      period_id,\n      (status: boolean, msg: string) => {\n        this.setLoadingExamPerformance(status);\n        if (!status) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          this.setLoadingExamPerformance(false);\n        }\n      }\n    );\n\n    this.props.loadCandidatesExamPerformance(\n      {\n        order: \"desc\",\n        sortBy: ReportGetCandidatePerformanceSortTypes.DATE,\n        filter: {\n          period: period_id,\n        },\n      },\n      (status: boolean, msg: string) => {\n        if (!status) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          this.setLoadingCandidatesExamPerformance(false);\n        }\n      }\n    );\n  };\n\n  getLevelbyId = (level_id: string): school_level | undefined => {\n    if (this.props.schoolLevels.school_levels) {\n      return this.props.schoolLevels.school_levels.find(\n        (item) => item.school_level_id === level_id\n      );\n    }\n  };\n\n  getCourses = (): course[] | null => {\n    let result: course[] | null = [],\n      search_all: boolean = true;\n    if (this.props.courses) {\n      // FILTER BY EDICATION CATEGORY ====================\n      if (this.props.schoolLevels.selectedEducationCategory) {\n        for (const key in this.props.courses) {\n          if (Object.prototype.hasOwnProperty.call(this.props.courses, key)) {\n            if (this.props.courses[key].school_levels.length > 0) {\n              this.props.courses[key].school_levels.forEach((level) => {\n                let levelDetail = this.getLevelbyId(level);\n                if (\n                  levelDetail &&\n                  (levelDetail.education_institute.includes(\n                    this.props.schoolLevels.selectedEducationCategory!\n                      .education_institute_id\n                  ) ||\n                    levelDetail.education_institute.length <= 0)\n                ) {\n                  result && result.push(this.props.courses![key]);\n                }\n              });\n            } else {\n              result && result.push(this.props.courses![key]);\n            }\n          }\n        }\n      }\n      // RETURN DEFAULT VALUES ====================\n      else {\n        search_all = false;\n      }\n    }\n    return !search_all ? this.props.courses : result;\n  };\n\n  updateExamToPrint = () => {\n    // EXAM PREPARATION ######################\n    if (this.state.reportTitle === reportTitleType.EXAM_PREPARATION) {\n      if (\n        loadAllExams(this.props.examsList, this.state.selected_period) &&\n        this.getCourses() &&\n        this.props.periods.allSessionPlans\n      ) {\n        let data: examPreparationStateInterface[] = FC_reportExamList(\n          this.getCourses()!,\n          loadAllExams(this.props.examsList, this.state.selected_period)!\n        );\n        let arrayNew: ExamPreparationToPrintInterface[] = [];\n        let n: number = 1;\n        for (const key in data) {\n          if (Object.prototype.hasOwnProperty.call(data, key)) {\n            let school_level: string = \"\";\n            if (data[key].school_levels.length) {\n              data[key].school_levels.forEach((element, index) => {\n                let findLevel = this.getLevelbyId(element);\n                if (index === 0) {\n                  school_level = findLevel ? findLevel.school_level_name : \"\";\n                } else {\n                  school_level += findLevel\n                    ? \", \" + findLevel.school_level_name\n                    : \"\";\n                }\n              });\n            } else {\n              school_level = \"Any level\";\n            }\n            let dataArray: ExamPreparationToPrintInterface = {\n              course_id: n,\n              course_name: data[key].course_name,\n              course_code: data[key].course_code,\n              description: data[key].description,\n              school_levels: data[key].school_levels.length\n                ? school_level\n                : \"Any\",\n              exam_period: data[key].exam\n                ? getPeriodById(\n                    this.props.periods.allSessionPlans,\n                    data[key].exam!.period\n                  )\n                  ? getPeriodById(\n                      this.props.periods.allSessionPlans,\n                      data[key].exam!.period\n                    )!.session_plan_name\n                  : \"-\"\n                : \"-\",\n              exam_date: data[key].exam ? DATE(data[key].exam!.exam_date) : \"-\",\n              exam_time: data[key].exam ? data[key].exam!.start_time : \"-\",\n              exam_duration: data[key].exam\n                ? data[key].exam!.duration.toString()\n                : \"-\",\n              preparation_status: data[key].exam ? \"Prepared\" : \"Not prepared\",\n            };\n\n            for (const key in this.state.examPreparationReportContent) {\n              if (\n                Object.prototype.hasOwnProperty.call(\n                  this.state.examPreparationReportContent,\n                  key\n                )\n              ) {\n                if (!this.state.examPreparationReportContent[key].status) {\n                  delete dataArray[\n                    this.state.examPreparationReportContent[key].key\n                  ];\n                }\n              }\n            }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n        this.setExamsToPrint(arrayNew);\n        arrayNew = [];\n        n = 1;\n        // props.applicationsToPrint=;\n      }\n    }\n    // EXAM PERFORMANCE ######################\n    if (this.state.reportTitle === reportTitleType.EXAM_PERFORMANCE) {\n      if (\n        loadAllExams(this.props.examsList, this.state.selected_period) &&\n        this.getCourses() &&\n        this.props.adminExamReport.ExamPerformance &&\n        this.props.periods.allSessionPlans\n      ) {\n        let data: examPerformanceStateInterface[] =\n          FC_reportExamPerformanceData(\n            this.getCourses()!,\n            loadAllExams(this.props.examsList, this.state.selected_period)!,\n            this.props.adminExamReport.ExamPerformance\n          );\n        let arrayNew: ExamPerformanceToPrintInterface[] = [];\n        let n: number = 1;\n        for (const key in data) {\n          if (Object.prototype.hasOwnProperty.call(data, key)) {\n            let school_level: string = \"\";\n            if (data[key].school_levels.length) {\n              data[key].school_levels.forEach((element, index) => {\n                let findLevel = this.getLevelbyId(element);\n                if (index === 0) {\n                  school_level = findLevel ? findLevel.school_level_name : \"\";\n                } else {\n                  school_level += findLevel\n                    ? \", \" + findLevel.school_level_name\n                    : \"\";\n                }\n              });\n            } else {\n              school_level = \"Any level\";\n            }\n            let dataArray: ExamPerformanceToPrintInterface = {\n              course_id: n,\n              course_name: data[key].course_name,\n              course_code: data[key].course_code,\n              description: data[key].description,\n              school_levels: data[key].school_levels.length\n                ? school_level\n                : \"Any\",\n              exam_period: data[key].exam\n                ? getPeriodById(\n                    this.props.periods.allSessionPlans,\n                    data[key].exam!.period\n                  )\n                  ? getPeriodById(\n                      this.props.periods.allSessionPlans,\n                      data[key].exam!.period\n                    )!.session_plan_name\n                  : \"-\"\n                : \"-\",\n              exam_date: data[key].exam ? DATE(data[key].exam!.exam_date) : \"-\",\n              exam_time: data[key].exam ? data[key].exam!.start_time : \"-\",\n              exam_duration: data[key].exam\n                ? data[key].exam!.duration.toString()\n                : \"-\",\n              exam_performance: Number(data[key].exam_performance.toFixed(1)),\n            };\n\n            for (const key in this.state.examPerformanceReportContent) {\n              if (\n                Object.prototype.hasOwnProperty.call(\n                  this.state.examPerformanceReportContent,\n                  key\n                )\n              ) {\n                if (!this.state.examPerformanceReportContent[key].status) {\n                  delete dataArray[\n                    this.state.examPerformanceReportContent[key].key\n                  ];\n                }\n              }\n            }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n        this.setExamPerformanceToPrint(arrayNew);\n        arrayNew = [];\n        n = 1;\n        // props.applicationsToPrint=;\n      }\n    }\n    // TOP 30 EXAM PERFORMANCE ######################\n    if (this.state.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE) {\n      if (\n        loadAllExams(this.props.examsList, this.state.selected_period) &&\n        this.getCourses() &&\n        this.props.adminExamReport.DoneExam &&\n        this.props.adminExamReport.CandidatesExamPerformance &&\n        this.props.adminExamReport.reportDistrictId &&\n        this.props.periods.allSessionPlans\n      ) {\n        let data = FC_ExamPerformancePerDistrictPropsData(\n          this.getCourses()!,\n          loadAllExams(this.props.examsList, this.state.selected_period)!,\n          this.props.adminExamReport.DoneExam,\n          this.props.adminExamReport.CandidatesExamPerformance,\n          this.props.adminExamReport.reportDistrictId.district_id\n        ).slice(0, 30);\n        let arrayNew: ExamPerformanceToPrintInterface[] = [];\n        let n: number = 1;\n        for (const key in data) {\n          if (Object.prototype.hasOwnProperty.call(data, key)) {\n            let school_level: string = \"\";\n            if (data[key].school_levels.length) {\n              data[key].school_levels.forEach((element, index) => {\n                let findLevel = this.getLevelbyId(element);\n                if (index === 0) {\n                  school_level = findLevel ? findLevel.school_level_name : \"\";\n                } else {\n                  school_level += findLevel\n                    ? \", \" + findLevel.school_level_name\n                    : \"\";\n                }\n              });\n            } else {\n              school_level = \"Any level\";\n            }\n            let dataArray: ExamPerformanceToPrintInterface = {\n              course_id: n,\n              course_name: data[key].course_name,\n              course_code: data[key].course_code,\n              description: data[key].description,\n              school_levels: data[key].school_levels.length\n                ? school_level\n                : \"Any\",\n              exam_period: data[key].exam\n                ? getPeriodById(\n                    this.props.periods.allSessionPlans,\n                    data[key].exam!.period\n                  )\n                  ? getPeriodById(\n                      this.props.periods.allSessionPlans,\n                      data[key].exam!.period\n                    )!.session_plan_name\n                  : \"-\"\n                : \"-\",\n              exam_date: data[key].exam ? DATE(data[key].exam!.exam_date) : \"-\",\n              exam_time: data[key].exam ? data[key].exam!.start_time : \"-\",\n              exam_duration: data[key].exam\n                ? data[key].exam!.duration.toString()\n                : \"-\",\n              exam_performance: 0,\n            };\n\n            for (const key in this.state.exam30PerformanceReportContent) {\n              if (\n                Object.prototype.hasOwnProperty.call(\n                  this.state.exam30PerformanceReportContent,\n                  key\n                )\n              ) {\n                if (!this.state.exam30PerformanceReportContent[key].status) {\n                  delete dataArray[\n                    this.state.exam30PerformanceReportContent[key].key\n                  ];\n                }\n              }\n            }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n        this.setExam30PerformanceToPrint(arrayNew);\n        arrayNew = [];\n        n = 1;\n      }\n    }\n    // EXAMINATION PROGRESS ######################\n    if (this.state.reportTitle === reportTitleType.EXAMINATION_PROGRESS) {\n      if (\n        loadAllExams(this.props.examsList, this.state.selected_period) &&\n        this.getCourses() &&\n        this.props.adminExamReport.DoneExam &&\n        this.props.periods.allSessionPlans\n      ) {\n        let data: examProgressStateInterface[] = FC_reportDoneExamList(\n          this.getCourses()!,\n          loadAllExams(this.props.examsList, this.state.selected_period)!,\n          this.props.adminExamReport.DoneExam\n        );\n        let arrayNew: ExaminationProgressToPrintInterface[] = [];\n        let n: number = 1;\n        for (const key in data) {\n          if (Object.prototype.hasOwnProperty.call(data, key)) {\n            let school_level: string = \"\";\n            if (data[key].school_levels.length) {\n              data[key].school_levels.forEach((element, index) => {\n                let findLevel = this.getLevelbyId(element);\n                if (index === 0) {\n                  school_level = findLevel ? findLevel.school_level_name : \"\";\n                } else {\n                  school_level += findLevel\n                    ? \", \" + findLevel.school_level_name\n                    : \"\";\n                }\n              });\n            } else {\n              school_level = \"Any level\";\n            }\n            let dataArray: ExaminationProgressToPrintInterface = {\n              course_id: n,\n              course_name: data[key].course_name,\n              course_code: data[key].course_code,\n              description: data[key].description,\n              school_levels: data[key].school_levels.length\n                ? school_level\n                : \"Any\",\n              exam_period: data[key].exam\n                ? getPeriodById(\n                    this.props.periods.allSessionPlans,\n                    data[key].exam!.period\n                  )\n                  ? getPeriodById(\n                      this.props.periods.allSessionPlans,\n                      data[key].exam!.period\n                    )!.session_plan_name\n                  : \"-\"\n                : \"-\",\n              exam_date: data[key].exam ? DATE(data[key].exam!.exam_date) : \"-\",\n              exam_time: data[key].exam ? data[key].exam!.start_time : \"-\",\n              exam_duration: data[key].exam\n                ? data[key].exam!.duration.toString()\n                : \"-\",\n              exam_status:\n                data[key].preparation_status === \"Done\"\n                  ? \"Completed\"\n                  : data[key].preparation_status,\n            };\n\n            for (const key in this.state.examinationProgressReportContent) {\n              if (\n                Object.prototype.hasOwnProperty.call(\n                  this.state.examinationProgressReportContent,\n                  key\n                )\n              ) {\n                if (!this.state.examinationProgressReportContent[key].status) {\n                  delete dataArray[\n                    this.state.examinationProgressReportContent[key].key\n                  ];\n                }\n              }\n            }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n        this.setExaminationProgressToPrint(arrayNew);\n        arrayNew = [];\n        n = 1;\n        // props.applicationsToPrint=;\n      }\n    }\n    // CANDIDATE EXAM PERFORMANCE ######################\n    if (this.state.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE) {\n      if (\n        this.getCourses() &&\n        this.props.adminExamReport.CandidatesExamPerformance &&\n        this.props.periods.allSessionPlans\n      ) {\n        let data: candidatePerfomranceStateInterface[] =\n          FC_reportCandidatePerformanceData(\n            this.getCourses()!,\n            this.props.adminExamReport.CandidatesExamPerformance,\n            this.props.adminExamReport.reportCourseId\n              ? this.props.adminExamReport.reportCourseId.course_id\n              : \"all\"\n          );\n        let arrayNew: CandidateExamPerformanceToPrintInterface[] = [];\n        let n: number = 1;\n        for (const key in data) {\n          if (Object.prototype.hasOwnProperty.call(data, key)) {\n            let school_level: string = \"\";\n            if (data[key].school_levels.length) {\n              data[key].school_levels.forEach((element, index) => {\n                let findLevel = this.getLevelbyId(element);\n                if (index === 0) {\n                  school_level = findLevel ? findLevel.school_level_name : \"\";\n                } else {\n                  school_level += findLevel\n                    ? \", \" + findLevel.school_level_name\n                    : \"\";\n                }\n              });\n            } else {\n              school_level = \"Any level\";\n            }\n            let dataArray: CandidateExamPerformanceToPrintInterface = {\n              applicant_id: n,\n              course_name: data[key].course_name,\n              course_code: data[key].course_code,\n              description: data[key].description,\n              school_levels: data[key].school_levels.length\n                ? school_level\n                : \"Any\",\n              exam_period: getPeriodById(\n                this.props.periods.allSessionPlans,\n                data[key].exam.period\n              )\n                ? getPeriodById(\n                    this.props.periods.allSessionPlans,\n                    data[key].exam.period\n                  )!.session_plan_name\n                : \"-\",\n              exam_date: DATE(data[key].exam.exam_date),\n              exam_start_time: timestampToDate(\n                Number(data[key].exam.start_time)\n              ).timeAMPM,\n              exam_end_time: timestampToDate(Number(data[key].exam.end_time))\n                .timeAMPM,\n              performance_status: capitalizeFirstLetter(\n                displayStatus(data[key].exam_stastus)\n              ),\n              applicant_name: capitalizeFirstLetter(data[key].user_name),\n              national_id: data[key].national_id,\n              email: data[key].user_email,\n              phone: data[key].user_phone,\n              marks:\n                data[key].exam_stastus !== ReportUserExamStatus.Editing\n                  ? Number(data[key].user_total_marks.toFixed(1)) + \"%\"\n                  : \"-\",\n            };\n\n            for (const key in this.state\n              .candidateExamPerformanceReportContent) {\n              if (\n                Object.prototype.hasOwnProperty.call(\n                  this.state.candidateExamPerformanceReportContent,\n                  key\n                )\n              ) {\n                if (\n                  !this.state.candidateExamPerformanceReportContent[key].status\n                ) {\n                  delete dataArray[\n                    this.state.candidateExamPerformanceReportContent[key].key\n                  ];\n                }\n              }\n            }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n        this.setCandidateExamPerformanceToPrint(arrayNew);\n        arrayNew = [];\n        n = 1;\n        // props.applicationsToPrint=;\n      }\n    }\n    // 30 CANDIDATE EXAM PERFORMANCE ######################\n    if (\n      this.state.reportTitle === reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE\n    ) {\n      if (\n        this.getCourses() &&\n        this.props.adminExamReport.CandidatesExamPerformance &&\n        this.props.periods.allSessionPlans\n      ) {\n        let data: candidatePerfomranceStateInterface[] =\n          FC_CandiadtePerformancePerDistrictFilter(\n            FC_reportCandidatePerformanceData(\n              this.getCourses()!,\n              this.props.adminExamReport.CandidatesExamPerformance,\n              this.props.adminExamReport.reportCourseId\n                ? this.props.adminExamReport.reportCourseId.course_id\n                : \"all\"\n            ),\n            this.props.adminExamReport.reportDistrictId\n              ? this.props.adminExamReport.reportDistrictId.district_id\n              : null,\n            this.props.adminExamReport.reportCourseId\n              ? this.props.adminExamReport.reportCourseId.course_id\n              : null,\n            this.state.filterApplicantPerformance\n          ).slice(0, 30);\n        let arrayNew: CandidateExamPerformanceToPrintInterface[] = [];\n        let n: number = 1;\n        for (const key in data) {\n          if (Object.prototype.hasOwnProperty.call(data, key)) {\n            let school_level: string = \"\";\n            if (data[key].school_levels.length) {\n              data[key].school_levels.forEach((element, index) => {\n                let findLevel = this.getLevelbyId(element);\n                if (index === 0) {\n                  school_level = findLevel ? findLevel.school_level_name : \"\";\n                } else {\n                  school_level += findLevel\n                    ? \", \" + findLevel.school_level_name\n                    : \"\";\n                }\n              });\n            } else {\n              school_level = \"Any level\";\n            }\n            let dataArray: CandidateExamPerformanceToPrintInterface = {\n              applicant_id: n,\n              course_name: data[key].course_name,\n              course_code: data[key].course_code,\n              description: data[key].description,\n              school_levels: data[key].school_levels.length\n                ? school_level\n                : \"Any\",\n              exam_period: getPeriodById(\n                this.props.periods.allSessionPlans,\n                data[key].exam.period\n              )\n                ? getPeriodById(\n                    this.props.periods.allSessionPlans,\n                    data[key].exam.period\n                  )!.session_plan_name\n                : \"-\",\n              exam_date: DATE(data[key].exam.exam_date),\n              exam_start_time: timestampToDate(\n                Number(data[key].exam.start_time)\n              ).timeAMPM,\n              exam_end_time: timestampToDate(Number(data[key].exam.end_time))\n                .timeAMPM,\n              performance_status: capitalizeFirstLetter(\n                displayStatus(data[key].exam_stastus)\n              ),\n              applicant_name: capitalizeFirstLetter(data[key].user_name),\n              national_id: data[key].national_id,\n              email: data[key].user_email,\n              phone: data[key].user_phone,\n              marks:\n                data[key].exam_stastus !== ReportUserExamStatus.Editing\n                  ? Number(data[key].user_total_marks.toFixed(1)) + \"%\"\n                  : \"-\",\n            };\n\n            for (const key in this.state\n              .candidate30ExamPerformanceReportContent) {\n              if (\n                Object.prototype.hasOwnProperty.call(\n                  this.state.candidate30ExamPerformanceReportContent,\n                  key\n                )\n              ) {\n                if (\n                  !this.state.candidate30ExamPerformanceReportContent[key]\n                    .status\n                ) {\n                  delete dataArray[\n                    this.state.candidate30ExamPerformanceReportContent[key].key\n                  ];\n                }\n              }\n            }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n        this.setCandidate30ExamPerformanceToPrint(arrayNew);\n        arrayNew = [];\n        n = 1;\n        // props.applicationsToPrint=;\n      }\n    }\n  };\n\n  addToTitle = (): string => {\n    let result: string = \"\";\n\n    if (\n      this.state.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n      this.props.adminExamReport.reportDistrictId\n    ) {\n      result += ` ${this.props.adminExamReport.reportDistrictId.district_name} district`;\n    } else if (\n      this.state.reportTitle === reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE\n    ) {\n      if (this.props.adminExamReport.reportDistrictId) {\n        result += ` in ${this.props.adminExamReport.reportDistrictId.district_name} district`;\n      }\n      if (this.props.adminExamReport.reportCourseId) {\n        result += ` in exam of ${this.props.adminExamReport.reportCourseId.course_name}(${this.props.adminExamReport.reportCourseId.course_code})`;\n      }\n    } else {\n      result = \"\";\n    }\n    return result;\n  };\n\n  downlaodPDF = async () => {\n    if (!document.querySelectorAll(\"#report_content tbody tr\").length) {\n      this.props.PushPopupAlert({\n        title: `Can't generate Report of empty Data`,\n        theme: PopupAlertTheme.warning,\n      });\n      return false;\n    }\n\n    if (this.state.selected_period) {\n      const table: HTMLElement | null =\n        document.getElementById(\"report_content\");\n      const reportSettings: reportSettingsInterface = {\n        doneBy: this.props.auth.user.fname + \" \" + this.props.auth.user.lname,\n        title: \"Exam Report\",\n        subjectTitle: \"Subject\",\n        subject: `${this.state.reportTitle} ${this.addToTitle()}`,\n        period: this.state.selected_period.session_plan_name,\n        footer: \"Online Teacher Recruitment\",\n        institute: this.props.schoolLevels.selectedEducationCategory\n          ? this.props.schoolLevels.selectedEducationCategory\n              .education_category_title\n          : \"All institute\",\n        orientation:\n          this.state.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE ||\n          this.state.reportTitle ===\n            reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE\n            ? \"l\"\n            : \"p\",\n      };\n      table && (await generatePDF(reportSettings, table, this.setDownloading));\n    }\n  };\n\n  render() {\n    if (this.state.loading || this.props.periods.allSessionPlans === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading data...\n        </div>\n      );\n    }\n\n    if (this.props.periods.allSessionPlans.length === 0) {\n      return <NoSession />;\n    }\n\n    return (\n      <div>\n        <SideNavigation>\n          <div className=\"flex flex-col mb-4\">\n            <span className=\"text-sm text-gray-600 mb-2\">\n              Education categories:\n            </span>\n            {this.props.schoolLevels.education_categories === null ? (\n              <Loading />\n            ) : this.props.schoolLevels.education_categories.length === 0 ? (\n              <span>No result found</span>\n            ) : (\n              this.props.schoolLevels.education_categories.map((item, i) => (\n                <div\n                  onClick={() => {\n                    this.props.setSelectedEducationCategory(item);\n                    this.updateExamToPrint();\n                  }}\n                  key={i + 1}\n                  className={`border rounded px-2 py-2 mb-2 cursor-pointer ${\n                    this.props.schoolLevels.selectedEducationCategory !==\n                      null &&\n                    this.props.schoolLevels.selectedEducationCategory\n                      .education_institute_id === item.education_institute_id\n                      ? \"bg-blue-600 text-white hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                      : \"hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                  } font-bold flex flex-row items-center gap-2`}\n                >\n                  {this.props.schoolLevels.selectedEducationCategory !== null &&\n                  this.props.schoolLevels.selectedEducationCategory\n                    .education_institute_id === item.education_institute_id ? (\n                    <MdRadioButtonChecked />\n                  ) : (\n                    <MdRadioButtonUnchecked />\n                  )}\n                  <span>{item.education_category_title}</span>\n                </div>\n              ))\n            )}\n          </div>\n          <div className=\"\">\n            <div className=\"text-gray-600 text-sm mb-2\">Selected period:</div>\n            <div\n              onClick={() => this.setSelectPeriod(true)}\n              className=\"font-bold bg-blue-50 border border-blue-200 rounded py-2 cursor-pointer text-xs px-2 hover:underline justify-between text-blue-600  mb-4 w-full flex flex-row items-center animate__animated animate__zoomIn\"\n            >\n              {this.state.selected_period !== null\n                ? `${this.state.selected_period.session_plan_name}`\n                : \"Filter by period\"}\n              <FiEdit className=\"text-lg text-blue-600\" />\n            </div>\n          </div>\n          <ExamReportFilters\n            reportTitle={this.state.reportTitle}\n            filterPreparation={this.state.filterPreparation}\n            setFilterPreparation={this.setFilterPreparation}\n            filterExamProgress={this.state.filterExamProgress}\n            setFilterExamProgress={this.setFilterExamProgress}\n            filterApplicantPerformance={this.state.filterApplicantPerformance}\n            setFilterApplicantPerformance={this.setFilterApplicantPerformance}\n          />\n        </SideNavigation>\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* REPORT TITLE CONTROLLERS ============================================ */}\n        <ExamReportTitle\n          downloading={this.state.downloading}\n          dataToPrint={loadAllExams(\n            this.props.examsList,\n            this.state.selected_period\n          )}\n          downlaodPDF={this.downlaodPDF}\n          reportTitle={this.state.reportTitle}\n          setReportTitle={this.setReportTitle}\n          setGenerateReportModal={this.setGenerateReportModal}\n          generateReportModal={this.state.generateReportModal}\n          excelReportTitle={this.state.excelReportTitle}\n          setExcelReportTitle={this.setExcelReportTitle}\n          updateExamToPrint={this.updateExamToPrint}\n          // EXAM PREPARATION ######################\n          examsToPrint={this.state.examsToPrint}\n          examPreparationReportContent={this.state.examPreparationReportContent}\n          setExamPreparationReportContent={this.setExamPreparationReportContent}\n          // EXAM PERFORMANCE ######################\n          examPerformanceToPrint={this.state.examPerformanceToPrint}\n          examPerformanceReportContent={this.state.examPerformanceReportContent}\n          setExamPerformanceReportContent={this.setExamPerformanceReportContent}\n          // TOP 30 EXAM PERFORMANCE ######################\n          exam30PerformanceToPrint={this.state.exam30PerformanceToPrint}\n          exam30PerformanceReportContent={\n            this.state.exam30PerformanceReportContent\n          }\n          setExam30PerformanceReportContent={\n            this.setExam30PerformanceReportContent\n          }\n          // EXAMINATION PROGRESS ######################\n          examinationProgressToPrint={this.state.examinationProgressToPrint}\n          examinationProgressReportContent={\n            this.state.examinationProgressReportContent\n          }\n          setExaminationProgressExamPerformanceReportContent={\n            this.setExaminationProgressExamPerformanceReportContent\n          }\n          // CANDIDATE EXAM PERFORMANCE ######################\n          candidateExamPerformanceToPrint={\n            this.state.candidateExamPerformanceToPrint\n          }\n          candidateExamPerformanceReportContent={\n            this.state.candidateExamPerformanceReportContent\n          }\n          setCandidateExamPerformanceReportContent={\n            this.setCandidateExamPerformanceReportContent\n          }\n          // CANDIDATE EXAM PERFORMANCE ######################\n          candidate30ExamPerformanceToPrint={\n            this.state.candidate30ExamPerformanceToPrint\n          }\n          candidate30ExamPerformanceReportContent={\n            this.state.candidate30ExamPerformanceReportContent\n          }\n          setCandidate30ExamPerformanceReportContent={\n            this.setCandidate30ExamPerformanceReportContent\n          }\n          thisPeriod={\n            this.state.selected_period\n              ? this.state.selected_period.session_plan_id\n              : \"\"\n          }\n        />\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* EXAM LIST CONTROLLERS ============================================ */}\n        {this.state.reportTitle === reportTitleType.EXAM_PREPARATION &&\n          this.props.periods.allSessionPlans && (\n            <ExamList\n              loading={\n                this.state.loadingExams ||\n                this.state.loadingCourses ||\n                this.state.loadingDoneExam\n              }\n              examsListData={loadAllExams(\n                this.props.examsList,\n                this.state.selected_period\n              )}\n              courseListData={this.getCourses()}\n              thisPeriod={this.props.periods.allSessionPlans}\n              filterPreparation={this.state.filterPreparation}\n            />\n          )}\n        {/* EXAM LIST CONTROLLERS ============================================ */}\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* DONE & REMAING EXAM LIST CONTROLLERS ============================================ */}\n        {this.state.reportTitle === reportTitleType.EXAMINATION_PROGRESS &&\n          this.props.periods.allSessionPlans && (\n            <DoneExamList\n              loading={\n                this.state.loadingExams\n                  ? true\n                  : this.state.loadingCourses\n                  ? true\n                  : this.state.loadingDoneExam\n                  ? true\n                  : false\n              }\n              examsListData={loadAllExams(\n                this.props.examsList,\n                this.state.selected_period\n              )}\n              courseListData={this.getCourses()}\n              thisPeriod={this.props.periods.allSessionPlans}\n              doneExamsData={this.props.adminExamReport.DoneExam}\n              filterExamProgress={this.state.filterExamProgress}\n            />\n          )}\n        {/* DONE & REMAING EXAM LIST CONTROLLERS ============================================ */}\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* EXAM PERFORMANCE CONTROLLERS ============================================ */}\n        {this.state.reportTitle === reportTitleType.EXAM_PERFORMANCE &&\n          this.props.periods.allSessionPlans && (\n            <ExamPerformance\n              loading={\n                this.state.loadingExams\n                  ? true\n                  : this.state.loadingCourses\n                  ? true\n                  : this.state.loadingExamPerformance\n                  ? true\n                  : false\n              }\n              examsListData={loadAllExams(\n                this.props.examsList,\n                this.state.selected_period\n              )}\n              courseListData={this.getCourses()}\n              thisPeriod={this.props.periods.allSessionPlans}\n              examsPerformanceData={this.props.adminExamReport.ExamPerformance} // doneExamsData={props.adminExamReport.DoneExam}\n            />\n          )}\n        {/* END EXAM PERFORMANCE CONTROLLERS ============================================ */}\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* EXAM PERFORMANCE PER DISTRICT LIST CONTROLLERS ============================================ */}\n        {this.state.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n        this.props.periods.allSessionPlans &&\n        this.props.adminExamReport.reportDistrictId ? (\n          <ExamPerformancePerDistrict\n            loading={\n              this.state.loadingExams\n                ? true\n                : this.state.loadingCourses\n                ? true\n                : this.state.loadingCandidatesExamPerformance\n                ? true\n                : false\n            }\n            examsListData={loadAllExams(\n              this.props.examsList,\n              this.state.selected_period\n            )}\n            doneExamsData={this.props.adminExamReport.DoneExam}\n            courseListData={this.getCourses()}\n            thisPeriod={this.props.periods.allSessionPlans}\n            candidatePerformanceData={\n              this.props.adminExamReport.CandidatesExamPerformance\n            }\n            thisDistrict={this.props.adminExamReport.reportDistrictId}\n          />\n        ) : (\n          this.state.reportTitle ===\n            reportTitleType.EXAM_DISTRICT_PERFORMANCE && (\n            <NoResult\n              theme={NoResultThemes.Light}\n              value={\"Select district to view data\"}\n              component={\n                <div\n                  onClick={() => this.setDistrictModal(true)}\n                  className=\"btn bg-blue-50 border border-blue-300 text-blue-600 cursor-pointer hover:bg-blue-100 flex flex-row items-center justify-center gap-2 text-sm \"\n                >\n                  <BiFilterAlt className=\"text-xl\" />\n                  Filter by district\n                </div>\n              }\n            />\n          )\n        )}\n        {/* EXAM PERFORMANCE PER DISTRICT LIST CONTROLLERS ============================================  */}\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* APPLICANTS PERFORMANCE EXAM LIST CONTROLLERS ============================================ */}\n        {this.state.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE &&\n          this.props.periods.allSessionPlans && (\n            <CandidatePerformance\n              loading={\n                this.state.loadingExams\n                  ? true\n                  : this.state.loadingCourses\n                  ? true\n                  : this.state.loadingCandidatesExamPerformance\n                  ? true\n                  : false\n              }\n              examsListData={loadAllExams(\n                this.props.examsList,\n                this.state.selected_period\n              )}\n              courseListData={this.getCourses()}\n              thisPeriod={this.props.periods.allSessionPlans}\n              candidatePerformanceData={\n                this.props.adminExamReport.CandidatesExamPerformance\n              }\n              filterApplicantPerformance={this.state.filterApplicantPerformance}\n            />\n          )}\n        {/* APPLICANTS PERFORMANCE EXAM LIST CONTROLLERS ============================================  */}\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* APPLICANTS PERFORMANCE EXAM PER DISTRICT LIST CONTROLLERS ============================================ */}\n        {this.state.reportTitle ===\n          reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE &&\n          this.props.periods.allSessionPlans && (\n            <CandiadtePerformancePerDistrict\n              loading={\n                this.state.loadingExams\n                  ? true\n                  : this.state.loadingCourses\n                  ? true\n                  : this.state.loadingCandidatesExamPerformance\n                  ? true\n                  : false\n              }\n              examsListData={loadAllExams(\n                this.props.examsList,\n                this.state.selected_period\n              )}\n              courseListData={this.getCourses()}\n              thisPeriod={this.props.periods.allSessionPlans}\n              candidatePerformanceData={\n                this.props.adminExamReport.CandidatesExamPerformance\n              }\n              filterApplicantPerformance={this.state.filterApplicantPerformance}\n            />\n          )}\n        {/* APPLICANTS PERFORMANCE EXAM PER DISTRICT LIST CONTROLLERS ============================================  */}\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* CHANGE DISTRICT FILTER MODAL CONTROLLERS ============================================ */}\n        {this.state.districtModal && (\n          <ExamReportModals\n            modalFor={ModalForTypes.choose_district}\n            modalState={this.state.districtModal}\n            changeModalState={this.setDistrictModal}\n            districtId={\n              this.props.adminExamReport.reportDistrictId\n                ? this.props.adminExamReport.reportDistrictId.district_id\n                : \"all\"\n            }\n            reportTitle={this.state.reportTitle}\n          />\n        )}\n        {/* END CHANGE DISTRICT FILTER MODAL CONTROLLERS ============================================ */}\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* MODAL CONTROLLERS ============================================ */}\n        <ExamReportModals\n          modalState={this.state.selectPeriod}\n          changeModalState={this.setSelectPeriod}\n          applicationPeriods={this.props.periods.allSessionPlans}\n          selected_period={this.state.selected_period}\n          setSelectedPeriod={this.setSelectedPeriod}\n          onPeriodChange={this.onPeriodChange}\n          modalFor={ModalForTypes.period}\n        />\n        {/* END MODAL CONTROLLERS ============================================ */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  sessionPlan,\n  schoolLevels,\n  course,\n  prepareExam,\n  adminExamReport,\n}: StoreState): {\n  auth: Auth;\n  periods: SessionPlanReducerInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n  courses: course[] | null;\n  examsList: ExamItemResponse[] | null;\n  adminExamReport: ExamReportReducerType;\n} => {\n  return {\n    auth,\n    periods: sessionPlan,\n    schoolLevels,\n    courses: course.courses,\n    examsList: prepareExam.examsList,\n    adminExamReport,\n  };\n};\n\nexport const ExamReport = connect(mapStateToProps, {\n  setSelectedPeriod,\n  loadCourses,\n  loadExamsList,\n  GetAllSessionPlans,\n  loadEducationCategories,\n  loadDoneExam,\n  loadSchoolLevels,\n  loadPerfomranceExam,\n  loadCandidatesExamPerformance,\n  setSelectedEducationCategory,\n  PushPopupAlert,\n})(_ExamReport);\n","import React, { Fragment, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport {\n  course,\n  CandidatesFailedSucceeded,\n  ReportUserExamStatus,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport { StoreState } from \"../../../reducers\";\nimport { ExamReportReducerType } from \"../../../reducers/exam_report\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { DATE, timestampToDate } from \"../../../utils/functions\";\nimport {\n  candidatePerfomranceStateInterface,\n  controlRowsByStatus,\n  FC_reportCandidatePerformanceData,\n  searchCandidatePerformanceData,\n} from \"./CandidatePerformance\";\nimport { displayStatus } from \"./DoneExamList\";\nimport { getPeriodById } from \"./ExamReport\";\n\nexport const FC_CandiadtePerformancePerDistrictFilter = (\n  dataList: candidatePerfomranceStateInterface[],\n  district_id: string | null = null,\n  course_id: string | null = null,\n  thisValue: ReportUserExamStatus | \"all\" = \"all\"\n): candidatePerfomranceStateInterface[] => {\n  let result: candidatePerfomranceStateInterface[] = [];\n  if (thisValue === \"all\") {\n    result = dataList;\n  } else {\n    result = dataList.filter((item) => item.exam_stastus === thisValue);\n  }\n\n  if (district_id) {\n    result = result.filter(\n      (item) =>\n        item.exam.exam_location &&\n        item.exam.exam_location.district_id === district_id\n    );\n  }\n  if (course_id) {\n    result = result.filter((item) => item.course_id === course_id);\n  }\n\n  // SORTING ARRAY FROM MAX TO MIN ==========================\n  let swap: candidatePerfomranceStateInterface;\n  for (let i = 0; i < result.length; i++) {\n    for (let j = i; j < result.length; j++) {\n      if (result[j].user_total_marks > result[i].user_total_marks) {\n        swap = result[j];\n        result[j] = result[i];\n        result[i] = swap;\n      }\n    }\n  }\n  return result;\n};\n\ntype CandiadtePerformancePerDistrictProps = {\n  loading: boolean;\n  examsListData: ExamItemResponse[] | null;\n  courseListData: course[] | null;\n  thisPeriod: SessionPlanInterface[];\n  candidatePerformanceData: CandidatesFailedSucceeded[] | null;\n\n  // redux props ============\n  adminExamReport: ExamReportReducerType;\n  // FOR APPLICANT PERFORMANCE PROPS\n  filterApplicantPerformance: ReportUserExamStatus | \"all\";\n};\n\nconst CandiadtePerformancePerDistrict: React.FC<\n  CandiadtePerformancePerDistrictProps\n> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n\n  return (\n    <Fragment>\n      <div className=\"bg-white my-4\">\n        <div className=\"w-full px-2 py-2\">\n          <input\n            onChange={(e) => setSearchInput(e.target.value)}\n            type=\"text\"\n            value={searchInput}\n            placeholder=\"Search...\"\n            className=\"w-full bg-gray-100 py-2 px-3 rounded\"\n            disabled={\n              props.courseListData &&\n              props.candidatePerformanceData &&\n              FC_CandiadtePerformancePerDistrictFilter(\n                FC_reportCandidatePerformanceData(\n                  props.courseListData,\n                  props.candidatePerformanceData,\n                  props.adminExamReport.reportCourseId\n                    ? props.adminExamReport.reportCourseId.course_id\n                    : \"all\"\n                ),\n                props.adminExamReport.reportDistrictId\n                  ? props.adminExamReport.reportDistrictId.district_id\n                  : null,\n                props.adminExamReport.reportCourseId\n                  ? props.adminExamReport.reportCourseId.course_id\n                  : null,\n                props.filterApplicantPerformance\n              ).length <= 0\n                ? true\n                : false\n            }\n          />\n        </div>\n        <div className=\"w-full overflow-x-auto\">\n          <table className=\"w-full shadow\" id=\"report_content\">\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n              <tr>\n                <td className=\"px-2 py-2\">#</td>\n                <td className=\"px-2 py-2\">Applicants</td>\n                <td className=\"px-2 py-2\">National ID</td>\n                <td className=\"px-2 py-2\">Email</td>\n                <td className=\"px-2 py-2\">Phone</td>\n                <td className=\"px-2 py-2\">\n                  <div className=\"flex items-center gap-1\">Exam</div>\n                </td>\n                <td className=\"px-2 py-2\">Exam period</td>\n                <td className=\"px-2 py-2\">Exam date</td>\n                <td className=\"px-2 py-2\">Exam start time</td>\n                <td className=\"px-2 py-2\">Exam end time</td>\n                <td className=\"px-2 py-2\">\n                  <div className=\"flex items-center gap-1\">Marks</div>\n                </td>\n                <td className=\"px-2 py-2\">Status</td>\n              </tr>\n            </thead>\n            <tbody>\n              {props.courseListData === null || props.loading ? (\n                <tr>\n                  <td colSpan={12} className=\"px-2 py-2\">\n                    <Loading />\n                  </td>\n                </tr>\n              ) : props.candidatePerformanceData &&\n                FC_CandiadtePerformancePerDistrictFilter(\n                  FC_reportCandidatePerformanceData(\n                    props.courseListData,\n                    props.candidatePerformanceData,\n                    props.adminExamReport.reportCourseId\n                      ? props.adminExamReport.reportCourseId.course_id\n                      : \"all\"\n                  ),\n                  props.adminExamReport.reportDistrictId\n                    ? props.adminExamReport.reportDistrictId.district_id\n                    : null,\n                  props.adminExamReport.reportCourseId\n                    ? props.adminExamReport.reportCourseId.course_id\n                    : null,\n                  props.filterApplicantPerformance\n                ).length <= 0 ? (\n                <tr>\n                  <td colSpan={12} className=\"px-2 py-2 text-center\">\n                    No applicant list available!\n                  </td>\n                </tr>\n              ) : (\n                props.candidatePerformanceData &&\n                searchCandidatePerformanceData(\n                  FC_CandiadtePerformancePerDistrictFilter(\n                    FC_reportCandidatePerformanceData(\n                      props.courseListData,\n                      props.candidatePerformanceData,\n                      props.adminExamReport.reportCourseId\n                        ? props.adminExamReport.reportCourseId.course_id\n                        : \"all\"\n                    ),\n                    props.adminExamReport.reportDistrictId\n                      ? props.adminExamReport.reportDistrictId.district_id\n                      : null,\n                    props.adminExamReport.reportCourseId\n                      ? props.adminExamReport.reportCourseId.course_id\n                      : null,\n                    props.filterApplicantPerformance\n                  ).slice(0, 30),\n                  searchInput\n                ).map((item, i) => (\n                  <tr\n                    key={i + 1}\n                    className={`${controlRowsByStatus(\n                      item.exam_stastus\n                    )} text-gray-600 hover:bg-blue-100 hover:text-blue-700 text-sm`}\n                  >\n                    <td className=\"px-2 py-2\">{i + 1}</td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(item.user_name)}\n                    </td>\n                    <td className=\"px-2 py-2\">{item.national_id}</td>\n                    <td className=\"px-2 py-2\">{item.user_email}</td>\n                    <td className=\"px-2 py-2\">{item.user_phone}</td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(item.course_name)} (\n                      <span className=\"font-semibold\">{item.course_code}</span>)\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam\n                        ? getPeriodById(props.thisPeriod, item.exam.period)\n                          ? getPeriodById(props.thisPeriod, item.exam.period)!\n                              .session_plan_name\n                          : \"-\"\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam.exam_date ? DATE(item.exam.exam_date) : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam.start_time\n                        ? timestampToDate(item.exam.start_time).timeAMPM\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam.end_time\n                        ? timestampToDate(item.exam.end_time).timeAMPM\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam_stastus !== ReportUserExamStatus.Editing\n                        ? Number(item.user_total_marks.toFixed(1)) + \"%\"\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(displayStatus(item.exam_stastus))}\n                    </td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  adminExamReport,\n}: StoreState): {\n  adminExamReport: ExamReportReducerType;\n} => {\n  return {\n    adminExamReport,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {})(CandiadtePerformancePerDistrict)\n);\n","import React, { Fragment, useState } from \"react\";\nimport { connect } from \"react-redux\";\n// import { BiSort } from \"react-icons/bi\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  course,\n  CandidatesFailedSucceeded,\n  ExamDoneAndRemainingByPeriodInterface,\n  ReportUserExamStatus,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport { StoreState } from \"../../../reducers\";\nimport { ExamReportReducerType } from \"../../../reducers/exam_report\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { DATE } from \"../../../utils/functions\";\nimport search from \"../../../utils/search\";\nimport { getPeriodById } from \"./ExamReport\";\n\nexport interface examPerformanceStateInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  applicants: number;\n  course_id: string;\n  pass_applicant: number;\n  failed_applicant: number;\n  exam: ExamItemResponse;\n  user_total_marks: number;\n}\n\nexport const FC_ExamPerformancePerDistrictPropsData = (\n  allCourses: course[],\n  allExams: ExamItemResponse[],\n  examsData: ExamDoneAndRemainingByPeriodInterface[],\n  candidatePerformanceData: CandidatesFailedSucceeded[],\n  district_id: string\n): examPerformanceStateInterface[] => {\n  let pass: number = 0,\n    failed: number = 0,\n    result: examPerformanceStateInterface[] = [],\n    ids: string[] = [],\n    exam_ids: string[] = [],\n    doneExamsData: ExamDoneAndRemainingByPeriodInterface[] = examsData.filter(\n      (item) => item.exam_status.toLocaleLowerCase() === \"done\"\n    );\n\n  for (const key in doneExamsData) {\n    if (Object.prototype.hasOwnProperty.call(doneExamsData, key)) {\n      if (exam_ids.includes(doneExamsData[key].id)) continue;\n      exam_ids.push(doneExamsData[key].id);\n      let courser = allCourses.find(\n        (item) => item.course_id === doneExamsData[key].course\n      );\n      let _marks: number = 0;\n\n      if (courser) {\n        // CALCURATING SUM OF ALL CANDIDATES MARKS BY EXAM ID=================================\n        let candidatesByExam: CandidatesFailedSucceeded[] =\n          candidatePerformanceData.filter(\n            (item) =>\n              item.course === doneExamsData[key].course &&\n              item.exam_location &&\n              item.exam_location.district_id === district_id\n          );\n        for (const _key in candidatesByExam) {\n          if (Object.prototype.hasOwnProperty.call(candidatesByExam, _key)) {\n            if (ids.includes(candidatesByExam[_key].user.user_id)) continue;\n            ids.push(candidatesByExam[_key].user.user_id);\n            _marks += candidatesByExam[_key].total_marks;\n            if (\n              candidatesByExam[_key].user_status !==\n                ReportUserExamStatus.Editing &&\n              candidatesByExam[_key].total_marks >= 50\n            ) {\n              pass += 1;\n            } else if (\n              candidatesByExam[_key].user_status !==\n              ReportUserExamStatus.Editing\n            ) {\n              failed += 1;\n            }\n          }\n        }\n        let exam = allExams.find(\n          (item) =>\n            item.course === doneExamsData[key].course &&\n            item.period === doneExamsData[key].period\n        );\n        if (exam) {\n          result.push({\n            course_name: courser.course_name,\n            course_code: courser.course_code,\n            description: courser.description,\n            school_levels: courser.school_levels,\n            course_id: courser.course_id,\n            exam: exam,\n            pass_applicant: pass,\n            failed_applicant: failed,\n            applicants: ids.length,\n            user_total_marks: _marks ? _marks / ids.length : _marks, //candidatesByExam.length\n          });\n        }\n        _marks = 0;\n        ids = [];\n      }\n    }\n    exam_ids = [];\n  }\n\n  // SORTING ARRAY FROM MAX TO MIN ==========================\n  let swap: examPerformanceStateInterface;\n  for (let i = 0; i < result.length; i++) {\n    for (let j = i; j < result.length; j++) {\n      if (result[j].user_total_marks > result[i].user_total_marks) {\n        swap = result[j];\n        result[j] = result[i];\n        result[i] = swap;\n      }\n    }\n  }\n  return result;\n};\n\ntype ExamPerformancePerDistrictProps = {\n  loading: boolean;\n  examsListData: ExamItemResponse[] | null;\n  doneExamsData: ExamDoneAndRemainingByPeriodInterface[] | null;\n  courseListData: course[] | null;\n  thisPeriod: SessionPlanInterface[];\n  candidatePerformanceData: CandidatesFailedSucceeded[] | null;\n  thisDistrict: { district_id: string; district_name: string };\n  adminExamReport: ExamReportReducerType;\n};\n\nconst ExamPerformancePerDistrict: React.FC<ExamPerformancePerDistrictProps> = (\n  props\n) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n\n  return (\n    <Fragment>\n      <div className=\"bg-white my-4 max-w-full overflow-x-auto\">\n        <div className=\"w-full px-2 py-2\">\n          <input\n            onChange={(e) => setSearchInput(e.target.value)}\n            type=\"text\"\n            value={searchInput}\n            placeholder=\"Search...\"\n            className=\"w-full bg-gray-100 py-2 px-3 rounded\"\n            disabled={\n              props.courseListData &&\n              props.examsListData &&\n              props.doneExamsData &&\n              props.candidatePerformanceData &&\n              props.adminExamReport.reportDistrictId &&\n              FC_ExamPerformancePerDistrictPropsData(\n                props.courseListData,\n                props.examsListData,\n                props.doneExamsData,\n                props.candidatePerformanceData,\n                props.adminExamReport.reportDistrictId.district_id\n              ).slice(0, 30).length <= 0\n                ? true\n                : false\n            }\n          />\n        </div>\n        <table className=\"w-full shadow\" id=\"report_content\">\n          <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n            <tr>\n              <td className=\"px-2 py-2\">#</td>\n              <td\n                className=\"px-2 py-2 cursor-pointer\"\n                // onClick={() => setSort(\"course_name\")}\n              >\n                <div className=\"flex items-center gap-1\">\n                  Course\n                  {/* <BiSort /> */}\n                </div>\n              </td>\n              <td className=\"px-2 py-2\">Exam date</td>\n              <td className=\"px-2 py-2\">Exam time</td>\n              <td className=\"px-2 py-2\">Exam duration</td>\n              <td className=\"px-2 py-2\">Exam Period</td>\n              <td className=\"px-2 py-2\">Pass Applicants</td>\n              <td className=\"px-2 py-2\">Failed Applicants</td>\n              <td\n                className=\"px-2 py-2 cursor-pointer\"\n                // onClick={() => setSort(\"user_total_marks\")}\n              >\n                <div className=\"flex items-center gap-1\">\n                  Percentage\n                  {/* <BiSort /> */}\n                </div>\n              </td>\n            </tr>\n          </thead>\n          <tbody>\n            {props.courseListData === null || props.loading ? (\n              <tr>\n                <td colSpan={7} className=\"px-2 py-2\">\n                  <Loading />\n                </td>\n              </tr>\n            ) : props.examsListData &&\n              props.doneExamsData &&\n              props.candidatePerformanceData &&\n              props.adminExamReport.reportDistrictId &&\n              FC_ExamPerformancePerDistrictPropsData(\n                props.courseListData,\n                props.examsListData,\n                props.doneExamsData,\n                props.candidatePerformanceData,\n                props.adminExamReport.reportDistrictId.district_id\n              ).length <= 0 ? (\n              <tr>\n                <td colSpan={7} className=\"px-2 py-2 text-center\">\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"No Exam list available!\"}\n                  />\n                </td>\n              </tr>\n            ) : (\n              props.examsListData &&\n              props.doneExamsData &&\n              props.candidatePerformanceData &&\n              props.adminExamReport.reportDistrictId &&\n              search(\n                FC_ExamPerformancePerDistrictPropsData(\n                  props.courseListData,\n                  props.examsListData,\n                  props.doneExamsData,\n                  props.candidatePerformanceData,\n                  props.adminExamReport.reportDistrictId.district_id\n                ).slice(0, 30),\n                searchInput\n              ).map((item: examPerformanceStateInterface, i) => (\n                <tr\n                  key={i + 1}\n                  className={`bg-white text-gray-600 hover:bg-blue-100 hover:text-blue-700 border-b border-gray-300 hover:border-blue-500 text-sm`}\n                >\n                  <td className=\"px-2 py-2\">{i + 1}</td>\n                  <td className=\"px-2 py-2\">\n                    {capitalizeFirstLetter(item.course_name)} (\n                    <span className=\"font-semibold\">{item.course_code}</span>)\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam ? DATE(item.exam.exam_date) : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam ? item.exam.start_time : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam ? item.exam!.duration + \" min\" : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam\n                      ? getPeriodById(props.thisPeriod, item.exam.period)\n                        ? getPeriodById(props.thisPeriod, item.exam.period)!\n                            .session_plan_name\n                        : \"-\"\n                      : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.pass_applicant !== undefined\n                      ? item.pass_applicant\n                      : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.failed_applicant !== undefined\n                      ? item.failed_applicant\n                      : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {Number(item.user_total_marks.toFixed(1)) + \"%\"}\n                  </td>\n                </tr>\n              ))\n            )}\n          </tbody>\n        </table>\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  adminExamReport,\n}: StoreState): {\n  adminExamReport: ExamReportReducerType;\n} => {\n  return {\n    adminExamReport,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {})(ExamPerformancePerDistrict)\n);\n","import React, { Fragment } from \"react\";\nimport { MainItem } from \"../../../components/Navigation/SideNavigation\";\nimport { ReportUserExamStatus } from \"../../../interfaces\";\nimport { displayStatus } from \"./DoneExamList\";\nimport { reportTitleType } from \"./ExamReport\";\n\ntype ExamReportFiltersProps = {\n  reportTitle: reportTitleType;\n\n  // FOR EXAM PREPARATION PROPS =========================================\n  filterPreparation: \"prepared\" | \"not prepared\" | \"all\";\n  setFilterPreparation: (value: \"prepared\" | \"not prepared\" | \"all\") => void;\n\n  // FOR EXAMINATION PROGRESS PROPS ========================================\n  filterExamProgress: \"all\" | \"Done\" | \"Active\";\n  setFilterExamProgress: (value: \"all\" | \"Done\" | \"Active\") => void;\n\n  // FOR APPLICANT PERFORMANCE PROPS\n  filterApplicantPerformance: ReportUserExamStatus | \"all\";\n  setFilterApplicantPerformance: (value: \"all\" | ReportUserExamStatus) => void;\n};\nconst ExamReportFilters: React.FC<ExamReportFiltersProps> = (props) => {\n  return (\n    <Fragment>\n      {props.reportTitle !== reportTitleType.EXAM_PERFORMANCE &&\n        props.reportTitle !== reportTitleType.EXAM_DISTRICT_PERFORMANCE && (\n          <div className=\"pt-1\">\n            <div className=\"text-sm text-gray-700 pb-2 pt-2\">\n              Filter by statuses:\n            </div>\n            {/* FILTER OF EXAM PREPARATION ================================ */}\n            {props.reportTitle === reportTitleType.EXAM_PREPARATION && (\n              <section>\n                <div onClick={() => props.setFilterPreparation(\"all\")}>\n                  <MainItem\n                    title=\"All\"\n                    count={0}\n                    active={props.filterPreparation === \"all\"}\n                  />\n                </div>\n                <div onClick={() => props.setFilterPreparation(\"prepared\")}>\n                  <MainItem\n                    title=\"Prepared\"\n                    count={0}\n                    active={props.filterPreparation === \"prepared\"}\n                  />\n                </div>\n                <div onClick={() => props.setFilterPreparation(\"not prepared\")}>\n                  <MainItem\n                    title=\"Not Prepared\"\n                    count={0}\n                    active={props.filterPreparation === \"not prepared\"}\n                  />\n                </div>\n              </section>\n            )}\n            {/* END FILTER OF EXAM PREPARATION ================================ */}\n\n            {/* FILTER OF EXAMINATION PROGRESS ================================ */}\n            {props.reportTitle === reportTitleType.EXAMINATION_PROGRESS && (\n              <section>\n                <div onClick={() => props.setFilterExamProgress(\"all\")}>\n                  <MainItem\n                    title=\"All\"\n                    count={0}\n                    active={props.filterExamProgress === \"all\"}\n                  />\n                </div>\n                <div onClick={() => props.setFilterExamProgress(\"Done\")}>\n                  <MainItem\n                    title=\"Completed exam\"\n                    count={0}\n                    active={props.filterExamProgress === \"Done\"}\n                  />\n                </div>\n                <div onClick={() => props.setFilterExamProgress(\"Active\")}>\n                  <MainItem\n                    title=\"Remaining Exam\"\n                    count={0}\n                    active={props.filterExamProgress === \"Active\"}\n                  />\n                </div>\n              </section>\n            )}\n            {/* END FILTER OF EXAMINATION PROGRESS ================================ */}\n\n            {/* FILTER OF APPLICANTS PERFORMANCE ================================ */}\n            {(props.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE ||\n              props.reportTitle ===\n                reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE) && (\n              <section>\n                <div onClick={() => props.setFilterApplicantPerformance(\"all\")}>\n                  <MainItem\n                    title=\"All\"\n                    count={0}\n                    active={props.filterApplicantPerformance === \"all\"}\n                  />\n                </div>\n\n                {Object.values(ReportUserExamStatus).map((item, index) => (\n                  <div\n                    onClick={() => props.setFilterApplicantPerformance(item)}\n                    key={index + item}\n                  >\n                    <MainItem\n                      title={displayStatus(item)}\n                      count={0}\n                      active={props.filterApplicantPerformance === item}\n                    />\n                  </div>\n                ))}\n              </section>\n            )}\n            {/* END FILTER OF APPLICANTS PERFORMANCE ================================ */}\n          </div>\n        )}\n    </Fragment>\n  );\n};\n\nexport default React.memo(ExamReportFilters);\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { BiExport, BiFilterAlt } from \"react-icons/bi\";\nimport { FaEdit } from \"react-icons/fa\";\nimport { connect } from \"react-redux\";\nimport {\n  schoolLevelsStoreInterface,\n  SetReportDistrictId,\n  SetReportDistrictIdAction,\n} from \"../../../actions\";\nimport { course } from \"../../../interfaces/index\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport { StoreState } from \"../../../reducers\";\nimport { ExamReportReducerType } from \"../../../reducers/exam_report\";\nimport { loadExaminationProgress } from \"../../AdminDashboard/ExamDashboard/ExamDashboard\";\nimport {\n  CandidateExamPerformanceReportContentInterface,\n  CandidateExamPerformanceToPrintInterface,\n} from \"./CandidatePerformance\";\nimport {\n  ExaminationProgressReportContentInterface,\n  ExaminationProgressToPrintInterface,\n} from \"./DoneExamList\";\nimport {\n  examPreparationReportContentInterface,\n  ExamPreparationToPrintInterface,\n} from \"./ExamList\";\nimport {\n  ExamPerformanceToPrintInterface,\n  examPerformanceReportContentInterface,\n} from \"./ExamPerformance\";\nimport { reportTitleType } from \"./ExamReport\";\nimport ExamReportModals, { ModalForTypes } from \"./ExamReportModals\";\n\ntype ExamReportTitleProps = {\n  thisPeriod: string;\n  // FOR PRINT PDF =========================\n  downloading: boolean;\n  dataToPrint: any[] | null;\n  downlaodPDF: () => Promise<false | undefined>;\n  // FOR REPORT TYPE =========================\n  reportTitle: reportTitleType;\n  setReportTitle: (title: reportTitleType) => void;\n  // FOR GENERATE EXCEL =========================\n  generateReportModal: {\n    reportType: \"EXCEL\" | \"PDF\";\n    status: boolean;\n  } | null;\n  setGenerateReportModal: (\n    reportData: {\n      reportType: \"EXCEL\" | \"PDF\";\n      status: boolean;\n    } | null\n  ) => void;\n  excelReportTitle: string;\n  setExcelReportTitle: (title: string) => void;\n  updateExamToPrint: () => void;\n  // FOR EXCEL EXAM PREPARATION REPORT CONTENT ===============================\n  examPreparationReportContent: examPreparationReportContentInterface[];\n  setExamPreparationReportContent: (\n    content: examPreparationReportContentInterface[]\n  ) => void;\n  examsToPrint:\n    | ExamPreparationToPrintInterface[]\n    | ExamPerformanceToPrintInterface[]\n    | null;\n  // FOR EXCEL EXAM PERFORMANCE REPORT CONTENT ===============================\n  examPerformanceToPrint: ExamPerformanceToPrintInterface[] | null;\n  examPerformanceReportContent: examPerformanceReportContentInterface[];\n  setExamPerformanceReportContent: (\n    value: examPerformanceReportContentInterface[]\n  ) => void;\n\n  // FOR EXCEL TOP 30 EXAM PERFORMANCE REPORT CONTENT ===============================\n  exam30PerformanceToPrint: ExamPerformanceToPrintInterface[] | null;\n  exam30PerformanceReportContent: examPerformanceReportContentInterface[];\n  setExam30PerformanceReportContent: (\n    value: examPerformanceReportContentInterface[]\n  ) => void;\n\n  // FOR EXCEL EXAMINATION PROGRESS REPORT CONTENT ===============================\n  examinationProgressToPrint: ExaminationProgressToPrintInterface[] | null;\n  examinationProgressReportContent: ExaminationProgressReportContentInterface[];\n  setExaminationProgressExamPerformanceReportContent: (\n    value: ExaminationProgressReportContentInterface[]\n  ) => void;\n\n  // FOR EXCEL CANDIDATE EXAM PERFORMANCE REPORT CONTENT ===============================\n  candidateExamPerformanceToPrint:\n    | CandidateExamPerformanceToPrintInterface[]\n    | null;\n  candidateExamPerformanceReportContent: CandidateExamPerformanceReportContentInterface[];\n  setCandidateExamPerformanceReportContent: (\n    value: CandidateExamPerformanceReportContentInterface[]\n  ) => void;\n\n  // FOR EXCEL TOP 30 CANDIDATE EXAM PERFORMANCE REPORT CONTENT ===============================\n  candidate30ExamPerformanceToPrint:\n    | CandidateExamPerformanceToPrintInterface[]\n    | null;\n  candidate30ExamPerformanceReportContent: CandidateExamPerformanceReportContentInterface[];\n  setCandidate30ExamPerformanceReportContent: (\n    value: CandidateExamPerformanceReportContentInterface[]\n  ) => void;\n\n  // FOR CHOOSING LOCATION ===========================\n  adminExamReport: ExamReportReducerType;\n  SetReportDistrictId: (\n    data: {\n      district_id: string;\n      district_name: string;\n    } | null\n  ) => SetReportDistrictIdAction;\n\n  // FROM REDUX =================\n  schoolLevels: schoolLevelsStoreInterface;\n  courses: course[] | null;\n  examsList: ExamItemResponse[] | null;\n};\n\nconst ExamReportTitle: React.FC<ExamReportTitleProps> = (props) => {\n  const [changeReport, setChangeReport] = useState<boolean>(false);\n  const [districtModal, setDistrictModal] = useState<boolean>(false);\n  const [excelModal, setExcelModal] = useState<boolean>(false);\n  const [courseModal, setCourseModal] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (\n      props.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n      props.adminExamReport.reportDistrictId === null\n    ) {\n      setDistrictModal(true);\n    }\n    if (\n      props.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n      props.adminExamReport.reportDistrictId !== null\n    ) {\n      setDistrictModal(false);\n    }\n  }, [props.adminExamReport.reportDistrictId, props.reportTitle]);\n\n  return (\n    <Fragment>\n      <div className=\"grid md:grid-cols-12 items-center\">\n        <div className=\"col-span-1 md:col-span-8\">\n          <div className=\"mt-4 mx-4 flex flex-col gap-1\">\n            <span className=\"text-xl font-bold text-gray-700\">Exam Report</span>\n            <div\n              className=\"flex flex-row gap-2 items-end cursor-pointer\"\n              onClick={() => setChangeReport(true)}\n            >\n              <span className=\"text-gray-500 text-xl\">Report type: </span>\n              <span className=\"text-blue-600 text-3xl font-bold underline\">\n                {props.reportTitle}{\" \"}\n                {props.reportTitle ===\n                  reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n                props.adminExamReport.reportDistrictId\n                  ? props.adminExamReport.reportDistrictId.district_name\n                  : \"\"}\n              </span>\n            </div>\n            {(props.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE ||\n              props.reportTitle ===\n                reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE ||\n              props.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE) && (\n              <div className=\"flex flex-wrap justify-starts items-center text-xs text-gray-800 font-medium gap-1 my-1\">\n                <span className=\"text-gray-500\">Filter result: </span>\n                {props.adminExamReport.reportDistrictId &&\n                (props.reportTitle ===\n                  reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE ||\n                  props.reportTitle ===\n                    reportTitleType.EXAM_DISTRICT_PERFORMANCE) ? (\n                  <span className=\"px-2 py-1 rounded bg-gray-300\">\n                    # {props.adminExamReport.reportDistrictId.district_name}\n                  </span>\n                ) : (\n                  <span className=\"px-2 py-1 rounded bg-gray-300\">\n                    # All district\n                  </span>\n                )}\n                {props.adminExamReport.reportCourseId ? (\n                  props.reportTitle ===\n                    reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE && (\n                    <span className=\"px-2 py-1 rounded bg-gray-300\">\n                      #\n                      {props.adminExamReport.reportCourseId.course_name +\n                        \" (\" +\n                        props.adminExamReport.reportCourseId.course_code +\n                        \")\"}\n                    </span>\n                  )\n                ) : (\n                  <span className=\"px-2 py-1 rounded bg-gray-300\">\n                    # All exams\n                  </span>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n        <div className=\"col-span-1 md:col-span-4\">\n          <div className=\"float-right mt-3\">\n            {props.dataToPrint && props.dataToPrint.length > 0 && (\n              <div className=\"flex flex-row items-center justify-end font-bold mb-2\">\n                <BiExport className=\"text-2xl text-gray-500\" />\n                <span className=\"text-gray-500\">Export as</span>\n                <button\n                  className={`px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200 focus:outline-none`}\n                  // disabled={\n                  //   props.examsToPrint && props.examsToPrint.length <= 0\n                  //     ? true\n                  //     : false\n                  // }\n                  onClick={() => {\n                    props.updateExamToPrint();\n                    setExcelModal(true);\n                    props.setGenerateReportModal({\n                      reportType: \"EXCEL\",\n                      status: true,\n                    });\n                  }}\n                >\n                  EXCEL\n                </button>\n                <button\n                  className={`px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200 focus:outline-none ${\n                    props.downloading && \"cursor-wait\"\n                  }`}\n                  onClick={() => props.downlaodPDF()}\n                  disabled={props.downloading}\n                >\n                  PDF\n                </button>\n              </div>\n            )}\n\n            <div>\n              <div\n                onClick={() => setChangeReport(true)}\n                className=\"bg-blue-50 py-2 px-2 border border-blue-300 text-blue-600 font-medium hover:bg-blue-100 flex flex-row items-center justify-center gap-2 text-sm float-right\"\n              >\n                <FaEdit className=\"text-xl\" />\n                Change Report\n              </div>\n            </div>\n\n            <section className=\"flex items-center gap-1 float-right mt-1\">\n              {(props.reportTitle ===\n                reportTitleType.EXAM_DISTRICT_PERFORMANCE ||\n                props.reportTitle ===\n                  reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE) && (\n                <div\n                  onClick={() => setDistrictModal(true)}\n                  className=\"btn bg-blue-50 border border-blue-300 text-blue-600 cursor-pointer hover:bg-blue-100 flex flex-row items-center justify-center gap-2 text-sm \"\n                >\n                  <BiFilterAlt className=\"text-xl\" />\n                  Filter by district\n                </div>\n              )}\n              {(props.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE ||\n                props.reportTitle ===\n                  reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE) && (\n                <div\n                  onClick={() => setCourseModal(true)}\n                  className=\"btn bg-blue-50 border border-blue-300 text-blue-600 cursor-pointer hover:bg-blue-100 flex flex-row items-center justify-center gap-2 text-sm \"\n                >\n                  <BiFilterAlt className=\"text-xl\" />\n                  Filter by exam\n                </div>\n              )}\n            </section>\n          </div>\n        </div>\n      </div>\n\n      {/* GENERATE EXCEL MODAL CONTROLLERS ============================================ */}\n      {excelModal && (\n        <ExamReportModals\n          modalFor={ModalForTypes.generateReportModal}\n          modalState={excelModal}\n          changeModalState={setExcelModal}\n          reportTitle={props.reportTitle}\n          setGenerateReportModal={props.setGenerateReportModal}\n          excelReportTitle={props.excelReportTitle}\n          setExcelReportTitle={props.setExcelReportTitle}\n          updateExamToPrint={props.updateExamToPrint}\n          generateReportModal={props.generateReportModal}\n          // EXAM PREPARATION ######################\n          examsToPrint={props.examsToPrint}\n          examPreparationReportContent={props.examPreparationReportContent}\n          setExamPreparationReportContent={\n            props.setExamPreparationReportContent\n          }\n          // EXAM PERFORMANCE ######################\n          examPerformanceToPrint={props.examPerformanceToPrint}\n          examPerformanceReportContent={props.examPerformanceReportContent}\n          setExamPerformanceReportContent={\n            props.setExamPerformanceReportContent\n          }\n          // TOP 30 EXAM PERFORMANCE ######################\n          exam30PerformanceToPrint={props.exam30PerformanceToPrint}\n          exam30PerformanceReportContent={props.exam30PerformanceReportContent}\n          setExam30PerformanceReportContent={\n            props.setExam30PerformanceReportContent\n          }\n          // EXAMINATION PROGRESS ######################\n          examinationProgressToPrint={props.examinationProgressToPrint}\n          examinationProgressReportContent={\n            props.examinationProgressReportContent\n          }\n          setExaminationProgressExamPerformanceReportContent={\n            props.setExaminationProgressExamPerformanceReportContent\n          }\n          // CANDIDATE EXAM PERFORMANCE ######################\n          candidateExamPerformanceToPrint={\n            props.candidateExamPerformanceToPrint\n          }\n          candidateExamPerformanceReportContent={\n            props.candidateExamPerformanceReportContent\n          }\n          setCandidateExamPerformanceReportContent={\n            props.setCandidateExamPerformanceReportContent\n          }\n          candidate30ExamPerformanceToPrint={\n            props.candidate30ExamPerformanceToPrint\n          }\n          candidate30ExamPerformanceReportContent={\n            props.candidate30ExamPerformanceReportContent\n          }\n          setCandidate30ExamPerformanceReportContent={\n            props.setCandidate30ExamPerformanceReportContent\n          }\n        />\n      )}\n      {/* END GENERATE EXCEL MODAL CONTROLLERS ============================================ */}\n\n      {/* CHANGE REPORT TYPE MODAL CONTROLLERS ============================================ */}\n      {changeReport && (\n        <ExamReportModals\n          modalFor={ModalForTypes.title}\n          modalState={changeReport}\n          reportTitle={props.reportTitle}\n          changeModalState={setChangeReport}\n          setReportTitle={props.setReportTitle}\n          setExcelReportTitle={props.setExcelReportTitle}\n        />\n      )}\n      {/* END CHANGE REPORT TYPE MODAL CONTROLLERS ============================================ */}\n\n      {/* CHANGE DISTRICT FILTER MODAL CONTROLLERS ============================================ */}\n      {districtModal && (\n        <ExamReportModals\n          modalFor={ModalForTypes.choose_district}\n          modalState={districtModal}\n          changeModalState={setDistrictModal}\n          districtId={\n            props.adminExamReport.reportDistrictId\n              ? props.adminExamReport.reportDistrictId.district_id\n              : \"all\"\n          }\n          reportTitle={props.reportTitle}\n        />\n      )}\n      {/* END CHANGE DISTRICT FILTER MODAL CONTROLLERS ============================================ */}\n\n      {/* CHANGE COURSE FILTER MODAL CONTROLLERS ============================================ */}\n      {courseModal &&\n        loadExaminationProgress(\n          props.adminExamReport.DoneExam,\n          props.examsList,\n          props.schoolLevels.selectedEducationCategory,\n          props.courses,\n          props.schoolLevels.school_levels,\n          props.thisPeriod\n        ) && (\n          <ExamReportModals\n            modalFor={ModalForTypes.choose_exam}\n            modalState={courseModal}\n            AllExamData={\n              loadExaminationProgress(\n                props.adminExamReport.DoneExam,\n                props.examsList,\n                props.schoolLevels.selectedEducationCategory,\n                props.courses,\n                props.schoolLevels.school_levels,\n                props.thisPeriod\n              )!.finished\n            }\n            changeModalState={setCourseModal}\n            thisExam={props.adminExamReport.reportCourseId}\n          />\n        )}\n      {/* END CHANGE COURSE FILTER MODAL CONTROLLERS ============================================ */}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  adminExamReport,\n  schoolLevels,\n  course,\n  prepareExam,\n}: StoreState): {\n  schoolLevels: schoolLevelsStoreInterface;\n  courses: course[] | null;\n  examsList: ExamItemResponse[] | null;\n  adminExamReport: ExamReportReducerType;\n} => {\n  return {\n    schoolLevels,\n    courses: course.courses,\n    examsList: prepareExam.examsList,\n    adminExamReport,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, { SetReportDistrictId })(ExamReportTitle)\n);\n","import React from \"react\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport { RiFileExcel2Fill } from \"react-icons/ri\";\n\ninterface ExportToExcelProps {\n  fileData: any[];\n  fileName: string;\n  btnName?: string;\n  className?: string;\n  showIcon?: boolean;\n}\n\nconst ExportToExcel: React.FC<ExportToExcelProps> = ({\n  fileData,\n  fileName,\n  btnName = \"Excel\",\n  className = \"flex items-center gap-1 px-4 py-1 rounded text-green-700 bg-white border hover:text-white hover:bg-green-700 border-green-700 font-bold\",\n  showIcon = true,\n}) => {\n  const fileType =\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n  const fileExtension = \".xlsx\";\n\n  const exportToCSV = (apiData: any[], fileName: string) => {\n    const ws = XLSX.utils.json_to_sheet(apiData);\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n    const data = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n\n  return (\n    <button\n      onClick={(e) => exportToCSV(fileData, fileName)}\n      className={className}\n    >\n      {showIcon && <RiFileExcel2Fill />}\n      {btnName}\n    </button>\n  );\n};\n\nexport default ExportToExcel;\n","export default __webpack_public_path__ + \"static/media/mineduc.11a9ae1c.png\";","import jsPDF from \"jspdf\";\nimport { DATE } from \"../../utils/functions\";\nimport Logo from \"../../utils/mineduc.png\";\nrequire(\"jspdf-autotable\");\n\nexport const addFooters = (doc: any) => {\n  const pageCount = doc.internal.getNumberOfPages();\n\n  doc.setFont(\"helvetica\", \"italic\");\n  doc.setFontSize(8);\n  for (var i = 1; i <= pageCount; i++) {\n    doc.setPage(i);\n    doc.text(\n      \"Page \" + String(i) + \" of \" + String(pageCount),\n      doc.internal.pageSize.width / 2,\n      297,\n      {\n        align: \"center\",\n      }\n    );\n  }\n};\n\nexport type reportSettingsInterface = {\n  doneBy: string;\n  title: string;\n  subjectTitle: string;\n  subject: string;\n  institute: string;\n  period: string;\n  footer: string;\n  orientation?: \"p\" | \"l\";\n};\n\nexport const generatePDF = async (\n  reportSettings: reportSettingsInterface,\n  table: HTMLElement,\n  callBack: (status: boolean) => void\n) => {\n  callBack(true);\n  const orientation: \"p\" | \"l\" = reportSettings.orientation\n    ? reportSettings.orientation\n    : \"p\";\n  var lMargin: number = 20; //left margin in mm\n  var rMargin: number = 20; //right margin in mm\n  var pdfInMM: number = 185; // width of A4 in mm\n\n  //   var doc = new jsPDF(\"p\", \"mm\", \"a4\");\n  var doc: any = new jsPDF(orientation, \"mm\", \"a4\");\n\n  doc.setTextColor(95, 95, 95);\n  doc.setFontSize(28);\n  // doc.text(\n  //   this.props.reportTitle,\n  //   doc.internal.pageSize.getWidth() / 2,\n  //   30,\n  //   undefined,\n  //   \"center\"\n  // );\n  doc.addImage(Logo, \"png\", 20, 20, 10, 10);\n  doc.text(\"MINEDUC\", 32, 28.5, undefined, \"left\");\n  //   doc.setTextColor(19, 90, 152);\n  doc.setFontSize(26);\n  doc.text(\n    reportSettings.title,\n    doc.internal.pageSize.getWidth() / 2,\n    42.7,\n    undefined,\n    \"center\"\n  );\n\n  doc.setFontSize(20);\n  doc.text(\n    reportSettings.institute,\n    doc.internal.pageSize.getWidth() / 2,\n    53.7,\n    undefined,\n    \"center\"\n  );\n\n  var lines;\n  lines = doc.splitTextToSize(\n    reportSettings.subject,\n    pdfInMM - lMargin - rMargin\n  );\n  // if (reportSettings.position) {\n  // } else if (reportSettings.subject) {\n  //   lines = doc.splitTextToSize(\n  //     reportSettings.subject,\n  //     pdfInMM - lMargin - rMargin\n  //   );\n  // }\n\n  //   doc.setTextColor(0, 123, 255);\n  doc.setFontSize(16);\n  //   doc.text(lines, doc.internal.pageSize.getWidth() / 2, 45, {\n  //     maxWidth: 85,\n  //     align: \"center\",\n  //   });\n\n  var y = 63,\n    width;\n  doc.setTextColor(95, 95, 95);\n  doc.text(`${reportSettings.subjectTitle}: `, lMargin, y);\n  width = doc.getTextWidth(`${reportSettings.subjectTitle}: `);\n  // if (reportSettings.position) {\n  // } else if (reportSettings.position) {\n  //   doc.text(`Subject: `, lMargin, y);\n  //   width = doc.getTextWidth(\"Subject: \");\n  // }\n  // doc.setFontType(\"bold\");\n  doc.setTextColor(38, 38, 38);\n  for (var i = 0; i < lines.length; i++) {\n    if (y > 280) {\n      y = 10;\n      doc.addPage();\n    }\n    // doc.text(15, y, lines[i]);\n    doc.text(lines[i], lMargin + width, y);\n    y = y + 7;\n  }\n  doc.setTextColor(95, 95, 95);\n  doc.text(\"Period: \", lMargin, y + 3);\n  width = doc.getTextWidth(\"Period: \");\n  doc.setTextColor(38, 38, 38);\n  doc.text(reportSettings.period, lMargin + width, y + 3);\n\n  doc.autoTable({\n    html: table,\n    startY: 85,\n    margin: { horizontal: 20 },\n    cellPadding: 3, // Horizontal cell padding\n    // fontSize: 12,\n    rowHeight: 20,\n    // styles: { overflow: \"linebreak\" },\n    bodyStyles: { valign: \"top\" },\n    columnStyles: { email: { cellWidth: \"wrap\" } },\n    theme: \"striped\",\n    tableWidth: true,\n  });\n\n  doc.setFontSize(12);\n  let finalY = doc.lastAutoTable.finalY; // The y position on the page\n  doc.text(`Reported by: ${reportSettings.doneBy}`, lMargin, finalY + 15);\n  doc.text(\n    \"Report downloaded on \" + DATE(new Date().toString()),\n    lMargin,\n    finalY + 23\n  );\n\n  addFooters(doc);\n  await doc\n    .save(\n      `${\n        reportSettings.title +\n        \": \" +\n        reportSettings.subject +\n        \": \" +\n        reportSettings.period\n      }.pdf`,\n      { returnPromise: true }\n    )\n    .then(callBack(false));\n};\n","import { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  MySchoolInterface,\n  PostSchoolInterface,\n  SchoolInfoInterface,\n  SchoolsInterface,\n} from \"../shared/interfaces\";\n// import { setAxiosToken } from \"../utils/AxiosToken\";\nimport axios from \"axios\";\nimport { API } from \"../utils/api\";\nimport { errorToText } from \"../utils/errors\";\nimport { placedCandidateInterface } from \"../interfaces/marks_publication\";\nimport { PlacementListInterface } from \"../containers/PlacementLimit/PlacementLimit\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\nexport interface GetSchoolsAction {\n  type: ActionTypes.GET_SCHOOLS;\n  payload: SchoolsInterface[];\n}\n\nexport interface GetSchoolByIdAction {\n  type: ActionTypes.GET_SCHOOLS_BY_ID;\n  payload: MySchoolInterface;\n}\n\nexport interface GetSchoolsInfoAction {\n  type: ActionTypes.GET_SCHOOLS_INFO;\n  payload: SchoolInfoInterface[];\n}\n\nexport interface CreateSchoolAction {\n  type: ActionTypes.CREATE_SCHOOL;\n  payload: SchoolsInterface;\n}\n\nexport interface UpdateSchoolAction {\n  type: ActionTypes.UPDATE_SCHOOL;\n  payload: SchoolsInterface;\n}\n\nexport interface DeleteSchoolAction {\n  type: ActionTypes.DELETE_SCHOOL;\n  payload: string;\n}\n\n// School Posts interfaces\nexport interface FetchSchoolPostsAction {\n  type: ActionTypes.FETCH_SCHOOL_POSTS;\n  payload: PostSchoolInterface[];\n}\n\n// School Placements interfaces\nexport interface GetSchoolPlacementAction {\n  type: ActionTypes.GET_SCHOOL_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\n// District School Placements interfaces\nexport interface GetDistrictPlacementAction {\n  type: ActionTypes.GET_DISTRICT_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\n// District School Placements interfaces\nexport interface GetSessionPlacementAction {\n  type: ActionTypes.GET_SESSION_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\nexport interface FetchDistrictPostsAction {\n  type: ActionTypes.FETCH_DISTRICT_POSTS;\n  payload: PostSchoolInterface[];\n}\n\nexport interface CreateSchoolPostAction {\n  type: ActionTypes.CREATE_SCHOOL_POST;\n  payload: PostSchoolInterface;\n}\n\nexport interface UpdateSchoolPostAction {\n  type: ActionTypes.UPDATE_SCHOOL_POST;\n  payload: {\n    TYPE: \"DISTRICT\" | \"SCHOOL\" | \"RECEIVED\";\n    data: PostSchoolInterface;\n  };\n}\n\nexport interface DeleteSchoolPostAction {\n  type: ActionTypes.DELETE_SCHOOL_POST;\n  payload: PostSchoolInterface[];\n}\n\n// Get Institute Limit Posts Action interfaces\nexport interface GetInstitutePlacementLimitAction {\n  type: ActionTypes.GET_INSTITUTE_PLACEMENT_LIMIT;\n  payload: PlacementListInterface[];\n}\n\nexport interface GetDistrictPlacementLimitAction {\n  type: ActionTypes.GET_DISTRICT_PLACEMENT_LIMIT;\n  payload: PlacementListInterface[];\n}\n\nexport interface UpdateInstitutePlacementLimitAction {\n  type: ActionTypes.UPDATE_INSTITUTE_PLACEMENT_LIMIT;\n  payload: { limit_id: string; confirmed_post: number };\n}\n\nexport type SchoolActionType =\n  | GetSchoolsAction\n  | GetSchoolByIdAction\n  | GetSchoolsInfoAction\n  | CreateSchoolAction\n  | UpdateSchoolAction\n  | DeleteSchoolAction\n  | FetchSchoolPostsAction\n  | GetSchoolPlacementAction\n  | FetchDistrictPostsAction\n  | CreateSchoolPostAction\n  | UpdateSchoolPostAction\n  | DeleteSchoolPostAction\n  | GetDistrictPlacementAction\n  | GetSessionPlacementAction\n  | GetInstitutePlacementLimitAction\n  | GetDistrictPlacementLimitAction\n  | UpdateInstitutePlacementLimitAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSchools = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      const res = await axios.get<SchoolsInterface[]>(\n        `${API.APPLICATION}/schools`\n      );\n      dispatch<GetSchoolsAction>({\n        type: ActionTypes.GET_SCHOOLS,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSchoolById = (schoolId: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<MySchoolInterface>(\n        `${API.APPLICATION}/schools/${schoolId}`\n      );\n      dispatch<GetSchoolByIdAction>({\n        type: ActionTypes.GET_SCHOOLS_BY_ID,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// export const getSchoolsInfo = () => {\n//   return async (dispatch: Dispatch) => {\n//     setAxiosToken();\n//     const response = await axios.get<SchoolInfoInterface[]>(url);\n\n//     dispatch<GetSchoolsInfoAction>({\n//       type: ActionTypes.GET_SCHOOLS_INFO,\n//       payload: response.data,\n//     });\n//   };\n// };\n\nexport const createSchool = (data: SchoolsInterface) => {\n  console.log({ schools: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateSchoolAction>({\n      type: ActionTypes.CREATE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const updateSchool = (data: SchoolsInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateSchoolAction>({\n      type: ActionTypes.UPDATE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteSchool = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteSchoolAction>({\n      type: ActionTypes.DELETE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const fetchSchoolPosts = (school_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PostSchoolInterface[]>(\n        `${API.PLACEMENT}/requestpost/school/${school_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ schoolPosts: res });\n      console.log(\"====================================\");\n\n      dispatch<FetchSchoolPostsAction>({\n        type: ActionTypes.FETCH_SCHOOL_POSTS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSchoolPlacement = (school_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/school/${school_id}`\n      );\n\n      console.log({ getSchoolPlacement: res.data });\n\n      dispatch<GetSchoolPlacementAction>({\n        type: ActionTypes.GET_SCHOOL_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createSchoolPost = (data: PostSchoolInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateSchoolPostAction>({\n      type: ActionTypes.CREATE_SCHOOL_POST,\n      payload: data,\n    });\n  };\n};\n\nexport const updateSchoolPost = (\n  TYPE: \"DISTRICT\" | \"SCHOOL\" | \"RECEIVED\",\n  data: PostSchoolInterface\n) => {\n  console.log({ TYPE, data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateSchoolPostAction>({\n      type: ActionTypes.UPDATE_SCHOOL_POST,\n      payload: { TYPE, data },\n    });\n  };\n};\n\nexport const deleteSchoolPost = (data: PostSchoolInterface[]) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteSchoolPostAction>({\n      type: ActionTypes.DELETE_SCHOOL_POST,\n      payload: data,\n    });\n  };\n};\n\nexport const fetchDistrictPosts = (district_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PostSchoolInterface[]>(\n        `${API.PLACEMENT}/requestpost/district/${district_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ fetchDistrictPosts: res });\n      console.log(\"====================================\");\n\n      dispatch<FetchDistrictPostsAction>({\n        type: ActionTypes.FETCH_DISTRICT_POSTS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getDistrictPlacement = (\n  district_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/district/${district_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getDistrictPlacement: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetDistrictPlacementAction>({\n        type: ActionTypes.GET_DISTRICT_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSessionPlacement = (session_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/session/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getSessionPlacement: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetSessionPlacementAction>({\n        type: ActionTypes.GET_SESSION_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getInstitutePlacementLimit = (\n  institute_id: string,\n  session_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PlacementListInterface[]>(\n        `${API.PLACEMENT}/confirmedpostrequest/institute/${institute_id}/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getInstitutePlacementLimit: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetInstitutePlacementLimitAction>({\n        type: ActionTypes.GET_INSTITUTE_PLACEMENT_LIMIT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getDistrictPlacementLimit = (\n  district_id: string,\n  session_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PlacementListInterface[]>(\n        `${API.PLACEMENT}/confirmedpostrequest/district/${district_id}/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getDistrictPlacementLimit: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetDistrictPlacementLimitAction>({\n        type: ActionTypes.GET_DISTRICT_PLACEMENT_LIMIT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const updateInstitutePlacementLimit = (data: {\n  limit_id: string;\n  confirmed_post: number;\n}) => {\n  console.log(\"====================================\");\n  console.log({ updateInstitutePlacementLimit: data });\n  console.log(\"====================================\");\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateInstitutePlacementLimitAction>({\n      type: ActionTypes.UPDATE_INSTITUTE_PLACEMENT_LIMIT,\n      payload: data,\n    });\n  };\n};\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { MdLock, MdLocationOn } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert, schoolLevelsStoreInterface } from \"../../actions\";\nimport { getAllRoom } from \"../../actions/location\";\nimport { getSchools } from \"../../actions/schools\";\nimport {\n  blockUserToSystem,\n  unBlockUserToSystem,\n  resetUserAccess,\n} from \"../../actions/users\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport Loading from \"../../components/Loading/Loading\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport Table from \"../../components/Table/Table\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport {\n  getRoleById,\n  capitalizeFirstLetter,\n  getInstituteById,\n} from \"../../shared/dataTest\";\nimport {\n  RoomLocationInterface,\n  LocationRoomTableInterface,\n  DistrictInterface,\n  SystemUserRoleInterface,\n  UserInterface,\n  AccessTaskInterface,\n  SchoolsInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport { distinctDistrict } from \"../Locations/Locations\";\nimport { UserAccess } from \"./UserAccess\";\nimport UserRole from \"./UserRole\";\nimport profile from \"../../shared/blank_profile.png\"; // with im\n\nexport const getUserById = (users: UserInterface[], userId: string) => {\n  return users.find((item) => item.user_id === userId);\n};\n\nexport enum ModalState {\n  View_User = \"View User Info\",\n  Add_Access = \"Add Access To User\",\n  Update_Access = \"Update User Access\",\n  Close_Modal = \"Close Modal\",\n}\n\n// Tobe replaced with Emmy's function\nexport const LocationsInArray = (\n  LocationData: RoomLocationInterface[]\n): LocationRoomTableInterface[] | [] => {\n  let locationTemp: LocationRoomTableInterface[] = [];\n  for (let p in LocationData) {\n    let districts = LocationData[p].districts;\n    for (let d in districts) {\n      let centers = districts[d].centers;\n      for (let c in centers) {\n        let rooms = centers[c].rooms;\n        for (let r in rooms) {\n          locationTemp.push({\n            province_id: LocationData[p]._id,\n            province_name: LocationData[p].province_name,\n            district_id: districts[d]._id,\n            district_name: districts[d].district_name,\n            center_id: centers[c]._id,\n            center_name: centers[c].center_name,\n            room_id: rooms[r]._id,\n            room_name: rooms[r].room_number.toString(),\n            capacity: rooms[r].capacity,\n            occupied: rooms[r].occupied,\n          });\n        }\n      }\n    }\n  }\n  return locationTemp;\n};\n\ninterface AppProps {\n  users: UserInterface[];\n  roleList: SystemUserRoleInterface[];\n  userTypes: \"all\" | \"active\" | \"blocked\";\n  loadingUser: boolean;\n  schoolLevels: schoolLevelsStoreInterface;\n  setLoadingUser: (value: boolean) => void;\n  manageUser: UserInterface | null;\n  setManageUser: (value: UserInterface | null) => void;\n  changeRole: boolean;\n  setChangeRole: (value: boolean) => void;\n  currentPage: number;\n\n  // REDUX =================\n  allRoom: RoomLocationInterface[];\n  getAllRoom: Function;\n  schools: SchoolsInterface[];\n  getSchools: Function;\n  blockUserToSystem: Function;\n  unBlockUserToSystem: Function;\n  resetUserAccess: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface AppStates {\n  manageUserId: string;\n  loadingRequest: boolean;\n  loading: boolean;\n  loadingSchool: boolean;\n  loadingRequestType: \"RESET\" | \"STATUS\" | \"CHANGE_ROLE\" | null;\n  schoolList: SchoolsInterface[] | null;\n  roomList: RoomLocationInterface[] | null;\n  roomTable: LocationRoomTableInterface[] | null;\n  userAccess: AccessTaskInterface[] | null;\n  currentAccess: AccessTaskInterface | null;\n}\n\nclass UserList extends Component<AppProps, AppStates> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      manageUserId: \"\",\n      loadingRequest: false,\n      loading: true,\n      loadingSchool: true,\n      loadingRequestType: null,\n      schoolList: null,\n      roomList: null,\n      roomTable: null,\n      userAccess: null,\n      currentAccess: null,\n    };\n  }\n\n  setManageUserId = (value: string) => {\n    this.setState({ manageUserId: value });\n  };\n\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n\n  setLoadingSchool = (value: boolean) => {\n    this.setState({ loadingSchool: value });\n  };\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingRequestType = (\n    value: \"RESET\" | \"STATUS\" | \"CHANGE_ROLE\" | null\n  ) => {\n    this.setState({ loadingRequestType: value });\n  };\n\n  setRoomList = (value: RoomLocationInterface[] | null) => {\n    this.setState({ roomList: value });\n  };\n\n  setRoomTables = (value: LocationRoomTableInterface[] | null) => {\n    this.setState({ roomTable: value });\n  };\n\n  setCurrentAccess = (value: AccessTaskInterface | null) => {\n    this.setState({ currentAccess: value });\n  };\n\n  setSchoolList = (value: SchoolsInterface[] | null) => {\n    this.setState({ schoolList: value });\n  };\n\n  setUserAccess = (value: AccessTaskInterface[] | null) => {\n    this.setState({ userAccess: value });\n  };\n\n  componentDidMount = () => {\n    if (this.props.schools.length === 0) {\n      this.props.getSchools(\n        (status: boolean, msg: string, data?: SchoolsInterface[]) => {\n          this.setLoadingSchool(status);\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data) {\n              this.setLoadingSchool(false);\n              this.setSchoolList(data);\n            }\n          }\n        }\n      );\n    } else {\n      this.setSchoolList(this.props.schools);\n      this.setLoadingSchool(false);\n    }\n\n    if (this.props.allRoom.length === 0) {\n      this.props.getAllRoom(\n        (status: boolean, msg: string, data?: RoomLocationInterface[]) => {\n          this.setLoading(status);\n          if (!status && msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          if (data && data.length > 0) {\n            this.setRoomList(data);\n            this.setRoomTables(LocationsInArray(data));\n          }\n        }\n      );\n    } else if (this.state.loading) {\n      this.setRoomList(this.props.allRoom);\n      this.setRoomTables(LocationsInArray(this.props.allRoom));\n      this.setLoading(false);\n    }\n  };\n\n  tableData = (): JSX.Element[] => {\n    if (\n      this.props.loadingUser ||\n      this.state.loading ||\n      this.state.loadingSchool\n    ) {\n      return [\n        <tr\n          key={Math.random()}\n          className=\"border-b border-gray-200 hover:bg-gray-100\"\n        >\n          <td className=\"p-3 text-center\" colSpan={8}>\n            <Loading />\n          </td>\n        </tr>,\n      ];\n    }\n\n    let data: UserInterface[] = this.props.users;\n    if (data.length <= 0) {\n      return [\n        <tr\n          key={Math.random()}\n          className=\"border-b border-gray-200 hover:bg-gray-100\"\n        >\n          <td className=\"p-3 text-center\" colSpan={8}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    return data.map((user: UserInterface, index: number) => (\n      <tr\n        key={index + Math.random()}\n        className=\"border-b border-gray-200 hover:bg-gray-100 group cursor-pointer\"\n        onClick={() => {\n          this.props.setManageUser(user);\n          this.setManageUserId(user.user_id);\n        }}\n      >\n        <td className=\"p-3 text-left whitespace-nowrap\">{index + 1}</td>\n        <td className=\"p-3 text-left\">\n          <span>\n            {user.user_info &&\n              user.user_info.fname + \" \" + user.user_info.lname}\n          </span>\n        </td>\n        <td className=\"p-3 text-left\">{user.email}</td>\n        {/* <td className=\"p-3 text-left\">{user.phone_number}</td> */}\n        <td className=\"p-3 text-left\">\n          {user.user_info && user.user_info.sex === \"M\" ? \"Male\" : \"Female\"}\n        </td>\n        <td className=\"p-3 text-left text-blue-700 text-base font-medium\">\n          {user.default_access &&\n            user.default_access.system_user_role_id &&\n            user.default_access.system_user_role_id && (\n              <span\n                className={`px-2 py-1 font-semibold rounded text-blue-700 bg-blue-100 dark:bg-blue-700 dark:text-blue-100`}\n              >\n                {getRoleById(\n                  this.props.roleList,\n                  user.default_access.system_user_role_id\n                )?.role &&\n                  capitalizeFirstLetter(\n                    getRoleById(\n                      this.props.roleList,\n                      user.default_access.system_user_role_id\n                    )?.role\n                  )}\n              </span>\n            )}\n        </td>\n        {/* {userTypes === \"all\" && (\n          <td>\n            {user.is_active ? (\n              <span className={`px-2 py-1 font-semibold text-green-700`}>\n                Active\n              </span>\n            ) : (\n              <span className={`px-2 py-1 font-semibold text-red-700`}>\n                Blocked\n              </span>\n            )}\n          </td>\n        )} */}\n        <td className=\"px-3 text-center\">\n          <button\n            className=\"btn bg-gray-200 group-hover:bg-blue-700 group-hover:text-white focus:outline-none\"\n            title=\"Manage User Access\"\n            onClick={() => {\n              this.props.setManageUser(user);\n              this.setManageUserId(user.user_id);\n            }}\n          >\n            Manage\n          </button>\n        </td>\n      </tr>\n    ));\n  };\n\n  blockUser = async (user_id: string, actionType: boolean) => {\n    if (!user_id) {\n      this.props.PushPopupAlert({\n        title: \"User Access is required doesn't exist\",\n        theme: PopupAlertTheme.danger,\n      });\n    }\n\n    this.setLoadingRequest(true);\n\n    if (\n      !window.confirm(\n        `Are sure you want to ${actionType ? \"block\" : \"activate\"} this user?`\n      )\n    ) {\n      return this.setLoadingRequest(false);\n    }\n\n    try {\n      const res = await axios.patch(`${API.AUTH}/users/disactive/${user_id}`, {\n        is_active: !actionType,\n      });\n      if (res) {\n        console.log(\"====================================\");\n        console.log({ blockUserToSystem: res });\n        console.log(\"====================================\");\n        actionType\n          ? this.props.blockUserToSystem(user_id, this.props.currentPage)\n          : this.props.unBlockUserToSystem(user_id, this.props.currentPage);\n\n        this.props.PushPopupAlert({\n          title: `User has been ${actionType ? \"blocked\" : \"activated\"}!`,\n          theme: PopupAlertTheme.info,\n        });\n      }\n    } catch (error) {\n      console.error({ blockUser_ERROR: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n\n    this.setLoadingRequest(false);\n    user_id = \"\";\n  };\n\n  restUserAccess = async (user_id: string) => {\n    if (!user_id) {\n      this.props.PushPopupAlert({\n        title: \"User Access is required doesn't exist\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    if (!window.confirm(`Are sure you want to reset to default access?`)) {\n      return this.setLoadingRequest(false);\n    }\n\n    this.setLoadingRequest(true);\n    this.setLoadingRequestType(\"RESET\");\n\n    try {\n      const res = await axios.delete(`${API.AUTH}/custaccess/user/${user_id}`);\n      res && this.props.resetUserAccess(user_id, this.props.currentPage);\n      let resetedAccess: UserInterface | undefined = this.props.users.find(\n        (user) => user.user_id === user_id\n      );\n      if (resetedAccess) {\n        resetedAccess.default_access &&\n          this.setUserAccess(resetedAccess.default_access.access);\n        this.props.PushPopupAlert({\n          title: `Resetting User Access complete successfully`,\n          theme: PopupAlertTheme.info,\n        });\n        this.setCurrentAccess(null);\n      }\n    } catch (error) {\n      console.error({ reseting_user_access: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n\n    this.setLoadingRequest(false);\n    this.setLoadingRequestType(null);\n    user_id = \"\";\n  };\n\n  distinctDistrict = (\n    location: RoomLocationInterface[],\n    province_id?: string\n  ): DistrictInterface[] => {\n    let ids: string[] = [],\n      result: DistrictInterface[] = [];\n\n    if (province_id) {\n      result = location.find((item) => item._id === province_id)\n        ? location.find((item) => item._id === province_id)!.districts\n          ? location.find((item) => item._id === province_id)!.districts\n          : []\n        : [];\n    } else {\n      for (const key in location) {\n        if (Object.prototype.hasOwnProperty.call(location, key)) {\n          for (const keyDistrict in location[key].districts) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                location[key].districts,\n                keyDistrict\n              )\n            ) {\n              if (!ids.includes(location[key].districts[keyDistrict]._id)) {\n                ids.push(location[key].districts[keyDistrict]._id);\n                result.push(location[key].districts[keyDistrict]);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return result;\n  };\n\n  render() {\n    return (\n      <div>\n        {!this.props.manageUser && (\n          <div className=\"grid md:grid-cols-5 gap-2 mb-5\">\n            <div className={`md:col-span-5 rounded`}>\n              <div className=\"my-2 flex sm:flex-row flex-col justify-between\">\n                <div className=\"flex flex-col md:flex-row gap-1 items-center mx-1.5\">\n                  {/* <span className=\"text-lg\">All User</span>\n                  <MdChevronRight className=\"w-7 h-7\" />\n                  <span className=\"text-lg underline\">All User</span> */}\n                </div>\n              </div>\n              {this.props.users && (\n                <Table\n                  columns={[\n                    { columnTitle: \"#\", alignText: \"left\", padding: \"p-3\" },\n                    { columnTitle: \"Names\", alignText: \"left\", padding: \"p-3\" },\n                    { columnTitle: \"Email\", alignText: \"left\", padding: \"p-3\" },\n                    {\n                      columnTitle: \"Gender\",\n                      alignText: \"left\",\n                      padding: \"p-3\",\n                    },\n                    { columnTitle: \"Role\", alignText: \"left\", padding: \"p-3\" },\n                    // { columnTitle: \"Status\", alignText: \"left\", padding: \"p-3\" },\n                    { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n                  ]}\n                  rows={this.tableData}\n                  pagination={false}\n                  search={true}\n                  thColor=\"gray\"\n                  loading={\n                    this.props.loadingUser ||\n                    this.state.loading ||\n                    this.state.loadingSchool\n                  }\n                />\n              )}\n            </div>\n          </div>\n        )}\n\n        {/* -------------------------------------------------------- */}\n\n        {this.props.manageUser && (\n          <div className=\"bg-gray-100 h-100\">\n            {/* header */}\n            <div className=\"bg-white border-b border-t px-4 py-2 flex flex-col md:flex-row items-center gap-x-14\">\n              {this.props.users.find(\n                (user) => user.user_id === this.state.manageUserId\n              ) ? (\n                <div\n                  key={\n                    this.props.users.find(\n                      (user) => user.user_id === this.state.manageUserId\n                    )!.user_id + Math.random()\n                  }\n                  className=\"flex flex-col md:flex-row md:items-start items-center w-full gap-3\"\n                >\n                  <img\n                    src={\n                      this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.user_info.photo !== \"pic\"\n                        ? this.props.users.find(\n                            (user) => user.user_id === this.state.manageUserId\n                          )!.user_info.photo\n                        : profile\n                    }\n                    alt=\"\"\n                    className=\"rounded-full w-32 h-32\"\n                  />\n                  <div className=\"flex flex-col gap-1 items-start w-full\">\n                    <span className=\"text-2xl font-semibold\">\n                      {this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.user_info.fname +\n                        \" \" +\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.user_info.lname}\n                    </span>\n                    <div className=\"flex items-center\">\n                      <MdLock className=\"w-5 h-5\" />\n                      <span className=\"text-lg font-medium\">\n                        {this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.default_access &&\n                          getRoleById(\n                            this.props.roleList,\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.default_access!.system_user_role_id\n                          ).role}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-1\">\n                      <span className=\"text-gray-500\">Level:</span>\n                      <span className=\"text-base font-medium\">\n                        {this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.default_access &&\n                        getRoleById(\n                          this.props.roleList,\n                          this.props.users.find(\n                            (user) => user.user_id === this.state.manageUserId\n                          )!.default_access!.system_user_role_id\n                        ).district_required\n                          ? \"District\"\n                          : this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.default_access &&\n                            getRoleById(\n                              this.props.roleList,\n                              this.props.users.find(\n                                (user) =>\n                                  user.user_id === this.state.manageUserId\n                              )!.default_access!.system_user_role_id\n                            ).school_required\n                          ? \"School\"\n                          : this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.default_access &&\n                            getRoleById(\n                              this.props.roleList,\n                              this.props.users.find(\n                                (user) =>\n                                  user.user_id === this.state.manageUserId\n                              )!.default_access!.system_user_role_id\n                            ).room_required\n                          ? \"Room\"\n                          : this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.default_access &&\n                            getRoleById(\n                              this.props.roleList,\n                              this.props.users.find(\n                                (user) =>\n                                  user.user_id === this.state.manageUserId\n                              )!.default_access!.system_user_role_id\n                            ).education_institution_required\n                          ? \"Institute\"\n                          : \"-\"}\n                      </span>\n                    </div>\n                    {this.props.users.find(\n                      (user) => user.user_id === this.state.manageUserId\n                    )!.default_access &&\n                    getRoleById(\n                      this.props.roleList,\n                      this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.default_access!.system_user_role_id\n                    ).education_institution_required ? (\n                      <div className=\"flex items-center gap-1\">\n                        <span className=\"text-gray-500\">Institute:</span>\n                        <span className=\"text-base font-medium\">\n                          {this.props.users.find(\n                            (user) => user.user_id === this.state.manageUserId\n                          )!.default_access &&\n                          this.props.schoolLevels.education_categories &&\n                          getInstituteById(\n                            this.props.schoolLevels.education_categories,\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.default_access!.education_institution_id\n                          )\n                            ? getInstituteById(\n                                this.props.schoolLevels.education_categories,\n                                this.props.users.find(\n                                  (user) =>\n                                    user.user_id === this.state.manageUserId\n                                )!.default_access!.education_institution_id\n                              )!.education_category_title\n                            : \"Unknown Institute\"}\n                        </span>\n                      </div>\n                    ) : this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.default_access &&\n                      getRoleById(\n                        this.props.roleList,\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.default_access!.system_user_role_id\n                      ).district_required ? (\n                      <div className=\"flex items-center gap-1\">\n                        <span className=\"text-gray-500\">District:</span>\n                        <span className=\"text-base font-medium\">\n                          {this.props.users.find(\n                            (user) => user.user_id === this.state.manageUserId\n                          )!.default_access &&\n                            this.state.roomList &&\n                            distinctDistrict(this.state.roomList).find(\n                              (item) =>\n                                item.district_id ===\n                                this.props.users.find(\n                                  (user) =>\n                                    user.user_id === this.state.manageUserId\n                                )!.default_access!.district_id\n                            ) &&\n                            distinctDistrict(this.state.roomList).find(\n                              (item) =>\n                                item.district_id ===\n                                this.props.users.find(\n                                  (user) =>\n                                    user.user_id === this.state.manageUserId\n                                )!.default_access!.district_id\n                            )!.district_name}\n                        </span>\n                      </div>\n                    ) : this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.default_access &&\n                      getRoleById(\n                        this.props.roleList,\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.default_access!.system_user_role_id\n                      ).school_required ? (\n                      <div className=\"flex items-center gap-1\">\n                        <span className=\"text-gray-500\">School:</span>\n                        <span className=\"text-base font-medium\">\n                          {this.state.schoolList &&\n                          this.state.schoolList.find(\n                            (school) =>\n                              school._id ===\n                              this.props.users.find(\n                                (user) =>\n                                  user.user_id === this.state.manageUserId\n                              )!.default_access?.school_id\n                          )\n                            ? this.state.schoolList.find(\n                                (school) =>\n                                  school._id ===\n                                  this.props.users.find(\n                                    (user) =>\n                                      user.user_id === this.state.manageUserId\n                                  )!.default_access?.school_id\n                              )!.school_name\n                            : \"Unknown school\"}\n                        </span>\n                      </div>\n                    ) : (\n                      this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.default_access &&\n                      getRoleById(\n                        this.props.roleList,\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.default_access!.system_user_role_id\n                      ).room_required && (\n                        <div className=\"flex items-center gap-1\">\n                          {/* <span className=\"text-gray-500\">Room:</span> */}\n                          <MdLocationOn className=\"text-gray-500\" />\n                          {this.state.roomTable && (\n                            <span className=\"text-base font-medium\">\n                              {this.state.roomTable.find(\n                                (room) =>\n                                  room.room_id ===\n                                  this.props.users.find(\n                                    (user) =>\n                                      user.user_id === this.state.manageUserId\n                                  )!.default_access?.room_id\n                              )?.district_name +\n                                \" - \" +\n                                this.state.roomTable.find(\n                                  (room) =>\n                                    room.room_id ===\n                                    this.props.users.find(\n                                      (user) =>\n                                        user.user_id === this.state.manageUserId\n                                    )!.default_access?.room_id\n                                )?.center_name +\n                                \" - Room \" +\n                                this.state.roomTable.find(\n                                  (room) =>\n                                    room.room_id ===\n                                    this.props.users.find(\n                                      (user) =>\n                                        user.user_id === this.state.manageUserId\n                                    )!.default_access?.room_id\n                                )?.room_name}\n                            </span>\n                          )}\n                        </div>\n                      )\n                    )}\n                  </div>\n                </div>\n              ) : (\n                <NoResult\n                  theme={NoResultThemes.Dark}\n                  value={\"User info not found\"}\n                />\n              )}\n              {this.props.users.find(\n                (user) => user.user_id === this.state.manageUserId\n              ) && (\n                <div\n                  key={\n                    this.props.users.find(\n                      (user) => user.user_id === this.state.manageUserId\n                    )!.user_id + Math.random()\n                  }\n                  className=\"flex flex-col w-full\"\n                >\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-gray-500\">NID:</span>\n                    <span className=\"text-base font-medium\">\n                      {\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.n_id\n                      }\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-gray-500\">Email:</span>\n                    <span className=\"text-base font-medium\">\n                      {\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.email\n                      }\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-gray-500\">Phone:</span>\n                    <span className=\"text-base font-medium\">\n                      {\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.phone_number\n                      }\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-gray-500\">Status:</span>\n                    <span className=\"text-base font-medium\">\n                      {this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.is_active === false\n                        ? \"Blocked\"\n                        : \"Active\"}\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    {this.props.users.find(\n                      (user) => user.user_id === this.state.manageUserId\n                    )!.custome_access && (\n                      <button\n                        className={`px-2 py-1 font-semibold text-gray-50 inline-flex items-center rounded ${\n                          this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"RESET\"\n                            ? \"cursor-wait bg-gray-400\"\n                            : \"bg-gray-600\"\n                        }`}\n                        onClick={() =>\n                          this.restUserAccess(\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.user_id\n                          )\n                        }\n                        disabled={this.state.loadingRequest}\n                      >\n                        <MdLock className=\"w-4 h-4 fill-current\" />\n                        <span>\n                          {this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"RESET\"\n                            ? \"Reseting...\"\n                            : \"Reset Access\"}\n                        </span>\n                      </button>\n                    )}\n                    {!this.props.changeRole && (\n                      <button\n                        className=\"bg-yellow-300 hover:bg-yellow-400 px-2 py-1 font-semibold text-black inline-flex items-center rounded\"\n                        onClick={() => this.props.setChangeRole(true)}\n                      >\n                        <MdLock className=\"w-4 h-4 fill-current\" />\n                        <span>Change Role</span>\n                      </button>\n                    )}\n                    {this.props.users.find(\n                      (user) => user.user_id === this.state.manageUserId\n                    )!.is_active ? (\n                      <button\n                        className={`px-2 py-1 font-semibold text-gray-100 inline-flex items-center rounded ${\n                          this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"STATUS\"\n                            ? \"cursor-wait bg-red-500\"\n                            : \"bg-red-700\"\n                        }`}\n                        onClick={() =>\n                          !this.state.loadingRequest &&\n                          this.props.manageUser &&\n                          this.blockUser(\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.user_id,\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.is_active\n                          )\n                        }\n                        disabled={this.state.loadingRequest}\n                      >\n                        <MdLock className=\"w-4 h-4 fill-current\" />\n                        <span>\n                          {this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"RESET\"\n                            ? \"Loading...\"\n                            : \"Block user\"}\n                        </span>\n                      </button>\n                    ) : (\n                      <button\n                        className={`px-2 py-1 font-semibold text-gray-100 inline-flex items-center rounded ${\n                          this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"STATUS\"\n                            ? \"cursor-wait bg-yellow-500\"\n                            : \"bg-yellow-700\"\n                        }`}\n                        onClick={() =>\n                          !this.state.loadingRequest &&\n                          this.props.manageUser &&\n                          this.blockUser(\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.user_id,\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.is_active\n                          )\n                        }\n                        disabled={this.state.loadingRequest}\n                      >\n                        <MdLock className=\"w-4 h-4 fill-current\" />\n                        <span>\n                          {this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"RESET\"\n                            ? \"Loading...\"\n                            : \"Re-Activate\"}\n                        </span>\n                      </button>\n                    )}\n                  </div>\n                </div>\n              )}\n            </div>\n            {/* end header */}\n\n            {/* content */}\n            {this.props.manageUser &&\n            this.state.roomList &&\n            this.props.changeRole ? (\n              <UserRole\n                userInfo={this.props.manageUser}\n                roleList={this.props.roleList}\n                district={this.distinctDistrict(this.state.roomList)}\n                schoolList={this.state.schoolList}\n                roomList={this.state.roomList}\n                setChangeRole={this.props.setChangeRole}\n                currentPage={this.props.currentPage}\n              />\n            ) : (\n              <UserAccess\n                userInfo={getUserById(\n                  this.props.users,\n                  this.state.manageUserId\n                )}\n                manageUserId={this.state.manageUserId}\n                setUserAccess={this.setUserAccess}\n                userAccess={this.state.userAccess}\n                setCurrentAccess={this.setCurrentAccess}\n                currentAccess={this.state.currentAccess}\n                currentPage={this.props.currentPage}\n              />\n            )}\n            {/* end content */}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  schoolLevels,\n  schools,\n  locations,\n}: StoreState): {\n  schoolLevels: schoolLevelsStoreInterface;\n  schools: SchoolsInterface[];\n  allRoom: RoomLocationInterface[];\n} => {\n  return {\n    schoolLevels,\n    schools: schools.schools,\n    allRoom: locations.roomLocation,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    blockUserToSystem,\n    unBlockUserToSystem,\n    resetUserAccess,\n    getSchools,\n    getAllRoom,\n    PushPopupAlert,\n  })(UserList)\n);\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { capitalizeFirstLetter } from \"../../shared/dataTest\";\nimport { SystemUserRoleInterface } from \"../../shared/interfaces\";\nimport search from \"../../utils/search\";\n\n// const searchRole = (\n//   objList: SystemUserRoleInterface[],\n//   text: string\n// ): SystemUserRoleInterface[] => {\n//   return objList.filter(\n//     (product) => product.role.toLocaleLowerCase() === text.toLocaleLowerCase()\n//   );\n// };\n\ntype RoleListProps = {\n  setChooseRole: (value: boolean) => void;\n  roleList: SystemUserRoleInterface[];\n  handleSelectRole: (role_id: string, TYPE?: \"SELECT\" | \"DEFAULT\") => void;\n  loadindRequest: boolean;\n};\n\nconst RoleList: React.FC<RoleListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section className=\"border-2 rounded border-gray-400\">\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={props.roleList.length > 0 ? false : true}\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseRole(false);\n          }}\n        >\n          Close\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}\n\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {search(props.roleList, searchInput).length > 0 ? (\n          search(props.roleList, searchInput).map((role, index) => (\n            <section key={index + role.role}>\n              <div className=\"group flex items-center justify-between my-1 hover:bg-gray-100\">\n                <div\n                  className=\"p-1 w-full mr-2 cursor-pointer\"\n                  onClick={() => {\n                    props.setChooseRole(false);\n                    !props.loadindRequest &&\n                      props.handleSelectRole(role.system_user_role_id);\n                  }}\n                >\n                  <p className=\"text-sm font-medium text-black\">\n                    {capitalizeFirstLetter(role.role)}\n                  </p>\n                </div>\n                <button\n                  type=\"button\"\n                  className=\"bg-blue-200 group-hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                >\n                  Choose\n                </button>\n              </div>\n            </section>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No role available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default React.memo(RoleList);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { MdHighlightOff } from \"react-icons/md\";\nimport { TiInputChecked } from \"react-icons/ti\";\nimport { connect } from \"react-redux\";\nimport { schoolLevelsStoreInterface, PushPopupAlert } from \"../../actions\";\nimport { assignRoleToUserAccess } from \"../../actions/users\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport Loading from \"../../components/Loading/Loading\";\nimport Table from \"../../components/Table/Table\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport {\n  UserInterface,\n  SystemUserRoleInterface,\n  DistrictInterface,\n  SchoolsInterface,\n  RoomLocationInterface,\n  AssignRoleToUserActionInterface,\n  LocationRoomTableInterface,\n  RoleToUserInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport RoleList from \"./RoleList\";\nimport { LocationsInArray } from \"./UserList\";\n\ninterface AppProps {\n  currentPage: number;\n  userInfo: UserInterface;\n  roleList: SystemUserRoleInterface[];\n  district: DistrictInterface[];\n  assignRoleToUserAccess: Function;\n  schoolList: SchoolsInterface[] | null;\n  roomList: RoomLocationInterface[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  setChangeRole: (value: boolean) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface AppState {\n  loading: boolean;\n  loadingForm: boolean;\n  loadingRequest: boolean;\n  roleId: string;\n  provinceId: string;\n  districtId: string;\n  schoolId: string;\n  roomId: string;\n  instituteId: string;\n  centerId: string;\n  selectedRole: SystemUserRoleInterface | null;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  chooseRole: boolean;\n  chooseSchool: boolean;\n}\n\nclass UserRole extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingForm: true,\n      loadingRequest: false,\n      roleId: \"\",\n      provinceId: \"\",\n      districtId: \"\",\n      schoolId: \"\",\n      roomId: \"\",\n      instituteId: \"\",\n      centerId: \"\",\n      selectedRole: null,\n      formError: null,\n      chooseRole: false,\n      chooseSchool: false,\n    };\n  }\n\n  setRoleId = (value: string) => {\n    this.setState({ roleId: value });\n  };\n\n  setSelectedRole = (value: SystemUserRoleInterface | null) => {\n    this.setState({ selectedRole: value });\n  };\n\n  setProvinceId = (value: string) => {\n    this.setState({ provinceId: value });\n  };\n\n  setDistrictId = (value: string) => {\n    this.setState({ districtId: value });\n  };\n\n  setCenterId = (value: string) => {\n    this.setState({ centerId: value });\n  };\n\n  setRoomId = (value: string) => {\n    this.setState({ roomId: value });\n  };\n\n  setLoadingForm = (value: boolean) => {\n    this.setState({ loadingForm: value });\n  };\n\n  setSchoolId = (value: string) => {\n    this.setState({ schoolId: value });\n  };\n\n  setChooseSchool = (value: boolean) => {\n    this.setState({ chooseSchool: value });\n  };\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setInstituteId = (value: string) => {\n    this.setState({ instituteId: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n  setChooseRole = (value: boolean) => {\n    this.setState({ chooseRole: value });\n  };\n\n  setDefaultState = (\n    default_access: RoleToUserInterface,\n    role: SystemUserRoleInterface\n  ) => {\n    // SET DEFAULT PROVINCE && DISTRICT ID =======================\n    let LOAD_province: LocationRoomTableInterface | undefined;\n    let LOAD_district: DistrictInterface | undefined;\n    if (role.district_required && this.props.roomList) {\n      LOAD_district = this.distinctDistrict(this.props.roomList).find(\n        (item) => item._id === default_access!.district_id\n      );\n      LOAD_district && this.setProvinceId(LOAD_district.province_id);\n      LOAD_district && this.setDistrictId(default_access!.district_id);\n      this.setLoadingForm(false);\n    } else if (role.room_required && this.props.roomList) {\n      // SET DEFAULT PROVINCE && DISTRICT && ROOM ID =======================\n\n      LOAD_province = LocationsInArray(this.props.roomList).find(\n        (item) => item.room_id === default_access!.room_id\n      );\n      LOAD_province && this.setProvinceId(LOAD_province.province_id);\n      LOAD_province && this.setDistrictId(LOAD_province.district_id);\n      LOAD_province && this.setCenterId(LOAD_province.center_id);\n      this.setRoomId(default_access.room_id);\n      this.setLoadingForm(false);\n    } else if (\n      role.school_required &&\n      this.props.roomList &&\n      this.props.schoolList\n    ) {\n      // SET DEFAULT PROVINCE && DISTRICT && SCHOOL ID =======================\n      let LOAD_school: SchoolsInterface | undefined =\n        this.props.schoolList.find(\n          (item) => item._id === default_access!.school_id\n        );\n      if (LOAD_school) {\n        LOAD_province = LocationsInArray(this.props.roomList).find(\n          (item) => item.district_id === LOAD_school?.district_id\n        );\n        LOAD_province && this.setProvinceId(LOAD_province.province_id);\n        LOAD_province && this.setDistrictId(LOAD_province.district_id);\n        this.setSchoolId(default_access.school_id);\n        this.setLoadingForm(false);\n      } else {\n        this.setLoadingForm(false);\n      }\n    } else {\n      this.setLoadingForm(false);\n    }\n  };\n\n  componentDidMount = () => {\n    if (this.props.roleList.length) {\n      if (this.props.userInfo.default_access && this.state.loadingForm) {\n        // SET DEFAULT ROLE ID =======================\n        if (!this.state.roleId.length) {\n          let result = this.props.roleList.find(\n            (role) =>\n              role.system_user_role_id ===\n              this.props.userInfo.default_access!.system_user_role_id\n          );\n          if (result) {\n            this.setRoleId(\n              this.props.userInfo.default_access.system_user_role_id\n            );\n            this.setSelectedRole(result);\n            this.setDefaultState(this.props.userInfo.default_access, result);\n          }\n        }\n\n        console.log(\"====================================\");\n        console.log({ vvvvv: this.props.userInfo.default_access });\n        console.log(\"====================================\");\n      }\n\n      if (this.state.selectedRole && this.props.userInfo.default_access) {\n        this.setDefaultState(\n          this.props.userInfo.default_access,\n          this.state.selectedRole\n        );\n      }\n\n      this.setLoading(false);\n    }\n  };\n\n  handleSelectRole = (\n    role_id: string,\n    TYPE: \"SELECT\" | \"DEFAULT\" = \"SELECT\"\n  ) => {\n    if (this.props.roleList) {\n      let result = this.props.roleList.find(\n        (role) => role.system_user_role_id === role_id\n      );\n      if (result) {\n        this.setRoleId(role_id);\n        this.setSelectedRole(result);\n        this.state.formError &&\n          this.state.formError.element === \"role_id\" &&\n          this.setFormError(null);\n\n        if (TYPE === \"SELECT\") {\n          this.setProvinceId(\"\");\n          this.setDistrictId(\"\");\n          this.setSchoolId(\"\");\n          this.setCenterId(\"\");\n          this.setRoomId(\"\");\n          this.setInstituteId(\"\");\n        }\n      }\n    }\n  };\n\n  tableData = (): JSX.Element[] => {\n    if (\n      this.state.roleId.length > 0 &&\n      this.state.selectedRole === null &&\n      this.props.roleList\n    ) {\n      this.handleSelectRole(this.state.roleId, \"DEFAULT\");\n    }\n    if (this.state.selectedRole) {\n      return this.state.selectedRole.access.map((access, i) => (\n        <tr\n          key={i + access.id + Math.random()}\n          className={`text-left border-b border-gray-200 hover:bg-gray-100`}\n        >\n          <td className=\"px-2 py-1\">\n            <label className=\"inline-flex items-center\">\n              <span className=\"text-gray-900 capitalize text-xl font-normal cursor-pointer\">\n                {access.task}\n              </span>\n            </label>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.create ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.create ? (\n                <TiInputChecked />\n              ) : (\n                <MdHighlightOff />\n              )}\n              {access.permitted.create ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.view ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.view ? <TiInputChecked /> : <MdHighlightOff />}\n              {access.permitted.view ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.update ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.update ? (\n                <TiInputChecked />\n              ) : (\n                <MdHighlightOff />\n              )}\n              {access.permitted.update ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.delete ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.delete ? (\n                <TiInputChecked />\n              ) : (\n                <MdHighlightOff />\n              )}\n              {access.permitted.delete ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n        </tr>\n      ));\n    }\n    const optionB = [\n      <tr key=\"55re\">\n        <td colSpan={5} className=\"text-center px-2 py-2\">\n          No Default Access Available on this Role.\n        </td>\n      </tr>,\n    ];\n    return optionB;\n  };\n\n  assignRoleToUser = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!window.confirm(`Are sure you want to change user role?`)) {\n      return false;\n    }\n\n    if (!this.state.selectedRole) {\n      return this.setFormError({\n        element: \"role_id\",\n        msg: \"User role is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.room_required === true &&\n      isEmptyOrSpaces(this.state.provinceId)\n    ) {\n      return this.setFormError({\n        element: \"province_id\",\n        msg: \"Province is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.education_institution_required === true &&\n      isEmptyOrSpaces(this.state.instituteId)\n    ) {\n      return this.setFormError({\n        element: \"institute_id\",\n        msg: \"Institute is required on this role!\",\n      });\n    }\n\n    if (\n      (this.state.selectedRole.room_required === true ||\n        this.state.selectedRole.district_required === true) &&\n      isEmptyOrSpaces(this.state.districtId)\n    ) {\n      return this.setFormError({\n        element: \"district_id\",\n        msg: \"District is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.school_required === true &&\n      isEmptyOrSpaces(this.state.schoolId)\n    ) {\n      return this.setFormError({\n        element: \"school_id\",\n        msg: \"School is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.room_required === true &&\n      isEmptyOrSpaces(this.state.centerId)\n    ) {\n      return this.setFormError({\n        element: \"center_id\",\n        msg: \"Center is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.room_required === true &&\n      isEmptyOrSpaces(this.state.roomId)\n    ) {\n      return this.setFormError({\n        element: \"room_id\",\n        msg: \"Room is required!\",\n      });\n    }\n    this.setLoadingRequest(true);\n    let formData: AssignRoleToUserActionInterface = {\n      user_id: this.props.userInfo.user_id,\n      data: {\n        system_user_role_id: this.state.roleId,\n        status: 1,\n        role: this.state.selectedRole.role,\n        access: this.state.selectedRole.access,\n        school_id: this.state.selectedRole.school_required\n          ? this.state.schoolId\n          : \"\",\n        district_id: this.state.selectedRole.district_required\n          ? this.state.districtId\n          : \"\",\n        room_id: this.state.selectedRole.room_required ? this.state.roomId : \"\",\n        education_institution_id: this.state.selectedRole\n          .education_institution_required\n          ? this.state.instituteId\n          : \"\",\n      },\n    };\n\n    try {\n      const res = await axios.post(`${API.AUTH}/addroletouser`, {\n        user_id: this.props.userInfo.user_id,\n        system_user_role_id: this.state.roleId,\n        status: 1,\n        role: this.state.selectedRole.role,\n        access: true,\n        school_id:\n          this.state.selectedRole.school_required === true\n            ? this.state.schoolId\n            : \"\",\n        district_id:\n          this.state.selectedRole.district_required === true\n            ? this.state.districtId\n            : \"\",\n        room_id:\n          this.state.selectedRole.room_required === true\n            ? this.state.roomId\n            : \"\",\n        education_institution_id: this.state.selectedRole\n          .education_institution_required\n          ? this.state.instituteId\n          : \"\",\n      });\n      if (res) {\n        console.log(\"====================================\");\n        console.log({ assignRoleToUser: res });\n        console.log(\"====================================\");\n        this.props.assignRoleToUserAccess(formData, this.props.currentPage);\n        this.setLoadingRequest(false);\n        this.props.setChangeRole(false);\n        this.props.PushPopupAlert({\n          title: \"Assigning Role to User completed successfully\",\n          theme: PopupAlertTheme.success,\n        });\n      }\n    } catch (error) {\n      console.log({ role_error: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  distinctDistrict = (\n    location: RoomLocationInterface[],\n    province_id?: string\n  ): DistrictInterface[] => {\n    let ids: string[] = [],\n      result: DistrictInterface[] = [];\n\n    if (province_id) {\n      result = location.find((item) => item._id === province_id)\n        ? location.find((item) => item._id === province_id)!.districts\n          ? location.find((item) => item._id === province_id)!.districts\n          : []\n        : [];\n    } else {\n      for (const key in location) {\n        if (Object.prototype.hasOwnProperty.call(location, key)) {\n          for (const keyDistrict in location[key].districts) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                location[key].districts,\n                keyDistrict\n              )\n            ) {\n              if (!ids.includes(location[key].districts[keyDistrict]._id)) {\n                ids.push(location[key].districts[keyDistrict]._id);\n                result.push(location[key].districts[keyDistrict]);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return result;\n  };\n\n  distinctCenter = (\n    rooms: RoomLocationInterface[],\n    district_id: string\n  ): LocationRoomTableInterface[] => {\n    let ids: string[] = [],\n      result: LocationRoomTableInterface[] = [];\n\n    LocationsInArray(rooms).forEach((element) => {\n      if (\n        !ids.includes(element.center_id) &&\n        element.district_id === district_id\n      ) {\n        ids.push(element.center_id);\n        result.push(element);\n      }\n    });\n    return result;\n  };\n\n  distinctRoom = (\n    rooms: RoomLocationInterface[],\n    center_id: string\n  ): LocationRoomTableInterface[] => {\n    let ids: string[] = [],\n      result: LocationRoomTableInterface[] = [];\n\n    LocationsInArray(rooms).forEach((element) => {\n      if (!ids.includes(element.room_id) && element.center_id === center_id) {\n        ids.push(element.room_id);\n        result.push(element);\n      }\n    });\n    return result;\n  };\n\n  render() {\n    if (\n      this.state.loading === true ||\n      this.state.loadingForm ||\n      this.props.userInfo.default_access === null ||\n      this.state.roleId.length === 0 ||\n      this.state.selectedRole === null\n    ) {\n      return (\n        <div className=\"text-center py-7 font-bold text-3xl text-gray-400 animate-pulse\">\n          Loading...\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 py-2 md:py-4 px-2 md:px-0\">\n        {/* left panel */}\n        <div className=\"col-span-1 bg-white w-full overflow-x-auto border rounded\">\n          <div className=\"px-6 md:px-12 py-5 bg-white mx-auto rounded-2xl w-100\">\n            <h3 className=\"font-semibold text-2xl text-gray-800 mb-4\">\n              Change User Role\n            </h3>\n            {this.state.loadingForm ? (\n              <Loading />\n            ) : (\n              <form onSubmit={(e) => this.assignRoleToUser(e)}>\n                <div className=\"space-y-5\">\n                  <div className=\"space-y-2\">\n                    <label className=\"text-sm font-medium text-gray-700 tracking-wide\">\n                      User Role\n                    </label>\n\n                    {!this.state.chooseRole && (\n                      <div\n                        className={`w-full text-base bg-white text-grey-darker cursor-pointer border-2 px-4 py-3 rounded focus:outline-none focus:bg-gray-100 ${\n                          this.state.formError &&\n                          this.state.formError.element === \"role_id\"\n                            ? \"border-red-500\"\n                            : \"border-gray-400\"\n                        }`}\n                        onClick={() => {\n                          !this.state.loadingRequest &&\n                            this.setChooseRole(true);\n                          !this.state.loadingRequest && this.setFormError(null);\n                        }}\n                      >\n                        {this.state.selectedRole\n                          ? this.state.selectedRole.role\n                          : \"Select role\"}\n                      </div>\n                    )}\n\n                    {this.state.chooseRole && (\n                      <RoleList\n                        setChooseRole={this.setChooseRole}\n                        handleSelectRole={this.handleSelectRole}\n                        roleList={this.props.roleList}\n                        loadindRequest={this.state.loadingRequest}\n                      />\n                    )}\n\n                    {this.state.formError &&\n                      this.state.formError.element === \"role_id\" && (\n                        <span className=\"text-red-500\">\n                          {this.state.formError.msg}\n                        </span>\n                      )}\n                  </div>\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.education_institution_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Institute\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"institute_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setInstituteId(e.target.value);\n                            this.setProvinceId(\"\");\n                            this.setDistrictId(\"\");\n                            this.setSchoolId(\"\");\n                            this.setCenterId(\"\");\n                            this.setRoomId(\"\");\n                            this.state.formError &&\n                              this.state.formError.element === \"institute_id\" &&\n                              this.setFormError(null);\n                          }}\n                          disabled={this.state.loadingRequest}\n                          value={this.state.instituteId}\n                        >\n                          <option value=\"\">Select institute</option>\n                          {this.props.schoolLevels.education_categories &&\n                          this.props.schoolLevels.education_categories.length >\n                            0 ? (\n                            this.props.schoolLevels.education_categories.map(\n                              (institute) => (\n                                <option\n                                  value={institute.education_institute_id}\n                                  key={\n                                    institute.education_institute_id +\n                                    Math.random()\n                                  }\n                                >\n                                  {institute.education_category_title}\n                                </option>\n                              )\n                            )\n                          ) : (\n                            <option value=\"\" disabled>\n                              No institute available\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"institute_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.room_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Province\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"province_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setProvinceId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"province_id\" &&\n                              this.setFormError(null);\n                            this.setDistrictId(\"\");\n                            this.setSchoolId(\"\");\n                            this.setCenterId(\"\");\n                            this.setRoomId(\"\");\n                          }}\n                          value={this.state.provinceId}\n                          disabled={this.state.loadingRequest}\n                        >\n                          <option value=\"\">Select province</option>\n                          {this.props.roomList &&\n                            this.props.roomList.map((province) => (\n                              <option\n                                key={province._id + Math.random()}\n                                value={province._id}\n                              >\n                                {province.province_name}\n                              </option>\n                            ))}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"province_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n                  {this.state.selectedRole &&\n                    (this.state.selectedRole.district_required ||\n                      this.state.selectedRole.room_required) && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          District\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"district_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setDistrictId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"district_id\" &&\n                              this.setFormError(null);\n                            this.setSchoolId(\"\");\n                            this.setCenterId(\"\");\n                            this.setRoomId(\"\");\n                          }}\n                          value={this.state.districtId}\n                          disabled={this.state.loadingRequest}\n                        >\n                          <option value=\"\">Select district</option>\n                          {this.props.roomList &&\n                          this.distinctDistrict(\n                            this.props.roomList,\n                            !isEmptyOrSpaces(this.state.provinceId)\n                              ? this.state.provinceId\n                              : undefined\n                          ).length > 0 ? (\n                            this.distinctDistrict(\n                              this.props.roomList,\n                              !isEmptyOrSpaces(this.state.provinceId)\n                                ? this.state.provinceId\n                                : undefined\n                            ).map((district) => (\n                              <option\n                                key={district._id + Math.random()}\n                                value={district._id}\n                              >\n                                {district.district_name}\n                              </option>\n                            ))\n                          ) : (\n                            <option value=\"\" disabled>\n                              No district found\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"district_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.school_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          School\n                        </label>\n                        {/* {!this.state.chooseSchool && (\n                          <div\n                            className={`w-full text-base bg-white text-grey-darker cursor-pointer border-2 px-4 py-3 rounded focus:outline-none focus:bg-gray-100 ${\n                              this.state.formError &&\n                              this.state.formError.element === \"school_id\"\n                                ? \"border-red-500\"\n                                : \"border-gray-400\"\n                            }`}\n                            onClick={() => {\n                              !this.state.loadingRequest &&\n                                this.setChooseSchool(true);\n                              !this.state.loadingRequest &&\n                                this.setFormError(null);\n                            }}\n                          >\n                            {this.state.schoolId\n                              ? this.state.schoolId\n                              : \"Select school\"}\n                          </div>\n                        )}\n\n                        {this.state.chooseSchool && (\n                          <ChooseSchoolById\n                            allSchool={this.props.schoolList}\n                            setSelectSchool={(school_id: string) => {\n                              this.setSchoolId(school_id);\n                              this.state.formError &&\n                                this.state.formError.element === \"school_id\" &&\n                                this.setFormError(null);\n                              this.setCenterId(\"\");\n                              this.setRoomId(\"\");\n                            }}\n                            currentSelected={this.state.schoolId}\n                            setChooseSchool={this.setChooseSchool}\n                          />\n                        )} */}\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"school_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setSchoolId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"school_id\" &&\n                              this.setFormError(null);\n                            this.setCenterId(\"\");\n                            this.setRoomId(\"\");\n                          }}\n                          disabled={this.state.loadingRequest}\n                          value={this.state.schoolId}\n                        >\n                          <option value=\"\">Selected school</option>\n                          {this.props.schoolList &&\n                            this.props.schoolList.map((school) => (\n                              <option\n                                value={school._id}\n                                key={school._id + Math.random()}\n                              >\n                                {school.school_name}\n                              </option>\n                            ))}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"school_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.room_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Center\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"center_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setCenterId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"center_id\" &&\n                              this.setFormError(null);\n                            this.setRoomId(\"\");\n                          }}\n                          disabled={this.state.loadingRequest}\n                          value={this.state.centerId}\n                        >\n                          <option value=\"\">Select center</option>\n                          {this.state.districtId &&\n                          this.state.districtId.length > 0 &&\n                          this.props.roomList &&\n                          this.distinctCenter(\n                            this.props.roomList,\n                            this.state.districtId\n                          ).length > 0 ? (\n                            this.distinctCenter(\n                              this.props.roomList,\n                              this.state.districtId\n                            ).map((center, index) => (\n                              <option\n                                value={center.center_id}\n                                key={center.center_id + index + Math.random()}\n                              >\n                                {center.center_name}\n                              </option>\n                            ))\n                          ) : (\n                            <option value=\"\" disabled>\n                              No center found\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"center_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.room_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Room\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"room_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setRoomId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"room_id\" &&\n                              this.setFormError(null);\n                          }}\n                          disabled={this.state.loadingRequest}\n                          value={this.state.roomId}\n                        >\n                          <option value=\"\">Select room</option>\n                          {!isEmptyOrSpaces(this.state.centerId) &&\n                          this.props.roomList &&\n                          this.distinctRoom(\n                            this.props.roomList,\n                            this.state.centerId\n                          ).length > 0 ? (\n                            this.distinctRoom(\n                              this.props.roomList,\n                              this.state.centerId\n                            ).map((room, index) => (\n                              <option\n                                value={room.room_id}\n                                key={room.room_id + index + Math.random()}\n                                className={`${\n                                  room.room_name === \"0\" ? \"hidden\" : \"block\"\n                                }`}\n                              >\n                                {room.room_name}\n                              </option>\n                            ))\n                          ) : (\n                            <option value=\"\" disabled>\n                              No room found\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"room_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  <div className=\"flex justify-between 2xl:justify-start gap-2\">\n                    <button\n                      className=\"btn bg-gray-500 text-gray-50 focus:outline-none\"\n                      onClick={() => {\n                        this.props.setChangeRole(false);\n                        this.setFormError(null);\n                        this.setProvinceId(\"\");\n                        this.setDistrictId(\"\");\n                        this.setSchoolId(\"\");\n                        this.setCenterId(\"\");\n                        this.setRoomId(\"\");\n                      }}\n                      disabled={this.state.loadingRequest}\n                    >\n                      Back\n                    </button>\n                    <button\n                      className=\"btn btn-blue focus:outline-none\"\n                      // onClick={() => assignRoleToUser()}\n                      disabled={this.state.loadingRequest}\n                    >\n                      {this.state.loadingRequest ? \"Loading...\" : \"Save Change\"}\n                    </button>\n                  </div>\n                </div>\n              </form>\n            )}\n          </div>\n        </div>\n        {/* end left panel */}\n\n        {/* ------------------------------------------------------------ */}\n\n        {/* right panel */}\n        <div className=\"cols-span-1 md:col-span-2 bg-white w-full border rounded text-center p-2 hidden md:block\">\n          <div className=\"my-4\">\n            <span className=\"text-gray-600 font-semibold text-2xl\">\n              {this.state.selectedRole?.role}'s Default Access\n            </span>\n          </div>\n          {!this.state.loading && (\n            <div className=\"overflow-x-auto w-full\">\n              <Table\n                columns={[\n                  {\n                    columnTitle: \"Access Name\",\n                    alignText: \"left\",\n                    padding: \"p-3\",\n                  },\n                  { columnTitle: \"Create\", alignText: \"left\" },\n                  { columnTitle: \"View\", alignText: \"left\" },\n                  { columnTitle: \"Update\", alignText: \"left\" },\n                  { columnTitle: \"Delete\", alignText: \"left\" },\n                ]}\n                rows={this.tableData}\n                pagination={false}\n                search={false}\n                searchBG=\"bg-gray-50\"\n                thColor=\"gray\"\n                tableId=\"defaultAccess\"\n              />\n            </div>\n          )}\n        </div>\n        {/* end right panel */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  schoolLevels,\n}: StoreState): {\n  schoolLevels: schoolLevelsStoreInterface;\n} => {\n  return { schoolLevels };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    assignRoleToUserAccess,\n    PushPopupAlert,\n  })(UserRole)\n);\n","export default __webpack_public_path__ + \"static/media/blank_profile.c3f94521.png\";","import React, { useState } from \"react\";\nimport {\n  MdCheckCircle,\n  MdRadioButtonUnchecked,\n  MdSearch,\n} from \"react-icons/md\";\nimport Loading from \"../../components/Loading/Loading\";\nimport {\n  PlansInterface,\n  SessionPlanInterface,\n  SessionPlanTypeStatus,\n} from \"../../interfaces\";\nimport { DATE } from \"../../utils/functions\";\nimport searchData from \"../../utils/search\";\n\nexport const isPlansActive = (plans: PlansInterface[]): PlansInterface[] => {\n  let today = new Date();\n  let activePlans: PlansInterface[] = [];\n  for (let plan of plans) {\n    let startDate = new Date(plan.start_date);\n    let endDate = new Date(plan.end_date);\n    if (\n      startDate.getTime() <= today.getTime() &&\n      endDate.getTime() >= today.getTime() &&\n      plan.type_status === SessionPlanTypeStatus.OPEN\n    ) {\n      activePlans = [...activePlans, plan];\n    }\n  }\n  return activePlans;\n};\n\ninterface ChooseSessionProps {\n  allSession: SessionPlanInterface[] | null;\n  setSelectSession: (period: SessionPlanInterface | \"all\") => void;\n  currentSelected: SessionPlanInterface | \"all\";\n  chooseAll: boolean;\n}\n\nconst ChooseSession = (props: ChooseSessionProps) => {\n  const [selectedPlan, setSelectedPlan] = useState<SessionPlanInterface | null>(\n    null\n  );\n  const [search, setSearch] = useState<string>(\"\");\n  const getSearch = (\n    period: SessionPlanInterface[],\n    searched: string\n  ): SessionPlanInterface[] => {\n    return searchData(period, searched) as SessionPlanInterface[];\n  };\n\n  return (\n    <div className=\"\">\n      <div className=\"px-3\">\n        <input\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n            setSearch(e.target.value)\n          }\n          type=\"text\"\n          className=\"py-3 px-4 w-full rounded border border-gray-400 mb-3\"\n          placeholder=\"Search by year, name\"\n          disabled={props.allSession === null || props.allSession.length === 0}\n        />\n      </div>\n\n      <div className=\"bg-gray-100 px-3 pt-3 pb-2 rounded-b\">\n        {props.allSession === null ? (\n          <Loading />\n        ) : props.allSession.length === 0 ? (\n          <div className=\"flex flex-col text-gray-400 items-center justify-center mb-2 bg-white py-4\">\n            <MdSearch className=\"text-6xl\" />\n            <div className=\"flex flex-col items-center justify-center\">\n              <span>No session found!</span>\n            </div>\n          </div>\n        ) : (\n          <section>\n            {props.chooseAll && (\n              <div\n                className={`rounded border ${\n                  props.currentSelected === \"all\"\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2 flex flex-col md:flex-row items-start md:items-center md:justify-between`}\n              >\n                <div className=\"flex flex-row items-center gap-3\">\n                  {props.currentSelected === \"all\" ? (\n                    <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                  ) : (\n                    <MdRadioButtonUnchecked\n                      className={`text-gray-300 text-4xl`}\n                    />\n                  )}\n                  <div className=\"flex flex-col\">\n                    <div className={`text-gray-600 font-bold`}>All session</div>\n                  </div>\n                </div>\n                <div\n                  onClick={() => {\n                    props.setSelectSession(\"all\");\n                  }}\n                  className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                >\n                  Select\n                </div>\n              </div>\n            )}\n            {getSearch(props.allSession, search).map((item, i) => (\n              <div\n                key={i + 1}\n                className={`rounded border ${\n                  props.currentSelected !== \"all\" &&\n                  props.currentSelected.session_plan_id === item.session_plan_id\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2`}\n              >\n                <div className=\"flex flex-col md:flex-row items-start md:items-center md:justify-between \">\n                  <div className=\"flex flex-row items-center gap-3\">\n                    {props.currentSelected !== \"all\" &&\n                    props.currentSelected.session_plan_id ===\n                      item.session_plan_id ? (\n                      <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                    ) : (\n                      <MdRadioButtonUnchecked\n                        className={`text-gray-300 text-4xl`}\n                      />\n                    )}\n                    <div className=\"flex flex-col\">\n                      <div\n                        className={`${\n                          props.currentSelected !== \"all\" &&\n                          props.currentSelected.session_plan_id ===\n                            item.session_plan_id\n                            ? \"text-blue-600\"\n                            : \"text-gray-600\"\n                        } font-bold`}\n                      >\n                        {item.session_plan_name}\n                      </div>\n                      <div className=\"text-sm text-gray-500\">\n                        <span>Status: </span>\n                        <span\n                          className={`${\n                            item.is_active === true\n                              ? \"text-gray-900 font-bold underline\"\n                              : \"text-gray-500 italic\"\n                          }`}\n                        >\n                          {item.is_active === true ? \"Active\" : \"Expired\"}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"flex flex-row items-center gap-2\">\n                    {(selectedPlan === null ||\n                      selectedPlan.session_plan_id !==\n                        item.session_plan_id) && (\n                      <div\n                        onClick={() => setSelectedPlan(item)}\n                        className=\"bg-gray-50 group-hover:bg-blue-100 font-semibold text-gray-400 group-hover:text-blue-600 rounded px-3 py-2 cursor-pointer\"\n                      >\n                        Details\n                      </div>\n                    )}\n                    <div\n                      onClick={() => {\n                        props.setSelectSession(item);\n                      }}\n                      className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                    >\n                      Select\n                    </div>\n                    {selectedPlan !== null &&\n                      selectedPlan.session_plan_id === item.session_plan_id && (\n                        <div\n                          onClick={() => setSelectedPlan(null)}\n                          className=\"bg-red-100 group-hover:bg-red-200 font-semibold text-red-600 group-hover:text-red-800 rounded px-3 py-2 cursor-pointer\"\n                        >\n                          Close\n                        </div>\n                      )}\n                  </div>\n                </div>\n                {selectedPlan !== null &&\n                  selectedPlan.session_plan_id === item.session_plan_id && (\n                    <div className=\"bg-white rounded border border-blue-50 mt-2 animate__animated animate__fadeIn\">\n                      <table className=\"w-full\">\n                        <thead className=\"bg-blue-50\">\n                          <tr className=\"text-left\">\n                            <th className=\"px-3 py-3\">#</th>\n                            <th>Plan</th>\n                            <th>Start date</th>\n                            <th>Ending date</th>\n                            <th>Status</th>\n                          </tr>\n                        </thead>\n                        <tbody className=\"text-sm\">\n                          {selectedPlan !== null &&\n                            selectedPlan.session_plan_id ===\n                              item.session_plan_id &&\n                            selectedPlan.plans.length > 0 &&\n                            item.plans.map((plan, i) => (\n                              <tr\n                                key={i + 1}\n                                className={`${\n                                  isPlansActive(item.plans).find(\n                                    (itm) => itm.type_key === plan.type_key\n                                  ) !== undefined\n                                    ? \"bg-blue-100 text-blue-600 font-bold\"\n                                    : \"\"\n                                } text-left border-b border-blue-50`}\n                              >\n                                <td className=\"px-3 py-1\">{i + 1}</td>\n                                <td>{plan.type_title}</td>\n                                <td>{DATE(plan.start_date, \"DD/MM/YYYY\")}</td>\n                                <td>{DATE(plan.end_date, \"DD/MM/YYYY\")}</td>\n                                <td>{plan.type_status}</td>\n                              </tr>\n                            ))}\n                        </tbody>\n                      </table>\n                    </div>\n                  )}\n              </div>\n            ))}\n          </section>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(ChooseSession);\n","import React, { Fragment, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport { connect } from \"react-redux\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { SessionPlanInterface } from \"../../../interfaces\";\nimport { course } from \"../../../interfaces/course\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport {\n  CandidatesFailedSucceeded,\n  ReportUserExamStatus,\n} from \"../../../interfaces/reports\";\nimport { StoreState } from \"../../../reducers\";\nimport { ExamReportReducerType } from \"../../../reducers/exam_report\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { DATE, sortThisArray, timestampToDate } from \"../../../utils/functions\";\nimport { displayStatus } from \"./DoneExamList\";\nimport { getPeriodById } from \"./ExamReport\";\n\n// EXCEL FILE FUNCTIONS ================================\nexport interface CandidateExamPerformanceToPrintInterface {\n  applicant_id: number;\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string;\n  exam_period: string;\n  exam_date: string;\n  exam_start_time: string;\n  exam_end_time: string;\n  applicant_name: string;\n  national_id: string;\n  email: string;\n  phone: string;\n  marks: string;\n  performance_status: string;\n}\n\nexport enum CandidateExamPerformanceReportContentKeyInterface {\n  APPLICANT = \"applicant_name\",\n  N_ID = \"national_id\",\n  EMAIL = \"email\",\n  PHONE = \"phone\",\n  MARKS = \"marks\",\n  STATUS = \"performance_status\",\n  COURSER_NAME = \"course_name\",\n  COURSE_CODE = \"course_code\",\n  SCHOOL_LEVEL = \"school_levels\",\n  PERIOD = \"exam_period\",\n  DATE = \"exam_date\",\n  START_TIME = \"exam_start_time\",\n  END_TIME = \"exam_end_time\",\n}\n\nexport interface CandidateExamPerformanceReportContentInterface {\n  key: CandidateExamPerformanceReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n\nexport const candidateExamPerformanceIsChangeAllowed = (\n  key: CandidateExamPerformanceReportContentKeyInterface\n): boolean => {\n  if (\n    key === CandidateExamPerformanceReportContentKeyInterface.COURSER_NAME ||\n    key === CandidateExamPerformanceReportContentKeyInterface.COURSE_CODE ||\n    key === CandidateExamPerformanceReportContentKeyInterface.PERIOD ||\n    key === CandidateExamPerformanceReportContentKeyInterface.APPLICANT ||\n    key === CandidateExamPerformanceReportContentKeyInterface.N_ID\n  ) {\n    return false;\n  }\n  return true;\n};\n\nexport const defaultCandidateExamPerformanceContent: CandidateExamPerformanceReportContentInterface[] =\n  [\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.APPLICANT,\n      title: \"Applicant names\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.N_ID,\n      title: \"National ID\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.EMAIL,\n      title: \"Email\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.PHONE,\n      title: \"Phone\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.MARKS,\n      title: \"Marks\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.COURSER_NAME,\n      title: \"Course names\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.COURSE_CODE,\n      title: \"Course code\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.SCHOOL_LEVEL,\n      title: \"School levels\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.PERIOD,\n      title: \"Exam period\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.DATE,\n      title: \"Exam date\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.START_TIME,\n      title: \"Exam start time\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.END_TIME,\n      title: \"Exam end time\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.STATUS,\n      title: \"Status\",\n      status: true,\n    },\n  ];\n// END EXCEL FILE FUNCTIONS ================================\n\nexport interface candidatePerfomranceStateInterface {\n  user_id: string;\n  user_name: string;\n  national_id: string;\n  user_email: string;\n  user_phone: string;\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n  exam: CandidatesFailedSucceeded;\n  user_total_marks: number;\n  exam_stastus: ReportUserExamStatus;\n}\n\nexport const FC_reportCandidatePerformanceData = (\n  allCourses: course[],\n  data: CandidatesFailedSucceeded[],\n  course_id: string\n): candidatePerfomranceStateInterface[] => {\n  let result: candidatePerfomranceStateInterface[] = [],\n    ids: string[] = [];\n  for (const key in data) {\n    if (Object.prototype.hasOwnProperty.call(data, key)) {\n      if (!ids.includes(data[key]._id)) {\n        ids.push(data[key]._id);\n        let courser = allCourses.find(\n          (item) => item.course_id === data[key].course\n        );\n        if (courser) {\n          result.push({\n            user_id: data[key].user.user_id,\n            user_name:\n              capitalizeFirstLetter(data[key].user.user_info.lname) +\n              \" \" +\n              capitalizeFirstLetter(data[key].user.user_info.fname),\n            national_id: data[key].user.n_id ? data[key].user.n_id : \"\",\n            user_email: data[key].user.email,\n            user_phone: data[key].user.phone_number,\n            course_name: courser.course_name,\n            course_code: courser.course_code,\n            description: courser.description,\n            school_levels: courser.school_levels,\n            course_id: courser.course_id,\n            exam: data[key],\n            user_total_marks: data[key].total_marks,\n            exam_stastus: data[key].user_status,\n          });\n        }\n      }\n    }\n  }\n\n  if (course_id !== \"all\") {\n    result = result.filter((item) => item.course_id === course_id);\n  }\n  return result;\n};\n\nexport const FC_reportCandidatePerformanceDataFilter = (\n  thisList: candidatePerfomranceStateInterface[],\n  thisValue: ReportUserExamStatus | \"all\"\n): candidatePerfomranceStateInterface[] => {\n  if (thisValue === \"all\") {\n    return thisList;\n  } else {\n    return thisList.filter((item) => item.exam_stastus === thisValue);\n  }\n};\n\nexport const searchCandidatePerformanceData = (\n  objList: candidatePerfomranceStateInterface[],\n  text: string\n): candidatePerfomranceStateInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (\n        prop === \"course_name\" ||\n        prop === \"course_code\" ||\n        prop === \"user_total_marks\" ||\n        prop === \"exam_stastus\" ||\n        prop === \"description\" ||\n        prop === \"user_name\" ||\n        prop === \"user_phone\" ||\n        prop === \"user_email\" ||\n        prop === \"national_id\"\n      ) {\n        flag =\n          product[prop].toString().toLowerCase().indexOf(text.toLowerCase()) >\n          -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n};\n\nexport const controlRowsByStatus = (status: string): string => {\n  if (status === \"Done\") {\n    return \"bg-blue-50 border-gray-300 hover:border-blue-500 border-t border-b\";\n  }\n  if (status === \"Removed\") {\n    return \"bg-white border-red-300 hover:border-red-500 border-t border-b\";\n  }\n  if (status === \"Paused\") {\n    return \"bg-white border-yellow-300 hover:border-yellow-500 border-t border-b\";\n  }\n  return \"bg-white border-gray-300 hover:border-blue-500 border-t border-b\";\n};\n\ntype CandidatePerformanceProps = {\n  loading: boolean;\n  examsListData: ExamItemResponse[] | null;\n  courseListData: course[] | null;\n  thisPeriod: SessionPlanInterface[];\n  candidatePerformanceData: CandidatesFailedSucceeded[] | null;\n\n  // redux props ============\n  adminExamReport: ExamReportReducerType;\n  // FOR APPLICANT PERFORMANCE PROPS\n  filterApplicantPerformance: ReportUserExamStatus | \"all\";\n};\n\nconst CandidatePerformance: React.FC<CandidatePerformanceProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const [isSorted, setIsSorted] = useState<boolean>(false);\n  const [sortProperty, setSortProperty] = useState<string>(\"\");\n  const [sortOrder, setSortOrder] = useState<\"ASC\" | \"DESC\">(\"ASC\");\n\n  const setSort = (thisProperty: string) => {\n    if (sortProperty === thisProperty && sortOrder === \"ASC\") {\n      setSortOrder(\"DESC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    } else {\n      setSortOrder(\"ASC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    }\n  };\n\n  return (\n    <Fragment>\n      <div className=\"bg-white my-4\">\n        <div className=\"w-full px-2 py-2\">\n          <input\n            onChange={(e) => setSearchInput(e.target.value)}\n            type=\"text\"\n            value={searchInput}\n            placeholder=\"Search...\"\n            className=\"w-full bg-gray-100 py-2 px-3 rounded\"\n            disabled={\n              props.courseListData &&\n              props.candidatePerformanceData &&\n              FC_reportCandidatePerformanceDataFilter(\n                FC_reportCandidatePerformanceData(\n                  props.courseListData,\n                  props.candidatePerformanceData,\n                  props.adminExamReport.reportCourseId\n                    ? props.adminExamReport.reportCourseId.course_id\n                    : \"all\"\n                ),\n                props.filterApplicantPerformance\n              ).length <= 0\n                ? true\n                : false\n            }\n          />\n        </div>\n        <div className=\"w-full overflow-x-auto\">\n          <table className=\"w-full shadow\" id=\"report_content\">\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n              <tr>\n                <td className=\"px-2 py-2\">#</td>\n                <td className=\"px-2 py-2\" onClick={() => setSort(\"user_name\")}>\n                  Applicants\n                </td>\n                <td className=\"px-2 py-2\">National ID</td>\n                <td className=\"px-2 py-2\">Email</td>\n                <td className=\"px-2 py-2\">Phone</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"course_name\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Exam <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">Exam period</td>\n                <td className=\"px-2 py-2\">Exam date</td>\n                <td className=\"px-2 py-2\">Exam start time</td>\n                <td className=\"px-2 py-2\">Exam end time</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"user_total_marks\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Marks <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">Status</td>\n              </tr>\n            </thead>\n            <tbody>\n              {props.courseListData === null || props.loading ? (\n                <tr>\n                  <td colSpan={12} className=\"px-2 py-2\">\n                    <Loading />\n                  </td>\n                </tr>\n              ) : props.candidatePerformanceData &&\n                FC_reportCandidatePerformanceDataFilter(\n                  FC_reportCandidatePerformanceData(\n                    props.courseListData,\n                    props.candidatePerformanceData,\n                    props.adminExamReport.reportCourseId\n                      ? props.adminExamReport.reportCourseId.course_id\n                      : \"all\"\n                  ),\n                  props.filterApplicantPerformance\n                ).length <= 0 ? (\n                <tr>\n                  <td colSpan={12} className=\"px-2 py-2 text-center\">\n                    No applicant list available!\n                  </td>\n                </tr>\n              ) : (\n                props.candidatePerformanceData &&\n                sortThisArray(\n                  isSorted,\n                  searchCandidatePerformanceData(\n                    FC_reportCandidatePerformanceDataFilter(\n                      FC_reportCandidatePerformanceData(\n                        props.courseListData,\n                        props.candidatePerformanceData,\n                        props.adminExamReport.reportCourseId\n                          ? props.adminExamReport.reportCourseId.course_id\n                          : \"all\"\n                      ),\n                      props.filterApplicantPerformance\n                    ),\n                    searchInput\n                  ),\n                  sortProperty,\n                  sortOrder\n                ).map((item: candidatePerfomranceStateInterface, i) => (\n                  <tr\n                    key={i + 1}\n                    className={`${controlRowsByStatus(\n                      item.exam_stastus\n                    )} text-gray-600 hover:bg-blue-100 hover:text-blue-700 text-sm`}\n                  >\n                    <td className=\"px-2 py-2\">{i + 1}</td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(item.user_name)}\n                    </td>\n                    <td className=\"px-2 py-2\">{item.national_id}</td>\n                    <td className=\"px-2 py-2\">{item.user_email}</td>\n                    <td className=\"px-2 py-2\">{item.user_phone}</td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(item.course_name)} (\n                      <span className=\"font-semibold\">{item.course_code}</span>)\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam\n                        ? getPeriodById(props.thisPeriod, item.exam.period)\n                          ? getPeriodById(props.thisPeriod, item.exam.period)!\n                              .session_plan_name\n                          : \"-\"\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam.exam_date ? DATE(item.exam.exam_date) : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam.start_time\n                        ? timestampToDate(item.exam.start_time).timeAMPM\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam.end_time\n                        ? timestampToDate(item.exam.end_time).timeAMPM\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam_stastus !== ReportUserExamStatus.Editing\n                        ? Number(item.user_total_marks.toFixed(1)) + \"%\"\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(displayStatus(item.exam_stastus))}\n                    </td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  adminExamReport,\n}: StoreState): {\n  adminExamReport: ExamReportReducerType;\n} => {\n  return {\n    adminExamReport,\n  };\n};\n\nexport default React.memo(connect(mapStateToProps, {})(CandidatePerformance));\n","import React, { Fragment, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { SessionPlanInterface } from \"../../../interfaces\";\nimport { course } from \"../../../interfaces/course\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { DATE, sortThisArray } from \"../../../utils/functions\";\n// import searchData from \"../../../utils/search\";\nimport { getPeriodById } from \"./ExamReport\";\n\n// EXCEL INTERFACES ======================================\nexport interface ExamPreparationToPrintInterface {\n  course_id: number;\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string;\n  exam_period: string;\n  exam_date: string;\n  exam_time: string;\n  exam_duration: string;\n  // exam: ExamItemResponse | null;\n  preparation_status: string;\n}\n\nexport enum examPreparationReportContentKeyInterface {\n  \"course_name\" = \"course_name\",\n  \"course_code\" = \"course_code\",\n  SCHOOL_LEVEL = \"school_levels\",\n  PERIOD = \"exam_period\",\n  DATE = \"exam_date\",\n  TIME = \"exam_time\",\n  DURATION = \"exam_duration\",\n  STATUS = \"preparation_status\",\n}\n\nexport interface examPreparationReportContentInterface {\n  key: examPreparationReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n\nexport const defaultExamPreparationReportContent: examPreparationReportContentInterface[] =\n  [\n    {\n      key: examPreparationReportContentKeyInterface.course_name,\n      title: \"Course names\",\n      status: true,\n    },\n    {\n      key: examPreparationReportContentKeyInterface.course_code,\n      title: \"Course code\",\n      status: true,\n    },\n    {\n      key: examPreparationReportContentKeyInterface.SCHOOL_LEVEL,\n      title: \"School levels\",\n      status: true,\n    },\n    {\n      key: examPreparationReportContentKeyInterface.PERIOD,\n      title: \"Exam period\",\n      status: true,\n    },\n    {\n      key: examPreparationReportContentKeyInterface.DATE,\n      title: \"Exam date\",\n      status: true,\n    },\n    {\n      key: examPreparationReportContentKeyInterface.TIME,\n      title: \"Exam time\",\n      status: true,\n    },\n    {\n      key: examPreparationReportContentKeyInterface.DURATION,\n      title: \"Exam duration\",\n      status: true,\n    },\n    {\n      key: examPreparationReportContentKeyInterface.STATUS,\n      title: \"Exam status\",\n      status: true,\n    },\n  ];\n\nexport const examPreparationIsChangeAllowed = (\n  key: examPreparationReportContentKeyInterface\n): boolean => {\n  if (\n    key === examPreparationReportContentKeyInterface.course_name ||\n    key === examPreparationReportContentKeyInterface.course_code\n  ) {\n    return false;\n  }\n  return true;\n};\n// END EXCEL INTERFACES ======================================\n\nexport interface examPreparationStateInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n  exam: ExamItemResponse | null;\n  preparation_status: \"prepared\" | \"not prepared\";\n}\n\nexport const FC_reportExamList = (\n  allCourses: course[],\n  allExams: ExamItemResponse[],\n  period: string = \"\"\n): examPreparationStateInterface[] => {\n  let result: examPreparationStateInterface[] = [],\n    ids: string[] = [];\n  for (const key in allCourses) {\n    if (Object.prototype.hasOwnProperty.call(allCourses, key)) {\n      if (ids.includes(allCourses[key].course_id)) continue;\n      ids.push(allCourses[key].course_id);\n      let exam = !isEmptyOrSpaces(period)\n        ? allExams.find(\n            (item) =>\n              item.course === allCourses[key].course_id &&\n              item.period === period\n          )\n        : allExams.find((item) => item.course === allCourses[key].course_id);\n      if (exam) {\n        result.push({\n          course_name: allCourses[key].course_name,\n          course_code: allCourses[key].course_code,\n          description: allCourses[key].description,\n          school_levels: allCourses[key].school_levels,\n          course_id: allCourses[key].course_id,\n          exam: exam,\n          preparation_status: \"prepared\",\n        });\n      } else {\n        result.push({\n          course_name: allCourses[key].course_name,\n          course_code: allCourses[key].course_code,\n          description: allCourses[key].description,\n          school_levels: allCourses[key].school_levels,\n          course_id: allCourses[key].course_id,\n          exam: null,\n          preparation_status: \"not prepared\",\n        });\n      }\n    }\n  }\n  return result;\n};\n\nexport const FC_reportExamListFilter = (\n  thisList: examPreparationStateInterface[],\n  thisStatus: \"all\" | \"prepared\" | \"not prepared\"\n): examPreparationStateInterface[] => {\n  if (thisStatus === \"all\") {\n    return thisList;\n  } else {\n    return thisList.filter((item) => item.preparation_status === thisStatus);\n  }\n};\n\nexport const searchExamList = (\n  objList: examPreparationStateInterface[],\n  text: string\n): examPreparationStateInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (\n        prop === \"course_name\" ||\n        prop === \"course_code\" ||\n        prop === \"preparation_status\"\n      ) {\n        flag =\n          product[prop].toString().toLowerCase().indexOf(text.toLowerCase()) >\n          -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n};\n\ntype ExamListProps = {\n  loading: boolean;\n  examsListData: ExamItemResponse[] | null;\n  courseListData: course[] | null;\n  thisPeriod: SessionPlanInterface[];\n  // FOR EXAM PREPARATION PROPS =========================================\n  filterPreparation: \"prepared\" | \"not prepared\" | \"all\";\n};\n\nconst ExamList: React.FC<ExamListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const [isSorted, setIsSorted] = useState<boolean>(false);\n  const [sortProperty, setSortProperty] = useState<string>(\"\");\n  const [sortOrder, setSortOrder] = useState<\"ASC\" | \"DESC\">(\"ASC\");\n\n  const setSort = (thisProperty: string) => {\n    if (sortProperty === thisProperty && sortOrder === \"ASC\") {\n      setSortOrder(\"DESC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    } else {\n      setSortOrder(\"ASC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    }\n  };\n\n  return (\n    <Fragment>\n      <div className=\"bg-white my-4\">\n        <div className=\"w-full px-2 py-2\">\n          {props.courseListData && props.examsListData && (\n            <input\n              onChange={(e) => setSearchInput(e.target.value)}\n              type=\"text\"\n              value={searchInput}\n              placeholder=\"Search...\"\n              className=\"w-full bg-gray-100 py-2 px-3 rounded\"\n              disabled={\n                FC_reportExamListFilter(\n                  FC_reportExamList(props.courseListData, props.examsListData),\n                  props.filterPreparation\n                ).length <= 0\n              }\n            />\n          )}\n        </div>\n        <div className=\"w-full overflow-x-auto\">\n          <table className=\"w-full shadow\" id=\"report_content\">\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n              <tr>\n                <td className=\"px-2 py-2\">#</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"course_name\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Course <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">Exam date</td>\n                <td className=\"px-2 py-2\">Exam time</td>\n                <td className=\"px-2 py-2\">Exam duration</td>\n                <td className=\"px-2 py-2\">Exam Period</td>\n                <td className=\"px-2 py-2\">Created at</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"preparation_status\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Exam Status <BiSort />\n                  </div>\n                </td>\n              </tr>\n            </thead>\n            <tbody>\n              {props.courseListData === null || props.loading ? (\n                <tr>\n                  <td colSpan={8} className=\"px-2 py-2\">\n                    <Loading />\n                  </td>\n                </tr>\n              ) : props.courseListData &&\n                props.examsListData &&\n                FC_reportExamListFilter(\n                  FC_reportExamList(props.courseListData, props.examsListData),\n                  props.filterPreparation\n                ).length <= 0 ? (\n                <tr>\n                  <td colSpan={8} className=\"px-2 py-2 text-center\">\n                    No Course for exam found\n                  </td>\n                </tr>\n              ) : (\n                props.examsListData &&\n                sortThisArray(\n                  isSorted,\n                  searchExamList(\n                    FC_reportExamListFilter(\n                      FC_reportExamList(\n                        props.courseListData,\n                        props.examsListData\n                      ),\n                      props.filterPreparation\n                    ),\n                    searchInput\n                  ),\n                  sortProperty,\n                  sortOrder\n                ).map((item, i) => (\n                  <tr\n                    key={i + 1}\n                    className={`${\n                      item.exam ? \"bg-blue-50\" : \"bg-white\"\n                    } text-gray-600 hover:bg-blue-100 hover:text-blue-700 border-b border-gray-300 hover:border-blue-500 text-sm`}\n                  >\n                    <td className=\"px-2 py-2\">{i + 1}</td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(item.course_name)} (\n                      <span className=\"font-semibold\">{item.course_code}</span>)\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam ? DATE(item.exam.exam_date) : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam ? item.exam.start_time : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam ? item.exam!.duration + \" min\" : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam\n                        ? getPeriodById(props.thisPeriod, item.exam.period)\n                          ? getPeriodById(props.thisPeriod, item.exam.period)!\n                              .session_plan_name\n                          : \"-\"\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam ? DATE(item.exam.createdAt) : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(\n                        item.exam ? \"Prepared\" : \"Not prepared\"\n                      )}\n                    </td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default React.memo(ExamList);\n","import React, { useEffect, useState } from \"react\";\nimport { CgFileDocument } from \"react-icons/cg\";\nimport { MdCheckBox, MdCheckBoxOutlineBlank, MdHistory } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  SetReportCourseId,\n  SetReportCourseIdAction,\n  SetReportDistrictId,\n  SetReportDistrictIdAction,\n} from \"../../../actions\";\nimport { getAllRoom } from \"../../../actions/location\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport { SessionPlanInterface } from \"../../../interfaces\";\nimport { StoreState } from \"../../../reducers\";\nimport { isEmptyOrSpaces } from \"../../../shared/dataTest\";\nimport {\n  LocationRoomTableInterface,\n  RoomLocationInterface,\n} from \"../../../shared/interfaces\";\nimport ExportToExcel from \"../../../utils/ExportToExcel\";\nimport ChooseSession from \"../../SessionSettings/ChooseSession\";\nimport { LocationsInArray } from \"../../UserManagement/UserList\";\nimport {\n  CandidateExamPerformanceToPrintInterface,\n  CandidateExamPerformanceReportContentInterface,\n  CandidateExamPerformanceReportContentKeyInterface,\n  candidateExamPerformanceIsChangeAllowed,\n} from \"./CandidatePerformance\";\nimport {\n  examinationProgressIsChangeAllowed,\n  ExaminationProgressReportContentInterface,\n  ExaminationProgressReportContentKeyInterface,\n  ExaminationProgressToPrintInterface,\n  examProgressStateInterface,\n  searchExamData,\n} from \"./DoneExamList\";\nimport {\n  examPreparationReportContentInterface,\n  ExamPreparationToPrintInterface,\n  examPreparationReportContentKeyInterface,\n  examPreparationIsChangeAllowed,\n} from \"./ExamList\";\nimport {\n  ExamPerformanceToPrintInterface,\n  examPerformanceReportContentInterface,\n  examPerformanceReportContentKeyInterface,\n  examPerformanceIsChangeAllowed,\n} from \"./ExamPerformance\";\nimport { reportTitleType } from \"./ExamReport\";\n\nexport const FC_DistinctDistrict = (\n  locations: LocationRoomTableInterface[]\n): LocationRoomTableInterface[] => {\n  var flags: string[] = [],\n    output: LocationRoomTableInterface[] = [],\n    l: number = locations.length,\n    i: number;\n  for (i = 0; i < l; i++) {\n    if (flags.includes(locations[i].district_id)) continue;\n    flags.push(locations[i].district_id);\n    output.push(locations[i]);\n  }\n\n  return output;\n};\n\nexport enum ModalForTypes {\n  title = \"TITLE\",\n  period = \"PERIOD\",\n  generateReportModal = \"GENERATE REPORT\",\n  choose_exam = \"Choosing Exam\",\n  choose_district = \"Choosing District\",\n}\n\ntype ExamReportModalsProps = {\n  modalFor: ModalForTypes;\n  modalState: boolean;\n  changeModalState: (state: boolean) => void;\n\n  // FOR CHANGING PERIOD =========================\n  applicationPeriods?: SessionPlanInterface[] | null;\n  selected_period?: SessionPlanInterface | null;\n  setSelectedPeriod?: (period: SessionPlanInterface) => void;\n  onPeriodChange?: (period_id: string) => void;\n\n  // FOR CHOOSING EXAM =========================\n  AllExamData?: examProgressStateInterface[];\n  // thisExam?: examProgressStateInterface | null;\n  // setSelectedExam?: (selectedExam: examProgressStateInterface | null) => void;\n  SetReportCourseId: (\n    data: examProgressStateInterface | null\n  ) => SetReportCourseIdAction;\n  thisExam?: examProgressStateInterface | null;\n\n  // FOR REPORT TYPE =========================\n  reportTitle?: reportTitleType;\n  setReportTitle?: (title: reportTitleType) => void;\n\n  // FOR EXCEL GENERATION =========================\n  generateReportModal?: {\n    reportType: \"EXCEL\" | \"PDF\";\n    status: boolean;\n  } | null;\n  setGenerateReportModal?: (\n    reportData: {\n      reportType: \"EXCEL\" | \"PDF\";\n      status: boolean;\n    } | null\n  ) => void;\n  excelReportTitle?: string;\n  setExcelReportTitle?: (title: string) => void;\n  examPreparationReportContent?: examPreparationReportContentInterface[];\n  setExamPreparationReportContent?: (\n    content: examPreparationReportContentInterface[]\n  ) => void;\n  updateExamToPrint?: () => void;\n  examsToPrint?:\n    | ExamPreparationToPrintInterface[]\n    | ExamPerformanceToPrintInterface[]\n    | null;\n  // FOR EXAM PERFORMANCE REPORT ================================\n  examPerformanceToPrint?: ExamPerformanceToPrintInterface[] | null;\n  examPerformanceReportContent?: examPerformanceReportContentInterface[];\n  setExamPerformanceReportContent?: (\n    value: examPerformanceReportContentInterface[]\n  ) => void;\n  // FOR EXCEL TOP 30 EXAM PERFORMANCE REPORT CONTENT ===============================\n  exam30PerformanceToPrint?: ExamPerformanceToPrintInterface[] | null;\n  exam30PerformanceReportContent?: examPerformanceReportContentInterface[];\n  setExam30PerformanceReportContent?: (\n    value: examPerformanceReportContentInterface[]\n  ) => void;\n  // FOR EXCEL EXAMINATION PROGRESS REPORT CONTENT ===============================\n  examinationProgressToPrint?: ExaminationProgressToPrintInterface[] | null;\n  examinationProgressReportContent?: ExaminationProgressReportContentInterface[];\n  setExaminationProgressExamPerformanceReportContent?: (\n    value: ExaminationProgressReportContentInterface[]\n  ) => void;\n  // FOR EXCEL CANDIDATE EXAM PERFORMANCE REPORT CONTENT ===============================\n  candidateExamPerformanceToPrint?:\n    | CandidateExamPerformanceToPrintInterface[]\n    | null;\n  candidateExamPerformanceReportContent?: CandidateExamPerformanceReportContentInterface[];\n  setCandidateExamPerformanceReportContent?: (\n    value: CandidateExamPerformanceReportContentInterface[]\n  ) => void;\n  // FOR EXCEL TOP 30 CANDIDATE EXAM PERFORMANCE REPORT CONTENT ===============================\n  candidate30ExamPerformanceToPrint?:\n    | CandidateExamPerformanceToPrintInterface[]\n    | null;\n  candidate30ExamPerformanceReportContent?: CandidateExamPerformanceReportContentInterface[];\n  setCandidate30ExamPerformanceReportContent?: (\n    value: CandidateExamPerformanceReportContentInterface[]\n  ) => void;\n  // FOR LOCATIONS PROVINCE, DISTRICT, CENTERS, ROOM ================================\n  locations: RoomLocationInterface[];\n  getAllRoom: Function;\n  SetReportDistrictId?: (\n    data: {\n      district_id: string;\n      district_name: string;\n    } | null\n  ) => SetReportDistrictIdAction;\n  districtId?: string;\n  isAllDistrictAllowed?: boolean;\n};\n\nconst ExamReportModals: React.FC<ExamReportModalsProps> = (props) => {\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [selectAll, setSelectAll] = useState<boolean>(true);\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const [loadingLocation, setLoadingLocation] = useState<boolean>(true);\n  const [error, setError] = useState<{ element: String; msg: string } | null>(\n    null\n  );\n  const [districtId, setDistrictId] = useState<string>(\n    props.districtId ? props.districtId : \"all\"\n  );\n\n  const isChangeAllowed = (key: any): boolean => {\n    // EXAM PREPARATION ######################\n    if (\n      props.reportTitle &&\n      props.reportTitle === reportTitleType.EXAM_PREPARATION\n    ) {\n      return examPreparationIsChangeAllowed(key);\n    }\n    // EXAM PERFORMANCE ######################\n    if (\n      props.reportTitle &&\n      (props.reportTitle === reportTitleType.EXAM_PERFORMANCE ||\n        props.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE)\n    ) {\n      return examPerformanceIsChangeAllowed(key);\n    }\n    // EXAMINATION PROGRESS ######################\n    if (\n      props.reportTitle &&\n      props.reportTitle === reportTitleType.EXAMINATION_PROGRESS\n    ) {\n      return examinationProgressIsChangeAllowed(key);\n    }\n    // CANDIDATE EXAM PERFORMANCE && TOP 30 CANDIDATE EXAM PERFORMANCE ######################\n    if (\n      props.reportTitle &&\n      (props.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE ||\n        props.reportTitle === reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE)\n    ) {\n      return candidateExamPerformanceIsChangeAllowed(key);\n    }\n    return false;\n  };\n\n  const updateExamPreparationReportContent = (\n    key: examPreparationReportContentKeyInterface\n  ) => {\n    if (props.examPreparationReportContent) {\n      let index: number = props.examPreparationReportContent.findIndex(\n        (item) => item.key === key\n      );\n      let newArray: examPreparationReportContentInterface[] =\n        props.examPreparationReportContent;\n      newArray[index].status = !newArray[index].status;\n      props.setExamPreparationReportContent &&\n        props.setExamPreparationReportContent(newArray);\n      let isSelectAllNeeded = newArray.find((item) => item.status === false);\n      if (isSelectAllNeeded) {\n        setSelectAll(false);\n      } else {\n        setSelectAll(true);\n      }\n\n      // UPDATE APPLICATION LIST FOR UPDATE ==============================\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n  };\n\n  const resetReportContent = (currentState: boolean) => {\n    if (props.reportTitle) {\n      // EXAM PREPARATION =======================================\n      if (\n        props.reportTitle === reportTitleType.EXAM_PREPARATION &&\n        props.examPreparationReportContent\n      ) {\n        let newArray: examPreparationReportContentInterface[] =\n          props.examPreparationReportContent;\n        for (const key in newArray) {\n          if (isChangeAllowed(newArray[key].key)) {\n            newArray[key].status = !currentState;\n          }\n        }\n\n        props.setExamPreparationReportContent &&\n          props.setExamPreparationReportContent(newArray);\n        setSelectAll(!currentState);\n\n        props.updateExamToPrint && props.updateExamToPrint();\n      }\n    }\n\n    // EXAM PERFORMANCE =======================================\n    if (\n      props.reportTitle === reportTitleType.EXAM_PERFORMANCE &&\n      props.examPerformanceReportContent\n    ) {\n      let newArray: examPerformanceReportContentInterface[] =\n        props.examPerformanceReportContent;\n      for (const key in newArray) {\n        if (isChangeAllowed(newArray[key].key)) {\n          newArray[key].status = !currentState;\n        }\n      }\n\n      props.setExamPerformanceReportContent &&\n        props.setExamPerformanceReportContent(newArray);\n      setSelectAll(!currentState);\n\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n\n    // TOP 30 EXAM PERFORMANCE =======================================\n    if (\n      props.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n      props.exam30PerformanceReportContent\n    ) {\n      let newArray: examPerformanceReportContentInterface[] =\n        props.exam30PerformanceReportContent;\n      for (const key in newArray) {\n        if (isChangeAllowed(newArray[key].key)) {\n          newArray[key].status = !currentState;\n        }\n      }\n\n      props.setExam30PerformanceReportContent &&\n        props.setExam30PerformanceReportContent(newArray);\n      setSelectAll(!currentState);\n\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n\n    // EXAMINATION PROGRESS =======================================\n    if (\n      props.reportTitle === reportTitleType.EXAMINATION_PROGRESS &&\n      props.examinationProgressReportContent\n    ) {\n      let newArray: ExaminationProgressReportContentInterface[] =\n        props.examinationProgressReportContent;\n      for (const key in newArray) {\n        if (isChangeAllowed(newArray[key].key)) {\n          newArray[key].status = !currentState;\n        }\n      }\n\n      props.setExaminationProgressExamPerformanceReportContent &&\n        props.setExaminationProgressExamPerformanceReportContent(newArray);\n      setSelectAll(!currentState);\n\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n\n    // CANDIDATE EXAM PERFORMANCE =======================================\n    if (\n      props.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE &&\n      props.candidateExamPerformanceReportContent\n    ) {\n      let newArray: CandidateExamPerformanceReportContentInterface[] =\n        props.candidateExamPerformanceReportContent;\n      for (const key in newArray) {\n        if (isChangeAllowed(newArray[key].key)) {\n          newArray[key].status = !currentState;\n        }\n      }\n\n      props.setCandidateExamPerformanceReportContent &&\n        props.setCandidateExamPerformanceReportContent(newArray);\n      setSelectAll(!currentState);\n\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n\n    // TOP 30 CANDIDATE EXAM PERFORMANCE =======================================\n    if (\n      props.reportTitle === reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE &&\n      props.candidate30ExamPerformanceReportContent\n    ) {\n      let newArray: CandidateExamPerformanceReportContentInterface[] =\n        props.candidate30ExamPerformanceReportContent;\n      for (const key in newArray) {\n        if (isChangeAllowed(newArray[key].key)) {\n          newArray[key].status = !currentState;\n        }\n      }\n\n      props.setCandidate30ExamPerformanceReportContent &&\n        props.setCandidate30ExamPerformanceReportContent(newArray);\n      setSelectAll(!currentState);\n\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n  };\n\n  const updateExamPerformanceReportContent = (\n    key: examPerformanceReportContentKeyInterface\n  ) => {\n    if (\n      props.reportTitle &&\n      props.reportTitle === reportTitleType.EXAM_PERFORMANCE &&\n      props.examPerformanceReportContent\n    ) {\n      let index: number = props.examPerformanceReportContent.findIndex(\n        (item) => item.key === key\n      );\n      let newArray: examPerformanceReportContentInterface[] =\n        props.examPerformanceReportContent;\n      newArray[index].status = !newArray[index].status;\n      props.setExamPerformanceReportContent &&\n        props.setExamPerformanceReportContent(newArray);\n      let isSelectAllNeeded = newArray.find((item) => item.status === false);\n      if (isSelectAllNeeded) {\n        setSelectAll(false);\n      } else {\n        setSelectAll(true);\n      }\n\n      // UPDATE APPLICATION LIST FOR UPDATE ==============================\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n    if (\n      props.reportTitle &&\n      props.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n      props.exam30PerformanceReportContent\n    ) {\n      let index: number = props.exam30PerformanceReportContent.findIndex(\n        (item) => item.key === key\n      );\n      let newArray: examPerformanceReportContentInterface[] =\n        props.exam30PerformanceReportContent;\n      newArray[index].status = !newArray[index].status;\n      props.setExam30PerformanceReportContent &&\n        props.setExam30PerformanceReportContent(newArray);\n      let isSelectAllNeeded = newArray.find((item) => item.status === false);\n      if (isSelectAllNeeded) {\n        setSelectAll(false);\n      } else {\n        setSelectAll(true);\n      }\n\n      // UPDATE APPLICATION LIST FOR UPDATE ==============================\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n  };\n\n  const updateExaminationProgressReportContent = (\n    key: ExaminationProgressReportContentKeyInterface\n  ) => {\n    if (props.examinationProgressReportContent) {\n      let index: number = props.examinationProgressReportContent.findIndex(\n        (item) => item.key === key\n      );\n      let newArray: ExaminationProgressReportContentInterface[] =\n        props.examinationProgressReportContent;\n      newArray[index].status = !newArray[index].status;\n      props.setExaminationProgressExamPerformanceReportContent &&\n        props.setExaminationProgressExamPerformanceReportContent(newArray);\n      let isSelectAllNeeded = newArray.find((item) => item.status === false);\n      if (isSelectAllNeeded) {\n        setSelectAll(false);\n      } else {\n        setSelectAll(true);\n      }\n\n      // UPDATE APPLICATION LIST FOR UPDATE ==============================\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n  };\n\n  const updateCandidateExamPerformanceReportContent = (\n    key: CandidateExamPerformanceReportContentKeyInterface\n  ) => {\n    if (\n      props.reportTitle &&\n      props.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE &&\n      props.candidateExamPerformanceReportContent\n    ) {\n      let index: number = props.candidateExamPerformanceReportContent.findIndex(\n        (item) => item.key === key\n      );\n      let newArray: CandidateExamPerformanceReportContentInterface[] =\n        props.candidateExamPerformanceReportContent;\n      newArray[index].status = !newArray[index].status;\n      props.setCandidateExamPerformanceReportContent &&\n        props.setCandidateExamPerformanceReportContent(newArray);\n      let isSelectAllNeeded = newArray.find((item) => item.status === false);\n      if (isSelectAllNeeded) {\n        setSelectAll(false);\n      } else {\n        setSelectAll(true);\n      }\n\n      // UPDATE APPLICATION LIST FOR UPDATE ==============================\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n\n    if (\n      props.reportTitle &&\n      props.reportTitle === reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE &&\n      props.candidate30ExamPerformanceReportContent\n    ) {\n      let index: number =\n        props.candidate30ExamPerformanceReportContent.findIndex(\n          (item) => item.key === key\n        );\n      let newArray: CandidateExamPerformanceReportContentInterface[] =\n        props.candidate30ExamPerformanceReportContent;\n      newArray[index].status = !newArray[index].status;\n      props.setCandidate30ExamPerformanceReportContent &&\n        props.setCandidate30ExamPerformanceReportContent(newArray);\n      let isSelectAllNeeded = newArray.find((item) => item.status === false);\n      if (isSelectAllNeeded) {\n        setSelectAll(false);\n      } else {\n        setSelectAll(true);\n      }\n\n      // UPDATE APPLICATION LIST FOR UPDATE ==============================\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n  };\n\n  useEffect(() => {\n    if (\n      !props.locations.length &&\n      props.modalFor === ModalForTypes.choose_district\n    ) {\n      props.getAllRoom((status: boolean, msg: string) => {\n        if (!status && msg.length > 0) console.error(msg);\n        setLoadingLocation(status);\n      });\n    } else {\n      setLoadingLocation(false);\n    }\n  }, [props]);\n\n  const selectDistrict = (district_id: string) => {\n    setError(null);\n    if (district_id === \"all\") {\n      if (\n        ((props.reportTitle &&\n          props.reportTitle ===\n            reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE) ||\n          (props.isAllDistrictAllowed &&\n            props.isAllDistrictAllowed === true)) &&\n        props.SetReportDistrictId\n      ) {\n        props.SetReportDistrictId(null);\n        props.changeModalState(false);\n      } else {\n        setError({ element: \"district\", msg: \"District is required\" });\n      }\n    } else {\n      if (props.SetReportDistrictId) {\n        let thisDistrict = LocationsInArray(props.locations).find(\n          (item) => item.district_id === district_id\n        );\n        if (!thisDistrict) {\n          return setError({ element: \"district\", msg: \"Invalid district id\" });\n        } else {\n          props.SetReportDistrictId({\n            district_id: thisDistrict.district_id,\n            district_name: thisDistrict.district_name,\n          });\n          props.changeModalState(false);\n        }\n      }\n    }\n  };\n\n  const showGenerateBtn = (): { status: boolean; data: any[] } => {\n    if (props.reportTitle) {\n      // EXAM PREPARATION ######################\n      if (\n        props.reportTitle === reportTitleType.EXAM_PREPARATION &&\n        props.excelReportTitle &&\n        props.examsToPrint\n      ) {\n        return { status: true, data: props.examsToPrint };\n      }\n      // EXAM PERFORMANCE ######################\n      if (\n        props.reportTitle === reportTitleType.EXAM_PERFORMANCE &&\n        props.excelReportTitle &&\n        props.examPerformanceToPrint\n      ) {\n        return { status: true, data: props.examPerformanceToPrint };\n      }\n      // TOP 30 EXAM PERFORMANCE ######################\n      if (\n        props.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n        props.excelReportTitle &&\n        props.exam30PerformanceToPrint\n      ) {\n        return { status: true, data: props.exam30PerformanceToPrint };\n      }\n      // EXAMINATION PROGRESS ######################\n      if (\n        props.reportTitle === reportTitleType.EXAMINATION_PROGRESS &&\n        props.excelReportTitle &&\n        props.examinationProgressToPrint\n      ) {\n        return { status: true, data: props.examinationProgressToPrint };\n      }\n      // CANDIDATE EXAM PERFORMANCE ######################\n      if (\n        props.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE &&\n        props.excelReportTitle &&\n        props.candidateExamPerformanceToPrint\n      ) {\n        return { status: true, data: props.candidateExamPerformanceToPrint };\n      }\n      // TOP 30 CANDIDATE EXAM PERFORMANCE ######################\n      if (\n        props.reportTitle === reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE &&\n        props.excelReportTitle &&\n        props.candidate30ExamPerformanceToPrint\n      ) {\n        return { status: true, data: props.candidate30ExamPerformanceToPrint };\n      }\n    }\n    return { status: false, data: [] };\n  };\n\n  return (\n    <div>\n      {/* LOAD MODAL FOR PERIOD ================================== */}\n      {props.modalFor === ModalForTypes.period &&\n        props.applicationPeriods &&\n        props.modalState && (\n          <Modal\n            title={\n              <div className=\"flex flex-row gap-4 items-center\">\n                <MdHistory className=\"text-5xl text-blue-600\" />\n                <div className=\"flex flex-col\">\n                  <span className=\"font-bold text-xl text-blue-600\">\n                    Choose a period\n                  </span>\n                </div>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() => props.selected_period && props.changeModalState(false)}\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{ title: true }}\n          >\n            <ChooseSession\n              allSession={props.applicationPeriods}\n              setSelectSession={(value: SessionPlanInterface | \"all\") => {\n                if (value !== \"all\") {\n                  props.setSelectedPeriod && props.setSelectedPeriod(value);\n                  props.onPeriodChange &&\n                    props.onPeriodChange(value.session_plan_id);\n                  props.changeModalState(false);\n                }\n              }}\n              chooseAll={false}\n              currentSelected={\n                props.selected_period ? props.selected_period : \"all\"\n              }\n            />\n          </Modal>\n        )}\n      {/* END LOAD MODAL FOR PERIOD ================================== */}\n\n      {/* LOAD MODAL FOR REPORT TYPES ================================== */}\n      {props.modalFor === ModalForTypes.title && props.modalState && (\n        <Modal\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              <CgFileDocument className=\"text-5xl text-blue-600\" />\n              <div className=\"flex flex-col\">\n                <span className=\"font-bold text-xl text-blue-600\">\n                  Choose exam report type\n                </span>\n              </div>\n            </div>\n          }\n          backDrop={true}\n          theme={Themes.default}\n          close={() => props.changeModalState(false)}\n          backDropClose={true}\n          widthSizeClass={ModalSize.extraLarge}\n          displayClose={true}\n          padding={{ title: true }}\n        >\n          <div className=\"px-2 pb-2\">\n            {Object.values(reportTitleType).map((item, i) => (\n              <div\n                onClick={() => {\n                  props.setReportTitle && props.setReportTitle(item);\n                  props.setExcelReportTitle && props.setExcelReportTitle(item);\n                  props.changeModalState(false);\n                }}\n                key={i + 1}\n                className={`flex items-center border rounded px-2 py-2 cursor-pointer group hover:bg-blue-100 hover:border-blue-500 mb-3 justify-between ${\n                  props.reportTitle && props.reportTitle === item\n                    ? \"bg-blue-50 border-blue-400\"\n                    : \"bg-white border-gray-200\"\n                }`}\n              >\n                <div>\n                  <div className=\"text-blue-500 text-sm font-medium italic\">\n                    Report type\n                  </div>\n                  <div className=\"font-bold\">\n                    {item}\n                    {item === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n                      \" district\"}\n                  </div>\n                </div>\n                <div className=\"btn bg-blue-400 group-hover:bg-blue-600 text-white mr-2\">\n                  Choose\n                </div>\n              </div>\n            ))}\n          </div>\n        </Modal>\n      )}\n      {/* END LOAD MODAL FOR REPORT TYPES ================================== */}\n\n      {/* GENERATE DYNAMIC REPORT CONTENT MODAL */}\n      {props.generateReportModal &&\n        props.modalFor === ModalForTypes.generateReportModal &&\n        props.modalState && (\n          <Modal\n            title={\n              <div className=\"flex flex-row gap-4 items-center\">\n                {/* <IoBriefcase className=\"text-5xl text-gray-500\" /> */}\n                <div className=\"flex flex-col\">\n                  <span className=\"font-bold text-2xl text-gray-500\">\n                    Generating Report contents\n                  </span>\n                  <span className=\"text-sm text-blue-600 font-normal\">\n                    Generating {props.generateReportModal.reportType} Report\n                  </span>\n                </div>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() =>\n              props.setGenerateReportModal && props.setGenerateReportModal(null)\n            }\n            backDropClose={false}\n            widthSizeClass={ModalSize.medium}\n            displayClose={true}\n            padding={{ title: true }}\n          >\n            <div className=\"px-6\">\n              <div className=\"my-2 text-base text-gray-700 sm:text-lg\">\n                <div className=\"flex flex-col\">\n                  <label>Title</label>\n                  <input\n                    type=\"text\"\n                    className={`text-left input-white w-20 inline-block ${\n                      formError && formError.element === \"report_title\"\n                        ? \"border-red-500\"\n                        : \"border-gray-500\"\n                    } border-2`}\n                    placeholder=\"Sub Category Title\"\n                    value={props.excelReportTitle ? props.excelReportTitle : \"\"}\n                    onChange={(e) => {\n                      props.setExcelReportTitle &&\n                        props.setExcelReportTitle(e.target.value);\n                      setFormError(null);\n                    }}\n                    // disabled={props.loading}\n                  />\n                  {formError && formError.element === \"report_title\" && (\n                    <span className=\"text-red-500\">{formError.msg}</span>\n                  )}\n                </div>\n                <div className=\"flex flex-col mt-2\">\n                  <label>Report content</label>\n                  {/* // EXAM PREPARATION ###################### */}\n                  {props.reportTitle &&\n                    props.reportTitle === reportTitleType.EXAM_PREPARATION && (\n                      <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                        {props.examPreparationReportContent &&\n                          props.examPreparationReportContent.map(\n                            (item, index) => (\n                              <div\n                                key={index}\n                                className={`flex items-center gap-1 ${\n                                  isChangeAllowed(item.key)\n                                    ? \"cursor-pointer\"\n                                    : \"cursor-not-allowed\"\n                                }`}\n                                onClick={() =>\n                                  isChangeAllowed(item.key) &&\n                                  updateExamPreparationReportContent(item.key)\n                                }\n                                title={\n                                  !isChangeAllowed(item.key)\n                                    ? \"Required for every report!\"\n                                    : \"\"\n                                }\n                              >\n                                {item.status ? (\n                                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                                ) : (\n                                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                                )}\n                                <span>{item.title}</span>\n                              </div>\n                            )\n                          )}\n                      </div>\n                    )}\n                  {/* // EXAM PERFORMANCE ###################### */}\n                  {props.reportTitle &&\n                    props.reportTitle === reportTitleType.EXAM_PERFORMANCE && (\n                      <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                        {props.examPerformanceReportContent &&\n                          props.examPerformanceReportContent.map(\n                            (item, index) => (\n                              <div\n                                key={index}\n                                className={`flex items-center gap-1 ${\n                                  isChangeAllowed(item.key)\n                                    ? \"cursor-pointer\"\n                                    : \"cursor-not-allowed\"\n                                }`}\n                                onClick={() =>\n                                  isChangeAllowed(item.key) &&\n                                  updateExamPerformanceReportContent(item.key)\n                                }\n                                title={\n                                  !isChangeAllowed(item.key)\n                                    ? \"Required for every report!\"\n                                    : \"\"\n                                }\n                              >\n                                {item.status ? (\n                                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                                ) : (\n                                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                                )}\n                                <span>{item.title}</span>\n                              </div>\n                            )\n                          )}\n                      </div>\n                    )}\n                  {/* // TOP 30 EXAM PERFORMANCE ###################### */}\n                  {props.reportTitle &&\n                    props.reportTitle ===\n                      reportTitleType.EXAM_DISTRICT_PERFORMANCE && (\n                      <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                        {props.exam30PerformanceReportContent &&\n                          props.exam30PerformanceReportContent.map(\n                            (item, index) => (\n                              <div\n                                key={index}\n                                className={`flex items-center gap-1 ${\n                                  isChangeAllowed(item.key)\n                                    ? \"cursor-pointer\"\n                                    : \"cursor-not-allowed\"\n                                }`}\n                                onClick={() =>\n                                  isChangeAllowed(item.key) &&\n                                  updateExamPerformanceReportContent(item.key)\n                                }\n                                title={\n                                  !isChangeAllowed(item.key)\n                                    ? \"Required for every report!\"\n                                    : \"\"\n                                }\n                              >\n                                {item.status ? (\n                                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                                ) : (\n                                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                                )}\n                                <span>{item.title}</span>\n                              </div>\n                            )\n                          )}\n                      </div>\n                    )}\n                  {/* // EXAMINATION PROGRESS ###################### */}\n                  {props.reportTitle &&\n                    props.reportTitle ===\n                      reportTitleType.EXAMINATION_PROGRESS && (\n                      <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                        {props.examinationProgressReportContent &&\n                          props.examinationProgressReportContent.map(\n                            (item, index) => (\n                              <div\n                                key={index}\n                                className={`flex items-center gap-1 ${\n                                  isChangeAllowed(item.key)\n                                    ? \"cursor-pointer\"\n                                    : \"cursor-not-allowed\"\n                                }`}\n                                onClick={() =>\n                                  isChangeAllowed(item.key) &&\n                                  updateExaminationProgressReportContent(\n                                    item.key\n                                  )\n                                }\n                                title={\n                                  !isChangeAllowed(item.key)\n                                    ? \"Required for every report!\"\n                                    : \"\"\n                                }\n                              >\n                                {item.status ? (\n                                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                                ) : (\n                                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                                )}\n                                <span>{item.title}</span>\n                              </div>\n                            )\n                          )}\n                      </div>\n                    )}\n                  {/* // EXAMINATION PROGRESS ###################### */}\n                  {/* // CANDIDATE EXAM PERFORMANCE ###################### */}\n                  {props.reportTitle &&\n                    props.reportTitle ===\n                      reportTitleType.APPLICANTS_PERFORMANCE && (\n                      <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                        {props.candidateExamPerformanceReportContent &&\n                          props.candidateExamPerformanceReportContent.map(\n                            (item, index) => (\n                              <div\n                                key={index}\n                                className={`flex items-center gap-1 ${\n                                  isChangeAllowed(item.key)\n                                    ? \"cursor-pointer\"\n                                    : \"cursor-not-allowed\"\n                                }`}\n                                onClick={() =>\n                                  isChangeAllowed(item.key) &&\n                                  updateCandidateExamPerformanceReportContent(\n                                    item.key\n                                  )\n                                }\n                                title={\n                                  !isChangeAllowed(item.key)\n                                    ? \"Required for every report!\"\n                                    : \"\"\n                                }\n                              >\n                                {item.status ? (\n                                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                                ) : (\n                                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                                )}\n                                <span>{item.title}</span>\n                              </div>\n                            )\n                          )}\n                      </div>\n                    )}\n                  {/* // END EXAMINATION PROGRESS ###################### */}\n                  {/* // TOP 30 CANDIDATE EXAM PERFORMANCE ###################### */}\n                  {props.reportTitle &&\n                    props.reportTitle ===\n                      reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE && (\n                      <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                        {props.candidate30ExamPerformanceReportContent &&\n                          props.candidate30ExamPerformanceReportContent.map(\n                            (item, index) => (\n                              <div\n                                key={index}\n                                className={`flex items-center gap-1 ${\n                                  isChangeAllowed(item.key)\n                                    ? \"cursor-pointer\"\n                                    : \"cursor-not-allowed\"\n                                }`}\n                                onClick={() =>\n                                  isChangeAllowed(item.key) &&\n                                  updateCandidateExamPerformanceReportContent(\n                                    item.key\n                                  )\n                                }\n                                title={\n                                  !isChangeAllowed(item.key)\n                                    ? \"Required for every report!\"\n                                    : \"\"\n                                }\n                              >\n                                {item.status ? (\n                                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                                ) : (\n                                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                                )}\n                                <span>{item.title}</span>\n                              </div>\n                            )\n                          )}\n                      </div>\n                    )}\n                  {/* // END TOP 30 CANDIDATE EXAM PERFORMANCE ###################### */}\n                  {formError && formError.element === \"report_content\" && (\n                    <span className=\"text-red-500\">{formError.msg}</span>\n                  )}\n                </div>\n              </div>\n              <div className=\"flex justify-between mb-2 mt-4\">\n                <div\n                  className={`flex items-center gap-1 cursor-pointer`}\n                  onClick={() => resetReportContent(selectAll)}\n                >\n                  {selectAll ? (\n                    <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                  ) : (\n                    <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                  )}\n                  <span>Select all</span>\n                </div>\n\n                {showGenerateBtn().status && (\n                  <ExportToExcel\n                    fileData={showGenerateBtn().data}\n                    fileName={props.excelReportTitle!}\n                    btnName=\"Generate\"\n                  />\n                )}\n              </div>\n            </div>\n          </Modal>\n        )}\n      {/* END GENERATE DYNAMIC REPORT CONTENT MODAL */}\n\n      {/* LOAD MODAL FOR CHOOSING EXAM ================================== */}\n      {props.modalFor === ModalForTypes.choose_exam &&\n        props.modalState &&\n        props.AllExamData && (\n          <Modal\n            title={\n              <div className=\"flex flex-row gap-4 items-center\">\n                <CgFileDocument className=\"text-5xl text-blue-600\" />\n                <div className=\"flex flex-col\">\n                  <span className=\"font-bold text-xl text-blue-600\">\n                    Choose exam\n                  </span>\n                </div>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() => props.changeModalState(false)}\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{ title: true }}\n          >\n            <div className=\"px-2 pb-2\">\n              <div className=\"w-full py-2\">\n                <input\n                  onChange={(e) => setSearchInput(e.target.value)}\n                  type=\"text\"\n                  value={searchInput}\n                  placeholder=\"Search...\"\n                  className=\"w-full bg-white py-2 px-3 rounded border border-gray-400\"\n                  disabled={props.AllExamData.length <= 0 ? true : false}\n                />\n              </div>\n              <div\n                onClick={() => {\n                  props.SetReportCourseId(null);\n                  props.changeModalState(false);\n                }}\n                className={`flex items-center border rounded px-2 py-2 cursor-pointer group hover:bg-blue-100 hover:border-blue-500 mb-3 justify-between ${\n                  props.thisExam === null\n                    ? \"bg-blue-50 border-blue-400\"\n                    : \"bg-white border-gray-200\"\n                }`}\n              >\n                <div>\n                  <div className=\"text-sm font-medium italic\">\n                    code: <span className=\"text-blue-500\">-</span>\n                  </div>\n                  <div className=\"font-bold text-lg\">All exams</div>\n                </div>\n                <div className=\"btn bg-blue-400 group-hover:bg-blue-600 text-white mr-2\">\n                  Choose\n                </div>\n              </div>\n              {searchExamData(props.AllExamData, searchInput).map((item, i) => (\n                <div\n                  onClick={() => {\n                    props.SetReportCourseId(item);\n                    props.changeModalState(false);\n                  }}\n                  key={i + 1}\n                  className={`flex items-center border rounded px-2 py-2 cursor-pointer group hover:bg-blue-100 hover:border-blue-500 mb-3 justify-between ${\n                    props.thisExam &&\n                    props.thisExam.course_id === item.course_id\n                      ? \"bg-blue-50 border-blue-400\"\n                      : \"bg-white border-gray-200\"\n                  }`}\n                >\n                  <div>\n                    <div className=\"text-sm font-medium italic\">\n                      code:{\" \"}\n                      <span className=\"text-blue-500\">{item.course_code}</span>\n                    </div>\n                    <div className=\"font-bold text-lg\">{item.course_name}</div>\n                  </div>\n                  <div className=\"btn bg-blue-400 group-hover:bg-blue-600 text-white mr-2\">\n                    Choose\n                  </div>\n                </div>\n              ))}\n            </div>\n          </Modal>\n        )}\n      {/* END LOAD MODAL FOR CHOOSING EXAM ================================== */}\n\n      {/* LOAD MODAL FOR CHOOSING DISTRICT ================================== */}\n      {props.modalFor === ModalForTypes.choose_district && props.modalState && (\n        <Modal\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              <CgFileDocument className=\"text-5xl text-blue-600\" />\n              <div className=\"flex flex-col\">\n                <span className=\"font-bold text-xl text-blue-600\">\n                  Choose district\n                </span>\n              </div>\n            </div>\n          }\n          backDrop={true}\n          theme={Themes.default}\n          close={() =>\n            !isEmptyOrSpaces(districtId) && props.changeModalState(false)\n          }\n          backDropClose={true}\n          widthSizeClass={ModalSize.medium}\n          displayClose={true}\n          padding={{ title: true }}\n        >\n          <div className=\"px-2 pb-2 \">\n            {loadingLocation ? (\n              <Loading />\n            ) : (\n              <section className=\"pb-8 px-7 \">\n                {/* <div className=\"grid grid-cols-1 \"> */}\n                <label className=\"uppercase md:text-sm text-xs text-gray-500 text-light font-semibold\">\n                  District\n                </label>\n                {props.locations.length > 0 ? (\n                  <div className=\"\">\n                    <select\n                      className={`py-3 px-3 w-full rounded border-2 bg-white mt-1 focus:outline-none ${\n                        error && error.element === \"district\"\n                          ? \"border-red-400 focus:border-red-800\"\n                          : \"border-gray-400 focus:border-gray-800\"\n                      }`}\n                      value={districtId}\n                      onChange={(e) => {\n                        setDistrictId(e.target.value);\n                        selectDistrict(e.target.value);\n                      }}\n                    >\n                      <option value=\"all\">Select district</option>\n                      {FC_DistinctDistrict(\n                        LocationsInArray(props.locations)\n                      ).map((item, index) => (\n                        <option\n                          key={index + item.district_id}\n                          value={item.district_id}\n                        >\n                          {item.district_name}\n                        </option>\n                      ))}\n                    </select>\n                    {error && error.element === \"district\" && (\n                      <p className=\"text-xs italic text-red-500 mt-3\">\n                        {error.msg}\n                      </p>\n                    )}\n                  </div>\n                ) : (\n                  <div className=\"alert-info\">No district found</div>\n                )}\n                {/* </div> */}\n              </section>\n            )}\n          </div>\n        </Modal>\n      )}\n      {/* END LOAD MODAL FOR CHOOSING DISTRICT ================================== */}\n    </div>\n  );\n};\n\nconst mapStateToProps = ({\n  locations,\n}: StoreState): {\n  locations: RoomLocationInterface[];\n} => {\n  return {\n    locations: locations.roomLocation,\n  };\n};\n\nexport default React.memo(connect(mapStateToProps, {\n  getAllRoom,\n  SetReportDistrictId,\n  SetReportCourseId,\n})(ExamReportModals));\n","import React from \"react\";\nimport Chart from \"react-apexcharts\";\n\ntype chartType = {\n  options: {\n    labels: string[];\n    legend?: ApexLegend;\n    plotOptions?: ApexPlotOptions;\n    colors?: any[];\n  };\n  series: number[];\n  width?: number;\n};\n\nconst PieChart: React.FC<chartType> = (props) => {\n  return (\n    <div className=\"donut\">\n      <Chart\n        options={props.options}\n        series={props.series}\n        type=\"donut\"\n        width={`${props.width ? props.width : \"380\"}`}\n      />\n    </div>\n  );\n};\n\nexport default React.memo(PieChart);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { BiRightArrowAlt } from \"react-icons/bi\";\nimport {\n  MdDelete,\n  MdEdit,\n  MdHighlightOff,\n  MdRemoveRedEye,\n  MdSettings,\n} from \"react-icons/md\";\nimport { SiAddthis } from \"react-icons/si\";\nimport { TiInputChecked } from \"react-icons/ti\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { customizeUserAccess } from \"../../actions/users\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport Table from \"../../components/Table/Table\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport {\n  UserInterface,\n  AccessTaskInterface,\n  CustomeAccessInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\n\ninterface AppProps {\n  userInfo: UserInterface | undefined;\n  manageUserId: string;\n  setUserAccess: (value: AccessTaskInterface[] | null) => void;\n  userAccess: AccessTaskInterface[] | null;\n  setCurrentAccess: (value: AccessTaskInterface | null) => void;\n  currentAccess: AccessTaskInterface | null;\n  currentPage: number;\n\n  // REDUX ==============\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  customizeUserAccess: Function;\n}\n\ninterface AppStates {\n  loading: boolean;\n  loadindRequest: boolean;\n  // currentAccess:AccessTaskInterface | null;\n  // userAccess:AccessTaskInterface[] | null;\n  createPermission: boolean;\n  viewPermission: boolean;\n  updatePermission: boolean;\n  deletePermission: boolean;\n}\n\nclass _UserAccess extends Component<AppProps, AppStates> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadindRequest: false,\n      // currentAccess:null,\n      // userAccess:null,\n      createPermission: false,\n      viewPermission: false,\n      updatePermission: false,\n      deletePermission: false,\n    };\n  }\n\n  setViewPermission = (value: boolean) => {\n    this.setState({ viewPermission: value });\n  };\n\n  setLoadindRequest = (value: boolean) => {\n    this.setState({ loadindRequest: value });\n  };\n\n  setCreatePermission = (value: boolean) => {\n    this.setState({ createPermission: value });\n  };\n\n  setUpdatePermission = (value: boolean) => {\n    this.setState({ updatePermission: value });\n  };\n\n  setDeletePermission = (value: boolean) => {\n    this.setState({ deletePermission: value });\n  };\n\n  setLoadind = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  overrideUserAccess = (\n    default_access: AccessTaskInterface[],\n    custome_access: AccessTaskInterface[]\n  ) => {\n    if (default_access && custome_access && custome_access.length > 0) {\n      let overideAccess: AccessTaskInterface[] = [];\n      for (const key in default_access) {\n        if (Object.prototype.hasOwnProperty.call(default_access, key)) {\n          const findCustom = custome_access.find(\n            (custom) => custom.id === default_access[key].id\n          );\n          if (findCustom) {\n            overideAccess.push(findCustom);\n          } else {\n            overideAccess.push(default_access[key]);\n          }\n        }\n      }\n      this.props.setUserAccess(overideAccess);\n    }\n  };\n\n  componentDidMount = () => {\n    if (this.props.userInfo && this.props.userInfo.custome_access) {\n      this.props.userInfo.default_access &&\n        this.overrideUserAccess(\n          this.props.userInfo.default_access.access,\n          this.props.userInfo.custome_access.access\n        );\n      this.setLoadind(false);\n    } else {\n      this.props.userInfo &&\n        this.props.userInfo.default_access &&\n        this.props.setUserAccess(this.props.userInfo.default_access.access);\n      this.setLoadind(false);\n    }\n  };\n\n  tableData = (): JSX.Element[] => {\n    if (!this.props.userAccess)\n      return [\n        <tr key={Math.random()}>\n          <td>No data</td>\n        </tr>,\n      ];\n    return this.props.userAccess.map((access: AccessTaskInterface, i) => (\n      <tr\n        key={i + access.id + Math.random()}\n        className={`text-left border-b border-gray-200 cursor-pointer hover:bg-gray-100 ${\n          this.props.currentAccess &&\n          this.props.currentAccess.id === access.id &&\n          \"bg-gray-200 border my-3 hover:bg-gray-100\"\n        }`}\n        onClick={() =>\n          this.props.currentAccess && this.props.currentAccess.id === access.id\n            ? (this.props.setCurrentAccess(null),\n              this.setCreatePermission(false),\n              this.setViewPermission(false),\n              this.setUpdatePermission(false),\n              this.setDeletePermission(false))\n            : (this.props.setCurrentAccess(access),\n              this.setCreatePermission(access.permitted.create),\n              this.setViewPermission(access.permitted.view),\n              this.setUpdatePermission(access.permitted.update),\n              this.setDeletePermission(access.permitted.delete))\n        }\n      >\n        <td className=\"px-2 py-1\">\n          <label className=\"inline-flex items-center\">\n            {/* <input\n              type=\"radio\"\n              name=\"taskAccess\"\n              value={access.id}\n              className=\"form-radio h-4 w-4 text-gray-600\"\n              onChange={() => {\n                currentAccess\n                  ? this.setState({ currentAccess: null })\n                  : this.setState({ currentAccess: access });\n              }}\n              checked={currentAccess ? true : false}\n            /> */}\n            <span className=\"text-gray-900 capitalize text-xl font-normal cursor-pointer\">\n              {access.task}\n            </span>\n          </label>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.create ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.create ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.create ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.view ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.view ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.view ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.update ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.update ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.update ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.delete ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.delete ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.delete ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n      </tr>\n    ));\n  };\n\n  handleCustomization = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (this.props.userInfo) {\n      this.setLoadindRequest(true);\n      let task: [] | CustomeAccessInterface | null = null;\n      task = this.props.userInfo.custome_access;\n      let index = -1;\n\n      try {\n        if (task && this.props.currentAccess) {\n          index = task.access.findIndex(\n            (access) => access.id === this.props.currentAccess!.id\n          );\n          if (index >= 0) {\n            task.access[index].permitted.create = this.state.createPermission;\n            task.access[index].permitted.view = this.state.viewPermission;\n            task.access[index].permitted.update = this.state.updatePermission;\n            task.access[index].permitted.delete = this.state.deletePermission;\n          } else {\n            task.access.push({\n              id: this.props.currentAccess.id,\n              task: this.props.currentAccess.task,\n              key: this.props.currentAccess.key,\n              permitted: {\n                create: this.state.createPermission,\n                view: this.state.viewPermission,\n                update: this.state.updatePermission,\n                delete: this.state.deletePermission,\n              },\n            });\n          }\n        } else if (this.props.currentAccess) {\n          task = {\n            access: [\n              {\n                id: this.props.currentAccess.id,\n                task: this.props.currentAccess.task,\n                key: this.props.currentAccess.key,\n                permitted: {\n                  create: this.state.createPermission,\n                  view: this.state.viewPermission,\n                  update: this.state.updatePermission,\n                  delete: this.state.deletePermission,\n                },\n              },\n            ],\n            user_id: this.props.userInfo.user_id,\n            custome_user_access_id: \"\",\n          };\n        }\n\n        if (task) {\n          let res;\n          if (this.props.userInfo.custome_access !== null) {\n            res = await axios.patch<{ data: CustomeAccessInterface }>(\n              `${API.AUTH}/custaccess`,\n              {\n                access: task.access,\n                user_id: this.props.userInfo.user_id,\n              }\n            );\n          } else {\n            res = await axios.post<{ data: CustomeAccessInterface }>(\n              `${API.AUTH}/custaccess`,\n              {\n                access: task.access,\n                user_id: this.props.userInfo.user_id,\n              }\n            );\n          }\n\n          if (res) {\n            task.custome_user_access_id = res.data.data.custome_user_access_id;\n\n            this.props.customizeUserAccess(task, this.props.currentPage);\n            task &&\n              this.props.userInfo.default_access &&\n              this.overrideUserAccess(\n                this.props.userInfo.default_access.access,\n                task.access\n              );\n            this.props.PushPopupAlert({\n              title: `Resetting User Access complete successfully`,\n              theme: PopupAlertTheme.info,\n            });\n\n            task = null;\n            this.props.setCurrentAccess(null);\n            this.setCreatePermission(false);\n            this.setViewPermission(false);\n            this.setUpdatePermission(false);\n            this.setDeletePermission(false);\n          }\n        }\n      } catch (error) {\n        console.error({ customize_access: error });\n        this.props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      this.setLoadindRequest(false);\n    }\n  };\n\n  render() {\n    if (this.props.userInfo === undefined) {\n      return <Redirect to=\"/users\" />;\n    }\n\n    if (this.state.loading || this.props.userInfo === null) {\n      return (\n        <div className=\"text-center py-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading User Access...\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4 mx-1 my-2\">\n          <div\n            className={`col-span-1 md:col-span-3 bg-white w-full overflow-x-auto border rounded text-center p-2 ${\n              this.props.currentAccess ? \"hidden md:block\" : \"\"\n            }`}\n          >\n            <span className=\"text-gray-600 mt-2 font-semibold text-2xl\">\n              Settings\n            </span>\n            {!this.state.loading && (\n              <div className=\"overflow-x-auto w-full\">\n                <Table\n                  columns={[\n                    {\n                      columnTitle: \"Access Name\",\n                      alignText: \"left\",\n                      padding: \"p-3\",\n                    },\n                    { columnTitle: \"Create\", alignText: \"left\" },\n                    { columnTitle: \"View\", alignText: \"left\" },\n                    { columnTitle: \"Update\", alignText: \"left\" },\n                    { columnTitle: \"Delete\", alignText: \"left\" },\n                  ]}\n                  rows={this.tableData}\n                  pagination={false}\n                  search={true}\n                  searchBG=\"bg-gray-50\"\n                  thColor=\"gray\"\n                />\n              </div>\n            )}\n          </div>\n          <div className={`col-span-1 md:col-span-2`}>\n            {!this.props.currentAccess ? (\n              <div className=\"w-full hidden md:flex flex-col items-center text-gray-600 gap-1 py-3\">\n                <MdSettings className=\"w-20 h-20\" />\n                <span className=\"text-8 md:text-12\">\n                  Choose Access to Customize\n                </span>\n              </div>\n            ) : (\n              <div className={``}>\n                <h1 className=\"text-2xl md:text-3xl font-semibold text-center my-2 text-gray-900\">\n                  Customize User Access\n                </h1>\n                <div className=\"flex justify-center mb-3\">\n                  <h2 className=\"text-2xl font-semibold text-center text-gray-600 flex flex-row items-center\">\n                    <BiRightArrowAlt className=\"w-7 h-7\" />\n                    {this.props.currentAccess.task}\n                  </h2>\n                </div>\n\n                <div className=\"flex flex-col px-2 md:px-1\">\n                  <form\n                    className=\"flex flex-col items-center\"\n                    onSubmit={(e) => this.handleCustomization(e)}\n                  >\n                    <div className=\"inline-flex gap-2 items-center\">\n                      <SiAddthis className=\"w-7 h-7 text-gray-600\" />\n                      <div className=\"flex flex-col\">\n                        <h3 className=\"font-semibold text-xl\">Create</h3>\n                        <span className=\"text-gray-600 text-sm md:pr-1\">\n                          This permission gives the user the ability to create\n                        </span>\n                      </div>\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-checkbox h-7 w-7 text-teal-600\"\n                        onChange={() =>\n                          this.setCreatePermission(!this.state.createPermission)\n                        }\n                        checked={this.state.createPermission}\n                        disabled={this.state.loadindRequest}\n                      />\n                    </div>\n                    <div className=\"inline-flex gap-2 items-center\">\n                      <MdRemoveRedEye className=\"w-7 h-7 text-gray-600\" />\n                      <div className=\"flex flex-col\">\n                        <h3 className=\"font-semibold text-xl\">View</h3>\n                        <span className=\"text-gray-600 text-sm md:pr-4\">\n                          This permission gives the user the ability to view\n                        </span>\n                      </div>\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-checkbox h-7 w-7 text-teal-600\"\n                        onChange={() =>\n                          this.setViewPermission(!this.state.viewPermission)\n                        }\n                        checked={this.state.viewPermission}\n                        disabled={this.state.loadindRequest}\n                      />\n                    </div>\n                    <div className=\"inline-flex gap-2 items-center\">\n                      <MdEdit className=\"w-7 h-7 text-gray-600\" />\n                      <div className=\"flex flex-col\">\n                        <h3 className=\"font-semibold text-xl\">Update</h3>\n                        <span className=\"text-gray-600 text-sm\">\n                          This permission gives the user the ability to update\n                        </span>\n                      </div>\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-checkbox h-7 w-7 text-teal-600\"\n                        onChange={() =>\n                          this.setUpdatePermission(!this.state.updatePermission)\n                        }\n                        checked={this.state.updatePermission}\n                        disabled={this.state.loadindRequest}\n                      />\n                    </div>\n                    <div className=\"inline-flex gap-2 items-center\">\n                      <MdDelete className=\"w-7 h-7 text-gray-600\" />\n                      <div className=\"flex flex-col\">\n                        <h3 className=\"font-semibold text-xl\">Delete</h3>\n                        <span className=\"text-gray-600 text-sm md:pr-1\">\n                          This permission gives the user the ability to delete\n                        </span>\n                      </div>\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-checkbox h-7 w-7 text-teal-600\"\n                        onChange={() =>\n                          this.setDeletePermission(!this.state.deletePermission)\n                        }\n                        checked={this.state.deletePermission}\n                        disabled={this.state.loadindRequest}\n                      />\n                    </div>\n\n                    <div className=\"flex items-center justify-center w-full py-3 gap-2\">\n                      {/* <button className=\"btn btn-secondary bg-red-600\">Back</button> */}\n                      <button\n                        className=\"btn bg-gray-500 hover:bg-gray-700 focus:outline-none text-white\"\n                        disabled={this.state.loadindRequest}\n                        onClick={() => {\n                          this.props.setCurrentAccess(null);\n                          this.setCreatePermission(false);\n                          this.setViewPermission(false);\n                          this.setUpdatePermission(false);\n                          this.setDeletePermission(false);\n                        }}\n                      >\n                        Cancel\n                      </button>\n                      <button\n                        className=\"btn btn-blue\"\n                        disabled={this.state.loadindRequest}\n                      >\n                        {!this.state.loadindRequest\n                          ? \"Save Change\"\n                          : \"Processing..\"}\n                      </button>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const UserAccess = React.memo(\n  connect(null, {\n    customizeUserAccess,\n    PushPopupAlert,\n  })(_UserAccess)\n);\n","import React, { FC } from \"react\";\nimport { IconType } from \"react-icons\";\nimport { FaUsers } from \"react-icons/fa\";\nimport { toAnyDigit } from \"../../shared/dataTest\";\n\nexport type DashboardLabelItemInterface = {\n  // TITLE: Application or Exam or Shortlisted ....\n  title: string;\n  // ICON: FaExpand ....\n  icon: IconType;\n  // ICON COLOR: blue, indigo, gray ....\n  iconColor: string;\n  // COUNT: 0,1,2,3,5,23,563 ....\n  count: number;\n  // COUNT: 0,1,2,3,5,23,563 ....\n  countOver?: number;\n};\n\nconst DashboardLabelItem: FC<DashboardLabelItemInterface> = (\n  props = {\n    title: \"\",\n    icon: FaUsers,\n    iconColor: \"indigo\",\n    count: 0,\n    countOver: undefined,\n  }\n) => {\n  const IconDefined = props.icon;\n  return (\n    <div className=\"flex items-center px-6 py-4 bg-white w-full rounded-md space-x-2 mb-2 lg:mb-0 shadow-md\">\n      <div\n        className={`p-3 rounded-full bg-${props.iconColor}-200 bg-opacity-75`}\n      >\n        <IconDefined className={`h-8 w-8 text-${props.iconColor}-600`} />\n      </div>\n      <div>\n        <h1 className=\"text-3xl font-semibold text-gray-700\">\n          {toAnyDigit(props.count)}{\" \"}\n          {props.countOver && \"/ \" + toAnyDigit(props.countOver)}\n        </h1>\n        <span className=\"text-gray-500 text-lg\">{props.title}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(DashboardLabelItem);\n","import React, { useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { SessionPlanInterface } from \"../../../interfaces\";\nimport { course } from \"../../../interfaces/course\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport { ExamsParcentageSuccessFailedRateByPeriodInterface } from \"../../../interfaces/reports\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { DATE, sortThisArray } from \"../../../utils/functions\";\n\nexport interface ExamPerformanceToPrintInterface {\n  course_id: number;\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string;\n  exam_period: string;\n  exam_date: string;\n  exam_time: string;\n  exam_duration: string;\n  exam_performance: number;\n}\n\nexport enum examPerformanceReportContentKeyInterface {\n  COURSER_NAME = \"course_name\",\n  COURSE_CODE = \"course_code\",\n  SCHOOL_LEVEL = \"school_levels\",\n  PERIOD = \"exam_period\",\n  DATE = \"exam_date\",\n  TIME = \"exam_time\",\n  DURATION = \"exam_duration\",\n  PERFORMANCE = \"exam_performance\",\n}\n\nexport interface examPerformanceReportContentInterface {\n  key: examPerformanceReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n\nexport const examPerformanceIsChangeAllowed = (\n  key: examPerformanceReportContentKeyInterface\n): boolean => {\n  if (\n    key === examPerformanceReportContentKeyInterface.COURSER_NAME ||\n    key === examPerformanceReportContentKeyInterface.COURSE_CODE ||\n    key === examPerformanceReportContentKeyInterface.PERIOD ||\n    key === examPerformanceReportContentKeyInterface.PERFORMANCE\n  ) {\n    return false;\n  }\n  return true;\n};\n\nexport const defaultExamPerformanceContent: examPerformanceReportContentInterface[] =\n  [\n    {\n      key: examPerformanceReportContentKeyInterface.COURSER_NAME,\n      title: \"Course names\",\n      status: true,\n    },\n    {\n      key: examPerformanceReportContentKeyInterface.COURSE_CODE,\n      title: \"Course code\",\n      status: true,\n    },\n    {\n      key: examPerformanceReportContentKeyInterface.SCHOOL_LEVEL,\n      title: \"School levels\",\n      status: true,\n    },\n    {\n      key: examPerformanceReportContentKeyInterface.PERIOD,\n      title: \"Exam period\",\n      status: true,\n    },\n    {\n      key: examPerformanceReportContentKeyInterface.DATE,\n      title: \"Exam date\",\n      status: true,\n    },\n    {\n      key: examPerformanceReportContentKeyInterface.TIME,\n      title: \"Exam time\",\n      status: true,\n    },\n    {\n      key: examPerformanceReportContentKeyInterface.DURATION,\n      title: \"Exam duration\",\n      status: true,\n    },\n    {\n      key: examPerformanceReportContentKeyInterface.PERFORMANCE,\n      title: \"Exam performance\",\n      status: true,\n    },\n  ];\n\nexport interface examPerformanceStateInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n  exam: ExamItemResponse | null;\n  exam_performance: number;\n}\n\nexport const FC_reportExamPerformanceData = (\n  allCourses: course[],\n  allExams: ExamItemResponse[],\n  examPerformance: ExamsParcentageSuccessFailedRateByPeriodInterface[]\n): examPerformanceStateInterface[] => {\n  let result: examPerformanceStateInterface[] = [],\n    ids: string[] = [];\n  for (const key in examPerformance) {\n    if (Object.prototype.hasOwnProperty.call(examPerformance, key)) {\n      if (ids.includes(examPerformance[key].answer_sheet_id)) continue;\n      ids.push(examPerformance[key].answer_sheet_id);\n      let courser = allCourses.find(\n        (item) => item.course_id === examPerformance[key].course\n      );\n      if (courser) {\n        let exam = allExams.find(\n          (item) =>\n            item.course === examPerformance[key].course &&\n            item.period === examPerformance[key].period\n        );\n        result.push({\n          course_name: courser.course_name,\n          course_code: courser.course_code,\n          description: courser.description,\n          school_levels: courser.school_levels,\n          course_id: courser.course_id,\n          exam: exam ? exam : null,\n          exam_performance: examPerformance[key].total_marks,\n        });\n      }\n    }\n  }\n  console.log(\"===============-----------------=====================\");\n  console.log({ result });\n  console.log(\"===============-----------------=====================\");\n  return result;\n};\n\nexport const searchExamPerformanceData = (\n  objList: examPerformanceStateInterface[],\n  text: string\n): examPerformanceStateInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (\n        prop === \"course_name\" ||\n        prop === \"course_code\" ||\n        prop === \"exam_performance\"\n      ) {\n        flag =\n          product[prop].toString().toLowerCase().indexOf(text.toLowerCase()) >\n          -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n};\n\ntype ExamPerformanceProps = {\n  loading: boolean;\n  examsListData: ExamItemResponse[] | null;\n  courseListData: course[] | null;\n  thisPeriod: SessionPlanInterface[];\n  examsPerformanceData:\n    | ExamsParcentageSuccessFailedRateByPeriodInterface[]\n    | null;\n};\n\nconst ExamPerformance: React.FC<ExamPerformanceProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const [isSorted, setIsSorted] = useState<boolean>(false);\n  const [sortProperty, setSortProperty] = useState<string>(\"\");\n  const [sortOrder, setSortOrder] = useState<\"ASC\" | \"DESC\">(\"ASC\");\n\n  const setSort = (thisProperty: string) => {\n    if (sortProperty === thisProperty && sortOrder === \"ASC\") {\n      setSortOrder(\"DESC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    } else {\n      setSortOrder(\"ASC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"bg-white my-4\">\n        <div className=\"w-full px-2 py-2\">\n          <input\n            onChange={(e) => setSearchInput(e.target.value)}\n            type=\"text\"\n            value={searchInput}\n            placeholder=\"Search...\"\n            className=\"w-full bg-gray-100 py-2 px-3 rounded\"\n            disabled={\n              props.courseListData &&\n              props.examsListData &&\n              props.examsPerformanceData &&\n              FC_reportExamPerformanceData(\n                props.courseListData,\n                props.examsListData,\n                props.examsPerformanceData\n              ).length <= 0\n                ? true\n                : false\n            }\n          />\n        </div>\n        <div className=\"w-full overflow-x-auto\">\n          <table className=\"w-full shadow\" id=\"report_content\">\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n              <tr>\n                <td className=\"px-2 py-2\">#</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"course_name\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Course <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">Exam date</td>\n                <td className=\"px-2 py-2\">Exam time</td>\n                <td className=\"px-2 py-2\">Exam duration</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"exam_performance\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Exam performance <BiSort />\n                  </div>\n                </td>\n              </tr>\n            </thead>\n            <tbody>\n              {props.courseListData === null || props.loading ? (\n                <tr>\n                  <td colSpan={6} className=\"px-2 py-2\">\n                    <Loading />\n                  </td>\n                </tr>\n              ) : props.examsListData &&\n                props.examsPerformanceData &&\n                FC_reportExamPerformanceData(\n                  props.courseListData,\n                  props.examsListData,\n                  props.examsPerformanceData\n                ).length <= 0 ? (\n                <tr>\n                  <td colSpan={6} className=\"px-2 py-2 text-center\">\n                    No Exam list available!\n                  </td>\n                </tr>\n              ) : (\n                props.examsListData &&\n                props.examsPerformanceData &&\n                sortThisArray(\n                  isSorted,\n                  searchExamPerformanceData(\n                    FC_reportExamPerformanceData(\n                      props.courseListData,\n                      props.examsListData,\n                      props.examsPerformanceData\n                    ),\n                    searchInput\n                  ),\n                  sortProperty,\n                  sortOrder\n                ).map((item: examPerformanceStateInterface, i) => (\n                  <tr\n                    key={i + 1}\n                    className={`bg-white text-gray-600 hover:bg-blue-100 hover:text-blue-700 border-b border-gray-300 hover:border-blue-500 text-sm`}\n                  >\n                    <td className=\"px-2 py-2\">{i + 1}</td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(item.course_name)} (\n                      <span className=\"font-semibold\">{item.course_code}</span>)\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam ? DATE(item.exam.exam_date) : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam ? item.exam.start_time : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam ? item.exam!.duration + \" min\" : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {Number(item.exam_performance.toFixed(1)) + \"%\"}\n                    </td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default React.memo(ExamPerformance);\n","import React from \"react\";\nimport DashboardLabelItem, {\n  DashboardLabelItemInterface,\n} from \"../DashboardLabelItem\";\n\ntype DashboardLabelProps = {\n  dataLabels: DashboardLabelItemInterface[];\n  labelsOnRow?: number;\n  childrenPosition?: \"START\" | \"END\";\n  children?: JSX.Element;\n};\n\nconst ExamDashboardLabels: React.FC<DashboardLabelProps> = (props) => {\n  const numCols: number = props.labelsOnRow\n    ? props.labelsOnRow > 4\n      ? props.labelsOnRow\n      : 4\n    : 4;\n  return (\n    <div\n      className={`grid 2xl:grid-cols-${numCols} xl:grid-cols-${\n        numCols - 1\n      } lg:grid-cols-${numCols - 2} md:grid-cols-${\n        numCols - 3\n      } sm:grid-cols-2 grid-cols-1 gap-4 items-center mx-auto`}\n    >\n      {props.children &&\n        ((props.childrenPosition && props.childrenPosition === \"START\") ||\n          !props.childrenPosition) &&\n        props.children}\n      {props.dataLabels.map((item, index) => (\n        <section key={index + item.title}>\n          <DashboardLabelItem\n            title={item.title}\n            icon={item.icon}\n            iconColor={item.iconColor}\n            count={item.count}\n          />\n        </section>\n      ))}\n      {props.children &&\n        props.childrenPosition &&\n        props.childrenPosition === \"END\" &&\n        props.children}\n    </div>\n  );\n};\n\nexport default React.memo(ExamDashboardLabels);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  FC_CreateDistrict,\n  FC_DeleteDistrict,\n  FC_UpdateDistrict,\n} from \"../../actions/location\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport {\n  DistrictInterface,\n  RoomLocationInterface,\n} from \"../../shared/interfaces\";\nimport { PushPopupAlert } from \"../../actions/system\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { errorToText } from \"../../utils/errors\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\n\ninterface AppProps {\n  thisProvince: RoomLocationInterface;\n  thisDistrict: DistrictInterface | null;\n  loadingRequest: boolean;\n  actionTypes:\n    | \"CREATE_PROVINCE\"\n    | \"UPDATE_PROVINCE\"\n    | \"CREATE_DISTRICT\"\n    | \"UPDATE_DISTRICT\"\n    | \"CREATE_SECTOR\"\n    | \"UPDATE_SECTOR\"\n    | null;\n  setLoadingRequest: React.Dispatch<React.SetStateAction<boolean>>;\n  setThisDistrict: React.Dispatch<\n    React.SetStateAction<DistrictInterface | null>\n  >;\n  setActionTypes: React.Dispatch<\n    React.SetStateAction<\n      | \"CREATE_PROVINCE\"\n      | \"UPDATE_PROVINCE\"\n      | \"CREATE_DISTRICT\"\n      | \"UPDATE_DISTRICT\"\n      | \"CREATE_SECTOR\"\n      | \"UPDATE_SECTOR\"\n      | null\n    >\n  >;\n  FC_CreateDistrict: Function;\n  FC_UpdateDistrict: Function;\n  FC_DeleteDistrict: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\nconst ViewDistrict: React.FC<AppProps> = (props) => {\n  const [districtName, setDistrictName] = useState<string>(\"\");\n  const [districtCode, setDistrictCode] = useState<number>(0);\n  const [error, setError] = useState<{ element: string; msg: string } | null>(\n    null\n  );\n\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(districtName)) {\n      return setError({\n        element: \"district_name\",\n        msg: \"District name is required\",\n      });\n    }\n\n    if (districtCode <= 0) {\n      return setError({\n        element: \"district_code\",\n        msg: \"Invalid district code, code must be greater than 0\",\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      let res;\n      if (props.actionTypes === \"CREATE_DISTRICT\") {\n        res = await axios.post<{ data: DistrictInterface }>(\n          `${API.APPLICATION}/district`,\n          {\n            province_id: props.thisProvince._id,\n            province_code: props.thisProvince.province_code,\n            district_name: districtName,\n            district_code: districtCode,\n            centers: [],\n          }\n        );\n        if (res.data) {\n          console.log({\n            province_id: props.thisProvince._id,\n            data: res.data.data,\n            res,\n          });\n          props.FC_CreateDistrict({\n            province_id: props.thisProvince._id,\n            data: {\n              centers: res.data.data.centers,\n              sectors: res.data.data.sectors,\n              province_code: res.data.data.province_code,\n              province_id: res.data.data.province_id,\n              district_code: res.data.data.district_code,\n              district_name: res.data.data.district_name,\n              district_id: res.data.data._id,\n            },\n          });\n          props.PushPopupAlert({\n            title: \"New district created successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setDistrictName(\"\");\n          setDistrictCode(0);\n        }\n      } else if (\n        props.thisDistrict &&\n        props.actionTypes === \"UPDATE_DISTRICT\"\n      ) {\n        const centers: string[] = props.thisDistrict.centers.map(\n          (center) => center._id\n        );\n        res = await axios.patch<{ data: DistrictInterface }>(\n          `${API.APPLICATION}/district`,\n          {\n            district_id: props.thisDistrict._id,\n            province_code: props.thisProvince.province_code,\n            district_name: districtName,\n            district_code: districtCode,\n            centers,\n          }\n        );\n        if (res.data) {\n          props.FC_UpdateDistrict({\n            province_id: props.thisProvince._id,\n            district_id: props.thisDistrict._id,\n            district_name: districtName,\n          });\n          props.PushPopupAlert({\n            title: \"District updated successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setDistrictName(\"\");\n          props.setThisDistrict(null);\n        }\n      }\n    } catch (error) {\n      console.log({ doc_category_error: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      props.setLoadingRequest(false);\n    }\n  };\n\n  // const handleDelete = async (districtId: string) => {\n  //   try {\n  //     const res = await axios.delete<DistrictInterface>(\n  //       `${API.APPLICATION}/district/${districtId}`\n  //     );\n\n  //     if (res.data) {\n  //       props.FC_DeleteDistrict({\n  //         province_id: props.thisProvince._id,\n  //         district_id: districtId,\n  //       });\n  //       props.PushPopupAlert({\n  //         title: \"District deleted successfully\",\n  //         theme: PopupAlertTheme.success,\n  //       });\n  //       props.setLoadingRequest(false);\n  //       props.setActionTypes(null);\n  //     }\n  //   } catch (error) {\n  //     console.log({ district_error: error });\n  //     props.PushPopupAlert({\n  //       title: errorToText(error),\n  //       theme: PopupAlertTheme.danger,\n  //     });\n  //     props.setLoadingRequest(false);\n  //   }\n  // };\n\n  return (\n    <div className={`w-full p-2`}>\n      {props.thisProvince.districts.length > 0 ? (\n        <div className=\"rounded border border-gray-100 shadow-sm animate__animated animate__fadeIn\">\n          <table className=\"w-full z-0\">\n            <thead className=\"bg-gray-50\">\n              <tr className=\"text-left\">\n                <th className=\"px-3 py-3\">#</th>\n                <th>District name</th>\n                <th>District code</th>\n                <th>Sectors</th>\n                {/* <th>Status</th> */}\n              </tr>\n            </thead>\n            <tbody className=\"text-base\">\n              {props.thisProvince.districts.map((district, index) => (\n                <tr\n                  key={index + district._id}\n                  className={`text-left border-b border-gray-50`}\n                >\n                  <td className=\"px-3 py-1\">{index + 1}</td>\n                  <td>{district.district_name}</td>\n                  <td>{district.district_code}</td>\n                  <td>\n                    {district.sectors && district.sectors.length > 0\n                      ? district.sectors.length + \" Sector(s)\"\n                      : \"\"}\n                  </td>\n                  {/* <td>\n                    <div className=\"flex items-center gap-2\">\n                      <button\n                        title={\n                          props.thisDistrict &&\n                          props.thisDistrict._id === district._id\n                            ? \"Close Centers\"\n                            : \"View Centers\"\n                        }\n                        className={`${\n                          props.thisDistrict &&\n                          props.thisDistrict._id === district._id\n                            ? \"bg-gray-500 hover:bg-gray-600\"\n                            : \"bg-gray-400 hover:bg-gray-500\"\n                        } p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none`}\n                        onClick={() =>\n                          !props.thisDistrict ||\n                          props.thisDistrict._id !== district._id\n                            ? props.setThisDistrict(district)\n                            : props.setThisDistrict(null)\n                        }\n                      >\n                        {props.thisDistrict &&\n                        props.thisDistrict._id === district._id ? (\n                          <IoMdEyeOff className=\"text-white w-4 h-4\" />\n                        ) : (\n                          <IoMdEye className=\"text-white w-4 h-4\" />\n                        )}\n                      </button>\n                      <button\n                        title=\"Update district\"\n                        className=\"bg-blue-500 hover:bg-blue-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                        onClick={() => {\n                          props.setThisDistrict(district);\n                          setDistrictName(district.district_name);\n                          setDistrictCode(district.district_code);\n                          props.setActionTypes(\"UPDATE_DISTRICT\");\n                        }}\n                        disabled={\n                          props.loadingRequest || props.actionTypes !== null\n                        }\n                      >\n                        <MdCreate className=\"text-white w-4 h-4\" />\n                      </button>\n                      <button\n                        title=\"Delete Sub-Category\"\n                        className=\"bg-red-500 hover:bg-red-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                        onClick={() => handleDelete(district._id)}\n                        disabled={props.loadingRequest}\n                      >\n                        <MdClear className=\"text-white w-4 h-4\" />\n                      </button>\n                    </div>\n                  </td> */}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        <NoResult\n          theme={NoResultThemes.Dark}\n          value={\"No district found!\"}\n          component={\n            <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n              <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                <li\n                  onClick={() => props.setActionTypes(\"CREATE_DISTRICT\")}\n                  className=\"underline text-gray-500 cursor-pointer\"\n                >\n                  Add district\n                </li>\n              </ul>\n            </div>\n          }\n        />\n      )}\n\n      {/* modal for creating new categories or sub category */}\n      {props.actionTypes &&\n        (props.actionTypes === \"CREATE_DISTRICT\" ||\n          props.actionTypes === \"UPDATE_DISTRICT\") && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={(): void => {\n              props.setActionTypes(null);\n              setDistrictName(\"\");\n              setDistrictCode(10);\n              setError(null);\n            }}\n            displayClose={false}\n            backDropClose={false}\n            title={\n              <div className=\"flex items-center space-x-5\">\n                <div className=\"block pl-2 font-semibold text-xl self-start text-gray-700\">\n                  {/* <p className=\"text-base text-gray-500 font-medium\">\n                    You are{\" \"}\n                    {actionType === \"CREATE_SUB\" || \"CREATE_CAT\"\n                      ? \"creating\"\n                      : \"updating\"}\n                  </p> */}\n                  <h2 className=\"uppercase text-back\">\n                    {props.actionTypes === \"CREATE_DISTRICT\"\n                      ? \"CREATING NEW DISTRICT\"\n                      : props.actionTypes === \"UPDATE_DISTRICT\" &&\n                        \"UPDATING EXISTING DISTRICT\"}\n                  </h2>\n                </div>\n              </div>\n            }\n            widthSizeClass={ModalSize.medium}\n            padding={{ title: true, body: false, footer: false }}\n          >\n            <div className=\"mx-5 mb-4\">\n              <div className=\"py-2 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n                <div className=\"flex flex-col\">\n                  <label>District name</label>\n                  <input\n                    type=\"text\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"district_name\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"district_name\" &&\n                        setError(null);\n                      setDistrictName(e.target.value);\n                    }}\n                    value={districtName}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"district_name\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n                <div className=\"flex flex-col\">\n                  <label>District code</label>\n                  <input\n                    type=\"number\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"district_code\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"district_code\" &&\n                        setError(null);\n                      setDistrictCode(Number(e.target.value));\n                    }}\n                    value={districtCode}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"district_code\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n              </div>\n              <div className=\"pt-4 flex justify-between\">\n                <button\n                  onClick={() => {\n                    props.setActionTypes(null);\n                    setDistrictName(\"\");\n                    setDistrictCode(10);\n                    setError(null);\n                  }}\n                  className={`btn bg-gray-400 text-white hover:bg-gray-600`}\n                  type=\"button\"\n                  disabled={props.loadingRequest}\n                >\n                  Exit\n                </button>\n                <button\n                  className=\"btn bg-primary text-white hover:bg-blue-600\"\n                  type=\"button\"\n                  onClick={() => handleSubmit()}\n                  disabled={props.loadingRequest}\n                >\n                  {props.loadingRequest ? \"Loading...\" : \"Save\"}\n                </button>\n              </div>\n            </div>\n          </Modal>\n        )}\n      {/* end modal for creating new categories or sub category */}\n    </div>\n  );\n};\n\nexport default React.memo(connect(null, {\n  FC_CreateDistrict,\n  FC_UpdateDistrict,\n  FC_DeleteDistrict,\n  PushPopupAlert,\n})(ViewDistrict));\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { IoMdEye, IoMdEyeOff } from \"react-icons/io\";\nimport {\n  FC_CreateProvince,\n  FC_DeleteProvince,\n  FC_UpdateProvince,\n} from \"../../actions/location\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport {\n  DistrictInterface,\n  RoomLocationInterface,\n} from \"../../shared/interfaces\";\nimport { PushPopupAlert } from \"../../actions/system\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { errorToText } from \"../../utils/errors\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\n\ninterface AppProps {\n  thisProvince: RoomLocationInterface | null;\n  thisDistrict: DistrictInterface | null;\n  loadingRequest: boolean;\n  locations: RoomLocationInterface[];\n  actionTypes:\n    | \"CREATE_PROVINCE\"\n    | \"UPDATE_PROVINCE\"\n    | \"CREATE_DISTRICT\"\n    | \"UPDATE_DISTRICT\"\n    | \"CREATE_SECTOR\"\n    | \"UPDATE_SECTOR\"\n    | null;\n  setLoadingRequest: React.Dispatch<React.SetStateAction<boolean>>;\n  setThisProvince: React.Dispatch<\n    React.SetStateAction<RoomLocationInterface | null>\n  >;\n  setActionTypes: React.Dispatch<\n    React.SetStateAction<\n      | \"CREATE_PROVINCE\"\n      | \"UPDATE_PROVINCE\"\n      | \"CREATE_DISTRICT\"\n      | \"UPDATE_DISTRICT\"\n      | \"CREATE_SECTOR\"\n      | \"UPDATE_SECTOR\"\n      | null\n    >\n  >;\n  FC_CreateProvince: Function;\n  FC_UpdateProvince: Function;\n  FC_DeleteProvince: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\nconst ViewProvince: React.FC<AppProps> = (props) => {\n  const [provinceTitle, setProvinceTitle] = useState<string>(\"\");\n  const [provinceCode, setProvinceCode] = useState<number>(0);\n  const [error, setError] = useState<{ element: string; msg: string } | null>(\n    null\n  );\n\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(provinceTitle)) {\n      return setError({\n        element: \"province_title\",\n        msg: \"Title of Province is required\",\n      });\n    }\n\n    if (provinceCode <= 0) {\n      return setError({\n        element: \"province_code\",\n        msg: \"Code of Province is required\",\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      let res;\n      if (props.actionTypes === \"CREATE_PROVINCE\") {\n        res = await axios.post<{ data: RoomLocationInterface }>(\n          `${API.APPLICATION}/province`,\n          {\n            province_name: provinceTitle,\n            province_code: provinceCode,\n            districts: [],\n          }\n        );\n\n        if (res.data) {\n          props.FC_CreateProvince(res.data.data);\n          props.PushPopupAlert({\n            title: \"New Province created successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setProvinceTitle(\"\");\n        }\n      } else if (\n        props.thisProvince &&\n        props.actionTypes === \"UPDATE_PROVINCE\"\n      ) {\n        const districts: string[] = props.thisProvince.districts.map(\n          (district) => district._id\n        );\n        res = await axios.patch<{ updated: RoomLocationInterface }>(\n          `${API.APPLICATION}/province`,\n          {\n            province_id: props.thisProvince._id,\n            province_name: provinceTitle,\n            province_code: provinceCode,\n            districts,\n          }\n        );\n        if (res.data) {\n          console.log({ res: res.data.updated });\n          props.FC_UpdateProvince(res.data.updated);\n          props.PushPopupAlert({\n            title: \"Province updated successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setProvinceTitle(\"\");\n          props.setThisProvince(null);\n        }\n      }\n    } catch (error) {\n      console.error({ province_error: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      props.setLoadingRequest(false);\n    }\n  };\n\n  // const handleDelete = async (provinceId: string) => {\n  //   try {\n  //     const res = await axios.delete<RoomLocationInterface>(\n  //       `${API.APPLICATION}/province/${provinceId}`\n  //     );\n\n  //     if (res.data) {\n  //       console.log({ res });\n  //       props.FC_DeleteProvince(provinceId);\n  //       props.PushPopupAlert({\n  //         title: \"Province deleted successfully\",\n  //         theme: PopupAlertTheme.success,\n  //       });\n  //       props.setLoadingRequest(false);\n  //       props.setActionTypes(null);\n  //     }\n  //   } catch (error) {\n  //     console.log({ province_error: error });\n  //     props.PushPopupAlert({\n  //       title: errorToText(error),\n  //       theme: PopupAlertTheme.danger,\n  //     });\n  //     props.setLoadingRequest(false);\n  //   }\n  // };\n\n  return (\n    <div className={`w-full p-2`}>\n      {props.locations.length > 0 ? (\n        props.locations.map((province, index) => (\n          <div\n            key={index + province._id}\n            className=\"flex justify-between items-center p-2 mb-3 rounded border border-gray-100 shadow\"\n          >\n            <div className=\"flex items-center\">\n              <div className=\"ml-2\">\n                <div className=\"text-xl font-semibold text-gray-600\">\n                  {province.province_name}\n                </div>\n                <div className=\"text-sm font-light text-gray-500\">\n                  {province.districts.length > 0\n                    ? province.districts.length + \"District(s)\"\n                    : null}\n                </div>\n              </div>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <button\n                title={\n                  props.thisProvince &&\n                  props.thisProvince._id === province._id &&\n                  props.actionTypes !== \"UPDATE_PROVINCE\"\n                    ? \"Close Districts\"\n                    : \"View Districts\"\n                }\n                className={`${\n                  props.thisProvince &&\n                  props.thisProvince._id === province._id &&\n                  props.actionTypes !== \"UPDATE_PROVINCE\"\n                    ? \"bg-gray-500 hover:bg-gray-600\"\n                    : \"bg-gray-400 hover:bg-gray-500\"\n                } p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none`}\n                onClick={() => {\n                  !props.thisProvince || props.thisProvince._id !== province._id\n                    ? props.setThisProvince(province)\n                    : props.setThisProvince(null);\n                  setProvinceTitle(\"\");\n                  props.setActionTypes(null);\n                }}\n              >\n                {props.thisProvince &&\n                props.thisProvince._id === province._id &&\n                props.actionTypes !== \"UPDATE_PROVINCE\" ? (\n                  <IoMdEyeOff className=\"text-white w-4 h-4\" />\n                ) : (\n                  <IoMdEye className=\"text-white w-4 h-4\" />\n                )}\n              </button>\n              {/* <button\n                title=\"Update Province\"\n                className=\"bg-blue-500 hover:bg-blue-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                onClick={() => {\n                  props.setThisProvince(province);\n                  setProvinceTitle(province.province_name);\n                  setProvinceCode(province.province_code);\n                  props.setActionTypes(\"UPDATE_PROVINCE\");\n                }}\n                disabled={props.loadingRequest || props.actionTypes !== null}\n              >\n                <MdCreate className=\"text-white w-4 h-4\" />\n              </button>\n              <button\n                title=\"Delete Sub-Category\"\n                className=\"bg-red-500 hover:bg-red-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                onClick={() => handleDelete(province._id)}\n                disabled={props.loadingRequest || props.actionTypes !== null}\n              >\n                <MdClear className=\"text-white w-4 h-4\" />\n              </button> */}\n            </div>\n          </div>\n        ))\n      ) : (\n        <NoResult\n          theme={NoResultThemes.Dark}\n          value=\"No province found!\"\n          component={\n            <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n              <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                <li\n                  onClick={() => props.setActionTypes(\"CREATE_PROVINCE\")}\n                  className=\"underline text-gray-500 cursor-pointer\"\n                >\n                  Add province\n                </li>\n              </ul>\n            </div>\n          }\n        />\n      )}\n\n      {/* modal for creating new categories or sub category */}\n      {props.actionTypes &&\n        (props.actionTypes === \"CREATE_PROVINCE\" ||\n          props.actionTypes === \"UPDATE_PROVINCE\") && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={(): void => {\n              props.setActionTypes(null);\n              setProvinceTitle(\"\");\n              setProvinceCode(0);\n              setError(null);\n            }}\n            displayClose={false}\n            backDropClose={false}\n            title={\n              <div className=\"flex items-center space-x-5\">\n                <div className=\"block pl-2 font-semibold text-xl self-start text-gray-700\">\n                  <h2 className=\"uppercase text-back\">\n                    {props.actionTypes === \"CREATE_PROVINCE\"\n                      ? \"CREATING NEW PROVINCE\"\n                      : props.actionTypes === \"UPDATE_PROVINCE\" &&\n                        \"UPDATING EXISTING PROVINCE\"}\n                  </h2>\n                </div>\n              </div>\n            }\n            widthSizeClass={ModalSize.medium}\n            padding={{ title: true, body: false, footer: false }}\n          >\n            <div className=\"mx-5 mb-4\">\n              <div className=\"py-2 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n                <div className=\"flex flex-col\">\n                  <label>Province name</label>\n                  <input\n                    type=\"text\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"province_title\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"province_title\" &&\n                        setError(null);\n                      setProvinceTitle(e.target.value);\n                    }}\n                    value={provinceTitle}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"province_title\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n                <div className=\"flex flex-col\">\n                  <label>Province code</label>\n                  <input\n                    type=\"number\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"province_code\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"province_code\" &&\n                        setError(null);\n                      setProvinceCode(Number(e.target.value));\n                    }}\n                    value={provinceCode}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"province_code\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n              </div>\n              <div className=\"pt-4 flex justify-between\">\n                <button\n                  onClick={() => {\n                    props.setActionTypes(null);\n                    setProvinceTitle(\"\");\n                    setProvinceCode(0);\n                    setError(null);\n                  }}\n                  className={`btn bg-gray-400 text-white hover:bg-gray-600`}\n                  type=\"button\"\n                  disabled={props.loadingRequest}\n                >\n                  Exit\n                </button>\n                <button\n                  className=\"btn bg-primary text-white hover:bg-blue-600\"\n                  type=\"button\"\n                  onClick={() => handleSubmit()}\n                  disabled={props.loadingRequest}\n                >\n                  {props.loadingRequest ? \"Loading...\" : \"Save\"}\n                </button>\n              </div>\n            </div>\n          </Modal>\n        )}\n      {/* end modal for creating new categories or sub category */}\n    </div>\n  );\n};\n\nexport default React.memo(\n  connect(null, {\n    FC_CreateProvince,\n    FC_UpdateProvince,\n    FC_DeleteProvince,\n    PushPopupAlert,\n  })(ViewProvince)\n);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { MdClear, MdCreate } from \"react-icons/md\";\nimport {\n  FC_CreateSector,\n  FC_DeleteSector,\n  FC_UpdateSector,\n} from \"../../actions/location\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport { DistrictInterface, SectorInterface } from \"../../shared/interfaces\";\nimport { PushPopupAlert } from \"../../actions/system\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { errorToText } from \"../../utils/errors\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\n\ninterface AppProps {\n  thisDistrict: DistrictInterface;\n  thisSector: SectorInterface | null;\n  loadingRequest: boolean;\n  actionTypes:\n    | \"CREATE_PROVINCE\"\n    | \"UPDATE_PROVINCE\"\n    | \"CREATE_DISTRICT\"\n    | \"UPDATE_DISTRICT\"\n    | \"CREATE_SECTOR\"\n    | \"UPDATE_SECTOR\"\n    | null;\n  setLoadingRequest: React.Dispatch<React.SetStateAction<boolean>>;\n  setThisSector: React.Dispatch<React.SetStateAction<SectorInterface | null>>;\n  setActionTypes: React.Dispatch<\n    React.SetStateAction<\n      | \"CREATE_PROVINCE\"\n      | \"UPDATE_PROVINCE\"\n      | \"CREATE_DISTRICT\"\n      | \"UPDATE_DISTRICT\"\n      | \"CREATE_SECTOR\"\n      | \"UPDATE_SECTOR\"\n      | null\n    >\n  >;\n  FC_CreateSector: Function;\n  FC_UpdateSector: Function;\n  FC_DeleteSector: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\nconst ViewSectors: React.FC<AppProps> = (props) => {\n  const [sectorName, setSectorName] = useState<string>(\"\");\n  const [sectorCode, setSectorCode] = useState<number>(0);\n  const [error, setError] = useState<{ element: string; msg: string } | null>(\n    null\n  );\n\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(sectorName)) {\n      return setError({\n        element: \"sector_name\",\n        msg: \"Sector name is required\",\n      });\n    }\n\n    if (sectorCode <= 0) {\n      return setError({\n        element: \"sector_code\",\n        msg: \"Invalid sector code, must be \",\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      let res;\n      if (props.actionTypes === \"CREATE_SECTOR\") {\n        res = await axios.post<{ data: SectorInterface }>(\n          `${API.APPLICATION}/sector`,\n          {\n            district_id: props.thisDistrict._id,\n            district_code: props.thisDistrict.district_code,\n            sector_name: sectorName,\n            sector_code: sectorCode,\n          }\n        );\n        if (res.data) {\n          console.log({\n            district_id: props.thisDistrict._id,\n            data: res.data.data,\n            res,\n          });\n          props.FC_CreateSector({\n            province_id: props.thisDistrict.province_id,\n            district_id: props.thisDistrict._id,\n            data: {\n              district_id: res.data.data.district_id,\n              district_code: res.data.data.district_code,\n              sector_name: res.data.data.sector_name,\n              sector_code: res.data.data.sector_code,\n              sector_id: res.data.data.sector_id,\n            },\n          });\n          props.PushPopupAlert({\n            title: \"New sector created successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setSectorName(\"\");\n        }\n      } else if (props.thisSector && props.actionTypes === \"UPDATE_SECTOR\") {\n        res = await axios.patch<{ data: DistrictInterface }>(\n          `${API.APPLICATION}/sector`,\n          {\n            district_id: props.thisSector.district_id,\n            district_code: props.thisDistrict.district_code,\n            sector_id: props.thisSector.sector_id,\n            sector_name: sectorName,\n            sector_code: sectorCode,\n          }\n        );\n        if (res.data) {\n          props.FC_UpdateSector({\n            province_id: props.thisDistrict.province_id,\n            district_id: props.thisSector.district_id,\n            sector_id: props.thisSector.sector_id,\n            sector_name: sectorName,\n            sector_code: sectorCode,\n          });\n          props.PushPopupAlert({\n            title: \"Sector updated successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setSectorName(\"\");\n          props.setThisSector(null);\n        }\n      }\n    } catch (error) {\n      console.log({ sector_error: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      props.setLoadingRequest(false);\n    }\n  };\n\n  const handleDelete = async (sectorId: string) => {\n    try {\n      const res = await axios.delete<SectorInterface>(\n        `${API.APPLICATION}/sector/${sectorId}`\n      );\n\n      if (res.data) {\n        props.FC_DeleteSector({\n          province_id: props.thisDistrict.province_id,\n          district_id: props.thisDistrict._id,\n          sector_id: sectorId,\n        });\n        props.PushPopupAlert({\n          title: \"Sector deleted successfully\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setLoadingRequest(false);\n        props.setActionTypes(null);\n      }\n    } catch (error) {\n      console.log({ district_error: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      props.setLoadingRequest(false);\n    }\n  };\n\n  return (\n    <div className={`w-full p-2`}>\n      {props.thisDistrict.sectors && props.thisDistrict.sectors.length > 0 ? (\n        <div className=\"rounded border border-gray-100 shadow-sm animate__animated animate__fadeIn\">\n          <table className=\"w-full z-0\">\n            <thead className=\"bg-gray-50\">\n              <tr className=\"text-left\">\n                <th className=\"px-3 py-3\">#</th>\n                <th>Sector name</th>\n                <th>Sector code</th>\n                <th>Status</th>\n              </tr>\n            </thead>\n            <tbody className=\"text-sm\">\n              {props.thisDistrict.sectors.map((sector, index) => (\n                <tr\n                  key={index + sector.district_id}\n                  className={`text-left border-b border-gray-50`}\n                >\n                  <td className=\"px-3 py-1\">{index + 1}</td>\n                  <td>{sector.sector_name}</td>\n                  <td>{sector.sector_name}</td>\n                  <td>\n                    <div className=\"flex items-center gap-2\">\n                      <button\n                        title=\"Update sector\"\n                        className=\"bg-blue-500 hover:bg-blue-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                        onClick={() => {\n                          props.setThisSector(sector);\n                          setSectorName(sector.sector_name);\n                          setSectorCode(sector.sector_code);\n                          props.setActionTypes(\"UPDATE_SECTOR\");\n                        }}\n                        disabled={\n                          props.loadingRequest || props.actionTypes !== null\n                        }\n                      >\n                        <MdCreate className=\"text-white w-4 h-4\" />\n                      </button>\n                      <button\n                        title=\"Delete sector\"\n                        className=\"bg-red-500 hover:bg-red-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                        onClick={() => handleDelete(sector.sector_id)}\n                        disabled={props.loadingRequest}\n                      >\n                        <MdClear className=\"text-white w-4 h-4\" />\n                      </button>\n                    </div>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        <NoResult\n          theme={NoResultThemes.Dark}\n          value={\"No sector found!\"}\n          component={\n            <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n              <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                <li\n                  onClick={() => props.setActionTypes(\"CREATE_SECTOR\")}\n                  className=\"underline text-gray-500 cursor-pointer\"\n                >\n                  Add sector\n                </li>\n              </ul>\n            </div>\n          }\n        />\n      )}\n\n      {/* modal for creating new categories or sub category */}\n      {props.actionTypes &&\n        (props.actionTypes === \"CREATE_SECTOR\" ||\n          props.actionTypes === \"UPDATE_SECTOR\") && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={(): void => {\n              props.setActionTypes(null);\n              setSectorName(\"\");\n              setSectorCode(0);\n              setError(null);\n            }}\n            displayClose={false}\n            backDropClose={false}\n            title={\n              <div className=\"flex items-center space-x-5\">\n                <div className=\"block pl-2 font-semibold text-xl self-start text-gray-700\">\n                  {/* <p className=\"text-base text-gray-500 font-medium\">\n                    You are{\" \"}\n                    {actionType === \"CREATE_SUB\" || \"CREATE_CAT\"\n                      ? \"creating\"\n                      : \"updating\"}\n                  </p> */}\n                  <h2 className=\"uppercase text-back\">\n                    {props.actionTypes === \"CREATE_SECTOR\"\n                      ? \"CREATING NEW SECTOR\"\n                      : props.actionTypes === \"UPDATE_SECTOR\" &&\n                        \"UPDATING EXISTING SECTOR\"}\n                  </h2>\n                </div>\n              </div>\n            }\n            widthSizeClass={ModalSize.medium}\n            padding={{ title: true, body: false, footer: false }}\n          >\n            <div className=\"w-full px-5 mb-5\">\n              <div className=\"py-3 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n                <div className=\"flex flex-col\">\n                  <label>Sector name</label>\n                  <input\n                    type=\"text\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"sector_name\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"sector_name\" &&\n                        setError(null);\n                      setSectorName(e.target.value);\n                    }}\n                    value={sectorName}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"sector_name\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n                <div className=\"flex flex-col\">\n                  <label>Sector code</label>\n                  <input\n                    type=\"number\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"sector_code\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"sector_code\" &&\n                        setError(null);\n                      setSectorCode(Number(e.target.value));\n                    }}\n                    value={sectorCode}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"sector_code\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n              </div>\n              <div className=\"pt-4 flex justify-between\">\n                <button\n                  onClick={() => {\n                    props.setActionTypes(null);\n                    setSectorName(\"\");\n                    setSectorCode(0);\n                    setError(null);\n                  }}\n                  className={`btn bg-gray-400 text-white hover:bg-gray-600`}\n                  type=\"button\"\n                  disabled={props.loadingRequest}\n                >\n                  Exit\n                </button>\n                <button\n                  className=\"btn bg-primary text-white hover:bg-blue-600\"\n                  type=\"button\"\n                  onClick={() => handleSubmit()}\n                  disabled={props.loadingRequest}\n                >\n                  {props.loadingRequest ? \"Loading...\" : \"Save\"}\n                </button>\n              </div>\n            </div>\n          </Modal>\n        )}\n      {/* end modal for creating new categories or sub category */}\n    </div>\n  );\n};\n\nexport default React.memo(\n  connect(null, {\n    FC_CreateSector,\n    FC_UpdateSector,\n    FC_DeleteSector,\n    PushPopupAlert,\n  })(ViewSectors)\n);\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { AiOutlineFilter } from \"react-icons/ai\";\nimport { BsCaretRightFill } from \"react-icons/bs\";\nimport { connect } from \"react-redux\";\nimport { getAllRoom } from \"../../actions/location\";\nimport { StoreState } from \"../../reducers\";\nimport {\n  DistrictInterface,\n  LocationRoomTableInterface,\n  RoomLocationInterface,\n  SectorInterface,\n} from \"../../shared/interfaces\";\nimport { LocationsInArray } from \"../UserManagement/UserList\";\nimport ViewDistricts from \"./ViewDistricts\";\nimport ViewProvince from \"./ViewProvince\";\nimport ViewSectors from \"./ViewSectors\";\n\nexport const distinctDistrict = (\n  rooms: RoomLocationInterface[],\n  province_id?: string\n): LocationRoomTableInterface[] => {\n  let ids: string[] = [],\n    result: LocationRoomTableInterface[] = [];\n\n  LocationsInArray(rooms).forEach((element) => {\n    if (!ids.includes(element.district_id)) {\n      if (province_id && element.province_id === province_id) {\n        ids.push(element.district_id);\n        result.push(element);\n      } else if (province_id === undefined) {\n        ids.push(element.district_id);\n        result.push(element);\n      }\n    }\n  });\n\n  return result;\n};\n\nexport const distinctCenter = (\n  rooms: RoomLocationInterface[],\n  district_id: string\n): LocationRoomTableInterface[] => {\n  let ids: string[] = [],\n    result: LocationRoomTableInterface[] = [];\n\n  LocationsInArray(rooms).forEach((element) => {\n    if (\n      !ids.includes(element.center_id) &&\n      element.district_id === district_id\n    ) {\n      ids.push(element.center_id);\n      result.push(element);\n    }\n  });\n  return result;\n};\n\nexport const distinctRoom = (\n  rooms: RoomLocationInterface[],\n  center_id: string\n): LocationRoomTableInterface[] => {\n  let ids: string[] = [],\n    result: LocationRoomTableInterface[] = [];\n\n  LocationsInArray(rooms).forEach((element) => {\n    if (!ids.includes(element.room_id) && element.center_id === center_id) {\n      ids.push(element.room_id);\n      result.push(element);\n    }\n  });\n  return result;\n};\n\ninterface AppProps {\n  locations: RoomLocationInterface[];\n  getAllRoom: Function;\n}\n\nconst _Locations: React.FC<AppProps> = (props) => {\n  const [actionTypes, setActionTypes] = useState<\n    | \"CREATE_PROVINCE\"\n    | \"UPDATE_PROVINCE\"\n    | \"CREATE_DISTRICT\"\n    | \"UPDATE_DISTRICT\"\n    | \"CREATE_SECTOR\"\n    | \"UPDATE_SECTOR\"\n    | null\n  >(null);\n  const [thisProvince, setThisProvince] =\n    useState<RoomLocationInterface | null>(null);\n  const [thisDistrict, setThisDistrict] = useState<DistrictInterface | null>(\n    null\n  );\n  const [thisSector, setThisSector] = useState<SectorInterface | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (!props.locations.length && loading) {\n      props.getAllRoom((status: boolean, msg: string) => {\n        setLoading(status);\n        if (!status && msg.length > 0) {\n          console.log(msg);\n        }\n      });\n    } else if (loading) {\n      setLoading(false);\n    }\n  }, [loading, props]);\n\n  if (loading === true) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading locations...\n      </div>\n    );\n  }\n\n  const displayTitle = () => {\n    if (\n      (!thisSector ||\n        (thisSector &&\n          (actionTypes === \"CREATE_SECTOR\" ||\n            actionTypes === \"UPDATE_SECTOR\"))) &&\n      thisDistrict &&\n      actionTypes !== \"CREATE_DISTRICT\" &&\n      actionTypes !== \"UPDATE_DISTRICT\"\n    ) {\n      return (\n        <div className=\"flex items-center gap-1\">\n          <span\n            className=\"cursor-pointer uppercase text-xl font-semibold text-gray-800\"\n            onClick={() => {\n              setThisProvince(null);\n            }}\n          >\n            province\n          </span>\n          <span>/</span>\n          <span\n            className=\"cursor-pointer uppercase text-xl font-semibold text-gray-800\"\n            onClick={() => {\n              setThisDistrict(null);\n            }}\n          >\n            district\n          </span>\n          <span>/</span>\n          <span className=\"text-xl text-gray-800\">\n            {thisDistrict.district_name}\n          </span>\n        </div>\n      );\n    } else if (\n      (!thisDistrict ||\n        (thisDistrict &&\n          (actionTypes === \"CREATE_DISTRICT\" ||\n            actionTypes === \"UPDATE_DISTRICT\"))) &&\n      thisProvince\n    ) {\n      return (\n        <div className=\"flex items-center gap-2\">\n          <span\n            className=\"cursor-pointer uppercase text-xl font-semibold text-gray-800\"\n            onClick={() => {\n              setThisProvince(null);\n            }}\n          >\n            province\n          </span>\n          <span>/</span>\n          <span className=\"text-xl text-gray-800\">\n            {thisProvince.province_name}\n          </span>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"flex items-center gap-1\">\n        <span className=\"uppercase text-xl font-semibold text-gray-800\">\n          province\n        </span>\n        <span>/</span>\n      </div>\n    );\n  };\n\n  return (\n    <Fragment>\n      <div className=\"w-full my-5\">\n        {/* header title */}\n        <div className=\"flex justify-between p-2 gap-1\">\n          <div className=\"flex flex-col\">\n            <span className=\"text-blue-600 text-2xl md:text-2xl lg:text-3xl font-bold\">\n              Locations Management\n            </span>\n\n            <div className=\"flex flex-row items-center md:gap-3 gap-2 mt-1\">\n              <AiOutlineFilter className=\"text-xl\" />\n              <div className=\"flex flex-row items-center gap-1\">\n                {thisProvince && (\n                  <span className=\"text-gray-700 text-base font-bold\">\n                    {thisProvince.province_name}\n                  </span>\n                )}\n                {thisDistrict && (\n                  <div className=\"flex flex-row items-center gap-1\">\n                    <BsCaretRightFill />\n                    <span className=\"text-blue-600 text-base font-bold underline\">\n                      {thisDistrict.district_name} district\n                    </span>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n        {/* end header title */}\n\n        <div className=\"w-full bg-white\">\n          <div className=\"border-b px-2 py-3 flex justify-between\">\n            {displayTitle()}\n\n            {/* CREATE NEW PROVINCE =====================================*/}\n            {/* {(!thisProvince ||\n              (thisProvince &&\n                (actionTypes === \"CREATE_PROVINCE\" ||\n                  actionTypes === \"UPDATE_PROVINCE\"))) && (\n              <button\n                type=\"button\"\n                className={`btn hover:bg-blue-500 mb-1 border-2 border-blue-500 bg-white\n        hover:text-white rounded-md flex items-center font-bold text-gray-700 focus:outline-none gap-1 ${\n          loadingRequest && \"cursor-wait\"\n        } ${actionTypes !== null && \"cursor-not-allowed\"}`}\n                onClick={() => setActionTypes(\"CREATE_PROVINCE\")}\n                disabled={actionTypes !== null || loadingRequest}\n              >\n                <MdAdd className=\"inline-block mr-1 text-xl font-bold\" />\n                New Province\n              </button>\n            )} */}\n            {/* CREATE NEW DISTRICT =====================================*/}\n            {/* {(!thisDistrict ||\n              (thisDistrict &&\n                (actionTypes === \"CREATE_DISTRICT\" ||\n                  actionTypes === \"UPDATE_DISTRICT\"))) &&\n              thisProvince && (\n                <button\n                  type=\"button\"\n                  className={`btn hover:bg-blue-500 mb-1 border-2 border-blue-500 bg-white\n        hover:text-white rounded-md flex items-center font-bold text-gray-700 focus:outline-none gap-1 ${\n          loadingRequest && \"cursor-wait\"\n        } ${actionTypes !== null && \"cursor-not-allowed\"}`}\n                  onClick={() => setActionTypes(\"CREATE_DISTRICT\")}\n                  disabled={actionTypes !== null || loadingRequest}\n                >\n                  <MdAdd className=\"inline-block mr-1 text-xl font-bold\" />\n                  New District\n                </button>\n              )} */}\n\n            {/* CREATE NEW SECTOR =====================================*/}\n            {/* {(!thisSector ||\n              (thisSector &&\n                (actionTypes === \"CREATE_SECTOR\" ||\n                  actionTypes === \"UPDATE_SECTOR\"))) &&\n              thisDistrict &&\n              actionTypes !== \"CREATE_DISTRICT\" &&\n              actionTypes !== \"UPDATE_DISTRICT\" && (\n                <button\n                  type=\"button\"\n                  className={`btn hover:bg-blue-500 mb-1 border-2 border-blue-500 bg-white\n        hover:text-white rounded-md flex items-center font-bold text-gray-700 focus:outline-none gap-1 ${\n          loadingRequest && \"cursor-wait\"\n        } ${actionTypes !== null && \"cursor-not-allowed\"}`}\n                  onClick={() => setActionTypes(\"CREATE_SECTOR\")}\n                  disabled={actionTypes !== null || loadingRequest}\n                >\n                  <MdAdd className=\"inline-block mr-1 text-xl font-bold\" />\n                  New Sector\n                </button>\n              )} */}\n          </div>\n\n          {(!thisProvince ||\n            (thisProvince &&\n              (actionTypes === \"CREATE_PROVINCE\" ||\n                actionTypes === \"UPDATE_PROVINCE\"))) && (\n            <ViewProvince\n              thisProvince={thisProvince}\n              thisDistrict={thisDistrict}\n              loadingRequest={loadingRequest}\n              locations={props.locations}\n              actionTypes={actionTypes}\n              setLoadingRequest={setLoadingRequest}\n              setThisProvince={setThisProvince}\n              setActionTypes={setActionTypes}\n            />\n          )}\n\n          {(!thisDistrict ||\n            (thisDistrict &&\n              (actionTypes === \"CREATE_DISTRICT\" ||\n                actionTypes === \"UPDATE_DISTRICT\"))) &&\n            thisProvince && (\n              <ViewDistricts\n                thisDistrict={thisDistrict}\n                loadingRequest={loadingRequest}\n                actionTypes={actionTypes}\n                setLoadingRequest={setLoadingRequest}\n                setActionTypes={setActionTypes}\n                thisProvince={thisProvince}\n                setThisDistrict={setThisDistrict}\n              />\n            )}\n\n          {(!thisSector ||\n            (thisSector &&\n              (actionTypes === \"CREATE_SECTOR\" ||\n                actionTypes === \"UPDATE_SECTOR\"))) &&\n            thisDistrict &&\n            actionTypes !== \"CREATE_DISTRICT\" &&\n            actionTypes !== \"UPDATE_DISTRICT\" && (\n              <ViewSectors\n                thisDistrict={thisDistrict}\n                thisSector={thisSector}\n                loadingRequest={loadingRequest}\n                actionTypes={actionTypes}\n                setLoadingRequest={setLoadingRequest}\n                setThisSector={setThisSector}\n                setActionTypes={setActionTypes}\n              />\n            )}\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  locations,\n}: StoreState): {\n  locations: RoomLocationInterface[];\n} => {\n  return { locations: locations.roomLocation };\n};\n\nexport const Locations = React.memo(\n  connect(mapStateToProps, {\n    getAllRoom,\n  })(_Locations)\n);\n","import React, { Fragment, useState } from \"react\";\nimport { AiFillDashboard } from \"react-icons/ai\";\nimport { MdBrightness1 } from \"react-icons/md\";\nimport { SessionPlanInterface } from \"../../../interfaces\";\nimport { education_category } from \"../../../interfaces/education_category\";\nimport { reportTitleType } from \"../../Admin/ExamReport/ExamReport\";\nimport ExamReportModals, {\n  ModalForTypes,\n} from \"../../Admin/ExamReport/ExamReportModals\";\n\ntype ExamReportTitleProps = {\n  // FOR SETTINGS ==============================\n  loading: boolean;\n\n  // FOR REPORT TYPE =========================\n  reportTitle: reportTitleType;\n  setReportTitle: (title: reportTitleType) => void;\n\n  //   FOR EDUCATION CATEGORY & PERIOD =====================\n  education_categories: education_category[] | null;\n  loadingEducation: boolean;\n  thisEducation: education_category | null;\n  setThisEducation: (value: education_category | null) => void;\n\n  //   FOR APPLICATION SESSION ============================\n  thisPeriod: string;\n  setThisPeriod: (value: string) => void;\n  application_sessions: SessionPlanInterface[];\n  onPeriodChange?: (period_id: string) => void;\n};\n\nconst ExamDashboardTitle: React.FC<ExamReportTitleProps> = (props) => {\n  const [changeReport, setChangeReport] = useState<boolean>(false);\n\n  return (\n    <Fragment>\n      <div className=\"mt-3 rounded flex flex-col md:flex-row md:justify-between items-start\">\n        <div className=\"flex flex-row items-center gap-3 mb-2\">\n          <AiFillDashboard className=\"text-7xl text-blue-600 hidden md:block\" />\n          <div className=\"flex flex-col\">\n            <span className=\"text-blue-600 text-3xl font-bold\">\n              Exam Dashboard\n            </span>\n            {false && (\n              <div\n                onClick={() => setChangeReport(true)}\n                className=\"flex flex-row gap-2\"\n              >\n                <span className=\"text-gray-500\">Report type: </span>\n                <span className=\"text-gray-600 font-bold underline cursor-pointer\">\n                  {props.reportTitle}\n                </span>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* FILTER SECTION PERIOD && EDUCATION */}\n        <section className=\"w-full md:w-auto my-2 md:my-0\">\n          {/* EDUCATION CATEGORY sections */}\n          <section className=\"flex items-start md:items-center justify-start md:justify-end gap-2\">\n            {props.education_categories &&\n              props.education_categories.length > 0 &&\n              props.education_categories.map((education, index) => (\n                <section\n                  key={education.education_institute_id + index}\n                  className={`w-auto ${\n                    props.loading || props.loadingEducation\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } ${\n                    props.thisEducation &&\n                    education.education_institute_id ===\n                      props.thisEducation.education_institute_id\n                      ? \"bg-blue-500 text-white font-bold\"\n                      : \"bg-gray-100 text-blue-800\"\n                  } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex items-center animate__animated animate__zoomIn`}\n                  onClick={() =>\n                    !props.loading &&\n                    !props.loadingEducation &&\n                    props.setThisEducation(education)\n                  }\n                >\n                  <section className=\"flex-1\">\n                    <MdBrightness1 className=\"inline-block mr-1 text-xs\" />\n                    <span>{education.education_category_title}</span>\n                  </section>\n\n                  {/* {count > 0 ? ( */}\n                  {/* <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n              12\n            </span> */}\n                  {/* ) : null} */}\n                </section>\n              ))}\n          </section>\n          {/* end EDUCATION CATEGORY sections */}\n          <div>\n            <select\n              className={`bg-white text-gray-600 border border-gray-400 rounded p-2 focus:outline-none ${\n                props.loading && \"cursor-wait\"\n              }`}\n              value={props.thisPeriod}\n              disabled={props.loading || props.loadingEducation}\n              onChange={(e) => {\n                props.setThisPeriod(e.target.value);\n                props.onPeriodChange && props.onPeriodChange(e.target.value);\n                // props.setLoadingApplications(true);\n                // props.GetApplicationPerPeriod(\n                //   e.target.value,\n                //   (status: boolean, msg: string) => {\n                //     props.setLoadingApplications(status);\n                //     if (!status && msg.length > 0) {\n                //       props.PushPopupAlert({\n                //         title: errorToText(msg),\n                //         theme: PopupAlertTheme.danger,\n                //       });\n                //     }\n                //   }\n                // );\n              }}\n            >\n              {props.application_sessions.map((session, item) => (\n                <option\n                  key={session.session_plan_id + item}\n                  value={session.session_plan_id}\n                >\n                  {session.session_plan_name}\n                </option>\n              ))}\n            </select>\n          </div>\n        </section>\n        {/* END FILTER SECTION PERIOD && EDUCATION */}\n      </div>\n      {/* CHANGE REPORT TYPE MODAL CONTROLLERS ============================================ */}\n      {changeReport && (\n        <ExamReportModals\n          modalFor={ModalForTypes.title}\n          modalState={changeReport}\n          reportTitle={props.reportTitle}\n          changeModalState={setChangeReport}\n          setReportTitle={props.setReportTitle}\n        />\n      )}\n      {/* END CHANGE REPORT TYPE MODAL CONTROLLERS ============================================ */}\n    </Fragment>\n  );\n};\n\nexport default React.memo(ExamDashboardTitle);\n","import React, { Component } from \"react\";\nimport { examPreparationStateInterface } from \"../../Admin/ExamReport/ExamList\";\nimport VBarChart from \"../ChartComponents/VBarChart\";\n\ntype ExamPreparationChartProps = {\n  examPreparationProgress: {\n    all: examPreparationStateInterface[];\n    finished: examPreparationStateInterface[];\n    remaining: examPreparationStateInterface[];\n  };\n};\n\nclass ExamPreparationChart extends Component<ExamPreparationChartProps> {\n  render() {\n    return (\n      <div className=\"my-3 max-w-full bg-white\">\n        <div className=\"flex items-center justify-between px-3\">\n          <span className=\"text-gray-600 font-semibold text-xl py-4 px-0\">\n            Exams preparation chart\n          </span>\n        </div>\n\n        <div className=\"mb-4 pb-2 px-3\">\n          <VBarChart\n            labels={[\"Remaining exams\", \"Prepared exams\"]}\n            categoriesLabel={[\"Exam preparation progress\"]}\n            dataLabels={true}\n            yaxisText=\"Exam preparation progress\"\n            tooltipText=\"(Exams)\"\n            series={[\n              {\n                name: \"Remaining exams\",\n                data: [this.props.examPreparationProgress.remaining.length],\n              },\n              {\n                name: \"Prepared exams\",\n                data: [this.props.examPreparationProgress.finished.length],\n              },\n            ]}\n            colors={[\"#4b5563\", \"#469769\"]}\n            defaultBar={{\n              borderRadius: 4,\n              horizontal: false,\n              columnWidth: \"95%\",\n              endingShape: \"rounded\",\n            }}\n            chartHeight={550}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default React.memo(ExamPreparationChart);\n","import React, { Component } from \"react\";\nimport { examProgressStateInterface } from \"../../Admin/ExamReport/DoneExamList\";\nimport VBarChart from \"../ChartComponents/VBarChart\";\n\ntype ExamProgressChartProps = {\n  progressData: {\n    all: examProgressStateInterface[];\n    finished: examProgressStateInterface[];\n    remaining: examProgressStateInterface[];\n  };\n};\n\nclass ExamProgressChart extends Component<ExamProgressChartProps> {\n  render() {\n    return (\n      <div className=\"my-3 max-w-full bg-white\">\n        <div className=\"flex items-center justify-between px-3\">\n          <span className=\"text-gray-600 font-semibold text-xl py-4 px-0\">\n            Examination progress chart\n          </span>\n        </div>\n\n        <div className=\"mb-4 pb-2 px-3\">\n          <VBarChart\n            labels={[\"Remaining exams\", \"Prepared exams\"]}\n            categoriesLabel={[\"Examinations progress\"]}\n            dataLabels={true}\n            yaxisText=\"Examination progress\"\n            tooltipText=\"(Exams)\"\n            series={[\n              {\n                name: \"Remaining exams\",\n                data: [this.props.progressData.remaining.length],\n              },\n              {\n                name: \"Done exams\",\n                data: [this.props.progressData.finished.length],\n              },\n            ]}\n            colors={[\"#4b5563\", \"#469769\"]}\n            defaultBar={{\n              borderRadius: 4,\n              horizontal: false,\n              columnWidth: \"95%\",\n              endingShape: \"rounded\",\n            }}\n            chartHeight={550}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default React.memo(ExamProgressChart);\n","import React, { Component } from \"react\";\nimport { candidatePerfomranceStateInterface } from \"../../Admin/ExamReport/CandidatePerformance\";\nimport VBarChart from \"../ChartComponents/VBarChart\";\n\ntype ExamPerformanceChartProps = {\n  examPerformance: {\n    all: candidatePerfomranceStateInterface[];\n    pass: candidatePerfomranceStateInterface[];\n    failed: candidatePerfomranceStateInterface[];\n    active: candidatePerfomranceStateInterface[];\n  };\n};\n\nclass ExamPerformanceChart extends Component<ExamPerformanceChartProps> {\n  render() {\n    return (\n      <div className=\"my-3 max-w-full bg-white\">\n        <div className=\"flex items-center justify-between px-3\">\n          <span className=\"text-gray-600 font-semibold text-xl py-4 px-0\">\n            Examination performance chart\n          </span>\n        </div>\n\n        <div className=\"mb-4 pb-2 px-3\">\n          <VBarChart\n            labels={[\"Pass applicant(s)\", \"Failed applicant(s)\"]}\n            categoriesLabel={[\"Exam preparation progress\"]}\n            dataLabels={true}\n            yaxisText=\"Exam performance\"\n            tooltipText=\"(Applicants)\"\n            series={[\n              {\n                name: \"Pass applicant(s)\",\n                data: [this.props.examPerformance.pass.length],\n              },\n              {\n                name: \"Failed applicant(s)\",\n                data: [this.props.examPerformance.failed.length],\n              },\n            ]}\n            colors={[\"#469769\", \"#d97724\"]}\n            defaultBar={{\n              borderRadius: 4,\n              horizontal: false,\n              columnWidth: \"95%\",\n              endingShape: \"rounded\",\n            }}\n            chartHeight={550}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default React.memo(ExamPerformanceChart);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  schoolLevelsStoreInterface,\n  loadCourses,\n  loadExamsList,\n  loadEducationCategories,\n  loadDoneExam,\n  loadSchoolLevels,\n  loadPerfomranceExam,\n  loadCandidatesExamPerformance,\n  PushPopupAlert,\n  FilterParamType,\n} from \"../../../actions\";\nimport { StoreState } from \"../../../reducers\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport {\n  SessionPlanInterface,\n  course,\n  education_category,\n  ExamDoneAndRemainingByPeriodInterface,\n  school_level,\n} from \"../../../interfaces\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport { ExamReportReducerType } from \"../../../reducers/exam_report\";\nimport moment from \"moment\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport {\n  candidatePerfomranceStateInterface,\n  FC_reportCandidatePerformanceData,\n  FC_reportCandidatePerformanceDataFilter,\n} from \"../../Admin/ExamReport/CandidatePerformance\";\nimport {\n  examProgressStateInterface,\n  FC_reportDoneExamList,\n} from \"../../Admin/ExamReport/DoneExamList\";\nimport {\n  examPreparationStateInterface,\n  FC_reportExamList,\n} from \"../../Admin/ExamReport/ExamList\";\nimport { reportTitleType } from \"../../Admin/ExamReport/ExamReport\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport NoSession from \"../../SessionSettings/NoSession\";\nimport ExamDashboardTitle from \"./ExamDashboardTitle\";\nimport ExamDashboardLabels from \"./ExamDashboardLabels\";\nimport { FaBookOpen } from \"react-icons/fa\";\nimport PieChart from \"../ChartComponents/PieChart\";\nimport ExamPreparationChart from \"./ExamPreparationChart\";\nimport ExamProgressChart from \"./ExamProgressChart\";\nimport ExamPerformanceChart from \"./ExamPerformanceChart\";\n\nexport const getLevelbyId = (\n  school_levels: school_level[] | null,\n  level_id: string\n): school_level | undefined => {\n  if (school_levels) {\n    return school_levels.find((item) => item.school_level_id === level_id);\n  }\n};\n\nexport const loadCoursesByInstitute = (\n  thisEducation: education_category | null,\n  courseList: course[] | null,\n  school_levels: school_level[] | null\n): course[] | null => {\n  let result: course[] | null = [],\n    defaultValue: boolean = false;\n  if (courseList && thisEducation) {\n    for (const key in courseList) {\n      if (Object.prototype.hasOwnProperty.call(courseList, key)) {\n        if (courseList[key].school_levels.length > 0) {\n          courseList[key].school_levels.forEach((level) => {\n            let levelDetail = getLevelbyId(school_levels, level);\n            if (\n              levelDetail &&\n              (levelDetail.education_institute.includes(\n                thisEducation.education_institute_id\n              ) ||\n                levelDetail.education_institute.length <= 0)\n            ) {\n              result && result.push(courseList![key]);\n            }\n          });\n        } else {\n          result && result.push(courseList![key]);\n        }\n      }\n    }\n  }\n  // RETURN DEFAULT VALUES ====================\n  else {\n    defaultValue = true;\n  }\n  return defaultValue ? courseList : result;\n};\n\nexport const loadExaminationProgress = (\n  DoneExamList: ExamDoneAndRemainingByPeriodInterface[] | null,\n  examsList: ExamItemResponse[] | null,\n  thisEducation: education_category | null,\n  courseList: course[] | null,\n  school_levels: school_level[] | null,\n  period: string\n): {\n  all: examProgressStateInterface[];\n  finished: examProgressStateInterface[];\n  remaining: examProgressStateInterface[];\n} | null => {\n  let allData: examProgressStateInterface[] = [],\n    completeExams: examProgressStateInterface[] = [],\n    remainingExams: examProgressStateInterface[] = [],\n    dataFound: boolean = false;\n  if (\n    DoneExamList &&\n    loadCoursesByInstitute(thisEducation, courseList, school_levels) &&\n    examsList\n  ) {\n    dataFound = true;\n    allData = FC_reportDoneExamList(\n      loadCoursesByInstitute(thisEducation, courseList, school_levels)!,\n      examsList,\n      DoneExamList\n    ).filter((item) => item.exam && item.exam.period === period);\n    completeExams = allData.filter(\n      (item) => item.preparation_status.toLocaleLowerCase() === \"done\"\n    );\n    remainingExams = allData.filter(\n      (item) => item.preparation_status.toLocaleLowerCase() === \"active\"\n    );\n  }\n  console.log(\"====================================\");\n  console.log({ loadExaminationProgress: DoneExamList });\n  console.log(\"====================================\");\n  return dataFound\n    ? { all: allData, finished: completeExams, remaining: remainingExams }\n    : null;\n};\n\nexport const loadExamPreparationProgress = (\n  dataList: examPreparationStateInterface[]\n): {\n  all: examPreparationStateInterface[];\n  finished: examPreparationStateInterface[];\n  remaining: examPreparationStateInterface[];\n} => {\n  let allData: examPreparationStateInterface[] = dataList,\n    preparedExams: examPreparationStateInterface[] = dataList.filter(\n      (item) => item.preparation_status === \"prepared\"\n    ),\n    remainingExams: examPreparationStateInterface[] = dataList.filter(\n      (item) => item.preparation_status === \"not prepared\"\n    );\n  return { all: allData, finished: preparedExams, remaining: remainingExams };\n};\n\nexport const isDatePast = (dateParam: string): boolean => {\n  const date = moment().format(\"DD-MM-YYYY\");\n  const todayDate = moment(date, \"DD-MM-YYYY\");\n  const pastDate = moment(dateParam, \"DD-MM-YYYY\");\n\n  const dDiff = todayDate.diff(pastDate);\n\n  if (dDiff > 0) {\n    return false;\n  } else {\n    return true;\n  }\n};\n\nexport const loadExamAttendance = (\n  applicantList: candidatePerfomranceStateInterface[],\n  period: string\n): {\n  all: candidatePerfomranceStateInterface[];\n  pass: candidatePerfomranceStateInterface[];\n  failed: candidatePerfomranceStateInterface[];\n  active: candidatePerfomranceStateInterface[];\n} => {\n  return {\n    all: applicantList.filter((item) => item.exam.period === period),\n    pass: applicantList.filter(\n      (item) =>\n        item.exam.period === period &&\n        (item.exam_stastus !== \"Editing\" || isDatePast(item.exam.exam_date)) &&\n        item.user_total_marks >= 50\n    ),\n    failed: applicantList.filter(\n      (item) =>\n        item.exam.period === period &&\n        (item.exam_stastus !== \"Editing\" || isDatePast(item.exam.exam_date)) &&\n        item.user_total_marks < 50\n    ),\n    active: applicantList.filter(\n      (item) =>\n        item.exam.period === period &&\n        item.exam_stastus === \"Editing\" &&\n        !isDatePast(item.exam.exam_date)\n    ),\n  };\n};\n\ninterface ExamDashboardProps {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  courses: course[] | null;\n  examsList: ExamItemResponse[] | null;\n  adminExamReport: ExamReportReducerType;\n  GetAllSessionPlans: Function;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  loadCourses: (callback: (loading: boolean) => void) => void;\n  loadExamsList: (callback: (loading: boolean) => void) => void;\n  loadDoneExam: (period_id: string, callback: Function) => void;\n  loadPerfomranceExam: (period_id: string, callback: Function) => void;\n  loadSchoolLevels: (callback: (loading: boolean) => void) => void;\n  loadCandidatesExamPerformance: (\n    dataBody: FilterParamType | null,\n    callback: Function\n  ) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface ExamDashboardStates {\n  loading: boolean;\n  loadingCourses: boolean;\n  loadingExams: boolean;\n  loadingDoneExam: boolean;\n  loadingCandidatesExamPerformance: boolean;\n  loadingExamPerformance: boolean;\n  loadingSettings: boolean;\n  changingPeriod: boolean;\n  reportTitle: reportTitleType;\n  thisEducation: education_category | null;\n  thisPeriod: string;\n}\n\nclass _ExamDashboard extends Component<\n  ExamDashboardProps,\n  ExamDashboardStates\n> {\n  constructor(props: ExamDashboardProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingCourses: true,\n      loadingExams: true,\n      loadingDoneExam: true,\n      loadingCandidatesExamPerformance: true,\n      loadingExamPerformance: true,\n      loadingSettings: true,\n      changingPeriod: false,\n      reportTitle: reportTitleType.EXAM_PREPARATION,\n      thisEducation: null,\n      thisPeriod: \"\",\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingCourses = (value: boolean) => {\n    this.setState({ loadingCourses: value });\n  };\n\n  setLoadingExams = (value: boolean) => {\n    this.setState({ loadingExams: value });\n  };\n\n  setLoadingDoneExam = (value: boolean) => {\n    this.setState({ loadingDoneExam: value });\n  };\n\n  setLoadingCandidatesExamPerformance = (value: boolean) => {\n    this.setState({ loadingCandidatesExamPerformance: value });\n  };\n\n  setLoadingExamPerformance = (value: boolean) => {\n    this.setState({ loadingExamPerformance: value });\n  };\n\n  setLoadingSettings = (value: boolean) => {\n    this.setState({ loadingSettings: value });\n  };\n\n  setChangingPeriod = (value: boolean) => {\n    this.setState({ changingPeriod: value });\n  };\n\n  setReportTitle = (value: reportTitleType) => {\n    this.setState({ reportTitle: value });\n  };\n\n  setThisEducation = (value: education_category | null) => {\n    this.setState({ thisEducation: value });\n  };\n\n  setThisPeriod = (value: string) => {\n    this.setState({ thisPeriod: value });\n  };\n\n  loadByPeriods = (session: SessionPlanInterface) => {\n    this.props.loadDoneExam(\n      session.session_plan_id,\n      (status: boolean, msg: string) => {\n        if (!status) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          this.setLoadingDoneExam(false);\n        }\n      }\n    );\n\n    // --------------------------------------------\n    this.props.loadPerfomranceExam(\n      session.session_plan_id,\n      (status: boolean, msg: string) => {\n        if (!status) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          this.setLoadingExamPerformance(false);\n        }\n      }\n    );\n  };\n\n  componentDidMount = () => {\n    if (\n      this.props.schoolLevels.education_categories === null ||\n      this.props.schoolLevels.education_categories.length === 0\n    ) {\n      this.props.loadEducationCategories(this.setLoadingSettings);\n    } else if (\n      this.props.schoolLevels.education_categories.length > 0 &&\n      !this.state.thisEducation\n    ) {\n      this.setThisEducation(this.props.schoolLevels.education_categories[0]);\n      this.setLoadingSettings(false);\n    }\n\n    if (this.props.application_sessions === null) {\n      this.props.GetAllSessionPlans(\n        (status: boolean, msg: string, sessions?: SessionPlanInterface[]) => {\n          this.setLoadingSettings(status);\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          if (!status && sessions && sessions.length > 0) {\n            let active_period: SessionPlanInterface | undefined;\n            active_period = sessions.find((item) => item.is_active);\n            if (active_period) {\n              this.setThisPeriod(active_period.session_plan_id);\n            } else {\n              this.setThisPeriod(sessions[sessions.length - 1].session_plan_id);\n            }\n          }\n        }\n      );\n    } else if (\n      this.props.application_sessions.length > 0 &&\n      !this.state.thisPeriod.length\n    ) {\n      let active_period: SessionPlanInterface | undefined;\n      active_period = this.props.application_sessions.find(\n        (item) => item.is_active\n      );\n      if (active_period) {\n        this.setThisPeriod(active_period.session_plan_id);\n        this.loadByPeriods(active_period);\n      } else {\n        this.setThisPeriod(\n          this.props.application_sessions[\n            this.props.application_sessions.length - 1\n          ].session_plan_id\n        );\n        this.loadByPeriods(\n          this.props.application_sessions[\n            this.props.application_sessions.length - 1\n          ]\n        );\n      }\n      this.setLoadingSettings(false);\n      this.setLoading(false);\n    }\n\n    if (\n      this.props.schoolLevels.school_levels === null ||\n      this.props.schoolLevels.school_levels.length <= 0\n    ) {\n      this.props.loadSchoolLevels(this.setLoadingSettings);\n    } else {\n      this.setLoadingSettings(false);\n    }\n\n    // if (this.state.thisPeriod.length > 0 && this.state.loadingDoneExam) {\n    //   this.props.loadDoneExam(\n    //     this.state.thisPeriod,\n    //     (status: boolean, msg: string) => {\n    //       if (!status) {\n    //         if (msg.length > 0) {\n    //           this.props.PushPopupAlert({\n    //             title: msg,\n    //             theme: PopupAlertTheme.danger,\n    //           });\n    //         }\n    //         this.setLoadingDoneExam(false);\n    //       }\n    //     }\n    //   );\n    // }\n    // if (this.state.thisPeriod.length > 0 && this.state.loadingExamPerformance) {\n    //   this.props.loadPerfomranceExam(\n    //     this.state.thisPeriod,\n    //     (status: boolean, msg: string) => {\n    //       if (!status) {\n    //         if (msg.length > 0) {\n    //           this.props.PushPopupAlert({\n    //             title: msg,\n    //             theme: PopupAlertTheme.danger,\n    //           });\n    //         }\n    //         this.setLoadingExamPerformance(false);\n    //       }\n    //     }\n    //   );\n    // }\n\n    if (\n      this.props.adminExamReport.CandidatesExamPerformance === null ||\n      (this.props.adminExamReport.CandidatesExamPerformance.length === 0 &&\n        this.state.loadingCandidatesExamPerformance)\n    ) {\n      this.props.loadCandidatesExamPerformance(\n        null,\n        (status: boolean, msg: string) => {\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            this.setLoadingCandidatesExamPerformance(false);\n          }\n        }\n      );\n    }\n  };\n\n  onPeriodChange = (period_id: string) => {\n    this.setLoadingDoneExam(true);\n    this.setLoadingExamPerformance(true);\n    this.setChangingPeriod(true);\n    this.props.loadDoneExam(period_id, (status: boolean, msg: string) => {\n      if (!status) {\n        let action: boolean = true;\n        if (msg.length > 0 && action) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n          action = false;\n        }\n        this.setLoadingDoneExam(false);\n      }\n    });\n\n    this.props.loadPerfomranceExam(\n      period_id,\n      (status: boolean, msg: string) => {\n        if (!status) {\n          let action: boolean = true;\n          if (msg.length > 0 && action) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n            action = false;\n          }\n          this.setLoadingExamPerformance(false);\n        }\n      }\n    );\n\n    if (!this.state.loadingDoneExam && !this.state.loadingExamPerformance) {\n      this.setChangingPeriod(false);\n    }\n  };\n\n  render() {\n    if (this.state.loading || this.props.application_sessions === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    if (this.props.application_sessions.length === 0) {\n      return <NoSession />;\n    }\n\n    return (\n      <div>\n        {/* HEADER TITLE */}\n        <ExamDashboardTitle\n          reportTitle={this.state.reportTitle}\n          setReportTitle={this.setReportTitle}\n          loading={this.state.changingPeriod}\n          education_categories={this.props.schoolLevels.education_categories}\n          loadingEducation={false}\n          thisEducation={this.state.thisEducation}\n          setThisEducation={this.setThisEducation}\n          thisPeriod={this.state.thisPeriod}\n          setThisPeriod={this.setThisPeriod}\n          application_sessions={this.props.application_sessions}\n          onPeriodChange={this.onPeriodChange}\n        />\n        {/* END HEADER TITLE */}\n\n        {/* ----------------------------------------------------------- */}\n\n        {/* EXAMS PREPARATION PROGRESS LABELS ======================================= */}\n        {this.props.examsList &&\n          loadCoursesByInstitute(\n            this.state.thisEducation,\n            this.props.courses,\n            this.props.schoolLevels.school_levels\n          ) && (\n            <section className=\"my-2\">\n              <div className=\"text-2xl font-semibold text-gray-600\">\n                Exams preparation status\n              </div>\n              <ExamDashboardLabels\n                dataLabels={[\n                  {\n                    title: \"Total exams\",\n                    icon: FaBookOpen,\n                    iconColor: \"blue\",\n                    count: loadExamPreparationProgress(\n                      FC_reportExamList(\n                        loadCoursesByInstitute(\n                          this.state.thisEducation,\n                          this.props.courses,\n                          this.props.schoolLevels.school_levels\n                        )!,\n                        this.props.examsList,\n                        this.state.thisPeriod\n                      )\n                    ).all.length,\n                  },\n                  {\n                    title: \"Prepared exams\",\n                    icon: FaBookOpen,\n                    iconColor: \"green\",\n                    count: loadExamPreparationProgress(\n                      FC_reportExamList(\n                        loadCoursesByInstitute(\n                          this.state.thisEducation,\n                          this.props.courses,\n                          this.props.schoolLevels.school_levels\n                        )!,\n                        this.props.examsList,\n                        this.state.thisPeriod\n                      )\n                    ).finished.length,\n                  },\n                  {\n                    title: \"Remaining exams\",\n                    icon: FaBookOpen,\n                    iconColor: \"gray\",\n                    count: loadExamPreparationProgress(\n                      FC_reportExamList(\n                        loadCoursesByInstitute(\n                          this.state.thisEducation,\n                          this.props.courses,\n                          this.props.schoolLevels.school_levels\n                        )!,\n                        this.props.examsList,\n                        this.state.thisPeriod\n                      )\n                    ).remaining.length,\n                  },\n                ]}\n                labelsOnRow={5}\n              >\n                <div className=\"flex justify-center\">\n                  <PieChart\n                    options={{\n                      labels: [\"Prepared\", \"Remaining\"],\n                      legend: {\n                        show: false,\n                        position: \"bottom\",\n                        horizontalAlign: \"center\",\n                        fontSize: \"16px\",\n                        itemMargin: {\n                          horizontal: 3,\n                          vertical: 0,\n                        },\n                      },\n                      plotOptions: {\n                        pie: {\n                          donut: {\n                            labels: {\n                              show: true,\n                              name: {\n                                show: true,\n                                fontSize: \"16px\",\n                                //   fontFamily: \"Rubik\",\n                                color: \"#2564eb\",\n                                offsetY: -10,\n                              },\n                              value: {\n                                show: true,\n                                fontSize: \"20px\",\n                                fontFamily: \"Helvetica, Arial, sans-serif\",\n                                color: \"#2564eb\",\n                                offsetY: 10,\n                                formatter: function (val) {\n                                  return val;\n                                },\n                              },\n                              total: {\n                                show: true,\n                                label: \"Total\",\n                                color: \"#2564eb\",\n                                formatter: function (w) {\n                                  return w.globals.seriesTotals.reduce(\n                                    (a: number, b: number) => {\n                                      return a + b;\n                                    },\n                                    0\n                                  );\n                                },\n                              },\n                            },\n                          },\n                        },\n                      },\n                      colors: [\"#469769\", \"#4b5563\"],\n                    }}\n                    series={[\n                      loadExamPreparationProgress(\n                        FC_reportExamList(\n                          loadCoursesByInstitute(\n                            this.state.thisEducation,\n                            this.props.courses,\n                            this.props.schoolLevels.school_levels\n                          )!,\n                          this.props.examsList,\n                          this.state.thisPeriod\n                        )\n                      ).finished.length,\n                      loadExamPreparationProgress(\n                        FC_reportExamList(\n                          loadCoursesByInstitute(\n                            this.state.thisEducation,\n                            this.props.courses,\n                            this.props.schoolLevels.school_levels\n                          )!,\n                          this.props.examsList,\n                          this.state.thisPeriod\n                        )\n                      ).remaining.length,\n                    ]}\n                    width={210}\n                  />\n                </div>\n              </ExamDashboardLabels>\n            </section>\n          )}\n        {/* EXAMS PREPARATION PROGRESS LABELS ======================================= */}\n\n        {/* ===================================================================================== */}\n\n        {/* EXAMS PROGRESS LABELS ======================================= */}\n        {loadExaminationProgress(\n          this.props.adminExamReport.DoneExam,\n          this.props.examsList,\n          this.state.thisEducation,\n          this.props.courses,\n          this.props.schoolLevels.school_levels,\n          this.state.thisPeriod\n        ) && (\n          <section className=\"my-2\">\n            <div className=\"text-2xl font-semibold text-gray-600\">\n              Examination progress status\n            </div>\n            <ExamDashboardLabels\n              dataLabels={[\n                {\n                  title: \"Total exams\",\n                  icon: FaBookOpen,\n                  iconColor: \"blue\",\n                  count: loadExaminationProgress(\n                    this.props.adminExamReport.DoneExam,\n                    this.props.examsList,\n                    this.state.thisEducation,\n                    this.props.courses,\n                    this.props.schoolLevels.school_levels,\n                    this.state.thisPeriod\n                  )!.all.length,\n                },\n                {\n                  title: \"Done exams\",\n                  icon: FaBookOpen,\n                  iconColor: \"green\",\n                  count: loadExaminationProgress(\n                    this.props.adminExamReport.DoneExam,\n                    this.props.examsList,\n                    this.state.thisEducation,\n                    this.props.courses,\n                    this.props.schoolLevels.school_levels,\n                    this.state.thisPeriod\n                  )!.finished.length,\n                },\n                {\n                  title: \"Remaining exams\",\n                  icon: FaBookOpen,\n                  iconColor: \"gray\",\n                  count: loadExaminationProgress(\n                    this.props.adminExamReport.DoneExam,\n                    this.props.examsList,\n                    this.state.thisEducation,\n                    this.props.courses,\n                    this.props.schoolLevels.school_levels,\n                    this.state.thisPeriod\n                  )!.remaining.length,\n                },\n              ]}\n              labelsOnRow={5}\n            >\n              <div className=\"flex justify-center\">\n                <PieChart\n                  options={{\n                    labels: [\"Done\", \"Remaining\"],\n                    legend: {\n                      show: false,\n                      position: \"bottom\",\n                      horizontalAlign: \"center\",\n                      fontSize: \"16px\",\n                      itemMargin: {\n                        horizontal: 3,\n                        vertical: 0,\n                      },\n                    },\n                    plotOptions: {\n                      pie: {\n                        donut: {\n                          labels: {\n                            show: true,\n                            name: {\n                              show: true,\n                              fontSize: \"16px\",\n                              //   fontFamily: \"Rubik\",\n                              color: \"#2564eb\",\n                              offsetY: -10,\n                            },\n                            value: {\n                              show: true,\n                              fontSize: \"20px\",\n                              fontFamily: \"Helvetica, Arial, sans-serif\",\n                              color: \"#2564eb\",\n                              offsetY: 10,\n                              formatter: function (val) {\n                                return val;\n                              },\n                            },\n                            total: {\n                              show: true,\n                              label: \"Total\",\n                              color: \"#2564eb\",\n                              formatter: function (w) {\n                                return w.globals.seriesTotals.reduce(\n                                  (a: number, b: number) => {\n                                    return a + b;\n                                  },\n                                  0\n                                );\n                              },\n                            },\n                          },\n                        },\n                      },\n                    },\n                    colors: [\"#469769\", \"#4b5563\"],\n                  }}\n                  series={[\n                    loadExaminationProgress(\n                      this.props.adminExamReport.DoneExam,\n                      this.props.examsList,\n                      this.state.thisEducation,\n                      this.props.courses,\n                      this.props.schoolLevels.school_levels,\n                      this.state.thisPeriod\n                    )!.finished.length,\n                    loadExaminationProgress(\n                      this.props.adminExamReport.DoneExam,\n                      this.props.examsList,\n                      this.state.thisEducation,\n                      this.props.courses,\n                      this.props.schoolLevels.school_levels,\n                      this.state.thisPeriod\n                    )!.remaining.length,\n                  ]}\n                  width={210}\n                />\n              </div>\n            </ExamDashboardLabels>\n          </section>\n        )}\n        {/* EXAMS PROGRESS LABELS ======================================= */}\n\n        {/* ===================================================================================== */}\n\n        {/* EXAMS PERFORMANCE LABELS ======================================= */}\n        {this.props.adminExamReport.CandidatesExamPerformance &&\n          loadCoursesByInstitute(\n            this.state.thisEducation,\n            this.props.courses,\n            this.props.schoolLevels.school_levels\n          ) && (\n            <section className=\"my-2\">\n              <div className=\"text-2xl font-semibold text-gray-600\">\n                Examination performance status\n              </div>\n              <ExamDashboardLabels\n                dataLabels={[\n                  {\n                    title: \"Total attendance\",\n                    icon: FaBookOpen,\n                    iconColor: \"blue\",\n                    count: loadExamAttendance(\n                      FC_reportCandidatePerformanceDataFilter(\n                        FC_reportCandidatePerformanceData(\n                          loadCoursesByInstitute(\n                            this.state.thisEducation,\n                            this.props.courses,\n                            this.props.schoolLevels.school_levels\n                          )!,\n                          this.props.adminExamReport.CandidatesExamPerformance,\n                          \"all\"\n                        ),\n                        \"all\"\n                      ),\n                      this.state.thisPeriod\n                    ).all.length,\n                  },\n                  {\n                    title: \"Pass applicant(s)\",\n                    icon: FaBookOpen,\n                    iconColor: \"green\",\n                    count: loadExamAttendance(\n                      FC_reportCandidatePerformanceDataFilter(\n                        FC_reportCandidatePerformanceData(\n                          loadCoursesByInstitute(\n                            this.state.thisEducation,\n                            this.props.courses,\n                            this.props.schoolLevels.school_levels\n                          )!,\n                          this.props.adminExamReport.CandidatesExamPerformance,\n                          \"all\"\n                        ),\n                        \"all\"\n                      ),\n                      this.state.thisPeriod\n                    ).pass.length,\n                  },\n                  {\n                    title: \"Failed applicant(s)\",\n                    icon: FaBookOpen,\n                    iconColor: \"yellow\",\n                    count: loadExamAttendance(\n                      FC_reportCandidatePerformanceDataFilter(\n                        FC_reportCandidatePerformanceData(\n                          loadCoursesByInstitute(\n                            this.state.thisEducation,\n                            this.props.courses,\n                            this.props.schoolLevels.school_levels\n                          )!,\n                          this.props.adminExamReport.CandidatesExamPerformance,\n                          \"all\"\n                        ),\n                        \"all\"\n                      ),\n                      this.state.thisPeriod\n                    ).failed.length,\n                  },\n                  // {\n                  //   title: \"Doing exam\",\n                  //   icon: FaBookOpen,\n                  //   iconColor: \"gray\",\n                  //   count: loadExamAttendance(\n                  //     FC_reportCandidatePerformanceDataFilter(\n                  //       FC_reportCandidatePerformanceData(\n                  //         loadCoursesByInstitute(\n                  //           thisEducation,\n                  //           props.courses,\n                  //           props.schoolLevels.school_levels\n                  //         )!,\n                  //         props.adminExamReport.CandidatesExamPerformance,\n                  //         \"all\"\n                  //       ),\n                  //       \"all\"\n                  //     ),\n                  //     thisPeriod\n                  //   ).active.length,\n                  // },\n                ]}\n                labelsOnRow={5}\n              >\n                <div className=\"flex justify-center\">\n                  <PieChart\n                    options={{\n                      labels: [\"Pass\", \"Failed\"],\n                      // labels: [\"Pass\", \"Failed\", \"Doing Exam\"],\n                      legend: {\n                        show: false,\n                        position: \"bottom\",\n                        horizontalAlign: \"center\",\n                        fontSize: \"16px\",\n                        itemMargin: {\n                          horizontal: 3,\n                          vertical: 0,\n                        },\n                      },\n                      plotOptions: {\n                        pie: {\n                          donut: {\n                            labels: {\n                              show: true,\n                              name: {\n                                show: true,\n                                fontSize: \"16px\",\n                                //   fontFamily: \"Rubik\",\n                                color: \"#2564eb\",\n                                offsetY: -10,\n                              },\n                              value: {\n                                show: true,\n                                fontSize: \"20px\",\n                                fontFamily: \"Helvetica, Arial, sans-serif\",\n                                color: \"#2564eb\",\n                                offsetY: 10,\n                                formatter: function (val) {\n                                  return val;\n                                },\n                              },\n                              total: {\n                                show: true,\n                                label: \"Total\",\n                                color: \"#2564eb\",\n                                formatter: function (w) {\n                                  return w.globals.seriesTotals.reduce(\n                                    (a: number, b: number) => {\n                                      return a + b;\n                                    },\n                                    0\n                                  );\n                                },\n                              },\n                            },\n                          },\n                        },\n                      },\n                      colors: [\"#469769\", \"#d97724\"],\n                      // colors: [\"#469769\", \"#d97724\", \"#4b5563\"],\n                    }}\n                    series={[\n                      loadExamAttendance(\n                        FC_reportCandidatePerformanceDataFilter(\n                          FC_reportCandidatePerformanceData(\n                            loadCoursesByInstitute(\n                              this.state.thisEducation,\n                              this.props.courses,\n                              this.props.schoolLevels.school_levels\n                            )!,\n                            this.props.adminExamReport\n                              .CandidatesExamPerformance,\n                            \"all\"\n                          ),\n                          \"all\"\n                        ),\n                        this.state.thisPeriod\n                      ).pass.length,\n                      loadExamAttendance(\n                        FC_reportCandidatePerformanceDataFilter(\n                          FC_reportCandidatePerformanceData(\n                            loadCoursesByInstitute(\n                              this.state.thisEducation,\n                              this.props.courses,\n                              this.props.schoolLevels.school_levels\n                            )!,\n                            this.props.adminExamReport\n                              .CandidatesExamPerformance,\n                            \"all\"\n                          ),\n                          \"all\"\n                        ),\n                        this.state.thisPeriod\n                      ).failed.length,\n                      // loadExamAttendance(\n                      //   FC_reportCandidatePerformanceDataFilter(\n                      //     FC_reportCandidatePerformanceData(\n                      //       loadCoursesByInstitute(\n                      //         thisEducation,\n                      //         props.courses,\n                      //         props.schoolLevels.school_levels\n                      //       )!,\n                      //       props.adminExamReport.CandidatesExamPerformance,\n                      //       \"all\"\n                      //     ),\n                      //     \"all\"\n                      //   ),\n                      //   thisPeriod\n                      // ).active.length,\n                    ]}\n                    width={210}\n                  />\n                </div>\n              </ExamDashboardLabels>\n            </section>\n          )}\n        {/* EXAMS PERFORMANCE LABELS ======================================= */}\n\n        {/* ------------------------------------------------------------------------------- */}\n\n        {/* ===================================================================================== */}\n\n        {/* EXAMS PREPARATION PROGRESS CHART ======================================= */}\n        {this.props.examsList &&\n          loadCoursesByInstitute(\n            this.state.thisEducation,\n            this.props.courses,\n            this.props.schoolLevels.school_levels\n          ) && (\n            <ExamPreparationChart\n              examPreparationProgress={loadExamPreparationProgress(\n                FC_reportExamList(\n                  loadCoursesByInstitute(\n                    this.state.thisEducation,\n                    this.props.courses,\n                    this.props.schoolLevels.school_levels\n                  )!,\n                  this.props.examsList,\n                  this.state.thisPeriod\n                )\n              )}\n            />\n          )}\n        {/* EXAMS PREPARATION PROGRESS CHART ======================================= */}\n\n        {/* ===================================================================================== */}\n\n        {/* EXAMINATION PROGRESS CHART ======================================= */}\n        {loadExaminationProgress(\n          this.props.adminExamReport.DoneExam,\n          this.props.examsList,\n          this.state.thisEducation,\n          this.props.courses,\n          this.props.schoolLevels.school_levels,\n          this.state.thisPeriod\n        ) && (\n          <ExamProgressChart\n            progressData={\n              loadExaminationProgress(\n                this.props.adminExamReport.DoneExam,\n                this.props.examsList,\n                this.state.thisEducation,\n                this.props.courses,\n                this.props.schoolLevels.school_levels,\n                this.state.thisPeriod\n              )!\n            }\n          />\n        )}\n        {/* EXAMINATION PROGRESS CHART ======================================= */}\n\n        {/* ===================================================================================== */}\n\n        {/* EXAM PERFORMANCE ON COUNTRY CHART ======================================= */}\n        {this.props.adminExamReport.CandidatesExamPerformance &&\n          loadCoursesByInstitute(\n            this.state.thisEducation,\n            this.props.courses,\n            this.props.schoolLevels.school_levels\n          ) && (\n            <ExamPerformanceChart\n              examPerformance={loadExamAttendance(\n                FC_reportCandidatePerformanceDataFilter(\n                  FC_reportCandidatePerformanceData(\n                    loadCoursesByInstitute(\n                      this.state.thisEducation,\n                      this.props.courses,\n                      this.props.schoolLevels.school_levels\n                    )!,\n                    this.props.adminExamReport.CandidatesExamPerformance,\n                    \"all\"\n                  ),\n                  \"all\"\n                ),\n                this.state.thisPeriod\n              )}\n            />\n          )}\n        {/* END EXAM PERFORMANCE ON COUNTRY CHART ======================================= */}\n\n        {/* ------------------------------------------------------------------------------- */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  sessionPlan,\n  schoolLevels,\n  course,\n  prepareExam,\n  adminExamReport,\n}: StoreState): {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  courses: course[] | null;\n  examsList: ExamItemResponse[] | null;\n  adminExamReport: ExamReportReducerType;\n} => {\n  return {\n    auth,\n    application_sessions: sessionPlan.allSessionPlans,\n    schoolLevels,\n    courses: course.courses,\n    examsList: prepareExam.examsList,\n    adminExamReport,\n  };\n};\n\nexport const ExamDashboard = connect(mapStateToProps, {\n  loadCourses,\n  loadExamsList,\n  loadEducationCategories,\n  loadDoneExam,\n  loadSchoolLevels,\n  loadPerfomranceExam,\n  loadCandidatesExamPerformance,\n  GetAllSessionPlans,\n  PushPopupAlert,\n})(_ExamDashboard);\n","import { UserByTypeInterfaceAPI } from \"./user_by_type\";\n\nexport interface centerReportInterface {\n  _id: string;\n  occupied: number;\n  isUsed: boolean;\n  center_id: string;\n  room_type: string;\n  room_number: number;\n  capacity: number;\n  center_name: string;\n  district_id: string;\n  district_name: string;\n  course_in_room: courseInRoomInterface[];\n}\n\nexport interface centerReportInterface_NEW {\n  _id: string;\n  occupied: number;\n  isUsed: boolean;\n  center_id: string;\n  room_type: string;\n  room_number: number;\n  capacity: number;\n  center_name: string;\n  district_id: string;\n  district_name: string;\n  invigilator: string;\n  course_in_room: courseInRoomInterface[];\n}\n\nexport interface courseInRoomInterface {\n  course_id: string;\n  course_name: string;\n  course_code: string;\n  occupied: number;\n}\n\nexport interface CenterToPrintInterface {\n  no: number;\n  district_name: string;\n  center_name: string;\n  room_number: number;\n  room_type: string;\n  room_capacity: number | \"-\";\n  room_occupation: number;\n  invigilator: string;\n}\n\nexport enum centerReportContentKeyInterface {\n  district_name = \"district_name\",\n  center_name = \"center_name\",\n  room_number = \"room_number\",\n  room_type = \"room_type\",\n  room_capacity = \"room_capacity\",\n  room_occupation = \"room_occupation\",\n  invigilator = \"invigilator\",\n}\n\nexport interface centerReportContentInterface {\n  key: centerReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n\nexport interface roomDistrictInterface {\n  district_id: string;\n  district_name: string;\n}\n\nexport const getDistrictInRoom = (\n  allData: centerReportInterface[]\n): roomDistrictInterface[] => {\n  let result: roomDistrictInterface[] = [],\n    ids: string[] = [];\n  for (const key in allData) {\n    if (Object.prototype.hasOwnProperty.call(allData, key)) {\n      if (!ids.includes(allData[key].district_id)) {\n        ids.push(allData[key].district_id);\n        result.push({\n          district_id: allData[key].district_id,\n          district_name: allData[key].district_name,\n        });\n      }\n    }\n  }\n\n  return result;\n};\n\nexport const getRoomOccupation = (thisRoom: centerReportInterface): number => {\n  let result: number = 0;\n  for (const key in thisRoom.course_in_room) {\n    if (Object.prototype.hasOwnProperty.call(thisRoom.course_in_room, key)) {\n      const element = thisRoom.course_in_room[key];\n      if (result < element.occupied) {\n        result = element.occupied;\n      }\n    }\n  }\n  return result;\n};\n\nexport const roomWithOccupation = (\n  allRoom: centerReportInterface[],\n  invigilators: UserByTypeInterfaceAPI[]\n): centerReportInterface_NEW[] => {\n  let result: centerReportInterface_NEW[] = [];\n  for (const key in allRoom) {\n    if (Object.prototype.hasOwnProperty.call(allRoom, key)) {\n      let data: centerReportInterface = allRoom[key];\n      data.occupied = getRoomOccupation(allRoom[key]);\n      const invigilator = invigilators.find(\n        (item) => item.roles_to_users.room_id === allRoom[key]._id\n      );\n      result.push({\n        _id: data._id,\n        occupied: data.occupied,\n        isUsed: data.isUsed,\n        center_id: data.center_id,\n        room_type: data.room_type,\n        room_number: data.room_number,\n        capacity: data.capacity,\n        center_name: data.center_name,\n        district_id: data.district_id,\n        district_name: data.district_name,\n        invigilator: invigilator\n          ? invigilator.user_info.fname + \" \" + invigilator.user_info.lname\n          : \"\",\n        course_in_room: data.course_in_room,\n      });\n    }\n  }\n  return result;\n};\n\nexport const center_report_data: centerReportInterface[] = [\n  {\n    _id: \"61af5367558d345d93dea4397a3\",\n    occupied: 0,\n    isUsed: true,\n    center_id: \"61af534c558dd93dea43979f\",\n    room_type: \"Default\",\n    room_number: 0,\n    capacity: 1000000,\n    center_name: \"Gasabo district center\",\n    district_id: \"61af5338558dd93dea43979b\",\n    district_name: \"Kicukiro\",\n    course_in_room: [],\n  },\n  {\n    _id: \"61af5367558dd93defea4397a6\",\n    occupied: 0,\n    isUsed: true,\n    center_id: \"61af534c558dd93dea43979f\",\n    room_type: \" physical room\",\n    room_number: 112,\n    capacity: 100,\n    center_name: \"Center A\",\n    district_id: \"61af5338558dd93dea43979b\",\n    district_name: \"Kicukiro\",\n    course_in_room: [\n      {\n        course_id: \"61546609eeda150485905a32\",\n        course_name: \"Civisme\",\n        course_code: \"C001\",\n        occupied: 12,\n      },\n      {\n        course_id: \"61546684eeda150485905a3d\",\n        course_name: \"IPTC 1\",\n        course_code: \"ipop\",\n        occupied: 21,\n      },\n      {\n        course_id: \"615465faeeda150485905a2e\",\n        course_name: \"ICT2 for Me\",\n        course_code: \"ICT\",\n        occupied: 100,\n      },\n      {\n        course_id: \"61546401eeda1504859059cc\",\n        course_name: \"ICT in Life\",\n        course_code: \"ICT001\",\n        occupied: 1,\n      },\n    ],\n  },\n  {\n    _id: \"61af536755835dd93defea4397a6\",\n    occupied: 0,\n    isUsed: true,\n    center_id: \"61af534c558dd93dea43979f\",\n    room_type: \" physical room\",\n    room_number: 112,\n    capacity: 120,\n    center_name: \"Gasabo district center\",\n    district_id: \"61af5338558dd93dea43979b\",\n    district_name: \"Kicukiro\",\n    course_in_room: [\n      {\n        course_id: \"61546609eeda150485905a32\",\n        course_name: \"Civisme\",\n        course_code: \"C001\",\n        occupied: 100,\n      },\n      {\n        course_id: \"61546684eeda150485905a3d\",\n        course_name: \"IPTC 1\",\n        course_code: \"ipop\",\n        occupied: 1,\n      },\n      {\n        course_id: \"615465faeeda150485905a2e\",\n        course_name: \"ICT2 for Me\",\n        course_code: \"ICT\",\n        occupied: 10,\n      },\n      {\n        course_id: \"61546401eeda1504859059cc\",\n        course_name: \"ICT in Life\",\n        course_code: \"ICT001\",\n        occupied: 1,\n      },\n    ],\n  },\n];\n","export enum UserByTypeKeys {\n  INVIGILATOR = \"room_id\",\n  HEAD_TEACHER = \"school_id\",\n  DIRECTOR_OF_EDUCATION = \"district_id\",\n  INSTITUTE = \"education_institution_id\",\n}\n\nexport interface UserByTypeInterfaceAPI {\n  _id: string;\n  roles_to_users: {\n    key: string;\n    system_user_role_id: string;\n    district_id: string;\n    school_id: string;\n    room_id: string;\n    status: number;\n    access: boolean;\n    assigned_date: string;\n    education_institution_id?: string;\n  };\n  n_id: string;\n  phone_number: string;\n  email: string;\n  user_info: {\n    document_type: string;\n    issue_number: string;\n    date_of_issue: string;\n    date_of_expiry: string;\n    place_of_issue: string;\n    application_number: string;\n    fname: string;\n    lname: string;\n    father_names: string;\n    mother_names: string;\n    sex: string;\n    date_of_birth: string;\n    place_of_birth: string;\n    country_of_birth: string;\n    village_id: string;\n    village: string;\n    cell: string;\n    sector: string;\n    district: string;\n    province: string;\n    civil_status: string;\n    spouse: null;\n    status: string;\n    photo: string;\n  };\n}\n\nexport interface UserByTypeInterface {\n  _id: string; // CAN BE ROOM ID + SCHOOL ID, DISTRICT ID\n  role_id: string | null;\n  role_name: string | null;\n  role_key: UserByTypeKeys;\n  national_id: string | null;\n  phone_number: string | null;\n  email: string | null;\n  first_name: string | null;\n  last_name: string | null;\n  gender: string | null;\n  photo: string | null;\n  province_id: string;\n  province_name: string;\n  district_id: string;\n  district_name: string;\n  center_id: string;\n  center_name: string;\n  room_id: string;\n  room_name: string;\n  school_id: string;\n  school_name: string;\n}\n\n// EXPORT INTERFACES ====================\nexport interface invigilatorToPrintInterface {\n  no: number;\n  province_name: string;\n  district_name: string;\n  center_name: string;\n  room_name: string;\n  national_id: string;\n  email: string;\n  first_name: string;\n  last_name: string;\n  phone_number: string;\n  gender: string;\n}\n\nexport enum invigilatorReportContentKeyInterface {\n  // USER INFO =====================\n  first_name = \"first_name\",\n  last_name = \"last_name\",\n  email = \"email\",\n  phone_number = \"phone_number\",\n  gender = \"gender\",\n  national_id = \"national_id\",\n  // ROOM INFO =====================\n  province_name = \"province_name\",\n  district_name = \"district_name\",\n  center_name = \"center_name\",\n  room_name = \"room_name\",\n}\n\nexport interface invigilatorReportContentInterface {\n  key: invigilatorReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { roomDistrictInterface } from \"../../../interfaces/center_report\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport search from \"../../../utils/search\";\n\ntype RoleListProps = {\n  setChooseDistrict: (value: boolean) => void;\n  districtList: roomDistrictInterface[];\n  setSelectedDistrict: (data: roomDistrictInterface | \"all\") => void;\n  selectedDistrict: roomDistrictInterface | \"all\";\n  loadindRequest: boolean;\n  bgWhite?: boolean;\n  isModal?: boolean;\n};\n\nconst DistrictList: React.FC<RoleListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section\n      className={`${\n        props.isModal ? \"\" : \"border-2 rounded border-gray-400 shadow-md\"\n      }`}\n    >\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className={`focus:border-2 h-7 ml-1 pl-9 ${\n            props.isModal ? \"mr-1\" : \"mr-2\"\n          } bg-gray-100 focus:border-gray-700 w-full rounded`}\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={props.districtList.length > 0 ? false : true}\n        />\n        {!props.isModal && (\n          <button\n            className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n            type=\"button\"\n            onClick={() => {\n              props.setChooseDistrict(false);\n            }}\n          >\n            Close\n          </button>\n        )}\n      </div>\n      {/* END SEARCH PART ///////////////// */}\n\n      <div\n        className={`w-full h-52 mt-2 ${\n          props.isModal ? \"px-2\" : \"\"\n        } overflow-y-auto divide-y divide-gray-300 ${\n          props.bgWhite && \"bg-white\"\n        }`}\n      >\n        <section>\n          <div\n            className={`group flex items-center justify-between my-1 ${\n              props.selectedDistrict === \"all\"\n                ? \"cursor-default bg-blue-50 hover:bg-blue-100\"\n                : \"hover:bg-blue-100\"\n            }`}\n          >\n            <div\n              className={`p-1 w-full mr-2 ${\n                props.selectedDistrict === \"all\"\n                  ? \"cursor-default\"\n                  : \"cursor-pointer\"\n              }`}\n              onClick={() => {\n                props.setChooseDistrict(false);\n                !props.loadindRequest &&\n                  props.selectedDistrict !== \"all\" &&\n                  props.setSelectedDistrict(\"all\");\n              }}\n            >\n              <p className=\"text-sm font-medium text-black\">All district</p>\n            </div>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 group-hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 p-1 mr-1 rounded text-sm\"\n            >\n              Choose\n            </button>\n          </div>\n        </section>\n        {search(props.districtList, searchInput).length > 0 ? (\n          search(props.districtList, searchInput).map((district, index) => (\n            <section key={index + district.district_id}>\n              <div className=\"group flex items-center justify-between my-1 hover:bg-gray-100\">\n                <div\n                  className=\"p-1 w-full mr-2 cursor-pointer\"\n                  onClick={() => {\n                    props.setChooseDistrict(false);\n                    !props.loadindRequest &&\n                      props.setSelectedDistrict(district);\n                  }}\n                >\n                  <p className=\"text-sm font-medium text-black\">\n                    {capitalizeFirstLetter(district.district_name)}\n                  </p>\n                </div>\n                <button\n                  type=\"button\"\n                  className=\"bg-blue-200 group-hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 p-1 mr-1 rounded text-sm\"\n                >\n                  Choose\n                </button>\n              </div>\n            </section>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No district available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default React.memo(DistrictList);\n"],"sourceRoot":""}
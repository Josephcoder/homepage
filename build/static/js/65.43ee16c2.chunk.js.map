{"version":3,"sources":["containers/UserManagement/index.tsx"],"names":["TabTypes","_UserManagement","props","setUserData","value","setState","userData","setLoadingUsers","loadingUsers","setUserTabs","userTabs","setFilerByRoleLevel","filterByRoleLevel","setOpenFilterByRole","openFilterByRole","setLoading","loading","setCurrentPage","currentPage","setLastLoadedPage","lastLoadedPage","setManageUser","manageUser","setChangeRole","changeRole","componentDidMount","accessRoles","length","FC_GetAccessRoles","status","msg","data","schoolLevels","education_categories","loadEducationCategories","userList","users","fetchUserAccess","isEmptyOrSpaces","PushPopupAlert","title","theme","PopupAlertTheme","danger","console","log","reloadUsers","page","state","includes","newUserList","concat","labelCounts","allUser","activeUser","filter","user","is_active","blockedUser","filterByRole","allData","default_access","system_user_role_id","getRoleById","roleList","roleId","find","item","generatePages","total_users","totalPages","Math","ceil","userPageLimit","_pages","Array","from","keys","map","i","slice","jumpToFirst","jumpToLast","moveBack","moveNext","className","onClick","index","disabled","random","dataResult","tabType","indexData","findIndex","Active_Users","Blocked_Users","All_Users","this","onChange","e","target","role","Object","values","user_info","fname","lname","email","userTypes","loadingUser","setLoadingUser","Component","UserManagement","connect","access"],"mappings":"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","file":"static/js/65.43ee16c2.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { FaFilter } from \"react-icons/fa\";\nimport {\n  HiChevronDoubleLeft,\n  HiChevronDoubleRight,\n  HiChevronLeft,\n  HiChevronRight,\n} from \"react-icons/hi\";\nimport { IoMdArrowRoundBack } from \"react-icons/io\";\nimport { MdSupervisorAccount } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  schoolLevelsStoreInterface,\n  FC_GetAccessRoles,\n  loadEducationCategories,\n  PushPopupAlert,\n  FT_GetAccessRoles,\n} from \"../../actions\";\nimport {\n  fetchUserAccess,\n  FT_FetchUserAccess,\n  UserAccessInterface,\n  userPageLimit,\n} from \"../../actions/users\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport {\n  UserInterface,\n  SystemUserRoleInterface,\n} from \"../../shared/interfaces\";\nimport UserList from \"./UserList\";\n\nenum TabTypes {\n  All_Users = \"All Users\",\n  Active_Users = \"Active Users\",\n  Blocked_Users = \"Blocked Users\",\n}\n\ninterface AppProps {\n  userList: UserAccessInterface;\n  accessRoles: SystemUserRoleInterface[];\n  schoolLevels: schoolLevelsStoreInterface;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  fetchUserAccess: FT_FetchUserAccess;\n  FC_GetAccessRoles: FT_GetAccessRoles;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface AppStates {\n  userTabs: TabTypes;\n  userData: UserInterface[];\n  loadingUsers: boolean;\n  filterByRoleLevel: \"all\" | string;\n  openFilterByRole: boolean;\n  loading: boolean;\n  manageUser: UserInterface | null;\n  changeRole: boolean;\n  currentPage: number;\n  lastLoadedPage: number[];\n}\n\nclass _UserManagement extends Component<AppProps, AppStates> {\n  constructor(props: AppProps) {\n    super(props);\n    // this.childRef = React.createRef();\n\n    this.state = {\n      userTabs: TabTypes.All_Users,\n      userData: [],\n      loadingUsers: true,\n      filterByRoleLevel: \"all\",\n      openFilterByRole: false,\n      loading: true,\n      manageUser: null,\n      changeRole: false,\n      currentPage: 1,\n      lastLoadedPage: [1],\n    };\n  }\n\n  setUserData = (value: UserInterface[]) => {\n    this.setState({ userData: value });\n  };\n\n  setLoadingUsers = (value: boolean) => {\n    this.setState({ loadingUsers: value });\n  };\n\n  setUserTabs = (value: TabTypes) => {\n    this.setState({ userTabs: value });\n  };\n\n  setFilerByRoleLevel = (value: \"all\" | string) => {\n    this.setState({ filterByRoleLevel: value });\n  };\n\n  setOpenFilterByRole = (value: boolean) => {\n    this.setState({ openFilterByRole: value });\n  };\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setCurrentPage = (value: number) => {\n    this.setState({ currentPage: value });\n  };\n\n  setLastLoadedPage = (value: number[]) => {\n    this.setState({ lastLoadedPage: value });\n  };\n\n  setManageUser = (value: UserInterface | null) => {\n    this.setState({ manageUser: value });\n  };\n\n  setChangeRole = (value: boolean) => {\n    this.setState({ changeRole: value });\n  };\n\n  componentDidMount = () => {\n    if (!this.props.accessRoles.length) {\n      this.props.FC_GetAccessRoles(\n        (status: boolean, msg: string, data: SystemUserRoleInterface[]) => {\n          this.setState({ loading: status });\n          // if (isEmptyOrSpaces(msg) && status === false)\n          //   this.setState({ feedBack: { type: \"main-error\", message: msg } });\n          // else if (status === false && data.length > 0)\n          //   this.setState({\n          //     labelCounts: {\n          //       allRole: data.length,\n          //       activeRole: data.filter((role) => role.status).length,\n          //       blockedRole: data.filter((role) => !role.status).length,\n          //     },\n          //   });\n        }\n      );\n    }\n\n    // LOADING EDUCATION CATEGORY =================================\n    if (\n      this.props.schoolLevels.education_categories === null ||\n      this.props.schoolLevels.education_categories.length === 0\n    ) {\n      this.props.loadEducationCategories((status: boolean) => {\n        this.setLoading(status);\n      });\n    } else {\n      this.setLoading(false);\n    }\n    // END LOADING EDUCATION CATEGORY =================================\n    if (!this.props.userList.users) {\n      this.props.fetchUserAccess(\n        1,\n        (status: boolean, msg: string, users?: UserInterface[] | null) => {\n          this.setLoadingUsers(status);\n          if (!status) {\n            if (!isEmptyOrSpaces(msg)) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n\n            if (users) {\n              this.setUserData(users);\n              this.setLoadingUsers(false);\n              console.log(\"====================================\");\n              console.log({ setLoadingUsers: status });\n              console.log(\"====================================\");\n            }\n          }\n        }\n      );\n    } else {\n      this.setUserData(this.props.userList.users[0].data);\n      this.setLoadingUsers(false);\n    }\n    // if (this.props.userList.length) {\n    //   console.log({ userList: this.props.userList });\n    //   // REAL CODES TO BE USED ======================\n    //   // setLabelCounts({\n    //   //   allUser: userList.length,\n    //   //   activeUser: userList.filter((user) => user.is_active).length,\n    //   //   blockedUser: userList.filter((user) => !user.is_active).length,\n    //   // });\n    // }\n  };\n\n  reloadUsers = (page: number) => {\n    if (!this.state.lastLoadedPage.includes(page)) {\n      this.props.fetchUserAccess(\n        page,\n        (status: boolean, msg: string, users?: UserInterface[] | null) => {\n          this.setLoadingUsers(status);\n          if (!status) {\n            if (!isEmptyOrSpaces(msg)) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n\n            if (users) {\n              let newUserList = [...this.state.userData];\n              newUserList = newUserList.concat(users);\n              this.setUserData(newUserList);\n              this.setLastLoadedPage([...this.state.lastLoadedPage, page]);\n              this.setLoadingUsers(false);\n              console.log(\"====================================\");\n              console.log({ setLoadingUsers: status });\n              console.log(\"====================================\");\n            }\n          }\n        }\n      );\n    }\n  };\n\n  labelCounts = (\n    data: UserInterface[]\n  ): {\n    allUser: number;\n    activeUser: number;\n    blockedUser: number;\n  } => {\n    return {\n      allUser: data.length,\n      activeUser: data.filter((user) => !user.is_active).length,\n      blockedUser: data.filter((user) => user.is_active).length,\n    };\n  };\n\n  filterByRole = (\n    allData: UserInterface[],\n    value: string = \"all\"\n  ): UserInterface[] => {\n    if (value !== \"all\") {\n      return allData.filter(\n        (user) =>\n          user.default_access &&\n          user.default_access.system_user_role_id === value\n      );\n    }\n    return allData;\n  };\n\n  getRoleById = (\n    roleList: SystemUserRoleInterface[],\n    roleId: string\n  ): SystemUserRoleInterface | undefined => {\n    return roleList.find((item) => item.system_user_role_id === roleId);\n  };\n  // countByRole = (value: string): number => {\n  //   if (this.props.userList.users) {\n  //     if (value === \"all\") {\n  //       return this.props.userList.users.length;\n  //     }\n  //     return this.props.userList.users.filter(\n  //       (user) =>\n  //         user.default_access &&\n  //         user.default_access.system_user_role_id === value\n  //     ).length;\n  //   }\n\n  //   return 0;\n  // };\n\n  generatePages = (total_users: number): JSX.Element => {\n    const totalPages = Math.ceil(total_users / userPageLimit);\n    const startPage: number = 1;\n    let _pages = Array.from(Array(totalPages + 1 - startPage).keys())\n      .map((i) => startPage + i)\n      .slice(0, 5);\n\n    if (totalPages > 4 && this.state.currentPage > 2) {\n      if (totalPages - this.state.currentPage > 1) {\n        _pages = [\n          this.state.currentPage - 2,\n          this.state.currentPage - 1,\n          this.state.currentPage,\n          this.state.currentPage + 1,\n          this.state.currentPage + 2,\n        ];\n      } else if (totalPages - this.state.currentPage === 1) {\n        _pages = [\n          this.state.currentPage - 3,\n          this.state.currentPage - 2,\n          this.state.currentPage - 1,\n          this.state.currentPage,\n          this.state.currentPage + 1,\n        ];\n      } else {\n        _pages = [\n          this.state.currentPage - 4,\n          this.state.currentPage - 3,\n          this.state.currentPage - 2,\n          this.state.currentPage - 1,\n          this.state.currentPage,\n        ];\n      }\n    }\n\n    let jumpToFirst: boolean = false,\n      jumpToLast: boolean = false,\n      moveBack: boolean = false,\n      moveNext: boolean = false;\n\n    if (totalPages > 1 && this.state.currentPage !== 1) {\n      moveBack = true;\n    }\n\n    if (totalPages > 1 && this.state.currentPage !== totalPages) {\n      moveNext = true;\n    }\n\n    if (totalPages > 3 && this.state.currentPage > 3) {\n      jumpToFirst = true;\n    }\n\n    if (\n      totalPages > 3 &&\n      this.state.currentPage !== totalPages &&\n      totalPages - this.state.currentPage > 2\n    ) {\n      jumpToLast = true;\n    }\n\n    return (\n      <div className=\"flex text-gray-700\">\n        {jumpToFirst && (\n          <button\n            className=\"h-12 w-12 ml-1 flex justify-center items-center rounded-full bg-gray-100 hover:bg-gray-200 cursor-pointer\"\n            onClick={() => this.setCurrentPage(1)}\n          >\n            <HiChevronDoubleLeft className=\"w-6 h-6\" />\n          </button>\n        )}\n        {moveBack && (\n          <button\n            className=\"h-12 w-12 ml-1 flex justify-center items-center rounded-full bg-gray-100 hover:bg-gray-200\"\n            onClick={() => this.setCurrentPage(this.state.currentPage - 1)}\n          >\n            <HiChevronLeft className=\"w-6 h-6\" />\n          </button>\n        )}\n        <div className=\"flex h-12 font-medium rounded-full mx-1 bg-gray-100\">\n          {_pages.map((item, index) => (\n            <button\n              className={`w-12 md:flex justify-center items-center gap-2 rounded-full ${\n                this.state.currentPage === item\n                  ? \"bg-gray-600 hover:bg-gray-500 text-white cursor-auto\"\n                  : \"hover:bg-gray-200\"\n              }`}\n              key={Math.random()}\n              disabled={this.state.currentPage === item}\n              onClick={() => {\n                this.setCurrentPage(item);\n                this.reloadUsers(item);\n              }}\n            >\n              {item}\n            </button>\n          ))}\n        </div>\n        {moveNext && (\n          <button\n            className=\"h-12 w-12 mr-1 flex justify-center items-center rounded-full bg-gray-100 hover:bg-gray-200 cursor-pointer\"\n            onClick={() => {\n              this.setCurrentPage(this.state.currentPage + 1);\n              this.reloadUsers(this.state.currentPage + 1);\n            }}\n          >\n            <HiChevronRight className=\"w-6 h-6\" />\n          </button>\n        )}\n        {jumpToLast && (\n          <button\n            className=\"h-12 w-12 mr-1 flex justify-center items-center rounded-full bg-gray-100 hover:bg-gray-200 cursor-pointer\"\n            onClick={() => {\n              this.setCurrentPage(totalPages);\n              this.reloadUsers(totalPages);\n            }}\n          >\n            <HiChevronDoubleRight className=\"w-6 h-6\" />\n          </button>\n        )}\n      </div>\n    );\n  };\n\n  dataResult = (tabType: TabTypes) => {\n    if (this.props.userList.users) {\n      const indexData = this.props.userList.users.findIndex(\n        (item) => item.page === this.state.currentPage\n      );\n      if (indexData >= 0) {\n        if (tabType === TabTypes.Active_Users) {\n          return this.props.userList.users[indexData].data.filter(\n            (user) => user.is_active\n          );\n        }\n\n        if (tabType === TabTypes.Blocked_Users) {\n          return this.props.userList.users[indexData].data.filter(\n            (user) => !user.is_active\n          );\n        }\n\n        return this.props.userList.users[indexData].data;\n      }\n    }\n    if (tabType === TabTypes.Active_Users) {\n      return this.state.userData.filter((user) => user.is_active);\n    }\n\n    if (tabType === TabTypes.Blocked_Users) {\n      return this.state.userData.filter((user) => !user.is_active);\n    }\n\n    return this.state.userData;\n  };\n\n  render() {\n    if (this.state.loading === true || this.props.userList.users === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading users...\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {/* Title */}\n        {!this.state.manageUser && (\n          <div className=\"mt-3 rounded flex flex-row justify-between items-center\">\n            <div className=\"flex flex-row items-center gap-3\">\n              <MdSupervisorAccount className=\"text-6xl text-blue-600\" />\n              <div className=\"flex flex-col\">\n                <span className=\"text-blue-600 text-2xl font-bold\">\n                  System Users Management\n                </span>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* --------------------------------------------------------- */}\n        <div\n          className={`bg-white shadow rounded border border-gray-2 p-2 w-full overflow-x-auto ${\n            this.state.manageUser ? \"mt-3\" : \"\"\n          }`}\n        >\n          {/* FILTER SECTION ================================ */}\n          {!this.state.manageUser && (\n            <section className=\"flex items-start gap-3\">\n              {/* FILTER BY ROLE ========================= */}\n              <div>\n                <div className=\"my-2 font-medium text-xl flex items-center gap-2\">\n                  <FaFilter />\n                  Filter by roles\n                </div>\n                <div className=\"flex flex-col mb-3 w-full\">\n                  <select\n                    className={`w-full bg-white text-grey-darker border-2 border-gray-500 rounded h-10 px-2 focus:outline-none focus:bg-gray-100 animate__animated animate__fadeIn ${\n                      this.state.loadingUsers && \"cursor-wait\"\n                    }`}\n                    onChange={(e: React.ChangeEvent<HTMLSelectElement>) =>\n                      this.setFilerByRoleLevel(e.target.value)\n                    }\n                    disabled={this.state.loadingUsers}\n                    value={this.state.filterByRoleLevel}\n                  >\n                    <option value=\"all\">All roles</option>\n                    {this.props.accessRoles.length > 0 ? (\n                      this.props.accessRoles.map((item, i) => (\n                        <option\n                          key={Math.random()}\n                          value={item.system_user_role_id}\n                        >\n                          {item.role}\n                        </option>\n                      ))\n                    ) : (\n                      <option value=\"\" disabled>\n                        No Role\n                      </option>\n                    )}\n                  </select>\n                </div>\n              </div>\n              {/* END FILTER BY ROLE ========================= */}\n              {/* ----------------------------------------------------- */}\n              {/* FILTER BY STATUS ========================= */}\n              <div>\n                <div className=\"my-2 font-medium text-xl flex items-center gap-2\">\n                  <FaFilter />\n                  Filter by status\n                </div>\n                <div className=\"flex items-start md:items-center justify-start md:justify-end gap-2\">\n                  <select\n                    className={`w-full bg-white text-grey-darker border-2 border-gray-500 rounded h-10 px-2 focus:outline-none focus:bg-gray-100 animate__animated animate__fadeIn ${\n                      this.state.loadingUsers && \"cursor-wait\"\n                    }`}\n                    onChange={(e: React.ChangeEvent<HTMLSelectElement>) =>\n                      this.setUserTabs(e.target.value as TabTypes)\n                    }\n                    disabled={this.state.loadingUsers}\n                  >\n                    {Object.values(TabTypes).map((item, index) => (\n                      <option key={Math.random()} value={item}>\n                        {item}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n              {/* END FILTER BY STATUS ========================= */}\n            </section>\n          )}\n          {this.state.manageUser && (\n            <div className=\"flex items-center gap-3 mb-2 text-gray-600\">\n              <button\n                className=\"inline-block p-3 transition rounded-full bg-gray-400 ripple hover:bg-gray-600 focus:outline-none\"\n                onClick={() => {\n                  this.setManageUser(null);\n                  this.setChangeRole(false);\n                }}\n              >\n                <IoMdArrowRoundBack className=\"w-6 h-6 text-gray-50\" />\n              </button>\n\n              <div className=\"flex flex-col hidden\">\n                <span className=\"text-gray-800 font-semibold text-2xl\">\n                  {this.state.manageUser.user_info.fname +\n                    \" \" +\n                    this.state.manageUser.user_info.lname}\n                </span>\n                <span className=\"text-gray-600 font-normal text-sm\">\n                  {this.state.manageUser.email}\n                </span>\n              </div>\n            </div>\n          )}\n          {/* END FILTER SECTION ================================ */}\n          {this.state.userData && (\n            <section>\n              <UserList\n                users={this.filterByRole(\n                  this.dataResult(this.state.userTabs),\n                  this.state.filterByRoleLevel\n                )}\n                roleList={this.props.accessRoles}\n                userTypes={\n                  this.state.userTabs === TabTypes.Active_Users\n                    ? \"blocked\"\n                    : this.state.userTabs === TabTypes.Blocked_Users\n                    ? \"active\"\n                    : \"all\"\n                }\n                loadingUser={this.state.loadingUsers}\n                setLoadingUser={this.setLoadingUsers}\n                manageUser={this.state.manageUser}\n                setManageUser={this.setManageUser}\n                changeRole={this.state.changeRole}\n                setChangeRole={this.setChangeRole}\n                currentPage={this.state.currentPage}\n              />\n\n              {!this.state.loadingUsers && (\n                <div className=\"flex flex-col items-center mb-3\">\n                  {this.props.userList.total_users &&\n                    this.generatePages(this.props.userList.total_users)}\n                </div>\n              )}\n            </section>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  users,\n  access,\n  schoolLevels,\n}: StoreState): {\n  userList: UserAccessInterface;\n  accessRoles: SystemUserRoleInterface[];\n  schoolLevels: schoolLevelsStoreInterface;\n} => {\n  return { userList: users, accessRoles: access.accessRoles, schoolLevels };\n};\n\nexport const UserManagement = connect(mapStateToProps, {\n  fetchUserAccess,\n  FC_GetAccessRoles,\n  loadEducationCategories,\n  PushPopupAlert,\n})(_UserManagement);\n"],"sourceRoot":""}
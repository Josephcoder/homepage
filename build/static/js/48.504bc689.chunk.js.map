{"version":3,"sources":["containers/MarksPublication/ChoosePosition.tsx","containers/MarksPublication/MarksPublicationForm.tsx","actions/marks_publication.ts","containers/MarksPublication/SetPassMarks.tsx","containers/MarksPublication/MarksPublication.tsx","shared/dataTest.tsx","actions/session.ts","actions/settings.ts","components/Loading/TableLoading.tsx"],"names":["ChoosePosition","props","setCustomMarks","thisPosition","value","currentSelectedList","customMarks","index","findIndex","item","id","marks","Number","push","getMarkByPosition","find","setSearchInput","setState","searchInput","state","className","type","placeholder","onChange","e","target","this","disabled","positionList","length","onClick","setChoosePosition","searchData","map","element","position_title","min","max","position_id","defaultMarks","Component","React","memo","MarksPublicationForm","choosePosition","setFormError","formError","changeDefaultMarks","window","confirm","setInputMarks","cleanBeforeClose","modalAction","setInputComment","setModalAction","handleSubmit","a","preventDefault","msg","isEmptyOrSpaces","inputComment","positionWithMarks","forEach","positionItem","thisCustomMarks","position","comment","inputMarks","requestData","session","sessions","session_plan_id","doneby","auth","user","user_id","created_date","moment","toDate","format","toString","publication_position_marks","console","log","setLoadingRequest","axios","post","API","CLAIMING","res","createMarksPublication","data","PushPopupAlert","title","theme","PopupAlertTheme","success","error","errorToText","danger","searchPosition","onSubmit","method","capitalizeFirstLetter","session_plan_name","marksArray","loadingRequest","cols","rows","style","resize","connect","ActionTypes","CREATE_MARKS_PUBLICATION","payload","SetPassMarks","searchPublishedMarks","objList","text","undefined","filter","product","flag","prop","toLowerCase","indexOf","loadPublicationCounts","allMarks","marksBySession","get","publication_id","setPublicationCount","loadPublicationCounts_reply","publicationCount","setLoading","loading","componentDidMount","marksPublication","getNeededData","allPosition","publicationCountData","result","marksByPosition","publicationCountByPosition","province_id","province_name","courses","description","school_level_id","education_institute_id","requirements","isDeleted","isPublished","candidate_applied","candidate_passed","TableLoading","i","isUpdateOn","defaultChanged","colSpan","NoResult","NoResultThemes","Dark","update","n","status","setThisPosition","setPositionId","positionId","loadPositions","systemPositions","getPositions","getActiveSessionPlan","getMarksPublication","FC_neededPositions","withMarks","withoutMarks","publishedPosition","isMarkPublished","thisPublishedMarks","publication_status","isUpdateAllowed","handleUpdate","info","thisSession","positionSetPassMarks","_id","createdAt","updatedAt","put","updateMarksPublication","getWaitingList","sessionId","callback","DO_EXAM","getWaitingListError","handlePublishMarks","MarksPublication","sessionPlan","system_settings","activeSessionPlan","dispatch","setAxiosToken","responseData","GetMarksPublication","GET_MARKS_PUBLICATION","UPDATE_MARKS_PUBLICATION","str","match","getRoleById","roles","roleId","role","system_user_role_id","getInstituteById","institutes","instituteId","getPositionById","positions","toTwoDigit","dec","Math","floor","slice","substr","toAnyDigit","padding","zeroes","Array","join","charAt","toUpperCase","GetPlansTypes","GET_PLANS_TYPES","plan_types","setSelectedPlanType","thisType","SELECT_PLAN_TYPE","GET_ACTIVE_SESSION_PLANS","session_plan","is_active","GetAllSessionPlans","GET_ALL_SESSION_PLANS","session_data","createSessionPlan","CREATE_SESSION_PLAN","updateSessionPlan","UPDATE_SESSION_PLAN","sessionActivation","SESSION_ACTIVATION","deleteSessionPlan","DELETE_SESSION_PLAN","createAcademicSession","CREATE_ACADEMIC_SESSION","GetAllAcademicSession","PLACEMENT","GET_ALL_ACADEMIC_SESSION","updateAcademicSession","UPDATE_ACADEMIC_SESSION","academicSessionActivation","ACADEMIC_SESSION_ACTIVATION","deleteAcademicSession","DELETE_ACADEMIC_SESSION","getActiveAcademicSession","GET_ACTIVE_ACADEMIC_SESSION","getSystemSettings","AUTH","GET_SYSTEM_SETTINGS","code_error","disableSystemSetting","DISABLE_SYSTEM_SETTINGS","GetTaskAccess","response","task","key","permitted","GET_TASK_ACCESS","APPLICATION","GET_POSTIONS","deletePosition","DELETE_POSITION","publishPosition","PUBLISH_POSITION","displayCols","colsArray"],"mappings":"ieA8BaA,EAAb,kDAIE,WAAYC,GAA6B,IAAD,8BACtC,cAAMA,IAORC,eAAiB,SAACC,EAAsBC,GACtC,IAAIC,EAGD,YAAO,EAAKJ,MAAMK,aACjBC,EAAQF,EAAoBG,WAC9B,SAACC,GAAD,OAAUA,EAAKC,KAAOP,KAEpBI,GAAS,EACXF,EAAoBE,GAAOI,MAAQC,OAAOR,GAE1CC,EAAoBQ,KAAK,CAAEH,GAAIP,EAAcQ,MAAOC,OAAOR,KAE7D,EAAKH,MAAMC,eAAeG,IArBY,EAwBxCS,kBAAoB,SAACX,GACnB,OAAO,EAAKF,MAAMK,YAAYS,MAAK,SAACN,GAAD,OAAUA,EAAKC,KAAOP,MAzBnB,EA4BxCa,eAAiB,SAACZ,GAChB,EAAKa,SAAS,CAAEC,YAAad,KA1B7B,EAAKe,MAAQ,CACXD,YAAa,IAJuB,EAJ1C,0CAoCE,WAAU,IAAD,OACP,OACE,0BAASE,UAAS,UAAlB,UAEE,sBAAKA,UAAU,gCAAf,UACE,cAAC,KAAD,CAAUA,UAAU,0BACpB,uBACEC,KAAK,OACLC,YAAY,SACZF,UAAU,qGACVG,SAAU,SAACC,GAAD,OAAO,EAAKR,eAAeQ,EAAEC,OAAOrB,QAC9CA,MAAOsB,KAAKP,MAAMD,YAClBS,WAAUD,KAAKzB,MAAM2B,aAAaC,OAAS,KAE7C,qBAAKT,UAAU,6CAAf,SACE,wBACEA,UAAU,4EACVC,KAAK,SACLS,QAAS,kBAAM,EAAK7B,MAAM8B,mBAAkB,IAH9C,wBAUJ,qBACEX,UAAS,4DADX,SAGGY,YAAWN,KAAKzB,MAAM2B,aAAcF,KAAKP,MAAMD,aAAaW,OAC7D,EACEG,YAAWN,KAAKzB,MAAM2B,aAAcF,KAAKP,MAAMD,aAAae,KAC1D,SAACC,EAAS3B,GAAV,OACE,kCACE,sBACEa,UAAS,iEADX,UAGE,qBAAKA,UAAU,kBAAf,SACE,mBAAGA,UAAU,mCAAb,SACGc,EAAQC,mBAIb,uBACEd,KAAK,SACLe,IAAK,EACLC,IAAK,IACLjC,MACE,EAAKU,kBAAkBoB,EAAQI,aAC3B,EAAKxB,kBAAkBoB,EAAQI,aAAc3B,MAC7C,EAAKV,MAAMsC,aAEjBhB,SAAU,SAACC,GAAD,OACR,EAAKtB,eAAegC,EAAQI,YAAad,EAAEC,OAAOrB,QAEpDgB,UAAU,kFAtBFb,EAAQ2B,EAAQI,gBA6BlC,qBAAKlB,UAAU,kBAAf,SACE,mBAAGA,UAAU,mCAAb,8CAlGd,GAAoCoB,aA6GrBC,MAAMC,KAAK1C,GCpFpB2C,E,kDAIJ,WAAY1C,GAAmC,IAAD,8BAC5C,cAAMA,IASR8B,kBAAoB,SAAC3B,GACnB,EAAKa,SAAS,CAAE2B,eAAgBxC,KAXY,EAc9CyC,aAAe,SACbzC,GAKA,EAAKa,SAAS,CAAE6B,UAAW1C,KApBiB,EAuB9C2C,mBAAqB,SAAC3C,GAChB,EAAKH,MAAMK,YAAYuB,OAAS,GAEhCmB,OAAOC,QACL,6FAGF,EAAKhD,MAAMC,eAAe,IAG9B,EAAKD,MAAMiD,cAAc9C,IAjCmB,EAoC9C+C,iBAAmB,WACc,WAA3B,EAAKlD,MAAMmD,cACb,EAAKnD,MAAMiD,cAAc,IACzB,EAAKjD,MAAMoD,gBAAgB,IAC3B,EAAKpD,MAAMC,eAAe,IAC1B,EAAKD,MAAMqD,gBAAe,KAzCgB,EA6C9CC,aA7C8C,uCA6C/B,WAAO/B,GAAP,mBAAAgC,EAAA,yDACbhC,EAAEiC,mBACE,EAAKxD,MAAM2B,aAAaC,QAAU,GAFzB,yCAGJ,EAAKgB,aAAa,CACvBX,QAAS,WACTwB,IAAK,8CALI,WASTC,YAAgB,EAAK1D,MAAM2D,cATlB,yCAUJ,EAAKf,aAAa,CACvBX,QAAS,UACTwB,IAAK,yBAZI,UAgBRV,OAAOC,QAAP,qCAhBQ,wDAqBXY,EAAgD,GAElD,EAAK5D,MAAM2B,aAAakC,SAAQ,SAACC,GAC/B,GAAI,EAAK9D,MAAMK,YAAYuB,OAAS,EAAG,CACrC,IAAMmC,EAAkB,EAAK/D,MAAMK,YAAYS,MAC7C,SAACN,GAAD,OAAUA,EAAKC,KAAOqD,EAAazB,eAEjC0B,EACFH,EAAkBhD,KAAK,CACrBoD,SAAUD,EAAgBtD,GAC1BC,MAAOqD,EAAgBrD,MACvBuD,QAAS,EAAKjE,MAAM2D,eAGtBC,EAAkBhD,KAAK,CACrBoD,SAAUF,EAAazB,YACvB3B,MAAO,EAAKV,MAAMkE,WAClBD,QAAS,EAAKjE,MAAM2D,oBAIxBC,EAAkBhD,KAAK,CACrBoD,SAAUF,EAAazB,YACvB3B,MAAO,EAAKV,MAAMkE,WAClBD,QAAS,EAAKjE,MAAM2D,kBAK1BQ,EAAc,CACZC,QAAS,EAAKpE,MAAMqE,SAASC,gBAC7BC,OAAQ,EAAKvE,MAAMwE,KAAKC,KAAKC,QAC7BC,aAAcC,IAAOA,MAASC,UAAUC,OAAO,cAAcC,WAC7DC,2BAA4BpB,GAG9BqB,QAAQC,IAAI,wCACZD,QAAQC,IAAI,CAAEf,gBACdc,QAAQC,IAAI,wCAEZ,EAAKlF,MAAMmF,mBAAkB,GA7DhB,oBA+DOC,IAAMC,KAAN,UACbC,IAAIC,SADS,gBAEhBpB,GAjES,SA+DLqB,EA/DK,UAoETP,QAAQC,IAAI,wCACZD,QAAQC,IAAI,CAAEM,QACdP,QAAQC,IAAI,wCACZ,EAAKlF,MAAMyF,uBAAuBD,EAAIE,MACtC,EAAK1F,MAAM2F,eAAe,CACxBC,MAAM,+BACNC,MAAOC,IAAgBC,WAG3B,EAAK7C,mBA7EM,mDA+EX+B,QAAQe,MAAR,MACA,EAAKhG,MAAM2F,eAAe,CACxBC,MAAOK,YAAY,EAAD,IAClBJ,MAAOC,IAAgBI,SAlFd,QAqFb,EAAKlG,MAAMmF,mBAAkB,GArFhB,2DA7C+B,sDAG5C,EAAKjE,MAAQ,CACXiF,eAAgB,GAChBtD,UAAW,KACXF,gBAAgB,GAN0B,E,0CAqI9C,WAAU,IAAD,OACP,OACE,sBACEyD,SAAU,SAAC7E,GAAD,OAAyC,EAAK+B,aAAa/B,IACrE8E,OAAO,OAFT,SAIE,sBAAKlF,UAAU,wDAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,4CACA,uBACEC,KAAK,OACLD,UAAS,qEACTE,YAAY,qBACZlB,MAAOmG,YACL7E,KAAKzB,MAAMqE,SAASkC,mBAEtB7E,UAAU,OAGd,sBAAKP,UAAU,gBAAf,UACE,uDACA,wBACEA,UAAU,gGACVhB,MAAOsB,KAAKzB,MAAMkE,WAClB5C,SAAU,SAACC,GAAD,OAAO,EAAKuB,mBAAmBnC,OAAOY,EAAEC,OAAOrB,SAH3D,SAKGqG,IAAaxE,KAAI,SAACxB,EAAMF,GAAP,OAChB,wBACEH,MAAOK,GAAc,KADvB,SAIGA,GAFIF,GAASE,IAAe,YAOrC,sBAAKW,UAAU,gBAAf,UACE,qEACA,sBACEA,UAAS,qEACPM,KAAKP,MAAMyB,eAAiB,SAAW,OADhC,YAGPlB,KAAKP,MAAM2B,WACsB,aAAjCpB,KAAKP,MAAM2B,UAAUZ,QACjB,iBACA,GANG,qBAQNR,KAAKzB,MAAMyG,eAER,qBADA,kBAGNb,MAAM,kBACN/D,QAAS,YACN,EAAKX,MAAMyB,gBAAkB,EAAKb,mBAAkB,GACrD,EAAKZ,MAAM2B,WACwB,aAAjC,EAAK3B,MAAM2B,UAAUZ,SACrB,EAAKW,aAAa,OAlBxB,UAsBGnB,KAAKzB,MAAMK,YAAYuB,OAAS,IAChCH,KAAKP,MAAMyB,eACV,mBAAGxB,UAAU,0BAAb,sDAICM,KAAKP,MAAMyB,gBACV,mBAAGxB,UAAU,0BAAb,oCAQHM,KAAKP,MAAMyB,gBACV,cAAC,EAAD,CACEhB,aAAcF,KAAKzB,MAAM2B,aACzBG,kBAAmBL,KAAKK,kBACxB2E,eAAgBhF,KAAKzB,MAAMyG,eAC3BnE,aAAcb,KAAKzB,MAAMkE,WACzB7D,YAAaoB,KAAKzB,MAAMK,YACxBJ,eAAgBwB,KAAKzB,MAAMC,oBAKhCwB,KAAKP,MAAM2B,WACuB,aAAjCpB,KAAKP,MAAM2B,UAAUZ,SACnB,sBAAMd,UAAU,eAAhB,SAAgCM,KAAKP,MAAM2B,UAAUY,SAG3D,sBAAKtC,UAAU,gBAAf,UACE,4CACA,0BACEE,YAAW,wBACXqF,KAAM,GACNC,KAAM,EACNxF,UAAS,mBACPM,KAAKP,MAAM2B,WACsB,YAAjCpB,KAAKP,MAAM2B,UAAUZ,QACjB,iBACA,kBAJG,gDAMT2E,MAAO,CAAEC,OAAQ,QACjB1G,MAAOsB,KAAKzB,MAAM2D,aAClBrC,SAAU,SAACC,GACT,EAAKvB,MAAMoD,gBAAgB7B,EAAEC,OAAOrB,OACpC,EAAKyC,aAAa,OAEpBlB,SAAUD,KAAKzB,MAAMyG,iBAEtBhF,KAAKP,MAAM2B,WACuB,YAAjCpB,KAAKP,MAAM2B,UAAUZ,SACnB,mBAAGd,UAAU,eAAb,SAA6BM,KAAKP,MAAM2B,UAAUY,SAIxD,sBAAKtC,UAAU,4BAAf,UACE,wBACEU,QAAS,WACP,EAAKqB,oBAEP/B,UAAS,0EACPM,KAAKzB,MAAMyG,gBAAkB,sBAE/BrF,KAAK,SACLM,SAAUD,KAAKzB,MAAMyG,eARvB,kBAYA,qBAAKtF,UAAU,0BAAf,SACE,wBACEA,UAAS,yEACPM,KAAKzB,MAAMyG,gBAAkB,eAE/BrF,KAAK,SACLM,SAAUD,KAAKzB,MAAMyG,eALvB,SAOGhF,KAAKzB,MAAMyG,eAAiB,aAAe,uB,GApRzBlE,aAwSpBC,MAAMC,KACnBqE,aAXsB,SAAC,GAKvB,MAAO,CACLtC,KAFC,EAHHA,QAUyB,CACvBiB,uBC/QkC,SAACC,GACrC,MAAO,CACLtE,KAAM2F,IAAYC,yBAClBC,QAASvB,ID6QTC,qBAFFmB,CAGGpE,I,mCEhRQwE,EAAb,kDAIE,WAAYlH,GAA2B,IAAD,8BACpC,cAAMA,IASRe,eAAiB,SAACZ,GAChB,EAAKa,SAAS,CAAEC,YAAad,KAXO,EActCgH,qBAAuB,SACrBC,EACAC,GAEA,YAAIC,IAAcD,GAAiB,KAATA,EAAoBD,EACvCA,EAAQG,QAAO,SAACC,GACrB,IAAIC,EAGJ,IAAK,IAAIC,KAAQF,EAkBf,GAjBAC,GAAO,EAEI,kBAATC,GACS,YAATA,GACS,mBAATA,GACS,gBAATA,GACS,UAATA,GACS,sBAATA,GACS,qBAATA,GAEIF,EAAQE,KACVD,EACED,EAAQE,GAAO3C,WACZ4C,cACAC,QAAQP,EAAKM,gBAAkB,GAGpCF,EAAM,MAEZ,OAAOA,MA3C2B,EA+CtCxH,eAAiB,SAACC,EAAsBC,GACtC,GAAIQ,OAAOR,GAAS,GAAKQ,OAAOR,GAAS,IACvC,OAAO,EAAKH,MAAM2F,eAAe,CAC/BC,MAAM,oEACNC,MAAOC,IAAgBI,SAI3B,IAAI9F,EAGD,YAAO,EAAKJ,MAAMK,aACjBC,EAAQF,EAAoBG,WAC9B,SAACC,GAAD,OAAUA,EAAKC,KAAOP,KAGpBI,GAAS,EACXF,EAAoBE,GAAOI,MAAQC,OAAOR,GAE1CC,EAAoBQ,KAAK,CAAEH,GAAIP,EAAcQ,MAAOC,OAAOR,KAG7D,EAAKH,MAAMC,eAAeG,IArEU,EAwEtCS,kBAAoB,SAACX,GACnB,OAAO,EAAKF,MAAMK,YAAYS,MAAK,SAACN,GAAD,OAAUA,EAAKC,KAAOP,MAzErB,EA4EtC2H,sBA5EsC,uCA4Ed,WACtBC,EACAzD,EACAc,GAHsB,iBAAA5B,EAAA,yDAKhBwE,EACS,SAAb1D,EACIyD,EAAShH,MAAK,SAACN,GAAD,OAAUA,EAAK4D,UAAYC,EAASC,wBAClDgD,EACNrC,QAAQC,IAAI,wCACZD,QAAQC,IAAI,CAAE4C,WAAUC,mBACxB9C,QAAQC,IAAI,yCACR6C,EAZkB,wBAapB9C,QAAQC,IAAI,wCACZD,QAAQC,IAAI,CAAE6C,mBACd9C,QAAQC,IAAI,wCACZC,GAAkB,GAhBE,mBAkBAC,IAAM4C,IAAN,UAQb1C,IAAIC,SARS,8BAQqBwC,EAAeE,iBA1BpC,SAkBZzC,EAlBY,UA6BhBP,QAAQC,IAAI,wCACZD,QAAQC,IAAI,CAAE2C,sBAAuBrC,IACrCP,QAAQC,IAAI,wCACZ,EAAKgD,oBAAoB1C,EAAIE,OAhCb,kDAmClBT,QAAQe,MAAM,CAAEmC,4BAA4B,EAAD,KAC3C,EAAKnI,MAAM2F,eAAe,CACxBC,MAAOK,YAAY,EAAD,IAClBJ,MAAOC,IAAgBI,SAtCP,QAyCpBf,GAAkB,GAzCE,wBA0CfA,GAAkB,GA1CH,0DA5Ec,4DAyHtC+C,oBAAsB,SACpB/H,GAUA,EAAKa,SAAS,CAAEoH,iBAAkBjI,KApIE,EAuItCkI,WAAa,SAAClI,GACZ,EAAKa,SAAS,CAAEsH,QAASnI,KAxIW,EA2ItCoI,kBAAoB,WACkB,OAAhC,EAAKrH,MAAMkH,kBACb,EAAKP,sBACH,EAAK7H,MAAMwI,iBACX,EAAKxI,MAAMqE,SACX,EAAKgE,aAhJ2B,EAoJtCI,cAAgB,SACdC,EACAZ,EACAzD,EACAsE,GAUA,IAAIC,EAAqC,GAyCzC,OAvCAF,EAAY7E,SAAQ,SAAC5B,GACnB,IAAM8F,EACS,SAAb1D,EACIyD,EAAShH,MAAK,SAACN,GAAD,OAAUA,EAAK4D,UAAYC,EAASC,wBAClDgD,EACN,GAAIS,EAAgB,CAClB,IAAMc,EAAkBd,EAAe/C,2BAA2BlE,MAChE,SAACN,GAAD,OAAUA,EAAKwD,WAAa/B,EAAQI,eAEhCyG,EACJH,GACAA,EAAqB7H,MACnB,SAACN,GAAD,OAAUA,EAAKwD,WAAa/B,EAAQI,eAEpCwG,GACFD,EAAOhI,KAAK,CACVmI,YAAa9G,EAAQ8G,YACrBC,cAAe/G,EAAQ+G,cACvBC,QAAShH,EAAQgH,QACjB/G,eAAgBD,EAAQC,eACxBgH,YAAajH,EAAQiH,YACrBC,gBAAiBlH,EAAQkH,gBACzBC,uBAAwBnH,EAAQmH,uBAChCC,aAAcpH,EAAQoH,aACtBC,UAAWrH,EAAQqH,UACnBC,YAAatH,EAAQsH,YACrBlH,YAAaJ,EAAQI,YACrB3B,MAAOmI,EAAgBnI,MACvB8I,kBAAmBV,EACfA,EAA2BU,kBAC3B,EACJC,iBAAkBX,EACdA,EAA2BW,iBAC3B,QAMLb,GAxMP,EAAK1H,MAAQ,CACXD,YAAa,GACbmH,iBAAkB,KAClBE,SAAS,GANyB,EAJxC,0CAkNE,WAAU,IAAD,OACP,MAA4B,SAAxB7G,KAAKzB,MAAMqE,SAEX,sBAAKlD,UAAU,iJAAf,UACE,cAAC,IAAD,CAAWA,UAAU,cADvB,kCAQF,gCACGM,KAAKzB,MAAM2B,aAAaC,QAAU,GACjC,sBAAKT,UAAU,2HAAf,UACE,cAAC,IAAD,CAAyBA,UAAU,6DACnC,4DAIHM,KAAKzB,MAAM2B,aAAaC,OAAS,GAChC,yBAAST,UAAU,mEAAnB,SACE,qBAAKA,UAAU,SAAf,SACE,uBACEG,SAAU,SAACC,GAAD,OACR,EAAKR,eAAeQ,EAAEC,OAAOrB,QAE/BiB,KAAK,OACLD,UAAU,iFACVE,YAAW,0CACXlB,MAAOsB,KAAKP,MAAMD,YAClBS,WACED,KAAKP,MAAMkH,kBACX3G,KAAKgH,cACHhH,KAAKzB,MAAM2B,aACXF,KAAKzB,MAAMwI,iBACX/G,KAAKzB,MAAMqE,SACX5C,KAAKP,MAAMkH,kBACXxG,OAAS,SASrB,wBAAOT,UAAU,SAAjB,UACE,uBAAOA,UAAU,sEAAjB,SACE,+BACE,oBAAIA,UAAU,YAAd,uBACA,oBAAIA,UAAU,YAAd,4BACA,oBAAIA,UAAU,YAAd,+BACA,oBAAIA,UAAU,YAAd,6BAGJ,gCACIM,KAAKP,MAAMoH,QAoEX,cAACoB,EAAA,EAAD,CAAchD,KAAM,IAnEpBjF,KAAK0F,qBACH1F,KAAKgH,cACHhH,KAAKzB,MAAM2B,aACXF,KAAKzB,MAAMwI,iBACX/G,KAAKzB,MAAMqE,SACX5C,KAAKP,MAAMkH,kBAEb3G,KAAKP,MAAMD,aACXW,OAAS,EACTH,KAAK0F,qBACH1F,KAAKgH,cACHhH,KAAKzB,MAAM2B,aACXF,KAAKzB,MAAMwI,iBACX/G,KAAKzB,MAAMqE,SACX5C,KAAKP,MAAMkH,kBAEb3G,KAAKP,MAAMD,aACXe,KAAI,SAACxB,EAAgCmJ,GAAjC,OACJ,qBAEExI,UAAS,UACPwI,EAAI,IAAM,EAAI,cAAgB,WADvB,iHAFX,UAME,oBAAIxI,UAAU,YAAd,SAA2BX,EAAK0B,iBAChC,oBAAIf,UAAU,YAAd,SAA2BX,EAAKgJ,oBAChC,oBAAIrI,UAAU,YAAd,SAA2BX,EAAKiJ,mBAChC,oBAAItI,UAAU,YAAd,SACI,EAAKnB,MAAM4J,WAKX,uBACExI,KAAK,SACLe,IAAK,EACLC,IAAK,IACLjC,MACE,EAAKU,kBAAkBL,EAAK6B,aACxB,EAAKxB,kBAAkBL,EAAK6B,aAAc3B,MAC1C,EAAKV,MAAM6J,eACX,EAAK7J,MAAMsC,aACX9B,EAAKE,MAEXY,SAAU,SAACC,GAAD,OACR,EAAKtB,eACHO,EAAK6B,YACLd,EAAEC,OAAOrB,QAGbgB,UAAU,qFArBZ,uBAAMA,UAAU,qCAAhB,UACGX,EAAKE,MADR,WAVCiJ,EAAInJ,EAAK6B,gBAsClB,6BACE,oBAAIyH,QAAS,EAAG3I,UAAU,YAA1B,SACE,cAAC4I,EAAA,EAAD,CACElE,MAAOmE,IAAeC,KACtB9J,MAAO,+CAxU7B,GAAkCoC,aAuVnBC,MAAMC,KAAKqE,YAAQ,KAAM,CAAEnB,qBAAhBmB,CAAkCI,ICjZ/CV,EAAa,WAGxB,IAHyE,IAAhD0D,EAA+C,wDACpEtB,EAA4BsB,EAAS,CAAC,MAAQ,CAAC,GACjDC,EAAY,EACPA,GAAK,KACVvB,EAAOhI,KAAKuJ,GACZA,IAEF,OAAOvB,GA4BHtI,E,kDACJ,WAAYN,GAA+B,IAAD,8BACxC,cAAMA,IAgBRqI,WAAa,SAAC+B,GACZ,EAAKpJ,SAAS,CAAEsH,QAAS8B,KAlBe,EAqB1CjF,kBAAoB,SAACiF,GACnB,EAAKpJ,SAAS,CAAEyF,eAAgB2D,KAtBQ,EAyB1C/G,eAAiB,SAAC+G,GAChB,EAAKpJ,SAAS,CAAEmC,YAAaiH,KA1BW,EA6B1CC,gBAAkB,SAAClK,GACjB,EAAKa,SAAS,CAAEd,aAAcC,KA9BU,EAiC1CmK,cAAgB,SAACnK,GACf,EAAKa,SAAS,CACZuJ,WAAYpK,KAnC0B,EAuC1CF,eAAiB,SAACE,GAChB,EAAKa,SAAS,CACZX,YAAaF,KAzCyB,EA6C1C8C,cAAgB,SAAC9C,GACf,EAAKa,SAAS,CAAEkD,WAAY/D,KA9CY,EAiD1CiD,gBAAkB,SAACjD,GACjB,EAAKa,SAAS,CAAE2C,aAAcxD,KAlDU,EAqD1CqK,cAAgB,WACqB,OAA/B,EAAKxK,MAAMyK,gBACb,EAAKzK,MAAM0K,cAAa,SAACN,EAAiB3G,GACxC,EAAK4E,WAAW+B,GAChBnF,QAAQC,IAAI,CAAEkF,OAAQA,EAAQ3G,IAAKA,KAC9B2G,GAAU3G,EAAI7B,QACjB,EAAK5B,MAAM2F,eAAe,CACxBC,MAAOnC,EACPoC,MAAOC,IAAgBI,YAIpB,EAAKhF,MAAMoH,SACpB,EAAKD,YAAW,IAlEsB,EAsE1CE,kBAAoB,WAEU,OAAxB,EAAKvI,MAAMqE,UAA6C,SAAxB,EAAKrE,MAAMqE,SAC7C,EAAKrE,MAAM2K,sBACT,SAACP,EAAiB3G,EAAaiC,GAC7B,EAAK2C,WAAW+B,GACXA,IACC3G,EAAI7B,QACN,EAAK5B,MAAM2F,eAAe,CACxBC,MAAOnC,EACPoC,MAAOC,IAAgBI,SAIvBR,GAAiB,SAATA,GACV,EAAK8E,oBAMb,EAAKA,gBAG6B,OAAhC,EAAKxK,MAAMwI,kBACb,EAAKxI,MAAM4K,qBACT,SAACR,EAAiB3G,EAAaiC,GAC7B,EAAK2C,WAAW+B,IACXA,GAAU3G,EAAI7B,OAAS,GAC1B,EAAK5B,MAAM2F,eAAe,CACxBC,MAAOnC,EACPoC,MAAOC,IAAgBI,UAItBkE,GAAU1E,IACbT,QAAQC,IAAI,wCACZD,QAAQC,IAAI,CAAEQ,SACdT,QAAQC,IAAI,6CA5GoB,EAmH1C2F,mBAAqB,SACnBnC,GAKA,IAAIE,EAGA,CAAEkC,UAAW,GAAIC,aAAc,IAC/BC,EAAmCtC,EAAYnB,QACjD,SAAC/G,GAAD,OAAUA,EAAK+I,cAAgB/I,EAAK8I,aAKtC,OAFAV,EAAOmC,aAAeC,EAEfpC,GAnIiC,EAsI1CqC,gBAAkB,SAChBzC,EACApE,GAEA,GAAIoE,EAAiB5G,OAAS,EAAG,CAC/B,IAAMsJ,EAAqB1C,EAAiB1H,MAC1C,SAACN,GAAD,OAAUA,EAAK4D,UAAYA,EAAQE,mBAErC,GACE4G,GAC0C,cAA1CA,EAAmBC,mBAEnB,OAAO,EAGX,OAAO,GArJiC,EAwJ1CC,gBAAkB,SAChB5C,EACApE,GAEA,GAAIoE,EAAiB5G,OAAS,GACD4G,EAAiB1H,MAC1C,SAACN,GAAD,OAAUA,EAAK4D,UAAYA,EAAQE,mBAGnC,OAAO,EAGX,OAAO,GApKiC,EAuK1CxB,mBAAqB,SAAC3C,GAChB,EAAKe,MAAMb,YAAYuB,OAAS,GAEhCmB,OAAOC,QACL,6FAGF,EAAK/C,eAAe,IAGxB,EAAKe,SAAS,CAAE6I,gBAAgB,IAChC,EAAK5G,cAAc9C,IAlLqB,EAqL1CkL,aArL0C,sBAqL3B,oCAAA9H,EAAA,yDACe,OAAxB,EAAKvD,MAAMqE,SADF,yCAEJ,EAAKrE,MAAM2F,eAAe,CAC/BC,MAAM,sBACNC,MAAOC,IAAgBwF,QAJd,UAQe,SAAxB,EAAKtL,MAAMqE,SARF,yCASJ,EAAKrE,MAAM2F,eAAe,CAC/BC,MAAM,+BACNC,MAAOC,IAAgBwF,QAXd,UAeuB,OAAhC,EAAKtL,MAAMwI,iBAfF,yCAgBJ,EAAKxI,MAAM2F,eAAe,CAC/BC,MAAM,mCACNC,MAAOC,IAAgBwF,QAlBd,UAsBPC,EAAc,EAAKvL,MAAMqE,SAEzB6G,EAAqB,EAAKlL,MAAMwI,iBAAiB1H,MACrD,SAACN,GAAD,OAAUA,EAAK4D,UAAYmH,EAAYjH,mBAzB5B,0CA6BJ,EAAKtE,MAAM2F,eAAe,CAC/BC,MAAM,+DACNC,MAAOC,IAAgBwF,QA/Bd,aAmCT,EAAKpK,MAAMb,YAAYuB,QAAU,IAAM,EAAKV,MAAM2I,eAnCzC,0CAoCJ,EAAK7J,MAAM2F,eAAe,CAC/BC,MAAM,4BACNC,MAAOC,IAAgBwF,QAtCd,WA0CRvI,OAAOC,QAAP,qCA1CQ,0DA+CXwI,EAA+C,GAEjDN,EAAmBlG,2BAA2BnB,SAAQ,SAACC,GACrD,GAAI,EAAK5C,MAAMb,YAAYuB,OAAS,EAAG,CACrC,IAAMmC,EAAkB,EAAK7C,MAAMb,YAAYS,MAC7C,SAACN,GAAD,OAAUA,EAAKC,KAAOqD,EAAaE,YAEjCD,EACFyH,EAAqB5K,KAAK,CACxB6K,IAAK3H,EAAa2H,IAClBzH,SAAUD,EAAgBtD,GAC1BC,MAAOqD,EAAgBrD,MACvBuD,QAASH,EAAaG,UAGpB,EAAK/C,MAAM2I,eACb2B,EAAqB5K,KAAK,CACxB6K,IAAK3H,EAAa2H,IAClBzH,SAAUF,EAAaE,SACvBtD,MAAO,EAAKQ,MAAMgD,WAClBD,QAASH,EAAaG,UAGxBuH,EAAqB5K,KAAK,CACxB6K,IAAK3H,EAAa2H,IAClBzH,SAAUF,EAAaE,SACvBtD,MAAOoD,EAAapD,MACpBuD,QAASH,EAAaG,eAKxB,EAAK/C,MAAM2I,eACb2B,EAAqB5K,KAAK,CACxB6K,IAAK3H,EAAa2H,IAClBzH,SAAUF,EAAaE,SACvBtD,MAAO,EAAKQ,MAAMgD,WAClBD,QAASH,EAAaG,UAGxBuH,EAAqB5K,KAAK,CACxB6K,IAAK3H,EAAa2H,IAClBzH,SAAUF,EAAaE,SACvBtD,MAAOoD,EAAapD,MACpBuD,QAASH,EAAaG,aAM9BE,EAAc,CACZC,QAAS8G,EAAmB9G,QAC5BG,OAAQ,EAAKvE,MAAMwE,KAAKC,KAAKC,QAC7BC,aAAcuG,EAAmBvG,aACjCK,2BAA4BwG,EAC5BvD,eAAgBiD,EAAmBjD,eACnCkD,mBAAoBD,EAAmBC,mBACvCf,OAAQc,EAAmBd,OAC3BsB,UAAWR,EAAmBQ,UAC9BC,UAAWT,EAAmBS,WAGhC1G,QAAQC,IAAI,wCACZD,QAAQC,IAAI,CAAEf,gBACdc,QAAQC,IAAI,wCAEZ,EAAKC,mBAAkB,GAjHV,oBAmHOC,IAAMwG,IAAN,UACbtG,IAAIC,SADS,wBACe2F,EAAmBjD,gBAClD9D,GArHS,SAmHLqB,EAnHK,UAwHTP,QAAQC,IAAI,wCACZD,QAAQC,IAAI,CAAEM,QACdP,QAAQC,IAAI,wCAEZ,EAAKlF,MAAM6L,uBAAuBrG,EAAIE,MACtC,EAAK1F,MAAM2F,eAAe,CACxBC,MAAM,kCACNC,MAAOC,IAAgBC,WAG3B,EAAK7C,mBAlIM,mDAoIX+B,QAAQe,MAAR,MACA,EAAKhG,MAAM2F,eAAe,CACxBC,MAAOK,YAAY,EAAD,IAClBJ,MAAOC,IAAgBI,SAvId,QA0Ib,EAAKf,mBAAkB,GA1IV,2DArL2B,EAkU1C2G,eAlU0C,uCAkUzB,WAAOC,EAAmBC,GAA1B,eAAAzI,EAAA,6DACfyI,GAAS,EAAM,IADA,kBAGK5G,IAAM4C,IAAN,UACb1C,IAAI2G,QADS,gCACsBF,IAJ3B,QAGPvG,EAHO,UAOXP,QAAQC,IAAI,wCACZD,QAAQC,IAAI,CAAE4G,eAAgBtG,IAC9BP,QAAQC,IAAI,wCACZ8G,GAAS,EAAO,KAVL,gDAab/G,QAAQe,MAAM,CAAEkG,oBAAoB,EAAD,KACnCF,GAAS,EAAO/F,YAAY,EAAD,KAC3B,EAAKjG,MAAM2F,eAAe,CACxBC,MAAOK,YAAY,EAAD,IAClBJ,MAAOC,IAAgBI,SAjBZ,QAoBf,EAAKf,mBAAkB,GApBR,yDAlUyB,0DAyV1CgH,mBAzV0C,sBAyVrB,8BAAA5I,EAAA,yDACS,OAAxB,EAAKvD,MAAMqE,SADI,yCAEV,EAAKrE,MAAM2F,eAAe,CAC/BC,MAAM,sBACNC,MAAOC,IAAgBwF,QAJR,UAQS,SAAxB,EAAKtL,MAAMqE,SARI,yCASV,EAAKrE,MAAM2F,eAAe,CAC/BC,MAAM,+BACNC,MAAOC,IAAgBwF,QAXR,UAeiB,OAAhC,EAAKtL,MAAMwI,iBAfI,yCAgBV,EAAKxI,MAAM2F,eAAe,CAC/BC,MAAM,mCACNC,MAAOC,IAAgBwF,QAlBR,UAsBbC,EAAc,EAAKvL,MAAMqE,SAEzB6G,EAAqB,EAAKlL,MAAMwI,iBAAiB1H,MACrD,SAACN,GAAD,OAAUA,EAAK4D,UAAYmH,EAAYjH,mBAzBtB,0CA6BV,EAAKtE,MAAM2F,eAAe,CAC/BC,MAAM,+DACNC,MAAOC,IAAgBwF,QA/BR,WAmCdvI,OAAOC,QAAP,4CAnCc,0DAuCnBiC,QAAQC,IAAI,wCACZD,QAAQC,IAAI,CAAEgG,mBAAoBA,EAAmBjD,iBACrDhD,QAAQC,IAAI,wCAEZ,EAAKC,mBAAkB,GA3CJ,UA4Cb,EAAK2G,eACTP,EAAYjH,gBADR,uCAEJ,WAAO8F,EAAiB3G,GAAxB,eAAAF,EAAA,yDACO6G,GAAyB,IAAf3G,EAAI7B,OADrB,0CAGwBwD,IAAMwG,IAAN,UACbtG,IAAIC,SADS,oCAC2B2F,EAAmBjD,iBAJtE,QAGYzC,EAHZ,UAOQP,QAAQC,IAAI,wCACZD,QAAQC,IAAI,CAAEM,QACdP,QAAQC,IAAI,wCAEZ,EAAKlF,MAAM4K,qBAAoB,SAACR,EAAiB3G,IAC1C2G,GAAU3G,EAAI7B,OAAS,GAC1B,EAAK5B,MAAM2F,eAAe,CACxBC,MAAOnC,EACPoC,MAAOC,IAAgBI,YAK7B,EAAKlG,MAAM2F,eAAe,CACxBC,MAAM,oCACNC,MAAOC,IAAgBC,WAG3B,EAAK7C,mBAzBX,gDA2BM+B,QAAQe,MAAR,MACA,EAAKhG,MAAM2F,eAAe,CACxBC,MAAOK,YAAY,EAAD,IAClBJ,MAAOC,IAAgBI,SA9B/B,yDAFI,oCAAAzE,KAAA,gBA5Ca,QAkFnB,EAAK0D,mBAAkB,GAlFJ,4CAzVqB,EA8a1CjC,iBAAmB,WACc,WAA3B,EAAKhC,MAAMiC,cACb,EAAKF,cAAc,IACnB,EAAKG,gBAAgB,IACrB,EAAKnD,eAAe,IACpB,EAAKoD,gBAAe,GACpB,EAAKrC,SAAS,CAAE6I,gBAAgB,MAjblC,EAAK3I,MAAQ,CACXoH,SAAS,EACT7B,gBAAgB,EAChBtD,aAAa,EACbgD,eAAgB,GAChBoE,WAAY,GACZrK,aAAc,KACdgE,WAAY,GACZP,aAAc,GACdtD,YAAa,GACbwJ,gBAAgB,GAbsB,E,0CAwb1C,WAAU,IAAD,OACP,OAC0B,OAAxBpI,KAAKzB,MAAMqE,UACoB,OAA/B5C,KAAKzB,MAAMyK,iBACqB,OAAhChJ,KAAKzB,MAAMwI,kBACX/G,KAAKP,MAAMoH,QAGT,qBAAKnH,UAAU,kEAAf,wBAOF,gCACE,qBAAKA,UAAU,0DAAf,SACE,sBAAKA,UAAU,mCAAf,UACE,cAAC,IAAD,CAAsBA,UAAU,2BAChC,sBAAKA,UAAU,gBAAf,UACE,sBAAMA,UAAU,mCAAhB,+BAGA,sBAAKA,UAAU,0BAAf,UACE,sBAAMA,UAAU,iCAAhB,sBACA,sBAAMA,UAAU,oCAAhB,SACGM,KAAKzB,MAAMqE,UACc,SAAxB5C,KAAKzB,MAAMqE,UACX5C,KAAKzB,MAAMqE,SAASkC,+BAQhC,sBAAKpF,UAAU,oBAAf,UAEE,sBACEA,UAAS,wEACPM,KAAKzB,MAAMqE,UACa,SAAxB5C,KAAKzB,MAAMqE,UACX,mBAJJ,UAOE,qBAAKlD,UAAU,4BAAf,SAEGM,KAAKzB,MAAMqE,UACc,SAAxB5C,KAAKzB,MAAMqE,UACgB,WAA3B5C,KAAKP,MAAMiC,aACT,wBACEhC,UAAS,sFACPM,KAAKP,MAAMuF,eACP,qBACA,iBAHG,sCAKT/E,SAAUD,KAAKP,MAAMuF,eACrB5E,QAAS,kBACP,EAAKb,SAAS,CACZmC,aAAa,EACboH,WAAY,GACZrG,WAAY,GACZP,aAAc,MAZpB,SAgBE,cAAC,IAAD,CAAaxC,UAAU,gBAO/B,sBAAKA,UAAU,oBAAf,UAEGM,KAAKzB,MAAMqE,UACc,SAAxB5C,KAAKzB,MAAMqE,WACgB,IAA3B5C,KAAKP,MAAMiC,aACX1B,KAAKzB,MAAMyK,gBAAgBlD,QACzB,SAAC/G,GAAD,OAAUA,EAAK+I,cAAgB/I,EAAK8I,aACpC1H,OAAS,IACVH,KAAK2J,gBACJ3J,KAAKzB,MAAMwI,iBACX/G,KAAKzB,MAAMqE,WAEX,qBACElD,UAAU,8DACVU,QAAS,WACP,EAAKwB,eAAe,WAHxB,4BAWH5B,KAAKzB,MAAMqE,UACc,SAAxB5C,KAAKzB,MAAMqE,WACgB,IAA3B5C,KAAKP,MAAMiC,aACX1B,KAAKzB,MAAMyK,gBAAgBlD,QACzB,SAAC/G,GAAD,OAAUA,EAAK+I,cAAgB/I,EAAK8I,aACpC1H,OAAS,GACXH,KAAK2J,gBACH3J,KAAKzB,MAAMwI,iBACX/G,KAAKzB,MAAMqE,YAEZ5C,KAAKwJ,gBACJxJ,KAAKzB,MAAMwI,iBACX/G,KAAKzB,MAAMqE,WAEX,qBACElD,UAAU,kFACVU,QAAS,WACP,EAAKwB,eAAe,UACpB,EAAKJ,eAAe,IAJxB,+BAYHxB,KAAKzB,MAAMqE,UACc,SAAxB5C,KAAKzB,MAAMqE,WACgB,IAA3B5C,KAAKP,MAAMiC,aACX1B,KAAKzB,MAAMyK,gBAAgBlD,QACzB,SAAC/G,GAAD,OAAUA,EAAK+I,cAAgB/I,EAAK8I,aACpC1H,OAAS,GACXH,KAAK2J,gBACH3J,KAAKzB,MAAMwI,iBACX/G,KAAKzB,MAAMqE,YAEZ5C,KAAKwJ,gBACJxJ,KAAKzB,MAAMwI,iBACX/G,KAAKzB,MAAMqE,WAEX,qBACElD,UAAS,8DACPM,KAAKP,MAAMuF,eACP,cACA,kBAEN5E,QAAS,kBACN,EAAKX,MAAMuF,gBAAkB,EAAK0F,sBAPvC,gCAcqB,SAAxB1K,KAAKzB,MAAMqE,UACV5C,KAAKwJ,gBACHxJ,KAAKzB,MAAMwI,iBACX/G,KAAKzB,MAAMqE,WAEX,qBAAKlD,UAAU,oFAAf,6BAKHM,KAAKzB,MAAMqE,UACc,SAAxB5C,KAAKzB,MAAMqE,UACgB,WAA3B5C,KAAKP,MAAMiC,aACX1B,KAAKzB,MAAMyK,gBAAgBlD,QACzB,SAAC/G,GAAD,OAAUA,EAAK+I,cAAgB/I,EAAK8I,aACpC1H,OAAS,GACXH,KAAK2J,gBACH3J,KAAKzB,MAAMwI,iBACX/G,KAAKzB,MAAMqE,WAEX,sBAAKlD,UAAU,iFAAf,UACE,sBAAKA,UAAU,0BAAf,UACE,uBAAOA,UAAU,iCAAjB,gCAGA,wBACEA,UAAU,gGACVhB,MAAOsB,KAAKP,MAAMgD,WAClB5C,SAAU,SAACC,GAAD,OACR,EAAKuB,mBAAmBnC,OAAOY,EAAEC,OAAOrB,SAJ5C,SAOGqG,GAAW,GAAMxE,KAAI,SAACxB,EAAMF,GAAP,OACpB,wBACEH,MAAOK,GAAc,KAErBkB,SAAmB,OAATlB,EAHZ,SAKGA,GAAc,UAHVF,GAASE,IAAe,YAQrC,wBACEW,UAAS,yEACPM,KAAKP,MAAMuF,gBAAkB,eAE/BrF,KAAK,SACLS,QAAS,kBAAM,EAAKwJ,gBACpB3J,SAAUD,KAAKP,MAAMuF,eANvB,SAQGhF,KAAKP,MAAMuF,eAAiB,aAAe,SAE9C,wBACEtF,UAAS,wEACPM,KAAKP,MAAMuF,gBAAkB,eAE/BrF,KAAK,SACLS,QAAS,kBAAM,EAAKqB,oBACpBxB,SAAUD,KAAKP,MAAMuF,eANvB,6BAiBV,qBAAKtF,UAAU,qCAAf,SAC8B,WAA3BM,KAAKP,MAAMiC,aACV,cAAC,EAAD,CACExB,aAAcF,KAAKzB,MAAMyK,gBAAgBlD,QACvC,SAAC/G,GAAD,OAAUA,EAAK+I,cAAgB/I,EAAK8I,aAEtCd,iBAAkB/G,KAAKzB,MAAMwI,iBAC7BnE,SAAU5C,KAAKzB,MAAMqE,SACrBnE,aAAcuB,KAAKP,MAAMhB,aACzBuG,eAAgBhF,KAAKP,MAAMuF,eAC3BmD,WAAuC,WAA3BnI,KAAKP,MAAMiC,YACvBkH,gBAAiB5I,KAAK4I,gBACtBhK,YAAaoB,KAAKP,MAAMb,YACxBJ,eAAgBwB,KAAKxB,eACrB4J,eAAgBpI,KAAKP,MAAM2I,eAC3BvH,aAAcb,KAAKP,MAAMgD,kBAQhCzC,KAAKzB,MAAMqE,UACc,SAAxB5C,KAAKzB,MAAMqE,UACgB,WAA3B5C,KAAKP,MAAMiC,aACT,cAAC,EAAD,CACEkB,SAAU5C,KAAKzB,MAAMqE,SACrB1C,aACEF,KAAKoJ,mBAAmBpJ,KAAKzB,MAAMyK,iBAAiBM,aAEtDtE,eAAgBhF,KAAKP,MAAMuF,eAC3BvC,WAAYzC,KAAKP,MAAMgD,WACvBf,YAAa1B,KAAKP,MAAMiC,YACxBE,eAAgB5B,KAAK4B,eACrBJ,cAAexB,KAAKwB,cACpBU,aAAclC,KAAKP,MAAMyC,aACzBP,gBAAiB3B,KAAK2B,gBACtB+B,kBAAmB1D,KAAK0D,kBACxB9E,YAAaoB,KAAKP,MAAMb,YACxBJ,eAAgBwB,KAAKxB,wB,GA7rBfsC,aAwtBP6J,EAAmBtF,aAnBR,SAAC,GAUnB,IATJtC,EASG,EATHA,KACA6H,EAQG,EARHA,YACA7D,EAOG,EAPHA,iBAQA,MAAO,CACLhE,KAAMA,EACNiG,gBAHC,EANH6B,gBASmC7B,gBACjCjC,mBACAnE,SAAUgI,EAAYE,qBAI+B,CACvD7B,iBACAC,yBACAC,oBF/uBiC,SAACoB,GAElC,OADAA,GAAS,EAAM,IACf,uCAAO,WAAOQ,GAAP,iBAAAjJ,EAAA,sEAEHkJ,cAFG,SAGerH,IAAM4C,IAAN,UACb1C,IAAIC,SADS,iBAHf,OAGGC,EAHH,OAMCkH,EAA4C,GAC7B,MAAflH,EAAI4E,QAEW,OAAb5E,EAAIE,MAAiBF,EAAIE,KAAK9D,OAAS,IACzC8K,EAAelH,EAAIE,MAGvBT,QAAQC,IAAI,wCACZD,QAAQC,IAAI,CAAEyH,oBAAqBnH,EAAIE,OACvCT,QAAQC,IAAI,wCACZsH,EAAoC,CAClCpL,KAAM2F,IAAY6F,sBAClB3F,QAASyF,IAEXV,GAAS,EAAO,GAAIU,GApBjB,kDAsBHzH,QAAQe,MAAM,CAAEA,MAAOC,YAAY,EAAD,MAClC+F,GAAS,EAAO/F,YAAY,EAAD,KAvBxB,0DAAP,uDE8uBA4F,uBFnrBoC,SAACnG,GACrC,MAAO,CACLtE,KAAM2F,IAAY8F,yBAClB5F,QAASvB,IEirBXC,qBAL8BmB,CAM7BxG,I,iCChxBH,8OAAO,IAEMoD,EAAkB,SAACoJ,GAC9B,OAAe,OAARA,GAAsC,OAAtBA,EAAIC,MAAM,SAWtBC,EAAc,SACzBC,EACAC,GAEA,OAAOD,EAAM1F,QAAO,SAAC4F,GAAD,OAAUA,EAAKC,sBAAwBF,KAAQ,IAGxDG,EAAmB,SAC9BC,EACAC,GAEA,OAAOD,EAAWxM,MAAK,SAACN,GAAD,OAAUA,EAAK4I,yBAA2BmE,MAmBtDC,EAAkB,SAC7BC,EACApL,GAEA,OAAOoL,EAAU3M,MAAK,SAACkD,GAAD,OAAcA,EAAS3B,cAAgBA,MAoElDqL,EAAa,SAACvN,GACzB,IAAIwN,EAAMxN,EAAQyN,KAAKC,MAAM1N,GAE7B,OAAQ,KADRA,GAAgBwN,IACKG,OAAO,GAAKH,EAAI5I,WAAWgJ,OAAO,IAG5CC,EAAa,SACxB7N,GAEY,IADZ8N,EACW,uDADO,EAEdC,EAAS,IAAIC,MAAMF,EAAU,GAAGG,KAAK,KACzC,OAAQF,EAAS/N,GAAO2N,OAAOG,IAGpB3H,EAAwB,SAACnG,GACpC,OAAOA,EAAMkO,OAAO,GAAGC,cAAgBnO,EAAM2N,MAAM,K,skBCQxCS,EAAgB,SAACvC,GAE5B,OADAA,GAAS,EAAM,IACf,uCAAO,WAAOQ,GAAP,iBAAAjJ,EAAA,sEAEHkJ,cAFG,SAGerH,IAAM4C,IAAN,UACb1C,IAAIC,SADS,kBAHf,OAGGC,EAHH,OAMHP,QAAQC,IAAI,CAAEsJ,gBAAiBhJ,EAAIE,OAC/B+I,EAAmC,GACpB,MAAfjJ,EAAI4E,QAEW,OAAb5E,EAAIE,MAAiBF,EAAIE,KAAK9D,OAAS,IACzC6M,EAAajJ,EAAIE,MAGrB8G,EAA8B,CAC5BpL,KAAM2F,IAAYyH,gBAClBvH,QAASwH,IAEXzC,GAAS,EAAO,IAlBb,kDAoBH/G,QAAQe,MAAM,CAAEA,MAAOC,YAAY,EAAD,MAClC+F,GAAS,EAAO/F,YAAY,EAAD,KArBxB,0DAAP,uDAsFWyI,EAAsB,SACjCC,GAGA,OADA1J,QAAQC,IAAI,CAAEyJ,aACP,CACLvN,KAAM2F,IAAY6H,iBAClB3H,QAAS0H,IAKAhE,EAAuB,SAACqB,GAEnC,OADAA,GAAS,EAAM,IACf,uCAAO,WAAOQ,GAAP,iBAAAjJ,EAAA,sEAEHkJ,cAFG,SAGerH,IAAM4C,IAAN,UACb1C,IAAIC,SADS,qBAHf,OAGGC,EAHH,OAMHP,QAAQC,IAAI,CAAE2J,yBAA0BrJ,EAAIE,OACxCoJ,OAAiDxH,EAIjD9B,EAAIE,WAA+B4B,IAAvB9B,EAAIE,KAAKqJ,YACvBD,EAAetJ,EAAIE,MAErBT,QAAQC,IAAI,CAAE4J,aAActJ,EAAIE,OAEhC8G,EAAqC,CACnCpL,KAAM2F,IAAY8H,yBAClB5H,QAAS6H,GAA8B,SAEzC9C,GAAS,EAAO,GAAI8C,GAA8B,QApB/C,kDAsBH7J,QAAQe,MAAM,CAAEA,MAAOC,YAAY,EAAD,MAClC+F,GAAS,EAAO/F,YAAY,EAAD,KAvBxB,0DAAP,uDA6BW+I,EAAqB,SAAChD,GAEjC,OADAA,GAAS,EAAM,IACf,uCAAO,WAAOQ,GAAP,iBAAAjJ,EAAA,sEAEHkJ,cAFG,SAGerH,IAAM4C,IAAN,UACb1C,IAAIC,SADS,cAHf,OAGGC,EAHH,OAMHP,QAAQC,IAAI,CAAE+J,sBAAuBzJ,EAAIE,OACrCwJ,EAAuC,GACxB,MAAf1J,EAAI4E,QAEW,OAAb5E,EAAIE,MAAiBF,EAAIE,KAAK9D,OAAS,IACzCsN,EAAe1J,EAAIE,MAGvB8G,EAAmC,CACjCpL,KAAM2F,IAAYkI,sBAClBhI,QAASiI,IAEXlD,GAAS,EAAO,GAAIkD,GAlBjB,kDAoBHjK,QAAQe,MAAM,CAAEA,MAAOC,YAAY,EAAD,MAClC+F,GAAS,EAAO/F,YAAY,EAAD,KArBxB,0DAAP,uDA2BWkJ,EAAoB,SAC/BzJ,GAEA,MAAO,CACLtE,KAAM2F,IAAYqI,oBAClBnI,QAASvB,IAKA2J,EAAoB,SAC/B3J,GAEA,MAAO,CACLtE,KAAM2F,IAAYuI,oBAClBrI,QAASvB,IAKA6J,EAAoB,SAC/B7J,GAEA,MAAO,CACLtE,KAAM2F,IAAYyI,mBAClBvI,QAASvB,IAKA+J,EAAoB,SAAC/J,GAChC,MAAO,CACLtE,KAAM2F,IAAY2I,oBAClBzI,QAASvB,IAKAiK,EAAwB,SACnCjK,GAEA,MAAO,CACLtE,KAAM2F,IAAY6I,wBAClB3I,QAASvB,IAKAmK,EAAwB,SAAC7D,GAEpC,OADAA,GAAS,EAAM,IACf,uCAAO,WAAOQ,GAAP,iBAAAjJ,EAAA,sEAEHkJ,cAFG,SAGerH,IAAM4C,IAAN,UACb1C,IAAIwK,UADS,wBAHf,OAGGtK,EAHH,OAMHP,QAAQC,IAAI,CAAE+J,sBAAuBzJ,EAAIE,OACrCwJ,EAA2C,GAC5B,MAAf1J,EAAI4E,QAEW,OAAb5E,EAAIE,MAAiBF,EAAIE,KAAK9D,OAAS,IACzCsN,EAAe1J,EAAIE,MAGvBT,QAAQC,IAAI,wCACZD,QAAQC,IAAI,CAAE2K,sBAAuBrK,IACrCP,QAAQC,IAAI,wCACZsH,EAAsC,CACpCpL,KAAM2F,IAAYgJ,yBAClB9I,QAASiI,IAEXlD,GAAS,EAAO,GAAIkD,GArBjB,kDAuBHjK,QAAQe,MAAM,CAAEA,MAAOC,YAAY,EAAD,MAClC+F,GAAS,EAAO/F,YAAY,EAAD,KAxBxB,0DAAP,uDA8BW+J,EAAwB,SACnCtK,GAEA,MAAO,CACLtE,KAAM2F,IAAYkJ,wBAClBhJ,QAASvB,IAKAwK,EAA4B,SACvCxK,GAEA,MAAO,CACLtE,KAAM2F,IAAYoJ,4BAClBlJ,QAASvB,IAKA0K,EAAwB,SACnC1K,GAEA,MAAO,CACLtE,KAAM2F,IAAYsJ,wBAClBpJ,QAASvB,IAKA4K,EAA2B,SAACtE,GAEvC,OADAA,GAAS,EAAM,IACf,uCAAO,WAAOQ,GAAP,iBAAAjJ,EAAA,sEAEHkJ,cAFG,SAGerH,IAAM4C,IAAN,UACb1C,IAAIwK,UADS,2BAHf,OAGGtK,EAHH,OAMHP,QAAQC,IAAI,CAAEqL,4BAA6B/K,EAAIE,OAC3CoJ,OAAqDxH,EAIrD9B,EAAIE,OACNoJ,EAAetJ,EAAIE,MAErBT,QAAQC,IAAI,CAAE4J,aAActJ,EAAIE,OAEhC8G,EAAyC,CACvCpL,KAAM2F,IAAYwJ,4BAClBtJ,QAAS6H,GAA8B,SAEzC9C,GAAS,EAAO,GAAI8C,GAA8B,QApB/C,kDAsBH7J,QAAQe,MAAM,CAAEA,MAAOC,YAAY,EAAD,MAClC+F,GAAS,EAAO/F,YAAY,EAAD,KAvBxB,0DAAP,wD,sTCjUWuK,EAAoB,SAACxE,GAChC,8CAAO,WAAOQ,GAAP,eAAAjJ,EAAA,6DACLyI,GAAS,EAAM,IADV,SAGHS,cAHG,SAIerH,IAAM4C,IAAN,UACb1C,IAAImL,KADS,cAJf,OAIGjL,EAJH,OAOHgH,EAAkC,CAChCpL,KAAM2F,IAAY2J,oBAClBzJ,QAASzB,EAAIE,OAEfsG,GAAS,EAAO,IAXb,kDAaH/G,QAAQC,IAAI,CAAEyL,WAAW,EAAD,KACxB3E,GAAS,EAAO/F,YAAY,EAAD,KAdxB,0DAAP,uDAmBW2K,EAAuB,SAAClL,GAInC,8CAAO,WAAO8G,GAAP,SAAAjJ,EAAA,sDACLiJ,EAAsC,CACpCpL,KAAM2F,IAAY8J,wBAClB5J,QAASvB,IAHN,2CAAP,uDAUWoL,EAAgB,SAAC9E,GAC5B,8CAAO,WAAOQ,GAAP,iBAAAjJ,EAAA,6DACLyI,GAAS,EAAM,IADV,SAGHS,cAHG,SAIerH,IAAM4C,IAAN,UAOb1C,IAAImL,KAPS,mBAJf,OAIGjL,EAJH,OAYCuL,EAAkCvL,EAAIE,KAAK1D,KAAI,SAAC0D,GAAD,MAAW,CAC5DjF,GAAIiF,EAAKjF,GACTuQ,KAAMtL,EAAKE,MACXqL,IAAKvL,EAAKuL,IACVC,UAAWxL,EAAKwL,cAElB1E,EAA8B,CAC5BpL,KAAM2F,IAAYoK,gBAClBlK,QAAS8J,IAEX/E,GAAS,EAAO,GAAI+E,GAtBjB,kDAwBH9L,QAAQC,IAAI,CAAEyL,WAAW,EAAD,KACxB3E,GAAS,EAAO/F,YAAY,EAAD,KAzBxB,0DAAP,uDAgCWyE,EAAe,SAACsB,GAC3B,8CAAO,WAAOQ,GAAP,eAAAjJ,EAAA,6DACLyI,GAAS,EAAM,IADV,SAGHS,cAHG,SAIerH,IAAM4C,IAAN,UAA4B1C,IAAI8L,YAAhC,cAJf,OAIG5L,EAJH,OAKHgH,EAA6B,CAC3BpL,KAAM2F,IAAYsK,aAClBpK,QAASzB,EAAIE,OAEfsG,GAAS,EAAO,IATb,kDAWH/G,QAAQC,IAAI,CAAEyL,WAAW,EAAD,KACxB3E,GAAS,EAAO/F,YAAY,EAAD,KAZxB,0DAAP,uDAqCWqL,EAAiB,SAAC5L,GAE7B,OADAT,QAAQC,IAAI,CAAEoM,eAAgB5L,IAC9B,uCAAO,WAAO8G,GAAP,SAAAjJ,EAAA,sDACLiJ,EAAsC,CACpCpL,KAAM2F,IAAYwK,gBAClBtK,QAASvB,IAHN,2CAAP,uDAQW8L,EAAkB,SAAC9L,GAI9B,8CAAO,WAAO8G,GAAP,SAAAjJ,EAAA,sDACLiJ,EAAgC,CAC9BpL,KAAM2F,IAAY0K,iBAClBxK,QAASvB,IAHN,2CAAP,wD,iCC1NF,gBAoCegE,IA/BmC,SAAC1J,GACjD,IAAM0R,EAAc,WAElB,IADA,IAAIC,EAAsB,GACjBrR,EAAQ,EAAGA,EAAQN,EAAM0G,KAAMpG,IACtCqR,EAAU/Q,KAAKN,GAUjB,OARaqR,EAAU3P,KAAI,SAACC,GAC1B,OACE,oBAAId,UAAU,oCAAd,SACE,qBAAKA,UAAU,yGADsCc,OAQ7D,OACE,qCACE,oBAAId,UAAU,2BAAd,SACGuQ,KAD2C,KAG9C,oBAAIvQ,UAAU,2BAAd,SACGuQ,KAD2C,OAG9C,oBAAIvQ,UAAU,2BAAd,SACGuQ,KAD2C","file":"static/js/48.504bc689.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { PositionAPI } from \"../../interfaces\";\nimport searchData from \"../../utils/search\";\n\nexport const isPositionSelected = (\n  positionIds: string[],\n  thisPosition: string\n) => {\n  return positionIds.find((item) => item === thisPosition);\n};\n\ninterface ChoosePositionProps {\n  positionList: PositionAPI[];\n  setChoosePosition: (value: boolean) => void;\n  loadingRequest: boolean;\n  defaultMarks: number;\n  customMarks: { id: string; marks: number }[];\n  setCustomMarks: (\n    value: {\n      id: string;\n      marks: number;\n    }[]\n  ) => void;\n}\n\ninterface ChoosePositionState {\n  searchInput: string;\n}\n\nexport class ChoosePosition extends Component<\n  ChoosePositionProps,\n  ChoosePositionState\n> {\n  constructor(props: ChoosePositionProps) {\n    super(props);\n\n    this.state = {\n      searchInput: \"\",\n    };\n  }\n\n  setCustomMarks = (thisPosition: string, value: string) => {\n    let currentSelectedList: {\n      id: string;\n      marks: number;\n    }[] = [...this.props.customMarks];\n    let index = currentSelectedList.findIndex(\n      (item) => item.id === thisPosition\n    );\n    if (index >= 0) {\n      currentSelectedList[index].marks = Number(value);\n    } else {\n      currentSelectedList.push({ id: thisPosition, marks: Number(value) });\n    }\n    this.props.setCustomMarks(currentSelectedList);\n  };\n\n  getMarkByPosition = (thisPosition: string) => {\n    return this.props.customMarks.find((item) => item.id === thisPosition);\n  };\n\n  setSearchInput = (value: string) => {\n    this.setState({ searchInput: value });\n  };\n\n  render() {\n    return (\n      <section className={`rounded`}>\n        {/* SEARCH PART */}\n        <div className=\"flex items-center w-full my-1\">\n          <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n          <input\n            type=\"text\"\n            placeholder=\"Search\"\n            className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 border-gray-600 focus:border-gray-700 w-full rounded\"\n            onChange={(e) => this.setSearchInput(e.target.value)}\n            value={this.state.searchInput}\n            disabled={this.props.positionList.length > 0 ? false : true}\n          />\n          <div className=\"flex items-center w-auto justify-end gap-1\">\n            <button\n              className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n              type=\"button\"\n              onClick={() => this.props.setChoosePosition(false)}\n            >\n              Close\n            </button>\n          </div>\n        </div>\n        {/* END SEARCH PART ///////////////// */}\n        <div\n          className={`w-full h-96 mt-2 divide-y divide-gray-300 overflow-y-auto`}\n        >\n          {searchData(this.props.positionList, this.state.searchInput).length >\n          0 ? (\n            searchData(this.props.positionList, this.state.searchInput).map(\n              (element, index) => (\n                <section key={index + element.position_id}>\n                  <div\n                    className={`group flex items-center justify-between my-1 hover:bg-gray-100`}\n                  >\n                    <div className=\"p-1 w-full mr-2\">\n                      <p className=\"text-base font-medium text-black\">\n                        {element.position_title}\n                      </p>\n                    </div>\n\n                    <input\n                      type=\"number\"\n                      min={0}\n                      max={100}\n                      value={\n                        this.getMarkByPosition(element.position_id)\n                          ? this.getMarkByPosition(element.position_id)!.marks\n                          : this.props.defaultMarks\n                      }\n                      onChange={(e) =>\n                        this.setCustomMarks(element.position_id, e.target.value)\n                      }\n                      className=\"rounded border-2 border-gray-500 focus:border-gray-700 focus:outline-none\"\n                    />\n                  </div>\n                </section>\n              )\n            )\n          ) : (\n            <div className=\"text-center p-3\">\n              <p className=\"text-base font-medium text-black\">\n                No position available\n              </p>\n            </div>\n          )}\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default React.memo(ChoosePosition);\n","import axios from \"axios\";\nimport moment from \"moment\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../actions\";\nimport { createMarksPublication } from \"../../actions/marks_publication\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PositionAPI, SessionPlanInterface } from \"../../interfaces\";\nimport {\n  marksPublicationFormInterface,\n  marksPublicationInterface,\n  publicationFormInterface,\n} from \"../../interfaces/marks_publication\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport ChoosePosition from \"./ChoosePosition\";\nimport { marksArray } from \"./MarksPublication\";\n\ninterface MarksPublicationFormProps {\n  sessions: SessionPlanInterface;\n  positionList: PositionAPI[];\n  loadingRequest: boolean;\n  inputMarks: number;\n  inputComment: string;\n  customMarks: { id: string; marks: number }[];\n  setCustomMarks: (\n    value: {\n      id: string;\n      marks: number;\n    }[]\n  ) => void;\n  modalAction: false | \"CREATE\" | \"UPDATE\";\n  setModalAction: (status: \"CREATE\" | \"UPDATE\" | false) => void;\n  setInputMarks: (value: number) => void;\n  setInputComment: (value: string) => void;\n  setLoadingRequest: (status: boolean) => void;\n\n  //   REDUX ==========================\n  auth: Auth;\n  createMarksPublication: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface MarksPublicationFormState {\n  searchPosition: string;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  choosePosition: boolean;\n}\n\nclass MarksPublicationForm extends Component<\n  MarksPublicationFormProps,\n  MarksPublicationFormState\n> {\n  constructor(props: MarksPublicationFormProps) {\n    super(props);\n\n    this.state = {\n      searchPosition: \"\",\n      formError: null,\n      choosePosition: false,\n    };\n  }\n\n  setChoosePosition = (value: boolean) => {\n    this.setState({ choosePosition: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n\n  changeDefaultMarks = (value: number) => {\n    if (this.props.customMarks.length > 0) {\n      if (\n        window.confirm(\n          \"Do you want the default pass mark to override the customized pass marks on some position\"\n        )\n      ) {\n        this.props.setCustomMarks([]);\n      }\n    }\n    this.props.setInputMarks(value);\n  };\n\n  cleanBeforeClose = () => {\n    if (this.props.modalAction === \"CREATE\") {\n      this.props.setInputMarks(70);\n      this.props.setInputComment(\"\");\n      this.props.setCustomMarks([]);\n      this.props.setModalAction(false);\n    }\n  };\n\n  handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (this.props.positionList.length <= 0) {\n      return this.setFormError({\n        element: \"position\",\n        msg: \"There is no published position available\",\n      });\n    }\n\n    if (isEmptyOrSpaces(this.props.inputComment)) {\n      return this.setFormError({\n        element: \"comment\",\n        msg: \"Comment is required\",\n      });\n    }\n\n    if (!window.confirm(`Are you sure you wanted to submit`)) {\n      return;\n    }\n\n    let requestData: marksPublicationFormInterface,\n      positionWithMarks: publicationFormInterface[] = [];\n\n    this.props.positionList.forEach((positionItem) => {\n      if (this.props.customMarks.length > 0) {\n        const thisCustomMarks = this.props.customMarks.find(\n          (item) => item.id === positionItem.position_id\n        );\n        if (thisCustomMarks) {\n          positionWithMarks.push({\n            position: thisCustomMarks.id,\n            marks: thisCustomMarks.marks,\n            comment: this.props.inputComment,\n          });\n        } else {\n          positionWithMarks.push({\n            position: positionItem.position_id,\n            marks: this.props.inputMarks,\n            comment: this.props.inputComment,\n          });\n        }\n      } else {\n        positionWithMarks.push({\n          position: positionItem.position_id,\n          marks: this.props.inputMarks,\n          comment: this.props.inputComment,\n        });\n      }\n    });\n\n    requestData = {\n      session: this.props.sessions.session_plan_id,\n      doneby: this.props.auth.user.user_id,\n      created_date: moment(moment().toDate()).format(\"YYYY-MM-DD\").toString(),\n      publication_position_marks: positionWithMarks,\n    };\n\n    console.log(\"====================================\");\n    console.log({ requestData });\n    console.log(\"====================================\");\n\n    this.props.setLoadingRequest(true);\n    try {\n      const res = await axios.post<marksPublicationInterface>(\n        `${API.CLAIMING}/publication`,\n        requestData\n      );\n      if (res) {\n        console.log(\"====================================\");\n        console.log({ res });\n        console.log(\"====================================\");\n        this.props.createMarksPublication(res.data);\n        this.props.PushPopupAlert({\n          title: `Mark published successfully!`,\n          theme: PopupAlertTheme.success,\n        });\n      }\n      this.cleanBeforeClose();\n    } catch (error) {\n      console.error(error);\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.props.setLoadingRequest(false);\n  };\n\n  render() {\n    return (\n      <form\n        onSubmit={(e: React.FormEvent<HTMLFormElement>) => this.handleSubmit(e)}\n        method=\"post\"\n      >\n        <div className=\"pt-2 pb-4 w-full bg-gray-100 px-5 flex flex-col gap-2\">\n          <div className=\"flex flex-col\">\n            <label>Session</label>\n            <input\n              type=\"text\"\n              className={`text-left input-white w-full inline-block border-gray-500 border-2`}\n              placeholder=\"Sub Category Title\"\n              value={capitalizeFirstLetter(\n                this.props.sessions.session_plan_name\n              )}\n              disabled={true}\n            />\n          </div>\n          <div className=\"flex flex-col\">\n            <label>Default pass marks</label>\n            <select\n              className=\"outline-none bg-white text-gray-700 text-base mr-1 py-2 px-2 border-2 border-gray-500 rounded\"\n              value={this.props.inputMarks}\n              onChange={(e) => this.changeDefaultMarks(Number(e.target.value))}\n            >\n              {marksArray().map((item, index) => (\n                <option\n                  value={item ? item : \"-1\"}\n                  key={index * (item ? item : -1)}\n                >\n                  {item}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"flex flex-col\">\n            <label>Customize pass marks by position</label>\n            <div\n              className={`text-left bg-white border-2 border-gray-500 rounded w-full ${\n                this.state.choosePosition ? \"h-auto\" : \"h-10\"\n              } ${\n                this.state.formError &&\n                this.state.formError.element === \"position\"\n                  ? \"border-red-500\"\n                  : \"\"\n              } border-2 ${\n                !this.props.loadingRequest\n                  ? \"cursor-pointer\"\n                  : \"cursor-not-allowed\"\n              }`}\n              title=\"Choose position\"\n              onClick={() => {\n                !this.state.choosePosition && this.setChoosePosition(true);\n                this.state.formError &&\n                  this.state.formError.element === \"position\" &&\n                  this.setFormError(null);\n              }}\n            >\n              {/* DISPLAYING FILTERED SELECTING FILE ============================ */}\n              {this.props.customMarks.length > 0 &&\n              !this.state.choosePosition ? (\n                <p className=\"my-1 mx-2 text-gray-700\">\n                  Some position has customized pass marks\n                </p>\n              ) : (\n                !this.state.choosePosition && (\n                  <p className=\"my-1 mx-2 text-gray-500\">\n                    Click to view position\n                  </p>\n                )\n              )}\n              {/* END DISPLAYING FILTERED SELECTING FILE ============================ */}\n\n              {/* LISTING OF REJECTED DOCUMENTS ============================ */}\n              {this.state.choosePosition && (\n                <ChoosePosition\n                  positionList={this.props.positionList}\n                  setChoosePosition={this.setChoosePosition}\n                  loadingRequest={this.props.loadingRequest}\n                  defaultMarks={this.props.inputMarks}\n                  customMarks={this.props.customMarks}\n                  setCustomMarks={this.props.setCustomMarks}\n                />\n              )}\n              {/* END LISTING OF REJECTED DOCUMENTS ============================ */}\n            </div>\n            {this.state.formError &&\n              this.state.formError.element === \"position\" && (\n                <span className=\"text-red-500\">{this.state.formError.msg}</span>\n              )}\n          </div>\n          <div className=\"flex flex-col\">\n            <label>Comment</label>\n            <textarea\n              placeholder={`Comment for pass mark`}\n              cols={50}\n              rows={3}\n              className={`border-2 ${\n                this.state.formError &&\n                this.state.formError.element === \"comment\"\n                  ? \"border-red-400\"\n                  : \"border-gray-500\"\n              } rounded px-3 py-1 w-full focus:outline-none`}\n              style={{ resize: \"none\" }}\n              value={this.props.inputComment}\n              onChange={(e) => {\n                this.props.setInputComment(e.target.value);\n                this.setFormError(null);\n              }}\n              disabled={this.props.loadingRequest}\n            ></textarea>\n            {this.state.formError &&\n              this.state.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{this.state.formError.msg}</p>\n              )}\n          </div>\n\n          <div className=\"pt-4 flex justify-between\">\n            <button\n              onClick={() => {\n                this.cleanBeforeClose();\n              }}\n              className={`btn bg-gray-400 text-white hover:bg-gray-600 focus:outline-none ${\n                this.props.loadingRequest && \"cursor-not-allowed\"\n              }`}\n              type=\"button\"\n              disabled={this.props.loadingRequest}\n            >\n              Exit\n            </button>\n            <div className=\"flex items-center gap-1\">\n              <button\n                className={`btn bg-primary text-white hover:bg-blue-600 focus:outline-none ${\n                  this.props.loadingRequest && \"cursor-wait\"\n                }`}\n                type=\"submit\"\n                disabled={this.props.loadingRequest}\n              >\n                {this.props.loadingRequest ? \"Loading...\" : \"Save\"}\n              </button>\n            </div>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n}: StoreState): {\n  auth: Auth;\n} => {\n  return {\n    auth: auth,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    createMarksPublication,\n    PushPopupAlert,\n  })(MarksPublicationForm)\n);\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { marksPublicationInterface } from \"../interfaces/marks_publication\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// MARKS PUBLICATION\nexport interface GetMarksPublicationAction {\n  type: ActionTypes.GET_MARKS_PUBLICATION;\n  payload: marksPublicationInterface[];\n}\n\n// CREATE PERSONAL CLAIM\nexport interface CreateMarksPublicationAction {\n  type: ActionTypes.CREATE_MARKS_PUBLICATION;\n  payload: marksPublicationInterface;\n}\n\n// UPDATE PERSONAL CLAIM\nexport interface UpdateMarksPublicationAction {\n  type: ActionTypes.UPDATE_MARKS_PUBLICATION;\n  payload: marksPublicationInterface;\n}\n\nexport type MarksPublicationActionType =\n  | GetMarksPublicationAction\n  | CreateMarksPublicationAction\n  | UpdateMarksPublicationAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// GET MARKS PUBLICATION ==========================\nexport const getMarksPublication = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<marksPublicationInterface[]>(\n        `${API.CLAIMING}/publication`\n      );\n      let responseData: marksPublicationInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          responseData = res.data;\n        }\n      }\n      console.log(\"====================================\");\n      console.log({ GetMarksPublication: res.data });\n      console.log(\"====================================\");\n      dispatch<GetMarksPublicationAction>({\n        type: ActionTypes.GET_MARKS_PUBLICATION,\n        payload: responseData,\n      });\n      callback(false, \"\", responseData);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE MARKS PUBLICATION ==========================\n// export const setSelectedClaimType = (\n//   thisType: PlansTypeKeys | \"all\"\n// ): setSelectedClaimTypeActions => {\n//   console.log({ thisType });\n//   return {\n//     type: ActionTypes.SELECT_CLAIM_TYPE,\n//     payload: thisType,\n//   };\n// };\n\n// CREATE PERSONAL CLAIM\nexport const createMarksPublication = (data: marksPublicationInterface) => {\n  return {\n    type: ActionTypes.CREATE_MARKS_PUBLICATION,\n    payload: data,\n  };\n};\n\n// CREATE MARKS PUBLICATION ==========================\n// export const setSelectedClaimType = (\n//   thisType: PlansTypeKeys | \"all\"\n// ): setSelectedClaimTypeActions => {\n//   console.log({ thisType });\n//   return {\n//     type: ActionTypes.SELECT_CLAIM_TYPE,\n//     payload: thisType,\n//   };\n// };\n\n// UPDATE PERSONAL CLAIM\nexport const updateMarksPublication = (data: marksPublicationInterface) => {\n  return {\n    type: ActionTypes.UPDATE_MARKS_PUBLICATION,\n    payload: data,\n  };\n};\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { HiOutlineDocumentSearch } from \"react-icons/hi\";\nimport { IoWarning } from \"react-icons/io5\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport TableLoading from \"../../components/Loading/TableLoading\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport {\n  PositionAPI,\n  PositionAPICourse,\n  PositionRequirements,\n  SessionPlanInterface,\n} from \"../../interfaces\";\nimport { marksPublicationInterface } from \"../../interfaces/marks_publication\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\n\nexport interface MarksPublicationPosition {\n  province_id: string;\n  province_name: string;\n  courses: PositionAPICourse[];\n  position_title: string;\n  description: string;\n  school_level_id: {\n    school_level_name: string;\n    description: string;\n    education_institute: string[];\n    courses: [];\n    school_level_id: string;\n  };\n  education_institute_id: {\n    education_category_title: string;\n    school_levels: [];\n    description: string;\n    education_institute_id: string;\n  };\n  requirements: PositionRequirements[];\n  isDeleted: boolean;\n  isPublished: boolean;\n  position_id: string;\n  marks: number;\n  candidate_applied: number;\n  candidate_passed: number;\n}\n\ntype SetPassMarksProps = {\n  positionList: PositionAPI[];\n  marksPublication: marksPublicationInterface[];\n  sessions: SessionPlanInterface | \"none\";\n  thisPosition: PositionAPI | null;\n  loadingRequest: boolean;\n  setThisPosition: (value: PositionAPI | null) => void;\n\n  // FOR UPDATING ==========================\n  defaultMarks: number;\n  defaultChanged: boolean;\n  customMarks: { id: string; marks: number }[];\n  setCustomMarks: (\n    value: {\n      id: string;\n      marks: number;\n    }[]\n  ) => void;\n  isUpdateOn: boolean;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ninterface SetPassMarksState {\n  loading: boolean;\n  searchInput: string;\n  publicationCount:\n    | {\n        _id: string;\n        position: string;\n        marks: number;\n        candidate_applied: number;\n        candidate_passed: number;\n      }[]\n    | null;\n}\nexport class SetPassMarks extends Component<\n  SetPassMarksProps,\n  SetPassMarksState\n> {\n  constructor(props: SetPassMarksProps) {\n    super(props);\n\n    this.state = {\n      searchInput: \"\",\n      publicationCount: null,\n      loading: false,\n    };\n  }\n\n  setSearchInput = (value: string) => {\n    this.setState({ searchInput: value });\n  };\n\n  searchPublishedMarks = (\n    objList: MarksPublicationPosition[],\n    text: string\n  ): MarksPublicationPosition[] => {\n    if (undefined === text || text === \"\") return objList;\n    return objList.filter((product) => {\n      let flag;\n      // let dataKeys = product;\n\n      for (let prop in product) {\n        flag = false;\n        if (\n          prop === \"province_name\" ||\n          prop === \"courses\" ||\n          prop === \"position_title\" ||\n          prop === \"description\" ||\n          prop === \"marks\" ||\n          prop === \"candidate_applied\" ||\n          prop === \"candidate_passed\"\n        ) {\n          if (product[prop]) {\n            flag =\n              product[prop]!.toString()\n                .toLowerCase()\n                .indexOf(text.toLowerCase()) > -1;\n          }\n        }\n        if (flag) break;\n      }\n      return flag;\n    });\n  };\n\n  setCustomMarks = (thisPosition: string, value: string) => {\n    if (Number(value) < 0 || Number(value) > 100) {\n      return this.props.PushPopupAlert({\n        title: `Pass marks must be less or equal to 100 and greater or equal to 0`,\n        theme: PopupAlertTheme.danger,\n      });\n    }\n\n    let currentSelectedList: {\n      id: string;\n      marks: number;\n    }[] = [...this.props.customMarks];\n    let index = currentSelectedList.findIndex(\n      (item) => item.id === thisPosition\n    );\n\n    if (index >= 0) {\n      currentSelectedList[index].marks = Number(value);\n    } else {\n      currentSelectedList.push({ id: thisPosition, marks: Number(value) });\n    }\n\n    this.props.setCustomMarks(currentSelectedList);\n  };\n\n  getMarkByPosition = (thisPosition: string) => {\n    return this.props.customMarks.find((item) => item.id === thisPosition);\n  };\n\n  loadPublicationCounts = async (\n    allMarks: marksPublicationInterface[],\n    sessions: SessionPlanInterface | \"none\",\n    setLoadingRequest: (value: boolean) => void\n  ) => {\n    const marksBySession =\n      sessions !== \"none\"\n        ? allMarks.find((item) => item.session === sessions.session_plan_id)\n        : undefined;\n    console.log(\"====================================\");\n    console.log({ allMarks, marksBySession });\n    console.log(\"====================================\");\n    if (marksBySession) {\n      console.log(\"====================================\");\n      console.log({ marksBySession });\n      console.log(\"====================================\");\n      setLoadingRequest(true);\n      try {\n        const res = await axios.get<\n          | {\n              _id: string;\n              position: string;\n              marks: number;\n              candidate_applied: number;\n              candidate_passed: number;\n            }[]\n        >(`${API.CLAIMING}/publication/count/${marksBySession.publication_id}`);\n\n        if (res) {\n          console.log(\"====================================\");\n          console.log({ loadPublicationCounts: res });\n          console.log(\"====================================\");\n          this.setPublicationCount(res.data);\n        }\n      } catch (error) {\n        console.error({ loadPublicationCounts_reply: error });\n        this.props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      setLoadingRequest(false);\n    } else setLoadingRequest(false);\n  };\n\n  setPublicationCount = (\n    value:\n      | {\n          _id: string;\n          position: string;\n          marks: number;\n          candidate_applied: number;\n          candidate_passed: number;\n        }[]\n      | null\n  ) => {\n    this.setState({ publicationCount: value });\n  };\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  componentDidMount = () => {\n    if (this.state.publicationCount === null)\n      this.loadPublicationCounts(\n        this.props.marksPublication,\n        this.props.sessions,\n        this.setLoading\n      );\n  };\n\n  getNeededData = (\n    allPosition: PositionAPI[],\n    allMarks: marksPublicationInterface[],\n    sessions: SessionPlanInterface | \"none\",\n    publicationCountData:\n      | {\n          _id: string;\n          position: string;\n          marks: number;\n          candidate_applied: number;\n          candidate_passed: number;\n        }[]\n      | null\n  ): MarksPublicationPosition[] => {\n    let result: MarksPublicationPosition[] = [];\n\n    allPosition.forEach((element) => {\n      const marksBySession =\n        sessions !== \"none\"\n          ? allMarks.find((item) => item.session === sessions.session_plan_id)\n          : undefined;\n      if (marksBySession) {\n        const marksByPosition = marksBySession.publication_position_marks.find(\n          (item) => item.position === element.position_id\n        );\n        const publicationCountByPosition =\n          publicationCountData &&\n          publicationCountData.find(\n            (item) => item.position === element.position_id\n          );\n        if (marksByPosition) {\n          result.push({\n            province_id: element.province_id,\n            province_name: element.province_name,\n            courses: element.courses,\n            position_title: element.position_title,\n            description: element.description,\n            school_level_id: element.school_level_id,\n            education_institute_id: element.education_institute_id,\n            requirements: element.requirements,\n            isDeleted: element.isDeleted,\n            isPublished: element.isPublished,\n            position_id: element.position_id,\n            marks: marksByPosition.marks,\n            candidate_applied: publicationCountByPosition\n              ? publicationCountByPosition.candidate_applied\n              : 0,\n            candidate_passed: publicationCountByPosition\n              ? publicationCountByPosition.candidate_passed\n              : 0,\n          });\n        }\n      }\n    });\n\n    return result;\n  };\n\n  render() {\n    if (this.props.sessions === \"none\") {\n      return (\n        <div className=\"py-10 flex flex-col items-center rounded border border-gray-300 bg-white text-2xl font-medium text-yellow-800 animate__animated animate__pulse\">\n          <IoWarning className=\"w-32 h-32\" />\n          No Active session available!\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {this.props.positionList.length <= 0 && (\n          <div className=\"text-gray-400 px-6 py-4 rounded border mt-4 text-xl font-extrabold flex flex-col items-center justify-center bg-gray-100\">\n            <HiOutlineDocumentSearch className=\"text-7xl text-gray-400 animate__animated animate__shakeX\" />\n            <span>No position available</span>\n          </div>\n        )}\n\n        {this.props.positionList.length > 0 && (\n          <section className=\"flex flex-col-reverse sm:flex-row items-center gap-2 w-full mb-2\">\n            <div className=\"w-full\">\n              <input\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                  this.setSearchInput(e.target.value)\n                }\n                type=\"text\"\n                className=\"input-white h-10 text-sm border-2 border-gray-400 focus:border-gray-500 w-full\"\n                placeholder={`Search position by title or description`}\n                value={this.state.searchInput}\n                disabled={\n                  this.state.publicationCount &&\n                  this.getNeededData(\n                    this.props.positionList,\n                    this.props.marksPublication,\n                    this.props.sessions,\n                    this.state.publicationCount\n                  ).length > 0\n                    ? false\n                    : true\n                }\n              />\n            </div>\n          </section>\n        )}\n\n        <table className=\"w-full\">\n          <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n            <tr>\n              <td className=\"px-2 py-2\">Positions</td>\n              <td className=\"px-2 py-2\">All candidates</td>\n              <td className=\"px-2 py-2\">Passed candidates</td>\n              <td className=\"px-2 py-2\">Pass marks</td>\n            </tr>\n          </thead>\n          <tbody>\n            {!this.state.loading ? (\n              this.searchPublishedMarks(\n                this.getNeededData(\n                  this.props.positionList,\n                  this.props.marksPublication,\n                  this.props.sessions,\n                  this.state.publicationCount\n                ),\n                this.state.searchInput\n              ).length > 0 ? (\n                this.searchPublishedMarks(\n                  this.getNeededData(\n                    this.props.positionList,\n                    this.props.marksPublication,\n                    this.props.sessions,\n                    this.state.publicationCount\n                  ),\n                  this.state.searchInput\n                ).map((item: MarksPublicationPosition, i: number) => (\n                  <tr\n                    key={i + item.position_id}\n                    className={`${\n                      i % 2 !== 0 ? \"bg-gray-100\" : \"bg-white\"\n                    } hover:bg-blue-100 hover:text-blue-700 border-b hover:border-blue-500 text-base text-gray-600 border-gray-300`}\n                  >\n                    <td className=\"px-2 py-2\">{item.position_title}</td>\n                    <td className=\"px-2 py-2\">{item.candidate_applied}</td>\n                    <td className=\"px-2 py-2\">{item.candidate_passed}</td>\n                    <td className=\"px-2 py-2\">\n                      {!this.props.isUpdateOn ? (\n                        <span className=\"text-gray-600 italic font-semibold\">\n                          {item.marks}%\n                        </span>\n                      ) : (\n                        <input\n                          type=\"number\"\n                          min={0}\n                          max={100}\n                          value={\n                            this.getMarkByPosition(item.position_id)\n                              ? this.getMarkByPosition(item.position_id)!.marks\n                              : this.props.defaultChanged\n                              ? this.props.defaultMarks\n                              : item.marks\n                          }\n                          onChange={(e) =>\n                            this.setCustomMarks(\n                              item.position_id,\n                              e.target.value\n                            )\n                          }\n                          className=\"rounded border-2 border-gray-500 w-full focus:border-gray-700 focus:outline-none\"\n                        />\n                      )}\n                    </td>\n                  </tr>\n                ))\n              ) : (\n                <tr>\n                  <td colSpan={8} className=\"px-2 py-2\">\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"No pass marks has been set\"}\n                    />\n                  </td>\n                </tr>\n              )\n            ) : (\n              <TableLoading cols={4} />\n            )}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default React.memo(connect(null, { PushPopupAlert })(SetPassMarks));\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { MdArrowBack } from \"react-icons/md\";\nimport { RiFolderSettingsFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../actions\";\nimport {\n  getMarksPublication,\n  updateMarksPublication,\n} from \"../../actions/marks_publication\";\nimport { getActiveSessionPlan } from \"../../actions/session\";\nimport { getPositions } from \"../../actions/settings\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PositionAPI, SessionPlanInterface } from \"../../interfaces\";\nimport {\n  marksPublicationInterface,\n  publicationInterface,\n} from \"../../interfaces/marks_publication\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport MarksPublicationForm from \"./MarksPublicationForm\";\nimport SetPassMarks from \"./SetPassMarks\";\n\nexport const marksArray = (update: boolean = false): (number | null)[] => {\n  let result: (number | null)[] = update ? [null] : [0],\n    n: number = 0;\n  while (n <= 100) {\n    result.push(n);\n    n++;\n  }\n  return result;\n};\n\ninterface MarksPublicationProps {\n  auth: Auth;\n  systemPositions: PositionAPI[] | null;\n  sessions: SessionPlanInterface | \"none\" | null;\n  marksPublication: marksPublicationInterface[] | null;\n  getActiveSessionPlan: Function;\n  getPositions: Function;\n  getMarksPublication: Function;\n  updateMarksPublication: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface MarksPublicationState {\n  loading: boolean;\n  loadingRequest: boolean;\n  modalAction: \"CREATE\" | \"UPDATE\" | false;\n  searchPosition: string;\n  positionId: string[];\n  thisPosition: PositionAPI | null;\n  inputMarks: number;\n  inputComment: string;\n  customMarks: { id: string; marks: number }[];\n  defaultChanged: boolean;\n}\n\nclass index extends Component<MarksPublicationProps, MarksPublicationState> {\n  constructor(props: MarksPublicationProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingRequest: false,\n      modalAction: false,\n      searchPosition: \"\",\n      positionId: [],\n      thisPosition: null,\n      inputMarks: 70,\n      inputComment: \"\",\n      customMarks: [],\n      defaultChanged: false,\n    };\n  }\n\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  };\n\n  setLoadingRequest = (status: boolean) => {\n    this.setState({ loadingRequest: status });\n  };\n\n  setModalAction = (status: \"CREATE\" | \"UPDATE\" | false) => {\n    this.setState({ modalAction: status });\n  };\n\n  setThisPosition = (value: PositionAPI | null) => {\n    this.setState({ thisPosition: value });\n  };\n\n  setPositionId = (value: string[]) => {\n    this.setState({\n      positionId: value,\n    });\n  };\n\n  setCustomMarks = (value: { id: string; marks: number }[]) => {\n    this.setState({\n      customMarks: value,\n    });\n  };\n\n  setInputMarks = (value: number) => {\n    this.setState({ inputMarks: value });\n  };\n\n  setInputComment = (value: string) => {\n    this.setState({ inputComment: value });\n  };\n\n  loadPositions = () => {\n    if (this.props.systemPositions === null) {\n      this.props.getPositions((status: boolean, msg: string) => {\n        this.setLoading(status);\n        console.log({ status: status, msg: msg });\n        if (!status && msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n  };\n\n  componentDidMount = () => {\n    // SESSION CONTROLLER ========================================\n    if (this.props.sessions === null || this.props.sessions === \"none\") {\n      this.props.getActiveSessionPlan(\n        (status: boolean, msg: string, data: SessionPlanInterface | \"none\") => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n\n            if (data && data !== \"none\") {\n              this.loadPositions();\n            }\n          }\n        }\n      );\n    } else {\n      this.loadPositions();\n    }\n\n    if (this.props.marksPublication === null) {\n      this.props.getMarksPublication(\n        (status: boolean, msg: string, data?: marksPublicationInterface[]) => {\n          this.setLoading(status);\n          if (!status && msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n\n          if (!status && data) {\n            console.log(\"====================================\");\n            console.log({ data });\n            console.log(\"====================================\");\n          }\n        }\n      );\n    }\n  };\n\n  FC_neededPositions = (\n    allPosition: PositionAPI[]\n  ): {\n    withoutMarks: PositionAPI[];\n    withMarks: PositionAPI[];\n  } => {\n    let result: {\n      withoutMarks: PositionAPI[];\n      withMarks: PositionAPI[];\n    } = { withMarks: [], withoutMarks: [] };\n    let publishedPosition: PositionAPI[] = allPosition.filter(\n      (item) => item.isPublished && !item.isDeleted\n    );\n\n    result.withoutMarks = publishedPosition;\n\n    return result;\n  };\n\n  isMarkPublished = (\n    marksPublication: marksPublicationInterface[],\n    session: SessionPlanInterface\n  ): boolean => {\n    if (marksPublication.length > 0) {\n      const thisPublishedMarks = marksPublication.find(\n        (item) => item.session === session.session_plan_id\n      );\n      if (\n        thisPublishedMarks &&\n        thisPublishedMarks.publication_status === \"PUBLISHED\"\n      ) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  isUpdateAllowed = (\n    marksPublication: marksPublicationInterface[],\n    session: SessionPlanInterface\n  ): boolean => {\n    if (marksPublication.length > 0) {\n      const thisPublishedMarks = marksPublication.find(\n        (item) => item.session === session.session_plan_id\n      );\n      if (thisPublishedMarks) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  changeDefaultMarks = (value: number) => {\n    if (this.state.customMarks.length > 0) {\n      if (\n        window.confirm(\n          \"Do you want the default pass mark to override the customized pass marks on some position\"\n        )\n      ) {\n        this.setCustomMarks([]);\n      }\n    }\n    this.setState({ defaultChanged: true });\n    this.setInputMarks(value);\n  };\n\n  handleUpdate = async () => {\n    if (this.props.sessions === null) {\n      return this.props.PushPopupAlert({\n        title: `Load session first!`,\n        theme: PopupAlertTheme.info,\n      });\n    }\n\n    if (this.props.sessions === \"none\") {\n      return this.props.PushPopupAlert({\n        title: `No active session available!`,\n        theme: PopupAlertTheme.info,\n      });\n    }\n\n    if (this.props.marksPublication === null) {\n      return this.props.PushPopupAlert({\n        title: `Load published pass marks first!`,\n        theme: PopupAlertTheme.info,\n      });\n    }\n\n    const thisSession = this.props.sessions;\n\n    const thisPublishedMarks = this.props.marksPublication.find(\n      (item) => item.session === thisSession.session_plan_id\n    );\n\n    if (!thisPublishedMarks) {\n      return this.props.PushPopupAlert({\n        title: `No pass marks publication available! Add pass marks instead!`,\n        theme: PopupAlertTheme.info,\n      });\n    }\n\n    if (this.state.customMarks.length <= 0 && !this.state.defaultChanged) {\n      return this.props.PushPopupAlert({\n        title: `No change have been done!`,\n        theme: PopupAlertTheme.info,\n      });\n    }\n\n    if (!window.confirm(`Are you sure you wanted to update`)) {\n      return;\n    }\n\n    let requestData: marksPublicationInterface,\n      positionSetPassMarks: publicationInterface[] = [];\n\n    thisPublishedMarks.publication_position_marks.forEach((positionItem) => {\n      if (this.state.customMarks.length > 0) {\n        const thisCustomMarks = this.state.customMarks.find(\n          (item) => item.id === positionItem.position\n        );\n        if (thisCustomMarks) {\n          positionSetPassMarks.push({\n            _id: positionItem._id,\n            position: thisCustomMarks.id,\n            marks: thisCustomMarks.marks,\n            comment: positionItem.comment,\n          });\n        } else {\n          if (this.state.defaultChanged) {\n            positionSetPassMarks.push({\n              _id: positionItem._id,\n              position: positionItem.position,\n              marks: this.state.inputMarks,\n              comment: positionItem.comment,\n            });\n          } else {\n            positionSetPassMarks.push({\n              _id: positionItem._id,\n              position: positionItem.position,\n              marks: positionItem.marks,\n              comment: positionItem.comment,\n            });\n          }\n        }\n      } else {\n        if (this.state.defaultChanged) {\n          positionSetPassMarks.push({\n            _id: positionItem._id,\n            position: positionItem.position,\n            marks: this.state.inputMarks,\n            comment: positionItem.comment,\n          });\n        } else {\n          positionSetPassMarks.push({\n            _id: positionItem._id,\n            position: positionItem.position,\n            marks: positionItem.marks,\n            comment: positionItem.comment,\n          });\n        }\n      }\n    });\n\n    requestData = {\n      session: thisPublishedMarks.session,\n      doneby: this.props.auth.user.user_id,\n      created_date: thisPublishedMarks.created_date,\n      publication_position_marks: positionSetPassMarks,\n      publication_id: thisPublishedMarks.publication_id,\n      publication_status: thisPublishedMarks.publication_status,\n      status: thisPublishedMarks.status,\n      createdAt: thisPublishedMarks.createdAt,\n      updatedAt: thisPublishedMarks.updatedAt,\n    };\n\n    console.log(\"====================================\");\n    console.log({ requestData });\n    console.log(\"====================================\");\n\n    this.setLoadingRequest(true);\n    try {\n      const res = await axios.put<marksPublicationInterface>(\n        `${API.CLAIMING}/publication/${thisPublishedMarks.publication_id}`,\n        requestData\n      );\n      if (res) {\n        console.log(\"====================================\");\n        console.log({ res });\n        console.log(\"====================================\");\n        // this.props.verifyDocument(api_redux);\n        this.props.updateMarksPublication(res.data);\n        this.props.PushPopupAlert({\n          title: `Pass mark updated successfully!`,\n          theme: PopupAlertTheme.success,\n        });\n      }\n      this.cleanBeforeClose();\n    } catch (error) {\n      console.error(error);\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.setLoadingRequest(false);\n  };\n\n  getWaitingList = async (sessionId: string, callback: Function) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<marksPublicationInterface>(\n        `${API.DO_EXAM}/waiting/publication/${sessionId}`\n      );\n      if (res) {\n        console.log(\"====================================\");\n        console.log({ getWaitingList: res });\n        console.log(\"====================================\");\n        callback(false, \"\");\n      }\n    } catch (error) {\n      console.error({ getWaitingListError: error });\n      callback(false, errorToText(error));\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.setLoadingRequest(false);\n  };\n\n  handlePublishMarks = async () => {\n    if (this.props.sessions === null) {\n      return this.props.PushPopupAlert({\n        title: `Load session first!`,\n        theme: PopupAlertTheme.info,\n      });\n    }\n\n    if (this.props.sessions === \"none\") {\n      return this.props.PushPopupAlert({\n        title: `No active session available!`,\n        theme: PopupAlertTheme.info,\n      });\n    }\n\n    if (this.props.marksPublication === null) {\n      return this.props.PushPopupAlert({\n        title: `Load published pass marks first!`,\n        theme: PopupAlertTheme.info,\n      });\n    }\n\n    const thisSession = this.props.sessions;\n\n    const thisPublishedMarks = this.props.marksPublication.find(\n      (item) => item.session === thisSession.session_plan_id\n    );\n\n    if (!thisPublishedMarks) {\n      return this.props.PushPopupAlert({\n        title: `No pass marks publication available! Add pass marks instead!`,\n        theme: PopupAlertTheme.info,\n      });\n    }\n\n    if (!window.confirm(`Are you sure you wanted to publish marks`)) {\n      return;\n    }\n\n    console.log(\"====================================\");\n    console.log({ thisPublishedMarks: thisPublishedMarks.publication_id });\n    console.log(\"====================================\");\n\n    this.setLoadingRequest(true);\n    await this.getWaitingList(\n      thisSession.session_plan_id,\n      async (status: boolean, msg: string) => {\n        if (!status && msg.length === 0) {\n          try {\n            const res = await axios.put<marksPublicationInterface>(\n              `${API.CLAIMING}/publication/publication/${thisPublishedMarks.publication_id}`\n            );\n            if (res) {\n              console.log(\"====================================\");\n              console.log({ res });\n              console.log(\"====================================\");\n              // this.props.verifyDocument(api_redux);\n              this.props.getMarksPublication((status: boolean, msg: string) => {\n                if (!status && msg.length > 0) {\n                  this.props.PushPopupAlert({\n                    title: msg,\n                    theme: PopupAlertTheme.danger,\n                  });\n                }\n              });\n              // this.props.updateMarksPublication(res.data);\n              this.props.PushPopupAlert({\n                title: `Pass mark published successfully!`,\n                theme: PopupAlertTheme.success,\n              });\n            }\n            this.cleanBeforeClose();\n          } catch (error) {\n            console.error(error);\n            this.props.PushPopupAlert({\n              title: errorToText(error),\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      }\n    );\n    this.setLoadingRequest(false);\n  };\n\n  cleanBeforeClose = () => {\n    if (this.state.modalAction === \"UPDATE\") {\n      this.setInputMarks(70);\n      this.setInputComment(\"\");\n      this.setCustomMarks([]);\n      this.setModalAction(false);\n      this.setState({ defaultChanged: false });\n    }\n  };\n\n  render() {\n    if (\n      this.props.sessions === null ||\n      this.props.systemPositions === null ||\n      this.props.marksPublication === null ||\n      this.state.loading\n    ) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading...\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <div className=\"mt-3 rounded flex flex-row justify-between items-center\">\n          <div className=\"flex flex-row items-center gap-3\">\n            <RiFolderSettingsFill className=\"text-6xl text-blue-600\" />\n            <div className=\"flex flex-col\">\n              <span className=\"text-blue-600 text-2xl font-bold\">\n                Marks publication\n              </span>\n              <div className=\"flex items-center gap-1\">\n                <span className=\"text-gray-600 text-base italic\">Session:</span>\n                <span className=\"text-gray-600 text-base font-bold\">\n                  {this.props.sessions &&\n                    this.props.sessions !== \"none\" &&\n                    this.props.sessions.session_plan_name}\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* CONTENT BODY =============================== */}\n        <div className=\"mt-1 p-1 bg-white\">\n          {/* CONTENT BODY TITLE ========================== */}\n          <div\n            className={`flex flex-col sm:flex-row items-center gap-1 bg-gray-100 py-1 ${\n              this.props.sessions &&\n              this.props.sessions !== \"none\" &&\n              \"justify-between\"\n            }`}\n          >\n            <div className=\"flex items-center gap-x-2\">\n              {/* BACK BUTTON CONTROLLER ============== */}\n              {this.props.sessions &&\n                this.props.sessions !== \"none\" &&\n                this.state.modalAction === \"CREATE\" && (\n                  <button\n                    className={`ml-3 bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n                      this.state.loadingRequest\n                        ? \"cursor-not-allowed\"\n                        : \"cursor-pointer\"\n                    } animate__animated animate__fadeIn`}\n                    disabled={this.state.loadingRequest}\n                    onClick={() =>\n                      this.setState({\n                        modalAction: false,\n                        positionId: [],\n                        inputMarks: 70,\n                        inputComment: \"\",\n                      })\n                    }\n                  >\n                    <MdArrowBack className=\"w-7 h-7\" />\n                  </button>\n                )}\n              {/* END BACK BUTTON CONTROLLER ============== */}\n              {/* ----------------------------------------------------------------- */}\n            </div>\n\n            <div className=\"flex items-center\">\n              {/* ADD PASS MARKS PUBLICATION */}\n              {this.props.sessions &&\n                this.props.sessions !== \"none\" &&\n                this.state.modalAction === false &&\n                this.props.systemPositions.filter(\n                  (item) => item.isPublished && !item.isDeleted\n                ).length > 0 &&\n                !this.isUpdateAllowed(\n                  this.props.marksPublication,\n                  this.props.sessions\n                ) && (\n                  <div\n                    className=\"btn bg-blue-600 text-white cursor-pointer hover:bg-blue-800\"\n                    onClick={() => {\n                      this.setModalAction(\"CREATE\");\n                    }}\n                  >\n                    Add pass marks\n                  </div>\n                )}\n\n              {/* UPDATE PASS MARKS PUBLICATION */}\n              {this.props.sessions &&\n                this.props.sessions !== \"none\" &&\n                this.state.modalAction === false &&\n                this.props.systemPositions.filter(\n                  (item) => item.isPublished && !item.isDeleted\n                ).length > 0 &&\n                this.isUpdateAllowed(\n                  this.props.marksPublication,\n                  this.props.sessions\n                ) &&\n                !this.isMarkPublished(\n                  this.props.marksPublication,\n                  this.props.sessions\n                ) && (\n                  <div\n                    className=\"btn bg-gray-300 text-blue-600 hover:text-white cursor-pointer hover:bg-blue-800\"\n                    onClick={() => {\n                      this.setModalAction(\"UPDATE\");\n                      this.setInputMarks(-1);\n                    }}\n                  >\n                    Update pass marks\n                  </div>\n                )}\n\n              {/* PUBLISH MARKS PUBLICATION */}\n              {this.props.sessions &&\n                this.props.sessions !== \"none\" &&\n                this.state.modalAction === false &&\n                this.props.systemPositions.filter(\n                  (item) => item.isPublished && !item.isDeleted\n                ).length > 0 &&\n                this.isUpdateAllowed(\n                  this.props.marksPublication,\n                  this.props.sessions\n                ) &&\n                !this.isMarkPublished(\n                  this.props.marksPublication,\n                  this.props.sessions\n                ) && (\n                  <div\n                    className={`btn bg-green-600 text-white ml-1 hover:bg-green-800 ${\n                      this.state.loadingRequest\n                        ? \"cursor-wait\"\n                        : \"cursor-pointer\"\n                    }`}\n                    onClick={() =>\n                      !this.state.loadingRequest && this.handlePublishMarks()\n                    }\n                  >\n                    Publish pass marks\n                  </div>\n                )}\n\n              {this.props.sessions !== \"none\" &&\n                this.isMarkPublished(\n                  this.props.marksPublication,\n                  this.props.sessions\n                ) && (\n                  <div className=\"px-3 py-1 text-1xl font-bold text-blue-500 border-4 border-blue-500 border-dotted\">\n                    Marks published\n                  </div>\n                )}\n\n              {this.props.sessions &&\n                this.props.sessions !== \"none\" &&\n                this.state.modalAction === \"UPDATE\" &&\n                this.props.systemPositions.filter(\n                  (item) => item.isPublished && !item.isDeleted\n                ).length > 0 &&\n                this.isUpdateAllowed(\n                  this.props.marksPublication,\n                  this.props.sessions\n                ) && (\n                  <div className=\"flex items-center gap-1 animate__animated animate__fadeInRight animate__faster\">\n                    <div className=\"flex items-center gap-1\">\n                      <label className=\"w-full inline-block text-right\">\n                        Default pass marks\n                      </label>\n                      <select\n                        className=\"outline-none bg-white text-gray-700 text-base mr-1 py-2 px-2 border-2 border-gray-500 rounded\"\n                        value={this.state.inputMarks}\n                        onChange={(e) =>\n                          this.changeDefaultMarks(Number(e.target.value))\n                        }\n                      >\n                        {marksArray(true).map((item, index) => (\n                          <option\n                            value={item ? item : \"-1\"}\n                            key={index * (item ? item : -1)}\n                            disabled={item === null}\n                          >\n                            {item ? item : \"Select\"}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n                    <button\n                      className={`btn bg-primary text-white hover:bg-blue-600 focus:outline-none ${\n                        this.state.loadingRequest && \"cursor-wait\"\n                      }`}\n                      type=\"button\"\n                      onClick={() => this.handleUpdate()}\n                      disabled={this.state.loadingRequest}\n                    >\n                      {this.state.loadingRequest ? \"Loading...\" : \"Save\"}\n                    </button>\n                    <button\n                      className={`btn bg-red-500 text-white hover:bg-red-600 focus:outline-none ${\n                        this.state.loadingRequest && \"cursor-wait\"\n                      }`}\n                      type=\"button\"\n                      onClick={() => this.cleanBeforeClose()}\n                      disabled={this.state.loadingRequest}\n                    >\n                      Cancel\n                    </button>\n                  </div>\n                )}\n            </div>\n          </div>\n          {/* END CONTENT BODY TITLE ========================== */}\n\n          {/* REAL BODY ============================= */}\n          <div className=\"=rounded mx-1 mb-2 overflow-x-auto\">\n            {this.state.modalAction !== \"CREATE\" && (\n              <SetPassMarks\n                positionList={this.props.systemPositions.filter(\n                  (item) => item.isPublished && !item.isDeleted\n                )}\n                marksPublication={this.props.marksPublication}\n                sessions={this.props.sessions}\n                thisPosition={this.state.thisPosition}\n                loadingRequest={this.state.loadingRequest}\n                isUpdateOn={this.state.modalAction === \"UPDATE\"}\n                setThisPosition={this.setThisPosition}\n                customMarks={this.state.customMarks}\n                setCustomMarks={this.setCustomMarks}\n                defaultChanged={this.state.defaultChanged}\n                defaultMarks={this.state.inputMarks}\n              />\n            )}\n          </div>\n        </div>\n        {/* END CONTENT BODY =========================== */}\n\n        {/* modal controller ==================================== */}\n        {this.props.sessions &&\n          this.props.sessions !== \"none\" &&\n          this.state.modalAction === \"CREATE\" && (\n            <MarksPublicationForm\n              sessions={this.props.sessions}\n              positionList={\n                this.FC_neededPositions(this.props.systemPositions).withoutMarks\n              }\n              loadingRequest={this.state.loadingRequest}\n              inputMarks={this.state.inputMarks}\n              modalAction={this.state.modalAction}\n              setModalAction={this.setModalAction}\n              setInputMarks={this.setInputMarks}\n              inputComment={this.state.inputComment}\n              setInputComment={this.setInputComment}\n              setLoadingRequest={this.setLoadingRequest}\n              customMarks={this.state.customMarks}\n              setCustomMarks={this.setCustomMarks}\n            />\n          )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  sessionPlan,\n  marksPublication,\n  system_settings,\n}: StoreState): {\n  auth: Auth;\n  sessions: SessionPlanInterface | \"none\" | null;\n  marksPublication: marksPublicationInterface[] | null;\n  systemPositions: PositionAPI[] | null;\n} => {\n  return {\n    auth: auth,\n    systemPositions: system_settings.systemPositions,\n    marksPublication,\n    sessions: sessionPlan.activeSessionPlan,\n  };\n};\n\nexport const MarksPublication = connect(mapStateToProps, {\n  getPositions,\n  getActiveSessionPlan,\n  getMarksPublication,\n  updateMarksPublication,\n  PushPopupAlert,\n})(index);\n","import { education_category } from \"../interfaces\";\nimport { PositionAPI } from \"../interfaces/position\";\nimport {\n  CustomeAccessInterface,\n  PostSchoolInterface,\n  RoleToUserInterface,\n  SchoolInfoInterface,\n  SystemUserRoleInterface,\n} from \"./interfaces\";\n\nexport const data_posts_school: PostSchoolInterface[] = [];\n\nexport const isEmptyOrSpaces = (str: string): boolean => {\n  return str === null || str.match(/^ *$/) !== null;\n};\n\nexport const getUserTitle = (\n  accessRoles: SystemUserRoleInterface[],\n  roleId: string\n): string => {\n  const result = accessRoles.find((e) => e.system_user_role_id === roleId);\n  return result ? result.role : \"\";\n};\n\nexport const getRoleById = (\n  roles: SystemUserRoleInterface[],\n  roleId: string\n): SystemUserRoleInterface => {\n  return roles.filter((role) => role.system_user_role_id === roleId)[0];\n};\n\nexport const getInstituteById = (\n  institutes: education_category[],\n  instituteId: string\n): education_category | undefined => {\n  return institutes.find((item) => item.education_institute_id === instituteId);\n};\n\nexport const getPositionById_old = (\n  positions: PositionAPI[],\n  position_id: string\n): PositionAPI => {\n  console.log({\n    positions,\n    position_id,\n    data: positions.filter(\n      (position) => position.position_id === position_id\n    )[0],\n  });\n  return positions.filter(\n    (position) => position.position_id === position_id\n  )[0];\n};\n\nexport const getPositionById = (\n  positions: PositionAPI[],\n  position_id: string\n): PositionAPI | undefined => {\n  return positions.find((position) => position.position_id === position_id);\n};\n\nexport const getSchoolById = (\n  schools: SchoolInfoInterface[],\n  school_id: string\n): SchoolInfoInterface => {\n  return schools.filter((school) => school.school_id === school_id)[0];\n};\n\nexport const getPostById = (\n  posts: PostSchoolInterface[],\n  post_id: string\n): PostSchoolInterface => {\n  return posts.filter((post) => post.school_id === post_id)[0];\n};\n\nexport const getPostsBySchoolId = (\n  posts: PostSchoolInterface[],\n  school_id: string\n): PostSchoolInterface[] => {\n  return posts.filter((post) => post.school_id === school_id);\n};\n\nexport const getPostsByIds = (\n  posts: PostSchoolInterface[],\n  school_id: string,\n  position_id: string\n): PostSchoolInterface[] => {\n  return posts.filter(\n    (post) => post.school_id === school_id && post.position_id === position_id\n  );\n};\n\nexport const displayDate = (dateToDisplay: Date): string => {\n  return new Intl.DateTimeFormat(\"en-GB\", {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"2-digit\",\n  }).format(dateToDisplay);\n};\n\nexport const userAccess = (\n  defaultAccess: RoleToUserInterface,\n  customAccess: CustomeAccessInterface\n): RoleToUserInterface => {\n  // const data = defaultAccess.access.map((default,index,customAccess)=>{\n  //   let data_custom = customAccess\n  //   if\n  // })\n  // return customAccess.filter((custom) => custom.id === accecc_id)[0];\n  return defaultAccess;\n};\n\n// export const groupBy = (list: [], keyGetter: Function) => {\n//   const map = new Map();\n//   list.forEach((item) => {\n//     const key = keyGetter(item);\n//     const collection = map.get(key);\n//     if (!collection) {\n//       map.set(key, [item]);\n//     } else {\n//       collection.push(item);\n//     }\n//   });\n//   return map;\n// };\n\nexport const toTwoDigit = (value: number): string => {\n  var dec = value - Math.floor(value);\n  value = value - dec;\n  return (\"0\" + value).slice(-2) + dec.toString().substr(1);\n};\n\nexport const toAnyDigit = (\n  value: string | number,\n  padding: number = 3\n): string => {\n  var zeroes = new Array(padding + 1).join(\"0\");\n  return (zeroes + value).slice(-padding);\n};\n\nexport const capitalizeFirstLetter = (value: string): string => {\n  return value.charAt(0).toUpperCase() + value.slice(1);\n};\n\nexport const isDateExpiried = (paramDate: string) => {\n  const thisDate = new Date(paramDate);\n  const today = new Date();\n  if (thisDate.getTime() < today.getTime()) {\n    return true;\n  }\n\n  return false;\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport {\n  AcademicSessionInterface,\n  PlansTypeInterface,\n  SessionPlanInterface,\n} from \"../interfaces\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// GET ACTIVE PLAN TYPES\nexport interface GetPlansTypesAction {\n  type: ActionTypes.GET_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// GET INACTIVE PLAN TYPES\nexport interface GetDeletedPlansTypesAction {\n  type: ActionTypes.GET_DELETED_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// CREATE PLAN TYPE\nexport interface CreatePlansTypeAction {\n  type: ActionTypes.CREATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// UPDATE PLAN TYPE\nexport interface UpdatePlansTypeAction {\n  type: ActionTypes.UPDATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// DELETE PLAN TYPE\nexport interface DeletePlansTypeAction {\n  type: ActionTypes.DELETE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// SET PLAN TYPE =====================================\nexport interface setSelectedPlanTypeActions {\n  type: ActionTypes.SELECT_PLAN_TYPE;\n  payload: PlansTypeInterface | \"all\";\n}\n\n// GET ALL SESSION PLAN\nexport interface GetAllSessionPlansAction {\n  type: ActionTypes.GET_ALL_SESSION_PLANS;\n  payload: SessionPlanInterface[];\n}\n\n// GET ACTIVE SESSION PLAN\nexport interface GetActiveSessionPlanAction {\n  type: ActionTypes.GET_ACTIVE_SESSION_PLANS;\n  payload: SessionPlanInterface | \"none\";\n}\n\n// CREATE SESSION PLAN\nexport interface CreateSessionPlansAction {\n  type: ActionTypes.CREATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// UPDATE SESSION PLAN\nexport interface UpdateSessionPlansAction {\n  type: ActionTypes.UPDATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// ACTIVATE SESSION PLAN\nexport interface ActivateSessionPlansAction {\n  type: ActionTypes.SESSION_ACTIVATION;\n  payload: SessionPlanInterface;\n}\n\n// DELETE SESSION PLAN\nexport interface DeleteSessionPlanAction {\n  type: ActionTypes.DELETE_SESSION_PLAN;\n  payload: string;\n}\n\n// GET ALL ACADEMIC SESSION\nexport interface GetAllAcademicSessionAction {\n  type: ActionTypes.GET_ALL_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface[];\n}\n\n// CREATE ACADEMIC SESSION\nexport interface CreateAcademicSessionAction {\n  type: ActionTypes.CREATE_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface;\n}\n\n// UPDATE ACADEMIC SESSION\nexport interface UpdateAcademicSessionAction {\n  type: ActionTypes.UPDATE_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface;\n}\n\n// ACTIVATE ACADEMIC SESSION\nexport interface ActivateAcademicSessionAction {\n  type: ActionTypes.ACADEMIC_SESSION_ACTIVATION;\n  payload: AcademicSessionInterface;\n}\n\n// DELETE ACADEMIC SESSION\nexport interface DeleteAcademicSessionAction {\n  type: ActionTypes.DELETE_ACADEMIC_SESSION;\n  payload: string;\n}\n\n// GET ACTIVE ACADEMIC SESSION\nexport interface GetActiveAcademicSessionAction {\n  type: ActionTypes.GET_ACTIVE_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface | \"none\";\n}\n\nexport type SessionActionType =\n  | GetPlansTypesAction\n  | GetDeletedPlansTypesAction\n  | CreatePlansTypeAction\n  | UpdatePlansTypeAction\n  | DeletePlansTypeAction\n  | GetAllSessionPlansAction\n  | GetActiveSessionPlanAction\n  | CreateSessionPlansAction\n  | UpdateSessionPlansAction\n  | ActivateSessionPlansAction\n  | DeleteSessionPlanAction\n  | setSelectedPlanTypeActions\n  | GetAllAcademicSessionAction\n  | CreateAcademicSessionAction\n  | UpdateAcademicSessionAction\n  | ActivateAcademicSessionAction\n  | DeleteAcademicSessionAction\n  | GetActiveAcademicSessionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type`\n      );\n      console.log({ GET_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetPlansTypesAction>({\n        type: ActionTypes.GET_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetDeletedPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type/deleted`\n      );\n      console.log({ GET_DELETED_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetDeletedPlansTypesAction>({\n        type: ActionTypes.GET_DELETED_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE PLAN TYPE\nexport const createPlanType = (\n  data: PlansTypeInterface\n): CreatePlansTypeAction => {\n  return {\n    type: ActionTypes.CREATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// UPDATE PLAN TYPE\nexport const updatePlanType = (\n  data: PlansTypeInterface\n): UpdatePlansTypeAction => {\n  return {\n    type: ActionTypes.UPDATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// DELETE PLAN TYPE\nexport const deletePlanType = (\n  data: PlansTypeInterface\n): DeletePlansTypeAction => {\n  return {\n    type: ActionTypes.DELETE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// SELECT PLAN TYPES ==========================\nexport const setSelectedPlanType = (\n  thisType: PlansTypeInterface | \"all\"\n): setSelectedPlanTypeActions => {\n  console.log({ thisType });\n  return {\n    type: ActionTypes.SELECT_PLAN_TYPE,\n    payload: thisType,\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const getActiveSessionPlan = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface>(\n        `${API.CLAIMING}/session/active/`\n      );\n      console.log({ GET_ACTIVE_SESSION_PLANS: res.data });\n      let session_plan: SessionPlanInterface | undefined = undefined;\n      // if (res.status === 200) {\n      //   // setApplications(res.data);\n      // }\n      if (res.data && res.data.is_active !== undefined) {\n        session_plan = res.data;\n      }\n      console.log({ session_plan: res.data });\n\n      dispatch<GetActiveSessionPlanAction>({\n        type: ActionTypes.GET_ACTIVE_SESSION_PLANS,\n        payload: session_plan ? session_plan : \"none\",\n      });\n      callback(false, \"\", session_plan ? session_plan : \"none\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ALL PLAN TYPES ==========================\nexport const GetAllSessionPlans = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface[]>(\n        `${API.CLAIMING}/session/`\n      );\n      console.log({ GET_ALL_SESSION_PLANS: res.data });\n      let session_data: SessionPlanInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          session_data = res.data;\n        }\n      }\n      dispatch<GetAllSessionPlansAction>({\n        type: ActionTypes.GET_ALL_SESSION_PLANS,\n        payload: session_data,\n      });\n      callback(false, \"\", session_data);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE SESSION PLAN\nexport const createSessionPlan = (\n  data: SessionPlanInterface\n): CreateSessionPlansAction => {\n  return {\n    type: ActionTypes.CREATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// UPDATE SESSION PLAN\nexport const updateSessionPlan = (\n  data: SessionPlanInterface\n): UpdateSessionPlansAction => {\n  return {\n    type: ActionTypes.UPDATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// ACTIVATE SESSION PLAN\nexport const sessionActivation = (\n  data: SessionPlanInterface\n): ActivateSessionPlansAction => {\n  return {\n    type: ActionTypes.SESSION_ACTIVATION,\n    payload: data,\n  };\n};\n\n// DELETE SESSION PLAN\nexport const deleteSessionPlan = (data: string): DeleteSessionPlanAction => {\n  return {\n    type: ActionTypes.DELETE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// CREATE ACADEMIC SESSION\nexport const createAcademicSession = (\n  data: AcademicSessionInterface\n): CreateAcademicSessionAction => {\n  return {\n    type: ActionTypes.CREATE_ACADEMIC_SESSION,\n    payload: data,\n  };\n};\n\n// GET ALL ACADEMIC SESSION ==========================\nexport const GetAllAcademicSession = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<AcademicSessionInterface[]>(\n        `${API.PLACEMENT}/postrequestperiod/`\n      );\n      console.log({ GET_ALL_SESSION_PLANS: res.data });\n      let session_data: AcademicSessionInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          session_data = res.data;\n        }\n      }\n      console.log(\"====================================\");\n      console.log({ GetAllAcademicSession: res });\n      console.log(\"====================================\");\n      dispatch<GetAllAcademicSessionAction>({\n        type: ActionTypes.GET_ALL_ACADEMIC_SESSION,\n        payload: session_data,\n      });\n      callback(false, \"\", session_data);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// UPDATE ACADEMIC SESSION\nexport const updateAcademicSession = (\n  data: AcademicSessionInterface\n): UpdateAcademicSessionAction => {\n  return {\n    type: ActionTypes.UPDATE_ACADEMIC_SESSION,\n    payload: data,\n  };\n};\n\n// ACTIVATE ACADEMIC SESSION\nexport const academicSessionActivation = (\n  data: AcademicSessionInterface\n): ActivateAcademicSessionAction => {\n  return {\n    type: ActionTypes.ACADEMIC_SESSION_ACTIVATION,\n    payload: data,\n  };\n};\n\n// DELETE ACADEMIC SESSION\nexport const deleteAcademicSession = (\n  data: string\n): DeleteAcademicSessionAction => {\n  return {\n    type: ActionTypes.DELETE_ACADEMIC_SESSION,\n    payload: data,\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const getActiveAcademicSession = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<AcademicSessionInterface>(\n        `${API.PLACEMENT}/postrequestperiod/one`\n      );\n      console.log({ GET_ACTIVE_ACADEMIC_SESSION: res.data });\n      let session_plan: AcademicSessionInterface | undefined = undefined;\n      // if (res.status === 200) {\n      //   // setApplications(res.data);\n      // }\n      if (res.data) {\n        session_plan = res.data;\n      }\n      console.log({ session_plan: res.data });\n\n      dispatch<GetActiveAcademicSessionAction>({\n        type: ActionTypes.GET_ACTIVE_ACADEMIC_SESSION,\n        payload: session_plan ? session_plan : \"none\",\n      });\n      callback(false, \"\", session_plan ? session_plan : \"none\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AccessTaskInterface,\n  PermissionInterface,\n  SystemSettingsInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PositionAPI } from \"../interfaces/position\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// SYSTEM SETTINGS  ==============\nexport interface GetSystemSettingsAction {\n  type: ActionTypes.GET_SYSTEM_SETTINGS;\n  payload: SystemSettingsInterface[];\n}\n\nexport interface DisableSystemSettingsAction {\n  type: ActionTypes.DISABLE_SYSTEM_SETTINGS;\n  payload: {\n    system_setting_id: string;\n    status: \"enabled\" | \"disabled\";\n  };\n}\n\n// ROLE TASKS ACCESS SETTINGS ===================================\nexport interface GetTaskAccessAction {\n  type: ActionTypes.GET_TASK_ACCESS;\n  payload: AccessTaskInterface[];\n}\n\n// POSITIONS SETTINGS ===================================\nexport interface PositionCreateInterface {\n  position_id?: string;\n  position_title: string;\n  position_code: string;\n  description: string;\n  school_level_id: string;\n  subcategory_id: string;\n  education_institute_id: string;\n  courses: string[];\n  requirements: {\n    user_detail_category_id: string;\n    user_detail_subcategory_id: string;\n    position_requirement: {\n      category_subcategory_data_id: string;\n      required: boolean;\n    }[];\n    required: boolean;\n  }[];\n}\nexport interface GetPositionsAction {\n  type: ActionTypes.GET_POSTIONS;\n  payload: PositionAPI[];\n}\n\nexport interface CreatePositionsAction {\n  type: ActionTypes.CREATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface UpdatePositionsAction {\n  type: ActionTypes.UPDATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface DeletePositionSettingAction {\n  type: ActionTypes.DELETE_POSITION;\n  payload: string;\n}\n\nexport interface PublishPositionAction {\n  type: ActionTypes.PUBLISH_POSITION;\n  payload: {\n    position_id: string;\n    status: boolean;\n  };\n}\n\nexport type SystemActionType =\n  | GetSystemSettingsAction\n  | DisableSystemSettingsAction\n  | GetTaskAccessAction\n  | GetPositionsAction\n  | CreatePositionsAction\n  | UpdatePositionsAction\n  | DeletePositionSettingAction\n  | PublishPositionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSystemSettings = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<SystemSettingsInterface[]>(\n        `${API.AUTH}/settings`\n      );\n      dispatch<GetSystemSettingsAction>({\n        type: ActionTypes.GET_SYSTEM_SETTINGS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const disableSystemSetting = (data: {\n  system_setting_id: string;\n  status: \"enabled\" | \"disabled\";\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableSystemSettingsAction>({\n      type: ActionTypes.DISABLE_SYSTEM_SETTINGS,\n      payload: data,\n    });\n  };\n};\n\n// ============================ tasks access =======================\n\nexport const GetTaskAccess = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<\n        {\n          id: string;\n          title: string;\n          key: string;\n          permitted: PermissionInterface;\n        }[]\n      >(`${API.AUTH}/allroleaccess`);\n      let response: AccessTaskInterface[] = res.data.map((data) => ({\n        id: data.id,\n        task: data.title,\n        key: data.key,\n        permitted: data.permitted,\n      }));\n      dispatch<GetTaskAccessAction>({\n        type: ActionTypes.GET_TASK_ACCESS,\n        payload: response,\n      });\n      callback(false, \"\", response);\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// ============================ positions =======================\n\nexport const getPositions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(`${API.APPLICATION}/position`);\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createPosition = (data: PositionCreateInterface) => {\n  console.log({ createPosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreatePositionsAction>({\n      type: ActionTypes.CREATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const updatePosition = (data: PositionCreateInterface) => {\n  console.log({ updatePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdatePositionsAction>({\n      type: ActionTypes.UPDATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const deletePosition = (data: string) => {\n  console.log({ deletePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<DeletePositionSettingAction>({\n      type: ActionTypes.DELETE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const publishPosition = (data: {\n  position_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<PublishPositionAction>({\n      type: ActionTypes.PUBLISH_POSITION,\n      payload: data,\n    });\n  };\n};\n","import React from \"react\";\n\ntype TableLoadingProps = {\n  cols: number;\n};\nconst TableLoading: React.FC<TableLoadingProps> = (props) => {\n  const displayCols = (): JSX.Element[] => {\n    let colsArray: number[] = [];\n    for (let index = 0; index < props.cols; index++) {\n      colsArray.push(index);\n    }\n    let result = colsArray.map((element) => {\n      return (\n        <td className=\"p-3 text-center whitespace-nowrap\" key={element}>\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      );\n    });\n\n    return result;\n  };\n  return (\n    <>\n      <tr className=\"border-b border-gray-200\" key={228}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={22648}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={229768}>\n        {displayCols()}\n      </tr>\n    </>\n  );\n};\n\nexport default TableLoading;\n"],"sourceRoot":""}
{"version":3,"sources":["actions/users.ts","components/Table/Table.tsx","containers/UserManagement/UserDetails.tsx"],"names":["documentValidationStatus","fetchUserAccess","dispatch","a","setAxiosToken","axios","get","API","AUTH","res","console","log","users_response","type","ActionTypes","FETCH_USERS_ACCESS","payload","data","users","error","user_error","blockUserToSystem","BLOCK_USER_TO_SYSTEM","unBlockUserToSystem","UNBLOCK_USER_TO_SYSTEM","assignRoleToUserAccess","ASSIGN_ROLE_TO_USER","customizeUserAccess","CUSTOMIZE_USER_ACCESS","resetUserAccess","RESET_USER_ACCESS","verifyAllDocument","VERIFY_ALL_DOCUMENT","Table","table","tr","rows","columns","hideColumns","pagination","search","tableSize","tableClass","tableId","rounded","searchBG","thColor","loading","length","result","characters","charactersLength","i","charAt","Math","floor","random","FC_makeID","useState","totalItems","setTotalItems","totalPages","setTotalPages","currentPage","setCurrentPage","pages","setPages","pageSize","setPageSize","startIndex","setStartIndex","endIndex","setEndIndex","useEffect","tablePagination","document","getElementById","getElementsByTagName","ceil","min","_pages","Array","from","keys","map","style","display","className","placeholder","onChange","e","filterType","filter","td","cols","toLowerCase","textContent","innerText","indexOf","filterTable","target","value","disabled","Number","id","column","index","padding","alignText","isSortAllowed","onClick","switching","x","y","shouldSwitch","colIndex","dir","switchcount","innerHTML","parentNode","insertBefore","sortThisColumn","columnTitle","aria-label","page","pageIndex","_UserDetails","props","componentDidMount","setState","findUser","userList","user","user_id","match","params","redirect","userInfo","tableData","state","user_info","fname","lname","n_id","sex","date_of_birth","email","phone_number","province","district","sector","blockUser","actionType","feedBack","message","loadindRequest","window","confirm","msg","this","title","to","photo","src","alt","default_access","getRoleById","accessRoles","system_user_role_id","role","is_active","Component","UserDetails","connect","auth","access"],"mappings":"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","file":"static/js/51.f6685930.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AssignRoleToUserActionInterface,\n  CustomeAccessInterface,\n  UserInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\ninterface FetchUsersAction {\n  type: ActionTypes.FETCH_USERS_ACCESS;\n  payload: UserInterface[];\n}\n\ninterface BlockUserToSystem {\n  type: ActionTypes.BLOCK_USER_TO_SYSTEM | ActionTypes.UNBLOCK_USER_TO_SYSTEM;\n  payload: string;\n}\n\ninterface AssignRoleToUserAction {\n  type: ActionTypes.ASSIGN_ROLE_TO_USER;\n  payload: AssignRoleToUserActionInterface;\n}\n\ninterface CustomizeUserAccessAction {\n  type: ActionTypes.CUSTOMIZE_USER_ACCESS;\n  payload: CustomeAccessInterface;\n}\n\ninterface ResetUserAccessAction {\n  type: ActionTypes.RESET_USER_ACCESS;\n  payload: string;\n}\n\ntype fetchUserAccessInterface = {\n  users: UserInterface[];\n  next: {\n    page: number;\n    limit: number;\n  } | null;\n  previous: {\n    page: number;\n    limit: number;\n  } | null;\n  total_users: number;\n};\n\nexport enum documentValidationStatus {\n  waiting = \"waiting\",\n  approved = \"approved\",\n  rejected = \"rejected\",\n}\n\nexport interface VerifyDocumentInterface {\n  user_id: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date?: string;\n  };\n  in_education: boolean;\n  disability: boolean;\n}\n\ninterface VerifyAllDocumentAction {\n  type: ActionTypes.VERIFY_ALL_DOCUMENT;\n  payload: VerifyDocumentInterface;\n}\n\nexport type AccessUserActionType =\n  | FetchUsersAction\n  | BlockUserToSystem\n  | AssignRoleToUserAction\n  | CustomizeUserAccessAction\n  | ResetUserAccessAction\n  | VerifyAllDocumentAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const fetchUserAccess = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<fetchUserAccessInterface>(\n        `${API.AUTH}/users?page=1&limit=500`\n      );\n      console.log({ users_response: res });\n      dispatch<FetchUsersAction>({\n        type: ActionTypes.FETCH_USERS_ACCESS,\n        payload: res.data.users,\n      });\n    } catch (error) {\n      console.error({ user_error: error });\n    }\n  };\n};\n\nexport const blockUserToSystem = (data: string) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<BlockUserToSystem>({\n      type: ActionTypes.BLOCK_USER_TO_SYSTEM,\n      payload: data,\n    });\n  };\n};\n\nexport const unBlockUserToSystem = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<BlockUserToSystem>({\n      type: ActionTypes.UNBLOCK_USER_TO_SYSTEM,\n      payload: data,\n    });\n  };\n};\n\nexport const assignRoleToUserAccess = (\n  data: AssignRoleToUserActionInterface\n) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<AssignRoleToUserAction>({\n      type: ActionTypes.ASSIGN_ROLE_TO_USER,\n      payload: data,\n      // payload: response.data,\n    });\n  };\n};\n\nexport const customizeUserAccess = (data: CustomeAccessInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CustomizeUserAccessAction>({\n      type: ActionTypes.CUSTOMIZE_USER_ACCESS,\n      payload: data,\n    });\n  };\n};\n\nexport const resetUserAccess = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<ResetUserAccessAction>({\n      type: ActionTypes.RESET_USER_ACCESS,\n      payload: data,\n    });\n  };\n};\n\nexport const verifyAllDocument = (data: VerifyDocumentInterface) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<VerifyAllDocumentAction>({\n      type: ActionTypes.VERIFY_ALL_DOCUMENT,\n      payload: data,\n    });\n  };\n};\n","import React, { useEffect, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport { MdNavigateBefore, MdNavigateNext, MdSearch } from \"react-icons/md\";\n\nconst FC_makeID = (length: number = 5): string => {\n  let result: string = \"\";\n  let characters: string =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  let charactersLength = characters.length;\n  for (let i: number = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\nexport const sortThisColumn = (\n  tableId: string,\n  colIndex: number = 0,\n  dir: \"asc\" | \"desc\" = \"asc\"\n) => {\n  var table,\n    rows,\n    switching,\n    i,\n    x,\n    y,\n    shouldSwitch,\n    switchcount = 0;\n  table = document.getElementById(tableId) as HTMLTableElement;\n  switching = true;\n  /* Make a loop that will continue until\n  no switching has been done: */\n  if (table) {\n    while (switching) {\n      //start by saying: no switching is done:\n      switching = false;\n      rows = table.rows;\n      /*Loop through all table rows (except the\n    first, which contains table headers):*/\n      for (i = 1; i < rows.length - 1; i++) {\n        //start by saying there should be no switching:\n        shouldSwitch = false;\n        /*Get the two elements you want to compare,\n      one from current row and one from the next:*/\n        x = rows[i].getElementsByTagName(\"TD\")[colIndex];\n        y = rows[i + 1].getElementsByTagName(\"TD\")[colIndex];\n        /*check if the two rows should switch place,\n      based on the direction, asc or desc:*/\n        if (dir === \"asc\" && x && y) {\n          if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        } else if (dir === \"desc\" && x && y) {\n          if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        }\n      }\n      if (shouldSwitch && rows[i].parentNode) {\n        /*If a switch has been marked, make the switch\n      and mark that a switch has been done:*/\n        rows[i].parentNode!.insertBefore(rows[i + 1], rows[i]);\n        switching = true;\n        //Each time a switch is done, increase this count by 1:\n        switchcount++;\n      } else {\n        /*If no switching has been done AND the direction is \"asc\",\n      set the direction to \"desc\" and run the while loop again.*/\n        if (switchcount === 0 && dir === \"asc\") {\n          dir = \"desc\";\n          switching = true;\n        }\n      }\n      // if (i === 0) continue;\n      // rows.cells[i].style.backgroundColor = \"blue\";\n    }\n  }\n};\n\nexport interface TableColumnsInterface {\n  columnTitle: JSX.Element | string;\n  alignText: string;\n  padding?: string;\n  isSortAllowed?: boolean;\n}\n\ninterface TableProps {\n  columns: TableColumnsInterface[];\n  rows: Function;\n  hideColumns?: boolean;\n  pagination?: boolean;\n  search?: boolean;\n  tableSize?: string;\n  tableClass?: string;\n  tableId?: string;\n  rounded?: boolean;\n  searchBG?: string;\n  thColor?: string;\n  loading?: boolean;\n}\n\nconst Table: React.FC<TableProps> = ({\n  rows,\n  columns,\n  hideColumns = false,\n  pagination = false,\n  search = false,\n  tableSize = \"w-full\",\n  tableClass,\n  tableId = \"myTable\",\n  rounded = false,\n  searchBG = \"bg-gray-200\",\n  thColor = \"blue\",\n  loading = false,\n}) => {\n  const startPage = 1;\n  tableId = tableId === \"myTable\" ? FC_makeID() : tableId;\n  let table: HTMLElement, tr: HTMLCollectionOf<HTMLTableRowElement>;\n  const [totalItems, setTotalItems] = useState<number>(0);\n  const [totalPages, setTotalPages] = useState<number>(1);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [pages, setPages] = useState<number[]>();\n  const [pageSize, setPageSize] = useState<number>(10);\n  const [startIndex, setStartIndex] = useState<number>(0);\n  const [endIndex, setEndIndex] = useState<number>(0);\n\n  useEffect(() => {\n    pagination && tablePagination();\n  });\n\n  const filterTable = (\n    data: string,\n    filterType?: \"default\" | \"field\"\n  ): void => {\n    var filter, tr, td, rows: number, cols: number, txtValue;\n    if (filterType === \"field\" && data === \"all\") data = \"\";\n    filter = data.toLowerCase();\n    table = document.getElementById(tableId)!;\n    tr = table.getElementsByTagName(\"tr\");\n    for (rows = 0; rows < tr.length; rows++) {\n      for (cols = 0; cols < columns.length; cols++) {\n        td = tr[rows].getElementsByTagName(\"td\")[cols];\n        if (td) {\n          txtValue = td.textContent || td.innerText;\n          if (txtValue.toLowerCase().indexOf(filter) > -1) {\n            tr[rows].style.display = \"\";\n            break;\n          } else {\n            tr[rows].style.display = \"none\";\n          }\n        }\n      }\n    }\n  };\n\n  const tablePagination = (): void => {\n    table = document.getElementById(tableId)!;\n    tr = table.getElementsByTagName(\"tr\");\n    setTotalItems(tr.length);\n    setTotalPages(Math.ceil(totalItems / pageSize));\n\n    // calculate start and end item indexes on the current page\n    setStartIndex((currentPage - 1) * pageSize);\n    setEndIndex(Math.min(startIndex + pageSize - 1, totalItems - 1));\n\n    /**\n     * TODO!\n     * There is a problem with this condition\n     */\n    let _pages = Array.from(Array(totalPages + 1 - startPage).keys()).map(\n      (i) => startPage + i\n    );\n    if (!pages || _pages.length !== pages.length) {\n      setPages(_pages);\n    }\n\n    for (let i: number = 0; i < tr.length; i++) {\n      if (i >= startIndex && i <= endIndex) {\n        tr[i].style.display = \"\";\n      } else {\n        tr[i].style.display = \"none\";\n      }\n    }\n  };\n\n  return (\n    <div className={`${tableSize}`}>\n      {/* search box  */}\n      {search && (\n        <div className={`${searchBG} w-full mb-2`}>\n          {search && (\n            <div className=\"bg-white rounded flex items-center w-full p-2 border-2 border-gray-500\">\n              <MdSearch className=\"h-5 w-5 fill-current text-gray-400\" />\n              <input\n                type=\"search\"\n                placeholder=\"search\"\n                onChange={(e) => filterTable(e.target.value)}\n                className=\"w-full h-6 pl-4 text-sm outline-none focus:outline-none bg-white\"\n                disabled={loading}\n              />\n\n              {pagination && (\n                <div className=\"select\">\n                  <select\n                    className=\"text-base outline-none focus:outline-none bg-white\"\n                    onChange={(e) => setPageSize(Number(e.target.value))}\n                    disabled={loading}\n                  >\n                    <option value=\"10\">10</option>\n                    <option value=\"25\">25</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                  </select>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n      <table\n        className={\n          tableClass\n            ? tableClass\n            : `w-full shadow ${\n                rounded && \"sm:rounded-lg\"\n              } table-auto order-table`\n        }\n        id={tableId}\n      >\n        {!hideColumns && (\n          <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-base\">\n            <tr\n              className={`text-left tracking-wide bg-${thColor}-100 border-b-2 border-${thColor}-500 text-${thColor}-600`}\n            >\n              {columns.map((column, index) => (\n                <th\n                  key={index}\n                  className={`${column.padding} text-${\n                    column.alignText\n                  } px-3 py-2 ${column.isSortAllowed && \"cursor-pointer\"}`}\n                  onClick={() =>\n                    column.isSortAllowed && sortThisColumn(tableId, index)\n                  }\n                >\n                  <div className=\"flex items-center gap-1\">\n                    {column.columnTitle}\n                    {column.isSortAllowed && <BiSort />}\n                  </div>\n                </th>\n              ))}\n            </tr>\n          </thead>\n        )}\n        <tbody id=\"table-data\" className=\"bg-white text-black text-base\">\n          {rows()}\n        </tbody>\n      </table>\n      {pagination && (\n        <div className=\"sm:flex-1 sm:flex sm:items-center sm:justify-between mt-4 work-sans\">\n          <div>\n            <span className=\"text-xs xs:text-sm text-gray-900\">\n              Showing 1 to {pageSize} of {totalItems - 1} Entries\n            </span>\n          </div>\n          <div>\n            <nav className=\"inline-flex shadow-sm\">\n              <div>\n                <button\n                  type=\"button\"\n                  className={`inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 text-sm font-medium text-gray-500 ${\n                    currentPage !== 1 && \"bg-white\"\n                  }`}\n                  aria-label=\"Previous\"\n                  disabled={currentPage === 1 || loading}\n                  onClick={() => setCurrentPage(currentPage - 1)}\n                >\n                  <MdNavigateBefore className=\"h-5 w-5\" />\n                </button>\n              </div>\n              <div>\n                {pages &&\n                  pages.map((page, pageIndex) => (\n                    <button\n                      key={pageIndex}\n                      className={`-ml-px inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium text-gray-700 ${\n                        page !== currentPage\n                          ? \"bg-white\"\n                          : \"bg-gray-100 cursor-default\"\n                      }`}\n                      disabled={page === currentPage || loading}\n                      onClick={() => setCurrentPage(page)}\n                    >\n                      {page}\n                    </button>\n                  ))}\n              </div>\n              <div>\n                <button\n                  type=\"button\"\n                  className={`inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 text-sm leading-5 font-medium text-gray-500 ${\n                    currentPage !== totalPages && \"bg-white\"\n                  }`}\n                  aria-label=\"Next\"\n                  disabled={currentPage === totalPages || loading}\n                  onClick={() => setCurrentPage(currentPage + 1)}\n                >\n                  <MdNavigateNext className=\"h-5 w-5\" />\n                </button>\n              </div>\n            </nav>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Table;\n","import React, { Component, Fragment } from \"react\";\nimport { Link, match, Redirect } from \"react-router-dom\";\nimport {\n  MdAccountCircle,\n  MdClose,\n  MdErrorOutline,\n  MdLockOutline,\n  MdNavigateNext,\n} from \"react-icons/md\";\nimport Table from \"../../components/Table/Table\";\nimport { connect } from \"react-redux\";\nimport { StoreState } from \"../../reducers\";\nimport { Auth } from \"../../actions\";\nimport {\n  SystemUserRoleInterface,\n  UserInterface,\n} from \"../../shared/interfaces\";\nimport { getRoleById } from \"../../shared/dataTest\";\nimport { blockUserToSystem, unBlockUserToSystem } from \"../../actions/users\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  userList: UserInterface[];\n  accessRoles: SystemUserRoleInterface[];\n  blockUserToSystem: Function;\n  unBlockUserToSystem: Function;\n  match: match<{\n    user_id: string;\n  }>;\n}\n\n// states for the component\ninterface AppState {\n  loading: boolean;\n  loadindRequest: boolean;\n  userInfo: UserInterface | null;\n  feedBack: {\n    type: \"success\" | \"danger\" | \"warning\" | \"\";\n    message: string;\n  } | null;\n  error: {\n    target: string;\n    msg: string;\n  };\n  redirect: boolean;\n}\n\nexport class _UserDetails extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      loadindRequest: false,\n      userInfo: null,\n      feedBack: null,\n      error: {\n        target: \"\",\n        msg: \"\",\n      },\n      redirect: false,\n    };\n  }\n\n  componentDidMount = () => {\n    this.setState({\n      loading: true,\n    });\n    const findUser = this.props.userList.filter(\n      (user) => user.user_id === this.props.match.params.user_id\n    );\n    if (findUser.length <= 0) this.setState({ redirect: true });\n    else this.setState({ userInfo: findUser[0], loading: false });\n  };\n\n  tableData = (): JSX.Element[] => {\n    return [\n      <tr\n        key={1 + Math.random()}\n        className=\"border-b wrap border-gray-200 hover:bg-gray-100\"\n      >\n        <td className=\"p-3 text-left\">Names</td>\n        <td className=\"p-3 text-left font-bold\">\n          {this.state.userInfo?.user_info.fname +\n            \" \" +\n            this.state.userInfo?.user_info.lname}\n        </td>\n      </tr>,\n      <tr\n        key={2 + Math.random()}\n        className=\"border-b wrap border-gray-200 hover:bg-gray-100\"\n      >\n        <td className=\"p-3 text-left\">NID</td>\n        <td className=\"p-3 text-left font-bold\">{this.state.userInfo?.n_id}</td>\n      </tr>,\n      <tr\n        key={3 + Math.random()}\n        className=\"border-b wrap border-gray-200 hover:bg-gray-100\"\n      >\n        <td className=\"p-3 text-left\">Gender</td>\n        <td className=\"p-3 text-left font-bold\">\n          {this.state.userInfo?.user_info.sex === \"M\" ? \"Male\" : \"Female\"}\n        </td>\n      </tr>,\n      <tr\n        key={4 + Math.random()}\n        className=\"border-b wrap border-gray-200 hover:bg-gray-100\"\n      >\n        <td className=\"p-3 text-left\">DOB</td>\n        <td className=\"p-3 text-left font-bold\">\n          {this.state.userInfo?.user_info.date_of_birth}\n        </td>\n      </tr>,\n      <tr\n        key={5 + Math.random()}\n        className=\"border-b wrap border-gray-200 hover:bg-gray-100\"\n      >\n        <td className=\"p-3 text-left\">Email</td>\n        <td className=\"p-3 text-left font-bold\">\n          {this.state.userInfo?.email}\n        </td>\n      </tr>,\n      <tr\n        key={6 + Math.random()}\n        className=\"border-b wrap border-gray-200 hover:bg-gray-100\"\n      >\n        <td className=\"p-3 text-left\">Phone</td>\n        <td className=\"p-3 text-left font-bold\">\n          +{this.state.userInfo?.phone_number}\n        </td>\n      </tr>,\n      <tr\n        key={7 + Math.random()}\n        className=\"border-b wrap border-gray-200 hover:bg-gray-100\"\n      >\n        <td className=\"p-3 text-left\">Address</td>\n        <td className=\"p-3 text-left font-bold\">\n          {this.state.userInfo?.user_info.province} /{\" \"}\n          {this.state.userInfo?.user_info.district} /{\" \"}\n          {this.state.userInfo?.user_info.sector}\n        </td>\n      </tr>,\n    ];\n  };\n\n  blockUser = (\n    user_id: string,\n    actionType: \"block\" | \"un-block\" = \"block\"\n  ): void => {\n    this.setState({ feedBack: { type: \"\", message: \"\" } });\n    if (!user_id) {\n      this.setState({\n        feedBack: {\n          type: \"warning\",\n          message: `User Access is required doesn't exist`,\n        },\n      });\n    }\n\n    this.setState({ loadindRequest: true });\n\n    if (!window.confirm(`Are sure you want to ${actionType} this user?`)) {\n      return this.setState({ loadindRequest: false });\n    }\n    actionType === \"block\"\n      ? this.props.blockUserToSystem(user_id)\n      : this.props.unBlockUserToSystem(user_id);\n\n    this.setState({\n      feedBack: {\n        type: \"success\",\n        message: `User has been ${actionType}ed!`,\n      },\n      loadindRequest: false,\n    });\n    user_id = \"\";\n  };\n\n  render() {\n    if (!this.state.loading && this.state.redirect === true) {\n      return <Redirect to=\"/users\" />;\n    }\n    if (this.state.loading === true || this.state.userInfo === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading User Details...\n        </div>\n      );\n    }\n\n    return (\n      <Fragment>\n        <div className=\"container mx-auto p-5\">\n          {this.state.feedBack && this.state.feedBack.type !== \"\" && (\n            <div\n              className={`alert-${this.state.feedBack.type} flex flex-row items-center relative mb-3`}\n            >\n              <span className=\"absolute top-0 bottom-0 right-0 px-4 py-3\">\n                <MdClose\n                  className=\"h-5 w-5 text-gray-700 hover:font-bold\"\n                  title=\"Close\"\n                  onClick={() =>\n                    this.setState({ feedBack: { type: \"\", message: \"\" } })\n                  }\n                />\n              </span>\n              <MdErrorOutline className=\"h-10 w-10\" />\n              <div className=\"alert-content ml-4\">\n                <div className=\"alert-title font-semibold text-lg\">\n                  {this.state.feedBack.type === \"success\" ? \"Success\" : \"Error\"}\n                </div>\n                <div className=\"alert-description text-sm\">\n                  {this.state.feedBack.message}\n                </div>\n              </div>\n            </div>\n          )}\n          <div className=\"w-full\">\n            <div className=\"bg-blue-700 flex items-center w-full text-gray-100 gap-1 py-3 px-3 mb-3\">\n              <Link to=\"/users\" className=\"uppercase\">\n                Users\n              </Link>\n              <MdNavigateNext className=\"w-7 h-5\" />\n              <span className=\"\">{this.state.userInfo.user_info.lname}</span>\n            </div>\n            <div className=\"w-full flex items-center bg-white flex-col md:flex-row md:items-start\">\n              {/* left part */}\n              <div className=\"w-1/4 flex flex-col text-center\">\n                <div className=\"image overflow-hidden\">\n                  {this.state.userInfo.user_info.photo &&\n                  this.state.userInfo.user_info.photo !== \"pic\" ? (\n                    <img\n                      className=\"h-auto w-7/12 mx-auto rounded-full\"\n                      src={this.state.userInfo.user_info.photo}\n                      alt=\"\"\n                    />\n                  ) : (\n                    <MdAccountCircle className=\"w-28 h-28 mx-auto\" />\n                  )}\n                </div>\n\n                <div className=\"flex justify-center my-2\">\n                  <h3 className=\"text-gray-800 text-xl text-bold uppercase\">\n                    {this.state.userInfo.default_access &&\n                      getRoleById(\n                        this.props.accessRoles,\n                        this.state.userInfo.default_access.system_user_role_id\n                      )?.role}\n                  </h3>\n                </div>\n\n                <div className=\"my-1\">\n                  {this.state.userInfo.is_active === false ? (\n                    <span className=\"bg-red-700 py-1 px-2 rounded text-white text-sm\">\n                      Blocked\n                    </span>\n                  ) : (\n                    <span className=\"bg-green-700 py-1 px-2 rounded text-white text-sm\">\n                      Active\n                    </span>\n                  )}\n                </div>\n\n                <div className=\"flex flex-col items-center mt-3 gap-2\">\n                  <div>\n                    <Link\n                      className=\"btn text-green-700 border-green-700 md:border-2 hover:bg-green-700 hover:text-white transition ease-out duration-500 flex items-center\"\n                      title=\"View User Profile\"\n                      to={`/users/access/${this.props.match.params.user_id}`}\n                    >\n                      <MdLockOutline />\n                      User Access\n                    </Link>\n                  </div>\n\n                  <div>\n                    <button\n                      className=\"\n                  btn\n                  text-red-700\n                  border-red-700\n                  md:border-2\n                  hover:bg-red-700\n                  hover:text-white\n                  transition\n                  ease-out\n                  duration-500\n                  flex items-center\n                \"\n                      title=\"Block User Account\"\n                      onClick={() =>\n                        !this.state.loadindRequest &&\n                        this.state.userInfo &&\n                        this.blockUser(this.state.userInfo.user_id)\n                      }\n                    >\n                      <MdLockOutline />\n                      Disable user\n                    </button>\n                  </div>\n                </div>\n              </div>\n              {/* end left part */}\n\n              {/* right part */}\n              <div className=\"w-3/4 flex flex-col p-3 border-dashed md:border-l md:border-t-0 border-t-2 md:border-gray-300\">\n                <div className=\"border-b border-gray-400 text-4xl font-semibold text-gray-700 py-2\">\n                  {this.state.userInfo.user_info.lname}'s details\n                </div>\n\n                <Table\n                  columns={[\n                    { columnTitle: \"Names\", alignText: \"left\", padding: \"p-3\" },\n                    { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n                  ]}\n                  rows={this.tableData}\n                  pagination={false}\n                  hideColumns={true}\n                  search={false}\n                />\n              </div>\n              {/* end right part */}\n            </div>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  users,\n  access,\n}: StoreState): {\n  auth: Auth;\n  userList: UserInterface[];\n  accessRoles: SystemUserRoleInterface[];\n} => {\n  return { auth: auth, userList: users, accessRoles: access.accessRoles };\n};\n\nexport const UserDetails = connect(mapStateToProps, {\n  blockUserToSystem,\n  unBlockUserToSystem,\n})(_UserDetails);\n"],"sourceRoot":""}
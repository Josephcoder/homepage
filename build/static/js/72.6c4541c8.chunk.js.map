{"version":3,"sources":["containers/district/index.tsx"],"names":["defaultColumns","columnTitle","alignText","padding","editColumns","_District","props","setTableColumns","data","setState","tableColumns","setModalState","value","modalState","setFilterByPosition","filterByPosition","setInstituteId","institute_id","setCategoryId","category_id","setQualificationId","qualification_id","setLoadingRequest","loadingRequest","setLoading","loading","setLoadingPost","loadingPost","setThisPost","thisPost","setThisPostTable","thisPostTable","setConfirmedPosts","confirmedPosts","setLeftPlacement","leftPlacements","setViewPost","viewPost","setApprovedPosts","approvedPosts","setFormError","formError","setSelectedPostId","selectedPostId","assignConfirmedPost","postRequests","limit","getLimitations","districtPlacementLimits","post_id","requested_post","distributed","general","PushPopupAlert","title","theme","PopupAlertTheme","warning","state","postIndex","findIndex","item","requested_post_id","confirmed_posts","approval_date","Date","push","confirmed_by","auth","user","user_id","description","requested_post_status","PostRequestStatusInterface","CONFIRMED","getAssignedValuePost","postId","result","find","loadData","sessionId","document","documentCategory","getDocumentCategory","documentSubCategory","getDocumentSubCategory","systemPositions","education_institution_id","FC_GetPositionsByInstitution","status","msg","console","log","length","danger","districtPosts","fetchDistrictPosts","user_access","district_id","message","error","districtPlacements","getDistrictPlacement","schoolLevels","education_categories","loadEducationCategories","getDistrictPlacementLimit","componentDidMount","isEmptyOrSpaces","activeAcademicSession","getActiveAcademicSession","loadingCandidatesError","_id","doPlacement","a","axios","post","API","PLACEMENT","school_id","position_id","request_id","res","msgAlert","success","info","doPlacement_reply","errorToText","reDoPlacement","occupied_posts","received_posts","generateDataForSchoolRequest","school_ids","requests","posts","forEach","confirmed","includes","schoolIndex","available_places","requested_teacher","school","school_name","sector_id","province_id","gender","male_number","female_number","addSchoolRequest","dataForm","requested_teachers","addSchoolRequest_reply","submitRequest","element","patch","confirmedPost","post_relpy","filterQualifications","allData","categoryId","filter","generateFormData","neededPositions","subcategory_id","education_institute_id","thisPosition","position_name","position_title","female","male","needed_posts","distributed_post","total_post","total_staff","new_teacher","vacant_post","getAllowedPlacementByDegree","allLimits","degree","session","thisLimit","institution_id","post_request_session_id","confirmed_post","currentPostId","_withExcept","_withoutExcept","postRequest","fromForm","undefined","allDistributed","tableData","className","colSpan","NoResultThemes","Dark","dataTable","map","schoolPost","index","type","autoFocus","onChange","e","Number","target","onFocus","disabled","INITIATED","RECEIVED","onClick","this","to","institute","education_category_title","category","user_detail_category_id","qualification","user_detail_subcategory_id","columns","rows","pagination","search","thColor","backDrop","Themes","default","close","displayClose","backDropClose","widthSizeClass","ModalSize","large","body","footer","getPositionById","DATE","request_date","toString","onSubmit","min","max","placeholder","extraLarge","id","getPlacementByRequest","PlacedCandidateStatus","REJECTED","showRequestStatus","PLACED","PENDING","isGuest","Component","District","connect","schools","system_settings","sessionPlan","updateSchoolPost"],"mappings":"+gBAkDMA,EAA0C,CAC9C,CAAEC,YAAa,SAAUC,UAAW,OAAQC,QAAS,OACrD,CAAEF,YAAa,WAAYC,UAAW,OAAQC,QAAS,OACvD,CAAEF,YAAa,YAAaC,UAAW,OAAQC,QAAS,OACxD,CAAEF,YAAa,YAAaC,UAAW,OAAQC,QAAS,OACxD,CACEF,YAAa,kBACbC,UAAW,OACXC,QAAS,OAEX,CACEF,YAAa,iBACbC,UAAW,OACXC,QAAS,OAEX,CAAEF,YAAa,YAAaC,UAAW,OAAQC,QAAS,OACxD,CAAEF,YAAa,YAAaC,UAAW,OAAQC,QAAS,OACxD,CAAEF,YAAa,YAAaC,UAAW,OAAQC,QAAS,OACxD,CACEF,YAAa,eACbC,UAAW,OACXC,QAAS,OAGX,CAAEF,YAAa,GAAIC,UAAW,OAAQC,QAAS,QAE3CC,EAAuC,CAC3C,CAAEH,YAAa,SAAUC,UAAW,OAAQC,QAAS,OACrD,CAAEF,YAAa,WAAYC,UAAW,OAAQC,QAAS,OACvD,CAAEF,YAAa,YAAaC,UAAW,OAAQC,QAAS,OACxD,CAAEF,YAAa,YAAaC,UAAW,OAAQC,QAAS,OACxD,CACEF,YAAa,kBACbC,UAAW,OACXC,QAAS,OAEX,CACEF,YAAa,iBACbC,UAAW,OACXC,QAAS,OAEX,CAAEF,YAAa,GAAIC,UAAW,OAAQC,QAAS,QAkGpCE,EAAb,kDACE,WAAYC,GAAkB,IAAD,8BAC3B,cAAMA,IAuBRC,gBAAkB,SAACC,GACjB,EAAKC,SAAS,CAAEC,aAAcF,KAzBH,EA4B7BG,cAAgB,SAACC,GACf,EAAKH,SAAS,CAAEI,WAAYD,KA7BD,EAgC7BE,oBAAsB,SAACF,GACrB,EAAKH,SAAS,CAAEM,iBAAkBH,KAjCP,EAoC7BI,eAAiB,SAACJ,GAChB,EAAKH,SAAS,CAAEQ,aAAcL,KArCH,EAwC7BM,cAAgB,SAACN,GACf,EAAKH,SAAS,CAAEU,YAAaP,KAzCF,EA4C7BQ,mBAAqB,SAACR,GACpB,EAAKH,SAAS,CAAEY,iBAAkBT,KA7CP,EAgD7BU,kBAAoB,SAACV,GACnB,EAAKH,SAAS,CAAEc,eAAgBX,KAjDL,EAoD7BY,WAAa,SAACZ,GACZ,EAAKH,SAAS,CAAEgB,QAASb,KArDE,EAwD7Bc,eAAiB,SAACd,GAChB,EAAKH,SAAS,CAAEkB,YAAaf,KAzDF,EA4D7BgB,YAAc,SAAChB,GACb,EAAKH,SAAS,CAAEoB,SAAUjB,KA7DC,EAgE7BkB,iBAAmB,SAAClB,GAClB,EAAKH,SAAS,CAAEsB,cAAenB,KAjEJ,EAoE7BoB,kBAAoB,SAACpB,GACnB,EAAKH,SAAS,CAAEwB,eAAgBrB,KArEL,EAwE7BsB,iBAAmB,SAAC1B,GAClB,EAAKC,SAAS,CAAE0B,eAAgB3B,KAzEL,EA4E7B4B,YAAc,SAACxB,GACb,EAAKH,SAAS,CAAE4B,SAAUzB,KA7EC,EAgF7B0B,iBAAmB,SAAC1B,GAClB,EAAKH,SAAS,CAAE8B,cAAe3B,KAjFJ,EAoF7B4B,aAAe,SACb5B,GAKA,EAAKH,SAAS,CAAEgC,UAAW7B,KA1FA,EA6F7B8B,kBAAoB,SAAClC,GACnB,EAAKC,SAAS,CAAEkC,eAAgBnC,KA9FL,EAiG7BoC,oBAAsB,SACpBf,EACAjB,EACAiC,GAEA,IAAIrC,EAA4B,GAC1BsC,EAAQ,EAAKC,eACjBF,EACA,EAAKvC,MAAM0C,wBACXnB,EAASoB,SAEX,GACErC,EAAQiB,EAASqB,gBACjBJ,EAAMK,YAAcvC,EAAQkC,EAAMM,QAElC,OAAO,EAAK9C,MAAM+C,eAAe,CAC/BC,MAAM,mBACNC,MAAOC,IAAgBC,UAE3B,GAAI,EAAKC,MAAMzB,eAAgB,CAE7B,IAAM0B,GADNnD,EAAI,YAAO,EAAKkD,MAAMzB,iBACC2B,WACrB,SAACC,GAAD,OAAUA,EAAKC,oBAAsBjC,EAASoB,WAE5CU,GAAa,GACfnD,EAAKmD,GAAWI,gBAAkBnD,EAClCJ,EAAKmD,GAAWK,cAAgB,IAAIC,MAEpCzD,EAAK0D,KAAK,CACRJ,kBAAmBjC,EAASoB,QAC5Bc,gBAAiBnD,EACjBuD,aAAc,EAAK7D,MAAM8D,KAAKC,KAAKC,QACnCN,cAAe,IAAIC,KACnBM,YAAa,cACbC,sBAAuBC,IAA2BC,iBAItDlE,EAAK0D,KAAK,CACRJ,kBAAmBjC,EAASoB,QAC5Bc,gBAAiBnD,EACjBuD,aAAc,EAAK7D,MAAM8D,KAAKC,KAAKC,QACnCN,cAAe,IAAIC,KACnBM,YAAa,cACbC,sBAAuBC,IAA2BC,YAGtD,EAAK1C,kBAAkBxB,IAhJI,EAmJ7BmE,qBAAuB,SAACC,GACtB,IAAIC,EAAiB,EACrB,GAAI,EAAKnB,MAAMzB,eAAgB,CAC7B,IAAMJ,EAAW,EAAK6B,MAAMzB,eAAe6C,MACzC,SAACjB,GAAD,OAAUA,EAAKC,oBAAsBc,KAEnC/C,IAAUgD,EAAShD,EAASkC,iBAElC,OAAOc,GA3JoB,EA8J7BE,SAAW,SAACC,GACL,EAAK1E,MAAM2E,SAASC,kBACvB,EAAK5E,MAAM6E,sBAER,EAAK7E,MAAM2E,SAASG,qBACvB,EAAK9E,MAAM+E,yBAGoB,OAA/B,EAAK/E,MAAMgF,iBACX,EAAKhF,MAAM8D,KAAKmB,2BAEhB,EAAK/D,YAAW,GAChB,EAAKlB,MAAMkF,6BACT,EAAKlF,MAAM8D,KAAKmB,0BAChB,SAACE,EAAiBC,GAChB,EAAKlE,WAAWiE,GAChBE,QAAQC,IAAI,CAAEH,OAAQA,EAAQC,IAAKA,IAC/BA,EAAIG,QACN,EAAKvF,MAAM+C,eAAe,CACxBC,MAAOoC,EACPnC,MAAOC,IAAgBsC,cAM5B,EAAKxF,MAAMyF,cAAcF,QAAU,EAAKnC,MAAM/B,YACjD,EAAKrB,MAAM0F,mBACT,EAAK1F,MAAM8D,KAAK6B,YAAYC,aAC5B,SAACT,EAAiBU,GAChB,EAAKzE,eAAe+D,GACfA,GACCU,EAAQN,OAAS,GAAK,EAAKnC,MAAM/B,cACnCgE,QAAQS,MAAM,8BAA+BD,GAC7C,EAAK7F,MAAM+C,eAAe,CACxBC,MAAO6C,EACP5C,MAAOC,IAAgBsC,aAMxB,EAAKpC,MAAM/B,aACpB,EAAKD,gBAAe,GAGjB,EAAKpB,MAAM+F,mBAgBL,EAAK3C,MAAMjC,SACpB,EAAKD,YAAW,GAhBhB,EAAKlB,MAAMgG,qBACT,EAAKhG,MAAM8D,KAAK6B,YAAYC,aAC5B,SAACT,EAAiBU,GAChB,EAAK3E,WAAWiE,GACXA,GACCU,EAAQN,OAAS,GAAKJ,IACxBE,QAAQS,MAAM,8BAA+BD,GAC7C,EAAK7F,MAAM+C,eAAe,CACxBC,MAAO6C,EACP5C,MAAOC,IAAgBsC,aAUgB,OAAjD,EAAKxF,MAAMiG,aAAaC,sBACgC,IAAxD,EAAKlG,MAAMiG,aAAaC,qBAAqBX,SAE7C,EAAKrE,YAAW,GAChB,EAAKlB,MAAMmG,wBAAwB,EAAKjF,aAErC,EAAKlB,MAAM0C,wBAoBL,EAAKU,MAAMjC,SACpB,EAAKD,YAAW,GApBhB,EAAKlB,MAAMoG,0BACT,EAAKpG,MAAM8D,KAAK6B,YAAYC,YAC5BlB,GACA,SAACS,EAAiBU,GAChB,EAAK3E,WAAWiE,GACXA,GACCU,EAAQN,OAAS,GAAKJ,IACxBE,QAAQS,MACN,4CACAD,GAEF,EAAK7F,MAAM+C,eAAe,CACxBC,MAAO6C,EACP5C,MAAOC,IAAgBsC,cApPR,EA+P7Ba,kBAAoB,WACbC,YAAgB,EAAKtG,MAAM8D,KAAK6B,YAAYC,eAER,OAArC,EAAK5F,MAAMuG,uBAC0B,SAArC,EAAKvG,MAAMuG,sBAEX,EAAKvG,MAAMwG,0BACT,SACErB,EACAC,EACAlF,GAEA,EAAKgB,WAAWiE,GACZC,EAAIG,OAAS,IACfF,QAAQS,MAAM,CAAEW,uBAAwBrB,IACxC,EAAKpF,MAAM+C,eAAe,CACxBC,MAAOoC,EACPnC,MAAOC,IAAgBsC,UAGvBtF,GAAiB,SAATA,GAAiB,EAAKuE,SAASvE,EAAKwG,QAG/C,EAAKjC,SAAS,EAAKzE,MAAMuG,sBAAsBG,OAtR7B,EA0R7BC,YA1R6B,uCA0Rf,WAAOpF,GAAP,iBAAAqF,EAAA,+EAEQC,IAAMC,KAAN,UACbC,IAAIC,UADS,oBACYzF,EAAS0F,UADrB,YACkC1F,EAAS2F,aAC3D,CAAEC,WAAY5F,EAASmF,MAJf,QAEJU,EAFI,UAQR/B,QAAQC,IAAI,wCACZD,QAAQC,IAAI,CAAEqB,YAAaS,IAC3B/B,QAAQC,IAAI,wCACZ,EAAKtF,MAAM0F,mBACT,EAAK1F,MAAM8D,KAAK6B,YAAYC,aAC5B,SAACT,EAAiBU,GACXV,IACCU,EAAQN,OAAS,GAAK,EAAKnC,MAAM/B,cACnCgE,QAAQS,MAAM,8BAA+BD,GAC7C,EAAK7F,MAAM+C,eAAe,CACxBC,MAAO6C,EACP5C,MAAOC,IAAgBsC,UAG3B,EAAKpE,gBAAe,OAKtBiG,EAAmB,GAGnBA,EAFAD,EAAIlH,KAAKqF,OAAS,EAChB6B,EAAIlH,KAAKqF,SAAW,EAAKnC,MAAMnB,cACtB,iDAEH,UAAMmF,EAAIlH,KAAKqF,OAAf,eAA4B,EAAKnC,MAAMnB,cAAvC,uCAGC,yDAGb,EAAKX,YAAY,MACjB,EAAKU,iBAAiB,GACtB,EAAK3B,cAAc,MACnB,EAAKmB,iBAAiB,MACtB,EAAKvB,gBAAgBP,GACrB,EAAK0C,kBAAkB,IACvB,EAAKV,kBAAkB,MACvB,EAAK1B,MAAM+C,eAAe,CACxBC,MAAOqE,EACPpE,MACEmE,EAAIlH,KAAKqF,OAAS,EACdrC,IAAgBoE,QAChBpE,IAAgBqE,QAlDhB,gDAsDVlC,QAAQS,MAAM,CAAE0B,kBAAkB,EAAD,KACjC,EAAKxH,MAAM+C,eAAe,CACxBC,MAAOyE,YAAY,EAAD,IAClBxE,MAAOC,IAAgBsC,SAzDf,yDA1Re,wDAwV7BkC,cAxV6B,uCAwVb,WAAOnG,GAAP,iBAAAqF,EAAA,+EAEMC,IAAMC,KAAN,UACbC,IAAIC,UADS,oBACYzF,EAAS0F,UADrB,YACkC1F,EAAS2F,aAC3D,CAAEC,WAAY5F,EAASmF,MAJb,QAENU,EAFM,UAQV/B,QAAQC,IAAI,wCACZD,QAAQC,IAAI,CAAEoC,cAAeN,IAC7B/B,QAAQC,IAAI,wCACZ,EAAKtF,MAAM0F,mBACT,EAAK1F,MAAM8D,KAAK6B,YAAYC,aAC5B,SAACT,EAAiBU,GACXV,IACCU,EAAQN,OAAS,GAAK,EAAKnC,MAAM/B,cACnCgE,QAAQS,MAAM,8BAA+BD,GAC7C,EAAK7F,MAAM+C,eAAe,CACxBC,MAAO6C,EACP5C,MAAOC,IAAgBsC,UAG3B,EAAKpE,gBAAe,OAKtBiG,EAAmB,GAGnBA,EAFAD,EAAIlH,KAAKqF,OAAS,EAChB6B,EAAIlH,KAAKqF,SAAW,EAAKnC,MAAMnB,cACtB,iDAEH,UAAMmF,EAAIlH,KAAKqF,OAAf,eACNhE,EAASoG,eACLpG,EAASoG,gBACRpG,EAASqG,eAAiBrG,EAASqG,eAAiB,GACrD,EAJE,uCASR,iEAGJ,EAAK5H,MAAM+C,eAAe,CACxBC,MAAOqE,EACPpE,MACEmE,EAAIlH,KAAKqF,OAAS,EACdrC,IAAgBoE,QAChBpE,IAAgBqE,QAjDd,gDAqDZlC,QAAQS,MAAM,CAAE0B,kBAAkB,EAAD,KACjC,EAAKxH,MAAM+C,eAAe,CACxBC,MAAOyE,YAAY,EAAD,IAClBxE,MAAOC,IAAgBsC,SAxDb,yDAxVa,wDAqZ7BqC,6BAA+B,SAC7BlG,GAEA,IAAImG,EAAuB,GACzBC,EAAuC,GACvCC,EAA+B,GA4CjC,OA1CI,EAAKhI,MAAMyF,eACb9D,EAAesG,SAAQ,SAACC,GACtB,IAAM3G,EAAW,EAAKvB,MAAMyF,cAAcjB,MACxC,SAACjB,GAAD,OAAUA,EAAKmD,MAAQwB,EAAU1E,qBAEnC,GAAIjC,EAEF,GADAyG,EAAMpE,KAAKrC,GACPuG,EAAWK,SAAS5G,EAAS0F,WAAY,CAC3C,IAAMmB,EAAcL,EAASzE,WAC3B,SAACC,GAAD,OAAUA,EAAK0D,YAAc1F,EAAS0F,aAElBc,EACpBK,GACAC,iBAAiB/E,WACjB,SAACC,GAAD,OAAUA,EAAK2D,cAAgB3F,EAAS2F,eAEtB,GAClBa,EAASK,GAAaC,iBAAiBzE,KAAK,CAC1CsD,YAAa3F,EAAS2F,YACtBoB,kBAAmBJ,EAAUzE,uBAIjCsE,EAASnE,KAAK,CACZqD,UAAW1F,EAASgH,OAAO7B,IAC3B8B,YAAajH,EAASgH,OAAOC,YAC7BrB,WAAY5F,EAASmF,IACrBd,YAAarE,EAASqE,YACtB6C,UAAWlH,EAASgH,OAAOE,UAC3BC,YAAanH,EAASgH,OAAOG,YAC7BC,OAAQpH,EAASqH,YAAcrH,EAASsH,cAAgB,IAAM,IAC9DR,iBAAkB,CAChB,CACEnB,YAAa3F,EAAS2F,YACtBoB,kBAAmBJ,EAAUzE,uBAQpC,CAAEsE,WAAUC,UAtcQ,EAyc7Bc,iBAzc6B,uCAycV,WACjBC,EACAxH,GAFiB,iBAAAqF,EAAA,6DAsBb1G,EAAO,CAAE8I,mBAAoBD,GAtBhB,kBAyBGlC,IAAMC,KAAN,UAAcC,IAAIC,UAAlB,qBAAgD9G,GAzBnD,YAyBTkH,EAzBS,gCA4Bb/B,QAAQC,IAAI,wCACZD,QAAQC,IAAI,CAAEwD,iBAAkB1B,IAChC/B,QAAQC,IAAI,wCA9BC,UA+BP,EAAKqB,YAAYpF,EAAS,IA/BnB,0DAkCf8D,QAAQS,MAAM,CAAEmD,uBAAuB,EAAD,KACtC,EAAKjJ,MAAM+C,eAAe,CACxBC,MAAOyE,YAAY,EAAD,IAClBxE,MAAOC,IAAgBsC,SArCV,0DAzcU,0DAmf7B0D,cAnf6B,sBAmfb,sBAAAtC,EAAA,yDAMT,EAAKxD,MAAMzB,gBAAuD,IAArC,EAAKyB,MAAMzB,eAAe4D,OAN9C,yCAOL,EAAKrD,aAAa,CACvBiH,QAAS,iBACT/D,IAAK,qCATK,UAoBd,EAAKpE,mBAAkB,GApBT,SAsBkB,YAA1B,EAAKoC,MAAM7C,WAtBH,iCAuBQsG,IAAMuC,MAAN,UACbrC,IAAIC,UADS,2BAEhB,CAAEqC,cAAe,EAAKjG,MAAMzB,iBAzBpB,oDA8BF,EAAKmH,iBACT,EAAKjB,6BAA6B,EAAKzE,MAAMzB,gBAC1CoG,SACH,EAAKF,6BAA6B,EAAKzE,MAAMzB,gBAAgBqG,OAjCvD,0DAsCZ3C,QAAQS,MAAM,CAAEwD,WAAW,EAAD,KAC1B,EAAKtJ,MAAM+C,eAAe,CACxBC,MAAOyE,YAAY,EAAD,IAClBxE,MAAOC,IAAgBsC,SAzCb,QA4Cd,EAAKxE,mBAAkB,GA5CT,0DAnfa,EAkiB7BuI,qBAAuB,SACrBC,EACAC,GAEA,IAAIlF,EAAyCiF,EAI7C,OAFKlD,YAAgBmD,KACnBlF,EAASiF,EAAQE,QAAO,SAACnG,GAAD,OAAUA,EAAK1C,cAAgB4I,MAClDlF,GA1iBoB,EA6iB7BoF,iBAAmB,SACjBhJ,EACAI,GAEA,IAAIwD,EAAiC,KAErC,IACG+B,YAAgB3F,KAChB2F,YAAgBvF,IACjB,EAAKf,MAAMgF,iBACX,EAAKhF,MAAMyF,cACX,CAEA,IAAMmE,EAAkB,EAAK5J,MAAMgF,gBAAgB0E,QACjD,SAACnG,GAAD,OACEA,EAAKsG,iBAAmB9I,GACxBwC,EAAKuG,uBAAuBA,yBAA2BnJ,KAI3D,EAAKX,MAAMyF,cAAcwC,SAAQ,SAACnB,GAChC,IAAMiD,EAAeH,EAAgBpF,MACnC,SAACjB,GAAD,OAAUA,EAAK2D,cAAgBJ,EAAKI,eAElC6C,IACa,OAAXxF,EACFA,EAAS,CACP,CACE5B,QAASmE,EAAKJ,IACdO,UAAWH,EAAKG,UAChBuB,YAAa1B,EAAKyB,OAAOC,YACzBtB,YAAa6C,EAAa7C,YAC1B8C,cAAeD,EAAaE,eAC5BC,OAAQpD,EAAK+B,cACbsB,KAAMrD,EAAK8B,YACXhG,eAAgBkE,EAAKsD,aACrBC,iBAAkBvD,EAAKrD,gBACnBqD,EAAKrD,gBACL,EACJ6G,WACExD,EAAK+B,cACL/B,EAAK8B,aACJ9B,EAAKrD,gBAAkBqD,EAAKrD,gBAAkB,GACjD8G,YACEzD,EAAK+B,cACL/B,EAAK8B,aACJ9B,EAAKc,eAAiBd,EAAKc,eAAiB,GAC/C4C,YAAa1D,EAAKc,eAAiBd,EAAKc,eAAiB,EACzD6C,aACG3D,EAAKrD,gBAAkBqD,EAAKrD,gBAAkB,IAC9CqD,EAAKc,eAAiBd,EAAKc,eAAiB,GAC/CzC,OAAQ2B,EAAK5C,wBAIjBK,EAAOX,KAAK,CACVjB,QAASmE,EAAKJ,IACdO,UAAWH,EAAKG,UAChBuB,YAAa1B,EAAKyB,OAAOC,YACzBtB,YAAa6C,EAAa7C,YAC1B8C,cAAeD,EAAaE,eAC5BC,OAAQpD,EAAK+B,cACbsB,KAAMrD,EAAK8B,YACXhG,eAAgBkE,EAAKsD,aACrBC,iBAAkBvD,EAAKrD,gBAAkBqD,EAAKrD,gBAAkB,EAChE6G,WACExD,EAAK+B,cACL/B,EAAK8B,aACJ9B,EAAKrD,gBAAkBqD,EAAKrD,gBAAkB,GACjD8G,YACEzD,EAAK+B,cACL/B,EAAK8B,aACJ9B,EAAKc,eAAiBd,EAAKc,eAAiB,GAC/C4C,YAAa1D,EAAKc,eAAiBd,EAAKc,eAAiB,EACzD6C,aACG3D,EAAKrD,gBAAkBqD,EAAKrD,gBAAkB,IAC9CqD,EAAKc,eAAiBd,EAAKc,eAAiB,GAC/CzC,OAAQ2B,EAAK5C,4BAOvB,OAAOK,GAjoBoB,EAooB7BmG,4BAA8B,SAC5BC,EACAC,GAEA,IAAIrG,EAAiB,EACjBsG,EACF,EAAK7K,MAAMuG,uBAC0B,SAArC,EAAKvG,MAAMuG,sBACP,EAAKvG,MAAMuG,sBAAuBG,IAClC,GACAoE,EAAYH,EAAUnG,MAC1B,SAACjB,GAAD,OACEA,EAAKwH,iBAAmB,EAAK3H,MAAMzC,cACnC4C,EAAKsG,iBAAmBe,GACxBrH,EAAKyH,0BAA4BH,KAGrC,OADIC,IAAWvG,EAASuG,EAAUG,gBAC3B1G,GArpBoB,EAwpB7B9B,eAAiB,SACfF,EACAoI,GAEI,IADJO,EACG,uDADqB,GAEpBpI,EAAkB,EACpBqI,EAAsB,EACtBC,EAAyB,EACrBN,EAAYH,EAAUnG,MAC1B,SAACjB,GAAD,OACEA,EAAKwH,iBAAmB,EAAK3H,MAAMzC,cACG,SAAtC,EAAKX,MAAMuG,uBACXhD,EAAKyH,0BACH,EAAKhL,MAAMuG,sBAAuBG,KACpCnD,EAAKsG,iBAAmB,EAAKzG,MAAMrC,oBAqBvC,OAnBA+B,EAAUgI,EAAYA,EAAUG,eAAiB,GACnC,GACZ1I,EAAa0F,SAAQ,SAACoD,GACpB,IAAMC,EAAW,EAAKlI,MAAMzB,eACxB,EAAKyB,MAAMzB,eAAe6C,MACxB,SAACjB,GAAD,OAAUA,EAAKC,oBAAsB6H,EAAY1I,gBAEnD4I,EACAF,EAAY1I,UAAYuI,EAC1BC,GAAeE,EAAYf,WAAae,EAAYhB,iBAEpDc,GACEE,EAAYf,WACZe,EAAYhB,kBACXiB,EAAWA,EAAU7H,gBAAkB,GAC5C2H,GACEC,EAAYf,YAAcgB,EAAWA,EAAU7H,gBAAkB,MAGhE,CACLX,UACAD,YAAasI,EACbK,eAAgBJ,IA9rBS,EAksB7BK,UAAY,WACV,GAAI,EAAKrI,MAAM/B,aAAsD,OAAvC,EAAKrB,MAAM0C,wBACvC,MAAO,CACL,oBAAYgJ,UAAU,6CAAtB,SACE,oBAAIA,UAAU,kBAAkBC,QAAS,GAAzC,sCADO,IAQb,IACG,EAAKhC,iBACJ,EAAKvG,MAAMzC,aACX,EAAKyC,MAAMrC,kBAGb,MAAO,CACL,oBAAY2K,UAAU,6CAAtB,SACE,oBAAIA,UAAU,kBAAkBC,QAAS,GAAzC,SACE,cAAC,IAAD,CACE1I,MAAO2I,IAAeC,KACtBvL,MAAO,2DAJJ,IAWb,IAAIJ,EAAO,EAAKyJ,iBACd,EAAKvG,MAAMzC,aACX,EAAKyC,MAAMrC,kBAGb,OAAoB,IAAhBb,EAAKqF,OACA,CACL,oBAAYmG,UAAU,6CAAtB,SACE,oBAAIA,UAAU,kBAAkBC,QAAS,GAAzC,4BADO,KAQbtG,QAAQC,IAAI,wCACZD,QAAQC,IAAI,CAAEwG,UAAW5L,IACzBmF,QAAQC,IAAI,wCAELpF,EAAK6L,KAAI,SAACC,EAAYC,GAAb,OACd,qBAEEP,UAAU,mDAFZ,UAIE,oBAAIA,UAAU,sBAAd,SAAqCO,EAAQ,IAC7C,oBAAIP,UAAU,sBAAd,SAAqCM,EAAWxD,cAChD,oBAAIkD,UAAU,sBAAd,SAAqCM,EAAWhC,gBAChD,oBAAI0B,UAAU,0CAAd,SACGM,EAAW9B,SAEd,oBAAIwB,UAAU,0CAAd,SACGM,EAAW7B,OAEd,oBAAIuB,UAAU,0CAAd,SACGM,EAAWpJ,iBAEd,oBAAI8I,UAAU,4CAAd,SACG,EAAKtI,MAAM3B,eAA2C,OAA1B,EAAK2B,MAAM7C,WACtC,uBACE2L,KAAK,SACL5L,MAAO,EAAK+D,qBAAqB2H,EAAWrJ,SAC5C+I,UAAU,gCACVS,UACEH,EAAWrJ,UAAY,EAAKS,MAAM3B,cAAckB,QAElDyJ,SAAU,SAACC,GAAD,OACR,EAAK/J,oBACH0J,EACAM,OAAOD,EAAEE,OAAOjM,OAChBJ,IAGJsM,QAAS,kBAAM,EAAKpK,kBAAkB4J,EAAWrJ,UAEjD8J,SAAU,EAAKrJ,MAAMnC,iBAErB+K,EAAW7G,SAAWhB,IAA2BuI,UACnDV,EAAW3B,iBAEX,OAGF,EAAKjH,MAAM3B,eACX,eAAC,WAAD,WACE,oBAAIiK,UAAU,4CAAd,SACGM,EAAW1B,aAEd,oBAAIoB,UAAU,4CAAd,SACGM,EAAWzB,cAEd,oBAAImB,UAAU,4CAAd,SACGM,EAAW7G,SAAWhB,IAA2BwI,SAC9CX,EAAWxB,YACX,MAEN,oBAAIkB,UAAU,4CAAd,SACGM,EAAW7G,SAAWhB,IAA2BuI,UAC9CV,EAAWvB,YACX,SAIV,qBAAIiB,UAAU,gBAAd,UACGM,EAAWrJ,UAAY,EAAKS,MAAMf,gBACjC,sBAAKqJ,UAAU,0BAAf,UACE,sBACEA,UAAU,4CADZ,UAIE,sBAAMA,UAAU,aAAhB,SACG,EAAKjJ,eACJvC,EACA,EAAKF,MAAM0C,wBACXsJ,EAAWrJ,SACXE,YAAc,EAAKwB,qBAAqB2H,EAAWrJ,WAC/C,IAVV,KAWK,IAED,EAAKF,eACHvC,EACA,EAAKF,MAAM0C,wBACXsJ,EAAWrJ,SACXG,WAGN,wBACE4I,UAAS,yFACP,EAAKtI,MAAMnC,gBAAkB,eAE/B+B,MAAM,eACN4J,QAAS,kBAAM,EAAK1D,iBACpBuD,SAAU,EAAKrJ,MAAMnC,eANvB,SAQI,EAAKmC,MAAMnC,eAA0B,aAAT,SAEhC,wBACEyK,UAAS,yFACP,EAAKtI,MAAMnC,gBAAkB,sBAE/B+B,MAAM,iBACN4J,QAAS,WACP,EAAKpL,iBAAiB,MACtB,EAAKnB,cAAc,MACnB,EAAKJ,gBAAgBP,GACrB,EAAK0C,kBAAkB,IACvB,EAAKV,kBAAkB,OAEzB+K,SAAU,EAAKrJ,MAAMnC,eAZvB,uBAkB0B,OAA7B,EAAKmC,MAAM3B,eAAoD,OAA1B,EAAK2B,MAAM7C,YAC/C,qBAAKmL,UAAU,qCAAf,SACG,EAAKhB,4BACJ,EAAK1K,MAAM0C,wBACX,EAAKU,MAAMrC,kBACT,GACFiL,EAAW7G,SAAWhB,IAA2BuI,WAC/C,wBACEhB,UAAU,eACV1I,MAAM,oBACN4J,QAAS,WACP,EAAKpL,iBAAiBwK,GACtB,EAAK3L,cAAc,WACnB,EAAKJ,gBAAgBH,IANzB,0BAvHLmM,EAAQD,EAAWrJ,cAjvB5B,EAAKS,MAAQ,CACX7C,WAAY,KACZE,iBAAkB,GAClBE,aAAc,GACdE,YAAa,GACbE,iBAAkB,GAClBE,gBAAgB,EAChBE,SAAS,EACTE,aAAa,EACbE,SAAU,KACVQ,UAAU,EACVE,cAAe,EACfI,eAAgB,GAChBF,UAAW,KACXV,cAAe,KACfE,eAAgB,KAChBE,eAAgB,EAChBzB,aAAcV,GApBW,EAD/B,0CAk5BE,WAAU,IAAD,SACP,OAAI4G,YAAgBuG,KAAK7M,MAAM8D,KAAK6B,YAAYC,aACvC,cAAC,IAAD,CAAUkH,GAAG,MAIiB,OAArCD,KAAK7M,MAAMuG,uBAC0B,SAArCsG,KAAK7M,MAAMuG,sBAGT,sBAAKmF,UAAU,oHAAf,UACE,cAAC,IAAD,CAAeA,UAAU,yBACzB,sBAAKA,UAAU,4BAAf,UACE,sBAAMA,UAAU,sCAAhB,wCAGA,sBAAMA,UAAU,UAAhB,mGASJmB,KAAKzJ,MAAMjC,SAAW0L,KAAKzJ,MAAM/B,YAEjC,qBAAKqK,UAAU,kEAAf,6BAOF,gCAEE,sBAAKA,UAAU,uDAAf,UACE,cAAC,IAAD,CAAWA,UAAU,2CACrB,qBAAKA,UAAU,SAAf,SACE,qBAAKA,UAAU,8BAAf,SACE,sBAAKA,UAAU,sCAAf,UACE,oBAAIA,UAAU,qCAAd,8BAGA,qBAAKA,UAAU,uCAAf,SACE,sBAAKA,UAAU,mCAAf,UACE,sBAAMA,UAAU,wBAAhB,+BAGA,sBAAMA,UAAU,sCAAhB,mBACGmB,KAAK7M,MAAMuG,6BADd,aACG,EAAkCvD,uBAajD,sBAAK0I,UAAU,iDAAf,UACE,sBAAKA,UAAU,0DAAf,UAEE,yBACEA,UAAU,oFACVpL,MAAOuM,KAAKzJ,MAAMzC,aAClByL,SAAU,SAACC,GACT,EAAK3L,eAAe2L,EAAEE,OAAOjM,OAC7B,EAAKsB,iBAAiB,IAExB6K,SAC+B,OAA7BI,KAAKzJ,MAAM3B,eACe,OAA1BoL,KAAKzJ,MAAM7C,WATf,UAYE,wBAAQD,MAAM,GAAd,8BACCuM,KAAK7M,MAAMiG,aAAaC,sBACzB2G,KAAK7M,MAAMiG,aAAaC,qBAAqBX,OAAS,EACpDsH,KAAK7M,MAAMiG,aAAaC,qBAAqB6F,KAC3C,SAACgB,EAAWd,GAAZ,OACE,wBAEE3L,MAAOyM,EAAUjD,uBAFnB,SAIGiD,EAAUC,0BAHNf,EAAQ,MAQnB,wBAAQ3L,MAAM,GAAd,mCAKJ,yBACEoL,UAAU,oFACVpL,MAAOuM,KAAKzJ,MAAMvC,YAClBuL,SAAU,SAACC,GAAD,OAAO,EAAKzL,cAAcyL,EAAEE,OAAOjM,QAC7CmM,SAC+B,OAA7BI,KAAKzJ,MAAM3B,eACe,OAA1BoL,KAAKzJ,MAAM7C,WANf,UASE,wBAAQD,MAAM,GAAd,+BACCuM,KAAK7M,MAAM2E,SAASC,kBACrBiI,KAAK7M,MAAM2E,SAASC,iBAAiBW,OAAS,EAC5CsH,KAAK7M,MAAM2E,SAASC,iBAAiBmH,KAAI,SAACkB,EAAUhB,GAAX,OACvC,wBAEE3L,MAAO2M,EAASC,wBAFlB,SAIGD,EAASjK,OAHLiJ,EAAQ,MAOjB,wBAAQ3L,MAAM,GAAd,2CAKJ,yBACEoL,UAAU,oFACVpL,MAAOuM,KAAKzJ,MAAMrC,iBAClBqL,SAAU,SAACC,GACT,EAAKvL,mBAAmBuL,EAAEE,OAAOjM,OACjC,EAAKsB,iBAAiB,IAExB6K,SAC+B,OAA7BI,KAAKzJ,MAAM3B,eACe,OAA1BoL,KAAKzJ,MAAM7C,WATf,UAYE,wBAAQD,MAAM,GAAd,kCACCuM,KAAK7M,MAAM2E,SAASG,qBACrB+H,KAAKtD,qBACHsD,KAAK7M,MAAM2E,SAASG,oBACpB+H,KAAKzJ,MAAMvC,aACX0E,OAAS,EACTsH,KAAKtD,qBACHsD,KAAK7M,MAAM2E,SAASG,oBACpB+H,KAAKzJ,MAAMvC,aACXkL,KAAI,SAACoB,EAAelB,GAAhB,OACJ,wBAEE3L,MAAO6M,EAAcC,2BAFvB,SAIGD,EAAcnK,OAHViJ,EAAQ,MAOjB,wBAAQ3L,MAAM,GAAd,0CAIN,cAAC,IAAD,CACE+M,QAASR,KAAKzJ,MAAMhD,aACpBkN,KAAMT,KAAKpB,UACX8B,YAAY,EACZC,QAAQ,EACRC,QAAQ,YAQXZ,KAAKzJ,MAAM7C,YACVsM,KAAKzJ,MAAM7B,UACXsL,KAAK7M,MAAMgF,iBACT,cAAC,IAAD,CACE0I,UAAU,EACVzK,MAAO0K,IAAOC,QACdC,MAAO,WACL,EAAKvM,YAAY,MACjB,EAAKjB,cAAc,OAErByN,cAAc,EACdC,eAAe,EACf/K,MACE,qBAAK0I,UAAU,mCAAf,SACE,qBAAKA,UAAU,gBAAf,SACE,sBAAMA,UAAU,mCAAhB,8CAMNsC,eAAgBC,IAAUC,MAC1BrO,QAAS,CAAEmD,OAAO,EAAMmL,MAAM,EAAOC,QAAQ,GAnB/C,SAqBE,qBAAK1C,UAAU,yBAAf,SACE,sBAAKA,UAAU,sBAAf,UAEE,qBAAKA,UAAU,iCAAf,SACE,gCACE,kCACE,+BACE,oBAAIA,UAAU,wBAAd,qBACA,oBAAIA,UAAU,yCAAd,SACGmB,KAAKzJ,MAAM7B,SAASgH,OAAOC,iBAGhC,+BACE,oBAAIkD,UAAU,wBAAd,uBACA,oBAAIA,UAAU,yCAAd,SACG2C,YACCxB,KAAK7M,MAAMgF,gBACX6H,KAAKzJ,MAAM7B,SAAS2F,aAElBmH,YACExB,KAAK7M,MAAMgF,gBACX6H,KAAKzJ,MAAM7B,SAAS2F,aACnB+C,eACH,QAGR,+BACE,oBAAIyB,UAAU,wBAAd,oCAGA,oBAAIA,UAAU,yCAAd,SACGmB,KAAKzJ,MAAM7B,SAAS6I,kBAGzB,+BACE,oBAAIsB,UAAU,wBAAd,kCAGA,oBAAIA,UAAU,yCAAd,SACGmB,KAAKzJ,MAAM7B,SAASoG,oBAGzB,+BACE,oBAAI+D,UAAU,wBAAd,0BAGA,oBAAIA,UAAU,yCAAd,SACGmB,KAAKzJ,MAAM7B,SAAS0C,iBAGzB,+BACE,oBAAIyH,UAAU,wBAAd,6BAGA,oBAAIA,UAAU,yCAAd,SACG4C,YAAKzB,KAAKzJ,MAAM7B,SAASgN,aAAaC,wBAUjD,qBAAK9C,UAAU,WAAf,SACE,uBAAM+C,SAAU5B,KAAK3D,cAArB,UACE,qBAAKwC,UAAU,sEAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,4DACA,uBACEQ,KAAK,SACLR,UAAS,0GACkB,OAAzBmB,KAAKzJ,MAAMjB,WACsB,mBAAjC0K,KAAKzJ,MAAMjB,UAAUgH,QACjB,iBACA,mBAEN7I,MAAOuM,KAAKzJ,MAAMnB,cAClBmK,SAAU,SAACC,GACT,EAAKrK,iBAAiBsK,OAAOD,EAAEE,OAAOjM,SAExCoO,IAAK,EACLC,IAAK9B,KAAKzJ,MAAM7B,SAAS6I,aACzBwE,YAAY,IACZnC,SAAUI,KAAKzJ,MAAMnC,iBAEG,OAAzB4L,KAAKzJ,MAAMjB,WAER,mBADF0K,KAAKzJ,MAAMjB,UAAUgH,SAEnB,sBAAMuC,UAAU,iCAAhB,SACGmB,KAAKzJ,MAAMjB,UAAUiD,WAKhC,sBAAKsG,UAAU,4BAAf,UACE,wBACEA,UAAU,+CACVkB,QAAS,WACP,EAAKtL,YAAY,MACjB,EAAKU,iBAAiB,GACtB,EAAK3B,cAAc,OALvB,kBAUA,wBACEqL,UAAU,8CACVe,SAAUI,KAAKzJ,MAAMnC,eAFvB,SAIG4L,KAAKzJ,MAAMnC,eAAiB,aAAe,2BAa7D4L,KAAKzJ,MAAMrB,UACgB,OAA1B8K,KAAKzJ,MAAM7C,YACXsM,KAAKzJ,MAAM7B,UACXsL,KAAK7M,MAAMgF,iBACT,cAAC,IAAD,CACE0I,UAAU,EACVzK,MAAO0K,IAAOC,QACdC,MAAO,WACL,EAAKvM,YAAY,MACjB,EAAKQ,aAAY,IAEnBgM,cAAc,EACdC,eAAe,EACf/K,MACE,qBAAK0I,UAAU,mCAAf,SAEE,qBAAKA,UAAU,gBAAf,SACE,sBAAMA,UAAU,mCAAhB,sCAMNsC,eAAgBC,IAAUY,WAC1BhP,QAAS,CAAEmD,OAAO,EAAMmL,MAAM,EAAOC,QAAQ,GApB/C,SAsBE,yBAAS1C,UAAU,0CAAnB,SACE,0BAASA,UAAU,SAAnB,UACE,sBAAKA,UAAU,oDAAf,UACE,sBAAMA,UAAU,gBAAhB,wBACA,sBAAMA,UAAU,YAAhB,SACG2C,YACCxB,KAAK7M,MAAMgF,gBACX6H,KAAKzJ,MAAM7B,SAAS2F,aAElBmH,YACExB,KAAK7M,MAAMgF,gBACX6H,KAAKzJ,MAAM7B,SAAS2F,aACnB+C,eACH,wBAGR,qBAAKyB,UAAU,OAAf,SACE,wBAAOA,UAAU,gBAAgBoD,GAAG,iBAApC,UACE,uBAAOpD,UAAU,sEAAjB,SACE,+BACE,oBAAIA,UAAU,YAAd,6BACA,oBAAIA,UAAU,YAAd,4BACA,oBAAIA,UAAU,YAAd,0BACA,oBAAIA,UAAU,YAAd,4BACA,oBAAIA,UAAU,YAAd,gCACA,oBAAIA,UAAU,YAAd,oBACA,4BAGJ,gCACE,+BACE,oBAAIA,UAAU,YAAd,SACGmB,KAAKzJ,MAAM7B,SAAS6I,eAEvB,oBAAIsB,UAAU,YAAd,SACGmB,KAAKzJ,MAAM7B,SAAS2C,wBACrBC,IAA2BuI,UACzB,qBAAKhB,UAAU,0BAAf,SACGmB,KAAKzJ,MAAM7B,SAASkC,kBAGvB,MAGJ,oBAAIiI,UAAU,YAAd,SACGmB,KAAK7M,MAAM+F,oBACZ8G,KAAKzJ,MAAM7B,SAAS2C,wBAClBC,IAA2BuI,UAC3B,+BAEIqC,gCACElC,KAAK7M,MAAM+F,mBACX8G,KAAKzJ,MAAM7B,SAASmF,KACpBnB,SAIN,MAGJ,oBAAImG,UAAU,YAAd,SACGmB,KAAKzJ,MAAM7B,SAAS2C,wBACrBC,IAA2BwI,SACvBE,KAAKzJ,MAAM7B,SAASqG,eACpB,MAEN,oBAAI8D,UAAU,YAAd,SACGmB,KAAK7M,MAAM+F,oBACZ8G,KAAKzJ,MAAM7B,SAAS2C,wBAClBC,IAA2BwI,SAC3B,+BAEIoC,gCACElC,KAAK7M,MAAM+F,mBACX8G,KAAKzJ,MAAM7B,SAASmF,IACpBsI,IAAsBC,UACtB1J,SAIN,MAIJ,oBAAImG,UAAU,YAAd,SACE,sBACEA,UAAS,0CACPmB,KAAKzJ,MAAM7B,SAAS2C,wBACpBC,IAA2BuI,UACvB,gEACAG,KAAKzJ,MAAM7B,SACR2C,wBACHC,IAA2BC,UAC3B,gEACA,qEATR,SAYGyI,KAAK7M,MAAM+F,mBACRmJ,YACErC,KAAKzJ,MAAM7B,SAAS2C,sBACpB6K,gCACElC,KAAK7M,MAAM+F,mBACX8G,KAAKzJ,MAAM7B,SAASmF,IACpB,OACAnB,OACFwJ,gCACElC,KAAK7M,MAAM+F,mBACX8G,KAAKzJ,MAAM7B,SAASmF,IACpBsI,IAAsBG,QACtB5J,OACFwJ,gCACElC,KAAK7M,MAAM+F,mBACX8G,KAAKzJ,MAAM7B,SAASmF,IACpBsI,IAAsBC,UACtB1J,QAEJ2J,YACErC,KAAKzJ,MAAM7B,SAAS2C,sBACpB,EACA,EACA,OAIV,+BACG2I,KAAKzJ,MAAM7B,SAAS2C,wBACnBC,IAA2BuI,WAC3B,wBACEhB,UAAU,uEACVkB,QAAS,WACP,EAAKvM,cAAc,WAErBoM,SACEI,KAAKzJ,MAAM7B,SAAS2C,wBACpBC,IAA2BuI,UAP/B,mBAaDG,KAAK7M,MAAM+F,oBAKG,IAJbgJ,gCACElC,KAAK7M,MAAM+F,mBACX8G,KAAKzJ,MAAM7B,SAASmF,IACpBsI,IAAsBI,SACtB7J,QACFwJ,gCACElC,KAAK7M,MAAM+F,mBACX8G,KAAKzJ,MAAM7B,SAASmF,IACpBsI,IAAsBC,UACtB1J,OAAS,GACT,wBACEmG,UAAU,4EACVkB,QAAS,kBACP,EAAKlF,cAAc,EAAKtE,MAAM7B,WAEhCkL,SAAUI,KAAKzJ,MAAMnC,eALvB,uCAeboN,YACCxB,KAAK7M,MAAMgF,gBACX6H,KAAKzJ,MAAM7B,SAAS2F,cAEpB,cAAC,IAAD,CACE6C,aACEsE,YACExB,KAAK7M,MAAMgF,gBACX6H,KAAKzJ,MAAM7B,SAAS2F,aAGxBmI,SAAS,kBA35C/B,GAA+BC,aAo8ClBC,EAAWC,aA7BA,SAAC,GAgBnB,IAfJ1L,EAeG,EAfHA,KACA2L,EAcG,EAdHA,QACAC,EAaG,EAbHA,gBACAzJ,EAYG,EAZHA,aACAtB,EAWG,EAXHA,SACAgL,EAUG,EAVHA,YAWA,MAAO,CACL7L,KAAMA,EACN2B,cAAegK,EAAQhK,cACvBM,mBAAoB0J,EAAQ1J,mBAC5Bf,gBAAiB0K,EAAgB1K,gBACjCiB,eACAtB,WACA4B,sBAAuBoJ,EAAYpJ,sBACnC7D,wBAAyB+M,EAAQ/M,2BAIY,CAC/CmC,wBACAE,2BACAG,iCACAQ,uBACAM,yBACA4J,qBACAzJ,6BACAK,6BACAJ,8BACArD,qBAVsByM,CAWrBzP","file":"static/js/72.6c4541c8.chunk.js","sourcesContent":["import axios from \"axios\";\nimport React, { Component, Fragment } from \"react\";\nimport { GiTeacher } from \"react-icons/gi\";\nimport { MdInfoOutline } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  Auth,\n  loadEducationCategories,\n  PushPopupAlert,\n  schoolLevelsStoreInterface,\n} from \"../../actions\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n} from \"../../actions/document\";\nimport {\n  fetchDistrictPosts,\n  getDistrictPlacement,\n  getDistrictPlacementLimit,\n  updateSchoolPost,\n} from \"../../actions/schools\";\nimport { getActiveAcademicSession } from \"../../actions/session\";\nimport { FC_GetPositionsByInstitution } from \"../../actions/settings\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport Modal, { Themes, ModalSize } from \"../../components/Modal/Modal\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport Table, { TableColumnsInterface } from \"../../components/Table/Table\";\nimport { AcademicSessionInterface, PositionAPI } from \"../../interfaces\";\nimport {\n  placedCandidateInterface,\n  PlacedCandidateStatus,\n} from \"../../interfaces/marks_publication\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { DocumentReducerInterface } from \"../../reducers/document\";\nimport { getPositionById, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport {\n  PostSchoolInterface,\n  PostRequestStatusInterface,\n  DocumentSubCategoryInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport { DATE } from \"../../utils/functions\";\nimport { showRequestStatus } from \"../HeadTeacher/ReceivePost\";\nimport { getPlacementByRequest } from \"../HeadTeacher/RequestTeacher\";\nimport { PlacementListInterface } from \"../PlacementLimit/PlacementLimit\";\nimport ViewPosition from \"../Positions/ViewPosition\";\n\nconst defaultColumns: TableColumnsInterface[] = [\n  { columnTitle: \"SCHOOL\", alignText: \"left\", padding: \"p-3\" },\n  { columnTitle: \"POSITION\", alignText: \"left\", padding: \"p-3\" },\n  { columnTitle: \"Teacher F\", alignText: \"left\", padding: \"p-3\" },\n  { columnTitle: \"Teacher M\", alignText: \"left\", padding: \"p-3\" },\n  {\n    columnTitle: \"REQUESTED POSTS\",\n    alignText: \"left\",\n    padding: \"p-3\",\n  },\n  {\n    columnTitle: \"APPROVED POSTS\",\n    alignText: \"left\",\n    padding: \"p-3\",\n  },\n  { columnTitle: \"ALL POSTS\", alignText: \"left\", padding: \"p-3\" },\n  { columnTitle: \"ALL STAFF\", alignText: \"left\", padding: \"p-3\" },\n  { columnTitle: \"NEW STAFF\", alignText: \"left\", padding: \"p-3\" },\n  {\n    columnTitle: \"VACANT POSTS\",\n    alignText: \"left\",\n    padding: \"p-3\",\n  },\n  // { columnTitle: \"STATUS\", alignText: \"left\", padding: \"p-3\" },\n  { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n];\nconst editColumns: TableColumnsInterface[] = [\n  { columnTitle: \"SCHOOL\", alignText: \"left\", padding: \"p-3\" },\n  { columnTitle: \"POSITION\", alignText: \"left\", padding: \"p-3\" },\n  { columnTitle: \"Teacher F\", alignText: \"left\", padding: \"p-3\" },\n  { columnTitle: \"Teacher M\", alignText: \"left\", padding: \"p-3\" },\n  {\n    columnTitle: \"REQUESTED POSTS\",\n    alignText: \"left\",\n    padding: \"p-3\",\n  },\n  {\n    columnTitle: \"APPROVED POSTS\",\n    alignText: \"left\",\n    padding: \"p-3\",\n  },\n  { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n];\n\ntype TableDataType = {\n  post_id: string;\n  school_id: string;\n  school_name: string;\n  position_id: string;\n  position_name: string;\n  // NUMBER OF FEMALE PROVIDED BY HT\n  female: number;\n  // NUMBER OF MALE PROVIDED BY HT\n  male: number;\n  // NUMBER OF POST REQUESTED BY HT\n  requested_post: number;\n  // NUMBER OF POST APPROVED BY DDE\n  distributed_post: number;\n  // NUMBER OF ALL POST (APPROVED + FEMALE + MALE)\n  total_post: number;\n  // NUMBER OF ALL POST (RECEIVED + FEMALE + MALE)\n  total_staff: number;\n  // NUMBER OF ALL RECEIVED POST\n  new_teacher: number;\n  // NUMBER OF ALL (APPROVED - RECEIVED) POST\n  vacant_post: number;\n  status: PostRequestStatusInterface;\n};\n\ntype ConfirmedPostType = {\n  requested_post_id: string;\n  confirmed_posts: number;\n  confirmed_by: string;\n  approval_date: Date;\n  description: string;\n  requested_post_status: PostRequestStatusInterface;\n};\n\ntype AddRequest4PlacementType = {\n  school_id: string;\n  school_name: string;\n  request_id: string;\n  district_id: string;\n  sector_id: string;\n  province_id: string;\n  gender: \"M\" | \"F\";\n  available_places: {\n    position_id: string;\n    requested_teacher: number;\n  }[];\n};\n\ninterface AppProps {\n  auth: Auth;\n  systemPositions: PositionAPI[] | null;\n  districtPosts: PostSchoolInterface[];\n  districtPlacements: placedCandidateInterface[] | null;\n  document: DocumentReducerInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n  activeAcademicSession: AcademicSessionInterface | \"none\" | null;\n  districtPlacementLimits: PlacementListInterface[] | null;\n  FC_GetPositionsByInstitution: Function;\n  fetchDistrictPosts: Function;\n  updateSchoolPost: Function;\n  getSchools: Function;\n  getDistrictPlacement: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getActiveAcademicSession: Function;\n  getDistrictPlacementLimit: Function;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface AppState {\n  modalState: \"CONFIRM\" | \"UPDATE\" | null;\n  filterByPosition: string;\n  institute_id: string;\n  category_id: string;\n  qualification_id: string;\n  loadingRequest: boolean;\n  loading: boolean;\n  loadingPost: boolean;\n  thisPost: PostSchoolInterface | null;\n  thisPostTable: TableDataType | null;\n  viewPost: boolean;\n  // TO BE REMOVED ===========\n  approvedPosts: number;\n  // END TO BE REMOVED ===========\n  selectedPostId: string;\n  leftPlacements: number;\n  confirmedPosts: ConfirmedPostType[] | null;\n  tableColumns: TableColumnsInterface[];\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n}\n\nexport class _District extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      modalState: null,\n      filterByPosition: \"\",\n      institute_id: \"\",\n      category_id: \"\",\n      qualification_id: \"\",\n      loadingRequest: false,\n      loading: true,\n      loadingPost: true,\n      thisPost: null,\n      viewPost: false,\n      approvedPosts: 0,\n      selectedPostId: \"\",\n      formError: null,\n      thisPostTable: null,\n      confirmedPosts: null,\n      leftPlacements: 0,\n      tableColumns: defaultColumns,\n    };\n  }\n\n  setTableColumns = (data: TableColumnsInterface[]) => {\n    this.setState({ tableColumns: data });\n  };\n\n  setModalState = (value: \"CONFIRM\" | \"UPDATE\" | null) => {\n    this.setState({ modalState: value });\n  };\n\n  setFilterByPosition = (value: string) => {\n    this.setState({ filterByPosition: value });\n  };\n\n  setInstituteId = (value: string) => {\n    this.setState({ institute_id: value });\n  };\n\n  setCategoryId = (value: string) => {\n    this.setState({ category_id: value });\n  };\n\n  setQualificationId = (value: string) => {\n    this.setState({ qualification_id: value });\n  };\n\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingPost = (value: boolean) => {\n    this.setState({ loadingPost: value });\n  };\n\n  setThisPost = (value: PostSchoolInterface | null) => {\n    this.setState({ thisPost: value });\n  };\n\n  setThisPostTable = (value: TableDataType | null) => {\n    this.setState({ thisPostTable: value });\n  };\n\n  setConfirmedPosts = (value: ConfirmedPostType[] | null) => {\n    this.setState({ confirmedPosts: value });\n  };\n\n  setLeftPlacement = (data: number) => {\n    this.setState({ leftPlacements: data });\n  };\n\n  setViewPost = (value: boolean) => {\n    this.setState({ viewPost: value });\n  };\n\n  setApprovedPosts = (value: number) => {\n    this.setState({ approvedPosts: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n\n  setSelectedPostId = (data: string) => {\n    this.setState({ selectedPostId: data });\n  };\n\n  assignConfirmedPost = (\n    thisPost: TableDataType,\n    value: number,\n    postRequests: TableDataType[]\n  ) => {\n    let data: ConfirmedPostType[] = [];\n    const limit = this.getLimitations(\n      postRequests,\n      this.props.districtPlacementLimits!,\n      thisPost.post_id\n    );\n    if (\n      value > thisPost.requested_post ||\n      limit.distributed + value > limit.general\n    )\n      return this.props.PushPopupAlert({\n        title: `Incorrect value!`,\n        theme: PopupAlertTheme.warning,\n      });\n    if (this.state.confirmedPosts) {\n      data = [...this.state.confirmedPosts];\n      const postIndex = data.findIndex(\n        (item) => item.requested_post_id === thisPost.post_id\n      );\n      if (postIndex >= 0) {\n        data[postIndex].confirmed_posts = value;\n        data[postIndex].approval_date = new Date();\n      } else {\n        data.push({\n          requested_post_id: thisPost.post_id,\n          confirmed_posts: value,\n          confirmed_by: this.props.auth.user.user_id,\n          approval_date: new Date(),\n          description: \"Not defined\",\n          requested_post_status: PostRequestStatusInterface.CONFIRMED,\n        });\n      }\n    } else {\n      data.push({\n        requested_post_id: thisPost.post_id,\n        confirmed_posts: value,\n        confirmed_by: this.props.auth.user.user_id,\n        approval_date: new Date(),\n        description: \"Not defined\",\n        requested_post_status: PostRequestStatusInterface.CONFIRMED,\n      });\n    }\n    this.setConfirmedPosts(data);\n  };\n\n  getAssignedValuePost = (postId: string): number => {\n    let result: number = 0;\n    if (this.state.confirmedPosts) {\n      const thisPost = this.state.confirmedPosts.find(\n        (item) => item.requested_post_id === postId\n      );\n      if (thisPost) result = thisPost.confirmed_posts;\n    }\n    return result;\n  };\n\n  loadData = (sessionId: string) => {\n    if (!this.props.document.documentCategory) {\n      this.props.getDocumentCategory();\n    }\n    if (!this.props.document.documentSubCategory) {\n      this.props.getDocumentSubCategory();\n    }\n    if (\n      this.props.systemPositions === null &&\n      this.props.auth.education_institution_id\n    ) {\n      this.setLoading(true);\n      this.props.FC_GetPositionsByInstitution(\n        this.props.auth.education_institution_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          console.log({ status: status, msg: msg });\n          if (msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    }\n    if (!this.props.districtPosts.length && this.state.loadingPost) {\n      this.props.fetchDistrictPosts(\n        this.props.auth.user_access.district_id,\n        (status: boolean, message: string) => {\n          this.setLoadingPost(status);\n          if (!status) {\n            if (message.length > 0 && this.state.loadingPost) {\n              console.error(\"error loading school post: \", message);\n              this.props.PushPopupAlert({\n                title: message,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          }\n        }\n      );\n    } else if (this.state.loadingPost) {\n      this.setLoadingPost(false);\n    }\n\n    if (!this.props.districtPlacements) {\n      this.props.getDistrictPlacement(\n        this.props.auth.user_access.district_id,\n        (status: boolean, message: string) => {\n          this.setLoading(status);\n          if (!status) {\n            if (message.length > 0 && status) {\n              console.error(\"error loading school post: \", message);\n              this.props.PushPopupAlert({\n                title: message,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          }\n        }\n      );\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n    if (\n      this.props.schoolLevels.education_categories === null ||\n      this.props.schoolLevels.education_categories.length === 0\n    ) {\n      this.setLoading(true);\n      this.props.loadEducationCategories(this.setLoading);\n    }\n    if (!this.props.districtPlacementLimits) {\n      this.props.getDistrictPlacementLimit(\n        this.props.auth.user_access.district_id,\n        sessionId,\n        (status: boolean, message: string) => {\n          this.setLoading(status);\n          if (!status) {\n            if (message.length > 0 && status) {\n              console.error(\n                \"error loading getDistrictPlacementLimit: \",\n                message\n              );\n              this.props.PushPopupAlert({\n                title: message,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          }\n        }\n      );\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n  };\n\n  componentDidMount = () => {\n    if (!isEmptyOrSpaces(this.props.auth.user_access.district_id)) {\n      if (\n        this.props.activeAcademicSession === null ||\n        this.props.activeAcademicSession === \"none\"\n      ) {\n        this.props.getActiveAcademicSession(\n          (\n            status: boolean,\n            msg: string,\n            data?: AcademicSessionInterface | \"none\"\n          ) => {\n            this.setLoading(status);\n            if (msg.length > 0) {\n              console.error({ loadingCandidatesError: msg });\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data && data !== \"none\") this.loadData(data._id);\n          }\n        );\n      } else this.loadData(this.props.activeAcademicSession._id);\n    }\n  };\n\n  doPlacement = async (thisPost: PostSchoolInterface) => {\n    try {\n      const res = await axios.post<any[]>(\n        `${API.PLACEMENT}/doplace/${thisPost.school_id}/${thisPost.position_id}`,\n        { request_id: thisPost._id }\n      );\n\n      if (res) {\n        console.log(\"====================================\");\n        console.log({ doPlacement: res });\n        console.log(\"====================================\");\n        this.props.fetchDistrictPosts(\n          this.props.auth.user_access.district_id,\n          (status: boolean, message: string) => {\n            if (!status) {\n              if (message.length > 0 && this.state.loadingPost) {\n                console.error(\"error loading school post: \", message);\n                this.props.PushPopupAlert({\n                  title: message,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n              this.setLoadingPost(false);\n            }\n          }\n        );\n\n        let msgAlert: string = \"\";\n        if (res.data.length > 0) {\n          if (res.data.length === this.state.approvedPosts) {\n            msgAlert = \"All confirmed posts has been placed on school!\";\n          } else {\n            msgAlert = `${res.data.length} of ${this.state.approvedPosts} post(s) has been placed on school!`;\n          }\n        } else {\n          msgAlert = \"Post request has been confirmed but no placement done!\";\n        }\n\n        this.setThisPost(null);\n        this.setApprovedPosts(0);\n        this.setModalState(null);\n        this.setThisPostTable(null);\n        this.setTableColumns(defaultColumns);\n        this.setSelectedPostId(\"\");\n        this.setConfirmedPosts(null);\n        this.props.PushPopupAlert({\n          title: msgAlert,\n          theme:\n            res.data.length > 0\n              ? PopupAlertTheme.success\n              : PopupAlertTheme.info,\n        });\n      }\n    } catch (error) {\n      console.error({ doPlacement_reply: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  reDoPlacement = async (thisPost: PostSchoolInterface) => {\n    try {\n      const res = await axios.post<any[]>(\n        `${API.PLACEMENT}/doplace/${thisPost.school_id}/${thisPost.position_id}`,\n        { request_id: thisPost._id }\n      );\n\n      if (res) {\n        console.log(\"====================================\");\n        console.log({ reDoPlacement: res });\n        console.log(\"====================================\");\n        this.props.fetchDistrictPosts(\n          this.props.auth.user_access.district_id,\n          (status: boolean, message: string) => {\n            if (!status) {\n              if (message.length > 0 && this.state.loadingPost) {\n                console.error(\"error loading school post: \", message);\n                this.props.PushPopupAlert({\n                  title: message,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n              this.setLoadingPost(false);\n            }\n          }\n        );\n\n        let msgAlert: string = \"\";\n        if (res.data.length > 0) {\n          if (res.data.length === this.state.approvedPosts) {\n            msgAlert = \"All confirmed posts has been placed on school!\";\n          } else {\n            msgAlert = `${res.data.length} of ${\n              thisPost.occupied_posts\n                ? thisPost.occupied_posts -\n                  (thisPost.received_posts ? thisPost.received_posts : 0)\n                : 0\n            } post(s) has been placed on school!`;\n          }\n        } else {\n          msgAlert =\n            \"Placement failed, Please wait for the next application period!\";\n        }\n\n        this.props.PushPopupAlert({\n          title: msgAlert,\n          theme:\n            res.data.length > 0\n              ? PopupAlertTheme.success\n              : PopupAlertTheme.info,\n        });\n      }\n    } catch (error) {\n      console.error({ doPlacement_reply: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  generateDataForSchoolRequest = (\n    confirmedPosts: ConfirmedPostType[]\n  ): { requests: AddRequest4PlacementType[]; posts: PostSchoolInterface[] } => {\n    let school_ids: string[] = [],\n      requests: AddRequest4PlacementType[] = [],\n      posts: PostSchoolInterface[] = [];\n\n    if (this.props.districtPosts) {\n      confirmedPosts.forEach((confirmed) => {\n        const thisPost = this.props.districtPosts.find(\n          (item) => item._id === confirmed.requested_post_id\n        );\n        if (thisPost) {\n          posts.push(thisPost);\n          if (school_ids.includes(thisPost.school_id)) {\n            const schoolIndex = requests.findIndex(\n              (item) => item.school_id === thisPost.school_id\n            );\n            const positionIndex = requests[\n              schoolIndex\n            ].available_places.findIndex(\n              (item) => item.position_id === thisPost.position_id\n            );\n            if (positionIndex < 0) {\n              requests[schoolIndex].available_places.push({\n                position_id: thisPost.position_id,\n                requested_teacher: confirmed.confirmed_posts,\n              });\n            }\n          } else\n            requests.push({\n              school_id: thisPost.school._id,\n              school_name: thisPost.school.school_name,\n              request_id: thisPost._id,\n              district_id: thisPost.district_id,\n              sector_id: thisPost.school.sector_id,\n              province_id: thisPost.school.province_id,\n              gender: thisPost.male_number > thisPost.female_number ? \"F\" : \"M\",\n              available_places: [\n                {\n                  position_id: thisPost.position_id,\n                  requested_teacher: confirmed.confirmed_posts,\n                },\n              ],\n            });\n        }\n      });\n    }\n\n    return { requests, posts };\n  };\n\n  addSchoolRequest = async (\n    dataForm: AddRequest4PlacementType[],\n    thisPost: PostSchoolInterface[]\n  ) => {\n    // const dataForm: AddRequest4PlacementType[] = [\n    //   {\n    //     school_id: thisPost.school._id,\n    //     school_name: thisPost.school.school_name,\n    //     request_id: thisPost._id,\n    //     district_id: thisPost.district_id,\n    //     sector_id: thisPost.school.sector_id,\n    //     province_id: thisPost.school.province_id,\n    //     gender: thisPost.male_number > thisPost.female_number ? \"F\" : \"M\",\n    //     available_places: [\n    //       {\n    //         position_id: thisPost.position_id,\n    //         requested_teacher: this.state.approvedPosts,\n    //       },\n    //     ],\n    //   },\n    // ];\n\n    let data = { requested_teachers: dataForm };\n\n    try {\n      const res = await axios.post(`${API.PLACEMENT}/requestteachers/`, data);\n\n      if (res) {\n        console.log(\"====================================\");\n        console.log({ addSchoolRequest: res });\n        console.log(\"====================================\");\n        await this.doPlacement(thisPost[0]);\n      }\n    } catch (error) {\n      console.error({ addSchoolRequest_reply: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  submitRequest = async () => {\n    // e.preventDefault();\n    // if (!this.state.thisPost) {\n    //   return;\n    // }\n\n    if (!this.state.confirmedPosts || this.state.confirmedPosts.length === 0) {\n      return this.setFormError({\n        element: \"approved_posts\",\n        msg: \"Invalid number of approved post\",\n      });\n    }\n\n    // if (this.state.approvedPosts > this.state.thisPost.needed_posts) {\n    //   return this.setFormError({\n    //     element: \"approved_posts\",\n    //     msg: \"Approved post can't be greater than needed post\",\n    //   });\n    // }\n\n    this.setLoadingRequest(true);\n    try {\n      if (this.state.modalState === \"CONFIRM\") {\n        const res = await axios.patch<{ data: PostSchoolInterface }>(\n          `${API.PLACEMENT}/requestpostdistributed`,\n          { confirmedPost: this.state.confirmedPosts }\n        );\n        if (res) {\n          // props.updateSchoolPost(\"SCHOOL\", res.data.data);\n          // this.generateDataForSchoolRequest(this.state.confirmedPosts)\n          await this.addSchoolRequest(\n            this.generateDataForSchoolRequest(this.state.confirmedPosts)\n              .requests,\n            this.generateDataForSchoolRequest(this.state.confirmedPosts).posts\n          );\n        }\n      }\n    } catch (error) {\n      console.error({ post_relpy: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.setLoadingRequest(false);\n  };\n\n  filterQualifications = (\n    allData: DocumentSubCategoryInterface[],\n    categoryId: string\n  ): DocumentSubCategoryInterface[] => {\n    let result: DocumentSubCategoryInterface[] = allData;\n\n    if (!isEmptyOrSpaces(categoryId))\n      result = allData.filter((item) => item.category_id === categoryId);\n    return result;\n  };\n\n  generateFormData = (\n    institute_id: string,\n    qualification_id: string\n  ): TableDataType[] | null => {\n    let result: TableDataType[] | null = null;\n\n    if (\n      !isEmptyOrSpaces(institute_id) &&\n      !isEmptyOrSpaces(qualification_id) &&\n      this.props.systemPositions &&\n      this.props.districtPosts\n    ) {\n      // GET ALL NEEDED POSITION BY INSTITUTION ID && SUBCATEGORY/QUALIFICATION ID =======\n      const neededPositions = this.props.systemPositions.filter(\n        (item) =>\n          item.subcategory_id === qualification_id &&\n          item.education_institute_id.education_institute_id === institute_id\n      );\n\n      // GET ALL NEEDED POSITION BY INSTITUTION ID && SUBCATEGORY/QUALIFICATION ID =======\n      this.props.districtPosts.forEach((post) => {\n        const thisPosition = neededPositions.find(\n          (item) => item.position_id === post.position_id\n        );\n        if (thisPosition) {\n          if (result === null) {\n            result = [\n              {\n                post_id: post._id,\n                school_id: post.school_id,\n                school_name: post.school.school_name,\n                position_id: thisPosition.position_id,\n                position_name: thisPosition.position_title,\n                female: post.female_number,\n                male: post.male_number,\n                requested_post: post.needed_posts,\n                distributed_post: post.confirmed_posts\n                  ? post.confirmed_posts\n                  : 0,\n                total_post:\n                  post.female_number +\n                  post.male_number +\n                  (post.confirmed_posts ? post.confirmed_posts : 0),\n                total_staff:\n                  post.female_number +\n                  post.male_number +\n                  (post.received_posts ? post.received_posts : 0),\n                new_teacher: post.received_posts ? post.received_posts : 0,\n                vacant_post:\n                  (post.confirmed_posts ? post.confirmed_posts : 0) -\n                  (post.received_posts ? post.received_posts : 0),\n                status: post.requested_post_status,\n              },\n            ];\n          } else {\n            result.push({\n              post_id: post._id,\n              school_id: post.school_id,\n              school_name: post.school.school_name,\n              position_id: thisPosition.position_id,\n              position_name: thisPosition.position_title,\n              female: post.female_number,\n              male: post.male_number,\n              requested_post: post.needed_posts,\n              distributed_post: post.confirmed_posts ? post.confirmed_posts : 0,\n              total_post:\n                post.female_number +\n                post.male_number +\n                (post.confirmed_posts ? post.confirmed_posts : 0),\n              total_staff:\n                post.female_number +\n                post.male_number +\n                (post.received_posts ? post.received_posts : 0),\n              new_teacher: post.received_posts ? post.received_posts : 0,\n              vacant_post:\n                (post.confirmed_posts ? post.confirmed_posts : 0) -\n                (post.received_posts ? post.received_posts : 0),\n              status: post.requested_post_status,\n            });\n          }\n        }\n      });\n    }\n\n    return result;\n  };\n\n  getAllowedPlacementByDegree = (\n    allLimits: PlacementListInterface[],\n    degree: string\n  ): number => {\n    let result: number = 0;\n    let session: string =\n      this.props.activeAcademicSession &&\n      this.props.activeAcademicSession !== \"none\"\n        ? this.props.activeAcademicSession!._id\n        : \"\";\n    const thisLimit = allLimits.find(\n      (item) =>\n        item.institution_id === this.state.institute_id &&\n        item.subcategory_id === degree &&\n        item.post_request_session_id === session\n    );\n    if (thisLimit) result = thisLimit.confirmed_post;\n    return result;\n  };\n\n  getLimitations = (\n    postRequests: TableDataType[],\n    allLimits: PlacementListInterface[],\n    currentPostId: string = \"\"\n  ) => {\n    let general: number = 0,\n      _withExcept: number = 0,\n      _withoutExcept: number = 0;\n    const thisLimit = allLimits.find(\n      (item) =>\n        item.institution_id === this.state.institute_id &&\n        this.props.activeAcademicSession! !== \"none\" &&\n        item.post_request_session_id ===\n          this.props.activeAcademicSession!._id &&\n        item.subcategory_id === this.state.qualification_id\n    );\n    general = thisLimit ? thisLimit.confirmed_post : 0;\n    if (general > 0) {\n      postRequests.forEach((postRequest) => {\n        const fromForm = this.state.confirmedPosts\n          ? this.state.confirmedPosts.find(\n              (item) => item.requested_post_id === postRequest.post_id\n            )\n          : undefined;\n        if (postRequest.post_id === currentPostId)\n          _withExcept += postRequest.total_post - postRequest.distributed_post;\n        else\n          _withExcept +=\n            postRequest.total_post -\n            postRequest.distributed_post +\n            (fromForm ? fromForm!.confirmed_posts : 0);\n        _withoutExcept +=\n          postRequest.total_post + (fromForm ? fromForm!.confirmed_posts : 0);\n      });\n    }\n    return {\n      general,\n      distributed: _withExcept,\n      allDistributed: _withoutExcept,\n    };\n  };\n\n  tableData = (): JSX.Element[] => {\n    if (this.state.loadingPost || this.props.districtPlacementLimits === null) {\n      return [\n        <tr key={1} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={11}>\n            Loading post request(s)\n          </td>\n        </tr>,\n      ];\n    }\n\n    if (\n      !this.generateFormData(\n        this.state.institute_id,\n        this.state.qualification_id\n      )\n    ) {\n      return [\n        <tr key={1} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={11}>\n            <NoResult\n              theme={NoResultThemes.Dark}\n              value={\"Select institute and Qualification to view request!\"}\n            />\n          </td>\n        </tr>,\n      ];\n    }\n\n    let data = this.generateFormData(\n      this.state.institute_id,\n      this.state.qualification_id\n    )!;\n\n    if (data.length === 0) {\n      return [\n        <tr key={1} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={10}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    console.log(\"====================================\");\n    console.log({ dataTable: data });\n    console.log(\"====================================\");\n\n    return data.map((schoolPost, index) => (\n      <tr\n        key={index + schoolPost.post_id}\n        className=\"border-b border-gray-200 hover:bg-gray-100 group\"\n      >\n        <td className=\"py-3 px-4 text-left\">{index + 1}</td>\n        <td className=\"py-3 px-4 text-left\">{schoolPost.school_name}</td>\n        <td className=\"py-3 px-4 text-left\">{schoolPost.position_name}</td>\n        <td className=\"py-3 px-4 text-left text-base font-bold\">\n          {schoolPost.female}\n        </td>\n        <td className=\"py-3 px-4 text-left text-base font-bold\">\n          {schoolPost.male}\n        </td>\n        <td className=\"py-3 px-4 text-left text-base font-bold\">\n          {schoolPost.requested_post}\n        </td>\n        <td className=\"py-3 px-4 text-left text-base font-medium\">\n          {this.state.thisPostTable && this.state.modalState !== null ? (\n            <input\n              type=\"number\"\n              value={this.getAssignedValuePost(schoolPost.post_id)}\n              className=\"rounded border px-2 py-1 w-28\"\n              autoFocus={\n                schoolPost.post_id === this.state.thisPostTable.post_id\n              }\n              onChange={(e) =>\n                this.assignConfirmedPost(\n                  schoolPost,\n                  Number(e.target.value),\n                  data\n                )\n              }\n              onFocus={() => this.setSelectedPostId(schoolPost.post_id)}\n              // onBlur={() => this.setSelectedPostId(\"\")}\n              disabled={this.state.loadingRequest}\n            />\n          ) : schoolPost.status !== PostRequestStatusInterface.INITIATED ? (\n            schoolPost.distributed_post\n          ) : (\n            \"-\"\n          )}\n        </td>\n        {!this.state.thisPostTable && (\n          <Fragment>\n            <td className=\"py-3 px-4 text-left text-base font-medium\">\n              {schoolPost.total_post}\n            </td>\n            <td className=\"py-3 px-4 text-left text-base font-medium\">\n              {schoolPost.total_staff}\n            </td>\n            <td className=\"py-3 px-4 text-left text-base font-medium\">\n              {schoolPost.status === PostRequestStatusInterface.RECEIVED\n                ? schoolPost.new_teacher\n                : \"-\"}\n            </td>\n            <td className=\"py-3 px-4 text-left text-base font-medium\">\n              {schoolPost.status !== PostRequestStatusInterface.INITIATED\n                ? schoolPost.vacant_post\n                : \"-\"}\n            </td>\n          </Fragment>\n        )}\n        <td className=\"py- text-left\">\n          {schoolPost.post_id === this.state.selectedPostId && (\n            <div className=\"flex items-center gap-3\">\n              <div\n                className=\"rounded text-gray-500\n                text-base font-bold\"\n              >\n                <span className=\"text-black\">\n                  {this.getLimitations(\n                    data,\n                    this.props.districtPlacementLimits!,\n                    schoolPost.post_id\n                  ).distributed + this.getAssignedValuePost(schoolPost.post_id)}\n                </span>{\" \"}\n                of{\" \"}\n                {\n                  this.getLimitations(\n                    data,\n                    this.props.districtPlacementLimits!,\n                    schoolPost.post_id\n                  ).general\n                }\n              </div>\n              <button\n                className={`btn bg-blue-100 text-blue-500 group-hover:bg-blue-500 group-hover:text-blue-50 ${\n                  this.state.loadingRequest && \"cursor-wait\"\n                }`}\n                title=\"Save changes\"\n                onClick={() => this.submitRequest()}\n                disabled={this.state.loadingRequest}\n              >\n                {!this.state.loadingRequest ? \"Save\" : \"Loading...\"}\n              </button>\n              <button\n                className={`btn bg-gray-100 text-gray-500 group-hover:bg-gray-500 group-hover:text-gray-50 ${\n                  this.state.loadingRequest && \"cursor-not-allowed\"\n                }`}\n                title=\"Cancel changes\"\n                onClick={() => {\n                  this.setThisPostTable(null);\n                  this.setModalState(null);\n                  this.setTableColumns(defaultColumns);\n                  this.setSelectedPostId(\"\");\n                  this.setConfirmedPosts(null);\n                }}\n                disabled={this.state.loadingRequest}\n              >\n                Cancel\n              </button>\n            </div>\n          )}\n          {this.state.thisPostTable === null && this.state.modalState === null && (\n            <div className=\"flex item-center justify-end gap-1\">\n              {this.getAllowedPlacementByDegree(\n                this.props.districtPlacementLimits!,\n                this.state.qualification_id\n              ) > 0 &&\n                schoolPost.status === PostRequestStatusInterface.INITIATED && (\n                  <button\n                    className=\"btn btn-blue\"\n                    title=\"View User Profile\"\n                    onClick={() => {\n                      this.setThisPostTable(schoolPost);\n                      this.setModalState(\"CONFIRM\");\n                      this.setTableColumns(editColumns);\n                    }}\n                  >\n                    Reply\n                  </button>\n                )}\n              {/* <button\n                className=\"\n                btn\n                bg-gray-400\n                text-gray-50\n                hover:bg-gray-600\n                transition\n                ease-out\n                duration-500\n                flex items-center\n              \"\n                title=\"Request details\"\n                // onClick={() => {\n                //   this.setThisPost(schoolPost);\n                //   this.setViewPost(true);\n                // }}\n              >\n                Details\n              </button> */}\n            </div>\n          )}\n        </td>\n      </tr>\n    ));\n  };\n\n  render() {\n    if (isEmptyOrSpaces(this.props.auth.user_access.district_id)) {\n      return <Redirect to=\"/\" />;\n    }\n\n    if (\n      this.props.activeAcademicSession !== null &&\n      this.props.activeAcademicSession === \"none\"\n    ) {\n      return (\n        <div className=\"bg-yellow-100 rounded flex flex-col items-center justify-center p-6 my-8 text-yellow-900 border border-yellow-900\">\n          <MdInfoOutline className=\"text-6xl md:text-9xl\" />\n          <div className=\"text-center flex flex-col\">\n            <span className=\"text-2xl md:text-4xl font-extrabold\">\n              No academic active session\n            </span>\n            <span className=\"text-lg\">\n              Please Wait for the system to publish the sessions or contact the\n              administrator\n            </span>\n          </div>\n        </div>\n      );\n    }\n\n    if (this.state.loading || this.state.loadingPost) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading data...\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {/* header title */}\n        <div className=\"flex flex-row items-start gap-4 my-2 overflow-x-auto\">\n          <GiTeacher className=\"text-blue-600 text-5xl md:block hidden\" />\n          <div className=\"w-full\">\n            <div className=\"flex justify-between w-full\">\n              <div className=\"flex flex-col gap-1 justify-between\">\n                <h1 className=\"md:text-4xl text-3xl font-semibold\">\n                  Schools requests\n                </h1>\n                <div className=\"flex-row items-center md:gap-3 gap-2\">\n                  <div className=\"flex flex-row items-center gap-1\">\n                    <span className=\"text-gray-600 text-lg\">\n                      Academic session:\n                    </span>\n                    <span className=\"text-gray-600 font-semibold text-xl\">\n                      {this.props.activeAcademicSession?.title}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        {/* end header title */}\n\n        {/* ----------------------------------------------------------------------------- */}\n\n        {/* CONTENT BODY */}\n        <div className=\"bg-white shadow-md p-2 rounded overflow-x-auto\">\n          <div className=\"my-2 grid grid-cols-1 sm:grid-cols-3 items-center gap-2\">\n            {/* SELECT INSTITUTE */}\n            <select\n              className=\"border-2 w-full md:w-auto border-gray-700 bg-white p-2 rounded focus:outline-none\"\n              value={this.state.institute_id}\n              onChange={(e) => {\n                this.setInstituteId(e.target.value);\n                this.setLeftPlacement(0);\n              }}\n              disabled={\n                this.state.thisPostTable !== null ||\n                this.state.modalState !== null\n              }\n            >\n              <option value=\"\">Select Institute</option>\n              {this.props.schoolLevels.education_categories &&\n              this.props.schoolLevels.education_categories.length > 0 ? (\n                this.props.schoolLevels.education_categories.map(\n                  (institute, index) => (\n                    <option\n                      key={index + 1}\n                      value={institute.education_institute_id}\n                    >\n                      {institute.education_category_title}\n                    </option>\n                  )\n                )\n              ) : (\n                <option value=\"\">No institute found</option>\n              )}\n            </select>\n\n            {/* SELECT CATEGORY */}\n            <select\n              className=\"w-full md:w-auto border-2 border-gray-700 bg-white p-2 rounded focus:outline-none\"\n              value={this.state.category_id}\n              onChange={(e) => this.setCategoryId(e.target.value)}\n              disabled={\n                this.state.thisPostTable !== null ||\n                this.state.modalState !== null\n              }\n            >\n              <option value=\"\">Document category</option>\n              {this.props.document.documentCategory &&\n              this.props.document.documentCategory.length > 0 ? (\n                this.props.document.documentCategory.map((category, index) => (\n                  <option\n                    key={index + 1}\n                    value={category.user_detail_category_id}\n                  >\n                    {category.title}\n                  </option>\n                ))\n              ) : (\n                <option value=\"\">No document category found</option>\n              )}\n            </select>\n\n            {/* SELECT SUB-CATEGORY <==> QUALIFICATION */}\n            <select\n              className=\"w-full md:w-auto border-2 border-gray-700 bg-white p-2 rounded focus:outline-none\"\n              value={this.state.qualification_id}\n              onChange={(e) => {\n                this.setQualificationId(e.target.value);\n                this.setLeftPlacement(0);\n              }}\n              disabled={\n                this.state.thisPostTable !== null ||\n                this.state.modalState !== null\n              }\n            >\n              <option value=\"\">Select Qualification</option>\n              {this.props.document.documentSubCategory &&\n              this.filterQualifications(\n                this.props.document.documentSubCategory,\n                this.state.category_id\n              ).length > 0 ? (\n                this.filterQualifications(\n                  this.props.document.documentSubCategory,\n                  this.state.category_id\n                ).map((qualification, index) => (\n                  <option\n                    key={index + 1}\n                    value={qualification.user_detail_subcategory_id}\n                  >\n                    {qualification.title}\n                  </option>\n                ))\n              ) : (\n                <option value=\"\">No qualification found</option>\n              )}\n            </select>\n          </div>\n          <Table\n            columns={this.state.tableColumns}\n            rows={this.tableData}\n            pagination={true}\n            search={true}\n            thColor=\"gray\"\n          />\n        </div>\n        {/* END CONTENT BODY */}\n\n        {/* ----------------------------------------------------------------------------- */}\n\n        {/* RESPOND TO REQUEST Modal */}\n        {this.state.modalState &&\n          this.state.thisPost &&\n          this.props.systemPositions && (\n            <Modal\n              backDrop={true}\n              theme={Themes.default}\n              close={(): void => {\n                this.setThisPost(null);\n                this.setModalState(null);\n              }}\n              displayClose={true}\n              backDropClose={false}\n              title={\n                <div className=\"flex flex-row gap-4 items-center\">\n                  <div className=\"flex flex-col\">\n                    <span className=\"font-bold text-2xl text-gray-500\">\n                      Responding to requested post\n                    </span>\n                  </div>\n                </div>\n              }\n              widthSizeClass={ModalSize.large}\n              padding={{ title: true, body: false, footer: false }}\n            >\n              <div className=\"px-4 mx-auto mb-4 mt-3\">\n                <div className=\"flex flex-col gap-3\">\n                  {/* LEFT SIDE OF THE SYSTEM ================================== */}\n                  <div className=\"rounded bg-gray-100 border p-2\">\n                    <table>\n                      <tbody>\n                        <tr>\n                          <td className=\"text-lg text-gray-700\">School:</td>\n                          <td className=\"font-medium px-4 text-lg text-gray-700\">\n                            {this.state.thisPost.school.school_name}\n                          </td>\n                        </tr>\n                        <tr>\n                          <td className=\"text-lg text-gray-700\">Position:</td>\n                          <td className=\"font-medium px-4 text-lg text-gray-700\">\n                            {getPositionById(\n                              this.props.systemPositions,\n                              this.state.thisPost.position_id\n                            )\n                              ? getPositionById(\n                                  this.props.systemPositions,\n                                  this.state.thisPost.position_id\n                                )!.position_title\n                              : \"\"}\n                          </td>\n                        </tr>\n                        <tr>\n                          <td className=\"text-lg text-gray-700\">\n                            Needed posts (number):\n                          </td>\n                          <td className=\"font-medium px-4 text-lg text-gray-700\">\n                            {this.state.thisPost.needed_posts}\n                          </td>\n                        </tr>\n                        <tr>\n                          <td className=\"text-lg text-gray-700\">\n                            Occupation (number):\n                          </td>\n                          <td className=\"font-medium px-4 text-lg text-gray-700\">\n                            {this.state.thisPost.occupied_posts}\n                          </td>\n                        </tr>\n                        <tr>\n                          <td className=\"text-lg text-gray-700\">\n                            Explanation:\n                          </td>\n                          <td className=\"font-medium px-4 text-lg text-gray-700\">\n                            {this.state.thisPost.description}\n                          </td>\n                        </tr>\n                        <tr>\n                          <td className=\"text-lg text-gray-700\">\n                            Requested date:\n                          </td>\n                          <td className=\"font-medium px-4 text-lg text-gray-700\">\n                            {DATE(this.state.thisPost.request_date.toString())}\n                          </td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n                  {/* END LEFT SIDE OF THE SYSTEM ================================== */}\n\n                  {/* --------------------------------------------------------------------- */}\n\n                  <div className=\"bg-white\">\n                    <form onSubmit={this.submitRequest}>\n                      <div className=\"text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n                        <div className=\"flex flex-col\">\n                          <label>Approved posts (number)</label>\n                          <input\n                            type=\"number\"\n                            className={`appearance-none rounded w-full py-1 px-4 border-2 bg-white focus:outline-none focus:bg-gray-100 ${\n                              this.state.formError !== null &&\n                              this.state.formError.element === \"approved_posts\"\n                                ? \"border-red-500\"\n                                : \"border-gray-700\"\n                            }`}\n                            value={this.state.approvedPosts}\n                            onChange={(e) => {\n                              this.setApprovedPosts(Number(e.target.value));\n                            }}\n                            min={0}\n                            max={this.state.thisPost.needed_posts}\n                            placeholder=\"1\"\n                            disabled={this.state.loadingRequest}\n                          />\n                          {this.state.formError !== null &&\n                            this.state.formError.element ===\n                              \"approved_posts\" && (\n                              <span className=\"text-red-600 font-bold text-xs\">\n                                {this.state.formError.msg}\n                              </span>\n                            )}\n                        </div>\n                      </div>\n                      <div className=\"pt-4 flex justify-between\">\n                        <button\n                          className=\"btn bg-gray-400 text-white hover:bg-gray-600\"\n                          onClick={() => {\n                            this.setThisPost(null);\n                            this.setApprovedPosts(0);\n                            this.setModalState(null);\n                          }}\n                        >\n                          Exit\n                        </button>\n                        <button\n                          className=\"btn bg-primary text-white hover:bg-blue-600\"\n                          disabled={this.state.loadingRequest}\n                        >\n                          {this.state.loadingRequest ? \"Loading...\" : \"Respond\"}\n                        </button>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </Modal>\n          )}\n        {/* End of RESPOND TO REQUEST Modal */}\n\n        {/* ----------------------------------------------------------------------------- */}\n\n        {this.state.viewPost &&\n          this.state.modalState === null &&\n          this.state.thisPost &&\n          this.props.systemPositions && (\n            <Modal\n              backDrop={true}\n              theme={Themes.default}\n              close={(): void => {\n                this.setThisPost(null);\n                this.setViewPost(false);\n              }}\n              displayClose={true}\n              backDropClose={false}\n              title={\n                <div className=\"flex flex-row gap-4 items-center\">\n                  {/* <IoBriefcase className=\"text-5xl text-gray-500\" /> */}\n                  <div className=\"flex flex-col\">\n                    <span className=\"font-bold text-2xl text-gray-500\">\n                      Viewing Post Request\n                    </span>\n                  </div>\n                </div>\n              }\n              widthSizeClass={ModalSize.extraLarge}\n              padding={{ title: true, body: false, footer: false }}\n            >\n              <section className=\"px-4 mx-auto mb-4 mt-3 flex items-start\">\n                <section className=\"w-full\">\n                  <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                    <span className=\"text-gray-500\">Position: </span>\n                    <span className=\"font-bold\">\n                      {getPositionById(\n                        this.props.systemPositions,\n                        this.state.thisPost.position_id\n                      )\n                        ? getPositionById(\n                            this.props.systemPositions,\n                            this.state.thisPost.position_id\n                          )!.position_title\n                        : \"Unknown position\"}\n                    </span>\n                  </div>\n                  <div className=\"my-2\">\n                    <table className=\"w-full border\" id=\"report_content\">\n                      <thead className=\"bg-blue-50 border-b border-gray-300 text-gray-600 font-bold text-sm\">\n                        <tr>\n                          <td className=\"px-2 py-2\">Requested posts</td>\n                          <td className=\"px-2 py-2\">Approved posts</td>\n                          <td className=\"px-2 py-2\">Placed posts</td>\n                          <td className=\"px-2 py-2\">Received posts</td>\n                          <td className=\"px-2 py-2\">Not received posts</td>\n                          <td className=\"px-2 py-2\">Status</td>\n                          <td></td>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <tr>\n                          <td className=\"px-2 py-2\">\n                            {this.state.thisPost.needed_posts}\n                          </td>\n                          <td className=\"px-2 py-2\">\n                            {this.state.thisPost.requested_post_status !==\n                            PostRequestStatusInterface.INITIATED ? (\n                              <div className=\"flex items-center gap-1\">\n                                {this.state.thisPost.confirmed_posts}\n                              </div>\n                            ) : (\n                              \"-\"\n                            )}\n                          </td>\n                          <td className=\"px-2 py-2\">\n                            {this.props.districtPlacements &&\n                            this.state.thisPost.requested_post_status !==\n                              PostRequestStatusInterface.INITIATED ? (\n                              <span>\n                                {\n                                  getPlacementByRequest(\n                                    this.props.districtPlacements,\n                                    this.state.thisPost._id\n                                  ).length\n                                }\n                              </span>\n                            ) : (\n                              \"-\"\n                            )}\n                          </td>\n                          <td className=\"px-2 py-2\">\n                            {this.state.thisPost.requested_post_status ===\n                            PostRequestStatusInterface.RECEIVED\n                              ? this.state.thisPost.received_posts\n                              : \"-\"}\n                          </td>\n                          <td className=\"px-2 py-2\">\n                            {this.props.districtPlacements &&\n                            this.state.thisPost.requested_post_status ===\n                              PostRequestStatusInterface.RECEIVED ? (\n                              <span>\n                                {\n                                  getPlacementByRequest(\n                                    this.props.districtPlacements,\n                                    this.state.thisPost._id,\n                                    PlacedCandidateStatus.REJECTED\n                                  ).length\n                                }\n                              </span>\n                            ) : (\n                              \"-\"\n                            )}\n                          </td>\n\n                          <td className=\"px-2 py-2\">\n                            <span\n                              className={`px-2 py-1 font-semibold rounded ${\n                                this.state.thisPost.requested_post_status ===\n                                PostRequestStatusInterface.INITIATED\n                                  ? \"text-gray-700 bg-gray-100 dark:bg-gray-700 dark:text-gray-100\"\n                                  : this.state.thisPost\n                                      .requested_post_status ===\n                                    PostRequestStatusInterface.CONFIRMED\n                                  ? \"text-blue-700 bg-blue-100 dark:bg-blue-700 dark:text-blue-100\"\n                                  : \"text-green-800 bg-green-100 dark:bg-green-800 dark:text-green-100\"\n                              }`}\n                            >\n                              {this.props.districtPlacements\n                                ? showRequestStatus(\n                                    this.state.thisPost.requested_post_status,\n                                    getPlacementByRequest(\n                                      this.props.districtPlacements,\n                                      this.state.thisPost._id,\n                                      \"all\"\n                                    ).length,\n                                    getPlacementByRequest(\n                                      this.props.districtPlacements,\n                                      this.state.thisPost._id,\n                                      PlacedCandidateStatus.PLACED\n                                    ).length,\n                                    getPlacementByRequest(\n                                      this.props.districtPlacements,\n                                      this.state.thisPost._id,\n                                      PlacedCandidateStatus.REJECTED\n                                    ).length\n                                  )\n                                : showRequestStatus(\n                                    this.state.thisPost.requested_post_status,\n                                    0,\n                                    0,\n                                    0\n                                  )}\n                            </span>\n                          </td>\n                          <td>\n                            {this.state.thisPost.requested_post_status ===\n                              PostRequestStatusInterface.INITIATED && (\n                              <button\n                                className=\"font-bold py-1 px-4 rounded bg-gray-500 text-white hover:bg-gray-700\"\n                                onClick={() => {\n                                  this.setModalState(\"UPDATE\");\n                                }}\n                                disabled={\n                                  this.state.thisPost.requested_post_status !==\n                                  PostRequestStatusInterface.INITIATED\n                                }\n                              >\n                                Reply\n                              </button>\n                            )}\n                            {this.props.districtPlacements &&\n                              getPlacementByRequest(\n                                this.props.districtPlacements,\n                                this.state.thisPost._id,\n                                PlacedCandidateStatus.PENDING\n                              ).length === 0 &&\n                              getPlacementByRequest(\n                                this.props.districtPlacements,\n                                this.state.thisPost._id,\n                                PlacedCandidateStatus.REJECTED\n                              ).length > 0 && (\n                                <button\n                                  className=\"font-bold ml-2 py-1 px-4 rounded bg-gray-500 text-white hover:bg-gray-700\"\n                                  onClick={() =>\n                                    this.reDoPlacement(this.state.thisPost!)\n                                  }\n                                  disabled={this.state.loadingRequest}\n                                >\n                                  Do placement\n                                </button>\n                              )}\n                          </td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n                  {getPositionById(\n                    this.props.systemPositions,\n                    this.state.thisPost.position_id\n                  ) && (\n                    <ViewPosition\n                      thisPosition={\n                        getPositionById(\n                          this.props.systemPositions,\n                          this.state.thisPost.position_id\n                        )!\n                      }\n                      isGuest={true}\n                    />\n                  )}\n                </section>\n              </section>\n            </Modal>\n          )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  schools,\n  system_settings,\n  schoolLevels,\n  document,\n  sessionPlan,\n}: StoreState): {\n  auth: Auth;\n  districtPosts: PostSchoolInterface[];\n  districtPlacements: placedCandidateInterface[] | null;\n  systemPositions: PositionAPI[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  document: DocumentReducerInterface;\n  activeAcademicSession: AcademicSessionInterface | \"none\" | null;\n  districtPlacementLimits: PlacementListInterface[] | null;\n} => {\n  return {\n    auth: auth,\n    districtPosts: schools.districtPosts,\n    districtPlacements: schools.districtPlacements,\n    systemPositions: system_settings.systemPositions,\n    schoolLevels,\n    document,\n    activeAcademicSession: sessionPlan.activeAcademicSession,\n    districtPlacementLimits: schools.districtPlacementLimits,\n  };\n};\n\nexport const District = connect(mapStateToProps, {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  FC_GetPositionsByInstitution,\n  fetchDistrictPosts,\n  getDistrictPlacement,\n  updateSchoolPost,\n  loadEducationCategories,\n  getActiveAcademicSession,\n  getDistrictPlacementLimit,\n  PushPopupAlert,\n})(_District);\n"],"sourceRoot":""}
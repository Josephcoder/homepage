{"version":3,"sources":["components/Table/Table.tsx","actions/settings.ts","shared/interfaces.tsx","containers/Positions/ViewRequirements.tsx","actions/schools.ts","interfaces/marks_publication.ts","containers/Positions/ViewPosition.tsx","containers/HeadTeacher/ReceivePost.tsx","containers/HeadTeacher/ViewRequest.tsx","containers/HeadTeacher/RequestList.tsx","containers/HeadTeacher/StepsHeader.tsx","containers/HeadTeacher/RequestPostForm.tsx","containers/HeadTeacher/RequestTeacher.tsx"],"names":["Table","table","tr","rows","columns","hideColumns","pagination","search","tableSize","tableClass","tableId","rounded","searchBG","thColor","loading","length","result","characters","charactersLength","i","charAt","Math","floor","random","FC_makeID","useState","totalItems","setTotalItems","totalPages","setTotalPages","currentPage","setCurrentPage","pages","setPages","pageSize","setPageSize","startIndex","setStartIndex","endIndex","setEndIndex","useEffect","tablePagination","document","getElementById","getElementsByTagName","ceil","min","_pages","Array","from","keys","map","style","display","className","type","placeholder","onChange","e","data","filterType","filter","td","cols","toLowerCase","textContent","innerText","indexOf","filterTable","target","value","disabled","Number","id","column","index","padding","alignText","isSortAllowed","onClick","switching","x","y","shouldSwitch","colIndex","dir","switchcount","innerHTML","parentNode","insertBefore","sortThisColumn","columnTitle","aria-label","page","pageIndex","getSystemSettings","callback","dispatch","a","setAxiosToken","axios","get","API","AUTH","res","ActionTypes","GET_SYSTEM_SETTINGS","payload","console","log","code_error","errorToText","disableSystemSetting","DISABLE_SYSTEM_SETTINGS","getApplicationSessions","APPLICATION","GET_APPLICATION_SESSIONS","getPositions","GET_POSTIONS","deletePosition","DELETE_POSITION","publishPosition","PUBLISH_POSITION","PostRequestStatusInterface","DocumentAttributesInterface","DocValidationStatusInterface","SESSION_PLAN_KEYS","DOCUMENT_VALIDATION","EXAMINATION","MARKS_PUBLICATION","PLACEMENT_TRANSFER","ViewRequirements","props","requirements","colSpan","item","subcategory_title","field_title","required","field_id","getSchools","GET_SCHOOLS","createSchool","schools","CREATE_SCHOOL","updateSchool","UPDATE_SCHOOL","deleteSchool","DELETE_SCHOOL","fetchSchoolPosts","school_id","PLACEMENT","schoolPosts","FETCH_SCHOOL_POSTS","getSchoolPlacement","GET_SCHOOL_PLACEMENT","createSchoolPost","CREATE_SCHOOL_POST","updateSchoolPost","TYPE","UPDATE_SCHOOL_POST","fetchDistrictPosts","district_id","districtPosts","FETCH_DISTRICT_POSTS","getDistrictPlacement","GET_DISTRICT_PLACEMENT","MarksPublicationCandidateStatus","marksPublicationCandidateReportContentKeyInterface","PlacedCandidateStatus","WaitingListStatus","placementReportContentKeyInterface","FC_PositionDistinctCategory","PositionData","PositionsTemp","DistinctCategoriesTemp","DistinctCategoriesIds","DistinctSubCategoriesTemp","DistinctSubCategoriesIds","pos","req","thisRequirements","thisCategory","category","thisSubCategory","subcategory","field","position_requirement","thisField","push","category_id","user_detail_category_id","category_title","title","subcategory_id","user_detail_subcategory_id","_id","includes","connect","PushPopupAlert","loadingRequest","setLoadingRequest","position_id","status","name","window","confirm","patch","isPublished","theme","PopupAlertTheme","info","thisPositionCopy","thisPosition","setThisPosition","error","danger","position_title","description","school_level_id","school_level_name","education_institute_id","education_category_title","courses","course_name","course_code","course_id","isGuest","NoResultThemes","Dark","ReceivePost","submitRequest","thisPlacement","action","isEmptyOrSpaces","state","comment","setFormError","element","msg","received","thisPost","received_posts","requested_post_id","confirmed_posts","confirmed_by","auth","user","user_id","approval_date","needed_posts","male_number","female_number","occupied_posts","requested_by","requested_post_status","RECEIVED","confirmPlacement","role_error","post","placedStatus","waiting_list_id","placed_candidate_id","REJECTED","PLACED","user_access","message","loadingPost","setLoadingPost","getSchoolPlacementError","setState","placement_id","viewPost","setThisPost","setReceivedPosts","setModalState","this","getPositionById","systemPositions","CONFIRMED","getPlacementByRequest","placementList","INITIATED","capitalizeFirstLetter","src","AUTH_FILES","user_info","photo","alt","fname","lname","phone_number","email","formError","resize","Component","ViewRequest","Modal","backDrop","Themes","default","close","setViewPost","displayClose","backDropClose","widthSizeClass","ModalSize","large","body","footer","schoolPlacements","setPostId","setPositionId","setRequestedPosts","setRequestExplanation","setFemaleOnPosition","setMaleOnPosition","setFormSteps","ONE","TWO","setStepState","RequestList","setSearchInput","searchInput","setFilterByPosition","filterByPosition","position","schoolPost","NoResult","modalState","StepsHeader","currentStep","stepState","RequestPostForm","GetAllowedPositions","postPositionIds","key","Object","prototype","hasOwnProperty","call","preventDefault","requestedPosts","requestExplanation","thisSchool","find","positionId","maleOnPosition","femaleOnPosition","success","setSchoolLevel","selectedLevel","getPositionByLevelId","allPosition","levelId","formSteps","schoolLevels","school_levels","ViewPosition","onSubmit","htmlFor","system_settings","placements","request","PENDING","request_id","RequestTeacher","setLoading","postId","receivedPosts","componentDidMount","to","loadingCandidatesError","loadSchoolLevels","PostRequest"],"mappings":"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","file":"static/js/36.34298407.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport { MdNavigateBefore, MdNavigateNext, MdSearch } from \"react-icons/md\";\n\nconst FC_makeID = (length: number = 5): string => {\n  let result: string = \"\";\n  let characters: string =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  let charactersLength = characters.length;\n  for (let i: number = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\nexport const sortThisColumn = (\n  tableId: string,\n  colIndex: number = 0,\n  dir: \"asc\" | \"desc\" = \"asc\"\n) => {\n  var table,\n    rows,\n    switching,\n    i,\n    x,\n    y,\n    shouldSwitch,\n    switchcount = 0;\n  table = document.getElementById(tableId) as HTMLTableElement;\n  switching = true;\n  /* Make a loop that will continue until\n  no switching has been done: */\n  if (table) {\n    while (switching) {\n      //start by saying: no switching is done:\n      switching = false;\n      rows = table.rows;\n      /*Loop through all table rows (except the\n    first, which contains table headers):*/\n      for (i = 1; i < rows.length - 1; i++) {\n        //start by saying there should be no switching:\n        shouldSwitch = false;\n        /*Get the two elements you want to compare,\n      one from current row and one from the next:*/\n        x = rows[i].getElementsByTagName(\"TD\")[colIndex];\n        y = rows[i + 1].getElementsByTagName(\"TD\")[colIndex];\n        /*check if the two rows should switch place,\n      based on the direction, asc or desc:*/\n        if (dir === \"asc\" && x && y) {\n          if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        } else if (dir === \"desc\" && x && y) {\n          if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        }\n      }\n      if (shouldSwitch && rows[i].parentNode) {\n        /*If a switch has been marked, make the switch\n      and mark that a switch has been done:*/\n        rows[i].parentNode!.insertBefore(rows[i + 1], rows[i]);\n        switching = true;\n        //Each time a switch is done, increase this count by 1:\n        switchcount++;\n      } else {\n        /*If no switching has been done AND the direction is \"asc\",\n      set the direction to \"desc\" and run the while loop again.*/\n        if (switchcount === 0 && dir === \"asc\") {\n          dir = \"desc\";\n          switching = true;\n        }\n      }\n      // if (i === 0) continue;\n      // rows.cells[i].style.backgroundColor = \"blue\";\n    }\n  }\n};\n\nexport interface TableColumnsInterface {\n  columnTitle: JSX.Element | string;\n  alignText: string;\n  padding?: string;\n  isSortAllowed?: boolean;\n}\n\ninterface TableProps {\n  columns: TableColumnsInterface[];\n  rows: Function;\n  hideColumns?: boolean;\n  pagination?: boolean;\n  search?: boolean;\n  tableSize?: string;\n  tableClass?: string;\n  tableId?: string;\n  rounded?: boolean;\n  searchBG?: string;\n  thColor?: string;\n  loading?: boolean;\n}\n\nconst Table: React.FC<TableProps> = ({\n  rows,\n  columns,\n  hideColumns = false,\n  pagination = false,\n  search = false,\n  tableSize = \"w-full\",\n  tableClass,\n  tableId = \"myTable\",\n  rounded = false,\n  searchBG = \"bg-gray-200\",\n  thColor = \"blue\",\n  loading = false,\n}) => {\n  const startPage = 1;\n  tableId = tableId === \"myTable\" ? FC_makeID() : tableId;\n  let table: HTMLElement, tr: HTMLCollectionOf<HTMLTableRowElement>;\n  const [totalItems, setTotalItems] = useState<number>(0);\n  const [totalPages, setTotalPages] = useState<number>(1);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [pages, setPages] = useState<number[]>();\n  const [pageSize, setPageSize] = useState<number>(10);\n  const [startIndex, setStartIndex] = useState<number>(0);\n  const [endIndex, setEndIndex] = useState<number>(0);\n\n  useEffect(() => {\n    pagination && tablePagination();\n  });\n\n  const filterTable = (\n    data: string,\n    filterType?: \"default\" | \"field\"\n  ): void => {\n    var filter, tr, td, rows: number, cols: number, txtValue;\n    if (filterType === \"field\" && data === \"all\") data = \"\";\n    filter = data.toLowerCase();\n    table = document.getElementById(tableId)!;\n    tr = table.getElementsByTagName(\"tr\");\n    for (rows = 0; rows < tr.length; rows++) {\n      for (cols = 0; cols < columns.length; cols++) {\n        td = tr[rows].getElementsByTagName(\"td\")[cols];\n        if (td) {\n          txtValue = td.textContent || td.innerText;\n          if (txtValue.toLowerCase().indexOf(filter) > -1) {\n            tr[rows].style.display = \"\";\n            break;\n          } else {\n            tr[rows].style.display = \"none\";\n          }\n        }\n      }\n    }\n  };\n\n  const tablePagination = (): void => {\n    table = document.getElementById(tableId)!;\n    tr = table.getElementsByTagName(\"tr\");\n    setTotalItems(tr.length);\n    setTotalPages(Math.ceil(totalItems / pageSize));\n\n    // calculate start and end item indexes on the current page\n    setStartIndex((currentPage - 1) * pageSize);\n    setEndIndex(Math.min(startIndex + pageSize - 1, totalItems - 1));\n\n    /**\n     * TODO!\n     * There is a problem with this condition\n     */\n    let _pages = Array.from(Array(totalPages + 1 - startPage).keys()).map(\n      (i) => startPage + i\n    );\n    if (!pages || _pages.length !== pages.length) {\n      setPages(_pages);\n    }\n\n    for (let i: number = 0; i < tr.length; i++) {\n      if (i >= startIndex && i <= endIndex) {\n        tr[i].style.display = \"\";\n      } else {\n        tr[i].style.display = \"none\";\n      }\n    }\n  };\n\n  return (\n    <div className={`${tableSize}`}>\n      {/* search box  */}\n      {search && (\n        <div className={`${searchBG} w-full mb-2`}>\n          {search && (\n            <div className=\"bg-white rounded flex items-center w-full p-2 border-2 border-gray-500\">\n              <MdSearch className=\"h-5 w-5 fill-current text-gray-400\" />\n              <input\n                type=\"search\"\n                placeholder=\"search\"\n                onChange={(e) => filterTable(e.target.value)}\n                className=\"w-full h-6 pl-4 text-sm outline-none focus:outline-none bg-white\"\n                disabled={loading}\n              />\n\n              {pagination && (\n                <div className=\"select\">\n                  <select\n                    className=\"text-base outline-none focus:outline-none bg-white\"\n                    onChange={(e) => setPageSize(Number(e.target.value))}\n                    disabled={loading}\n                  >\n                    <option value=\"10\">10</option>\n                    <option value=\"25\">25</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                  </select>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n      <table\n        className={\n          tableClass\n            ? tableClass\n            : `w-full shadow ${\n                rounded && \"sm:rounded-lg\"\n              } table-auto order-table`\n        }\n        id={tableId}\n      >\n        {!hideColumns && (\n          <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-base\">\n            <tr\n              className={`text-left tracking-wide bg-${thColor}-100 border-b-2 border-${thColor}-500 text-${thColor}-600`}\n            >\n              {columns.map((column, index) => (\n                <th\n                  key={index}\n                  className={`${column.padding} text-${\n                    column.alignText\n                  } px-3 py-2 ${column.isSortAllowed && \"cursor-pointer\"}`}\n                  onClick={() =>\n                    column.isSortAllowed && sortThisColumn(tableId, index)\n                  }\n                >\n                  <div className=\"flex items-center gap-1\">\n                    {column.columnTitle}\n                    {column.isSortAllowed && <BiSort />}\n                  </div>\n                </th>\n              ))}\n            </tr>\n          </thead>\n        )}\n        <tbody id=\"table-data\" className=\"bg-white text-black text-base\">\n          {rows()}\n        </tbody>\n      </table>\n      {pagination && (\n        <div className=\"sm:flex-1 sm:flex sm:items-center sm:justify-between mt-4 work-sans\">\n          <div>\n            <span className=\"text-xs xs:text-sm text-gray-900\">\n              Showing 1 to {pageSize} of {totalItems - 1} Entries\n            </span>\n          </div>\n          <div>\n            <nav className=\"inline-flex shadow-sm\">\n              <div>\n                <button\n                  type=\"button\"\n                  className={`inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 text-sm font-medium text-gray-500 ${\n                    currentPage !== 1 && \"bg-white\"\n                  }`}\n                  aria-label=\"Previous\"\n                  disabled={currentPage === 1 || loading}\n                  onClick={() => setCurrentPage(currentPage - 1)}\n                >\n                  <MdNavigateBefore className=\"h-5 w-5\" />\n                </button>\n              </div>\n              <div>\n                {pages &&\n                  pages.map((page, pageIndex) => (\n                    <button\n                      key={pageIndex}\n                      className={`-ml-px inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium text-gray-700 ${\n                        page !== currentPage\n                          ? \"bg-white\"\n                          : \"bg-gray-100 cursor-default\"\n                      }`}\n                      disabled={page === currentPage || loading}\n                      onClick={() => setCurrentPage(page)}\n                    >\n                      {page}\n                    </button>\n                  ))}\n              </div>\n              <div>\n                <button\n                  type=\"button\"\n                  className={`inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 text-sm leading-5 font-medium text-gray-500 ${\n                    currentPage !== totalPages && \"bg-white\"\n                  }`}\n                  aria-label=\"Next\"\n                  disabled={currentPage === totalPages || loading}\n                  onClick={() => setCurrentPage(currentPage + 1)}\n                >\n                  <MdNavigateNext className=\"h-5 w-5\" />\n                </button>\n              </div>\n            </nav>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Table;\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  ApplicationSessionInterface,\n  SystemSettingsInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PositionAPI } from \"../interfaces/position\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// SYSTEM SETTINGS  ==============\nexport interface GetSystemSettingsAction {\n  type: ActionTypes.GET_SYSTEM_SETTINGS;\n  payload: SystemSettingsInterface[];\n}\n\nexport interface DisableSystemSettingsAction {\n  type: ActionTypes.DISABLE_SYSTEM_SETTINGS;\n  payload: {\n    system_setting_id: string;\n    status: \"enabled\" | \"disabled\";\n  };\n}\n\n// APPLICATION SETTINGS ===================================\nexport interface GetApplicationSessionAction {\n  type: ActionTypes.GET_APPLICATION_SESSIONS;\n  payload: ApplicationSessionInterface[];\n}\n\nexport interface CreateApplicationSessionAction {\n  type: ActionTypes.CREATE_APPLICATION_SESSIONS;\n  payload: ApplicationSessionInterface;\n}\n\nexport interface UpdateApplicationSessionAction {\n  type: ActionTypes.UPDATE_APPLICATION_SESSIONS;\n  payload: ApplicationSessionInterface;\n}\n\nexport interface DisableApplicationSessionAction {\n  type: ActionTypes.DISABLE_APPLICATION_SESSION;\n  payload: {\n    application_session_id: string;\n    status: boolean;\n  };\n}\n\n// POSITIONS SETTINGS ===================================\nexport interface PositionCreateInterface {\n  position_id?: string;\n  position_title: string;\n  description: string;\n  school_level_id: string;\n  education_institute_id: string;\n  courses: string[];\n  requirements: {\n    user_detail_category_id: string;\n    user_detail_subcategory_id: string;\n    position_requirement: {\n      category_subcategory_data_id: string;\n      required: boolean;\n    }[];\n    required: boolean;\n  }[];\n}\nexport interface GetPositionsAction {\n  type: ActionTypes.GET_POSTIONS;\n  payload: PositionAPI[];\n}\n\nexport interface CreatePositionsAction {\n  type: ActionTypes.CREATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface UpdatePositionsAction {\n  type: ActionTypes.UPDATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface DeletePositionAction {\n  type: ActionTypes.DELETE_POSITION;\n  payload: string;\n}\n\nexport interface PublishPositionAction {\n  type: ActionTypes.PUBLISH_POSITION;\n  payload: {\n    position_id: string;\n    status: boolean;\n  };\n}\n\nexport type SystemActionType =\n  | GetSystemSettingsAction\n  | DisableSystemSettingsAction\n  | GetApplicationSessionAction\n  | CreateApplicationSessionAction\n  | UpdateApplicationSessionAction\n  | DisableApplicationSessionAction\n  | GetPositionsAction\n  | CreatePositionsAction\n  | UpdatePositionsAction\n  | DeletePositionAction\n  | PublishPositionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSystemSettings = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<SystemSettingsInterface[]>(\n        `${API.AUTH}/settings`\n      );\n      dispatch<GetSystemSettingsAction>({\n        type: ActionTypes.GET_SYSTEM_SETTINGS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const disableSystemSetting = (data: {\n  system_setting_id: string;\n  status: \"enabled\" | \"disabled\";\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableSystemSettingsAction>({\n      type: ActionTypes.DISABLE_SYSTEM_SETTINGS,\n      payload: data,\n    });\n  };\n};\n\n// ============================ PERIODS =======================\n\nexport const getApplicationSessions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<ApplicationSessionInterface[]>(\n        `${API.APPLICATION}/applicationsesion`\n      );\n      dispatch<GetApplicationSessionAction>({\n        type: ActionTypes.GET_APPLICATION_SESSIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createAplicationSession = (data: ApplicationSessionInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateApplicationSessionAction>({\n      type: ActionTypes.CREATE_APPLICATION_SESSIONS,\n      payload: data,\n    });\n  };\n};\n\nexport const updateAplicationSession = (data: ApplicationSessionInterface) => {\n  console.log({ check: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateApplicationSessionAction>({\n      type: ActionTypes.UPDATE_APPLICATION_SESSIONS,\n      payload: data,\n    });\n  };\n};\n\nexport const disableApplicationSession = (data: {\n  application_session_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableApplicationSessionAction>({\n      type: ActionTypes.DISABLE_APPLICATION_SESSION,\n      payload: data,\n    });\n  };\n};\n\nexport const getPositions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(`${API.APPLICATION}/position`);\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createPosition = (data: PositionCreateInterface) => {\n  console.log({ createPosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreatePositionsAction>({\n      type: ActionTypes.CREATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const updatePosition = (data: PositionCreateInterface) => {\n  console.log({ updatePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdatePositionsAction>({\n      type: ActionTypes.UPDATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const deletePosition = (data: string) => {\n  console.log({ deletePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<DeletePositionAction>({\n      type: ActionTypes.DELETE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const publishPosition = (data: {\n  position_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<PublishPositionAction>({\n      type: ActionTypes.PUBLISH_POSITION,\n      payload: data,\n    });\n  };\n};\n","import {\n  ApplicationStates,\n  SESSION_PLAN_KEYS,\n} from \"../interfaces/application\";\n\nexport interface SystemSettingsInterface {\n  system_setting_id: string;\n  name: string;\n  key: string;\n  status: \"enabled\" | \"disabled\";\n}\n\nexport interface ApplicationSessionInterface {\n  is_active: boolean;\n  application_session_name: string;\n  period: string;\n  application_start_date: string;\n  application_end_date: string;\n  createdAt: string;\n  updatedAt: string;\n  application_session_id: string;\n}\n\nexport interface UserInfoInterface {\n  document_type?: string;\n  issue_number?: string;\n  date_of_issue?: string;\n  date_of_expiry?: string;\n  place_of_issue?: string;\n  application_number?: string;\n  fname: string;\n  lname: string;\n  sex: \"M\" | \"F\";\n  father_names: string;\n  mother_names: string;\n  date_of_birth: string;\n  place_of_birth?: string;\n  country_of_birth: string;\n  village_id: string;\n  village: string;\n  cell: string;\n  sector: string;\n  district: string;\n  province: string;\n  photo?: string;\n  civil_status?: string;\n  spouse?: any;\n  status?: string;\n}\n\nexport interface UserInterface {\n  user_id: string;\n  n_id?: string;\n  phone_number: string;\n  email: string;\n  password?: string;\n  user_info: UserInfoInterface;\n  details: UserDocumentsInterface[];\n  user_photo?: string;\n  default_access: RoleToUserInterface | null;\n  custome_access: CustomeAccessInterface | null;\n  is_active?: boolean;\n}\n\nexport interface CandidateDetailsInterface_old {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: string;\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  } | null;\n  doc_history_status: string;\n  get_in_date: string;\n  approved?: string;\n}\n\nexport interface CandidateDetailsInterface {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: string;\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  } | null;\n  doc_history_status: string;\n  get_in_date: string;\n  approved?: string;\n}\n\nexport interface DocInterface {\n  category_subcategory_data: string;\n  school: string;\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  approved: string;\n  doc_id: string;\n  validated_by: null;\n  validation_status: string;\n  doc_history_status: string;\n  get_in_date: string;\n  date_modefied: string;\n}\n\nexport interface CandidateRoleToUserInterface {\n  key: string;\n  status: number;\n  access: boolean;\n  assigned_date: string;\n}\n\nexport interface CandidatesInterface_old {\n  user_id: string;\n  n_id: string;\n  fname: string;\n  lname: string;\n  phone_number: string;\n  district: string;\n  email: string;\n  details: CandidateDetailsInterface[];\n}\n\nexport interface ApplicationExamsInterface {\n  course_id: string;\n  proctoring_type: string;\n  center_id: string;\n  room_id: string;\n}\n\nexport interface CandidatesInterface {\n  user_id: string;\n  n_id: string;\n  fname: string;\n  lname: string;\n  phone_number: string;\n  district: string;\n  email: string;\n  in_education?: boolean;\n  disability?: boolean;\n  details: CandidateDetailsInterface[];\n  exams: ApplicationExamsInterface[];\n}\n\nexport interface CustomeAccessInterface {\n  access: AccessTaskInterface[];\n  user_id: string;\n  custome_user_access_id: string;\n}\n\nexport interface UserDocumentsInterface {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: { title: string; school_id: string | null };\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  approved: \"waiting\" | \"approved\" | \"rejected\";\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    commet: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  };\n}\n\nexport interface SystemUserRoleInterface {\n  system_user_role_id: string;\n  role: string;\n  status: boolean;\n  access: AccessTaskInterface[];\n  district_required?: boolean;\n  school_required?: boolean;\n  room_required?: boolean;\n  education_institution_required?: boolean;\n  school_id: string;\n  district_id: string;\n}\n\nexport interface CustomeUserAccessInterface {\n  user_id: string;\n  access?: [\n    {\n      id: string;\n      task: string;\n      key: string;\n      permitted: {\n        create: boolean;\n        delete: boolean;\n        update: boolean;\n        view: boolean;\n      };\n    }\n  ];\n}\n\nexport interface PermissionInterface {\n  create: boolean;\n  view: boolean;\n  update: boolean;\n  delete: boolean;\n}\n\nexport interface AccessTaskInterface {\n  id: string;\n  task: string;\n  key: string;\n  permitted: PermissionInterface;\n}\n\nexport interface RoleToUserInterface {\n  system_user_role_id: string;\n  role: string;\n  access: AccessTaskInterface[];\n  status?: number;\n  school_id: string;\n  district_id: string;\n  room_id: string;\n  education_institution_id: string;\n}\n\nexport interface RoomsInterface {\n  occupied: number;\n  isUsed: string;\n  room_type: string;\n  room_number: number;\n  capacity: number;\n  _id: string;\n}\n\nexport interface CentersInterface {\n  rooms: RoomsInterface[];\n  isUsed: boolean;\n  _id: string;\n  center_name: string;\n  center_code: number;\n  district_id: string;\n}\n\nexport interface SectorInterface {\n  district_code: number;\n  district_id: string;\n  sector_name: string;\n  sector_code: number;\n  sector_id: string;\n}\n\nexport interface DistrictInterface {\n  centers: CentersInterface[];\n  sectors: SectorInterface[];\n  province_code: number;\n  province_id: string;\n  district_name: string;\n  district_code: number;\n  _id: string;\n}\n\nexport interface RoomLocationInterface {\n  districts: DistrictInterface[];\n  province_name: string;\n  province_code: number;\n  _id: string;\n}\n\nexport interface AssignRoleToUserActionInterface {\n  user_id: string;\n  data: RoleToUserInterface;\n}\n\nexport interface AssignRoleToUserActionInterface {\n  user_id: string;\n  data: RoleToUserInterface;\n}\n\nexport enum PostRequestStatusInterface {\n  INITIATED = \"initiated\",\n  CONFIRMED = \"confirmed\",\n  RECEIVED = \"received\",\n}\n\nexport interface PostSchoolInterface_old {\n  post_at_school_id: string;\n  school_id: string;\n  position_id: string;\n  district_id: string;\n  needed_posts: number;\n  confirmed_posts?: number;\n  occupied_posts?: number;\n  requested_by: string;\n  confirmed_by?: string;\n  received_posts?: number;\n  request_date: Date;\n  approval_date?: Date;\n  post_at_school_status: PostRequestStatusInterface;\n}\n\nexport interface PostSchoolInterface {\n  requested_post_id: string;\n  school_id: string;\n  position_id: string;\n  district_id: string;\n  needed_posts: number;\n  male_number: number;\n  female_number: number;\n  description: string;\n  confirmed_posts?: number;\n  occupied_posts?: number;\n  requested_by: string;\n  confirmed_by?: string;\n  received_posts?: number;\n  request_date: Date;\n  approval_date?: Date;\n  requested_post_status: PostRequestStatusInterface;\n}\n\nexport interface SchoolInfoInterface {\n  school_id: string;\n  school_title: string;\n  district_id: string;\n  number_of_females?: number;\n  number_of_males?: number;\n}\n\nexport interface SchoolsInterface {\n  _id: string;\n  status: boolean;\n  school_name: string;\n  school_code: number;\n  province_id: string;\n  province_code: number;\n  district_id: string;\n  district_code: number;\n  sector_id: string;\n  sector_code: number;\n  education_category_id: string;\n}\n\nexport interface SchoolLevelInterface {\n  school_level_id: string;\n  school_level_name: string;\n  description: string;\n  education_institute: string[];\n  courses: [];\n}\n\nexport interface CourseInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n}\n\nexport interface EducationInstituteInterface {\n  education_category_title: string;\n  school_levels: [];\n  description: string;\n  education_institute_id: string;\n}\n\nexport interface PositionRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface PositionInterface {\n  courses: CourseInterface[];\n  position_title: string;\n  description: string;\n  school_level_id: SchoolLevelInterface;\n  education_institute_id: EducationInstituteInterface;\n  requirements: PositionRequirementInterface[];\n  position_id: string;\n}\n\nexport enum DocumentAttributesInterface {\n  \"Title\" = \"title\",\n  \"Description\" = \"description\",\n  \"Files\" = \"files\",\n  \"email\" = \"email\",\n  \"names\" = \"names\",\n  \"phone_number\" = \"phone_number\",\n  \"position\" = \"position\",\n  \"relation\" = \"relation\",\n  \"src\" = \"src\",\n  \"year\" = \"year\",\n  \"company\" = \"company\",\n  \"category_subcategory_data\" = \"category_subcategory_data\",\n  \"others\" = \"others\",\n  \"start_year\" = \"start_year\",\n  \"end_year\" = \"end_year\",\n  \"School\" = \"School\",\n}\n\nexport enum DocValidationStatusInterface {\n  APPROVED = \"approved\",\n  REJECTED = \"rejected\",\n}\n\nexport interface DocumentCategoryInterface {\n  user_detail_category_id: string;\n  title: string;\n  description: string;\n  fields: DocumentAttributesInterface[];\n}\n\nexport interface DocumentSubCategoryInterface {\n  category_id: string;\n  title: string;\n  description: string;\n  user_detail_subcategory_id: string;\n}\n\nexport interface DocumentFieldsInterface {\n  _id: string;\n  category_id: string;\n  subcategory_id: string | null;\n  title: string;\n  description: string;\n  others: [];\n}\n\nexport interface ApplicationAssessmentInterface {\n  application_id: string;\n  user_id: string;\n  application_session: string;\n  application_status: string;\n  n_id: string;\n  phone_number: string;\n  email: string;\n  fname: string;\n  lname: string;\n  sex: \"M\" | \"F\";\n  district: string;\n  position: PositionApplicationInterface;\n  details: CandidateDetailsInterface[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface AdminApplicationsToPrintInterface {\n  application_id: number;\n  names: string;\n  gender?: string;\n  national_id?: string;\n  phone?: string;\n  email?: string;\n  position: string;\n  education_category?: string;\n  application_session?: string;\n  district?: string;\n  date?: string;\n  decision?: ApplicationStates;\n}\n\nexport interface PositionApplicationInterface {\n  courses: string[];\n  position_title: string;\n  description: string;\n  school_level_id: string;\n  education_institute_id: string;\n  requirements: PositionRequirementInterface[];\n  position_id: string;\n}\n\nexport interface PositionRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface ApplicationRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface PeriodInterface {\n  is_active: string;\n  application_session_name: string;\n  period: string;\n  application_start_date: string;\n  application_end_date: string;\n  createdAt: string;\n  updatedAt: string;\n  application_session_id: string;\n}\n\nexport interface LocationRoomTableInterface {\n  province_id: string;\n  province_name: string;\n  district_id: string;\n  district_name: string;\n  center_id: string;\n  center_name: string;\n  room_id: string;\n  room_name: string;\n  capacity: number;\n  occupied: number;\n}\n\nexport interface LocationSectorTableInterface {\n  province_id: string;\n  province_name: string;\n  province_code: number;\n  district_id: string;\n  district_name: string;\n  district_code: number;\n  sector_id: string;\n  sector_name: string;\n  sector_code: number;\n}\n\nexport interface PositionRequirementsFieldInterface {\n  category_id: string;\n  category_name: string;\n  sub_category_id: string;\n  sub_category_name: string;\n  field_id: string;\n  field_name: string;\n  required: boolean;\n}\n\nexport interface ApplicationPeriodInterface {\n  _id: string;\n  application_status: ApplicationStates;\n  user_id: string;\n  position: string;\n  application_session: string;\n  exams: ApplicationExamsInterface[];\n}\n\nexport const getDocCategoryById = (\n  subDocs: DocumentCategoryInterface[],\n  docId: string\n): DocumentCategoryInterface => {\n  return subDocs.filter((doc) => doc.user_detail_category_id === docId)[0];\n};\n\nexport const getSubDocCategoryById = (\n  subDocs: DocumentSubCategoryInterface[],\n  docId: string\n): DocumentSubCategoryInterface => {\n  return subDocs.filter((doc) => doc.user_detail_subcategory_id === docId)[0];\n};\n\nexport const SESSION_PLAN_TYPES: {\n  type_id: number;\n  type_title: string;\n  type_key: SESSION_PLAN_KEYS;\n}[] = [\n  {\n    type_id: 1,\n    type_title: \"Application\",\n    type_key: SESSION_PLAN_KEYS.APPLICATION,\n  },\n  {\n    type_id: 2,\n    type_title: \"Document Validation\",\n    type_key: SESSION_PLAN_KEYS.DOCUMENT_VALIDATION,\n  },\n  {\n    type_id: 3,\n    type_title: \"Examination\",\n    type_key: SESSION_PLAN_KEYS.EXAMINATION,\n  },\n  {\n    type_id: 4,\n    type_title: \"Marks Publication\",\n    type_key: SESSION_PLAN_KEYS.MARKS_PUBLICATION,\n  },\n  {\n    type_id: 5,\n    type_title: \"Placement and Transfer\",\n    type_key: SESSION_PLAN_KEYS.PLACEMENT_TRANSFER,\n  },\n];\n","import React from \"react\";\nimport Table from \"../../components/Table/Table\";\nimport { PositionRequirementTableInterface } from \"./ViewPosition\";\n\ninterface RequirementProps {\n  requirements: PositionRequirementTableInterface[];\n}\n\nconst ViewRequirements: React.FC<RequirementProps> = (props) => {\n  const tableData = (): JSX.Element[] => {\n    let data: PositionRequirementTableInterface[] = props.requirements;\n    // let data: PositionSubcategoryData[] =\n    //   props.position_requirement.position_requirement;\n    if (data.length === 0) {\n      return [\n        <tr key={153} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={3}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    return data.map((item, index) => (\n      <tr\n        key={index + item.field_id}\n        className=\"border-b border-gray-200 hover:bg-gray-100\"\n      >\n        <td className=\"p-3 text-left whitespace-nowrap\">{index + 1}</td>\n        <td className=\"p-3 text-left\">\n          <span>{item.subcategory_title + \" in \" + item.field_title}</span>\n        </td>\n        <td className=\"p-3 text-left text-lg italic\">\n          {item.required ? (\n            <span className=\"text-yellow-800\">Required</span>\n          ) : (\n            \"Optional\"\n          )}\n        </td>\n      </tr>\n    ));\n  };\n\n  return (\n    <div>\n      <Table\n        columns={[\n          { columnTitle: \"#\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Document\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Status\", alignText: \"left\", padding: \"p-3\" },\n          // { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n        ]}\n        rows={tableData}\n        pagination={false}\n        search={false}\n        thColor=\"gray\"\n      />\n    </div>\n  );\n};\n\nexport default ViewRequirements;\n","import { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { data_school } from \"../shared/dataTest\";\nimport {\n  PostSchoolInterface,\n  SchoolInfoInterface,\n  SchoolsInterface,\n} from \"../shared/interfaces\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport axios from \"axios\";\nimport { API } from \"../utils/api\";\nimport { errorToText } from \"../utils/errors\";\nimport { placedCandidateInterface } from \"../interfaces/marks_publication\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\nexport interface GetSchoolsAction {\n  type: ActionTypes.GET_SCHOOLS;\n  payload: SchoolsInterface[];\n}\n\nexport interface GetSchoolsInfoAction {\n  type: ActionTypes.GET_SCHOOLS_INFO;\n  payload: SchoolInfoInterface[];\n}\n\nexport interface CreateSchoolAction {\n  type: ActionTypes.CREATE_SCHOOL;\n  payload: SchoolsInterface;\n}\n\nexport interface UpdateSchoolAction {\n  type: ActionTypes.UPDATE_SCHOOL;\n  payload: SchoolsInterface;\n}\n\nexport interface DeleteSchoolAction {\n  type: ActionTypes.DELETE_SCHOOL;\n  payload: string;\n}\n\n// School Posts interfaces\nexport interface FetchSchoolPostsAction {\n  type: ActionTypes.FETCH_SCHOOL_POSTS;\n  payload: PostSchoolInterface[];\n}\n\n// School Placements interfaces\nexport interface GetSchoolPlacementAction {\n  type: ActionTypes.GET_SCHOOL_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\n// District School Placements interfaces\nexport interface GetDistrictPlacementAction {\n  type: ActionTypes.GET_DISTRICT_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\n// District School Placements interfaces\nexport interface GetSessionPlacementAction {\n  type: ActionTypes.GET_SESSION_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\nexport interface FetchDistrictPostsAction {\n  type: ActionTypes.FETCH_DISTRICT_POSTS;\n  payload: PostSchoolInterface[];\n}\n\nexport interface CreateSchoolPostAction {\n  type: ActionTypes.CREATE_SCHOOL_POST;\n  payload: PostSchoolInterface;\n}\n\nexport interface UpdateSchoolPostAction {\n  type: ActionTypes.UPDATE_SCHOOL_POST;\n  payload: {\n    TYPE: \"DISTRICT\" | \"SCHOOL\" | \"RECEIVED\";\n    data: PostSchoolInterface;\n  };\n}\n\nexport interface DeleteSchoolPostAction {\n  type: ActionTypes.DELETE_SCHOOL_POST;\n  payload: PostSchoolInterface[];\n}\n\nexport type SchoolActionType =\n  | GetSchoolsAction\n  | GetSchoolsInfoAction\n  | CreateSchoolAction\n  | UpdateSchoolAction\n  | DeleteSchoolAction\n  | FetchSchoolPostsAction\n  | GetSchoolPlacementAction\n  | FetchDistrictPostsAction\n  | CreateSchoolPostAction\n  | UpdateSchoolPostAction\n  | DeleteSchoolPostAction\n  | GetDistrictPlacementAction\n  | GetSessionPlacementAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSchools = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<SchoolsInterface[]>(\n        `${API.APPLICATION}/schools`\n      );\n      dispatch<GetSchoolsAction>({\n        type: ActionTypes.GET_SCHOOLS,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSchoolsInfo = () => {\n  return async (dispatch: Dispatch) => {\n    setAxiosToken();\n    // const response = await axios.get<AccessRoleType[]>(url);\n\n    dispatch<GetSchoolsInfoAction>({\n      type: ActionTypes.GET_SCHOOLS_INFO,\n      payload: data_school,\n      // payload: response.data,\n    });\n  };\n};\n\nexport const createSchool = (data: SchoolsInterface) => {\n  console.log({ schools: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateSchoolAction>({\n      type: ActionTypes.CREATE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const updateSchool = (data: SchoolsInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateSchoolAction>({\n      type: ActionTypes.UPDATE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteSchool = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteSchoolAction>({\n      type: ActionTypes.DELETE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const fetchSchoolPosts = (school_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PostSchoolInterface[]>(\n        `${API.PLACEMENT}/requestpost/school/${school_id}`\n      );\n\n      console.log({ schoolPosts: res.data });\n\n      dispatch<FetchSchoolPostsAction>({\n        type: ActionTypes.FETCH_SCHOOL_POSTS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSchoolPlacement = (school_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/school/${school_id}`\n      );\n\n      console.log({ getSchoolPlacement: res.data });\n\n      dispatch<GetSchoolPlacementAction>({\n        type: ActionTypes.GET_SCHOOL_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createSchoolPost = (data: PostSchoolInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateSchoolPostAction>({\n      type: ActionTypes.CREATE_SCHOOL_POST,\n      payload: data,\n    });\n  };\n};\n\nexport const updateSchoolPost = (\n  TYPE: \"DISTRICT\" | \"SCHOOL\" | \"RECEIVED\",\n  data: PostSchoolInterface\n) => {\n  console.log({ TYPE, data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateSchoolPostAction>({\n      type: ActionTypes.UPDATE_SCHOOL_POST,\n      payload: { TYPE, data },\n    });\n  };\n};\n\nexport const deleteSchoolPost = (data: PostSchoolInterface[]) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteSchoolPostAction>({\n      type: ActionTypes.DELETE_SCHOOL_POST,\n      payload: data,\n    });\n  };\n};\n\nexport const fetchDistrictPosts = (district_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PostSchoolInterface[]>(\n        `${API.PLACEMENT}/requestpost/district/${district_id}`\n      );\n\n      console.log({ districtPosts: res });\n\n      dispatch<FetchDistrictPostsAction>({\n        type: ActionTypes.FETCH_DISTRICT_POSTS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getDistrictPlacement = (\n  district_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/district/${district_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getDistrictPlacement: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetDistrictPlacementAction>({\n        type: ActionTypes.GET_DISTRICT_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\nexport const getSessionPlacement = (session_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/session/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getSessionPlacement: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetSessionPlacementAction>({\n        type: ActionTypes.GET_SESSION_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n","export interface marksPublicationInterface {\n  publication_id: string;\n  session: string;\n  doneby: string;\n  created_date: string;\n  publication_status: \"PENDING\" | \"PUBLISHED\";\n  status: number;\n  publication_position_marks: publicationInterface[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface publicationInterface {\n  _id: string;\n  position: string;\n  marks: number;\n  comment: string;\n}\n\nexport interface marksPublicationFormInterface {\n  session: string;\n  doneby: string;\n  created_date: string;\n  publication_position_marks: publicationFormInterface[];\n}\n\nexport interface publicationFormInterface {\n  position: string;\n  marks: number;\n  comment: string;\n}\n\nexport enum MarksPublicationCandidateStatus {\n  Failed = \"Failed\",\n  Passed = \"Passed\",\n}\n\nexport interface MarksPublicationCandidate {\n  user: {\n    in_eduction: boolean;\n    disability: boolean;\n    is_active: boolean;\n    n_id: string;\n    phone_number: string;\n    email: string;\n    createdAt: string;\n    updatedAt: string;\n    user_id: string;\n    user_info: placedCandidateUserInfo;\n  };\n  period: string;\n  position: string;\n  courses: {\n    id: string;\n    marks: number;\n    _id: string;\n  }[];\n  waiting_status: MarksPublicationCandidateStatus;\n  status: number;\n  user_position_marks: number;\n  createdAt: string;\n  updatedAt: string;\n  disability: boolean;\n  gender: string;\n  in_education: boolean;\n  id: string;\n}\n\nexport interface MarksPublicationCandidateToPrintInterface {\n  no: number;\n  names: string;\n  national_id: string;\n  phone: string;\n  email: string;\n  gender: string;\n  position_name: string;\n  marks: number;\n  status: MarksPublicationCandidateStatus;\n}\n\nexport enum marksPublicationCandidateReportContentKeyInterface {\n  applicant_name = \"names\",\n  national_id = \"national_id\",\n  phone_number = \"phone\",\n  email = \"email\",\n  gender = \"gender\",\n  position_name = \"position_name\",\n  marks = \"marks\",\n  status = \"status\",\n}\n\nexport interface marksPublicationReportContentInterface {\n  key: marksPublicationCandidateReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n// ---------------------------------------------------------------------------------------------\n\nexport interface placedCandidateInterface {\n  _id: string;\n  status: PlacedCandidateStatus;\n  user_id: string;\n  school_id: string;\n  position_id: string;\n  waiting_list_id: string;\n  request_id: string;\n  createdAt: string;\n  comment: string;\n  updatedAt: string;\n  __v: number;\n  n_id: string;\n  phone_number: string;\n  email: string;\n  user_info: placedCandidateUserInfo;\n}\n\nexport interface placedCandidateUserInfo {\n  document_type: string;\n  issue_number: string;\n  date_of_issue: string;\n  date_of_expiry: string;\n  place_of_issue: string;\n  application_number: string;\n  fname: string;\n  lname: string;\n  father_names: string;\n  mother_names: string;\n  sex: string;\n  date_of_birth: string;\n  place_of_birth: string;\n  country_of_birth: string;\n  village_id: string;\n  village: string;\n  cell: string;\n  sector: string;\n  district: string;\n  province: string;\n  civil_status: string;\n  spouse: null;\n  status: string;\n  photo: string;\n}\n\nexport enum PlacedCandidateStatus {\n  PENDING = \"pending\",\n  PLACED = \"placed\",\n  REJECTED = \"rejected\",\n}\n\nexport enum WaitingListStatus {\n  WAITING = \"waiting\",\n  PENDING = \"pending\",\n  PLACED = \"placed\",\n}\n\nexport interface PlacementToPrintInterface {\n  no: number;\n  names: string;\n  national_id: string;\n  phone: string;\n  email: string;\n  school_name: string;\n  position_name: string;\n  status: PlacedCandidateStatus;\n}\n\nexport enum placementReportContentKeyInterface {\n  applicant_name = \"names\",\n  national_id = \"national_id\",\n  phone_number = \"phone\",\n  email = \"email\",\n  school_name = \"school_name\",\n  position_name = \"position_name\",\n  status = \"status\",\n}\n\nexport interface placementReportContentInterface {\n  key: placementReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n","import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { MdTurnedIn } from \"react-icons/md\";\nimport { VscLoading } from \"react-icons/vsc\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { publishPosition } from \"../../actions/settings\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { PositionAPI } from \"../../interfaces/position\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/functions\";\nimport ViewRequirements from \"./ViewRequirements\";\n\nexport interface PositionRequirementTableInterface {\n  category_id: string;\n  category_title: string;\n  subcategory_id: string;\n  subcategory_title: string;\n  field_title: string;\n  field_id: string;\n  // _id: string;\n  required: boolean;\n}\n\nexport const FC_PositionDistinctCategory = (\n  PositionData: PositionAPI[]\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // LOOP IN ALL POSITIONS ==========================\n  for (let pos in PositionData) {\n    // GET CURRENT POSITION ====================\n    let thisPosition = PositionData[pos];\n    // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n    let requirements = thisPosition.requirements;\n    // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n    for (let req in requirements) {\n      let thisRequirements = requirements[req];\n      // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n      let thisCategory = thisRequirements.category;\n      // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n      let thisSubCategory = thisRequirements.subcategory;\n      // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n      if (thisCategory) {\n        for (let field in thisRequirements.position_requirement) {\n          // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n          let thisField = thisRequirements.position_requirement[field];\n          // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n          PositionsTemp.push({\n            category_id: thisCategory.user_detail_category_id,\n            category_title: thisCategory.title,\n            subcategory_id: thisSubCategory.user_detail_subcategory_id,\n            subcategory_title: thisSubCategory.title,\n            field_title: thisField.title,\n            field_id: thisField._id,\n            required: thisField.required,\n          });\n        }\n\n        // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n        if (\n          !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n        ) {\n          DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n          DistinctCategoriesTemp.push({\n            category_id: thisCategory.user_detail_category_id,\n            category_title: thisCategory.title,\n            subcategory_id: \"\",\n            subcategory_title: \"\",\n            field_title: \"\",\n            field_id: \"\",\n            required: false,\n          });\n        }\n\n        // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n        if (\n          !DistinctSubCategoriesIds.includes(\n            thisSubCategory.user_detail_subcategory_id\n          )\n        ) {\n          DistinctSubCategoriesIds.push(\n            thisSubCategory.user_detail_subcategory_id\n          );\n          DistinctSubCategoriesTemp.push({\n            category_id: thisSubCategory.category_id,\n            category_title: \"\",\n            subcategory_id: thisSubCategory.user_detail_subcategory_id,\n            subcategory_title: thisSubCategory.title,\n            field_title: \"\",\n            field_id: \"\",\n            required: false,\n          });\n        }\n      }\n    }\n    // DistinctCategoriesIds.;\n  }\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\nexport interface ViewPositionProps {\n  thisPosition: PositionAPI;\n  setThisPosition?: (value: PositionAPI | null) => void;\n  publishPosition: Function;\n  isGuest?: boolean;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\nconst ViewPosition = (props: ViewPositionProps) => {\n  const [loadingRequest, setLoadingRequest] = useState<string>(\"\");\n\n  const publishPosition = async (\n    position_id: string,\n    status: boolean,\n    name: string\n  ) => {\n    if (\n      window.confirm(\n        `Are you sure do you want to ${\n          status ? \"publish\" : \"unpublish\"\n        } this position?`\n      )\n    ) {\n      setLoadingRequest(position_id);\n      try {\n        const res = await axios.patch(\n          `${API.APPLICATION}/publishposition/${position_id}`,\n          {\n            isPublished: status,\n          }\n        );\n        props.publishPosition({ position_id, status });\n        props.PushPopupAlert({\n          title: `${name} ${\n            status ? \" published\" : \" stopped on application\"\n          } successfully`,\n          theme: PopupAlertTheme.info,\n        });\n        let thisPositionCopy = { ...props.thisPosition };\n        thisPositionCopy.isPublished = status;\n        props.setThisPosition && props.setThisPosition(thisPositionCopy);\n        console.log(\"Position publish: \", res);\n      } catch (error) {\n        console.error(\"err: \", error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      setLoadingRequest(\"\");\n    }\n  };\n\n  return (\n    <div className=\"w-full\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          <span className=\"text-blue-600 font-bold text-2xl\">\n            {props.thisPosition.position_title}\n          </span>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Desc:</span>\n            <span className=\"font-semibold\">\n              {props.thisPosition.description}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>School level:</span>\n            <span className=\"font-semibold\">\n              {props.thisPosition.school_level_id.school_level_name}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Institute:</span>\n            <span className=\"font-semibold\">\n              {\n                props.thisPosition.education_institute_id\n                  .education_category_title\n              }\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Courses:</span>\n            <span className=\"flex items-center gap-2\">\n              {props.thisPosition.courses.map((item, index) => (\n                <div\n                  key={index + item.course_id}\n                  className=\"flex items-center gap-1\"\n                >\n                  <span className=\"font-semibold\">{item.course_name}</span>\n                  <span className=\"text-gray-600\">({item.course_code})</span>\n                  {index !== props.thisPosition.courses.length - 1 && \",\"}\n                </div>\n              ))}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Status:</span>\n\n            <div className=\"flex flex-row items-center gap-2 mt-1\">\n              {!props.isGuest ? (\n                <div\n                  className={`relative ${\n                    loadingRequest.length > 0\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } flex items-center gap-1`}\n                  onClick={() =>\n                    !loadingRequest.length &&\n                    !props.isGuest &&\n                    publishPosition(\n                      props.thisPosition.position_id,\n                      !props.thisPosition.isPublished,\n                      props.thisPosition.position_title\n                    )\n                  }\n                >\n                  <span className=\"block w-14 h-8 bg-gray-100 hover:border-gray-100 rounded-full shadow-inner\"></span>\n                  <span\n                    className={`absolute block w-6 h-6 mt-1 ml-1 rounded-full shadow inset-y-0 left-0 focus-within:shadow-outline transition-transform duration-500 ease-in-out ${\n                      !props.thisPosition.isPublished\n                        ? \"bg-yellow-500\"\n                        : \"bg-green-500 transform translate-x-full\"\n                    }`}\n                  ></span>\n                  {loadingRequest === props.thisPosition.position_id ? (\n                    <VscLoading className=\"animate__animated animate__rotateIn animate__infinite\" />\n                  ) : (\n                    <span className=\"font-medium\">\n                      {props.thisPosition.isPublished\n                        ? \"Published\"\n                        : \"Unpublished\"}\n                    </span>\n                  )}\n                </div>\n              ) : props.thisPosition.isPublished ? (\n                <span className=\"text-green-600 font-semibold text-xl italic\">\n                  Published\n                </span>\n              ) : (\n                <span className=\"text-yellow-600 font-semibold text-xl italic\">\n                  Not Published\n                </span>\n              )}\n            </div>\n          </div>\n        </div>\n        <div className=\"bg-white w-full rounded p-2 mb-2\">\n          <div className=\"text-blue-500 text-2xl font-bold my-2\">\n            Position Requirements\n          </div>\n          {props.thisPosition.requirements.length > 0 ? (\n            FC_PositionDistinctCategory([\n              props.thisPosition,\n            ]).DistinctCategoriesTemp.map((item, index) => (\n              <div\n                className=\"bg-gray-100 rounded p-2\"\n                key={index + item.category_id}\n              >\n                <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                  <MdTurnedIn />\n                  <span>{item.category_title}</span>\n                </div>\n                <div className=\"border bg-white mt-1\">\n                  <ViewRequirements\n                    requirements={FC_PositionDistinctCategory([\n                      props.thisPosition,\n                    ]).PositionsTemp.filter(\n                      (req) => req.category_id === item.category_id\n                    )}\n                  />\n                </div>\n              </div>\n            ))\n          ) : (\n            <NoResult\n              theme={NoResultThemes.Dark}\n              value={\"No requirements\"}\n            ></NoResult>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(null, { publishPosition, PushPopupAlert })(ViewPosition);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport {\n  MdArrowBack,\n  MdErrorOutline,\n  MdMail,\n  MdSmartphone,\n  MdTaskAlt,\n} from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../actions\";\nimport { fetchSchoolPosts, getSchoolPlacement } from \"../../actions/schools\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PositionAPI } from \"../../interfaces\";\nimport {\n  placedCandidateInterface,\n  PlacedCandidateStatus,\n} from \"../../interfaces/marks_publication\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport {\n  capitalizeFirstLetter,\n  getPositionById,\n  isEmptyOrSpaces,\n} from \"../../shared/dataTest\";\nimport {\n  PostSchoolInterface,\n  PostRequestStatusInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport { getPlacementByRequest } from \"./RequestTeacher\";\n\ntype ReceivePostProps = {\n  viewPost: boolean;\n  placementList: placedCandidateInterface[];\n  thisPost: PostSchoolInterface;\n  setThisPost: (value: PostSchoolInterface | null) => void;\n  setModalState: (value: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n  receivedPosts: number;\n  setReceivedPosts: (value: number) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  loadingPost: boolean;\n  setLoadingPost: (value: boolean) => void;\n  positionId: string;\n  systemPositions: PositionAPI[];\n\n  // REDUX ==========\n  auth: Auth;\n  fetchSchoolPosts: Function;\n  getSchoolPlacement: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype ReceivePostState = {\n  placement_id: string;\n  action: \"RECEIVED\" | \"NOT_RECEIVED\" | null;\n  comment: string;\n};\n\nclass ReceivePost extends Component<ReceivePostProps, ReceivePostState> {\n  constructor(props: ReceivePostProps) {\n    super(props);\n\n    this.state = {\n      placement_id: \"\",\n      action: null,\n      comment: \"\",\n    };\n  }\n  submitRequest = async (\n    thisPlacement: placedCandidateInterface,\n    action: \"RECEIVED\" | \"NOT_RECEIVED\"\n  ) => {\n    if (action === \"NOT_RECEIVED\" && isEmptyOrSpaces(this.state.comment)) {\n      return this.props.setFormError({\n        element: \"received_comment\",\n        msg: \"Reason of your decision is required!\",\n      });\n    }\n\n    let received: number = 0;\n    if (action === \"NOT_RECEIVED\") {\n      received = this.props.thisPost.received_posts\n        ? this.props.thisPost.received_posts\n        : 0;\n    } else {\n      received = this.props.thisPost.received_posts\n        ? this.props.thisPost.received_posts + 1\n        : 1;\n    }\n\n    this.props.setLoadingRequest(true);\n    try {\n      if (this.props.thisPost) {\n        const res = await axios.patch<{ data: PostSchoolInterface }>(\n          `${API.PLACEMENT}/requestpost/${this.props.thisPost.requested_post_id}`,\n          {\n            confirmed_posts: this.props.thisPost.confirmed_posts,\n            confirmed_by: this.props.auth.user.user_id,\n            received_posts: received,\n            approval_date: this.props.thisPost.approval_date,\n            school_id: this.props.thisPost.school_id,\n            position_id: this.props.thisPost.position_id,\n            district_id: this.props.thisPost.district_id,\n            needed_posts: this.props.thisPost.needed_posts,\n            male_number: this.props.thisPost.male_number,\n            female_number: this.props.thisPost.female_number,\n            description: this.props.thisPost.description,\n            occupied_posts: this.props.thisPost.occupied_posts,\n            requested_by: this.props.auth.user.user_id,\n            requested_post_status: PostRequestStatusInterface.RECEIVED,\n          }\n        );\n        if (res) {\n          // props.updateSchoolPost(\"SCHOOL\", res.data.data);\n          this.confirmPlacement(thisPlacement);\n\n          // !this.props.viewPost && this.props.setThisPost(null);\n          // this.props.setReceivedPosts(0);\n          // this.props.setModalState(null);\n          // this.props.PushPopupAlert({\n          //   title: `Post request has been received!`,\n          //   theme: PopupAlertTheme.info,\n          // });\n        }\n      }\n    } catch (error) {\n      console.error({ role_error: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.props.setLoadingRequest(false);\n  };\n\n  confirmPlacement = async (thisPlacement: placedCandidateInterface) => {\n    this.props.setLoadingRequest(true);\n    try {\n      if (this.props.thisPost) {\n        const res = await axios.post<{ data: PostSchoolInterface }>(\n          `${API.PLACEMENT}/confirmreceived`,\n          {\n            placedStatus: [\n              {\n                waiting_list_id: thisPlacement.waiting_list_id,\n                placed_candidate_id: thisPlacement._id,\n                status:\n                  this.state.action === \"NOT_RECEIVED\"\n                    ? PlacedCandidateStatus.REJECTED\n                    : PlacedCandidateStatus.PLACED,\n              },\n            ],\n          }\n        );\n        if (res) {\n          this.props.fetchSchoolPosts(\n            this.props.auth.user_access.school_id,\n            (status: boolean, message: string) => {\n              if (!status) {\n                if (message.length > 0 && this.props.loadingPost) {\n                  console.error(\"error loading school post: \", message);\n                  this.props.PushPopupAlert({\n                    title: message,\n                    theme: PopupAlertTheme.danger,\n                  });\n                }\n                this.props.setLoadingPost(false);\n              }\n            }\n          );\n\n          this.props.getSchoolPlacement(\n            this.props.auth.user_access.school_id,\n            (\n              status: boolean,\n              msg: string,\n              data?: placedCandidateInterface[]\n            ) => {\n              this.props.setLoadingPost(status);\n              if (!status && msg.length > 0) {\n                console.error({ getSchoolPlacementError: msg });\n                this.props.PushPopupAlert({\n                  title: msg,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n            }\n          );\n\n          this.props.setFormError(null);\n          this.setState({ comment: \"\", placement_id: \"\", action: null });\n          !this.props.viewPost && this.props.setThisPost(null);\n          this.props.setReceivedPosts(0);\n          this.props.setModalState(null);\n          this.props.PushPopupAlert({\n            title: `Request has been done completely!`,\n            theme: PopupAlertTheme.info,\n          });\n        }\n      }\n    } catch (error) {\n      console.error({ role_error: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.props.setLoadingRequest(false);\n  };\n\n  render() {\n    return (\n      <section>\n        <div className=\"border-b-2 border-gray-200 mb-2 pb-1 flex items-center gap-3\">\n          <button\n            className={`ml-3 bg-gray-100 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n              this.props.loadingRequest ? \"cursor-wait\" : \"cursor-pointer\"\n            } animate__animated animate__fadeIn`}\n            disabled={this.props.loadingRequest}\n            onClick={() => {\n              this.props.setThisPost(null);\n              this.props.setReceivedPosts(0);\n              this.props.setModalState(null);\n            }}\n          >\n            <MdArrowBack className=\"text-4xl\" />\n          </button>\n\n          <span className=\"font-bold text-2xl md:text-3xl text-gray-700\">\n            Confirm teacher arrival\n          </span>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 divide-x-0 divide-y md:divide-x md:divide-y-0\">\n          <div className=\"px-1 mb-4 mt-3\">\n            <div className=\"text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n              <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                <span className=\"text-gray-500 italic\">Position: </span>\n                <span className=\"font-bold\">\n                  {getPositionById(\n                    this.props.systemPositions,\n                    this.props.thisPost.position_id\n                  )\n                    ? getPositionById(\n                        this.props.systemPositions,\n                        this.props.thisPost.position_id\n                      )!.position_title\n                    : \"Unknown position\"}\n                </span>\n              </div>\n\n              <table className=\"w-full shadow\" id=\"report_content\">\n                <thead className=\"bg-blue-50 border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                  <tr>\n                    <td className=\"px-2 py-2\">Requested posts</td>\n                    <td className=\"px-2 py-2\">Approved posts</td>\n                    <td className=\"px-2 py-2\">Post posts</td>\n                    <td className=\"px-2 py-2\">Received posts</td>\n                    <td className=\"px-2 py-2\">Occupation</td>\n                    <td className=\"px-2 py-2\">Status</td>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td className=\"px-2 py-2\">\n                      {this.props.thisPost.needed_posts}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {this.props.thisPost.requested_post_status ===\n                      PostRequestStatusInterface.CONFIRMED ? (\n                        <div className=\"flex items-center gap-1\">\n                          {this.props.thisPost.confirmed_posts}\n                        </div>\n                      ) : (\n                        \"-\"\n                      )}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {this.props.thisPost.requested_post_status ===\n                      PostRequestStatusInterface.CONFIRMED ? (\n                        <span>\n                          {\n                            getPlacementByRequest(\n                              this.props.placementList,\n                              this.props.thisPost.requested_post_id\n                            ).length\n                          }\n                        </span>\n                      ) : (\n                        \"-\"\n                      )}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {this.props.thisPost.requested_post_status ===\n                      PostRequestStatusInterface.RECEIVED\n                        ? this.props.thisPost.received_posts\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {this.props.thisPost.female_number +\n                        this.props.thisPost.male_number}\n                    </td>\n\n                    <td className=\"px-2 py-2\">\n                      <span\n                        className={`px-2 py-1 mx-1 font-semibold rounded ${\n                          this.props.thisPost.requested_post_status ===\n                          PostRequestStatusInterface.INITIATED\n                            ? \"text-gray-700 bg-gray-100 dark:bg-gray-700 dark:text-gray-100\"\n                            : this.props.thisPost.requested_post_status ===\n                              PostRequestStatusInterface.CONFIRMED\n                            ? \"text-blue-700 bg-blue-100 dark:bg-blue-700 dark:text-blue-100\"\n                            : \"text-green-800 bg-green-100 dark:bg-green-800 dark:text-green-100\"\n                        }`}\n                      >\n                        {this.props.thisPost.requested_post_status ===\n                        PostRequestStatusInterface.INITIATED\n                          ? \"Pending\"\n                          : capitalizeFirstLetter(\n                              this.props.thisPost.requested_post_status\n                            )}\n                      </span>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n\n          <div className=\"px-4 mt-3 mb-4\">\n            {getPlacementByRequest(\n              this.props.placementList,\n              this.props.thisPost.requested_post_id\n            ).map((item, index) => (\n              <div\n                className=\"relative grid grid-cols-1 gap-4 px-4 py-1 mb-8 border rounded bg-white shadow\"\n                key={index + item._id}\n              >\n                <div className=\"relative flex gap-4\">\n                  {/* IMG ================== */}\n                  <img\n                    src={API.AUTH_FILES + \"/\" + item.user_info.photo}\n                    className=\"object-center object-cover relative rounded-lg -top-4 -mb-3 bg-white border h-20 w-20\"\n                    alt=\"\"\n                    loading=\"lazy\"\n                  />\n                  <div className=\"flex flex-col w-full\">\n                    <div className=\"flex flex-row justify-between\">\n                      <p className=\"relative text-xl whitespace-nowrap truncate overflow-hidden\">\n                        {item.user_info.fname + \" \" + item.user_info.lname}\n                      </p>\n                    </div>\n                    <p className=\"text-gray-500 text-sm flex items-center gap-1\">\n                      <MdSmartphone /> {item.phone_number}\n                    </p>\n                    <p className=\"text-gray-500 text-sm flex items-center gap-1\">\n                      <MdMail /> {item.email}\n                    </p>\n                  </div>\n                </div>\n                <div className=\"-mt-3\">\n                  {this.state.action !== \"NOT_RECEIVED\" && (\n                    <div className=\"flex flex-row-reverse gap-2\">\n                      <div className=\"flex-initial\">\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-blue flex items-center font-medium tracking-wide capitalize transition duration-300 transform active:scale-95 ease-in-out\"\n                          disabled={this.props.loadingRequest}\n                          onClick={() => {\n                            this.setState({\n                              placement_id: item._id,\n                              action: \"RECEIVED\",\n                            });\n                            this.submitRequest(item, \"RECEIVED\");\n                          }}\n                        >\n                          <MdTaskAlt />\n                          <span className=\"pl-2 mx-1\">\n                            {this.props.loadingRequest\n                              ? \"Loading...\"\n                              : \"Received\"}\n                          </span>\n                        </button>\n                      </div>\n                      <div className=\"flex-initial\">\n                        <button\n                          type=\"button\"\n                          className=\"btn flex items-center px-5 py-2.5 font-medium tracking-wide text-black capitalize hover:bg-red-200 hover:fill-current hover:text-red-600 focus:outline-none transition duration-300 transform active:scale-95 ease-in-out\"\n                          disabled={this.props.loadingRequest}\n                          onClick={() =>\n                            this.setState({\n                              placement_id: item._id,\n                              action: \"NOT_RECEIVED\",\n                            })\n                          }\n                        >\n                          <MdErrorOutline />\n                          <span className=\"pl-2 mx-1\">Not received</span>\n                        </button>\n                      </div>\n                    </div>\n                  )}\n                  {this.state.action === \"NOT_RECEIVED\" &&\n                    this.state.placement_id === item._id && (\n                      <div className=\"flex flex-col md:flex-row items-end md:items-start gap-2 animate__animated animate__fadeInRight animate__faster mt-2\">\n                        <div className=\"w-full\">\n                          <textarea\n                            className={`border-2 rounded p-2 md:text-base w-full ${\n                              this.props.formError &&\n                              this.props.formError.element ===\n                                \"received_comment\"\n                                ? \"border-red-500\"\n                                : \"border-gray-300\"\n                            } focus:border-gray-500`}\n                            placeholder=\"comment\"\n                            onChange={(e) => {\n                              this.setState({ comment: e.target.value });\n                              this.props.formError &&\n                                this.props.formError.element ===\n                                  \"received_comment\" &&\n                                this.props.setFormError(null);\n                            }}\n                            value={this.state.comment}\n                            style={{ resize: \"none\" }}\n                          ></textarea>\n                          {this.props.formError &&\n                            this.props.formError.element ===\n                              \"received_comment\" && (\n                              <span className=\"text-red-700 text-sm\">\n                                {this.props.formError.msg}\n                              </span>\n                            )}\n                        </div>\n\n                        <button\n                          type=\"button\"\n                          className=\"btn bg-gray-100 hover:bg-gray-400 font-medium tracking-wide capitalize transition duration-300 transform active:scale-95 ease-in-out\"\n                          disabled={this.props.loadingRequest}\n                          onClick={() =>\n                            this.submitRequest(item, \"NOT_RECEIVED\")\n                          }\n                        >\n                          {this.props.loadingRequest ? \"Loading...\" : \"Confirm\"}\n                        </button>\n                      </div>\n                    )}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n}: StoreState): {\n  auth: Auth;\n} => {\n  return {\n    auth: auth,\n  };\n};\nexport default connect(mapStateToProps, {\n  fetchSchoolPosts,\n  getSchoolPlacement,\n  PushPopupAlert,\n})(ReceivePost);\n","import React, { Component } from \"react\";\nimport { BiReply } from \"react-icons/bi\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport { PositionAPI } from \"../../interfaces\";\nimport { placedCandidateInterface } from \"../../interfaces/marks_publication\";\nimport { capitalizeFirstLetter, getPositionById } from \"../../shared/dataTest\";\nimport {\n  PostRequestStatusInterface,\n  PostSchoolInterface,\n} from \"../../shared/interfaces\";\nimport { getPlacementByRequest } from \"./RequestTeacher\";\n\ninterface ViewRequestProps {\n  thisPost: PostSchoolInterface;\n  setThisPost: (value: PostSchoolInterface | null) => void;\n  setViewPost: (value: boolean) => void;\n  systemPositions: PositionAPI[];\n  schoolPlacements: placedCandidateInterface[];\n  setPostId: (value: string) => void;\n  setModalState: (value: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null) => void;\n  setPositionId: (value: string) => void;\n  setRequestedPosts: (value: number) => void;\n  setRequestExplanation: (value: string) => void;\n  setFemaleOnPosition: (value: number) => void;\n  setMaleOnPosition: (value: number) => void;\n  setFormSteps: (value: { ONE: boolean; TWO: boolean }) => void;\n  setStepState: (value: { ONE: boolean; TWO: boolean }) => void;\n}\n\nexport class ViewRequest extends Component<ViewRequestProps> {\n  render() {\n    return (\n      <Modal\n        backDrop={true}\n        theme={Themes.default}\n        close={(): void => {\n          this.props.setThisPost(null);\n          this.props.setViewPost(false);\n        }}\n        displayClose={true}\n        backDropClose={false}\n        title={\n          <div className=\"flex flex-row gap-4 items-center\">\n            <div className=\"flex flex-col\">\n              <span className=\"font-bold text-2xl text-gray-500\">\n                Viewing Post Request\n              </span>\n            </div>\n          </div>\n        }\n        widthSizeClass={ModalSize.large}\n        padding={{ title: true, body: false, footer: false }}\n      >\n        <section className=\"px-4 mx-auto mb-4 mt-3 flex items-start\">\n          <section className=\"w-full\">\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Position: </span>\n              <span className=\"font-bold\">\n                {getPositionById(\n                  this.props.systemPositions,\n                  this.props.thisPost.position_id\n                )\n                  ? getPositionById(\n                      this.props.systemPositions,\n                      this.props.thisPost.position_id\n                    )!.position_title\n                  : \"Unknown position\"}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Requested posts: </span>\n              <span className=\"font-bold text-xl\">\n                {this.props.thisPost.needed_posts}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Approved posts: </span>\n              <span className=\"font-bold text-xl\">\n                {this.props.thisPost.requested_post_status !==\n                PostRequestStatusInterface.INITIATED ? (\n                  <div\n                    className=\"flex items-center gap-1 cursor-pointer\"\n                    onClick={() => this.props.setModalState(\"RECEIVE\")}\n                  >\n                    {this.props.thisPost.confirmed_posts}\n                    {getPlacementByRequest(\n                      this.props.schoolPlacements,\n                      this.props.thisPost.requested_post_id\n                    ).length > 0 && (\n                      <BiReply className=\"bg-yellow-600 w-5 h-5 text-white\" />\n                    )}\n                  </div>\n                ) : (\n                  \"-\"\n                )}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Placed posts: </span>\n              <span className=\"font-bold text-xl\">\n                {this.props.thisPost.requested_post_status !==\n                PostRequestStatusInterface.INITIATED ? (\n                  <div\n                    className=\"flex items-center gap-1 cursor-pointer\"\n                    onClick={() => this.props.setModalState(\"RECEIVE\")}\n                  >\n                    {\n                      getPlacementByRequest(\n                        this.props.schoolPlacements,\n                        this.props.thisPost.requested_post_id\n                      ).length\n                    }\n                    {getPlacementByRequest(\n                      this.props.schoolPlacements,\n                      this.props.thisPost.requested_post_id\n                    ).length > 0 && (\n                      <BiReply className=\"bg-yellow-600 w-5 h-5 text-white\" />\n                    )}\n                  </div>\n                ) : (\n                  \"-\"\n                )}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Received posts: </span>\n              <span className=\"font-bold text-xl\">\n                {this.props.thisPost.requested_post_status ===\n                PostRequestStatusInterface.RECEIVED\n                  ? this.props.thisPost.received_posts\n                  : \"-\"}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Number of female: </span>\n              <span className=\"font-bold text-xl\">\n                {this.props.thisPost.female_number}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Number of male: </span>\n              <span className=\"font-bold text-xl\">\n                {this.props.thisPost.male_number}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Request reason: </span>\n              <span className=\"font-bold text-xl\">\n                {this.props.thisPost.description}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Status: </span>\n              <span\n                className={`px-2 py-1 mx-1 font-semibold rounded ${\n                  this.props.thisPost.requested_post_status ===\n                  PostRequestStatusInterface.INITIATED\n                    ? \"text-gray-700 bg-gray-100 dark:bg-gray-700 dark:text-gray-100\"\n                    : this.props.thisPost.requested_post_status ===\n                      PostRequestStatusInterface.CONFIRMED\n                    ? \"text-blue-700 bg-blue-100 dark:bg-blue-700 dark:text-blue-100\"\n                    : \"text-green-800 bg-green-100 dark:bg-green-800 dark:text-green-100\"\n                }`}\n              >\n                {this.props.thisPost.requested_post_status ===\n                PostRequestStatusInterface.INITIATED\n                  ? \"Pending\"\n                  : capitalizeFirstLetter(\n                      this.props.thisPost.requested_post_status\n                    )}\n              </span>\n            </div>\n          </section>\n          <div className=\"mb-3 flex items-center justify-end gap-2\">\n            {this.props.thisPost.requested_post_status ===\n              PostRequestStatusInterface.INITIATED && (\n              <button\n                className=\"font-bold py-1 px-4 rounded bg-gray-500 text-white hover:bg-gray-700\"\n                onClick={() => {\n                  this.props.setModalState(\"UPDATE\");\n                  this.props.setPostId(this.props.thisPost.requested_post_id);\n                  this.props.setPositionId(this.props.thisPost.position_id);\n                  this.props.setRequestedPosts(\n                    this.props.thisPost.needed_posts\n                  );\n                  this.props.setRequestExplanation(\n                    this.props.thisPost.description\n                  );\n                  this.props.setFemaleOnPosition(\n                    this.props.thisPost.female_number\n                  );\n                  this.props.setMaleOnPosition(this.props.thisPost.male_number);\n                  this.props.setFormSteps({ ONE: true, TWO: false });\n                  this.props.setStepState({ ONE: false, TWO: false });\n                }}\n                disabled={\n                  this.props.thisPost.requested_post_status !==\n                  PostRequestStatusInterface.INITIATED\n                }\n              >\n                Edit\n              </button>\n            )}\n            {this.props.thisPost.requested_post_status !==\n              PostRequestStatusInterface.INITIATED &&\n              getPlacementByRequest(\n                this.props.schoolPlacements,\n                this.props.thisPost.requested_post_id\n              ).length > 0 && (\n                <button\n                  className=\"font-bold py-1 px-2 rounded bg-gray-500 text-white hover:bg-gray-700\"\n                  onClick={() => this.props.setModalState(\"RECEIVE\")}\n                >\n                  Receive\n                </button>\n              )}\n          </div>\n        </section>\n      </Modal>\n    );\n  }\n}\n\nexport default ViewRequest;\n","import React, { Component } from \"react\";\nimport { BiReply } from \"react-icons/bi\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport { PositionAPI } from \"../../interfaces\";\nimport { placedCandidateInterface } from \"../../interfaces/marks_publication\";\nimport { capitalizeFirstLetter, getPositionById } from \"../../shared/dataTest\";\nimport {\n  PostRequestStatusInterface,\n  PostSchoolInterface,\n} from \"../../shared/interfaces\";\nimport { getPlacementByRequest } from \"./RequestTeacher\";\nimport ViewRequest from \"./ViewRequest\";\n\ninterface RequestListProps {\n  schoolPosts: PostSchoolInterface[];\n  systemPositions: PositionAPI[] | null;\n  setModalState: (value: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null) => void;\n  loadingRequest: boolean;\n  filterByPosition: string;\n  setFilterByPosition: (value: string) => void;\n  setThisPost: (value: PostSchoolInterface | null) => void;\n  setViewPost: (value: boolean) => void;\n\n  schoolPlacements: placedCandidateInterface[];\n\n  thisPost: PostSchoolInterface | null;\n  setPostId: (value: string) => void;\n  setPositionId: (value: string) => void;\n  setRequestedPosts: (value: number) => void;\n  setRequestExplanation: (value: string) => void;\n  setFemaleOnPosition: (value: number) => void;\n  setMaleOnPosition: (value: number) => void;\n  setFormSteps: (value: { ONE: boolean; TWO: boolean }) => void;\n  setStepState: (value: { ONE: boolean; TWO: boolean }) => void;\n  viewPost: boolean;\n  modalState: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null;\n}\n\ninterface RequestListState {\n  searchInput: string;\n}\n\nclass RequestList extends Component<RequestListProps, RequestListState> {\n  constructor(props: RequestListProps) {\n    super(props);\n\n    this.state = {\n      searchInput: \"\",\n    };\n  }\n\n  setSearchInput = (value: string) => {\n    this.setState({ searchInput: value });\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"my-2 flex sm:flex-row flex-col justify-between\">\n          <div className=\"flex flex-col md:flex-row\">\n            <select\n              className=\"border-2 border-gray-700 bg-white p-2 rounded focus:outline-none\"\n              onChange={(e) => this.props.setFilterByPosition(e.target.value)}\n              value={this.props.filterByPosition}\n            >\n              <option value=\"all\">All Position</option>\n              {this.props.systemPositions &&\n              this.props.systemPositions.length > 0 ? (\n                this.props.systemPositions.map((position, index) => (\n                  <option key={index + 1} value={position.position_id}>\n                    {position.position_title}\n                  </option>\n                ))\n              ) : (\n                <option value=\"\">No Position found</option>\n              )}\n            </select>\n          </div>\n          <div className=\"block relative\">\n            <div className=\"pt-6 md:pt-0 md:pl-6\">\n              <button\n                className=\"btn bg-primary text-white hover:bg-blue-600\"\n                onClick={() => this.props.setModalState(\"CREATE\")}\n                disabled={this.props.loadingRequest}\n              >\n                Request Teacher\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"w-full py-2\">\n          <input\n            onChange={(e) => this.setSearchInput(e.target.value)}\n            type=\"text\"\n            value={this.state.searchInput}\n            placeholder=\"Search...\"\n            className=\"w-full bg-gray-50 border-2 border-gray-400 py-2 px-3 rounded focus:border-gray-800\"\n            disabled={\n              this.props.schoolPosts.length <= 0 || this.props.loadingRequest\n            }\n          />\n        </div>\n\n        <table className=\"w-full shadow\" id=\"report_content\">\n          <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n            <tr>\n              <td className=\"px-2 py-2\">#</td>\n              <td className=\"px-2 py-2\">Position</td>\n              <td className=\"px-2 py-2\">Request</td>\n              <td className=\"px-2 py-2\">Approved</td>\n              <td className=\"px-2 py-2\">Placed</td>\n              <td className=\"px-2 py-2\">Occupied</td>\n              <td className=\"px-2 py-2\">Vacant</td>\n              <td className=\"px-2 py-2\">Status</td>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.schoolPosts.length > 0 ? (\n              this.props.schoolPosts.map((schoolPost, index) => (\n                <tr\n                  key={index + schoolPost.requested_post_id}\n                  className=\"border-b border-gray-200 hover:bg-gray-100\"\n                >\n                  <td className=\"px-2 py-3 text-left font-medium\">\n                    {index + 1}\n                  </td>\n                  <td className=\"py-3 px-1 text-left font-medium\">\n                    {this.props.systemPositions &&\n                    getPositionById(\n                      this.props.systemPositions,\n                      schoolPost.position_id\n                    )\n                      ? getPositionById(\n                          this.props.systemPositions,\n                          schoolPost.position_id\n                        )!.position_title\n                      : \"Unknown position\"}\n                  </td>\n                  <td className=\"py-3 px-2 text-left text-base font-medium\">\n                    {schoolPost.needed_posts}\n                  </td>\n                  <td className=\"py-3 px-2 text-left text-base font-medium\">\n                    {schoolPost.requested_post_status !==\n                    PostRequestStatusInterface.INITIATED ? (\n                      <div className=\"flex items-center gap-1\">\n                        {schoolPost.confirmed_posts}\n                        {getPlacementByRequest(\n                          this.props.schoolPlacements,\n                          schoolPost.requested_post_id\n                        ).length > 0 && (\n                          <BiReply\n                            className=\"bg-yellow-600 w-5 h-5 text-white cursor-pointer\"\n                            onClick={() => {\n                              this.props.setModalState(\"RECEIVE\");\n                              this.props.setThisPost(schoolPost);\n                            }}\n                          />\n                        )}\n                      </div>\n                    ) : (\n                      \"-\"\n                    )}\n                  </td>\n                  <td className=\"py-3 px-2 text-left text-base font-medium\">\n                    {schoolPost.requested_post_status !==\n                    PostRequestStatusInterface.INITIATED ? (\n                      <div className=\"flex items-center gap-1\">\n                        {\n                          getPlacementByRequest(\n                            this.props.schoolPlacements,\n                            schoolPost.requested_post_id\n                          ).length\n                        }\n                        {getPlacementByRequest(\n                          this.props.schoolPlacements,\n                          schoolPost.requested_post_id\n                        ).length > 0 && (\n                          <BiReply\n                            className=\"bg-yellow-600 w-5 h-5 text-white cursor-pointer\"\n                            onClick={() => {\n                              this.props.setModalState(\"RECEIVE\");\n                              this.props.setThisPost(schoolPost);\n                            }}\n                          />\n                        )}\n                      </div>\n                    ) : (\n                      \"-\"\n                    )}\n                  </td>\n                  <td className=\"py-3 px-2 text-left text-base font-medium\">\n                    {schoolPost.occupied_posts\n                      ? schoolPost.occupied_posts +\n                        (schoolPost.received_posts\n                          ? schoolPost.received_posts\n                          : 0)\n                      : \"-\"}\n                  </td>\n                  <td className=\"py-3 px-2 text-left text-base font-medium\">\n                    {schoolPost.requested_post_status ===\n                    PostRequestStatusInterface.RECEIVED\n                      ? (schoolPost.confirmed_posts\n                          ? schoolPost.confirmed_posts\n                          : 0) -\n                        (schoolPost.received_posts\n                          ? schoolPost.received_posts\n                          : 0)\n                      : \"-\"}\n                  </td>\n                  <td>\n                    <span\n                      className={`px-2 py-1 font-semibold rounded ${\n                        schoolPost.requested_post_status ===\n                        PostRequestStatusInterface.INITIATED\n                          ? \"text-gray-700 bg-gray-100 dark:bg-gray-700 dark:text-gray-100\"\n                          : schoolPost.requested_post_status ===\n                            PostRequestStatusInterface.CONFIRMED\n                          ? \"text-blue-700 bg-blue-100 dark:bg-blue-700 dark:text-blue-100\"\n                          : \"text-green-800 bg-green-100 dark:bg-green-800 dark:text-green-100\"\n                      }`}\n                    >\n                      {schoolPost.requested_post_status ===\n                      PostRequestStatusInterface.INITIATED\n                        ? \"Pending\"\n                        : capitalizeFirstLetter(\n                            schoolPost.requested_post_status\n                          )}\n                    </span>\n                  </td>\n                  <td className=\"py- text-left\">\n                    <div className=\"flex item-center justify-end gap-1\">\n                      <button\n                        className=\"btn btn-blue transition ease-out duration-500 flex items-center\"\n                        title=\"View User Profile\"\n                        onClick={() => {\n                          this.props.setThisPost(schoolPost);\n                          this.props.setViewPost(true);\n                        }}\n                      >\n                        Details\n                      </button>\n                      {schoolPost.requested_post_status ===\n                        PostRequestStatusInterface.INITIATED && (\n                        <button\n                          className=\"btn bg-gray-500 text-white hover:bg-gray-700\"\n                          onClick={() => {\n                            this.props.setModalState(\"UPDATE\");\n                            this.props.setPostId(schoolPost.requested_post_id);\n                            this.props.setPositionId(schoolPost.position_id);\n                            this.props.setRequestedPosts(\n                              schoolPost.needed_posts\n                            );\n                            this.props.setRequestExplanation(\n                              schoolPost.description\n                            );\n                            this.props.setFemaleOnPosition(\n                              schoolPost.female_number\n                            );\n                            this.props.setMaleOnPosition(\n                              schoolPost.male_number\n                            );\n                            this.props.setFormSteps({ ONE: true, TWO: false });\n                            this.props.setStepState({ ONE: false, TWO: false });\n                          }}\n                          disabled={this.props.loadingRequest}\n                        >\n                          Edit\n                        </button>\n                      )}\n                    </div>\n                  </td>\n                </tr>\n              ))\n            ) : (\n              <tr>\n                <td colSpan={8}>\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"No request have been made!\"}\n                  />\n                </td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n\n        {this.props.viewPost &&\n          this.props.modalState === null &&\n          this.props.thisPost &&\n          this.props.systemPositions && (\n            <ViewRequest\n              thisPost={this.props.thisPost}\n              setThisPost={this.props.setThisPost}\n              setViewPost={this.props.setViewPost}\n              systemPositions={this.props.systemPositions}\n              schoolPlacements={this.props.schoolPlacements}\n              setPostId={this.props.setPostId}\n              setModalState={this.props.setModalState}\n              setPositionId={this.props.setPositionId}\n              setRequestedPosts={this.props.setRequestedPosts}\n              setRequestExplanation={this.props.setRequestExplanation}\n              setFemaleOnPosition={this.props.setFemaleOnPosition}\n              setMaleOnPosition={this.props.setMaleOnPosition}\n              setFormSteps={this.props.setFormSteps}\n              setStepState={this.props.setStepState}\n            />\n          )}\n      </div>\n    );\n  }\n}\n\nexport default RequestList;\n","import React, { Fragment } from \"react\";\nimport { FaSchool } from \"react-icons/fa\";\nimport { VscOpenPreview } from \"react-icons/vsc\";\n\ninterface StepsHeaderProps {\n  currentStep: number;\n  stepState: {\n    ONE: boolean;\n    TWO: boolean;\n  };\n  setFormSteps: (value: { ONE: boolean; TWO: boolean }) => void;\n}\n\nconst StepsHeader: React.FC<StepsHeaderProps> = (props) => {\n  return (\n    <Fragment>\n      <div className=\"p-5\">\n        <div className=\"mx-4 p-4\">\n          <div className=\"flex items-center\">\n            {/* STEP ONE ================================== */}\n            <div\n              className={`flex items-center ${\n                props.currentStep === 1\n                  ? \"text-white\"\n                  : props.stepState.ONE\n                  ? \"text-blue-500 cursor-pointer\"\n                  : \"text-gray-500\"\n              } relative`}\n              onClick={() =>\n                props.stepState.ONE &&\n                props.setFormSteps({\n                  ONE: true,\n                  TWO: false,\n                })\n              }\n            >\n              <div\n                className={`rounded-full transition duration-500 ease-in-out h-12 w-12 py-3 border-2 ${\n                  props.currentStep === 1\n                    ? \"border-blue-500 bg-blue-500\"\n                    : props.stepState.ONE\n                    ? \"border-blue-500 cursor-pointer\"\n                    : \"border-gray-500\"\n                }`}\n              >\n                <FaSchool className=\"feather feather-bookmark w-full h-full\" />\n              </div>\n              <div\n                className={`absolute top-0 -ml-10 text-center mt-16 w-32 text-xs font-semibold uppercase ${\n                  props.currentStep === 1\n                    ? \"text-blue-500\"\n                    : props.stepState.ONE\n                    ? \"text-blue-500 cursor-pointer\"\n                    : \"text-gray-500\"\n                }`}\n              >\n                Position\n              </div>\n            </div>\n            <div\n              className={`flex-auto border-t-2 transition duration-500 ease-in-out ${\n                props.stepState.ONE ? \"border-blue-500\" : \"border-gray-300\"\n              }`}\n            ></div>\n\n            {/* STEP TWO ================================== */}\n            <div\n              className={`flex items-center ${\n                props.currentStep === 4\n                  ? \"text-white\"\n                  : props.stepState.TWO\n                  ? \"text-blue-500 cursor-pointer\"\n                  : \"text-gray-500\"\n              } relative`}\n              onClick={() =>\n                props.stepState.TWO &&\n                props.setFormSteps({\n                  ONE: false,\n                  TWO: false,\n                })\n              }\n            >\n              <div\n                className={`rounded-full transition duration-500 ease-in-out h-12 w-12 py-3 border-2 ${\n                  props.currentStep === 4\n                    ? \"border-blue-500 bg-blue-500\"\n                    : props.stepState.TWO\n                    ? \"border-blue-500 cursor-pointer\"\n                    : \"border-gray-500\"\n                }`}\n              >\n                <VscOpenPreview className=\"feather feather-database w-full h-full\" />\n              </div>\n              <div\n                className={`absolute top-0 -ml-10 text-center mt-16 w-32 text-xs font-semibold uppercase ${\n                  props.currentStep === 4\n                    ? \"text-blue-500\"\n                    : props.stepState.TWO\n                    ? \"text-blue-500\"\n                    : \"text-gray-500\"\n                }`}\n              >\n                Description\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default StepsHeader;\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  PushPopupAlert,\n  schoolLevelsStoreInterface,\n} from \"../../actions\";\nimport { createSchoolPost } from \"../../actions/schools\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PositionAPI } from \"../../interfaces\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { getPositionById, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport {\n  PostRequestStatusInterface,\n  PostSchoolInterface,\n  SchoolsInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport ViewPosition from \"../Positions/ViewPosition\";\nimport StepsHeader from \"./StepsHeader\";\n\ninterface RequestPostFormProps {\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  formSteps: {\n    ONE: boolean;\n    TWO: boolean;\n  };\n  setFormSteps: (value: { ONE: boolean; TWO: boolean }) => void;\n  stepState: {\n    ONE: boolean;\n    TWO: boolean;\n  };\n  setStepState: (value: { ONE: boolean; TWO: boolean }) => void;\n  positionId: string;\n  setPositionId: (value: string) => void;\n  setRequestedPosts: (value: number) => void;\n  requestedPosts: number;\n  maleOnPosition: number;\n  femaleOnPosition: number;\n  setFemaleOnPosition: (value: number) => void;\n  setMaleOnPosition: (value: number) => void;\n  requestExplanation: string;\n  setRequestExplanation: (value: string) => void;\n  modalState: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null;\n  setModalState: (value: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  //   REDUX =================\n  auth: Auth;\n  schools: SchoolsInterface[];\n  schoolPosts: PostSchoolInterface[];\n  schoolLevels: schoolLevelsStoreInterface;\n  systemPositions: PositionAPI[] | null;\n  createSchoolPost: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface RequestPostFormState {\n  selectedLevel: string;\n}\n\nexport class RequestPostForm extends Component<\n  RequestPostFormProps,\n  RequestPostFormState\n> {\n  constructor(props: RequestPostFormProps) {\n    super(props);\n\n    this.state = {\n      selectedLevel: \"\",\n    };\n  }\n\n  GetAllowedPositions = (position_id?: string): PositionAPI[] => {\n    if (this.props.systemPositions) {\n      if (this.props.schoolPosts.length > 0) {\n        let postPositionIds: string[] = [];\n        for (const key in this.props.schoolPosts) {\n          if (\n            Object.prototype.hasOwnProperty.call(this.props.schoolPosts, key)\n          ) {\n            if (\n              this.props.schoolPosts[key].requested_post_status !==\n              PostRequestStatusInterface.RECEIVED\n            ) {\n              if (\n                !position_id ||\n                position_id !== this.props.schoolPosts[key].position_id\n              ) {\n                postPositionIds.push(this.props.schoolPosts[key].position_id);\n              }\n            }\n          }\n        }\n        if (position_id) {\n          postPositionIds = postPositionIds.filter(\n            (item) => item !== position_id\n          );\n        }\n        return this.props.systemPositions.filter(\n          (item) => !postPositionIds.includes(item.position_id)\n        );\n      }\n      return this.props.systemPositions;\n    }\n    return [];\n  };\n\n  submitRequest = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    // if (this.props.modalState === \"RECEIVE\" && this.props.receivedPosts < 0) {\n    //   return this.props.setFormError({\n    //     element: \"received_posts\",\n    //     msg: \"Invalid number of received post\",\n    //   });\n    // }\n    // if (\n    //   this.props.modalState === \"RECEIVE\" &&\n    //   this.props.thisPost &&\n    //   this.props.receivedPosts > this.props.thisPost.needed_posts\n    // ) {\n    //   return this.props.setFormError({\n    //     element: \"received_posts\",\n    //     msg: \"Invalid number of received post\",\n    //   });\n    // }\n\n    if (this.props.requestedPosts <= 0) {\n      return this.props.setFormError({\n        element: \"requested_posts\",\n        msg: \"Needed post must be greater than 0\",\n      });\n    }\n\n    if (isEmptyOrSpaces(this.props.requestExplanation)) {\n      return this.props.setFormError({\n        element: \"comment\",\n        msg: \"Explanation is required!\",\n      });\n    }\n\n    const thisSchool = this.props.schools.find(\n      (item) => item._id === this.props.auth.user_access.school_id\n    );\n\n    if (!thisSchool) {\n      return this.props.PushPopupAlert({\n        title: \"No district id found\",\n        theme: PopupAlertTheme.danger,\n      });\n    }\n\n    this.props.setLoadingRequest(true);\n    try {\n      if (this.props.modalState === \"CREATE\") {\n        const res = await axios.post<{ data: PostSchoolInterface }>(\n          `${API.PLACEMENT}/requestpost`,\n          {\n            school_id: this.props.auth.user_access.school_id,\n            position_id: this.props.positionId,\n            district_id: thisSchool.district_id,\n            needed_posts: this.props.requestedPosts,\n            male_number: this.props.maleOnPosition,\n            female_number: this.props.femaleOnPosition,\n            // description: 44,\n            description: this.props.requestExplanation,\n            occupied_posts:\n              Number(this.props.maleOnPosition) +\n              Number(this.props.femaleOnPosition),\n            requested_by: this.props.auth.user.user_id,\n          }\n        );\n        if (res) {\n          this.props.createSchoolPost(res.data.data);\n          this.props.setPositionId(\"\");\n          this.props.setRequestedPosts(0);\n          this.props.setFemaleOnPosition(0);\n          this.props.setMaleOnPosition(0);\n          this.props.setRequestExplanation(\"\");\n          this.props.setFormSteps({ ONE: true, TWO: false });\n          this.props.setStepState({ ONE: false, TWO: false });\n          this.props.PushPopupAlert({\n            title: `Post(s) has been requested!`,\n            theme: PopupAlertTheme.success,\n          });\n        }\n      }\n    } catch (error) {\n      console.error({ role_error: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.props.setLoadingRequest(false);\n  };\n\n  setSchoolLevel = (value: string) => {\n    this.setState({ selectedLevel: value });\n  };\n\n  getPositionByLevelId = (\n    allPosition: PositionAPI[],\n    levelId: string\n  ): PositionAPI[] => {\n    if (isEmptyOrSpaces(levelId)) {\n      return allPosition;\n    }\n    return allPosition.filter(\n      (item) => item.school_level_id.school_level_id === levelId\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        <StepsHeader\n          currentStep={this.props.formSteps.TWO ? 2 : 1}\n          stepState={this.props.stepState}\n          setFormSteps={this.props.setFormSteps}\n        />\n        <div className=\"px-4 mx-auto mb-4 mt-3\">\n          {this.props.formSteps.ONE && (\n            <section>\n              <div className=\"flex flex-col mb-4\">\n                <label>School level</label>\n                <select\n                  className=\"border-2 border-gray-700 bg-white p-2 rounded focus:outline-none focus:bg-gray-100\"\n                  value={this.state.selectedLevel}\n                  onChange={(e) => {\n                    this.setSchoolLevel(e.target.value);\n                  }}\n                >\n                  <option value=\"\">Choose level</option>\n                  {this.props.schoolLevels.school_levels &&\n                  this.props.schoolLevels.school_levels.length > 0 ? (\n                    this.props.schoolLevels.school_levels.map((item, index) => (\n                      <option key={index + 11} value={item.school_level_id}>\n                        {item.school_level_name}\n                      </option>\n                    ))\n                  ) : (\n                    <option>No school level found</option>\n                  )}\n                </select>\n              </div>\n\n              <div className=\"flex flex-col\">\n                <label>Select Position {this.props.positionId}</label>\n                <select\n                  className=\"border-2 border-gray-700 bg-white p-2 rounded focus:outline-none focus:bg-gray-100\"\n                  value={this.props.positionId}\n                  onChange={(e) => {\n                    this.props.setPositionId(e.target.value);\n                  }}\n                >\n                  <option value=\"\">Choose Position</option>\n                  {this.props.systemPositions &&\n                  this.getPositionByLevelId(\n                    this.GetAllowedPositions(\n                      this.props.positionId.length > 0\n                        ? this.props.positionId\n                        : \"\"\n                    ),\n                    this.state.selectedLevel\n                  ).length > 0 ? (\n                    this.getPositionByLevelId(\n                      this.GetAllowedPositions(\n                        this.props.positionId.length > 0\n                          ? this.props.positionId\n                          : \"\"\n                      ),\n                      this.state.selectedLevel\n                    ).map((position, index) => (\n                      <option key={index + 11} value={position.position_id}>\n                        {position.position_title}\n                      </option>\n                    ))\n                  ) : (\n                    <option>No position found</option>\n                  )}\n                </select>\n              </div>\n              {this.props.positionId.length > 0 &&\n                this.props.systemPositions &&\n                getPositionById(\n                  this.props.systemPositions,\n                  this.props.positionId\n                ) && (\n                  <div className=\"my-2 rounded border\">\n                    <ViewPosition\n                      thisPosition={\n                        getPositionById(\n                          this.props.systemPositions,\n                          this.props.positionId\n                        )!\n                      }\n                      isGuest={true}\n                    />\n                  </div>\n                )}\n              <div className=\"bg-white w-full flex justify-end\">\n                {this.props.positionId.length > 0 && (\n                  <button\n                    className=\"btn btn-blue m-1 mr-2 mb-2 animate__animated animate__fadeIn focus:outline-none\"\n                    onClick={() => {\n                      this.props.setFormSteps({\n                        ONE: false,\n                        TWO: true,\n                      });\n                      this.props.setStepState({\n                        ONE: true,\n                        TWO: false,\n                      });\n                    }}\n                  >\n                    Continue\n                  </button>\n                )}\n              </div>\n            </section>\n          )}\n          <form onSubmit={this.submitRequest}>\n            <div className=\"bg-white\">\n              {this.props.formSteps.TWO && (\n                <div className=\"text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n                  <div className=\"mb-4 md:flex md:justify-between\">\n                    <div className=\"mb-4 md:mr-2 md:mb-0 w-full\">\n                      <label\n                        className=\"block mb-2 text-sm font-bold text-gray-700\"\n                        htmlFor=\"female\"\n                      >\n                        Current number of Female on this position\n                      </label>\n                      <input\n                        className=\"appearance-none rounded w-full py-1 px-4 border-2 border-gray-700 bg-white focus:outline-none focus:bg-gray-100\"\n                        id=\"female\"\n                        type=\"number\"\n                        min={0}\n                        value={this.props.femaleOnPosition}\n                        onChange={(e) =>\n                          this.props.setFemaleOnPosition(Number(e.target.value))\n                        }\n                        placeholder=\"Current number of Female on this position\"\n                      />\n                      {/* <p className=\"text-xs italic text-red-500\">\n                          Please choose a password.\n                        </p> */}\n                    </div>\n                    <div className=\"md:ml-2 w-full\">\n                      <label\n                        className=\"block mb-2 text-sm font-bold text-gray-700\"\n                        htmlFor=\"male\"\n                      >\n                        Current number of Male on this position\n                      </label>\n                      <input\n                        className=\"appearance-none rounded w-full py-1 px-4 border-2 border-gray-700 bg-white focus:outline-none focus:bg-gray-100\"\n                        id=\"male\"\n                        type=\"number\"\n                        min={0}\n                        value={this.props.maleOnPosition}\n                        onChange={(e) =>\n                          this.props.setMaleOnPosition(Number(e.target.value))\n                        }\n                        placeholder=\"Current number of Male on this post\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"flex flex-col\">\n                    <label>Needed posts (number)</label>\n                    <input\n                      type=\"number\"\n                      className={`appearance-none rounded w-full py-1 px-4 border-2 bg-white focus:outline-none focus:bg-gray-100 ${\n                        this.props.formError &&\n                        this.props.formError.element === \"requested_posts\"\n                          ? \"border-red-700\"\n                          : \"border-gray-700\"\n                      }`}\n                      value={this.props.requestedPosts}\n                      onChange={(e) => {\n                        this.props.setRequestedPosts(Number(e.target.value));\n                        this.props.formError &&\n                          this.props.formError.element === \"requested_posts\" &&\n                          this.props.setFormError(null);\n                      }}\n                      placeholder=\"1\"\n                    />\n                    {this.props.formError &&\n                      this.props.formError.element === \"requested_posts\" && (\n                        <span className=\"text-xs italic text-red-700 mt-1\">\n                          {this.props.formError.msg}\n                        </span>\n                      )}\n                  </div>\n                  <div className=\"flex flex-col\">\n                    <label>Explanation</label>\n                    <textarea\n                      name=\"description\"\n                      className={`appearance-none rounded w-full py-1 px-4 border-2 bg-white focus:outline-none focus:bg-gray-100 ${\n                        this.props.formError &&\n                        this.props.formError.element === \"comment\"\n                          ? \"border-red-700\"\n                          : \"border-gray-700\"\n                      }`}\n                      id=\"description\"\n                      placeholder=\"Explanation\"\n                      value={this.props.requestExplanation}\n                      onChange={(e) => {\n                        this.props.setRequestExplanation(e.target.value);\n                        this.props.formError &&\n                          this.props.formError.element === \"comment\" &&\n                          this.props.setFormError(null);\n                      }}\n                      rows={2}\n                    ></textarea>\n                    {this.props.formError &&\n                      this.props.formError.element === \"comment\" && (\n                        <span className=\"text-xs italic text-red-700 mt-1\">\n                          {this.props.formError.msg}\n                        </span>\n                      )}\n                  </div>\n                </div>\n              )}\n              <div className=\"pt-4 flex justify-between\">\n                <button\n                  className=\"btn bg-gray-400 text-white hover:bg-gray-600\"\n                  onClick={() => {\n                    this.props.setPositionId(\"\");\n                    this.props.setRequestedPosts(0);\n                    this.props.setFemaleOnPosition(0);\n                    this.props.setMaleOnPosition(0);\n                    this.props.setRequestExplanation(\"\");\n                    this.props.setModalState(null);\n                    this.props.setFormError(null);\n                    this.props.setFormSteps({ ONE: true, TWO: false });\n                    this.props.setStepState({ ONE: false, TWO: false });\n                  }}\n                >\n                  Exit\n                </button>\n                {this.props.formSteps.TWO && (\n                  <button\n                    className=\"btn bg-primary text-white hover:bg-blue-600\"\n                    disabled={this.props.loadingRequest}\n                  >\n                    {this.props.loadingRequest ? \"Loading...\" : \"Request\"}\n                  </button>\n                )}\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  schools,\n  system_settings,\n  schoolLevels,\n}: StoreState): {\n  auth: Auth;\n  schools: SchoolsInterface[];\n  schoolPosts: PostSchoolInterface[];\n  schoolLevels: schoolLevelsStoreInterface;\n  systemPositions: PositionAPI[] | null;\n} => {\n  return {\n    auth: auth,\n    schools: schools.schools,\n    schoolPosts: schools.schoolPosts,\n    schoolLevels,\n    systemPositions: system_settings.systemPositions,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  createSchoolPost,\n  PushPopupAlert,\n})(RequestPostForm);\n","import React, { Component } from \"react\";\nimport { GiTeacher } from \"react-icons/gi\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  Auth,\n  loadSchoolLevels,\n  PushPopupAlert,\n  schoolLevelsStoreInterface,\n} from \"../../actions\";\nimport {\n  getSchools,\n  fetchSchoolPosts,\n  createSchoolPost,\n  updateSchoolPost,\n  getSchoolPlacement,\n} from \"../../actions/schools\";\nimport { getPositions } from \"../../actions/settings\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PositionAPI } from \"../../interfaces\";\nimport {\n  placedCandidateInterface,\n  PlacedCandidateStatus,\n} from \"../../interfaces/marks_publication\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { SchoolsInterface, PostSchoolInterface } from \"../../shared/interfaces\";\nimport ReceivePost from \"./ReceivePost\";\nimport RequestList from \"./RequestList\";\nimport RequestPostForm from \"./RequestPostForm\";\n\nexport const getPlacementByRequest = (\n  placements: placedCandidateInterface[],\n  request: string,\n  status: PlacedCandidateStatus = PlacedCandidateStatus.PENDING\n): placedCandidateInterface[] => {\n  // position id must be replaced with request id\n  return placements.filter(\n    (item) => item.request_id === request && item.status === status\n  );\n};\n\ninterface RequestTeacherProps {\n  auth: Auth;\n  schools: SchoolsInterface[];\n  schoolLevels: schoolLevelsStoreInterface;\n  systemPositions: PositionAPI[] | null;\n  schoolPosts: PostSchoolInterface[];\n  schoolPlacements: placedCandidateInterface[] | null;\n  getPositions: Function;\n  fetchSchoolPosts: Function;\n  getSchoolPlacement: Function;\n  createSchoolPost: Function;\n  updateSchoolPost: Function;\n  getSchools: Function;\n  loadSchoolLevels: (callback: (loading: boolean) => void) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface RequestTeacherState {\n  loading: boolean;\n  loadingPost: boolean;\n  loadingRequest: boolean;\n  modalState: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null;\n  filterByPosition: string;\n  positionId: string;\n  requestedPosts: number;\n  femaleOnPosition: number;\n  maleOnPosition: number;\n  requestExplanation: string;\n  formSteps: {\n    ONE: boolean;\n    TWO: boolean;\n  };\n  stepState: {\n    ONE: boolean;\n    TWO: boolean;\n  };\n  thisPost: PostSchoolInterface | null;\n  viewPost: boolean;\n  postId: string;\n  receivedPosts: number;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n}\nclass RequestTeacher extends Component<\n  RequestTeacherProps,\n  RequestTeacherState\n> {\n  constructor(props: RequestTeacherProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingPost: true,\n      loadingRequest: false,\n      modalState: null,\n      filterByPosition: \"\",\n      positionId: \"\",\n      requestedPosts: 0,\n      femaleOnPosition: 0,\n      maleOnPosition: 0,\n      requestExplanation: \"\",\n      formSteps: { ONE: true, TWO: false },\n      stepState: { ONE: false, TWO: false },\n      thisPost: null,\n      viewPost: false,\n      postId: \"\",\n      receivedPosts: 0,\n      formError: null,\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n\n  setLoadingPost = (value: boolean) => {\n    this.setState({ loadingPost: value });\n  };\n\n  setViewPost = (value: boolean) => {\n    this.setState({ viewPost: value });\n  };\n\n  setPostId = (value: string) => {\n    this.setState({ postId: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n\n  setPositionId = (value: string) => {\n    this.setState({ positionId: value });\n  };\n  setRequestedPosts = (value: number) => {\n    this.setState({ requestedPosts: value });\n  };\n  setFemaleOnPosition = (value: number) => {\n    this.setState({ femaleOnPosition: value });\n  };\n  setMaleOnPosition = (value: number) => {\n    this.setState({ maleOnPosition: value });\n  };\n  setRequestExplanation = (value: string) => {\n    this.setState({ requestExplanation: value });\n  };\n  setFormSteps = (value: { ONE: boolean; TWO: boolean }) => {\n    this.setState({ formSteps: value });\n  };\n  setStepState = (value: { ONE: boolean; TWO: boolean }) => {\n    this.setState({ stepState: value });\n  };\n  setFilterByPosition = (value: string) => {\n    this.setState({ filterByPosition: value });\n  };\n\n  setThisPost = (value: PostSchoolInterface | null) => {\n    this.setState({ thisPost: value });\n  };\n\n  setModalState = (value: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null) => {\n    this.setState({ modalState: value });\n  };\n\n  setReceivedPosts = (value: number) => {\n    this.setState({ receivedPosts: value });\n  };\n\n  componentDidMount = () => {\n    if (this.props.auth.user_access.school_id.length <= 0) {\n      return <Redirect to=\"/apps-page\" />;\n    }\n    if (!this.props.schools.length && this.state.loading) {\n      this.props.getSchools((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (msg.length > 0) {\n          console.error({ loadingCandidatesError: msg });\n          this.setLoading(false);\n        }\n      });\n    } else {\n      this.setLoading(false);\n    }\n\n    if (!this.props.schoolPlacements) {\n      this.props.getSchoolPlacement(\n        this.props.auth.user_access.school_id,\n        (status: boolean, msg: string, data?: placedCandidateInterface[]) => {\n          this.setLoading(status);\n          if (!status && msg.length > 0) {\n            console.error({ getSchoolPlacementError: msg });\n          }\n        }\n      );\n    } else {\n      this.setLoading(false);\n    }\n\n    if (\n      this.props.systemPositions === null ||\n      (this.props.systemPositions.length === 0 && this.state.loading)\n    ) {\n      this.setLoading(true);\n      this.props.getPositions((status: boolean, msg: string) => {\n        this.setLoading(status);\n        console.log({ status: status, msg: msg });\n        if (msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    } else {\n      this.setLoading(false);\n    }\n\n    if (\n      this.props.schoolLevels.school_levels === null ||\n      (this.props.schoolLevels.school_levels.length === 0 && this.state.loading)\n    ) {\n      this.props.loadSchoolLevels(this.setLoading);\n    }\n\n    if (!this.props.schoolPosts.length && this.state.loadingPost) {\n      this.props.fetchSchoolPosts(\n        this.props.auth.user_access.school_id,\n        (status: boolean, message: string) => {\n          if (!status) {\n            if (message.length > 0 && this.state.loadingPost) {\n              console.error(\"error loading school post: \", message);\n              this.props.PushPopupAlert({\n                title: message,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            this.setState({ loadingPost: false });\n          }\n        }\n      );\n    } else {\n      this.setState({ loadingPost: false });\n    }\n  };\n\n  getPositionById = (\n    systemPositions: PositionAPI[],\n    positionId: string\n  ): PositionAPI | undefined => {\n    return systemPositions.find((item) => item.position_id === positionId);\n  };\n\n  render() {\n    if (this.state.loading) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading data...\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {/* header title */}\n        <div className=\"flex flex-row items-start gap-3 my-2\">\n          <GiTeacher className=\"text-blue-700 w-10 h-10 md:block hidden\" />\n          <div className=\"w-full\">\n            <div className=\"flex justify-between w-full\">\n              <div className=\"flex flex-col gap-1 justify-between\">\n                <h1 className=\"md:text-4xl text-3xl font-semibold\">\n                  Teacher Request\n                </h1>\n\n                <div className=\"flex-row items-center md:gap-3 gap-2 hidden\">\n                  <div className=\"flex flex-row items-center mt-1 gap-1\">\n                    <span className=\"text-gray-600 text-xl\">level:</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        {/* end header title */}\n\n        <div className=\"bg-white shadow p-2 rounded\">\n          {!this.state.modalState && this.props.schoolPlacements && (\n            <RequestList\n              systemPositions={this.props.systemPositions}\n              setModalState={this.setModalState}\n              loadingRequest={this.state.loadingRequest}\n              setFilterByPosition={this.setFilterByPosition}\n              schoolPosts={this.props.schoolPosts}\n              setThisPost={this.setThisPost}\n              setViewPost={this.setViewPost}\n              setPostId={this.setPostId}\n              setPositionId={this.setPositionId}\n              setRequestedPosts={this.setRequestedPosts}\n              setRequestExplanation={this.setRequestExplanation}\n              setFemaleOnPosition={this.setFemaleOnPosition}\n              setMaleOnPosition={this.setMaleOnPosition}\n              setFormSteps={this.setFormSteps}\n              setStepState={this.setStepState}\n              thisPost={this.state.thisPost}\n              viewPost={this.state.viewPost}\n              modalState={this.state.modalState}\n              schoolPlacements={this.props.schoolPlacements}\n              filterByPosition={this.state.filterByPosition}\n            />\n          )}\n\n          {(this.state.modalState === \"CREATE\" ||\n            this.state.modalState === \"UPDATE\") && (\n            <RequestPostForm\n              loadingRequest={this.state.loadingRequest}\n              setLoadingRequest={this.setLoadingRequest}\n              formSteps={this.state.formSteps}\n              setFormSteps={this.setFormSteps}\n              stepState={this.state.stepState}\n              setStepState={this.setStepState}\n              positionId={this.state.positionId}\n              setPositionId={this.setPositionId}\n              setRequestedPosts={this.setRequestedPosts}\n              requestedPosts={this.state.requestedPosts}\n              maleOnPosition={this.state.maleOnPosition}\n              femaleOnPosition={this.state.femaleOnPosition}\n              setFemaleOnPosition={this.setFemaleOnPosition}\n              setMaleOnPosition={this.setMaleOnPosition}\n              requestExplanation={this.state.requestExplanation}\n              setRequestExplanation={this.setRequestExplanation}\n              modalState={this.state.modalState}\n              setModalState={this.setModalState}\n              formError={this.state.formError}\n              setFormError={this.setFormError}\n            />\n          )}\n\n          {this.state.modalState === \"RECEIVE\" &&\n            this.state.thisPost &&\n            this.props.systemPositions &&\n            this.props.schoolPlacements && (\n              <ReceivePost\n                loadingPost={this.state.loadingPost}\n                loadingRequest={this.state.loadingRequest}\n                positionId={this.state.positionId}\n                thisPost={this.state.thisPost}\n                viewPost={this.state.viewPost}\n                receivedPosts={this.state.receivedPosts}\n                formError={this.state.formError}\n                systemPositions={this.props.systemPositions}\n                setThisPost={this.setThisPost}\n                setModalState={this.setModalState}\n                setFormError={this.setFormError}\n                setReceivedPosts={this.setReceivedPosts}\n                setLoadingRequest={this.setLoadingRequest}\n                setLoadingPost={this.setLoadingPost}\n                placementList={this.props.schoolPlacements}\n              />\n            )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  schools,\n  system_settings,\n  schoolLevels,\n}: StoreState): {\n  auth: Auth;\n  schools: SchoolsInterface[];\n  schoolPosts: PostSchoolInterface[];\n  schoolPlacements: placedCandidateInterface[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  systemPositions: PositionAPI[] | null;\n} => {\n  return {\n    auth: auth,\n    schools: schools.schools,\n    schoolPosts: schools.schoolPosts,\n    schoolPlacements: schools.schoolPlacements,\n    schoolLevels,\n    systemPositions: system_settings.systemPositions,\n  };\n};\n\nexport const PostRequest = connect(mapStateToProps, {\n  loadSchoolLevels,\n  getPositions,\n  getSchools,\n  fetchSchoolPosts,\n  getSchoolPlacement,\n  createSchoolPost,\n  updateSchoolPost,\n  PushPopupAlert,\n})(RequestTeacher);\n"],"sourceRoot":""}
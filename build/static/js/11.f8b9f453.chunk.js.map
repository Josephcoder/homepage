{"version":3,"sources":["actions/users.ts","actions/schools.ts","containers/UserManagement/UserList.tsx","containers/UserManagement/RoleList.tsx","containers/UserManagement/UserRole.tsx","shared/blank_profile.png","containers/UserManagement/UserAccess.tsx","containers/Locations/ViewDistricts.tsx","containers/Locations/ViewProvince.tsx","containers/Locations/ViewSectors.tsx","containers/Locations/Locations.tsx"],"names":["documentValidationStatus","userPageLimit","fetchUserAccess","page","callback","dispatch","a","setAxiosToken","axios","get","API","AUTH","res","console","log","type","ActionTypes","FETCH_USERS_ACCESS","payload","users","data","next","previous","total_users","error","user_error","errorToText","blockUserToSystem","user_id","BLOCK_USER_TO_SYSTEM","id","unBlockUserToSystem","UNBLOCK_USER_TO_SYSTEM","assignRoleToUserAccess","ASSIGN_ROLE_TO_USER","customizeUserAccess","CUSTOMIZE_USER_ACCESS","resetUserAccess","RESET_USER_ACCESS","getSchools","APPLICATION","GET_SCHOOLS","getSchoolById","schoolId","GET_SCHOOLS_BY_ID","createSchool","schools","CREATE_SCHOOL","updateSchool","UPDATE_SCHOOL","deleteSchool","DELETE_SCHOOL","fetchSchoolPosts","school_id","PLACEMENT","schoolPosts","FETCH_SCHOOL_POSTS","getSchoolPlacement","GET_SCHOOL_PLACEMENT","createSchoolPost","CREATE_SCHOOL_POST","updateSchoolPost","TYPE","UPDATE_SCHOOL_POST","fetchDistrictPosts","district_id","FETCH_DISTRICT_POSTS","getDistrictPlacement","GET_DISTRICT_PLACEMENT","getInstitutePlacementLimit","institute_id","session_id","GET_INSTITUTE_PLACEMENT_LIMIT","getDistrictPlacementLimit","GET_DISTRICT_PLACEMENT_LIMIT","updateInstitutePlacementLimit","UPDATE_INSTITUTE_PLACEMENT_LIMIT","ModalState","RoleList","props","useState","searchInput","setSearchInput","className","placeholder","onChange","e","target","value","disabled","roleList","length","onClick","setChooseRole","search","map","role","index","loadindRequest","handleSelectRole","system_user_role_id","capitalizeFirstLetter","React","memo","UserRole","setRoleId","setState","roleId","setSelectedRole","selectedRole","setProvinceId","provinceId","setDistrictId","districtId","setCenterId","centerId","setRoomId","roomId","setLoadingForm","loadingForm","setSchoolId","setChooseSchool","chooseSchool","setLoading","loading","setInstituteId","instituteId","setFormError","formError","setLoadingRequest","loadingRequest","chooseRole","setDefaultState","default_access","LOAD_province","LOAD_district","district_required","roomList","distinctDistrict","find","item","_id","province_id","room_required","LocationsInArray","room_id","center_id","school_required","schoolList","LOAD_school","componentDidMount","userInfo","state","result","vvvvv","role_id","element","tableData","access","i","task","permitted","create","view","update","delete","Math","random","colSpan","assignRoleToUser","preventDefault","window","confirm","msg","isEmptyOrSpaces","education_institution_required","formData","status","education_institution_id","post","currentPage","setChangeRole","PushPopupAlert","title","theme","PopupAlertTheme","success","role_error","danger","location","ids","districts","key","Object","prototype","hasOwnProperty","call","keyDistrict","includes","push","distinctCenter","rooms","forEach","distinctRoom","this","Loading","onSubmit","schoolLevels","education_categories","institute","education_institute_id","education_category_title","province","province_name","undefined","district","district_name","school","school_name","center","center_name","room","room_name","Table","columns","columnTitle","alignText","padding","rows","pagination","searchBG","thColor","tableId","Component","connect","getUserById","userId","LocationData","locationTemp","p","d","centers","c","r","room_number","toString","capacity","occupied","UserList","setManageUserId","manageUserId","setLoadingSchool","loadingSchool","setLoadingRequestType","loadingRequestType","setRoomList","setRoomTables","roomTable","setCurrentAccess","currentAccess","setSchoolList","setUserAccess","userAccess","allRoom","getAllRoom","loadingUser","user","setManageUser","user_info","fname","lname","email","sex","getRoleById","blockUser","actionType","patch","is_active","info","blockUser_ERROR","restUserAccess","warning","resetedAccess","reseting_user_access","manageUser","src","photo","profile","alt","getInstituteById","NoResult","NoResultThemes","Dark","n_id","phone_number","custome_access","changeRole","UserAccess","locations","roomLocation","_UserAccess","setViewPermission","viewPermission","setLoadindRequest","setCreatePermission","createPermission","setUpdatePermission","updatePermission","setDeletePermission","deletePermission","setLoadind","overrideUserAccess","overideAccess","findCustom","custom","handleCustomization","findIndex","custome_user_access_id","customize_access","to","checked","FC_CreateDistrict","FC_UpdateDistrict","FC_DeleteDistrict","districtName","setDistrictName","districtCode","setDistrictCode","setError","handleSubmit","actionTypes","thisProvince","province_code","district_code","sectors","setActionTypes","thisDistrict","setThisDistrict","doc_category_error","component","Modal","backDrop","Themes","default","close","displayClose","backDropClose","widthSizeClass","ModalSize","medium","body","footer","Number","FC_CreateProvince","FC_UpdateProvince","FC_DeleteProvince","provinceTitle","setProvinceTitle","provinceCode","setProvinceCode","updated","setThisProvince","province_error","FC_CreateSector","FC_UpdateSector","FC_DeleteSector","sectorName","setSectorName","sectorCode","setSectorCode","sector_name","sector_code","sector_id","thisSector","setThisSector","sector_error","handleDelete","sectorId","district_error","sector","Locations","useEffect","ViewDistricts"],"mappings":"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","file":"static/js/11.f8b9f453.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AssignRoleToUserActionInterface,\n  CustomeAccessInterface,\n  UserInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\n\nexport const userPageLimit: number = 30;\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\nexport interface FetchUsersAction {\n  type: ActionTypes.FETCH_USERS_ACCESS;\n  payload: UserAccessInterface;\n}\n\nexport interface BlockUserToSystem {\n  type: ActionTypes.BLOCK_USER_TO_SYSTEM | ActionTypes.UNBLOCK_USER_TO_SYSTEM;\n  payload: { id: string; page: number };\n}\n\nexport interface AssignRoleToUserAction {\n  type: ActionTypes.ASSIGN_ROLE_TO_USER;\n  payload: { data: AssignRoleToUserActionInterface; page: number };\n}\n\nexport interface CustomizeUserAccessAction {\n  type: ActionTypes.CUSTOMIZE_USER_ACCESS;\n  payload: { data: CustomeAccessInterface; page: number };\n}\n\nexport interface ResetUserAccessAction {\n  type: ActionTypes.RESET_USER_ACCESS;\n  payload: { user_id: string; page: number };\n}\n\nexport type fetchUserAccessInterface = {\n  users: UserInterface[] | null;\n  next: {\n    page: number;\n    limit: number;\n  } | null;\n  previous: {\n    page: number;\n    limit: number;\n  } | null;\n  total_users: number;\n};\n\nexport type UserAccessInterface = {\n  users: { data: UserInterface[]; page: number }[] | null;\n  next: {\n    page: number;\n    limit: number;\n  } | null;\n  previous: {\n    page: number;\n    limit: number;\n  } | null;\n  total_users: number;\n};\n\nexport enum documentValidationStatus {\n  waiting = \"waiting\",\n  approved = \"approved\",\n  rejected = \"rejected\",\n}\n\nexport interface VerifyDocumentInterface {\n  user_id: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date?: string;\n  };\n  in_education: boolean;\n  disability: boolean;\n}\n\nexport type AccessUserActionType =\n  | FetchUsersAction\n  | BlockUserToSystem\n  | AssignRoleToUserAction\n  | CustomizeUserAccessAction\n  | ResetUserAccessAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const fetchUserAccess = (page: number, callback?: Function) => {\n  callback && callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<fetchUserAccessInterface>(\n        `${API.AUTH}/users?page=${page}&limit=${userPageLimit}`\n      );\n      console.log(\"====================================\");\n      console.log({ fetchUserAccess: res });\n      console.log(\"====================================\");\n      dispatch<FetchUsersAction>({\n        type: ActionTypes.FETCH_USERS_ACCESS,\n        payload: {\n          users: [{ data: res.data.users!, page: page }],\n          next: res.data.next,\n          previous: res.data.previous,\n          total_users: res.data.total_users,\n        },\n      });\n      callback && callback(false, \"\", res.data.users);\n    } catch (error) {\n      console.error({ user_error: error });\n      callback && callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const blockUserToSystem = (user_id: string, page: number) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<BlockUserToSystem>({\n      type: ActionTypes.BLOCK_USER_TO_SYSTEM,\n      payload: { id: user_id, page },\n    });\n  };\n};\n\nexport const unBlockUserToSystem = (user_id: string, page: number) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<BlockUserToSystem>({\n      type: ActionTypes.UNBLOCK_USER_TO_SYSTEM,\n      payload: { id: user_id, page },\n    });\n  };\n};\n\nexport const assignRoleToUserAccess = (\n  data: AssignRoleToUserActionInterface,\n  page: number\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<AssignRoleToUserAction>({\n      type: ActionTypes.ASSIGN_ROLE_TO_USER,\n      payload: { data, page },\n    });\n  };\n};\n\nexport const customizeUserAccess = (\n  data: CustomeAccessInterface,\n  page: number\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CustomizeUserAccessAction>({\n      type: ActionTypes.CUSTOMIZE_USER_ACCESS,\n      payload: { data, page },\n    });\n  };\n};\n\nexport const resetUserAccess = (data: string, page: number) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<ResetUserAccessAction>({\n      type: ActionTypes.RESET_USER_ACCESS,\n      payload: { user_id: data, page },\n    });\n  };\n};\n","import { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  MySchoolInterface,\n  PostSchoolInterface,\n  SchoolInfoInterface,\n  SchoolsInterface,\n} from \"../shared/interfaces\";\n// import { setAxiosToken } from \"../utils/AxiosToken\";\nimport axios from \"axios\";\nimport { API } from \"../utils/api\";\nimport { errorToText } from \"../utils/errors\";\nimport { placedCandidateInterface } from \"../interfaces/marks_publication\";\nimport { PlacementListInterface } from \"../containers/PlacementLimit/PlacementLimit\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\nexport interface GetSchoolsAction {\n  type: ActionTypes.GET_SCHOOLS;\n  payload: SchoolsInterface[];\n}\n\nexport interface GetSchoolByIdAction {\n  type: ActionTypes.GET_SCHOOLS_BY_ID;\n  payload: MySchoolInterface;\n}\n\nexport interface GetSchoolsInfoAction {\n  type: ActionTypes.GET_SCHOOLS_INFO;\n  payload: SchoolInfoInterface[];\n}\n\nexport interface CreateSchoolAction {\n  type: ActionTypes.CREATE_SCHOOL;\n  payload: SchoolsInterface;\n}\n\nexport interface UpdateSchoolAction {\n  type: ActionTypes.UPDATE_SCHOOL;\n  payload: SchoolsInterface;\n}\n\nexport interface DeleteSchoolAction {\n  type: ActionTypes.DELETE_SCHOOL;\n  payload: string;\n}\n\n// School Posts interfaces\nexport interface FetchSchoolPostsAction {\n  type: ActionTypes.FETCH_SCHOOL_POSTS;\n  payload: PostSchoolInterface[];\n}\n\n// School Placements interfaces\nexport interface GetSchoolPlacementAction {\n  type: ActionTypes.GET_SCHOOL_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\n// District School Placements interfaces\nexport interface GetDistrictPlacementAction {\n  type: ActionTypes.GET_DISTRICT_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\n// District School Placements interfaces\nexport interface GetSessionPlacementAction {\n  type: ActionTypes.GET_SESSION_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\nexport interface FetchDistrictPostsAction {\n  type: ActionTypes.FETCH_DISTRICT_POSTS;\n  payload: PostSchoolInterface[];\n}\n\nexport interface CreateSchoolPostAction {\n  type: ActionTypes.CREATE_SCHOOL_POST;\n  payload: PostSchoolInterface;\n}\n\nexport interface UpdateSchoolPostAction {\n  type: ActionTypes.UPDATE_SCHOOL_POST;\n  payload: {\n    TYPE: \"DISTRICT\" | \"SCHOOL\" | \"RECEIVED\";\n    data: PostSchoolInterface;\n  };\n}\n\nexport interface DeleteSchoolPostAction {\n  type: ActionTypes.DELETE_SCHOOL_POST;\n  payload: PostSchoolInterface[];\n}\n\n// Get Institute Limit Posts Action interfaces\nexport interface GetInstitutePlacementLimitAction {\n  type: ActionTypes.GET_INSTITUTE_PLACEMENT_LIMIT;\n  payload: PlacementListInterface[];\n}\n\nexport interface GetDistrictPlacementLimitAction {\n  type: ActionTypes.GET_DISTRICT_PLACEMENT_LIMIT;\n  payload: PlacementListInterface[];\n}\n\nexport interface UpdateInstitutePlacementLimitAction {\n  type: ActionTypes.UPDATE_INSTITUTE_PLACEMENT_LIMIT;\n  payload: { limit_id: string; confirmed_post: number };\n}\n\nexport type SchoolActionType =\n  | GetSchoolsAction\n  | GetSchoolByIdAction\n  | GetSchoolsInfoAction\n  | CreateSchoolAction\n  | UpdateSchoolAction\n  | DeleteSchoolAction\n  | FetchSchoolPostsAction\n  | GetSchoolPlacementAction\n  | FetchDistrictPostsAction\n  | CreateSchoolPostAction\n  | UpdateSchoolPostAction\n  | DeleteSchoolPostAction\n  | GetDistrictPlacementAction\n  | GetSessionPlacementAction\n  | GetInstitutePlacementLimitAction\n  | GetDistrictPlacementLimitAction\n  | UpdateInstitutePlacementLimitAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSchools = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      const res = await axios.get<SchoolsInterface[]>(\n        `${API.APPLICATION}/schools`\n      );\n      dispatch<GetSchoolsAction>({\n        type: ActionTypes.GET_SCHOOLS,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSchoolById = (schoolId: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<MySchoolInterface>(\n        `${API.APPLICATION}/schools/${schoolId}`\n      );\n      dispatch<GetSchoolByIdAction>({\n        type: ActionTypes.GET_SCHOOLS_BY_ID,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// export const getSchoolsInfo = () => {\n//   return async (dispatch: Dispatch) => {\n//     setAxiosToken();\n//     const response = await axios.get<SchoolInfoInterface[]>(url);\n\n//     dispatch<GetSchoolsInfoAction>({\n//       type: ActionTypes.GET_SCHOOLS_INFO,\n//       payload: response.data,\n//     });\n//   };\n// };\n\nexport const createSchool = (data: SchoolsInterface) => {\n  console.log({ schools: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateSchoolAction>({\n      type: ActionTypes.CREATE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const updateSchool = (data: SchoolsInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateSchoolAction>({\n      type: ActionTypes.UPDATE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteSchool = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteSchoolAction>({\n      type: ActionTypes.DELETE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const fetchSchoolPosts = (school_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PostSchoolInterface[]>(\n        `${API.PLACEMENT}/requestpost/school/${school_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ schoolPosts: res });\n      console.log(\"====================================\");\n\n      dispatch<FetchSchoolPostsAction>({\n        type: ActionTypes.FETCH_SCHOOL_POSTS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSchoolPlacement = (school_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/school/${school_id}`\n      );\n\n      console.log({ getSchoolPlacement: res.data });\n\n      dispatch<GetSchoolPlacementAction>({\n        type: ActionTypes.GET_SCHOOL_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createSchoolPost = (data: PostSchoolInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateSchoolPostAction>({\n      type: ActionTypes.CREATE_SCHOOL_POST,\n      payload: data,\n    });\n  };\n};\n\nexport const updateSchoolPost = (\n  TYPE: \"DISTRICT\" | \"SCHOOL\" | \"RECEIVED\",\n  data: PostSchoolInterface\n) => {\n  console.log({ TYPE, data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateSchoolPostAction>({\n      type: ActionTypes.UPDATE_SCHOOL_POST,\n      payload: { TYPE, data },\n    });\n  };\n};\n\nexport const deleteSchoolPost = (data: PostSchoolInterface[]) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteSchoolPostAction>({\n      type: ActionTypes.DELETE_SCHOOL_POST,\n      payload: data,\n    });\n  };\n};\n\nexport const fetchDistrictPosts = (district_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PostSchoolInterface[]>(\n        `${API.PLACEMENT}/requestpost/district/${district_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ fetchDistrictPosts: res });\n      console.log(\"====================================\");\n\n      dispatch<FetchDistrictPostsAction>({\n        type: ActionTypes.FETCH_DISTRICT_POSTS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getDistrictPlacement = (\n  district_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/district/${district_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getDistrictPlacement: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetDistrictPlacementAction>({\n        type: ActionTypes.GET_DISTRICT_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSessionPlacement = (session_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/session/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getSessionPlacement: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetSessionPlacementAction>({\n        type: ActionTypes.GET_SESSION_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getInstitutePlacementLimit = (\n  institute_id: string,\n  session_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PlacementListInterface[]>(\n        `${API.PLACEMENT}/confirmedpostrequest/institute/${institute_id}/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getInstitutePlacementLimit: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetInstitutePlacementLimitAction>({\n        type: ActionTypes.GET_INSTITUTE_PLACEMENT_LIMIT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getDistrictPlacementLimit = (\n  district_id: string,\n  session_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PlacementListInterface[]>(\n        `${API.PLACEMENT}/confirmedpostrequest/district/${district_id}/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getDistrictPlacementLimit: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetDistrictPlacementLimitAction>({\n        type: ActionTypes.GET_DISTRICT_PLACEMENT_LIMIT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const updateInstitutePlacementLimit = (data: {\n  limit_id: string;\n  confirmed_post: number;\n}) => {\n  console.log(\"====================================\");\n  console.log({ updateInstitutePlacementLimit: data });\n  console.log(\"====================================\");\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateInstitutePlacementLimitAction>({\n      type: ActionTypes.UPDATE_INSTITUTE_PLACEMENT_LIMIT,\n      payload: data,\n    });\n  };\n};\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { MdLock, MdLocationOn } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert, schoolLevelsStoreInterface } from \"../../actions\";\nimport { getAllRoom } from \"../../actions/location\";\nimport { getSchools } from \"../../actions/schools\";\nimport {\n  blockUserToSystem,\n  unBlockUserToSystem,\n  resetUserAccess,\n} from \"../../actions/users\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport Loading from \"../../components/Loading/Loading\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport Table from \"../../components/Table/Table\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport {\n  getRoleById,\n  capitalizeFirstLetter,\n  getInstituteById,\n} from \"../../shared/dataTest\";\nimport {\n  RoomLocationInterface,\n  LocationRoomTableInterface,\n  DistrictInterface,\n  SystemUserRoleInterface,\n  UserInterface,\n  AccessTaskInterface,\n  SchoolsInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport { distinctDistrict } from \"../Locations/Locations\";\nimport { UserAccess } from \"./UserAccess\";\nimport UserRole from \"./UserRole\";\nimport profile from \"../../shared/blank_profile.png\"; // with im\n\nexport const getUserById = (users: UserInterface[], userId: string) => {\n  return users.find((item) => item.user_id === userId);\n};\n\nexport enum ModalState {\n  View_User = \"View User Info\",\n  Add_Access = \"Add Access To User\",\n  Update_Access = \"Update User Access\",\n  Close_Modal = \"Close Modal\",\n}\n\n// Tobe replaced with Emmy's function\nexport const LocationsInArray = (\n  LocationData: RoomLocationInterface[]\n): LocationRoomTableInterface[] | [] => {\n  let locationTemp: LocationRoomTableInterface[] = [];\n  for (let p in LocationData) {\n    let districts = LocationData[p].districts;\n    for (let d in districts) {\n      let centers = districts[d].centers;\n      for (let c in centers) {\n        let rooms = centers[c].rooms;\n        for (let r in rooms) {\n          locationTemp.push({\n            province_id: LocationData[p]._id,\n            province_name: LocationData[p].province_name,\n            district_id: districts[d]._id,\n            district_name: districts[d].district_name,\n            center_id: centers[c]._id,\n            center_name: centers[c].center_name,\n            room_id: rooms[r]._id,\n            room_name: rooms[r].room_number.toString(),\n            capacity: rooms[r].capacity,\n            occupied: rooms[r].occupied,\n          });\n        }\n      }\n    }\n  }\n  return locationTemp;\n};\n\ninterface AppProps {\n  users: UserInterface[];\n  roleList: SystemUserRoleInterface[];\n  userTypes: \"all\" | \"active\" | \"blocked\";\n  loadingUser: boolean;\n  schoolLevels: schoolLevelsStoreInterface;\n  setLoadingUser: (value: boolean) => void;\n  manageUser: UserInterface | null;\n  setManageUser: (value: UserInterface | null) => void;\n  changeRole: boolean;\n  setChangeRole: (value: boolean) => void;\n  currentPage: number;\n\n  // REDUX =================\n  allRoom: RoomLocationInterface[];\n  getAllRoom: Function;\n  schools: SchoolsInterface[];\n  getSchools: Function;\n  blockUserToSystem: Function;\n  unBlockUserToSystem: Function;\n  resetUserAccess: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface AppStates {\n  manageUserId: string;\n  loadingRequest: boolean;\n  loading: boolean;\n  loadingSchool: boolean;\n  loadingRequestType: \"RESET\" | \"STATUS\" | \"CHANGE_ROLE\" | null;\n  schoolList: SchoolsInterface[] | null;\n  roomList: RoomLocationInterface[] | null;\n  roomTable: LocationRoomTableInterface[] | null;\n  userAccess: AccessTaskInterface[] | null;\n  currentAccess: AccessTaskInterface | null;\n}\n\nclass UserList extends Component<AppProps, AppStates> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      manageUserId: \"\",\n      loadingRequest: false,\n      loading: true,\n      loadingSchool: true,\n      loadingRequestType: null,\n      schoolList: null,\n      roomList: null,\n      roomTable: null,\n      userAccess: null,\n      currentAccess: null,\n    };\n  }\n\n  setManageUserId = (value: string) => {\n    this.setState({ manageUserId: value });\n  };\n\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n\n  setLoadingSchool = (value: boolean) => {\n    this.setState({ loadingSchool: value });\n  };\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingRequestType = (\n    value: \"RESET\" | \"STATUS\" | \"CHANGE_ROLE\" | null\n  ) => {\n    this.setState({ loadingRequestType: value });\n  };\n\n  setRoomList = (value: RoomLocationInterface[] | null) => {\n    this.setState({ roomList: value });\n  };\n\n  setRoomTables = (value: LocationRoomTableInterface[] | null) => {\n    this.setState({ roomTable: value });\n  };\n\n  setCurrentAccess = (value: AccessTaskInterface | null) => {\n    this.setState({ currentAccess: value });\n  };\n\n  setSchoolList = (value: SchoolsInterface[] | null) => {\n    this.setState({ schoolList: value });\n  };\n\n  setUserAccess = (value: AccessTaskInterface[] | null) => {\n    this.setState({ userAccess: value });\n  };\n\n  componentDidMount = () => {\n    if (this.props.schools.length === 0) {\n      this.props.getSchools(\n        (status: boolean, msg: string, data?: SchoolsInterface[]) => {\n          this.setLoadingSchool(status);\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data) {\n              this.setLoadingSchool(false);\n              this.setSchoolList(data);\n            }\n          }\n        }\n      );\n    } else {\n      this.setSchoolList(this.props.schools);\n      this.setLoadingSchool(false);\n    }\n\n    if (this.props.allRoom.length === 0) {\n      this.props.getAllRoom(\n        (status: boolean, msg: string, data?: RoomLocationInterface[]) => {\n          this.setLoading(status);\n          if (!status && msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          if (data && data.length > 0) {\n            this.setRoomList(data);\n            this.setRoomTables(LocationsInArray(data));\n          }\n        }\n      );\n    } else if (this.state.loading) {\n      this.setRoomList(this.props.allRoom);\n      this.setRoomTables(LocationsInArray(this.props.allRoom));\n      this.setLoading(false);\n    }\n  };\n\n  tableData = (): JSX.Element[] => {\n    if (\n      this.props.loadingUser ||\n      this.state.loading ||\n      this.state.loadingSchool\n    ) {\n      return [\n        <tr\n          key={Math.random()}\n          className=\"border-b border-gray-200 hover:bg-gray-100\"\n        >\n          <td className=\"p-3 text-center\" colSpan={8}>\n            <Loading />\n          </td>\n        </tr>,\n      ];\n    }\n\n    let data: UserInterface[] = this.props.users;\n    if (data.length <= 0) {\n      return [\n        <tr\n          key={Math.random()}\n          className=\"border-b border-gray-200 hover:bg-gray-100\"\n        >\n          <td className=\"p-3 text-center\" colSpan={8}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    return data.map((user: UserInterface, index: number) => (\n      <tr\n        key={index + Math.random()}\n        className=\"border-b border-gray-200 hover:bg-gray-100 group cursor-pointer\"\n        onClick={() => {\n          this.props.setManageUser(user);\n          this.setManageUserId(user.user_id);\n        }}\n      >\n        <td className=\"p-3 text-left whitespace-nowrap\">{index + 1}</td>\n        <td className=\"p-3 text-left\">\n          <span>\n            {user.user_info &&\n              user.user_info.fname + \" \" + user.user_info.lname}\n          </span>\n        </td>\n        <td className=\"p-3 text-left\">{user.email}</td>\n        {/* <td className=\"p-3 text-left\">{user.phone_number}</td> */}\n        <td className=\"p-3 text-left\">\n          {user.user_info && user.user_info.sex === \"M\" ? \"Male\" : \"Female\"}\n        </td>\n        <td className=\"p-3 text-left text-blue-700 text-base font-medium\">\n          {user.default_access &&\n            user.default_access.system_user_role_id &&\n            user.default_access.system_user_role_id && (\n              <span\n                className={`px-2 py-1 font-semibold rounded text-blue-700 bg-blue-100 dark:bg-blue-700 dark:text-blue-100`}\n              >\n                {getRoleById(\n                  this.props.roleList,\n                  user.default_access.system_user_role_id\n                )?.role &&\n                  capitalizeFirstLetter(\n                    getRoleById(\n                      this.props.roleList,\n                      user.default_access.system_user_role_id\n                    )?.role\n                  )}\n              </span>\n            )}\n        </td>\n        {/* {userTypes === \"all\" && (\n          <td>\n            {user.is_active ? (\n              <span className={`px-2 py-1 font-semibold text-green-700`}>\n                Active\n              </span>\n            ) : (\n              <span className={`px-2 py-1 font-semibold text-red-700`}>\n                Blocked\n              </span>\n            )}\n          </td>\n        )} */}\n        <td className=\"px-3 text-center\">\n          <button\n            className=\"btn bg-gray-200 group-hover:bg-blue-700 group-hover:text-white focus:outline-none\"\n            title=\"Manage User Access\"\n            onClick={() => {\n              this.props.setManageUser(user);\n              this.setManageUserId(user.user_id);\n            }}\n          >\n            Manage\n          </button>\n        </td>\n      </tr>\n    ));\n  };\n\n  blockUser = async (user_id: string, actionType: boolean) => {\n    if (!user_id) {\n      this.props.PushPopupAlert({\n        title: \"User Access is required doesn't exist\",\n        theme: PopupAlertTheme.danger,\n      });\n    }\n\n    this.setLoadingRequest(true);\n\n    if (\n      !window.confirm(\n        `Are sure you want to ${actionType ? \"block\" : \"activate\"} this user?`\n      )\n    ) {\n      return this.setLoadingRequest(false);\n    }\n\n    try {\n      const res = await axios.patch(`${API.AUTH}/users/disactive/${user_id}`, {\n        is_active: !actionType,\n      });\n      if (res) {\n        console.log(\"====================================\");\n        console.log({ blockUserToSystem: res });\n        console.log(\"====================================\");\n        actionType\n          ? this.props.blockUserToSystem(user_id, this.props.currentPage)\n          : this.props.unBlockUserToSystem(user_id, this.props.currentPage);\n\n        this.props.PushPopupAlert({\n          title: `User has been ${actionType ? \"blocked\" : \"activated\"}!`,\n          theme: PopupAlertTheme.info,\n        });\n      }\n    } catch (error) {\n      console.error({ blockUser_ERROR: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n\n    this.setLoadingRequest(false);\n    user_id = \"\";\n  };\n\n  restUserAccess = async (user_id: string) => {\n    if (!user_id) {\n      this.props.PushPopupAlert({\n        title: \"User Access is required doesn't exist\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    if (!window.confirm(`Are sure you want to reset to default access?`)) {\n      return this.setLoadingRequest(false);\n    }\n\n    this.setLoadingRequest(true);\n    this.setLoadingRequestType(\"RESET\");\n\n    try {\n      const res = await axios.delete(`${API.AUTH}/custaccess/user/${user_id}`);\n      res && this.props.resetUserAccess(user_id, this.props.currentPage);\n      let resetedAccess: UserInterface | undefined = this.props.users.find(\n        (user) => user.user_id === user_id\n      );\n      if (resetedAccess) {\n        resetedAccess.default_access &&\n          this.setUserAccess(resetedAccess.default_access.access);\n        this.props.PushPopupAlert({\n          title: `Resetting User Access complete successfully`,\n          theme: PopupAlertTheme.info,\n        });\n        this.setCurrentAccess(null);\n      }\n    } catch (error) {\n      console.error({ reseting_user_access: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n\n    this.setLoadingRequest(false);\n    this.setLoadingRequestType(null);\n    user_id = \"\";\n  };\n\n  distinctDistrict = (\n    location: RoomLocationInterface[],\n    province_id?: string\n  ): DistrictInterface[] => {\n    let ids: string[] = [],\n      result: DistrictInterface[] = [];\n\n    if (province_id) {\n      result = location.find((item) => item._id === province_id)\n        ? location.find((item) => item._id === province_id)!.districts\n          ? location.find((item) => item._id === province_id)!.districts\n          : []\n        : [];\n    } else {\n      for (const key in location) {\n        if (Object.prototype.hasOwnProperty.call(location, key)) {\n          for (const keyDistrict in location[key].districts) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                location[key].districts,\n                keyDistrict\n              )\n            ) {\n              if (!ids.includes(location[key].districts[keyDistrict]._id)) {\n                ids.push(location[key].districts[keyDistrict]._id);\n                result.push(location[key].districts[keyDistrict]);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return result;\n  };\n\n  render() {\n    return (\n      <div>\n        {!this.props.manageUser && (\n          <div className=\"grid md:grid-cols-5 gap-2 mb-5\">\n            <div className={`md:col-span-5 rounded`}>\n              <div className=\"my-2 flex sm:flex-row flex-col justify-between\">\n                <div className=\"flex flex-col md:flex-row gap-1 items-center mx-1.5\">\n                  {/* <span className=\"text-lg\">All User</span>\n                  <MdChevronRight className=\"w-7 h-7\" />\n                  <span className=\"text-lg underline\">All User</span> */}\n                </div>\n              </div>\n              {this.props.users && (\n                <Table\n                  columns={[\n                    { columnTitle: \"#\", alignText: \"left\", padding: \"p-3\" },\n                    { columnTitle: \"Names\", alignText: \"left\", padding: \"p-3\" },\n                    { columnTitle: \"Email\", alignText: \"left\", padding: \"p-3\" },\n                    {\n                      columnTitle: \"Gender\",\n                      alignText: \"left\",\n                      padding: \"p-3\",\n                    },\n                    { columnTitle: \"Role\", alignText: \"left\", padding: \"p-3\" },\n                    // { columnTitle: \"Status\", alignText: \"left\", padding: \"p-3\" },\n                    { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n                  ]}\n                  rows={this.tableData}\n                  pagination={false}\n                  search={true}\n                  thColor=\"gray\"\n                  loading={\n                    this.props.loadingUser ||\n                    this.state.loading ||\n                    this.state.loadingSchool\n                  }\n                />\n              )}\n            </div>\n          </div>\n        )}\n\n        {/* -------------------------------------------------------- */}\n\n        {this.props.manageUser && (\n          <div className=\"bg-gray-100 h-100\">\n            {/* header */}\n            <div className=\"bg-white border-b border-t px-4 py-2 flex flex-col md:flex-row items-center gap-x-14\">\n              {this.props.users.find(\n                (user) => user.user_id === this.state.manageUserId\n              ) ? (\n                <div\n                  key={\n                    this.props.users.find(\n                      (user) => user.user_id === this.state.manageUserId\n                    )!.user_id + Math.random()\n                  }\n                  className=\"flex flex-col md:flex-row md:items-start items-center w-full gap-3\"\n                >\n                  <img\n                    src={\n                      this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.user_info.photo !== \"pic\"\n                        ? this.props.users.find(\n                            (user) => user.user_id === this.state.manageUserId\n                          )!.user_info.photo\n                        : profile\n                    }\n                    alt=\"\"\n                    className=\"rounded-full w-32 h-32\"\n                  />\n                  <div className=\"flex flex-col gap-1 items-start w-full\">\n                    <span className=\"text-2xl font-semibold\">\n                      {this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.user_info.fname +\n                        \" \" +\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.user_info.lname}\n                    </span>\n                    <div className=\"flex items-center\">\n                      <MdLock className=\"w-5 h-5\" />\n                      <span className=\"text-lg font-medium\">\n                        {this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.default_access &&\n                          getRoleById(\n                            this.props.roleList,\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.default_access!.system_user_role_id\n                          ).role}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-1\">\n                      <span className=\"text-gray-500\">Level:</span>\n                      <span className=\"text-base font-medium\">\n                        {this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.default_access &&\n                        getRoleById(\n                          this.props.roleList,\n                          this.props.users.find(\n                            (user) => user.user_id === this.state.manageUserId\n                          )!.default_access!.system_user_role_id\n                        ).district_required\n                          ? \"District\"\n                          : this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.default_access &&\n                            getRoleById(\n                              this.props.roleList,\n                              this.props.users.find(\n                                (user) =>\n                                  user.user_id === this.state.manageUserId\n                              )!.default_access!.system_user_role_id\n                            ).school_required\n                          ? \"School\"\n                          : this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.default_access &&\n                            getRoleById(\n                              this.props.roleList,\n                              this.props.users.find(\n                                (user) =>\n                                  user.user_id === this.state.manageUserId\n                              )!.default_access!.system_user_role_id\n                            ).room_required\n                          ? \"Room\"\n                          : this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.default_access &&\n                            getRoleById(\n                              this.props.roleList,\n                              this.props.users.find(\n                                (user) =>\n                                  user.user_id === this.state.manageUserId\n                              )!.default_access!.system_user_role_id\n                            ).education_institution_required\n                          ? \"Institute\"\n                          : \"-\"}\n                      </span>\n                    </div>\n                    {this.props.users.find(\n                      (user) => user.user_id === this.state.manageUserId\n                    )!.default_access &&\n                    getRoleById(\n                      this.props.roleList,\n                      this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.default_access!.system_user_role_id\n                    ).education_institution_required ? (\n                      <div className=\"flex items-center gap-1\">\n                        <span className=\"text-gray-500\">Institute:</span>\n                        <span className=\"text-base font-medium\">\n                          {this.props.users.find(\n                            (user) => user.user_id === this.state.manageUserId\n                          )!.default_access &&\n                          this.props.schoolLevels.education_categories &&\n                          getInstituteById(\n                            this.props.schoolLevels.education_categories,\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.default_access!.education_institution_id\n                          )\n                            ? getInstituteById(\n                                this.props.schoolLevels.education_categories,\n                                this.props.users.find(\n                                  (user) =>\n                                    user.user_id === this.state.manageUserId\n                                )!.default_access!.education_institution_id\n                              )!.education_category_title\n                            : \"Unknown Institute\"}\n                        </span>\n                      </div>\n                    ) : this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.default_access &&\n                      getRoleById(\n                        this.props.roleList,\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.default_access!.system_user_role_id\n                      ).district_required ? (\n                      <div className=\"flex items-center gap-1\">\n                        <span className=\"text-gray-500\">District:</span>\n                        <span className=\"text-base font-medium\">\n                          {this.props.users.find(\n                            (user) => user.user_id === this.state.manageUserId\n                          )!.default_access &&\n                            this.state.roomList &&\n                            distinctDistrict(this.state.roomList).find(\n                              (item) =>\n                                item.district_id ===\n                                this.props.users.find(\n                                  (user) =>\n                                    user.user_id === this.state.manageUserId\n                                )!.default_access!.district_id\n                            ) &&\n                            distinctDistrict(this.state.roomList).find(\n                              (item) =>\n                                item.district_id ===\n                                this.props.users.find(\n                                  (user) =>\n                                    user.user_id === this.state.manageUserId\n                                )!.default_access!.district_id\n                            )!.district_name}\n                        </span>\n                      </div>\n                    ) : this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.default_access &&\n                      getRoleById(\n                        this.props.roleList,\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.default_access!.system_user_role_id\n                      ).school_required ? (\n                      <div className=\"flex items-center gap-1\">\n                        <span className=\"text-gray-500\">School:</span>\n                        <span className=\"text-base font-medium\">\n                          {this.state.schoolList &&\n                          this.state.schoolList.find(\n                            (school) =>\n                              school._id ===\n                              this.props.users.find(\n                                (user) =>\n                                  user.user_id === this.state.manageUserId\n                              )!.default_access?.school_id\n                          )\n                            ? this.state.schoolList.find(\n                                (school) =>\n                                  school._id ===\n                                  this.props.users.find(\n                                    (user) =>\n                                      user.user_id === this.state.manageUserId\n                                  )!.default_access?.school_id\n                              )!.school_name\n                            : \"Unknown school\"}\n                        </span>\n                      </div>\n                    ) : (\n                      this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.default_access &&\n                      getRoleById(\n                        this.props.roleList,\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.default_access!.system_user_role_id\n                      ).room_required && (\n                        <div className=\"flex items-center gap-1\">\n                          {/* <span className=\"text-gray-500\">Room:</span> */}\n                          <MdLocationOn className=\"text-gray-500\" />\n                          {this.state.roomTable && (\n                            <span className=\"text-base font-medium\">\n                              {this.state.roomTable.find(\n                                (room) =>\n                                  room.room_id ===\n                                  this.props.users.find(\n                                    (user) =>\n                                      user.user_id === this.state.manageUserId\n                                  )!.default_access?.room_id\n                              )?.district_name +\n                                \" - \" +\n                                this.state.roomTable.find(\n                                  (room) =>\n                                    room.room_id ===\n                                    this.props.users.find(\n                                      (user) =>\n                                        user.user_id === this.state.manageUserId\n                                    )!.default_access?.room_id\n                                )?.center_name +\n                                \" - Room \" +\n                                this.state.roomTable.find(\n                                  (room) =>\n                                    room.room_id ===\n                                    this.props.users.find(\n                                      (user) =>\n                                        user.user_id === this.state.manageUserId\n                                    )!.default_access?.room_id\n                                )?.room_name}\n                            </span>\n                          )}\n                        </div>\n                      )\n                    )}\n                  </div>\n                </div>\n              ) : (\n                <NoResult\n                  theme={NoResultThemes.Dark}\n                  value={\"User info not found\"}\n                />\n              )}\n              {this.props.users.find(\n                (user) => user.user_id === this.state.manageUserId\n              ) && (\n                <div\n                  key={\n                    this.props.users.find(\n                      (user) => user.user_id === this.state.manageUserId\n                    )!.user_id + Math.random()\n                  }\n                  className=\"flex flex-col w-full\"\n                >\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-gray-500\">NID:</span>\n                    <span className=\"text-base font-medium\">\n                      {\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.n_id\n                      }\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-gray-500\">Email:</span>\n                    <span className=\"text-base font-medium\">\n                      {\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.email\n                      }\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-gray-500\">Phone:</span>\n                    <span className=\"text-base font-medium\">\n                      {\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.phone_number\n                      }\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-gray-500\">Status:</span>\n                    <span className=\"text-base font-medium\">\n                      {this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.is_active === false\n                        ? \"Blocked\"\n                        : \"Active\"}\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    {this.props.users.find(\n                      (user) => user.user_id === this.state.manageUserId\n                    )!.custome_access && (\n                      <button\n                        className={`px-2 py-1 font-semibold text-gray-50 inline-flex items-center rounded ${\n                          this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"RESET\"\n                            ? \"cursor-wait bg-gray-400\"\n                            : \"bg-gray-600\"\n                        }`}\n                        onClick={() =>\n                          this.restUserAccess(\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.user_id\n                          )\n                        }\n                        disabled={this.state.loadingRequest}\n                      >\n                        <MdLock className=\"w-4 h-4 fill-current\" />\n                        <span>\n                          {this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"RESET\"\n                            ? \"Reseting...\"\n                            : \"Reset Access\"}\n                        </span>\n                      </button>\n                    )}\n                    {!this.props.changeRole && (\n                      <button\n                        className=\"bg-yellow-300 hover:bg-yellow-400 px-2 py-1 font-semibold text-black inline-flex items-center rounded\"\n                        onClick={() => this.props.setChangeRole(true)}\n                      >\n                        <MdLock className=\"w-4 h-4 fill-current\" />\n                        <span>Change Role</span>\n                      </button>\n                    )}\n                    {this.props.users.find(\n                      (user) => user.user_id === this.state.manageUserId\n                    )!.is_active ? (\n                      <button\n                        className={`px-2 py-1 font-semibold text-gray-100 inline-flex items-center rounded ${\n                          this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"STATUS\"\n                            ? \"cursor-wait bg-red-500\"\n                            : \"bg-red-700\"\n                        }`}\n                        onClick={() =>\n                          !this.state.loadingRequest &&\n                          this.props.manageUser &&\n                          this.blockUser(\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.user_id,\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.is_active\n                          )\n                        }\n                        disabled={this.state.loadingRequest}\n                      >\n                        <MdLock className=\"w-4 h-4 fill-current\" />\n                        <span>\n                          {this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"RESET\"\n                            ? \"Loading...\"\n                            : \"Block user\"}\n                        </span>\n                      </button>\n                    ) : (\n                      <button\n                        className={`px-2 py-1 font-semibold text-gray-100 inline-flex items-center rounded ${\n                          this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"STATUS\"\n                            ? \"cursor-wait bg-yellow-500\"\n                            : \"bg-yellow-700\"\n                        }`}\n                        onClick={() =>\n                          !this.state.loadingRequest &&\n                          this.props.manageUser &&\n                          this.blockUser(\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.user_id,\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.is_active\n                          )\n                        }\n                        disabled={this.state.loadingRequest}\n                      >\n                        <MdLock className=\"w-4 h-4 fill-current\" />\n                        <span>\n                          {this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"RESET\"\n                            ? \"Loading...\"\n                            : \"Re-Activate\"}\n                        </span>\n                      </button>\n                    )}\n                  </div>\n                </div>\n              )}\n            </div>\n            {/* end header */}\n\n            {/* content */}\n            {this.props.manageUser &&\n            this.state.roomList &&\n            this.props.changeRole ? (\n              <UserRole\n                userInfo={this.props.manageUser}\n                roleList={this.props.roleList}\n                district={this.distinctDistrict(this.state.roomList)}\n                schoolList={this.state.schoolList}\n                roomList={this.state.roomList}\n                setChangeRole={this.props.setChangeRole}\n                currentPage={this.props.currentPage}\n              />\n            ) : (\n              <UserAccess\n                userInfo={getUserById(\n                  this.props.users,\n                  this.state.manageUserId\n                )}\n                manageUserId={this.state.manageUserId}\n                setUserAccess={this.setUserAccess}\n                userAccess={this.state.userAccess}\n                setCurrentAccess={this.setCurrentAccess}\n                currentAccess={this.state.currentAccess}\n                currentPage={this.props.currentPage}\n              />\n            )}\n            {/* end content */}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  schoolLevels,\n  schools,\n  locations,\n}: StoreState): {\n  schoolLevels: schoolLevelsStoreInterface;\n  schools: SchoolsInterface[];\n  allRoom: RoomLocationInterface[];\n} => {\n  return {\n    schoolLevels,\n    schools: schools.schools,\n    allRoom: locations.roomLocation,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    blockUserToSystem,\n    unBlockUserToSystem,\n    resetUserAccess,\n    getSchools,\n    getAllRoom,\n    PushPopupAlert,\n  })(UserList)\n);\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { capitalizeFirstLetter } from \"../../shared/dataTest\";\nimport { SystemUserRoleInterface } from \"../../shared/interfaces\";\nimport search from \"../../utils/search\";\n\n// const searchRole = (\n//   objList: SystemUserRoleInterface[],\n//   text: string\n// ): SystemUserRoleInterface[] => {\n//   return objList.filter(\n//     (product) => product.role.toLocaleLowerCase() === text.toLocaleLowerCase()\n//   );\n// };\n\ntype RoleListProps = {\n  setChooseRole: (value: boolean) => void;\n  roleList: SystemUserRoleInterface[];\n  handleSelectRole: (role_id: string, TYPE?: \"SELECT\" | \"DEFAULT\") => void;\n  loadindRequest: boolean;\n};\n\nconst RoleList: React.FC<RoleListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section className=\"border-2 rounded border-gray-400\">\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={props.roleList.length > 0 ? false : true}\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseRole(false);\n          }}\n        >\n          Close\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}\n\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {search(props.roleList, searchInput).length > 0 ? (\n          search(props.roleList, searchInput).map((role, index) => (\n            <section key={index + role.role}>\n              <div className=\"group flex items-center justify-between my-1 hover:bg-gray-100\">\n                <div\n                  className=\"p-1 w-full mr-2 cursor-pointer\"\n                  onClick={() => {\n                    props.setChooseRole(false);\n                    !props.loadindRequest &&\n                      props.handleSelectRole(role.system_user_role_id);\n                  }}\n                >\n                  <p className=\"text-sm font-medium text-black\">\n                    {capitalizeFirstLetter(role.role)}\n                  </p>\n                </div>\n                <button\n                  type=\"button\"\n                  className=\"bg-blue-200 group-hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                >\n                  Choose\n                </button>\n              </div>\n            </section>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No role available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default React.memo(RoleList);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { MdHighlightOff } from \"react-icons/md\";\nimport { TiInputChecked } from \"react-icons/ti\";\nimport { connect } from \"react-redux\";\nimport { schoolLevelsStoreInterface, PushPopupAlert } from \"../../actions\";\nimport { assignRoleToUserAccess } from \"../../actions/users\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport Loading from \"../../components/Loading/Loading\";\nimport Table from \"../../components/Table/Table\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport {\n  UserInterface,\n  SystemUserRoleInterface,\n  DistrictInterface,\n  SchoolsInterface,\n  RoomLocationInterface,\n  AssignRoleToUserActionInterface,\n  LocationRoomTableInterface,\n  RoleToUserInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport RoleList from \"./RoleList\";\nimport { LocationsInArray } from \"./UserList\";\n\ninterface AppProps {\n  currentPage: number;\n  userInfo: UserInterface;\n  roleList: SystemUserRoleInterface[];\n  district: DistrictInterface[];\n  assignRoleToUserAccess: Function;\n  schoolList: SchoolsInterface[] | null;\n  roomList: RoomLocationInterface[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  setChangeRole: (value: boolean) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface AppState {\n  loading: boolean;\n  loadingForm: boolean;\n  loadingRequest: boolean;\n  roleId: string;\n  provinceId: string;\n  districtId: string;\n  schoolId: string;\n  roomId: string;\n  instituteId: string;\n  centerId: string;\n  selectedRole: SystemUserRoleInterface | null;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  chooseRole: boolean;\n  chooseSchool: boolean;\n}\n\nclass UserRole extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingForm: true,\n      loadingRequest: false,\n      roleId: \"\",\n      provinceId: \"\",\n      districtId: \"\",\n      schoolId: \"\",\n      roomId: \"\",\n      instituteId: \"\",\n      centerId: \"\",\n      selectedRole: null,\n      formError: null,\n      chooseRole: false,\n      chooseSchool: false,\n    };\n  }\n\n  setRoleId = (value: string) => {\n    this.setState({ roleId: value });\n  };\n\n  setSelectedRole = (value: SystemUserRoleInterface | null) => {\n    this.setState({ selectedRole: value });\n  };\n\n  setProvinceId = (value: string) => {\n    this.setState({ provinceId: value });\n  };\n\n  setDistrictId = (value: string) => {\n    this.setState({ districtId: value });\n  };\n\n  setCenterId = (value: string) => {\n    this.setState({ centerId: value });\n  };\n\n  setRoomId = (value: string) => {\n    this.setState({ roomId: value });\n  };\n\n  setLoadingForm = (value: boolean) => {\n    this.setState({ loadingForm: value });\n  };\n\n  setSchoolId = (value: string) => {\n    this.setState({ schoolId: value });\n  };\n\n  setChooseSchool = (value: boolean) => {\n    this.setState({ chooseSchool: value });\n  };\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setInstituteId = (value: string) => {\n    this.setState({ instituteId: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n  setChooseRole = (value: boolean) => {\n    this.setState({ chooseRole: value });\n  };\n\n  setDefaultState = (\n    default_access: RoleToUserInterface,\n    role: SystemUserRoleInterface\n  ) => {\n    // SET DEFAULT PROVINCE && DISTRICT ID =======================\n    let LOAD_province: LocationRoomTableInterface | undefined;\n    let LOAD_district: DistrictInterface | undefined;\n    if (role.district_required && this.props.roomList) {\n      LOAD_district = this.distinctDistrict(this.props.roomList).find(\n        (item) => item._id === default_access!.district_id\n      );\n      LOAD_district && this.setProvinceId(LOAD_district.province_id);\n      LOAD_district && this.setDistrictId(default_access!.district_id);\n      this.setLoadingForm(false);\n    } else if (role.room_required && this.props.roomList) {\n      // SET DEFAULT PROVINCE && DISTRICT && ROOM ID =======================\n\n      LOAD_province = LocationsInArray(this.props.roomList).find(\n        (item) => item.room_id === default_access!.room_id\n      );\n      LOAD_province && this.setProvinceId(LOAD_province.province_id);\n      LOAD_province && this.setDistrictId(LOAD_province.district_id);\n      LOAD_province && this.setCenterId(LOAD_province.center_id);\n      this.setRoomId(default_access.room_id);\n      this.setLoadingForm(false);\n    } else if (\n      role.school_required &&\n      this.props.roomList &&\n      this.props.schoolList\n    ) {\n      // SET DEFAULT PROVINCE && DISTRICT && SCHOOL ID =======================\n      let LOAD_school: SchoolsInterface | undefined =\n        this.props.schoolList.find(\n          (item) => item._id === default_access!.school_id\n        );\n      if (LOAD_school) {\n        LOAD_province = LocationsInArray(this.props.roomList).find(\n          (item) => item.district_id === LOAD_school?.district_id\n        );\n        LOAD_province && this.setProvinceId(LOAD_province.province_id);\n        LOAD_province && this.setDistrictId(LOAD_province.district_id);\n        this.setSchoolId(default_access.school_id);\n        this.setLoadingForm(false);\n      } else {\n        this.setLoadingForm(false);\n      }\n    } else {\n      this.setLoadingForm(false);\n    }\n  };\n\n  componentDidMount = () => {\n    if (this.props.roleList.length) {\n      if (this.props.userInfo.default_access && this.state.loadingForm) {\n        // SET DEFAULT ROLE ID =======================\n        if (!this.state.roleId.length) {\n          let result = this.props.roleList.find(\n            (role) =>\n              role.system_user_role_id ===\n              this.props.userInfo.default_access!.system_user_role_id\n          );\n          if (result) {\n            this.setRoleId(\n              this.props.userInfo.default_access.system_user_role_id\n            );\n            this.setSelectedRole(result);\n            this.setDefaultState(this.props.userInfo.default_access, result);\n          }\n        }\n\n        console.log(\"====================================\");\n        console.log({ vvvvv: this.props.userInfo.default_access });\n        console.log(\"====================================\");\n      }\n\n      if (this.state.selectedRole && this.props.userInfo.default_access) {\n        this.setDefaultState(\n          this.props.userInfo.default_access,\n          this.state.selectedRole\n        );\n      }\n\n      this.setLoading(false);\n    }\n  };\n\n  handleSelectRole = (\n    role_id: string,\n    TYPE: \"SELECT\" | \"DEFAULT\" = \"SELECT\"\n  ) => {\n    if (this.props.roleList) {\n      let result = this.props.roleList.find(\n        (role) => role.system_user_role_id === role_id\n      );\n      if (result) {\n        this.setRoleId(role_id);\n        this.setSelectedRole(result);\n        this.state.formError &&\n          this.state.formError.element === \"role_id\" &&\n          this.setFormError(null);\n\n        if (TYPE === \"SELECT\") {\n          this.setProvinceId(\"\");\n          this.setDistrictId(\"\");\n          this.setSchoolId(\"\");\n          this.setCenterId(\"\");\n          this.setRoomId(\"\");\n          this.setInstituteId(\"\");\n        }\n      }\n    }\n  };\n\n  tableData = (): JSX.Element[] => {\n    if (\n      this.state.roleId.length > 0 &&\n      this.state.selectedRole === null &&\n      this.props.roleList\n    ) {\n      this.handleSelectRole(this.state.roleId, \"DEFAULT\");\n    }\n    if (this.state.selectedRole) {\n      return this.state.selectedRole.access.map((access, i) => (\n        <tr\n          key={i + access.id + Math.random()}\n          className={`text-left border-b border-gray-200 hover:bg-gray-100`}\n        >\n          <td className=\"px-2 py-1\">\n            <label className=\"inline-flex items-center\">\n              <span className=\"text-gray-900 capitalize text-xl font-normal cursor-pointer\">\n                {access.task}\n              </span>\n            </label>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.create ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.create ? (\n                <TiInputChecked />\n              ) : (\n                <MdHighlightOff />\n              )}\n              {access.permitted.create ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.view ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.view ? <TiInputChecked /> : <MdHighlightOff />}\n              {access.permitted.view ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.update ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.update ? (\n                <TiInputChecked />\n              ) : (\n                <MdHighlightOff />\n              )}\n              {access.permitted.update ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.delete ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.delete ? (\n                <TiInputChecked />\n              ) : (\n                <MdHighlightOff />\n              )}\n              {access.permitted.delete ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n        </tr>\n      ));\n    }\n    const optionB = [\n      <tr key=\"55re\">\n        <td colSpan={5} className=\"text-center px-2 py-2\">\n          No Default Access Available on this Role.\n        </td>\n      </tr>,\n    ];\n    return optionB;\n  };\n\n  assignRoleToUser = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!window.confirm(`Are sure you want to change user role?`)) {\n      return false;\n    }\n\n    if (!this.state.selectedRole) {\n      return this.setFormError({\n        element: \"role_id\",\n        msg: \"User role is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.room_required === true &&\n      isEmptyOrSpaces(this.state.provinceId)\n    ) {\n      return this.setFormError({\n        element: \"province_id\",\n        msg: \"Province is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.education_institution_required === true &&\n      isEmptyOrSpaces(this.state.instituteId)\n    ) {\n      return this.setFormError({\n        element: \"institute_id\",\n        msg: \"Institute is required on this role!\",\n      });\n    }\n\n    if (\n      (this.state.selectedRole.room_required === true ||\n        this.state.selectedRole.district_required === true) &&\n      isEmptyOrSpaces(this.state.districtId)\n    ) {\n      return this.setFormError({\n        element: \"district_id\",\n        msg: \"District is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.school_required === true &&\n      isEmptyOrSpaces(this.state.schoolId)\n    ) {\n      return this.setFormError({\n        element: \"school_id\",\n        msg: \"School is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.room_required === true &&\n      isEmptyOrSpaces(this.state.centerId)\n    ) {\n      return this.setFormError({\n        element: \"center_id\",\n        msg: \"Center is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.room_required === true &&\n      isEmptyOrSpaces(this.state.roomId)\n    ) {\n      return this.setFormError({\n        element: \"room_id\",\n        msg: \"Room is required!\",\n      });\n    }\n    this.setLoadingRequest(true);\n    let formData: AssignRoleToUserActionInterface = {\n      user_id: this.props.userInfo.user_id,\n      data: {\n        system_user_role_id: this.state.roleId,\n        status: 1,\n        role: this.state.selectedRole.role,\n        access: this.state.selectedRole.access,\n        school_id: this.state.selectedRole.school_required\n          ? this.state.schoolId\n          : \"\",\n        district_id: this.state.selectedRole.district_required\n          ? this.state.districtId\n          : \"\",\n        room_id: this.state.selectedRole.room_required ? this.state.roomId : \"\",\n        education_institution_id: this.state.selectedRole\n          .education_institution_required\n          ? this.state.instituteId\n          : \"\",\n      },\n    };\n\n    try {\n      const res = await axios.post(`${API.AUTH}/addroletouser`, {\n        user_id: this.props.userInfo.user_id,\n        system_user_role_id: this.state.roleId,\n        status: 1,\n        role: this.state.selectedRole.role,\n        access: true,\n        school_id:\n          this.state.selectedRole.school_required === true\n            ? this.state.schoolId\n            : \"\",\n        district_id:\n          this.state.selectedRole.district_required === true\n            ? this.state.districtId\n            : \"\",\n        room_id:\n          this.state.selectedRole.room_required === true\n            ? this.state.roomId\n            : \"\",\n        education_institution_id: this.state.selectedRole\n          .education_institution_required\n          ? this.state.instituteId\n          : \"\",\n      });\n      if (res) {\n        console.log(\"====================================\");\n        console.log({ assignRoleToUser: res });\n        console.log(\"====================================\");\n        this.props.assignRoleToUserAccess(formData, this.props.currentPage);\n        this.setLoadingRequest(false);\n        this.props.setChangeRole(false);\n        this.props.PushPopupAlert({\n          title: \"Assigning Role to User completed successfully\",\n          theme: PopupAlertTheme.success,\n        });\n      }\n    } catch (error) {\n      console.log({ role_error: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  distinctDistrict = (\n    location: RoomLocationInterface[],\n    province_id?: string\n  ): DistrictInterface[] => {\n    let ids: string[] = [],\n      result: DistrictInterface[] = [];\n\n    if (province_id) {\n      result = location.find((item) => item._id === province_id)\n        ? location.find((item) => item._id === province_id)!.districts\n          ? location.find((item) => item._id === province_id)!.districts\n          : []\n        : [];\n    } else {\n      for (const key in location) {\n        if (Object.prototype.hasOwnProperty.call(location, key)) {\n          for (const keyDistrict in location[key].districts) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                location[key].districts,\n                keyDistrict\n              )\n            ) {\n              if (!ids.includes(location[key].districts[keyDistrict]._id)) {\n                ids.push(location[key].districts[keyDistrict]._id);\n                result.push(location[key].districts[keyDistrict]);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return result;\n  };\n\n  distinctCenter = (\n    rooms: RoomLocationInterface[],\n    district_id: string\n  ): LocationRoomTableInterface[] => {\n    let ids: string[] = [],\n      result: LocationRoomTableInterface[] = [];\n\n    LocationsInArray(rooms).forEach((element) => {\n      if (\n        !ids.includes(element.center_id) &&\n        element.district_id === district_id\n      ) {\n        ids.push(element.center_id);\n        result.push(element);\n      }\n    });\n    return result;\n  };\n\n  distinctRoom = (\n    rooms: RoomLocationInterface[],\n    center_id: string\n  ): LocationRoomTableInterface[] => {\n    let ids: string[] = [],\n      result: LocationRoomTableInterface[] = [];\n\n    LocationsInArray(rooms).forEach((element) => {\n      if (!ids.includes(element.room_id) && element.center_id === center_id) {\n        ids.push(element.room_id);\n        result.push(element);\n      }\n    });\n    return result;\n  };\n\n  render() {\n    if (\n      this.state.loading === true ||\n      this.state.loadingForm ||\n      this.props.userInfo.default_access === null ||\n      this.state.roleId.length === 0 ||\n      this.state.selectedRole === null\n    ) {\n      return (\n        <div className=\"text-center py-7 font-bold text-3xl text-gray-400 animate-pulse\">\n          Loading...\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 py-2 md:py-4 px-2 md:px-0\">\n        {/* left panel */}\n        <div className=\"col-span-1 bg-white w-full overflow-x-auto border rounded\">\n          <div className=\"px-6 md:px-12 py-5 bg-white mx-auto rounded-2xl w-100\">\n            <h3 className=\"font-semibold text-2xl text-gray-800 mb-4\">\n              Change User Role\n            </h3>\n            {this.state.loadingForm ? (\n              <Loading />\n            ) : (\n              <form onSubmit={(e) => this.assignRoleToUser(e)}>\n                <div className=\"space-y-5\">\n                  <div className=\"space-y-2\">\n                    <label className=\"text-sm font-medium text-gray-700 tracking-wide\">\n                      User Role\n                    </label>\n\n                    {!this.state.chooseRole && (\n                      <div\n                        className={`w-full text-base bg-white text-grey-darker cursor-pointer border-2 px-4 py-3 rounded focus:outline-none focus:bg-gray-100 ${\n                          this.state.formError &&\n                          this.state.formError.element === \"role_id\"\n                            ? \"border-red-500\"\n                            : \"border-gray-400\"\n                        }`}\n                        onClick={() => {\n                          !this.state.loadingRequest &&\n                            this.setChooseRole(true);\n                          !this.state.loadingRequest && this.setFormError(null);\n                        }}\n                      >\n                        {this.state.selectedRole\n                          ? this.state.selectedRole.role\n                          : \"Select role\"}\n                      </div>\n                    )}\n\n                    {this.state.chooseRole && (\n                      <RoleList\n                        setChooseRole={this.setChooseRole}\n                        handleSelectRole={this.handleSelectRole}\n                        roleList={this.props.roleList}\n                        loadindRequest={this.state.loadingRequest}\n                      />\n                    )}\n\n                    {this.state.formError &&\n                      this.state.formError.element === \"role_id\" && (\n                        <span className=\"text-red-500\">\n                          {this.state.formError.msg}\n                        </span>\n                      )}\n                  </div>\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.education_institution_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Institute\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"institute_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setInstituteId(e.target.value);\n                            this.setProvinceId(\"\");\n                            this.setDistrictId(\"\");\n                            this.setSchoolId(\"\");\n                            this.setCenterId(\"\");\n                            this.setRoomId(\"\");\n                            this.state.formError &&\n                              this.state.formError.element === \"institute_id\" &&\n                              this.setFormError(null);\n                          }}\n                          disabled={this.state.loadingRequest}\n                          value={this.state.instituteId}\n                        >\n                          <option value=\"\">Select institute</option>\n                          {this.props.schoolLevels.education_categories &&\n                          this.props.schoolLevels.education_categories.length >\n                            0 ? (\n                            this.props.schoolLevels.education_categories.map(\n                              (institute) => (\n                                <option\n                                  value={institute.education_institute_id}\n                                  key={\n                                    institute.education_institute_id +\n                                    Math.random()\n                                  }\n                                >\n                                  {institute.education_category_title}\n                                </option>\n                              )\n                            )\n                          ) : (\n                            <option value=\"\" disabled>\n                              No institute available\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"institute_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.room_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Province\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"province_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setProvinceId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"province_id\" &&\n                              this.setFormError(null);\n                            this.setDistrictId(\"\");\n                            this.setSchoolId(\"\");\n                            this.setCenterId(\"\");\n                            this.setRoomId(\"\");\n                          }}\n                          value={this.state.provinceId}\n                          disabled={this.state.loadingRequest}\n                        >\n                          <option value=\"\">Select province</option>\n                          {this.props.roomList &&\n                            this.props.roomList.map((province) => (\n                              <option\n                                key={province._id + Math.random()}\n                                value={province._id}\n                              >\n                                {province.province_name}\n                              </option>\n                            ))}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"province_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n                  {this.state.selectedRole &&\n                    (this.state.selectedRole.district_required ||\n                      this.state.selectedRole.room_required) && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          District\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"district_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setDistrictId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"district_id\" &&\n                              this.setFormError(null);\n                            this.setSchoolId(\"\");\n                            this.setCenterId(\"\");\n                            this.setRoomId(\"\");\n                          }}\n                          value={this.state.districtId}\n                          disabled={this.state.loadingRequest}\n                        >\n                          <option value=\"\">Select district</option>\n                          {this.props.roomList &&\n                          this.distinctDistrict(\n                            this.props.roomList,\n                            !isEmptyOrSpaces(this.state.provinceId)\n                              ? this.state.provinceId\n                              : undefined\n                          ).length > 0 ? (\n                            this.distinctDistrict(\n                              this.props.roomList,\n                              !isEmptyOrSpaces(this.state.provinceId)\n                                ? this.state.provinceId\n                                : undefined\n                            ).map((district) => (\n                              <option\n                                key={district._id + Math.random()}\n                                value={district._id}\n                              >\n                                {district.district_name}\n                              </option>\n                            ))\n                          ) : (\n                            <option value=\"\" disabled>\n                              No district found\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"district_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.school_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          School\n                        </label>\n                        {/* {!this.state.chooseSchool && (\n                          <div\n                            className={`w-full text-base bg-white text-grey-darker cursor-pointer border-2 px-4 py-3 rounded focus:outline-none focus:bg-gray-100 ${\n                              this.state.formError &&\n                              this.state.formError.element === \"school_id\"\n                                ? \"border-red-500\"\n                                : \"border-gray-400\"\n                            }`}\n                            onClick={() => {\n                              !this.state.loadingRequest &&\n                                this.setChooseSchool(true);\n                              !this.state.loadingRequest &&\n                                this.setFormError(null);\n                            }}\n                          >\n                            {this.state.schoolId\n                              ? this.state.schoolId\n                              : \"Select school\"}\n                          </div>\n                        )}\n\n                        {this.state.chooseSchool && (\n                          <ChooseSchoolById\n                            allSchool={this.props.schoolList}\n                            setSelectSchool={(school_id: string) => {\n                              this.setSchoolId(school_id);\n                              this.state.formError &&\n                                this.state.formError.element === \"school_id\" &&\n                                this.setFormError(null);\n                              this.setCenterId(\"\");\n                              this.setRoomId(\"\");\n                            }}\n                            currentSelected={this.state.schoolId}\n                            setChooseSchool={this.setChooseSchool}\n                          />\n                        )} */}\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"school_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setSchoolId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"school_id\" &&\n                              this.setFormError(null);\n                            this.setCenterId(\"\");\n                            this.setRoomId(\"\");\n                          }}\n                          disabled={this.state.loadingRequest}\n                          value={this.state.schoolId}\n                        >\n                          <option value=\"\">Selected school</option>\n                          {this.props.schoolList &&\n                            this.props.schoolList.map((school) => (\n                              <option\n                                value={school._id}\n                                key={school._id + Math.random()}\n                              >\n                                {school.school_name}\n                              </option>\n                            ))}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"school_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.room_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Center\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"center_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setCenterId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"center_id\" &&\n                              this.setFormError(null);\n                            this.setRoomId(\"\");\n                          }}\n                          disabled={this.state.loadingRequest}\n                          value={this.state.centerId}\n                        >\n                          <option value=\"\">Select center</option>\n                          {this.state.districtId &&\n                          this.state.districtId.length > 0 &&\n                          this.props.roomList &&\n                          this.distinctCenter(\n                            this.props.roomList,\n                            this.state.districtId\n                          ).length > 0 ? (\n                            this.distinctCenter(\n                              this.props.roomList,\n                              this.state.districtId\n                            ).map((center, index) => (\n                              <option\n                                value={center.center_id}\n                                key={center.center_id + index + Math.random()}\n                              >\n                                {center.center_name}\n                              </option>\n                            ))\n                          ) : (\n                            <option value=\"\" disabled>\n                              No center found\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"center_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.room_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Room\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"room_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setRoomId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"room_id\" &&\n                              this.setFormError(null);\n                          }}\n                          disabled={this.state.loadingRequest}\n                          value={this.state.roomId}\n                        >\n                          <option value=\"\">Select room</option>\n                          {!isEmptyOrSpaces(this.state.centerId) &&\n                          this.props.roomList &&\n                          this.distinctRoom(\n                            this.props.roomList,\n                            this.state.centerId\n                          ).length > 0 ? (\n                            this.distinctRoom(\n                              this.props.roomList,\n                              this.state.centerId\n                            ).map((room, index) => (\n                              <option\n                                value={room.room_id}\n                                key={room.room_id + index + Math.random()}\n                                className={`${\n                                  room.room_name === \"0\" ? \"hidden\" : \"block\"\n                                }`}\n                              >\n                                {room.room_name}\n                              </option>\n                            ))\n                          ) : (\n                            <option value=\"\" disabled>\n                              No room found\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"room_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  <div className=\"flex justify-between 2xl:justify-start gap-2\">\n                    <button\n                      className=\"btn bg-gray-500 text-gray-50 focus:outline-none\"\n                      onClick={() => {\n                        this.props.setChangeRole(false);\n                        this.setFormError(null);\n                        this.setProvinceId(\"\");\n                        this.setDistrictId(\"\");\n                        this.setSchoolId(\"\");\n                        this.setCenterId(\"\");\n                        this.setRoomId(\"\");\n                      }}\n                      disabled={this.state.loadingRequest}\n                    >\n                      Back\n                    </button>\n                    <button\n                      className=\"btn btn-blue focus:outline-none\"\n                      // onClick={() => assignRoleToUser()}\n                      disabled={this.state.loadingRequest}\n                    >\n                      {this.state.loadingRequest ? \"Loading...\" : \"Save Change\"}\n                    </button>\n                  </div>\n                </div>\n              </form>\n            )}\n          </div>\n        </div>\n        {/* end left panel */}\n\n        {/* ------------------------------------------------------------ */}\n\n        {/* right panel */}\n        <div className=\"cols-span-1 md:col-span-2 bg-white w-full border rounded text-center p-2 hidden md:block\">\n          <div className=\"my-4\">\n            <span className=\"text-gray-600 font-semibold text-2xl\">\n              {this.state.selectedRole?.role}'s Default Access\n            </span>\n          </div>\n          {!this.state.loading && (\n            <div className=\"overflow-x-auto w-full\">\n              <Table\n                columns={[\n                  {\n                    columnTitle: \"Access Name\",\n                    alignText: \"left\",\n                    padding: \"p-3\",\n                  },\n                  { columnTitle: \"Create\", alignText: \"left\" },\n                  { columnTitle: \"View\", alignText: \"left\" },\n                  { columnTitle: \"Update\", alignText: \"left\" },\n                  { columnTitle: \"Delete\", alignText: \"left\" },\n                ]}\n                rows={this.tableData}\n                pagination={false}\n                search={false}\n                searchBG=\"bg-gray-50\"\n                thColor=\"gray\"\n                tableId=\"defaultAccess\"\n              />\n            </div>\n          )}\n        </div>\n        {/* end right panel */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  schoolLevels,\n}: StoreState): {\n  schoolLevels: schoolLevelsStoreInterface;\n} => {\n  return { schoolLevels };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    assignRoleToUserAccess,\n    PushPopupAlert,\n  })(UserRole)\n);\n","export default __webpack_public_path__ + \"static/media/blank_profile.c3f94521.png\";","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { BiRightArrowAlt } from \"react-icons/bi\";\nimport {\n  MdDelete,\n  MdEdit,\n  MdHighlightOff,\n  MdRemoveRedEye,\n  MdSettings,\n} from \"react-icons/md\";\nimport { SiAddthis } from \"react-icons/si\";\nimport { TiInputChecked } from \"react-icons/ti\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { customizeUserAccess } from \"../../actions/users\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport Table from \"../../components/Table/Table\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport {\n  UserInterface,\n  AccessTaskInterface,\n  CustomeAccessInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\n\ninterface AppProps {\n  userInfo: UserInterface | undefined;\n  manageUserId: string;\n  setUserAccess: (value: AccessTaskInterface[] | null) => void;\n  userAccess: AccessTaskInterface[] | null;\n  setCurrentAccess: (value: AccessTaskInterface | null) => void;\n  currentAccess: AccessTaskInterface | null;\n  currentPage: number;\n\n  // REDUX ==============\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  customizeUserAccess: Function;\n}\n\ninterface AppStates {\n  loading: boolean;\n  loadindRequest: boolean;\n  // currentAccess:AccessTaskInterface | null;\n  // userAccess:AccessTaskInterface[] | null;\n  createPermission: boolean;\n  viewPermission: boolean;\n  updatePermission: boolean;\n  deletePermission: boolean;\n}\n\nclass _UserAccess extends Component<AppProps, AppStates> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadindRequest: false,\n      // currentAccess:null,\n      // userAccess:null,\n      createPermission: false,\n      viewPermission: false,\n      updatePermission: false,\n      deletePermission: false,\n    };\n  }\n\n  setViewPermission = (value: boolean) => {\n    this.setState({ viewPermission: value });\n  };\n\n  setLoadindRequest = (value: boolean) => {\n    this.setState({ loadindRequest: value });\n  };\n\n  setCreatePermission = (value: boolean) => {\n    this.setState({ createPermission: value });\n  };\n\n  setUpdatePermission = (value: boolean) => {\n    this.setState({ updatePermission: value });\n  };\n\n  setDeletePermission = (value: boolean) => {\n    this.setState({ deletePermission: value });\n  };\n\n  setLoadind = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  overrideUserAccess = (\n    default_access: AccessTaskInterface[],\n    custome_access: AccessTaskInterface[]\n  ) => {\n    if (default_access && custome_access && custome_access.length > 0) {\n      let overideAccess: AccessTaskInterface[] = [];\n      for (const key in default_access) {\n        if (Object.prototype.hasOwnProperty.call(default_access, key)) {\n          const findCustom = custome_access.find(\n            (custom) => custom.id === default_access[key].id\n          );\n          if (findCustom) {\n            overideAccess.push(findCustom);\n          } else {\n            overideAccess.push(default_access[key]);\n          }\n        }\n      }\n      this.props.setUserAccess(overideAccess);\n    }\n  };\n\n  componentDidMount = () => {\n    if (this.props.userInfo && this.props.userInfo.custome_access) {\n      this.props.userInfo.default_access &&\n        this.overrideUserAccess(\n          this.props.userInfo.default_access.access,\n          this.props.userInfo.custome_access.access\n        );\n      this.setLoadind(false);\n    } else {\n      this.props.userInfo &&\n        this.props.userInfo.default_access &&\n        this.props.setUserAccess(this.props.userInfo.default_access.access);\n      this.setLoadind(false);\n    }\n  };\n\n  tableData = (): JSX.Element[] => {\n    if (!this.props.userAccess)\n      return [\n        <tr key={Math.random()}>\n          <td>No data</td>\n        </tr>,\n      ];\n    return this.props.userAccess.map((access: AccessTaskInterface, i) => (\n      <tr\n        key={i + access.id + Math.random()}\n        className={`text-left border-b border-gray-200 cursor-pointer hover:bg-gray-100 ${\n          this.props.currentAccess &&\n          this.props.currentAccess.id === access.id &&\n          \"bg-gray-200 border my-3 hover:bg-gray-100\"\n        }`}\n        onClick={() =>\n          this.props.currentAccess && this.props.currentAccess.id === access.id\n            ? (this.props.setCurrentAccess(null),\n              this.setCreatePermission(false),\n              this.setViewPermission(false),\n              this.setUpdatePermission(false),\n              this.setDeletePermission(false))\n            : (this.props.setCurrentAccess(access),\n              this.setCreatePermission(access.permitted.create),\n              this.setViewPermission(access.permitted.view),\n              this.setUpdatePermission(access.permitted.update),\n              this.setDeletePermission(access.permitted.delete))\n        }\n      >\n        <td className=\"px-2 py-1\">\n          <label className=\"inline-flex items-center\">\n            {/* <input\n              type=\"radio\"\n              name=\"taskAccess\"\n              value={access.id}\n              className=\"form-radio h-4 w-4 text-gray-600\"\n              onChange={() => {\n                currentAccess\n                  ? this.setState({ currentAccess: null })\n                  : this.setState({ currentAccess: access });\n              }}\n              checked={currentAccess ? true : false}\n            /> */}\n            <span className=\"text-gray-900 capitalize text-xl font-normal cursor-pointer\">\n              {access.task}\n            </span>\n          </label>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.create ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.create ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.create ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.view ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.view ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.view ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.update ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.update ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.update ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.delete ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.delete ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.delete ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n      </tr>\n    ));\n  };\n\n  handleCustomization = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (this.props.userInfo) {\n      this.setLoadindRequest(true);\n      let task: [] | CustomeAccessInterface | null = null;\n      task = this.props.userInfo.custome_access;\n      let index = -1;\n\n      try {\n        if (task && this.props.currentAccess) {\n          index = task.access.findIndex(\n            (access) => access.id === this.props.currentAccess!.id\n          );\n          if (index >= 0) {\n            task.access[index].permitted.create = this.state.createPermission;\n            task.access[index].permitted.view = this.state.viewPermission;\n            task.access[index].permitted.update = this.state.updatePermission;\n            task.access[index].permitted.delete = this.state.deletePermission;\n          } else {\n            task.access.push({\n              id: this.props.currentAccess.id,\n              task: this.props.currentAccess.task,\n              key: this.props.currentAccess.key,\n              permitted: {\n                create: this.state.createPermission,\n                view: this.state.viewPermission,\n                update: this.state.updatePermission,\n                delete: this.state.deletePermission,\n              },\n            });\n          }\n        } else if (this.props.currentAccess) {\n          task = {\n            access: [\n              {\n                id: this.props.currentAccess.id,\n                task: this.props.currentAccess.task,\n                key: this.props.currentAccess.key,\n                permitted: {\n                  create: this.state.createPermission,\n                  view: this.state.viewPermission,\n                  update: this.state.updatePermission,\n                  delete: this.state.deletePermission,\n                },\n              },\n            ],\n            user_id: this.props.userInfo.user_id,\n            custome_user_access_id: \"\",\n          };\n        }\n\n        if (task) {\n          let res;\n          if (this.props.userInfo.custome_access !== null) {\n            res = await axios.patch<{ data: CustomeAccessInterface }>(\n              `${API.AUTH}/custaccess`,\n              {\n                access: task.access,\n                user_id: this.props.userInfo.user_id,\n              }\n            );\n          } else {\n            res = await axios.post<{ data: CustomeAccessInterface }>(\n              `${API.AUTH}/custaccess`,\n              {\n                access: task.access,\n                user_id: this.props.userInfo.user_id,\n              }\n            );\n          }\n\n          if (res) {\n            task.custome_user_access_id = res.data.data.custome_user_access_id;\n\n            this.props.customizeUserAccess(task, this.props.currentPage);\n            task &&\n              this.props.userInfo.default_access &&\n              this.overrideUserAccess(\n                this.props.userInfo.default_access.access,\n                task.access\n              );\n            this.props.PushPopupAlert({\n              title: `Resetting User Access complete successfully`,\n              theme: PopupAlertTheme.info,\n            });\n\n            task = null;\n            this.props.setCurrentAccess(null);\n            this.setCreatePermission(false);\n            this.setViewPermission(false);\n            this.setUpdatePermission(false);\n            this.setDeletePermission(false);\n          }\n        }\n      } catch (error) {\n        console.error({ customize_access: error });\n        this.props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      this.setLoadindRequest(false);\n    }\n  };\n\n  render() {\n    if (this.props.userInfo === undefined) {\n      return <Redirect to=\"/users\" />;\n    }\n\n    if (this.state.loading || this.props.userInfo === null) {\n      return (\n        <div className=\"text-center py-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading User Access...\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4 mx-1 my-2\">\n          <div\n            className={`col-span-1 md:col-span-3 bg-white w-full overflow-x-auto border rounded text-center p-2 ${\n              this.props.currentAccess ? \"hidden md:block\" : \"\"\n            }`}\n          >\n            <span className=\"text-gray-600 mt-2 font-semibold text-2xl\">\n              Settings\n            </span>\n            {!this.state.loading && (\n              <div className=\"overflow-x-auto w-full\">\n                <Table\n                  columns={[\n                    {\n                      columnTitle: \"Access Name\",\n                      alignText: \"left\",\n                      padding: \"p-3\",\n                    },\n                    { columnTitle: \"Create\", alignText: \"left\" },\n                    { columnTitle: \"View\", alignText: \"left\" },\n                    { columnTitle: \"Update\", alignText: \"left\" },\n                    { columnTitle: \"Delete\", alignText: \"left\" },\n                  ]}\n                  rows={this.tableData}\n                  pagination={false}\n                  search={true}\n                  searchBG=\"bg-gray-50\"\n                  thColor=\"gray\"\n                />\n              </div>\n            )}\n          </div>\n          <div className={`col-span-1 md:col-span-2`}>\n            {!this.props.currentAccess ? (\n              <div className=\"w-full hidden md:flex flex-col items-center text-gray-600 gap-1 py-3\">\n                <MdSettings className=\"w-20 h-20\" />\n                <span className=\"text-8 md:text-12\">\n                  Choose Access to Customize\n                </span>\n              </div>\n            ) : (\n              <div className={``}>\n                <h1 className=\"text-2xl md:text-3xl font-semibold text-center my-2 text-gray-900\">\n                  Customize User Access\n                </h1>\n                <div className=\"flex justify-center mb-3\">\n                  <h2 className=\"text-2xl font-semibold text-center text-gray-600 flex flex-row items-center\">\n                    <BiRightArrowAlt className=\"w-7 h-7\" />\n                    {this.props.currentAccess.task}\n                  </h2>\n                </div>\n\n                <div className=\"flex flex-col px-2 md:px-1\">\n                  <form\n                    className=\"flex flex-col items-center\"\n                    onSubmit={(e) => this.handleCustomization(e)}\n                  >\n                    <div className=\"inline-flex gap-2 items-center\">\n                      <SiAddthis className=\"w-7 h-7 text-gray-600\" />\n                      <div className=\"flex flex-col\">\n                        <h3 className=\"font-semibold text-xl\">Create</h3>\n                        <span className=\"text-gray-600 text-sm md:pr-1\">\n                          This permission gives the user the ability to create\n                        </span>\n                      </div>\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-checkbox h-7 w-7 text-teal-600\"\n                        onChange={() =>\n                          this.setCreatePermission(!this.state.createPermission)\n                        }\n                        checked={this.state.createPermission}\n                        disabled={this.state.loadindRequest}\n                      />\n                    </div>\n                    <div className=\"inline-flex gap-2 items-center\">\n                      <MdRemoveRedEye className=\"w-7 h-7 text-gray-600\" />\n                      <div className=\"flex flex-col\">\n                        <h3 className=\"font-semibold text-xl\">View</h3>\n                        <span className=\"text-gray-600 text-sm md:pr-4\">\n                          This permission gives the user the ability to view\n                        </span>\n                      </div>\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-checkbox h-7 w-7 text-teal-600\"\n                        onChange={() =>\n                          this.setViewPermission(!this.state.viewPermission)\n                        }\n                        checked={this.state.viewPermission}\n                        disabled={this.state.loadindRequest}\n                      />\n                    </div>\n                    <div className=\"inline-flex gap-2 items-center\">\n                      <MdEdit className=\"w-7 h-7 text-gray-600\" />\n                      <div className=\"flex flex-col\">\n                        <h3 className=\"font-semibold text-xl\">Update</h3>\n                        <span className=\"text-gray-600 text-sm\">\n                          This permission gives the user the ability to update\n                        </span>\n                      </div>\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-checkbox h-7 w-7 text-teal-600\"\n                        onChange={() =>\n                          this.setUpdatePermission(!this.state.updatePermission)\n                        }\n                        checked={this.state.updatePermission}\n                        disabled={this.state.loadindRequest}\n                      />\n                    </div>\n                    <div className=\"inline-flex gap-2 items-center\">\n                      <MdDelete className=\"w-7 h-7 text-gray-600\" />\n                      <div className=\"flex flex-col\">\n                        <h3 className=\"font-semibold text-xl\">Delete</h3>\n                        <span className=\"text-gray-600 text-sm md:pr-1\">\n                          This permission gives the user the ability to delete\n                        </span>\n                      </div>\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-checkbox h-7 w-7 text-teal-600\"\n                        onChange={() =>\n                          this.setDeletePermission(!this.state.deletePermission)\n                        }\n                        checked={this.state.deletePermission}\n                        disabled={this.state.loadindRequest}\n                      />\n                    </div>\n\n                    <div className=\"flex items-center justify-center w-full py-3 gap-2\">\n                      {/* <button className=\"btn btn-secondary bg-red-600\">Back</button> */}\n                      <button\n                        className=\"btn bg-gray-500 hover:bg-gray-700 focus:outline-none text-white\"\n                        disabled={this.state.loadindRequest}\n                        onClick={() => {\n                          this.props.setCurrentAccess(null);\n                          this.setCreatePermission(false);\n                          this.setViewPermission(false);\n                          this.setUpdatePermission(false);\n                          this.setDeletePermission(false);\n                        }}\n                      >\n                        Cancel\n                      </button>\n                      <button\n                        className=\"btn btn-blue\"\n                        disabled={this.state.loadindRequest}\n                      >\n                        {!this.state.loadindRequest\n                          ? \"Save Change\"\n                          : \"Processing..\"}\n                      </button>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const UserAccess = React.memo(\n  connect(null, {\n    customizeUserAccess,\n    PushPopupAlert,\n  })(_UserAccess)\n);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  FC_CreateDistrict,\n  FC_DeleteDistrict,\n  FC_UpdateDistrict,\n} from \"../../actions/location\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport {\n  DistrictInterface,\n  RoomLocationInterface,\n} from \"../../shared/interfaces\";\nimport { PushPopupAlert } from \"../../actions/system\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { errorToText } from \"../../utils/errors\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\n\ninterface AppProps {\n  thisProvince: RoomLocationInterface;\n  thisDistrict: DistrictInterface | null;\n  loadingRequest: boolean;\n  actionTypes:\n    | \"CREATE_PROVINCE\"\n    | \"UPDATE_PROVINCE\"\n    | \"CREATE_DISTRICT\"\n    | \"UPDATE_DISTRICT\"\n    | \"CREATE_SECTOR\"\n    | \"UPDATE_SECTOR\"\n    | null;\n  setLoadingRequest: React.Dispatch<React.SetStateAction<boolean>>;\n  setThisDistrict: React.Dispatch<\n    React.SetStateAction<DistrictInterface | null>\n  >;\n  setActionTypes: React.Dispatch<\n    React.SetStateAction<\n      | \"CREATE_PROVINCE\"\n      | \"UPDATE_PROVINCE\"\n      | \"CREATE_DISTRICT\"\n      | \"UPDATE_DISTRICT\"\n      | \"CREATE_SECTOR\"\n      | \"UPDATE_SECTOR\"\n      | null\n    >\n  >;\n  FC_CreateDistrict: Function;\n  FC_UpdateDistrict: Function;\n  FC_DeleteDistrict: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\nconst ViewDistrict: React.FC<AppProps> = (props) => {\n  const [districtName, setDistrictName] = useState<string>(\"\");\n  const [districtCode, setDistrictCode] = useState<number>(0);\n  const [error, setError] = useState<{ element: string; msg: string } | null>(\n    null\n  );\n\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(districtName)) {\n      return setError({\n        element: \"district_name\",\n        msg: \"District name is required\",\n      });\n    }\n\n    if (districtCode <= 0) {\n      return setError({\n        element: \"district_code\",\n        msg: \"Invalid district code, code must be greater than 0\",\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      let res;\n      if (props.actionTypes === \"CREATE_DISTRICT\") {\n        res = await axios.post<{ data: DistrictInterface }>(\n          `${API.APPLICATION}/district`,\n          {\n            province_id: props.thisProvince._id,\n            province_code: props.thisProvince.province_code,\n            district_name: districtName,\n            district_code: districtCode,\n            centers: [],\n          }\n        );\n        if (res.data) {\n          console.log({\n            province_id: props.thisProvince._id,\n            data: res.data.data,\n            res,\n          });\n          props.FC_CreateDistrict({\n            province_id: props.thisProvince._id,\n            data: {\n              centers: res.data.data.centers,\n              sectors: res.data.data.sectors,\n              province_code: res.data.data.province_code,\n              province_id: res.data.data.province_id,\n              district_code: res.data.data.district_code,\n              district_name: res.data.data.district_name,\n              district_id: res.data.data._id,\n            },\n          });\n          props.PushPopupAlert({\n            title: \"New district created successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setDistrictName(\"\");\n          setDistrictCode(0);\n        }\n      } else if (\n        props.thisDistrict &&\n        props.actionTypes === \"UPDATE_DISTRICT\"\n      ) {\n        const centers: string[] = props.thisDistrict.centers.map(\n          (center) => center._id\n        );\n        res = await axios.patch<{ data: DistrictInterface }>(\n          `${API.APPLICATION}/district`,\n          {\n            district_id: props.thisDistrict._id,\n            province_code: props.thisProvince.province_code,\n            district_name: districtName,\n            district_code: districtCode,\n            centers,\n          }\n        );\n        if (res.data) {\n          props.FC_UpdateDistrict({\n            province_id: props.thisProvince._id,\n            district_id: props.thisDistrict._id,\n            district_name: districtName,\n          });\n          props.PushPopupAlert({\n            title: \"District updated successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setDistrictName(\"\");\n          props.setThisDistrict(null);\n        }\n      }\n    } catch (error) {\n      console.log({ doc_category_error: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      props.setLoadingRequest(false);\n    }\n  };\n\n  // const handleDelete = async (districtId: string) => {\n  //   try {\n  //     const res = await axios.delete<DistrictInterface>(\n  //       `${API.APPLICATION}/district/${districtId}`\n  //     );\n\n  //     if (res.data) {\n  //       props.FC_DeleteDistrict({\n  //         province_id: props.thisProvince._id,\n  //         district_id: districtId,\n  //       });\n  //       props.PushPopupAlert({\n  //         title: \"District deleted successfully\",\n  //         theme: PopupAlertTheme.success,\n  //       });\n  //       props.setLoadingRequest(false);\n  //       props.setActionTypes(null);\n  //     }\n  //   } catch (error) {\n  //     console.log({ district_error: error });\n  //     props.PushPopupAlert({\n  //       title: errorToText(error),\n  //       theme: PopupAlertTheme.danger,\n  //     });\n  //     props.setLoadingRequest(false);\n  //   }\n  // };\n\n  return (\n    <div className={`w-full p-2`}>\n      {props.thisProvince.districts.length > 0 ? (\n        <div className=\"rounded border border-gray-100 shadow-sm animate__animated animate__fadeIn\">\n          <table className=\"w-full z-0\">\n            <thead className=\"bg-gray-50\">\n              <tr className=\"text-left\">\n                <th className=\"px-3 py-3\">#</th>\n                <th>District name</th>\n                <th>District code</th>\n                <th>Sectors</th>\n                {/* <th>Status</th> */}\n              </tr>\n            </thead>\n            <tbody className=\"text-base\">\n              {props.thisProvince.districts.map((district, index) => (\n                <tr\n                  key={index + district._id}\n                  className={`text-left border-b border-gray-50`}\n                >\n                  <td className=\"px-3 py-1\">{index + 1}</td>\n                  <td>{district.district_name}</td>\n                  <td>{district.district_code}</td>\n                  <td>\n                    {district.sectors && district.sectors.length > 0\n                      ? district.sectors.length + \" Sector(s)\"\n                      : \"\"}\n                  </td>\n                  {/* <td>\n                    <div className=\"flex items-center gap-2\">\n                      <button\n                        title={\n                          props.thisDistrict &&\n                          props.thisDistrict._id === district._id\n                            ? \"Close Centers\"\n                            : \"View Centers\"\n                        }\n                        className={`${\n                          props.thisDistrict &&\n                          props.thisDistrict._id === district._id\n                            ? \"bg-gray-500 hover:bg-gray-600\"\n                            : \"bg-gray-400 hover:bg-gray-500\"\n                        } p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none`}\n                        onClick={() =>\n                          !props.thisDistrict ||\n                          props.thisDistrict._id !== district._id\n                            ? props.setThisDistrict(district)\n                            : props.setThisDistrict(null)\n                        }\n                      >\n                        {props.thisDistrict &&\n                        props.thisDistrict._id === district._id ? (\n                          <IoMdEyeOff className=\"text-white w-4 h-4\" />\n                        ) : (\n                          <IoMdEye className=\"text-white w-4 h-4\" />\n                        )}\n                      </button>\n                      <button\n                        title=\"Update district\"\n                        className=\"bg-blue-500 hover:bg-blue-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                        onClick={() => {\n                          props.setThisDistrict(district);\n                          setDistrictName(district.district_name);\n                          setDistrictCode(district.district_code);\n                          props.setActionTypes(\"UPDATE_DISTRICT\");\n                        }}\n                        disabled={\n                          props.loadingRequest || props.actionTypes !== null\n                        }\n                      >\n                        <MdCreate className=\"text-white w-4 h-4\" />\n                      </button>\n                      <button\n                        title=\"Delete Sub-Category\"\n                        className=\"bg-red-500 hover:bg-red-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                        onClick={() => handleDelete(district._id)}\n                        disabled={props.loadingRequest}\n                      >\n                        <MdClear className=\"text-white w-4 h-4\" />\n                      </button>\n                    </div>\n                  </td> */}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        <NoResult\n          theme={NoResultThemes.Dark}\n          value={\"No district found!\"}\n          component={\n            <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n              <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                <li\n                  onClick={() => props.setActionTypes(\"CREATE_DISTRICT\")}\n                  className=\"underline text-gray-500 cursor-pointer\"\n                >\n                  Add district\n                </li>\n              </ul>\n            </div>\n          }\n        />\n      )}\n\n      {/* modal for creating new categories or sub category */}\n      {props.actionTypes &&\n        (props.actionTypes === \"CREATE_DISTRICT\" ||\n          props.actionTypes === \"UPDATE_DISTRICT\") && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={(): void => {\n              props.setActionTypes(null);\n              setDistrictName(\"\");\n              setDistrictCode(10);\n              setError(null);\n            }}\n            displayClose={false}\n            backDropClose={false}\n            title={\n              <div className=\"flex items-center space-x-5\">\n                <div className=\"block pl-2 font-semibold text-xl self-start text-gray-700\">\n                  {/* <p className=\"text-base text-gray-500 font-medium\">\n                    You are{\" \"}\n                    {actionType === \"CREATE_SUB\" || \"CREATE_CAT\"\n                      ? \"creating\"\n                      : \"updating\"}\n                  </p> */}\n                  <h2 className=\"uppercase text-back\">\n                    {props.actionTypes === \"CREATE_DISTRICT\"\n                      ? \"CREATING NEW DISTRICT\"\n                      : props.actionTypes === \"UPDATE_DISTRICT\" &&\n                        \"UPDATING EXISTING DISTRICT\"}\n                  </h2>\n                </div>\n              </div>\n            }\n            widthSizeClass={ModalSize.medium}\n            padding={{ title: true, body: false, footer: false }}\n          >\n            <div className=\"mx-5 mb-4\">\n              <div className=\"py-2 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n                <div className=\"flex flex-col\">\n                  <label>District name</label>\n                  <input\n                    type=\"text\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"district_name\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"district_name\" &&\n                        setError(null);\n                      setDistrictName(e.target.value);\n                    }}\n                    value={districtName}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"district_name\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n                <div className=\"flex flex-col\">\n                  <label>District code</label>\n                  <input\n                    type=\"number\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"district_code\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"district_code\" &&\n                        setError(null);\n                      setDistrictCode(Number(e.target.value));\n                    }}\n                    value={districtCode}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"district_code\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n              </div>\n              <div className=\"pt-4 flex justify-between\">\n                <button\n                  onClick={() => {\n                    props.setActionTypes(null);\n                    setDistrictName(\"\");\n                    setDistrictCode(10);\n                    setError(null);\n                  }}\n                  className={`btn bg-gray-400 text-white hover:bg-gray-600`}\n                  type=\"button\"\n                  disabled={props.loadingRequest}\n                >\n                  Exit\n                </button>\n                <button\n                  className=\"btn bg-primary text-white hover:bg-blue-600\"\n                  type=\"button\"\n                  onClick={() => handleSubmit()}\n                  disabled={props.loadingRequest}\n                >\n                  {props.loadingRequest ? \"Loading...\" : \"Save\"}\n                </button>\n              </div>\n            </div>\n          </Modal>\n        )}\n      {/* end modal for creating new categories or sub category */}\n    </div>\n  );\n};\n\nexport default React.memo(connect(null, {\n  FC_CreateDistrict,\n  FC_UpdateDistrict,\n  FC_DeleteDistrict,\n  PushPopupAlert,\n})(ViewDistrict));\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { IoMdEye, IoMdEyeOff } from \"react-icons/io\";\nimport {\n  FC_CreateProvince,\n  FC_DeleteProvince,\n  FC_UpdateProvince,\n} from \"../../actions/location\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport {\n  DistrictInterface,\n  RoomLocationInterface,\n} from \"../../shared/interfaces\";\nimport { PushPopupAlert } from \"../../actions/system\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { errorToText } from \"../../utils/errors\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\n\ninterface AppProps {\n  thisProvince: RoomLocationInterface | null;\n  thisDistrict: DistrictInterface | null;\n  loadingRequest: boolean;\n  locations: RoomLocationInterface[];\n  actionTypes:\n    | \"CREATE_PROVINCE\"\n    | \"UPDATE_PROVINCE\"\n    | \"CREATE_DISTRICT\"\n    | \"UPDATE_DISTRICT\"\n    | \"CREATE_SECTOR\"\n    | \"UPDATE_SECTOR\"\n    | null;\n  setLoadingRequest: React.Dispatch<React.SetStateAction<boolean>>;\n  setThisProvince: React.Dispatch<\n    React.SetStateAction<RoomLocationInterface | null>\n  >;\n  setActionTypes: React.Dispatch<\n    React.SetStateAction<\n      | \"CREATE_PROVINCE\"\n      | \"UPDATE_PROVINCE\"\n      | \"CREATE_DISTRICT\"\n      | \"UPDATE_DISTRICT\"\n      | \"CREATE_SECTOR\"\n      | \"UPDATE_SECTOR\"\n      | null\n    >\n  >;\n  FC_CreateProvince: Function;\n  FC_UpdateProvince: Function;\n  FC_DeleteProvince: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\nconst ViewProvince: React.FC<AppProps> = (props) => {\n  const [provinceTitle, setProvinceTitle] = useState<string>(\"\");\n  const [provinceCode, setProvinceCode] = useState<number>(0);\n  const [error, setError] = useState<{ element: string; msg: string } | null>(\n    null\n  );\n\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(provinceTitle)) {\n      return setError({\n        element: \"province_title\",\n        msg: \"Title of Province is required\",\n      });\n    }\n\n    if (provinceCode <= 0) {\n      return setError({\n        element: \"province_code\",\n        msg: \"Code of Province is required\",\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      let res;\n      if (props.actionTypes === \"CREATE_PROVINCE\") {\n        res = await axios.post<{ data: RoomLocationInterface }>(\n          `${API.APPLICATION}/province`,\n          {\n            province_name: provinceTitle,\n            province_code: provinceCode,\n            districts: [],\n          }\n        );\n\n        if (res.data) {\n          props.FC_CreateProvince(res.data.data);\n          props.PushPopupAlert({\n            title: \"New Province created successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setProvinceTitle(\"\");\n        }\n      } else if (\n        props.thisProvince &&\n        props.actionTypes === \"UPDATE_PROVINCE\"\n      ) {\n        const districts: string[] = props.thisProvince.districts.map(\n          (district) => district._id\n        );\n        res = await axios.patch<{ updated: RoomLocationInterface }>(\n          `${API.APPLICATION}/province`,\n          {\n            province_id: props.thisProvince._id,\n            province_name: provinceTitle,\n            province_code: provinceCode,\n            districts,\n          }\n        );\n        if (res.data) {\n          console.log({ res: res.data.updated });\n          props.FC_UpdateProvince(res.data.updated);\n          props.PushPopupAlert({\n            title: \"Province updated successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setProvinceTitle(\"\");\n          props.setThisProvince(null);\n        }\n      }\n    } catch (error) {\n      console.error({ province_error: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      props.setLoadingRequest(false);\n    }\n  };\n\n  // const handleDelete = async (provinceId: string) => {\n  //   try {\n  //     const res = await axios.delete<RoomLocationInterface>(\n  //       `${API.APPLICATION}/province/${provinceId}`\n  //     );\n\n  //     if (res.data) {\n  //       console.log({ res });\n  //       props.FC_DeleteProvince(provinceId);\n  //       props.PushPopupAlert({\n  //         title: \"Province deleted successfully\",\n  //         theme: PopupAlertTheme.success,\n  //       });\n  //       props.setLoadingRequest(false);\n  //       props.setActionTypes(null);\n  //     }\n  //   } catch (error) {\n  //     console.log({ province_error: error });\n  //     props.PushPopupAlert({\n  //       title: errorToText(error),\n  //       theme: PopupAlertTheme.danger,\n  //     });\n  //     props.setLoadingRequest(false);\n  //   }\n  // };\n\n  return (\n    <div className={`w-full p-2`}>\n      {props.locations.length > 0 ? (\n        props.locations.map((province, index) => (\n          <div\n            key={index + province._id}\n            className=\"flex justify-between items-center p-2 mb-3 rounded border border-gray-100 shadow\"\n          >\n            <div className=\"flex items-center\">\n              <div className=\"ml-2\">\n                <div className=\"text-xl font-semibold text-gray-600\">\n                  {province.province_name}\n                </div>\n                <div className=\"text-sm font-light text-gray-500\">\n                  {province.districts.length > 0\n                    ? province.districts.length + \"District(s)\"\n                    : null}\n                </div>\n              </div>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <button\n                title={\n                  props.thisProvince &&\n                  props.thisProvince._id === province._id &&\n                  props.actionTypes !== \"UPDATE_PROVINCE\"\n                    ? \"Close Districts\"\n                    : \"View Districts\"\n                }\n                className={`${\n                  props.thisProvince &&\n                  props.thisProvince._id === province._id &&\n                  props.actionTypes !== \"UPDATE_PROVINCE\"\n                    ? \"bg-gray-500 hover:bg-gray-600\"\n                    : \"bg-gray-400 hover:bg-gray-500\"\n                } p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none`}\n                onClick={() => {\n                  !props.thisProvince || props.thisProvince._id !== province._id\n                    ? props.setThisProvince(province)\n                    : props.setThisProvince(null);\n                  setProvinceTitle(\"\");\n                  props.setActionTypes(null);\n                }}\n              >\n                {props.thisProvince &&\n                props.thisProvince._id === province._id &&\n                props.actionTypes !== \"UPDATE_PROVINCE\" ? (\n                  <IoMdEyeOff className=\"text-white w-4 h-4\" />\n                ) : (\n                  <IoMdEye className=\"text-white w-4 h-4\" />\n                )}\n              </button>\n              {/* <button\n                title=\"Update Province\"\n                className=\"bg-blue-500 hover:bg-blue-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                onClick={() => {\n                  props.setThisProvince(province);\n                  setProvinceTitle(province.province_name);\n                  setProvinceCode(province.province_code);\n                  props.setActionTypes(\"UPDATE_PROVINCE\");\n                }}\n                disabled={props.loadingRequest || props.actionTypes !== null}\n              >\n                <MdCreate className=\"text-white w-4 h-4\" />\n              </button>\n              <button\n                title=\"Delete Sub-Category\"\n                className=\"bg-red-500 hover:bg-red-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                onClick={() => handleDelete(province._id)}\n                disabled={props.loadingRequest || props.actionTypes !== null}\n              >\n                <MdClear className=\"text-white w-4 h-4\" />\n              </button> */}\n            </div>\n          </div>\n        ))\n      ) : (\n        <NoResult\n          theme={NoResultThemes.Dark}\n          value=\"No province found!\"\n          component={\n            <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n              <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                <li\n                  onClick={() => props.setActionTypes(\"CREATE_PROVINCE\")}\n                  className=\"underline text-gray-500 cursor-pointer\"\n                >\n                  Add province\n                </li>\n              </ul>\n            </div>\n          }\n        />\n      )}\n\n      {/* modal for creating new categories or sub category */}\n      {props.actionTypes &&\n        (props.actionTypes === \"CREATE_PROVINCE\" ||\n          props.actionTypes === \"UPDATE_PROVINCE\") && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={(): void => {\n              props.setActionTypes(null);\n              setProvinceTitle(\"\");\n              setProvinceCode(0);\n              setError(null);\n            }}\n            displayClose={false}\n            backDropClose={false}\n            title={\n              <div className=\"flex items-center space-x-5\">\n                <div className=\"block pl-2 font-semibold text-xl self-start text-gray-700\">\n                  <h2 className=\"uppercase text-back\">\n                    {props.actionTypes === \"CREATE_PROVINCE\"\n                      ? \"CREATING NEW PROVINCE\"\n                      : props.actionTypes === \"UPDATE_PROVINCE\" &&\n                        \"UPDATING EXISTING PROVINCE\"}\n                  </h2>\n                </div>\n              </div>\n            }\n            widthSizeClass={ModalSize.medium}\n            padding={{ title: true, body: false, footer: false }}\n          >\n            <div className=\"mx-5 mb-4\">\n              <div className=\"py-2 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n                <div className=\"flex flex-col\">\n                  <label>Province name</label>\n                  <input\n                    type=\"text\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"province_title\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"province_title\" &&\n                        setError(null);\n                      setProvinceTitle(e.target.value);\n                    }}\n                    value={provinceTitle}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"province_title\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n                <div className=\"flex flex-col\">\n                  <label>Province code</label>\n                  <input\n                    type=\"number\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"province_code\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"province_code\" &&\n                        setError(null);\n                      setProvinceCode(Number(e.target.value));\n                    }}\n                    value={provinceCode}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"province_code\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n              </div>\n              <div className=\"pt-4 flex justify-between\">\n                <button\n                  onClick={() => {\n                    props.setActionTypes(null);\n                    setProvinceTitle(\"\");\n                    setProvinceCode(0);\n                    setError(null);\n                  }}\n                  className={`btn bg-gray-400 text-white hover:bg-gray-600`}\n                  type=\"button\"\n                  disabled={props.loadingRequest}\n                >\n                  Exit\n                </button>\n                <button\n                  className=\"btn bg-primary text-white hover:bg-blue-600\"\n                  type=\"button\"\n                  onClick={() => handleSubmit()}\n                  disabled={props.loadingRequest}\n                >\n                  {props.loadingRequest ? \"Loading...\" : \"Save\"}\n                </button>\n              </div>\n            </div>\n          </Modal>\n        )}\n      {/* end modal for creating new categories or sub category */}\n    </div>\n  );\n};\n\nexport default React.memo(\n  connect(null, {\n    FC_CreateProvince,\n    FC_UpdateProvince,\n    FC_DeleteProvince,\n    PushPopupAlert,\n  })(ViewProvince)\n);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { MdClear, MdCreate } from \"react-icons/md\";\nimport {\n  FC_CreateSector,\n  FC_DeleteSector,\n  FC_UpdateSector,\n} from \"../../actions/location\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport { DistrictInterface, SectorInterface } from \"../../shared/interfaces\";\nimport { PushPopupAlert } from \"../../actions/system\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { errorToText } from \"../../utils/errors\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\n\ninterface AppProps {\n  thisDistrict: DistrictInterface;\n  thisSector: SectorInterface | null;\n  loadingRequest: boolean;\n  actionTypes:\n    | \"CREATE_PROVINCE\"\n    | \"UPDATE_PROVINCE\"\n    | \"CREATE_DISTRICT\"\n    | \"UPDATE_DISTRICT\"\n    | \"CREATE_SECTOR\"\n    | \"UPDATE_SECTOR\"\n    | null;\n  setLoadingRequest: React.Dispatch<React.SetStateAction<boolean>>;\n  setThisSector: React.Dispatch<React.SetStateAction<SectorInterface | null>>;\n  setActionTypes: React.Dispatch<\n    React.SetStateAction<\n      | \"CREATE_PROVINCE\"\n      | \"UPDATE_PROVINCE\"\n      | \"CREATE_DISTRICT\"\n      | \"UPDATE_DISTRICT\"\n      | \"CREATE_SECTOR\"\n      | \"UPDATE_SECTOR\"\n      | null\n    >\n  >;\n  FC_CreateSector: Function;\n  FC_UpdateSector: Function;\n  FC_DeleteSector: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\nconst ViewSectors: React.FC<AppProps> = (props) => {\n  const [sectorName, setSectorName] = useState<string>(\"\");\n  const [sectorCode, setSectorCode] = useState<number>(0);\n  const [error, setError] = useState<{ element: string; msg: string } | null>(\n    null\n  );\n\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(sectorName)) {\n      return setError({\n        element: \"sector_name\",\n        msg: \"Sector name is required\",\n      });\n    }\n\n    if (sectorCode <= 0) {\n      return setError({\n        element: \"sector_code\",\n        msg: \"Invalid sector code, must be \",\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      let res;\n      if (props.actionTypes === \"CREATE_SECTOR\") {\n        res = await axios.post<{ data: SectorInterface }>(\n          `${API.APPLICATION}/sector`,\n          {\n            district_id: props.thisDistrict._id,\n            district_code: props.thisDistrict.district_code,\n            sector_name: sectorName,\n            sector_code: sectorCode,\n          }\n        );\n        if (res.data) {\n          console.log({\n            district_id: props.thisDistrict._id,\n            data: res.data.data,\n            res,\n          });\n          props.FC_CreateSector({\n            province_id: props.thisDistrict.province_id,\n            district_id: props.thisDistrict._id,\n            data: {\n              district_id: res.data.data.district_id,\n              district_code: res.data.data.district_code,\n              sector_name: res.data.data.sector_name,\n              sector_code: res.data.data.sector_code,\n              sector_id: res.data.data.sector_id,\n            },\n          });\n          props.PushPopupAlert({\n            title: \"New sector created successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setSectorName(\"\");\n        }\n      } else if (props.thisSector && props.actionTypes === \"UPDATE_SECTOR\") {\n        res = await axios.patch<{ data: DistrictInterface }>(\n          `${API.APPLICATION}/sector`,\n          {\n            district_id: props.thisSector.district_id,\n            district_code: props.thisDistrict.district_code,\n            sector_id: props.thisSector.sector_id,\n            sector_name: sectorName,\n            sector_code: sectorCode,\n          }\n        );\n        if (res.data) {\n          props.FC_UpdateSector({\n            province_id: props.thisDistrict.province_id,\n            district_id: props.thisSector.district_id,\n            sector_id: props.thisSector.sector_id,\n            sector_name: sectorName,\n            sector_code: sectorCode,\n          });\n          props.PushPopupAlert({\n            title: \"Sector updated successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setSectorName(\"\");\n          props.setThisSector(null);\n        }\n      }\n    } catch (error) {\n      console.log({ sector_error: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      props.setLoadingRequest(false);\n    }\n  };\n\n  const handleDelete = async (sectorId: string) => {\n    try {\n      const res = await axios.delete<SectorInterface>(\n        `${API.APPLICATION}/sector/${sectorId}`\n      );\n\n      if (res.data) {\n        props.FC_DeleteSector({\n          province_id: props.thisDistrict.province_id,\n          district_id: props.thisDistrict._id,\n          sector_id: sectorId,\n        });\n        props.PushPopupAlert({\n          title: \"Sector deleted successfully\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setLoadingRequest(false);\n        props.setActionTypes(null);\n      }\n    } catch (error) {\n      console.log({ district_error: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      props.setLoadingRequest(false);\n    }\n  };\n\n  return (\n    <div className={`w-full p-2`}>\n      {props.thisDistrict.sectors && props.thisDistrict.sectors.length > 0 ? (\n        <div className=\"rounded border border-gray-100 shadow-sm animate__animated animate__fadeIn\">\n          <table className=\"w-full z-0\">\n            <thead className=\"bg-gray-50\">\n              <tr className=\"text-left\">\n                <th className=\"px-3 py-3\">#</th>\n                <th>Sector name</th>\n                <th>Sector code</th>\n                <th>Status</th>\n              </tr>\n            </thead>\n            <tbody className=\"text-sm\">\n              {props.thisDistrict.sectors.map((sector, index) => (\n                <tr\n                  key={index + sector.district_id}\n                  className={`text-left border-b border-gray-50`}\n                >\n                  <td className=\"px-3 py-1\">{index + 1}</td>\n                  <td>{sector.sector_name}</td>\n                  <td>{sector.sector_name}</td>\n                  <td>\n                    <div className=\"flex items-center gap-2\">\n                      <button\n                        title=\"Update sector\"\n                        className=\"bg-blue-500 hover:bg-blue-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                        onClick={() => {\n                          props.setThisSector(sector);\n                          setSectorName(sector.sector_name);\n                          setSectorCode(sector.sector_code);\n                          props.setActionTypes(\"UPDATE_SECTOR\");\n                        }}\n                        disabled={\n                          props.loadingRequest || props.actionTypes !== null\n                        }\n                      >\n                        <MdCreate className=\"text-white w-4 h-4\" />\n                      </button>\n                      <button\n                        title=\"Delete sector\"\n                        className=\"bg-red-500 hover:bg-red-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                        onClick={() => handleDelete(sector.sector_id)}\n                        disabled={props.loadingRequest}\n                      >\n                        <MdClear className=\"text-white w-4 h-4\" />\n                      </button>\n                    </div>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        <NoResult\n          theme={NoResultThemes.Dark}\n          value={\"No sector found!\"}\n          component={\n            <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n              <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                <li\n                  onClick={() => props.setActionTypes(\"CREATE_SECTOR\")}\n                  className=\"underline text-gray-500 cursor-pointer\"\n                >\n                  Add sector\n                </li>\n              </ul>\n            </div>\n          }\n        />\n      )}\n\n      {/* modal for creating new categories or sub category */}\n      {props.actionTypes &&\n        (props.actionTypes === \"CREATE_SECTOR\" ||\n          props.actionTypes === \"UPDATE_SECTOR\") && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={(): void => {\n              props.setActionTypes(null);\n              setSectorName(\"\");\n              setSectorCode(0);\n              setError(null);\n            }}\n            displayClose={false}\n            backDropClose={false}\n            title={\n              <div className=\"flex items-center space-x-5\">\n                <div className=\"block pl-2 font-semibold text-xl self-start text-gray-700\">\n                  {/* <p className=\"text-base text-gray-500 font-medium\">\n                    You are{\" \"}\n                    {actionType === \"CREATE_SUB\" || \"CREATE_CAT\"\n                      ? \"creating\"\n                      : \"updating\"}\n                  </p> */}\n                  <h2 className=\"uppercase text-back\">\n                    {props.actionTypes === \"CREATE_SECTOR\"\n                      ? \"CREATING NEW SECTOR\"\n                      : props.actionTypes === \"UPDATE_SECTOR\" &&\n                        \"UPDATING EXISTING SECTOR\"}\n                  </h2>\n                </div>\n              </div>\n            }\n            widthSizeClass={ModalSize.medium}\n            padding={{ title: true, body: false, footer: false }}\n          >\n            <div className=\"w-full px-5 mb-5\">\n              <div className=\"py-3 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n                <div className=\"flex flex-col\">\n                  <label>Sector name</label>\n                  <input\n                    type=\"text\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"sector_name\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"sector_name\" &&\n                        setError(null);\n                      setSectorName(e.target.value);\n                    }}\n                    value={sectorName}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"sector_name\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n                <div className=\"flex flex-col\">\n                  <label>Sector code</label>\n                  <input\n                    type=\"number\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"sector_code\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"sector_code\" &&\n                        setError(null);\n                      setSectorCode(Number(e.target.value));\n                    }}\n                    value={sectorCode}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"sector_code\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n              </div>\n              <div className=\"pt-4 flex justify-between\">\n                <button\n                  onClick={() => {\n                    props.setActionTypes(null);\n                    setSectorName(\"\");\n                    setSectorCode(0);\n                    setError(null);\n                  }}\n                  className={`btn bg-gray-400 text-white hover:bg-gray-600`}\n                  type=\"button\"\n                  disabled={props.loadingRequest}\n                >\n                  Exit\n                </button>\n                <button\n                  className=\"btn bg-primary text-white hover:bg-blue-600\"\n                  type=\"button\"\n                  onClick={() => handleSubmit()}\n                  disabled={props.loadingRequest}\n                >\n                  {props.loadingRequest ? \"Loading...\" : \"Save\"}\n                </button>\n              </div>\n            </div>\n          </Modal>\n        )}\n      {/* end modal for creating new categories or sub category */}\n    </div>\n  );\n};\n\nexport default React.memo(\n  connect(null, {\n    FC_CreateSector,\n    FC_UpdateSector,\n    FC_DeleteSector,\n    PushPopupAlert,\n  })(ViewSectors)\n);\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { AiOutlineFilter } from \"react-icons/ai\";\nimport { BsCaretRightFill } from \"react-icons/bs\";\nimport { connect } from \"react-redux\";\nimport { getAllRoom } from \"../../actions/location\";\nimport { StoreState } from \"../../reducers\";\nimport {\n  DistrictInterface,\n  LocationRoomTableInterface,\n  RoomLocationInterface,\n  SectorInterface,\n} from \"../../shared/interfaces\";\nimport { LocationsInArray } from \"../UserManagement/UserList\";\nimport ViewDistricts from \"./ViewDistricts\";\nimport ViewProvince from \"./ViewProvince\";\nimport ViewSectors from \"./ViewSectors\";\n\nexport const distinctDistrict = (\n  rooms: RoomLocationInterface[],\n  province_id?: string\n): LocationRoomTableInterface[] => {\n  let ids: string[] = [],\n    result: LocationRoomTableInterface[] = [];\n\n  LocationsInArray(rooms).forEach((element) => {\n    if (!ids.includes(element.district_id)) {\n      if (province_id && element.province_id === province_id) {\n        ids.push(element.district_id);\n        result.push(element);\n      } else if (province_id === undefined) {\n        ids.push(element.district_id);\n        result.push(element);\n      }\n    }\n  });\n\n  return result;\n};\n\nexport const distinctCenter = (\n  rooms: RoomLocationInterface[],\n  district_id: string\n): LocationRoomTableInterface[] => {\n  let ids: string[] = [],\n    result: LocationRoomTableInterface[] = [];\n\n  LocationsInArray(rooms).forEach((element) => {\n    if (\n      !ids.includes(element.center_id) &&\n      element.district_id === district_id\n    ) {\n      ids.push(element.center_id);\n      result.push(element);\n    }\n  });\n  return result;\n};\n\nexport const distinctRoom = (\n  rooms: RoomLocationInterface[],\n  center_id: string\n): LocationRoomTableInterface[] => {\n  let ids: string[] = [],\n    result: LocationRoomTableInterface[] = [];\n\n  LocationsInArray(rooms).forEach((element) => {\n    if (!ids.includes(element.room_id) && element.center_id === center_id) {\n      ids.push(element.room_id);\n      result.push(element);\n    }\n  });\n  return result;\n};\n\ninterface AppProps {\n  locations: RoomLocationInterface[];\n  getAllRoom: Function;\n}\n\nconst _Locations: React.FC<AppProps> = (props) => {\n  const [actionTypes, setActionTypes] = useState<\n    | \"CREATE_PROVINCE\"\n    | \"UPDATE_PROVINCE\"\n    | \"CREATE_DISTRICT\"\n    | \"UPDATE_DISTRICT\"\n    | \"CREATE_SECTOR\"\n    | \"UPDATE_SECTOR\"\n    | null\n  >(null);\n  const [thisProvince, setThisProvince] =\n    useState<RoomLocationInterface | null>(null);\n  const [thisDistrict, setThisDistrict] = useState<DistrictInterface | null>(\n    null\n  );\n  const [thisSector, setThisSector] = useState<SectorInterface | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (!props.locations.length && loading) {\n      props.getAllRoom((status: boolean, msg: string) => {\n        setLoading(status);\n        if (!status && msg.length > 0) {\n          console.log(msg);\n        }\n      });\n    } else if (loading) {\n      setLoading(false);\n    }\n  }, [loading, props]);\n\n  if (loading === true) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading locations...\n      </div>\n    );\n  }\n\n  const displayTitle = () => {\n    if (\n      (!thisSector ||\n        (thisSector &&\n          (actionTypes === \"CREATE_SECTOR\" ||\n            actionTypes === \"UPDATE_SECTOR\"))) &&\n      thisDistrict &&\n      actionTypes !== \"CREATE_DISTRICT\" &&\n      actionTypes !== \"UPDATE_DISTRICT\"\n    ) {\n      return (\n        <div className=\"flex items-center gap-1\">\n          <span\n            className=\"cursor-pointer uppercase text-xl font-semibold text-gray-800\"\n            onClick={() => {\n              setThisProvince(null);\n            }}\n          >\n            province\n          </span>\n          <span>/</span>\n          <span\n            className=\"cursor-pointer uppercase text-xl font-semibold text-gray-800\"\n            onClick={() => {\n              setThisDistrict(null);\n            }}\n          >\n            district\n          </span>\n          <span>/</span>\n          <span className=\"text-xl text-gray-800\">\n            {thisDistrict.district_name}\n          </span>\n        </div>\n      );\n    } else if (\n      (!thisDistrict ||\n        (thisDistrict &&\n          (actionTypes === \"CREATE_DISTRICT\" ||\n            actionTypes === \"UPDATE_DISTRICT\"))) &&\n      thisProvince\n    ) {\n      return (\n        <div className=\"flex items-center gap-2\">\n          <span\n            className=\"cursor-pointer uppercase text-xl font-semibold text-gray-800\"\n            onClick={() => {\n              setThisProvince(null);\n            }}\n          >\n            province\n          </span>\n          <span>/</span>\n          <span className=\"text-xl text-gray-800\">\n            {thisProvince.province_name}\n          </span>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"flex items-center gap-1\">\n        <span className=\"uppercase text-xl font-semibold text-gray-800\">\n          province\n        </span>\n        <span>/</span>\n      </div>\n    );\n  };\n\n  return (\n    <Fragment>\n      <div className=\"w-full my-5\">\n        {/* header title */}\n        <div className=\"flex justify-between p-2 gap-1\">\n          <div className=\"flex flex-col\">\n            <span className=\"text-blue-600 text-2xl md:text-2xl lg:text-3xl font-bold\">\n              Locations Management\n            </span>\n\n            <div className=\"flex flex-row items-center md:gap-3 gap-2 mt-1\">\n              <AiOutlineFilter className=\"text-xl\" />\n              <div className=\"flex flex-row items-center gap-1\">\n                {thisProvince && (\n                  <span className=\"text-gray-700 text-base font-bold\">\n                    {thisProvince.province_name}\n                  </span>\n                )}\n                {thisDistrict && (\n                  <div className=\"flex flex-row items-center gap-1\">\n                    <BsCaretRightFill />\n                    <span className=\"text-blue-600 text-base font-bold underline\">\n                      {thisDistrict.district_name} district\n                    </span>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n        {/* end header title */}\n\n        <div className=\"w-full bg-white\">\n          <div className=\"border-b px-2 py-3 flex justify-between\">\n            {displayTitle()}\n\n            {/* CREATE NEW PROVINCE =====================================*/}\n            {/* {(!thisProvince ||\n              (thisProvince &&\n                (actionTypes === \"CREATE_PROVINCE\" ||\n                  actionTypes === \"UPDATE_PROVINCE\"))) && (\n              <button\n                type=\"button\"\n                className={`btn hover:bg-blue-500 mb-1 border-2 border-blue-500 bg-white\n        hover:text-white rounded-md flex items-center font-bold text-gray-700 focus:outline-none gap-1 ${\n          loadingRequest && \"cursor-wait\"\n        } ${actionTypes !== null && \"cursor-not-allowed\"}`}\n                onClick={() => setActionTypes(\"CREATE_PROVINCE\")}\n                disabled={actionTypes !== null || loadingRequest}\n              >\n                <MdAdd className=\"inline-block mr-1 text-xl font-bold\" />\n                New Province\n              </button>\n            )} */}\n            {/* CREATE NEW DISTRICT =====================================*/}\n            {/* {(!thisDistrict ||\n              (thisDistrict &&\n                (actionTypes === \"CREATE_DISTRICT\" ||\n                  actionTypes === \"UPDATE_DISTRICT\"))) &&\n              thisProvince && (\n                <button\n                  type=\"button\"\n                  className={`btn hover:bg-blue-500 mb-1 border-2 border-blue-500 bg-white\n        hover:text-white rounded-md flex items-center font-bold text-gray-700 focus:outline-none gap-1 ${\n          loadingRequest && \"cursor-wait\"\n        } ${actionTypes !== null && \"cursor-not-allowed\"}`}\n                  onClick={() => setActionTypes(\"CREATE_DISTRICT\")}\n                  disabled={actionTypes !== null || loadingRequest}\n                >\n                  <MdAdd className=\"inline-block mr-1 text-xl font-bold\" />\n                  New District\n                </button>\n              )} */}\n\n            {/* CREATE NEW SECTOR =====================================*/}\n            {/* {(!thisSector ||\n              (thisSector &&\n                (actionTypes === \"CREATE_SECTOR\" ||\n                  actionTypes === \"UPDATE_SECTOR\"))) &&\n              thisDistrict &&\n              actionTypes !== \"CREATE_DISTRICT\" &&\n              actionTypes !== \"UPDATE_DISTRICT\" && (\n                <button\n                  type=\"button\"\n                  className={`btn hover:bg-blue-500 mb-1 border-2 border-blue-500 bg-white\n        hover:text-white rounded-md flex items-center font-bold text-gray-700 focus:outline-none gap-1 ${\n          loadingRequest && \"cursor-wait\"\n        } ${actionTypes !== null && \"cursor-not-allowed\"}`}\n                  onClick={() => setActionTypes(\"CREATE_SECTOR\")}\n                  disabled={actionTypes !== null || loadingRequest}\n                >\n                  <MdAdd className=\"inline-block mr-1 text-xl font-bold\" />\n                  New Sector\n                </button>\n              )} */}\n          </div>\n\n          {(!thisProvince ||\n            (thisProvince &&\n              (actionTypes === \"CREATE_PROVINCE\" ||\n                actionTypes === \"UPDATE_PROVINCE\"))) && (\n            <ViewProvince\n              thisProvince={thisProvince}\n              thisDistrict={thisDistrict}\n              loadingRequest={loadingRequest}\n              locations={props.locations}\n              actionTypes={actionTypes}\n              setLoadingRequest={setLoadingRequest}\n              setThisProvince={setThisProvince}\n              setActionTypes={setActionTypes}\n            />\n          )}\n\n          {(!thisDistrict ||\n            (thisDistrict &&\n              (actionTypes === \"CREATE_DISTRICT\" ||\n                actionTypes === \"UPDATE_DISTRICT\"))) &&\n            thisProvince && (\n              <ViewDistricts\n                thisDistrict={thisDistrict}\n                loadingRequest={loadingRequest}\n                actionTypes={actionTypes}\n                setLoadingRequest={setLoadingRequest}\n                setActionTypes={setActionTypes}\n                thisProvince={thisProvince}\n                setThisDistrict={setThisDistrict}\n              />\n            )}\n\n          {(!thisSector ||\n            (thisSector &&\n              (actionTypes === \"CREATE_SECTOR\" ||\n                actionTypes === \"UPDATE_SECTOR\"))) &&\n            thisDistrict &&\n            actionTypes !== \"CREATE_DISTRICT\" &&\n            actionTypes !== \"UPDATE_DISTRICT\" && (\n              <ViewSectors\n                thisDistrict={thisDistrict}\n                thisSector={thisSector}\n                loadingRequest={loadingRequest}\n                actionTypes={actionTypes}\n                setLoadingRequest={setLoadingRequest}\n                setThisSector={setThisSector}\n                setActionTypes={setActionTypes}\n              />\n            )}\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  locations,\n}: StoreState): {\n  locations: RoomLocationInterface[];\n} => {\n  return { locations: locations.roomLocation };\n};\n\nexport const Locations = React.memo(\n  connect(mapStateToProps, {\n    getAllRoom,\n  })(_Locations)\n);\n"],"sourceRoot":""}
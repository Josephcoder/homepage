{"version":3,"sources":["components/Navigation/SideNavigation.tsx","utils/question_bank.ts","interfaces/application.ts","components/ApplicationPeriods/ApplicationPeriods.tsx","containers/ApplicationsDashboard/ApplicationHistory/ApplicationHistory.tsx","containers/ApplicationsDashboard/ExamDetails/ExamDetails.tsx","containers/ApplicationsDashboard/ExamStatus/PreparedExams.tsx","containers/ApplicationsDashboard/ExamStatus/ActiveExams.tsx","containers/ApplicationsDashboard/ExamStatus/ExamsDone.tsx","containers/ApplicationsDashboard/Exams.tsx","containers/ApplicationsDashboard/ApplicationsDashboard.tsx","containers/UserDashboard/UserDashboard.tsx"],"names":["_SideNavigation","props","componentDidMount","PageHasSubNav","componentWillUnmount","state","loading","this","auth","isAuthenticated","navActive","system","navigation","className","children","React","Component","SideNavigation","connect","NavToogle","MainItem","title","icon","MdBrightness1","active","count","IconDefined","SubItemContainer","SubItem","ExamTimeStatus","getQuestionType","question_types","type_id","type","check","find","itm","id","undefined","check_type","questionTypeElements","key","element","findTotalMarks","courses","results","sum","course","test","course_id","user_total_marks","toFixed","CheckIfExamDone","res","validateCalculatedFormula","formula","characters","length","status","msg","el","filter","nextCharacter","i","convertFromStringToDate","responseDate","dateComponents","split","datePieces","timePieces","Date","parseInt","validateExamDate","exam_date","start_time","end_time","Expired","toDay","examDate","startTime","getDate","getMonth","getFullYear","endTime","Waiting","getTime","Online","console","log","InitializeExamsDone","selected_period","selectedPosition","candidateExam","loadExamsDone","user_id","setLoadingExamsDone","selectedExams","InitializeExamDetails","setLoadingExams","application_session_id","user_exams_temp","center_id","district_id","room_id","position_id","proctoringDefaultRules","rule","caption","ApplicationStatus","ApplicationStates","ApplicationStatesDescription","Initiated","Failed","Incomplete","Pending","Placed","Rejected","Shortlisted","Pass","ApplicationPeriods","placeholder","applicationPeriods","map","item","onClick","setSelectedPeriod","showPeriodFilter","is_active","application_session_name","DATE","application_start_date","application_end_date","ApplicationHistory","applicationHistory","date","comment","application_status","ExamDetails","setLoading","setState","locationsData","Locations_list","loadAllLocationsData","loadApplicationPeriods","selected_exam_id","to","examDetails","locationDetails","Loading","LoadingType","dark","setSelectedCandidateExam","duration","discription","dangerouslySetInnerHTML","__html","termes","province_name","district_name","center_name","room_number","proctoring_type","PreparedExams","NotPreparedExamsFilter","user_exams_done","ex","findExam","PreparedExamsFilter","AllPendingExams","totalPending","loadingExams","course_name","loadingExamsDone","changeLocation","exam_status","UserExamStatus","Editing","selectedApplicationDetails","setSelectedCourse","appointmentDetailsModal","periods","positions","selected_position","setSelectedPosition","ActiveExams","ActiveExamsFilter","Paused","Done","Removed","x","selectedCourse","centersModal","setMaxExamModal","ExamsDone","ExamsDoneFilter","_PostExams","renderExam","exam","examStatus","loadExam","redirect","closeModal","updateLocationFunction","exams","selected_application","updateLocation","numberOfIncomplete","findLocation","course_code","location","exam_id","courseId","current_temp","testDone","findCourse","pendingCourses","InitializationFn","user","loadCourses","doExam","exam_answers","displayResults","selectedLocation","applicationHistoryState","period","setSelectedLocationData","ChooseExamCenter","positionCourses","addLocation","deleteApplication","PostExams","prepareExam","loadExamsList","_ApplicationsDashboard","filteredApplications","applications","Status","searchPeriod","appl","application_session","closeApplicationDetails","displayDetailsModal","setDisplayDetailsModal","applicationStatuses","application","output","push","maxExamModal","LoadApplications","a","loadingErr","number_of_incomplete","response","candidateApplications","candidate_applications","axios","get","API","APPLICATION","data","AddUserApplication","position","application_id","incrementIncomplete","LoadCandidateApplications","applicationError","post","noRoomsApplication","PushPopupAlert","description","theme","PopupAlertTheme","success","errors","field","newArr","removeLocation","message","danger","changeLoadingState","window","confirm","delete","RemoveUserApplication","warning","setShowFilterStatus","loadAllPositions","apply","currentStep","ApplicationStepsTypes","Step3","initiateApplication","Step1","doTestStatus","applicationDetails","selectedApplicationStatus","FC_Access","UserAccessList","MY_APPLICATION","view","position_title","Exams","changeLocationError","application_history","positions_list","LoadingV2","NoResult","NoResultThemes","Dark","value","component","createdAt","Modal","backDrop","Themes","default","close","backDropClose","widthSizeClass","ModalSize","extraLarge","displayClose","padding","body","ApplicationsDashboard","UserDashboard"],"mappings":"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","file":"static/js/36.486e8a7b.chunk.js","sourcesContent":["import React, { FC, ReactElement, ReactNode } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, System } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { NavToogle, PageHasSubNav } from \"../../actions\";\nimport { MdBrightness1, MdSearch } from \"react-icons/md\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  system: System;\n  PageHasSubNav: Function;\n  NavToogle: Function;\n  children: ReactNode;\n}\n//\ninterface AppState {\n  loading: boolean;\n}\n\nclass _SideNavigation extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount = () => this.props.PageHasSubNav(true);\n  componentWillUnmount = () => this.props.PageHasSubNav(false);\n\n  render() {\n    const isAuthenticated = this.props.auth.isAuthenticated;\n\n    if (isAuthenticated === false) {\n      return null;\n    }\n\n    const navActive = this.props.system.navigation;\n    return (\n      <div\n        className={`fixed w-48 p-1 pr-2 pl-6 text-gray-700 bg-white ${\n          navActive === true ? \"lg:left-16  left-16\" : \" -left-72 lg:left-16\"\n        }  top-0 bottom-0 pt-20 z-30 shadow-lg  transition-all duration-500 ease-in-out overflow-y-auto`}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n}: StoreState): { auth: Auth; system: System } => {\n  return { auth: auth, system: system };\n};\n\nexport const SideNavigation = connect(mapStateToProps, {\n  NavToogle,\n  PageHasSubNav,\n})(_SideNavigation);\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SearchComponentInterface = {\n  data: any[];\n};\n\nexport const Search: FC<SearchComponentInterface> = ({\n  data,\n}): ReactElement => {\n  return (\n    <div className=\"m-1 rounded-md shadow-md border border-blue-400 bg-white p-1 flex \">\n      <label htmlFor=\"search-text\" className=\"inline-block text-2xl\">\n        <MdSearch className=\"inline-block text-blue-400\" />\n      </label>\n      <input\n        type=\"search\"\n        className=\"outline-none bg-transparent flex-1 pl-1\"\n        placeholder=\"Search\"\n        id=\"search-text\"\n      />\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype MainItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const MainItem: FC<MainItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n  return (\n    <section\n      className={`${\n        active === true\n          ? \"bg-blue-500 text-white font-bold\"\n          : \"bg-blue-100 text-blue-800\"\n      } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex cursor-pointer items-center`}\n    >\n      <section className=\"flex-1\">\n        <IconDefined className=\"inline-block mr-1 text-xs\" />\n        <span>{title}</span>\n      </section>\n\n      {count > 0 ? (\n        <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n          {count}\n        </span>\n      ) : null}\n    </section>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemContainerComponentInterface = {\n  children: ReactNode;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const SubItemContainer: FC<SubItemContainerComponentInterface> = ({\n  children,\n}): ReactElement => {\n  return (\n    <div className=\"ml-3 overflow-y-auto border-l-2 border-blue-200 -mt-1 pt-2 mb-2 pl-1 cursor-pointer\">\n      {children}\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n * @important Remenber to use these components inside the <SubItemContainer>...</SubItemContainer>\n */\nexport const SubItem: FC<SubItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n\n  return (\n    <div\n      className={`animate__animated animate__zoomIn animate__faster ${\n        active === true ? \"bg-blue-500 text-white font-bold\" : \" text-blue-800\"\n      } text-blue-800 bg-blue-200 rounded-md px-1 mb-1 flex items-center py-1 font-bold`}\n    >\n      <IconDefined\n        className={`inline-block mr-0.1 text-xs ${\n          active === true ? \"text-white\" : \"\"\n        }`}\n      />\n      <span\n        className={`inline-block pl-1 ${active === true ? \"text-white\" : \"\"}`}\n      >\n        {title}\n      </span>\n      {count >= 1 ? (\n        <span\n          className={`text-sm fint-bold ${active === true ? \"text-white\" : \"\"}`}\n        >\n          {count}\n        </span>\n      ) : null}\n    </div>\n  );\n};\n","import { candidateExamStoreInterface } from \"../actions/candidate_exam\";\nimport {\n  applicationExamAPI,\n  ApplicationPeriodGet,\n} from \"../interfaces/application\";\nimport { ExamResultsDetails } from \"../interfaces/exam\";\nimport { PositionAPI, PositionAPICourse } from \"../interfaces/position\";\nimport {\n  questionType,\n  questionTypeElements,\n  questionTypeElementsType,\n} from \"../interfaces/question\";\n\nexport const getQuestionType = (\n  question_types: questionType[] | null,\n  type_id: string\n) => {\n  let type: questionTypeElementsType | null = null;\n  if (question_types !== null) {\n    let check = question_types.find((itm) => itm.id === type_id);\n    if (check !== undefined) {\n      let check_type = questionTypeElements.find(\n        (itm) => check && itm.key === check.element\n      );\n      if (check_type !== undefined) {\n        type = check_type.key;\n      }\n    }\n  }\n  return type;\n};\n\nexport const findTotalMarks = (\n  courses: PositionAPICourse[],\n  results: ExamResultsDetails[] | null\n) => {\n  if (results !== null) {\n    let sum: number = 0;\n    for (let course of courses) {\n      let test = results.find((itm) => itm.course === course.course_id);\n      if (test !== undefined) {\n        sum = sum + test.user_total_marks;\n      }\n    }\n    return sum.toFixed(2);\n  } else {\n    return \"Wait...\";\n  }\n};\n\nexport const CheckIfExamDone = (\n  courses: PositionAPICourse[],\n  results: ExamResultsDetails[] | null\n) => {\n  let res: boolean = false;\n  if (results !== null) {\n    for (let course of courses) {\n      let test = results.find((itm) => itm.course === course.course_id);\n      if (test !== undefined) {\n        res = true;\n      }\n    }\n  }\n  return res;\n};\n\nexport const validateCalculatedFormula = (\n  formula: string\n): { status: boolean; msg: string } => {\n  let characters: string[] = [];\n  if (\n    formula === undefined ||\n    formula === \"\" ||\n    formula.length === undefined ||\n    formula.length === 0\n  ) {\n    return {\n      status: false,\n      msg: `Please type a formula`,\n    };\n  }\n  if (formula.length < 3) {\n    return {\n      status: false,\n      msg: `The formula in not valid, it is not complete!`,\n    };\n  }\n  for (let el of formula) {\n    characters = [...characters, el];\n  }\n  if (characters[0] !== `\"`) {\n    return {\n      status: false,\n      msg: `Formula should start with (\") character`,\n    };\n  }\n  if (characters.filter((itm) => itm === `\"`).length < 2) {\n    return {\n      status: false,\n      msg: `Formula is missing closing (\") character`,\n    };\n  }\n  if (characters.filter((itm) => itm === `\"`).length > 2) {\n    return {\n      status: false,\n      msg: `Formula is invalid, because it has many (\") characters (${\n        characters.filter((itm) => itm === `\"`).length\n      })`,\n    };\n  }\n  if (\n    characters[characters.length - 1] !== `\"` &&\n    characters.filter((itm) => itm === `\"`).length === 2\n  ) {\n    let nextCharacter: string = \"\";\n    for (let i = 0; i < characters.length; i++) {\n      if (characters[i] === `\"` && i !== 0) {\n        nextCharacter = characters[i + 1];\n      }\n    }\n    if (nextCharacter !== `;`) {\n      return {\n        status: false,\n        msg: `Formula is missing separation character (;) between formula and error`,\n      };\n    }\n    if (characters[characters.length - 1] === `;`) {\n      return {\n        status: false,\n        msg: `Formula is missing error after (;) character`,\n      };\n    }\n  }\n  return {\n    status: true,\n    msg: `Formula is valid`,\n  };\n};\n\nexport function convertFromStringToDate(responseDate: string) {\n  let dateComponents = responseDate.split(\"T\");\n  let datePieces = dateComponents[0].split(\"-\");\n  let timePieces = dateComponents[1].split(\":\");\n  return new Date(\n    parseInt(datePieces[2]),\n    parseInt(datePieces[1]) - 1,\n    parseInt(datePieces[0]),\n    parseInt(timePieces[0]),\n    parseInt(timePieces[1]),\n    parseInt(timePieces[2])\n  );\n}\n\nexport enum ExamTimeStatus {\n  Waiting = \"Waiting\",\n  Online = \"Online\",\n  Expired = \"Expired\",\n}\n\nexport const validateExamDate = (\n  exam_date: string,\n  start_time: string,\n  end_time: string\n) => {\n  let status: ExamTimeStatus = ExamTimeStatus.Expired;\n  // Dates\n  const toDay: Date = new Date();\n  const examDate = new Date(exam_date);\n\n  // Time\n  const startTime = convertFromStringToDate(\n    examDate.getDate() +\n      \"-\" +\n      (examDate.getMonth() + 1) +\n      \"-\" +\n      examDate.getFullYear() +\n      \"T\" +\n      start_time +\n      \":0\"\n  );\n  const endTime = convertFromStringToDate(\n    examDate.getDate() +\n      \"-\" +\n      (examDate.getMonth() + 1) +\n      \"-\" +\n      examDate.getFullYear() +\n      \"T\" +\n      end_time +\n      \":0\"\n  );\n\n  // check exam date\n  if (\n    examDate.getDate() > toDay.getDate() ||\n    examDate.getMonth() > toDay.getMonth() ||\n    examDate.getFullYear() > toDay.getFullYear()\n  ) {\n    status = ExamTimeStatus.Waiting;\n  }\n\n  if (\n    examDate.getDate() < toDay.getDate() ||\n    examDate.getMonth() < toDay.getMonth() ||\n    examDate.getFullYear() < toDay.getFullYear()\n  ) {\n    status = ExamTimeStatus.Expired;\n  }\n\n  if (\n    examDate.getDate() === toDay.getDate() &&\n    examDate.getMonth() === toDay.getMonth() &&\n    examDate.getFullYear() === toDay.getFullYear()\n  ) {\n    if (startTime.getTime() > toDay.getTime()) {\n      status = ExamTimeStatus.Waiting;\n    } else if (\n      startTime.getTime() <= toDay.getTime() &&\n      endTime.getTime() >= toDay.getTime()\n    ) {\n      status = ExamTimeStatus.Online;\n    } else {\n      status = ExamTimeStatus.Expired;\n    }\n  }\n  console.log(\n    \"Dates comparison: \" + examDate.getDate() + \"=>\" + toDay.getDate()\n  );\n  console.log(\"Exam Status: \", status);\n  return status;\n};\n\nexport const InitializeExamsDone = (\n  selected_period: ApplicationPeriodGet | null,\n  selectedPosition: PositionAPI | null,\n  candidateExam: candidateExamStoreInterface,\n  loadExamsDone: (\n    periodId: string,\n    userId: string,\n    callback: (loading: boolean) => void\n  ) => void,\n  user_id: string,\n  setLoadingExamsDone: (status: boolean) => void,\n  selectedExams: applicationExamAPI[] | null,\n  InitializeExamDetails: (\n    periodId: string,\n    courseId: string,\n    district_id: string,\n    center_id: string,\n    room_id: string,\n    position_id: string,\n    callback: (loading: boolean) => void\n  ) => void,\n  setLoadingExams: (status: boolean) => void\n) => {\n  if (selected_period !== null && selectedPosition !== null) {\n    loadExamsDone(\n      selected_period.application_session_id,\n      user_id,\n      setLoadingExamsDone\n    );\n    for (let course of selectedPosition.courses) {\n      let testDone = candidateExam.user_exams_temp.find(\n        (itm) => itm.course === course.course_id\n      );\n      if (testDone === undefined) {\n        let center_id = selectedExams?.find(\n          (itm) => itm.course_id === course.course_id\n        );\n        if (center_id !== undefined) {\n          InitializeExamDetails(\n            selected_period.application_session_id,\n            course.course_id,\n            center_id.district_id,\n            center_id.center_id,\n            center_id.room_id,\n            selectedPosition.position_id,\n            setLoadingExams\n          );\n        }\n      }\n    }\n  }\n};\n\nexport const getActiveExam = (\n  candidateExam: candidateExamStoreInterface\n): ExamResultsDetails | null => {\n  if (candidateExam.user_exams_done.length > 0) {\n    for (let exam of candidateExam.user_exams_done) {\n      if (\n        validateExamDate(exam.exam_date, exam.start_time, exam.end_time) ===\n        ExamTimeStatus.Online\n      ) {\n        return exam;\n      }\n    }\n  }\n  return null;\n};\n\nexport const proctoringDefaultRules: {\n  rule: string;\n  status: boolean;\n  caption: string;\n}[] = [\n  {\n    rule: \"right_click_enabled\",\n    status: false,\n    caption: \"Enable right click\",\n  },\n  {\n    rule: \"copy_enabled\",\n    status: false,\n    caption: \"Enable copy\",\n  },\n  {\n    rule: \"paste_enabled\",\n    status: false,\n    caption: \"Enable paste\",\n  },\n  {\n    rule: \"stop_candidate_when_comeback\",\n    status: false,\n    caption: \"Enable Candidate when coming back\",\n  },\n  {\n    rule: \"allow_to_leave_browser\",\n    status: false,\n    caption: \"Enable to leave browser\",\n  },\n];\n","import { LocationTableInterface } from \"../containers/Application/ExamCenter/ChooseExamCenter\";\nimport { PositionAPI } from \"./position\";\n\nexport enum ApplicationStatus {\n  Pending = \"Pending\",\n  Accepted = \"Accepted\",\n  Rejected = \"Rejected\",\n}\n\nexport interface application_exam {\n  courseId: string;\n  courseName: string;\n  courseCode: string;\n  location: LocationTableInterface;\n}\n\nexport interface applicationExamAPI {\n  district_id: string;\n  center_id: string;\n  center_name: string;\n  course_id: string;\n  course_name: string;\n  proctoring_type: string;\n  room_id: string;\n  room_number: number;\n}\n\nexport interface ApplicationInterface {\n  application_id: string;\n  application_date: Date;\n  application_period: string;\n  application_status: ApplicationStatus;\n  application_position_id: string;\n  application_position: PositionAPI;\n  exams: application_exam[];\n}\n\nexport interface ApplicationSession {\n  application_end_date: string;\n  application_session_id: string;\n  application_session_name: string;\n  application_start_date: string;\n  createdAt: string;\n  is_active: boolean;\n  period: string;\n}\n\nexport interface applicationHistory {\n  application_status: ApplicationStates | string;\n  comment: string;\n  date: string;\n  user_id: string;\n}\n\nexport interface NoRoomsInterface {\n  course_id: string;\n  proctoring_type: string;\n  center_id: string;\n  district_id: string;\n  message: string;\n}\n\nexport interface GetApplicationResponse {\n  message: string;\n  application_id: string;\n  noRooms: NoRoomsInterface[];\n}\n\nexport interface GetApplicationsAPI {\n  application_id: string;\n  application_period: string;\n  createdAt: string;\n  exams: applicationExamAPI[];\n  position: PositionAPI;\n  application_status: string;\n  updatedAt: string;\n  user_id: string;\n  application_history: applicationHistory[];\n  application_session: ApplicationSession;\n  override_by: {\n    application_status: string;\n    comment: string;\n    date: string;\n    user_id: string;\n  };\n}\n\nexport enum ApplicationStates {\n  // When the application has been created, but the\n  // Not confirmed\n  Initiated = \"initiated\",\n\n  // When there is missing info like location\n  Incomplete = \"incomplete\",\n\n  // When requirement are not filled up to short listing\n  Rejected = \"rejected\",\n\n  // When docs wait for validation\n  Pending = \"pending\",\n\n  // application match with position requiments\n  Shortlisted = \"shortlisted\",\n\n  // Finishing all position exams\n  Pass = \"pass\",\n\n  // Failed exams\n  Failed = \"failed\",\n\n  // When got placed\n  Placed = \"placed\",\n}\n\nexport const ApplicationStatesDescription: {\n  key: ApplicationStates;\n  caption: string;\n}[] = [\n  { key: ApplicationStates.Initiated, caption: \"Initiated\" },\n  { key: ApplicationStates.Failed, caption: \"Failed\" },\n  { key: ApplicationStates.Incomplete, caption: \"Incomplete\" },\n  { key: ApplicationStates.Pending, caption: \"Pending\" },\n  { key: ApplicationStates.Placed, caption: \"Placed\" },\n  { key: ApplicationStates.Rejected, caption: \"Rejected\" },\n  { key: ApplicationStates.Shortlisted, caption: \"Shortlisted\" },\n  { key: ApplicationStates.Pass, caption: \"Passed\" },\n];\n\nexport interface ApplicationPeriodGet {\n  is_active: boolean;\n  application_session_name: string;\n  period: string;\n  application_start_date: string;\n  application_end_date: string;\n  createdAt: string;\n  updatedAt: string;\n  application_session_id: string;\n}\n\nexport interface AdminApplicationsList {\n  exams: {\n    course_id: string;\n    proctoring_type: string;\n    center_id: string;\n    room_id: string;\n    center_name: string;\n    course_name: string;\n    room_number: string;\n  }[];\n  application_status: ApplicationStates;\n  application_history: applicationHistory[];\n  is_deleted: boolean;\n  user_id: string;\n  position: PositionAPI;\n  application_session: ApplicationSession;\n  createdAt: string;\n  updatedAt: string;\n  application_id: string;\n  n_id: string;\n  phone_number: string;\n  email: string;\n  fname: string;\n  lname: string;\n  sex: string;\n  district: string;\n}\n\nexport const getStatusColor = (status: ApplicationStates) => {\n  switch (status) {\n    case ApplicationStates.Initiated:\n      return \"blue\";\n\n    default:\n      return \"gray\";\n  }\n};\n","import React from 'react'\nimport { FaBusinessTime } from 'react-icons/fa';\nimport { ApplicationPeriodGet } from '../../interfaces/application';\nimport { DATE } from '../../utils/functions';\nimport Loading from '../Loading/Loading';\n\ninterface ApplicationPeriodsProps {\n  applicationPeriods: ApplicationPeriodGet[] | null;\n  setSelectedPeriod: (period: ApplicationPeriodGet) => void;\n  showPeriodFilter: (status: boolean) => void;\n}\n\nconst ApplicationPeriods = (props: ApplicationPeriodsProps) => {\n  return (\n    <div className=\"-mt-4\">\n      <input type=\"text\" className=\"input-white border -mt-2 mb-3\" placeholder=\"Search by year, name\" />\n      {props.applicationPeriods === null ? <Loading /> : props.applicationPeriods.map((item, i) => (\n        <div onClick={() => {props.setSelectedPeriod(item); props.showPeriodFilter(false)}} key={i + 1} \n          className={`flex flex-col md:flex-row items-start md:items-center md:justify-between rounded border ${item.is_active === true ? \"bg-blue-50 border-blue-100\" : \"bg-gray-50 border-gray-100 \"} hover:bg-blue-100 hover:border-blue-500 px-2 py-2 cursor-pointer mb-2`}>\n          <div className=\"flex flex-row items-center gap-3\">\n            <FaBusinessTime className={`${item.is_active === true ? \"text-blue-600\" : \"text-gray-500\"} text-4xl`} />\n            <div className=\"flex flex-col\">\n              <div className={`${item.is_active === true ? \"text-blue-600\" : \"text-gray-600\"} font-bold`}>{item.application_session_name}</div>\n              <div className=\"text-sm text-gray-500\"><span>Status: </span><span className={`${item.is_active === true ? \"text-blue-600\" : \"text-gray-600\"}`}>{item.is_active === true ? \"Active\" : \"Expired\"}</span></div>\n            </div>\n          </div>\n          <div className=\"flex flex-col items-start md:items-end md:justify-end\">\n            <div className=\"text-xs md:text-sm text-right text-gray-500\"><span>Start: </span><span className={`${item.is_active === true ? \"text-blue-600\" : \"text-gray-600\"} text-right font-bold`}>{DATE(item.application_start_date, \"DD/MM/YYYY\")}</span></div>\n            <div className=\"text-xs md:text-sm text-right text-gray-500\"><span>End: </span><span className={`${item.is_active === true ? \"text-blue-600\" : \"text-gray-600\"} text-right font-bold`}>{DATE(item.application_end_date, \"DD/MM/YYYY\")}</span></div>\n          </div>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default ApplicationPeriods\n","import React from 'react'\nimport { applicationHistory, ApplicationStatesDescription } from '../../../interfaces/application'\nimport { DATE } from '../../../utils/functions'\n\ninterface ApplicationHistoryProps {\n  applicationHistory: applicationHistory[];\n}\n\nconst ApplicationHistory = (props: ApplicationHistoryProps) => {\n  return (\n    <div className=\"flex flex-col justify-between items-start gap-1 bg-white px-3 py-2\">\n      {/* <span className=\"text-sm text-blue-800 font-bold\">Application status history</span> */}\n      <hr className=\"bg-blue-600\" />\n      <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-3\">\n      {props.applicationHistory !== undefined &&\n        props.applicationHistory.length > 0 && \n        props.applicationHistory.map((item, i) => (\n          <div key={i + 1} className=\"col-span-1 flex flex-col border border-blue-500 rounded px-3 py-2\">\n            <div className=\"flex flex-row gap-2 justify-start items-center text-xs\">\n              <span className=\"text-gray-500\">Date:</span>\n              <span className=\"font-bold\">{DATE(item.date, \"DD/MM/YYYY\")}</span>\n            </div>\n            <div className=\"flex flex-row gap-2 justify-start items-center text-xs\">\n              <span className=\"text-gray-500\">Action:</span>\n              <span className=\"font-bold\">{item.comment}</span>\n            </div>\n            <div className=\"flex flex-row gap-2 justify-start items-center text-xs\">\n              <span className=\"text-gray-500\">Application status:</span>\n              <span className=\"font-bold\">{ApplicationStatesDescription.find(itm => itm.key === item.application_status)?.caption}</span>\n            </div>\n          </div>\n        ))}\n      </div> \n    </div>\n  )\n}\n\nexport default ApplicationHistory\n","import React, { Component } from 'react'\nimport { MdInfo, MdLocationOn } from 'react-icons/md';\nimport { Redirect } from 'react-router-dom';\nimport { applicationPeriodsStoreInterface } from '../../../actions/application_periods';\nimport { candidateExamStoreInterface, InitialExamDetails } from '../../../actions/candidate_exam';\nimport { LocationsDataStoreInterface } from '../../../actions/locations_data';\nimport Loading from '../../../components/Loading/Loading';\nimport { LoadingType } from '../../../components/Loading/LoadingV2';\nimport { applicationExamAPI } from '../../../interfaces/application';\nimport { DATE } from '../../../utils/functions';\nimport { LocationTableInterface } from '../../Application/ExamCenter/ChooseExamCenter';\n\ninterface ExamDetailsProps {\n  locationDetails: applicationExamAPI | undefined;\n  examDetails: InitialExamDetails | null;\n  locationsData: LocationsDataStoreInterface;\n  loadAllLocationsData: (callback: (loading: boolean) => void) => void;\n  setSelectedLocationData: (locationData: LocationTableInterface) => void;\n  periods: applicationPeriodsStoreInterface;\n  loadApplicationPeriods: (callback: (loading: boolean) => void) => void;\n  candidateExam: candidateExamStoreInterface;\n  setSelectedCandidateExam: (exam_id: string) => void;\n  // selectedCourse: course;\n}\ninterface ExamDetailsState {\n  loading: boolean;\n}\n\nclass ExamDetails extends Component<ExamDetailsProps, ExamDetailsState> {\n  constructor(props: ExamDetailsProps) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n      loading: false,\n\t\t};\n\t}\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  }\n  componentDidMount = () => {\n    if (this.props.locationsData.Locations_list === null || this.props.locationsData.Locations_list.length === 0) {\n      this.props.loadAllLocationsData(this.setLoading);\n    }\n    // if (this.props.periods.applicationPeriods === null || this.props.periods.applicationPeriods.length === 0 || this.props.periods.selected_period === null) {\n      this.props.loadApplicationPeriods(this.setLoading);\n    // } \n  }\n  render() {\n    if (this.props.candidateExam.selected_exam_id !== null) {\n      return <Redirect to=\"/do-exam\" />\n    }\n    if (this.props.examDetails === null) {\n      return (\n        <div className=\"bg-yellow-50 text-yellow-800 font-bold rounded px-2 py-4 text-center text-3xl border border-yellow-600 mx-4 my-4\">\n          No Exam details found!\n        </div>\n      )\n    }\n    if (this.props.locationDetails === undefined) {\n      return (\n        <div className=\"bg-yellow-50 text-yellow-800 font-bold rounded px-2 py-4 text-center text-3xl border border-yellow-600 mx-4 my-4\">\n          No exam location details found!\n        </div>\n      )\n    }\n    return (\n      <div>\n        {this.state.loading === true ? \n        <div className=\"px-4 py-4 rounded bg-gray-100\">\n          <Loading type={LoadingType.dark} />\n        </div>:\n        <div>\n          <div className=\"bg-gray-100 rounded mx-2 mb-2 px-2 py-2\">\n            <div className=\"font-bold text-xl text-blue-600 mb-4 flex flex-row items-center justify-between gap-2 bg-white py-2 px-2 rounded\">\n              <div className=\"flex flex-row items-center gap-2\">\n                <MdInfo className=\"text-4xl text-blue-600\" />\n                Exam information\n              </div>\n              <button onClick={() => {\n                // this.props.setSelectedCourse(this.props.selectedCourse);\n                this.props.examDetails && this.props.setSelectedCandidateExam(this.props.examDetails.id)\n              }} type=\"button\" className={`btn ${this.props.candidateExam.selected_exam_id !== null ? \"bg-yellow-700 hover:bg-yellow-900\" : \"bg-blue-600 hover:bg-blue-700\"} text-white cursor-pointer text-base`}>{this.props.candidateExam.selected_exam_id !== null ? \"Return to Exam\" : \"Start Exam\"}</button>\n            </div>\n            <div className=\"grid md:grid-cols-3 gap-4\">\n              <div className=\"col-span-1\">\n                <div className=\"flex flex-col pl-2 border-gray-300 pb-2\">\n                  <span className=\"text-gray-500 text-sm italic\">Exam date:</span>\n                  <span className=\"text-gray-700 font-bold\">{DATE(this.props.examDetails.exam_date, \"DD/MM/YYYY\")}</span>\n                </div>\n              </div>\n              <div className=\"col-span-1\">\n                <div className=\"flex flex-col pl-2 border-gray-300 pb-2\">\n                  <span className=\"text-gray-500 text-sm italic\">Exam start time:</span>\n                  <span className=\"text-gray-700 font-bold\">{this.props.examDetails.start_time}</span>\n                </div>\n              </div>\n              <div className=\"col-span-1\">\n                <div className=\"flex flex-col pl-2 border-gray-300 pb-2\">\n                  <span className=\"text-gray-500 text-sm italic\">Exam duration:</span>\n                  <span className=\"text-gray-700 font-bold\">{this.props.examDetails.duration/60} hours {this.props.examDetails.duration%60 > 0 && <div>{this.props.examDetails.duration%60} mins</div>}</span>\n                </div>\n              </div>\n              <div className=\"col-span-3\">\n                <div className=\"flex flex-col px-2 pb-2\">\n                  <span className=\"text-gray-500 text-sm italic\">Exam description:</span>\n                  <span className=\"text-gray-700 font-bold px-2 py-2 rounded bg-white mt-2\">\n                    {this.props.examDetails.discription}\n                  </span>\n                </div>\n              </div>\n              <div className=\"col-span-3\">\n                <div className=\"flex flex-col px-2 pb-2\">\n                  <span className=\"text-gray-500 text-sm italic\">Terms and conditions / Rules:</span>\n                  <div className=\"px-2 py-2 rounded bg-white mt-2\" dangerouslySetInnerHTML={{__html: this.props.examDetails.termes}}></div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"bg-gray-100 rounded mx-2 mb-2 px-2 py-2\">\n            <div className=\"font-bold text-xl text-blue-600 mb-4 flex flex-row items-center justify-between gap-2 bg-white py-2 px-2 rounded\">\n              <div className=\"flex flex-row items-center gap-2\">\n                <MdLocationOn className=\"text-4xl text-blue-600\" />\n                Examination location\n              </div>\n            </div>\n            <div className=\"grid md:grid-cols-3 gap-4 px-2\">\n              <div className=\"col-span-1\">\n                <div className=\"flex flex-col border-b border-gray-300 pb-2\">\n                  <span className=\"text-gray-500 text-sm italic\">Province:</span>\n                  <span className=\"text-gray-700 font-bold\">{this.props.locationsData.Locations_list && this.props.locationsData.Locations_list.find(itm => this.props.locationDetails !== undefined && itm.center_id === this.props.locationDetails.center_id)?.province_name}</span>\n                </div>\n              </div>\n              <div className=\"col-span-1\">\n                <div className=\"flex flex-col border-b border-gray-300 pb-2\">\n                  <span className=\"text-gray-500 text-sm italic\">District:</span>\n                  <span className=\"text-gray-700 font-bold\">{this.props.locationsData.Locations_list && this.props.locationsData.Locations_list.find(itm => this.props.locationDetails !== undefined && itm.center_id === this.props.locationDetails.center_id)?.district_name}</span>\n                </div>\n              </div>\n              <div className=\"col-span-1\">\n                <div className=\"flex flex-col border-b border-gray-300 pb-2\">\n                  <span className=\"text-gray-500 text-sm italic\">Center: </span>\n                  <span className=\"text-gray-700 font-bold\">{this.props.locationDetails.center_name}</span>\n                </div>\n              </div>\n              <div className=\"col-span-1\">\n                <div className=\"flex flex-col border-b border-gray-300 pb-2\">\n                  <span className=\"text-gray-500 text-sm italic\">Room number: </span>\n                  <span className=\"text-gray-700 font-bold\">{this.props.locationDetails.room_number}</span>\n                </div>\n              </div>\n              <div className=\"col-span-1\">\n                <div className=\"flex flex-col border-b border-gray-300 pb-2\">\n                  <span className=\"text-gray-500 text-sm italic\">Proctoring type</span>\n                  <span className=\"text-gray-700 font-bold\">{this.props.locationDetails.proctoring_type}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>}\n      </div>\n    )\n  }\n}\n\nexport default ExamDetails\n","import React, { Component } from \"react\";\nimport { CgCheckO } from \"react-icons/cg\";\nimport { IoMdInformationCircleOutline } from \"react-icons/io\";\nimport { RiCheckboxBlankCircleFill, RiErrorWarningLine } from \"react-icons/ri\";\nimport { applicationPeriodsStoreInterface } from \"../../../actions/application_periods\";\nimport {\n  candidateExamStoreInterface,\n  InitialExamDetails,\n} from \"../../../actions/candidate_exam\";\nimport { courseStoreInterface } from \"../../../actions/course\";\nimport { positionsStoreInterface } from \"../../../actions/positions\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport {\n  applicationExamAPI,\n  ApplicationStates,\n  GetApplicationsAPI,\n} from \"../../../interfaces/application\";\nimport { course } from \"../../../interfaces/course\";\nimport { UserExamStatus } from \"../../../interfaces/exam\";\nimport { PositionAPI, PositionAPICourse } from \"../../../interfaces/position\";\nimport { DATE } from \"../../../utils/functions\";\nimport { ExamTimeStatus, validateExamDate } from \"../../../utils/question_bank\";\n\ninterface PreparedExamsProps {\n  selectedPosition: PositionAPI;\n  selectedExams: applicationExamAPI[] | null;\n  findExam: (courseId: string) => InitialExamDetails | null;\n  loadingExams: boolean;\n  loadingExamsDone: boolean;\n  setMaxExamModal: (status: boolean) => void;\n  course: courseStoreInterface;\n  setSelectedCourse: (course: course | null) => void;\n  candidateExam: candidateExamStoreInterface;\n  positions: positionsStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n  setSelectedPosition: (position: PositionAPI) => void;\n  setSelectedCandidateExam: (exam_id: string) => void;\n  changeLocation: (item: PositionAPICourse) => void;\n  selectedApplicationDetails: GetApplicationsAPI;\n}\ninterface PreparedExamsState {}\n\nexport class PreparedExams extends Component<\n  PreparedExamsProps,\n  PreparedExamsState\n> {\n  render() {\n    let NotPreparedExamsFilter = this.props.selectedPosition.courses.filter(\n      (itm) =>\n        this.props.candidateExam.user_exams_done.filter(\n          (ex) => ex.course === itm.course_id\n        ).length === 0 && this.props.findExam(itm.course_id) === null\n    );\n    let PreparedExamsFilter = this.props.selectedPosition.courses.filter(\n      (itm) =>\n        this.props.candidateExam.user_exams_done.filter(\n          (ex) => ex.course === itm.course_id\n        ).length === 0 && this.props.findExam(itm.course_id) !== null\n    );\n    let AllPendingExams = [...PreparedExamsFilter, ...NotPreparedExamsFilter];\n    let totalPending =\n      NotPreparedExamsFilter.length + PreparedExamsFilter.length;\n    return (\n      <div className=\"bg-white px-2 py-2\">\n        <div className=\"bg-gray-100 rounded px-2 py-2\">\n          <div className=\"flex flex-row items-center justify-between text-xl mb-3 mx-2\">\n            <span className=\"font-bold \">Waiting exams</span>\n            <span className=\"font-bold bg-white text-blue-600 rounded-full px-2 text-base border border-blue-200\">\n              {this.props.selectedPosition !== null &&\n                this.props.selectedExams !== null &&\n                this.props.loadingExams === false &&\n                totalPending}\n            </span>\n          </div>\n          <div className=\"flex flex-col gap-2\">\n            {this.props.selectedPosition === null ||\n            this.props.selectedExams === null ||\n            this.props.loadingExams === true ? (\n              <Loading />\n            ) : AllPendingExams.length === 0 ? (\n              <div className=\"border border-gray-200 text-gray-400 font-bold rounded-md px-3 py-3 text-center\">\n                <div className=\"flex justify-center items-center w-full text-4xl\">\n                  <IoMdInformationCircleOutline />\n                </div>\n                <div className=\"text-gray-500\">No exams found!</div>\n              </div>\n            ) : (\n              AllPendingExams.map((item, i) => (\n                <div\n                  key={i + 1}\n                  className={`px-3 py-2 rounded group bg-white border`}\n                >\n                  <div className=\"grid md:grid-cols-12 gap-2\">\n                    {/* First col */}\n                    <div className=\"col-span-4 flex fex-row items-center gap-3\">\n                      <div className=\"flex flex-row gap-2 items-center\">\n                        <div\n                          className={`text-gray-300 group-hover:text-white flex flex-row items-center gap-2 text-right ml-2`}\n                        >\n                          {this.props.findExam(item.course_id) !== null ? (\n                            <CgCheckO className=\"text-4xl text-blue-600\" />\n                          ) : (\n                            <RiCheckboxBlankCircleFill className=\"text-4xl text-blue-100\" />\n                          )}\n                        </div>\n                      </div>\n                      <div className=\"flex flex-col\">\n                        <div className={`font-bold text-gray-600 truncate`}>\n                          {item.course_name}\n                        </div>\n                        <div className=\"flex flex-row justify-start items-center gap-2\">\n                          <span className=\"text-gray-500 text-xs\">\n                            Exam date:{\" \"}\n                          </span>\n                          {this.props.findExam(item.course_id) !== null ? (\n                            <div className=\"flex flex-row items-center gap-2\">\n                              {validateExamDate(\n                                this.props.findExam(item.course_id)!.exam_date,\n                                this.props.findExam(item.course_id)!.start_time,\n                                this.props.findExam(item.course_id)!.end_time\n                              ) === ExamTimeStatus.Online ? (\n                                <span className=\"bg-blue-100 text-blue-600 font-bold px-2 rounded-full\">\n                                  {validateExamDate(\n                                    this.props.findExam(item.course_id)!\n                                      .exam_date,\n                                    this.props.findExam(item.course_id)!\n                                      .start_time,\n                                    this.props.findExam(item.course_id)!\n                                      .end_time\n                                  )}\n                                </span>\n                              ) : validateExamDate(\n                                  this.props.findExam(item.course_id)!\n                                    .exam_date,\n                                  this.props.findExam(item.course_id)!\n                                    .start_time,\n                                  this.props.findExam(item.course_id)!.end_time\n                                ) === ExamTimeStatus.Expired ? (\n                                <span className=\"italic text-yellow-700 underline\">\n                                  {validateExamDate(\n                                    this.props.findExam(item.course_id)!\n                                      .exam_date,\n                                    this.props.findExam(item.course_id)!\n                                      .start_time,\n                                    this.props.findExam(item.course_id)!\n                                      .end_time\n                                  )}\n                                </span>\n                              ) : (\n                                <span className=\"italic\">\n                                  {validateExamDate(\n                                    this.props.findExam(item.course_id)!\n                                      .exam_date,\n                                    this.props.findExam(item.course_id)!\n                                      .start_time,\n                                    this.props.findExam(item.course_id)!\n                                      .end_time\n                                  )}\n                                </span>\n                              )}\n                              <span className=\"font-bold text-blue-600 text-sm\">\n                                {DATE(\n                                  this.props.findExam(item.course_id)!\n                                    .exam_date,\n                                  \"DD/MM/YYYY\"\n                                )}\n                              </span>\n                              <span\n                                className={`bg-blue-100 text-blue-600 font-bold px-2 py-1 rounded-full text-sm`}\n                              >\n                                {\n                                  this.props.findExam(item.course_id)!\n                                    .start_time\n                                }\n                              </span>\n                            </div>\n                          ) : (\n                            <span className=\"text-gray-500 text-sm\">\n                              Waiting for preparation\n                            </span>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                    {/* Second col */}\n                    <div className=\"col-span-4 flex flex-col items-start justify-center\">\n                      {this.props.selectedExams === null ? (\n                        \"\"\n                      ) : this.props.selectedExams.find(\n                          (itm) => itm.course_id === item.course_id\n                        ) !== undefined ? (\n                        <>\n                          <div className=\"flex flex-row justify-start items-center gap-2\">\n                            <span className=\"text-gray-500 text-xs\">\n                              Proctoring type:{\" \"}\n                            </span>\n                            <span className=\"text-gray-700 font-bold text-sm\">\n                              {this.props.selectedExams === null\n                                ? \"\"\n                                : this.props.selectedExams.find(\n                                    (itm) => itm.course_id === item.course_id\n                                  ) !== undefined &&\n                                  this.props.selectedExams.find(\n                                    (itm) => itm.course_id === item.course_id\n                                  )?.proctoring_type}\n                            </span>\n                          </div>\n                          <div className=\"flex flex-row justify-start items-center gap-2\">\n                            <span className=\"text-gray-500 text-xs\">\n                              Exam location:{\" \"}\n                            </span>\n                            <span className={`text-gray-700 font-bold text-sm`}>\n                              Center:{\" \"}\n                              {this.props.selectedExams === null ? (\n                                \"\"\n                              ) : this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                ) !== undefined ? (\n                                this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                )?.center_name\n                              ) : (\n                                <span className=\"italic text-xs\">\n                                  No location selected\n                                </span>\n                              )}\n                            </span>\n                            <span className={`text-gray-700 font-bold text-sm`}>\n                              Room:{\" \"}\n                              {this.props.selectedExams === null ? (\n                                \"\"\n                              ) : this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                ) !== undefined ? (\n                                this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                )?.room_number\n                              ) : (\n                                <span className=\"italic text-xs\">\n                                  No location selected\n                                </span>\n                              )}\n                            </span>\n                          </div>\n                        </>\n                      ) : (\n                        <div className=\"flex flex-row gap-2 items-center justify-start\">\n                          <RiErrorWarningLine className=\"text-xl text-yellow-700\" />\n                          <span className=\"text-yellow-700 italic text-sm\">\n                            No location selected\n                          </span>\n                        </div>\n                      )}\n                    </div>\n                    {/* Third col */}\n                    <div className=\"col-span-4 flex items-center justify-start md:justify-end\">\n                      {this.props.selectedExams === null ? (\n                        \"\"\n                      ) : this.props.selectedExams.find(\n                          (itm) => itm.course_id === item.course_id\n                        ) !== undefined ? (\n                        <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                          {this.props.loadingExams === true ||\n                          this.props.loadingExamsDone === true ? (\n                            <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">\n                              Checking...\n                            </div>\n                          ) : (\n                            ((this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            ) === undefined &&\n                              this.props.findExam(item.course_id) !== null &&\n                              validateExamDate(\n                                this.props.findExam(item.course_id)!.exam_date,\n                                this.props.findExam(item.course_id)!.start_time,\n                                this.props.findExam(item.course_id)!.end_time\n                              ) === ExamTimeStatus.Waiting) ||\n                              this.props.findExam(item.course_id) === null) && (\n                              <div\n                                onClick={() => this.props.changeLocation(item)}\n                                className=\"btn text-blue-600 border border-white cursor-pointer group-hover:bg-blue-600 hover:bg-blue-800 group-hover:text-white bg-blue-100 text-sm w-40 text-center\"\n                              >\n                                Change location\n                              </div>\n                            )\n                          )}\n                          {this.props.loadingExams === true ||\n                          this.props.loadingExamsDone === true ? (\n                            <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">\n                              Checking...\n                            </div>\n                          ) : (\n                            this.props.findExam(item.course_id) !== null &&\n                            this.props.findExam(item.course_id)?.course !==\n                              undefined &&\n                            this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            )?.exam_status !== UserExamStatus.Editing &&\n                            validateExamDate(\n                              this.props.findExam(item.course_id)!.exam_date,\n                              this.props.findExam(item.course_id)!.start_time,\n                              this.props.findExam(item.course_id)!.end_time\n                            ) === ExamTimeStatus.Online &&\n                            this.props.selectedApplicationDetails\n                              .application_status ===\n                              ApplicationStates.Shortlisted && (\n                              <div\n                                onClick={() => {\n                                  this.props.course.courses &&\n                                    this.props.setSelectedCourse(\n                                      this.props.course.courses.find(\n                                        (itm) =>\n                                          itm.course_id === item.course_id\n                                      )!\n                                    );\n                                  this.props.findExam(item.course_id) !==\n                                    null &&\n                                    this.setState({\n                                      appointmentDetailsModal: {\n                                        status: true,\n                                        item: this.props.findExam(\n                                          item.course_id\n                                        ),\n                                      },\n                                    });\n                                }}\n                                className=\"btn border border-blue-500 text-blue-600 cursor-pointer hover:bg-blue-600 hover:text-white text-sm text-center\"\n                              >\n                                Details\n                              </div>\n                            )\n                          )}\n                          {this.props.loadingExams === true ||\n                          this.props.loadingExamsDone === true ? (\n                            <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">\n                              Checking...\n                            </div>\n                          ) : (\n                            this.props.periods.selected_period !== null &&\n                            this.props.periods.selected_period.is_active ===\n                              true &&\n                            this.props.findExam(item.course_id) !== null &&\n                            this.props.findExam(item.course_id)?.id !==\n                              undefined &&\n                            validateExamDate(\n                              this.props.findExam(item.course_id)!.exam_date,\n                              this.props.findExam(item.course_id)!.start_time,\n                              this.props.findExam(item.course_id)!.end_time\n                            ) === ExamTimeStatus.Online &&\n                            this.props.selectedApplicationDetails\n                              .application_status ===\n                              ApplicationStates.Shortlisted && (\n                              <div\n                                onClick={() => {\n                                  if (this.props.selectedPosition !== null) {\n                                    if (\n                                      this.props.positions.selected_position ===\n                                        null ||\n                                      this.props.positions.selected_position\n                                        .position_id !==\n                                        this.props.selectedPosition.position_id\n                                    ) {\n                                      this.props.setSelectedPosition(\n                                        this.props.selectedPosition\n                                      );\n                                    }\n                                    this.props.selectedExams !== null &&\n                                      this.props.course.courses &&\n                                      this.props.setSelectedCourse(\n                                        this.props.course.courses.find(\n                                          (itm) =>\n                                            itm.course_id === item.course_id\n                                        )!\n                                      );\n                                    this.props.selectedExams !== null &&\n                                      this.props.findExam(item.course_id) !==\n                                        null &&\n                                      this.props.setSelectedCandidateExam(\n                                        this.props.findExam(item.course_id)!.id\n                                      );\n                                  }\n                                }}\n                                className={`btn border ${\n                                  this.props.candidateExam.user_exams_done.find(\n                                    (itm) => itm.course === item.course_id\n                                  )?.exam_status !== UserExamStatus.Editing\n                                    ? \"border-blue-500 bg-blue-600 hover:text-blue-600\"\n                                    : \"border-green-500 bg-green-600 hover:text-green-600\"\n                                } text-white cursor-pointer hover:bg-white text-sm w-max text-center`}\n                              >\n                                {this.props.candidateExam.user_exams_done.find(\n                                  (itm) => itm.course === item.course_id\n                                )?.exam_status !== UserExamStatus.Editing\n                                  ? \"Start exam\"\n                                  : \"Back to Exam\"}\n                              </div>\n                            )\n                          )}\n                          {this.props.selectedApplicationDetails\n                            .application_status ===\n                            ApplicationStates.Initiated && (\n                            <div className=\"font-semibold text-yellow-800 bg-yellow-100 py-2 px-4 text-base\">\n                              Waiting for shortlisting\n                            </div>\n                          )}\n                        </div>\n                      ) : (\n                        <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) === undefined && (\n                            <div\n                              onClick={() => this.props.changeLocation(item)}\n                              className=\"btn cursor-pointer bg-yellow-700 hover:bg-yellow-50 border border-yellow-700 hover:text-yellow-700 text-white text-sm w-36 text-center\"\n                            >\n                              Choose location\n                            </div>\n                          )}\n                        </div>\n                      )}\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) !== undefined &&\n                        this.props.candidateExam.user_exams_done.find(\n                          (itm) => itm.course === item.course_id\n                        )?.exam_status !== UserExamStatus.Editing && (\n                          <div className=\"flex flex-row gap-2 items-center\">\n                            <div\n                              className={`text-blue-600 flex flex-row items-center gap-2 text-right ml-2`}\n                            >\n                              <div className=\"flex flex-col gap-0\">\n                                <span className=\"text-sm\">Marks</span>\n                                <span className=\"text-lg font-bold -mt-1\">\n                                  {this.props.candidateExam.user_exams_done\n                                    .find(\n                                      (itm) => itm.course === item.course_id\n                                    )\n                                    ?.user_total_marks.toFixed(2)}\n                                  %\n                                </span>\n                              </div>\n                            </div>\n                          </div>\n                        )}\n                    </div>\n                  </div>\n                </div>\n              ))\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PreparedExams;\n","import React, { Component } from \"react\";\nimport { HiInformationCircle } from \"react-icons/hi\";\nimport { IoMdInformationCircleOutline } from \"react-icons/io\";\nimport { MdCheckCircle, MdPauseCircleFilled } from \"react-icons/md\";\nimport { RiCheckboxBlankCircleFill, RiErrorWarningLine } from \"react-icons/ri\";\nimport { applicationPeriodsStoreInterface } from \"../../../actions/application_periods\";\nimport {\n  candidateExamStoreInterface,\n  InitialExamDetails,\n} from \"../../../actions/candidate_exam\";\nimport { courseStoreInterface } from \"../../../actions/course\";\nimport { positionsStoreInterface } from \"../../../actions/positions\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport {\n  applicationExamAPI,\n  ApplicationStates,\n  GetApplicationsAPI,\n} from \"../../../interfaces/application\";\nimport { course } from \"../../../interfaces/course\";\nimport { UserExamStatus } from \"../../../interfaces/exam\";\nimport { PositionAPI } from \"../../../interfaces/position\";\nimport { DATE } from \"../../../utils/functions\";\nimport { ExamTimeStatus, validateExamDate } from \"../../../utils/question_bank\";\n\ninterface ActiveExamsProps {\n  selectedPosition: PositionAPI;\n  selectedExams: applicationExamAPI[] | null;\n  findExam: (courseId: string) => InitialExamDetails | null;\n  loadingExams: boolean;\n  loadingExamsDone: boolean;\n  setMaxExamModal: (status: boolean) => void;\n  course: courseStoreInterface;\n  setSelectedCourse: (course: course | null) => void;\n  candidateExam: candidateExamStoreInterface;\n  positions: positionsStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n  setSelectedPosition: (position: PositionAPI) => void;\n  setSelectedCandidateExam: (exam_id: string) => void;\n  selectedApplicationDetails: GetApplicationsAPI;\n}\ninterface ActiveExamsState {}\n\nexport class ActiveExams extends Component<ActiveExamsProps, ActiveExamsState> {\n  render() {\n    let ExamsDoneFilterTemp = this.props.selectedPosition.courses.filter(\n      (itm) =>\n        this.props.findExam(itm.course_id) !== null &&\n        this.props.candidateExam.user_exams_done.filter(\n          (ex) =>\n            ex.course === itm.course_id &&\n            validateExamDate(ex.exam_date, ex.start_time, ex.end_time) ===\n              ExamTimeStatus.Online\n        ).length > 0\n    );\n    let ActiveExamsFilter = ExamsDoneFilterTemp.filter(\n      (check) =>\n        this.props.candidateExam.user_exams_done.filter(\n          (itm) => itm.course === check.course_id\n        ) !== undefined &&\n        (this.props.candidateExam.user_exams_done.find(\n          (itm) => itm.course === check.course_id\n        )?.exam_status === UserExamStatus.Editing ||\n          this.props.candidateExam.user_exams_done.find(\n            (itm) => itm.course === check.course_id\n          )?.exam_status === UserExamStatus.Paused)\n    );\n    return (\n      <>\n        {ActiveExamsFilter.length > 0 ? (\n          <div className=\"bg-white px-2 py-2\">\n            <div className=\"bg-gray-100 rounded px-2 py-2\">\n              <div className=\"flex flex-row items-center justify-between text-xl mb-3 mx-2\">\n                <span className=\"font-bold \">Active exam</span>\n                <span className=\"font-bold bg-white text-green-600 rounded-full px-2 text-base border border-gray-200\">\n                  {this.props.selectedPosition !== null &&\n                    this.props.selectedExams !== null &&\n                    this.props.loadingExams === false &&\n                    ActiveExamsFilter.length}\n                </span>\n              </div>\n              <div className=\"flex flex-col gap-2\">\n                {this.props.selectedPosition === null ||\n                this.props.selectedExams === null ||\n                this.props.loadingExams === true ? (\n                  <Loading />\n                ) : ActiveExamsFilter.length === 0 ? (\n                  <div className=\"border border-gray-200 text-gray-400 font-bold rounded-md px-3 py-3 text-center\">\n                    <div className=\"flex justify-center items-center w-full text-4xl\">\n                      <IoMdInformationCircleOutline />\n                    </div>\n                    <div className=\"text-gray-500\">No exams found!</div>\n                  </div>\n                ) : (\n                  ActiveExamsFilter.map((item, i) => (\n                    <div\n                      key={i + 1}\n                      className={`px-3 py-2 rounded group bg-white border-2 border-green-600 hover:bg-green-50`}\n                    >\n                      <div className=\"grid md:grid-cols-12 gap-2\">\n                        {/* First col */}\n                        <div className=\"col-span-4 flex fex-row items-center gap-3\">\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) !== undefined &&\n                            this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            )?.exam_status === UserExamStatus.Editing && (\n                              <div className=\"flex flex-row gap-2 items-center\">\n                                <div\n                                  className={`text-green-600 flex flex-row items-center gap-2 text-right ml-2`}\n                                >\n                                  <HiInformationCircle className=\"text-4xl\" />\n                                </div>\n                              </div>\n                            )}\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) !== undefined &&\n                            this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            )?.exam_status === UserExamStatus.Done && (\n                              <div className=\"flex flex-row gap-2 items-center\">\n                                <div\n                                  className={`text-blue-600 flex flex-row items-center gap-2 text-right ml-2`}\n                                >\n                                  <MdCheckCircle className=\"text-4xl\" />\n                                </div>\n                              </div>\n                            )}\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) !== undefined &&\n                            this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            )?.exam_status === UserExamStatus.Removed && (\n                              <div className=\"flex flex-row gap-2 items-center\">\n                                <div\n                                  className={`text-yellow-800 flex flex-row items-center gap-2 text-right ml-2`}\n                                >\n                                  <MdCheckCircle className=\"text-4xl\" />\n                                </div>\n                              </div>\n                            )}\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) !== undefined &&\n                            this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            )?.exam_status === UserExamStatus.Paused && (\n                              <div className=\"flex flex-row gap-2 items-center\">\n                                <div\n                                  className={`text-green-500 flex flex-row items-center gap-2 text-right ml-2`}\n                                >\n                                  <MdPauseCircleFilled className=\"text-4xl\" />\n                                </div>\n                              </div>\n                            )}\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) === undefined &&\n                            this.props.findExam(item.course_id) !== null &&\n                            this.props.findExam(item.course_id)?.id !==\n                              undefined && (\n                              <div className=\"flex flex-row gap-2 items-center\">\n                                <div\n                                  className={`text-blue-600 flex flex-row items-center gap-2 text-right ml-2 animate-ping`}\n                                >\n                                  <HiInformationCircle className=\"text-4xl\" />\n                                </div>\n                              </div>\n                            )}\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) === undefined &&\n                            (this.props.findExam(item.course_id) === null ||\n                              this.props.findExam(item.course_id)?.id ===\n                                undefined) && (\n                              <div className=\"flex flex-row gap-2 items-center\">\n                                <div\n                                  className={`text-gray-300 group-hover:text-white flex flex-row items-center gap-2 text-right ml-2`}\n                                >\n                                  <RiCheckboxBlankCircleFill className=\"text-4xl\" />\n                                </div>\n                              </div>\n                            )}\n                          <div className=\"flex flex-col\">\n                            <div className={`font-bold text-gray-600 truncate`}>\n                              {item.course_name}\n                            </div>\n                            <div className=\"flex flex-row justify-start items-center gap-2\">\n                              <span className=\"text-gray-500 text-xs\">\n                                Exam date:{\" \"}\n                              </span>\n                              <div className=\"flex flex-row items-center gap-2\">\n                                <span className=\"font-bold text-green-600 text-sm\">\n                                  {DATE(\n                                    this.props.findExam(item.course_id)!\n                                      .exam_date,\n                                    \"DD/MM/YYYY\"\n                                  )}\n                                </span>\n                                <span\n                                  className={`bg-gray-100 text-green-600 font-bold px-2 py-1 rounded-full text-sm`}\n                                >\n                                  {\n                                    this.props.findExam(item.course_id)!\n                                      .start_time\n                                  }\n                                </span>\n                                <span\n                                  className={`bg-gray-100 text-gray-800 font-bold px-2 py-1 rounded-full text-sm underline`}\n                                >\n                                  {\n                                    this.props.candidateExam.user_exams_done.find(\n                                      (x) => x.course === item.course_id\n                                    )?.exam_status\n                                  }\n                                </span>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        {/* Second col */}\n                        <div className=\"col-span-4 flex flex-col items-start justify-center\">\n                          {this.props.selectedExams === null ? (\n                            \"\"\n                          ) : this.props.selectedExams.find(\n                              (itm) => itm.course_id === item.course_id\n                            ) !== undefined ? (\n                            <>\n                              <div className=\"flex flex-row justify-start items-center gap-2\">\n                                <span className=\"text-gray-500 text-xs\">\n                                  Proctoring type:{\" \"}\n                                </span>\n                                <span className=\"text-gray-700 font-bold text-sm\">\n                                  {this.props.selectedExams === null\n                                    ? \"\"\n                                    : this.props.selectedExams.find(\n                                        (itm) =>\n                                          itm.course_id === item.course_id\n                                      ) !== undefined &&\n                                      this.props.selectedExams.find(\n                                        (itm) =>\n                                          itm.course_id === item.course_id\n                                      )?.proctoring_type}\n                                </span>\n                              </div>\n                              <div className=\"flex flex-row justify-start items-center gap-2\">\n                                <span className=\"text-gray-500 text-xs\">\n                                  Exam location:{\" \"}\n                                </span>\n                                <span\n                                  className={`text-gray-700 font-bold text-sm`}\n                                >\n                                  Center:{\" \"}\n                                  {this.props.selectedExams === null ? (\n                                    \"\"\n                                  ) : this.props.selectedExams.find(\n                                      (itm) => itm.course_id === item.course_id\n                                    ) !== undefined ? (\n                                    this.props.selectedExams.find(\n                                      (itm) => itm.course_id === item.course_id\n                                    )?.center_name\n                                  ) : (\n                                    <span className=\"italic text-xs\">\n                                      No location selected\n                                    </span>\n                                  )}\n                                </span>\n                                <span\n                                  className={`text-gray-700 font-bold text-sm`}\n                                >\n                                  Room:{\" \"}\n                                  {this.props.selectedExams === null ? (\n                                    \"\"\n                                  ) : this.props.selectedExams.find(\n                                      (itm) => itm.course_id === item.course_id\n                                    ) !== undefined ? (\n                                    this.props.selectedExams.find(\n                                      (itm) => itm.course_id === item.course_id\n                                    )?.room_number\n                                  ) : (\n                                    <span className=\"italic text-xs\">\n                                      No location selected\n                                    </span>\n                                  )}\n                                </span>\n                              </div>\n                            </>\n                          ) : (\n                            <div className=\"flex flex-row gap-2 items-center justify-start\">\n                              <RiErrorWarningLine className=\"text-xl text-yellow-700\" />\n                              <span className=\"text-yellow-700 italic text-sm\">\n                                No location selected\n                              </span>\n                            </div>\n                          )}\n                        </div>\n                        {/* Third col */}\n                        <div className=\"col-span-4 flex items-center justify-start md:justify-end\">\n                          {this.props.selectedExams === null ? (\n                            \"\"\n                          ) : this.props.selectedExams.find(\n                              (itm) => itm.course_id === item.course_id\n                            ) !== undefined ? (\n                            <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                              {this.props.loadingExams === true ||\n                              this.props.loadingExamsDone === true ? (\n                                <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">\n                                  Checking...\n                                </div>\n                              ) : (\n                                this.props.candidateExam.user_exams_done.find(\n                                  (itm) => itm.course === item.course_id\n                                ) === undefined && (\n                                  <div\n                                    onClick={() => {\n                                      this.setState({\n                                        selectedCourse: item,\n                                        centersModal: true,\n                                      });\n                                      this.props.setMaxExamModal(true);\n                                    }}\n                                    className=\"btn text-blue-600 border border-white cursor-pointer group-hover:bg-blue-600 hover:bg-blue-800 group-hover:text-white bg-blue-100 text-sm w-40 text-center\"\n                                  >\n                                    Change location\n                                  </div>\n                                )\n                              )}\n                              {this.props.loadingExams === true ||\n                              this.props.loadingExamsDone === true ? (\n                                <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">\n                                  Checking...\n                                </div>\n                              ) : (\n                                this.props.periods.selected_period !== null &&\n                                this.props.periods.selected_period.is_active ===\n                                  true &&\n                                this.props.findExam(item.course_id) !== null &&\n                                this.props.findExam(item.course_id)?.id !==\n                                  undefined &&\n                                this.props.selectedApplicationDetails\n                                  .application_status ===\n                                  ApplicationStates.Shortlisted && (\n                                  <div\n                                    onClick={() => {\n                                      if (\n                                        this.props.selectedPosition !== null\n                                      ) {\n                                        if (\n                                          this.props.positions\n                                            .selected_position === null ||\n                                          this.props.positions.selected_position\n                                            .position_id !==\n                                            this.props.selectedPosition\n                                              .position_id\n                                        ) {\n                                          this.props.setSelectedPosition(\n                                            this.props.selectedPosition\n                                          );\n                                        }\n                                        this.props.selectedExams !== null &&\n                                          this.props.course.courses &&\n                                          this.props.setSelectedCourse(\n                                            this.props.course.courses.find(\n                                              (itm) =>\n                                                itm.course_id === item.course_id\n                                            )!\n                                          );\n                                        this.props.selectedExams !== null &&\n                                          this.props.findExam(\n                                            item.course_id\n                                          ) !== null &&\n                                          this.props.setSelectedCandidateExam(\n                                            this.props.findExam(item.course_id)!\n                                              .id\n                                          );\n                                      }\n                                    }}\n                                    className={`btn border border-green-500 bg-green-600 hover:text-green-600 text-white cursor-pointer hover:bg-white text-sm w-max text-center`}\n                                  >\n                                    Back to exam\n                                  </div>\n                                )\n                              )}\n                            </div>\n                          ) : (\n                            <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                              {this.props.candidateExam.user_exams_done.find(\n                                (itm) => itm.course === item.course_id\n                              ) === undefined && (\n                                <div\n                                  onClick={() =>\n                                    this.setState({\n                                      selectedCourse: item,\n                                      centersModal: true,\n                                    })\n                                  }\n                                  className=\"btn cursor-pointer bg-yellow-700 hover:bg-yellow-50 border border-yellow-700 hover:text-yellow-700 text-white text-sm w-36 text-center\"\n                                >\n                                  Choose location\n                                </div>\n                              )}\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  ))\n                )}\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div></div>\n        )}\n      </>\n    );\n  }\n}\n\nexport default ActiveExams;\n","import React, { Component } from 'react'\nimport { HiInformationCircle } from 'react-icons/hi';\nimport { IoMdInformationCircleOutline } from 'react-icons/io';\nimport { MdCheckCircle, MdPauseCircleFilled } from 'react-icons/md';\nimport { RiCheckboxBlankCircleFill, RiErrorWarningLine } from 'react-icons/ri';\nimport { applicationPeriodsStoreInterface } from '../../../actions/application_periods';\nimport { candidateExamStoreInterface, InitialExamDetails } from '../../../actions/candidate_exam';\nimport { courseStoreInterface } from '../../../actions/course';\nimport { positionsStoreInterface } from '../../../actions/positions';\nimport Loading from '../../../components/Loading/Loading';\nimport { applicationExamAPI } from '../../../interfaces/application';\nimport { course } from '../../../interfaces/course';\nimport { UserExamStatus } from '../../../interfaces/exam';\nimport { PositionAPI } from '../../../interfaces/position';\nimport { DATE } from '../../../utils/functions';\nimport { ExamTimeStatus, validateExamDate } from '../../../utils/question_bank';\n\ninterface ExamsDoneProps {\n  selectedPosition: PositionAPI;\n  selectedExams: applicationExamAPI[] | null;\n  findExam: (courseId: string) => InitialExamDetails | null;\n  loadingExams: boolean;\n  loadingExamsDone: boolean;\n  setMaxExamModal: (status: boolean) => void;\n  course: courseStoreInterface;\n  setSelectedCourse: (course: course | null) => void;\n  candidateExam: candidateExamStoreInterface;\n  positions: positionsStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n  setSelectedPosition: (position: PositionAPI) => void;\n  setSelectedCandidateExam: (exam_id: string) => void;\n}\ninterface ExamsDoneState {}\n\nexport class ExamsDone extends Component<ExamsDoneProps, ExamsDoneState> {\n  render() {\n    let ExamsDoneFilter = this.props.selectedPosition.courses.filter(itm => \n      this.props.findExam(itm.course_id) !== null && \n      this.props.candidateExam.user_exams_done.filter(ex => \n        ex.course === itm.course_id && (\n          ex.exam_status === UserExamStatus.Done ||\n          ex.exam_status === UserExamStatus.Removed ||\n          validateExamDate(ex.exam_date, ex.start_time, ex.end_time) === ExamTimeStatus.Expired\n        )\n      ).length > 0);\n    return (\n      <div className=\"bg-white px-2 py-2\">\n        <div className=\"bg-gray-100 rounded px-2 py-2\">\n          <div className=\"flex flex-row items-center justify-between text-xl mb-3 mx-2\">\n            <span className=\"font-bold \">Completed exams</span>\n            <span className=\"font-bold bg-white text-gray-600 rounded-full px-2 text-base border border-gray-200\">{this.props.selectedPosition !== null && this.props.selectedExams !== null && this.props.loadingExams === false && ExamsDoneFilter.length}</span>\n          </div>\n          <div className=\"flex flex-col gap-2\">\n            {this.props.selectedPosition === null || this.props.selectedExams === null || this.props.loadingExams === true ? <Loading /> : \n            ExamsDoneFilter.length === 0 ? \n            <div className=\"border border-gray-200 text-gray-400 font-bold rounded-md px-3 py-3 text-center\">\n              <div className=\"flex justify-center items-center w-full text-4xl\">\n                <IoMdInformationCircleOutline />\n              </div>\n              <div className=\"text-gray-500\">No exams found!</div>\n            </div> \n            :\n            ExamsDoneFilter.map((item, i) => (\n              <div key={i + 1} className={`px-3 py-2 rounded group bg-white`}>\n                <div className=\"grid md:grid-cols-12 gap-2\">\n                  {/* First col */}\n                  <div className=\"col-span-4 flex fex-row items-center gap-3\">\n                    {this.props.candidateExam.user_exams_done.find(itm => itm.course === item.course_id) !== undefined && this.props.candidateExam.user_exams_done.find(itm => itm.course === item.course_id)?.exam_status === UserExamStatus.Editing &&\n                    <div className=\"flex flex-row gap-2 items-center\">\n                      <div className={`text-gray-300 flex flex-row items-center gap-2 text-right ml-2`}>\n                        <HiInformationCircle className=\"text-4xl\" />\n                      </div>\n                    </div>}\n                    {this.props.candidateExam.user_exams_done.find(itm => itm.course === item.course_id) !== undefined && this.props.candidateExam.user_exams_done.find(itm => itm.course === item.course_id)?.exam_status === UserExamStatus.Done &&\n                    <div className=\"flex flex-row gap-2 items-center\">\n                      <div className={`text-blue-600 flex flex-row items-center gap-2 text-right ml-2`}>\n                        <MdCheckCircle className=\"text-4xl\" />\n                      </div>\n                    </div>}\n                    {this.props.candidateExam.user_exams_done.find(itm => itm.course === item.course_id) !== undefined && this.props.candidateExam.user_exams_done.find(itm => itm.course === item.course_id)?.exam_status === UserExamStatus.Removed &&\n                    <div className=\"flex flex-row gap-2 items-center\">\n                      <div className={`text-gray-300 flex flex-row items-center gap-2 text-right ml-2`}>\n                        <MdCheckCircle className=\"text-4xl\" />\n                      </div>\n                    </div>}\n                    {this.props.candidateExam.user_exams_done.find(itm => itm.course === item.course_id) !== undefined && this.props.candidateExam.user_exams_done.find(itm => itm.course === item.course_id)?.exam_status === UserExamStatus.Paused &&\n                    <div className=\"flex flex-row gap-2 items-center\">\n                      <div className={`text-gray-300 flex flex-row items-center gap-2 text-right ml-2`}>\n                        <MdPauseCircleFilled className=\"text-4xl\" />\n                      </div>\n                    </div>}\n                    {this.props.candidateExam.user_exams_done.find(itm => itm.course === item.course_id) === undefined && this.props.findExam(item.course_id) !== null && this.props.findExam(item.course_id)?.id !== undefined &&\n                    <div className=\"flex flex-row gap-2 items-center\">\n                      <div className={`text-blue-600 flex flex-row items-center gap-2 text-right ml-2 animate-ping`}>\n                        <HiInformationCircle className=\"text-4xl\" />\n                      </div>\n                    </div>}\n                    {this.props.candidateExam.user_exams_done.find(itm => itm.course === item.course_id) === undefined && (this.props.findExam(item.course_id) === null || this.props.findExam(item.course_id)?.id === undefined) &&\n                    <div className=\"flex flex-row gap-2 items-center\">\n                      <div className={`text-gray-300 group-hover:text-white flex flex-row items-center gap-2 text-right ml-2`}>\n                        <RiCheckboxBlankCircleFill className=\"text-4xl\" />\n                      </div>\n                    </div>}\n                    <div className=\"flex flex-col\">\n                      <div className={`font-bold text-gray-600 truncate`}>{item.course_name}</div>\n                      <div className=\"flex flex-row justify-start items-center gap-2\">\n                        <span className=\"text-gray-500 text-xs\">Exam date: </span>\n                        <div className=\"flex flex-row items-center gap-2\">\n                          <span className=\"font-bold text-gray-800 text-sm\">{DATE(this.props.findExam(item.course_id)!.exam_date, \"DD/MM/YYYY\")}</span>\n                          <span className={`bg-gray-100 text-gray-800 font-bold px-2 py-1 rounded-full text-sm`}>{this.props.findExam(item.course_id)!.start_time}</span>\n                          <span className={`bg-gray-100 text-gray-800 font-bold px-2 py-1 rounded-full text-sm underline`}>\n                            {\n                              this.props.candidateExam.user_exams_done.find(x => x.course === item.course_id) !== undefined ? validateExamDate(\n                                this.props.candidateExam.user_exams_done.find(x => x.course === item.course_id)!.exam_date, \n                                this.props.candidateExam.user_exams_done.find(x => x.course === item.course_id)!.start_time, \n                                this.props.candidateExam.user_exams_done.find(x => x.course === item.course_id)!.end_time\n                              ) === ExamTimeStatus.Expired && \n                              (this.props.candidateExam.user_exams_done.find(x => x.course === item.course_id)?.exam_status === UserExamStatus.Editing ||\n                              this.props.candidateExam.user_exams_done.find(x => x.course === item.course_id)?.exam_status === UserExamStatus.Paused)\n                              ? \"Expired\" : \n                              this.props.candidateExam.user_exams_done.find(x => x.course === item.course_id)?.exam_status :\n                              \"\"\n                            }\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  {/* Second col */}\n                  <div className=\"col-span-4 flex flex-col items-start justify-center\">\n                  {this.props.selectedExams === null ? \"\" : this.props.selectedExams.find(itm => itm.course_id === item.course_id) !== undefined ? \n                    <>\n                      <div className=\"flex flex-row justify-start items-center gap-2\">\n                        <span className=\"text-gray-500 text-xs\">Proctoring type: </span>\n                        <span className=\"text-gray-700 font-bold text-sm\">{this.props.selectedExams === null ? \"\" : this.props.selectedExams.find(itm => itm.course_id === item.course_id) !== undefined && this.props.selectedExams.find(itm => itm.course_id === item.course_id)?.proctoring_type}</span>\n                      </div>\n                      <div className=\"flex flex-row justify-start items-center gap-2\">\n                        <span className=\"text-gray-500 text-xs\">Exam location: </span>\n                        <span className={`text-gray-700 font-bold text-sm`}>Center: {this.props.selectedExams === null ? \"\" : this.props.selectedExams.find(itm => itm.course_id === item.course_id) !== undefined ? this.props.selectedExams.find(itm => itm.course_id === item.course_id)?.center_name : <span className=\"italic text-xs\">No location selected</span>}</span>\n                        <span className={`text-gray-700 font-bold text-sm`}>Room: {this.props.selectedExams === null ? \"\" : this.props.selectedExams.find(itm => itm.course_id === item.course_id) !== undefined ? this.props.selectedExams.find(itm => itm.course_id === item.course_id)?.room_number : <span className=\"italic text-xs\">No location selected</span>}</span>\n                      </div>\n                    </> : \n                    <div className=\"flex flex-row gap-2 items-center justify-start\">\n                      <RiErrorWarningLine className=\"text-xl text-yellow-700\" />\n                      <span className=\"text-yellow-700 italic text-sm\">No location selected</span>\n                    </div>}\n                  </div>\n                  {/* Third col */}\n                  <div className=\"col-span-4 flex items-center justify-start md:justify-end\">\n                  {this.props.selectedExams === null ? \"\" : this.props.selectedExams.find(itm => itm.course_id === item.course_id) !== undefined ? \n                    <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                      {this.props.loadingExams === true || this.props.loadingExamsDone === true ? <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">Checking...</div> : this.props.candidateExam.user_exams_done.find(itm => itm.course === item.course_id) === undefined &&\n                      <div onClick={() => {\n                        this.setState({ selectedCourse: item, centersModal: true });\n                        this.props.setMaxExamModal(true);\n                      }} className=\"btn text-blue-600 border border-white cursor-pointer group-hover:bg-blue-600 hover:bg-blue-800 group-hover:text-white bg-blue-100 text-sm w-40 text-center\">Change location</div>}\n                    </div> : \n                    <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                      {this.props.candidateExam.user_exams_done.find(itm => itm.course === item.course_id) === undefined &&\n                      <div onClick={() => this.setState({ selectedCourse: item, centersModal: true })} className=\"btn cursor-pointer bg-yellow-700 hover:bg-yellow-50 border border-yellow-700 hover:text-yellow-700 text-white text-sm w-36 text-center\">Choose location</div>}\n                    </div>}\n                    {this.props.candidateExam.user_exams_done.find(itm => itm.course === item.course_id) !== undefined && this.props.candidateExam.user_exams_done.find(itm => itm.course === item.course_id)?.exam_status !== UserExamStatus.Editing &&\n                    <div className=\"flex flex-row gap-2 items-center\">\n                      <div className={`text-blue-600 flex flex-row items-center gap-2 text-right ml-2`}>\n                        <div className=\"flex flex-col gap-0\">\n                          <span className=\"text-sm\">Marks</span>\n                          <span className=\"text-lg font-bold -mt-1\">{this.props.candidateExam.user_exams_done.find(itm => itm.course === item.course_id)?.user_total_marks.toFixed(2)}%</span>\n                        </div>\n                      </div>\n                    </div>}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ExamsDone\n","import React, { Component } from \"react\";\n\nimport { Fragment } from \"react\";\nimport { MdClose, MdHistory } from \"react-icons/md\";\nimport { Redirect } from \"react-router-dom\";\nimport ChooseExamCenter, {\n  LocationTableInterface,\n} from \"../Application/ExamCenter/ChooseExamCenter\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadExam,\n  examDataInterface,\n  PrepareExamsStoreInterface,\n  loadExamsList,\n  LocationsDataStoreInterface,\n  loadAllLocationsData,\n  setSelectedLocationData,\n  applicationPeriodsStoreInterface,\n  loadApplicationPeriods,\n  candidateExamStoreInterface,\n  setSelectedCandidateExam,\n  courseStoreInterface,\n  loadCourses,\n  setSelectedCourse,\n  InitializeExamDetails,\n  InitialExamDetails,\n  setSelectedPeriod,\n  setSelectedPosition,\n  positionsStoreInterface,\n  loadExamsDone,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport Loading from \"../../components/Loading/Loading\";\nimport {\n  ExamInterface,\n  examStatus,\n  UserExamStatus,\n} from \"../../interfaces/exam\";\nimport { course, PositionAPI, PositionAPICourse } from \"../../interfaces/index\";\nimport {\n  applicationExamAPI,\n  applicationHistory,\n  ApplicationPeriodGet,\n  ApplicationStates,\n  GetApplicationsAPI,\n} from \"../../interfaces/application\";\nimport { sentExamInterface } from \"../Application/ExamCenter/ExamCenter\";\nimport { BsFileEarmarkText } from \"react-icons/bs\";\nimport { IoMdTrash } from \"react-icons/io\";\nimport ApplicationHistory from \"./ApplicationHistory/ApplicationHistory\";\nimport ExamDetails from \"./ExamDetails/ExamDetails\";\nimport { CheckIfExamDone, findTotalMarks } from \"../../utils/question_bank\";\nimport PreparedExams from \"./ExamStatus/PreparedExams\";\nimport ActiveExams from \"./ExamStatus/ActiveExams\";\nimport ExamsDone from \"./ExamStatus/ExamsDone\";\n\ninterface PostExamsProps {\n  doExam: examDataInterface;\n  auth: Auth;\n  loadExam: (user_id: string, exam: ExamInterface) => void;\n  selectedPosition: PositionAPI;\n  selectedExams: applicationExamAPI[] | null;\n  selected_application: string | null;\n  updateLocation: (application_id: string, exams: sentExamInterface[]) => void;\n  changeLocationError: string | null;\n  loading: boolean;\n  incrementIncomplete: () => void;\n  applicationHistory: applicationHistory[] | undefined;\n  deleteApplication: (id: string) => void;\n  selectedApplicationDetails: GetApplicationsAPI | null;\n  locationsData: LocationsDataStoreInterface;\n  loadAllLocationsData: (callback: (loading: boolean) => void) => void;\n  setSelectedLocationData: (locationData: LocationTableInterface) => void;\n  periods: applicationPeriodsStoreInterface;\n  loadApplicationPeriods: (callback: (loading: boolean) => void) => void;\n  candidateExam: candidateExamStoreInterface;\n  setSelectedCandidateExam: (exam_id: string) => void;\n  course: courseStoreInterface;\n  loadCourses: (callback: (loading: boolean) => void) => void;\n  setSelectedCourse: (course: course | null) => void;\n  InitializeExamDetails: (\n    periodId: string,\n    courseId: string,\n    district_id: string,\n    center_id: string,\n    room_id: string,\n    position_id: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  setSelectedPeriod: (period: ApplicationPeriodGet) => void;\n  positions: positionsStoreInterface;\n  setSelectedPosition: (position: PositionAPI) => void;\n  loadExamsDone: (\n    periodId: string,\n    userId: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  setMaxExamModal: (status: boolean) => void;\n  setDisplayDetailsModal: (status: boolean) => void;\n}\ninterface PostExamsState {\n  appointmentDetailsModal: {\n    status: boolean;\n    item: InitialExamDetails | null;\n  };\n  redirect: boolean;\n  displayResults: boolean;\n  changeLocation: {\n    status: boolean;\n    location: ExamInterface | null;\n  };\n  centersModal: boolean;\n  selectedCourse: course | null;\n  selectedLocation: applicationExamAPI | null;\n  applicationHistoryState: boolean;\n  loading: boolean;\n  loadingExams: boolean;\n  loadingExamsDone: boolean;\n}\n\nclass _PostExams extends Component<PostExamsProps, PostExamsState> {\n  constructor(props: PostExamsProps) {\n    super(props);\n\n    this.state = {\n      appointmentDetailsModal: {\n        status: false,\n        item: null,\n      },\n      redirect: false,\n      displayResults: false,\n      changeLocation: {\n        status: false,\n        location: null,\n      },\n      centersModal: false,\n      selectedCourse: null,\n      selectedLocation: null,\n      applicationHistoryState: false,\n      loading: false,\n      loadingExams: false,\n      loadingExamsDone: true,\n    };\n  }\n\n  renderExam = (user_id: string, exam: ExamInterface) => {\n    exam.status = examStatus.Editing;\n    this.props.loadExam(user_id, exam);\n    this.setState({ redirect: true });\n  };\n\n  closeModal = () => {\n    this.setState({ centersModal: false });\n    this.props.setMaxExamModal(false);\n  };\n\n  updateLocationFunction = (exams: sentExamInterface[]) => {\n    if (this.props.selected_application !== null) {\n      this.props.updateLocation(this.props.selected_application, exams);\n    }\n  };\n\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  };\n  setLoadingExams = (status: boolean) => {\n    this.setState({ loadingExams: status });\n  };\n  setLoadingExamsDone = (status: boolean) => {\n    this.setState({ loadingExamsDone: status });\n  };\n\n  numberOfIncomplete = (\n    exams: sentExamInterface[],\n    courses: {\n      course_name: string;\n      course_code: string;\n      description: string;\n      school_levels: string[];\n      course_id: string;\n    }[]\n  ) => {\n    let count: number = 0;\n    for (let i in courses) {\n      if (\n        exams.filter((item) => item.course_id === courses[i].course_id)\n          .length === 0\n      ) {\n        count = count + 1;\n      }\n    }\n    return count;\n  };\n\n  findLocation = (\n    course_id: string,\n    course_name: string,\n    course_code: string,\n    location: LocationTableInterface,\n    exam_id: string\n  ) => {\n    return this.updateLocationFunction([\n      {\n        course_id: course_id,\n        proctoring_type: \"Center\",\n        center_id: location.center_id,\n        district_id: location.district_id,\n      },\n    ]);\n  };\n\n  findExam = (courseId: string) => {\n    if (this.props.candidateExam.user_exams_temp !== null) {\n      let current_temp = this.props.candidateExam.user_exams_temp.find(\n        (itm) => itm.course === courseId\n      );\n      let testDone = this.props.candidateExam.user_exams_done.find(\n        (itm) => itm.course === courseId\n      );\n      if (\n        current_temp !== undefined &&\n        (testDone === undefined ||\n          testDone.exam_status === UserExamStatus.Editing ||\n          testDone.exam_status === UserExamStatus.Paused ||\n          testDone.exam_status === UserExamStatus.Done ||\n          testDone.exam_status === UserExamStatus.Removed)\n      ) {\n        return current_temp;\n      }\n    }\n    return null;\n  };\n\n  findCourse = (course_id: string): applicationExamAPI | null => {\n    if (this.props.selectedExams !== null) {\n      let x: applicationExamAPI | null | undefined =\n        this.props.selectedExams.find(\n          (itm) =>\n            this.state.appointmentDetailsModal && itm.course_id === course_id\n        );\n      if (x !== undefined && x !== null) {\n        return x;\n      }\n    }\n    return null;\n  };\n\n  pendingCourses = () => {\n    let count = 0;\n    for (let course of this.props.selectedPosition.courses) {\n      if (this.props.candidateExam.user_exams_temp !== null) {\n        // let current_temp = this.props.candidateExam.user_exams_temp.find(itm => itm.course === course.course_id);\n        let testDone = this.props.candidateExam.user_exams_done.find(\n          (itm) => itm.course === course.course_id\n        );\n        if (testDone === undefined) {\n          count = count + 1;\n        }\n      }\n    }\n    return count;\n  };\n\n  changeLocation = (item: PositionAPICourse) => {\n    this.setState({ selectedCourse: item, centersModal: true });\n    this.props.setMaxExamModal(true);\n  };\n\n  InitializationFn = () => {\n    if (\n      this.props.periods.selected_period !== null &&\n      this.props.selectedPosition !== null\n    ) {\n      this.props.loadExamsDone(\n        this.props.periods.selected_period.application_session_id,\n        this.props.auth.user.user_id,\n        this.setLoadingExamsDone\n      );\n      // if (this.state.loadingExamsDone === false) {\n      for (let course of this.props.selectedPosition.courses) {\n        let testDone = this.props.candidateExam.user_exams_temp.find(\n          (itm) => itm.course === course.course_id\n        );\n        if (testDone === undefined) {\n          let center_id = this.props.selectedExams?.find(\n            (itm) => itm.course_id === course.course_id\n          );\n          if (center_id !== undefined) {\n            this.props.InitializeExamDetails(\n              this.props.periods.selected_period.application_session_id,\n              course.course_id,\n              center_id.district_id,\n              center_id.center_id,\n              center_id.room_id,\n              this.props.selectedPosition.position_id,\n              this.setLoadingExams\n            );\n          }\n        }\n      }\n      // }\n    }\n  };\n\n  componentDidMount = () => {\n    this.props.loadApplicationPeriods(this.setLoading);\n    if (\n      this.props.course.courses === null ||\n      this.props.course.courses.length === 0\n    ) {\n      this.props.loadCourses(this.setLoading);\n    }\n    this.InitializationFn();\n    if (this.props.doExam.exam_answers) {\n      if (this.props.doExam.exam_answers.status === examStatus.Editing) {\n        this.setState({ redirect: true });\n      }\n    }\n  };\n\n  render() {\n    if (this.props.candidateExam.selected_exam_id !== null) {\n      return <Redirect to=\"/do-exam\" />;\n    }\n    if (this.state.redirect === true) {\n      return <Redirect to=\"/do-exam\" />;\n    }\n    if (\n      this.props.loading === true ||\n      this.state.loadingExams === true ||\n      this.state.loadingExamsDone === true\n    ) {\n      return (\n        <div className=\"bg-white border my-4 mx-4 rounded px-4 py-4 flex flex-col\">\n          <span className=\"mx-4 animate-pulse\">Loading, Please wait...</span>\n          <Loading />\n        </div>\n      );\n    }\n    return this.props.selectedExams === null ? (\n      \"No result found!\"\n    ) : (\n      <Fragment>\n        {this.state.appointmentDetailsModal.status === true &&\n        this.state.appointmentDetailsModal.item !== null ? (\n          <>\n            <div className=\"animate__animated animate__fadeInUp animate__faster mt-2 mx-2 rounded-t-md border border-blue-300\">\n              <div className=\"flex flex-row gap-4 items-center justify-between bg-blue-100 py-2 px-2 mb-2\">\n                <div className=\"flex flex-row gap-2 items-center justify-between w-full pl-2\">\n                  <span className=\"font-bold text-xl text-gray-800\">\n                    Exam:{\" \"}\n                    {this.state.appointmentDetailsModal.item !== null && (\n                      <>\n                        {\n                          this.findCourse(\n                            this.state.appointmentDetailsModal.item!.course\n                          )?.course_name\n                        }\n                      </>\n                    )}\n                  </span>\n                  <div className=\"bg-white hover:text-yellow-700 hover:bg-white rounded-full p-1 h-10 w-10 border-2 border-white hover:border-yellow-600 flex items-center justify-center\">\n                    <MdClose\n                      className=\"cursor-pointer font-extrabold text-3xl\"\n                      onClick={() =>\n                        this.setState({\n                          appointmentDetailsModal: {\n                            status: false,\n                            item: null,\n                          },\n                          displayResults: false,\n                        })\n                      }\n                    />\n                  </div>\n                </div>\n              </div>\n              {this.findExam(this.state.appointmentDetailsModal.item.course) ===\n              null ? (\n                <div className=\"text-yellow-700 font-bold text-center text-3xl bg-yellow-50 border border-yellow-200 rounded px-4 py-4 mx-4 my-4\">\n                  No exam found for selected course\n                </div>\n              ) : this.props.periods.applicationPeriods &&\n                (this.props.periods.applicationPeriods.find(\n                  (itm) =>\n                    this.state.appointmentDetailsModal.item &&\n                    itm.application_session_id ===\n                      this.state.appointmentDetailsModal.item.period\n                )?.is_active === false ||\n                  this.props.periods.applicationPeriods.find(\n                    (itm) =>\n                      this.state.appointmentDetailsModal.item &&\n                      itm.application_session_id ===\n                        this.state.appointmentDetailsModal.item.period\n                  )?.is_active === undefined) ? (\n                <div className=\"text-yellow-700 font-bold text-center text-3xl bg-yellow-50 border border-yellow-200 rounded px-4 py-4 mx-4 my-4 flex flex-col items-center\">\n                  <div>No exam for the selected period</div>\n                  <div\n                    onClick={() =>\n                      this.props.loadApplicationPeriods(this.setLoading)\n                    }\n                    className=\"btn bg-white text-gray-700 w-max text-base border border-gray-700 mt-4 cursor-pointer\"\n                  >\n                    Reload\n                  </div>\n                </div>\n              ) : (\n                <ExamDetails\n                  locationDetails={this.props.selectedExams.find(\n                    (itm) =>\n                      this.state.appointmentDetailsModal.item &&\n                      itm.course_id ===\n                        this.state.appointmentDetailsModal.item.course\n                  )}\n                  examDetails={this.findExam(\n                    this.state.appointmentDetailsModal.item.course\n                  )}\n                  locationsData={this.props.locationsData}\n                  loadAllLocationsData={this.props.loadAllLocationsData}\n                  setSelectedLocationData={this.props.setSelectedLocationData}\n                  periods={this.props.periods}\n                  loadApplicationPeriods={this.props.loadApplicationPeriods}\n                  candidateExam={this.props.candidateExam}\n                  setSelectedCandidateExam={this.props.setSelectedCandidateExam}\n                />\n              )}\n            </div>\n          </>\n        ) : this.state.centersModal === true &&\n          this.state.selectedCourse !== null ? (\n          <div className=\"animate__animated animate__fadeInUp animate__faster mt-2 mx-2 rounded-t-md border border-blue-300\">\n            <div className=\"flex flex-row gap-4 items-center justify-between bg-blue-100 py-2 px-2 mb-2\">\n              <div className=\"flex flex-col w-full\">\n                <div className=\"flex flex-row gap-2 items-center justify-between w-full pl-2\">\n                  <span className=\"font-bold text-xl text-gray-800\">\n                    Change exam location\n                  </span>\n                  <div className=\"bg-white hover:text-yellow-700 hover:bg-white rounded-full p-1 h-10 w-10 border-2 border-white hover:border-yellow-600 flex items-center justify-center\">\n                    <MdClose\n                      className=\"cursor-pointer font-extrabold text-3xl\"\n                      onClick={() => {\n                        this.setState({\n                          centersModal: false,\n                          selectedCourse: null,\n                        });\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <ChooseExamCenter\n              positionCourses={this.state.selectedCourse}\n              addLocation={this.findLocation}\n              closeModal={this.closeModal}\n            />\n          </div>\n        ) : this.state.applicationHistoryState === true ? (\n          this.props.applicationHistory === undefined ? (\n            <div className=\"text-yellow-700 font-bold text-2xl text-center\">\n              No application history found!\n            </div>\n          ) : (\n            <div className=\"animate__animated animate__fadeInUp animate__faster bg-white mt-2 mx-2 rounded-t-md border border-blue-300\">\n              <div className=\"flex flex-row gap-4 items-center justify-between bg-blue-100 py-2 px-2\">\n                <div className=\"flex flex-row gap-2 items-center justify-between w-full pl-2\">\n                  <span className=\"font-bold text-xl text-gray-800\">\n                    Application history\n                  </span>\n                  <div className=\"bg-white hover:text-yellow-700 hover:bg-white rounded-full p-1 h-10 w-10 border-2 border-white hover:border-yellow-600 flex items-center justify-center\">\n                    <MdClose\n                      className=\"cursor-pointer font-extrabold text-3xl\"\n                      onClick={() =>\n                        this.setState({ applicationHistoryState: false })\n                      }\n                    />\n                  </div>\n                </div>\n              </div>\n              <ApplicationHistory\n                applicationHistory={this.props.applicationHistory}\n              />\n            </div>\n          )\n        ) : (\n          <div className=\"\">\n            <div className=\"px-2 md:py-2\">\n              <div className=\"flex flex-col md:flex-row justify-between items-center md:items-center\">\n                <div className=\"flex flex-row items-center gap-3 mb-3 pt-4 lg:pt-0\">\n                  <span className=\"bg-blue-50  text-blue-700 font-bold rounded-md px-3 py-1 mt-0\">\n                    Status:{\" \"}\n                    {this.props.selectedApplicationDetails?.application_status}\n                  </span>\n                  <div\n                    onClick={() =>\n                      this.setState({ applicationHistoryState: true })\n                    }\n                    className=\"btn bg-gray-100 text-gray-600 border border-gray-300 text-sm flex flex-row items-center gap-2 cursor-pointer hover:border-blue-500 hover:bg-blue-50 hover:text-blue-600 md:mt-0\"\n                  >\n                    <MdHistory className=\"text-xl\" />\n                    <span>View application history</span>\n                  </div>\n                </div>\n                <div\n                  className={`grid ${\n                    this.pendingCourses() > 0 ? \"grid-cols-3\" : \"grid-cols-2\"\n                  } gap-4`}\n                >\n                  <div className=\"col-span-1 flex justify-start md:justify-end\">\n                    <div className=\"flex flex-row items-center\">\n                      <div className=\"flex flex-col\">\n                        <span className=\"text-xs md:text-md text-gray-500 font-bold text-left md:text-right\">\n                          Total\n                        </span>\n                        <span className=\"text-xl md:text-xl font-bold text-gray-700 text-left md:text-right\">\n                          {this.props.selectedExams.length}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  {this.pendingCourses() > 0 && (\n                    <div className=\"col-span-1 flex justify-start md:justify-end\">\n                      <div className=\"flex flex-row items-center\">\n                        <div className=\"flex flex-col\">\n                          <span className=\"text-xs md:text-md text-gray-500 font-bold text-left md:text-right\">\n                            Pending\n                          </span>\n                          <span className=\"text-xl md:text-xl font-bold text-gray-700 text-left md:text-right\">\n                            {this.props.selectedPosition !== null &&\n                              this.pendingCourses()}\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                  <div className=\"col-span-1 flex justify-start md:justify-end\">\n                    <div className=\"flex flex-row items-center\">\n                      <div className=\"flex flex-col\">\n                        <span className=\"text-xs md:text-md text-gray-500 font-bold text-left md:text-right\">\n                          Total marks\n                        </span>\n                        {\n                          // this.state.loadingExams === true || this.state.loadingExamsDone === true ? <span>Wait...</span> :\n                          <span className=\"text-xl md:text-xl font-bold text-gray-700 text-left md:text-right\">\n                            {(\n                              parseInt(\n                                findTotalMarks(\n                                  this.props.selectedPosition.courses,\n                                  this.props.candidateExam.user_exams_done\n                                )\n                              ) / this.props.selectedPosition.courses.length\n                            ).toFixed(1)}\n                            %\n                          </span>\n                        }\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"font-bold flex flex-col md:flex-row items-start md:items-center justify-start md:justify-between gap-2\">\n                {this.props.selectedApplicationDetails &&\n                this.props.selectedApplicationDetails.application_status !==\n                  ApplicationStates.Rejected ? (\n                  <div className=\"text-xl flex flex-row items-center gap-2\">\n                    <BsFileEarmarkText className=\"text-2xl\" />\n                    <span>Exams list: </span>\n                  </div>\n                ) : (\n                  <div></div>\n                )}\n                {this.state.loadingExams === false &&\n                  this.state.loadingExamsDone === false &&\n                  CheckIfExamDone(\n                    this.props.selectedPosition.courses,\n                    this.props.candidateExam.user_exams_done\n                  ) === false && (\n                    <div\n                      onClick={() =>\n                        this.props.selected_application &&\n                        this.props.deleteApplication(\n                          this.props.selected_application\n                        )\n                      }\n                      className=\"btn flex flex-row gap-2 items-center text-red-700 bg-red-50 cursor-pointer hover:bg-red-100 hover:text-red-900\"\n                    >\n                      <IoMdTrash className=\"text-xl \" />\n                      <span className=\"text-sm\">Remove application</span>\n                    </div>\n                  )}\n              </div>\n            </div>\n            {this.props.selectedApplicationDetails &&\n              this.props.selectedApplicationDetails.application_status !==\n                ApplicationStates.Rejected && (\n                <>\n                  <ActiveExams\n                    selectedPosition={this.props.selectedPosition}\n                    selectedExams={this.props.selectedExams}\n                    findExam={this.findExam}\n                    loadingExams={this.state.loadingExams}\n                    loadingExamsDone={this.state.loadingExamsDone}\n                    setMaxExamModal={this.props.setMaxExamModal}\n                    course={this.props.course}\n                    setSelectedCourse={this.props.setSelectedCourse}\n                    candidateExam={this.props.candidateExam}\n                    positions={this.props.positions}\n                    periods={this.props.periods}\n                    setSelectedPosition={this.props.setSelectedPosition}\n                    setSelectedCandidateExam={\n                      this.props.setSelectedCandidateExam\n                    }\n                    selectedApplicationDetails={\n                      this.props.selectedApplicationDetails\n                    }\n                  />\n                  <PreparedExams\n                    selectedPosition={this.props.selectedPosition}\n                    selectedExams={this.props.selectedExams}\n                    findExam={this.findExam}\n                    loadingExams={this.state.loadingExams}\n                    loadingExamsDone={this.state.loadingExamsDone}\n                    setMaxExamModal={this.props.setMaxExamModal}\n                    course={this.props.course}\n                    setSelectedCourse={this.props.setSelectedCourse}\n                    candidateExam={this.props.candidateExam}\n                    positions={this.props.positions}\n                    periods={this.props.periods}\n                    setSelectedPosition={this.props.setSelectedPosition}\n                    setSelectedCandidateExam={\n                      this.props.setSelectedCandidateExam\n                    }\n                    changeLocation={this.changeLocation}\n                    selectedApplicationDetails={\n                      this.props.selectedApplicationDetails\n                    }\n                  />\n                  <ExamsDone\n                    selectedPosition={this.props.selectedPosition}\n                    selectedExams={this.props.selectedExams}\n                    findExam={this.findExam}\n                    loadingExams={this.state.loadingExams}\n                    loadingExamsDone={this.state.loadingExamsDone}\n                    setMaxExamModal={this.props.setMaxExamModal}\n                    course={this.props.course}\n                    setSelectedCourse={this.props.setSelectedCourse}\n                    candidateExam={this.props.candidateExam}\n                    positions={this.props.positions}\n                    periods={this.props.periods}\n                    setSelectedPosition={this.props.setSelectedPosition}\n                    setSelectedCandidateExam={\n                      this.props.setSelectedCandidateExam\n                    }\n                  />\n                </>\n              )}\n          </div>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  doExam,\n  prepareExam,\n  locationsData,\n  periods,\n  candidateExam,\n  course,\n  positions,\n}: StoreState): {\n  auth: Auth;\n  doExam: examDataInterface;\n  prepareExam: PrepareExamsStoreInterface;\n  locationsData: LocationsDataStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n  candidateExam: candidateExamStoreInterface;\n  course: courseStoreInterface;\n  positions: positionsStoreInterface;\n} => {\n  return {\n    auth: auth,\n    doExam: doExam,\n    prepareExam: prepareExam,\n    locationsData: locationsData,\n    periods: periods,\n    candidateExam: candidateExam,\n    course: course,\n    positions: positions,\n  };\n};\n\nconst PostExams = connect(mapStateToProps, {\n  loadExam,\n  loadExamsList,\n  loadAllLocationsData,\n  setSelectedLocationData,\n  loadApplicationPeriods,\n  setSelectedCandidateExam,\n  loadCourses,\n  setSelectedCourse,\n  InitializeExamDetails,\n  setSelectedPeriod,\n  setSelectedPosition,\n  loadExamsDone,\n})(_PostExams);\n\nexport default PostExams;\n","import React, { Component, Fragment } from \"react\";\nimport { MdAdd } from \"react-icons/md\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  initiateApplication,\n  removeLocation,\n  loadApplicationPeriods,\n  applicationPeriodsStoreInterface,\n  setSelectedPeriod,\n  System,\n  PushPopupAlert,\n  positionsStoreInterface,\n  loadAllPositions,\n  FC_Access,\n  CandidateApplicationsStoreInterface,\n  LoadCandidateApplications,\n  candidateExamStoreInterface,\n  InitializeExamDetails,\n  loadExamsDone,\n  setSelectedPosition,\n  setSelectedCourse,\n  courseStoreInterface,\n  setSelectedCandidateExam,\n  examDataInterface,\n  AddUserApplication,\n  RemoveUserApplication,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport {\n  applicationStoreInterface,\n  initialApplicationInterface,\n} from \"../../actions/application\";\nimport { ApplicationStepsTypes } from \"../Application/ApplicationSteps/ApplicationSteps\";\nimport {\n  applicationExamAPI,\n  ApplicationPeriodGet,\n  ApplicationStates,\n  ApplicationStatesDescription,\n  GetApplicationsAPI,\n  NoRoomsInterface,\n} from \"../../interfaces/application\";\nimport Exams from \"./Exams\";\nimport { course, PositionAPI } from \"../../interfaces/index\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport { sentExamInterface } from \"../Application/ExamCenter/ExamCenter\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { AiOutlineFilter } from \"react-icons/ai\";\nimport { IoBriefcase, IoBriefcaseOutline } from \"react-icons/io5\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport {\n  SideNavigation,\n  MainItem,\n} from \"../../components/Navigation/SideNavigation\";\nimport { BsCaretRightFill } from \"react-icons/bs\";\nimport LoadingV2, { LoadingType } from \"../../components/Loading/LoadingV2\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { RiFileForbidLine } from \"react-icons/ri\";\nimport { IoMdList } from \"react-icons/io\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport ApplicationPeriods from \"../../components/ApplicationPeriods/ApplicationPeriods\";\nimport { DATE } from \"../../utils/functions\";\nimport { UserAccessList } from \"../../utils/auth_access\";\nimport { BiArrowBack } from \"react-icons/bi\";\nimport { InitializeExamsDone } from \"../../utils/question_bank\";\nimport { examStatus } from \"../../interfaces/exam\";\n\ninterface ApplicationsDashboardState {\n  selectedPosition: PositionAPI | null;\n  selectedExams: applicationExamAPI[] | null;\n  applications: GetApplicationsAPI[] | [] | null;\n  selected_application: string | null;\n  noRoomsApplication: NoRoomsInterface[] | null | [];\n  loading: boolean;\n  applicationError: string | null;\n  number_of_incomplete: number;\n  applicationDetails: boolean;\n  selectedApplicationStatus: ApplicationStates | null;\n  showPeriodFilter: boolean;\n  maxExamModal: boolean;\n  loadingErr: string;\n  displayDetailsModal: boolean;\n}\ninterface ApplicationsDashboardProps {\n  auth: Auth;\n  application: applicationStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n  initiateApplication: (initial: initialApplicationInterface) => void;\n  removeLocation: (course_id: string) => void;\n  loadApplicationPeriods: (callback: (loading: boolean) => void) => void;\n  setSelectedPeriod: (period: ApplicationPeriodGet) => void;\n  system: System;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  positions: positionsStoreInterface;\n  loadAllPositions: (callback: (loading: boolean) => void) => void;\n  FC_Access: Function;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  LoadCandidateApplications: (\n    user_id: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  InitializeExamDetails: (\n    periodId: string,\n    courseId: string,\n    district_id: string,\n    center_id: string,\n    room_id: string,\n    position_id: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  loadExamsDone: (\n    periodId: string,\n    userId: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  candidateExam: candidateExamStoreInterface;\n  setSelectedPosition: (position: PositionAPI) => void;\n  course: courseStoreInterface;\n  setSelectedCourse: (course: course | null) => void;\n  setSelectedCandidateExam: (exam_id: string) => void;\n  doExam: examDataInterface;\n  AddUserApplication: (application: GetApplicationsAPI) => void;\n  RemoveUserApplication: (application_id: string) => void;\n}\n\nclass _ApplicationsDashboard extends Component<\n  ApplicationsDashboardProps,\n  ApplicationsDashboardState\n> {\n  constructor(props: ApplicationsDashboardProps) {\n    super(props);\n\n    this.state = {\n      selectedPosition: null,\n      selectedExams: null,\n      applications: null,\n      selected_application: null,\n      noRoomsApplication: null,\n      loading: false,\n      applicationError: null,\n      number_of_incomplete: 0,\n      applicationDetails: false,\n      selectedApplicationStatus: null,\n      showPeriodFilter: false,\n      maxExamModal: false,\n      loadingErr: \"\",\n      displayDetailsModal: false,\n    };\n  }\n\n  setLoading = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  filteredApplications = (\n    applications: GetApplicationsAPI[],\n    Status: ApplicationStates | null,\n    searchPeriod?: ApplicationPeriodGet | null\n  ) => {\n    let appl: GetApplicationsAPI[];\n    if (searchPeriod !== undefined && searchPeriod !== null) {\n      appl = applications.filter(\n        (itm) =>\n          itm.application_session.application_session_id ===\n          searchPeriod.application_session_id\n      );\n    } else {\n      appl = applications;\n    }\n    if (Status === null) {\n      return appl;\n    } else {\n      return appl.filter((item) => item.application_status === Status);\n    }\n  };\n\n  closeApplicationDetails = () => {\n    this.setState({ selected_application: null });\n    this.setState({ selectedPosition: null, selected_application: null });\n    this.setState({ selectedExams: null });\n    this.setState({ displayDetailsModal: false });\n  };\n\n  setDisplayDetailsModal = (status: boolean) => {\n    this.setState({ displayDetailsModal: status });\n  };\n\n  applicationStatuses = (\n    application: GetApplicationsAPI[]\n  ): { title: string; count: number; status: ApplicationStates }[] => {\n    let output: { title: string; count: number; status: ApplicationStates }[] =\n      [];\n    for (let i in ApplicationStatesDescription) {\n      output.push({\n        title: ApplicationStatesDescription[i].caption,\n        count: application.filter(\n          (itm) =>\n            itm.application_status === ApplicationStatesDescription[i].key\n        ).length,\n        status: ApplicationStatesDescription[i].key,\n      });\n    }\n    return output;\n  };\n\n  setMaxExamModal = (status: boolean) => {\n    this.setState({ maxExamModal: status });\n  };\n\n  LoadApplications = async () => {\n    this.setState({ loadingErr: \"\" });\n    this.setState({ number_of_incomplete: 0 });\n    if (this.props.auth.user.user_id) {\n      const selected_position = this.state.selectedPosition;\n      this.setState({ applications: null });\n      this.setState({ selectedPosition: null });\n      this.setState({ selectedExams: null });\n      let response: GetApplicationsAPI[] | null = null;\n      if (\n        this.props.candidateApplications.candidate_applications === null &&\n        this.props.auth.user\n      ) {\n        try {\n          const res = await axios.get<GetApplicationsAPI[]>(\n            `${API.APPLICATION}/application/${this.props.auth.user.user_id}`\n          );\n          if (res.status === 200) {\n            response = res.data;\n            if (res.data.length === 0) {\n              response = [];\n            } else {\n              for (let application of response) {\n                this.props.AddUserApplication(application);\n              }\n            }\n          } else {\n            response = [];\n          }\n        } catch (error: any) {\n          response = [];\n          console.log(\"Appl Err: \", { ...error });\n        }\n      } else {\n        response = this.props.candidateApplications.candidate_applications;\n      }\n      this.setState({ applications: response });\n      if (response !== null) {\n        if (response.length > 0) {\n          // let done = false;\n          for (let i in response) {\n            let courses = response[i].position.courses;\n            let exams = response[i].exams;\n            if (\n              response[i].position.position_id ===\n              selected_position?.position_id\n            ) {\n              this.setState({ selectedPosition: response[i].position });\n              this.setState({ selectedExams: exams });\n            }\n            // Load Exams done\n            InitializeExamsDone(\n              this.props.periods.selected_period,\n              response[i].position,\n              this.props.candidateExam,\n              this.props.loadExamsDone,\n              this.props.auth.user.user_id,\n              this.setLoading,\n              response[i].exams,\n              this.props.InitializeExamDetails,\n              this.setLoading\n            );\n            for (let x in courses) {\n              if (\n                exams.filter((itm) => itm.course_id === courses[x].course_id)\n                  .length === 0 &&\n                response[i].application_status === ApplicationStates.Incomplete\n              ) {\n                this.setState({\n                  selected_application: response[i].application_id,\n                });\n                this.setState({\n                  selectedPosition: response[i].position,\n                  selected_application: response[i].application_id,\n                });\n                this.setState({ selectedExams: response[i].exams });\n                this.setState({ displayDetailsModal: true });\n                this.incrementIncomplete();\n              }\n            }\n          }\n        } else {\n          this.props.LoadCandidateApplications(\n            this.props.auth.user.user_id,\n            this.setLoading\n          );\n        }\n      }\n    }\n  };\n\n  updateLocation = async (\n    application_id: string,\n    exams: sentExamInterface[]\n  ) => {\n    this.setState({ loading: true });\n    this.setState({ applicationError: null });\n    console.log(application_id);\n    for (let i in exams) {\n      try {\n        const res = await axios.post(\n          `${API.APPLICATION}/application/updatemissed`,\n          {\n            application_id: application_id,\n            exams: exams[i],\n          }\n        );\n        if (res.status === 200 && this.state.noRoomsApplication !== null) {\n          this.setState({\n            noRoomsApplication: this.state.noRoomsApplication?.filter(\n              (itm) => itm.course_id !== exams[i].course_id\n            ),\n          });\n        }\n        if (res.status === 200) {\n          this.props.LoadCandidateApplications(\n            this.props.auth.user.user_id,\n            this.setLoading\n          );\n          this.LoadApplications();\n          this.setState({ displayDetailsModal: false });\n          this.setState({ selectedPosition: null, selected_application: null });\n          this.setState({ selectedExams: null });\n          this.props.PushPopupAlert({\n            title: `Location updated successfully`,\n            description:\n              \"Location has updated successfully! You can continue to update before starting of the examination!\",\n            theme: PopupAlertTheme.success,\n          });\n        }\n      } catch (error: any) {\n        if (error.response) {\n          if (error.response.data) {\n            if (error.response.data.errors !== undefined) {\n              if (error.response.data.errors.length > 0) {\n                if (this.state.noRoomsApplication) {\n                  let newArr: sentExamInterface[];\n                  if (error.response.data.errors[0].field !== undefined) {\n                    newArr = this.state.noRoomsApplication?.filter(\n                      (itm) =>\n                        itm.course_id ===\n                        error.response.data.errors[0].field.course_id\n                    );\n                    if (newArr !== undefined) {\n                      for (let i in newArr) {\n                        this.props.removeLocation(newArr[i].course_id);\n                      }\n                    }\n                  }\n                }\n                this.setState({\n                  applicationError: error.response.data.errors[0].message,\n                });\n                this.props.PushPopupAlert({\n                  title: error.response.data.errors[0].message,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n            } else {\n              this.props.PushPopupAlert({\n                title: \"Something went wrong! Please try again\",\n                theme: PopupAlertTheme.danger,\n              });\n              this.setState({\n                applicationError: \"Something went wrong! Please try again\",\n              });\n            }\n          }\n        }\n        console.log(\"Change error: \", { ...error });\n      }\n    }\n    if (this.state.selectedPosition) {\n      this.setState({ selectedPosition: this.state.selectedPosition });\n    }\n    this.setState({ selected_application: application_id });\n    this.setState({ loading: false });\n  };\n\n  incrementIncomplete = () => {\n    this.setState({\n      number_of_incomplete: this.state.number_of_incomplete + 1,\n    });\n  };\n\n  changeLoadingState = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  deleteApplication = async (id: string) => {\n    if (\n      window.confirm(\"Are you sure do you want to delete this application?\") &&\n      id\n    ) {\n      this.changeLoadingState(true);\n      try {\n        await axios.delete(`${API.APPLICATION}/application/${id}`);\n        this.props.RemoveUserApplication(id);\n        this.LoadApplications();\n        this.props.PushPopupAlert({\n          title: `Application deleted successfully!`,\n          theme: PopupAlertTheme.success,\n        });\n        this.setState({ selectedExams: null });\n      } catch (error: any) {\n        this.props.PushPopupAlert({\n          title: `Failed to delete application!`,\n          theme: PopupAlertTheme.warning,\n        });\n      }\n      this.changeLoadingState(false);\n    }\n  };\n\n  setShowFilterStatus = (status: boolean) => {\n    this.setState({ showPeriodFilter: status });\n  };\n\n  componentDidMount = () => {\n    this.props.loadApplicationPeriods(this.changeLoadingState);\n    this.LoadApplications();\n    this.props.loadAllPositions(this.changeLoadingState);\n    if (\n      this.props.application.apply === undefined ||\n      this.props.application.apply.currentStep === ApplicationStepsTypes.Step3\n    ) {\n      this.props.initiateApplication({\n        user_id: this.props.auth.user.user_id,\n        selectedPosition: null,\n        currentStep: ApplicationStepsTypes.Step1,\n        positions: null,\n        doTestStatus: {\n          status: false,\n        },\n        selectedLocation: [],\n      });\n    }\n    // if (this.props.candidateApplications.candidate_applications !== null) {\n    //   if (this.props.candidateApplications.candidate_applications.length > 0) {\n    //     if (this.state.selectedPosition === null) {\n    //       this.setState({ selectedPosition: this.props.candidateApplications.candidate_applications[0].position, selected_application: this.props.candidateApplications.candidate_applications[0].application_id })\n    //     }\n    //     if (this.state.selectedExams === null) {\n    //       this.setState({ selectedExams: this.props.candidateApplications.candidate_applications[0].exams })\n    //     }\n    //   }\n    // }\n  };\n  render() {\n    if (!FC_Access(this.props.auth, UserAccessList.MY_APPLICATION).view) {\n      return <Redirect to=\"/\" />;\n    }\n    if (this.props.candidateExam.selected_exam_id !== null) {\n      return <Redirect to=\"/do-exam\" />;\n    }\n    if (this.props.doExam.exam_answers) {\n      if (\n        this.props.doExam.exam_answers.status === examStatus.Editing ||\n        this.props.doExam.exam_answers.status === examStatus.Paused\n      ) {\n        return <Redirect to=\"/do-exam\" />;\n      }\n    }\n    return (\n      <Fragment>\n        {this.state.selectedPosition !== null &&\n        this.state.selectedExams !== null &&\n        this.state.displayDetailsModal === true ? (\n          <div className=\"border-t border-gray-200 my-2 pb-2 bg-white rounded animate__animated animate__fadeInUp animate__faster\">\n            <div className=\"flex flex-row gap-4 items-center bg-blue-600 rounded-t py-2 px-2\">\n              <div className=\"h-12 w-12 rounded-full bg-blue-500 hover:bg-blue-700 cursor-pointer flex items-center justify-center\">\n                <BiArrowBack\n                  className=\"text-3xl text-white\"\n                  onClick={() => this.closeApplicationDetails()}\n                />\n              </div>\n              <div className=\"flex flex-col\">\n                <span className=\"font-bold text-xl text-white\">\n                  {this.state.selectedPosition.position_title}\n                </span>\n                <span className=\"text-sm text-gray-100 font-normal pl-1\">\n                  {this.props.candidateApplications.candidate_applications !==\n                    null &&\n                    this.state.selectedPosition !== null &&\n                    this.props.candidateApplications.candidate_applications.find(\n                      (itm) =>\n                        itm.position.position_id ===\n                        this.state.selectedPosition?.position_id\n                    )?.application_session.application_session_name}{\" \"}\n                  -{\" \"}\n                  {this.props.candidateApplications.candidate_applications !==\n                    null &&\n                    this.state.selectedPosition !== null &&\n                    this.props.candidateApplications.candidate_applications.find(\n                      (itm) =>\n                        itm.position.position_id ===\n                        this.state.selectedPosition?.position_id\n                    )?.application_session.period}\n                </span>\n              </div>\n            </div>\n            <Exams\n              selectedExams={this.state.selectedExams}\n              selectedPosition={this.state.selectedPosition}\n              selected_application={this.state.selected_application}\n              updateLocation={this.updateLocation}\n              changeLocationError={this.state.applicationError}\n              loading={this.state.loading}\n              incrementIncomplete={this.incrementIncomplete}\n              applicationHistory={\n                this.props.candidateApplications.candidate_applications !==\n                  null && this.state.selectedPosition !== null\n                  ? this.props.candidateApplications.candidate_applications.find(\n                      (itm) =>\n                        itm.position.position_id ===\n                        this.state.selectedPosition?.position_id\n                    )?.application_history\n                  : undefined\n              }\n              deleteApplication={this.deleteApplication}\n              selectedApplicationDetails={\n                this.props.candidateApplications.candidate_applications &&\n                this.props.candidateApplications.candidate_applications.find(\n                  (itm) =>\n                    itm.application_id === this.state.selected_application\n                )!\n              }\n              setMaxExamModal={this.setMaxExamModal}\n              setDisplayDetailsModal={this.setDisplayDetailsModal}\n            />\n          </div>\n        ) : (\n          <>\n            <SideNavigation>\n              {this.props.positions.positions_list === null ? (\n                <div className=\"btn bg-gray-500 text-white mb-4 w-full flex flex-row items-center gap-3 cursor-not-allowed animate__animated animate__zoomIn\">\n                  <RiFileForbidLine className=\"text-2xl text-white\" /> Please\n                  wait...\n                </div>\n              ) : this.props.positions.positions_list.length > 0 &&\n                this.props.periods.applicationPeriods &&\n                this.props.periods.applicationPeriods.filter(\n                  (itm) => itm.is_active === true\n                ).length !== 0 ? (\n                <Link to=\"/apply\">\n                  <div className=\"btn btn-blue text-white mb-4 w-full flex flex-row items-center gap-3 animate__animated animate__zoomIn\">\n                    <MdAdd className=\"text-2xl text-white\" /> Apply\n                  </div>\n                </Link>\n              ) : (\n                <div className=\"btn bg-gray-200 cursor-not-allowed text-gray-500 mb-4 w-full flex flex-row items-center animate__animated animate__zoomIn\">\n                  No vacancies!\n                </div>\n              )}\n              {/* <div className=\"mb-6\"></div> */}\n              {/* <Search data={[1, 2, 3]} /> */}\n              <div\n                onClick={() =>\n                  this.setState({ selectedApplicationStatus: null })\n                }\n                className={`cursor-pointer ${\n                  this.state.selectedApplicationStatus !== null\n                    ? \"text-gray-600 hover:text-blue-600 border border-gray-200 hover:border-blue-600 hover:bg-blue-100 bg-white\"\n                    : \"text-blue-600 border border-blue-600 hover:bg-blue-100 bg-blue-100\"\n                } flex flex-row items-center gap-2 px-2 py-1 rounded font-bold`}\n              >\n                <IoMdList className=\"text-xl\" />\n                <span>\n                  View all (\n                  {this.props.candidateApplications.candidate_applications ===\n                  null\n                    ? 0\n                    : this.props.candidateApplications.candidate_applications\n                        .length}\n                  )\n                </span>\n              </div>\n              <div className=\"pt-1\">\n                {this.props.candidateApplications.candidate_applications &&\n                this.filteredApplications(\n                  this.props.candidateApplications.candidate_applications,\n                  null,\n                  this.props.periods.selected_period\n                ) === null ? (\n                  <Loading />\n                ) : (\n                  this.props.candidateApplications.candidate_applications &&\n                  this.applicationStatuses(\n                    this.filteredApplications(\n                      this.props.candidateApplications.candidate_applications,\n                      null,\n                      this.props.periods.selected_period\n                    )\n                  ).map(\n                    (\n                      itm: {\n                        title: string;\n                        count: number;\n                        status: ApplicationStates;\n                      },\n                      i: number\n                    ) =>\n                      itm.count > 0 && (\n                        <Fragment key={itm.title}>\n                          <div\n                            onClick={() =>\n                              this.setState({\n                                selectedApplicationStatus: itm.status,\n                              })\n                            }\n                          >\n                            <MainItem\n                              title={itm.title}\n                              count={itm.count}\n                              active={\n                                this.state.selectedApplicationStatus ===\n                                itm.status\n                                  ? true\n                                  : false\n                              }\n                            />\n                          </div>\n                        </Fragment>\n                      )\n                  )\n                )}\n              </div>\n            </SideNavigation>\n            <div className=\"px-2\">\n              <div className=\"mt-2 rounded px-3 md:px-4 py-3 md:py-3\">\n                <div className=\"flex flex-col\">\n                  <div className=\"flex flex-col md:flex-row justify-between md:items-center\">\n                    <div className=\"flex flex-col\">\n                      <span className=\"text-blue-600 text-2xl md:text-2xl lg:text-3xl font-bold\">\n                        My Applications{\" \"}\n                        <span className=\"md:hidden\">\n                          (\n                          {this.props.candidateApplications\n                            .candidate_applications &&\n                          this.filteredApplications(\n                            this.props.candidateApplications\n                              .candidate_applications,\n                            this.state.selectedApplicationStatus,\n                            this.props.periods.selected_period\n                          )\n                            ? this.filteredApplications(\n                                this.props.candidateApplications\n                                  .candidate_applications,\n                                this.state.selectedApplicationStatus,\n                                this.props.periods.selected_period\n                              ).length\n                            : 0}\n                          )\n                        </span>\n                      </span>\n                      <div className=\"text-gray-700 font-bold text-xs md:text-sm lg:text-md flex flex-row gap-1 items-center\">\n                        <AiOutlineFilter className=\"text-2xl\" /> Selected period{\" \"}\n                        <span\n                          onClick={() =>\n                            this.setState({ showPeriodFilter: true })\n                          }\n                          className={`px-2 ${\n                            this.props.periods.selected_period !== null\n                              ? \"text-blue-600 hover:bg-blue-100 border-2 border-gray-200 hover:border-blue-600 underline\"\n                              : \"bg-white text-gray-600 hover:bg-gray-100 border border-gray-300\"\n                          }  rounded-full py-1 flex flex-row justify-center items-center font-bold cursor-pointer`}\n                        >\n                          {this.props.periods.selected_period !== null ? (\n                            <>\n                              <BsCaretRightFill className=\"mr-3\" />\n                              {\n                                this.props.periods.selected_period\n                                  .application_session_name\n                              }\n                            </>\n                          ) : (\n                            \"Choose period\"\n                          )}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              {this.state.loadingErr !== \"\" && (\n                <div className=\"bg-yellow-100 text-yellow-700 font-extrabold text-2xl mx-4 px-3 py-3 rounded\">\n                  {this.state.loadingErr}\n                </div>\n              )}\n              <div className=\"mb-2\">\n                <div className=\"grid grid-cols-12 gap-3\">\n                  <div className=\"col-span-12\">\n                    <div className={`grid md:grid-cols-1 lg:grid-cols-1 gap-2`}>\n                      <div className=\"ml-2 -my-2 md:hidden lg:hidden xl:hidden\">\n                        {this.props.positions.positions_list === null ? (\n                          <div className=\"btn bg-gray-500 text-white mb-4 w-full flex flex-row items-center gap-3 animate__animated animate__zoomIn justify-center\">\n                            <RiFileForbidLine className=\"text-2xl text-white\" />{\" \"}\n                            Please wait...\n                          </div>\n                        ) : this.props.positions.positions_list.length > 0 ? (\n                          <Link to=\"/apply\">\n                            <div className=\"btn btn-blue text-white mb-4 w-full flex flex-row items-center gap-3 animate__animated animate__zoomIn justify-center\">\n                              <MdAdd className=\"text-2xl text-white\" /> Create\n                              application\n                            </div>\n                          </Link>\n                        ) : (\n                          <div className=\"btn bg-gray-400 text-white mb-4 w-full flex flex-row items-center gap-3 animate__animated animate__zoomIn justify-center\">\n                            <RiFileForbidLine className=\"text-2xl text-white\" />{\" \"}\n                            No vacancies!\n                          </div>\n                        )}\n                      </div>\n                      {this.props.candidateApplications\n                        .candidate_applications === null ? (\n                        <LoadingV2 type={LoadingType.dark} />\n                      ) : this.filteredApplications(\n                          this.props.candidateApplications\n                            .candidate_applications,\n                          this.state.selectedApplicationStatus,\n                          this.props.periods.selected_period\n                        ).length === 0 ? (\n                        <div className=\"ml-2\">\n                          <NoResult\n                            theme={NoResultThemes.Dark}\n                            value=\"No Applications found!\"\n                            component={\n                              <div className=\"ml-2 -my-2 hidden md:block\">\n                                {this.props.positions.positions_list !== null &&\n                                  this.props.positions.positions_list.length >\n                                    0 &&\n                                  this.props.periods.applicationPeriods &&\n                                  this.props.periods.applicationPeriods.filter(\n                                    (itm) => itm.is_active === true\n                                  ).length !== 0 && (\n                                    <Link to=\"/apply\">\n                                      <div className=\"text-blue-600 font-bold underline mb-2 hover:text-blue-800 animate__animated animate__zoomIn\">\n                                        Click here to create new application\n                                      </div>\n                                    </Link>\n                                  )}\n                              </div>\n                            }\n                          />\n                        </div>\n                      ) : (\n                        this.filteredApplications(\n                          this.props.candidateApplications\n                            .candidate_applications,\n                          this.state.selectedApplicationStatus,\n                          this.props.periods.selected_period\n                        ).map((item, i) => (\n                          <div\n                            onClick={() => {\n                              this.setState({\n                                selectedPosition: item.position,\n                                selected_application: item.application_id,\n                              });\n                              this.setState({ selectedExams: item.exams });\n                              this.setState({ displayDetailsModal: true });\n                            }}\n                            className={`bg-white rounded-md animate__animated animate__fadeIn animate__faster\n                      ${\n                        this.state.selectedPosition?.position_id ===\n                        item.position.position_id\n                          ? \"border-2 border-blue-600 shadow\"\n                          : item.application_status ===\n                            ApplicationStates.Initiated\n                          ? \"border-gray-200 bg-gray-50 hover:border-gray-600\"\n                          : item.application_status ===\n                            ApplicationStates.Rejected\n                          ? \"bg-white border-white\"\n                          : item.application_status ===\n                            ApplicationStates.Shortlisted\n                          ? \"border-gray-200 bg-white hover:border-blue-600\"\n                          : \"bg-white border-yellow-600 hover:border-yellow-500\"\n                      } flex flex-col cursor-pointer font-normal hover:font-bold border-2 ml-2`}\n                          >\n                            <div\n                              className={`grid md:grid-cols-12 group px-3 py-3 rounded-md ${\n                                this.state.selectedPosition?.position_id ===\n                                item.position.position_id\n                                  ? \"bg-gray-100 rounded-t\"\n                                  : \"bg-white\"\n                              }`}\n                            >\n                              <div className=\"col-span-1 flex items-center justify-center\">\n                                {item.application_status ===\n                                ApplicationStates.Initiated ? (\n                                  <IoBriefcaseOutline className=\"text-5xl text-gray-400 group-hover:text-blue-600\" />\n                                ) : item.application_status ===\n                                  ApplicationStates.Rejected ? (\n                                  <IoBriefcase className=\"text-5xl text-gray-400 group-hover:text-gray-700\" />\n                                ) : item.application_status ===\n                                  ApplicationStates.Shortlisted ? (\n                                  <IoBriefcaseOutline className=\"text-5xl text-gray-400 group-hover:text-blue-600\" />\n                                ) : item.application_status ===\n                                  ApplicationStates.Incomplete ? (\n                                  <IoBriefcaseOutline className=\"text-5xl text-gray-400 group-hover:text-yellow-800\" />\n                                ) : (\n                                  <IoBriefcase className=\"text-5xl text-gray-400 group-hover:text-blue-600\" />\n                                )}\n                              </div>\n                              <div className=\"col-span-7\">\n                                <span\n                                  className={`font-extrabold \n                          ${\n                            item.application_status !==\n                            ApplicationStates.Initiated\n                              ? item.application_status ===\n                                ApplicationStates.Rejected\n                                ? \"text-gray-900 group-hover:text-gray-900\"\n                                : item.application_status ===\n                                  ApplicationStates.Shortlisted\n                                ? \"text-gray-900 group-hover:text-blue-600\"\n                                : item.application_status ===\n                                  ApplicationStates.Incomplete\n                                ? \"text-gray-900 group-hover:text-yellow-800\"\n                                : \"text-gray-900 group-hover:text-blue-600\"\n                              : \"text-gray-900 group-hover:text-blue-600\"\n                          }`}\n                                >\n                                  {item.position.position_title}\n                                </span>\n                                <div className=\"flex flex-col text-xs text-gray-600 mt-2\">\n                                  <div className=\"flex flex-row gap-2\">\n                                    <span\n                                      className={`${\n                                        item.application_status !==\n                                        ApplicationStates.Initiated\n                                          ? item.application_status ===\n                                            ApplicationStates.Rejected\n                                            ? \"text-gray-500\"\n                                            : item.application_status ===\n                                              ApplicationStates.Shortlisted\n                                            ? \"text-gray-500\"\n                                            : \"text-gray-500\"\n                                          : \"text-gray-500\"\n                                      }`}\n                                    >\n                                      Date:\n                                    </span>\n                                    <span\n                                      className={`${\n                                        item.application_status !==\n                                        ApplicationStates.Initiated\n                                          ? item.application_status ===\n                                            ApplicationStates.Rejected\n                                            ? \"text-gray-800\"\n                                            : item.application_status ===\n                                              ApplicationStates.Shortlisted\n                                            ? \"text-gray-800\"\n                                            : \"text-gray-800\"\n                                          : \"text-black\"\n                                      } font-bold`}\n                                    >\n                                      {DATE(item.createdAt, \"DD/MM/YYYY\")}\n                                    </span>\n                                  </div>\n                                  <div className=\"flex flex-row gap-2\">\n                                    <span\n                                      className={`${\n                                        item.application_status !==\n                                        ApplicationStates.Initiated\n                                          ? item.application_status ===\n                                            ApplicationStates.Rejected\n                                            ? \"text-gray-500\"\n                                            : item.application_status ===\n                                              ApplicationStates.Shortlisted\n                                            ? \"text-gray-500\"\n                                            : \"text-gray-500\"\n                                          : \"text-gray-500\"\n                                      }`}\n                                    >\n                                      Application period:\n                                    </span>\n                                    <span\n                                      className={`${\n                                        item.application_status !==\n                                        ApplicationStates.Initiated\n                                          ? item.application_status ===\n                                            ApplicationStates.Rejected\n                                            ? \"text-gray-800\"\n                                            : item.application_status ===\n                                              ApplicationStates.Shortlisted\n                                            ? \"text-gray-800\"\n                                            : \"text-gray-800\"\n                                          : \"text-black\"\n                                      } font-bold`}\n                                    >\n                                      {item.application_session &&\n                                        item.application_session\n                                          .application_session_name}{\" \"}\n                                      -{\" \"}\n                                      {item.application_session &&\n                                        item.application_session.period}\n                                    </span>\n                                  </div>\n                                </div>\n                              </div>\n                              <div className=\"col-span-4 flex md:justify-end items-center\">\n                                <div className=\"flex flex-col float-left text-sm md:justify-end\">\n                                  <span\n                                    className={`${\n                                      item.application_status ===\n                                      ApplicationStates.Rejected\n                                        ? \"text-yellow-700\"\n                                        : \"text-gray-500\"\n                                    } md:text-right`}\n                                  >\n                                    Status\n                                  </span>\n                                  {item.application_status ===\n                                  ApplicationStates.Initiated ? (\n                                    <span\n                                      className={`font-bold ${\n                                        this.state.selectedPosition\n                                          ?.position_id ===\n                                        item.position.position_id\n                                          ? \"bg-gray-600 text-gray-100 border border-gray-500 rounded-full\"\n                                          : \"bg-gray-50 text-gray-800 rounded\"\n                                      } px-3 py-1`}\n                                    >\n                                      {\n                                        ApplicationStatesDescription.find(\n                                          (itm) =>\n                                            itm.key === item.application_status\n                                        )?.caption\n                                      }\n                                    </span>\n                                  ) : item.application_status ===\n                                    ApplicationStates.Rejected ? (\n                                    <span\n                                      className={`font-bold ${\n                                        this.state.selectedPosition\n                                          ?.position_id ===\n                                        item.position.position_id\n                                          ? \"bg-yellow-900 text-yellow-100 border border-yellow-700 rounded-full\"\n                                          : \"bg-yellow-100 text-yellow-900 rounded\"\n                                      } px-3 py-1`}\n                                    >\n                                      {\n                                        ApplicationStatesDescription.find(\n                                          (itm) =>\n                                            itm.key === item.application_status\n                                        )?.caption\n                                      }\n                                    </span>\n                                  ) : item.application_status ===\n                                    ApplicationStates.Shortlisted ? (\n                                    <span\n                                      className={`font-bold ${\n                                        this.state.selectedPosition\n                                          ?.position_id ===\n                                        item.position.position_id\n                                          ? \"bg-blue-900 text-blue-100 border border-blue-700 rounded-full\"\n                                          : \"bg-blue-100 text-blue-900 rounded\"\n                                      } px-3 py-1`}\n                                    >\n                                      {\n                                        ApplicationStatesDescription.find(\n                                          (itm) =>\n                                            itm.key === item.application_status\n                                        )?.caption\n                                      }\n                                    </span>\n                                  ) : (\n                                    <span\n                                      className={`font-bold ${\n                                        this.state.selectedPosition\n                                          ?.position_id ===\n                                        item.position.position_id\n                                          ? \"bg-yellow-600 text-yellow-100 border border-yellow-500 rounded-full\"\n                                          : \"bg-yellow-100 text-yellow-700 rounded\"\n                                      } px-3 py-1`}\n                                    >\n                                      {\n                                        ApplicationStatesDescription.find(\n                                          (itm) =>\n                                            itm.key === item.application_status\n                                        )?.caption\n                                      }\n                                    </span>\n                                  )}\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        ))\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </>\n        )}\n\n        {this.state.showPeriodFilter === true && (\n          <Modal\n            title={<div className=\"text-2xl\">Filter by period</div>}\n            backDrop={true}\n            theme={Themes.default}\n            close={() => this.setState({ showPeriodFilter: false })}\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{ title: true, body: true }}\n          >\n            <ApplicationPeriods\n              applicationPeriods={this.props.periods.applicationPeriods}\n              setSelectedPeriod={this.props.setSelectedPeriod}\n              showPeriodFilter={this.setShowFilterStatus}\n            />\n          </Modal>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  application,\n  periods,\n  system,\n  positions,\n  candidateApplications,\n  candidateExam,\n  course,\n  doExam,\n}: StoreState): {\n  auth: Auth;\n  application: applicationStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n  system: System;\n  positions: positionsStoreInterface;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  candidateExam: candidateExamStoreInterface;\n  course: courseStoreInterface;\n  doExam: examDataInterface;\n} => {\n  return {\n    auth: auth,\n    application: application,\n    periods,\n    system: system,\n    positions: positions,\n    candidateApplications: candidateApplications,\n    candidateExam: candidateExam,\n    course: course,\n    doExam: doExam,\n  };\n};\n\nexport const ApplicationsDashboard = connect(mapStateToProps, {\n  initiateApplication,\n  removeLocation,\n  loadApplicationPeriods,\n  setSelectedPeriod,\n  PushPopupAlert,\n  loadAllPositions,\n  FC_Access,\n  LoadCandidateApplications,\n  InitializeExamDetails,\n  loadExamsDone,\n  setSelectedPosition,\n  setSelectedCourse,\n  setSelectedCandidateExam,\n  AddUserApplication,\n  RemoveUserApplication,\n})(_ApplicationsDashboard);\n","import React, { FC, ReactElement } from \"react\";\nimport { ApplicationsDashboard } from \"../ApplicationsDashboard/ApplicationsDashboard\";\ntype UserDashboardProps = {};\n\nexport const UserDashboard: FC<UserDashboardProps> = (): ReactElement => {\n  /* function body */\n  return (\n    <div className=\"\">\n      {/* Applications Dashboard */}\n      <ApplicationsDashboard />\n    {/* <div className=\"p-6\">\n      <h1 className=\"text-6xl text-center font-bold text-gray-400\">\n        Dashboard{\" \"}\n      </h1>\n\n      <br />\n      <br />\n      <div className=\"text-center\">\n        <Link to=\"/admin-center\">\n          <button className=\"text-blue-900 bg-blue-200 rounded py-1 px-2\">\n            Access Center as Admin\n          </button>\n        </Link>\n\n        <Link to=\"/candidate-center\">\n          <button className=\"text-yellow-900 bg-yellow-200 ml-1 rounded py-1 px-2\">\n            Access Center as a candidate\n          </button>\n        </Link>\n      </div>\n      <br />\n      <br />\n      <br />\n\n      <SystemDevelopmentProgress /> */}\n    </div>\n  );\n};\n"],"sourceRoot":""}
{"version":3,"sources":["containers/AdminDashboard/ChartComponents/LoadingLabels.tsx","containers/AdminDashboard/WaitingListDashboard/WaitingListBoardTitle.tsx","containers/AdminDashboard/WaitingListDashboard/WaitingListChart.tsx","containers/AdminDashboard/WaitingListDashboard/WaitingListDashboard.tsx","containers/SessionSettings/NoSession.tsx","components/Navigation/SideNavigation.tsx","actions/settings.ts","containers/Admin/ExamReport/DoneExamList.tsx","components/Loading/TableLoading.tsx","actions/users.ts","containers/Admin/ExamReport/ExamReport.tsx","containers/Admin/ExamReport/CandiadtePerformancePerDistrict.tsx","containers/Admin/ExamReport/ExamPerformancePerDistrict.tsx","containers/Admin/ExamReport/ExamReportFilters.tsx","containers/Admin/ExamReport/ExamReportTitle.tsx","utils/ExportToExcel.tsx","utils/mineduc.png","components/DownloadPDF/rest.tsx","containers/SessionSettings/ChooseSession.tsx","containers/Admin/ExamReport/CandidatePerformance.tsx","containers/AdminDashboard/ChartComponents/VBarChart.tsx","containers/Admin/ExamReport/ExamList.tsx","containers/Admin/ExamReport/ExamReportModals.tsx","containers/UserManagement/UserList.tsx","containers/UserManagement/RoleList.tsx","containers/UserManagement/UserRole.tsx","shared/blank_profile.png","containers/AdminDashboard/DashboardLabelItem.tsx","containers/Admin/ExamReport/ExamPerformance.tsx","containers/AdminDashboard/ExamDashboard/ExamDashboardLabels.tsx","containers/AdminDashboard/ChartComponents/PieChart.tsx","containers/UserManagement/UserAccess.tsx","containers/AdminDashboard/ExamDashboard/ExamDashboardTitle.tsx","containers/AdminDashboard/ExamDashboard/ExamPreparationChart.tsx","containers/AdminDashboard/ExamDashboard/ExamProgressChart.tsx","containers/AdminDashboard/ExamDashboard/ExamPerformanceChart.tsx","containers/AdminDashboard/ExamDashboard/ExamDashboard.tsx","interfaces/waitingList.ts","components/ContractViewer/DistrictView.tsx","components/ContractViewer/ProvinceView.tsx","components/ContractViewer/SchoolView.tsx","components/ContractViewer/SectorView.tsx","components/ContractViewer/ContractViewer.tsx","containers/Admin/WaitingList/WaitingListReport.tsx"],"names":["LoadingLabels","className","React","memo","WaitingListBoardTitle","props","reportTitle","onClick","setSelectPosition","thisPosition","position_title","education_categories","length","allEducation","loading","loadingEducation","thisEducation","setThisEducation","map","education","index","education_institute_id","education_category_title","value","thisPeriod","disabled","onChange","e","setThisPeriod","target","application_sessions","session","item","_id","session_plan_name","WaitingListChart","FC_GetWaitingListChartData","waitingDataArray","placementDataArray","failedDataArray","labelArray","labelIds","waitingListData","names","ids","key","Object","prototype","hasOwnProperty","call","includes","waitingList_session_id","push","waitingList_session","sessionNames","sessionIds","getDistinctSession","forEach","thisSessionsKey","_waitingListData","filter","element","getPeriodById","sessions","thisGender","waiting_status","WaitingListStatus","WAITING","gender","toString","toLocaleLowerCase","PLACED","PENDING","waitingData","placementData","failedData","labels","VBarChart","categoriesLabel","dataLabels","yaxisText","tooltipText","series","name","data","colors","defaultBar","borderRadius","horizontal","columnWidth","endingShape","chartHeight","_WaitingListDashboard","setLoading","setState","setLoadingWaitingList","loadingWaitingList","setThisPosition","selectPosition","setThisGender","setSearchPositionInput","searchPositionInput","componentDidMount","schoolLevels","loadEducationCategories","GetAllSessionPlans","status","msg","PushPopupAlert","title","theme","PopupAlertTheme","danger","systemPositions","auth","education_institution_id","FC_GetPositionsByInstitution","state","getWaitingList","FC_WaitingListStatus","WaitingList","count","all","waiting","placed","failed","type","applicantGender","male","female","FC_WaitingListData","allWaitList","arrayNew","user_info","getPositionById","position_id","thisSession","session_id","dataArray","fname","lname","waitingList_id","sex","national_id","n_id","phone","phone_number","email","user_position_marks","Number","marks","toFixed","education_category","education_category_id","date","DATE","createdAt","FC_FilterWaitingList","waitingListStatus","institute","result","getWaitingListDataByTitle","allData","find","displayGenderTitle","this","NoSession","waitingList","ExamDashboardLabels","icon","FaBookOpen","iconColor","labelsOnRow","PieChart","options","legend","show","position","horizontalAlign","fontSize","itemMargin","vertical","plotOptions","pie","donut","color","offsetY","fontFamily","formatter","val","total","label","w","globals","seriesTotals","reduce","a","b","width","Modal","backDrop","Themes","default","close","backDropClose","widthSizeClass","ModalSize","extraLarge","displayClose","padding","LoadingV2","LoadingType","dark","placeholder","search","style","fontStyle","school_level_id","school_level_name","Component","WaitingListDashboard","connect","system_settings","sessionPlan","allSessionPlans","description","_SideNavigation","PageHasSubNav","componentWillUnmount","isAuthenticated","navActive","system","navigation","children","SideNavigation","NavToogle","MainItem","MdBrightness1","active","IconDefined","url","API","AUTH","getSystemSettings","callback","dispatch","setAxiosToken","axios","get","res","console","log","ActionTypes","GET_SYSTEM_SETTINGS","payload","code_error","errorToText","disableSystemSetting","DISABLE_SYSTEM_SETTINGS","GetTaskAccess","response","id","task","permitted","GET_TASK_ACCESS","getPositions","APPLICATION","GET_POSTIONS","deletePosition","DELETE_POSITION","publishPosition","PUBLISH_POSITION","institution_id","ExaminationProgressReportContentKeyInterface","examinationProgressIsChangeAllowed","COURSER_NAME","COURSE_CODE","PERIOD","STATUS","defaultExaminationProgressContent","SCHOOL_LEVEL","TIME","DURATION","displayStatus","FC_reportDoneExamList","allCourses","allExams","doneExams","courser","course_id","course","doneExam","period","course_name","course_code","school_levels","exam","preparation_status","exam_status","FC_reportDoneExamListFilter","thisList","thisValue","searchExamData","objList","text","undefined","product","flag","prop","toLowerCase","indexOf","DoneExamList","useState","searchInput","setSearchInput","isSorted","setIsSorted","sortProperty","setSortProperty","sortOrder","setSortOrder","setSort","thisProperty","courseListData","examsListData","doneExamsData","filterExamProgress","colSpan","sortThisArray","i","capitalizeFirstLetter","exam_date","start_time","duration","TableLoading","displayCols","colsArray","cols","documentValidationStatus","userPageLimit","fetchUserAccess","page","USER","FETCH_USERS_ACCESS","users","next","previous","total_users","error","user_error","blockUserToSystem","user_id","BLOCK_USER_TO_SYSTEM","unBlockUserToSystem","UNBLOCK_USER_TO_SYSTEM","assignRoleToUserAccess","ASSIGN_ROLE_TO_USER","customizeUserAccess","CUSTOMIZE_USER_ACCESS","resetUserAccess","RESET_USER_ACCESS","FC_GetUserBySearch","search_value","reportTitleType","FC_CandiadtePerformancePerDistrictFilter","dataList","swap","district_id","exam_stastus","exam_location","j","user_total_marks","adminExamReport","candidatePerformanceData","FC_reportCandidatePerformanceData","reportCourseId","reportDistrictId","filterApplicantPerformance","Loading","searchCandidatePerformanceData","slice","controlRowsByStatus","user_name","user_email","user_phone","timestampToDate","timeAMPM","end_time","ReportUserExamStatus","Editing","FC_ExamPerformancePerDistrictPropsData","examsData","pass","exam_ids","_marks","candidatesByExam","_key","user","total_marks","user_status","pass_applicant","failed_applicant","applicants","NoResult","NoResultThemes","Dark","ExamReportFilters","EXAM_PERFORMANCE","EXAM_DISTRICT_PERFORMANCE","EXAM_PREPARATION","setFilterPreparation","filterPreparation","EXAMINATION_PROGRESS","setFilterExamProgress","APPLICANTS_PERFORMANCE","APPLICANTS_DISTRICT_PERFORMANCE","setFilterApplicantPerformance","values","prepareExam","courses","examsList","SetReportDistrictId","changeReport","setChangeReport","districtModal","setDistrictModal","excelModal","setExcelModal","courseModal","setCourseModal","useEffect","district_name","dataToPrint","updateExamToPrint","setGenerateReportModal","reportType","downloading","downlaodPDF","ExamReportModals","modalFor","ModalForTypes","generateReportModal","modalState","changeModalState","excelReportTitle","setExcelReportTitle","examsToPrint","examPreparationReportContent","setExamPreparationReportContent","examPerformanceToPrint","examPerformanceReportContent","setExamPerformanceReportContent","exam30PerformanceToPrint","exam30PerformanceReportContent","setExam30PerformanceReportContent","examinationProgressToPrint","examinationProgressReportContent","setExaminationProgressExamPerformanceReportContent","candidateExamPerformanceToPrint","candidateExamPerformanceReportContent","setCandidateExamPerformanceReportContent","candidate30ExamPerformanceToPrint","candidate30ExamPerformanceReportContent","setCandidate30ExamPerformanceReportContent","setReportTitle","choose_district","districtId","loadExaminationProgress","DoneExam","selectedEducationCategory","choose_exam","AllExamData","finished","thisExam","getExamByCourseId","periods","period_id","loadAllExams","selected_period","_ExamReport","setLoadingCourses","loadingCourses","setLoadingExams","loadingExams","setDownloading","setLoadingDoneExam","loadingDoneExam","setLoadingCandidatesExamPerformance","loadingCandidatesExamPerformance","setLoadingExamPerformance","loadingExamPerformance","setLoadingSettings","loadingSettings","setSelectPeriod","selectPeriod","setSelectedPeriod","setExamsToPrint","setExamPerformanceToPrint","setExam30PerformanceToPrint","setExaminationProgressToPrint","setCandidateExamPerformanceToPrint","setCandidate30ExamPerformanceToPrint","selectDefaultSession","allSession","active_period","is_active","onPeriodChange","FD_GetSessions","FC_GetAllSessionByInstitution","isEmptyOrSpaces","FC_HasInstitute","setSelectedEducationCategory","loadSchoolLevels","loadCourses","loadExamsList","loadDoneExam","loadPerfomranceExam","loadCandidatesExamPerformance","order","sortBy","ReportGetCandidatePerformanceSortTypes","getLevelbyId","level_id","getCourses","search_all","level","levelDetail","education_institute","FC_reportExamList","n","school_level","findLevel","exam_period","exam_time","exam_duration","ExamPerformance","FC_reportExamPerformanceData","exam_performance","CandidatesExamPerformance","applicant_id","exam_start_time","exam_end_time","performance_status","applicant_name","addToTitle","document","querySelectorAll","warning","table","getElementById","reportSettings","doneBy","subjectTitle","subject","footer","orientation","generatePDF","defaultExamPreparationReportContent","defaultExamPerformanceContent","defaultCandidateExamPerformanceContent","capitalizeFirstWord","ExamList","examsPerformanceData","thisDistrict","Light","component","CandidatePerformance","applicationPeriods","ExamReport","ExportToExcel","fileData","fileName","btnName","showIcon","apiData","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","exportToCSV","require","addFooters","doc","pageCount","internal","getNumberOfPages","setFont","setFontSize","setPage","String","pageSize","align","callBack","lMargin","jsPDF","setTextColor","addImage","Logo","getWidth","lines","splitTextToSize","pdfInMM","y","getTextWidth","addPage","autoTable","html","startY","margin","cellPadding","rowHeight","bodyStyles","valign","columnStyles","cellWidth","tableWidth","finalY","lastAutoTable","Date","save","returnPromise","then","isPlansActive","plans","today","activePlans","plan","startDate","start_date","endDate","end_date","getTime","type_status","SessionPlanTypeStatus","OPEN","ChooseSession","searched","selectedPlan","setSelectedPlan","setSearch","chooseAll","currentSelected","setSelectSession","searchData","itm","type_key","type_title","CandidateExamPerformanceReportContentKeyInterface","candidateExamPerformanceIsChangeAllowed","APPLICANT","N_ID","EMAIL","PHONE","MARKS","START_TIME","END_TIME","FC_reportCandidatePerformanceDataFilter","chart","events","dataPointSelection","event","chartContext","config","labelClicked","dataPointIndex","FC_LoadSelected","seriesIndex","stacked","bar","enabled","xaxis","rotate","categories","tickPlacement","yaxis","fill","opacity","tooltip","grid","left","right","noData","verticalAlign","setOptions","chartClicked","zoom","autoScaleYaxis","height","examPreparationReportContentKeyInterface","examPreparationIsChangeAllowed","FC_reportExamListFilter","thisStatus","searchExamList","FC_DistinctDistrict","locations","flags","output","l","roomLocation","getAllRoom","SetReportCourseId","formError","setFormError","selectAll","setSelectAll","loadingLocation","setLoadingLocation","setError","setDistrictId","isChangeAllowed","examPerformanceIsChangeAllowed","updateExamPerformanceReportContent","findIndex","newArray","isSelectAllNeeded","updateCandidateExamPerformanceReportContent","showGenerateBtn","medium","updateExamPreparationReportContent","updateExaminationProgressReportContent","currentState","resetReportContent","isAllDistrictAllowed","LocationsInArray","selectDistrict","ModalState","RoleList","roleList","setChooseRole","role","loadindRequest","handleSelectRole","system_user_role_id","UserRole","setRoleId","roleId","setSelectedRole","selectedRole","setProvinceId","provinceId","setCenterId","centerId","setRoomId","roomId","setLoadingForm","loadingForm","setInstituteId","instituteId","setLoadingRequest","loadingRequest","chooseRole","setDefaultState","default_access","LOAD_province","LOAD_district","district_required","roomList","distinctDistrict","province_id","room_required","room_id","center_id","userInfo","vvvvv","role_id","TYPE","tableData","access","create","view","update","delete","Math","random","assignRoleToUser","preventDefault","window","confirm","education_institution_required","formData","school_id","post","currentPage","setChangeRole","success","role_error","location","districts","keyDistrict","distinctCenter","rooms","distinctRoom","onSubmit","province","province_name","district","center","center_name","room","room_name","Table","columns","columnTitle","alignText","rows","pagination","searchBG","thColor","tableId","getUserById","userId","LocationData","locationTemp","p","d","centers","c","r","room_number","capacity","occupied","UserList","setLoadingRequestType","loadingRequestType","setRoomList","setRoomTables","roomTable","setCurrentAccess","currentAccess","setUserAccess","userAccess","allRoom","setLoadingUser","loadingUser","pageNumber","setManageUser","setManageUserId","getRoleById","blockUser","actionType","patch","info","blockUser_ERROR","restUserAccess","resetedAccess","searchFind","manageUser","reseting_user_access","DATA_GetUser","manageUserId","DATA_GetRoleById","DATA_ThisRoom","src","photo","FC_GetBase64Img","profile","alt","getInstituteById","custome_access","changeRole","UserAccess","DashboardLabelItem","FaUsers","countOver","toAnyDigit","displayNumbers","examPerformanceReportContentKeyInterface","PERFORMANCE","examPerformance","answer_sheet_id","Fragment","numCols","childrenPosition","_UserAccess","setViewPermission","viewPermission","setLoadindRequest","setCreatePermission","createPermission","setUpdatePermission","updatePermission","setDeletePermission","deletePermission","setLoadind","overrideUserAccess","overideAccess","findCustom","custom","handleCustomization","custome_user_access_id","customize_access","to","checked","ExamDashboardTitle","ExamPreparationChart","examPreparationProgress","remaining","ExamProgressChart","progressData","ExamPerformanceChart","loadCoursesByInstitute","courseList","defaultValue","completeExams","remainingExams","dataFound","loadExamPreparationProgress","isDatePast","dateParam","moment","format","todayDate","pastDate","diff","loadExamAttendance","applicantList","_ExamDashboard","setChangingPeriod","changingPeriod","loadByPeriods","action","ExamDashboard","waitingListReportContentKeyInterface","DistrictView","strict","displayMessage","ProvinceView","provinces","SchoolView","schools","school","SectorView","sectors","sector","ContractViewer","FC_getLocations","FC_GetWaitingLocationList","selectedSchool","contract","FC_LoadSchoolsByIDs","err","ProvincesList","DistrictList","SectorList","el","findIt","province_code","district_code","sector_code","sector_name","thisCandidate","candidates","school_code","school_name","waitingLocation","FC_LoadSchoolsByDistrict","defaultReportContent","_WaitingListReport","setWaitingListToPrint","waitingListToPrint","setThisWaitingListStatus","thisWaitingListStatus","setReportContent","reportContent","FC_OnInstitutionChanged","showStatus","statusArray","updateReportContent","updateWaitingListToPrint","generateReportTitle","FC_GeneratePDF","viewContractor","selectedWaiting","body","WaitingListReport"],"mappings":"0aAEMA,EAAgB,WACpB,OACE,sBAAKC,UAAU,2HAAf,UACE,qBAAKA,UAAU,wFACf,qBAAKA,UAAU,gFACf,qBAAKA,UAAU,gFACf,qBAAKA,UAAU,gFACf,qBAAKA,UAAU,oFAKNC,MAAMC,KAAKH,G,mCCQpBI,EAA8D,SAACC,GACnE,OACE,sBAAKJ,UAAU,wEAAf,UACE,kCACE,sBAAKA,UAAU,wCAAf,UACE,cAAC,IAAD,CAAiBA,UAAU,2CAC3B,sBAAKA,UAAU,gBAAf,UACE,sBAAMA,UAAU,mCAAhB,SACGI,EAAMC,cAET,sBACEC,QAAS,kBAAMF,EAAMG,mBAAkB,IACvCP,UAAU,wCAFZ,UAIE,sBAAMA,UAAU,gBAAhB,iCACA,sBAAMA,UAAU,2DAAhB,SAC0B,OAAvBI,EAAMI,aACHJ,EAAMI,aAAaC,eACnB,kBAEN,yBACEH,QAAS,kBAAMF,EAAMG,mBAAkB,IACvCP,UAAU,+IAFZ,UAIE,cAAC,IAAD,CAAaA,UAAU,YAJzB,mCAaR,0BAASA,UAAU,gCAAnB,UAEE,kCACGI,EAAMM,sBAAwBN,EAAMM,qBAAqBC,OAAS,GACjE,sBAAKX,UAAU,sEAAf,UACGI,EAAMQ,cACL,qBACEZ,UAAS,iBACPI,EAAMS,SAAWT,EAAMU,iBACnB,qBACA,iBAHG,YAKiB,QAAxBV,EAAMW,cACF,mCACA,4BAPG,kJASTT,QAAS,kBACNF,EAAMS,UACNT,EAAMU,kBACPV,EAAMY,iBAAiB,QAb3B,SAgBE,0BAAShB,UAAU,SAAnB,UACE,cAAC,IAAD,CAAeA,UAAU,8BACzB,4CAILI,EAAMM,qBAAqBO,KAAI,SAACC,EAAWC,GAAZ,OAC9B,qBAEEnB,UAAS,iBACPI,EAAMS,QAAU,qBAAuB,iBADhC,YAGiB,QAAxBT,EAAMW,eACNG,EAAUE,yBACRhB,EAAMW,cAAcK,uBAClB,mCACA,4BAPG,kJASTd,QAAS,kBACNF,EAAMS,UACNT,EAAMU,kBACPV,EAAMY,iBAAiBE,IAd3B,SAiBE,sBAAKlB,UAAU,SAAf,UACE,cAAC,IAAD,CAAeA,UAAU,8BACzB,+BAAOkB,EAAUG,+BAlBdH,EAAUE,uBAAyBD,WA0BlD,yBACEnB,UAAS,+EACTsB,MAAOlB,EAAMmB,WACbC,SAAUpB,EAAMS,SAAWT,EAAMU,iBACjCW,SAAU,SAACC,GACTtB,EAAMuB,cAAcD,EAAEE,OAAON,QALjC,UAQE,wBAAQA,MAAM,MAAd,yBACClB,EAAMyB,qBAAqBZ,KAAI,SAACa,EAASC,GAAV,OAC9B,wBAAiCT,MAAOQ,EAAQE,IAAhD,SACGF,EAAQG,mBADEH,EAAQE,IAAMD,gBAWxB9B,MAAMC,KAAKC,G,kBCpHpB+B,EAAoD,SAAC9B,GACzD,IAkBM+B,EAA6B,WAMjC,IAAIC,EAA6B,GAC/BC,EAA+B,GAC/BC,EAA4B,GAC5BC,EAAuB,GACvBC,EAAqB,GAiFvB,OA7GyB,SACzBC,GAEA,IAAIC,EAAkB,GACpBC,EAAgB,GAElB,IAAK,IAAMC,KAAOH,EACZI,OAAOC,UAAUC,eAAeC,KAAKP,EAAiBG,KACnDD,EAAIM,SAASR,EAAgBG,GAAKM,0BACrCP,EAAIQ,KAAKV,EAAgBG,GAAKM,wBAC9BR,EAAMS,KAAKV,EAAgBG,GAAKQ,uBAKtC,MAAO,CAAEC,aAAcX,EAAOY,WAAYX,GAerBY,CAAmBnD,EAAMqC,iBACjCa,WAAWE,SAAQ,SAACC,GAC/B,IAAIC,EAAmBtD,EAAMqC,gBAAgBkB,QAC3C,SAAC5B,GAAD,OAAUA,EAAKmB,yBAA2BO,KAE5C,IAAK,IAAMb,KAAOc,EACZb,OAAOC,UAAUC,eAAeC,KAAKU,EAAkBd,IAAO,WAChE,IAAMgB,EAAUF,EAAiBd,GAC3BrB,EAAasC,wBACjBzD,EAAM0D,SACNF,EAAQV,wBAELV,EAASS,SAASW,EAAQV,0BAC7BV,EAASW,KAAKS,EAAQV,wBACtBX,EAAWY,KACT5B,EAAaA,EAAWU,kBAAoB,WAErB,QAArB7B,EAAM2D,YACR3B,EAAiBe,KACfO,EAAiBC,QACf,SAAC5B,GAAD,OACEA,EAAKmB,yBACHU,EAAQV,wBACVnB,EAAKiC,iBAAmBC,IAAkBC,SAC1CnC,EAAKoC,OAAOC,WAAWC,sBACrBjE,EAAM2D,WAAWK,WAAWC,uBAChC1D,QAEJ0B,EAAmBc,KACjBO,EAAiBC,QACf,SAAC5B,GAAD,OACEA,EAAKmB,yBACHU,EAAQV,wBACVnB,EAAKiC,iBAAmBC,IAAkBK,QAC1CvC,EAAKoC,OAAOC,WAAWC,sBACrBjE,EAAM2D,WAAWK,WAAWC,uBAChC1D,QAEJ2B,EAAgBa,KACdO,EAAiBC,QACf,SAAC5B,GAAD,OACEA,EAAKmB,yBACHU,EAAQV,wBACVnB,EAAKiC,iBAAmBC,IAAkBM,SAC1CxC,EAAKoC,OAAOC,WAAWC,sBACrBjE,EAAM2D,WAAWK,WAAWC,uBAChC1D,UAGJyB,EAAiBe,KACfO,EAAiBC,QACf,SAAC5B,GAAD,OACEA,EAAKmB,yBACHU,EAAQV,wBACVnB,EAAKiC,iBAAmBC,IAAkBC,WAC5CvD,QAEJ0B,EAAmBc,KACjBO,EAAiBC,QACf,SAAC5B,GAAD,OACEA,EAAKmB,yBACHU,EAAQV,wBACVnB,EAAKiC,iBAAmBC,IAAkBK,UAC5C3D,QAEJ2B,EAAgBa,KACdO,EAAiBC,QACf,SAAC5B,GAAD,OACEA,EAAKmB,yBACHU,EAAQV,wBACVnB,EAAKiC,iBAAmBC,IAAkBM,WAC5C5D,UAjEwD,MAyE/D,CACL6D,YAAapC,EACbqC,cAAepC,EACfqC,WAAYpC,EACZqC,OAAQpC,IAIZ,OACE,0BAASvC,UAAU,2BAAnB,UACE,qBAAKA,UAAU,yCAAf,SACE,sBAAMA,UAAU,gDAAhB,kCAIF,qBAAKA,UAAU,iBAAf,SACE,cAAC4E,EAAA,EAAD,CACED,OAAQxC,IAA6BwC,OACrCE,gBAAiB1C,IAA6BwC,OAC9CG,YAAY,EACZC,UAAU,eACVC,YAAY,aACZC,OAAQ,CACN,CACEC,KAAM,eACNC,KAAMhD,IAA6BqC,aAErC,CACEU,KAAM,oBACNC,KAAMhD,IAA6BuC,YAErC,CACEQ,KAAM,sBACNC,KAAMhD,IAA6BsC,gBAGvCW,OAAQ,CAAC,UAAW,UAAW,WAC/BC,WAAY,CACVC,aAAc,EACdC,YAAY,EACZC,YAAa,MACbC,YAAa,WAEfC,YAAatF,EAAMsF,oBAOdzF,MAAMC,KAAKgC,GCrGpByD,E,kDAIJ,WAAYvF,GAA0B,IAAD,8BACnC,cAAMA,IAcRwF,WAAa,SAACtE,GACZ,EAAKuE,SAAS,CAAEhF,QAASS,KAhBU,EAmBrCwE,sBAAwB,SAACxE,GACvB,EAAKuE,SAAS,CAAEE,mBAAoBzE,KApBD,EAuBrC0E,gBAAkB,SAAC1E,GACjB,EAAKuE,SAAS,CAAErF,aAAcc,KAxBK,EA2BrCf,kBAAoB,SAACe,GACnB,EAAKuE,SAAS,CAAEI,eAAgB3E,KA5BG,EA+BrCN,iBAAmB,SAACM,GAClB,EAAKuE,SAAS,CAAE9E,cAAeO,KAhCI,EAmCrC4E,cAAgB,SAAC5E,GACf,EAAKuE,SAAS,CAAE9B,WAAYzC,KApCO,EAuCrC6E,uBAAyB,SAAC7E,GACxB,EAAKuE,SAAS,CAAEO,oBAAqB9E,KAxCF,EA2CrCK,cAAgB,SAACL,GACf,EAAKuE,SAAS,CAAEtE,WAAYD,KA5CO,EA+CrC+E,kBAAoB,WAGiC,OAAjD,EAAKjG,MAAMkG,aAAa5F,sBACgC,IAAxD,EAAKN,MAAMkG,aAAa5F,qBAAqBC,QAE7C,EAAKP,MAAMmG,wBAAwB,EAAKX,YAKH,MAAnC,EAAKxF,MAAMyB,sBACb,EAAKzB,MAAMoG,oBAAmB,SAACC,EAAiBC,GAC9C,EAAKd,WAAWa,GACXA,GACCC,EAAI/F,QACN,EAAKP,MAAMuG,eAAe,CACxBC,MAAOF,EACPG,MAAOC,IAAgBC,YASA,OAA/B,EAAK3G,MAAM4G,iBACX,EAAK5G,MAAM6G,KAAKC,yBAEhB,EAAK9G,MAAM+G,6BACT,EAAK/G,MAAM6G,KAAKC,0BAChB,SAACT,EAAiBC,GAChB,EAAKd,WAAWa,GACZC,EAAI/F,QACN,EAAKP,MAAMuG,eAAe,CACxBC,MAAOF,EACPG,MAAOC,IAAgBC,YAKtB,EAAKK,MAAMvG,SACpB,EAAK+E,YAAW,GAId,EAAKwB,MAAMrB,oBACb,EAAK3F,MAAMiH,gBAAe,SAACZ,EAAiBC,IAC3B,IAAXD,IACF,EAAKX,sBAAsBW,GACvBC,EAAI/F,OAAS,GACf,EAAKP,MAAMuG,eAAe,CACxBC,MAAOF,EACPG,MAAOC,IAAgBC,cArGE,EA6GrCO,qBAAuB,SACrBC,GAoEA,MAlE8C,CAC5C,CACEX,MAAO,iBACPY,MAAO,CACLC,IAAKF,EACLG,QAASH,EAAY5D,QACnB,SAAC5B,GAAD,OAAUA,EAAKiC,iBAAmBC,IAAkBC,WAEtDyD,OAAQJ,EAAY5D,QAClB,SAAC5B,GAAD,OAAUA,EAAKiC,iBAAmBC,IAAkBK,UAEtDsD,OAAQL,EAAY5D,QAClB,SAAC5B,GAAD,OAAUA,EAAKiC,iBAAmBC,IAAkBM,YAGxDsD,KAAM,OAER,CACEjB,MAAO,kBACPY,MAAO,CACLC,IAAKF,EAAY5D,QACf,SAAC5B,GAAD,OAAUA,EAAKoC,SAAW2D,IAAgBC,QAE5CL,QAASH,EAAY5D,QACnB,SAAC5B,GAAD,OACEA,EAAKoC,SAAW2D,IAAgBC,MAChChG,EAAKiC,iBAAmBC,IAAkBC,WAE9CyD,OAAQJ,EAAY5D,QAClB,SAAC5B,GAAD,OACEA,EAAKoC,SAAW2D,IAAgBC,MAChChG,EAAKiC,iBAAmBC,IAAkBK,UAE9CsD,OAAQL,EAAY5D,QAClB,SAAC5B,GAAD,OACEA,EAAKoC,SAAW2D,IAAgBC,MAChChG,EAAKiC,iBAAmBC,IAAkBM,YAGhDsD,KAAM,QAER,CACEjB,MAAO,oBACPY,MAAO,CACLC,IAAKF,EAAY5D,QACf,SAAC5B,GAAD,OAAUA,EAAKoC,SAAW2D,IAAgBE,UAE5CN,QAASH,EAAY5D,QACnB,SAAC5B,GAAD,OACEA,EAAKoC,SAAW2D,IAAgBE,QAChCjG,EAAKiC,iBAAmBC,IAAkBC,WAE9CyD,OAAQJ,EAAY5D,QAClB,SAAC5B,GAAD,OACEA,EAAKoC,SAAW2D,IAAgBE,QAChCjG,EAAKiC,iBAAmBC,IAAkBK,UAE9CsD,OAAQL,EAAY5D,QAClB,SAAC5B,GAAD,OACEA,EAAKoC,SAAW2D,IAAgBE,QAChCjG,EAAKiC,iBAAmBC,IAAkBM,YAGhDsD,KAAM,YA/KyB,EAqLrCI,mBAAqB,SACnBC,EACAlB,GAEA,GACkB,OAAhBkB,GACoB,OAApBlB,GACoC,OAApC,EAAK5G,MAAMyB,qBAEX,OAAO,KACT,IAAIsG,EAAuC,GAE3C,IAAK,IAAMvF,KAAOsF,EAChB,GAAIA,EAAYtF,GAAKwF,UAAW,CAC9B,IAAMxE,EAAUsE,EAAYtF,GACtBpC,EAAe6H,YACnBrB,EACApD,EAAQ0E,aAEJC,EAAc1E,wBAClB,EAAKzD,MAAMyB,qBACX+B,EAAQ4E,YAENC,EAAsC,CACxC/F,MAAOkB,EAAQwE,UAAUM,MAAQ,IAAM9E,EAAQwE,UAAUO,MACzDC,eAAgBhF,EAAQ5B,IACxBmC,QACEP,EAAQwE,UAAUS,IACdf,IAAgBC,MAEtBe,YAAalF,EAAQmF,KACrBC,MAAOpF,EAAQqF,aACfC,MAAOtF,EAAQsF,MACfC,oBAAqBC,OAAOxF,EAAQyF,MAAMC,QAAQ,IAClDhB,YAAa9H,EACTA,EAAa8H,YACb,mBACJ7H,eAAgBD,EACZA,EAAaC,eACb,mBACJ8I,mBAAoB/I,EAChBA,EAAaY,uBAAuBC,yBACpC,GACJmI,sBAAuBhJ,EACnBA,EAAaY,uBAAuBA,uBACpC,GACJgC,oBAAqBmF,EACjBA,EAAYtG,kBACZ,kBACJwH,KAAMC,YAAK9F,EAAQ+F,WACnB3F,eAAgBJ,EAAQ6C,OACxBA,OAAQ7C,EAAQ6C,OAChBvD,uBAAwBU,EAAQ4E,YAElCL,EAAShF,KAAKsF,GAGlB,OAAON,GA9O4B,EAiPrCyB,qBAAuB,SACrB1B,EACA2B,EACAtB,EACAuB,EACAtJ,GAEA,IAAIuJ,EAAqC7B,EAsBzC,MArB0B,QAAtB2B,IACFE,EAASA,EAAOpG,QAAO,SAAC5B,GAAD,OAAUA,EAAK0E,SAAWoD,MAG/CrJ,IACFuJ,EAASA,EAAOpG,QACd,SAAC5B,GAAD,OAAUA,EAAKuG,cAAgB9H,EAAa8H,gBAI5B,QAAhBC,IACFwB,EAASA,EAAOpG,QACd,SAAC5B,GAAD,OAAUA,EAAKmB,yBAA2BqF,MAI5B,QAAduB,IACFC,EAASA,EAAOpG,QACd,SAAC5B,GAAD,OAAUA,EAAKwH,qBAAuBO,EAAUzI,6BAG7C0I,GA9Q4B,EAiRrCC,0BAA4B,SAC1BC,GAEA,OAAOA,EAAQC,MAAK,SAACnI,GAAD,OAAUA,EAAK8F,OAAS,EAAKT,MAAMrD,eApRpB,EAuRrCoG,mBAAqB,SAAChG,GACpB,MAAe,SAAXA,EACK,sBAEM,WAAXA,EACK,wBAEF,kBA3RP,EAAKiD,MAAQ,CACX7F,WAAY,MACZV,SAAS,EACTkF,oBAAoB,EACpBvF,aAAc,KACdyF,gBAAgB,EAChBlF,cAAe,MACfgD,WAAY,MACZqC,oBAAqB,IAXY,E,0CAiSrC,WAAU,IAAD,OACP,OAAIgE,KAAKhD,MAAMvG,SAA+C,OAApCuJ,KAAKhK,MAAMyB,qBAEjC,qBAAK7B,UAAU,kEAAf,6BAM2C,IAA3CoK,KAAKhK,MAAMyB,qBAAqBlB,OAC3B,cAAC0J,EAAA,EAAD,IAIP,gCAEE,cAAC,EAAD,CACE3J,qBAAsB0J,KAAKhK,MAAMkG,aAAa5F,qBAC9CG,QAASuJ,KAAKhD,MAAMvG,QACpBC,iBAAkBsJ,KAAKhD,MAAMvG,QAC7BE,cAAeqJ,KAAKhD,MAAMrG,cAC1BC,iBAAkBoJ,KAAKpJ,iBACvBO,WAAY6I,KAAKhD,MAAM7F,WACvBI,cAAeyI,KAAKzI,cACpBE,qBAAsBuI,KAAKhK,MAAMyB,qBACjCxB,YAAa,yBACbO,cAAc,EACdL,kBAAmB6J,KAAK7J,kBACxBC,aAAc4J,KAAKhD,MAAM5G,gBAMzB4J,KAAKhD,MAAMrB,oBAAiD,OAA3BqE,KAAKhK,MAAMkK,cAC5C,kCACE,cAAC,EAAD,OAMFF,KAAKhD,MAAMrB,oBAAiD,OAA3BqE,KAAKhK,MAAMkK,aAC5C,oCAEGF,KAAKnC,mBACJmC,KAAKhK,MAAMkK,YACXF,KAAKhK,MAAM4G,kBAEXoD,KAAKR,qBACHQ,KAAKnC,mBACHmC,KAAKhK,MAAMkK,YACXF,KAAKhK,MAAM4G,iBAEb,MACAoD,KAAKhD,MAAM7F,WACX6I,KAAKhD,MAAMrG,cACXqJ,KAAKhD,MAAM5G,eAEX,0BAASR,UAAU,OAAnB,UACE,sBAAKA,UAAU,+DAAf,UACGoK,KAAKD,mBAAmBC,KAAKhD,MAAMrD,YAAa,IACjD,wBACE/D,UAAS,gGACTsB,MAAO8I,KAAKhD,MAAMrD,WAClBtC,SAAU,SAACC,GAAD,OACR,EAAKwE,cACHxE,EAAEE,OAAON,QALf,SASG8I,KAAK9C,qBACJ8C,KAAKR,qBACHQ,KAAKnC,mBACHmC,KAAKhK,MAAMkK,YACXF,KAAKhK,MAAM4G,iBAEb,MACAoD,KAAKhD,MAAM7F,WACX6I,KAAKhD,MAAMrG,cACXqJ,KAAKhD,MAAM5G,eAEbS,KAAI,SAACc,EAAMZ,GAAP,OACJ,wBAAgCG,MAAOS,EAAK8F,KAA5C,SACG9F,EAAK6E,OADK7E,EAAK8F,KAAO1G,WAM9BiJ,KAAKJ,0BACJI,KAAK9C,qBACH8C,KAAKR,qBACHQ,KAAKnC,mBACHmC,KAAKhK,MAAMkK,YACXF,KAAKhK,MAAM4G,iBAEb,MACAoD,KAAKhD,MAAM7F,WACX6I,KAAKhD,MAAMrG,cACXqJ,KAAKhD,MAAM5G,iBAIf,cAAC+J,EAAA,EAAD,CACEzF,WAAY,CACV,CACE8B,MAAO,mBACP4D,KAAMC,IACNC,UAAW,OACXlD,MAAO4C,KAAKJ,0BACVI,KAAK9C,qBACH8C,KAAKR,qBACHQ,KAAKnC,mBACHmC,KAAKhK,MAAMkK,YACXF,KAAKhK,MAAM4G,iBAEb,MACAoD,KAAKhD,MAAM7F,WACX6I,KAAKhD,MAAMrG,cACXqJ,KAAKhD,MAAM5G,gBAGdgH,MAAMC,IAAI9G,QAEf,CACEiG,MAAO,qBACP4D,KAAMC,IACNC,UAAW,QACXlD,MAAO4C,KAAKJ,0BACVI,KAAK9C,qBACH8C,KAAKR,qBACHQ,KAAKnC,mBACHmC,KAAKhK,MAAMkK,YACXF,KAAKhK,MAAM4G,iBAEb,MACAoD,KAAKhD,MAAM7F,WACX6I,KAAKhD,MAAMrG,cACXqJ,KAAKhD,MAAM5G,gBAGdgH,MAAME,QAAQ/G,QAEnB,CACEiG,MAAO,yBACP4D,KAAMC,IACNC,UAAW,SACXlD,MAAO4C,KAAKJ,0BACVI,KAAK9C,qBACH8C,KAAKR,qBACHQ,KAAKnC,mBACHmC,KAAKhK,MAAMkK,YACXF,KAAKhK,MAAM4G,iBAEb,MACAoD,KAAKhD,MAAM7F,WACX6I,KAAKhD,MAAMrG,cACXqJ,KAAKhD,MAAM5G,gBAGdgH,MAAMI,OAAOjH,QAElB,CACEiG,MAAO,qBACP4D,KAAMC,IACNC,UAAW,OACXlD,MAAO4C,KAAKJ,0BACVI,KAAK9C,qBACH8C,KAAKR,qBACHQ,KAAKnC,mBACHmC,KAAKhK,MAAMkK,YACXF,KAAKhK,MAAM4G,iBAEb,MACAoD,KAAKhD,MAAM7F,WACX6I,KAAKhD,MAAMrG,cACXqJ,KAAKhD,MAAM5G,gBAGdgH,MAAMG,OAAOhH,SAGpBgK,YAAa,EA/Ef,SAiFE,qBAAK3K,UAAU,sBAAf,SACE,cAAC4K,EAAA,EAAD,CACEC,QAAS,CACPlG,OAAQ,CACN,eACA,cACA,eAEFmG,OAAQ,CACNC,MAAM,EACNC,SAAU,SACVC,gBAAiB,SACjBC,SAAU,OACVC,WAAY,CACV5F,WAAY,EACZ6F,SAAU,IAGdC,YAAa,CACXC,IAAK,CACHC,MAAO,CACL5G,OAAQ,CACNoG,MAAM,EACN7F,KAAM,CACJ6F,MAAM,EACNG,SAAU,OAEVM,MAAO,UACPC,SAAU,IAEZnK,MAAO,CACLyJ,MAAM,EACNG,SAAU,OACVQ,WACE,+BACFF,MAAO,UACPC,QAAS,GACTE,UAAW,SAAUC,GACnB,OAAOA,IAGXC,MAAO,CACLd,MAAM,EACNe,MAAO,QACPN,MAAO,UACPG,UAAW,SAAUI,GACnB,OAAOA,EAAEC,QAAQC,aAAaC,QAC5B,SAACC,EAAWC,GACV,OAAOD,EAAIC,IAEb,SAQdhH,OAAQ,CAAC,UAAW,UAAW,YAEjCH,OAAQ,CACNmF,KAAKJ,0BACHI,KAAK9C,qBACH8C,KAAKR,qBACHQ,KAAKnC,mBACHmC,KAAKhK,MAAMkK,YACXF,KAAKhK,MAAM4G,iBAEb,MACAoD,KAAKhD,MAAM7F,WACX6I,KAAKhD,MAAMrG,cACXqJ,KAAKhD,MAAM5G,gBAGdgH,MAAME,QAAQ/G,OACjByJ,KAAKJ,0BACHI,KAAK9C,qBACH8C,KAAKR,qBACHQ,KAAKnC,mBACHmC,KAAKhK,MAAMkK,YACXF,KAAKhK,MAAM4G,iBAEb,MACAoD,KAAKhD,MAAM7F,WACX6I,KAAKhD,MAAMrG,cACXqJ,KAAKhD,MAAM5G,gBAGdgH,MAAMG,OAAOhH,OAChByJ,KAAKJ,0BACHI,KAAK9C,qBACH8C,KAAKR,qBACHQ,KAAKnC,mBACHmC,KAAKhK,MAAMkK,YACXF,KAAKhK,MAAM4G,iBAEb,MACAoD,KAAKhD,MAAM7F,WACX6I,KAAKhD,MAAMrG,cACXqJ,KAAKhD,MAAM5G,gBAGdgH,MAAMI,OAAOjH,QAElB0L,MAAO,aAYpBjC,KAAKnC,mBACJmC,KAAKhK,MAAMkK,YACXF,KAAKhK,MAAM4G,kBAEX,cAAC,EAAD,CACEvE,gBAAiB2H,KAAKR,qBACpBQ,KAAKnC,mBACHmC,KAAKhK,MAAMkK,YACXF,KAAKhK,MAAM4G,iBAEb,MACAoD,KAAKhD,MAAM7F,WACX6I,KAAKhD,MAAMrG,cACXqJ,KAAKhD,MAAM5G,cAEbsD,SAAUsG,KAAKhK,MAAMyB,qBACrB6D,YAAa,IACb3B,WAAYqG,KAAKhD,MAAMrD,aAM1BqG,KAAKhD,MAAMnB,gBACV,cAACqG,EAAA,EAAD,CACE1F,MACE,sBAAK5G,UAAU,mCAAf,UACE,cAAC,IAAD,CAAUA,UAAU,2BACpB,qBAAKA,UAAU,gBAAf,SACE,sBAAMA,UAAU,kCAAhB,uCAMNuM,UAAU,EACV1F,MAAO2F,IAAOC,QACdC,MAAO,WACL,EAAKnM,mBAAkB,GACvB,EAAK4F,uBAAuB,KAE9BwG,eAAe,EACfC,eAAgBC,IAAUC,WAC1BC,cAAc,EACdC,QAAS,CAAEpG,OAAO,GApBpB,SAsBE,qBAAK5G,UAAU,YAAf,SACkC,OAA/BoK,KAAKhK,MAAM4G,gBACV,cAACiG,EAAA,EAAD,CAAWpF,KAAMqF,IAAYC,OACW,IAAtC/C,KAAKhK,MAAM4G,gBAAgBrG,OAC7B,sBAAKX,UAAU,0DAAf,UACE,cAAC,KAAD,CAAUA,UAAU,aACpB,qBAAKA,UAAU,4CAAf,SACE,4EAaJ,qCACE,sBAAKA,UAAU,gBAAf,UACE,sBAAMA,UAAU,kCAAhB,qCAGA,uBACEyB,SAAU,SAACC,GAAD,OACR,EAAKyE,uBAAuBzE,EAAEE,OAAON,QAEvCuG,KAAK,OACL7H,UAAU,qCACVoN,YAAY,kBAGhB,qBACE9M,QAAS,WACP,EAAK0F,gBAAgB,MACrB,EAAKzF,mBAAkB,GACvB,EAAK4F,uBAAuB,KAE9BnG,UAAU,iHANZ,SAQE,sBAAKA,UAAU,uBAAf,UACE,qBAAKA,UAAU,6BAAf,SACE,sBAAKA,UAAU,mCAAf,UACE,8BACE,cAAC,IAAD,CAAgBA,UAAU,yCAE5B,qBAAKA,UAAU,gBAAf,SACE,sBAAMA,UAAU,+CAAhB,iCAMN,qBAAKA,UAAU,4CAAf,SACE,qBAAKA,UAAU,uCAAf,SACE,qBAAKA,UAAU,yCAAf,6BAOPqN,YACCjD,KAAKhK,MAAM4G,gBACXoD,KAAKhD,MAAMhB,qBACXnF,KAAI,SAACc,EAAmBa,GAApB,OACJ,qBAEEtC,QAAS,WACP,EAAK0F,gBAAgBjE,GACrB,EAAKxB,mBAAkB,GACvB,EAAK4F,uBAAuB,KAE9BnG,UAAU,iHAPZ,SASE,sBAAKA,UAAU,uBAAf,UACE,qBAAKA,UAAU,6BAAf,SACE,sBAAKA,UAAU,mCAAf,UACE,8BACE,cAAC,IAAD,CAAgBA,UAAU,yCAE5B,sBAAKA,UAAU,gBAAf,UACE,sBAAMA,UAAU,6CAAhB,SACG+B,EAAKtB,iBAER,uBAAMT,UAAU,+BAAhB,0BACgB,IACd,sBACEA,UAAU,2BACVsN,MAAO,CAAEC,UAAW,UAFtB,SAIGxL,EAAKyL,gBAAgBC,uBAG1B,sBAAMzN,UAAU,2EAAhB,SAEI+B,EAAKX,uBACFC,mCAMb,qBAAKrB,UAAU,4CAAf,SACE,qBAAKA,UAAU,uCAAf,SACE,qBAAKA,UAAU,yCAAf,4BAtCD4C,EAAM,uB,GApsBD8K,aAqxBvBC,EAAuBC,aAtBZ,SAAC,GAYnB,IAXJ3G,EAWG,EAXHA,KACA4G,EAUG,EAVHA,gBACAC,EASG,EATHA,YACAxH,EAQG,EARHA,aACAgE,EAOG,EAPHA,YAQA,MAAO,CACLrD,KAAMA,EACNpF,qBAAsBiM,EAAYC,gBAClC/G,gBAAiB6G,EAAgB7G,gBACjCV,eACAgE,iBAIyD,CAC3DjD,mBACAb,uBACAD,6BACAY,iCACAR,qBALkCiH,CAMjCjI,I,iCCt2BH,mCAUM0E,EAAsC,SAAC,GAGvC,EAFJzD,MAEK,IAAD,IADJoH,mBACI,MADU,kFACV,EACJ,OACE,qBAAKhO,UAAU,cAAf,SACE,0BAASA,UAAU,iJAAnB,UACE,sBAAKA,UAAU,6BAAf,UACE,cAAC,IAAD,CAAWA,UAAU,cACpBgO,MAEF,QAeM/N,QAAMC,KAAKmK,I,uLChBpB4D,E,kDACJ,WAAY7N,GAAkB,IAAD,8BAC3B,cAAMA,IAORiG,kBAAoB,kBAAM,EAAKjG,MAAM8N,eAAc,IARtB,EAS7BC,qBAAuB,kBAAM,EAAK/N,MAAM8N,eAAc,IANpD,EAAK9G,MAAQ,CACXvG,SAAS,GAJgB,E,0CAW7B,WAGE,IAAwB,IAFAuJ,KAAKhK,MAAM6G,KAAKmH,gBAGtC,OAAO,KAGT,IAAMC,EAAYjE,KAAKhK,MAAMkO,OAAOC,WACpC,OACE,qBACEvO,UAAS,2DACO,IAAdqO,EAAqB,sBAAwB,uBADtC,kGADX,SAKGjE,KAAKhK,MAAMoO,e,GA1BUvO,IAAMyN,WAuCvBe,EAAiBb,aAPN,SAAC,GAIvB,MAAO,CAAE3G,KADuC,EAFhDA,KAGqBqH,OAD2B,EADhDA,UAKqD,CACrDI,eACAR,oBAF4BN,CAG3BK,GAwCUU,EAA2C,SAAC,GAKpC,IAAD,IAJlB/H,aAIkB,MAJV,GAIU,MAHlB4D,YAGkB,MAHXoE,IAGW,MAFlBC,cAEkB,aADlBrH,aACkB,MADV,EACU,EACZsH,EAActE,EACpB,OACE,0BACExK,UAAS,WACI,IAAX6O,EACI,mCACA,4BAHG,+HADX,UAOE,0BAAS7O,UAAU,SAAnB,UACE,cAAC8O,EAAD,CAAa9O,UAAU,8BACvB,+BAAO4G,OAGRY,EAAQ,EACP,sBAAMxH,UAAU,0DAAhB,SACGwH,IAED,U,yVCjHJuH,EAAG,UAAMC,IAAIC,KAAV,qBAwFIC,EAAoB,SAACC,GAChC,8CAAO,WAAOC,GAAP,eAAAjD,EAAA,6DACLgD,GAAS,EAAM,IADV,SAGHE,cAHG,SAIeC,IAAMC,IAAN,UACbP,IAAIC,KADS,oBAJf,OAIGO,EAJH,OAOHC,QAAQC,IAAI,yDACZD,QAAQC,IAAIF,GACZC,QAAQC,IAAI,yDACZN,EAAkC,CAChCvH,KAAM8H,IAAYC,oBAClBC,QAASL,EAAIrK,OAEfgK,GAAS,EAAO,IAdb,kDAgBHM,QAAQC,IAAI,CAAEI,WAAW,EAAD,KACxBX,GAAS,EAAOY,YAAY,EAAD,KAjBxB,0DAAP,uDAsBWC,EAAuB,SAAC7K,GAInC,8CAAO,WAAOiK,GAAP,SAAAjD,EAAA,sDACLiD,EAAsC,CACpCvH,KAAM8H,IAAYM,wBAClBJ,QAAS1K,IAHN,2CAAP,uDAUW+K,EAAgB,SAACf,GAC5B,8CAAO,WAAOC,GAAP,iBAAAjD,EAAA,6DACLgD,GAAS,EAAM,IADV,SAGHE,cAHG,SAIeC,IAAMC,IAAN,UAObR,EAPa,gBAJf,OAIGS,EAJH,OAYCW,EAAkCX,EAAIrK,KAAKlE,KAAI,SAACkE,GAAD,MAAW,CAC5DiL,GAAIjL,EAAKiL,GACTC,KAAMlL,EAAKyB,MACXhE,IAAKuC,EAAKvC,IACV0N,UAAWnL,EAAKmL,cAElBlB,EAA8B,CAC5BvH,KAAM8H,IAAYY,gBAClBV,QAASM,IAEXhB,GAAS,EAAO,GAAIgB,GAtBjB,kDAwBHV,QAAQC,IAAI,CAAEI,WAAW,EAAD,KACxBX,GAAS,EAAOY,YAAY,EAAD,KAzBxB,0DAAP,uDAgCWS,EAAe,SAACrB,GAC3B,8CAAO,WAAOC,GAAP,eAAAjD,EAAA,6DACLgD,GAAS,EAAM,IADV,SAGHE,cAHG,SAIeC,IAAMC,IAAN,UAA4BP,IAAIyB,YAAhC,cAJf,OAIGjB,EAJH,OAKHJ,EAA6B,CAC3BvH,KAAM8H,IAAYe,aAClBb,QAASL,EAAIrK,OAEfgK,GAAS,EAAO,IATb,kDAWHM,QAAQC,IAAI,CAAEI,WAAW,EAAD,KACxBX,GAAS,EAAOY,YAAY,EAAD,KAZxB,0DAAP,uDAqCWY,EAAiB,SAACxL,GAE7B,OADAsK,QAAQC,IAAI,CAAEiB,eAAgBxL,IAC9B,uCAAO,WAAOiK,GAAP,SAAAjD,EAAA,sDACLiD,EAAsC,CACpCvH,KAAM8H,IAAYiB,gBAClBf,QAAS1K,IAHN,2CAAP,uDAQW0L,EAAkB,SAAC1L,GAI9B,8CAAO,WAAOiK,GAAP,SAAAjD,EAAA,sDACLiD,EAAgC,CAC9BvH,KAAM8H,IAAYmB,iBAClBjB,QAAS1K,IAHN,2CAAP,uDAQWgC,EAA+B,SAC1C4J,EACA5B,GAEA,8CAAO,WAAOC,GAAP,eAAAjD,EAAA,6DACLgD,GAAS,EAAM,IADV,SAGHE,cAHG,SAIeC,IAAMC,IAAN,UACbP,IAAIyB,YADS,uCACiCM,IALhD,OAIGvB,EAJH,OAOHJ,EAA6B,CAC3BvH,KAAM8H,IAAYe,aAClBb,QAASL,EAAIrK,OAEfgK,GAAS,EAAO,GAAIK,EAAIrK,MAXrB,kDAaHsK,QAAQC,IAAI,CAAEI,WAAW,EAAD,KACxBX,GAAS,EAAOY,YAAY,EAAD,KAdxB,0DAAP,wD,+MCjNUiB,E,kFAAAA,K,2BAAAA,E,0BAAAA,E,6BAAAA,E,qBAAAA,E,iBAAAA,E,iBAAAA,E,yBAAAA,E,sBAAAA,M,KAiBL,IAAMC,EAAqC,SAChDrO,GAEA,OACEA,IAAQoO,EAA6CE,cACrDtO,IAAQoO,EAA6CG,aACrDvO,IAAQoO,EAA6CI,QACrDxO,IAAQoO,EAA6CK,QAO5CC,EACX,CACE,CACE1O,IAAKoO,EAA6CE,aAClDtK,MAAO,eACPH,QAAQ,GAEV,CACE7D,IAAKoO,EAA6CG,YAClDvK,MAAO,cACPH,QAAQ,GAEV,CACE7D,IAAKoO,EAA6CO,aAClD3K,MAAO,gBACPH,QAAQ,GAEV,CACE7D,IAAKoO,EAA6CI,OAClDxK,MAAO,cACPH,QAAQ,GAEV,CACE7D,IAAKoO,EAA6CtH,KAClD9C,MAAO,YACPH,QAAQ,GAEV,CACE7D,IAAKoO,EAA6CQ,KAClD5K,MAAO,YACPH,QAAQ,GAEV,CACE7D,IAAKoO,EAA6CS,SAClD7K,MAAO,gBACPH,QAAQ,GAEV,CACE7D,IAAKoO,EAA6CK,OAClDzK,MAAO,cACPH,QAAQ,IAMDiL,EAAgB,SAACjL,GAC5B,MAAe,SAAXA,EACK,YAEM,YAAXA,EACK,UAEFA,GAaIkL,EAAwB,SACnCC,EACAC,EACAC,GAEA,IAAI/H,EAAuC,GACzCpH,EAAgB,GAFe,WAGtBC,GACT,GAAIC,OAAOC,UAAUC,eAAeC,KAAK6O,EAAUjP,GAAM,CACvD,GAAID,EAAIM,SAAS4O,EAASjP,GAAKwN,IAAK,iBACpCzN,EAAIQ,KAAK0O,EAASjP,GAAKwN,IACvB,IAAI2B,EAAUH,EAAW1H,MACvB,SAACnI,GAAD,OAAUA,EAAKiQ,YAAcH,EAASjP,GAAKqP,UAE7C,GAAIF,EAAS,CACX,IAAIG,EAAWJ,EAAU5H,MACvB,SAACnI,GAAD,OACEA,EAAKkQ,SAAWJ,EAASjP,GAAKqP,QAC9BlQ,EAAKoQ,SAAWN,EAASjP,GAAKuP,UAElCpI,EAAO5G,KAAK,CACViP,YAAaL,EAAQK,YACrBC,YAAaN,EAAQM,YACrBrE,YAAa+D,EAAQ/D,YACrBsE,cAAeP,EAAQO,cACvBN,UAAWD,EAAQC,UACnBO,KAAMV,EAASjP,GACf4P,mBAAoBN,EAAWA,EAASO,YAAc,iBApB9D,IAAK,IAAM7P,KAAOiP,EAAU,EAAjBjP,GAyBX,OAAOmH,GAGI2I,EAA8B,SACzCC,EACAC,GAEA,MAAkB,QAAdA,EACKD,EAEAA,EAAShP,QAAO,SAAC5B,GAAD,OAAUA,EAAKyQ,qBAAuBI,MAIpDC,EAAiB,SAC5BC,EACAC,GAEA,YAAIC,IAAcD,GAAiB,KAATA,EAAoBD,EACvCA,EAAQnP,QAAO,SAACsP,GACrB,IAAIC,EAGJ,IAAK,IAAIC,KAAQF,EAWf,GAVAC,GAAO,EAEI,gBAATC,GACS,gBAATA,GACS,uBAATA,IAEAD,EACED,EAAQE,GAAM/O,WAAWgP,cAAcC,QAAQN,EAAKK,gBACnD,GAEDF,EAAM,MAEZ,OAAOA,MAeLI,EAA4C,SAAClT,GACjD,MAAsCmT,mBAAiB,IAAvD,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAgCF,oBAAkB,GAAlD,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAwCJ,mBAAiB,IAAzD,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAAkCN,mBAAyB,OAA3D,mBAAOO,EAAP,KAAkBC,EAAlB,KAEMC,EAAU,SAACC,GACXL,IAAiBK,GAA8B,QAAdH,GACnCC,EAAa,QACbF,EAAgBI,GAChBN,GAAY,KAEZI,EAAa,OACbF,EAAgBI,GAChBN,GAAY,KAIhB,OACE,cAAC,WAAD,UACE,sBAAK3T,UAAU,gBAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,uBACEyB,SAAU,SAACC,GAAD,OAAO+R,EAAe/R,EAAEE,OAAON,QACzCuG,KAAK,OACLvG,MAAOkS,EACPpG,YAAY,YACZpN,UAAU,uCACVwB,YACEpB,EAAM8T,gBACN9T,EAAM+T,eACN/T,EAAMgU,eACN1B,EACEf,EACEvR,EAAM8T,eACN9T,EAAM+T,cACN/T,EAAMgU,eAERhU,EAAMiU,oBACN1T,QAAU,OAMlB,wBAAOX,UAAU,gBAAgBoQ,GAAG,iBAApC,UACE,uBAAOpQ,UAAU,sEAAjB,SACE,+BACE,oBAAIA,UAAU,YAAd,eACA,oBACEA,UAAU,2BACVM,QAAS,kBAAM0T,EAAQ,gBAFzB,SAIE,sBAAKhU,UAAU,0BAAf,oBACS,cAAC,IAAD,SAGX,oBAAIA,UAAU,YAAd,uBACA,oBAAIA,UAAU,YAAd,uBACA,oBAAIA,UAAU,YAAd,2BACA,oBAAIA,UAAU,YAAd,yBACA,oBACEA,UAAU,2BACVM,QAAS,kBAAM0T,EAAQ,uBAFzB,SAIE,sBAAKhU,UAAU,0BAAf,yBACc,cAAC,IAAD,cAKpB,gCAC4B,OAAzBI,EAAM8T,gBAA2B9T,EAAMS,QACtC,6BACE,oBAAIyT,QAAS,EAAGtU,UAAU,YAA1B,SACE,cAAC,IAAD,QAGFI,EAAM+T,eACR/T,EAAMgU,eACN1B,EACEf,EACEvR,EAAM8T,eACN9T,EAAM+T,cACN/T,EAAMgU,eAERhU,EAAMiU,oBACN1T,QAAU,EACZ,6BACE,oBAAI2T,QAAS,EAAGtU,UAAU,wBAA1B,uCAKFI,EAAM+T,eACN/T,EAAMgU,eACNG,YACEb,EACAb,EACEH,EACEf,EACEvR,EAAM8T,eACN9T,EAAM+T,cACN/T,EAAMgU,eAERhU,EAAMiU,oBAERb,GAEFI,EACAE,GACA7S,KAAI,SAACc,EAAMyS,GAAP,OACJ,qBAEExU,UAAS,UACqB,SAA5B+B,EAAKyQ,mBACD,aACA,WAHG,+GAFX,UAQE,oBAAIxS,UAAU,YAAd,SAA2BwU,EAAI,IAC/B,qBAAIxU,UAAU,YAAd,UACGyU,YAAsB1S,EAAKqQ,aAD9B,KAEE,sBAAMpS,UAAU,gBAAhB,SAAiC+B,EAAKsQ,cAFxC,OAIA,oBAAIrS,UAAU,YAAd,SACG+B,EAAKwQ,KAAO7I,YAAK3H,EAAKwQ,KAAKmC,WAAa,MAE3C,oBAAI1U,UAAU,YAAd,SACG+B,EAAKwQ,KAAOxQ,EAAKwQ,KAAKoC,WAAa,MAEtC,oBAAI3U,UAAU,YAAd,SACG+B,EAAKwQ,KAAOxQ,EAAKwQ,KAAMqC,SAAW,OAAS,MAE9C,oBAAI5U,UAAU,YAAd,SACG+B,EAAKwQ,MACF1O,wBAAczD,EAAMmB,WAAYQ,EAAKwQ,KAAKJ,QACxCtO,wBAAczD,EAAMmB,WAAYQ,EAAKwQ,KAAKJ,QACvClQ,kBAEL,MAEN,oBAAIjC,UAAU,YAAd,SACGyU,YACC/C,EAAc3P,EAAKyQ,yBA/BlBgC,EAAI,iBA4CZvU,QAAMC,KAAKoT,I,iCC3W1B,gBAoCeuB,IA/BmC,SAACzU,GACjD,IAAM0U,EAAc,WAElB,IADA,IAAIC,EAAsB,GACjB5T,EAAQ,EAAGA,EAAQf,EAAM4U,KAAM7T,IACtC4T,EAAU5R,KAAKhC,GAUjB,OARa4T,EAAU9T,KAAI,SAAC2C,GAC1B,OACE,oBAAI5D,UAAU,oCAAd,SACE,qBAAKA,UAAU,yGADsC4D,OAQ7D,OACE,qCACE,oBAAI5D,UAAU,2BAAd,SACG8U,KAD2C,KAG9C,oBAAI9U,UAAU,2BAAd,SACG8U,KAD2C,OAG9C,oBAAI9U,UAAU,2BAAd,SACG8U,KAD2C,a,qTCwCxCG,E,sEAzDCC,EAAwB,I,SAyDzBD,K,kBAAAA,E,oBAAAA,E,qBAAAA,M,KAwCL,IAAME,EAAkB,SAC7BC,EACAjG,GAOA,OADAA,GAAYA,GAAS,EAAM,GAAI,MAC/B,uCAAO,WAAOC,GAAP,eAAAjD,EAAA,sEAEHkD,cAFG,SAGeC,IAAMC,IAAN,UACbP,IAAIqG,KADS,kBACKD,EADL,kBACmBF,IAJlC,OAGG1F,EAHH,OAMHC,QAAQC,IAAI,wCACZD,QAAQC,IAAI,CAAEyF,gBAAiB3F,IAC/BC,QAAQC,IAAI,wCACZN,EAA2B,CACzBvH,KAAM8H,IAAY2F,mBAClBzF,QAAS,CACP0F,MAAO,CAAC,CAAEpQ,KAAMqK,EAAIrK,KAAKoQ,MAAQH,KAAMA,IACvCI,KAAMhG,EAAIrK,KAAKqQ,KACfC,SAAUjG,EAAIrK,KAAKsQ,SACnBC,YAAalG,EAAIrK,KAAKuQ,eAG1BvG,GAAYA,GAAS,EAAO,GAAIK,EAAIrK,KAAKoQ,OAlBtC,kDAoBH9F,QAAQkG,MAAM,CAAEC,WAAW,EAAD,KAC1BzG,GAAYA,GAAS,EAAOY,YAAY,EAAD,IAAS,MArB7C,0DAAP,uDA0BW8F,EAAoB,SAACC,EAAiBV,GACjD,8CAAO,WAAOhG,GAAP,SAAAjD,EAAA,sDACLiD,EAA4B,CAC1BvH,KAAM8H,IAAYoG,qBAClBlG,QAAS,CAAEO,GAAI0F,EAASV,UAHrB,2CAAP,uDAQWY,EAAsB,SAACF,EAAiBV,GACnD,8CAAO,WAAOhG,GAAP,SAAAjD,EAAA,sDACLiD,EAA4B,CAC1BvH,KAAM8H,IAAYsG,uBAClBpG,QAAS,CAAEO,GAAI0F,EAASV,UAHrB,2CAAP,uDAQWc,EAAyB,SACpC/Q,EACAiQ,GAEA,8CAAO,WAAOhG,GAAP,SAAAjD,EAAA,sDACLiD,EAAiC,CAC/BvH,KAAM8H,IAAYwG,oBAClBtG,QAAS,CAAE1K,OAAMiQ,UAHd,2CAAP,uDAQWgB,EAAsB,SACjCjR,EACAiQ,GAEA,8CAAO,WAAOhG,GAAP,SAAAjD,EAAA,sDACLiD,EAAoC,CAClCvH,KAAM8H,IAAY0G,sBAClBxG,QAAS,CAAE1K,OAAMiQ,UAHd,2CAAP,uDAQWkB,EAAkB,SAACnR,EAAciQ,GAC5C,8CAAO,WAAOhG,GAAP,SAAAjD,EAAA,sDACLiD,EAAgC,CAC9BvH,KAAM8H,IAAY4G,kBAClB1G,QAAS,CAAEiG,QAAS3Q,EAAMiQ,UAHvB,2CAAP,uDAQWoB,EAAkB,uCAAG,WAChCC,EACAtH,GAFgC,eAAAhD,EAAA,6DAQhCgD,GAAS,EAAM,GAAI,MARa,SAU9BE,cAV8B,SAWZC,IAAMC,IAAN,UACbP,IAAIqG,KADS,kBACKoB,IAZO,OAWxBjH,EAXwB,OAc9BC,QAAQC,IAAI,0DACZD,QAAQC,IAAI,CAAE8G,mBAAoBhH,IAClCC,QAAQC,IAAI,0DACZP,GAAS,EAAO,GAAIK,EAAIrK,MAjBM,kDAmB9BsK,QAAQkG,MAAM,CAAEC,WAAW,EAAD,KAC1BzG,GAAS,EAAOY,YAAY,EAAD,IAAS,MApBN,0DAAH,yD,oRC5CnB2G,E,oOChICC,EAA2C,SACtDC,GAI0C,IAoBtCC,EAvBJC,EAGyC,uDAHZ,KAC7B9E,EAEyC,uDAFd,KAC3BY,EACyC,uDADC,MAEtC7I,EAA+C,GAEjDA,EADgB,QAAd6I,EACOgE,EAEAA,EAASjT,QAAO,SAAC5B,GAAD,OAAUA,EAAKgV,eAAiBnE,KAGvDkE,IACF/M,EAASA,EAAOpG,QACd,SAAC5B,GAAD,OACEA,EAAKwQ,KAAKyE,eACVjV,EAAKwQ,KAAKyE,cAAcF,cAAgBA,MAG1C9E,IACFjI,EAASA,EAAOpG,QAAO,SAAC5B,GAAD,OAAUA,EAAKiQ,YAAcA,MAKtD,IAAK,IAAIwC,EAAI,EAAGA,EAAIzK,EAAOpJ,OAAQ6T,IACjC,IAAK,IAAIyC,EAAIzC,EAAGyC,EAAIlN,EAAOpJ,OAAQsW,IAC7BlN,EAAOkN,GAAGC,iBAAmBnN,EAAOyK,GAAG0C,mBACzCL,EAAO9M,EAAOkN,GACdlN,EAAOkN,GAAKlN,EAAOyK,GACnBzK,EAAOyK,GAAKqC,GAIlB,OAAO9M,GAkMM9J,MAAMC,KACnB0N,aAXsB,SAAC,GAKvB,MAAO,CACLuJ,gBAFC,EAHHA,mBAUyB,GAAzBvJ,EAjLE,SAACxN,GACH,MAAsCmT,mBAAiB,IAAvD,mBAAOC,EAAP,KAAoBC,EAApB,KAEA,OACE,cAAC,WAAD,UACE,sBAAKzT,UAAU,gBAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,uBACEyB,SAAU,SAACC,GAAD,OAAO+R,EAAe/R,EAAEE,OAAON,QACzCuG,KAAK,OACLvG,MAAOkS,EACPpG,YAAY,YACZpN,UAAU,uCACVwB,YACEpB,EAAM8T,gBACN9T,EAAMgX,0BACNT,EACEU,YACEjX,EAAM8T,eACN9T,EAAMgX,yBACNhX,EAAM+W,gBAAgBG,eAClBlX,EAAM+W,gBAAgBG,eAAetF,UACrC,OAEN5R,EAAM+W,gBAAgBI,iBAClBnX,EAAM+W,gBAAgBI,iBAAiBT,YACvC,KACJ1W,EAAM+W,gBAAgBG,eAClBlX,EAAM+W,gBAAgBG,eAAetF,UACrC,KACJ5R,EAAMoX,4BACN7W,QAAU,OAMlB,qBAAKX,UAAU,yBAAf,SACE,wBAAOA,UAAU,gBAAgBoQ,GAAG,iBAApC,UACE,uBAAOpQ,UAAU,sEAAjB,SACE,+BACE,oBAAIA,UAAU,YAAd,eACA,oBAAIA,UAAU,YAAd,wBACA,oBAAIA,UAAU,YAAd,yBACA,oBAAIA,UAAU,YAAd,mBACA,oBAAIA,UAAU,YAAd,mBACA,oBAAIA,UAAU,YAAd,SACE,qBAAKA,UAAU,0BAAf,oBAEF,oBAAIA,UAAU,YAAd,yBACA,oBAAIA,UAAU,YAAd,uBACA,oBAAIA,UAAU,YAAd,6BACA,oBAAIA,UAAU,YAAd,2BACA,oBAAIA,UAAU,YAAd,SACE,qBAAKA,UAAU,0BAAf,qBAEF,oBAAIA,UAAU,YAAd,yBAGJ,gCAC4B,OAAzBI,EAAM8T,gBAA2B9T,EAAMS,QACtC,6BACE,oBAAIyT,QAAS,GAAItU,UAAU,YAA3B,SACE,cAACyX,EAAA,EAAD,QAGFrX,EAAMgX,0BACRT,EACEU,YACEjX,EAAM8T,eACN9T,EAAMgX,yBACNhX,EAAM+W,gBAAgBG,eAClBlX,EAAM+W,gBAAgBG,eAAetF,UACrC,OAEN5R,EAAM+W,gBAAgBI,iBAClBnX,EAAM+W,gBAAgBI,iBAAiBT,YACvC,KACJ1W,EAAM+W,gBAAgBG,eAClBlX,EAAM+W,gBAAgBG,eAAetF,UACrC,KACJ5R,EAAMoX,4BACN7W,QAAU,EACZ,6BACE,oBAAI2T,QAAS,GAAItU,UAAU,wBAA3B,4CAKFI,EAAMgX,0BACNM,YACEf,EACEU,YACEjX,EAAM8T,eACN9T,EAAMgX,yBACNhX,EAAM+W,gBAAgBG,eAClBlX,EAAM+W,gBAAgBG,eAAetF,UACrC,OAEN5R,EAAM+W,gBAAgBI,iBAClBnX,EAAM+W,gBAAgBI,iBAAiBT,YACvC,KACJ1W,EAAM+W,gBAAgBG,eAClBlX,EAAM+W,gBAAgBG,eAAetF,UACrC,KACJ5R,EAAMoX,4BACNG,MAAM,EAAG,IACXnE,GACAvS,KAAI,SAACc,EAAMyS,GAAP,OACJ,qBAEExU,UAAS,UAAK4X,YACZ7V,EAAKgV,cADE,gEAFX,UAME,oBAAI/W,UAAU,YAAd,SAA2BwU,EAAI,IAC/B,oBAAIxU,UAAU,YAAd,SACGyU,YAAsB1S,EAAK8V,aAE9B,oBAAI7X,UAAU,YAAd,SAA2B+B,EAAK+G,cAChC,oBAAI9I,UAAU,YAAd,SAA2B+B,EAAK+V,aAChC,oBAAI9X,UAAU,YAAd,SAA2B+B,EAAKgW,aAChC,qBAAI/X,UAAU,YAAd,UACGyU,YAAsB1S,EAAKqQ,aAD9B,KAEE,sBAAMpS,UAAU,gBAAhB,SAAiC+B,EAAKsQ,cAFxC,OAIA,oBAAIrS,UAAU,YAAd,SACG+B,EAAKwQ,MACF1O,EAAczD,EAAMmB,WAAYQ,EAAKwQ,KAAKJ,QACxCtO,EAAczD,EAAMmB,WAAYQ,EAAKwQ,KAAKJ,QACvClQ,kBAEL,MAEN,oBAAIjC,UAAU,YAAd,SACG+B,EAAKwQ,KAAKmC,UAAYhL,YAAK3H,EAAKwQ,KAAKmC,WAAa,MAErD,oBAAI1U,UAAU,YAAd,SACG+B,EAAKwQ,KAAKoC,WACPqD,YAAgBjW,EAAKwQ,KAAKoC,YAAYsD,SACtC,MAEN,oBAAIjY,UAAU,YAAd,SACG+B,EAAKwQ,KAAK2F,SACPF,YAAgBjW,EAAKwQ,KAAK2F,UAAUD,SACpC,MAEN,oBAAIjY,UAAU,YAAd,SACG+B,EAAKgV,eAAiBoB,IAAqBC,QACxChP,OAAOrH,EAAKmV,iBAAiB5N,QAAQ,IAAM,IAC3C,MAEN,oBAAItJ,UAAU,YAAd,SACGyU,YAAsB/C,YAAc3P,EAAKgV,mBA3CvCvC,EAAI,sB,0BCvJhB6D,EAAyC,SACpDzG,EACAC,EACAyG,EACAlB,EACAN,GAEA,IAyEID,EAzEA0B,EAAe,EACjB3Q,EAAiB,EACjBmC,EAA0C,GAC1CpH,EAAgB,GAChB6V,EAAqB,GACrBpE,EAAyDkE,EAAU3U,QACjE,SAAC5B,GAAD,MAAmD,SAAzCA,EAAK0Q,YAAYpO,uBAPK,WAUzBzB,GACT,GAAIC,OAAOC,UAAUC,eAAeC,KAAKoR,EAAexR,GAAM,CAC5D,GAAI4V,EAASvV,SAASmR,EAAcxR,GAAKwN,IAAK,iBAC9CoI,EAASrV,KAAKiR,EAAcxR,GAAKwN,IACjC,IAAI2B,EAAUH,EAAW1H,MACvB,SAACnI,GAAD,OAAUA,EAAKiQ,YAAcoC,EAAcxR,GAAKqP,UAE9CwG,EAAiB,EAErB,GAAI1G,EAAS,CAEX,IAAI2G,EACFtB,EAAyBzT,QACvB,SAAC5B,GAAD,OACEA,EAAKkQ,SAAWmC,EAAcxR,GAAKqP,QACnClQ,EAAKiV,eACLjV,EAAKiV,cAAcF,cAAgBA,KAEzC,IAAK,IAAM6B,KAAQD,EACjB,GAAI7V,OAAOC,UAAUC,eAAeC,KAAK0V,EAAkBC,GAAO,CAChE,GAAIhW,EAAIM,SAASyV,EAAiBC,GAAMC,KAAK9C,SAAU,SACvDnT,EAAIQ,KAAKuV,EAAiBC,GAAMC,KAAK9C,SACrC2C,GAAUC,EAAiBC,GAAME,YAE/BH,EAAiBC,GAAMG,cACrBX,IAAqBC,SACvBM,EAAiBC,GAAME,aAAe,GAEtCN,GAAQ,EAERG,EAAiBC,GAAMG,cACvBX,IAAqBC,UAErBxQ,GAAU,GAIhB,IAAI2K,EAAOV,EAAS3H,MAClB,SAACnI,GAAD,OACEA,EAAKkQ,SAAWmC,EAAcxR,GAAKqP,QACnClQ,EAAKoQ,SAAWiC,EAAcxR,GAAKuP,UAEnCI,GACFxI,EAAO5G,KAAK,CACViP,YAAaL,EAAQK,YACrBC,YAAaN,EAAQM,YACrBrE,YAAa+D,EAAQ/D,YACrBsE,cAAeP,EAAQO,cACvBN,UAAWD,EAAQC,UACnBO,KAAMA,EACNwG,eAAgBR,EAChBS,iBAAkBpR,EAClBqR,WAAYtW,EAAIhC,OAChBuW,iBAAkBuB,EAASA,EAAS9V,EAAIhC,OAAS8X,IAGrDA,EAAS,EACT9V,EAAM,IAGV6V,EAAW,IA5Db,IAAK,IAAM5V,KAAOwR,EAAe,EAAtBxR,GAiEX,IAAK,IAAI4R,EAAI,EAAGA,EAAIzK,EAAOpJ,OAAQ6T,IACjC,IAAK,IAAIyC,EAAIzC,EAAGyC,EAAIlN,EAAOpJ,OAAQsW,IAC7BlN,EAAOkN,GAAGC,iBAAmBnN,EAAOyK,GAAG0C,mBACzCL,EAAO9M,EAAOkN,GACdlN,EAAOkN,GAAKlN,EAAOyK,GACnBzK,EAAOyK,GAAKqC,GAIlB,OAAO9M,GAiLM9J,MAAMC,KACnB0N,aAXsB,SAAC,GAKvB,MAAO,CACLuJ,gBAFC,EAHHA,mBAUyB,GAAzBvJ,EApK4E,SAC5ExN,GAEA,MAAsCmT,mBAAiB,IAAvD,mBAAOC,EAAP,KAAoBC,EAApB,KAEA,OACE,cAAC,WAAD,UACE,sBAAKzT,UAAU,2CAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,uBACEyB,SAAU,SAACC,GAAD,OAAO+R,EAAe/R,EAAEE,OAAON,QACzCuG,KAAK,OACLvG,MAAOkS,EACPpG,YAAY,YACZpN,UAAU,uCACVwB,YACEpB,EAAM8T,gBACN9T,EAAM+T,eACN/T,EAAMgU,eACNhU,EAAMgX,0BACNhX,EAAM+W,gBAAgBI,kBACtBc,EACEjY,EAAM8T,eACN9T,EAAM+T,cACN/T,EAAMgU,cACNhU,EAAMgX,yBACNhX,EAAM+W,gBAAgBI,iBAAiBT,aACvCa,MAAM,EAAG,IAAIhX,QAAU,OAM/B,wBAAOX,UAAU,gBAAgBoQ,GAAG,iBAApC,UACE,uBAAOpQ,UAAU,sEAAjB,SACE,+BACE,oBAAIA,UAAU,YAAd,eACA,oBACEA,UAAU,2BADZ,SAIE,qBAAKA,UAAU,0BAAf,sBAKF,oBAAIA,UAAU,YAAd,uBACA,oBAAIA,UAAU,YAAd,uBACA,oBAAIA,UAAU,YAAd,2BACA,oBAAIA,UAAU,YAAd,yBACA,oBAAIA,UAAU,YAAd,6BACA,oBAAIA,UAAU,YAAd,+BACA,oBACEA,UAAU,2BADZ,SAIE,qBAAKA,UAAU,0BAAf,+BAON,gCAC4B,OAAzBI,EAAM8T,gBAA2B9T,EAAMS,QACtC,6BACE,oBAAIyT,QAAS,EAAGtU,UAAU,YAA1B,SACE,cAACyX,EAAA,EAAD,QAGFrX,EAAM+T,eACR/T,EAAMgU,eACNhU,EAAMgX,0BACNhX,EAAM+W,gBAAgBI,kBACtBc,EACEjY,EAAM8T,eACN9T,EAAM+T,cACN/T,EAAMgU,cACNhU,EAAMgX,yBACNhX,EAAM+W,gBAAgBI,iBAAiBT,aACvCnW,QAAU,EACZ,6BACE,oBAAI2T,QAAS,EAAGtU,UAAU,wBAA1B,SACE,cAACkZ,EAAA,EAAD,CACErS,MAAOsS,IAAeC,KACtB9X,MAAO,kCAKblB,EAAM+T,eACN/T,EAAMgU,eACNhU,EAAMgX,0BACNhX,EAAM+W,gBAAgBI,kBACtBlK,YACEgL,EACEjY,EAAM8T,eACN9T,EAAM+T,cACN/T,EAAMgU,cACNhU,EAAMgX,yBACNhX,EAAM+W,gBAAgBI,iBAAiBT,aACvCa,MAAM,EAAG,IACXnE,GACAvS,KAAI,SAACc,EAAqCyS,GAAtC,OACJ,qBAEExU,UAAS,sHAFX,UAIE,oBAAIA,UAAU,YAAd,SAA2BwU,EAAI,IAC/B,qBAAIxU,UAAU,YAAd,UACGyU,YAAsB1S,EAAKqQ,aAD9B,KAEE,sBAAMpS,UAAU,gBAAhB,SAAiC+B,EAAKsQ,cAFxC,OAIA,oBAAIrS,UAAU,YAAd,SACG+B,EAAKwQ,KAAO7I,YAAK3H,EAAKwQ,KAAKmC,WAAa,MAE3C,oBAAI1U,UAAU,YAAd,SACG+B,EAAKwQ,KAAOxQ,EAAKwQ,KAAKoC,WAAa,MAEtC,oBAAI3U,UAAU,YAAd,SACG+B,EAAKwQ,KAAOxQ,EAAKwQ,KAAMqC,SAAW,OAAS,MAE9C,oBAAI5U,UAAU,YAAd,SACG+B,EAAKwQ,MACF1O,EAAczD,EAAMmB,WAAYQ,EAAKwQ,KAAKJ,QACxCtO,EAAczD,EAAMmB,WAAYQ,EAAKwQ,KAAKJ,QACvClQ,kBAEL,MAEN,oBAAIjC,UAAU,YAAd,cAC2BgT,IAAxBjR,EAAKgX,eACFhX,EAAKgX,eACL,MAEN,oBAAI/Y,UAAU,YAAd,cAC6BgT,IAA1BjR,EAAKiX,iBACFjX,EAAKiX,iBACL,MAEN,oBAAIhZ,UAAU,YAAd,SACGoJ,OAAOrH,EAAKmV,iBAAiB5N,QAAQ,IAAM,QApCzCkL,EAAI,oBC/NrB6E,EAAsD,SAACjZ,GAC3D,OACE,cAAC,WAAD,UACGA,EAAMC,cAAgBqW,EAAgB4C,kBACrClZ,EAAMC,cAAgBqW,EAAgB6C,2BACpC,sBAAKvZ,UAAU,OAAf,UACE,qBAAKA,UAAU,kCAAf,iCAICI,EAAMC,cAAgBqW,EAAgB8C,kBACrC,oCACE,qBAAKlZ,QAAS,kBAAMF,EAAMqZ,qBAAqB,QAA/C,SACE,cAAC,IAAD,CACE7S,MAAM,MACNY,MAAO,EACPqH,OAAoC,QAA5BzO,EAAMsZ,sBAGlB,qBAAKpZ,QAAS,kBAAMF,EAAMqZ,qBAAqB,aAA/C,SACE,cAAC,IAAD,CACE7S,MAAM,WACNY,MAAO,EACPqH,OAAoC,aAA5BzO,EAAMsZ,sBAGlB,qBAAKpZ,QAAS,kBAAMF,EAAMqZ,qBAAqB,iBAA/C,SACE,cAAC,IAAD,CACE7S,MAAM,eACNY,MAAO,EACPqH,OAAoC,iBAA5BzO,EAAMsZ,yBAQrBtZ,EAAMC,cAAgBqW,EAAgBiD,sBACrC,oCACE,qBAAKrZ,QAAS,kBAAMF,EAAMwZ,sBAAsB,QAAhD,SACE,cAAC,IAAD,CACEhT,MAAM,MACNY,MAAO,EACPqH,OAAqC,QAA7BzO,EAAMiU,uBAGlB,qBAAK/T,QAAS,kBAAMF,EAAMwZ,sBAAsB,SAAhD,SACE,cAAC,IAAD,CACEhT,MAAM,iBACNY,MAAO,EACPqH,OAAqC,SAA7BzO,EAAMiU,uBAGlB,qBAAK/T,QAAS,kBAAMF,EAAMwZ,sBAAsB,WAAhD,SACE,cAAC,IAAD,CACEhT,MAAM,iBACNY,MAAO,EACPqH,OAAqC,WAA7BzO,EAAMiU,2BAQpBjU,EAAMC,cAAgBqW,EAAgBmD,wBACtCzZ,EAAMC,cACJqW,EAAgBoD,kCAClB,oCACE,qBAAKxZ,QAAS,kBAAMF,EAAM2Z,8BAA8B,QAAxD,SACE,cAAC,IAAD,CACEnT,MAAM,MACNY,MAAO,EACPqH,OAA6C,QAArCzO,EAAMoX,+BAIjB3U,OAAOmX,OAAO7B,KAAsBlX,KAAI,SAACc,EAAMZ,GAAP,OACvC,qBACEb,QAAS,kBAAMF,EAAM2Z,8BAA8BhY,IADrD,SAIE,cAAC,IAAD,CACE6E,MAAO8K,YAAc3P,GACrByF,MAAO,EACPqH,OAAQzO,EAAMoX,6BAA+BzV,KAL1CZ,EAAQY,eAkBlB9B,MAAMC,KAAKmZ,G,0BCuSXpZ,MAAMC,KACnB0N,aApBsB,SAAC,GAUnB,IATJuJ,EASG,EATHA,gBACA7Q,EAQG,EARHA,aACA2L,EAOG,EAPHA,OACAgI,EAMG,EANHA,YAOA,MAAO,CACL3T,eACA4T,QAASjI,EAAOiI,QAChBC,UAAWF,EAAYE,UACvBhD,qBAKuB,CAAEiD,0BAA3BxM,EAzSsD,SAACxN,GACvD,MAAwCmT,oBAAkB,GAA1D,mBAAO8G,EAAP,KAAqBC,EAArB,KACA,EAA0C/G,oBAAkB,GAA5D,mBAAOgH,EAAP,KAAsBC,EAAtB,KACA,EAAoCjH,oBAAkB,GAAtD,mBAAOkH,EAAP,KAAmBC,EAAnB,KACA,EAAsCnH,oBAAkB,GAAxD,mBAAOoH,EAAP,KAAoBC,EAApB,KAiBA,OAfAC,qBAAU,WAENza,EAAMC,cAAgBqW,EAAgB6C,2BACK,OAA3CnZ,EAAM+W,gBAAgBI,kBAEtBiD,GAAiB,GAGjBpa,EAAMC,cAAgBqW,EAAgB6C,2BACK,OAA3CnZ,EAAM+W,gBAAgBI,kBAEtBiD,GAAiB,KAElB,CAACpa,EAAM+W,gBAAgBI,iBAAkBnX,EAAMC,cAGhD,eAAC,WAAD,WACE,sBAAKL,UAAU,oCAAf,UACE,qBAAKA,UAAU,2BAAf,SACE,sBAAKA,UAAU,gCAAf,UACE,sBAAMA,UAAU,kCAAhB,yBACA,sBACEA,UAAU,+CACVM,QAAS,kBAAMga,GAAgB,IAFjC,UAIE,sBAAMta,UAAU,wBAAhB,2BACA,uBAAMA,UAAU,6CAAhB,UACGI,EAAMC,YAAa,IACnBD,EAAMC,cACLqW,EAAgB6C,2BAClBnZ,EAAM+W,gBAAgBI,iBAClBnX,EAAM+W,gBAAgBI,iBAAiBuD,cACvC,UAGN1a,EAAMC,cAAgBqW,EAAgB6C,2BACtCnZ,EAAMC,cACJqW,EAAgBoD,iCAClB1Z,EAAMC,cAAgBqW,EAAgBmD,yBACtC,sBAAK7Z,UAAU,0FAAf,UACE,sBAAMA,UAAU,gBAAhB,8BACCI,EAAM+W,gBAAgBI,kBACtBnX,EAAMC,cACLqW,EAAgBoD,iCAChB1Z,EAAMC,cACJqW,EAAgB6C,0BAKlB,sBAAMvZ,UAAU,gCAAhB,4BAJA,uBAAMA,UAAU,gCAAhB,eACKI,EAAM+W,gBAAgBI,iBAAiBuD,iBAO7C1a,EAAM+W,gBAAgBG,eACrBlX,EAAMC,cACJqW,EAAgBoD,iCAChB,uBAAM9Z,UAAU,gCAAhB,cAEGI,EAAM+W,gBAAgBG,eAAelF,YACpC,KACAhS,EAAM+W,gBAAgBG,eAAejF,YACrC,OAIN,sBAAMrS,UAAU,gCAAhB,iCAQV,qBAAKA,UAAU,2BAAf,SACE,sBAAKA,UAAU,mBAAf,UACGI,EAAM2a,aAAe3a,EAAM2a,YAAYpa,OAAS,GAC/C,sBAAKX,UAAU,wDAAf,UACE,cAAC,IAAD,CAAUA,UAAU,2BACpB,sBAAMA,UAAU,gBAAhB,uBACA,wBACEA,UAAS,2HAMTM,QAAS,WACPF,EAAM4a,oBACNN,GAAc,GACdta,EAAM6a,uBAAuB,CAC3BC,WAAY,QACZzU,QAAQ,KAZd,mBAkBA,wBACEzG,UAAS,mIACPI,EAAM+a,aAAe,eAEvB7a,QAAS,kBAAMF,EAAMgb,eACrB5Z,SAAUpB,EAAM+a,YALlB,oBAYJ,8BACE,sBACE7a,QAAS,kBAAMga,GAAgB,IAC/Bta,UAAU,8JAFZ,UAIE,cAAC,IAAD,CAAQA,UAAU,YAJpB,qBASF,0BAASA,UAAU,2CAAnB,WACII,EAAMC,cACNqW,EAAgB6C,2BAChBnZ,EAAMC,cACJqW,EAAgBoD,kCAClB,sBACExZ,QAAS,kBAAMka,GAAiB,IAChCxa,UAAU,gJAFZ,UAIE,cAAC,IAAD,CAAaA,UAAU,YAJzB,yBAQAI,EAAMC,cAAgBqW,EAAgBmD,wBACtCzZ,EAAMC,cACJqW,EAAgBoD,kCAClB,sBACExZ,QAAS,kBAAMsa,GAAe,IAC9B5a,UAAU,gJAFZ,UAIE,cAAC,IAAD,CAAaA,UAAU,YAJzB,+BAcTya,GACC,cAACY,EAAA,EAAD,CACEC,SAAUC,IAAcC,oBACxBC,WAAYhB,EACZiB,iBAAkBhB,EAClBra,YAAaD,EAAMC,YACnB4a,uBAAwB7a,EAAM6a,uBAC9BU,iBAAkBvb,EAAMub,iBACxBC,oBAAqBxb,EAAMwb,oBAC3BZ,kBAAmB5a,EAAM4a,kBACzBQ,oBAAqBpb,EAAMob,oBAE3BK,aAAczb,EAAMyb,aACpBC,6BAA8B1b,EAAM0b,6BACpCC,gCACE3b,EAAM2b,gCAGRC,uBAAwB5b,EAAM4b,uBAC9BC,6BAA8B7b,EAAM6b,6BACpCC,gCACE9b,EAAM8b,gCAGRC,yBAA0B/b,EAAM+b,yBAChCC,+BAAgChc,EAAMgc,+BACtCC,kCACEjc,EAAMic,kCAGRC,2BAA4Blc,EAAMkc,2BAClCC,iCACEnc,EAAMmc,iCAERC,mDACEpc,EAAMoc,mDAGRC,gCACErc,EAAMqc,gCAERC,sCACEtc,EAAMsc,sCAERC,yCACEvc,EAAMuc,yCAERC,kCACExc,EAAMwc,kCAERC,wCACEzc,EAAMyc,wCAERC,2CACE1c,EAAM0c,6CAOXzC,GACC,cAACgB,EAAA,EAAD,CACEC,SAAUC,IAAc3U,MACxB6U,WAAYpB,EACZha,YAAaD,EAAMC,YACnBqb,iBAAkBpB,EAClByC,eAAgB3c,EAAM2c,eACtBnB,oBAAqBxb,EAAMwb,sBAM9BrB,GACC,cAACc,EAAA,EAAD,CACEC,SAAUC,IAAcyB,gBACxBvB,WAAYlB,EACZmB,iBAAkBlB,EAClByC,WACE7c,EAAM+W,gBAAgBI,iBAClBnX,EAAM+W,gBAAgBI,iBAAiBT,YACvC,MAENzW,YAAaD,EAAMC,cAMtBsa,GACCuC,kCACE9c,EAAM+W,gBAAgBgG,SACtB/c,EAAM+Z,UACN/Z,EAAMkG,aAAa8W,0BACnBhd,EAAM8Z,QACN9Z,EAAMkG,aAAagM,cACnBlS,EAAMmB,aAEN,cAAC8Z,EAAA,EAAD,CACEC,SAAUC,IAAc8B,YACxB5B,WAAYd,EACZ2C,YACEJ,kCACE9c,EAAM+W,gBAAgBgG,SACtB/c,EAAM+Z,UACN/Z,EAAMkG,aAAa8W,0BACnBhd,EAAM8Z,QACN9Z,EAAMkG,aAAagM,cACnBlS,EAAMmB,YACLgc,SAEL7B,iBAAkBd,EAClB4C,SAAUpd,EAAM+W,gBAAgBG,wBJzQ/BmG,EAAoB,SAC/B5L,EACAG,GAEA,OAAOH,EAAS3H,MAAK,SAACnI,GAAD,OAAUA,EAAKkQ,SAAWD,MAGpCnO,EAAgB,SAC3B6Z,EACAC,GAEA,OAAOD,EAAQxT,MAAK,SAACnI,GAAD,OAAUA,EAAKC,MAAQ2b,MAGhCC,EAAe,SAC1BzD,EACA0D,GAEA,IAAI9T,EAAoCoQ,EAMxC,OAJEpQ,EADEA,GAAU8T,EACH9T,EAAOpG,QAAO,SAAC5B,GAAD,OAAUA,EAAKoQ,UAAL,OAAgB0L,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAiB7b,QAEzDmY,I,SAMDzD,K,qCAAAA,E,2DAAAA,E,oCAAAA,E,0DAAAA,E,mDAAAA,E,iEAAAA,M,SA2FNoH,E,kDACJ,WAAY1d,GAAyB,IAAD,8BAClC,cAAMA,IAwDRwF,WAAa,SAACtE,GACZ,EAAKuE,SAAS,CAAEhF,QAASS,KA1DS,EA6DpCyc,kBAAoB,SAACzc,GACnB,EAAKuE,SAAS,CAAEmY,eAAgB1c,KA9DE,EAiEpC2c,gBAAkB,SAAC3c,GACjB,EAAKuE,SAAS,CAAEqY,aAAc5c,KAlEI,EAqEpC6c,eAAiB,SAAC7c,GAChB,EAAKuE,SAAS,CAAEsV,YAAa7Z,KAtEK,EAyEpC8c,mBAAqB,SAAC9c,GACpB,EAAKuE,SAAS,CAAEwY,gBAAiB/c,KA1EC,EA6EpCgd,oCAAsC,SAAChd,GACrC,EAAKuE,SAAS,CAAE0Y,iCAAkCjd,KA9EhB,EAiFpCkd,0BAA4B,SAACld,GAC3B,EAAKuE,SAAS,CAAE4Y,uBAAwBnd,KAlFN,EAqFpCod,mBAAqB,SAACpd,GACpB,EAAKuE,SAAS,CAAE8Y,gBAAiBrd,KAtFC,EAyFpCsd,gBAAkB,SAACtd,GACjB,EAAKuE,SAAS,CAAEgZ,aAAcvd,KA1FI,EA6FpCkZ,iBAAmB,SAAClZ,GAClB,EAAKuE,SAAS,CAAE0U,cAAejZ,KA9FG,EAiGpCmY,qBAAuB,SAACnY,GACtB,EAAKuE,SAAS,CAAE6T,kBAAmBpY,KAlGD,EAqGpCsY,sBAAwB,SAACtY,GACvB,EAAKuE,SAAS,CAAEwO,mBAAoB/S,KAtGF,EAyGpCyY,8BAAgC,SAACzY,GAC/B,EAAKuE,SAAS,CAAE2R,2BAA4BlW,KA1GV,EA6GpC2Z,uBAAyB,SACvB3Z,GAKA,EAAKuE,SAAS,CAAE2V,oBAAqBla,KAnHH,EAsHpCwd,kBAAoB,SAACxd,GACnB,EAAKuE,SAAS,CAAEgY,gBAAiBvc,KAvHC,EA0HpCyb,eAAiB,SAACzb,GAChB,EAAKuE,SAAS,CAAExF,YAAaiB,KA3HK,EA8HpCsa,oBAAsB,SAACta,GACrB,EAAKuE,SAAS,CAAE8V,iBAAkBra,KA/HA,EAkIpCyd,gBAAkB,SAACzd,GACjB,EAAKuE,SAAS,CAAEgW,aAAcva,KAnII,EAsIpCya,gCAAkC,SAChCza,GAEA,EAAKuE,SAAS,CAAEiW,6BAA8Bxa,KAzIZ,EA2IpC0d,0BAA4B,SAC1B1d,GAEA,EAAKuE,SAAS,CAAEmW,uBAAwB1a,KA9IN,EAgJpC4a,gCAAkC,SAChC5a,GAEA,EAAKuE,SAAS,CAAEoW,6BAA8B3a,KAnJZ,EAsJpC2d,4BAA8B,SAC5B3d,GAEA,EAAKuE,SAAS,CAAEsW,yBAA0B7a,KAzJR,EA2JpC+a,kCAAoC,SAClC/a,GAEA,EAAKuE,SAAS,CAAEuW,+BAAgC9a,KA9Jd,EAgKpC4d,8BAAgC,SAC9B5d,GAEA,EAAKuE,SAAS,CAAEyW,2BAA4Bhb,KAnKV,EAqKpCkb,mDAAqD,SACnDlb,GAEA,EAAKuE,SAAS,CAAE0W,iCAAkCjb,KAxKhB,EA2KpC6d,mCAAqC,SACnC7d,GAEA,EAAKuE,SAAS,CAAE4W,gCAAiCnb,KA9Kf,EAiLpCqb,yCAA2C,SACzCrb,GAEA,EAAKuE,SAAS,CAAE6W,sCAAuCpb,KApLrB,EAuLpC8d,qCAAuC,SACrC9d,GAEA,EAAKuE,SAAS,CAAE+W,kCAAmCtb,KA1LjB,EA6LpCwb,2CAA6C,SAC3Cxb,GAEA,EAAKuE,SAAS,CAAEgX,wCAAyCvb,KAhMvB,EAmMpC+d,qBAAuB,SAACC,GACtB,GAAIA,EAAW3e,OAAS,EAAG,CACzB,IAAI4e,EAAgBD,EAAWpV,MAAK,SAACnI,GAAD,OAAUA,EAAKyd,aACnD,EAAKV,kBAAkBS,GAAgCD,EAAW,IAClE,EAAKG,eACHF,EAAgBA,EAAcvd,IAAMsd,EAAW,GAAGtd,KAGtD,EAAK4c,iBAAgB,IA3Ma,EAuNpCc,eAAiB,SAAC3O,GAChB,EAAK+N,kBAAkB,MACvB,EAAK1e,MAAMuf,8BACT5O,GACA,SAACtK,EAAiBC,EAAavB,GAC7B,EAAKuZ,mBAAmBjY,GACnBA,IACEmZ,YAAgBlZ,IACnB,EAAKtG,MAAMuG,eAAe,CACxBC,MAAOF,EACPG,MAAOC,IAAgBC,SAGvB5B,GAAQA,EAAKxE,OAAS,GACxB,EAAK0e,qBAAqBla,QArOA,EA4OpCkB,kBAAoB,WAKlB,GAJIwZ,YAAgB,EAAKzf,MAAM6G,KAAKC,2BAClC,EAAKwY,eAAe,EAAKtf,MAAM6G,KAAKC,0BAIa,OAAjD,EAAK9G,MAAMkG,aAAa5F,sBACxB,EAAKN,MAAMkG,aAAa5F,qBAAqBC,OAE7C,EAAKP,MAAMmG,yBACT,SAACE,EAAiBtB,GAEhB,GADA,EAAKuZ,mBAAmBjY,IACnBA,GAAUtB,GAAQA,EAAKxE,OAAS,EAQnC,IAEE,IADAkf,YAAgB,EAAKzf,MAAM6G,KAAKC,0BAGhC,EAAK9G,MAAM0f,6BAA6B3a,EAAK,IAC7C,EAAKua,eAAeva,EAAK,GAAG/D,4BACvB,CACL,IAAML,EAAgBoE,EAAK+E,MACzB,SAACnI,GAAD,OACEA,EAAKX,yBACL,EAAKhB,MAAM6G,KAAKC,4BAEpB,EAAK9G,MAAM0f,6BACT/e,GAAgCoE,EAAK,aAQ1C,IAAK,EAAK/E,MAAMkG,aAAa8W,0BAClC,IAAkE,IAA9DyC,YAAgB,EAAKzf,MAAM6G,KAAKC,0BAClC,EAAK9G,MAAM0f,6BACT,EAAK1f,MAAMkG,aAAa5F,qBAAqB,IAE/C,EAAKgf,eACH,EAAKtf,MAAMkG,aAAa5F,qBAAqB,GAAGU,4BAE7C,CACL,IAAML,EAAgB,EAAKX,MAAMkG,aAAa5F,qBAAqBwJ,MACjE,SAACnI,GAAD,OACEA,EAAKX,yBACL,EAAKhB,MAAM6G,KAAKC,4BAEpB,EAAK9G,MAAM0f,6BACT/e,GAEI,EAAKX,MAAMkG,aAAa5F,qBAAqB,IA+GvD,IAzG4C,OAA1C,EAAKN,MAAMkG,aAAagM,eACxB,EAAKlS,MAAMkG,aAAagM,cAAc3R,QAAU,IAEhD,EAAKP,MAAM2f,iBAAiB,EAAKrB,oBAIV,OAAvB,EAAKte,MAAM8Z,SACoB,IAA9B,EAAK9Z,MAAM8Z,QAAQvZ,QAAgB,EAAKyG,MAAM4W,eAE/C,EAAK5d,MAAM4f,YAAY,EAAKjC,mBACnB,EAAK3W,MAAM4W,gBACpB,EAAKD,mBAAkB,GAIE,OAAzB,EAAK3d,MAAM+Z,WACsB,IAAhC,EAAK/Z,MAAM+Z,UAAUxZ,QAAgB,EAAKyG,MAAM8W,aAEjD,EAAK9d,MAAM6f,cAAc,EAAKhC,iBACrB,EAAK7W,MAAM8W,cACpB,EAAKD,iBAAgB,GAoFnB,EAAK7W,MAAMuU,mBAAqB,EAAKvU,MAAM/G,YAAa,CAC1D,IAAI0J,EAAiB,GAEnB,EAAK3C,MAAMuU,mBACTjF,EAAgB6C,2BAClB,EAAKnZ,MAAM+W,gBAAgBI,iBAE3BxN,GAAM,WAAQ,EAAK3J,MAAM+W,gBAAgBI,iBAAiBuD,cAApD,aAEN,EAAK1T,MAAMuU,mBACXjF,EAAgBoD,iCAEZ,EAAK1Z,MAAM+W,gBAAgBI,mBAC7BxN,GAAM,cAAW,EAAK3J,MAAM+W,gBAAgBI,iBAAiBuD,cAAvD,cAEJ,EAAK1a,MAAM+W,gBAAgBG,iBAC7BvN,GAAM,sBAAmB,EAAK3J,MAAM+W,gBAAgBG,eAAelF,YAA7D,YAA4E,EAAKhS,MAAM+W,gBAAgBG,eAAejF,YAAtH,OAGRtI,EAAS,GAEX,EAAK6R,oBAAoB,EAAKxU,MAAMuU,iBAAmB5R,GACvD,EAAKnE,YAAW,KA3agB,EA+apC6Z,eAAiB,SAAC9B,GAChB,EAAKvd,MAAM8f,aAAavC,GAAW,SAAClX,EAAiBC,GACnD,EAAK0X,mBAAmB3X,GACnBA,IACCC,EAAI/F,OAAS,GACf,EAAKP,MAAMuG,eAAe,CACxBC,MAAOF,EACPG,MAAOC,IAAgBC,SAG3B,EAAKqX,oBAAmB,OAI5B,EAAKhe,MAAM+f,oBACTxC,GACA,SAAClX,EAAiBC,GAChB,EAAK8X,0BAA0B/X,GAC1BA,IACCC,EAAI/F,OAAS,GACf,EAAKP,MAAMuG,eAAe,CACxBC,MAAOF,EACPG,MAAOC,IAAgBC,SAG3B,EAAKyX,2BAA0B,OAKrC,EAAKpe,MAAMggB,8BACT,CACEC,MAAO,OACPC,OAAQC,KAAuC7W,KAC/C/F,OAAQ,CACNwO,OAAQwL,KAGZ,SAAClX,EAAiBC,GACXD,IACCC,EAAI/F,OAAS,GACf,EAAKP,MAAMuG,eAAe,CACxBC,MAAOF,EACPG,MAAOC,IAAgBC,SAG3B,EAAKuX,qCAAoC,QA7db,EAmepCkC,aAAe,SAACC,GACd,GAAI,EAAKrgB,MAAMkG,aAAagM,cAC1B,OAAO,EAAKlS,MAAMkG,aAAagM,cAAcpI,MAC3C,SAACnI,GAAD,OAAUA,EAAKyL,kBAAoBiT,MAteL,EA2epCC,WAAa,WACX,IAAI3W,EAA0B,GAC5B4W,GAAsB,EACxB,GAAI,EAAKvgB,MAAM8Z,QAEb,GAAI,EAAK9Z,MAAMkG,aAAa8W,0BAA2B,CAAC,IAAD,WAC1Cxa,GACLC,OAAOC,UAAUC,eAAeC,KAAK,EAAK5C,MAAM8Z,QAAStX,KACvD,EAAKxC,MAAM8Z,QAAQtX,GAAK0P,cAAc3R,OAAS,EACjD,EAAKP,MAAM8Z,QAAQtX,GAAK0P,cAAc9O,SAAQ,SAACod,GAC7C,IAAIC,EAAc,EAAKL,aAAaI,GAElCC,IACCA,EAAYC,oBAAoB7d,SAC/B,EAAK7C,MAAMkG,aAAa8W,0BACrBhc,yBAEHyf,EAAYC,oBAAoBngB,QAAU,IAE5CoJ,GAAUA,EAAO5G,KAAK,EAAK/C,MAAM8Z,QAAStX,OAI9CmH,GAAUA,EAAO5G,KAAK,EAAK/C,MAAM8Z,QAAStX,MAjBhD,IAAK,IAAMA,KAAO,EAAKxC,MAAM8Z,QAAU,EAA5BtX,QAwBX+d,GAAa,EAGjB,OAAQA,EAAkC5W,EAArB,EAAK3J,MAAM8Z,SA5gBE,EA+gBpCc,kBAAoB,WAElB,GAAI,EAAK5T,MAAM/G,cAAgBqW,EAAgB8C,kBAE3CoE,EAAa,EAAKxd,MAAM+Z,UAAW,EAAK/S,MAAMyW,kBAC9C,EAAK6C,cACL,EAAKtgB,MAAMsd,QAAQ3P,gBACnB,CACA,IAAI5I,EAAwC4b,YAC1C,EAAKL,aACL9C,EAAa,EAAKxd,MAAM+Z,UAAW,EAAK/S,MAAMyW,kBAE5C1V,EAA8C,GAC9C6Y,EAAY,EAChB,IAAK,IAAMpe,KAAOuC,EAChB,GAAItC,OAAOC,UAAUC,eAAeC,KAAKmC,EAAMvC,GAAM,CACnD,IAAIqe,EAAuB,GACvB9b,EAAKvC,GAAK0P,cAAc3R,OAC1BwE,EAAKvC,GAAK0P,cAAc9O,SAAQ,SAACI,EAASzC,GACxC,IAAI+f,EAAY,EAAKV,aAAa5c,GACpB,IAAVzC,EACF8f,EAAeC,EAAYA,EAAUzT,kBAAoB,GAEzDwT,GAAgBC,EACZ,KAAOA,EAAUzT,kBACjB,MAIRwT,EAAe,YAEjB,IAAIxY,EAA6C,CAC/CuJ,UAAWgP,EACX5O,YAAajN,EAAKvC,GAAKwP,YACvBC,YAAalN,EAAKvC,GAAKyP,YACvBrE,YAAa7I,EAAKvC,GAAKoL,YACvBsE,cAAenN,EAAKvC,GAAK0P,cAAc3R,OACnCsgB,EACA,MACJE,YAAahc,EAAKvC,GAAK2P,MACnB1O,EACE,EAAKzD,MAAMsd,QAAQ3P,gBACnB5I,EAAKvC,GAAK2P,KAAMJ,QAEhBtO,EACE,EAAKzD,MAAMsd,QAAQ3P,gBACnB5I,EAAKvC,GAAK2P,KAAMJ,QACflQ,kBAEL,IACJyS,UAAWvP,EAAKvC,GAAK2P,KAAO7I,YAAKvE,EAAKvC,GAAK2P,KAAMmC,WAAa,IAC9D0M,UAAWjc,EAAKvC,GAAK2P,KAAOpN,EAAKvC,GAAK2P,KAAMoC,WAAa,IACzD0M,cAAelc,EAAKvC,GAAK2P,KACrBpN,EAAKvC,GAAK2P,KAAMqC,SAASxQ,WACzB,IACJoO,mBAAoBrN,EAAKvC,GAAK2P,KAAO,WAAa,gBAGpD,IAAK,IAAM3P,KAAO,EAAKwE,MAAM0U,6BAEzBjZ,OAAOC,UAAUC,eAAeC,KAC9B,EAAKoE,MAAM0U,6BACXlZ,KAGG,EAAKwE,MAAM0U,6BAA6BlZ,GAAK6D,eACzCgC,EACL,EAAKrB,MAAM0U,6BAA6BlZ,GAAKA,MAKrDuF,EAAShF,KAAKsF,GACduY,IAGJ,EAAKjC,gBAAgB5W,GACrBA,EAAW,GACX6Y,EAAI,EAKR,GAAI,EAAK5Z,MAAM/G,cAAgBqW,EAAgB4C,kBAE3CsE,EAAa,EAAKxd,MAAM+Z,UAAW,EAAK/S,MAAMyW,kBAC9C,EAAK6C,cACL,EAAKtgB,MAAM+W,gBAAgBmK,iBAC3B,EAAKlhB,MAAMsd,QAAQ3P,gBACnB,CACA,IAAI5I,EACFoc,YACE,EAAKb,aACL9C,EAAa,EAAKxd,MAAM+Z,UAAW,EAAK/S,MAAMyW,iBAC9C,EAAKzd,MAAM+W,gBAAgBmK,iBAE3BnZ,EAA8C,GAC9C6Y,EAAY,EAChB,IAAK,IAAMpe,KAAOuC,EAChB,GAAItC,OAAOC,UAAUC,eAAeC,KAAKmC,EAAMvC,GAAM,CACnD,IAAIqe,EAAuB,GACvB9b,EAAKvC,GAAK0P,cAAc3R,OAC1BwE,EAAKvC,GAAK0P,cAAc9O,SAAQ,SAACI,EAASzC,GACxC,IAAI+f,EAAY,EAAKV,aAAa5c,GACpB,IAAVzC,EACF8f,EAAeC,EAAYA,EAAUzT,kBAAoB,GAEzDwT,GAAgBC,EACZ,KAAOA,EAAUzT,kBACjB,MAIRwT,EAAe,YAEjB,IAAIxY,EAA6C,CAC/CuJ,UAAWgP,EACX5O,YAAajN,EAAKvC,GAAKwP,YACvBC,YAAalN,EAAKvC,GAAKyP,YACvBrE,YAAa7I,EAAKvC,GAAKoL,YACvBsE,cAAenN,EAAKvC,GAAK0P,cAAc3R,OACnCsgB,EACA,MACJE,YAAahc,EAAKvC,GAAK2P,MACnB1O,EACE,EAAKzD,MAAMsd,QAAQ3P,gBACnB5I,EAAKvC,GAAK2P,KAAMJ,QAEhBtO,EACE,EAAKzD,MAAMsd,QAAQ3P,gBACnB5I,EAAKvC,GAAK2P,KAAMJ,QACflQ,kBAEL,IACJyS,UAAWvP,EAAKvC,GAAK2P,KAAO7I,YAAKvE,EAAKvC,GAAK2P,KAAMmC,WAAa,IAC9D0M,UAAWjc,EAAKvC,GAAK2P,KAAOpN,EAAKvC,GAAK2P,KAAMoC,WAAa,IACzD0M,cAAelc,EAAKvC,GAAK2P,KACrBpN,EAAKvC,GAAK2P,KAAMqC,SAASxQ,WACzB,IACJod,iBAAkBpY,OAAOjE,EAAKvC,GAAK4e,iBAAiBlY,QAAQ,KAG9D,IAAK,IAAM1G,KAAO,EAAKwE,MAAM6U,6BAEzBpZ,OAAOC,UAAUC,eAAeC,KAC9B,EAAKoE,MAAM6U,6BACXrZ,KAGG,EAAKwE,MAAM6U,6BAA6BrZ,GAAK6D,eACzCgC,EACL,EAAKrB,MAAM6U,6BAA6BrZ,GAAKA,MAKrDuF,EAAShF,KAAKsF,GACduY,IAGJ,EAAKhC,0BAA0B7W,GAC/BA,EAAW,GACX6Y,EAAI,EAKR,GAAI,EAAK5Z,MAAM/G,cAAgBqW,EAAgB6C,2BAE3CqE,EAAa,EAAKxd,MAAM+Z,UAAW,EAAK/S,MAAMyW,kBAC9C,EAAK6C,cACL,EAAKtgB,MAAM+W,gBAAgBgG,UAC3B,EAAK/c,MAAM+W,gBAAgBsK,2BAC3B,EAAKrhB,MAAM+W,gBAAgBI,kBAC3B,EAAKnX,MAAMsd,QAAQ3P,gBACnB,CACA,IAAI5I,EAAOkT,EACT,EAAKqI,aACL9C,EAAa,EAAKxd,MAAM+Z,UAAW,EAAK/S,MAAMyW,iBAC9C,EAAKzd,MAAM+W,gBAAgBgG,SAC3B,EAAK/c,MAAM+W,gBAAgBsK,0BAC3B,EAAKrhB,MAAM+W,gBAAgBI,iBAAiBT,aAC5Ca,MAAM,EAAG,IACPxP,EAA8C,GAC9C6Y,EAAY,EAChB,IAAK,IAAMpe,KAAOuC,EAChB,GAAItC,OAAOC,UAAUC,eAAeC,KAAKmC,EAAMvC,GAAM,CACnD,IAAIqe,EAAuB,GACvB9b,EAAKvC,GAAK0P,cAAc3R,OAC1BwE,EAAKvC,GAAK0P,cAAc9O,SAAQ,SAACI,EAASzC,GACxC,IAAI+f,EAAY,EAAKV,aAAa5c,GACpB,IAAVzC,EACF8f,EAAeC,EAAYA,EAAUzT,kBAAoB,GAEzDwT,GAAgBC,EACZ,KAAOA,EAAUzT,kBACjB,MAIRwT,EAAe,YAEjB,IAAIxY,EAA6C,CAC/CuJ,UAAWgP,EACX5O,YAAajN,EAAKvC,GAAKwP,YACvBC,YAAalN,EAAKvC,GAAKyP,YACvBrE,YAAa7I,EAAKvC,GAAKoL,YACvBsE,cAAenN,EAAKvC,GAAK0P,cAAc3R,OACnCsgB,EACA,MACJE,YAAahc,EAAKvC,GAAK2P,MACnB1O,EACE,EAAKzD,MAAMsd,QAAQ3P,gBACnB5I,EAAKvC,GAAK2P,KAAMJ,QAEhBtO,EACE,EAAKzD,MAAMsd,QAAQ3P,gBACnB5I,EAAKvC,GAAK2P,KAAMJ,QACflQ,kBAEL,IACJyS,UAAWvP,EAAKvC,GAAK2P,KAAO7I,YAAKvE,EAAKvC,GAAK2P,KAAMmC,WAAa,IAC9D0M,UAAWjc,EAAKvC,GAAK2P,KAAOpN,EAAKvC,GAAK2P,KAAMoC,WAAa,IACzD0M,cAAelc,EAAKvC,GAAK2P,KACrBpN,EAAKvC,GAAK2P,KAAMqC,SAASxQ,WACzB,IACJod,iBAAkB,GAGpB,IAAK,IAAM5e,KAAO,EAAKwE,MAAMgV,+BAEzBvZ,OAAOC,UAAUC,eAAeC,KAC9B,EAAKoE,MAAMgV,+BACXxZ,KAGG,EAAKwE,MAAMgV,+BAA+BxZ,GAAK6D,eAC3CgC,EACL,EAAKrB,MAAMgV,+BAA+BxZ,GAAKA,MAKvDuF,EAAShF,KAAKsF,GACduY,IAGJ,EAAK/B,4BAA4B9W,GACjCA,EAAW,GACX6Y,EAAI,EAIR,GAAI,EAAK5Z,MAAM/G,cAAgBqW,EAAgBiD,sBAE3CiE,EAAa,EAAKxd,MAAM+Z,UAAW,EAAK/S,MAAMyW,kBAC9C,EAAK6C,cACL,EAAKtgB,MAAM+W,gBAAgBgG,UAC3B,EAAK/c,MAAMsd,QAAQ3P,gBACnB,CACA,IAAI5I,EAAqCwM,YACvC,EAAK+O,aACL9C,EAAa,EAAKxd,MAAM+Z,UAAW,EAAK/S,MAAMyW,iBAC9C,EAAKzd,MAAM+W,gBAAgBgG,UAEzBhV,EAAkD,GAClD6Y,EAAY,EAChB,IAAK,IAAMpe,KAAOuC,EAChB,GAAItC,OAAOC,UAAUC,eAAeC,KAAKmC,EAAMvC,GAAM,CACnD,IAAIqe,EAAuB,GACvB9b,EAAKvC,GAAK0P,cAAc3R,OAC1BwE,EAAKvC,GAAK0P,cAAc9O,SAAQ,SAACI,EAASzC,GACxC,IAAI+f,EAAY,EAAKV,aAAa5c,GACpB,IAAVzC,EACF8f,EAAeC,EAAYA,EAAUzT,kBAAoB,GAEzDwT,GAAgBC,EACZ,KAAOA,EAAUzT,kBACjB,MAIRwT,EAAe,YAEjB,IAAIxY,EAAiD,CACnDuJ,UAAWgP,EACX5O,YAAajN,EAAKvC,GAAKwP,YACvBC,YAAalN,EAAKvC,GAAKyP,YACvBrE,YAAa7I,EAAKvC,GAAKoL,YACvBsE,cAAenN,EAAKvC,GAAK0P,cAAc3R,OACnCsgB,EACA,MACJE,YAAahc,EAAKvC,GAAK2P,MACnB1O,EACE,EAAKzD,MAAMsd,QAAQ3P,gBACnB5I,EAAKvC,GAAK2P,KAAMJ,QAEhBtO,EACE,EAAKzD,MAAMsd,QAAQ3P,gBACnB5I,EAAKvC,GAAK2P,KAAMJ,QACflQ,kBAEL,IACJyS,UAAWvP,EAAKvC,GAAK2P,KAAO7I,YAAKvE,EAAKvC,GAAK2P,KAAMmC,WAAa,IAC9D0M,UAAWjc,EAAKvC,GAAK2P,KAAOpN,EAAKvC,GAAK2P,KAAMoC,WAAa,IACzD0M,cAAelc,EAAKvC,GAAK2P,KACrBpN,EAAKvC,GAAK2P,KAAMqC,SAASxQ,WACzB,IACJqO,YACmC,SAAjCtN,EAAKvC,GAAK4P,mBACN,YACArN,EAAKvC,GAAK4P,oBAGlB,IAAK,IAAM5P,KAAO,EAAKwE,MAAMmV,iCAEzB1Z,OAAOC,UAAUC,eAAeC,KAC9B,EAAKoE,MAAMmV,iCACX3Z,KAGG,EAAKwE,MAAMmV,iCAAiC3Z,GAAK6D,eAC7CgC,EACL,EAAKrB,MAAMmV,iCAAiC3Z,GAAKA,MAKzDuF,EAAShF,KAAKsF,GACduY,IAGJ,EAAK9B,8BAA8B/W,GACnCA,EAAW,GACX6Y,EAAI,EAKR,GAAI,EAAK5Z,MAAM/G,cAAgBqW,EAAgBmD,wBAE3C,EAAK6G,cACL,EAAKtgB,MAAM+W,gBAAgBsK,2BAC3B,EAAKrhB,MAAMsd,QAAQ3P,gBACnB,CACA,IAAI5I,EACFkS,YACE,EAAKqJ,aACL,EAAKtgB,MAAM+W,gBAAgBsK,0BAC3B,EAAKrhB,MAAM+W,gBAAgBG,eACvB,EAAKlX,MAAM+W,gBAAgBG,eAAetF,UAC1C,OAEJ7J,EAAuD,GACvD6Y,EAAY,EAChB,IAAK,IAAMpe,KAAOuC,EAChB,GAAItC,OAAOC,UAAUC,eAAeC,KAAKmC,EAAMvC,GAAM,CACnD,IAAIqe,EAAuB,GACvB9b,EAAKvC,GAAK0P,cAAc3R,OAC1BwE,EAAKvC,GAAK0P,cAAc9O,SAAQ,SAACI,EAASzC,GACxC,IAAI+f,EAAY,EAAKV,aAAa5c,GACpB,IAAVzC,EACF8f,EAAeC,EAAYA,EAAUzT,kBAAoB,GAEzDwT,GAAgBC,EACZ,KAAOA,EAAUzT,kBACjB,MAIRwT,EAAe,YAEjB,IAAIxY,EAAsD,CACxDiZ,aAAcV,EACd5O,YAAajN,EAAKvC,GAAKwP,YACvBC,YAAalN,EAAKvC,GAAKyP,YACvBrE,YAAa7I,EAAKvC,GAAKoL,YACvBsE,cAAenN,EAAKvC,GAAK0P,cAAc3R,OACnCsgB,EACA,MACJE,YAAatd,EACX,EAAKzD,MAAMsd,QAAQ3P,gBACnB5I,EAAKvC,GAAK2P,KAAKJ,QAEbtO,EACE,EAAKzD,MAAMsd,QAAQ3P,gBACnB5I,EAAKvC,GAAK2P,KAAKJ,QACdlQ,kBACH,IACJyS,UAAWhL,YAAKvE,EAAKvC,GAAK2P,KAAKmC,WAC/BiN,gBAAiB3J,YACf5O,OAAOjE,EAAKvC,GAAK2P,KAAKoC,aACtBsD,SACF2J,cAAe5J,YAAgB5O,OAAOjE,EAAKvC,GAAK2P,KAAK2F,WAClDD,SACH4J,mBAAoBpN,YAClB/C,YAAcvM,EAAKvC,GAAKmU,eAE1B+K,eAAgBrN,YAAsBtP,EAAKvC,GAAKiV,WAChD/O,YAAa3D,EAAKvC,GAAKkG,YACvBI,MAAO/D,EAAKvC,GAAKkV,WACjB9O,MAAO7D,EAAKvC,GAAKmV,WACjB1O,MACElE,EAAKvC,GAAKmU,eAAiBoB,IAAqBC,QAC5ChP,OAAOjE,EAAKvC,GAAKsU,iBAAiB5N,QAAQ,IAAM,IAChD,KAGR,IAAK,IAAM1G,KAAO,EAAKwE,MACpBsV,sCAEC7Z,OAAOC,UAAUC,eAAeC,KAC9B,EAAKoE,MAAMsV,sCACX9Z,KAIC,EAAKwE,MAAMsV,sCAAsC9Z,GAAK6D,eAEhDgC,EACL,EAAKrB,MAAMsV,sCAAsC9Z,GAAKA,MAK9DuF,EAAShF,KAAKsF,GACduY,IAGJ,EAAK7B,mCAAmChX,GACxCA,EAAW,GACX6Y,EAAI,EAKR,GACE,EAAK5Z,MAAM/G,cAAgBqW,EAAgBoD,iCAGzC,EAAK4G,cACL,EAAKtgB,MAAM+W,gBAAgBsK,2BAC3B,EAAKrhB,MAAMsd,QAAQ3P,gBACnB,CACA,IAAI5I,EACFwR,EACEU,YACE,EAAKqJ,aACL,EAAKtgB,MAAM+W,gBAAgBsK,0BAC3B,EAAKrhB,MAAM+W,gBAAgBG,eACvB,EAAKlX,MAAM+W,gBAAgBG,eAAetF,UAC1C,OAEN,EAAK5R,MAAM+W,gBAAgBI,iBACvB,EAAKnX,MAAM+W,gBAAgBI,iBAAiBT,YAC5C,KACJ,EAAK1W,MAAM+W,gBAAgBG,eACvB,EAAKlX,MAAM+W,gBAAgBG,eAAetF,UAC1C,KACJ,EAAK5K,MAAMoQ,4BACXG,MAAM,EAAG,IACTxP,EAAuD,GACvD6Y,EAAY,EAChB,IAAK,IAAMpe,KAAOuC,EAChB,GAAItC,OAAOC,UAAUC,eAAeC,KAAKmC,EAAMvC,GAAM,CACnD,IAAIqe,EAAuB,GACvB9b,EAAKvC,GAAK0P,cAAc3R,OAC1BwE,EAAKvC,GAAK0P,cAAc9O,SAAQ,SAACI,EAASzC,GACxC,IAAI+f,EAAY,EAAKV,aAAa5c,GACpB,IAAVzC,EACF8f,EAAeC,EAAYA,EAAUzT,kBAAoB,GAEzDwT,GAAgBC,EACZ,KAAOA,EAAUzT,kBACjB,MAIRwT,EAAe,YAEjB,IAAIxY,EAAsD,CACxDiZ,aAAcV,EACd5O,YAAajN,EAAKvC,GAAKwP,YACvBC,YAAalN,EAAKvC,GAAKyP,YACvBrE,YAAa7I,EAAKvC,GAAKoL,YACvBsE,cAAenN,EAAKvC,GAAK0P,cAAc3R,OACnCsgB,EACA,MACJE,YAAatd,EACX,EAAKzD,MAAMsd,QAAQ3P,gBACnB5I,EAAKvC,GAAK2P,KAAKJ,QAEbtO,EACE,EAAKzD,MAAMsd,QAAQ3P,gBACnB5I,EAAKvC,GAAK2P,KAAKJ,QACdlQ,kBACH,IACJyS,UAAWhL,YAAKvE,EAAKvC,GAAK2P,KAAKmC,WAC/BiN,gBAAiB3J,YACf5O,OAAOjE,EAAKvC,GAAK2P,KAAKoC,aACtBsD,SACF2J,cAAe5J,YAAgB5O,OAAOjE,EAAKvC,GAAK2P,KAAK2F,WAClDD,SACH4J,mBAAoBpN,YAClB/C,YAAcvM,EAAKvC,GAAKmU,eAE1B+K,eAAgBrN,YAAsBtP,EAAKvC,GAAKiV,WAChD/O,YAAa3D,EAAKvC,GAAKkG,YACvBI,MAAO/D,EAAKvC,GAAKkV,WACjB9O,MAAO7D,EAAKvC,GAAKmV,WACjB1O,MACElE,EAAKvC,GAAKmU,eAAiBoB,IAAqBC,QAC5ChP,OAAOjE,EAAKvC,GAAKsU,iBAAiB5N,QAAQ,IAAM,IAChD,KAGR,IAAK,IAAM1G,MAAO,EAAKwE,MACpByV,wCAECha,OAAOC,UAAUC,eAAeC,KAC9B,EAAKoE,MAAMyV,wCACXja,MAIC,EAAKwE,MAAMyV,wCAAwCja,IACjD6D,eAEIgC,EACL,EAAKrB,MAAMyV,wCAAwCja,IAAKA,MAKhEuF,EAAShF,KAAKsF,GACduY,IAGJ,EAAK5B,qCAAqCjX,GAC1CA,EAAW,GACX6Y,EAAI,IA3iC0B,EAijCpCe,WAAa,WACX,IAAIhY,EAAiB,GAmBrB,OAhBE,EAAK3C,MAAM/G,cAAgBqW,EAAgB6C,2BAC3C,EAAKnZ,MAAM+W,gBAAgBI,iBAE3BxN,GAAM,WAAQ,EAAK3J,MAAM+W,gBAAgBI,iBAAiBuD,cAApD,aAEN,EAAK1T,MAAM/G,cAAgBqW,EAAgBoD,iCAEvC,EAAK1Z,MAAM+W,gBAAgBI,mBAC7BxN,GAAM,cAAW,EAAK3J,MAAM+W,gBAAgBI,iBAAiBuD,cAAvD,cAEJ,EAAK1a,MAAM+W,gBAAgBG,iBAC7BvN,GAAM,sBAAmB,EAAK3J,MAAM+W,gBAAgBG,eAAelF,YAA7D,YAA4E,EAAKhS,MAAM+W,gBAAgBG,eAAejF,YAAtH,OAGRtI,EAAS,GAEJA,GArkC2B,EAwkCpCqR,YAxkCoC,sBAwkCtB,8BAAAjP,EAAA,yDACP6V,SAASC,iBAAiB,4BAA4BthB,OAD/C,uBAEV,EAAKP,MAAMuG,eAAe,CACxBC,MAAM,sCACNC,MAAOC,IAAgBob,UAJf,mBAMH,GANG,WASR,EAAK9a,MAAMyW,gBATH,oBAUJsE,EACJH,SAASI,eAAe,kBACpBC,EAA0C,CAC9CC,OAAQ,EAAKliB,MAAM6G,KAAK2R,KAAKlQ,MAAQ,IAAM,EAAKtI,MAAM6G,KAAK2R,KAAKjQ,MAChE/B,MAAO,cACP2b,aAAc,UACdC,QAAQ,GAAD,OAAK,EAAKpb,MAAM/G,YAAhB,YAA+B,EAAK0hB,cAC3C5P,OAAQ,EAAK/K,MAAMyW,gBAAgB5b,kBACnCwgB,OAAQ,6BACR3Y,UAAW,EAAK1J,MAAMkG,aAAa8W,0BAC/B,EAAKhd,MAAMkG,aAAa8W,0BACrB/b,yBACH,gBACJqhB,YACE,EAAKtb,MAAM/G,cAAgBqW,EAAgBmD,wBAC3C,EAAKzS,MAAM/G,cACTqW,EAAgBoD,gCACd,IACA,KA5BE,KA8BVqI,GA9BU,uCA8BMQ,YAAYN,EAAgBF,EAAO,EAAKhE,gBA9B9C,4CArkCZ,EAAK/W,MAAQ,CACXvG,SAAS,EACTmd,gBAAgB,EAChBE,cAAc,EACd/C,aAAa,EACbkD,iBAAiB,EACjBE,kCAAkC,EAClCE,wBAAwB,EACxBE,iBAAiB,EACjBE,cAAc,EACdtE,eAAe,EAGfb,kBAAmB,MACnBrF,mBAAoB,MACpBmD,2BAA4B,MAG5BgE,oBAAqB,KACrBqC,gBAAiB,KAIjBxd,YAAaqW,EAAgBmD,uBAE7B8B,iBAAkBjF,EAAgBmD,uBAGlCgC,aAAc,KACdC,6BAA8B8G,IAE9B5G,uBAAwB,KACxBC,6BAA8B4G,IAE9B1G,yBAA0B,KAC1BC,+BAAgCyG,IAEhCvG,2BAA4B,KAC5BC,iCAAkCjL,IAElCmL,gCAAiC,KAEjCC,sCACEoG,IAGFlG,kCAAmC,KAEnCC,wCACEiG,KApD8B,E,0CA0mCpC,WAAU,IAAD,OACP,OAAI1Y,KAAKhD,MAAMvG,SAAkD,OAAvCuJ,KAAKhK,MAAMsd,QAAQ3P,gBAEzC,qBAAK/N,UAAU,kEAAf,6BAM8C,IAA9CoK,KAAKhK,MAAMsd,QAAQ3P,gBAAgBpN,OAC9B,cAAC0J,EAAA,EAAD,IAIP,gCACE,eAACoE,EAAA,EAAD,YAEI,IADDoR,YAAgBzV,KAAKhK,MAAM6G,KAAKC,2BAE/B,sBAAKlH,UAAU,qBAAf,UACE,sBAAMA,UAAU,6BAAhB,mCAGkD,OAAjDoK,KAAKhK,MAAMkG,aAAa5F,qBACvB,cAAC+W,EAAA,EAAD,IAC0D,IAAxDrN,KAAKhK,MAAMkG,aAAa5F,qBAAqBC,OAC/C,mDAEAyJ,KAAKhK,MAAMkG,aAAa5F,qBAAqBO,KAAI,SAACc,EAAMyS,GAAP,OAC/C,sBACElU,QAAS,WACP,EAAKF,MAAM0f,6BAA6B/d,GACxC,EAAK2d,eAAe3d,EAAKX,wBACzB,EAAK4Z,qBAGPhb,UAAS,uDAEL,OADF,EAAKI,MAAMkG,aAAa8W,2BAExB,EAAKhd,MAAMkG,aAAa8W,0BACrBhc,yBAA2BW,EAAKX,uBAC/B,qFACA,8DANG,+CAPX,UAiBI,OADD,EAAKhB,MAAMkG,aAAa8W,2BAEzB,EAAKhd,MAAMkG,aAAa8W,0BACrBhc,yBACDW,EAAKX,uBACL,cAAC,KAAD,IAEA,cAAC,KAAD,IAEF,+BAAOW,EAAKV,6BAnBPmT,EAAI,SAyBnB,sBAAKxU,UAAU,GAAf,UACE,qBAAKA,UAAU,6BAAf,8BACA,sBACEM,QAAS,kBAAM,EAAKse,iBAAgB,IACpC5e,UAAU,+MAFZ,UAIkC,OAA/BoK,KAAKhD,MAAMyW,gBAAX,UACMkF,YACD3Y,KAAKhD,MAAMyW,gBAAgB5b,oBAE7B,mBACJ,cAAC,IAAD,CAAQjC,UAAU,gCAGtB,cAAC,EAAD,CACEK,YAAa+J,KAAKhD,MAAM/G,YACxBqZ,kBAAmBtP,KAAKhD,MAAMsS,kBAC9BD,qBAAsBrP,KAAKqP,qBAC3BpF,mBAAoBjK,KAAKhD,MAAMiN,mBAC/BuF,sBAAuBxP,KAAKwP,sBAC5BpC,2BAA4BpN,KAAKhD,MAAMoQ,2BACvCuC,8BAA+B3P,KAAK2P,mCAOxC,cAAC,EAAD,CACEoB,YAAa/Q,KAAKhD,MAAM+T,YACxBJ,YAAa6C,EACXxT,KAAKhK,MAAM+Z,UACX/P,KAAKhD,MAAMyW,iBAEbzC,YAAahR,KAAKgR,YAClB/a,YAAa+J,KAAKhD,MAAM/G,YACxB0c,eAAgB3S,KAAK2S,eACrB9B,uBAAwB7Q,KAAK6Q,uBAC7BO,oBAAqBpR,KAAKhD,MAAMoU,oBAChCG,iBAAkBvR,KAAKhD,MAAMuU,iBAC7BC,oBAAqBxR,KAAKwR,oBAC1BZ,kBAAmB5Q,KAAK4Q,kBAExBa,aAAczR,KAAKhD,MAAMyU,aACzBC,6BAA8B1R,KAAKhD,MAAM0U,6BACzCC,gCAAiC3R,KAAK2R,gCAEtCC,uBAAwB5R,KAAKhD,MAAM4U,uBACnCC,6BAA8B7R,KAAKhD,MAAM6U,6BACzCC,gCAAiC9R,KAAK8R,gCAEtCC,yBAA0B/R,KAAKhD,MAAM+U,yBACrCC,+BACEhS,KAAKhD,MAAMgV,+BAEbC,kCACEjS,KAAKiS,kCAGPC,2BAA4BlS,KAAKhD,MAAMkV,2BACvCC,iCACEnS,KAAKhD,MAAMmV,iCAEbC,mDACEpS,KAAKoS,mDAGPC,gCACErS,KAAKhD,MAAMqV,gCAEbC,sCACEtS,KAAKhD,MAAMsV,sCAEbC,yCACEvS,KAAKuS,yCAGPC,kCACExS,KAAKhD,MAAMwV,kCAEbC,wCACEzS,KAAKhD,MAAMyV,wCAEbC,2CACE1S,KAAK0S,2CAEPvb,WACE6I,KAAKhD,MAAMyW,gBAAkBzT,KAAKhD,MAAMyW,gBAAgB7b,IAAM,KAOjEoI,KAAKhD,MAAM/G,cAAgBqW,EAAgB8C,kBAC1CpP,KAAKhK,MAAMsd,QAAQ3P,iBACjB,cAACiV,EAAA,EAAD,CACEniB,QACEuJ,KAAKhD,MAAM8W,cACX9T,KAAKhD,MAAM4W,gBACX5T,KAAKhD,MAAMiX,gBAEblK,cAAeyJ,EACbxT,KAAKhK,MAAM+Z,UACX/P,KAAKhD,MAAMyW,iBAEb3J,eAAgB9J,KAAKsW,aACrBnf,WAAY6I,KAAKhK,MAAMsd,QAAQ3P,gBAC/B2L,kBAAmBtP,KAAKhD,MAAMsS,oBAQnCtP,KAAKhD,MAAM/G,cAAgBqW,EAAgBiD,sBAC1CvP,KAAKhK,MAAMsd,QAAQ3P,iBACjB,cAACuF,EAAA,EAAD,CACEzS,UACEuJ,KAAKhD,MAAM8W,iBAEP9T,KAAKhD,MAAM4W,kBAEX5T,KAAKhD,MAAMiX,iBAIjBlK,cAAeyJ,EACbxT,KAAKhK,MAAM+Z,UACX/P,KAAKhD,MAAMyW,iBAEb3J,eAAgB9J,KAAKsW,aACrBnf,WAAY6I,KAAKhK,MAAMsd,QAAQ3P,gBAC/BqG,cAAehK,KAAKhK,MAAM+W,gBAAgBgG,SAC1C9I,mBAAoBjK,KAAKhD,MAAMiN,qBAQpCjK,KAAKhD,MAAM/G,cAAgBqW,EAAgB4C,kBAC1ClP,KAAKhK,MAAMsd,QAAQ3P,iBACjB,cAACuT,EAAA,EAAD,CACEzgB,UACEuJ,KAAKhD,MAAM8W,iBAEP9T,KAAKhD,MAAM4W,kBAEX5T,KAAKhD,MAAMqX,wBAIjBtK,cAAeyJ,EACbxT,KAAKhK,MAAM+Z,UACX/P,KAAKhD,MAAMyW,iBAEb3J,eAAgB9J,KAAKsW,aACrBnf,WAAY6I,KAAKhK,MAAMsd,QAAQ3P,gBAC/BkV,qBAAsB7Y,KAAKhK,MAAM+W,gBAAgBmK,kBAQtDlX,KAAKhD,MAAM/G,cAAgBqW,EAAgB6C,2BAC5CnP,KAAKhK,MAAMsd,QAAQ3P,iBACnB3D,KAAKhK,MAAM+W,gBAAgBI,iBACzB,cAAC,EAAD,CACE1W,UACEuJ,KAAKhD,MAAM8W,iBAEP9T,KAAKhD,MAAM4W,kBAEX5T,KAAKhD,MAAMmX,kCAIjBpK,cAAeyJ,EACbxT,KAAKhK,MAAM+Z,UACX/P,KAAKhD,MAAMyW,iBAEbzJ,cAAehK,KAAKhK,MAAM+W,gBAAgBgG,SAC1CjJ,eAAgB9J,KAAKsW,aACrBnf,WAAY6I,KAAKhK,MAAMsd,QAAQ3P,gBAC/BqJ,yBACEhN,KAAKhK,MAAM+W,gBAAgBsK,0BAE7ByB,aAAc9Y,KAAKhK,MAAM+W,gBAAgBI,mBAG3CnN,KAAKhD,MAAM/G,cACTqW,EAAgB6C,2BAChB,cAACL,EAAA,EAAD,CACErS,MAAOsS,IAAegK,MACtB7hB,MAAO,+BACP8hB,UACE,sBACE9iB,QAAS,kBAAM,EAAKka,kBAAiB,IACrCxa,UAAU,gJAFZ,UAIE,cAAC,IAAD,CAAaA,UAAU,YAJzB,0BAgBPoK,KAAKhD,MAAM/G,cAAgBqW,EAAgBmD,wBAC1CzP,KAAKhK,MAAMsd,QAAQ3P,iBACjB,cAACsV,EAAA,EAAD,CACExiB,UACEuJ,KAAKhD,MAAM8W,iBAEP9T,KAAKhD,MAAM4W,kBAEX5T,KAAKhD,MAAMmX,kCAIjBpK,cAAeyJ,EACbxT,KAAKhK,MAAM+Z,UACX/P,KAAKhD,MAAMyW,iBAEb3J,eAAgB9J,KAAKsW,aACrBnf,WAAY6I,KAAKhK,MAAMsd,QAAQ3P,gBAC/BqJ,yBACEhN,KAAKhK,MAAM+W,gBAAgBsK,0BAE7BjK,2BAA4BpN,KAAKhD,MAAMoQ,6BAQ5CpN,KAAKhD,MAAM/G,cACVqW,EAAgBoD,iCAChB1P,KAAKhK,MAAMsd,QAAQ3P,iBACjB,cAAC,EAAD,CACElN,UACEuJ,KAAKhD,MAAM8W,iBAEP9T,KAAKhD,MAAM4W,kBAEX5T,KAAKhD,MAAMmX,kCAIjBpK,cAAeyJ,EACbxT,KAAKhK,MAAM+Z,UACX/P,KAAKhD,MAAMyW,iBAEb3J,eAAgB9J,KAAKsW,aACrBnf,WAAY6I,KAAKhK,MAAMsd,QAAQ3P,gBAC/BqJ,yBACEhN,KAAKhK,MAAM+W,gBAAgBsK,0BAE7BjK,2BAA4BpN,KAAKhD,MAAMoQ,6BAQ5CpN,KAAKhD,MAAMmT,eACV,cAACc,EAAA,EAAD,CACEC,SAAUC,IAAcyB,gBACxBvB,WAAYrR,KAAKhD,MAAMmT,cACvBmB,iBAAkBtR,KAAKoQ,iBACvByC,WACE7S,KAAKhK,MAAM+W,gBAAgBI,iBACvBnN,KAAKhK,MAAM+W,gBAAgBI,iBAAiBT,YAC5C,MAENzW,YAAa+J,KAAKhD,MAAM/G,cAQ5B,cAACgb,EAAA,EAAD,CACEI,WAAYrR,KAAKhD,MAAMyX,aACvBnD,iBAAkBtR,KAAKwU,gBACvB0E,mBAAoBlZ,KAAKhK,MAAMsd,QAAQ3P,gBACvC8P,gBAAiBzT,KAAKhD,MAAMyW,gBAC5BiB,kBAAmB1U,KAAK0U,kBACxBW,eAAgBrV,KAAKqV,eACrBnE,SAAUC,IAAcpJ,gB,GAn9CRzE,aAo/Cb6V,EAAa3V,aAzBF,SAAC,GAcnB,IAbJ3G,EAaG,EAbHA,KACA6G,EAYG,EAZHA,YACAxH,EAWG,EAXHA,aACA2L,EAUG,EAVHA,OACAgI,EASG,EATHA,YACA9C,EAQG,EARHA,gBASA,MAAO,CACLlQ,OACAyW,QAAS5P,EACTxH,eACA4T,QAASjI,EAAOiI,QAChBC,UAAWF,EAAYE,UACvBhD,qBAI+C,CACjD2H,uBACAkB,iBACAC,mBACAN,kCACApZ,6BACA2Z,kBACAH,sBACAI,yBACAC,mCACAN,kCACAnZ,qBAXwBiH,CAYvBkQ,I,iCKlvDH,0CA2Ce0F,IA9BqC,SAAC,GAM9C,IALLC,EAKI,EALJA,SACAC,EAII,EAJJA,SAII,IAHJC,eAGI,MAHM,QAGN,MAFJ3jB,iBAEI,MAFQ,0IAER,MADJ4jB,gBACI,SAaJ,OACE,yBACEtjB,QAAS,SAACoB,GAAD,OAVO,SAACmiB,EAAgBH,GACnC,IACMI,EAAK,CAAEC,OAAQ,CAAE5e,KADZ6e,QAAWC,cAAcJ,IACDK,WAAY,CAAC,SAC1CC,EAAcH,QAAWF,EAAI,CAAEM,SAAU,OAAQvc,KAAM,UACvD1C,EAAO,IAAIkf,KAAK,CAACF,GAAc,CAAEtc,KAPvC,oFAQAyc,SAAiBnf,EAAMue,EAPH,SAYFa,CAAYd,EAAUC,IACtC1jB,UAAWA,EAFb,UAIG4jB,GAAY,cAAC,IAAD,IACZD,O,+GCtCQ,MAA0B,oCCGzCa,EAAQ,KAED,IAAMC,EAAa,SAACC,GACzB,IAAMC,EAAYD,EAAIE,SAASC,mBAE/BH,EAAII,QAAQ,YAAa,UACzBJ,EAAIK,YAAY,GAChB,IAAK,IAAIvQ,EAAI,EAAGA,GAAKmQ,EAAWnQ,IAC9BkQ,EAAIM,QAAQxQ,GACZkQ,EAAI3R,KACF,QAAUkS,OAAOzQ,GAAK,OAASyQ,OAAON,GACtCD,EAAIE,SAASM,SAAS7Y,MAAQ,EAC9B,IACA,CACE8Y,MAAO,YAiBFxC,EAAW,uCAAG,WACzBN,EACAF,EACAiD,GAHyB,6BAAAjZ,EAAA,sDA8EzB,IAzEAiZ,GAAS,GACH1C,EAAyBL,EAAeK,YAC1CL,EAAeK,YACf,IACA2C,EAAkB,GACA,GACA,KAGlBX,EAAW,IAAIY,UAAM5C,EAAa,KAAM,OAExC6C,aAAa,GAAI,GAAI,IACzBb,EAAIK,YAAY,IAQhBL,EAAIc,SAASC,EAAM,MAAO,GAAI,GAAI,GAAI,IACtCf,EAAI3R,KAAK,UAAW,GAAI,UAAMC,EAAW,QAEzC0R,EAAIK,YAAY,IAChBL,EAAI3R,KACFsP,EAAezb,MACf8d,EAAIE,SAASM,SAASQ,WAAa,EACnC,UACA1S,EACA,UAGF0R,EAAIK,YAAY,IAChBL,EAAI3R,KACFsP,EAAevY,UACf4a,EAAIE,SAASM,SAASQ,WAAa,EACnC,UACA1S,EACA,UAIF2S,EAAQjB,EAAIkB,gBACVvD,EAAeG,QACfqD,KAWFnB,EAAIK,YAAY,IAMZe,EAAI,GAERpB,EAAIa,aAAa,GAAI,GAAI,IACzBb,EAAI3R,KAAJ,UAAYsP,EAAeE,aAA3B,MAA6C8C,EAASS,GACtDzZ,EAAQqY,EAAIqB,aAAJ,UAAoB1D,EAAeE,aAAnC,OAORmC,EAAIa,aAAa,GAAI,GAAI,IAChB/Q,EAAI,EAAGA,EAAImR,EAAMhlB,OAAQ6T,IAC5BsR,EAAI,MACNA,EAAI,GACJpB,EAAIsB,WAGNtB,EAAI3R,KAAK4S,EAAMnR,GAAI6Q,EAAUhZ,EAAOyZ,GACpCA,GAAQ,EArFe,OAuFzBpB,EAAIa,aAAa,GAAI,GAAI,IACzBb,EAAI3R,KAAK,WAAYsS,EAASS,EAAI,GAClCzZ,EAAQqY,EAAIqB,aAAa,YACzBrB,EAAIa,aAAa,GAAI,GAAI,IACzBb,EAAI3R,KAAKsP,EAAelQ,OAAQkT,EAAUhZ,EAAOyZ,EAAI,GAErDpB,EAAIuB,UAAU,CACZC,KAAM/D,EACNgE,OAAQ,GACRC,OAAQ,CAAE7gB,WAAY,IACtB8gB,YAAa,EAEbC,UAAW,GAEXC,WAAY,CAAEC,OAAQ,OACtBC,aAAc,CAAEvd,MAAO,CAAEwd,UAAW,SACpC7f,MAAO,UACP8f,YAAY,IAGdjC,EAAIK,YAAY,IACZ6B,EAASlC,EAAImC,cAAcD,OAC/BlC,EAAI3R,KAAJ,uBAAyBsP,EAAeC,QAAU+C,EAASuB,EAAS,IACpElC,EAAI3R,KACF,wBAA0BrJ,aAAK,IAAIod,MAAO1iB,YAC1CihB,EACAuB,EAAS,IAGXnC,EAAWC,GApHc,UAqHnBA,EACHqC,KADG,UAGA1E,EAAezb,MACf,KACAyb,EAAeG,QACf,KACAH,EAAelQ,OAPf,QASF,CAAE6U,eAAe,IAElBC,KAAK7B,GAAS,IAhIQ,4CAAH,2D,2HCnBX8B,EAAgB,SAACC,GAC5B,IAD0E,EACtEC,EAAQ,IAAIN,KACZO,EAAgC,GAFsC,cAGzDF,GAHyD,IAG1E,2BAAwB,CAAC,IAAhBG,EAAe,QAClBC,EAAY,IAAIT,KAAKQ,EAAKE,YAC1BC,EAAU,IAAIX,KAAKQ,EAAKI,UAE1BH,EAAUI,WAAaP,EAAMO,WAC7BF,EAAQE,WAAaP,EAAMO,WAC3BL,EAAKM,cAAgBC,IAAsBC,OAE3CT,EAAW,sBAAOA,GAAP,CAAoBC,MAXuC,8BAc1E,OAAOD,GAUHU,EAAgB,SAAC3nB,GACrB,IAKE+R,EACA6V,EANF,EAAwCzU,mBACtC,MADF,mBAAO0U,EAAP,KAAqBC,EAArB,KAGA,EAA4B3U,mBAAiB,IAA7C,mBAAOlG,EAAP,KAAe8a,EAAf,KAQA,OACE,sBAAKnoB,UAAU,GAAf,UACE,qBAAKA,UAAU,OAAf,SACE,uBACEyB,SAAU,SAACC,GAAD,OACRymB,EAAUzmB,EAAEE,OAAON,QAErBuG,KAAK,OACL7H,UAAU,uDACVoN,YAAY,uBACZ5L,SAA+B,OAArBpB,EAAMkf,YAAmD,IAA5Blf,EAAMkf,WAAW3e,WAI5D,qBAAKX,UAAU,uCAAf,SACwB,OAArBI,EAAMkf,WACL,cAAC,IAAD,IAC8B,IAA5Blf,EAAMkf,WAAW3e,OACnB,sBAAKX,UAAU,6EAAf,UACE,cAAC,KAAD,CAAUA,UAAU,aACpB,qBAAKA,UAAU,4CAAf,SACE,0DAIJ,oCACGI,EAAMgoB,WACL,sBACEpoB,UAAS,yBACmB,QAA1BI,EAAMioB,gBACF,6BACA,yBAHG,wHADX,UAOE,sBAAKroB,UAAU,mCAAf,UAC6B,QAA1BI,EAAMioB,gBACL,cAAC,IAAD,CAAeroB,UAAS,2BAExB,cAAC,KAAD,CACEA,UAAS,2BAGb,qBAAKA,UAAU,gBAAf,SACE,qBAAKA,UAAS,0BAAd,8BAGJ,qBACEM,QAAS,WACPF,EAAMkoB,iBAAiB,QAEzBtoB,UAAU,yHAJZ,wBApDZmS,EA8DmB/R,EAAMkf,WA7DzB0I,EA6DqC3a,EA3D9Bkb,YAAWpW,EAAQ6V,IA2DmB/mB,KAAI,SAACc,EAAMyS,GAAP,OACvC,sBAEExU,UAAS,yBACmB,QAA1BI,EAAMioB,iBACNjoB,EAAMioB,gBAAgBrmB,MAAQD,EAAKC,IAC/B,6BACA,yBAJG,+CAFX,UASE,sBAAKhC,UAAU,4EAAf,UACE,sBAAKA,UAAU,mCAAf,UAC6B,QAA1BI,EAAMioB,iBACPjoB,EAAMioB,gBAAgBrmB,MAAQD,EAAKC,IACjC,cAAC,IAAD,CAAehC,UAAS,2BAExB,cAAC,KAAD,CACEA,UAAS,2BAGb,sBAAKA,UAAU,gBAAf,UACE,qBACEA,UAAS,UACmB,QAA1BI,EAAMioB,iBACNjoB,EAAMioB,gBAAgBrmB,MAAQD,EAAKC,IAC/B,gBACA,gBAJG,cADX,SAQGD,EAAKE,oBAER,sBAAKjC,UAAU,wBAAf,UACE,4CACA,sBACEA,UAAS,WACY,IAAnB+B,EAAKyd,UACD,oCACA,wBAJR,UAOsB,IAAnBzd,EAAKyd,UAAqB,SAAW,qBAK9C,sBAAKxf,UAAU,mCAAf,WACqB,OAAjBioB,GACAA,EAAajmB,MAAQD,EAAKC,MAC1B,qBACE1B,QAAS,kBAAM4nB,EAAgBnmB,IAC/B/B,UAAU,4HAFZ,qBAOF,qBACEM,QAAS,WACPF,EAAMkoB,iBAAiBvmB,IAEzB/B,UAAU,yHAJZ,oBAQkB,OAAjBioB,GAAyBA,EAAajmB,MAAQD,EAAKC,KAClD,qBACE1B,QAAS,kBAAM4nB,EAAgB,OAC/BloB,UAAU,yHAFZ,yBASY,OAAjBioB,GAAyBA,EAAajmB,MAAQD,EAAKC,KAClD,qBAAKhC,UAAU,gFAAf,SACE,wBAAOA,UAAU,SAAjB,UACE,uBAAOA,UAAU,aAAjB,SACE,qBAAIA,UAAU,YAAd,UACE,oBAAIA,UAAU,YAAd,eACA,sCACA,4CACA,6CACA,6CAGJ,uBAAOA,UAAU,UAAjB,SACoB,OAAjBioB,GACCA,EAAajmB,MAAQD,EAAKC,KAC1BimB,EAAad,MAAMxmB,OAAS,GAC5BoB,EAAKolB,MAAMlmB,KAAI,SAACqmB,EAAM9S,GAAP,OACb,qBAEExU,UAAS,eAGDgT,IAFNkU,EAAcnlB,EAAKolB,OAAOjd,MACxB,SAACse,GAAD,OAASA,EAAIC,WAAanB,EAAKmB,YAE7B,sCACA,GALG,sCAFX,UAUE,oBAAIzoB,UAAU,YAAd,SAA2BwU,EAAI,IAC/B,6BAAK8S,EAAKoB,aACV,6BAAKhf,YAAK4d,EAAKE,WAAY,gBAC3B,6BAAK9d,YAAK4d,EAAKI,SAAU,gBACzB,6BAAKJ,EAAKM,gBAbLpT,EAAI,eAzFlBA,EAAI,eAsHVvU,QAAMC,KAAK6nB,I,iPC9LdY,E,4GAAAA,K,2BAAAA,E,mBAAAA,E,cAAAA,E,cAAAA,E,cAAAA,E,4BAAAA,E,2BAAAA,E,0BAAAA,E,6BAAAA,E,qBAAAA,E,iBAAAA,E,6BAAAA,E,0BAAAA,M,KAsBL,IAAMC,EAA0C,SACrDhmB,GAEA,OACEA,IAAQ+lB,EAAkDzX,cAC1DtO,IAAQ+lB,EAAkDxX,aAC1DvO,IAAQ+lB,EAAkDvX,QAC1DxO,IAAQ+lB,EAAkDE,WAC1DjmB,IAAQ+lB,EAAkDG,MAOjDhG,EACX,CACE,CACElgB,IAAK+lB,EAAkDE,UACvDjiB,MAAO,kBACPH,QAAQ,GAEV,CACE7D,IAAK+lB,EAAkDG,KACvDliB,MAAO,cACPH,QAAQ,GAEV,CACE7D,IAAK+lB,EAAkDI,MACvDniB,MAAO,QACPH,QAAQ,GAEV,CACE7D,IAAK+lB,EAAkDK,MACvDpiB,MAAO,QACPH,QAAQ,GAEV,CACE7D,IAAK+lB,EAAkDM,MACvDriB,MAAO,QACPH,QAAQ,GAEV,CACE7D,IAAK+lB,EAAkDzX,aACvDtK,MAAO,eACPH,QAAQ,GAEV,CACE7D,IAAK+lB,EAAkDxX,YACvDvK,MAAO,cACPH,QAAQ,GAEV,CACE7D,IAAK+lB,EAAkDpX,aACvD3K,MAAO,gBACPH,QAAQ,GAEV,CACE7D,IAAK+lB,EAAkDvX,OACvDxK,MAAO,cACPH,QAAQ,GAEV,CACE7D,IAAK+lB,EAAkDjf,KACvD9C,MAAO,YACPH,QAAQ,GAEV,CACE7D,IAAK+lB,EAAkDO,WACvDtiB,MAAO,kBACPH,QAAQ,GAEV,CACE7D,IAAK+lB,EAAkDQ,SACvDviB,MAAO,gBACPH,QAAQ,GAEV,CACE7D,IAAK+lB,EAAkDtX,OACvDzK,MAAO,SACPH,QAAQ,IAqBD4Q,EAAoC,SAC/CzF,EACAzM,EACA6M,GAEA,IAAIjI,EAA+C,GACjDpH,EAAgB,GAFuB,WAG9BC,GACT,GAAIC,OAAOC,UAAUC,eAAeC,KAAKmC,EAAMvC,KACxCD,EAAIM,SAASkC,EAAKvC,GAAKZ,KAAM,CAChCW,EAAIQ,KAAKgC,EAAKvC,GAAKZ,KACnB,IAAI+P,EAAUH,EAAW1H,MACvB,SAACnI,GAAD,OAAUA,EAAKiQ,YAAc7M,EAAKvC,GAAKqP,UAErCF,GACFhI,EAAO5G,KAAK,CACV2S,QAAS3Q,EAAKvC,GAAKgW,KAAK9C,QACxB+B,UACEpD,YAAsBtP,EAAKvC,GAAKgW,KAAKxQ,UAAUO,OAC/C,IACA8L,YAAsBtP,EAAKvC,GAAKgW,KAAKxQ,UAAUM,OACjDI,YAAa3D,EAAKvC,GAAKgW,KAAK7P,KAAO5D,EAAKvC,GAAKgW,KAAK7P,KAAO,GACzD+O,WAAY3S,EAAKvC,GAAKgW,KAAK1P,MAC3B6O,WAAY5S,EAAKvC,GAAKgW,KAAK3P,aAC3BmJ,YAAaL,EAAQK,YACrBC,YAAaN,EAAQM,YACrBrE,YAAa+D,EAAQ/D,YACrBsE,cAAeP,EAAQO,cACvBN,UAAWD,EAAQC,UACnBO,KAAMpN,EAAKvC,GACXsU,iBAAkB/R,EAAKvC,GAAKiW,YAC5B9B,aAAc5R,EAAKvC,GAAKkW,gBAxBlC,IAAK,IAAMlW,KAAOuC,EAAO,EAAdvC,GAkCX,MAHkB,QAAdoP,IACFjI,EAASA,EAAOpG,QAAO,SAAC5B,GAAD,OAAUA,EAAKiQ,YAAcA,MAE/CjI,GAGIqf,EAA0C,SACrDzW,EACAC,GAEA,MAAkB,QAAdA,EACKD,EAEAA,EAAShP,QAAO,SAAC5B,GAAD,OAAUA,EAAKgV,eAAiBnE,MAI9C8E,EAAiC,SAC5C5E,EACAC,GAEA,YAAIC,IAAcD,GAAiB,KAATA,EAAoBD,EACvCA,EAAQnP,QAAO,SAACsP,GACrB,IAAIC,EAGJ,IAAK,IAAIC,KAAQF,EAiBf,GAhBAC,GAAO,EAEI,gBAATC,GACS,gBAATA,GACS,qBAATA,GACS,iBAATA,GACS,gBAATA,GACS,cAATA,GACS,eAATA,GACS,eAATA,GACS,gBAATA,IAEAD,EACED,EAAQE,GAAM/O,WAAWgP,cAAcC,QAAQN,EAAKK,gBACnD,GAEDF,EAAM,MAEZ,OAAOA,MAIE0E,EAAsB,SAACnR,GAClC,MAAe,SAAXA,EACK,qEAEM,YAAXA,EACK,iEAEM,WAAXA,EACK,uEAEF,oEA8MMxG,QAAMC,KAAK0N,aAVF,SAAC,GAKvB,MAAO,CACLuJ,gBAFC,EAHHA,mBASiD,GAAzBvJ,EA9LwC,SAACxN,GACjE,MAAsCmT,mBAAiB,IAAvD,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAgCF,oBAAkB,GAAlD,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAwCJ,mBAAiB,IAAzD,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAAkCN,mBAAyB,OAA3D,mBAAOO,EAAP,KAAkBC,EAAlB,KAEMC,EAAU,SAACC,GACXL,IAAiBK,GAA8B,QAAdH,GACnCC,EAAa,QACbF,EAAgBI,GAChBN,GAAY,KAEZI,EAAa,OACbF,EAAgBI,GAChBN,GAAY,KAIhB,OACE,cAAC,WAAD,UACE,sBAAK3T,UAAU,gBAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,uBACEyB,SAAU,SAACC,GAAD,OAAO+R,EAAe/R,EAAEE,OAAON,QACzCuG,KAAK,OACLvG,MAAOkS,EACPpG,YAAY,YACZpN,UAAU,uCACVwB,YACEpB,EAAM8T,gBACN9T,EAAMgX,0BACNgS,EACE/R,EACEjX,EAAM8T,eACN9T,EAAMgX,yBACNhX,EAAM+W,gBAAgBG,eAClBlX,EAAM+W,gBAAgBG,eAAetF,UACrC,OAEN5R,EAAMoX,4BACN7W,QAAU,OAMlB,qBAAKX,UAAU,yBAAf,SACE,wBAAOA,UAAU,gBAAgBoQ,GAAG,iBAApC,UACE,uBAAOpQ,UAAU,sEAAjB,SACE,+BACE,oBAAIA,UAAU,YAAd,eACA,oBAAIA,UAAU,YAAYM,QAAS,kBAAM0T,EAAQ,cAAjD,wBAGA,oBAAIhU,UAAU,YAAd,yBACA,oBAAIA,UAAU,YAAd,mBACA,oBAAIA,UAAU,YAAd,mBACA,oBACEA,UAAU,2BACVM,QAAS,kBAAM0T,EAAQ,gBAFzB,SAIE,sBAAKhU,UAAU,0BAAf,kBACO,cAAC,IAAD,SAGT,oBAAIA,UAAU,YAAd,yBACA,oBAAIA,UAAU,YAAd,uBACA,oBAAIA,UAAU,YAAd,6BACA,oBAAIA,UAAU,YAAd,2BACA,oBACEA,UAAU,2BACVM,QAAS,kBAAM0T,EAAQ,qBAFzB,SAIE,sBAAKhU,UAAU,0BAAf,mBACQ,cAAC,IAAD,SAGV,oBAAIA,UAAU,YAAd,yBAGJ,gCAC4B,OAAzBI,EAAM8T,gBAA2B9T,EAAMS,QACtC,6BACE,oBAAIyT,QAAS,GAAItU,UAAU,YAA3B,SACE,cAAC,IAAD,QAGFI,EAAMgX,0BACRgS,EACE/R,EACEjX,EAAM8T,eACN9T,EAAMgX,yBACNhX,EAAM+W,gBAAgBG,eAClBlX,EAAM+W,gBAAgBG,eAAetF,UACrC,OAEN5R,EAAMoX,4BACN7W,QAAU,EACZ,6BACE,oBAAI2T,QAAS,GAAItU,UAAU,wBAA3B,4CAKFI,EAAMgX,0BACN7C,YACEb,EACAgE,EACE0R,EACE/R,EACEjX,EAAM8T,eACN9T,EAAMgX,yBACNhX,EAAM+W,gBAAgBG,eAClBlX,EAAM+W,gBAAgBG,eAAetF,UACrC,OAEN5R,EAAMoX,4BAERhE,GAEFI,EACAE,GACA7S,KAAI,SAACc,EAA0CyS,GAA3C,OACJ,qBAEExU,UAAS,UAAK4X,EACZ7V,EAAKgV,cADE,gEAFX,UAME,oBAAI/W,UAAU,YAAd,SAA2BwU,EAAI,IAC/B,oBAAIxU,UAAU,YAAd,SACGyU,YAAsB1S,EAAK8V,aAE9B,oBAAI7X,UAAU,YAAd,SAA2B+B,EAAK+G,cAChC,oBAAI9I,UAAU,YAAd,SAA2B+B,EAAK+V,aAChC,oBAAI9X,UAAU,YAAd,SAA2B+B,EAAKgW,aAChC,qBAAI/X,UAAU,YAAd,UACGyU,YAAsB1S,EAAKqQ,aAD9B,KAEE,sBAAMpS,UAAU,gBAAhB,SAAiC+B,EAAKsQ,cAFxC,OAIA,oBAAIrS,UAAU,YAAd,SACG+B,EAAKwQ,MACF1O,wBAAczD,EAAMmB,WAAYQ,EAAKwQ,KAAKJ,QACxCtO,wBAAczD,EAAMmB,WAAYQ,EAAKwQ,KAAKJ,QACvClQ,kBAEL,MAEN,oBAAIjC,UAAU,YAAd,SACG+B,EAAKwQ,KAAKmC,UAAYhL,YAAK3H,EAAKwQ,KAAKmC,WAAa,MAErD,oBAAI1U,UAAU,YAAd,SACG+B,EAAKwQ,KAAKoC,WACPqD,YAAgBjW,EAAKwQ,KAAKoC,YAAYsD,SACtC,MAEN,oBAAIjY,UAAU,YAAd,SACG+B,EAAKwQ,KAAK2F,SACPF,YAAgBjW,EAAKwQ,KAAK2F,UAAUD,SACpC,MAEN,oBAAIjY,UAAU,YAAd,SACG+B,EAAKgV,eAAiBoB,IAAqBC,QACxChP,OAAOrH,EAAKmV,iBAAiB5N,QAAQ,IAAM,IAC3C,MAEN,oBAAItJ,UAAU,YAAd,SACGyU,YAAsB/C,YAAc3P,EAAKgV,mBA3CvCvC,EAAI,uB,sFCpWvBnP,EAAa,CACjBC,aAAc,EACdC,YAAY,EACZC,YAAa,MACbC,YAAa,WAGTb,EAA+C,SAACxE,GACpD,MAA8BmT,oBAAkB,GAAhD,mBAAO1S,EAAP,KAAgB+E,EAAhB,KACA,EAA8B2N,mBAAsB,CAClD8V,MAAO,CACLC,OAAQ,CACNC,mBAAoB,SAACC,EAAOC,EAAcC,GACxCja,QAAQC,IAAI,CACVia,aAAcD,EAAO3d,EAAE2d,OAAO/kB,OAAO+kB,EAAOE,kBAG1CxpB,EAAMypB,iBACRzpB,EAAMypB,gBAAgBH,EAAOE,eAAgBF,EAAOI,eAM1DC,UAAS3pB,EAAM2pB,SAAU3pB,EAAM2pB,SAEjC1e,YAAa,CACX2e,IAAK5pB,EAAMiF,WAAajF,EAAMiF,WAAaA,GAE7CV,OAAQvE,EAAMuE,OACdG,WAAY,CACVmlB,SAAS,GAEXC,MAAO,CACLvlB,OAAQ,CACNwlB,QAAS,IAEXC,WAAYhqB,EAAMyE,gBAClBwlB,cAAe,MAEjBC,MAAO,CACL1jB,MAAO,CACLmM,KAAM3S,EAAM2E,YAGhBwlB,KAAM,CACJC,QAAS,GAEXC,QAAS,CACP3E,EAAG,CACDna,UAAW,SAAUC,GACnB,OAAOA,EAAM,IAAMxL,EAAM4E,eAI/B0lB,KAAM,CACJ1d,QAAS,CACP2d,KAAM,GACNC,MAAO,KAGXC,OAAQ,CACN9X,KAAM,gBACNoS,MAAO,SACP2F,cAAe,YAvDnB,mBAAOjgB,EAAP,KAAgBkgB,EAAhB,KAkMA,OAvIAlQ,qBAAU,WACJza,EAAMgF,QAAUhF,EAAMgF,OAAOzE,OAAS,GAAKE,EAC7CkqB,EAAW,CACT1B,MAAO,CACLU,UAAS3pB,EAAM2pB,SAAU3pB,EAAM2pB,QAC/BT,OAAQ,CACNC,mBAAoB,SAACC,EAAOC,EAAcC,GACxCja,QAAQC,IAAI,CACVsb,aAActB,EAAO3d,EAAE2d,OAAO/kB,OAAO+kB,EAAOE,kBAE1CxpB,EAAMypB,iBACRzpB,EAAMypB,gBACJH,EAAOE,eACPF,EAAOI,eAKfmB,KAAM,CACJhB,SAAS,EACTiB,gBAAgB,IAGpB7f,YAAa,CACX2e,IAAK5pB,EAAMiF,WAAajF,EAAMiF,WAAaA,GAE7CV,OAAQvE,EAAMuE,OACdG,WAAY,CACVmlB,SAAS,GAEXC,MAAO,CACLvlB,OAAQ,CACNwlB,QAAS,IAEXC,WAAYhqB,EAAMyE,gBAClBwlB,cAAe,MAEjBC,MAAO,CACL1jB,MAAO,CACLmM,KAAM3S,EAAM2E,YAGhBwlB,KAAM,CACJC,QAAS,GAEXC,QAAS,CACP3E,EAAG,CACDna,UAAW,SAAUC,GACnB,OAAOA,EAAM,IAAMxL,EAAM4E,eAI/B0lB,KAAM,CACJ1d,QAAS,CACP2d,KAAM,GACNC,MAAO,KAGXC,OAAQ,CACN9X,KAAM,gBACNoS,MAAO,SACP2F,cAAe,UAEjB1lB,OAAQhF,EAAMgF,SAEPvE,GACTkqB,EAAW,CACT1B,MAAO,CACLU,UAAS3pB,EAAM2pB,SAAU3pB,EAAM2pB,QAC/BT,OAAQ,CACNC,mBAAoB,SAACC,EAAOC,EAAcC,GACxCja,QAAQC,IAAI,CACVia,aAAcD,EAAO3d,EAAE2d,OAAO/kB,OAAO+kB,EAAOE,kBAG1CxpB,EAAMypB,iBACRzpB,EAAMypB,gBACJH,EAAOE,eACPF,EAAOI,eAOfmB,KAAM,CACJhB,SAAS,EACTiB,gBAAgB,IAGpB7f,YAAa,CACX2e,IAAK5pB,EAAMiF,WAAajF,EAAMiF,WAAaA,GAE7CV,OAAQvE,EAAMuE,OACdG,WAAY,CACVmlB,SAAS,GAEXC,MAAO,CACLvlB,OAAQ,CACNwlB,QAAS,IAEXC,WAAYhqB,EAAMyE,gBAClBwlB,cAAe,MAEjBC,MAAO,CACL1jB,MAAO,CACLmM,KAAM3S,EAAM2E,YAGhBwlB,KAAM,CACJC,QAAS,GAEXC,QAAS,CACP3E,EAAG,CACDna,UAAW,SAAUC,GACnB,OAAOA,EAAM,IAAMxL,EAAM4E,eAI/B0lB,KAAM,CACJ1d,QAAS,CACP2d,KAAM,GACNC,MAAO,KAGXC,OAAQ,CACN9X,KAAM,gBACNoS,MAAO,SACP2F,cAAe,YAIrBllB,GAAW,KACV,CAAC/E,EAASgK,EAASzK,IAElBS,EAEA,qBAAKb,UAAU,kEAAf,6BAOF,qBAAKA,UAAU,SAAf,SACE,cAAC,IAAD,CACE6K,QAASA,EACT5F,OAAQ7E,EAAM6E,OACd4C,KAAK,MACLwE,MAAM,OACN8e,OAAQ/qB,EAAMsF,YAActF,EAAMsF,iBAAcsN,OAMzC/S,QAAMC,KAAK0E,I,6KC5OdwmB,E,kFAAAA,K,0BAAAA,E,0BAAAA,E,6BAAAA,E,qBAAAA,E,iBAAAA,E,iBAAAA,E,yBAAAA,E,6BAAAA,M,KAiBL,IAAMxI,EACX,CACE,CACEhgB,IAAKwoB,EAAyChZ,YAC9CxL,MAAO,eACPH,QAAQ,GAEV,CACE7D,IAAKwoB,EAAyC/Y,YAC9CzL,MAAO,cACPH,QAAQ,GAEV,CACE7D,IAAKwoB,EAAyC7Z,aAC9C3K,MAAO,gBACPH,QAAQ,GAEV,CACE7D,IAAKwoB,EAAyCha,OAC9CxK,MAAO,cACPH,QAAQ,GAEV,CACE7D,IAAKwoB,EAAyC1hB,KAC9C9C,MAAO,YACPH,QAAQ,GAEV,CACE7D,IAAKwoB,EAAyC5Z,KAC9C5K,MAAO,YACPH,QAAQ,GAEV,CACE7D,IAAKwoB,EAAyC3Z,SAC9C7K,MAAO,gBACPH,QAAQ,GAEV,CACE7D,IAAKwoB,EAAyC/Z,OAC9CzK,MAAO,cACPH,QAAQ,IAID4kB,EAAiC,SAC5CzoB,GAEA,OACEA,IAAQwoB,EAAyChZ,aACjDxP,IAAQwoB,EAAyC/Y,aAkBxC0O,EAAoB,SAC/BnP,EACAC,GAEqC,IADrCM,EACoC,uDADnB,GAEbpI,EAA0C,GAC5CpH,EAAgB,GAFkB,WAGzBC,GACT,GAAIC,OAAOC,UAAUC,eAAeC,KAAK4O,EAAYhP,GAAM,CACzD,GAAID,EAAIM,SAAS2O,EAAWhP,GAAKoP,WAAY,iBAC7CrP,EAAIQ,KAAKyO,EAAWhP,GAAKoP,WACzB,IAAIO,EAAQqN,YAAgBzN,GAMxBN,EAAS3H,MAAK,SAACnI,GAAD,OAAUA,EAAKkQ,SAAWL,EAAWhP,GAAKoP,aALxDH,EAAS3H,MACP,SAACnI,GAAD,OACEA,EAAKkQ,SAAWL,EAAWhP,GAAKoP,WAChCjQ,EAAKoQ,SAAWA,KAGpBI,EACFxI,EAAO5G,KAAK,CACViP,YAAaR,EAAWhP,GAAKwP,YAC7BC,YAAaT,EAAWhP,GAAKyP,YAC7BrE,YAAa4D,EAAWhP,GAAKoL,YAC7BsE,cAAeV,EAAWhP,GAAK0P,cAC/BN,UAAWJ,EAAWhP,GAAKoP,UAC3BO,KAAMA,EACNC,mBAAoB,aAGtBzI,EAAO5G,KAAK,CACViP,YAAaR,EAAWhP,GAAKwP,YAC7BC,YAAaT,EAAWhP,GAAKyP,YAC7BrE,YAAa4D,EAAWhP,GAAKoL,YAC7BsE,cAAeV,EAAWhP,GAAK0P,cAC/BN,UAAWJ,EAAWhP,GAAKoP,UAC3BO,KAAM,KACNC,mBAAoB,mBA7B5B,IAAK,IAAM5P,KAAOgP,EAAY,EAAnBhP,GAkCX,OAAOmH,GAGIuhB,EAA0B,SACrC3Y,EACA4Y,GAEA,MAAmB,QAAfA,EACK5Y,EAEAA,EAAShP,QAAO,SAAC5B,GAAD,OAAUA,EAAKyQ,qBAAuB+Y,MAIpDC,EAAiB,SAC5B1Y,EACAC,GAEA,YAAIC,IAAcD,GAAiB,KAATA,EAAoBD,EACvCA,EAAQnP,QAAO,SAACsP,GACrB,IAAIC,EAGJ,IAAK,IAAIC,KAAQF,EAWf,GAVAC,GAAO,EAEI,gBAATC,GACS,gBAATA,GACS,uBAATA,IAEAD,EACED,EAAQE,GAAM/O,WAAWgP,cAAcC,QAAQN,EAAKK,gBACnD,GAEDF,EAAM,MAEZ,OAAOA,MAaL8P,EAAoC,SAAC5iB,GACzC,MAAsCmT,mBAAiB,IAAvD,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAgCF,oBAAkB,GAAlD,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAwCJ,mBAAiB,IAAzD,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAAkCN,mBAAyB,OAA3D,mBAAOO,EAAP,KAAkBC,EAAlB,KAEMC,EAAU,SAACC,GACXL,IAAiBK,GAA8B,QAAdH,GACnCC,EAAa,QACbF,EAAgBI,GAChBN,GAAY,KAEZI,EAAa,OACbF,EAAgBI,GAChBN,GAAY,KAIhB,OACE,cAAC,WAAD,UACE,sBAAK3T,UAAU,gBAAf,UACE,qBAAKA,UAAU,mBAAf,SACGI,EAAM8T,gBAAkB9T,EAAM+T,eAC7B,uBACE1S,SAAU,SAACC,GAAD,OAAO+R,EAAe/R,EAAEE,OAAON,QACzCuG,KAAK,OACLvG,MAAOkS,EACPpG,YAAY,YACZpN,UAAU,uCACVwB,SACE8pB,EACEvK,EAAkB3gB,EAAM8T,eAAgB9T,EAAM+T,eAC9C/T,EAAMsZ,mBACN/Y,QAAU,MAKpB,qBAAKX,UAAU,yBAAf,SACE,wBAAOA,UAAU,gBAAgBoQ,GAAG,iBAApC,UACE,uBAAOpQ,UAAU,sEAAjB,SACE,+BACE,oBAAIA,UAAU,YAAd,eACA,oBACEA,UAAU,2BACVM,QAAS,kBAAM0T,EAAQ,gBAFzB,SAIE,sBAAKhU,UAAU,0BAAf,oBACS,cAAC,IAAD,SAGX,oBAAIA,UAAU,YAAd,uBACA,oBAAIA,UAAU,YAAd,uBACA,oBAAIA,UAAU,YAAd,2BACA,oBAAIA,UAAU,YAAd,yBACA,oBAAIA,UAAU,YAAd,wBACA,oBACEA,UAAU,2BACVM,QAAS,kBAAM0T,EAAQ,uBAFzB,SAIE,sBAAKhU,UAAU,0BAAf,yBACc,cAAC,IAAD,cAKpB,gCAC4B,OAAzBI,EAAM8T,gBAA2B9T,EAAMS,QACtC,6BACE,oBAAIyT,QAAS,EAAGtU,UAAU,YAA1B,SACE,cAAC,IAAD,QAGFI,EAAM8T,gBACR9T,EAAM+T,eACNmX,EACEvK,EAAkB3gB,EAAM8T,eAAgB9T,EAAM+T,eAC9C/T,EAAMsZ,mBACN/Y,QAAU,EACZ,6BACE,oBAAI2T,QAAS,EAAGtU,UAAU,wBAA1B,wCAKFI,EAAM+T,eACNI,YACEb,EACA8X,EACEF,EACEvK,EACE3gB,EAAM8T,eACN9T,EAAM+T,eAER/T,EAAMsZ,mBAERlG,GAEFI,EACAE,GACA7S,KAAI,SAACc,EAAMyS,GAAP,OACJ,qBAEExU,UAAS,UACP+B,EAAKwQ,KAAO,aAAe,WADpB,+GAFX,UAME,oBAAIvS,UAAU,YAAd,SAA2BwU,EAAI,IAC/B,qBAAIxU,UAAU,YAAd,UACGyU,YAAsB1S,EAAKqQ,aAD9B,KAEE,sBAAMpS,UAAU,gBAAhB,SAAiC+B,EAAKsQ,cAFxC,OAIA,oBAAIrS,UAAU,YAAd,SACG+B,EAAKwQ,KAAO7I,YAAK3H,EAAKwQ,KAAKmC,WAAa,MAE3C,oBAAI1U,UAAU,YAAd,SACG+B,EAAKwQ,KAAOxQ,EAAKwQ,KAAKoC,WAAa,MAEtC,oBAAI3U,UAAU,YAAd,SACG+B,EAAKwQ,KAAOxQ,EAAKwQ,KAAMqC,SAAW,OAAS,MAE9C,oBAAI5U,UAAU,YAAd,SACG+B,EAAKwQ,MACF1O,wBAAczD,EAAMmB,WAAYQ,EAAKwQ,KAAKJ,QACxCtO,wBAAczD,EAAMmB,WAAYQ,EAAKwQ,KAAKJ,QACvClQ,kBAEL,MAEN,oBAAIjC,UAAU,YAAd,SACG+B,EAAKwQ,KAAO7I,YAAK3H,EAAKwQ,KAAK5I,WAAa,MAE3C,oBAAI3J,UAAU,YAAd,SACGyU,YACC1S,EAAKwQ,KAAO,WAAa,oBAhCxBiC,EAAI,mBA8CdvU,QAAMC,KAAK8iB,I,uEC5RdzH,E,wKAhBCkQ,EAAsB,SACjCC,GAEA,IAGElX,EAHEmX,EAAkB,GACpBC,EAAuC,GACvCC,EAAYH,EAAU/qB,OAExB,IAAK6T,EAAI,EAAGA,EAAIqX,EAAGrX,IACbmX,EAAM1oB,SAASyoB,EAAUlX,GAAGsC,eAChC6U,EAAMxoB,KAAKuoB,EAAUlX,GAAGsC,aACxB8U,EAAOzoB,KAAKuoB,EAAUlX,KAGxB,OAAOoX,I,SAGGrQ,K,cAAAA,E,gBAAAA,E,sCAAAA,E,4BAAAA,E,qCAAAA,M,KAqlCGtb,QAAMC,KACnB0N,aAXsB,SAAC,GAKvB,MAAO,CACL8d,UAFC,EAHHA,UAKuBI,gBAKE,CACvBC,eACA3R,yBACA4R,wBAHFpe,EAj/BwD,SAACxN,GACzD,MAAkCmT,mBAGxB,MAHV,mBAAO0Y,EAAP,KAAkBC,EAAlB,KAIA,EAAkC3Y,oBAAkB,GAApD,mBAAO4Y,EAAP,KAAkBC,EAAlB,KACA,EAAsC7Y,mBAAiB,IAAvD,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA8CF,oBAAkB,GAAhE,mBAAO8Y,EAAP,KAAwBC,EAAxB,KACA,EAA0B/Y,mBACxB,MADF,mBAAOoC,EAAP,KAAc4W,EAAd,KAGA,EAAoChZ,mBAClCnT,EAAM6c,WAAa7c,EAAM6c,WAAa,OADxC,mBAAOA,EAAP,KAAmBuP,EAAnB,KAIMC,EAAkB,SAAC7pB,GAEvB,OACExC,EAAMC,aACND,EAAMC,cAAgBqW,kBAAgB8C,iBAE/B6R,YAA+BzoB,IAItCxC,EAAMC,aACLD,EAAMC,cAAgBqW,kBAAgB4C,kBACrClZ,EAAMC,cAAgBqW,kBAAgB6C,0BAMxCnZ,EAAMC,aACND,EAAMC,cAAgBqW,kBAAgBiD,qBAE/B1I,YAAmCrO,MAI1CxC,EAAMC,aACLD,EAAMC,cAAgBqW,kBAAgBmD,wBACrCzZ,EAAMC,cAAgBqW,kBAAgBoD,kCAEjC8O,YAAwChmB,GAfxC8pB,YAA+B9pB,IAwKpC+pB,EAAqC,SACzC/pB,GAEA,GACExC,EAAMC,aACND,EAAMC,cAAgBqW,kBAAgB4C,kBACtClZ,EAAM6b,6BACN,CACA,IAAI9a,EAAgBf,EAAM6b,6BAA6B2Q,WACrD,SAAC7qB,GAAD,OAAUA,EAAKa,MAAQA,KAErBiqB,EACFzsB,EAAM6b,6BACR4Q,EAAS1rB,GAAOsF,QAAUomB,EAAS1rB,GAAOsF,OAC1CrG,EAAM8b,iCACJ9b,EAAM8b,gCAAgC2Q,GACxC,IAAIC,EAAoBD,EAAS3iB,MAAK,SAACnI,GAAD,OAA0B,IAAhBA,EAAK0E,UAEnD2lB,GADEU,GAOJ1sB,EAAM4a,mBAAqB5a,EAAM4a,oBAEnC,GACE5a,EAAMC,aACND,EAAMC,cAAgBqW,kBAAgB6C,2BACtCnZ,EAAMgc,+BACN,CACA,IAAIjb,EAAgBf,EAAMgc,+BAA+BwQ,WACvD,SAAC7qB,GAAD,OAAUA,EAAKa,MAAQA,KAErBiqB,EACFzsB,EAAMgc,+BACRyQ,EAAS1rB,GAAOsF,QAAUomB,EAAS1rB,GAAOsF,OAC1CrG,EAAMic,mCACJjc,EAAMic,kCAAkCwQ,GAC1C,IAAIC,EAAoBD,EAAS3iB,MAAK,SAACnI,GAAD,OAA0B,IAAhBA,EAAK0E,UAEnD2lB,GADEU,GAOJ1sB,EAAM4a,mBAAqB5a,EAAM4a,sBA4B/B+R,EAA8C,SAClDnqB,GAEA,GACExC,EAAMC,aACND,EAAMC,cAAgBqW,kBAAgBmD,wBACtCzZ,EAAMsc,sCACN,CACA,IAAIvb,EAAgBf,EAAMsc,sCAAsCkQ,WAC9D,SAAC7qB,GAAD,OAAUA,EAAKa,MAAQA,KAErBiqB,EACFzsB,EAAMsc,sCACRmQ,EAAS1rB,GAAOsF,QAAUomB,EAAS1rB,GAAOsF,OAC1CrG,EAAMuc,0CACJvc,EAAMuc,yCAAyCkQ,GACjD,IAAIC,EAAoBD,EAAS3iB,MAAK,SAACnI,GAAD,OAA0B,IAAhBA,EAAK0E,UAEnD2lB,GADEU,GAOJ1sB,EAAM4a,mBAAqB5a,EAAM4a,oBAGnC,GACE5a,EAAMC,aACND,EAAMC,cAAgBqW,kBAAgBoD,iCACtC1Z,EAAMyc,wCACN,CACA,IAAI1b,EACFf,EAAMyc,wCAAwC+P,WAC5C,SAAC7qB,GAAD,OAAUA,EAAKa,MAAQA,KAEvBiqB,EACFzsB,EAAMyc,wCACRgQ,EAAS1rB,GAAOsF,QAAUomB,EAAS1rB,GAAOsF,OAC1CrG,EAAM0c,4CACJ1c,EAAM0c,2CAA2C+P,GACnD,IAAIC,EAAoBD,EAAS3iB,MAAK,SAACnI,GAAD,OAA0B,IAAhBA,EAAK0E,UAEnD2lB,GADEU,GAOJ1sB,EAAM4a,mBAAqB5a,EAAM4a,sBAIrCH,qBAAU,WAELza,EAAMsrB,UAAU/qB,QACjBP,EAAMkb,WAAaC,EAAcyB,gBAOjCsP,GAAmB,GALnBlsB,EAAM2rB,YAAW,SAACtlB,EAAiBC,IAC5BD,GAAUC,EAAI/F,OAAS,GAAG8O,QAAQkG,MAAMjP,GAC7C4lB,EAAmB7lB,QAKtB,CAACrG,IAEJ,IAkCM4sB,EAAkB,WACtB,GAAI5sB,EAAMC,YAAa,CAErB,GACED,EAAMC,cAAgBqW,kBAAgB8C,kBACtCpZ,EAAMub,kBACNvb,EAAMyb,aAEN,MAAO,CAAEpV,QAAQ,EAAMtB,KAAM/E,EAAMyb,cAGrC,GACEzb,EAAMC,cAAgBqW,kBAAgB4C,kBACtClZ,EAAMub,kBACNvb,EAAM4b,uBAEN,MAAO,CAAEvV,QAAQ,EAAMtB,KAAM/E,EAAM4b,wBAGrC,GACE5b,EAAMC,cAAgBqW,kBAAgB6C,2BACtCnZ,EAAMub,kBACNvb,EAAM+b,yBAEN,MAAO,CAAE1V,QAAQ,EAAMtB,KAAM/E,EAAM+b,0BAGrC,GACE/b,EAAMC,cAAgBqW,kBAAgBiD,sBACtCvZ,EAAMub,kBACNvb,EAAMkc,2BAEN,MAAO,CAAE7V,QAAQ,EAAMtB,KAAM/E,EAAMkc,4BAGrC,GACElc,EAAMC,cAAgBqW,kBAAgBmD,wBACtCzZ,EAAMub,kBACNvb,EAAMqc,gCAEN,MAAO,CAAEhW,QAAQ,EAAMtB,KAAM/E,EAAMqc,iCAGrC,GACErc,EAAMC,cAAgBqW,kBAAgBoD,iCACtC1Z,EAAMub,kBACNvb,EAAMwc,kCAEN,MAAO,CAAEnW,QAAQ,EAAMtB,KAAM/E,EAAMwc,mCAGvC,MAAO,CAAEnW,QAAQ,EAAOtB,KAAM,KAGhC,OACE,gCAEG/E,EAAMkb,WAAaC,EAAcpJ,QAChC/R,EAAMkjB,oBACNljB,EAAMqb,YACJ,cAAC,IAAD,CACE7U,MACE,sBAAK5G,UAAU,mCAAf,UACE,cAAC,IAAD,CAAWA,UAAU,2BACrB,qBAAKA,UAAU,gBAAf,SACE,sBAAMA,UAAU,kCAAhB,kCAMNuM,UAAU,EACV1F,MAAO2F,IAAOC,QACdC,MAAO,kBAAMtM,EAAMyd,iBAAmBzd,EAAMsb,kBAAiB,IAC7D/O,eAAe,EACfC,eAAgBC,IAAUC,WAC1BC,cAAc,EACdC,QAAS,CAAEpG,OAAO,GAjBpB,SAmBE,cAAC,IAAD,CACE0Y,WAAYlf,EAAMkjB,mBAClBgF,iBAAkB,SAAChnB,GACH,QAAVA,IACFlB,EAAM0e,mBAAqB1e,EAAM0e,kBAAkBxd,GACnDlB,EAAMqf,gBAAkBrf,EAAMqf,eAAene,EAAMU,KACnD5B,EAAMsb,kBAAiB,KAG3B0M,WAAW,EACXC,gBACEjoB,EAAMyd,gBAAkBzd,EAAMyd,gBAAkB,UAQzDzd,EAAMkb,WAAaC,EAAc3U,OAASxG,EAAMqb,YAC/C,cAAC,IAAD,CACE7U,MACE,sBAAK5G,UAAU,mCAAf,UACE,cAAC,IAAD,CAAgBA,UAAU,2BAC1B,qBAAKA,UAAU,gBAAf,SACE,sBAAMA,UAAU,kCAAhB,0CAMNuM,UAAU,EACV1F,MAAO2F,IAAOC,QACdC,MAAO,kBAAMtM,EAAMsb,kBAAiB,IACpC/O,eAAe,EACfC,eAAgBC,IAAUC,WAC1BC,cAAc,EACdC,QAAS,CAAEpG,OAAO,GAjBpB,SAmBE,qBAAK5G,UAAU,YAAf,SACG6C,OAAOmX,OAAOtD,mBAAiBzV,KAAI,SAACc,EAAMyS,GAAP,OAClC,sBACElU,QAAS,WACPF,EAAM2c,gBAAkB3c,EAAM2c,eAAehb,GAC7C3B,EAAMwb,qBAAuBxb,EAAMwb,oBAAoB7Z,GACvD3B,EAAMsb,kBAAiB,IAGzB1b,UAAS,uIACPI,EAAMC,aAAeD,EAAMC,cAAgB0B,EACvC,6BACA,4BAVR,UAaE,gCACE,qBAAK/B,UAAU,2CAAf,yBAGA,sBAAKA,UAAU,YAAf,UACG+B,EACAA,IAAS2U,kBAAgB6C,2BACxB,kBAGN,qBAAKvZ,UAAU,0DAAf,sBAjBKwU,EAAI,UA4BlBpU,EAAMob,qBACLpb,EAAMkb,WAAaC,EAAcC,qBACjCpb,EAAMqb,YACJ,cAAC,IAAD,CACE7U,MACE,qBAAK5G,UAAU,mCAAf,SAEE,sBAAKA,UAAU,gBAAf,UACE,sBAAMA,UAAU,mCAAhB,wCAGA,uBAAMA,UAAU,oCAAhB,wBACcI,EAAMob,oBAAoBN,WADxC,kBAMN3O,UAAU,EACV1F,MAAO2F,IAAOC,QACdC,MAAO,kBACLtM,EAAM6a,wBAA0B7a,EAAM6a,uBAAuB,OAE/DtO,eAAe,EACfC,eAAgBC,IAAUogB,OAC1BlgB,cAAc,EACdC,QAAS,CAAEpG,OAAO,GAtBpB,SAwBE,sBAAK5G,UAAU,OAAf,UACE,sBAAKA,UAAU,0CAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,0CACA,uBACE6H,KAAK,OACL7H,UAAS,kDACPisB,GAAmC,iBAAtBA,EAAUroB,QACnB,iBACA,kBAHG,aAKTwJ,YAAY,qBACZ9L,MAAOlB,EAAMub,iBAAmBvb,EAAMub,iBAAmB,GACzDla,SAAU,SAACC,GACTtB,EAAMwb,qBACJxb,EAAMwb,oBAAoBla,EAAEE,OAAON,OACrC4qB,EAAa,SAIhBD,GAAmC,iBAAtBA,EAAUroB,SACtB,sBAAM5D,UAAU,eAAhB,SAAgCisB,EAAUvlB,SAG9C,sBAAK1G,UAAU,qBAAf,UACE,mDAECI,EAAMC,aACLD,EAAMC,cAAgBqW,kBAAgB8C,kBACpC,qBAAKxZ,UAAU,0DAAf,SACGI,EAAM0b,8BACL1b,EAAM0b,6BAA6B7a,KACjC,SAACc,EAAMZ,GAAP,OACE,sBAEEnB,UAAS,kCACPysB,EAAgB1qB,EAAKa,KACjB,iBACA,sBAENtC,QAAS,kBACPmsB,EAAgB1qB,EAAKa,MAliBV,SACzCA,GAEA,GAAIxC,EAAM0b,6BAA8B,CACtC,IAAI3a,EAAgBf,EAAM0b,6BAA6B8Q,WACrD,SAAC7qB,GAAD,OAAUA,EAAKa,MAAQA,KAErBiqB,EACFzsB,EAAM0b,6BACR+Q,EAAS1rB,GAAOsF,QAAUomB,EAAS1rB,GAAOsF,OAC1CrG,EAAM2b,iCACJ3b,EAAM2b,gCAAgC8Q,GACxC,IAAIC,EAAoBD,EAAS3iB,MAAK,SAACnI,GAAD,OAA0B,IAAhBA,EAAK0E,UAEnD2lB,GADEU,GAOJ1sB,EAAM4a,mBAAqB5a,EAAM4a,qBA+gBLkS,CAAmCnrB,EAAKa,MAE1CgE,MACG6lB,EAAgB1qB,EAAKa,KAElB,GADA,6BAbR,UAiBGb,EAAK0E,OACJ,cAAC,IAAD,CAAYzG,UAAU,0BAEtB,cAAC,IAAD,CAAwBA,UAAU,YAEpC,+BAAO+B,EAAK6E,UArBPzF,QA4BlBf,EAAMC,aACLD,EAAMC,cAAgBqW,kBAAgB4C,kBACpC,qBAAKtZ,UAAU,0DAAf,SACGI,EAAM6b,8BACL7b,EAAM6b,6BAA6Bhb,KACjC,SAACc,EAAMZ,GAAP,OACE,sBAEEnB,UAAS,kCACPysB,EAAgB1qB,EAAKa,KACjB,iBACA,sBAENtC,QAAS,kBACPmsB,EAAgB1qB,EAAKa,MACrB+pB,EAAmC5qB,EAAKa,MAE1CgE,MACG6lB,EAAgB1qB,EAAKa,KAElB,GADA,6BAbR,UAiBGb,EAAK0E,OACJ,cAAC,IAAD,CAAYzG,UAAU,0BAEtB,cAAC,IAAD,CAAwBA,UAAU,YAEpC,+BAAO+B,EAAK6E,UArBPzF,QA4BlBf,EAAMC,aACLD,EAAMC,cACJqW,kBAAgB6C,2BAChB,qBAAKvZ,UAAU,0DAAf,SACGI,EAAMgc,gCACLhc,EAAMgc,+BAA+Bnb,KACnC,SAACc,EAAMZ,GAAP,OACE,sBAEEnB,UAAS,kCACPysB,EAAgB1qB,EAAKa,KACjB,iBACA,sBAENtC,QAAS,kBACPmsB,EAAgB1qB,EAAKa,MACrB+pB,EAAmC5qB,EAAKa,MAE1CgE,MACG6lB,EAAgB1qB,EAAKa,KAElB,GADA,6BAbR,UAiBGb,EAAK0E,OACJ,cAAC,IAAD,CAAYzG,UAAU,0BAEtB,cAAC,IAAD,CAAwBA,UAAU,YAEpC,+BAAO+B,EAAK6E,UArBPzF,QA4BlBf,EAAMC,aACLD,EAAMC,cACJqW,kBAAgBiD,sBAChB,qBAAK3Z,UAAU,0DAAf,SACGI,EAAMmc,kCACLnc,EAAMmc,iCAAiCtb,KACrC,SAACc,EAAMZ,GAAP,OACE,sBAEEnB,UAAS,kCACPysB,EAAgB1qB,EAAKa,KACjB,iBACA,sBAENtC,QAAS,kBACPmsB,EAAgB1qB,EAAKa,MAtcN,SAC7CA,GAEA,GAAIxC,EAAMmc,iCAAkC,CAC1C,IAAIpb,EAAgBf,EAAMmc,iCAAiCqQ,WACzD,SAAC7qB,GAAD,OAAUA,EAAKa,MAAQA,KAErBiqB,EACFzsB,EAAMmc,iCACRsQ,EAAS1rB,GAAOsF,QAAUomB,EAAS1rB,GAAOsF,OAC1CrG,EAAMoc,oDACJpc,EAAMoc,mDAAmDqQ,GAC3D,IAAIC,EAAoBD,EAAS3iB,MAAK,SAACnI,GAAD,OAA0B,IAAhBA,EAAK0E,UAEnD2lB,GADEU,GAOJ1sB,EAAM4a,mBAAqB5a,EAAM4a,qBAmbLmS,CACEprB,EAAKa,MAGTgE,MACG6lB,EAAgB1qB,EAAKa,KAElB,GADA,6BAfR,UAmBGb,EAAK0E,OACJ,cAAC,IAAD,CAAYzG,UAAU,0BAEtB,cAAC,IAAD,CAAwBA,UAAU,YAEpC,+BAAO+B,EAAK6E,UAvBPzF,QA+BlBf,EAAMC,aACLD,EAAMC,cACJqW,kBAAgBmD,wBAChB,qBAAK7Z,UAAU,0DAAf,SACGI,EAAMsc,uCACLtc,EAAMsc,sCAAsCzb,KAC1C,SAACc,EAAMZ,GAAP,OACE,sBAEEnB,UAAS,kCACPysB,EAAgB1qB,EAAKa,KACjB,iBACA,sBAENtC,QAAS,kBACPmsB,EAAgB1qB,EAAKa,MACrBmqB,EACEhrB,EAAKa,MAGTgE,MACG6lB,EAAgB1qB,EAAKa,KAElB,GADA,6BAfR,UAmBGb,EAAK0E,OACJ,cAAC,IAAD,CAAYzG,UAAU,0BAEtB,cAAC,IAAD,CAAwBA,UAAU,YAEpC,+BAAO+B,EAAK6E,UAvBPzF,QA+BlBf,EAAMC,aACLD,EAAMC,cACJqW,kBAAgBoD,iCAChB,qBAAK9Z,UAAU,0DAAf,SACGI,EAAMyc,yCACLzc,EAAMyc,wCAAwC5b,KAC5C,SAACc,EAAMZ,GAAP,OACE,sBAEEnB,UAAS,kCACPysB,EAAgB1qB,EAAKa,KACjB,iBACA,sBAENtC,QAAS,kBACPmsB,EAAgB1qB,EAAKa,MACrBmqB,EACEhrB,EAAKa,MAGTgE,MACG6lB,EAAgB1qB,EAAKa,KAElB,GADA,6BAfR,UAmBGb,EAAK0E,OACJ,cAAC,IAAD,CAAYzG,UAAU,0BAEtB,cAAC,IAAD,CAAwBA,UAAU,YAEpC,+BAAO+B,EAAK6E,UAvBPzF,QA8BlB8qB,GAAmC,mBAAtBA,EAAUroB,SACtB,sBAAM5D,UAAU,eAAhB,SAAgCisB,EAAUvlB,YAIhD,sBAAK1G,UAAU,iCAAf,UACE,sBACEA,UAAS,yCACTM,QAAS,kBAluBE,SAAC8sB,GAC1B,GAAIhtB,EAAMC,aAGND,EAAMC,cAAgBqW,kBAAgB8C,kBACtCpZ,EAAM0b,6BACN,CACA,IAAI+Q,EACFzsB,EAAM0b,6BACR,IAAK,IAAMlZ,KAAOiqB,EACZJ,EAAgBI,EAASjqB,GAAKA,OAChCiqB,EAASjqB,GAAK6D,QAAU2mB,GAI5BhtB,EAAM2b,iCACJ3b,EAAM2b,gCAAgC8Q,GACxCT,GAAcgB,GAEdhtB,EAAM4a,mBAAqB5a,EAAM4a,oBAKrC,GACE5a,EAAMC,cAAgBqW,kBAAgB4C,kBACtClZ,EAAM6b,6BACN,CACA,IAAI4Q,EACFzsB,EAAM6b,6BACR,IAAK,IAAMrZ,KAAOiqB,EACZJ,EAAgBI,EAASjqB,GAAKA,OAChCiqB,EAASjqB,GAAK6D,QAAU2mB,GAI5BhtB,EAAM8b,iCACJ9b,EAAM8b,gCAAgC2Q,GACxCT,GAAcgB,GAEdhtB,EAAM4a,mBAAqB5a,EAAM4a,oBAInC,GACE5a,EAAMC,cAAgBqW,kBAAgB6C,2BACtCnZ,EAAMgc,+BACN,CACA,IAAIyQ,EACFzsB,EAAMgc,+BACR,IAAK,IAAMxZ,KAAOiqB,EACZJ,EAAgBI,EAASjqB,GAAKA,OAChCiqB,EAASjqB,GAAK6D,QAAU2mB,GAI5BhtB,EAAMic,mCACJjc,EAAMic,kCAAkCwQ,GAC1CT,GAAcgB,GAEdhtB,EAAM4a,mBAAqB5a,EAAM4a,oBAInC,GACE5a,EAAMC,cAAgBqW,kBAAgBiD,sBACtCvZ,EAAMmc,iCACN,CACA,IAAIsQ,EACFzsB,EAAMmc,iCACR,IAAK,IAAM3Z,KAAOiqB,EACZJ,EAAgBI,EAASjqB,GAAKA,OAChCiqB,EAASjqB,GAAK6D,QAAU2mB,GAI5BhtB,EAAMoc,oDACJpc,EAAMoc,mDAAmDqQ,GAC3DT,GAAcgB,GAEdhtB,EAAM4a,mBAAqB5a,EAAM4a,oBAInC,GACE5a,EAAMC,cAAgBqW,kBAAgBmD,wBACtCzZ,EAAMsc,sCACN,CACA,IAAImQ,EACFzsB,EAAMsc,sCACR,IAAK,IAAM9Z,KAAOiqB,EACZJ,EAAgBI,EAASjqB,GAAKA,OAChCiqB,EAASjqB,GAAK6D,QAAU2mB,GAI5BhtB,EAAMuc,0CACJvc,EAAMuc,yCAAyCkQ,GACjDT,GAAcgB,GAEdhtB,EAAM4a,mBAAqB5a,EAAM4a,oBAInC,GACE5a,EAAMC,cAAgBqW,kBAAgBoD,iCACtC1Z,EAAMyc,wCACN,CACA,IAAIgQ,EACFzsB,EAAMyc,wCACR,IAAK,IAAMja,KAAOiqB,EACZJ,EAAgBI,EAASjqB,GAAKA,OAChCiqB,EAASjqB,GAAK6D,QAAU2mB,GAI5BhtB,EAAM0c,4CACJ1c,EAAM0c,2CAA2C+P,GACnDT,GAAcgB,GAEdhtB,EAAM4a,mBAAqB5a,EAAM4a,qBA0mBNqS,CAAmBlB,IAFpC,UAIGA,EACC,cAAC,IAAD,CAAYnsB,UAAU,0BAEtB,cAAC,IAAD,CAAwBA,UAAU,YAEpC,iDAGDgtB,IAAkBvmB,QACjB,cAAC,IAAD,CACEgd,SAAUuJ,IAAkB7nB,KAC5Bue,SAAUtjB,EAAMub,iBAChBgI,QAAQ,qBAUrBvjB,EAAMkb,WAAaC,EAAc8B,aAChCjd,EAAMqb,YACNrb,EAAMkd,aACJ,cAAC,IAAD,CACE1W,MACE,sBAAK5G,UAAU,mCAAf,UACE,cAAC,IAAD,CAAgBA,UAAU,2BAC1B,qBAAKA,UAAU,gBAAf,SACE,sBAAMA,UAAU,kCAAhB,8BAMNuM,UAAU,EACV1F,MAAO2F,IAAOC,QACdC,MAAO,kBAAMtM,EAAMsb,kBAAiB,IACpC/O,eAAe,EACfC,eAAgBC,IAAUC,WAC1BC,cAAc,EACdC,QAAS,CAAEpG,OAAO,GAjBpB,SAmBE,sBAAK5G,UAAU,YAAf,UACE,qBAAKA,UAAU,cAAf,SACE,uBACEyB,SAAU,SAACC,GAAD,OAAO+R,EAAe/R,EAAEE,OAAON,QACzCuG,KAAK,OACLvG,MAAOkS,EACPpG,YAAY,YACZpN,UAAU,2DACVwB,SAAUpB,EAAMkd,YAAY3c,QAAU,MAG1C,sBACEL,QAAS,WACPF,EAAM4rB,kBAAkB,MACxB5rB,EAAMsb,kBAAiB,IAEzB1b,UAAS,uIACY,OAAnBI,EAAMod,SACF,6BACA,4BARR,UAWE,gCACE,sBAAKxd,UAAU,6BAAf,mBACQ,sBAAMA,UAAU,gBAAhB,kBAER,qBAAKA,UAAU,oBAAf,0BAEF,qBAAKA,UAAU,0DAAf,uBAID6S,YAAezS,EAAMkd,YAAa9J,GAAavS,KAAI,SAACc,EAAMyS,GAAP,OAClD,sBACElU,QAAS,WACPF,EAAM4rB,kBAAkBjqB,GACxB3B,EAAMsb,kBAAiB,IAGzB1b,UAAS,uIACPI,EAAMod,UACNpd,EAAMod,SAASxL,YAAcjQ,EAAKiQ,UAC9B,6BACA,4BAVR,UAaE,gCACE,sBAAKhS,UAAU,6BAAf,kBACQ,IACN,sBAAMA,UAAU,gBAAhB,SAAiC+B,EAAKsQ,iBAExC,qBAAKrS,UAAU,oBAAf,SAAoC+B,EAAKqQ,iBAE3C,qBAAKpS,UAAU,0DAAf,sBAfKwU,EAAI,WA0BpBpU,EAAMkb,WAAaC,EAAcyB,iBAAmB5c,EAAMqb,YACzD,cAAC,IAAD,CACE7U,MACE,sBAAK5G,UAAU,mCAAf,UACE,cAAC,IAAD,CAAgBA,UAAU,2BAC1B,qBAAKA,UAAU,gBAAf,SACE,sBAAMA,UAAU,kCAAhB,kCAMNuM,UAAU,EACV1F,MAAO2F,IAAOC,QACdC,MAAO,kBACJkT,YAAgB3C,IAAe7c,EAAMsb,kBAAiB,IAEzD/O,eAAe,EACfC,eAAgBC,IAAUogB,OAC1BlgB,cAAc,EACdC,QAAS,CAAEpG,OAAO,GAnBpB,SAqBE,qBAAK5G,UAAU,aAAf,SACGqsB,EACC,cAAC,IAAD,IAEA,0BAASrsB,UAAU,aAAnB,UAEE,uBAAOA,UAAU,sEAAjB,sBAGCI,EAAMsrB,UAAU/qB,OAAS,EACxB,sBAAKX,UAAU,GAAf,UACE,yBACEA,UAAS,6EACP2V,GAA2B,aAAlBA,EAAM/R,QACX,sCACA,yCAENtC,MAAO2b,EACPxb,SAAU,SAACC,GACT8qB,EAAc9qB,EAAEE,OAAON,OA/mBtB,SAACwV,GAEtB,GADAyV,EAAS,MACW,QAAhBzV,GAEE1W,EAAMC,aACND,EAAMC,cACJqW,kBAAgBoD,iCACjB1Z,EAAMktB,uBAC0B,IAA/BltB,EAAMktB,uBACVltB,EAAMga,qBAENha,EAAMga,oBAAoB,MAC1Bha,EAAMsb,kBAAiB,IAEvB6Q,EAAS,CAAE3oB,QAAS,WAAY8C,IAAK,8BAGvC,GAAItG,EAAMga,oBAAqB,CAC7B,IAAI8I,EAAeqK,YAAiBntB,EAAMsrB,WAAWxhB,MACnD,SAACnI,GAAD,OAAUA,EAAK+U,cAAgBA,KAEjC,IAAKoM,EACH,OAAOqJ,EAAS,CAAE3oB,QAAS,WAAY8C,IAAK,wBAE5CtG,EAAMga,oBAAoB,CACxBtD,YAAaoM,EAAapM,YAC1BgE,cAAeoI,EAAapI,gBAE9B1a,EAAMsb,kBAAiB,IAolBT8R,CAAe9rB,EAAEE,OAAON,QAT5B,UAYE,wBAAQA,MAAM,MAAd,6BACCmqB,EACC8B,YAAiBntB,EAAMsrB,YACvBzqB,KAAI,SAACc,EAAMZ,GAAP,OACJ,wBAEEG,MAAOS,EAAK+U,YAFd,SAIG/U,EAAK+Y,eAHD3Z,EAAQY,EAAK+U,mBAOvBnB,GAA2B,aAAlBA,EAAM/R,SACd,mBAAG5D,UAAU,mCAAb,SACG2V,EAAMjP,SAKb,qBAAK1G,UAAU,aAAf,8C,6HCvlCNytB,E,mOCpBNC,EAAoC,SAACttB,GACzC,MAAsCmT,mBAAiB,IAAvD,mBAAOC,EAAP,KAAoBC,EAApB,KACA,OACE,0BAASzT,UAAU,mCAAnB,UAEE,sBAAKA,UAAU,gCAAf,UACE,cAAC,KAAD,CAAUA,UAAU,0BACpB,uBACE6H,KAAK,OACLuF,YAAY,SACZpN,UAAU,qFACVyB,SAAU,SAACC,GAAD,OAAO+R,EAAe/R,EAAEE,OAAON,QACzCA,MAAOkS,EACPhS,WAAUpB,EAAMutB,SAAShtB,OAAS,KAEpC,wBACEX,UAAU,4EACV6H,KAAK,SACLvH,QAAS,WACPF,EAAMwtB,eAAc,IAJxB,sBAYF,qBAAK5tB,UAAU,4DAAf,SACGqN,YAAOjN,EAAMutB,SAAUna,GAAa7S,OAAS,EAC5C0M,YAAOjN,EAAMutB,SAAUna,GAAavS,KAAI,SAAC4sB,EAAM1sB,GAAP,OACtC,kCACE,sBAAKnB,UAAU,iEAAf,UACE,qBACEA,UAAU,iCACVM,QAAS,WACPF,EAAMwtB,eAAc,IACnBxtB,EAAM0tB,gBACL1tB,EAAM2tB,iBAAiBF,EAAKG,sBALlC,SAQE,mBAAGhuB,UAAU,iCAAb,SACGyU,YAAsBoZ,EAAKA,UAGhC,wBACEhmB,KAAK,SACL7H,UAAU,6GAFZ,wBAdUmB,EAAQ0sB,EAAKA,SAwB7B,qBAAK7tB,UAAU,kBAAf,SACE,mBAAGA,UAAU,mCAAb,uCAUGC,MAAMC,KAAKwtB,GC7DpB3e,EAAG,UAAMC,IAAIC,KAAV,qBAgCHgf,E,kDACJ,WAAY7tB,GAAkB,IAAD,8BAC3B,cAAMA,IAkBR8tB,UAAY,SAAC5sB,GACX,EAAKuE,SAAS,CAAEsoB,OAAQ7sB,KApBG,EAuB7B8sB,gBAAkB,SAAC9sB,GACjB,EAAKuE,SAAS,CAAEwoB,aAAc/sB,KAxBH,EA2B7BgtB,cAAgB,SAAChtB,GACf,EAAKuE,SAAS,CAAE0oB,WAAYjtB,KA5BD,EA+B7BkrB,cAAgB,SAAClrB,GACf,EAAKuE,SAAS,CAAEoX,WAAY3b,KAhCD,EAmC7BktB,YAAc,SAACltB,GACb,EAAKuE,SAAS,CAAE4oB,SAAUntB,KApCC,EAuC7BotB,UAAY,SAACptB,GACX,EAAKuE,SAAS,CAAE8oB,OAAQrtB,KAxCG,EA2C7BstB,eAAiB,SAACttB,GAChB,EAAKuE,SAAS,CAAEgpB,YAAavtB,KA5CF,EA+C7BsE,WAAa,SAACtE,GACZ,EAAKuE,SAAS,CAAEhF,QAASS,KAhDE,EAmD7BwtB,eAAiB,SAACxtB,GAChB,EAAKuE,SAAS,CAAEkpB,YAAaztB,KApDF,EAuD7B4qB,aAAe,SACb5qB,GAKA,EAAKuE,SAAS,CAAEomB,UAAW3qB,KA7DA,EA+D7B0tB,kBAAoB,SAAC1tB,GACnB,EAAKuE,SAAS,CAAEopB,eAAgB3tB,KAhEL,EAkE7BssB,cAAgB,SAACtsB,GACf,EAAKuE,SAAS,CAAEqpB,WAAY5tB,KAnED,EAsE7B6tB,gBAAkB,SAChBC,EACAvB,GAGA,IAAIwB,EACAC,EACAzB,EAAK0B,mBAAqB,EAAKnvB,MAAMovB,WACvCF,EAAgB,EAAKG,iBAAiB,EAAKrvB,MAAMovB,UAAUtlB,MACzD,SAACnI,GAAD,OAAUA,EAAKC,MAAQotB,EAAgBtY,iBAExB,EAAKwX,cAAcgB,EAAcI,aAClDJ,GAAiB,EAAK9C,cAAc4C,EAAgBtY,aACpD,EAAK8X,gBAAe,IACXf,EAAK8B,eAAiB,EAAKvvB,MAAMovB,WAG1CH,EAAgB9B,EAAiB,EAAKntB,MAAMovB,UAAUtlB,MACpD,SAACnI,GAAD,OAAUA,EAAK6tB,UAAYR,EAAgBQ,aAE5B,EAAKtB,cAAce,EAAcK,aAClDL,GAAiB,EAAK7C,cAAc6C,EAAcvY,aAClDuY,GAAiB,EAAKb,YAAYa,EAAcQ,WAChD,EAAKnB,UAAUU,EAAeQ,SAC9B,EAAKhB,gBAAe,IAEpB,EAAKA,gBAAe,IAhGK,EAoG7BvoB,kBAAoB,WAClB,GAAI,EAAKjG,MAAMutB,SAAShtB,OAAQ,CAC9B,GAAI,EAAKP,MAAM0vB,SAASV,gBAAkB,EAAKhoB,MAAMynB,YAAa,CAEhE,IAAK,EAAKznB,MAAM+mB,OAAOxtB,OAAQ,CAC7B,IAAIoJ,EAAS,EAAK3J,MAAMutB,SAASzjB,MAC/B,SAAC2jB,GAAD,OACEA,EAAKG,sBACL,EAAK5tB,MAAM0vB,SAASV,eAAgBpB,uBAEpCjkB,IACF,EAAKmkB,UACH,EAAK9tB,MAAM0vB,SAASV,eAAepB,qBAErC,EAAKI,gBAAgBrkB,GACrB,EAAKolB,gBAAgB,EAAK/uB,MAAM0vB,SAASV,eAAgBrlB,IAI7D0F,QAAQC,IAAI,wCACZD,QAAQC,IAAI,CAAEqgB,MAAO,EAAK3vB,MAAM0vB,SAASV,iBACzC3f,QAAQC,IAAI,wCAGV,EAAKtI,MAAMinB,cAAgB,EAAKjuB,MAAM0vB,SAASV,gBACjD,EAAKD,gBACH,EAAK/uB,MAAM0vB,SAASV,eACpB,EAAKhoB,MAAMinB,cAIf,EAAKzoB,YAAW,KAnIS,EAuI7BmoB,iBAAmB,SACjBiC,GAEI,IADJC,EACG,uDAD0B,SAE7B,GAAI,EAAK7vB,MAAMutB,SAAU,CACvB,IAAI5jB,EAAS,EAAK3J,MAAMutB,SAASzjB,MAC/B,SAAC2jB,GAAD,OAAUA,EAAKG,sBAAwBgC,KAErCjmB,IACF,EAAKmkB,UAAU8B,GACf,EAAK5B,gBAAgBrkB,GACrB,EAAK3C,MAAM6kB,WACwB,YAAjC,EAAK7kB,MAAM6kB,UAAUroB,SACrB,EAAKsoB,aAAa,MAEP,WAAT+D,IACF,EAAK3B,cAAc,IACnB,EAAK9B,cAAc,IACnB,EAAKgC,YAAY,IACjB,EAAKE,UAAU,IACf,EAAKI,eAAe,QA3JC,EAiK7BoB,UAAY,WAQV,OANE,EAAK9oB,MAAM+mB,OAAOxtB,OAAS,GACC,OAA5B,EAAKyG,MAAMinB,cACX,EAAKjuB,MAAMutB,UAEX,EAAKI,iBAAiB,EAAK3mB,MAAM+mB,OAAQ,WAEvC,EAAK/mB,MAAMinB,aACN,EAAKjnB,MAAMinB,aAAa8B,OAAOlvB,KAAI,SAACkvB,EAAQ3b,GAAT,OACxC,qBAEExU,UAAS,uDAFX,UAIE,oBAAIA,UAAU,YAAd,SACE,uBAAOA,UAAU,2BAAjB,SACE,sBAAMA,UAAU,8DAAhB,SACGmwB,EAAO9f,WAId,6BACE,sBACErQ,UAAS,2CACPmwB,EAAO7f,UAAU8f,OAAS,iBAAmB,gBAFjD,UAKGD,EAAO7f,UAAU8f,OAChB,cAAC,IAAD,IAEA,cAAC,IAAD,IAEDD,EAAO7f,UAAU8f,OAAS,OAAS,UAGxC,6BACE,sBACEpwB,UAAS,2CACPmwB,EAAO7f,UAAU+f,KAAO,iBAAmB,gBAF/C,UAKGF,EAAO7f,UAAU+f,KAAO,cAAC,IAAD,IAAqB,cAAC,IAAD,IAC7CF,EAAO7f,UAAU+f,KAAO,OAAS,UAGtC,6BACE,sBACErwB,UAAS,2CACPmwB,EAAO7f,UAAUggB,OAAS,iBAAmB,gBAFjD,UAKGH,EAAO7f,UAAUggB,OAChB,cAAC,IAAD,IAEA,cAAC,IAAD,IAEDH,EAAO7f,UAAUggB,OAAS,OAAS,UAGxC,6BACE,sBACEtwB,UAAS,2CACPmwB,EAAO7f,UAAUigB,OAAS,iBAAmB,gBAFjD,UAKGJ,EAAO7f,UAAUigB,OAChB,cAAC,IAAD,IAEA,cAAC,IAAD,IAEDJ,EAAO7f,UAAUigB,OAAS,OAAS,YA3DnC/b,EAAI2b,EAAO/f,GAAKogB,KAAKC,aAiEhB,CACd,6BACE,oBAAInc,QAAS,EAAGtU,UAAU,wBAA1B,wDADM,UA9OiB,EAuP7B0wB,iBAvP6B,uCAuPV,WAAOhvB,GAAP,iBAAAyK,EAAA,yDACjBzK,EAAEivB,iBACGC,OAAOC,QAAP,0CAFY,0CAGR,GAHQ,UAMZ,EAAKzpB,MAAMinB,aANC,yCAOR,EAAKnC,aAAa,CACvBtoB,QAAS,UACT8C,IAAK,4BATQ,WAc2B,IAA1C,EAAKU,MAAMinB,aAAasB,gBACxB/P,YAAgB,EAAKxY,MAAMmnB,YAfZ,yCAiBR,EAAKrC,aAAa,CACvBtoB,QAAS,cACT8C,IAAK,2BAnBQ,WAwB4C,IAA3D,EAAKU,MAAMinB,aAAayC,iCACxBlR,YAAgB,EAAKxY,MAAM2nB,aAzBZ,yCA2BR,EAAK7C,aAAa,CACvBtoB,QAAS,eACT8C,IAAK,yCA7BQ,WAkC4B,IAA1C,EAAKU,MAAMinB,aAAasB,gBACuB,IAA9C,EAAKvoB,MAAMinB,aAAakB,oBAC1B3P,YAAgB,EAAKxY,MAAM6V,YApCZ,0CAsCR,EAAKiP,aAAa,CACvBtoB,QAAS,cACT8C,IAAK,2BAxCQ,YA6C2B,IAA1C,EAAKU,MAAMinB,aAAasB,gBACxB/P,YAAgB,EAAKxY,MAAMqnB,UA9CZ,0CAgDR,EAAKvC,aAAa,CACvBtoB,QAAS,YACT8C,IAAK,yBAlDQ,YAuD2B,IAA1C,EAAKU,MAAMinB,aAAasB,gBACxB/P,YAAgB,EAAKxY,MAAMunB,QAxDZ,0CA0DR,EAAKzC,aAAa,CACvBtoB,QAAS,UACT8C,IAAK,uBA5DQ,eA+DjB,EAAKsoB,mBAAkB,GACnB+B,EAA4C,CAC9Cjb,QAAS,EAAK1V,MAAM0vB,SAASha,QAC7B3Q,KAAM,CACJ6oB,oBAAqB,EAAK5mB,MAAM+mB,OAChC1nB,OAAQ,EACRonB,KAAM,EAAKzmB,MAAMinB,aAAaR,KAC9BsC,OAAQ,EAAK/oB,MAAMinB,aAAa8B,OAChCa,UAAW,GACXla,YAAa,GACb8Y,QAAS,EAAKxoB,MAAMinB,aAAasB,cAAgB,EAAKvoB,MAAMunB,OAAS,GACrEznB,yBAA0B,EAAKE,MAAMinB,aAClCyC,+BACC,EAAK1pB,MAAM2nB,YACX,KA7ES,oBAkFGzf,IAAM2hB,KAAN,UAAcliB,EAAd,kBAAmC,CACnD+G,QAAS,EAAK1V,MAAM0vB,SAASha,QAC7BkY,oBAAqB,EAAK5mB,MAAM+mB,OAChC1nB,OAAQ,EACRonB,KAAM,EAAKzmB,MAAMinB,aAAaR,KAC9BsC,QAAQ,EACRa,UAAW,GACXla,aACgD,IAA9C,EAAK1P,MAAMinB,aAAakB,kBACpB,EAAKnoB,MAAM6V,WACX,GACN2S,SAC4C,IAA1C,EAAKxoB,MAAMinB,aAAasB,cACpB,EAAKvoB,MAAMunB,OACX,GACNznB,yBAA0B,EAAKE,MAAMinB,aAClCyC,+BACC,EAAK1pB,MAAM2nB,YACX,KApGS,SAkFTvf,EAlFS,UAuGbC,QAAQC,IAAI,wCACZD,QAAQC,IAAI,CAAEghB,iBAAkBlhB,IAChCC,QAAQC,IAAI,wCACZ,EAAKtP,MAAM8V,uBAAuB6a,EAAU,EAAK3wB,MAAM8wB,aACvD,EAAKlC,mBAAkB,GACvB,EAAK5uB,MAAM+wB,eAAc,GACzB,EAAK/wB,MAAMuG,eAAe,CACxBC,MAAO,gDACPC,MAAOC,IAAgBsqB,WA/GZ,mDAmHf3hB,QAAQC,IAAI,CAAE2hB,WAAW,EAAD,KACxB,EAAKjxB,MAAMuG,eAAe,CACxBC,MAAOmJ,YAAY,EAAD,IAClBlJ,MAAOC,IAAgBC,SAtHV,2DAvPU,wDAkX7B0oB,iBAAmB,SACjB6B,EACA5B,GAEA,IAAI/sB,EAAgB,GAClBoH,EAA8B,GAEhC,GAAI2lB,EACF3lB,EAASunB,EAASpnB,MAAK,SAACnI,GAAD,OAAUA,EAAKC,MAAQ0tB,MAC1C4B,EAASpnB,MAAK,SAACnI,GAAD,OAAUA,EAAKC,MAAQ0tB,KAAc6B,UACjDD,EAASpnB,MAAK,SAACnI,GAAD,OAAUA,EAAKC,MAAQ0tB,KAAc6B,UAErD,QAEJ,IAAK,IAAM3uB,KAAO0uB,EAChB,GAAIzuB,OAAOC,UAAUC,eAAeC,KAAKsuB,EAAU1uB,GACjD,IAAK,IAAM4uB,KAAeF,EAAS1uB,GAAK2uB,UAEpC1uB,OAAOC,UAAUC,eAAeC,KAC9BsuB,EAAS1uB,GAAK2uB,UACdC,KAGG7uB,EAAIM,SAASquB,EAAS1uB,GAAK2uB,UAAUC,GAAaxvB,OACrDW,EAAIQ,KAAKmuB,EAAS1uB,GAAK2uB,UAAUC,GAAaxvB,KAC9C+H,EAAO5G,KAAKmuB,EAAS1uB,GAAK2uB,UAAUC,MAQhD,OAAOznB,GAnZoB,EAsZ7B0nB,eAAiB,SACfC,EACA5a,GAEA,IAAInU,EAAgB,GAClBoH,EAAuC,GAWzC,OATAwjB,EAAiBmE,GAAOluB,SAAQ,SAACI,GAE5BjB,EAAIM,SAASW,EAAQisB,YACtBjsB,EAAQkT,cAAgBA,IAExBnU,EAAIQ,KAAKS,EAAQisB,WACjB9lB,EAAO5G,KAAKS,OAGTmG,GAtaoB,EAya7B4nB,aAAe,SACbD,EACA7B,GAEA,IAAIltB,EAAgB,GAClBoH,EAAuC,GAQzC,OANAwjB,EAAiBmE,GAAOluB,SAAQ,SAACI,GAC1BjB,EAAIM,SAASW,EAAQgsB,UAAYhsB,EAAQisB,YAAcA,IAC1DltB,EAAIQ,KAAKS,EAAQgsB,SACjB7lB,EAAO5G,KAAKS,OAGTmG,GAnbP,EAAK3C,MAAQ,CACXvG,SAAS,EACTguB,aAAa,EACbI,gBAAgB,EAChBd,OAAQ,GACRI,WAAY,GACZtR,WAAY,GACZ0R,OAAQ,GACRI,YAAa,GACbN,SAAU,GACVJ,aAAc,KACdpC,UAAW,KACXiD,YAAY,GAfa,E,0CAyb7B,WAAU,IAAD,SACP,OACyB,IAAvB9kB,KAAKhD,MAAMvG,SACXuJ,KAAKhD,MAAMynB,aAC4B,OAAvCzkB,KAAKhK,MAAM0vB,SAASV,gBACS,IAA7BhlB,KAAKhD,MAAM+mB,OAAOxtB,QACU,OAA5ByJ,KAAKhD,MAAMinB,aAGT,qBAAKruB,UAAU,kEAAf,wBAOF,sBAAKA,UAAU,kEAAf,UAEE,qBAAKA,UAAU,4DAAf,SACE,sBAAKA,UAAU,wDAAf,UACE,oBAAIA,UAAU,4CAAd,8BAGCoK,KAAKhD,MAAMynB,YACV,cAACpX,EAAA,EAAD,IAEA,sBAAMma,SAAU,SAAClwB,GAAD,OAAO,EAAKgvB,iBAAiBhvB,IAA7C,SACE,sBAAK1B,UAAU,YAAf,UACE,sBAAKA,UAAU,YAAf,UACE,uBAAOA,UAAU,kDAAjB,wBAIEoK,KAAKhD,MAAM8nB,YACX,qBACElvB,UAAS,oIACPoK,KAAKhD,MAAM6kB,WACsB,YAAjC7hB,KAAKhD,MAAM6kB,UAAUroB,QACjB,iBACA,mBAENtD,QAAS,YACN,EAAK8G,MAAM6nB,gBACV,EAAKrB,eAAc,IACpB,EAAKxmB,MAAM6nB,gBAAkB,EAAK/C,aAAa,OAVpD,SAaG9hB,KAAKhD,MAAMinB,aACRjkB,KAAKhD,MAAMinB,aAAaR,KACxB,gBAIPzjB,KAAKhD,MAAM8nB,YACV,cAAC,EAAD,CACEtB,cAAexjB,KAAKwjB,cACpBG,iBAAkB3jB,KAAK2jB,iBACvBJ,SAAUvjB,KAAKhK,MAAMutB,SACrBG,eAAgB1jB,KAAKhD,MAAM6nB,iBAI9B7kB,KAAKhD,MAAM6kB,WACuB,YAAjC7hB,KAAKhD,MAAM6kB,UAAUroB,SACnB,sBAAM5D,UAAU,eAAhB,SACGoK,KAAKhD,MAAM6kB,UAAUvlB,SAK7B0D,KAAKhD,MAAMinB,cACVjkB,KAAKhD,MAAMinB,aAAayC,gCACtB,sBAAK9wB,UAAU,YAAf,UACE,uBAAOA,UAAU,uDAAjB,uBAGA,yBACEA,UAAS,qIACPoK,KAAKhD,MAAM6kB,WACsB,iBAAjC7hB,KAAKhD,MAAM6kB,UAAUroB,QACjB,iBACA,mBAENnC,SAAU,SAACC,GACT,EAAKotB,eAAeptB,EAAEE,OAAON,OAC7B,EAAKgtB,cAAc,IACnB,EAAK9B,cAAc,IACnB,EAAKgC,YAAY,IACjB,EAAKE,UAAU,IACf,EAAKtnB,MAAM6kB,WACwB,iBAAjC,EAAK7kB,MAAM6kB,UAAUroB,SACrB,EAAKsoB,aAAa,OAEtB1qB,SAAU4I,KAAKhD,MAAM6nB,eACrB3tB,MAAO8I,KAAKhD,MAAM2nB,YAlBpB,UAoBE,wBAAQztB,MAAM,GAAd,8BACC8I,KAAKhK,MAAMkG,aAAa5F,sBACzB0J,KAAKhK,MAAMkG,aAAa5F,qBAAqBC,OAC3C,EACAyJ,KAAKhK,MAAMkG,aAAa5F,qBAAqBO,KAC3C,SAAC6I,GAAD,OACE,wBACExI,MAAOwI,EAAU1I,uBADnB,SAOG0I,EAAUzI,0BAJTyI,EAAU1I,uBACVovB,KAAKC,aAQb,wBAAQnvB,MAAM,GAAGE,UAAQ,EAAzB,uCAKH4I,KAAKhD,MAAM6kB,WACuB,iBAAjC7hB,KAAKhD,MAAM6kB,UAAUroB,SACnB,sBAAM5D,UAAU,eAAhB,SACGoK,KAAKhD,MAAM6kB,UAAUvlB,SAMjC0D,KAAKhD,MAAMinB,cACVjkB,KAAKhD,MAAMinB,aAAasB,eACtB,sBAAK3vB,UAAU,YAAf,UACE,uBAAOA,UAAU,uDAAjB,sBAGA,yBACEA,UAAS,qIACPoK,KAAKhD,MAAM6kB,WACsB,gBAAjC7hB,KAAKhD,MAAM6kB,UAAUroB,QACjB,iBACA,mBAENnC,SAAU,SAACC,GACT,EAAK4sB,cAAc5sB,EAAEE,OAAON,OAC5B,EAAK8F,MAAM6kB,WACwB,gBAAjC,EAAK7kB,MAAM6kB,UAAUroB,SACrB,EAAKsoB,aAAa,MACpB,EAAKM,cAAc,IACnB,EAAKgC,YAAY,IACjB,EAAKE,UAAU,KAEjBptB,MAAO8I,KAAKhD,MAAMmnB,WAClB/sB,SAAU4I,KAAKhD,MAAM6nB,eAjBvB,UAmBE,wBAAQ3tB,MAAM,GAAd,6BACC8I,KAAKhK,MAAMovB,UACVplB,KAAKhK,MAAMovB,SAASvuB,KAAI,SAAC4wB,GAAD,OACtB,wBAEEvwB,MAAOuwB,EAAS7vB,IAFlB,SAIG6vB,EAASC,eAHLD,EAAS7vB,IAAMwuB,KAAKC,gBAOhCrmB,KAAKhD,MAAM6kB,WACuB,gBAAjC7hB,KAAKhD,MAAM6kB,UAAUroB,SACnB,sBAAM5D,UAAU,eAAhB,SACGoK,KAAKhD,MAAM6kB,UAAUvlB,SAKjC0D,KAAKhD,MAAMinB,eACTjkB,KAAKhD,MAAMinB,aAAakB,mBACvBnlB,KAAKhD,MAAMinB,aAAasB,gBACxB,sBAAK3vB,UAAU,YAAf,UACE,uBAAOA,UAAU,uDAAjB,sBAGA,yBACEA,UAAS,qIACPoK,KAAKhD,MAAM6kB,WACsB,gBAAjC7hB,KAAKhD,MAAM6kB,UAAUroB,QACjB,iBACA,mBAENnC,SAAU,SAACC,GACT,EAAK8qB,cAAc9qB,EAAEE,OAAON,OAC5B,EAAK8F,MAAM6kB,WACwB,gBAAjC,EAAK7kB,MAAM6kB,UAAUroB,SACrB,EAAKsoB,aAAa,MACpB,EAAKsC,YAAY,IACjB,EAAKE,UAAU,KAEjBptB,MAAO8I,KAAKhD,MAAM6V,WAClBzb,SAAU4I,KAAKhD,MAAM6nB,eAhBvB,UAkBE,wBAAQ3tB,MAAM,GAAd,6BACC8I,KAAKhK,MAAMovB,UACZplB,KAAKqlB,iBACHrlB,KAAKhK,MAAMovB,SACV5P,YAAgBxV,KAAKhD,MAAMmnB,iBAExBvb,EADA5I,KAAKhD,MAAMmnB,YAEf5tB,OAAS,EACTyJ,KAAKqlB,iBACHrlB,KAAKhK,MAAMovB,SACV5P,YAAgBxV,KAAKhD,MAAMmnB,iBAExBvb,EADA5I,KAAKhD,MAAMmnB,YAEfttB,KAAI,SAAC8wB,GAAD,OACJ,wBAEEzwB,MAAOywB,EAAS/vB,IAFlB,SAIG+vB,EAASjX,eAHLiX,EAAS/vB,IAAMwuB,KAAKC,aAO7B,wBAAQnvB,MAAM,GAAGE,UAAQ,EAAzB,kCAKH4I,KAAKhD,MAAM6kB,WACuB,gBAAjC7hB,KAAKhD,MAAM6kB,UAAUroB,SACnB,sBAAM5D,UAAU,eAAhB,SACGoK,KAAKhD,MAAM6kB,UAAUvlB,SAMjC0D,KAAKhD,MAAMinB,cACVjkB,KAAKhD,MAAMinB,aAAasB,eACtB,sBAAK3vB,UAAU,YAAf,UACE,uBAAOA,UAAU,uDAAjB,oBAGA,yBACEA,UAAS,qIACPoK,KAAKhD,MAAM6kB,WACsB,cAAjC7hB,KAAKhD,MAAM6kB,UAAUroB,QACjB,iBACA,mBAENnC,SAAU,SAACC,GACT,EAAK8sB,YAAY9sB,EAAEE,OAAON,OAC1B,EAAK8F,MAAM6kB,WACwB,cAAjC,EAAK7kB,MAAM6kB,UAAUroB,SACrB,EAAKsoB,aAAa,MACpB,EAAKwC,UAAU,KAEjBltB,SAAU4I,KAAKhD,MAAM6nB,eACrB3tB,MAAO8I,KAAKhD,MAAMqnB,SAfpB,UAiBE,wBAAQntB,MAAM,GAAd,2BACC8I,KAAKhD,MAAM6V,YACZ7S,KAAKhD,MAAM6V,WAAWtc,OAAS,GAC/ByJ,KAAKhK,MAAMovB,UACXplB,KAAKqnB,eACHrnB,KAAKhK,MAAMovB,SACXplB,KAAKhD,MAAM6V,YACXtc,OAAS,EACTyJ,KAAKqnB,eACHrnB,KAAKhK,MAAMovB,SACXplB,KAAKhD,MAAM6V,YACXhc,KAAI,SAAC+wB,EAAQ7wB,GAAT,OACJ,wBACEG,MAAO0wB,EAAOnC,UADhB,SAIGmC,EAAOC,aAFHD,EAAOnC,UAAY1uB,EAAQqvB,KAAKC,aAMzC,wBAAQnvB,MAAM,GAAGE,UAAQ,EAAzB,gCAKH4I,KAAKhD,MAAM6kB,WACuB,cAAjC7hB,KAAKhD,MAAM6kB,UAAUroB,SACnB,sBAAM5D,UAAU,eAAhB,SACGoK,KAAKhD,MAAM6kB,UAAUvlB,SAMjC0D,KAAKhD,MAAMinB,cACVjkB,KAAKhD,MAAMinB,aAAasB,eACtB,sBAAK3vB,UAAU,YAAf,UACE,uBAAOA,UAAU,uDAAjB,kBAGA,yBACEA,UAAS,qIACPoK,KAAKhD,MAAM6kB,WACsB,YAAjC7hB,KAAKhD,MAAM6kB,UAAUroB,QACjB,iBACA,mBAENnC,SAAU,SAACC,GACT,EAAKgtB,UAAUhtB,EAAEE,OAAON,OACxB,EAAK8F,MAAM6kB,WACwB,YAAjC,EAAK7kB,MAAM6kB,UAAUroB,SACrB,EAAKsoB,aAAa,OAEtB1qB,SAAU4I,KAAKhD,MAAM6nB,eACrB3tB,MAAO8I,KAAKhD,MAAMunB,OAdpB,UAgBE,wBAAQrtB,MAAM,GAAd,0BACEse,YAAgBxV,KAAKhD,MAAMqnB,WAC7BrkB,KAAKhK,MAAMovB,UACXplB,KAAKunB,aACHvnB,KAAKhK,MAAMovB,SACXplB,KAAKhD,MAAMqnB,UACX9tB,OAAS,EACTyJ,KAAKunB,aACHvnB,KAAKhK,MAAMovB,SACXplB,KAAKhD,MAAMqnB,UACXxtB,KAAI,SAACixB,EAAM/wB,GAAP,OACJ,wBACEG,MAAO4wB,EAAKtC,QAEZ5vB,UAAS,UACY,MAAnBkyB,EAAKC,UAAoB,SAAW,SAJxC,SAOGD,EAAKC,WALDD,EAAKtC,QAAUzuB,EAAQqvB,KAAKC,aASrC,wBAAQnvB,MAAM,GAAGE,UAAQ,EAAzB,8BAKH4I,KAAKhD,MAAM6kB,WACuB,YAAjC7hB,KAAKhD,MAAM6kB,UAAUroB,SACnB,sBAAM5D,UAAU,eAAhB,SACGoK,KAAKhD,MAAM6kB,UAAUvlB,SAMlC,sBAAK1G,UAAU,+CAAf,UACE,wBACEA,UAAU,kDACVM,QAAS,WACP,EAAKF,MAAM+wB,eAAc,GACzB,EAAKjF,aAAa,MAClB,EAAKoC,cAAc,IACnB,EAAK9B,cAAc,IACnB,EAAKgC,YAAY,IACjB,EAAKE,UAAU,KAEjBltB,SAAU4I,KAAKhD,MAAM6nB,eAVvB,kBAcA,wBACEjvB,UAAU,kCAEVwB,SAAU4I,KAAKhD,MAAM6nB,eAHvB,SAKG7kB,KAAKhD,MAAM6nB,eAAiB,aAAe,6BAa1D,sBAAKjvB,UAAU,2FAAf,UACE,qBAAKA,UAAU,OAAf,SACE,uBAAMA,UAAU,uCAAhB,oBACGoK,KAAKhD,MAAMinB,oBADd,aACG,EAAyBR,KAD5B,0BAIAzjB,KAAKhD,MAAMvG,SACX,qBAAKb,UAAU,yBAAf,SACE,cAACoyB,EAAA,EAAD,CACEC,QAAS,CACP,CACEC,YAAa,cACbC,UAAW,OACXvlB,QAAS,OAEX,CAAEslB,YAAa,SAAUC,UAAW,QACpC,CAAED,YAAa,OAAQC,UAAW,QAClC,CAAED,YAAa,SAAUC,UAAW,QACpC,CAAED,YAAa,SAAUC,UAAW,SAEtCC,KAAMpoB,KAAK8lB,UACXuC,YAAY,EACZplB,QAAQ,EACRqlB,SAAS,aACTC,QAAQ,OACRC,QAAQ,8B,GAh1BDllB,aAm2BRzN,MAAMC,KACnB0N,aATsB,SAAC,GAKvB,MAAO,CAAEtH,aADN,EAHHA,gBAQyB,CACvB4P,2BACAvP,qBAFFiH,CAGGqgB,ICj6BU,MAA0B,0C,QHsC5B4E,EAAc,SAACtd,EAAwBud,GAClD,OAAOvd,EAAMrL,MAAK,SAACnI,GAAD,OAAUA,EAAK+T,UAAYgd,O,SAGnCrF,K,2BAAAA,E,gCAAAA,E,mCAAAA,E,2BAAAA,M,KAQL,IAAMF,EAAmB,SAC9BwF,GAEA,IAAIC,EAA6C,GACjD,IAAK,IAAIC,KAAKF,EAAc,CAC1B,IAAIxB,EAAYwB,EAAaE,GAAG1B,UAChC,IAAK,IAAI2B,KAAK3B,EAAW,CACvB,IAAI4B,EAAU5B,EAAU2B,GAAGC,QAC3B,IAAK,IAAIC,KAAKD,EAAS,CACrB,IAAIzB,EAAQyB,EAAQC,GAAG1B,MACvB,IAAK,IAAI2B,KAAK3B,EACZsB,EAAa7vB,KAAK,CAChBusB,YAAaqD,EAAaE,GAAGjxB,IAC7B8vB,cAAeiB,EAAaE,GAAGnB,cAC/Bhb,YAAaya,EAAU2B,GAAGlxB,IAC1B8Y,cAAeyW,EAAU2B,GAAGpY,cAC5B+U,UAAWsD,EAAQC,GAAGpxB,IACtBiwB,YAAakB,EAAQC,GAAGnB,YACxBrC,QAAS8B,EAAM2B,GAAGrxB,IAClBmwB,UAAWT,EAAM2B,GAAGC,YAAYlvB,WAChCmvB,SAAU7B,EAAM2B,GAAGE,SACnBC,SAAU9B,EAAM2B,GAAGG,aAM7B,OAAOR,GAsCHS,E,kDACJ,WAAYrzB,GAAkB,IAAD,8BAC3B,cAAMA,IAaR4uB,kBAAoB,SAAC1tB,GACnB,EAAKuE,SAAS,CAAEopB,eAAgB3tB,KAfL,EAkB7BsE,WAAa,SAACtE,GACZ,EAAKuE,SAAS,CAAEhF,QAASS,KAnBE,EAsB7BoyB,sBAAwB,SACtBpyB,GAEA,EAAKuE,SAAS,CAAE8tB,mBAAoBryB,KAzBT,EA4B7BsyB,YAAc,SAACtyB,GACb,EAAKuE,SAAS,CAAE2pB,SAAUluB,KA7BC,EAgC7BuyB,cAAgB,SAACvyB,GACf,EAAKuE,SAAS,CAAEiuB,UAAWxyB,KAjCA,EAoC7ByyB,iBAAmB,SAACzyB,GAClB,EAAKuE,SAAS,CAAEmuB,cAAe1yB,KArCJ,EAwC7B2yB,cAAgB,SAAC3yB,GACf,EAAKuE,SAAS,CAAEquB,WAAY5yB,KAzCD,EA4C7B+E,kBAAoB,WACgB,IAA9B,EAAKjG,MAAM+zB,QAAQxzB,OACrB,EAAKP,MAAM2rB,YACT,SAACtlB,EAAiBC,EAAavB,GAC7B,EAAKS,WAAWa,GAChB,EAAKrG,MAAMg0B,eAAe3tB,IACrBA,GAAUC,EAAI/F,OAAS,GAC1B,EAAKP,MAAMuG,eAAe,CACxBC,MAAOF,EACPG,MAAOC,IAAgBC,SAGvB5B,GAAQA,EAAKxE,OAAS,IACxB,EAAKizB,YAAYzuB,GACjB,EAAK0uB,cAActG,EAAiBpoB,QAIjC,EAAKiC,MAAMvG,UACpB,EAAK+yB,YAAY,EAAKxzB,MAAM+zB,SAC5B,EAAKN,cAActG,EAAiB,EAAKntB,MAAM+zB,UAC/C,EAAK/zB,MAAMg0B,gBAAe,GAC1B,EAAKxuB,YAAW,KAlES,EAsE7BsqB,UAAY,WACV,GAAI,EAAK9vB,MAAMi0B,aAAe,EAAKjtB,MAAMvG,QACvC,MAAO,CACL,oBAEEb,UAAU,6CAFZ,SAIE,oBAAIA,UAAU,kBAAkBsU,QAAS,EAAzC,SACE,cAACmD,EAAA,EAAD,OAJG+Y,KAAKC,WAUhB,IAAItrB,EAAwB,EAAK/E,MAAMmV,MACvC,GAAIpQ,EAAKxE,QAAU,EACjB,MAAO,CACL,oBAEEX,UAAU,6CAFZ,SAIE,oBAAIA,UAAU,kBAAkBsU,QAAS,EAAzC,4BAHKkc,KAAKC,WAUhB,IAAM6D,EACJ,EAAKl0B,MAAM8wB,YAAc,EAAmC,IAA9B,EAAK9wB,MAAM8wB,YAAc,GAAU,EAEnE,OAAO/rB,EAAKlE,KAAI,SAAC2X,EAAqBzX,GAAtB,eACd,qBAEEnB,UAAU,kEACVM,QAAS,WACP,EAAKF,MAAMm0B,cAAc3b,GACzB,EAAKxY,MAAMo0B,gBAAgB5b,EAAK9C,UALpC,UAQE,oBAAI9V,UAAU,kCAAd,SACGs0B,EAAanzB,EAAQ,IAExB,oBAAInB,UAAU,gBAAd,SACE,+BACG4Y,EAAKxQ,WACJwQ,EAAKxQ,UAAUM,MAAQ,IAAMkQ,EAAKxQ,UAAUO,UAGlD,oBAAI3I,UAAU,gBAAd,SAA+B4Y,EAAK1P,QAEpC,oBAAIlJ,UAAU,gBAAd,SACG4Y,EAAKxQ,WAAoC,MAAvBwQ,EAAKxQ,UAAUS,IAAc,OAAS,WAE3D,oBAAI7I,UAAU,oDAAd,SACG4Y,EAAKwW,gBACJxW,EAAKwW,eAAepB,qBACpBpV,EAAKwW,eAAepB,qBAClB,sBACEhuB,UAAS,gGADX,UAGG,UAAAy0B,YACC,EAAKr0B,MAAMutB,SACX/U,EAAKwW,eAAepB,4BAFrB,eAGEH,OACDpZ,YAAqB,UACnBggB,YACE,EAAKr0B,MAAMutB,SACX/U,EAAKwW,eAAepB,4BAHH,aACnB,EAGGH,UAkBf,oBAAI7tB,UAAU,mBAAd,SACE,wBACEA,UAAU,oFACV4G,MAAM,qBACNtG,QAAS,WACP,EAAKF,MAAMm0B,cAAc3b,GACzB,EAAKxY,MAAMo0B,gBAAgB5b,EAAK9C,UALpC,wBAvDG3U,EAAQqvB,KAAKC,cAvGK,EA6K7BiE,UA7K6B,uCA6KjB,WAAO5e,EAAiB6e,GAAxB,eAAAxoB,EAAA,yDACL2J,GACH,EAAK1V,MAAMuG,eAAe,CACxBC,MAAO,wCACPC,MAAOC,IAAgBC,SAI3B,EAAKioB,mBAAkB,GAGpB4B,OAAOC,QAAP,+BACyB8D,EAAa,QAAU,WADhD,gBAXO,yCAeD,EAAK3F,mBAAkB,IAftB,gCAmBU1f,IAAMslB,MAAN,UACb5lB,IAAIC,KADS,gCACmB6G,GACnC,CACE0J,WAAYmV,IAtBR,QAmBFnlB,EAnBE,UA0BNC,QAAQC,IAAI,wCACZD,QAAQC,IAAI,CAAEmG,kBAAmBrG,IACjCC,QAAQC,IAAI,wCACZilB,EACI,EAAKv0B,MAAMyV,kBAAkBC,EAAS,EAAK1V,MAAM8wB,aACjD,EAAK9wB,MAAM4V,oBAAoBF,EAAS,EAAK1V,MAAM8wB,aAEvD,EAAK9wB,MAAMuG,eAAe,CACxBC,MAAM,iBAAD,OAAmB+tB,EAAa,UAAY,YAA5C,KACL9tB,MAAOC,IAAgB+tB,QAnCnB,kDAuCRplB,QAAQkG,MAAM,CAAEmf,gBAAgB,EAAD,KAC/B,EAAK10B,MAAMuG,eAAe,CACxBC,MAAOmJ,YAAY,EAAD,IAClBlJ,MAAOC,IAAgBC,SA1CjB,QA8CV,EAAKioB,mBAAkB,GACvBlZ,EAAU,GA/CA,0DA7KiB,0DA+N7Bif,eA/N6B,uCA+NZ,WAAOjf,GAAP,eAAA3J,EAAA,yDACV2J,GACH,EAAK1V,MAAMuG,eAAe,CACxBC,MAAO,wCACPC,MAAOC,IAAgBob,UAItB0O,OAAOC,QAAP,iDARU,yCASN,EAAK7B,mBAAkB,IATjB,cAYf,EAAKA,mBAAkB,GACvB,EAAK0E,sBAAsB,SAbZ,kBAgBKpkB,IAAMihB,OAAN,UACbvhB,IAAIqG,KADS,+BACkBS,IAjBvB,eAmBN,EAAK1V,MAAMkW,gBAAgBR,EAAS,EAAK1V,MAAM8wB,cAClD8D,EAAkDpV,YACpD,EAAKxf,MAAM60B,YAET,EAAK70B,MAAMmV,MAAMrL,MAAK,SAAC0O,GAAD,OAAUA,EAAK9C,UAAYA,KACjD,EAAK1V,MAAM80B,cAEbF,EAAc5F,gBACZ,EAAK6E,cAAce,EAAc5F,eAAee,QAClD,EAAK/vB,MAAMuG,eAAe,CACxBC,MAAM,8CACNC,MAAOC,IAAgB+tB,OAEzB,EAAKd,iBAAiB,OAhCX,kDAmCbtkB,QAAQkG,MAAM,CAAEwf,qBAAqB,EAAD,KACpC,EAAK/0B,MAAMuG,eAAe,CACxBC,MAAOmJ,YAAY,EAAD,IAClBlJ,MAAOC,IAAgBC,SAtCZ,QA0Cf,EAAKioB,mBAAkB,GACvB,EAAK0E,sBAAsB,MAC3B5d,EAAU,GA5CK,0DA/NY,wDA8Q7B2Z,iBAAmB,SACjB6B,EACA5B,GAEA,IAAI/sB,EAAgB,GAClBoH,EAA8B,GAEhC,GAAI2lB,EACF3lB,EAASunB,EAASpnB,MAAK,SAACnI,GAAD,OAAUA,EAAKC,MAAQ0tB,MAC1C4B,EAASpnB,MAAK,SAACnI,GAAD,OAAUA,EAAKC,MAAQ0tB,KAAc6B,UACjDD,EAASpnB,MAAK,SAACnI,GAAD,OAAUA,EAAKC,MAAQ0tB,KAAc6B,UAErD,QAEJ,IAAK,IAAM3uB,KAAO0uB,EAChB,GAAIzuB,OAAOC,UAAUC,eAAeC,KAAKsuB,EAAU1uB,GACjD,IAAK,IAAM4uB,KAAeF,EAAS1uB,GAAK2uB,UAEpC1uB,OAAOC,UAAUC,eAAeC,KAC9BsuB,EAAS1uB,GAAK2uB,UACdC,KAGG7uB,EAAIM,SAASquB,EAAS1uB,GAAK2uB,UAAUC,GAAaxvB,OACrDW,EAAIQ,KAAKmuB,EAAS1uB,GAAK2uB,UAAUC,GAAaxvB,KAC9C+H,EAAO5G,KAAKmuB,EAAS1uB,GAAK2uB,UAAUC,MAQhD,OAAOznB,GA5SP,EAAK3C,MAAQ,CACX6nB,gBAAgB,EAChBpuB,SAAS,EACT8yB,mBAAoB,KACpBnE,SAAU,KACVsE,UAAW,KACXI,WAAY,KACZF,cAAe,MAVU,E,0CAkT7B,WAAU,IAAD,OACDoB,EAAexV,YAAgBxV,KAAKhK,MAAM60B,YAC5C7qB,KAAKhK,MAAMmV,MAAMrL,MACf,SAAC0O,GAAD,OAAUA,EAAK9C,UAAY,EAAK1V,MAAMi1B,gBAExCjrB,KAAKhK,MAAM80B,WACX9qB,KAAKhK,MAAM80B,gBACXliB,EACEsiB,EACJF,GAAgBA,EAAchG,eAC1BqF,YACErqB,KAAKhK,MAAMutB,SACXyH,EAAchG,eAAgBpB,0BAEhChb,EAEAuiB,EACJnrB,KAAKhD,MAAM0sB,WAAasB,EACpBhrB,KAAKhD,MAAM0sB,UAAU5pB,MACnB,SAACgoB,GAAD,aAAUA,EAAKtC,WAAL,UAAiBwF,EAAchG,sBAA/B,aAAiB,EAA8BQ,iBAE3D5c,EAEN,OACE,iCACI5I,KAAKhK,MAAM80B,YACX,qBAAKl1B,UAAU,iCAAf,SACE,sBAAKA,UAAS,wBAAd,UACE,qBAAKA,UAAU,iDAAf,SACE,qBAAKA,UAAU,0DAMhBoK,KAAKhK,MAAMmV,OACV,cAAC6c,EAAA,EAAD,CACEC,QAAS,CACP,CAAEC,YAAa,IAAKC,UAAW,OAAQvlB,QAAS,OAChD,CAAEslB,YAAa,QAASC,UAAW,OAAQvlB,QAAS,OACpD,CAAEslB,YAAa,QAASC,UAAW,OAAQvlB,QAAS,OACpD,CACEslB,YAAa,SACbC,UAAW,OACXvlB,QAAS,OAEX,CAAEslB,YAAa,OAAQC,UAAW,OAAQvlB,QAAS,OAEnD,CAAEslB,YAAa,GAAIC,UAAW,OAAQvlB,QAAS,QAEjDwlB,KAAMpoB,KAAK8lB,UACXuC,YAAY,EACZplB,QAAQ,EACRslB,QAAQ,OACR9xB,QAASuJ,KAAKhK,MAAMi0B,aAAejqB,KAAKhD,MAAMvG,eASvDuJ,KAAKhK,MAAM80B,YACV,sBAAKl1B,UAAU,oBAAf,UAEE,sBAAKA,UAAU,uFAAf,UACGo1B,EACC,sBAEEp1B,UAAU,qEAFZ,UAIE,qBACEw1B,IACoC,QAAlCJ,EAAchtB,UAAUqtB,YACUziB,IAAlCoiB,EAAchtB,UAAUqtB,MACpBC,YAAgBN,EAAchtB,UAAUqtB,OACxCE,EAENC,IAAI,GACJ51B,UAAU,0CAEZ,sBAAKA,UAAU,yCAAf,UACE,sBAAMA,UAAU,yBAAhB,SACGo1B,EAAchtB,UAAUM,MACvB,IACA0sB,EAAchtB,UAAUO,QAE5B,sBAAK3I,UAAU,oBAAf,UACE,cAAC,KAAD,CAAQA,UAAU,YAClB,sBAAMA,UAAU,sBAAhB,SACGs1B,GAAoBA,EAAiBzH,UAG1C,sBAAK7tB,UAAU,0BAAf,UACE,sBAAMA,UAAU,gBAAhB,oBACA,sBAAMA,UAAU,wBAAhB,SACGs1B,GAAoBA,EAAiB3F,cAClC,OACA2F,GACAA,EAAiBxE,+BACjB,YACA,SAGPwE,GACDA,EAAiBxE,+BACf,sBAAK9wB,UAAU,0BAAf,UACE,sBAAMA,UAAU,gBAAhB,wBACA,sBAAMA,UAAU,wBAAhB,SACGo1B,EAAchG,gBACfhlB,KAAKhK,MAAMkG,aAAa5F,sBACxBm1B,YACEzrB,KAAKhK,MAAMkG,aAAa5F,qBACxB00B,EAAchG,eACXloB,0BAED2uB,YACEzrB,KAAKhK,MAAMkG,aAAa5F,qBACxB00B,EAAchG,eACXloB,0BACF7F,yBACH,yBAIRi0B,GACAA,EAAiB3F,eACf,sBAAK3vB,UAAU,0BAAf,UAEE,cAAC,IAAD,CAAcA,UAAU,kBACvBu1B,GACC,sBAAMv1B,UAAU,wBAAhB,UACgB,OAAbu1B,QAAa,IAAbA,OAAA,EAAAA,EAAeza,eACd,OADD,OAECya,QAFD,IAECA,OAFD,EAECA,EAAetD,aACf,YAHD,OAICsD,QAJD,IAICA,OAJD,EAICA,EAAepD,qBApExBiD,EAActf,QAAU0a,KAAKC,UA6EpC,qBAAKzwB,UAAU,SAAf,SACE,cAACkZ,EAAA,EAAD,CACErS,MAAOsS,IAAeC,KACtB9X,MAAO,0BAIZ8zB,GACC,sBAEEp1B,UAAU,uBAFZ,UAIE,sBAAKA,UAAU,0BAAf,UACE,sBAAMA,UAAU,gBAAhB,kBACA,sBAAMA,UAAU,wBAAhB,SACGo1B,EAAcrsB,UAGnB,sBAAK/I,UAAU,0BAAf,UACE,sBAAMA,UAAU,gBAAhB,oBACA,sBAAMA,UAAU,wBAAhB,SACGo1B,EAAclsB,WAGnB,sBAAKlJ,UAAU,0BAAf,UACE,sBAAMA,UAAU,gBAAhB,oBACA,sBAAMA,UAAU,wBAAhB,SACGo1B,EAAcnsB,kBAGnB,sBAAKjJ,UAAU,0BAAf,UACE,sBAAMA,UAAU,gBAAhB,qBACA,sBAAMA,UAAU,wBAAhB,UAC+B,IAA5Bo1B,EAAc5V,UAAsB,UAAY,cAGrD,sBAAKxf,UAAU,0BAAf,UACGo1B,EAAcU,gBACb,yBACE91B,UAAS,gFACPoK,KAAKhD,MAAMusB,oBACuB,UAAlCvpB,KAAKhD,MAAMusB,mBACP,0BACA,eAENrzB,QAAS,kBACP,EAAKy0B,eAAeK,EAActf,UAEpCtU,SAAU4I,KAAKhD,MAAM6nB,eAVvB,UAYE,cAAC,KAAD,CAAQjvB,UAAU,yBAClB,+BACGoK,KAAKhD,MAAMusB,oBACsB,UAAlCvpB,KAAKhD,MAAMusB,mBACP,eACA,qBAIRvpB,KAAKhK,MAAM21B,YACX,yBACE/1B,UAAU,wGACVM,QAAS,kBAAM,EAAKF,MAAM+wB,eAAc,IAF1C,UAIE,cAAC,KAAD,CAAQnxB,UAAU,yBAClB,kDAGHo1B,EAAc5V,UACb,yBACExf,UAAS,iFACPoK,KAAKhD,MAAMusB,oBACuB,WAAlCvpB,KAAKhD,MAAMusB,mBACP,yBACA,cAENrzB,QAAS,kBACN,EAAK8G,MAAM6nB,gBACZ,EAAK7uB,MAAM80B,YACX,EAAKR,UACHU,EAActf,QACdsf,EAAc5V,YAGlBhe,SAAU4I,KAAKhD,MAAM6nB,eAfvB,UAiBE,cAAC,KAAD,CAAQjvB,UAAU,yBAClB,+BACGoK,KAAKhD,MAAMusB,oBACsB,UAAlCvpB,KAAKhD,MAAMusB,mBACP,aACA,kBAIR,yBACE3zB,UAAS,iFACPoK,KAAKhD,MAAMusB,oBACuB,WAAlCvpB,KAAKhD,MAAMusB,mBACP,4BACA,iBAENrzB,QAAS,kBACN,EAAK8G,MAAM6nB,gBACZ,EAAK7uB,MAAM80B,YACX,EAAKR,UACHU,EAActf,QACdsf,EAAc5V,YAGlBhe,SAAU4I,KAAKhD,MAAM6nB,eAfvB,UAiBE,cAAC,KAAD,CAAQjvB,UAAU,yBAClB,+BACGoK,KAAKhD,MAAMusB,oBACsB,UAAlCvpB,KAAKhD,MAAMusB,mBACP,aACA,wBA5GPyB,EAActf,QAAU0a,KAAKC,aAuHvCrmB,KAAKhK,MAAM80B,YACZ9qB,KAAKhD,MAAMooB,UACXplB,KAAKhK,MAAM21B,WACT,cAAC,EAAD,CACEjG,SAAU1lB,KAAKhK,MAAM80B,WACrBvH,SAAUvjB,KAAKhK,MAAMutB,SACrBoE,SAAU3nB,KAAKqlB,iBAAiBrlB,KAAKhD,MAAMooB,UAC3CA,SAAUplB,KAAKhD,MAAMooB,SACrB2B,cAAe/mB,KAAKhK,MAAM+wB,cAC1BD,YAAa9mB,KAAKhK,MAAM8wB,cAG1B,cAAC8E,EAAA,WAAD,CACElG,SAAUsF,EACVC,aAAcjrB,KAAKhK,MAAMi1B,aACzBpB,cAAe7pB,KAAK6pB,cACpBC,WAAY9pB,KAAKhD,MAAM8sB,WACvBH,iBAAkB3pB,KAAK2pB,iBACvBC,cAAe5pB,KAAKhD,MAAM4sB,cAC1B9C,YAAa9mB,KAAKhK,MAAM8wB,wB,GAxlBjBxjB,aAgnBRzN,QAAMC,KACnB0N,aAdsB,SAAC,GAOvB,MAAO,CACLtH,aAFC,EALHA,aAQE6tB,QAHC,EAJHzI,UAOqBI,gBAKI,CACvBjW,sBACAG,wBACAM,oBACAyV,eACAplB,qBALFiH,CAMG6lB,K,yEI1uBL,mDAmBMwC,EAAsD,WAQtD,IAPJ71B,EAOG,uDAPK,CACNwG,MAAO,GACP4D,KAAM0rB,IACNxrB,UAAW,SACXlD,MAAO,EACP2uB,eAAWnjB,GAGPlE,EAAc1O,EAAMoK,KAC1B,OACE,sBAAKxK,UAAU,0FAAf,UACE,qBACEA,UAAS,8BAAyBI,EAAMsK,UAA/B,sBADX,SAGE,cAACoE,EAAD,CAAa9O,UAAS,uBAAkBI,EAAMsK,UAAxB,YAExB,gCACE,qBAAI1K,UAAU,uCAAd,UACGI,EAAMoH,MAAQ,IACX4uB,YAAWh2B,EAAMoH,OACjB6uB,YAAej2B,EAAMoH,OAAQ,IAChCpH,EAAM+1B,WAAa,KAAOC,YAAWh2B,EAAM+1B,cAE9C,sBAAMn2B,UAAU,wBAAhB,SAAyCI,EAAMwG,eAMxC3G,QAAMC,KAAK+1B,I,2IC1BdK,E,yEAAAA,K,2BAAAA,E,0BAAAA,E,6BAAAA,E,qBAAAA,E,iBAAAA,E,iBAAAA,E,yBAAAA,E,gCAAAA,M,KAiBL,IAAM5J,EAAiC,SAC5C9pB,GAEA,OACEA,IAAQ0zB,EAAyCplB,cACjDtO,IAAQ0zB,EAAyCnlB,aACjDvO,IAAQ0zB,EAAyCllB,QACjDxO,IAAQ0zB,EAAyCC,aAOxC1T,EACX,CACE,CACEjgB,IAAK0zB,EAAyCplB,aAC9CtK,MAAO,eACPH,QAAQ,GAEV,CACE7D,IAAK0zB,EAAyCnlB,YAC9CvK,MAAO,cACPH,QAAQ,GAEV,CACE7D,IAAK0zB,EAAyC/kB,aAC9C3K,MAAO,gBACPH,QAAQ,GAEV,CACE7D,IAAK0zB,EAAyCllB,OAC9CxK,MAAO,cACPH,QAAQ,GAEV,CACE7D,IAAK0zB,EAAyC5sB,KAC9C9C,MAAO,YACPH,QAAQ,GAEV,CACE7D,IAAK0zB,EAAyC9kB,KAC9C5K,MAAO,YACPH,QAAQ,GAEV,CACE7D,IAAK0zB,EAAyC7kB,SAC9C7K,MAAO,gBACPH,QAAQ,GAEV,CACE7D,IAAK0zB,EAAyCC,YAC9C3vB,MAAO,mBACPH,QAAQ,IAcD8a,EAA+B,SAC1C3P,EACAC,EACA2kB,GAEA,IAAIzsB,EAA0C,GAC5CpH,EAAgB,GAFkB,WAGzBC,GACT,GAAIC,OAAOC,UAAUC,eAAeC,KAAKwzB,EAAiB5zB,GAAM,CAC9D,GAAID,EAAIM,SAASuzB,EAAgB5zB,GAAK6zB,iBAAkB,iBACxD9zB,EAAIQ,KAAKqzB,EAAgB5zB,GAAK6zB,iBAC9B,IAAI1kB,EAAUH,EAAW1H,MACvB,SAACnI,GAAD,OAAUA,EAAKiQ,YAAcwkB,EAAgB5zB,GAAKqP,UAEpD,GAAIF,EAAS,CACX,IAAIQ,EAAOV,EAAS3H,MAClB,SAACnI,GAAD,OACEA,EAAKkQ,SAAWukB,EAAgB5zB,GAAKqP,QACrClQ,EAAKoQ,SAAWqkB,EAAgB5zB,GAAKuP,UAEzCpI,EAAO5G,KAAK,CACViP,YAAaL,EAAQK,YACrBC,YAAaN,EAAQM,YACrBrE,YAAa+D,EAAQ/D,YACrBsE,cAAeP,EAAQO,cACvBN,UAAWD,EAAQC,UACnBO,KAAMA,GAAc,KACpBiP,iBAAkBgV,EAAgB5zB,GAAKiW,iBApB/C,IAAK,IAAMjW,KAAO4zB,EAAiB,EAAxB5zB,GA4BX,OAHA6M,QAAQC,IAAI,yDACZD,QAAQC,IAAI,CAAE3F,WACd0F,QAAQC,IAAI,yDACL3F,GAuCHuX,EAAkD,SAAClhB,GACvD,IApCA0S,EACAC,EAmCA,EAAsCQ,mBAAiB,IAAvD,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAgCF,oBAAkB,GAAlD,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAwCJ,mBAAiB,IAAzD,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAAkCN,mBAAyB,OAA3D,mBAAOO,EAAP,KAAkBC,EAAlB,KAEMC,EAAU,SAACC,GACXL,IAAiBK,GAA8B,QAAdH,GACnCC,EAAa,QACbF,EAAgBI,GAChBN,GAAY,KAEZI,EAAa,OACbF,EAAgBI,GAChBN,GAAY,KAIhB,OACE,cAAC,IAAM+iB,SAAP,UACE,sBAAK12B,UAAU,gBAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,uBACEyB,SAAU,SAACC,GAAD,OAAO+R,EAAe/R,EAAEE,OAAON,QACzCuG,KAAK,OACLvG,MAAOkS,EACPpG,YAAY,YACZpN,UAAU,uCACVwB,YACEpB,EAAM8T,gBACN9T,EAAM+T,eACN/T,EAAM6iB,sBACN1B,EACEnhB,EAAM8T,eACN9T,EAAM+T,cACN/T,EAAM6iB,sBACNtiB,QAAU,OAMlB,qBAAKX,UAAU,yBAAf,SACE,wBAAOA,UAAU,gBAAgBoQ,GAAG,iBAApC,UACE,uBAAOpQ,UAAU,sEAAjB,SACE,+BACE,oBAAIA,UAAU,YAAd,eACA,oBACEA,UAAU,2BACVM,QAAS,kBAAM0T,EAAQ,gBAFzB,SAIE,sBAAKhU,UAAU,0BAAf,oBACS,cAAC,IAAD,SAGX,oBAAIA,UAAU,YAAd,uBACA,oBAAIA,UAAU,YAAd,uBACA,oBAAIA,UAAU,YAAd,2BACA,oBACEA,UAAU,2BACVM,QAAS,kBAAM0T,EAAQ,qBAFzB,SAIE,sBAAKhU,UAAU,0BAAf,8BACmB,cAAC,IAAD,cAKzB,gCAC4B,OAAzBI,EAAM8T,gBAA2B9T,EAAMS,QACtC,6BACE,oBAAIyT,QAAS,EAAGtU,UAAU,YAA1B,SACE,cAAC,IAAD,QAGFI,EAAM+T,eACR/T,EAAM6iB,sBACN1B,EACEnhB,EAAM8T,eACN9T,EAAM+T,cACN/T,EAAM6iB,sBACNtiB,QAAU,EACZ,6BACE,oBAAI2T,QAAS,EAAGtU,UAAU,wBAA1B,uCAKFI,EAAM+T,eACN/T,EAAM6iB,sBACN1O,YACEb,GA9HhBZ,EAgIkByO,EACEnhB,EAAM8T,eACN9T,EAAM+T,cACN/T,EAAM6iB,sBAlI1BlQ,EAoIkBS,OAlIdR,IAAcD,GAAiB,KAATA,EAAoBD,EACvCA,EAAQnP,QAAO,SAACsP,GACrB,IAAIC,EAGJ,IAAK,IAAIC,KAAQF,EAWf,GAVAC,GAAO,EAEI,gBAATC,GACS,gBAATA,GACS,qBAATA,IAEAD,EACED,EAAQE,GAAM/O,WAAWgP,cAAcC,QAAQN,EAAKK,gBACnD,GAEDF,EAAM,MAEZ,OAAOA,MAkHOU,EACAE,GACA7S,KAAI,SAACc,EAAqCyS,GAAtC,OACJ,qBAEExU,UAAS,sHAFX,UAIE,oBAAIA,UAAU,YAAd,SAA2BwU,EAAI,IAC/B,qBAAIxU,UAAU,YAAd,UACGyU,YAAsB1S,EAAKqQ,aAD9B,KAEE,sBAAMpS,UAAU,gBAAhB,SAAiC+B,EAAKsQ,cAFxC,OAIA,oBAAIrS,UAAU,YAAd,SACG+B,EAAKwQ,KAAO7I,YAAK3H,EAAKwQ,KAAKmC,WAAa,MAE3C,oBAAI1U,UAAU,YAAd,SACG+B,EAAKwQ,KAAOxQ,EAAKwQ,KAAKoC,WAAa,MAEtC,oBAAI3U,UAAU,YAAd,SACG+B,EAAKwQ,KAAOxQ,EAAKwQ,KAAMqC,SAAW,OAAS,MAE9C,oBAAI5U,UAAU,YAAd,SACGoJ,OAAOrH,EAAKyf,iBAAiBlY,QAAQ,IAAM,QAlBzCkL,EAAI,mBA+BdvU,QAAMC,KAAKohB,I,iCC7T1B,oCAYM/W,EAAqD,SAACnK,GAC1D,IAAMu2B,EAAkBv2B,EAAMuK,aAC1BvK,EAAMuK,YAAc,EAClBvK,EAAMuK,YAER,EACJ,OACE,sBACE3K,UAAS,6BAAwB22B,EAAxB,yBACPA,EAAU,EADH,yBAEQA,EAAU,EAFlB,yBAGPA,EAAU,EAHH,0DADX,UAOGv2B,EAAMoO,WACHpO,EAAMw2B,kBAA+C,UAA3Bx2B,EAAMw2B,mBAC/Bx2B,EAAMw2B,mBACTx2B,EAAMoO,SACPpO,EAAM0E,WAAW7D,KAAI,SAACc,EAAMZ,GAAP,OACpB,kCACE,cAAC,IAAD,CACEyF,MAAO7E,EAAK6E,MACZ4D,KAAMzI,EAAKyI,KACXE,UAAW3I,EAAK2I,UAChBlD,MAAOzF,EAAKyF,SALFrG,EAAQY,EAAK6E,UAS5BxG,EAAMoO,UACLpO,EAAMw2B,kBACqB,QAA3Bx2B,EAAMw2B,kBACNx2B,EAAMoO,aAKCvO,QAAMC,KAAKqK,I,iCChD1B,6CAcMK,EAAgC,SAACxK,GACrC,OACE,qBAAKJ,UAAU,QAAf,SACE,cAAC,IAAD,CACE6K,QAASzK,EAAMyK,QACf5F,OAAQ7E,EAAM6E,OACd4C,KAAK,QACLwE,MAAK,UAAKjM,EAAMiM,MAAQjM,EAAMiM,MAAQ,YAM/BpM,QAAMC,KAAK0K,I,wRCyBpBisB,E,kDACJ,WAAYz2B,GAAkB,IAAD,8BAC3B,cAAMA,IAcR02B,kBAAoB,SAACx1B,GACnB,EAAKuE,SAAS,CAAEkxB,eAAgBz1B,KAhBL,EAmB7B01B,kBAAoB,SAAC11B,GACnB,EAAKuE,SAAS,CAAEioB,eAAgBxsB,KApBL,EAuB7B21B,oBAAsB,SAAC31B,GACrB,EAAKuE,SAAS,CAAEqxB,iBAAkB51B,KAxBP,EA2B7B61B,oBAAsB,SAAC71B,GACrB,EAAKuE,SAAS,CAAEuxB,iBAAkB91B,KA5BP,EA+B7B+1B,oBAAsB,SAAC/1B,GACrB,EAAKuE,SAAS,CAAEyxB,iBAAkBh2B,KAhCP,EAmC7Bi2B,WAAa,SAACj2B,GACZ,EAAKuE,SAAS,CAAEhF,QAASS,KApCE,EAuC7Bk2B,mBAAqB,SACnBpI,EACA0G,GAEA,GAAI1G,GAAkB0G,GAAkBA,EAAen1B,OAAS,EAAG,CACjE,IAAI82B,EAAuC,GADsB,WAEtD70B,GACT,GAAIC,OAAOC,UAAUC,eAAeC,KAAKosB,EAAgBxsB,GAAM,CAC7D,IAAM80B,EAAa5B,EAAe5rB,MAChC,SAACytB,GAAD,OAAYA,EAAOvnB,KAAOgf,EAAexsB,GAAKwN,MAE5CsnB,EACFD,EAAct0B,KAAKu0B,GAEnBD,EAAct0B,KAAKisB,EAAexsB,MARxC,IAAK,IAAMA,KAAOwsB,EAAiB,EAAxBxsB,GAYX,EAAKxC,MAAM6zB,cAAcwD,KAzDA,EA6D7BpxB,kBAAoB,WACd,EAAKjG,MAAM0vB,UAAY,EAAK1vB,MAAM0vB,SAASgG,gBAC7C,EAAK11B,MAAM0vB,SAASV,gBAClB,EAAKoI,mBACH,EAAKp3B,MAAM0vB,SAASV,eAAee,OACnC,EAAK/vB,MAAM0vB,SAASgG,eAAe3F,QAEvC,EAAKoH,YAAW,KAEhB,EAAKn3B,MAAM0vB,UACT,EAAK1vB,MAAM0vB,SAASV,gBACpB,EAAKhvB,MAAM6zB,cAAc,EAAK7zB,MAAM0vB,SAASV,eAAee,QAC9D,EAAKoH,YAAW,KAzES,EA6E7BrH,UAAY,WACV,OAAK,EAAK9vB,MAAM8zB,WAMT,EAAK9zB,MAAM8zB,WAAWjzB,KAAI,SAACkvB,EAA6B3b,GAA9B,OAC/B,qBAEExU,UAAS,8EACP,EAAKI,MAAM4zB,eACX,EAAK5zB,MAAM4zB,cAAc5jB,KAAO+f,EAAO/f,IACvC,6CAEF9P,QAAS,kBACP,EAAKF,MAAM4zB,eAAiB,EAAK5zB,MAAM4zB,cAAc5jB,KAAO+f,EAAO/f,IAC9D,EAAKhQ,MAAM2zB,iBAAiB,MAC7B,EAAKkD,qBAAoB,GACzB,EAAKH,mBAAkB,GACvB,EAAKK,qBAAoB,GACzB,EAAKE,qBAAoB,KACxB,EAAKj3B,MAAM2zB,iBAAiB5D,GAC7B,EAAK8G,oBAAoB9G,EAAO7f,UAAU8f,QAC1C,EAAK0G,kBAAkB3G,EAAO7f,UAAU+f,MACxC,EAAK8G,oBAAoBhH,EAAO7f,UAAUggB,QAC1C,EAAK+G,oBAAoBlH,EAAO7f,UAAUigB,UAlBlD,UAqBE,oBAAIvwB,UAAU,YAAd,SACE,uBAAOA,UAAU,2BAAjB,SAaE,sBAAMA,UAAU,8DAAhB,SACGmwB,EAAO9f,WAId,6BACE,sBACErQ,UAAS,2CACPmwB,EAAO7f,UAAU8f,OAAS,iBAAmB,gBAFjD,UAKGD,EAAO7f,UAAU8f,OAAS,cAAC,IAAD,IAAqB,cAAC,IAAD,IAC/CD,EAAO7f,UAAU8f,OAAS,OAAS,UAGxC,6BACE,sBACEpwB,UAAS,2CACPmwB,EAAO7f,UAAU+f,KAAO,iBAAmB,gBAF/C,UAKGF,EAAO7f,UAAU+f,KAAO,cAAC,IAAD,IAAqB,cAAC,IAAD,IAC7CF,EAAO7f,UAAU+f,KAAO,OAAS,UAGtC,6BACE,sBACErwB,UAAS,2CACPmwB,EAAO7f,UAAUggB,OAAS,iBAAmB,gBAFjD,UAKGH,EAAO7f,UAAUggB,OAAS,cAAC,IAAD,IAAqB,cAAC,IAAD,IAC/CH,EAAO7f,UAAUggB,OAAS,OAAS,UAGxC,6BACE,sBACEtwB,UAAS,2CACPmwB,EAAO7f,UAAUigB,OAAS,iBAAmB,gBAFjD,UAKGJ,EAAO7f,UAAUigB,OAAS,cAAC,IAAD,IAAqB,cAAC,IAAD,IAC/CJ,EAAO7f,UAAUigB,OAAS,OAAS,YA5EnC/b,EAAI2b,EAAO/f,GAAKogB,KAAKC,aAPrB,CACL,6BACE,0CADOD,KAAKC,YAhFS,EAyK7BmH,oBAzK6B,uCAyKP,WAAOl2B,GAAP,mBAAAyK,EAAA,yDACpBzK,EAAEivB,kBACE,EAAKvwB,MAAM0vB,SAFK,oBAGlB,EAAKkH,mBAAkB,GACnB3mB,EAA2C,KAC/CA,EAAO,EAAKjQ,MAAM0vB,SAASgG,eACvB30B,GAAS,EANK,SASZkP,GAAQ,EAAKjQ,MAAM4zB,eACrB7yB,EAAQkP,EAAK8f,OAAOvD,WAClB,SAACuD,GAAD,OAAYA,EAAO/f,KAAO,EAAKhQ,MAAM4zB,cAAe5jB,QAEzC,GACXC,EAAK8f,OAAOhvB,GAAOmP,UAAU8f,OAAS,EAAKhpB,MAAM8vB,iBACjD7mB,EAAK8f,OAAOhvB,GAAOmP,UAAU+f,KAAO,EAAKjpB,MAAM2vB,eAC/C1mB,EAAK8f,OAAOhvB,GAAOmP,UAAUggB,OAAS,EAAKlpB,MAAMgwB,iBACjD/mB,EAAK8f,OAAOhvB,GAAOmP,UAAUigB,OAAS,EAAKnpB,MAAMkwB,kBAEjDjnB,EAAK8f,OAAOhtB,KAAK,CACfiN,GAAI,EAAKhQ,MAAM4zB,cAAc5jB,GAC7BC,KAAM,EAAKjQ,MAAM4zB,cAAc3jB,KAC/BzN,IAAK,EAAKxC,MAAM4zB,cAAcpxB,IAC9B0N,UAAW,CACT8f,OAAQ,EAAKhpB,MAAM8vB,iBACnB7G,KAAM,EAAKjpB,MAAM2vB,eACjBzG,OAAQ,EAAKlpB,MAAMgwB,iBACnB7G,OAAQ,EAAKnpB,MAAMkwB,oBAIhB,EAAKl3B,MAAM4zB,gBACpB3jB,EAAO,CACL8f,OAAQ,CACN,CACE/f,GAAI,EAAKhQ,MAAM4zB,cAAc5jB,GAC7BC,KAAM,EAAKjQ,MAAM4zB,cAAc3jB,KAC/BzN,IAAK,EAAKxC,MAAM4zB,cAAcpxB,IAC9B0N,UAAW,CACT8f,OAAQ,EAAKhpB,MAAM8vB,iBACnB7G,KAAM,EAAKjpB,MAAM2vB,eACjBzG,OAAQ,EAAKlpB,MAAMgwB,iBACnB7G,OAAQ,EAAKnpB,MAAMkwB,oBAIzBxhB,QAAS,EAAK1V,MAAM0vB,SAASha,QAC7B+hB,uBAAwB,MAIxBxnB,EAnDY,oBAqD6B,OAAvC,EAAKjQ,MAAM0vB,SAASgG,eArDV,kCAsDAxmB,IAAMslB,MAAN,UACP5lB,IAAIqG,KADG,kBAEV,CACE8a,OAAQ9f,EAAK8f,OACbra,QAAS,EAAK1V,MAAM0vB,SAASha,UA1DrB,QAsDZtG,EAtDY,gDA8DAF,IAAM2hB,KAAN,UACPjiB,IAAIqG,KADG,kBAEV,CACE8a,OAAQ9f,EAAK8f,OACbra,QAAS,EAAK1V,MAAM0vB,SAASha,UAlErB,QA8DZtG,EA9DY,eAuEVA,IACFa,EAAKwnB,uBAAyBroB,EAAIrK,KAAKA,KAAK0yB,uBAE5C,EAAKz3B,MAAMgW,oBAAoB/F,EAAM,EAAKjQ,MAAM8wB,aAChD7gB,GACE,EAAKjQ,MAAM0vB,SAASV,gBACpB,EAAKoI,mBACH,EAAKp3B,MAAM0vB,SAASV,eAAee,OACnC9f,EAAK8f,QAET,EAAK/vB,MAAMuG,eAAe,CACxBC,MAAM,8CACNC,MAAOC,IAAgB+tB,OAGzBxkB,EAAO,KACP,EAAKjQ,MAAM2zB,iBAAiB,MAC5B,EAAKkD,qBAAoB,GACzB,EAAKH,mBAAkB,GACvB,EAAKK,qBAAoB,GACzB,EAAKE,qBAAoB,IA3Fb,0DA+FhB5nB,QAAQkG,MAAM,CAAEmiB,iBAAiB,EAAD,KAChC,EAAK13B,MAAMuG,eAAe,CACxBC,MAAOmJ,YAAY,EAAD,IAClBlJ,MAAOC,IAAgBC,SAlGT,QAqGlB,EAAKiwB,mBAAkB,GArGL,0DAzKO,sDAG3B,EAAK5vB,MAAQ,CACXvG,SAAS,EACTitB,gBAAgB,EAGhBoJ,kBAAkB,EAClBH,gBAAgB,EAChBK,kBAAkB,EAClBE,kBAAkB,GAXO,E,0CAkR7B,WAAU,IAAD,OACP,YAA4BtkB,IAAxB5I,KAAKhK,MAAM0vB,SACN,cAAC,IAAD,CAAUiI,GAAG,WAGlB3tB,KAAKhD,MAAMvG,SAAmC,OAAxBuJ,KAAKhK,MAAM0vB,SAEjC,qBAAK9vB,UAAU,kEAAf,oCAOF,8BACE,sBAAKA,UAAU,kDAAf,UACE,sBACEA,UAAS,kGACPoK,KAAKhK,MAAM4zB,cAAgB,kBAAoB,IAFnD,UAKE,sBAAMh0B,UAAU,4CAAhB,uBAGEoK,KAAKhD,MAAMvG,SACX,qBAAKb,UAAU,yBAAf,SACE,cAAC,IAAD,CACEqyB,QAAS,CACP,CACEC,YAAa,cACbC,UAAW,OACXvlB,QAAS,OAEX,CAAEslB,YAAa,SAAUC,UAAW,QACpC,CAAED,YAAa,OAAQC,UAAW,QAClC,CAAED,YAAa,SAAUC,UAAW,QACpC,CAAED,YAAa,SAAUC,UAAW,SAEtCC,KAAMpoB,KAAK8lB,UACXuC,YAAY,EACZplB,QAAQ,EACRqlB,SAAS,aACTC,QAAQ,cAKhB,qBAAK3yB,UAAS,2BAAd,SACIoK,KAAKhK,MAAM4zB,cAQX,sBAAKh0B,UAAS,GAAd,UACE,oBAAIA,UAAU,oEAAd,mCAGA,qBAAKA,UAAU,2BAAf,SACE,qBAAIA,UAAU,8EAAd,UACE,cAAC,IAAD,CAAiBA,UAAU,YAC1BoK,KAAKhK,MAAM4zB,cAAc3jB,UAI9B,qBAAKrQ,UAAU,6BAAf,SACE,uBACEA,UAAU,6BACV4xB,SAAU,SAAClwB,GAAD,OAAO,EAAKk2B,oBAAoBl2B,IAF5C,UAIE,sBAAK1B,UAAU,iCAAf,UACE,cAAC,IAAD,CAAWA,UAAU,0BACrB,sBAAKA,UAAU,gBAAf,UACE,oBAAIA,UAAU,wBAAd,oBACA,sBAAMA,UAAU,gCAAhB,qEAIF,uBACE6H,KAAK,WACL7H,UAAU,sCACVyB,SAAU,kBACR,EAAKw1B,qBAAqB,EAAK7vB,MAAM8vB,mBAEvCc,QAAS5tB,KAAKhD,MAAM8vB,iBACpB11B,SAAU4I,KAAKhD,MAAM0mB,oBAGzB,sBAAK9tB,UAAU,iCAAf,UACE,cAAC,KAAD,CAAgBA,UAAU,0BAC1B,sBAAKA,UAAU,gBAAf,UACE,oBAAIA,UAAU,wBAAd,kBACA,sBAAMA,UAAU,gCAAhB,mEAIF,uBACE6H,KAAK,WACL7H,UAAU,sCACVyB,SAAU,kBACR,EAAKq1B,mBAAmB,EAAK1vB,MAAM2vB,iBAErCiB,QAAS5tB,KAAKhD,MAAM2vB,eACpBv1B,SAAU4I,KAAKhD,MAAM0mB,oBAGzB,sBAAK9tB,UAAU,iCAAf,UACE,cAAC,IAAD,CAAQA,UAAU,0BAClB,sBAAKA,UAAU,gBAAf,UACE,oBAAIA,UAAU,wBAAd,oBACA,sBAAMA,UAAU,wBAAhB,qEAIF,uBACE6H,KAAK,WACL7H,UAAU,sCACVyB,SAAU,kBACR,EAAK01B,qBAAqB,EAAK/vB,MAAMgwB,mBAEvCY,QAAS5tB,KAAKhD,MAAMgwB,iBACpB51B,SAAU4I,KAAKhD,MAAM0mB,oBAGzB,sBAAK9tB,UAAU,iCAAf,UACE,cAAC,IAAD,CAAUA,UAAU,0BACpB,sBAAKA,UAAU,gBAAf,UACE,oBAAIA,UAAU,wBAAd,oBACA,sBAAMA,UAAU,gCAAhB,qEAIF,uBACE6H,KAAK,WACL7H,UAAU,sCACVyB,SAAU,kBACR,EAAK41B,qBAAqB,EAAKjwB,MAAMkwB,mBAEvCU,QAAS5tB,KAAKhD,MAAMkwB,iBACpB91B,SAAU4I,KAAKhD,MAAM0mB,oBAIzB,sBAAK9tB,UAAU,qDAAf,UAEE,wBACEA,UAAU,kEACVwB,SAAU4I,KAAKhD,MAAM0mB,eACrBxtB,QAAS,WACP,EAAKF,MAAM2zB,iBAAiB,MAC5B,EAAKkD,qBAAoB,GACzB,EAAKH,mBAAkB,GACvB,EAAKK,qBAAoB,GACzB,EAAKE,qBAAoB,IAR7B,oBAaA,wBACEr3B,UAAU,eACVwB,SAAU4I,KAAKhD,MAAM0mB,eAFvB,SAII1jB,KAAKhD,MAAM0mB,eAET,eADA,2BApHd,sBAAK9tB,UAAU,uEAAf,UACE,cAAC,KAAD,CAAYA,UAAU,cACtB,sBAAMA,UAAU,oBAAhB,sD,GAtUU0N,aAucbsoB,EAAa/1B,IAAMC,KAC9B0N,YAAQ,KAAM,CACZwI,wBACAzP,qBAFFiH,CAGGipB,K,wkBCheCoB,EAAqD,SAAC73B,GAC1D,MAAwCmT,oBAAkB,GAA1D,mBAAO8G,EAAP,KAAqBC,EAArB,KAEA,OACE,eAAC,WAAD,WACE,sBAAKta,UAAU,wEAAf,UACE,sBAAKA,UAAU,wCAAf,UACE,cAAC,IAAD,CAAiBA,UAAU,2CAC3B,sBAAKA,UAAU,gBAAf,UACE,sBAAMA,UAAU,mCAAhB,6BAGC,QAeL,0BAASA,UAAU,gCAAnB,UAEE,yBAASA,UAAU,sEAAnB,SACGI,EAAMM,sBACLN,EAAMM,qBAAqBC,OAAS,GACpCP,EAAMM,qBAAqBO,KAAI,SAACC,EAAWC,GAAZ,OAC7B,yBAEEnB,UAAS,iBACPI,EAAMS,SAAWT,EAAMU,iBACnB,qBACA,iBAHG,YAKPV,EAAMW,eACNG,EAAUE,yBACRhB,EAAMW,cAAcK,uBAClB,mCACA,4BATG,kJAWTd,QAAS,kBACNF,EAAMS,UACNT,EAAMU,kBACPV,EAAMY,iBAAiBE,IAhB3B,SAmBE,0BAASlB,UAAU,SAAnB,UACE,cAAC,IAAD,CAAeA,UAAU,8BACzB,+BAAOkB,EAAUG,+BApBdH,EAAUE,uBAAyBD,QAgChD,8BACE,wBACEnB,UAAS,uFACPI,EAAMS,SAAW,eAEnBS,MAAOlB,EAAMmB,WACbC,SAAUpB,EAAMS,SAAWT,EAAMU,iBACjCW,SAAU,SAACC,GACTtB,EAAMuB,cAAcD,EAAEE,OAAON,OAC7BlB,EAAMqf,gBAAkBrf,EAAMqf,eAAe/d,EAAEE,OAAON,QAR1D,SAwBGlB,EAAMyB,qBAAqBZ,KAAI,SAACa,EAASC,GAAV,OAC9B,wBAAiCT,MAAOQ,EAAQE,IAAhD,SACGF,EAAQG,mBADEH,EAAQE,IAAMD,gBAUpCsY,GACC,cAACgB,EAAA,EAAD,CACEC,SAAUC,IAAc3U,MACxB6U,WAAYpB,EACZha,YAAaD,EAAMC,YACnBqb,iBAAkBpB,EAClByC,eAAgB3c,EAAM2c,qBAQjB9c,MAAMC,KAAK+3B,G,mCCvIpBC,E,4JACJ,WACE,OACE,sBAAKl4B,UAAU,2BAAf,UACE,qBAAKA,UAAU,yCAAf,SACE,sBAAMA,UAAU,gDAAhB,uCAKF,qBAAKA,UAAU,iBAAf,SACE,cAAC4E,EAAA,EAAD,CACED,OAAQ,CAAC,kBAAmB,kBAC5BE,gBAAiB,CAAC,6BAClBC,YAAY,EACZC,UAAU,4BACVC,YAAY,UACZC,OAAQ,CACN,CACEC,KAAM,kBACNC,KAAM,CAACiF,KAAKhK,MAAM+3B,wBAAwBC,UAAUz3B,SAEtD,CACEuE,KAAM,iBACNC,KAAM,CAACiF,KAAKhK,MAAM+3B,wBAAwB5a,SAAS5c,UAGvDyE,OAAQ,CAAC,UAAW,WACpBC,WAAY,CACVC,aAAc,EACdC,YAAY,EACZC,YAAa,MACbC,YAAa,WAEfC,YAAa,e,GAlCUgI,aA0CpBzN,MAAMC,KAAKg4B,GC1CpBG,E,4JACJ,WACE,OACE,sBAAKr4B,UAAU,2BAAf,UACE,qBAAKA,UAAU,yCAAf,SACE,sBAAMA,UAAU,gDAAhB,0CAKF,qBAAKA,UAAU,iBAAf,SACE,cAAC4E,EAAA,EAAD,CACED,OAAQ,CAAC,kBAAmB,kBAC5BE,gBAAiB,CAAC,yBAClBC,YAAY,EACZC,UAAU,uBACVC,YAAY,UACZC,OAAQ,CACN,CACEC,KAAM,kBACNC,KAAM,CAACiF,KAAKhK,MAAMk4B,aAAaF,UAAUz3B,SAE3C,CACEuE,KAAM,aACNC,KAAM,CAACiF,KAAKhK,MAAMk4B,aAAa/a,SAAS5c,UAG5CyE,OAAQ,CAAC,UAAW,WACpBC,WAAY,CACVC,aAAc,EACdC,YAAY,EACZC,YAAa,MACbC,YAAa,WAEfC,YAAa,e,GAlCOgI,aA0CjBzN,MAAMC,KAAKm4B,GCzCpBE,E,4JACJ,WACE,OACE,sBAAKv4B,UAAU,2BAAf,UACE,qBAAKA,UAAU,yCAAf,SACE,sBAAMA,UAAU,gDAAhB,6CAKF,qBAAKA,UAAU,iBAAf,SACE,cAAC4E,EAAA,EAAD,CACED,OAAQ,CAAC,oBAAqB,uBAC9BE,gBAAiB,CAAC,6BAClBC,YAAY,EACZC,UAAU,mBACVC,YAAY,eACZC,OAAQ,CACN,CACEC,KAAM,oBACNC,KAAM,CAACiF,KAAKhK,MAAMo2B,gBAAgBje,KAAK5X,SAEzC,CACEuE,KAAM,sBACNC,KAAM,CAACiF,KAAKhK,MAAMo2B,gBAAgB5uB,OAAOjH,UAG7CyE,OAAQ,CAAC,UAAW,WACpBC,WAAY,CACVC,aAAc,EACdC,YAAY,EACZC,YAAa,MACbC,YAAa,WAEfC,YAAa,e,GAlCUgI,aA0CpBzN,MAAMC,KAAKq4B,GCHb/X,EAAe,SAC1BlO,EACAmO,GAEA,GAAInO,EACF,OAAOA,EAAcpI,MAAK,SAACnI,GAAD,OAAUA,EAAKyL,kBAAoBiT,MAIpD+X,EAAyB,SACpCz3B,EACA03B,EACAnmB,GAEA,IAAIvI,EAA0B,GAC5B2uB,GAAwB,EAC1B,GAAID,GAAc13B,EAAe,CAAC,IAAD,WACpB6B,GACLC,OAAOC,UAAUC,eAAeC,KAAKy1B,EAAY71B,KAC/C61B,EAAW71B,GAAK0P,cAAc3R,OAAS,EACzC83B,EAAW71B,GAAK0P,cAAc9O,SAAQ,SAACod,GACrC,IAAIC,EAAcL,EAAalO,EAAesO,GAE5CC,IACCA,EAAYC,oBAAoB7d,SAC/BlC,EAAcK,yBAEdyf,EAAYC,oBAAoBngB,QAAU,IAE5CoJ,GAAUA,EAAO5G,KAAKs1B,EAAY71B,OAItCmH,GAAUA,EAAO5G,KAAKs1B,EAAY71B,MAhBxC,IAAK,IAAMA,KAAO61B,EAAa,EAApB71B,QAuBX81B,GAAe,EAEjB,OAAOA,EAAeD,EAAa1uB,GAGxBmT,EAA0B,SACrC5J,EACA6G,EACApZ,EACA03B,EACAnmB,EACAH,GAMA,IAAIlI,EAAwC,GAC1C0uB,EAA8C,GAC9CC,EAA+C,GAC/CC,GAAqB,EAsBvB,OApBEvlB,GACAklB,EAAuBz3B,EAAe03B,EAAYnmB,IAClD6H,IAEA0e,GAAY,EAMZF,GALA1uB,EAAU0H,YACR6mB,EAAuBz3B,EAAe03B,EAAYnmB,GAClD6H,EACA7G,GACA3P,QAAO,SAAC5B,GAAD,OAAUA,EAAKwQ,MAAQxQ,EAAKwQ,KAAKJ,SAAWA,MAC7BxO,QACtB,SAAC5B,GAAD,MAA0D,SAAhDA,EAAKyQ,mBAAmBnO,uBAEpCu0B,EAAiB3uB,EAAQtG,QACvB,SAAC5B,GAAD,MAA0D,WAAhDA,EAAKyQ,mBAAmBnO,wBAGtCoL,QAAQC,IAAI,wCACZD,QAAQC,IAAI,CAAEwN,wBAAyB5J,IACvC7D,QAAQC,IAAI,wCACLmpB,EACH,CAAEpxB,IAAKwC,EAASsT,SAAUob,EAAeP,UAAWQ,GACpD,MAGOE,EAA8B,SACzCliB,GAaA,MAAO,CAAEnP,IAPsCmP,EAOxB2G,SAN4B3G,EAASjT,QACxD,SAAC5B,GAAD,MAAsC,aAA5BA,EAAKyQ,sBAK6B4lB,UAHIxhB,EAASjT,QACzD,SAAC5B,GAAD,MAAsC,iBAA5BA,EAAKyQ,wBAKRumB,EAAa,SAACC,GACzB,IAAMvvB,EAAOwvB,MAASC,OAAO,cACvBC,EAAYF,IAAOxvB,EAAM,cACzB2vB,EAAWH,IAAOD,EAAW,cAInC,QAFcG,EAAUE,KAAKD,GAEjB,IAODE,EAAqB,SAChCC,EACApnB,GAOA,MAAO,CACL1K,IAAK8xB,EAAc51B,QAAO,SAAC5B,GAAD,OAAUA,EAAKwQ,KAAKJ,SAAWA,KACzDoG,KAAMghB,EAAc51B,QAClB,SAAC5B,GAAD,OACEA,EAAKwQ,KAAKJ,SAAWA,IACE,YAAtBpQ,EAAKgV,cAA8BgiB,EAAWh3B,EAAKwQ,KAAKmC,aACzD3S,EAAKmV,kBAAoB,MAE7BtP,OAAQ2xB,EAAc51B,QACpB,SAAC5B,GAAD,OACEA,EAAKwQ,KAAKJ,SAAWA,IACE,YAAtBpQ,EAAKgV,cAA8BgiB,EAAWh3B,EAAKwQ,KAAKmC,aACzD3S,EAAKmV,iBAAmB,MAE5BrI,OAAQ0qB,EAAc51B,QACpB,SAAC5B,GAAD,OACEA,EAAKwQ,KAAKJ,SAAWA,GACC,YAAtBpQ,EAAKgV,eACJgiB,EAAWh3B,EAAKwQ,KAAKmC,gBAwCxB8kB,E,kDAIJ,WAAYp5B,GAA4B,IAAD,8BACrC,cAAMA,IAiBRwF,WAAa,SAACtE,GACZ,EAAKuE,SAAS,CAAEhF,QAASS,KAnBY,EAsBvCyc,kBAAoB,SAACzc,GACnB,EAAKuE,SAAS,CAAEmY,eAAgB1c,KAvBK,EA0BvC2c,gBAAkB,SAAC3c,GACjB,EAAKuE,SAAS,CAAEqY,aAAc5c,KA3BO,EA8BvC8c,mBAAqB,SAAC9c,GACpB,EAAKuE,SAAS,CAAEwY,gBAAiB/c,KA/BI,EAkCvCgd,oCAAsC,SAAChd,GACrC,EAAKuE,SAAS,CAAE0Y,iCAAkCjd,KAnCb,EAsCvCkd,0BAA4B,SAACld,GAC3B,EAAKuE,SAAS,CAAE4Y,uBAAwBnd,KAvCH,EA0CvCod,mBAAqB,SAACpd,GACpB,EAAKuE,SAAS,CAAE8Y,gBAAiBrd,KA3CI,EA8CvCm4B,kBAAoB,SAACn4B,GACnB,EAAKuE,SAAS,CAAE6zB,eAAgBp4B,KA/CK,EAkDvCyb,eAAiB,SAACzb,GAChB,EAAKuE,SAAS,CAAExF,YAAaiB,KAnDQ,EAsDvCN,iBAAmB,SAACM,GAClB,EAAKuE,SAAS,CAAE9E,cAAeO,KAvDM,EA0DvCK,cAAgB,SAACL,GACf,EAAKuE,SAAS,CAAEtE,WAAYD,KA3DS,EA8DvCq4B,cAAgB,SAAC73B,GACf,EAAK1B,MAAM8f,aAAape,EAAQE,KAAK,SAACyE,EAAiBC,GAChDD,IACCC,EAAI/F,OAAS,GACf,EAAKP,MAAMuG,eAAe,CACxBC,MAAOF,EACPG,MAAOC,IAAgBC,SAG3B,EAAKqX,oBAAmB,OAK5B,EAAKhe,MAAM+f,oBACTre,EAAQE,KACR,SAACyE,EAAiBC,GACXD,IACCC,EAAI/F,OAAS,GACf,EAAKP,MAAMuG,eAAe,CACxBC,MAAOF,EACPG,MAAOC,IAAgBC,SAG3B,EAAKyX,2BAA0B,QAtFA,EA4FvCnY,kBAAoB,WAclB,GAZmD,OAAjD,EAAKjG,MAAMkG,aAAa5F,sBACgC,IAAxD,EAAKN,MAAMkG,aAAa5F,qBAAqBC,OAE7C,EAAKP,MAAMmG,wBAAwB,EAAKmY,oBAExC,EAAKte,MAAMkG,aAAa5F,qBAAqBC,OAAS,IACrD,EAAKyG,MAAMrG,gBAEZ,EAAKC,iBAAiB,EAAKZ,MAAMkG,aAAa5F,qBAAqB,IACnE,EAAKge,oBAAmB,IAGc,OAApC,EAAKte,MAAMyB,qBACb,EAAKzB,MAAMoG,oBACT,SAACC,EAAiBC,EAAa5C,GAU3B,IAAIyb,GATN,EAAKb,mBAAmBjY,GACxB,EAAKb,WAAWa,IACXA,GAAUC,EAAI/F,QACjB,EAAKP,MAAMuG,eAAe,CACxBC,MAAOF,EACPG,MAAOC,IAAgBC,UAGtBN,GAAU3C,GAAYA,EAASnD,OAAS,MAE3C4e,EAAgBzb,EAASoG,MAAK,SAACnI,GAAD,OAAUA,EAAKyd,cAE3C,EAAK7d,cAAc4d,EAAcvd,KAEjC,EAAKL,cAAcmC,EAASA,EAASnD,OAAS,GAAGqB,cAKpD,GACL,EAAK5B,MAAMyB,qBAAqBlB,OAAS,IACxC,EAAKyG,MAAM7F,WAAWZ,OACvB,CACA,IAAI4e,GACJA,EAAgB,EAAKnf,MAAMyB,qBAAqBqI,MAC9C,SAACnI,GAAD,OAAUA,EAAKyd,eAGf,EAAK7d,cAAc4d,EAAcvd,KACjC,EAAK23B,cAAcpa,KAEnB,EAAK5d,cACH,EAAKvB,MAAMyB,qBACT,EAAKzB,MAAMyB,qBAAqBlB,OAAS,GACzCqB,KAEJ,EAAK23B,cACH,EAAKv5B,MAAMyB,qBACT,EAAKzB,MAAMyB,qBAAqBlB,OAAS,KAI/C,EAAK+d,oBAAmB,GACxB,EAAK9Y,YAAW,GAI0B,OAA1C,EAAKxF,MAAMkG,aAAagM,eACxB,EAAKlS,MAAMkG,aAAagM,cAAc3R,QAAU,EAEhD,EAAKP,MAAM2f,iBAAiB,EAAKrB,oBAEjC,EAAKA,oBAAmB,IAqCiC,OAAzD,EAAKte,MAAM+W,gBAAgBsK,2BACsC,IAAhE,EAAKrhB,MAAM+W,gBAAgBsK,0BAA0B9gB,QACpD,EAAKyG,MAAMmX,mCAEb,EAAKne,MAAMggB,8BACT,MACA,SAAC3Z,EAAiBC,GACXD,IACCC,EAAI/F,OAAS,GACf,EAAKP,MAAMuG,eAAe,CACxBC,MAAOF,EACPG,MAAOC,IAAgBC,SAG3B,EAAKuX,qCAAoC,QApNZ,EA2NvCmB,eAAiB,SAAC9B,GAChB,EAAKS,oBAAmB,GACxB,EAAKI,2BAA0B,GAC/B,EAAKib,mBAAkB,GACvB,EAAKr5B,MAAM8f,aAAavC,GAAW,SAAClX,EAAiBC,GACnD,IAAKD,EAAQ,CACX,IAAImzB,GAAkB,EAClBlzB,EAAI/F,OAAS,GAAKi5B,IACpB,EAAKx5B,MAAMuG,eAAe,CACxBC,MAAOF,EACPG,MAAOC,IAAgBC,SAEzB6yB,GAAS,GAEX,EAAKxb,oBAAmB,OAI5B,EAAKhe,MAAM+f,oBACTxC,GACA,SAAClX,EAAiBC,GAChB,IAAKD,EAAQ,CACX,IAAImzB,GAAkB,EAClBlzB,EAAI/F,OAAS,GAAKi5B,IACpB,EAAKx5B,MAAMuG,eAAe,CACxBC,MAAOF,EACPG,MAAOC,IAAgBC,SAEzB6yB,GAAS,GAEX,EAAKpb,2BAA0B,OAKhC,EAAKpX,MAAMiX,iBAAoB,EAAKjX,MAAMqX,wBAC7C,EAAKgb,mBAAkB,IA5PzB,EAAKryB,MAAQ,CACXvG,SAAS,EACTmd,gBAAgB,EAChBE,cAAc,EACdG,iBAAiB,EACjBE,kCAAkC,EAClCE,wBAAwB,EACxBE,iBAAiB,EACjB+a,gBAAgB,EAChBr5B,YAAaqW,kBAAgB8C,iBAC7BzY,cAAe,KACfQ,WAAY,IAduB,E,0CAmQvC,WACE,OAAI6I,KAAKhD,MAAMvG,SAA+C,OAApCuJ,KAAKhK,MAAMyB,qBAEjC,qBAAK7B,UAAU,kEAAf,6BAM2C,IAA3CoK,KAAKhK,MAAMyB,qBAAqBlB,OAC3B,cAAC0J,EAAA,EAAD,IAIP,gCAEE,cAAC,EAAD,CACEhK,YAAa+J,KAAKhD,MAAM/G,YACxB0c,eAAgB3S,KAAK2S,eACrBlc,QAASuJ,KAAKhD,MAAMsyB,eACpBh5B,qBAAsB0J,KAAKhK,MAAMkG,aAAa5F,qBAC9CI,kBAAkB,EAClBC,cAAeqJ,KAAKhD,MAAMrG,cAC1BC,iBAAkBoJ,KAAKpJ,iBACvBO,WAAY6I,KAAKhD,MAAM7F,WACvBI,cAAeyI,KAAKzI,cACpBE,qBAAsBuI,KAAKhK,MAAMyB,qBACjC4d,eAAgBrV,KAAKqV,iBAOtBrV,KAAKhK,MAAM+Z,WACVqe,EACEpuB,KAAKhD,MAAMrG,cACXqJ,KAAKhK,MAAM8Z,QACX9P,KAAKhK,MAAMkG,aAAagM,gBAExB,0BAAStS,UAAU,OAAnB,UACE,qBAAKA,UAAU,uCAAf,sCAGA,cAACuK,EAAA,EAAD,CACEzF,WAAY,CACV,CACE8B,MAAO,cACP4D,KAAMC,IACNC,UAAW,OACXlD,MAAOsxB,EACL/X,YACEyX,EACEpuB,KAAKhD,MAAMrG,cACXqJ,KAAKhK,MAAM8Z,QACX9P,KAAKhK,MAAMkG,aAAagM,eAE1BlI,KAAKhK,MAAM+Z,UACX/P,KAAKhD,MAAM7F,aAEbkG,IAAI9G,QAER,CACEiG,MAAO,iBACP4D,KAAMC,IACNC,UAAW,QACXlD,MAAOsxB,EACL/X,YACEyX,EACEpuB,KAAKhD,MAAMrG,cACXqJ,KAAKhK,MAAM8Z,QACX9P,KAAKhK,MAAMkG,aAAagM,eAE1BlI,KAAKhK,MAAM+Z,UACX/P,KAAKhD,MAAM7F,aAEbgc,SAAS5c,QAEb,CACEiG,MAAO,kBACP4D,KAAMC,IACNC,UAAW,OACXlD,MAAOsxB,EACL/X,YACEyX,EACEpuB,KAAKhD,MAAMrG,cACXqJ,KAAKhK,MAAM8Z,QACX9P,KAAKhK,MAAMkG,aAAagM,eAE1BlI,KAAKhK,MAAM+Z,UACX/P,KAAKhD,MAAM7F,aAEb62B,UAAUz3B,SAGhBgK,YAAa,EAnDf,SAqDE,qBAAK3K,UAAU,sBAAf,SACE,cAAC4K,EAAA,EAAD,CACEC,QAAS,CACPlG,OAAQ,CAAC,WAAY,aACrBmG,OAAQ,CACNC,MAAM,EACNC,SAAU,SACVC,gBAAiB,SACjBC,SAAU,OACVC,WAAY,CACV5F,WAAY,EACZ6F,SAAU,IAGdC,YAAa,CACXC,IAAK,CACHC,MAAO,CACL5G,OAAQ,CACNoG,MAAM,EACN7F,KAAM,CACJ6F,MAAM,EACNG,SAAU,OAEVM,MAAO,UACPC,SAAU,IAEZnK,MAAO,CACLyJ,MAAM,EACNG,SAAU,OACVQ,WAAY,+BACZF,MAAO,UACPC,QAAS,GACTE,UAAW,SAAUC,GACnB,OAAOA,IAGXC,MAAO,CACLd,MAAM,EACNe,MAAO,QACPN,MAAO,UACPG,UAAW,SAAUI,GACnB,OAAOA,EAAEC,QAAQC,aAAaC,QAC5B,SAACC,EAAWC,GACV,OAAOD,EAAIC,IAEb,SAQdhH,OAAQ,CAAC,UAAW,YAEtBH,OAAQ,CACN6zB,EACE/X,YACEyX,EACEpuB,KAAKhD,MAAMrG,cACXqJ,KAAKhK,MAAM8Z,QACX9P,KAAKhK,MAAMkG,aAAagM,eAE1BlI,KAAKhK,MAAM+Z,UACX/P,KAAKhD,MAAM7F,aAEbgc,SAAS5c,OACXm4B,EACE/X,YACEyX,EACEpuB,KAAKhD,MAAMrG,cACXqJ,KAAKhK,MAAM8Z,QACX9P,KAAKhK,MAAMkG,aAAagM,eAE1BlI,KAAKhK,MAAM+Z,UACX/P,KAAKhD,MAAM7F,aAEb62B,UAAUz3B,QAEd0L,MAAO,aAWlB6Q,EACC9S,KAAKhK,MAAM+W,gBAAgBgG,SAC3B/S,KAAKhK,MAAM+Z,UACX/P,KAAKhD,MAAMrG,cACXqJ,KAAKhK,MAAM8Z,QACX9P,KAAKhK,MAAMkG,aAAagM,cACxBlI,KAAKhD,MAAM7F,aAEX,0BAASvB,UAAU,OAAnB,UACE,qBAAKA,UAAU,uCAAf,yCAGA,cAACuK,EAAA,EAAD,CACEzF,WAAY,CACV,CACE8B,MAAO,cACP4D,KAAMC,IACNC,UAAW,OACXlD,MAAO0V,EACL9S,KAAKhK,MAAM+W,gBAAgBgG,SAC3B/S,KAAKhK,MAAM+Z,UACX/P,KAAKhD,MAAMrG,cACXqJ,KAAKhK,MAAM8Z,QACX9P,KAAKhK,MAAMkG,aAAagM,cACxBlI,KAAKhD,MAAM7F,YACVkG,IAAI9G,QAET,CACEiG,MAAO,aACP4D,KAAMC,IACNC,UAAW,QACXlD,MAAO0V,EACL9S,KAAKhK,MAAM+W,gBAAgBgG,SAC3B/S,KAAKhK,MAAM+Z,UACX/P,KAAKhD,MAAMrG,cACXqJ,KAAKhK,MAAM8Z,QACX9P,KAAKhK,MAAMkG,aAAagM,cACxBlI,KAAKhD,MAAM7F,YACVgc,SAAS5c,QAEd,CACEiG,MAAO,kBACP4D,KAAMC,IACNC,UAAW,OACXlD,MAAO0V,EACL9S,KAAKhK,MAAM+W,gBAAgBgG,SAC3B/S,KAAKhK,MAAM+Z,UACX/P,KAAKhD,MAAMrG,cACXqJ,KAAKhK,MAAM8Z,QACX9P,KAAKhK,MAAMkG,aAAagM,cACxBlI,KAAKhD,MAAM7F,YACV62B,UAAUz3B,SAGjBgK,YAAa,EA1Cf,SA4CE,qBAAK3K,UAAU,sBAAf,SACE,cAAC4K,EAAA,EAAD,CACEC,QAAS,CACPlG,OAAQ,CAAC,OAAQ,aACjBmG,OAAQ,CACNC,MAAM,EACNC,SAAU,SACVC,gBAAiB,SACjBC,SAAU,OACVC,WAAY,CACV5F,WAAY,EACZ6F,SAAU,IAGdC,YAAa,CACXC,IAAK,CACHC,MAAO,CACL5G,OAAQ,CACNoG,MAAM,EACN7F,KAAM,CACJ6F,MAAM,EACNG,SAAU,OAEVM,MAAO,UACPC,SAAU,IAEZnK,MAAO,CACLyJ,MAAM,EACNG,SAAU,OACVQ,WAAY,+BACZF,MAAO,UACPC,QAAS,GACTE,UAAW,SAAUC,GACnB,OAAOA,IAGXC,MAAO,CACLd,MAAM,EACNe,MAAO,QACPN,MAAO,UACPG,UAAW,SAAUI,GACnB,OAAOA,EAAEC,QAAQC,aAAaC,QAC5B,SAACC,EAAWC,GACV,OAAOD,EAAIC,IAEb,SAQdhH,OAAQ,CAAC,UAAW,YAEtBH,OAAQ,CACNiY,EACE9S,KAAKhK,MAAM+W,gBAAgBgG,SAC3B/S,KAAKhK,MAAM+Z,UACX/P,KAAKhD,MAAMrG,cACXqJ,KAAKhK,MAAM8Z,QACX9P,KAAKhK,MAAMkG,aAAagM,cACxBlI,KAAKhD,MAAM7F,YACVgc,SAAS5c,OACZuc,EACE9S,KAAKhK,MAAM+W,gBAAgBgG,SAC3B/S,KAAKhK,MAAM+Z,UACX/P,KAAKhD,MAAMrG,cACXqJ,KAAKhK,MAAM8Z,QACX9P,KAAKhK,MAAMkG,aAAagM,cACxBlI,KAAKhD,MAAM7F,YACV62B,UAAUz3B,QAEf0L,MAAO,aAWhBjC,KAAKhK,MAAM+W,gBAAgBsK,2BAC1B+W,EACEpuB,KAAKhD,MAAMrG,cACXqJ,KAAKhK,MAAM8Z,QACX9P,KAAKhK,MAAMkG,aAAagM,gBAExB,0BAAStS,UAAU,OAAnB,UACE,qBAAKA,UAAU,uCAAf,4CAGA,cAACuK,EAAA,EAAD,CACEzF,WAAY,CACV,CACE8B,MAAO,mBACP4D,KAAMC,IACNC,UAAW,OACXlD,MAAO8xB,EACLlQ,YACE/R,YACEmhB,EACEpuB,KAAKhD,MAAMrG,cACXqJ,KAAKhK,MAAM8Z,QACX9P,KAAKhK,MAAMkG,aAAagM,eAE1BlI,KAAKhK,MAAM+W,gBAAgBsK,0BAC3B,OAEF,OAEFrX,KAAKhD,MAAM7F,YACXkG,IAAI9G,QAER,CACEiG,MAAO,oBACP4D,KAAMC,IACNC,UAAW,QACXlD,MAAO8xB,EACLlQ,YACE/R,YACEmhB,EACEpuB,KAAKhD,MAAMrG,cACXqJ,KAAKhK,MAAM8Z,QACX9P,KAAKhK,MAAMkG,aAAagM,eAE1BlI,KAAKhK,MAAM+W,gBAAgBsK,0BAC3B,OAEF,OAEFrX,KAAKhD,MAAM7F,YACXgX,KAAK5X,QAET,CACEiG,MAAO,sBACP4D,KAAMC,IACNC,UAAW,SACXlD,MAAO8xB,EACLlQ,YACE/R,YACEmhB,EACEpuB,KAAKhD,MAAMrG,cACXqJ,KAAKhK,MAAM8Z,QACX9P,KAAKhK,MAAMkG,aAAagM,eAE1BlI,KAAKhK,MAAM+W,gBAAgBsK,0BAC3B,OAEF,OAEFrX,KAAKhD,MAAM7F,YACXqG,OAAOjH,SAuBbgK,YAAa,EAnFf,SAqFE,qBAAK3K,UAAU,sBAAf,SACE,cAAC4K,EAAA,EAAD,CACEC,QAAS,CACPlG,OAAQ,CAAC,OAAQ,UAEjBmG,OAAQ,CACNC,MAAM,EACNC,SAAU,SACVC,gBAAiB,SACjBC,SAAU,OACVC,WAAY,CACV5F,WAAY,EACZ6F,SAAU,IAGdC,YAAa,CACXC,IAAK,CACHC,MAAO,CACL5G,OAAQ,CACNoG,MAAM,EACN7F,KAAM,CACJ6F,MAAM,EACNG,SAAU,OAEVM,MAAO,UACPC,SAAU,IAEZnK,MAAO,CACLyJ,MAAM,EACNG,SAAU,OACVQ,WAAY,+BACZF,MAAO,UACPC,QAAS,GACTE,UAAW,SAAUC,GACnB,OAAOA,IAGXC,MAAO,CACLd,MAAM,EACNe,MAAO,QACPN,MAAO,UACPG,UAAW,SAAUI,GACnB,OAAOA,EAAEC,QAAQC,aAAaC,QAC5B,SAACC,EAAWC,GACV,OAAOD,EAAIC,IAEb,SAQdhH,OAAQ,CAAC,UAAW,YAGtBH,OAAQ,CACNq0B,EACElQ,YACE/R,YACEmhB,EACEpuB,KAAKhD,MAAMrG,cACXqJ,KAAKhK,MAAM8Z,QACX9P,KAAKhK,MAAMkG,aAAagM,eAE1BlI,KAAKhK,MAAM+W,gBACRsK,0BACH,OAEF,OAEFrX,KAAKhD,MAAM7F,YACXgX,KAAK5X,OACP24B,EACElQ,YACE/R,YACEmhB,EACEpuB,KAAKhD,MAAMrG,cACXqJ,KAAKhK,MAAM8Z,QACX9P,KAAKhK,MAAMkG,aAAagM,eAE1BlI,KAAKhK,MAAM+W,gBACRsK,0BACH,OAEF,OAEFrX,KAAKhD,MAAM7F,YACXqG,OAAOjH,QAiBX0L,MAAO,aAalBjC,KAAKhK,MAAM+Z,WACVqe,EACEpuB,KAAKhD,MAAMrG,cACXqJ,KAAKhK,MAAM8Z,QACX9P,KAAKhK,MAAMkG,aAAagM,gBAExB,cAAC,EAAD,CACE6lB,wBAAyBW,EACvB/X,YACEyX,EACEpuB,KAAKhD,MAAMrG,cACXqJ,KAAKhK,MAAM8Z,QACX9P,KAAKhK,MAAMkG,aAAagM,eAE1BlI,KAAKhK,MAAM+Z,UACX/P,KAAKhD,MAAM7F,eAUpB2b,EACC9S,KAAKhK,MAAM+W,gBAAgBgG,SAC3B/S,KAAKhK,MAAM+Z,UACX/P,KAAKhD,MAAMrG,cACXqJ,KAAKhK,MAAM8Z,QACX9P,KAAKhK,MAAMkG,aAAagM,cACxBlI,KAAKhD,MAAM7F,aAEX,cAAC,EAAD,CACE+2B,aACEpb,EACE9S,KAAKhK,MAAM+W,gBAAgBgG,SAC3B/S,KAAKhK,MAAM+Z,UACX/P,KAAKhD,MAAMrG,cACXqJ,KAAKhK,MAAM8Z,QACX9P,KAAKhK,MAAMkG,aAAagM,cACxBlI,KAAKhD,MAAM7F,cAUlB6I,KAAKhK,MAAM+W,gBAAgBsK,2BAC1B+W,EACEpuB,KAAKhD,MAAMrG,cACXqJ,KAAKhK,MAAM8Z,QACX9P,KAAKhK,MAAMkG,aAAagM,gBAExB,cAAC,EAAD,CACEkkB,gBAAiB8C,EACflQ,YACE/R,YACEmhB,EACEpuB,KAAKhD,MAAMrG,cACXqJ,KAAKhK,MAAM8Z,QACX9P,KAAKhK,MAAMkG,aAAagM,eAE1BlI,KAAKhK,MAAM+W,gBAAgBsK,0BAC3B,OAEF,OAEFrX,KAAKhD,MAAM7F,qB,GA32BEmM,aAg5BhBmsB,EAAgBjsB,aAzBL,SAAC,GAcnB,IAbJ3G,EAaG,EAbHA,KACA6G,EAYG,EAZHA,YACAxH,EAWG,EAXHA,aACA2L,EAUG,EAVHA,OACAgI,EASG,EATHA,YACA9C,EAQG,EARHA,gBASA,MAAO,CACLlQ,OACApF,qBAAsBiM,EAAYC,gBAClCzH,eACA4T,QAASjI,EAAOiI,QAChBC,UAAWF,EAAYE,UACvBhD,qBAIkD,CACpD6I,iBACAC,mBACA1Z,6BACA2Z,kBACAH,sBACAI,yBACAC,mCACA5Z,uBACAG,qBAT2BiH,CAU1B4rB,I,iCCnlCI,IAAKv1B,EAMA6D,EAuCAgyB,EA7CZ,sG,SAAY71B,K,kBAAAA,E,kBAAAA,E,iBAAAA,M,cAMA6D,K,YAAAA,E,gBAAAA,E,UAAAA,M,cAuCAgyB,K,cAAAA,E,gBAAAA,E,0BAAAA,E,cAAAA,E,cAAAA,E,0CAAAA,E,gCAAAA,E,wCAAAA,E,YAAAA,E,gCAAAA,E,2CAAAA,M,6TC7BGC,EAzD0B,SAAC35B,GA2CxC,OACE,sBAAKJ,UAAU,qBAAf,UACE,sBAAKA,UAAU,mCAAf,UACE,cAAC,IAAD,IACA,sBAAMA,UAAS,yBAAf,8CAKF,4BAnDmB,WACrB,IAAI+J,EAAsB,6BACtBwnB,EAAoB,GAqCxB,OApC0B,IAAtBnxB,EAAM+E,KAAKxE,OACboJ,EACE,+HAKsB,IAAjB3J,EAAM45B,QAAoB55B,EAAM+E,KAAKxE,OAAS,GACrDP,EAAM+E,KAAK3B,SAAQ,SAACuuB,EAAU5wB,GAC5BowB,GAAaQ,EAASnrB,MAClBzF,GAASf,EAAM+E,KAAKxE,OAAS,IAAG4wB,GAAa,SAGnDxnB,EACE,iFACmD,IACjD,sBAAM/J,UAAU,gBAAhB,sBAFF,QAEuD,IACrD,sBAAMA,UAAU,gBAAhB,SAAiCuxB,IAHnC,qCAOwB,IAAjBnxB,EAAM45B,QAAmB55B,EAAM+E,KAAKxE,OAAS,IACtDP,EAAM+E,KAAK3B,SAAQ,SAACuuB,EAAU5wB,GAC5BowB,GAAaQ,EAASnrB,MAClBzF,GAASf,EAAM+E,KAAKxE,OAAS,IAAG4wB,GAAa,MAC7CpwB,IAAUf,EAAM+E,KAAKxE,OAAS,GAAKQ,EAAQ,IAAGowB,GAAa,YAGjExnB,EACE,iDACkB,sBAAM/J,UAAU,gBAAhB,kBADlB,kCAEwB,IACtB,sBAAMA,UAAU,gBAAhB,SAAiCuxB,IAHnC,QAOGxnB,EAYDkwB,SCIKC,EAxD0B,SAAC95B,GA0CxC,OACE,sBAAKJ,UAAU,qBAAf,UACE,sBAAKA,UAAU,mCAAf,UACE,cAAC,IAAD,IACA,sBAAMA,UAAS,yBAAf,8CAKF,4BAlDmB,WACrB,IAAI+J,EAAsB,6BACtBowB,EAAoB,GAoCxB,OAnC0B,IAAtB/5B,EAAM+E,KAAKxE,OACboJ,EACE,qGAIsB,IAAjB3J,EAAM45B,QAAoB55B,EAAM+E,KAAKxE,OAAS,GACrDP,EAAM+E,KAAK3B,SAAQ,SAACquB,EAAU1wB,GAC5Bg5B,GAAatI,EAASjrB,MAClBzF,GAASf,EAAM+E,KAAKxE,OAAS,IAAGw5B,GAAa,SAGnDpwB,EACE,gFACkD,IAChD,sBAAM/J,UAAU,gBAAhB,sBAFF,QAEuD,IACrD,sBAAMA,UAAU,gBAAhB,SAAiCm6B,IAHnC,qCAOwB,IAAjB/5B,EAAM45B,QAAmB55B,EAAM+E,KAAKxE,OAAS,IACtDP,EAAM+E,KAAK3B,SAAQ,SAACquB,EAAU1wB,GAC5Bg5B,GAAatI,EAASjrB,MAClBzF,GAASf,EAAM+E,KAAKxE,OAAS,IAAGw5B,GAAa,MAC7Ch5B,IAAUf,EAAM+E,KAAKxE,OAAS,GAAKQ,EAAQ,IAAGg5B,GAAa,YAGjEpwB,EACE,iDACkB,sBAAM/J,UAAU,gBAAhB,kBADlB,kCAEwB,IACtB,sBAAMA,UAAU,gBAAhB,SAAiCm6B,IAHnC,QAOGpwB,EAYDkwB,SCMKG,EAzDwB,SAACh6B,GA2CtC,OACE,sBAAKJ,UAAU,qBAAf,UACE,sBAAKA,UAAU,mCAAf,UACE,cAAC,IAAD,IACA,sBAAMA,UAAS,yBAAf,4CAKF,4BAnDmB,WACrB,IAAI+J,EAAsB,6BACtBswB,EAAkB,GAqCtB,OApC0B,IAAtBj6B,EAAM+E,KAAKxE,OACboJ,EACE,qJAKsB,IAAjB3J,EAAM45B,QAAoB55B,EAAM+E,KAAKxE,OAAS,GACrDP,EAAM+E,KAAK3B,SAAQ,SAAC82B,EAAQn5B,GAC1Bk5B,GAAWC,EAAO1zB,MACdzF,GAASf,EAAM+E,KAAKxE,OAAS,IAAG05B,GAAW,SAGjDtwB,EACE,gFACkD,IAChD,sBAAM/J,UAAU,gBAAhB,sBAFF,QAEuD,IACrD,sBAAMA,UAAU,gBAAhB,SAAiCq6B,IAHnC,wFAOwB,IAAjBj6B,EAAM45B,QAAmB55B,EAAM+E,KAAKxE,OAAS,IACtDP,EAAM+E,KAAK3B,SAAQ,SAAC82B,EAAQn5B,GAC1Bk5B,GAAWC,EAAO1zB,MACdzF,GAASf,EAAM+E,KAAKxE,OAAS,IAAG05B,GAAW,MAC3Cl5B,IAAUf,EAAM+E,KAAKxE,OAAS,GAAKQ,EAAQ,IAAGk5B,GAAW,YAG/DtwB,EACE,iDACkB,sBAAM/J,UAAU,gBAAhB,kBADlB,mCAEwB,sBAAMA,UAAU,gBAAhB,SAAiCq6B,IAFzD,QAOGtwB,EAYDkwB,SCEKM,EAtDwB,SAACn6B,GAwCtC,OACE,sBAAKJ,UAAU,qBAAf,UACE,sBAAKA,UAAU,mCAAf,UACE,cAAC,IAAD,IACA,sBAAMA,UAAS,yBAAf,4CAKF,4BAhDmB,WACrB,IAAI+J,EAAsB,6BACtBywB,EAAkB,GAkCtB,OAjC0B,IAAtBp6B,EAAM+E,KAAKxE,OACboJ,EACE,mGAEsB,IAAjB3J,EAAM45B,QAAoB55B,EAAM+E,KAAKxE,OAAS,GACrDP,EAAM+E,KAAK3B,SAAQ,SAACi3B,EAAQt5B,GAC1Bq5B,GAAWC,EAAO7zB,MACdzF,GAASf,EAAM+E,KAAKxE,OAAS,IAAG65B,GAAW,SAGjDzwB,EACE,gFACkD,IAChD,sBAAM/J,UAAU,gBAAhB,sBAFF,QAEuD,IACrD,sBAAMA,UAAU,gBAAhB,SAAiCw6B,IAHnC,2EAOwB,IAAjBp6B,EAAM45B,QAAmB55B,EAAM+E,KAAKxE,OAAS,IACtDP,EAAM+E,KAAK3B,SAAQ,SAACi3B,EAAQt5B,GAC1Bq5B,GAAWC,EAAO7zB,MACdzF,GAASf,EAAM+E,KAAKxE,OAAS,IAAG65B,GAAW,MAC3Cr5B,IAAUf,EAAM+E,KAAKxE,OAAS,GAAKQ,EAAQ,IAAGq5B,GAAW,YAG/DzwB,EACE,iDACkB,sBAAM/J,UAAU,gBAAhB,kBADlB,mCAEwB,sBAAMA,UAAU,gBAAhB,SAAiCw6B,IAFzD,QAOGzwB,EAYDkwB,SClBJS,E,kDAIJ,WAAYt6B,GAA6B,IAAD,8BACtC,cAAMA,IAQRiG,kBAAoB,WACW,OAAzB,EAAKjG,MAAMsrB,WACbiP,cACE,SAACl0B,EAAiBtB,EAA0BuB,IAC3B,IAAXD,GAA4B,OAATtB,GACrB,EAAK/E,MAAMw6B,0BAA0Bz1B,GACrC,EAAKU,SAAS,CACZhF,SAAS,KAGX,EAAKgF,SAAS,CACZhF,SAAS,OAOa,OAA9B,EAAKuG,MAAMyzB,gBACX,EAAKz6B,MAAM06B,SAASR,OAAOtgB,OAAOrZ,QAAU,GAE5C,EAAKkF,SAAS,CACZhF,SAAS,IAEX,EAAKT,MAAM26B,oBACT,EAAK36B,MAAM06B,SAASR,OAAOtgB,OAAO/Y,KAAI,SAACunB,GAAD,OAASA,EAAIpkB,eACnD,SAACqC,EAAQ4zB,EAASW,IACD,IAAXv0B,GACF,EAAKZ,SAAS,CACZg1B,eAAgBR,EAChBx5B,SAAS,QAKZ,EAAKgF,SAAS,CAAEhF,SAAS,EAAOg6B,eAAgB,MAzCvD,EAAKzzB,MAAQ,CACXvG,SAAS,EACTg6B,eAAgB,MALoB,E,0CA+CxC,WAAU,IAAD,OACP,IACyB,IAAvBzwB,KAAKhD,MAAMvG,SACc,OAAzBuJ,KAAKhK,MAAMsrB,WACmB,OAA9BthB,KAAKhD,MAAMyzB,eAEX,OACE,sBAAK76B,UAAU,iFAAf,UACE,qBAAKA,UAAU,kCAAf,8CAGA,cAACyX,EAAA,EAAD,OAKN,IAAIwjB,EAAoC,GACpCC,EAAmC,GACnCC,EAAiC,GAET,OAAxB/wB,KAAKhK,MAAM06B,WAEb1wB,KAAKhK,MAAM06B,SAASjJ,SAAS7X,OAAOxW,SAAQ,SAAC43B,GAC3C,GAA6B,OAAzB,EAAKh7B,MAAMsrB,UAAoB,CACjC,IAAI2P,EAAS,EAAKj7B,MAAMsrB,UAAUyO,UAAUjwB,MAC1C,SAACtG,GAAD,OAAaA,EAAQ03B,gBAAkBF,EAAGh3B,mBAE7B4O,IAAXqoB,GACFJ,EAAc93B,KAAK,CACjBiN,GAAIirB,EAAOC,cACX10B,MAAOy0B,EAAOvJ,oBAOtB1nB,KAAKhK,MAAM06B,SAAS/I,SAAS/X,OAAOxW,SAAQ,SAAC43B,GAC3C,GAA6B,OAAzB,EAAKh7B,MAAMsrB,UAAoB,CACjC,IAAI2P,EAAS,EAAKj7B,MAAMsrB,UAAU6F,UAAUrnB,MAC1C,SAACtG,GAAD,OAAaA,EAAQ23B,gBAAkBH,EAAGh3B,mBAE7B4O,IAAXqoB,GACFH,EAAa/3B,KAAK,CAChBiN,GAAIirB,EAAOE,cACX30B,MAAOy0B,EAAOvgB,oBAOtB1Q,KAAKhK,MAAM06B,SAASL,OAAOzgB,OAAOxW,SAAQ,SAAC43B,GACzC,GAA6B,OAAzB,EAAKh7B,MAAMsrB,UAAoB,CACjC,IAAI2P,EAAS,EAAKj7B,MAAMsrB,UAAU8O,QAAQtwB,MACxC,SAACtG,GAAD,OAAaA,EAAQ43B,cAAgBJ,EAAGh3B,mBAE3B4O,IAAXqoB,GACFF,EAAWh4B,KAAK,CACdiN,GAAIirB,EAAOG,YACX50B,MAAOy0B,EAAOI,mBAOxB,IAAMC,EACJ,sBAAM17B,UAAU,gBAAhB,SAAiCoK,KAAKhK,MAAMu7B,aAExCn7B,EACJ,sBAAMR,UAAU,gBAAhB,SAAiCoK,KAAKhK,MAAM4K,WAG9C,OACE,sBAAKhL,UAAU,OAAf,UACE,sBAAKA,UAAU,OAAf,UACE,oBAAIA,UAAU,sEAAd,mCAIA,sBAAKA,UAAU,6BAAf,UACE,wCAAW07B,KACX,2CAAcl7B,WAUlB,cAAC,EAAD,CACE2E,KAAM81B,EACNjB,OAAQ5vB,KAAKhK,MAAM06B,SAASjJ,SAASmI,SAGvC,cAAC,EAAD,CACE70B,KAAM+1B,EACNlB,OAAQ5vB,KAAKhK,MAAM06B,SAAS/I,SAASiI,SAGvC,cAAC,EAAD,CACE70B,KAAMg2B,EACNnB,OAAQ5vB,KAAKhK,MAAM06B,SAASL,OAAOT,SAGrC,cAAC,EAAD,CACE70B,KAAMiF,KAAKhD,MAAMyzB,eAAe55B,KAAI,SAACunB,GAAD,MAAU,CAC5CpY,GAAIoY,EAAIoT,YACRh1B,MAAO4hB,EAAIqT,gBAEb7B,OAAQ5vB,KAAKhK,MAAM06B,SAASR,OAAON,gB,GApKhBtsB,aAkLdzN,MAAMC,KACnB0N,aARsB,SAAC,GAKvB,MAAO,CAAE8d,UADN,EAHHA,UAI8BoQ,mBAGL,CACvBC,8BACAhB,yBACAH,+BAHFhtB,CAIG8sB,I,uGC5JQ72B,EAAgB,SAC3Byb,EACA3B,GAEA,OAAO2B,EAAWpV,MAAK,SAACnI,GAAD,OAAUA,EAAKC,MAAQ2b,MAwC1Cqe,EAA4D,CAChE,CACEp5B,IAAKk3B,IAAqCp3B,MAC1CkE,MAAO,kBACPH,QAAQ,GAEV,CACE7D,IAAKk3B,IAAqChxB,YAC1ClC,MAAO,cACPH,QAAQ,GAEV,CACE7D,IAAKk3B,IAAqC31B,OAC1CyC,MAAO,SACPH,QAAQ,GAEV,CACE7D,IAAKk3B,IAAqC9wB,MAC1CpC,MAAO,QACPH,QAAQ,GAEV,CACE7D,IAAKk3B,IAAqC3wB,oBAC1CvC,MAAO,kBACPH,QAAQ,GAEV,CACE7D,IAAKk3B,IAAqC12B,oBAC1CwD,MAAO,uBACPH,QAAQ,GAEV,CACE7D,IAAKk3B,IAAqCvwB,mBAC1C3C,MAAO,sBACPH,QAAQ,GAEV,CACE7D,IAAKk3B,IAAqCrwB,KAC1C7C,MAAO,oBACPH,QAAQ,GAEV,CACE7D,IAAKk3B,IAAqC91B,eAC1C4C,MAAO,sBACPH,QAAQ,GAEV,CACE7D,IAAKk3B,IAAqCr5B,eAC1CmG,MAAO,WACPH,QAAQ,IA+CNw1B,E,kDACJ,WAAY77B,GAAkB,IAAD,8BAC3B,cAAMA,IA2BRwF,WAAa,SAACtE,GACZ,EAAKuE,SAAS,CAAEhF,QAASS,KA7BE,EAgC7BwE,sBAAwB,SAACxE,GACvB,EAAKuE,SAAS,CAAEE,mBAAoBzE,KAjCT,EAoC7BK,cAAgB,SAACL,GACf,EAAKuE,SAAS,CAAEtE,WAAYD,KArCD,EAwC7B46B,sBAAwB,SAAC56B,GACvB,EAAKuE,SAAS,CAAEs2B,mBAAoB76B,KAzCT,EA4C7B86B,yBAA2B,SAAC96B,GAC1B,EAAKuE,SAAS,CAAEw2B,sBAAuB/6B,KA7CZ,EAgD7B0E,gBAAkB,SAAC1E,GACjB,EAAKuE,SAAS,CAAErF,aAAcc,KAjDH,EAoD7Bf,kBAAoB,SAACe,GACnB,EAAKuE,SAAS,CAAEI,eAAgB3E,KArDL,EAwD7BuS,gBAAkB,SAACvS,GACjB,EAAKuE,SAAS,CAAE+N,aAActS,KAzDH,EA4D7BqS,YAAc,SAACrS,GACb,EAAKuE,SAAS,CAAE6N,SAAUpS,KA7DC,EAgE7ByS,aAAe,SAACzS,GACd,EAAKuE,SAAS,CAAEiO,UAAWxS,KAjEA,EAoE7BmS,eAAiB,SAACnS,GAChB,EAAKuE,SAAS,CAAE2N,YAAalS,KArEF,EAwE7B6E,uBAAyB,SAAC7E,GACxB,EAAKuE,SAAS,CAAEO,oBAAqB9E,KAzEV,EA4E7B6c,eAAiB,SAAC7c,GAChB,EAAKuE,SAAS,CAAEsV,YAAa7Z,KA7EF,EAgF7B2Z,uBAAyB,SACvB3Z,GAKA,EAAKuE,SAAS,CAAE2V,oBAAqBla,KAtFV,EAyF7Byb,eAAiB,SAACzb,GAChB,EAAKuE,SAAS,CAAExF,YAAaiB,KA1FF,EA6F7Bg7B,iBAAmB,SAACh7B,GAClB,EAAKuE,SAAS,CAAE02B,cAAej7B,KA9FJ,EAiG7B8qB,aAAe,SAAC9qB,GACd,EAAKuE,SAAS,CAAEsmB,UAAW7qB,KAlGA,EAqG7B4qB,aAAe,SACb5qB,GAKA,EAAKuE,SAAS,CAAEomB,UAAW3qB,KA3GA,EA8G7Bsd,gBAAkB,SAACtd,GACjB,EAAKuE,SAAS,CAAEgZ,aAAcvd,KA/GH,EAkH7BN,iBAAmB,SAACM,GAClB,EAAKuE,SAAS,CAAE9E,cAAeO,KAnHJ,EAsH7Bk7B,wBAA0B,SAACzrB,GAEzB,EAAK3Q,MAAMuf,8BACT5O,GACA,SAACtK,EAAiBC,GAChB,EAAKd,WAAWa,GACXA,GACCC,EAAI/F,QACN,EAAKP,MAAMuG,eAAe,CACxBC,MAAOF,EACPG,MAAOC,IAAgBC,YASjC,EAAK3G,MAAM+G,6BACT4J,GACA,SAACtK,EAAiBC,GAChB,EAAKd,WAAWa,GACZC,EAAI/F,QACN,EAAKP,MAAMuG,eAAe,CACxBC,MAAOF,EACPG,MAAOC,IAAgBC,YAO/B,EAAK3G,MAAMiH,gBAAe,SAACZ,EAAiBC,GAC1C,EAAKZ,sBAAsBW,IACZ,IAAXA,GACEC,EAAI/F,OAAS,GACf,EAAKP,MAAMuG,eAAe,CACxBC,MAAOF,EACPG,MAAOC,IAAgBC,aA7JJ,EAqK7BV,kBAAoB,YAEgD,IAA9DwZ,YAAgB,EAAKzf,MAAM6G,KAAKC,0BAClC,EAAKs1B,wBAAwB,EAAKp8B,MAAM6G,KAAKC,0BAGM,OAAjD,EAAK9G,MAAMkG,aAAa5F,sBACxB,EAAKN,MAAMkG,aAAa5F,qBAAqBC,OAE7C,EAAKP,MAAMmG,yBACT,SAACE,EAAiBtB,GAChB,EAAKS,WAAWa,IACXA,GAAUtB,GAAQA,EAAKxE,OAAS,IACnC,EAAKK,iBAAiBmE,EAAK,KAGzB,IADA0a,YAAgB,EAAKzf,MAAM6G,KAAKC,0BAGhC,EAAKs1B,wBAAwBr3B,EAAK,GAAG/D,wBAErC,EAAKo7B,wBACH,EAAKp8B,MAAM6G,KAAKC,8BAMhB,EAAK9G,MAAMkG,aAAa8W,4BAClC,EAAKpc,iBAAiB,EAAKZ,MAAMkG,aAAa5F,qBAAqB,IACnE,EAAK87B,wBACH,EAAKp8B,MAAMkG,aAAa5F,qBAAqB,GAAGU,0BAnM3B,EA0M7B4S,QAAU,SAACC,GAEP,EAAK7M,MAAMwM,eAAiBK,GACH,QAAzB,EAAK7M,MAAM0M,UAEX,EAAKC,aAAa,QAElB,EAAKA,aAAa,OAEpB,EAAKF,gBAAgBI,GACrB,EAAKN,aAAY,IApNU,EAuN7B8oB,WAAa,SAACh2B,GACZ,IAAIsD,EAAiB,GACrB,OAAQtD,GACN,KAAKxC,IAAkBC,QACrB6F,EAAS,UACT,MACF,KAAK9F,IAAkBM,QACrBwF,EAAS,mBACT,MACF,KAAK9F,IAAkBK,OACrByF,EAAS,qBACT,MACF,QACEA,EAAS,MAIb,OAAOA,GAxOoB,EA2O7BzC,qBAAuB,SACrBC,GAMA,IAAIqkB,EAIE,CAAC,CAAEhlB,MAAO,aAAcY,MAAOD,EAAY5G,OAAQkH,KAAM,QACzD60B,EAAc75B,OAAOmX,OAAO/V,KAN7B,WAOIuQ,GACPoX,EAAOzoB,KAAK,CACVyD,MAAO6N,YAAsBioB,EAAYloB,IACzChN,MAAOD,EAAY5D,QAAO,SAAC6kB,GAAD,OAASA,EAAI/hB,SAAWi2B,EAAYloB,MAC3D7T,OACHkH,KAAM60B,EAAYloB,MALtB,IAAK,IAAIA,KAAKkoB,EAAc,EAAnBloB,GAQT,OAAOoX,GAhQoB,EAmQ7B+Q,oBAAsB,SAAC/5B,GACrB,IAAIzB,EAAgB,EAAKiG,MAAMm1B,cAAc3P,WAC3C,SAAC7qB,GAAD,OAAUA,EAAKa,MAAQA,KAErBiqB,EACF,EAAKzlB,MAAMm1B,cACb1P,EAAS1rB,GAAOsF,QAAUomB,EAAS1rB,GAAOsF,OAC1C,EAAK61B,iBAAiBzP,GACEA,EAAS3iB,MAAK,SAACnI,GAAD,OAA0B,IAAhBA,EAAK0E,UAEnD,EAAK2lB,cAAa,GAElB,EAAKA,cAAa,GAIpB,EAAKwQ,4BAnRsB,EAsR7BA,yBAA2B,WAEzB,GAAI,EAAKx1B,MAAM5G,aAAc,CAC3B,IAAIsB,EAAkB,GAEpBA,EAD4B,QAA1B,EAAKsF,MAAM7F,WACH,cAEA,EAAK6F,MAAM7F,WAAWU,kBAElC,EAAK8a,eACH,kBACE,EAAK3V,MAAM5G,aAAaC,eACxB,MACAqB,GAIN,GACE,EAAK1B,MAAM4G,iBACX,EAAK5G,MAAMkK,aACX,EAAKlK,MAAMyB,qBACX,CACA,IAAIsG,EAA0C,GAC1C6Y,EAAY,EAChB,IAAK,IAAMpe,KAAO,EAAKxC,MAAMkK,YAC3B,GAAIzH,OAAOC,UAAUC,eAAeC,KAAK,EAAK5C,MAAMkK,YAAa1H,GAAM,CACrE,IAAMgB,EAAU,EAAKxD,MAAMkK,YAAY1H,GACjCpC,EAAe6H,YACnB,EAAKjI,MAAM4G,gBACXpD,EAAQ0E,aAEJC,EAAc1E,EAClB,EAAKzD,MAAMyB,qBACX+B,EAAQ4E,YAENC,EAAyC,CAC3C2H,GAAI4Q,EAAE5c,WACN1B,MAAOkB,EAAQwE,UAAUM,MAAQ,IAAM9E,EAAQwE,UAAUO,MACzDxE,OAAkC,MAA1BP,EAAQwE,UAAUS,IAAc,OAAS,SACjDC,YAAalF,EAAQmF,KACrBC,MAAOpF,EAAQqF,aACfC,MAAOtF,EAAQsF,MACfC,oBAAqBC,OAAOxF,EAAQyF,MAAMC,QAAQ,IAClD7I,eAAgBD,EACZA,EAAaC,eACb,mBACJ8I,mBAAoB/I,EAChBA,EAAaY,uBAAuBC,yBACpC,IACJ+B,oBAAqBmF,EACjBA,EAAYtG,kBACZ,kBACJwH,KAAMC,YAAK9F,EAAQ+F,WACnB3F,eAAgB,EAAKy4B,WAAW74B,EAAQ6C,SAG1C,IAAK,IAAM7D,KAAO,EAAKwE,MAAMm1B,cAEzB15B,OAAOC,UAAUC,eAAeC,KAC9B,EAAKoE,MAAMm1B,cACX35B,KAGG,EAAKwE,MAAMm1B,cAAc35B,GAAK6D,eAC1BgC,EAAU,EAAKrB,MAAMm1B,cAAc35B,GAAKA,MAIrDuF,EAAShF,KAAKsF,GACduY,IAGJ,EAAKkb,sBAAsB/zB,GAC3BA,EAAW,GACX6Y,EAAI,IAhWqB,EAoW7B/Y,mBAAqB,SACnBC,EACAlB,GAEA,GACkB,OAAhBkB,GACoB,OAApBlB,GACoC,OAApC,EAAK5G,MAAMyB,qBAEX,OAAO,KACT,IAAIsG,EAAuC,GAE3C,IAAK,IAAMvF,KAAOsF,EAAa,CAC7B,IAAMtE,EAAUsE,EAAYtF,GAC5B,GAAIgB,EAAQwE,UAAW,CACrB,IAAM5H,EAAe6H,YACnBrB,EACApD,EAAQ0E,aAEJC,EAAc1E,EAClB,EAAKzD,MAAMyB,qBACX+B,EAAQ4E,YAENC,EAAsC,CACxC/F,MAAOkB,EAAQwE,UAAUM,MAAQ,IAAM9E,EAAQwE,UAAUO,MACzDC,eAAgBhF,EAAQ5B,IACxBmC,OAC4B,MAA1BP,EAAQwE,UAAUS,IACdf,IAAgBC,KAChBD,IAAgBE,OACtBc,YAAalF,EAAQmF,KACrBC,MAAOpF,EAAQqF,aACfC,MAAOtF,EAAQsF,MACfC,oBAAqBC,OAAOxF,EAAQyF,MAAMC,QAAQ,IAClDhB,YAAa9H,EACTA,EAAa8H,YACb,mBACJ7H,eAAgBD,EACZA,EAAaC,eACb,mBACJ8I,mBAAoB/I,EAChBA,EAAaY,uBAAuBC,yBACpC,GACJmI,sBAAuBhJ,EACnBA,EAAaY,uBAAuBA,uBACpC,GACJgC,oBAAqBmF,EACjBA,EAAYtG,kBACZ,kBACJwH,KAAMC,YAAK9F,EAAQ+F,WACnB3F,eAAgB,EAAKy4B,WAAW74B,EAAQ6C,QACxCA,OAAQ7C,EAAQ6C,OAChBvD,uBAAwBU,EAAQ4E,YAElCL,EAAShF,KAAKsF,IAGlB,OAAON,GA7ZoB,EAga7BklB,mBAAqB,SAACD,GACpB,IAAIP,EACF,EAAKzlB,MAAMm1B,cACb,IAAK,IAAM35B,KAAOiqB,EACZ,EAAKJ,gBAAgBI,EAASjqB,GAAKA,OACrCiqB,EAASjqB,GAAK6D,QAAU2mB,GAI5B,EAAKkP,iBAAiBzP,GACtB,EAAKT,cAAcgB,GACnB,EAAKwP,4BA3asB,EA8a7BnQ,gBAAkB,SAAC7pB,GACjB,OACEA,IAAQk3B,IAAqCp3B,OAC7CE,IAAQk3B,IAAqC91B,gBAC7CpB,IAAQk3B,IAAqC12B,qBAC7CR,IAAQk3B,IAAqCr5B,gBAC7CmC,IAAQk3B,IAAqCrwB,MAC7C7G,IAAQk3B,IAAqC3wB,qBAC7CvG,IAAQk3B,IAAqChxB,aAC7ClG,IAAQk3B,IAAqCvwB,oBAvbpB,EA8b7BszB,oBAAsB,SAACp8B,GACrB,IAAIqB,EAAkB,GAEpBA,EAD4B,QAA1B,EAAKsF,MAAM7F,WACH,cAEA,EAAK6F,MAAM7F,WAAWU,kBAElC,EAAK8a,eAAe,kBAAoBtc,EAAiB,MAAQqB,IArctC,EAwc7Bg7B,eAAiB,WACf,GAAK9a,SAASC,iBAAiB,4BAA4BthB,OAA3D,CAQA,IAAImB,EAAkB,GAEpBA,EAD4B,QAA1B,EAAKsF,MAAM7F,WACH,cAEA,EAAK6F,MAAM7F,WAAWU,kBAElC,IAAMkgB,EAA4BH,SAASI,eAAe,kBACpDC,EAA0C,CAC9CC,OAAQ,EAAKliB,MAAM6G,KAAK2R,KAAKlQ,MAAQ,IAAM,EAAKtI,MAAM6G,KAAK2R,KAAKjQ,MAChE/B,MAAO,EAAKQ,MAAM/G,YAClBkiB,aAAc,WACdC,QAAS,EAAKpb,MAAM5G,aAChB,EAAK4G,MAAM5G,aAAaC,eACxB,eACJ0R,OAAQrQ,EACR2gB,OAAQ,6BACR3Y,UAAW,EAAK1C,MAAM5G,aAClB,EAAK4G,MAAM5G,aAAaY,uBACrBC,yBACH,IAEN8gB,GAASQ,YAAYN,EAAgBF,EAAO,EAAKhE,qBA5B/C,EAAK/d,MAAMuG,eAAe,CACxBC,MAAM,sCACNC,MAAOC,IAAgBob,WA5cA,EAye7BtY,qBAAuB,SACrB1B,EACA2B,EACAtB,EACAuB,EACAkB,GAEA,IAAIjB,EAAqC7B,EAuBzC,MAtB0B,QAAtB2B,IACFE,EAASA,EAAOpG,QAAO,SAAC5B,GAAD,OAAUA,EAAK0E,SAAWoD,MAG/CmB,IACFjB,EAASA,EAAOpG,QACd,SAAC5B,GAAD,OAAUA,EAAKuG,cAAgB0C,EAAS1C,gBAIxB,QAAhBC,IACFwB,EAASA,EAAOpG,QACd,SAAC5B,GAAD,OAAUA,EAAKmB,yBAA2BqF,EAAYvG,QAIxC,QAAd8H,IACFC,EAASA,EAAOpG,QACd,SAAC5B,GAAD,OAAUA,EAAKwH,qBAAuBO,EAAUzI,6BAI7C0I,GAvgBoB,EA0gB7BgzB,eAAiB,SACfv4B,GAEA,IAAIuF,OAASiJ,EAMb,OAJI,EAAK5S,MAAMkK,cACbP,EAAS,EAAK3J,MAAMkK,YAAYJ,MAC9B,SAACnI,GAAD,OAAUA,EAAKC,MAAQwC,EAAYoE,mBAEhCmB,GAhhBP,EAAK3C,MAAQ,CACX7F,WAAY,MACZV,SAAS,EACTkF,oBAAoB,EACpBo2B,mBAAoB,KACpBE,sBAAuB,MACvB77B,aAAc,KACdyF,gBAAgB,EAChB2N,aAAc,GACdF,UAAU,EACVI,UAAW,MACXN,YAAa,GACbpN,oBAAqB,GACrB+U,aAAa,EACbK,oBAAqB,KACrBnb,YAAa,GACbk8B,cAAeP,EACf7P,WAAW,EACXF,UAAW,KACXpN,cAAc,EACd9d,cAAe,MACfi8B,gBAAiB,MAxBQ,E,0CAshB7B,WAAU,IA3pBVlqB,EACAC,EA0pBS,OACP,OACE3I,KAAKhK,MAAMyB,sBACgC,IAA3CuI,KAAKhK,MAAMyB,qBAAqBlB,OAEzB,cAAC0J,EAAA,EAAD,IAIP,gCACE,eAACoE,EAAA,EAAD,YAEI,IADDoR,YAAgBzV,KAAKhK,MAAM6G,KAAKC,2BAE/B,sBAAKlH,UAAU,qBAAf,UACE,sBAAMA,UAAU,6BAAhB,mCAGkD,OAAjDoK,KAAKhK,MAAMkG,aAAa5F,qBACvB,cAAC+W,EAAA,EAAD,IAC0D,IAAxDrN,KAAKhK,MAAMkG,aAAa5F,qBAAqBC,OAC/C,sDAEA,cAAC,WAAD,UAgBGyJ,KAAKhK,MAAMkG,aAAa5F,qBAAqBO,KAC5C,SAACc,EAAMyS,GAAP,OACE,sBACElU,QAAS,WACP,EAAKU,iBAAiBe,GACtB,EAAKy6B,wBACHz6B,EAAKX,yBAITpB,UAAS,uDACsB,QAA7B,EAAKoH,MAAMrG,eACX,EAAKqG,MAAMrG,cAAcK,yBACvBW,EAAKX,uBACH,qFACA,8DALG,+CARX,UAgBgC,QAA7B,EAAKgG,MAAMrG,eACZ,EAAKqG,MAAMrG,cAAcK,yBACvBW,EAAKX,uBACL,cAAC,KAAD,IAEA,cAAC,KAAD,IAEF,+BAAOW,EAAKV,6BAhBPmT,EAAI,WAwBvB,sBAAKxU,UAAU,GAAf,UACE,qBAAKA,UAAU,6BAAf,8BACA,sBACEM,QAAS,kBAAM,EAAKse,iBAAgB,IACpC5e,UAAU,wNAFZ,UAI6B,QAA1BoK,KAAKhD,MAAM7F,WAAX,UACMwhB,YACD3Y,KAAKhD,MAAM7F,WAAWU,mBAF3B,cAGUmI,KAAKhD,MAAM7F,WAAW4Q,QAC7B,cACJ,cAAC,IAAD,CAAQnS,UAAU,gCAItB,sBAAKA,UAAU,OAAf,UACE,qBAAKA,UAAU,kCAAf,0BACCoK,KAAKhD,MAAMrB,oBAIN,OAHNqE,KAAKnC,mBACHmC,KAAKhK,MAAMkK,YACXF,KAAKhK,MAAM4G,iBAEX,cAACyQ,EAAA,EAAD,IAEArN,KAAK9C,qBACH8C,KAAKnC,mBACHmC,KAAKhK,MAAMkK,YACXF,KAAKhK,MAAM4G,kBAEb/F,KAAI,SAACc,EAAMZ,GAAP,OACJ,qBACEb,QAAS,kBAAM,EAAK87B,yBAAyBr6B,EAAK8F,OADpD,SAIE,cAAC,IAAD,CACEjB,MAAO7E,EAAK6E,MACZY,MAAOzF,EAAKyF,MACZqH,OAAQ,EAAKzH,MAAMi1B,wBAA0Bt6B,EAAK8F,QAL/C9F,EAAK6E,MAAQzF,YAa5B,oCAEE,sBAAKnB,UAAU,uBAAf,UACE,qBAAKA,UAAU,aAAf,SACE,sBAAKA,UAAU,gCAAf,UACE,sBAAMA,UAAU,mCAAhB,iCAGA,sBACEM,QAAS,kBAAM,EAAKC,mBAAkB,IACtCP,UAAU,sBAFZ,UAIE,sBAAMA,UAAU,gBAAhB,iCACA,sBAAMA,UAAU,mDAAhB,SAC+B,OAA5BoK,KAAKhD,MAAM5G,aACR4J,KAAKhD,MAAM5G,aAAaC,eACxB,yBAKZ,qBAAKT,UAAU,aAAf,SACE,sBAAKA,UAAU,mBAAf,UACGoK,KAAKhK,MAAMkK,aAAeF,KAAKhK,MAAMkK,YAAY3J,OAAS,GACzD,sBAAKX,UAAU,wDAAf,UACE,cAAC,IAAD,CAAUA,UAAU,2BACpB,sBAAMA,UAAU,gBAAhB,uBACA,wBACEA,UAAU,wGACVwB,SAAU4I,KAAKhD,MAAMvG,QACrBP,QAAS,WACP,EAAKs8B,2BACL,EAAK3hB,uBAAuB,CAC1BC,WAAY,QACZzU,QAAQ,KAPd,mBAaA,wBACEzG,UAAS,gHACPoK,KAAKhD,MAAM+T,aAAe,eAE5B7a,QAAS,kBAAM,EAAKw8B,kBACpBt7B,SAAU4I,KAAKhD,MAAMvG,SAAWuJ,KAAKhD,MAAM+T,YAL7C,oBAWJ,sBACE7a,QAAS,kBAAM,EAAKC,mBAAkB,IACtCP,UAAU,gJAFZ,UAIE,cAAC,IAAD,CAAaA,UAAU,YAJzB,gCAYN,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,uBACEyB,SAAU,SAACC,GAAD,OAAO,EAAK+R,eAAe/R,EAAEE,OAAON,QAC9CuG,KAAK,OACLvG,MAAO8I,KAAKhD,MAAMoM,YAClBpG,YAAY,YACZpN,UAAU,6DACVwB,SACE4I,KAAKhD,MAAMrB,oBAIL,OAHNqE,KAAKnC,mBACHmC,KAAKhK,MAAMkK,YACXF,KAAKhK,MAAM4G,qBAKnB,qBAAKhH,UAAU,yBAAf,SACE,wBAAOA,UAAU,gBAAgBoQ,GAAG,iBAApC,UACE,uBAAOpQ,UAAU,sEAAjB,SACE,+BACE,oBAAIA,UAAU,YAAd,eACA,oBACEA,UAAU,2BACVM,QAAS,kBAAM,EAAK0T,QAAQ,UAF9B,SAIE,sBAAKhU,UAAU,0BAAf,6BACkB,cAAC,IAAD,SAGpB,oBAAIA,UAAU,YAAd,yBACA,oBACEA,UAAU,2BACVM,QAAS,kBAAM,EAAK0T,QAAQ,WAF9B,SAIE,sBAAKhU,UAAU,0BAAf,oBACS,cAAC,IAAD,SAGX,oBAAIA,UAAU,YAAd,mBACA,oBACEA,UAAU,2BACVM,QAAS,kBAAM,EAAK0T,QAAQ,wBAF9B,SAIE,sBAAKhU,UAAU,0BAAf,mBACQ,cAAC,IAAD,SAGV,oBACEA,UAAU,2BACVM,QAAS,kBAAM,EAAK0T,QAAQ,mBAF9B,SAIE,sBAAKhU,UAAU,0BAAf,sBACW,cAAC,IAAD,SAGb,oBACEA,UAAU,2BACVM,QAAS,kBAAM,EAAK0T,QAAQ,uBAF9B,SAIE,sBAAKhU,UAAU,0BAAf,uBACY,cAAC,IAAD,SAGd,oBACEA,UAAU,2BACVM,QAAS,kBAAM,EAAK0T,QAAQ,mBAF9B,SAIE,sBAAKhU,UAAU,0BAAf,oBACS,cAAC,IAAD,SAGX,oBACEA,UAAU,2BACVM,QAAS,kBAAM,EAAK0T,QAAQ,wBAF9B,SAIE,sBAAKhU,UAAU,0BAAf,qBACU,cAAC,IAAD,SAGZ,oBACEA,UAAU,2BACVM,QAAS,kBAAM,EAAK0T,QAAQ,SAF9B,SAIE,sBAAKhU,UAAU,0BAAf,kBACO,cAAC,IAAD,cAKb,gCACGoK,KAAKhD,MAAMrB,mBACV,cAAC8O,EAAA,EAAD,CAAcG,KAAM,KAId,OAHJ5K,KAAKnC,mBACLmC,KAAKhK,MAAMkK,YACXF,KAAKhK,MAAM4G,iBAEb,cAAC6N,EAAA,EAAD,CAAcG,KAAM,KAUP,IATX5K,KAAKR,qBACLQ,KAAKnC,mBACHmC,KAAKhK,MAAMkK,YACXF,KAAKhK,MAAM4G,iBAEboD,KAAKhD,MAAMi1B,sBACXjyB,KAAKhD,MAAM7F,WACX6I,KAAKhD,MAAMrG,cACXqJ,KAAKhD,MAAM5G,cACXG,OACF,6BACE,oBAAI2T,QAAS,GAAItU,UAAU,YAA3B,SACE,sBAAKA,UAAU,oFAAf,UACE,cAAC,IAAD,CAAcA,UAAU,kEACxB,sBAAMA,UAAU,oBAAhB,yDAGA,qBAAKA,UAAU,wDAAf,SACE,qBAAIA,UAAU,2DAAd,UACE,oBACEM,QAAS,kBAAM,EAAKC,mBAAkB,IACtCP,UAAU,yCAFZ,gCAMA,oBAAIA,UAAU,uBAAd,gBACA,oBACEA,UAAU,0BACVM,QAAS,kBAAM,EAAKse,iBAAgB,IAFtC,0CAYVrK,YACEnK,KAAKhD,MAAMsM,UAv9B/BZ,EAy9BsB1I,KAAKR,qBACHQ,KAAKnC,mBACHmC,KAAKhK,MAAMkK,YACXF,KAAKhK,MAAM4G,iBAEboD,KAAKhD,MAAMi1B,sBACXjyB,KAAKhD,MAAM7F,WACX6I,KAAKhD,MAAMrG,cACXqJ,KAAKhD,MAAM5G,cAh+BnCuS,EAk+BsB3I,KAAKhD,MAAMoM,iBAh+B7BR,IAAcD,GAAiB,KAATA,EAAoBD,EACvCA,EAAQnP,QAAO,SAACsP,GACrB,IAAIC,EAGJ,IAAK,IAAIC,KAAQF,EAsBf,GArBAC,GAAO,EAEI,UAATC,GACS,WAATA,GACS,gBAATA,GACS,UAATA,GACS,UAATA,GACS,wBAATA,GACS,mBAATA,GACS,uBAATA,GACS,wBAATA,GACS,SAATA,GACS,mBAATA,GAEIF,EAAQE,KACVD,EACED,EAAQE,GAAO/O,WACZgP,cACAC,QAAQN,EAAKK,gBAAkB,GAGpCF,EAAM,MAEZ,OAAOA,MAq8BW9I,KAAKhD,MAAMwM,aACXxJ,KAAKhD,MAAM0M,WACX7S,KAAI,SAACc,EAAgCyS,GAAjC,OACJ,qBAEExU,UAAS,UACPwU,EAAI,IAAM,EAAI,cAAgB,WADvB,8HAGTlU,QAAS,kBAAM,EAAKuF,SAAS,CAAEm3B,gBAAiBj7B,KALlD,UAOE,oBAAI/B,UAAU,YAAd,SAA2BwU,EAAI,IAC/B,oBAAIxU,UAAU,YAAd,SAA2B+B,EAAKW,QAChC,oBAAI1C,UAAU,YAAd,SAA2B+B,EAAK+G,cAChC,oBAAI9I,UAAU,YAAd,SAA2B+B,EAAKoC,SAChC,oBAAInE,UAAU,YAAd,SAA2B+B,EAAKiH,QAChC,oBAAIhJ,UAAU,YAAd,SACG+B,EAAKoH,sBAER,oBAAInJ,UAAU,YAAd,SAA2B+B,EAAKtB,iBAChC,oBAAIT,UAAU,YAAd,SAA2B+B,EAAKwH,qBAChC,oBAAIvJ,UAAU,YAAd,SACGyU,YACC1S,EAAKiC,eAAeoP,iBAGxB,oBAAIpT,UAAU,YAAd,SACG+B,EAAKqB,sBAER,oBAAIpD,UAAU,YAAd,SAA2B+B,EAAK0H,SAxB3B+K,EAAI,gBAkCtBpK,KAAKhD,MAAMnB,gBACV,cAACqG,EAAA,EAAD,CACE1F,MACE,sBAAK5G,UAAU,mCAAf,UACE,cAAC,IAAD,CAAUA,UAAU,2BACpB,qBAAKA,UAAU,gBAAf,SACE,sBAAMA,UAAU,kCAAhB,uCAMNuM,UAAU,EACV1F,MAAO2F,IAAOC,QACdC,MAAO,WACL,EAAKnM,mBAAkB,GACvB,EAAK4F,uBAAuB,KAE9BwG,eAAe,EACfC,eAAgBC,IAAUC,WAC1BC,cAAc,EACdC,QAAS,CAAEpG,OAAO,GApBpB,SAsBE,qBAAK5G,UAAU,YAAf,SACkC,OAA/BoK,KAAKhK,MAAM4G,gBACV,cAACiG,EAAA,EAAD,CAAWpF,KAAMqF,IAAYC,OACW,IAAtC/C,KAAKhK,MAAM4G,gBAAgBrG,OAC7B,sBAAKX,UAAU,0DAAf,UACE,cAAC,KAAD,CAAUA,UAAU,aACpB,qBAAKA,UAAU,4CAAf,SACE,4EAIJ,qCACE,sBAAKA,UAAU,gBAAf,UACE,sBAAMA,UAAU,kCAAhB,qCAGA,uBACEyB,SAAU,SAACC,GAAD,OACR,EAAKyE,uBAAuBzE,EAAEE,OAAON,QAEvCuG,KAAK,OACL7H,UAAU,qCACVoN,YAAY,kBAGhB,qBACE9M,QAAS,WACP,EAAKu8B,oBAAoB,gBACzB,EAAK72B,gBAAgB,MACrB,EAAKzF,mBAAkB,GACvB,EAAK4F,uBAAuB,KAE9BnG,UAAU,iHAPZ,SASE,sBAAKA,UAAU,uBAAf,UACE,qBAAKA,UAAU,6BAAf,SACE,sBAAKA,UAAU,mCAAf,UACE,8BACE,cAAC,IAAD,CAAgBA,UAAU,yCAE5B,qBAAKA,UAAU,gBAAf,SACE,sBAAMA,UAAU,+CAAhB,iCAMN,qBAAKA,UAAU,4CAAf,SACE,qBAAKA,UAAU,uCAAf,SACE,qBAAKA,UAAU,yCAAf,6BAOPqN,YACCjD,KAAKhK,MAAM4G,gBACXoD,KAAKhD,MAAMhB,qBACXnF,KAAI,SAACc,EAAmBa,GAApB,OACJ,qBAEEtC,QAAS,WACP,EAAKu8B,oBAAoB96B,EAAKtB,gBAC9B,EAAKuF,gBAAgBjE,GACrB,EAAKxB,mBAAkB,GACvB,EAAK4F,uBAAuB,KAE9BnG,UAAU,iHARZ,SAUE,sBAAKA,UAAU,uBAAf,UACE,qBAAKA,UAAU,6BAAf,SACE,sBAAKA,UAAU,mCAAf,UACE,8BACE,cAAC,IAAD,CAAgBA,UAAU,yCAE5B,sBAAKA,UAAU,gBAAf,UACE,sBAAMA,UAAU,6CAAhB,SACG+B,EAAKtB,iBAER,uBAAMT,UAAU,+BAAhB,0BACgB,IACd,sBACEA,UAAU,2BACVsN,MAAO,CAAEC,UAAW,UAFtB,SAIGxL,EAAKyL,gBAAgBC,uBAG1B,sBAAMzN,UAAU,2EAAhB,SAEI+B,EAAKX,uBACFC,mCAMb,qBAAKrB,UAAU,4CAAf,SACE,qBAAKA,UAAU,uCAAf,SACE,qBAAKA,UAAU,yCAAf,4BAvCD4C,EAAM,aAyDxBwH,KAAKhD,MAAMyX,cACV,cAACvS,EAAA,EAAD,CACE1F,MACE,sBAAK5G,UAAU,mCAAf,UACE,cAAC,IAAD,CAAWA,UAAU,2BACrB,sBAAMA,UAAU,gBAAhB,gCAGJuM,UAAU,EACV1F,MAAO2F,IAAOC,QACdC,MAAO,kBAAM,EAAKkS,iBAAgB,IAClCjS,eAAe,EACfC,eAAgBC,IAAUC,WAC1BC,cAAc,EACdC,QAAS,CAAEpG,OAAO,GAbpB,SAeE,cAACmhB,EAAA,EAAD,CACEzI,WAAYlV,KAAKhK,MAAMyB,qBACvBymB,iBAAkB,SAAChnB,GACjB,EAAKK,cAAcL,GACnB,EAAKsd,iBAAgB,IAEvBwJ,WAAW,EACXC,gBAAiBje,KAAKhD,MAAM7F,eASE,OAAnC6I,KAAKhD,MAAMoU,sBACgC,IAA1CpR,KAAKhD,MAAMoU,oBAAoB/U,QAC7B,cAAC6F,EAAA,EAAD,CACE1F,MACE,qBAAK5G,UAAU,mCAAf,SAEE,sBAAKA,UAAU,gBAAf,UACE,sBAAMA,UAAU,mCAAhB,wCAGA,uBAAMA,UAAU,oCAAhB,wBACcoK,KAAKhD,MAAMoU,oBAAoBN,WAAY,IADzD,iBAON3O,UAAU,EACV1F,MAAO2F,IAAOC,QACdC,MAAO,kBAAM,EAAKuO,uBAAuB,OACzCtO,eAAe,EACfC,eAAgBC,IAAUogB,OAC1BlgB,cAAc,EACdC,QAAS,CAAEpG,OAAO,GArBpB,SAuBE,sBAAK5G,UAAU,OAAf,UACE,sBAAKA,UAAU,0CAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,0CACA,uBACE6H,KAAK,OACL7H,UAAS,kDACPoK,KAAKhD,MAAM6kB,WACsB,iBAAjC7hB,KAAKhD,MAAM6kB,UAAUroB,QACjB,iBACA,kBAJG,aAMTwJ,YAAY,qBACZ9L,MAAO8I,KAAKhD,MAAM/G,YAClBoB,SAAU,SAACC,GACT,EAAKwqB,aAAa,MAClB,EAAKnP,eAAerb,EAAEE,OAAON,QAE/BE,SAAU4I,KAAKhD,MAAMvG,UAEtBuJ,KAAKhD,MAAM6kB,WACuB,iBAAjC7hB,KAAKhD,MAAM6kB,UAAUroB,SACnB,sBAAM5D,UAAU,eAAhB,SACGoK,KAAKhD,MAAM6kB,UAAUvlB,SAI9B,sBAAK1G,UAAU,qBAAf,UACE,mDACA,qBAAKA,UAAU,0DAAf,SACGoK,KAAKhD,MAAMm1B,cAAct7B,KAAI,SAACc,EAAMZ,GAAP,OAC5B,sBAEEnB,UAAS,kCACP,EAAKysB,gBAAgB1qB,EAAKa,KACtB,iBACA,sBAENtC,QAAS,kBACP,EAAKmsB,gBAAgB1qB,EAAKa,MAC1B,EAAK+5B,oBAAoB56B,EAAKa,MAEhCgE,MACG,EAAK6lB,gBAAgB1qB,EAAKa,KAEvB,GADA,6BAbR,UAiBGb,EAAK0E,OACJ,cAAC,IAAD,CAAYzG,UAAU,0BAEtB,cAAC,IAAD,CAAwBA,UAAU,YAEpC,+BAAO+B,EAAK6E,UArBPzF,QAyBViJ,KAAKhD,MAAM6kB,WACuB,mBAAjC7hB,KAAKhD,MAAM6kB,UAAUroB,SACnB,sBAAM5D,UAAU,eAAhB,SACGoK,KAAKhD,MAAM6kB,UAAUvlB,YAKhC,sBAAK1G,UAAU,iCAAf,UACE,sBACEA,UAAS,yCACTM,QAAS,kBACP,EAAK+sB,mBAAmB,EAAKjmB,MAAM+kB,YAHvC,UAMG/hB,KAAKhD,MAAM+kB,UACV,cAAC,IAAD,CAAYnsB,UAAU,0BAEtB,cAAC,IAAD,CAAwBA,UAAU,YAEpC,iDAGDoK,KAAKhD,MAAM+0B,qBAAuB/xB,KAAKhD,MAAMvG,SAC5C,cAAC2iB,EAAA,EAAD,CACEC,SAAUrZ,KAAKhD,MAAM+0B,mBACrBzY,SAAUtZ,KAAKhD,MAAM/G,YACrBsjB,QAAQ,qBAYrBvZ,KAAKhD,MAAM41B,iBACV5yB,KAAK2yB,eAAe3yB,KAAKhD,MAAM41B,kBAC7B,cAAC1wB,EAAA,EAAD,CACE1F,MACE,qBAAK5G,UAAU,qCAQjBuM,UAAU,EACV1F,MAAO2F,IAAOC,QACdC,MAAO,kBAAM,EAAK7G,SAAS,CAAEm3B,gBAAiB,QAC9CrwB,eAAe,EACfC,eAAgBC,IAAUC,WAC1BC,cAAc,EACdC,QAAS,CAAEpG,OAAO,EAAMq2B,MAAM,GAhBhC,SAkBE,qBAAKj9B,UAAU,OAAf,SACE,cAAC,EAAD,CACE86B,SACE1wB,KAAK2yB,eAAe3yB,KAAKhD,MAAM41B,iBAAkBlC,SAEnDa,WAAYvxB,KAAKhD,MAAM41B,gBAAgBt6B,MACvCsI,SAAUZ,KAAKhD,MAAM41B,gBAAgBv8B,+B,GAvsCxBiN,aAwuCpBwvB,EAAoBtvB,aAtBT,SAAC,GAYnB,IAXJ3G,EAWG,EAXHA,KACA4G,EAUG,EAVHA,gBACAC,EASG,EATHA,YACAxH,EAQG,EARHA,aACAgE,EAOG,EAPHA,YAQA,MAAO,CACLrD,KAAMA,EACNpF,qBAAsBiM,EAAYC,gBAClC/G,gBAAiB6G,EAAgB7G,gBACjCV,eACAgE,iBAIsD,CACxDjD,mBACAsY,kCACApZ,6BACAY,iCACAR,qBAL+BiH,CAM9BquB","file":"static/js/22.9aa94261.chunk.js","sourcesContent":["import React from \"react\";\n\nconst LoadingLabels = () => {\n  return (\n    <div className=\"grid 2xl:grid-cols-5 xl:grid-cols-4 lg:grid-cols-3 sm:grid-cols-2 grid-cols-1 gap-4 items-center animate-pulse my-3 mr-5\">\n      <div className=\"flex items-center h-36 w-36 rounded-full bg-gray-400 space-x-2 mb-2 lg:mb-0 mx-auto\"></div>\n      <div className=\"flex items-center h-28 bg-gray-400 w-full rounded-md space-x-2 mb-2 lg:mb-0\"></div>\n      <div className=\"flex items-center h-28 bg-gray-400 w-full rounded-md space-x-2 mb-2 lg:mb-0\"></div>\n      <div className=\"flex items-center h-28 bg-gray-400 w-full rounded-md space-x-2 mb-2 lg:mb-0\"></div>\n      <div className=\"flex items-center h-28 bg-gray-400 w-full rounded-md space-x-2 mb-2 lg:mb-0\"></div>\n    </div>\n  );\n};\n\nexport default React.memo(LoadingLabels);\n","import React from \"react\";\nimport { AiFillDashboard } from \"react-icons/ai\";\nimport { BiFilterAlt } from \"react-icons/bi\";\nimport { MdBrightness1 } from \"react-icons/md\";\nimport { PositionAPI, SessionPlanInterface } from \"../../../interfaces\";\nimport { education_category } from \"../../../interfaces/education_category\";\n\ntype WaitingListBoardTitleProps = {\n  reportTitle: string;\n  education_categories: education_category[] | null;\n  loading: boolean;\n  loadingEducation: boolean;\n  thisEducation: education_category | \"all\";\n  allEducation: boolean;\n  setThisEducation: (value: education_category | \"all\") => void;\n  thisPeriod: string;\n  setThisPeriod: (value: string) => void;\n  setSelectPosition: (value: boolean) => void;\n  application_sessions: SessionPlanInterface[];\n  thisPosition: PositionAPI | null;\n};\n\nconst WaitingListBoardTitle: React.FC<WaitingListBoardTitleProps> = (props) => {\n  return (\n    <div className=\"mt-3 rounded flex flex-col md:flex-row md:justify-between items-start\">\n      <section>\n        <div className=\"flex flex-row items-center gap-3 mb-2\">\n          <AiFillDashboard className=\"text-7xl text-blue-600 hidden md:block\" />\n          <div className=\"flex flex-col\">\n            <span className=\"text-blue-600 text-3xl font-bold\">\n              {props.reportTitle}\n            </span>\n            <div\n              onClick={() => props.setSelectPosition(true)}\n              className=\"flex flex-row items-center gap-2 mt-1\"\n            >\n              <span className=\"text-gray-500\">Selected position: </span>\n              <span className=\"text-gray-700 text-lg font-bold underline cursor-pointer\">\n                {props.thisPosition !== null\n                  ? props.thisPosition.position_title\n                  : \"All positions\"}\n              </span>\n              <button\n                onClick={() => props.setSelectPosition(true)}\n                className=\"btn bg-blue-50 border border-blue-300 text-blue-600 cursor-pointer hover:bg-blue-100 flex flex-row items-center justify-center gap-2 text-sm\"\n              >\n                <BiFilterAlt className=\"text-xl\" />\n                Filter by position\n              </button>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* FILTER SECTION PERIOD && EDUCATION */}\n      <section className=\"w-full md:w-auto my-2 md:my-0\">\n        {/* EDUCATION CATEGORY sections */}\n        <section>\n          {props.education_categories && props.education_categories.length > 0 && (\n            <div className=\"flex items-start md:items-center justify-start md:justify-end gap-2\">\n              {props.allEducation && (\n                <div\n                  className={`w-auto ${\n                    props.loading || props.loadingEducation\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } ${\n                    props.thisEducation === \"all\"\n                      ? \"bg-blue-500 text-white font-bold\"\n                      : \"bg-gray-100 text-blue-800\"\n                  } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex items-center animate__animated animate__zoomIn`}\n                  onClick={() =>\n                    !props.loading &&\n                    !props.loadingEducation &&\n                    props.setThisEducation(\"all\")\n                  }\n                >\n                  <section className=\"flex-1\">\n                    <MdBrightness1 className=\"inline-block mr-1 text-xs\" />\n                    <span>All</span>\n                  </section>\n                </div>\n              )}\n              {props.education_categories.map((education, index) => (\n                <div\n                  key={education.education_institute_id + index}\n                  className={`w-auto ${\n                    props.loading ? \"cursor-not-allowed\" : \"cursor-pointer\"\n                  } ${\n                    props.thisEducation !== \"all\" &&\n                    education.education_institute_id ===\n                      props.thisEducation.education_institute_id\n                      ? \"bg-blue-500 text-white font-bold\"\n                      : \"bg-gray-100 text-blue-800\"\n                  } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex items-center animate__animated animate__zoomIn`}\n                  onClick={() =>\n                    !props.loading &&\n                    !props.loadingEducation &&\n                    props.setThisEducation(education)\n                  }\n                >\n                  <div className=\"flex-1\">\n                    <MdBrightness1 className=\"inline-block mr-1 text-xs\" />\n                    <span>{education.education_category_title}</span>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </section>\n        {/* end EDUCATION CATEGORY sections */}\n        <select\n          className={`bg-white text-gray-600 border border-gray-400 rounded p-2 focus:outline-none`}\n          value={props.thisPeriod}\n          disabled={props.loading || props.loadingEducation}\n          onChange={(e) => {\n            props.setThisPeriod(e.target.value);\n          }}\n        >\n          <option value=\"all\">All Session</option>\n          {props.application_sessions.map((session, item) => (\n            <option key={session._id + item} value={session._id}>\n              {session.session_plan_name}\n            </option>\n          ))}\n        </select>\n      </section>\n      {/* END FILTER SECTION PERIOD && EDUCATION */}\n    </div>\n  );\n};\n\nexport default React.memo(WaitingListBoardTitle);\n","import React from \"react\";\nimport { SessionPlanInterface } from \"../../../interfaces\";\nimport {\n  WaitingListDataInterface,\n  WaitingListStatus,\n} from \"../../../interfaces/waitingList\";\nimport { getPeriodById } from \"../../Admin/ExamReport/ExamReport\";\nimport VBarChart from \"../ChartComponents/VBarChart\";\n\ntype WaitingListChartProps = {\n  waitingListData: WaitingListDataInterface[];\n  sessions: SessionPlanInterface[];\n  thisGender: \"all\" | \"male\" | \"female\";\n  chartHeight?: number;\n};\n\nconst WaitingListChart: React.FC<WaitingListChartProps> = (props) => {\n  const getDistinctSession = (\n    waitingListData: WaitingListDataInterface[]\n  ): { sessionNames: string[]; sessionIds: string[] } => {\n    let names: string[] = [],\n      ids: string[] = [];\n\n    for (const key in waitingListData) {\n      if (Object.prototype.hasOwnProperty.call(waitingListData, key)) {\n        if (!ids.includes(waitingListData[key].waitingList_session_id)) {\n          ids.push(waitingListData[key].waitingList_session_id);\n          names.push(waitingListData[key].waitingList_session);\n        }\n      }\n    }\n\n    return { sessionNames: names, sessionIds: ids };\n  };\n\n  const FC_GetWaitingListChartData = (): {\n    waitingData: number[];\n    placementData: number[];\n    failedData: number[];\n    labels: string[];\n  } => {\n    let waitingDataArray: number[] = [],\n      placementDataArray: number[] = [],\n      failedDataArray: number[] = [],\n      labelArray: string[] = [],\n      labelIds: string[] = [];\n\n    const thisSessions = getDistinctSession(props.waitingListData);\n    thisSessions.sessionIds.forEach((thisSessionsKey) => {\n      let _waitingListData = props.waitingListData.filter(\n        (item) => item.waitingList_session_id === thisSessionsKey\n      );\n      for (const key in _waitingListData) {\n        if (Object.prototype.hasOwnProperty.call(_waitingListData, key)) {\n          const element = _waitingListData[key];\n          const thisPeriod = getPeriodById(\n            props.sessions,\n            element.waitingList_session_id\n          );\n          if (!labelIds.includes(element.waitingList_session_id)) {\n            labelIds.push(element.waitingList_session_id);\n            labelArray.push(\n              thisPeriod ? thisPeriod.session_plan_name : \"Unknown\"\n            );\n            if (props.thisGender !== \"all\") {\n              waitingDataArray.push(\n                _waitingListData.filter(\n                  (item) =>\n                    item.waitingList_session_id ===\n                      element.waitingList_session_id &&\n                    item.waiting_status === WaitingListStatus.WAITING &&\n                    item.gender.toString().toLocaleLowerCase() ===\n                      props.thisGender.toString().toLocaleLowerCase()\n                ).length\n              );\n              placementDataArray.push(\n                _waitingListData.filter(\n                  (item) =>\n                    item.waitingList_session_id ===\n                      element.waitingList_session_id &&\n                    item.waiting_status === WaitingListStatus.PLACED &&\n                    item.gender.toString().toLocaleLowerCase() ===\n                      props.thisGender.toString().toLocaleLowerCase()\n                ).length\n              );\n              failedDataArray.push(\n                _waitingListData.filter(\n                  (item) =>\n                    item.waitingList_session_id ===\n                      element.waitingList_session_id &&\n                    item.waiting_status === WaitingListStatus.PENDING &&\n                    item.gender.toString().toLocaleLowerCase() ===\n                      props.thisGender.toString().toLocaleLowerCase()\n                ).length\n              );\n            } else {\n              waitingDataArray.push(\n                _waitingListData.filter(\n                  (item) =>\n                    item.waitingList_session_id ===\n                      element.waitingList_session_id &&\n                    item.waiting_status === WaitingListStatus.WAITING\n                ).length\n              );\n              placementDataArray.push(\n                _waitingListData.filter(\n                  (item) =>\n                    item.waitingList_session_id ===\n                      element.waitingList_session_id &&\n                    item.waiting_status === WaitingListStatus.PLACED\n                ).length\n              );\n              failedDataArray.push(\n                _waitingListData.filter(\n                  (item) =>\n                    item.waitingList_session_id ===\n                      element.waitingList_session_id &&\n                    item.waiting_status === WaitingListStatus.PENDING\n                ).length\n              );\n            }\n          }\n        }\n      }\n    });\n\n    return {\n      waitingData: waitingDataArray,\n      placementData: placementDataArray,\n      failedData: failedDataArray,\n      labels: labelArray,\n    };\n  };\n\n  return (\n    <section className=\"my-3 max-w-full bg-white\">\n      <div className=\"flex items-center justify-between px-3\">\n        <span className=\"text-gray-600 font-semibold text-xl py-4 px-0\">\n          Waiting list chart\n        </span>\n      </div>\n      <div className=\"mb-4 pb-2 px-3\">\n        <VBarChart\n          labels={FC_GetWaitingListChartData().labels}\n          categoriesLabel={FC_GetWaitingListChartData().labels}\n          dataLabels={false}\n          yaxisText=\"(Applicants)\"\n          tooltipText=\"Applicants\"\n          series={[\n            {\n              name: \"Waiting list\",\n              data: FC_GetWaitingListChartData().waitingData,\n            },\n            {\n              name: \"Pending placement\",\n              data: FC_GetWaitingListChartData().failedData,\n            },\n            {\n              name: \"Confirmed placement\",\n              data: FC_GetWaitingListChartData().placementData,\n            },\n          ]}\n          colors={[\"#469769\", \"#d97724\", \"#4b5563\"]}\n          defaultBar={{\n            borderRadius: 4,\n            horizontal: false,\n            columnWidth: \"95%\",\n            endingShape: \"rounded\",\n          }}\n          chartHeight={props.chartHeight}\n        />\n      </div>\n    </section>\n  );\n};\n\nexport default React.memo(WaitingListChart);\n","import React, { Component } from \"react\";\nimport { FaBookOpen } from \"react-icons/fa\";\nimport { IoIosBriefcase } from \"react-icons/io\";\nimport { IoFilter } from \"react-icons/io5\";\nimport { MdSearch } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  schoolLevelsStoreInterface,\n  loadEducationCategories,\n  PushPopupAlert,\n} from \"../../../actions\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport { FC_GetPositionsByInstitution } from \"../../../actions/settings\";\nimport { getWaitingList } from \"../../../actions/waitingList\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport LoadingV2, { LoadingType } from \"../../../components/Loading/LoadingV2\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport {\n  SessionPlanInterface,\n  PositionAPI,\n  education_category,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport {\n  applicantGender,\n  WaitingListDataInterface,\n  WaitingListInterface,\n  WaitingListStatus,\n} from \"../../../interfaces/waitingList\";\nimport { StoreState } from \"../../../reducers\";\nimport { getPositionById } from \"../../../shared/dataTest\";\nimport { DATE, search } from \"../../../utils/functions\";\nimport { getPeriodById } from \"../../Admin/WaitingList/WaitingListReport\";\nimport NoSession from \"../../SessionSettings/NoSession\";\nimport LoadingLabels from \"../ChartComponents/LoadingLabels\";\nimport PieChart from \"../ChartComponents/PieChart\";\nimport ExamDashboardLabels from \"../ExamDashboard/ExamDashboardLabels\";\nimport WaitingListBoardTitle from \"./WaitingListBoardTitle\";\nimport WaitingListChart from \"./WaitingListChart\";\n\nexport type WaitingListChartDataInterface = {\n  title: string;\n  count: {\n    all: WaitingListDataInterface[];\n    waiting: WaitingListDataInterface[];\n    placed: WaitingListDataInterface[];\n    failed: WaitingListDataInterface[];\n  };\n  type: \"male\" | \"female\" | \"all\";\n};\ninterface WaitingListProps {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  systemPositions: PositionAPI[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  waitingList: WaitingListInterface[] | null;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  getWaitingList: Function;\n  FC_GetPositionsByInstitution: Function;\n  GetAllSessionPlans: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface WaitingListState {\n  thisPeriod: string;\n  loading: boolean;\n  loadingWaitingList: boolean;\n  thisPosition: PositionAPI | null;\n  selectPosition: boolean;\n  thisEducation: education_category | \"all\";\n  thisGender: \"all\" | \"male\" | \"female\";\n  searchPositionInput: string;\n}\n\nclass _WaitingListDashboard extends Component<\n  WaitingListProps,\n  WaitingListState\n> {\n  constructor(props: WaitingListProps) {\n    super(props);\n\n    this.state = {\n      thisPeriod: \"all\",\n      loading: true,\n      loadingWaitingList: true,\n      thisPosition: null,\n      selectPosition: false,\n      thisEducation: \"all\",\n      thisGender: \"all\",\n      searchPositionInput: \"\",\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingWaitingList = (value: boolean) => {\n    this.setState({ loadingWaitingList: value });\n  };\n\n  setThisPosition = (value: PositionAPI | null) => {\n    this.setState({ thisPosition: value });\n  };\n\n  setSelectPosition = (value: boolean) => {\n    this.setState({ selectPosition: value });\n  };\n\n  setThisEducation = (value: education_category | \"all\") => {\n    this.setState({ thisEducation: value });\n  };\n\n  setThisGender = (value: \"male\" | \"female\" | \"all\") => {\n    this.setState({ thisGender: value });\n  };\n\n  setSearchPositionInput = (value: string) => {\n    this.setState({ searchPositionInput: value });\n  };\n\n  setThisPeriod = (value: string) => {\n    this.setState({ thisPeriod: value });\n  };\n\n  componentDidMount = () => {\n    // LOADING EDUCATION CATEGORY =================================\n    if (\n      this.props.schoolLevels.education_categories === null ||\n      this.props.schoolLevels.education_categories.length === 0\n    ) {\n      this.props.loadEducationCategories(this.setLoading);\n    }\n    // END LOADING EDUCATION CATEGORY =================================\n    // ###################################################################\n    // LOADING APPLICATION SESSION ====================================\n    if (this.props.application_sessions == null) {\n      this.props.GetAllSessionPlans((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (!status) {\n          if (msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n    // ###################################################################\n    // LOADING POSITIONS ====================================\n    if (\n      this.props.systemPositions === null &&\n      this.props.auth.education_institution_id\n    ) {\n      this.props.FC_GetPositionsByInstitution(\n        this.props.auth.education_institution_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n    // ###################################################################\n    // LOADING WAITING LIST ====================================\n    if (this.state.loadingWaitingList) {\n      this.props.getWaitingList((status: boolean, msg: string) => {\n        if (status === false) {\n          this.setLoadingWaitingList(status);\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n  };\n\n  FC_WaitingListStatus = (\n    WaitingList: WaitingListDataInterface[]\n  ): WaitingListChartDataInterface[] => {\n    let output: WaitingListChartDataInterface[] = [\n      {\n        title: \"All applicants\",\n        count: {\n          all: WaitingList,\n          waiting: WaitingList.filter(\n            (item) => item.waiting_status === WaitingListStatus.WAITING\n          ),\n          placed: WaitingList.filter(\n            (item) => item.waiting_status === WaitingListStatus.PLACED\n          ),\n          failed: WaitingList.filter(\n            (item) => item.waiting_status === WaitingListStatus.PENDING\n          ),\n        },\n        type: \"all\",\n      },\n      {\n        title: \"Male applicants\",\n        count: {\n          all: WaitingList.filter(\n            (item) => item.gender === applicantGender.male\n          ),\n          waiting: WaitingList.filter(\n            (item) =>\n              item.gender === applicantGender.male &&\n              item.waiting_status === WaitingListStatus.WAITING\n          ),\n          placed: WaitingList.filter(\n            (item) =>\n              item.gender === applicantGender.male &&\n              item.waiting_status === WaitingListStatus.PLACED\n          ),\n          failed: WaitingList.filter(\n            (item) =>\n              item.gender === applicantGender.male &&\n              item.waiting_status === WaitingListStatus.PENDING\n          ),\n        },\n        type: \"male\",\n      },\n      {\n        title: \"Female applicants\",\n        count: {\n          all: WaitingList.filter(\n            (item) => item.gender === applicantGender.female\n          ),\n          waiting: WaitingList.filter(\n            (item) =>\n              item.gender === applicantGender.female &&\n              item.waiting_status === WaitingListStatus.WAITING\n          ),\n          placed: WaitingList.filter(\n            (item) =>\n              item.gender === applicantGender.female &&\n              item.waiting_status === WaitingListStatus.PLACED\n          ),\n          failed: WaitingList.filter(\n            (item) =>\n              item.gender === applicantGender.female &&\n              item.waiting_status === WaitingListStatus.PENDING\n          ),\n        },\n        type: \"female\",\n      },\n    ];\n    return output;\n  };\n\n  FC_WaitingListData = (\n    allWaitList: WaitingListInterface[] | null,\n    systemPositions: PositionAPI[] | null\n  ): WaitingListDataInterface[] | null => {\n    if (\n      allWaitList === null ||\n      systemPositions === null ||\n      this.props.application_sessions === null\n    )\n      return null;\n    let arrayNew: WaitingListDataInterface[] = [];\n    // LOOP IN ALL WAITING LIST ONE BY ONE ###########################\n    for (const key in allWaitList) {\n      if (allWaitList[key].user_info) {\n        const element = allWaitList[key];\n        const thisPosition = getPositionById(\n          systemPositions,\n          element.position_id\n        );\n        const thisSession = getPeriodById(\n          this.props.application_sessions,\n          element.session_id\n        );\n        let dataArray: WaitingListDataInterface = {\n          names: element.user_info.fname + \" \" + element.user_info.lname,\n          waitingList_id: element._id,\n          gender:\n            element.user_info.sex === \"M\"\n              ? applicantGender.male\n              : applicantGender.male,\n          national_id: element.n_id,\n          phone: element.phone_number,\n          email: element.email,\n          user_position_marks: Number(element.marks.toFixed(2)),\n          position_id: thisPosition\n            ? thisPosition.position_id\n            : \"Unknown position\",\n          position_title: thisPosition\n            ? thisPosition.position_title\n            : \"Unknown position\",\n          education_category: thisPosition\n            ? thisPosition.education_institute_id.education_category_title\n            : \"\",\n          education_category_id: thisPosition\n            ? thisPosition.education_institute_id.education_institute_id\n            : \"\",\n          waitingList_session: thisSession\n            ? thisSession.session_plan_name\n            : \"Unknown session\",\n          date: DATE(element.createdAt),\n          waiting_status: element.status,\n          status: element.status,\n          waitingList_session_id: element.session_id,\n        };\n        arrayNew.push(dataArray);\n      }\n    }\n    return arrayNew;\n  };\n\n  FC_FilterWaitingList = (\n    allWaitList: WaitingListDataInterface[],\n    waitingListStatus: WaitingListStatus | \"all\",\n    thisSession: string,\n    institute: education_category | \"all\",\n    thisPosition: PositionAPI | null\n  ): WaitingListDataInterface[] => {\n    let result: WaitingListDataInterface[] = allWaitList;\n    if (waitingListStatus !== \"all\") {\n      result = result.filter((item) => item.status === waitingListStatus);\n    }\n\n    if (thisPosition) {\n      result = result.filter(\n        (item) => item.position_id === thisPosition.position_id\n      );\n    }\n\n    if (thisSession !== \"all\") {\n      result = result.filter(\n        (item) => item.waitingList_session_id === thisSession\n      );\n    }\n\n    if (institute !== \"all\") {\n      result = result.filter(\n        (item) => item.education_category === institute.education_category_title\n      );\n    }\n    return result;\n  };\n\n  getWaitingListDataByTitle = (\n    allData: WaitingListChartDataInterface[]\n  ): WaitingListChartDataInterface | undefined => {\n    return allData.find((item) => item.type === this.state.thisGender);\n  };\n\n  displayGenderTitle = (gender: \"male\" | \"female\" | \"all\"): string => {\n    if (gender === \"male\") {\n      return \"All male applicants\";\n    }\n    if (gender === \"female\") {\n      return \"All female applicants\";\n    }\n    return \"All applicants\";\n  };\n\n  render() {\n    if (this.state.loading || this.props.application_sessions === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    if (this.props.application_sessions.length === 0) {\n      return <NoSession />;\n    }\n\n    return (\n      <div>\n        {/* HEADER TITLE */}\n        <WaitingListBoardTitle\n          education_categories={this.props.schoolLevels.education_categories}\n          loading={this.state.loading}\n          loadingEducation={this.state.loading}\n          thisEducation={this.state.thisEducation}\n          setThisEducation={this.setThisEducation}\n          thisPeriod={this.state.thisPeriod}\n          setThisPeriod={this.setThisPeriod}\n          application_sessions={this.props.application_sessions}\n          reportTitle={\"Waiting list Dashboard\"}\n          allEducation={true}\n          setSelectPosition={this.setSelectPosition}\n          thisPosition={this.state.thisPosition}\n        />\n        {/* END HEADER TITLE */}\n\n        {/* ------------------------------------------------------------------------------ */}\n\n        {(this.state.loadingWaitingList || this.props.waitingList === null) && (\n          <section>\n            <LoadingLabels />\n          </section>\n        )}\n\n        {/* ------------------------------------------------------------------------------ */}\n\n        {!this.state.loadingWaitingList && this.props.waitingList !== null && (\n          <section>\n            {/* WAITING LIST ALL STATUS LABELS ======================================= */}\n            {this.FC_WaitingListData(\n              this.props.waitingList,\n              this.props.systemPositions\n            ) &&\n              this.FC_FilterWaitingList(\n                this.FC_WaitingListData(\n                  this.props.waitingList,\n                  this.props.systemPositions\n                )!,\n                \"all\",\n                this.state.thisPeriod,\n                this.state.thisEducation,\n                this.state.thisPosition\n              ) && (\n                <section className=\"my-2\">\n                  <div className=\"text-2xl font-semibold text-gray-600 flex items-center gap-2\">\n                    {this.displayGenderTitle(this.state.thisGender)}{\" \"}\n                    <select\n                      className={`btn bg-white border border-blue-300 text-gray-600 hover:bg-gray-50 text-sm focus:outline-none`}\n                      value={this.state.thisGender}\n                      onChange={(e) =>\n                        this.setThisGender(\n                          e.target.value as \"male\" | \"female\" | \"all\"\n                        )\n                      }\n                    >\n                      {this.FC_WaitingListStatus(\n                        this.FC_FilterWaitingList(\n                          this.FC_WaitingListData(\n                            this.props.waitingList,\n                            this.props.systemPositions\n                          )!,\n                          \"all\",\n                          this.state.thisPeriod,\n                          this.state.thisEducation,\n                          this.state.thisPosition\n                        )\n                      ).map((item, index: number) => (\n                        <option key={item.type + index} value={item.type}>\n                          {item.title}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                  {this.getWaitingListDataByTitle(\n                    this.FC_WaitingListStatus(\n                      this.FC_FilterWaitingList(\n                        this.FC_WaitingListData(\n                          this.props.waitingList,\n                          this.props.systemPositions\n                        )!,\n                        \"all\",\n                        this.state.thisPeriod,\n                        this.state.thisEducation,\n                        this.state.thisPosition\n                      )\n                    )\n                  ) && (\n                    <ExamDashboardLabels\n                      dataLabels={[\n                        {\n                          title: \"Total applicants\",\n                          icon: FaBookOpen,\n                          iconColor: \"blue\",\n                          count: this.getWaitingListDataByTitle(\n                            this.FC_WaitingListStatus(\n                              this.FC_FilterWaitingList(\n                                this.FC_WaitingListData(\n                                  this.props.waitingList,\n                                  this.props.systemPositions\n                                )!,\n                                \"all\",\n                                this.state.thisPeriod,\n                                this.state.thisEducation,\n                                this.state.thisPosition\n                              )\n                            )\n                          )!.count.all.length,\n                        },\n                        {\n                          title: \"Waiting Applicants\",\n                          icon: FaBookOpen,\n                          iconColor: \"green\",\n                          count: this.getWaitingListDataByTitle(\n                            this.FC_WaitingListStatus(\n                              this.FC_FilterWaitingList(\n                                this.FC_WaitingListData(\n                                  this.props.waitingList,\n                                  this.props.systemPositions\n                                )!,\n                                \"all\",\n                                this.state.thisPeriod,\n                                this.state.thisEducation,\n                                this.state.thisPosition\n                              )\n                            )\n                          )!.count.waiting.length,\n                        },\n                        {\n                          title: \"Placed & Not confirmed\",\n                          icon: FaBookOpen,\n                          iconColor: \"yellow\",\n                          count: this.getWaitingListDataByTitle(\n                            this.FC_WaitingListStatus(\n                              this.FC_FilterWaitingList(\n                                this.FC_WaitingListData(\n                                  this.props.waitingList,\n                                  this.props.systemPositions\n                                )!,\n                                \"all\",\n                                this.state.thisPeriod,\n                                this.state.thisEducation,\n                                this.state.thisPosition\n                              )\n                            )\n                          )!.count.failed.length,\n                        },\n                        {\n                          title: \"Placed & Confirmed\",\n                          icon: FaBookOpen,\n                          iconColor: \"gray\",\n                          count: this.getWaitingListDataByTitle(\n                            this.FC_WaitingListStatus(\n                              this.FC_FilterWaitingList(\n                                this.FC_WaitingListData(\n                                  this.props.waitingList,\n                                  this.props.systemPositions\n                                )!,\n                                \"all\",\n                                this.state.thisPeriod,\n                                this.state.thisEducation,\n                                this.state.thisPosition\n                              )\n                            )\n                          )!.count.placed.length,\n                        },\n                      ]}\n                      labelsOnRow={5}\n                    >\n                      <div className=\"flex justify-center\">\n                        <PieChart\n                          options={{\n                            labels: [\n                              \"Waiting list\",\n                              \"Placed list\",\n                              \"Failed exam\",\n                            ],\n                            legend: {\n                              show: false,\n                              position: \"bottom\",\n                              horizontalAlign: \"center\",\n                              fontSize: \"16px\",\n                              itemMargin: {\n                                horizontal: 3,\n                                vertical: 0,\n                              },\n                            },\n                            plotOptions: {\n                              pie: {\n                                donut: {\n                                  labels: {\n                                    show: true,\n                                    name: {\n                                      show: true,\n                                      fontSize: \"16px\",\n                                      //   fontFamily: \"Rubik\",\n                                      color: \"#2564eb\",\n                                      offsetY: -10,\n                                    },\n                                    value: {\n                                      show: true,\n                                      fontSize: \"20px\",\n                                      fontFamily:\n                                        \"Helvetica, Arial, sans-serif\",\n                                      color: \"#2564eb\",\n                                      offsetY: 10,\n                                      formatter: function (val) {\n                                        return val;\n                                      },\n                                    },\n                                    total: {\n                                      show: true,\n                                      label: \"Total\",\n                                      color: \"#2564eb\",\n                                      formatter: function (w) {\n                                        return w.globals.seriesTotals.reduce(\n                                          (a: number, b: number) => {\n                                            return a + b;\n                                          },\n                                          0\n                                        );\n                                      },\n                                    },\n                                  },\n                                },\n                              },\n                            },\n                            colors: [\"#469769\", \"#d97724\", \"#4b5563\"],\n                          }}\n                          series={[\n                            this.getWaitingListDataByTitle(\n                              this.FC_WaitingListStatus(\n                                this.FC_FilterWaitingList(\n                                  this.FC_WaitingListData(\n                                    this.props.waitingList,\n                                    this.props.systemPositions\n                                  )!,\n                                  \"all\",\n                                  this.state.thisPeriod,\n                                  this.state.thisEducation,\n                                  this.state.thisPosition\n                                )\n                              )\n                            )!.count.waiting.length,\n                            this.getWaitingListDataByTitle(\n                              this.FC_WaitingListStatus(\n                                this.FC_FilterWaitingList(\n                                  this.FC_WaitingListData(\n                                    this.props.waitingList,\n                                    this.props.systemPositions\n                                  )!,\n                                  \"all\",\n                                  this.state.thisPeriod,\n                                  this.state.thisEducation,\n                                  this.state.thisPosition\n                                )\n                              )\n                            )!.count.placed.length,\n                            this.getWaitingListDataByTitle(\n                              this.FC_WaitingListStatus(\n                                this.FC_FilterWaitingList(\n                                  this.FC_WaitingListData(\n                                    this.props.waitingList,\n                                    this.props.systemPositions\n                                  )!,\n                                  \"all\",\n                                  this.state.thisPeriod,\n                                  this.state.thisEducation,\n                                  this.state.thisPosition\n                                )\n                              )\n                            )!.count.failed.length,\n                          ]}\n                          width={210}\n                        />\n                      </div>\n                    </ExamDashboardLabels>\n                  )}\n                </section>\n              )}\n            {/* WAITING LIST STATUS ON COUNTRY LEVEL LABELS ======================================= */}\n\n            {/* ===================================================================================== */}\n\n            {/* EXAM PERFORMANCE ON COUNTRY CHART ======================================= */}\n            {this.FC_WaitingListData(\n              this.props.waitingList,\n              this.props.systemPositions\n            ) && (\n              <WaitingListChart\n                waitingListData={this.FC_FilterWaitingList(\n                  this.FC_WaitingListData(\n                    this.props.waitingList,\n                    this.props.systemPositions\n                  )!,\n                  \"all\",\n                  this.state.thisPeriod,\n                  this.state.thisEducation,\n                  this.state.thisPosition\n                )}\n                sessions={this.props.application_sessions}\n                chartHeight={650}\n                thisGender={this.state.thisGender}\n              />\n            )}\n            {/* END EXAM PERFORMANCE ON COUNTRY CHART ======================================= */}\n\n            {/* CHOOSING POSITION MODAL */}\n            {this.state.selectPosition && (\n              <Modal\n                title={\n                  <div className=\"flex flex-row gap-4 items-center\">\n                    <IoFilter className=\"text-5xl text-blue-600\" />\n                    <div className=\"flex flex-col\">\n                      <span className=\"font-bold text-xl text-blue-600\">\n                        Filter by a position\n                      </span>\n                    </div>\n                  </div>\n                }\n                backDrop={true}\n                theme={Themes.default}\n                close={() => {\n                  this.setSelectPosition(false);\n                  this.setSearchPositionInput(\"\");\n                }}\n                backDropClose={true}\n                widthSizeClass={ModalSize.extraLarge}\n                displayClose={true}\n                padding={{ title: true }}\n              >\n                <div className=\"px-2 pb-2\">\n                  {this.props.systemPositions === null ? (\n                    <LoadingV2 type={LoadingType.dark} />\n                  ) : this.props.systemPositions.length === 0 ? (\n                    <div className=\"flex flex-col text-gray-400 items-center justify-center\">\n                      <MdSearch className=\"text-6xl\" />\n                      <div className=\"flex flex-col items-center justify-center\">\n                        <span>No positions found! Please go back!</span>\n                        {/* <button\n                        onClick={() => this.loadPosition()}\n                        className={`btn bg-yellow-100 text-yellow-700 my-4 hover:bg-yellow-200 ${\n                          this.state.loadingPosition && \"animate-pulse\"\n                        }`}\n                        disabled={this.state.loadingPosition}\n                      >\n                        {this.state.loadingPosition ? \"Loading...\" : \"Reload\"}\n                      </button> */}\n                      </div>\n                    </div>\n                  ) : (\n                    <>\n                      <div className=\"flex flex-col\">\n                        <span className=\"text-gray-600 text-xs font-bold\">\n                          Filter by position name\n                        </span>\n                        <input\n                          onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                            this.setSearchPositionInput(e.target.value)\n                          }\n                          type=\"text\"\n                          className=\"mb-4 bg-gray-100 px-3 py-2 rounded\"\n                          placeholder=\"Keyword...\"\n                        />\n                      </div>\n                      <div\n                        onClick={() => {\n                          this.setThisPosition(null);\n                          this.setSelectPosition(false);\n                          this.setSearchPositionInput(\"\");\n                        }}\n                        className=\"bg-white cursor-pointer rounded  px-3 py-2 border border-gray-200 hover:border-blue-500 hover:bg-blue-100 mb-2\"\n                      >\n                        <div className=\"grid lg:grid-cols-12\">\n                          <div className=\"col-span-12 lg:col-span-10\">\n                            <div className=\"flex flex-row items-center gap-3\">\n                              <div>\n                                <IoIosBriefcase className=\"text-4xl md:text-5xl text-blue-600\" />\n                              </div>\n                              <div className=\"flex flex-col\">\n                                <span className=\"text-base lg:text-lg font-bold text-gray-700\">\n                                  All position\n                                </span>\n                              </div>\n                            </div>\n                          </div>\n                          <div className=\"col-span-12 lg:col-span-2 hidden lg:block\">\n                            <div className=\"h-full flex items-center justify-end\">\n                              <div className=\"btn bg-blue-600 text-white float-right\">\n                                Choose\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      {search(\n                        this.props.systemPositions,\n                        this.state.searchPositionInput\n                      ).map((item: PositionAPI, key: number) => (\n                        <div\n                          key={key + 1}\n                          onClick={() => {\n                            this.setThisPosition(item);\n                            this.setSelectPosition(false);\n                            this.setSearchPositionInput(\"\");\n                          }}\n                          className=\"bg-white cursor-pointer rounded  px-3 py-2 border border-gray-200 hover:border-blue-500 hover:bg-blue-100 mb-2\"\n                        >\n                          <div className=\"grid lg:grid-cols-12\">\n                            <div className=\"col-span-12 lg:col-span-10\">\n                              <div className=\"flex flex-row items-center gap-3\">\n                                <div>\n                                  <IoIosBriefcase className=\"text-4xl md:text-5xl text-blue-600\" />\n                                </div>\n                                <div className=\"flex flex-col\">\n                                  <span className=\"text-xs lg:text-sm font-bold text-gray-700\">\n                                    {item.position_title}\n                                  </span>\n                                  <span className=\"text-xs text-gray-500 italic\">\n                                    School level:{\" \"}\n                                    <span\n                                      className=\"text-gray-800 font-light\"\n                                      style={{ fontStyle: \"normal\" }}\n                                    >\n                                      {item.school_level_id.school_level_name}\n                                    </span>\n                                  </span>\n                                  <span className=\"text-xs font-bold text-blue-600 bg-blue-100 w-max px-3 py-1 rounded-full\">\n                                    {\n                                      item.education_institute_id\n                                        .education_category_title\n                                    }\n                                  </span>\n                                </div>\n                              </div>\n                            </div>\n                            <div className=\"col-span-12 lg:col-span-2 hidden lg:block\">\n                              <div className=\"h-full flex items-center justify-end\">\n                                <div className=\"btn bg-blue-600 text-white float-right\">\n                                  Choose\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      ))}\n                    </>\n                  )}\n                </div>\n              </Modal>\n            )}\n            {/* END CHOOSING POSITION MODAL */}\n          </section>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system_settings,\n  sessionPlan,\n  schoolLevels,\n  waitingList,\n}: StoreState): {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  systemPositions: PositionAPI[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  waitingList: WaitingListInterface[] | null;\n} => {\n  return {\n    auth: auth,\n    application_sessions: sessionPlan.allSessionPlans,\n    systemPositions: system_settings.systemPositions,\n    schoolLevels,\n    waitingList,\n  };\n};\n\nexport const WaitingListDashboard = connect(mapStateToProps, {\n  getWaitingList,\n  GetAllSessionPlans,\n  loadEducationCategories,\n  FC_GetPositionsByInstitution,\n  PushPopupAlert,\n})(_WaitingListDashboard);\n","import React from \"react\";\nimport { IoWarning } from \"react-icons/io5\";\n// import { MdInfoOutline } from \"react-icons/md\";\nimport { NavLink } from \"react-router-dom\";\n\ntype NoSessionProps = {\n  title?: string;\n  description?: string;\n};\n\nconst NoSession: React.FC<NoSessionProps> = ({\n  title = \"No session available\",\n  description = \"Please Wait for the system to publish the sessions or contact the administrator\",\n}) => {\n  return (\n    <div className=\"w-full my-5\">\n      <section className=\"py-10 flex flex-col items-center rounded border border-gray-300 bg-white text-2xl font-medium text-yellow-800 animate__animated animate__pulse\">\n        <div className=\"flex flex-col items-center\">\n          <IoWarning className=\"w-32 h-32\" />\n          {description}\n        </div>\n        {false && (\n          <div className=\"text-center group text-sm -mb-3 mt-5\">\n            <NavLink\n              to=\"/apps-page\"\n              className=\"border border-rounded-md bg-gray-100 text-gray-900 rounded border-gray-100 group-hover:bg-gray-50 group-hover:border-gray-400 px-2 py-1\"\n            >\n              Back to App\n            </NavLink>\n          </div>\n        )}\n      </section>\n    </div>\n  );\n};\n\nexport default React.memo(NoSession);\n","import React, { FC, ReactElement, ReactNode } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, System } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { NavToogle, PageHasSubNav } from \"../../actions\";\nimport { MdBrightness1, MdSearch } from \"react-icons/md\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  system: System;\n  PageHasSubNav: Function;\n  NavToogle: Function;\n  children: ReactNode;\n}\n//\ninterface AppState {\n  loading: boolean;\n}\n\nclass _SideNavigation extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount = () => this.props.PageHasSubNav(true);\n  componentWillUnmount = () => this.props.PageHasSubNav(false);\n\n  render() {\n    const isAuthenticated = this.props.auth.isAuthenticated;\n\n    if (isAuthenticated === false) {\n      return null;\n    }\n\n    const navActive = this.props.system.navigation;\n    return (\n      <div\n        className={`fixed w-48 p-1 pr-2 pl-6 text-gray-700 bg-white ${\n          navActive === true ? \"lg:left-16  left-16\" : \" -left-72 lg:left-16\"\n        }  top-0 bottom-0 pt-20 z-30 shadow-lg  transition-all duration-500 ease-in-out overflow-y-auto`}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n}: StoreState): { auth: Auth; system: System } => {\n  return { auth: auth, system: system };\n};\n\nexport const SideNavigation = connect(mapStateToProps, {\n  NavToogle,\n  PageHasSubNav,\n})(_SideNavigation);\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SearchComponentInterface = {\n  data: any[];\n};\n\nexport const Search: FC<SearchComponentInterface> = ({\n  data,\n}): ReactElement => {\n  return (\n    <div className=\"m-1 rounded-md shadow-md border border-blue-400 bg-white p-1 flex \">\n      <label htmlFor=\"search-text\" className=\"inline-block text-2xl\">\n        <MdSearch className=\"inline-block text-blue-400\" />\n      </label>\n      <input\n        type=\"search\"\n        className=\"outline-none bg-transparent flex-1 pl-1\"\n        placeholder=\"Search\"\n        id=\"search-text\"\n      />\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype MainItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const MainItem: FC<MainItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n  return (\n    <section\n      className={`${\n        active === true\n          ? \"bg-blue-500 text-white font-bold\"\n          : \"bg-blue-100 text-blue-800\"\n      } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex cursor-pointer items-center`}\n    >\n      <section className=\"flex-1\">\n        <IconDefined className=\"inline-block mr-1 text-xs\" />\n        <span>{title}</span>\n      </section>\n\n      {count > 0 ? (\n        <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n          {count}\n        </span>\n      ) : null}\n    </section>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemContainerComponentInterface = {\n  children: ReactNode;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const SubItemContainer: FC<SubItemContainerComponentInterface> = ({\n  children,\n}): ReactElement => {\n  return (\n    <div className=\"ml-3 overflow-y-auto border-l-2 border-blue-200 -mt-1 pt-2 mb-2 pl-1 cursor-pointer\">\n      {children}\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n * @important Remenber to use these components inside the <SubItemContainer>...</SubItemContainer>\n */\nexport const SubItem: FC<SubItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n\n  return (\n    <div\n      className={`animate__animated animate__zoomIn animate__faster ${\n        active === true ? \"bg-blue-500 text-white font-bold\" : \" text-blue-800\"\n      } text-blue-800 bg-blue-200 rounded-md px-1 mb-1 flex items-center py-1 font-bold`}\n    >\n      <IconDefined\n        className={`inline-block mr-0.1 text-xs ${\n          active === true ? \"text-white\" : \"\"\n        }`}\n      />\n      <span\n        className={`inline-block pl-1 ${active === true ? \"text-white\" : \"\"}`}\n      >\n        {title}\n      </span>\n      {count >= 1 ? (\n        <span\n          className={`text-sm fint-bold ${active === true ? \"text-white\" : \"\"}`}\n        >\n          {count}\n        </span>\n      ) : null}\n    </div>\n  );\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AccessTaskInterface,\n  PermissionInterface,\n  SystemSettingsInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PositionAPI } from \"../interfaces/position\";\n\nconst url = `${API.AUTH}/auth/user/access`;\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// SYSTEM SETTINGS  ==============\nexport interface GetSystemSettingsAction {\n  type: ActionTypes.GET_SYSTEM_SETTINGS;\n  payload: SystemSettingsInterface[];\n}\n\nexport interface DisableSystemSettingsAction {\n  type: ActionTypes.DISABLE_SYSTEM_SETTINGS;\n  payload: {\n    system_setting_id: string;\n    status: \"enabled\" | \"disabled\";\n  };\n}\n\n// ROLE TASKS ACCESS SETTINGS ===================================\nexport interface GetTaskAccessAction {\n  type: ActionTypes.GET_TASK_ACCESS;\n  payload: AccessTaskInterface[];\n}\n\n// POSITIONS SETTINGS ===================================\nexport interface PositionCreateInterface {\n  position_id?: string;\n  position_title: string;\n  position_code: string;\n  description: string;\n  school_level_id: string;\n  subcategory_id: string;\n  education_institute_id: string;\n  courses: string[];\n  requirements: {\n    user_detail_category_id: string;\n    user_detail_subcategory_id: string;\n    position_requirement: {\n      category_subcategory_data_id: string;\n      required: boolean;\n    }[];\n    required: boolean;\n  }[];\n}\nexport interface GetPositionsAction {\n  type: ActionTypes.GET_POSTIONS;\n  payload: PositionAPI[];\n}\n\nexport interface CreatePositionsAction {\n  type: ActionTypes.CREATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface UpdatePositionsAction {\n  type: ActionTypes.UPDATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface DeletePositionSettingAction {\n  type: ActionTypes.DELETE_POSITION;\n  payload: string;\n}\n\nexport interface PublishPositionAction {\n  type: ActionTypes.PUBLISH_POSITION;\n  payload: {\n    position_id: string;\n    status: boolean;\n  };\n}\n\nexport type SystemActionType =\n  | GetSystemSettingsAction\n  | DisableSystemSettingsAction\n  | GetTaskAccessAction\n  | GetPositionsAction\n  | CreatePositionsAction\n  | UpdatePositionsAction\n  | DeletePositionSettingAction\n  | PublishPositionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSystemSettings = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<SystemSettingsInterface[]>(\n        `${API.AUTH}/system/setting`\n      );\n      console.log(\"=================getSystemSettings===================\");\n      console.log(res);\n      console.log(\"=================getSystemSettings===================\");\n      dispatch<GetSystemSettingsAction>({\n        type: ActionTypes.GET_SYSTEM_SETTINGS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const disableSystemSetting = (data: {\n  system_setting_id: string;\n  status: \"enabled\" | \"disabled\";\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableSystemSettingsAction>({\n      type: ActionTypes.DISABLE_SYSTEM_SETTINGS,\n      payload: data,\n    });\n  };\n};\n\n// ============================ tasks access =======================\n\nexport const GetTaskAccess = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<\n        {\n          id: string;\n          title: string;\n          key: string;\n          permitted: PermissionInterface;\n        }[]\n      >(`${url}/roleaccess`);\n      let response: AccessTaskInterface[] = res.data.map((data) => ({\n        id: data.id,\n        task: data.title,\n        key: data.key,\n        permitted: data.permitted,\n      }));\n      dispatch<GetTaskAccessAction>({\n        type: ActionTypes.GET_TASK_ACCESS,\n        payload: response,\n      });\n      callback(false, \"\", response);\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// ============================ positions =======================\n\nexport const getPositions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(`${API.APPLICATION}/position`);\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createPosition = (data: PositionCreateInterface) => {\n  console.log({ createPosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreatePositionsAction>({\n      type: ActionTypes.CREATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const updatePosition = (data: PositionCreateInterface) => {\n  console.log({ updatePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdatePositionsAction>({\n      type: ActionTypes.UPDATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const deletePosition = (data: string) => {\n  console.log({ deletePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<DeletePositionSettingAction>({\n      type: ActionTypes.DELETE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const publishPosition = (data: {\n  position_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<PublishPositionAction>({\n      type: ActionTypes.PUBLISH_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_GetPositionsByInstitution = (\n  institution_id: string,\n  callback: (status: boolean, msg: string, data?: PositionAPI[]) => void\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(\n        `${API.APPLICATION}/position/instituteposition/${institution_id}`\n      );\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n","import React, { Fragment, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { SessionPlanInterface } from \"../../../interfaces\";\nimport { course } from \"../../../interfaces/course\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport { ExamDoneAndRemainingByPeriodInterface } from \"../../../interfaces/reports\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { DATE, sortThisArray } from \"../../../utils/functions\";\n// import searchExamData from \"../../../utils/search\";\nimport { getPeriodById } from \"./ExamReport\";\n\n// EXCEL FILE FUNCTIONS ================================\nexport interface ExaminationProgressToPrintInterface {\n  course_id: number;\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string;\n  exam_period: string;\n  exam_date: string;\n  exam_time: string;\n  exam_duration: string;\n  exam_status: string;\n}\n\nexport enum ExaminationProgressReportContentKeyInterface {\n  COURSER_NAME = \"course_name\",\n  COURSE_CODE = \"course_code\",\n  SCHOOL_LEVEL = \"school_levels\",\n  PERIOD = \"exam_period\",\n  DATE = \"exam_date\",\n  TIME = \"exam_time\",\n  DURATION = \"exam_duration\",\n  STATUS = \"exam_status\",\n}\n\nexport interface ExaminationProgressReportContentInterface {\n  key: ExaminationProgressReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n\nexport const examinationProgressIsChangeAllowed = (\n  key: ExaminationProgressReportContentKeyInterface\n): boolean => {\n  if (\n    key === ExaminationProgressReportContentKeyInterface.COURSER_NAME ||\n    key === ExaminationProgressReportContentKeyInterface.COURSE_CODE ||\n    key === ExaminationProgressReportContentKeyInterface.PERIOD ||\n    key === ExaminationProgressReportContentKeyInterface.STATUS\n  ) {\n    return false;\n  }\n  return true;\n};\n\nexport const defaultExaminationProgressContent: ExaminationProgressReportContentInterface[] =\n  [\n    {\n      key: ExaminationProgressReportContentKeyInterface.COURSER_NAME,\n      title: \"Course names\",\n      status: true,\n    },\n    {\n      key: ExaminationProgressReportContentKeyInterface.COURSE_CODE,\n      title: \"Course code\",\n      status: true,\n    },\n    {\n      key: ExaminationProgressReportContentKeyInterface.SCHOOL_LEVEL,\n      title: \"School levels\",\n      status: true,\n    },\n    {\n      key: ExaminationProgressReportContentKeyInterface.PERIOD,\n      title: \"Exam period\",\n      status: true,\n    },\n    {\n      key: ExaminationProgressReportContentKeyInterface.DATE,\n      title: \"Exam date\",\n      status: true,\n    },\n    {\n      key: ExaminationProgressReportContentKeyInterface.TIME,\n      title: \"Exam time\",\n      status: true,\n    },\n    {\n      key: ExaminationProgressReportContentKeyInterface.DURATION,\n      title: \"Exam duration\",\n      status: true,\n    },\n    {\n      key: ExaminationProgressReportContentKeyInterface.STATUS,\n      title: \"Exam Status\",\n      status: true,\n    },\n  ];\n\n// END EXCEL FILE FUNCTIONS ================================\n\nexport const displayStatus = (status: string): string => {\n  if (status === \"Done\") {\n    return \"Completed\";\n  }\n  if (status === \"Editing\") {\n    return \"In exam\";\n  }\n  return status;\n};\n\nexport interface examProgressStateInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n  exam: ExamItemResponse | null;\n  preparation_status: string;\n}\n\nexport const FC_reportDoneExamList = (\n  allCourses: course[],\n  allExams: ExamItemResponse[],\n  doneExams: ExamDoneAndRemainingByPeriodInterface[]\n): examProgressStateInterface[] => {\n  let result: examProgressStateInterface[] = [],\n    ids: string[] = [];\n  for (const key in allExams) {\n    if (Object.prototype.hasOwnProperty.call(allExams, key)) {\n      if (ids.includes(allExams[key].id)) continue;\n      ids.push(allExams[key].id);\n      let courser = allCourses.find(\n        (item) => item.course_id === allExams[key].course\n      );\n      if (courser) {\n        let doneExam = doneExams.find(\n          (item) =>\n            item.course === allExams[key].course &&\n            item.period === allExams[key].period\n        );\n        result.push({\n          course_name: courser.course_name,\n          course_code: courser.course_code,\n          description: courser.description,\n          school_levels: courser.school_levels,\n          course_id: courser.course_id,\n          exam: allExams[key],\n          preparation_status: doneExam ? doneExam.exam_status : \"remaining\",\n        });\n      }\n    }\n  }\n  return result;\n};\n\nexport const FC_reportDoneExamListFilter = (\n  thisList: examProgressStateInterface[],\n  thisValue: \"all\" | \"Done\" | \"Active\"\n): examProgressStateInterface[] => {\n  if (thisValue === \"all\") {\n    return thisList;\n  } else {\n    return thisList.filter((item) => item.preparation_status === thisValue);\n  }\n};\n\nexport const searchExamData = (\n  objList: examProgressStateInterface[],\n  text: string\n): examProgressStateInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (\n        prop === \"course_name\" ||\n        prop === \"course_code\" ||\n        prop === \"preparation_status\"\n      ) {\n        flag =\n          product[prop].toString().toLowerCase().indexOf(text.toLowerCase()) >\n          -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n};\n\ntype DoneExamListProps = {\n  loading: boolean;\n  examsListData: ExamItemResponse[] | null;\n  courseListData: course[] | null;\n  thisPeriod: SessionPlanInterface[];\n  doneExamsData: ExamDoneAndRemainingByPeriodInterface[] | null;\n\n  // for filter purpose =============================\n  filterExamProgress: \"all\" | \"Done\" | \"Active\";\n};\n\nconst DoneExamList: React.FC<DoneExamListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const [isSorted, setIsSorted] = useState<boolean>(false);\n  const [sortProperty, setSortProperty] = useState<string>(\"\");\n  const [sortOrder, setSortOrder] = useState<\"ASC\" | \"DESC\">(\"ASC\");\n\n  const setSort = (thisProperty: string) => {\n    if (sortProperty === thisProperty && sortOrder === \"ASC\") {\n      setSortOrder(\"DESC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    } else {\n      setSortOrder(\"ASC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    }\n  };\n\n  return (\n    <Fragment>\n      <div className=\"bg-white my-4\">\n        <div className=\"w-full px-2 py-2\">\n          <input\n            onChange={(e) => setSearchInput(e.target.value)}\n            type=\"text\"\n            value={searchInput}\n            placeholder=\"Search...\"\n            className=\"w-full bg-gray-100 py-2 px-3 rounded\"\n            disabled={\n              props.courseListData &&\n              props.examsListData &&\n              props.doneExamsData &&\n              FC_reportDoneExamListFilter(\n                FC_reportDoneExamList(\n                  props.courseListData,\n                  props.examsListData,\n                  props.doneExamsData\n                ),\n                props.filterExamProgress\n              ).length <= 0\n                ? true\n                : false\n            }\n          />\n        </div>\n        <table className=\"w-full shadow\" id=\"report_content\">\n          <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n            <tr>\n              <td className=\"px-2 py-2\">#</td>\n              <td\n                className=\"px-2 py-2 cursor-pointer\"\n                onClick={() => setSort(\"course_name\")}\n              >\n                <div className=\"flex items-center gap-1\">\n                  Course <BiSort />\n                </div>\n              </td>\n              <td className=\"px-2 py-2\">Exam date</td>\n              <td className=\"px-2 py-2\">Exam time</td>\n              <td className=\"px-2 py-2\">Exam duration</td>\n              <td className=\"px-2 py-2\">Exam Period</td>\n              <td\n                className=\"px-2 py-2 cursor-pointer\"\n                onClick={() => setSort(\"preparation_status\")}\n              >\n                <div className=\"flex items-center gap-1\">\n                  Exam Status <BiSort />\n                </div>\n              </td>\n            </tr>\n          </thead>\n          <tbody>\n            {props.courseListData === null || props.loading ? (\n              <tr>\n                <td colSpan={7} className=\"px-2 py-2\">\n                  <Loading />\n                </td>\n              </tr>\n            ) : props.examsListData &&\n              props.doneExamsData &&\n              FC_reportDoneExamListFilter(\n                FC_reportDoneExamList(\n                  props.courseListData,\n                  props.examsListData,\n                  props.doneExamsData\n                ),\n                props.filterExamProgress\n              ).length <= 0 ? (\n              <tr>\n                <td colSpan={7} className=\"px-2 py-2 text-center\">\n                  No Exam list available!\n                </td>\n              </tr>\n            ) : (\n              props.examsListData &&\n              props.doneExamsData &&\n              sortThisArray(\n                isSorted,\n                searchExamData(\n                  FC_reportDoneExamListFilter(\n                    FC_reportDoneExamList(\n                      props.courseListData,\n                      props.examsListData,\n                      props.doneExamsData\n                    ),\n                    props.filterExamProgress\n                  ),\n                  searchInput\n                ),\n                sortProperty,\n                sortOrder\n              ).map((item, i) => (\n                <tr\n                  key={i + 1}\n                  className={`${\n                    item.preparation_status === \"Done\"\n                      ? \"bg-blue-50\"\n                      : \"bg-white\"\n                  } text-gray-600 hover:bg-blue-100 hover:text-blue-700 border-b border-gray-300 hover:border-blue-500 text-sm`}\n                >\n                  <td className=\"px-2 py-2\">{i + 1}</td>\n                  <td className=\"px-2 py-2\">\n                    {capitalizeFirstLetter(item.course_name)} (\n                    <span className=\"font-semibold\">{item.course_code}</span>)\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam ? DATE(item.exam.exam_date) : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam ? item.exam.start_time : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam ? item.exam!.duration + \" min\" : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam\n                      ? getPeriodById(props.thisPeriod, item.exam.period)\n                        ? getPeriodById(props.thisPeriod, item.exam.period)!\n                            .session_plan_name\n                        : \"-\"\n                      : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {capitalizeFirstLetter(\n                      displayStatus(item.preparation_status)\n                    )}\n                  </td>\n                </tr>\n              ))\n            )}\n          </tbody>\n        </table>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default React.memo(DoneExamList);\n","import React from \"react\";\n\ntype TableLoadingProps = {\n  cols: number;\n};\nconst TableLoading: React.FC<TableLoadingProps> = (props) => {\n  const displayCols = (): JSX.Element[] => {\n    let colsArray: number[] = [];\n    for (let index = 0; index < props.cols; index++) {\n      colsArray.push(index);\n    }\n    let result = colsArray.map((element) => {\n      return (\n        <td className=\"p-3 text-center whitespace-nowrap\" key={element}>\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      );\n    });\n\n    return result;\n  };\n  return (\n    <>\n      <tr className=\"border-b border-gray-200\" key={228}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={22648}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={229768}>\n        {displayCols()}\n      </tr>\n    </>\n  );\n};\n\nexport default TableLoading;\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AssignRoleToUserActionInterface,\n  CustomeAccessInterface,\n  UserInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\n\nexport const userPageLimit: number = 30;\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\nexport interface FetchUsersAction {\n  type: ActionTypes.FETCH_USERS_ACCESS;\n  payload: UserAccessInterface;\n}\n\nexport interface BlockUserToSystem {\n  type: ActionTypes.BLOCK_USER_TO_SYSTEM | ActionTypes.UNBLOCK_USER_TO_SYSTEM;\n  payload: { id: string; page: number };\n}\n\nexport interface AssignRoleToUserAction {\n  type: ActionTypes.ASSIGN_ROLE_TO_USER;\n  payload: { data: AssignRoleToUserActionInterface; page: number };\n}\n\nexport interface CustomizeUserAccessAction {\n  type: ActionTypes.CUSTOMIZE_USER_ACCESS;\n  payload: { data: CustomeAccessInterface; page: number };\n}\n\nexport interface ResetUserAccessAction {\n  type: ActionTypes.RESET_USER_ACCESS;\n  payload: { user_id: string; page: number };\n}\n\nexport type fetchUserAccessInterface = {\n  users: UserInterface[] | null;\n  next: {\n    page: number;\n    limit: number;\n  } | null;\n  previous: {\n    page: number;\n    limit: number;\n  } | null;\n  total_users: number;\n};\n\nexport type UserAccessInterface = {\n  users: { data: UserInterface[]; page: number }[] | null;\n  next: {\n    page: number;\n    limit: number;\n  } | null;\n  previous: {\n    page: number;\n    limit: number;\n  } | null;\n  total_users: number;\n};\n\nexport enum documentValidationStatus {\n  waiting = \"waiting\",\n  approved = \"approved\",\n  rejected = \"rejected\",\n}\n\nexport interface VerifyDocumentInterface {\n  user_id: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date?: string;\n  };\n  in_education: boolean;\n  disability: boolean;\n  expiration_date: string;\n}\n\nexport type AccessUserActionType =\n  | FetchUsersAction\n  | BlockUserToSystem\n  | AssignRoleToUserAction\n  | CustomizeUserAccessAction\n  | ResetUserAccessAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport type FT_FetchUserAccess = (\n  page: number,\n  callBack?: (\n    status: boolean,\n    msg: string,\n    data: UserInterface[] | null\n  ) => void\n) => void;\nexport const fetchUserAccess = (\n  page: number,\n  callback?: (\n    status: boolean,\n    msg: string,\n    data: UserInterface[] | null\n  ) => void\n) => {\n  callback && callback(true, \"\", null);\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<fetchUserAccessInterface>(\n        `${API.USER}/?page=${page}&limit=${userPageLimit}`\n      );\n      console.log(\"====================================\");\n      console.log({ fetchUserAccess: res });\n      console.log(\"====================================\");\n      dispatch<FetchUsersAction>({\n        type: ActionTypes.FETCH_USERS_ACCESS,\n        payload: {\n          users: [{ data: res.data.users!, page: page }],\n          next: res.data.next,\n          previous: res.data.previous,\n          total_users: res.data.total_users,\n        },\n      });\n      callback && callback(false, \"\", res.data.users);\n    } catch (error) {\n      console.error({ user_error: error });\n      callback && callback(false, errorToText(error), null);\n    }\n  };\n};\n\nexport const blockUserToSystem = (user_id: string, page: number) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<BlockUserToSystem>({\n      type: ActionTypes.BLOCK_USER_TO_SYSTEM,\n      payload: { id: user_id, page },\n    });\n  };\n};\n\nexport const unBlockUserToSystem = (user_id: string, page: number) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<BlockUserToSystem>({\n      type: ActionTypes.UNBLOCK_USER_TO_SYSTEM,\n      payload: { id: user_id, page },\n    });\n  };\n};\n\nexport const assignRoleToUserAccess = (\n  data: AssignRoleToUserActionInterface,\n  page: number\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<AssignRoleToUserAction>({\n      type: ActionTypes.ASSIGN_ROLE_TO_USER,\n      payload: { data, page },\n    });\n  };\n};\n\nexport const customizeUserAccess = (\n  data: CustomeAccessInterface,\n  page: number\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CustomizeUserAccessAction>({\n      type: ActionTypes.CUSTOMIZE_USER_ACCESS,\n      payload: { data, page },\n    });\n  };\n};\n\nexport const resetUserAccess = (data: string, page: number) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<ResetUserAccessAction>({\n      type: ActionTypes.RESET_USER_ACCESS,\n      payload: { user_id: data, page },\n    });\n  };\n};\n\nexport const FC_GetUserBySearch = async (\n  search_value: string,\n  callback: (\n    status: boolean,\n    msg: string,\n    data: UserInterface | null | \"\"\n  ) => void\n) => {\n  callback(true, \"\", null);\n  try {\n    setAxiosToken();\n    const res = await axios.get<UserInterface | null | \"\">(\n      `${API.USER}/check/${search_value}`\n    );\n    console.log(\"=================FC_GetUserBySearch===================\");\n    console.log({ FC_GetUserBySearch: res });\n    console.log(\"=================FC_GetUserBySearch===================\");\n    callback(false, \"\", res.data);\n  } catch (error) {\n    console.error({ user_error: error });\n    callback(false, errorToText(error), null);\n  }\n};\n","import React, { Component } from \"react\";\nimport { BiFilterAlt } from \"react-icons/bi\";\nimport { FiEdit } from \"react-icons/fi\";\nimport { MdRadioButtonChecked, MdRadioButtonUnchecked } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  schoolLevelsStoreInterface,\n  setSelectedPeriod,\n  loadCourses,\n  loadExamsList,\n  loadEducationCategories,\n  loadDoneExam,\n  loadSchoolLevels,\n  loadPerfomranceExam,\n  loadCandidatesExamPerformance,\n  setSelectedEducationCategory,\n  PushPopupAlert,\n  FilterParamType,\n  ReportGetCandidatePerformanceSortTypes,\n} from \"../../../actions\";\nimport { FC_GetAllSessionByInstitution } from \"../../../actions/session\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport {\n  generatePDF,\n  reportSettingsInterface,\n} from \"../../../components/DownloadPDF/rest\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { SideNavigation } from \"../../../components/Navigation/SideNavigation\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  course,\n  education_category,\n  ReportUserExamStatus,\n  school_level,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport {\n  ExamItemResponse,\n  PrepareExamStatus,\n  QuestionNumberFormat,\n} from \"../../../interfaces/prepare_exam\";\nimport { StoreState } from \"../../../reducers\";\nimport { ExamReportReducerType } from \"../../../reducers/exam_report\";\nimport { SessionPlanReducerInterface } from \"../../../reducers/session\";\nimport {\n  capitalizeFirstLetter,\n  capitalizeFirstWord,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport {\n  DATE,\n  FC_HasInstitute,\n  timestampToDate,\n} from \"../../../utils/functions\";\nimport NoSession from \"../../SessionSettings/NoSession\";\nimport CandiadtePerformancePerDistrict, {\n  FC_CandiadtePerformancePerDistrictFilter,\n} from \"./CandiadtePerformancePerDistrict\";\nimport CandidatePerformance, {\n  CandidateExamPerformanceToPrintInterface,\n  CandidateExamPerformanceReportContentInterface,\n  defaultCandidateExamPerformanceContent,\n  candidatePerfomranceStateInterface,\n  FC_reportCandidatePerformanceData,\n} from \"./CandidatePerformance\";\nimport DoneExamList, {\n  ExaminationProgressToPrintInterface,\n  ExaminationProgressReportContentInterface,\n  defaultExaminationProgressContent,\n  displayStatus,\n  examProgressStateInterface,\n  FC_reportDoneExamList,\n} from \"./DoneExamList\";\nimport ExamList, {\n  ExamPreparationToPrintInterface,\n  examPreparationReportContentInterface,\n  defaultExamPreparationReportContent,\n  examPreparationStateInterface,\n  FC_reportExamList,\n} from \"./ExamList\";\nimport ExamPerformance, {\n  ExamPerformanceToPrintInterface,\n  examPerformanceReportContentInterface,\n  defaultExamPerformanceContent,\n  examPerformanceStateInterface,\n  FC_reportExamPerformanceData,\n} from \"./ExamPerformance\";\nimport ExamPerformancePerDistrict, {\n  FC_ExamPerformancePerDistrictPropsData,\n} from \"./ExamPerformancePerDistrict\";\nimport ExamReportFilters from \"./ExamReportFilters\";\nimport ExamReportModals, { ModalForTypes } from \"./ExamReportModals\";\nimport ExamReportTitle from \"./ExamReportTitle\";\n\nexport interface reportCourseInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n  exam: {\n    questions: string[];\n    status: number;\n    period: string;\n    course: string;\n    exam_status: PrepareExamStatus;\n    termes: string;\n    questions_per_page: number;\n    exam_date: string;\n    start_time: string;\n    duration: number;\n    number_format: QuestionNumberFormat;\n    discription: string;\n    createdAt: string;\n    updatedAt: string;\n    id: string;\n  };\n}\n\nexport const getExamByCourseId = (\n  allExams: ExamItemResponse[],\n  course_id: string\n): ExamItemResponse | undefined => {\n  return allExams.find((item) => item.course === course_id);\n};\n\nexport const getPeriodById = (\n  periods: SessionPlanInterface[],\n  period_id: string\n): SessionPlanInterface | undefined => {\n  return periods.find((item) => item._id === period_id);\n};\n\nexport const loadAllExams = (\n  examsList: ExamItemResponse[] | null,\n  selected_period: SessionPlanInterface | null\n): ExamItemResponse[] | null => {\n  let result: ExamItemResponse[] | null = examsList;\n  if (result && selected_period) {\n    result = result.filter((item) => item.period === selected_period?._id);\n  } else {\n    result = examsList;\n  }\n  return result;\n};\n\n// TYPES OF REPORTS ======================================\nexport enum reportTitleType {\n  APPLICANTS_PERFORMANCE = \"Exam report\",\n  EXAM_PREPARATION = \"List of prepared and not prepared exams\",\n  EXAM_PERFORMANCE = \"Exam performance\",\n  EXAMINATION_PROGRESS = \"List of complete & remaining exams\",\n  EXAM_DISTRICT_PERFORMANCE = \"Top 30 exams passed in\", // ADD DISTRICT NAME EX: Muhanga District\n  APPLICANTS_DISTRICT_PERFORMANCE = \"Top 30 applicants performance\", // ADD DISTRICT NAME EX: Muhanga District && EXAM NAME EX: Physics\n}\n\ninterface ExamReportProps {\n  auth: Auth;\n  periods: SessionPlanReducerInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n  courses: course[] | null;\n  examsList: ExamItemResponse[] | null;\n  adminExamReport: ExamReportReducerType;\n  FC_GetAllSessionByInstitution: Function;\n  loadEducationCategories: Function;\n  setSelectedEducationCategory: (\n    education_category: education_category\n  ) => void;\n  loadCourses: (callback: (loading: boolean) => void) => void;\n  loadExamsList: (callback: (loading: boolean) => void) => void;\n  loadDoneExam: (period_id: string, callback: Function) => void;\n  loadPerfomranceExam: (period_id: string, callback: Function) => void;\n  loadSchoolLevels: (callback: (loading: boolean) => void) => void;\n  loadCandidatesExamPerformance: (\n    dataBody: FilterParamType | null,\n    callback: Function\n  ) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface ExamReportState {\n  loading: boolean;\n  loadingCourses: boolean;\n  loadingExams: boolean;\n  downloading: boolean;\n  loadingDoneExam: boolean;\n  loadingCandidatesExamPerformance: boolean;\n  loadingExamPerformance: boolean;\n  loadingSettings: boolean;\n\n  // FILTER STATES =======================================\n  filterPreparation: \"prepared\" | \"not prepared\" | \"all\";\n  filterExamProgress: \"Done\" | \"Active\" | \"all\";\n  filterApplicantPerformance: ReportUserExamStatus | \"all\";\n  // END FILTER STATES =======================================\n\n  selectPeriod: boolean;\n  generateReportModal: {\n    reportType: \"EXCEL\" | \"PDF\";\n    status: boolean;\n  } | null;\n  districtModal: boolean;\n  selected_period: SessionPlanInterface | null;\n\n  // GENERATE EXCEL REPORT =======================================\n  // WHAT TO PRINT ########################################\n  reportTitle: reportTitleType;\n  // WHAT TITLE TO PRINT ########################################\n  excelReportTitle: string;\n  // SET DEFAULT CONTENT ########################################\n  // ############### EXAM PREPARATION ######################\n  examsToPrint: ExamPreparationToPrintInterface[] | null;\n  examPreparationReportContent: examPreparationReportContentInterface[];\n  // ############### EXAM PERFORMANCE ######################\n  examPerformanceToPrint: ExamPerformanceToPrintInterface[] | null;\n  examPerformanceReportContent: examPerformanceReportContentInterface[];\n  // ############### TOP 30 EXAM PERFORMANCE ######################\n  exam30PerformanceToPrint: ExamPerformanceToPrintInterface[] | null;\n  exam30PerformanceReportContent: examPerformanceReportContentInterface[];\n  // ############### EXAMINATION PROGRESS ######################\n  examinationProgressToPrint: ExaminationProgressToPrintInterface[] | null;\n  examinationProgressReportContent: ExaminationProgressReportContentInterface[];\n  // ############### CANDIDATE EXAM PERFORMANCE ######################\n  candidateExamPerformanceToPrint:\n    | CandidateExamPerformanceToPrintInterface[]\n    | null;\n\n  candidateExamPerformanceReportContent: CandidateExamPerformanceReportContentInterface[];\n  // ############### CANDIDATE EXAM PERFORMANCE ######################\n\n  candidate30ExamPerformanceToPrint:\n    | CandidateExamPerformanceToPrintInterface[]\n    | null;\n\n  candidate30ExamPerformanceReportContent: CandidateExamPerformanceReportContentInterface[];\n  // END GENERATE EXCEL REPORT =======================================\n}\n\nclass _ExamReport extends Component<ExamReportProps, ExamReportState> {\n  constructor(props: ExamReportProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingCourses: true,\n      loadingExams: true,\n      downloading: false,\n      loadingDoneExam: true,\n      loadingCandidatesExamPerformance: true,\n      loadingExamPerformance: true,\n      loadingSettings: true,\n      selectPeriod: false,\n      districtModal: false,\n\n      // FILTER STATES =======================================\n      filterPreparation: \"all\",\n      filterExamProgress: \"all\",\n      filterApplicantPerformance: \"all\",\n      // END FILTER STATES =======================================\n\n      generateReportModal: null,\n      selected_period: null,\n\n      // GENERATE EXCEL REPORT =======================================\n      // WHAT TO PRINT ########################################\n      reportTitle: reportTitleType.APPLICANTS_PERFORMANCE,\n      // WHAT TITLE TO PRINT ########################################\n      excelReportTitle: reportTitleType.APPLICANTS_PERFORMANCE,\n      // SET DEFAULT CONTENT ########################################\n      // ############### EXAM PREPARATION ######################\n      examsToPrint: null,\n      examPreparationReportContent: defaultExamPreparationReportContent,\n      // ############### EXAM PERFORMANCE ######################\n      examPerformanceToPrint: null,\n      examPerformanceReportContent: defaultExamPerformanceContent,\n      // ############### TOP 30 EXAM PERFORMANCE ######################\n      exam30PerformanceToPrint: null,\n      exam30PerformanceReportContent: defaultExamPerformanceContent,\n      // ############### EXAMINATION PROGRESS ######################\n      examinationProgressToPrint: null,\n      examinationProgressReportContent: defaultExaminationProgressContent,\n      // ############### CANDIDATE EXAM PERFORMANCE ######################\n      candidateExamPerformanceToPrint: null,\n\n      candidateExamPerformanceReportContent:\n        defaultCandidateExamPerformanceContent,\n      // ############### CANDIDATE EXAM PERFORMANCE ######################\n\n      candidate30ExamPerformanceToPrint: null,\n\n      candidate30ExamPerformanceReportContent:\n        defaultCandidateExamPerformanceContent,\n      // END GENERATE EXCEL REPORT =======================================\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingCourses = (value: boolean) => {\n    this.setState({ loadingCourses: value });\n  };\n\n  setLoadingExams = (value: boolean) => {\n    this.setState({ loadingExams: value });\n  };\n\n  setDownloading = (value: boolean) => {\n    this.setState({ downloading: value });\n  };\n\n  setLoadingDoneExam = (value: boolean) => {\n    this.setState({ loadingDoneExam: value });\n  };\n\n  setLoadingCandidatesExamPerformance = (value: boolean) => {\n    this.setState({ loadingCandidatesExamPerformance: value });\n  };\n\n  setLoadingExamPerformance = (value: boolean) => {\n    this.setState({ loadingExamPerformance: value });\n  };\n\n  setLoadingSettings = (value: boolean) => {\n    this.setState({ loadingSettings: value });\n  };\n\n  setSelectPeriod = (value: boolean) => {\n    this.setState({ selectPeriod: value });\n  };\n\n  setDistrictModal = (value: boolean) => {\n    this.setState({ districtModal: value });\n  };\n\n  setFilterPreparation = (value: \"prepared\" | \"not prepared\" | \"all\") => {\n    this.setState({ filterPreparation: value });\n  };\n\n  setFilterExamProgress = (value: \"Done\" | \"Active\" | \"all\") => {\n    this.setState({ filterExamProgress: value });\n  };\n\n  setFilterApplicantPerformance = (value: ReportUserExamStatus | \"all\") => {\n    this.setState({ filterApplicantPerformance: value });\n  };\n\n  setGenerateReportModal = (\n    value: {\n      reportType: \"EXCEL\" | \"PDF\";\n      status: boolean;\n    } | null\n  ) => {\n    this.setState({ generateReportModal: value });\n  };\n\n  setSelectedPeriod = (value: SessionPlanInterface | null) => {\n    this.setState({ selected_period: value });\n  };\n\n  setReportTitle = (value: reportTitleType) => {\n    this.setState({ reportTitle: value });\n  };\n\n  setExcelReportTitle = (value: string) => {\n    this.setState({ excelReportTitle: value });\n  };\n\n  setExamsToPrint = (value: ExamPreparationToPrintInterface[] | null) => {\n    this.setState({ examsToPrint: value });\n  };\n\n  setExamPreparationReportContent = (\n    value: examPreparationReportContentInterface[]\n  ) => {\n    this.setState({ examPreparationReportContent: value });\n  };\n  setExamPerformanceToPrint = (\n    value: ExamPerformanceToPrintInterface[] | null\n  ) => {\n    this.setState({ examPerformanceToPrint: value });\n  };\n  setExamPerformanceReportContent = (\n    value: examPerformanceReportContentInterface[]\n  ) => {\n    this.setState({ examPerformanceReportContent: value });\n  };\n\n  setExam30PerformanceToPrint = (\n    value: ExamPerformanceToPrintInterface[] | null\n  ) => {\n    this.setState({ exam30PerformanceToPrint: value });\n  };\n  setExam30PerformanceReportContent = (\n    value: examPerformanceReportContentInterface[]\n  ) => {\n    this.setState({ exam30PerformanceReportContent: value });\n  };\n  setExaminationProgressToPrint = (\n    value: ExaminationProgressToPrintInterface[] | null\n  ) => {\n    this.setState({ examinationProgressToPrint: value });\n  };\n  setExaminationProgressExamPerformanceReportContent = (\n    value: ExaminationProgressReportContentInterface[]\n  ) => {\n    this.setState({ examinationProgressReportContent: value });\n  };\n\n  setCandidateExamPerformanceToPrint = (\n    value: CandidateExamPerformanceToPrintInterface[] | null\n  ) => {\n    this.setState({ candidateExamPerformanceToPrint: value });\n  };\n\n  setCandidateExamPerformanceReportContent = (\n    value: CandidateExamPerformanceReportContentInterface[]\n  ) => {\n    this.setState({ candidateExamPerformanceReportContent: value });\n  };\n\n  setCandidate30ExamPerformanceToPrint = (\n    value: CandidateExamPerformanceToPrintInterface[] | null\n  ) => {\n    this.setState({ candidate30ExamPerformanceToPrint: value });\n  };\n\n  setCandidate30ExamPerformanceReportContent = (\n    value: CandidateExamPerformanceReportContentInterface[]\n  ) => {\n    this.setState({ candidate30ExamPerformanceReportContent: value });\n  };\n\n  selectDefaultSession = (allSession: SessionPlanInterface[]) => {\n    if (allSession.length > 0) {\n      let active_period = allSession.find((item) => item.is_active);\n      this.setSelectedPeriod(active_period ? active_period : allSession[0]);\n      this.onPeriodChange(\n        active_period ? active_period._id : allSession[0]._id\n      );\n    }\n    this.setSelectPeriod(false);\n  };\n\n  // onInstitutionChanged = (institution_id: string) => {\n  //   if (\n  //     this.props.schoolLevels.education_categories &&\n  //     this.props.schoolLevels.education_categories.length > 0\n  //   ) {\n\n  //   }\n  // };\n\n  FD_GetSessions = (institution_id: string) => {\n    this.setSelectedPeriod(null);\n    this.props.FC_GetAllSessionByInstitution(\n      institution_id,\n      (status: boolean, msg: string, data?: SessionPlanInterface[]) => {\n        this.setLoadingSettings(status);\n        if (!status) {\n          if (!isEmptyOrSpaces(msg)) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          if (data && data.length > 0) {\n            this.selectDefaultSession(data);\n          }\n        }\n      }\n    );\n  };\n\n  componentDidMount = () => {\n    if (FC_HasInstitute(this.props.auth.education_institution_id)) {\n      this.FD_GetSessions(this.props.auth.education_institution_id!);\n    }\n\n    if (\n      this.props.schoolLevels.education_categories === null ||\n      this.props.schoolLevels.education_categories.length\n    ) {\n      this.props.loadEducationCategories(\n        (status: boolean, data?: education_category[]) => {\n          this.setLoadingSettings(status);\n          if (!status && data && data.length > 0) {\n            // if (!isEmptyOrSpaces(msg)) {\n            //   this.props.PushPopupAlert({\n            //     title: msg,\n            //     theme: PopupAlertTheme.danger,\n            //   });\n            // }\n\n            if (\n              FC_HasInstitute(this.props.auth.education_institution_id) ===\n              false\n            ) {\n              this.props.setSelectedEducationCategory(data[0]);\n              this.FD_GetSessions(data[0].education_institute_id);\n            } else {\n              const thisEducation = data.find(\n                (item) =>\n                  item.education_institute_id ===\n                  this.props.auth.education_institution_id\n              );\n              this.props.setSelectedEducationCategory(\n                thisEducation ? thisEducation : data[0]\n              );\n            }\n            // if (data && data.length > 0) {\n            // }\n          }\n        }\n      );\n    } else if (!this.props.schoolLevels.selectedEducationCategory) {\n      if (FC_HasInstitute(this.props.auth.education_institution_id) === false) {\n        this.props.setSelectedEducationCategory(\n          this.props.schoolLevels.education_categories[0]\n        );\n        this.FD_GetSessions(\n          this.props.schoolLevels.education_categories[0].education_institute_id\n        );\n      } else {\n        const thisEducation = this.props.schoolLevels.education_categories.find(\n          (item) =>\n            item.education_institute_id ===\n            this.props.auth.education_institution_id\n        );\n        this.props.setSelectedEducationCategory(\n          thisEducation\n            ? thisEducation\n            : this.props.schoolLevels.education_categories[0]\n        );\n      }\n    }\n\n    if (\n      this.props.schoolLevels.school_levels === null ||\n      this.props.schoolLevels.school_levels.length <= 0\n    ) {\n      this.props.loadSchoolLevels(this.setLoadingSettings);\n    }\n\n    if (\n      this.props.courses === null ||\n      (this.props.courses.length === 0 && this.state.loadingCourses)\n    ) {\n      this.props.loadCourses(this.setLoadingCourses);\n    } else if (this.state.loadingCourses) {\n      this.setLoadingCourses(false);\n    }\n\n    if (\n      this.props.examsList === null ||\n      (this.props.examsList.length === 0 && this.state.loadingExams)\n    ) {\n      this.props.loadExamsList(this.setLoadingExams);\n    } else if (this.state.loadingExams) {\n      this.setLoadingExams(false);\n    }\n\n    // if (\n    //   this.props.auth.application_session &&\n    //   this.props.auth.application_session._id &&\n    //   (this.props.adminExamReport.DoneExam === null ||\n    //     (this.props.adminExamReport.DoneExam.length === 0 &&\n    //       this.state.loadingDoneExam))\n    // ) {\n    //   this.props.loadDoneExam(\n    //     this.props.auth.application_session._id,\n    //     (status: boolean, msg: string) => {\n    //       if (!status) {\n    //         if (msg.length > 0) {\n    //           this.props.PushPopupAlert({\n    //             title: msg,\n    //             theme: PopupAlertTheme.danger,\n    //           });\n    //         }\n    //         this.setLoadingDoneExam(false);\n    //       }\n    //     }\n    //   );\n    // } else if (this.state.loadingDoneExam) {\n    //   this.setLoadingDoneExam(false);\n    // }\n\n    // if (\n    //   this.props.auth.application_session &&\n    //   this.props.auth.application_session._id &&\n    //   (this.props.adminExamReport.CandidatesExamPerformance === null ||\n    //     (this.props.adminExamReport.CandidatesExamPerformance.length === 0 &&\n    //       this.state.loadingCandidatesExamPerformance))\n    // ) {\n    //   this.props.loadCandidatesExamPerformance(\n    //     {\n    //       order: \"desc\",\n    //       sortBy: ReportGetCandidatePerformanceSortTypes.DATE,\n    //       filter: {\n    //         period: this.props.auth.application_session._id,\n    //       },\n    //     },\n    //     (status: boolean, msg: string) => {\n    //       if (!status) {\n    //         if (msg.length > 0) {\n    //           this.props.PushPopupAlert({\n    //             title: msg,\n    //             theme: PopupAlertTheme.danger,\n    //           });\n    //         }\n    //         this.setLoadingCandidatesExamPerformance(false);\n    //       }\n    //     }\n    //   );\n    // } else if (this.state.loadingCandidatesExamPerformance) {\n    //   this.setLoadingCandidatesExamPerformance(false);\n    // }\n\n    // if (\n    //   this.props.auth.application_session &&\n    //   this.props.auth.application_session._id &&\n    //   (this.props.adminExamReport.ExamPerformance === null ||\n    //     (this.props.adminExamReport.ExamPerformance.length === 0 &&\n    //       this.state.loadingExamPerformance))\n    // ) {\n    //   this.props.loadPerfomranceExam(\n    //     this.props.auth.application_session._id,\n    //     (status: boolean, msg: string) => {\n    //       if (!status) {\n    //         if (msg.length > 0) {\n    //           this.props.PushPopupAlert({\n    //             title: msg,\n    //             theme: PopupAlertTheme.danger,\n    //           });\n    //         }\n    //         this.setLoadingExamPerformance(false);\n    //       }\n    //     }\n    //   );\n    // } else if (this.state.loadingExamPerformance) {\n    //   this.setLoadingExamPerformance(false);\n    // }\n\n    if (this.state.excelReportTitle === this.state.reportTitle) {\n      let result: string = \"\";\n      if (\n        this.state.excelReportTitle ===\n          reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n        this.props.adminExamReport.reportDistrictId\n      ) {\n        result += ` ${this.props.adminExamReport.reportDistrictId.district_name} district`;\n      } else if (\n        this.state.excelReportTitle ===\n        reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE\n      ) {\n        if (this.props.adminExamReport.reportDistrictId) {\n          result += ` in ${this.props.adminExamReport.reportDistrictId.district_name} district`;\n        }\n        if (this.props.adminExamReport.reportCourseId) {\n          result += ` in exam of ${this.props.adminExamReport.reportCourseId.course_name}(${this.props.adminExamReport.reportCourseId.course_code})`;\n        }\n      } else {\n        result = \"\";\n      }\n      this.setExcelReportTitle(this.state.excelReportTitle + result);\n      this.setLoading(false);\n    }\n  };\n\n  onPeriodChange = (period_id: string) => {\n    this.props.loadDoneExam(period_id, (status: boolean, msg: string) => {\n      this.setLoadingDoneExam(status);\n      if (!status) {\n        if (msg.length > 0) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n        this.setLoadingDoneExam(false);\n      }\n    });\n\n    this.props.loadPerfomranceExam(\n      period_id,\n      (status: boolean, msg: string) => {\n        this.setLoadingExamPerformance(status);\n        if (!status) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          this.setLoadingExamPerformance(false);\n        }\n      }\n    );\n\n    this.props.loadCandidatesExamPerformance(\n      {\n        order: \"desc\",\n        sortBy: ReportGetCandidatePerformanceSortTypes.DATE,\n        filter: {\n          period: period_id,\n        },\n      },\n      (status: boolean, msg: string) => {\n        if (!status) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          this.setLoadingCandidatesExamPerformance(false);\n        }\n      }\n    );\n  };\n\n  getLevelbyId = (level_id: string): school_level | undefined => {\n    if (this.props.schoolLevels.school_levels) {\n      return this.props.schoolLevels.school_levels.find(\n        (item) => item.school_level_id === level_id\n      );\n    }\n  };\n\n  getCourses = (): course[] | null => {\n    let result: course[] | null = [],\n      search_all: boolean = true;\n    if (this.props.courses) {\n      // FILTER BY EDICATION CATEGORY ====================\n      if (this.props.schoolLevels.selectedEducationCategory) {\n        for (const key in this.props.courses) {\n          if (Object.prototype.hasOwnProperty.call(this.props.courses, key)) {\n            if (this.props.courses[key].school_levels.length > 0) {\n              this.props.courses[key].school_levels.forEach((level) => {\n                let levelDetail = this.getLevelbyId(level);\n                if (\n                  levelDetail &&\n                  (levelDetail.education_institute.includes(\n                    this.props.schoolLevels.selectedEducationCategory!\n                      .education_institute_id\n                  ) ||\n                    levelDetail.education_institute.length <= 0)\n                ) {\n                  result && result.push(this.props.courses![key]);\n                }\n              });\n            } else {\n              result && result.push(this.props.courses![key]);\n            }\n          }\n        }\n      }\n      // RETURN DEFAULT VALUES ====================\n      else {\n        search_all = false;\n      }\n    }\n    return !search_all ? this.props.courses : result;\n  };\n\n  updateExamToPrint = () => {\n    // EXAM PREPARATION ######################\n    if (this.state.reportTitle === reportTitleType.EXAM_PREPARATION) {\n      if (\n        loadAllExams(this.props.examsList, this.state.selected_period) &&\n        this.getCourses() &&\n        this.props.periods.allSessionPlans\n      ) {\n        let data: examPreparationStateInterface[] = FC_reportExamList(\n          this.getCourses()!,\n          loadAllExams(this.props.examsList, this.state.selected_period)!\n        );\n        let arrayNew: ExamPreparationToPrintInterface[] = [];\n        let n: number = 1;\n        for (const key in data) {\n          if (Object.prototype.hasOwnProperty.call(data, key)) {\n            let school_level: string = \"\";\n            if (data[key].school_levels.length) {\n              data[key].school_levels.forEach((element, index) => {\n                let findLevel = this.getLevelbyId(element);\n                if (index === 0) {\n                  school_level = findLevel ? findLevel.school_level_name : \"\";\n                } else {\n                  school_level += findLevel\n                    ? \", \" + findLevel.school_level_name\n                    : \"\";\n                }\n              });\n            } else {\n              school_level = \"Any level\";\n            }\n            let dataArray: ExamPreparationToPrintInterface = {\n              course_id: n,\n              course_name: data[key].course_name,\n              course_code: data[key].course_code,\n              description: data[key].description,\n              school_levels: data[key].school_levels.length\n                ? school_level\n                : \"Any\",\n              exam_period: data[key].exam\n                ? getPeriodById(\n                    this.props.periods.allSessionPlans,\n                    data[key].exam!.period\n                  )\n                  ? getPeriodById(\n                      this.props.periods.allSessionPlans,\n                      data[key].exam!.period\n                    )!.session_plan_name\n                  : \"-\"\n                : \"-\",\n              exam_date: data[key].exam ? DATE(data[key].exam!.exam_date) : \"-\",\n              exam_time: data[key].exam ? data[key].exam!.start_time : \"-\",\n              exam_duration: data[key].exam\n                ? data[key].exam!.duration.toString()\n                : \"-\",\n              preparation_status: data[key].exam ? \"Prepared\" : \"Not prepared\",\n            };\n\n            for (const key in this.state.examPreparationReportContent) {\n              if (\n                Object.prototype.hasOwnProperty.call(\n                  this.state.examPreparationReportContent,\n                  key\n                )\n              ) {\n                if (!this.state.examPreparationReportContent[key].status) {\n                  delete dataArray[\n                    this.state.examPreparationReportContent[key].key\n                  ];\n                }\n              }\n            }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n        this.setExamsToPrint(arrayNew);\n        arrayNew = [];\n        n = 1;\n        // props.applicationsToPrint=;\n      }\n    }\n    // EXAM PERFORMANCE ######################\n    if (this.state.reportTitle === reportTitleType.EXAM_PERFORMANCE) {\n      if (\n        loadAllExams(this.props.examsList, this.state.selected_period) &&\n        this.getCourses() &&\n        this.props.adminExamReport.ExamPerformance &&\n        this.props.periods.allSessionPlans\n      ) {\n        let data: examPerformanceStateInterface[] =\n          FC_reportExamPerformanceData(\n            this.getCourses()!,\n            loadAllExams(this.props.examsList, this.state.selected_period)!,\n            this.props.adminExamReport.ExamPerformance\n          );\n        let arrayNew: ExamPerformanceToPrintInterface[] = [];\n        let n: number = 1;\n        for (const key in data) {\n          if (Object.prototype.hasOwnProperty.call(data, key)) {\n            let school_level: string = \"\";\n            if (data[key].school_levels.length) {\n              data[key].school_levels.forEach((element, index) => {\n                let findLevel = this.getLevelbyId(element);\n                if (index === 0) {\n                  school_level = findLevel ? findLevel.school_level_name : \"\";\n                } else {\n                  school_level += findLevel\n                    ? \", \" + findLevel.school_level_name\n                    : \"\";\n                }\n              });\n            } else {\n              school_level = \"Any level\";\n            }\n            let dataArray: ExamPerformanceToPrintInterface = {\n              course_id: n,\n              course_name: data[key].course_name,\n              course_code: data[key].course_code,\n              description: data[key].description,\n              school_levels: data[key].school_levels.length\n                ? school_level\n                : \"Any\",\n              exam_period: data[key].exam\n                ? getPeriodById(\n                    this.props.periods.allSessionPlans,\n                    data[key].exam!.period\n                  )\n                  ? getPeriodById(\n                      this.props.periods.allSessionPlans,\n                      data[key].exam!.period\n                    )!.session_plan_name\n                  : \"-\"\n                : \"-\",\n              exam_date: data[key].exam ? DATE(data[key].exam!.exam_date) : \"-\",\n              exam_time: data[key].exam ? data[key].exam!.start_time : \"-\",\n              exam_duration: data[key].exam\n                ? data[key].exam!.duration.toString()\n                : \"-\",\n              exam_performance: Number(data[key].exam_performance.toFixed(1)),\n            };\n\n            for (const key in this.state.examPerformanceReportContent) {\n              if (\n                Object.prototype.hasOwnProperty.call(\n                  this.state.examPerformanceReportContent,\n                  key\n                )\n              ) {\n                if (!this.state.examPerformanceReportContent[key].status) {\n                  delete dataArray[\n                    this.state.examPerformanceReportContent[key].key\n                  ];\n                }\n              }\n            }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n        this.setExamPerformanceToPrint(arrayNew);\n        arrayNew = [];\n        n = 1;\n        // props.applicationsToPrint=;\n      }\n    }\n    // TOP 30 EXAM PERFORMANCE ######################\n    if (this.state.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE) {\n      if (\n        loadAllExams(this.props.examsList, this.state.selected_period) &&\n        this.getCourses() &&\n        this.props.adminExamReport.DoneExam &&\n        this.props.adminExamReport.CandidatesExamPerformance &&\n        this.props.adminExamReport.reportDistrictId &&\n        this.props.periods.allSessionPlans\n      ) {\n        let data = FC_ExamPerformancePerDistrictPropsData(\n          this.getCourses()!,\n          loadAllExams(this.props.examsList, this.state.selected_period)!,\n          this.props.adminExamReport.DoneExam,\n          this.props.adminExamReport.CandidatesExamPerformance,\n          this.props.adminExamReport.reportDistrictId.district_id\n        ).slice(0, 30);\n        let arrayNew: ExamPerformanceToPrintInterface[] = [];\n        let n: number = 1;\n        for (const key in data) {\n          if (Object.prototype.hasOwnProperty.call(data, key)) {\n            let school_level: string = \"\";\n            if (data[key].school_levels.length) {\n              data[key].school_levels.forEach((element, index) => {\n                let findLevel = this.getLevelbyId(element);\n                if (index === 0) {\n                  school_level = findLevel ? findLevel.school_level_name : \"\";\n                } else {\n                  school_level += findLevel\n                    ? \", \" + findLevel.school_level_name\n                    : \"\";\n                }\n              });\n            } else {\n              school_level = \"Any level\";\n            }\n            let dataArray: ExamPerformanceToPrintInterface = {\n              course_id: n,\n              course_name: data[key].course_name,\n              course_code: data[key].course_code,\n              description: data[key].description,\n              school_levels: data[key].school_levels.length\n                ? school_level\n                : \"Any\",\n              exam_period: data[key].exam\n                ? getPeriodById(\n                    this.props.periods.allSessionPlans,\n                    data[key].exam!.period\n                  )\n                  ? getPeriodById(\n                      this.props.periods.allSessionPlans,\n                      data[key].exam!.period\n                    )!.session_plan_name\n                  : \"-\"\n                : \"-\",\n              exam_date: data[key].exam ? DATE(data[key].exam!.exam_date) : \"-\",\n              exam_time: data[key].exam ? data[key].exam!.start_time : \"-\",\n              exam_duration: data[key].exam\n                ? data[key].exam!.duration.toString()\n                : \"-\",\n              exam_performance: 0,\n            };\n\n            for (const key in this.state.exam30PerformanceReportContent) {\n              if (\n                Object.prototype.hasOwnProperty.call(\n                  this.state.exam30PerformanceReportContent,\n                  key\n                )\n              ) {\n                if (!this.state.exam30PerformanceReportContent[key].status) {\n                  delete dataArray[\n                    this.state.exam30PerformanceReportContent[key].key\n                  ];\n                }\n              }\n            }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n        this.setExam30PerformanceToPrint(arrayNew);\n        arrayNew = [];\n        n = 1;\n      }\n    }\n    // EXAMINATION PROGRESS ######################\n    if (this.state.reportTitle === reportTitleType.EXAMINATION_PROGRESS) {\n      if (\n        loadAllExams(this.props.examsList, this.state.selected_period) &&\n        this.getCourses() &&\n        this.props.adminExamReport.DoneExam &&\n        this.props.periods.allSessionPlans\n      ) {\n        let data: examProgressStateInterface[] = FC_reportDoneExamList(\n          this.getCourses()!,\n          loadAllExams(this.props.examsList, this.state.selected_period)!,\n          this.props.adminExamReport.DoneExam\n        );\n        let arrayNew: ExaminationProgressToPrintInterface[] = [];\n        let n: number = 1;\n        for (const key in data) {\n          if (Object.prototype.hasOwnProperty.call(data, key)) {\n            let school_level: string = \"\";\n            if (data[key].school_levels.length) {\n              data[key].school_levels.forEach((element, index) => {\n                let findLevel = this.getLevelbyId(element);\n                if (index === 0) {\n                  school_level = findLevel ? findLevel.school_level_name : \"\";\n                } else {\n                  school_level += findLevel\n                    ? \", \" + findLevel.school_level_name\n                    : \"\";\n                }\n              });\n            } else {\n              school_level = \"Any level\";\n            }\n            let dataArray: ExaminationProgressToPrintInterface = {\n              course_id: n,\n              course_name: data[key].course_name,\n              course_code: data[key].course_code,\n              description: data[key].description,\n              school_levels: data[key].school_levels.length\n                ? school_level\n                : \"Any\",\n              exam_period: data[key].exam\n                ? getPeriodById(\n                    this.props.periods.allSessionPlans,\n                    data[key].exam!.period\n                  )\n                  ? getPeriodById(\n                      this.props.periods.allSessionPlans,\n                      data[key].exam!.period\n                    )!.session_plan_name\n                  : \"-\"\n                : \"-\",\n              exam_date: data[key].exam ? DATE(data[key].exam!.exam_date) : \"-\",\n              exam_time: data[key].exam ? data[key].exam!.start_time : \"-\",\n              exam_duration: data[key].exam\n                ? data[key].exam!.duration.toString()\n                : \"-\",\n              exam_status:\n                data[key].preparation_status === \"Done\"\n                  ? \"Completed\"\n                  : data[key].preparation_status,\n            };\n\n            for (const key in this.state.examinationProgressReportContent) {\n              if (\n                Object.prototype.hasOwnProperty.call(\n                  this.state.examinationProgressReportContent,\n                  key\n                )\n              ) {\n                if (!this.state.examinationProgressReportContent[key].status) {\n                  delete dataArray[\n                    this.state.examinationProgressReportContent[key].key\n                  ];\n                }\n              }\n            }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n        this.setExaminationProgressToPrint(arrayNew);\n        arrayNew = [];\n        n = 1;\n        // props.applicationsToPrint=;\n      }\n    }\n    // CANDIDATE EXAM PERFORMANCE ######################\n    if (this.state.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE) {\n      if (\n        this.getCourses() &&\n        this.props.adminExamReport.CandidatesExamPerformance &&\n        this.props.periods.allSessionPlans\n      ) {\n        let data: candidatePerfomranceStateInterface[] =\n          FC_reportCandidatePerformanceData(\n            this.getCourses()!,\n            this.props.adminExamReport.CandidatesExamPerformance,\n            this.props.adminExamReport.reportCourseId\n              ? this.props.adminExamReport.reportCourseId.course_id\n              : \"all\"\n          );\n        let arrayNew: CandidateExamPerformanceToPrintInterface[] = [];\n        let n: number = 1;\n        for (const key in data) {\n          if (Object.prototype.hasOwnProperty.call(data, key)) {\n            let school_level: string = \"\";\n            if (data[key].school_levels.length) {\n              data[key].school_levels.forEach((element, index) => {\n                let findLevel = this.getLevelbyId(element);\n                if (index === 0) {\n                  school_level = findLevel ? findLevel.school_level_name : \"\";\n                } else {\n                  school_level += findLevel\n                    ? \", \" + findLevel.school_level_name\n                    : \"\";\n                }\n              });\n            } else {\n              school_level = \"Any level\";\n            }\n            let dataArray: CandidateExamPerformanceToPrintInterface = {\n              applicant_id: n,\n              course_name: data[key].course_name,\n              course_code: data[key].course_code,\n              description: data[key].description,\n              school_levels: data[key].school_levels.length\n                ? school_level\n                : \"Any\",\n              exam_period: getPeriodById(\n                this.props.periods.allSessionPlans,\n                data[key].exam.period\n              )\n                ? getPeriodById(\n                    this.props.periods.allSessionPlans,\n                    data[key].exam.period\n                  )!.session_plan_name\n                : \"-\",\n              exam_date: DATE(data[key].exam.exam_date),\n              exam_start_time: timestampToDate(\n                Number(data[key].exam.start_time)\n              ).timeAMPM,\n              exam_end_time: timestampToDate(Number(data[key].exam.end_time))\n                .timeAMPM,\n              performance_status: capitalizeFirstLetter(\n                displayStatus(data[key].exam_stastus)\n              ),\n              applicant_name: capitalizeFirstLetter(data[key].user_name),\n              national_id: data[key].national_id,\n              email: data[key].user_email,\n              phone: data[key].user_phone,\n              marks:\n                data[key].exam_stastus !== ReportUserExamStatus.Editing\n                  ? Number(data[key].user_total_marks.toFixed(1)) + \"%\"\n                  : \"-\",\n            };\n\n            for (const key in this.state\n              .candidateExamPerformanceReportContent) {\n              if (\n                Object.prototype.hasOwnProperty.call(\n                  this.state.candidateExamPerformanceReportContent,\n                  key\n                )\n              ) {\n                if (\n                  !this.state.candidateExamPerformanceReportContent[key].status\n                ) {\n                  delete dataArray[\n                    this.state.candidateExamPerformanceReportContent[key].key\n                  ];\n                }\n              }\n            }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n        this.setCandidateExamPerformanceToPrint(arrayNew);\n        arrayNew = [];\n        n = 1;\n        // props.applicationsToPrint=;\n      }\n    }\n    // 30 CANDIDATE EXAM PERFORMANCE ######################\n    if (\n      this.state.reportTitle === reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE\n    ) {\n      if (\n        this.getCourses() &&\n        this.props.adminExamReport.CandidatesExamPerformance &&\n        this.props.periods.allSessionPlans\n      ) {\n        let data: candidatePerfomranceStateInterface[] =\n          FC_CandiadtePerformancePerDistrictFilter(\n            FC_reportCandidatePerformanceData(\n              this.getCourses()!,\n              this.props.adminExamReport.CandidatesExamPerformance,\n              this.props.adminExamReport.reportCourseId\n                ? this.props.adminExamReport.reportCourseId.course_id\n                : \"all\"\n            ),\n            this.props.adminExamReport.reportDistrictId\n              ? this.props.adminExamReport.reportDistrictId.district_id\n              : null,\n            this.props.adminExamReport.reportCourseId\n              ? this.props.adminExamReport.reportCourseId.course_id\n              : null,\n            this.state.filterApplicantPerformance\n          ).slice(0, 30);\n        let arrayNew: CandidateExamPerformanceToPrintInterface[] = [];\n        let n: number = 1;\n        for (const key in data) {\n          if (Object.prototype.hasOwnProperty.call(data, key)) {\n            let school_level: string = \"\";\n            if (data[key].school_levels.length) {\n              data[key].school_levels.forEach((element, index) => {\n                let findLevel = this.getLevelbyId(element);\n                if (index === 0) {\n                  school_level = findLevel ? findLevel.school_level_name : \"\";\n                } else {\n                  school_level += findLevel\n                    ? \", \" + findLevel.school_level_name\n                    : \"\";\n                }\n              });\n            } else {\n              school_level = \"Any level\";\n            }\n            let dataArray: CandidateExamPerformanceToPrintInterface = {\n              applicant_id: n,\n              course_name: data[key].course_name,\n              course_code: data[key].course_code,\n              description: data[key].description,\n              school_levels: data[key].school_levels.length\n                ? school_level\n                : \"Any\",\n              exam_period: getPeriodById(\n                this.props.periods.allSessionPlans,\n                data[key].exam.period\n              )\n                ? getPeriodById(\n                    this.props.periods.allSessionPlans,\n                    data[key].exam.period\n                  )!.session_plan_name\n                : \"-\",\n              exam_date: DATE(data[key].exam.exam_date),\n              exam_start_time: timestampToDate(\n                Number(data[key].exam.start_time)\n              ).timeAMPM,\n              exam_end_time: timestampToDate(Number(data[key].exam.end_time))\n                .timeAMPM,\n              performance_status: capitalizeFirstLetter(\n                displayStatus(data[key].exam_stastus)\n              ),\n              applicant_name: capitalizeFirstLetter(data[key].user_name),\n              national_id: data[key].national_id,\n              email: data[key].user_email,\n              phone: data[key].user_phone,\n              marks:\n                data[key].exam_stastus !== ReportUserExamStatus.Editing\n                  ? Number(data[key].user_total_marks.toFixed(1)) + \"%\"\n                  : \"-\",\n            };\n\n            for (const key in this.state\n              .candidate30ExamPerformanceReportContent) {\n              if (\n                Object.prototype.hasOwnProperty.call(\n                  this.state.candidate30ExamPerformanceReportContent,\n                  key\n                )\n              ) {\n                if (\n                  !this.state.candidate30ExamPerformanceReportContent[key]\n                    .status\n                ) {\n                  delete dataArray[\n                    this.state.candidate30ExamPerformanceReportContent[key].key\n                  ];\n                }\n              }\n            }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n        this.setCandidate30ExamPerformanceToPrint(arrayNew);\n        arrayNew = [];\n        n = 1;\n        // props.applicationsToPrint=;\n      }\n    }\n  };\n\n  addToTitle = (): string => {\n    let result: string = \"\";\n\n    if (\n      this.state.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n      this.props.adminExamReport.reportDistrictId\n    ) {\n      result += ` ${this.props.adminExamReport.reportDistrictId.district_name} district`;\n    } else if (\n      this.state.reportTitle === reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE\n    ) {\n      if (this.props.adminExamReport.reportDistrictId) {\n        result += ` in ${this.props.adminExamReport.reportDistrictId.district_name} district`;\n      }\n      if (this.props.adminExamReport.reportCourseId) {\n        result += ` in exam of ${this.props.adminExamReport.reportCourseId.course_name}(${this.props.adminExamReport.reportCourseId.course_code})`;\n      }\n    } else {\n      result = \"\";\n    }\n    return result;\n  };\n\n  downlaodPDF = async () => {\n    if (!document.querySelectorAll(\"#report_content tbody tr\").length) {\n      this.props.PushPopupAlert({\n        title: `Can't generate Report of empty Data`,\n        theme: PopupAlertTheme.warning,\n      });\n      return false;\n    }\n\n    if (this.state.selected_period) {\n      const table: HTMLElement | null =\n        document.getElementById(\"report_content\");\n      const reportSettings: reportSettingsInterface = {\n        doneBy: this.props.auth.user.fname + \" \" + this.props.auth.user.lname,\n        title: \"Exam Report\",\n        subjectTitle: \"Subject\",\n        subject: `${this.state.reportTitle} ${this.addToTitle()}`,\n        period: this.state.selected_period.session_plan_name,\n        footer: \"Online Teacher Recruitment\",\n        institute: this.props.schoolLevels.selectedEducationCategory\n          ? this.props.schoolLevels.selectedEducationCategory\n              .education_category_title\n          : \"All institute\",\n        orientation:\n          this.state.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE ||\n          this.state.reportTitle ===\n            reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE\n            ? \"l\"\n            : \"p\",\n      };\n      table && (await generatePDF(reportSettings, table, this.setDownloading));\n    }\n  };\n\n  render() {\n    if (this.state.loading || this.props.periods.allSessionPlans === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading data...\n        </div>\n      );\n    }\n\n    if (this.props.periods.allSessionPlans.length === 0) {\n      return <NoSession />;\n    }\n\n    return (\n      <div>\n        <SideNavigation>\n          {FC_HasInstitute(this.props.auth.education_institution_id) ===\n            false && (\n            <div className=\"flex flex-col mb-4\">\n              <span className=\"text-sm text-gray-600 mb-2\">\n                Education categories:\n              </span>\n              {this.props.schoolLevels.education_categories === null ? (\n                <Loading />\n              ) : this.props.schoolLevels.education_categories.length === 0 ? (\n                <span>No result found</span>\n              ) : (\n                this.props.schoolLevels.education_categories.map((item, i) => (\n                  <div\n                    onClick={() => {\n                      this.props.setSelectedEducationCategory(item);\n                      this.FD_GetSessions(item.education_institute_id);\n                      this.updateExamToPrint();\n                    }}\n                    key={i + 1}\n                    className={`border rounded px-2 py-2 mb-2 cursor-pointer ${\n                      this.props.schoolLevels.selectedEducationCategory !==\n                        null &&\n                      this.props.schoolLevels.selectedEducationCategory\n                        .education_institute_id === item.education_institute_id\n                        ? \"bg-blue-600 text-white hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                        : \"hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                    } font-bold flex flex-row items-center gap-2`}\n                  >\n                    {this.props.schoolLevels.selectedEducationCategory !==\n                      null &&\n                    this.props.schoolLevels.selectedEducationCategory\n                      .education_institute_id ===\n                      item.education_institute_id ? (\n                      <MdRadioButtonChecked />\n                    ) : (\n                      <MdRadioButtonUnchecked />\n                    )}\n                    <span>{item.education_category_title}</span>\n                  </div>\n                ))\n              )}\n            </div>\n          )}\n          <div className=\"\">\n            <div className=\"text-gray-600 text-sm mb-2\">Selected period:</div>\n            <div\n              onClick={() => this.setSelectPeriod(true)}\n              className=\"font-bold bg-blue-50 border border-blue-200 rounded py-2 cursor-pointer text-xs px-2 hover:underline justify-between text-blue-600  mb-4 w-full flex flex-row items-center animate__animated animate__zoomIn\"\n            >\n              {this.state.selected_period !== null\n                ? `${capitalizeFirstWord(\n                    this.state.selected_period.session_plan_name\n                  )}`\n                : \"Filter by period\"}\n              <FiEdit className=\"text-lg text-blue-600\" />\n            </div>\n          </div>\n          <ExamReportFilters\n            reportTitle={this.state.reportTitle}\n            filterPreparation={this.state.filterPreparation}\n            setFilterPreparation={this.setFilterPreparation}\n            filterExamProgress={this.state.filterExamProgress}\n            setFilterExamProgress={this.setFilterExamProgress}\n            filterApplicantPerformance={this.state.filterApplicantPerformance}\n            setFilterApplicantPerformance={this.setFilterApplicantPerformance}\n          />\n        </SideNavigation>\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* REPORT TITLE CONTROLLERS ============================================ */}\n        <ExamReportTitle\n          downloading={this.state.downloading}\n          dataToPrint={loadAllExams(\n            this.props.examsList,\n            this.state.selected_period\n          )}\n          downlaodPDF={this.downlaodPDF}\n          reportTitle={this.state.reportTitle}\n          setReportTitle={this.setReportTitle}\n          setGenerateReportModal={this.setGenerateReportModal}\n          generateReportModal={this.state.generateReportModal}\n          excelReportTitle={this.state.excelReportTitle}\n          setExcelReportTitle={this.setExcelReportTitle}\n          updateExamToPrint={this.updateExamToPrint}\n          // EXAM PREPARATION ######################\n          examsToPrint={this.state.examsToPrint}\n          examPreparationReportContent={this.state.examPreparationReportContent}\n          setExamPreparationReportContent={this.setExamPreparationReportContent}\n          // EXAM PERFORMANCE ######################\n          examPerformanceToPrint={this.state.examPerformanceToPrint}\n          examPerformanceReportContent={this.state.examPerformanceReportContent}\n          setExamPerformanceReportContent={this.setExamPerformanceReportContent}\n          // TOP 30 EXAM PERFORMANCE ######################\n          exam30PerformanceToPrint={this.state.exam30PerformanceToPrint}\n          exam30PerformanceReportContent={\n            this.state.exam30PerformanceReportContent\n          }\n          setExam30PerformanceReportContent={\n            this.setExam30PerformanceReportContent\n          }\n          // EXAMINATION PROGRESS ######################\n          examinationProgressToPrint={this.state.examinationProgressToPrint}\n          examinationProgressReportContent={\n            this.state.examinationProgressReportContent\n          }\n          setExaminationProgressExamPerformanceReportContent={\n            this.setExaminationProgressExamPerformanceReportContent\n          }\n          // CANDIDATE EXAM PERFORMANCE ######################\n          candidateExamPerformanceToPrint={\n            this.state.candidateExamPerformanceToPrint\n          }\n          candidateExamPerformanceReportContent={\n            this.state.candidateExamPerformanceReportContent\n          }\n          setCandidateExamPerformanceReportContent={\n            this.setCandidateExamPerformanceReportContent\n          }\n          // CANDIDATE EXAM PERFORMANCE ######################\n          candidate30ExamPerformanceToPrint={\n            this.state.candidate30ExamPerformanceToPrint\n          }\n          candidate30ExamPerformanceReportContent={\n            this.state.candidate30ExamPerformanceReportContent\n          }\n          setCandidate30ExamPerformanceReportContent={\n            this.setCandidate30ExamPerformanceReportContent\n          }\n          thisPeriod={\n            this.state.selected_period ? this.state.selected_period._id : \"\"\n          }\n        />\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* EXAM LIST CONTROLLERS ============================================ */}\n        {this.state.reportTitle === reportTitleType.EXAM_PREPARATION &&\n          this.props.periods.allSessionPlans && (\n            <ExamList\n              loading={\n                this.state.loadingExams ||\n                this.state.loadingCourses ||\n                this.state.loadingDoneExam\n              }\n              examsListData={loadAllExams(\n                this.props.examsList,\n                this.state.selected_period\n              )}\n              courseListData={this.getCourses()}\n              thisPeriod={this.props.periods.allSessionPlans}\n              filterPreparation={this.state.filterPreparation}\n            />\n          )}\n        {/* EXAM LIST CONTROLLERS ============================================ */}\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* DONE & REMAING EXAM LIST CONTROLLERS ============================================ */}\n        {this.state.reportTitle === reportTitleType.EXAMINATION_PROGRESS &&\n          this.props.periods.allSessionPlans && (\n            <DoneExamList\n              loading={\n                this.state.loadingExams\n                  ? true\n                  : this.state.loadingCourses\n                  ? true\n                  : this.state.loadingDoneExam\n                  ? true\n                  : false\n              }\n              examsListData={loadAllExams(\n                this.props.examsList,\n                this.state.selected_period\n              )}\n              courseListData={this.getCourses()}\n              thisPeriod={this.props.periods.allSessionPlans}\n              doneExamsData={this.props.adminExamReport.DoneExam}\n              filterExamProgress={this.state.filterExamProgress}\n            />\n          )}\n        {/* DONE & REMAING EXAM LIST CONTROLLERS ============================================ */}\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* EXAM PERFORMANCE CONTROLLERS ============================================ */}\n        {this.state.reportTitle === reportTitleType.EXAM_PERFORMANCE &&\n          this.props.periods.allSessionPlans && (\n            <ExamPerformance\n              loading={\n                this.state.loadingExams\n                  ? true\n                  : this.state.loadingCourses\n                  ? true\n                  : this.state.loadingExamPerformance\n                  ? true\n                  : false\n              }\n              examsListData={loadAllExams(\n                this.props.examsList,\n                this.state.selected_period\n              )}\n              courseListData={this.getCourses()}\n              thisPeriod={this.props.periods.allSessionPlans}\n              examsPerformanceData={this.props.adminExamReport.ExamPerformance} // doneExamsData={props.adminExamReport.DoneExam}\n            />\n          )}\n        {/* END EXAM PERFORMANCE CONTROLLERS ============================================ */}\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* EXAM PERFORMANCE PER DISTRICT LIST CONTROLLERS ============================================ */}\n        {this.state.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n        this.props.periods.allSessionPlans &&\n        this.props.adminExamReport.reportDistrictId ? (\n          <ExamPerformancePerDistrict\n            loading={\n              this.state.loadingExams\n                ? true\n                : this.state.loadingCourses\n                ? true\n                : this.state.loadingCandidatesExamPerformance\n                ? true\n                : false\n            }\n            examsListData={loadAllExams(\n              this.props.examsList,\n              this.state.selected_period\n            )}\n            doneExamsData={this.props.adminExamReport.DoneExam}\n            courseListData={this.getCourses()}\n            thisPeriod={this.props.periods.allSessionPlans}\n            candidatePerformanceData={\n              this.props.adminExamReport.CandidatesExamPerformance\n            }\n            thisDistrict={this.props.adminExamReport.reportDistrictId}\n          />\n        ) : (\n          this.state.reportTitle ===\n            reportTitleType.EXAM_DISTRICT_PERFORMANCE && (\n            <NoResult\n              theme={NoResultThemes.Light}\n              value={\"Select district to view data\"}\n              component={\n                <div\n                  onClick={() => this.setDistrictModal(true)}\n                  className=\"btn bg-blue-50 border border-blue-300 text-blue-600 cursor-pointer hover:bg-blue-100 flex flex-row items-center justify-center gap-2 text-sm \"\n                >\n                  <BiFilterAlt className=\"text-xl\" />\n                  Filter by district\n                </div>\n              }\n            />\n          )\n        )}\n        {/* EXAM PERFORMANCE PER DISTRICT LIST CONTROLLERS ============================================  */}\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* APPLICANTS PERFORMANCE EXAM LIST CONTROLLERS ============================================ */}\n        {this.state.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE &&\n          this.props.periods.allSessionPlans && (\n            <CandidatePerformance\n              loading={\n                this.state.loadingExams\n                  ? true\n                  : this.state.loadingCourses\n                  ? true\n                  : this.state.loadingCandidatesExamPerformance\n                  ? true\n                  : false\n              }\n              examsListData={loadAllExams(\n                this.props.examsList,\n                this.state.selected_period\n              )}\n              courseListData={this.getCourses()}\n              thisPeriod={this.props.periods.allSessionPlans}\n              candidatePerformanceData={\n                this.props.adminExamReport.CandidatesExamPerformance\n              }\n              filterApplicantPerformance={this.state.filterApplicantPerformance}\n            />\n          )}\n        {/* APPLICANTS PERFORMANCE EXAM LIST CONTROLLERS ============================================  */}\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* APPLICANTS PERFORMANCE EXAM PER DISTRICT LIST CONTROLLERS ============================================ */}\n        {this.state.reportTitle ===\n          reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE &&\n          this.props.periods.allSessionPlans && (\n            <CandiadtePerformancePerDistrict\n              loading={\n                this.state.loadingExams\n                  ? true\n                  : this.state.loadingCourses\n                  ? true\n                  : this.state.loadingCandidatesExamPerformance\n                  ? true\n                  : false\n              }\n              examsListData={loadAllExams(\n                this.props.examsList,\n                this.state.selected_period\n              )}\n              courseListData={this.getCourses()}\n              thisPeriod={this.props.periods.allSessionPlans}\n              candidatePerformanceData={\n                this.props.adminExamReport.CandidatesExamPerformance\n              }\n              filterApplicantPerformance={this.state.filterApplicantPerformance}\n            />\n          )}\n        {/* APPLICANTS PERFORMANCE EXAM PER DISTRICT LIST CONTROLLERS ============================================  */}\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* CHANGE DISTRICT FILTER MODAL CONTROLLERS ============================================ */}\n        {this.state.districtModal && (\n          <ExamReportModals\n            modalFor={ModalForTypes.choose_district}\n            modalState={this.state.districtModal}\n            changeModalState={this.setDistrictModal}\n            districtId={\n              this.props.adminExamReport.reportDistrictId\n                ? this.props.adminExamReport.reportDistrictId.district_id\n                : \"all\"\n            }\n            reportTitle={this.state.reportTitle}\n          />\n        )}\n        {/* END CHANGE DISTRICT FILTER MODAL CONTROLLERS ============================================ */}\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* MODAL CONTROLLERS ============================================ */}\n        <ExamReportModals\n          modalState={this.state.selectPeriod}\n          changeModalState={this.setSelectPeriod}\n          applicationPeriods={this.props.periods.allSessionPlans}\n          selected_period={this.state.selected_period}\n          setSelectedPeriod={this.setSelectedPeriod}\n          onPeriodChange={this.onPeriodChange}\n          modalFor={ModalForTypes.period}\n        />\n        {/* END MODAL CONTROLLERS ============================================ */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  sessionPlan,\n  schoolLevels,\n  course,\n  prepareExam,\n  adminExamReport,\n}: StoreState): {\n  auth: Auth;\n  periods: SessionPlanReducerInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n  courses: course[] | null;\n  examsList: ExamItemResponse[] | null;\n  adminExamReport: ExamReportReducerType;\n} => {\n  return {\n    auth,\n    periods: sessionPlan,\n    schoolLevels,\n    courses: course.courses,\n    examsList: prepareExam.examsList,\n    adminExamReport,\n  };\n};\n\nexport const ExamReport = connect(mapStateToProps, {\n  setSelectedPeriod,\n  loadCourses,\n  loadExamsList,\n  FC_GetAllSessionByInstitution,\n  loadEducationCategories,\n  loadDoneExam,\n  loadSchoolLevels,\n  loadPerfomranceExam,\n  loadCandidatesExamPerformance,\n  setSelectedEducationCategory,\n  PushPopupAlert,\n})(_ExamReport);\n","import React, { Fragment, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport {\n  course,\n  CandidatesFailedSucceeded,\n  ReportUserExamStatus,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport { StoreState } from \"../../../reducers\";\nimport { ExamReportReducerType } from \"../../../reducers/exam_report\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { DATE, timestampToDate } from \"../../../utils/functions\";\nimport {\n  candidatePerfomranceStateInterface,\n  controlRowsByStatus,\n  FC_reportCandidatePerformanceData,\n  searchCandidatePerformanceData,\n} from \"./CandidatePerformance\";\nimport { displayStatus } from \"./DoneExamList\";\nimport { getPeriodById } from \"./ExamReport\";\n\nexport const FC_CandiadtePerformancePerDistrictFilter = (\n  dataList: candidatePerfomranceStateInterface[],\n  district_id: string | null = null,\n  course_id: string | null = null,\n  thisValue: ReportUserExamStatus | \"all\" = \"all\"\n): candidatePerfomranceStateInterface[] => {\n  let result: candidatePerfomranceStateInterface[] = [];\n  if (thisValue === \"all\") {\n    result = dataList;\n  } else {\n    result = dataList.filter((item) => item.exam_stastus === thisValue);\n  }\n\n  if (district_id) {\n    result = result.filter(\n      (item) =>\n        item.exam.exam_location &&\n        item.exam.exam_location.district_id === district_id\n    );\n  }\n  if (course_id) {\n    result = result.filter((item) => item.course_id === course_id);\n  }\n\n  // SORTING ARRAY FROM MAX TO MIN ==========================\n  let swap: candidatePerfomranceStateInterface;\n  for (let i = 0; i < result.length; i++) {\n    for (let j = i; j < result.length; j++) {\n      if (result[j].user_total_marks > result[i].user_total_marks) {\n        swap = result[j];\n        result[j] = result[i];\n        result[i] = swap;\n      }\n    }\n  }\n  return result;\n};\n\ntype CandiadtePerformancePerDistrictProps = {\n  loading: boolean;\n  examsListData: ExamItemResponse[] | null;\n  courseListData: course[] | null;\n  thisPeriod: SessionPlanInterface[];\n  candidatePerformanceData: CandidatesFailedSucceeded[] | null;\n\n  // redux props ============\n  adminExamReport: ExamReportReducerType;\n  // FOR APPLICANT PERFORMANCE PROPS\n  filterApplicantPerformance: ReportUserExamStatus | \"all\";\n};\n\nconst CandiadtePerformancePerDistrict: React.FC<\n  CandiadtePerformancePerDistrictProps\n> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n\n  return (\n    <Fragment>\n      <div className=\"bg-white my-4\">\n        <div className=\"w-full px-2 py-2\">\n          <input\n            onChange={(e) => setSearchInput(e.target.value)}\n            type=\"text\"\n            value={searchInput}\n            placeholder=\"Search...\"\n            className=\"w-full bg-gray-100 py-2 px-3 rounded\"\n            disabled={\n              props.courseListData &&\n              props.candidatePerformanceData &&\n              FC_CandiadtePerformancePerDistrictFilter(\n                FC_reportCandidatePerformanceData(\n                  props.courseListData,\n                  props.candidatePerformanceData,\n                  props.adminExamReport.reportCourseId\n                    ? props.adminExamReport.reportCourseId.course_id\n                    : \"all\"\n                ),\n                props.adminExamReport.reportDistrictId\n                  ? props.adminExamReport.reportDistrictId.district_id\n                  : null,\n                props.adminExamReport.reportCourseId\n                  ? props.adminExamReport.reportCourseId.course_id\n                  : null,\n                props.filterApplicantPerformance\n              ).length <= 0\n                ? true\n                : false\n            }\n          />\n        </div>\n        <div className=\"w-full overflow-x-auto\">\n          <table className=\"w-full shadow\" id=\"report_content\">\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n              <tr>\n                <td className=\"px-2 py-2\">#</td>\n                <td className=\"px-2 py-2\">Applicants</td>\n                <td className=\"px-2 py-2\">National ID</td>\n                <td className=\"px-2 py-2\">Email</td>\n                <td className=\"px-2 py-2\">Phone</td>\n                <td className=\"px-2 py-2\">\n                  <div className=\"flex items-center gap-1\">Exam</div>\n                </td>\n                <td className=\"px-2 py-2\">Exam period</td>\n                <td className=\"px-2 py-2\">Exam date</td>\n                <td className=\"px-2 py-2\">Exam start time</td>\n                <td className=\"px-2 py-2\">Exam end time</td>\n                <td className=\"px-2 py-2\">\n                  <div className=\"flex items-center gap-1\">Marks</div>\n                </td>\n                <td className=\"px-2 py-2\">Status</td>\n              </tr>\n            </thead>\n            <tbody>\n              {props.courseListData === null || props.loading ? (\n                <tr>\n                  <td colSpan={12} className=\"px-2 py-2\">\n                    <Loading />\n                  </td>\n                </tr>\n              ) : props.candidatePerformanceData &&\n                FC_CandiadtePerformancePerDistrictFilter(\n                  FC_reportCandidatePerformanceData(\n                    props.courseListData,\n                    props.candidatePerformanceData,\n                    props.adminExamReport.reportCourseId\n                      ? props.adminExamReport.reportCourseId.course_id\n                      : \"all\"\n                  ),\n                  props.adminExamReport.reportDistrictId\n                    ? props.adminExamReport.reportDistrictId.district_id\n                    : null,\n                  props.adminExamReport.reportCourseId\n                    ? props.adminExamReport.reportCourseId.course_id\n                    : null,\n                  props.filterApplicantPerformance\n                ).length <= 0 ? (\n                <tr>\n                  <td colSpan={12} className=\"px-2 py-2 text-center\">\n                    No applicant list available!\n                  </td>\n                </tr>\n              ) : (\n                props.candidatePerformanceData &&\n                searchCandidatePerformanceData(\n                  FC_CandiadtePerformancePerDistrictFilter(\n                    FC_reportCandidatePerformanceData(\n                      props.courseListData,\n                      props.candidatePerformanceData,\n                      props.adminExamReport.reportCourseId\n                        ? props.adminExamReport.reportCourseId.course_id\n                        : \"all\"\n                    ),\n                    props.adminExamReport.reportDistrictId\n                      ? props.adminExamReport.reportDistrictId.district_id\n                      : null,\n                    props.adminExamReport.reportCourseId\n                      ? props.adminExamReport.reportCourseId.course_id\n                      : null,\n                    props.filterApplicantPerformance\n                  ).slice(0, 30),\n                  searchInput\n                ).map((item, i) => (\n                  <tr\n                    key={i + 1}\n                    className={`${controlRowsByStatus(\n                      item.exam_stastus\n                    )} text-gray-600 hover:bg-blue-100 hover:text-blue-700 text-sm`}\n                  >\n                    <td className=\"px-2 py-2\">{i + 1}</td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(item.user_name)}\n                    </td>\n                    <td className=\"px-2 py-2\">{item.national_id}</td>\n                    <td className=\"px-2 py-2\">{item.user_email}</td>\n                    <td className=\"px-2 py-2\">{item.user_phone}</td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(item.course_name)} (\n                      <span className=\"font-semibold\">{item.course_code}</span>)\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam\n                        ? getPeriodById(props.thisPeriod, item.exam.period)\n                          ? getPeriodById(props.thisPeriod, item.exam.period)!\n                              .session_plan_name\n                          : \"-\"\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam.exam_date ? DATE(item.exam.exam_date) : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam.start_time\n                        ? timestampToDate(item.exam.start_time).timeAMPM\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam.end_time\n                        ? timestampToDate(item.exam.end_time).timeAMPM\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam_stastus !== ReportUserExamStatus.Editing\n                        ? Number(item.user_total_marks.toFixed(1)) + \"%\"\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(displayStatus(item.exam_stastus))}\n                    </td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  adminExamReport,\n}: StoreState): {\n  adminExamReport: ExamReportReducerType;\n} => {\n  return {\n    adminExamReport,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {})(CandiadtePerformancePerDistrict)\n);\n","import React, { Fragment, useState } from \"react\";\nimport { connect } from \"react-redux\";\n// import { BiSort } from \"react-icons/bi\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  course,\n  CandidatesFailedSucceeded,\n  ExamDoneAndRemainingByPeriodInterface,\n  ReportUserExamStatus,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport { StoreState } from \"../../../reducers\";\nimport { ExamReportReducerType } from \"../../../reducers/exam_report\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { DATE } from \"../../../utils/functions\";\nimport search from \"../../../utils/search\";\nimport { getPeriodById } from \"./ExamReport\";\n\nexport interface examPerformanceStateInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  applicants: number;\n  course_id: string;\n  pass_applicant: number;\n  failed_applicant: number;\n  exam: ExamItemResponse;\n  user_total_marks: number;\n}\n\nexport const FC_ExamPerformancePerDistrictPropsData = (\n  allCourses: course[],\n  allExams: ExamItemResponse[],\n  examsData: ExamDoneAndRemainingByPeriodInterface[],\n  candidatePerformanceData: CandidatesFailedSucceeded[],\n  district_id: string\n): examPerformanceStateInterface[] => {\n  let pass: number = 0,\n    failed: number = 0,\n    result: examPerformanceStateInterface[] = [],\n    ids: string[] = [],\n    exam_ids: string[] = [],\n    doneExamsData: ExamDoneAndRemainingByPeriodInterface[] = examsData.filter(\n      (item) => item.exam_status.toLocaleLowerCase() === \"done\"\n    );\n\n  for (const key in doneExamsData) {\n    if (Object.prototype.hasOwnProperty.call(doneExamsData, key)) {\n      if (exam_ids.includes(doneExamsData[key].id)) continue;\n      exam_ids.push(doneExamsData[key].id);\n      let courser = allCourses.find(\n        (item) => item.course_id === doneExamsData[key].course\n      );\n      let _marks: number = 0;\n\n      if (courser) {\n        // CALCURATING SUM OF ALL CANDIDATES MARKS BY EXAM ID=================================\n        let candidatesByExam: CandidatesFailedSucceeded[] =\n          candidatePerformanceData.filter(\n            (item) =>\n              item.course === doneExamsData[key].course &&\n              item.exam_location &&\n              item.exam_location.district_id === district_id\n          );\n        for (const _key in candidatesByExam) {\n          if (Object.prototype.hasOwnProperty.call(candidatesByExam, _key)) {\n            if (ids.includes(candidatesByExam[_key].user.user_id)) continue;\n            ids.push(candidatesByExam[_key].user.user_id);\n            _marks += candidatesByExam[_key].total_marks;\n            if (\n              candidatesByExam[_key].user_status !==\n                ReportUserExamStatus.Editing &&\n              candidatesByExam[_key].total_marks >= 50\n            ) {\n              pass += 1;\n            } else if (\n              candidatesByExam[_key].user_status !==\n              ReportUserExamStatus.Editing\n            ) {\n              failed += 1;\n            }\n          }\n        }\n        let exam = allExams.find(\n          (item) =>\n            item.course === doneExamsData[key].course &&\n            item.period === doneExamsData[key].period\n        );\n        if (exam) {\n          result.push({\n            course_name: courser.course_name,\n            course_code: courser.course_code,\n            description: courser.description,\n            school_levels: courser.school_levels,\n            course_id: courser.course_id,\n            exam: exam,\n            pass_applicant: pass,\n            failed_applicant: failed,\n            applicants: ids.length,\n            user_total_marks: _marks ? _marks / ids.length : _marks, //candidatesByExam.length\n          });\n        }\n        _marks = 0;\n        ids = [];\n      }\n    }\n    exam_ids = [];\n  }\n\n  // SORTING ARRAY FROM MAX TO MIN ==========================\n  let swap: examPerformanceStateInterface;\n  for (let i = 0; i < result.length; i++) {\n    for (let j = i; j < result.length; j++) {\n      if (result[j].user_total_marks > result[i].user_total_marks) {\n        swap = result[j];\n        result[j] = result[i];\n        result[i] = swap;\n      }\n    }\n  }\n  return result;\n};\n\ntype ExamPerformancePerDistrictProps = {\n  loading: boolean;\n  examsListData: ExamItemResponse[] | null;\n  doneExamsData: ExamDoneAndRemainingByPeriodInterface[] | null;\n  courseListData: course[] | null;\n  thisPeriod: SessionPlanInterface[];\n  candidatePerformanceData: CandidatesFailedSucceeded[] | null;\n  thisDistrict: { district_id: string; district_name: string };\n  adminExamReport: ExamReportReducerType;\n};\n\nconst ExamPerformancePerDistrict: React.FC<ExamPerformancePerDistrictProps> = (\n  props\n) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n\n  return (\n    <Fragment>\n      <div className=\"bg-white my-4 max-w-full overflow-x-auto\">\n        <div className=\"w-full px-2 py-2\">\n          <input\n            onChange={(e) => setSearchInput(e.target.value)}\n            type=\"text\"\n            value={searchInput}\n            placeholder=\"Search...\"\n            className=\"w-full bg-gray-100 py-2 px-3 rounded\"\n            disabled={\n              props.courseListData &&\n              props.examsListData &&\n              props.doneExamsData &&\n              props.candidatePerformanceData &&\n              props.adminExamReport.reportDistrictId &&\n              FC_ExamPerformancePerDistrictPropsData(\n                props.courseListData,\n                props.examsListData,\n                props.doneExamsData,\n                props.candidatePerformanceData,\n                props.adminExamReport.reportDistrictId.district_id\n              ).slice(0, 30).length <= 0\n                ? true\n                : false\n            }\n          />\n        </div>\n        <table className=\"w-full shadow\" id=\"report_content\">\n          <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n            <tr>\n              <td className=\"px-2 py-2\">#</td>\n              <td\n                className=\"px-2 py-2 cursor-pointer\"\n                // onClick={() => setSort(\"course_name\")}\n              >\n                <div className=\"flex items-center gap-1\">\n                  Course\n                  {/* <BiSort /> */}\n                </div>\n              </td>\n              <td className=\"px-2 py-2\">Exam date</td>\n              <td className=\"px-2 py-2\">Exam time</td>\n              <td className=\"px-2 py-2\">Exam duration</td>\n              <td className=\"px-2 py-2\">Exam Period</td>\n              <td className=\"px-2 py-2\">Pass Applicants</td>\n              <td className=\"px-2 py-2\">Failed Applicants</td>\n              <td\n                className=\"px-2 py-2 cursor-pointer\"\n                // onClick={() => setSort(\"user_total_marks\")}\n              >\n                <div className=\"flex items-center gap-1\">\n                  Percentage\n                  {/* <BiSort /> */}\n                </div>\n              </td>\n            </tr>\n          </thead>\n          <tbody>\n            {props.courseListData === null || props.loading ? (\n              <tr>\n                <td colSpan={9} className=\"px-2 py-2\">\n                  <Loading />\n                </td>\n              </tr>\n            ) : props.examsListData &&\n              props.doneExamsData &&\n              props.candidatePerformanceData &&\n              props.adminExamReport.reportDistrictId &&\n              FC_ExamPerformancePerDistrictPropsData(\n                props.courseListData,\n                props.examsListData,\n                props.doneExamsData,\n                props.candidatePerformanceData,\n                props.adminExamReport.reportDistrictId.district_id\n              ).length <= 0 ? (\n              <tr>\n                <td colSpan={9} className=\"px-2 py-2 text-center\">\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"No Exam list available!ss\"}\n                  />\n                </td>\n              </tr>\n            ) : (\n              props.examsListData &&\n              props.doneExamsData &&\n              props.candidatePerformanceData &&\n              props.adminExamReport.reportDistrictId &&\n              search(\n                FC_ExamPerformancePerDistrictPropsData(\n                  props.courseListData,\n                  props.examsListData,\n                  props.doneExamsData,\n                  props.candidatePerformanceData,\n                  props.adminExamReport.reportDistrictId.district_id\n                ).slice(0, 30),\n                searchInput\n              ).map((item: examPerformanceStateInterface, i) => (\n                <tr\n                  key={i + 1}\n                  className={`bg-white text-gray-600 hover:bg-blue-100 hover:text-blue-700 border-b border-gray-300 hover:border-blue-500 text-sm`}\n                >\n                  <td className=\"px-2 py-2\">{i + 1}</td>\n                  <td className=\"px-2 py-2\">\n                    {capitalizeFirstLetter(item.course_name)} (\n                    <span className=\"font-semibold\">{item.course_code}</span>)\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam ? DATE(item.exam.exam_date) : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam ? item.exam.start_time : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam ? item.exam!.duration + \" min\" : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam\n                      ? getPeriodById(props.thisPeriod, item.exam.period)\n                        ? getPeriodById(props.thisPeriod, item.exam.period)!\n                            .session_plan_name\n                        : \"-\"\n                      : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.pass_applicant !== undefined\n                      ? item.pass_applicant\n                      : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.failed_applicant !== undefined\n                      ? item.failed_applicant\n                      : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {Number(item.user_total_marks.toFixed(1)) + \"%\"}\n                  </td>\n                </tr>\n              ))\n            )}\n          </tbody>\n        </table>\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  adminExamReport,\n}: StoreState): {\n  adminExamReport: ExamReportReducerType;\n} => {\n  return {\n    adminExamReport,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {})(ExamPerformancePerDistrict)\n);\n","import React, { Fragment } from \"react\";\nimport { MainItem } from \"../../../components/Navigation/SideNavigation\";\nimport { ReportUserExamStatus } from \"../../../interfaces\";\nimport { displayStatus } from \"./DoneExamList\";\nimport { reportTitleType } from \"./ExamReport\";\n\ntype ExamReportFiltersProps = {\n  reportTitle: reportTitleType;\n\n  // FOR EXAM PREPARATION PROPS =========================================\n  filterPreparation: \"prepared\" | \"not prepared\" | \"all\";\n  setFilterPreparation: (value: \"prepared\" | \"not prepared\" | \"all\") => void;\n\n  // FOR EXAMINATION PROGRESS PROPS ========================================\n  filterExamProgress: \"all\" | \"Done\" | \"Active\";\n  setFilterExamProgress: (value: \"all\" | \"Done\" | \"Active\") => void;\n\n  // FOR APPLICANT PERFORMANCE PROPS\n  filterApplicantPerformance: ReportUserExamStatus | \"all\";\n  setFilterApplicantPerformance: (value: \"all\" | ReportUserExamStatus) => void;\n};\nconst ExamReportFilters: React.FC<ExamReportFiltersProps> = (props) => {\n  return (\n    <Fragment>\n      {props.reportTitle !== reportTitleType.EXAM_PERFORMANCE &&\n        props.reportTitle !== reportTitleType.EXAM_DISTRICT_PERFORMANCE && (\n          <div className=\"pt-1\">\n            <div className=\"text-sm text-gray-700 pb-2 pt-2\">\n              Filter by statuses:\n            </div>\n            {/* FILTER OF EXAM PREPARATION ================================ */}\n            {props.reportTitle === reportTitleType.EXAM_PREPARATION && (\n              <section>\n                <div onClick={() => props.setFilterPreparation(\"all\")}>\n                  <MainItem\n                    title=\"All\"\n                    count={0}\n                    active={props.filterPreparation === \"all\"}\n                  />\n                </div>\n                <div onClick={() => props.setFilterPreparation(\"prepared\")}>\n                  <MainItem\n                    title=\"Prepared\"\n                    count={0}\n                    active={props.filterPreparation === \"prepared\"}\n                  />\n                </div>\n                <div onClick={() => props.setFilterPreparation(\"not prepared\")}>\n                  <MainItem\n                    title=\"Not Prepared\"\n                    count={0}\n                    active={props.filterPreparation === \"not prepared\"}\n                  />\n                </div>\n              </section>\n            )}\n            {/* END FILTER OF EXAM PREPARATION ================================ */}\n\n            {/* FILTER OF EXAMINATION PROGRESS ================================ */}\n            {props.reportTitle === reportTitleType.EXAMINATION_PROGRESS && (\n              <section>\n                <div onClick={() => props.setFilterExamProgress(\"all\")}>\n                  <MainItem\n                    title=\"All\"\n                    count={0}\n                    active={props.filterExamProgress === \"all\"}\n                  />\n                </div>\n                <div onClick={() => props.setFilterExamProgress(\"Done\")}>\n                  <MainItem\n                    title=\"Completed exam\"\n                    count={0}\n                    active={props.filterExamProgress === \"Done\"}\n                  />\n                </div>\n                <div onClick={() => props.setFilterExamProgress(\"Active\")}>\n                  <MainItem\n                    title=\"Remaining Exam\"\n                    count={0}\n                    active={props.filterExamProgress === \"Active\"}\n                  />\n                </div>\n              </section>\n            )}\n            {/* END FILTER OF EXAMINATION PROGRESS ================================ */}\n\n            {/* FILTER OF APPLICANTS PERFORMANCE ================================ */}\n            {(props.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE ||\n              props.reportTitle ===\n                reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE) && (\n              <section>\n                <div onClick={() => props.setFilterApplicantPerformance(\"all\")}>\n                  <MainItem\n                    title=\"All\"\n                    count={0}\n                    active={props.filterApplicantPerformance === \"all\"}\n                  />\n                </div>\n\n                {Object.values(ReportUserExamStatus).map((item, index) => (\n                  <div\n                    onClick={() => props.setFilterApplicantPerformance(item)}\n                    key={index + item}\n                  >\n                    <MainItem\n                      title={displayStatus(item)}\n                      count={0}\n                      active={props.filterApplicantPerformance === item}\n                    />\n                  </div>\n                ))}\n              </section>\n            )}\n            {/* END FILTER OF APPLICANTS PERFORMANCE ================================ */}\n          </div>\n        )}\n    </Fragment>\n  );\n};\n\nexport default React.memo(ExamReportFilters);\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { BiExport, BiFilterAlt } from \"react-icons/bi\";\nimport { FaEdit } from \"react-icons/fa\";\nimport { connect } from \"react-redux\";\nimport {\n  schoolLevelsStoreInterface,\n  SetReportDistrictId,\n  SetReportDistrictIdAction,\n} from \"../../../actions\";\nimport { course } from \"../../../interfaces/index\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport { StoreState } from \"../../../reducers\";\nimport { ExamReportReducerType } from \"../../../reducers/exam_report\";\nimport { loadExaminationProgress } from \"../../AdminDashboard/ExamDashboard/ExamDashboard\";\nimport {\n  CandidateExamPerformanceReportContentInterface,\n  CandidateExamPerformanceToPrintInterface,\n} from \"./CandidatePerformance\";\nimport {\n  ExaminationProgressReportContentInterface,\n  ExaminationProgressToPrintInterface,\n} from \"./DoneExamList\";\nimport {\n  examPreparationReportContentInterface,\n  ExamPreparationToPrintInterface,\n} from \"./ExamList\";\nimport {\n  ExamPerformanceToPrintInterface,\n  examPerformanceReportContentInterface,\n} from \"./ExamPerformance\";\nimport { reportTitleType } from \"./ExamReport\";\nimport ExamReportModals, { ModalForTypes } from \"./ExamReportModals\";\n\ntype ExamReportTitleProps = {\n  thisPeriod: string;\n  // FOR PRINT PDF =========================\n  downloading: boolean;\n  dataToPrint: any[] | null;\n  downlaodPDF: () => Promise<false | undefined>;\n  // FOR REPORT TYPE =========================\n  reportTitle: reportTitleType;\n  setReportTitle: (title: reportTitleType) => void;\n  // FOR GENERATE EXCEL =========================\n  generateReportModal: {\n    reportType: \"EXCEL\" | \"PDF\";\n    status: boolean;\n  } | null;\n  setGenerateReportModal: (\n    reportData: {\n      reportType: \"EXCEL\" | \"PDF\";\n      status: boolean;\n    } | null\n  ) => void;\n  excelReportTitle: string;\n  setExcelReportTitle: (title: string) => void;\n  updateExamToPrint: () => void;\n  // FOR EXCEL EXAM PREPARATION REPORT CONTENT ===============================\n  examPreparationReportContent: examPreparationReportContentInterface[];\n  setExamPreparationReportContent: (\n    content: examPreparationReportContentInterface[]\n  ) => void;\n  examsToPrint:\n    | ExamPreparationToPrintInterface[]\n    | ExamPerformanceToPrintInterface[]\n    | null;\n  // FOR EXCEL EXAM PERFORMANCE REPORT CONTENT ===============================\n  examPerformanceToPrint: ExamPerformanceToPrintInterface[] | null;\n  examPerformanceReportContent: examPerformanceReportContentInterface[];\n  setExamPerformanceReportContent: (\n    value: examPerformanceReportContentInterface[]\n  ) => void;\n\n  // FOR EXCEL TOP 30 EXAM PERFORMANCE REPORT CONTENT ===============================\n  exam30PerformanceToPrint: ExamPerformanceToPrintInterface[] | null;\n  exam30PerformanceReportContent: examPerformanceReportContentInterface[];\n  setExam30PerformanceReportContent: (\n    value: examPerformanceReportContentInterface[]\n  ) => void;\n\n  // FOR EXCEL EXAMINATION PROGRESS REPORT CONTENT ===============================\n  examinationProgressToPrint: ExaminationProgressToPrintInterface[] | null;\n  examinationProgressReportContent: ExaminationProgressReportContentInterface[];\n  setExaminationProgressExamPerformanceReportContent: (\n    value: ExaminationProgressReportContentInterface[]\n  ) => void;\n\n  // FOR EXCEL CANDIDATE EXAM PERFORMANCE REPORT CONTENT ===============================\n  candidateExamPerformanceToPrint:\n    | CandidateExamPerformanceToPrintInterface[]\n    | null;\n  candidateExamPerformanceReportContent: CandidateExamPerformanceReportContentInterface[];\n  setCandidateExamPerformanceReportContent: (\n    value: CandidateExamPerformanceReportContentInterface[]\n  ) => void;\n\n  // FOR EXCEL TOP 30 CANDIDATE EXAM PERFORMANCE REPORT CONTENT ===============================\n  candidate30ExamPerformanceToPrint:\n    | CandidateExamPerformanceToPrintInterface[]\n    | null;\n  candidate30ExamPerformanceReportContent: CandidateExamPerformanceReportContentInterface[];\n  setCandidate30ExamPerformanceReportContent: (\n    value: CandidateExamPerformanceReportContentInterface[]\n  ) => void;\n\n  // FOR CHOOSING LOCATION ===========================\n  adminExamReport: ExamReportReducerType;\n  SetReportDistrictId: (\n    data: {\n      district_id: string;\n      district_name: string;\n    } | null\n  ) => SetReportDistrictIdAction;\n\n  // FROM REDUX =================\n  schoolLevels: schoolLevelsStoreInterface;\n  courses: course[] | null;\n  examsList: ExamItemResponse[] | null;\n};\n\nconst ExamReportTitle: React.FC<ExamReportTitleProps> = (props) => {\n  const [changeReport, setChangeReport] = useState<boolean>(false);\n  const [districtModal, setDistrictModal] = useState<boolean>(false);\n  const [excelModal, setExcelModal] = useState<boolean>(false);\n  const [courseModal, setCourseModal] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (\n      props.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n      props.adminExamReport.reportDistrictId === null\n    ) {\n      setDistrictModal(true);\n    }\n    if (\n      props.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n      props.adminExamReport.reportDistrictId !== null\n    ) {\n      setDistrictModal(false);\n    }\n  }, [props.adminExamReport.reportDistrictId, props.reportTitle]);\n\n  return (\n    <Fragment>\n      <div className=\"grid md:grid-cols-12 items-center\">\n        <div className=\"col-span-1 md:col-span-8\">\n          <div className=\"mt-4 mx-4 flex flex-col gap-1\">\n            <span className=\"text-xl font-bold text-gray-700\">Exam Report</span>\n            <div\n              className=\"flex flex-row gap-2 items-end cursor-pointer\"\n              onClick={() => setChangeReport(true)}\n            >\n              <span className=\"text-gray-500 text-xl\">Report type: </span>\n              <span className=\"text-blue-600 text-3xl font-bold underline\">\n                {props.reportTitle}{\" \"}\n                {props.reportTitle ===\n                  reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n                props.adminExamReport.reportDistrictId\n                  ? props.adminExamReport.reportDistrictId.district_name\n                  : \"\"}\n              </span>\n            </div>\n            {(props.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE ||\n              props.reportTitle ===\n                reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE ||\n              props.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE) && (\n              <div className=\"flex flex-wrap justify-starts items-center text-xs text-gray-800 font-medium gap-1 my-1\">\n                <span className=\"text-gray-500\">Filter result: </span>\n                {props.adminExamReport.reportDistrictId &&\n                (props.reportTitle ===\n                  reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE ||\n                  props.reportTitle ===\n                    reportTitleType.EXAM_DISTRICT_PERFORMANCE) ? (\n                  <span className=\"px-2 py-1 rounded bg-gray-300\">\n                    # {props.adminExamReport.reportDistrictId.district_name}\n                  </span>\n                ) : (\n                  <span className=\"px-2 py-1 rounded bg-gray-300\">\n                    # All district\n                  </span>\n                )}\n                {props.adminExamReport.reportCourseId ? (\n                  props.reportTitle ===\n                    reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE && (\n                    <span className=\"px-2 py-1 rounded bg-gray-300\">\n                      #\n                      {props.adminExamReport.reportCourseId.course_name +\n                        \" (\" +\n                        props.adminExamReport.reportCourseId.course_code +\n                        \")\"}\n                    </span>\n                  )\n                ) : (\n                  <span className=\"px-2 py-1 rounded bg-gray-300\">\n                    # All exams\n                  </span>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n        <div className=\"col-span-1 md:col-span-4\">\n          <div className=\"float-right mt-3\">\n            {props.dataToPrint && props.dataToPrint.length > 0 && (\n              <div className=\"flex flex-row items-center justify-end font-bold mb-2\">\n                <BiExport className=\"text-2xl text-gray-500\" />\n                <span className=\"text-gray-500\">Export as</span>\n                <button\n                  className={`px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200 focus:outline-none`}\n                  // disabled={\n                  //   props.examsToPrint && props.examsToPrint.length <= 0\n                  //     ? true\n                  //     : false\n                  // }\n                  onClick={() => {\n                    props.updateExamToPrint();\n                    setExcelModal(true);\n                    props.setGenerateReportModal({\n                      reportType: \"EXCEL\",\n                      status: true,\n                    });\n                  }}\n                >\n                  EXCEL\n                </button>\n                <button\n                  className={`px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200 focus:outline-none ${\n                    props.downloading && \"cursor-wait\"\n                  }`}\n                  onClick={() => props.downlaodPDF()}\n                  disabled={props.downloading}\n                >\n                  PDF\n                </button>\n              </div>\n            )}\n\n            <div>\n              <div\n                onClick={() => setChangeReport(true)}\n                className=\"bg-blue-50 py-2 px-2 border border-blue-300 text-blue-600 font-medium hover:bg-blue-100 flex flex-row items-center justify-center gap-2 text-sm float-right\"\n              >\n                <FaEdit className=\"text-xl\" />\n                Change Report\n              </div>\n            </div>\n\n            <section className=\"flex items-center gap-1 float-right mt-1\">\n              {(props.reportTitle ===\n                reportTitleType.EXAM_DISTRICT_PERFORMANCE ||\n                props.reportTitle ===\n                  reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE) && (\n                <div\n                  onClick={() => setDistrictModal(true)}\n                  className=\"btn bg-blue-50 border border-blue-300 text-blue-600 cursor-pointer hover:bg-blue-100 flex flex-row items-center justify-center gap-2 text-sm \"\n                >\n                  <BiFilterAlt className=\"text-xl\" />\n                  Filter by district\n                </div>\n              )}\n              {(props.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE ||\n                props.reportTitle ===\n                  reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE) && (\n                <div\n                  onClick={() => setCourseModal(true)}\n                  className=\"btn bg-blue-50 border border-blue-300 text-blue-600 cursor-pointer hover:bg-blue-100 flex flex-row items-center justify-center gap-2 text-sm \"\n                >\n                  <BiFilterAlt className=\"text-xl\" />\n                  Filter by exam\n                </div>\n              )}\n            </section>\n          </div>\n        </div>\n      </div>\n\n      {/* GENERATE EXCEL MODAL CONTROLLERS ============================================ */}\n      {excelModal && (\n        <ExamReportModals\n          modalFor={ModalForTypes.generateReportModal}\n          modalState={excelModal}\n          changeModalState={setExcelModal}\n          reportTitle={props.reportTitle}\n          setGenerateReportModal={props.setGenerateReportModal}\n          excelReportTitle={props.excelReportTitle}\n          setExcelReportTitle={props.setExcelReportTitle}\n          updateExamToPrint={props.updateExamToPrint}\n          generateReportModal={props.generateReportModal}\n          // EXAM PREPARATION ######################\n          examsToPrint={props.examsToPrint}\n          examPreparationReportContent={props.examPreparationReportContent}\n          setExamPreparationReportContent={\n            props.setExamPreparationReportContent\n          }\n          // EXAM PERFORMANCE ######################\n          examPerformanceToPrint={props.examPerformanceToPrint}\n          examPerformanceReportContent={props.examPerformanceReportContent}\n          setExamPerformanceReportContent={\n            props.setExamPerformanceReportContent\n          }\n          // TOP 30 EXAM PERFORMANCE ######################\n          exam30PerformanceToPrint={props.exam30PerformanceToPrint}\n          exam30PerformanceReportContent={props.exam30PerformanceReportContent}\n          setExam30PerformanceReportContent={\n            props.setExam30PerformanceReportContent\n          }\n          // EXAMINATION PROGRESS ######################\n          examinationProgressToPrint={props.examinationProgressToPrint}\n          examinationProgressReportContent={\n            props.examinationProgressReportContent\n          }\n          setExaminationProgressExamPerformanceReportContent={\n            props.setExaminationProgressExamPerformanceReportContent\n          }\n          // CANDIDATE EXAM PERFORMANCE ######################\n          candidateExamPerformanceToPrint={\n            props.candidateExamPerformanceToPrint\n          }\n          candidateExamPerformanceReportContent={\n            props.candidateExamPerformanceReportContent\n          }\n          setCandidateExamPerformanceReportContent={\n            props.setCandidateExamPerformanceReportContent\n          }\n          candidate30ExamPerformanceToPrint={\n            props.candidate30ExamPerformanceToPrint\n          }\n          candidate30ExamPerformanceReportContent={\n            props.candidate30ExamPerformanceReportContent\n          }\n          setCandidate30ExamPerformanceReportContent={\n            props.setCandidate30ExamPerformanceReportContent\n          }\n        />\n      )}\n      {/* END GENERATE EXCEL MODAL CONTROLLERS ============================================ */}\n\n      {/* CHANGE REPORT TYPE MODAL CONTROLLERS ============================================ */}\n      {changeReport && (\n        <ExamReportModals\n          modalFor={ModalForTypes.title}\n          modalState={changeReport}\n          reportTitle={props.reportTitle}\n          changeModalState={setChangeReport}\n          setReportTitle={props.setReportTitle}\n          setExcelReportTitle={props.setExcelReportTitle}\n        />\n      )}\n      {/* END CHANGE REPORT TYPE MODAL CONTROLLERS ============================================ */}\n\n      {/* CHANGE DISTRICT FILTER MODAL CONTROLLERS ============================================ */}\n      {districtModal && (\n        <ExamReportModals\n          modalFor={ModalForTypes.choose_district}\n          modalState={districtModal}\n          changeModalState={setDistrictModal}\n          districtId={\n            props.adminExamReport.reportDistrictId\n              ? props.adminExamReport.reportDistrictId.district_id\n              : \"all\"\n          }\n          reportTitle={props.reportTitle}\n        />\n      )}\n      {/* END CHANGE DISTRICT FILTER MODAL CONTROLLERS ============================================ */}\n\n      {/* CHANGE COURSE FILTER MODAL CONTROLLERS ============================================ */}\n      {courseModal &&\n        loadExaminationProgress(\n          props.adminExamReport.DoneExam,\n          props.examsList,\n          props.schoolLevels.selectedEducationCategory,\n          props.courses,\n          props.schoolLevels.school_levels,\n          props.thisPeriod\n        ) && (\n          <ExamReportModals\n            modalFor={ModalForTypes.choose_exam}\n            modalState={courseModal}\n            AllExamData={\n              loadExaminationProgress(\n                props.adminExamReport.DoneExam,\n                props.examsList,\n                props.schoolLevels.selectedEducationCategory,\n                props.courses,\n                props.schoolLevels.school_levels,\n                props.thisPeriod\n              )!.finished\n            }\n            changeModalState={setCourseModal}\n            thisExam={props.adminExamReport.reportCourseId}\n          />\n        )}\n      {/* END CHANGE COURSE FILTER MODAL CONTROLLERS ============================================ */}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  adminExamReport,\n  schoolLevels,\n  course,\n  prepareExam,\n}: StoreState): {\n  schoolLevels: schoolLevelsStoreInterface;\n  courses: course[] | null;\n  examsList: ExamItemResponse[] | null;\n  adminExamReport: ExamReportReducerType;\n} => {\n  return {\n    schoolLevels,\n    courses: course.courses,\n    examsList: prepareExam.examsList,\n    adminExamReport,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, { SetReportDistrictId })(ExamReportTitle)\n);\n","import React from \"react\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport { RiFileExcel2Fill } from \"react-icons/ri\";\n\ninterface ExportToExcelProps {\n  fileData: any[];\n  fileName: string;\n  btnName?: string;\n  className?: string;\n  showIcon?: boolean;\n}\n\nconst ExportToExcel: React.FC<ExportToExcelProps> = ({\n  fileData,\n  fileName,\n  btnName = \"Excel\",\n  className = \"flex items-center gap-1 px-4 py-1 rounded text-green-700 bg-white border hover:text-white hover:bg-green-700 border-green-700 font-bold\",\n  showIcon = true,\n}) => {\n  const fileType =\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n  const fileExtension = \".xlsx\";\n\n  const exportToCSV = (apiData: any[], fileName: string) => {\n    const ws = XLSX.utils.json_to_sheet(apiData);\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n    const data = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n\n  return (\n    <button\n      onClick={(e) => exportToCSV(fileData, fileName)}\n      className={className}\n    >\n      {showIcon && <RiFileExcel2Fill />}\n      {btnName}\n    </button>\n  );\n};\n\nexport default ExportToExcel;\n","export default __webpack_public_path__ + \"static/media/mineduc.11a9ae1c.png\";","import jsPDF from \"jspdf\";\nimport { DATE } from \"../../utils/functions\";\nimport Logo from \"../../utils/mineduc.png\";\nrequire(\"jspdf-autotable\");\n\nexport const addFooters = (doc: any) => {\n  const pageCount = doc.internal.getNumberOfPages();\n\n  doc.setFont(\"helvetica\", \"italic\");\n  doc.setFontSize(8);\n  for (var i = 1; i <= pageCount; i++) {\n    doc.setPage(i);\n    doc.text(\n      \"Page \" + String(i) + \" of \" + String(pageCount),\n      doc.internal.pageSize.width / 2,\n      297,\n      {\n        align: \"center\",\n      }\n    );\n  }\n};\n\nexport type reportSettingsInterface = {\n  doneBy: string;\n  title: string;\n  subjectTitle: string;\n  subject: string;\n  institute: string;\n  period: string;\n  footer: string;\n  orientation?: \"p\" | \"l\";\n};\n\nexport const generatePDF = async (\n  reportSettings: reportSettingsInterface,\n  table: HTMLElement,\n  callBack: (status: boolean) => void\n) => {\n  callBack(true);\n  const orientation: \"p\" | \"l\" = reportSettings.orientation\n    ? reportSettings.orientation\n    : \"p\";\n  var lMargin: number = 20; //left margin in mm\n  var rMargin: number = 20; //right margin in mm\n  var pdfInMM: number = 185; // width of A4 in mm\n\n  //   var doc = new jsPDF(\"p\", \"mm\", \"a4\");\n  var doc: any = new jsPDF(orientation, \"mm\", \"a4\");\n\n  doc.setTextColor(95, 95, 95);\n  doc.setFontSize(28);\n  // doc.text(\n  //   this.props.reportTitle,\n  //   doc.internal.pageSize.getWidth() / 2,\n  //   30,\n  //   undefined,\n  //   \"center\"\n  // );\n  doc.addImage(Logo, \"png\", 20, 20, 10, 10);\n  doc.text(\"MINEDUC\", 32, 28.5, undefined, \"left\");\n  //   doc.setTextColor(19, 90, 152);\n  doc.setFontSize(26);\n  doc.text(\n    reportSettings.title,\n    doc.internal.pageSize.getWidth() / 2,\n    42.7,\n    undefined,\n    \"center\"\n  );\n\n  doc.setFontSize(20);\n  doc.text(\n    reportSettings.institute,\n    doc.internal.pageSize.getWidth() / 2,\n    53.7,\n    undefined,\n    \"center\"\n  );\n\n  var lines;\n  lines = doc.splitTextToSize(\n    reportSettings.subject,\n    pdfInMM - lMargin - rMargin\n  );\n  // if (reportSettings.position) {\n  // } else if (reportSettings.subject) {\n  //   lines = doc.splitTextToSize(\n  //     reportSettings.subject,\n  //     pdfInMM - lMargin - rMargin\n  //   );\n  // }\n\n  //   doc.setTextColor(0, 123, 255);\n  doc.setFontSize(16);\n  //   doc.text(lines, doc.internal.pageSize.getWidth() / 2, 45, {\n  //     maxWidth: 85,\n  //     align: \"center\",\n  //   });\n\n  var y = 63,\n    width;\n  doc.setTextColor(95, 95, 95);\n  doc.text(`${reportSettings.subjectTitle}: `, lMargin, y);\n  width = doc.getTextWidth(`${reportSettings.subjectTitle}: `);\n  // if (reportSettings.position) {\n  // } else if (reportSettings.position) {\n  //   doc.text(`Subject: `, lMargin, y);\n  //   width = doc.getTextWidth(\"Subject: \");\n  // }\n  // doc.setFontType(\"bold\");\n  doc.setTextColor(38, 38, 38);\n  for (var i = 0; i < lines.length; i++) {\n    if (y > 280) {\n      y = 10;\n      doc.addPage();\n    }\n    // doc.text(15, y, lines[i]);\n    doc.text(lines[i], lMargin + width, y);\n    y = y + 7;\n  }\n  doc.setTextColor(95, 95, 95);\n  doc.text(\"Period: \", lMargin, y + 3);\n  width = doc.getTextWidth(\"Period: \");\n  doc.setTextColor(38, 38, 38);\n  doc.text(reportSettings.period, lMargin + width, y + 3);\n\n  doc.autoTable({\n    html: table,\n    startY: 85,\n    margin: { horizontal: 20 },\n    cellPadding: 3, // Horizontal cell padding\n    // fontSize: 12,\n    rowHeight: 20,\n    // styles: { overflow: \"linebreak\" },\n    bodyStyles: { valign: \"top\" },\n    columnStyles: { email: { cellWidth: \"wrap\" } },\n    theme: \"striped\",\n    tableWidth: true,\n  });\n\n  doc.setFontSize(12);\n  let finalY = doc.lastAutoTable.finalY; // The y position on the page\n  doc.text(`Reported by: ${reportSettings.doneBy}`, lMargin, finalY + 15);\n  doc.text(\n    \"Report downloaded on \" + DATE(new Date().toString()),\n    lMargin,\n    finalY + 23\n  );\n\n  addFooters(doc);\n  await doc\n    .save(\n      `${\n        reportSettings.title +\n        \": \" +\n        reportSettings.subject +\n        \": \" +\n        reportSettings.period\n      }.pdf`,\n      { returnPromise: true }\n    )\n    .then(callBack(false));\n};\n","import React, { useState } from \"react\";\nimport {\n  MdCheckCircle,\n  MdRadioButtonUnchecked,\n  MdSearch,\n} from \"react-icons/md\";\nimport Loading from \"../../components/Loading/Loading\";\nimport {\n  PlansInterface,\n  SessionPlanInterface,\n  SessionPlanTypeStatus,\n} from \"../../interfaces\";\nimport { DATE } from \"../../utils/functions\";\nimport searchData from \"../../utils/search\";\n\nexport const isPlansActive = (plans: PlansInterface[]): PlansInterface[] => {\n  let today = new Date();\n  let activePlans: PlansInterface[] = [];\n  for (let plan of plans) {\n    let startDate = new Date(plan.start_date);\n    let endDate = new Date(plan.end_date);\n    if (\n      startDate.getTime() <= today.getTime() &&\n      endDate.getTime() >= today.getTime() &&\n      plan.type_status === SessionPlanTypeStatus.OPEN\n    ) {\n      activePlans = [...activePlans, plan];\n    }\n  }\n  return activePlans;\n};\n\ninterface ChooseSessionProps {\n  allSession: SessionPlanInterface[] | null;\n  setSelectSession: (period: SessionPlanInterface | \"all\") => void;\n  currentSelected: SessionPlanInterface | \"all\";\n  chooseAll: boolean;\n}\n\nconst ChooseSession = (props: ChooseSessionProps) => {\n  const [selectedPlan, setSelectedPlan] = useState<SessionPlanInterface | null>(\n    null\n  );\n  const [search, setSearch] = useState<string>(\"\");\n  const getSearch = (\n    period: SessionPlanInterface[],\n    searched: string\n  ): SessionPlanInterface[] => {\n    return searchData(period, searched) as SessionPlanInterface[];\n  };\n\n  return (\n    <div className=\"\">\n      <div className=\"px-3\">\n        <input\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n            setSearch(e.target.value)\n          }\n          type=\"text\"\n          className=\"py-3 px-4 w-full rounded border border-gray-400 mb-3\"\n          placeholder=\"Search by year, name\"\n          disabled={props.allSession === null || props.allSession.length === 0}\n        />\n      </div>\n\n      <div className=\"bg-gray-100 px-3 pt-3 pb-2 rounded-b\">\n        {props.allSession === null ? (\n          <Loading />\n        ) : props.allSession.length === 0 ? (\n          <div className=\"flex flex-col text-gray-400 items-center justify-center mb-2 bg-white py-4\">\n            <MdSearch className=\"text-6xl\" />\n            <div className=\"flex flex-col items-center justify-center\">\n              <span>No session found!</span>\n            </div>\n          </div>\n        ) : (\n          <section>\n            {props.chooseAll && (\n              <div\n                className={`rounded border ${\n                  props.currentSelected === \"all\"\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2 flex flex-col md:flex-row items-start md:items-center md:justify-between`}\n              >\n                <div className=\"flex flex-row items-center gap-3\">\n                  {props.currentSelected === \"all\" ? (\n                    <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                  ) : (\n                    <MdRadioButtonUnchecked\n                      className={`text-gray-300 text-4xl`}\n                    />\n                  )}\n                  <div className=\"flex flex-col\">\n                    <div className={`text-gray-600 font-bold`}>All session</div>\n                  </div>\n                </div>\n                <div\n                  onClick={() => {\n                    props.setSelectSession(\"all\");\n                  }}\n                  className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                >\n                  Select\n                </div>\n              </div>\n            )}\n            {getSearch(props.allSession, search).map((item, i) => (\n              <div\n                key={i + 1}\n                className={`rounded border ${\n                  props.currentSelected !== \"all\" &&\n                  props.currentSelected._id === item._id\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2`}\n              >\n                <div className=\"flex flex-col md:flex-row items-start md:items-center md:justify-between \">\n                  <div className=\"flex flex-row items-center gap-3\">\n                    {props.currentSelected !== \"all\" &&\n                    props.currentSelected._id === item._id ? (\n                      <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                    ) : (\n                      <MdRadioButtonUnchecked\n                        className={`text-gray-300 text-4xl`}\n                      />\n                    )}\n                    <div className=\"flex flex-col\">\n                      <div\n                        className={`${\n                          props.currentSelected !== \"all\" &&\n                          props.currentSelected._id === item._id\n                            ? \"text-blue-600\"\n                            : \"text-gray-600\"\n                        } font-bold`}\n                      >\n                        {item.session_plan_name}\n                      </div>\n                      <div className=\"text-sm text-gray-500\">\n                        <span>Status: </span>\n                        <span\n                          className={`${\n                            item.is_active === true\n                              ? \"text-gray-900 font-bold underline\"\n                              : \"text-gray-500 italic\"\n                          }`}\n                        >\n                          {item.is_active === true ? \"Active\" : \"Expired\"}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"flex flex-row items-center gap-2\">\n                    {(selectedPlan === null ||\n                      selectedPlan._id !== item._id) && (\n                      <div\n                        onClick={() => setSelectedPlan(item)}\n                        className=\"bg-gray-50 group-hover:bg-blue-100 font-semibold text-gray-400 group-hover:text-blue-600 rounded px-3 py-2 cursor-pointer\"\n                      >\n                        Details\n                      </div>\n                    )}\n                    <div\n                      onClick={() => {\n                        props.setSelectSession(item);\n                      }}\n                      className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                    >\n                      Select\n                    </div>\n                    {selectedPlan !== null && selectedPlan._id === item._id && (\n                      <div\n                        onClick={() => setSelectedPlan(null)}\n                        className=\"bg-red-100 group-hover:bg-red-200 font-semibold text-red-600 group-hover:text-red-800 rounded px-3 py-2 cursor-pointer\"\n                      >\n                        Close\n                      </div>\n                    )}\n                  </div>\n                </div>\n                {selectedPlan !== null && selectedPlan._id === item._id && (\n                  <div className=\"bg-white rounded border border-blue-50 mt-2 animate__animated animate__fadeIn\">\n                    <table className=\"w-full\">\n                      <thead className=\"bg-blue-50\">\n                        <tr className=\"text-left\">\n                          <th className=\"px-3 py-3\">#</th>\n                          <th>Plan</th>\n                          <th>Start date</th>\n                          <th>Ending date</th>\n                          <th>Status</th>\n                        </tr>\n                      </thead>\n                      <tbody className=\"text-sm\">\n                        {selectedPlan !== null &&\n                          selectedPlan._id === item._id &&\n                          selectedPlan.plans.length > 0 &&\n                          item.plans.map((plan, i) => (\n                            <tr\n                              key={i + 1}\n                              className={`${\n                                isPlansActive(item.plans).find(\n                                  (itm) => itm.type_key === plan.type_key\n                                ) !== undefined\n                                  ? \"bg-blue-100 text-blue-600 font-bold\"\n                                  : \"\"\n                              } text-left border-b border-blue-50`}\n                            >\n                              <td className=\"px-3 py-1\">{i + 1}</td>\n                              <td>{plan.type_title}</td>\n                              <td>{DATE(plan.start_date, \"DD/MM/YYYY\")}</td>\n                              <td>{DATE(plan.end_date, \"DD/MM/YYYY\")}</td>\n                              <td>{plan.type_status}</td>\n                            </tr>\n                          ))}\n                      </tbody>\n                    </table>\n                  </div>\n                )}\n              </div>\n            ))}\n          </section>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(ChooseSession);\n","import React, { Fragment, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport { connect } from \"react-redux\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { SessionPlanInterface } from \"../../../interfaces\";\nimport { course } from \"../../../interfaces/course\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport {\n  CandidatesFailedSucceeded,\n  ReportUserExamStatus,\n} from \"../../../interfaces/reports\";\nimport { StoreState } from \"../../../reducers\";\nimport { ExamReportReducerType } from \"../../../reducers/exam_report\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { DATE, sortThisArray, timestampToDate } from \"../../../utils/functions\";\nimport { displayStatus } from \"./DoneExamList\";\nimport { getPeriodById } from \"./ExamReport\";\n\n// EXCEL FILE FUNCTIONS ================================\nexport interface CandidateExamPerformanceToPrintInterface {\n  applicant_id: number;\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string;\n  exam_period: string;\n  exam_date: string;\n  exam_start_time: string;\n  exam_end_time: string;\n  applicant_name: string;\n  national_id: string;\n  email: string;\n  phone: string;\n  marks: string;\n  performance_status: string;\n}\n\nexport enum CandidateExamPerformanceReportContentKeyInterface {\n  APPLICANT = \"applicant_name\",\n  N_ID = \"national_id\",\n  EMAIL = \"email\",\n  PHONE = \"phone\",\n  MARKS = \"marks\",\n  STATUS = \"performance_status\",\n  COURSER_NAME = \"course_name\",\n  COURSE_CODE = \"course_code\",\n  SCHOOL_LEVEL = \"school_levels\",\n  PERIOD = \"exam_period\",\n  DATE = \"exam_date\",\n  START_TIME = \"exam_start_time\",\n  END_TIME = \"exam_end_time\",\n}\n\nexport interface CandidateExamPerformanceReportContentInterface {\n  key: CandidateExamPerformanceReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n\nexport const candidateExamPerformanceIsChangeAllowed = (\n  key: CandidateExamPerformanceReportContentKeyInterface\n): boolean => {\n  if (\n    key === CandidateExamPerformanceReportContentKeyInterface.COURSER_NAME ||\n    key === CandidateExamPerformanceReportContentKeyInterface.COURSE_CODE ||\n    key === CandidateExamPerformanceReportContentKeyInterface.PERIOD ||\n    key === CandidateExamPerformanceReportContentKeyInterface.APPLICANT ||\n    key === CandidateExamPerformanceReportContentKeyInterface.N_ID\n  ) {\n    return false;\n  }\n  return true;\n};\n\nexport const defaultCandidateExamPerformanceContent: CandidateExamPerformanceReportContentInterface[] =\n  [\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.APPLICANT,\n      title: \"Applicant names\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.N_ID,\n      title: \"National ID\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.EMAIL,\n      title: \"Email\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.PHONE,\n      title: \"Phone\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.MARKS,\n      title: \"Marks\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.COURSER_NAME,\n      title: \"Course names\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.COURSE_CODE,\n      title: \"Course code\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.SCHOOL_LEVEL,\n      title: \"School levels\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.PERIOD,\n      title: \"Exam period\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.DATE,\n      title: \"Exam date\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.START_TIME,\n      title: \"Exam start time\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.END_TIME,\n      title: \"Exam end time\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.STATUS,\n      title: \"Status\",\n      status: true,\n    },\n  ];\n// END EXCEL FILE FUNCTIONS ================================\n\nexport interface candidatePerfomranceStateInterface {\n  user_id: string;\n  user_name: string;\n  national_id: string;\n  user_email: string;\n  user_phone: string;\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n  exam: CandidatesFailedSucceeded;\n  user_total_marks: number;\n  exam_stastus: ReportUserExamStatus;\n}\n\nexport const FC_reportCandidatePerformanceData = (\n  allCourses: course[],\n  data: CandidatesFailedSucceeded[],\n  course_id: string\n): candidatePerfomranceStateInterface[] => {\n  let result: candidatePerfomranceStateInterface[] = [],\n    ids: string[] = [];\n  for (const key in data) {\n    if (Object.prototype.hasOwnProperty.call(data, key)) {\n      if (!ids.includes(data[key]._id)) {\n        ids.push(data[key]._id);\n        let courser = allCourses.find(\n          (item) => item.course_id === data[key].course\n        );\n        if (courser) {\n          result.push({\n            user_id: data[key].user.user_id,\n            user_name:\n              capitalizeFirstLetter(data[key].user.user_info.lname) +\n              \" \" +\n              capitalizeFirstLetter(data[key].user.user_info.fname),\n            national_id: data[key].user.n_id ? data[key].user.n_id : \"\",\n            user_email: data[key].user.email,\n            user_phone: data[key].user.phone_number,\n            course_name: courser.course_name,\n            course_code: courser.course_code,\n            description: courser.description,\n            school_levels: courser.school_levels,\n            course_id: courser.course_id,\n            exam: data[key],\n            user_total_marks: data[key].total_marks,\n            exam_stastus: data[key].user_status,\n          });\n        }\n      }\n    }\n  }\n\n  if (course_id !== \"all\") {\n    result = result.filter((item) => item.course_id === course_id);\n  }\n  return result;\n};\n\nexport const FC_reportCandidatePerformanceDataFilter = (\n  thisList: candidatePerfomranceStateInterface[],\n  thisValue: ReportUserExamStatus | \"all\"\n): candidatePerfomranceStateInterface[] => {\n  if (thisValue === \"all\") {\n    return thisList;\n  } else {\n    return thisList.filter((item) => item.exam_stastus === thisValue);\n  }\n};\n\nexport const searchCandidatePerformanceData = (\n  objList: candidatePerfomranceStateInterface[],\n  text: string\n): candidatePerfomranceStateInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (\n        prop === \"course_name\" ||\n        prop === \"course_code\" ||\n        prop === \"user_total_marks\" ||\n        prop === \"exam_stastus\" ||\n        prop === \"description\" ||\n        prop === \"user_name\" ||\n        prop === \"user_phone\" ||\n        prop === \"user_email\" ||\n        prop === \"national_id\"\n      ) {\n        flag =\n          product[prop].toString().toLowerCase().indexOf(text.toLowerCase()) >\n          -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n};\n\nexport const controlRowsByStatus = (status: string): string => {\n  if (status === \"Done\") {\n    return \"bg-blue-50 border-gray-300 hover:border-blue-500 border-t border-b\";\n  }\n  if (status === \"Removed\") {\n    return \"bg-white border-red-300 hover:border-red-500 border-t border-b\";\n  }\n  if (status === \"Paused\") {\n    return \"bg-white border-yellow-300 hover:border-yellow-500 border-t border-b\";\n  }\n  return \"bg-white border-gray-300 hover:border-blue-500 border-t border-b\";\n};\n\ntype CandidatePerformanceProps = {\n  loading: boolean;\n  examsListData: ExamItemResponse[] | null;\n  courseListData: course[] | null;\n  thisPeriod: SessionPlanInterface[];\n  candidatePerformanceData: CandidatesFailedSucceeded[] | null;\n\n  // redux props ============\n  adminExamReport: ExamReportReducerType;\n  // FOR APPLICANT PERFORMANCE PROPS\n  filterApplicantPerformance: ReportUserExamStatus | \"all\";\n};\n\nconst CandidatePerformance: React.FC<CandidatePerformanceProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const [isSorted, setIsSorted] = useState<boolean>(false);\n  const [sortProperty, setSortProperty] = useState<string>(\"\");\n  const [sortOrder, setSortOrder] = useState<\"ASC\" | \"DESC\">(\"ASC\");\n\n  const setSort = (thisProperty: string) => {\n    if (sortProperty === thisProperty && sortOrder === \"ASC\") {\n      setSortOrder(\"DESC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    } else {\n      setSortOrder(\"ASC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    }\n  };\n\n  return (\n    <Fragment>\n      <div className=\"bg-white my-4\">\n        <div className=\"w-full px-2 py-2\">\n          <input\n            onChange={(e) => setSearchInput(e.target.value)}\n            type=\"text\"\n            value={searchInput}\n            placeholder=\"Search...\"\n            className=\"w-full bg-gray-100 py-2 px-3 rounded\"\n            disabled={\n              props.courseListData &&\n              props.candidatePerformanceData &&\n              FC_reportCandidatePerformanceDataFilter(\n                FC_reportCandidatePerformanceData(\n                  props.courseListData,\n                  props.candidatePerformanceData,\n                  props.adminExamReport.reportCourseId\n                    ? props.adminExamReport.reportCourseId.course_id\n                    : \"all\"\n                ),\n                props.filterApplicantPerformance\n              ).length <= 0\n                ? true\n                : false\n            }\n          />\n        </div>\n        <div className=\"w-full overflow-x-auto\">\n          <table className=\"w-full shadow\" id=\"report_content\">\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n              <tr>\n                <td className=\"px-2 py-2\">#</td>\n                <td className=\"px-2 py-2\" onClick={() => setSort(\"user_name\")}>\n                  Applicants\n                </td>\n                <td className=\"px-2 py-2\">National ID</td>\n                <td className=\"px-2 py-2\">Email</td>\n                <td className=\"px-2 py-2\">Phone</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"course_name\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Exam <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">Exam period</td>\n                <td className=\"px-2 py-2\">Exam date</td>\n                <td className=\"px-2 py-2\">Exam start time</td>\n                <td className=\"px-2 py-2\">Exam end time</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"user_total_marks\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Marks <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">Status</td>\n              </tr>\n            </thead>\n            <tbody>\n              {props.courseListData === null || props.loading ? (\n                <tr>\n                  <td colSpan={12} className=\"px-2 py-2\">\n                    <Loading />\n                  </td>\n                </tr>\n              ) : props.candidatePerformanceData &&\n                FC_reportCandidatePerformanceDataFilter(\n                  FC_reportCandidatePerformanceData(\n                    props.courseListData,\n                    props.candidatePerformanceData,\n                    props.adminExamReport.reportCourseId\n                      ? props.adminExamReport.reportCourseId.course_id\n                      : \"all\"\n                  ),\n                  props.filterApplicantPerformance\n                ).length <= 0 ? (\n                <tr>\n                  <td colSpan={12} className=\"px-2 py-2 text-center\">\n                    No applicant list available!\n                  </td>\n                </tr>\n              ) : (\n                props.candidatePerformanceData &&\n                sortThisArray(\n                  isSorted,\n                  searchCandidatePerformanceData(\n                    FC_reportCandidatePerformanceDataFilter(\n                      FC_reportCandidatePerformanceData(\n                        props.courseListData,\n                        props.candidatePerformanceData,\n                        props.adminExamReport.reportCourseId\n                          ? props.adminExamReport.reportCourseId.course_id\n                          : \"all\"\n                      ),\n                      props.filterApplicantPerformance\n                    ),\n                    searchInput\n                  ),\n                  sortProperty,\n                  sortOrder\n                ).map((item: candidatePerfomranceStateInterface, i) => (\n                  <tr\n                    key={i + 1}\n                    className={`${controlRowsByStatus(\n                      item.exam_stastus\n                    )} text-gray-600 hover:bg-blue-100 hover:text-blue-700 text-sm`}\n                  >\n                    <td className=\"px-2 py-2\">{i + 1}</td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(item.user_name)}\n                    </td>\n                    <td className=\"px-2 py-2\">{item.national_id}</td>\n                    <td className=\"px-2 py-2\">{item.user_email}</td>\n                    <td className=\"px-2 py-2\">{item.user_phone}</td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(item.course_name)} (\n                      <span className=\"font-semibold\">{item.course_code}</span>)\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam\n                        ? getPeriodById(props.thisPeriod, item.exam.period)\n                          ? getPeriodById(props.thisPeriod, item.exam.period)!\n                              .session_plan_name\n                          : \"-\"\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam.exam_date ? DATE(item.exam.exam_date) : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam.start_time\n                        ? timestampToDate(item.exam.start_time).timeAMPM\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam.end_time\n                        ? timestampToDate(item.exam.end_time).timeAMPM\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam_stastus !== ReportUserExamStatus.Editing\n                        ? Number(item.user_total_marks.toFixed(1)) + \"%\"\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(displayStatus(item.exam_stastus))}\n                    </td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  adminExamReport,\n}: StoreState): {\n  adminExamReport: ExamReportReducerType;\n} => {\n  return {\n    adminExamReport,\n  };\n};\n\nexport default React.memo(connect(mapStateToProps, {})(CandidatePerformance));\n","import { ApexOptions } from \"apexcharts\";\nimport React, { useEffect, useState } from \"react\";\nimport Chart from \"react-apexcharts\";\n\ntype VBarCharPropstInterface = {\n  labels: string[];\n  categoriesLabel: any;\n  bar?: {\n    borderRadius: number;\n    horizontal: boolean;\n    columnWidth: string;\n    endingShape: string;\n  };\n  dataLabels: boolean;\n  yaxisText: string;\n  tooltipText: string;\n  series: {\n    name: string;\n    data: number[];\n  }[];\n  defaultBar?: {\n    borderRadius: number;\n    horizontal: boolean;\n    columnWidth: string;\n    endingShape: string;\n  };\n  colors?: any[];\n  title?: {\n    text: string;\n    align: string;\n    margin: number;\n    offestY: number;\n    style: {\n      fontSize: string;\n    };\n  };\n  stacked?: boolean;\n  FC_LoadSelected?: (labelIndex: number, seriesIndex: number) => void;\n  chartHeight?: number;\n};\n\nconst defaultBar = {\n  borderRadius: 4,\n  horizontal: false,\n  columnWidth: \"95%\",\n  endingShape: \"rounded\",\n};\n\nconst VBarChart: React.FC<VBarCharPropstInterface> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [options, setOptions] = useState<ApexOptions>({\n    chart: {\n      events: {\n        dataPointSelection: (event, chartContext, config) => {\n          console.log({\n            labelClicked: config.w.config.labels[config.dataPointIndex],\n            // seriesClicked: config.w.config.series[config.dataPointIndex],\n          });\n          if (props.FC_LoadSelected) {\n            props.FC_LoadSelected(config.dataPointIndex, config.seriesIndex);\n          }\n          // console.log(config.seriesIndex);\n          // console.log(config.dataPointIndex);\n        },\n      },\n      stacked: props.stacked ? props.stacked : false,\n    },\n    plotOptions: {\n      bar: props.defaultBar ? props.defaultBar : defaultBar,\n    },\n    labels: props.labels,\n    dataLabels: {\n      enabled: true,\n    },\n    xaxis: {\n      labels: {\n        rotate: -45,\n      },\n      categories: props.categoriesLabel,\n      tickPlacement: \"on\",\n    },\n    yaxis: {\n      title: {\n        text: props.yaxisText,\n      },\n    },\n    fill: {\n      opacity: 1,\n    },\n    tooltip: {\n      y: {\n        formatter: function (val: number) {\n          return val + \" \" + props.tooltipText;\n        },\n      },\n    },\n    grid: {\n      padding: {\n        left: 30, // or whatever value that works\n        right: 30, // or whatever value that works\n      },\n    },\n    noData: {\n      text: \"No data found\",\n      align: \"center\",\n      verticalAlign: \"middle\",\n    },\n  });\n\n  useEffect(() => {\n    if (props.colors && props.colors.length > 0 && loading) {\n      setOptions({\n        chart: {\n          stacked: props.stacked ? props.stacked : false,\n          events: {\n            dataPointSelection: (event, chartContext, config) => {\n              console.log({\n                chartClicked: config.w.config.labels[config.dataPointIndex],\n              });\n              if (props.FC_LoadSelected) {\n                props.FC_LoadSelected(\n                  config.dataPointIndex,\n                  config.seriesIndex\n                );\n              }\n            },\n          },\n          zoom: {\n            enabled: true,\n            autoScaleYaxis: true,\n          },\n        },\n        plotOptions: {\n          bar: props.defaultBar ? props.defaultBar : defaultBar,\n        },\n        labels: props.labels,\n        dataLabels: {\n          enabled: true,\n        },\n        xaxis: {\n          labels: {\n            rotate: -45,\n          },\n          categories: props.categoriesLabel,\n          tickPlacement: \"on\",\n        },\n        yaxis: {\n          title: {\n            text: props.yaxisText,\n          },\n        },\n        fill: {\n          opacity: 1,\n        },\n        tooltip: {\n          y: {\n            formatter: function (val: number) {\n              return val + \" \" + props.tooltipText;\n            },\n          },\n        },\n        grid: {\n          padding: {\n            left: 30, // or whatever value that works\n            right: 30, // or whatever value that works\n          },\n        },\n        noData: {\n          text: \"No data found\",\n          align: \"center\",\n          verticalAlign: \"middle\",\n        },\n        colors: props.colors,\n      });\n    } else if (loading) {\n      setOptions({\n        chart: {\n          stacked: props.stacked ? props.stacked : false,\n          events: {\n            dataPointSelection: (event, chartContext, config) => {\n              console.log({\n                labelClicked: config.w.config.labels[config.dataPointIndex],\n                // seriesClicked: config.w.config.series[config.dataPointIndex],\n              });\n              if (props.FC_LoadSelected) {\n                props.FC_LoadSelected(\n                  config.dataPointIndex,\n                  config.seriesIndex\n                );\n              }\n              // console.log(config.seriesIndex);\n              // console.log(config.dataPointIndex);\n            },\n          },\n          zoom: {\n            enabled: true,\n            autoScaleYaxis: true,\n          },\n        },\n        plotOptions: {\n          bar: props.defaultBar ? props.defaultBar : defaultBar,\n        },\n        labels: props.labels,\n        dataLabels: {\n          enabled: true,\n        },\n        xaxis: {\n          labels: {\n            rotate: -45,\n          },\n          categories: props.categoriesLabel,\n          tickPlacement: \"on\",\n        },\n        yaxis: {\n          title: {\n            text: props.yaxisText,\n          },\n        },\n        fill: {\n          opacity: 1,\n        },\n        tooltip: {\n          y: {\n            formatter: function (val: number) {\n              return val + \" \" + props.tooltipText;\n            },\n          },\n        },\n        grid: {\n          padding: {\n            left: 30, // or whatever value that works\n            right: 30, // or whatever value that works\n          },\n        },\n        noData: {\n          text: \"No data found\",\n          align: \"center\",\n          verticalAlign: \"middle\",\n        },\n      });\n    }\n    setLoading(false);\n  }, [loading, options, props]);\n\n  if (loading) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading Data...\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"w-full\">\n      <Chart\n        options={options}\n        series={props.series}\n        type=\"bar\"\n        width=\"100%\"\n        height={props.chartHeight ? props.chartHeight : undefined}\n      />\n    </div>\n  );\n};\n\nexport default React.memo(VBarChart);\n","import React, { Fragment, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { SessionPlanInterface } from \"../../../interfaces\";\nimport { course } from \"../../../interfaces/course\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { DATE, sortThisArray } from \"../../../utils/functions\";\n// import searchData from \"../../../utils/search\";\nimport { getPeriodById } from \"./ExamReport\";\n\n// EXCEL INTERFACES ======================================\nexport interface ExamPreparationToPrintInterface {\n  course_id: number;\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string;\n  exam_period: string;\n  exam_date: string;\n  exam_time: string;\n  exam_duration: string;\n  // exam: ExamItemResponse | null;\n  preparation_status: string;\n}\n\nexport enum examPreparationReportContentKeyInterface {\n  \"course_name\" = \"course_name\",\n  \"course_code\" = \"course_code\",\n  SCHOOL_LEVEL = \"school_levels\",\n  PERIOD = \"exam_period\",\n  DATE = \"exam_date\",\n  TIME = \"exam_time\",\n  DURATION = \"exam_duration\",\n  STATUS = \"preparation_status\",\n}\n\nexport interface examPreparationReportContentInterface {\n  key: examPreparationReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n\nexport const defaultExamPreparationReportContent: examPreparationReportContentInterface[] =\n  [\n    {\n      key: examPreparationReportContentKeyInterface.course_name,\n      title: \"Course names\",\n      status: true,\n    },\n    {\n      key: examPreparationReportContentKeyInterface.course_code,\n      title: \"Course code\",\n      status: true,\n    },\n    {\n      key: examPreparationReportContentKeyInterface.SCHOOL_LEVEL,\n      title: \"School levels\",\n      status: true,\n    },\n    {\n      key: examPreparationReportContentKeyInterface.PERIOD,\n      title: \"Exam period\",\n      status: true,\n    },\n    {\n      key: examPreparationReportContentKeyInterface.DATE,\n      title: \"Exam date\",\n      status: true,\n    },\n    {\n      key: examPreparationReportContentKeyInterface.TIME,\n      title: \"Exam time\",\n      status: true,\n    },\n    {\n      key: examPreparationReportContentKeyInterface.DURATION,\n      title: \"Exam duration\",\n      status: true,\n    },\n    {\n      key: examPreparationReportContentKeyInterface.STATUS,\n      title: \"Exam status\",\n      status: true,\n    },\n  ];\n\nexport const examPreparationIsChangeAllowed = (\n  key: examPreparationReportContentKeyInterface\n): boolean => {\n  if (\n    key === examPreparationReportContentKeyInterface.course_name ||\n    key === examPreparationReportContentKeyInterface.course_code\n  ) {\n    return false;\n  }\n  return true;\n};\n// END EXCEL INTERFACES ======================================\n\nexport interface examPreparationStateInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n  exam: ExamItemResponse | null;\n  preparation_status: \"prepared\" | \"not prepared\";\n}\n\nexport const FC_reportExamList = (\n  allCourses: course[],\n  allExams: ExamItemResponse[],\n  period: string = \"\"\n): examPreparationStateInterface[] => {\n  let result: examPreparationStateInterface[] = [],\n    ids: string[] = [];\n  for (const key in allCourses) {\n    if (Object.prototype.hasOwnProperty.call(allCourses, key)) {\n      if (ids.includes(allCourses[key].course_id)) continue;\n      ids.push(allCourses[key].course_id);\n      let exam = !isEmptyOrSpaces(period)\n        ? allExams.find(\n            (item) =>\n              item.course === allCourses[key].course_id &&\n              item.period === period\n          )\n        : allExams.find((item) => item.course === allCourses[key].course_id);\n      if (exam) {\n        result.push({\n          course_name: allCourses[key].course_name,\n          course_code: allCourses[key].course_code,\n          description: allCourses[key].description,\n          school_levels: allCourses[key].school_levels,\n          course_id: allCourses[key].course_id,\n          exam: exam,\n          preparation_status: \"prepared\",\n        });\n      } else {\n        result.push({\n          course_name: allCourses[key].course_name,\n          course_code: allCourses[key].course_code,\n          description: allCourses[key].description,\n          school_levels: allCourses[key].school_levels,\n          course_id: allCourses[key].course_id,\n          exam: null,\n          preparation_status: \"not prepared\",\n        });\n      }\n    }\n  }\n  return result;\n};\n\nexport const FC_reportExamListFilter = (\n  thisList: examPreparationStateInterface[],\n  thisStatus: \"all\" | \"prepared\" | \"not prepared\"\n): examPreparationStateInterface[] => {\n  if (thisStatus === \"all\") {\n    return thisList;\n  } else {\n    return thisList.filter((item) => item.preparation_status === thisStatus);\n  }\n};\n\nexport const searchExamList = (\n  objList: examPreparationStateInterface[],\n  text: string\n): examPreparationStateInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (\n        prop === \"course_name\" ||\n        prop === \"course_code\" ||\n        prop === \"preparation_status\"\n      ) {\n        flag =\n          product[prop].toString().toLowerCase().indexOf(text.toLowerCase()) >\n          -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n};\n\ntype ExamListProps = {\n  loading: boolean;\n  examsListData: ExamItemResponse[] | null;\n  courseListData: course[] | null;\n  thisPeriod: SessionPlanInterface[];\n  // FOR EXAM PREPARATION PROPS =========================================\n  filterPreparation: \"prepared\" | \"not prepared\" | \"all\";\n};\n\nconst ExamList: React.FC<ExamListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const [isSorted, setIsSorted] = useState<boolean>(false);\n  const [sortProperty, setSortProperty] = useState<string>(\"\");\n  const [sortOrder, setSortOrder] = useState<\"ASC\" | \"DESC\">(\"ASC\");\n\n  const setSort = (thisProperty: string) => {\n    if (sortProperty === thisProperty && sortOrder === \"ASC\") {\n      setSortOrder(\"DESC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    } else {\n      setSortOrder(\"ASC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    }\n  };\n\n  return (\n    <Fragment>\n      <div className=\"bg-white my-4\">\n        <div className=\"w-full px-2 py-2\">\n          {props.courseListData && props.examsListData && (\n            <input\n              onChange={(e) => setSearchInput(e.target.value)}\n              type=\"text\"\n              value={searchInput}\n              placeholder=\"Search...\"\n              className=\"w-full bg-gray-100 py-2 px-3 rounded\"\n              disabled={\n                FC_reportExamListFilter(\n                  FC_reportExamList(props.courseListData, props.examsListData),\n                  props.filterPreparation\n                ).length <= 0\n              }\n            />\n          )}\n        </div>\n        <div className=\"w-full overflow-x-auto\">\n          <table className=\"w-full shadow\" id=\"report_content\">\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n              <tr>\n                <td className=\"px-2 py-2\">#</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"course_name\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Course <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">Exam date</td>\n                <td className=\"px-2 py-2\">Exam time</td>\n                <td className=\"px-2 py-2\">Exam duration</td>\n                <td className=\"px-2 py-2\">Exam Period</td>\n                <td className=\"px-2 py-2\">Created at</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"preparation_status\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Exam Status <BiSort />\n                  </div>\n                </td>\n              </tr>\n            </thead>\n            <tbody>\n              {props.courseListData === null || props.loading ? (\n                <tr>\n                  <td colSpan={8} className=\"px-2 py-2\">\n                    <Loading />\n                  </td>\n                </tr>\n              ) : props.courseListData &&\n                props.examsListData &&\n                FC_reportExamListFilter(\n                  FC_reportExamList(props.courseListData, props.examsListData),\n                  props.filterPreparation\n                ).length <= 0 ? (\n                <tr>\n                  <td colSpan={8} className=\"px-2 py-2 text-center\">\n                    No course for exam found\n                  </td>\n                </tr>\n              ) : (\n                props.examsListData &&\n                sortThisArray(\n                  isSorted,\n                  searchExamList(\n                    FC_reportExamListFilter(\n                      FC_reportExamList(\n                        props.courseListData,\n                        props.examsListData\n                      ),\n                      props.filterPreparation\n                    ),\n                    searchInput\n                  ),\n                  sortProperty,\n                  sortOrder\n                ).map((item, i) => (\n                  <tr\n                    key={i + 1}\n                    className={`${\n                      item.exam ? \"bg-blue-50\" : \"bg-white\"\n                    } text-gray-600 hover:bg-blue-100 hover:text-blue-700 border-b border-gray-300 hover:border-blue-500 text-sm`}\n                  >\n                    <td className=\"px-2 py-2\">{i + 1}</td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(item.course_name)} (\n                      <span className=\"font-semibold\">{item.course_code}</span>)\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam ? DATE(item.exam.exam_date) : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam ? item.exam.start_time : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam ? item.exam!.duration + \" min\" : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam\n                        ? getPeriodById(props.thisPeriod, item.exam.period)\n                          ? getPeriodById(props.thisPeriod, item.exam.period)!\n                              .session_plan_name\n                          : \"-\"\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam ? DATE(item.exam.createdAt) : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(\n                        item.exam ? \"Prepared\" : \"Not prepared\"\n                      )}\n                    </td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default React.memo(ExamList);\n","import React, { useEffect, useState } from \"react\";\nimport { CgFileDocument } from \"react-icons/cg\";\nimport { MdCheckBox, MdCheckBoxOutlineBlank, MdHistory } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  SetReportCourseId,\n  SetReportCourseIdAction,\n  SetReportDistrictId,\n  SetReportDistrictIdAction,\n} from \"../../../actions\";\nimport { getAllRoom } from \"../../../actions/location\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport { SessionPlanInterface } from \"../../../interfaces\";\nimport { StoreState } from \"../../../reducers\";\nimport { isEmptyOrSpaces } from \"../../../shared/dataTest\";\nimport {\n  LocationRoomTableInterface,\n  RoomLocationInterface,\n} from \"../../../shared/interfaces\";\nimport ExportToExcel from \"../../../utils/ExportToExcel\";\nimport ChooseSession from \"../../SessionSettings/ChooseSession\";\nimport { LocationsInArray } from \"../../UserManagement/UserList\";\nimport {\n  CandidateExamPerformanceToPrintInterface,\n  CandidateExamPerformanceReportContentInterface,\n  CandidateExamPerformanceReportContentKeyInterface,\n  candidateExamPerformanceIsChangeAllowed,\n} from \"./CandidatePerformance\";\nimport {\n  examinationProgressIsChangeAllowed,\n  ExaminationProgressReportContentInterface,\n  ExaminationProgressReportContentKeyInterface,\n  ExaminationProgressToPrintInterface,\n  examProgressStateInterface,\n  searchExamData,\n} from \"./DoneExamList\";\nimport {\n  examPreparationReportContentInterface,\n  ExamPreparationToPrintInterface,\n  examPreparationReportContentKeyInterface,\n  examPreparationIsChangeAllowed,\n} from \"./ExamList\";\nimport {\n  ExamPerformanceToPrintInterface,\n  examPerformanceReportContentInterface,\n  examPerformanceReportContentKeyInterface,\n  examPerformanceIsChangeAllowed,\n} from \"./ExamPerformance\";\nimport { reportTitleType } from \"./ExamReport\";\n\nexport const FC_DistinctDistrict = (\n  locations: LocationRoomTableInterface[]\n): LocationRoomTableInterface[] => {\n  var flags: string[] = [],\n    output: LocationRoomTableInterface[] = [],\n    l: number = locations.length,\n    i: number;\n  for (i = 0; i < l; i++) {\n    if (flags.includes(locations[i].district_id)) continue;\n    flags.push(locations[i].district_id);\n    output.push(locations[i]);\n  }\n\n  return output;\n};\n\nexport enum ModalForTypes {\n  title = \"TITLE\",\n  period = \"PERIOD\",\n  generateReportModal = \"GENERATE REPORT\",\n  choose_exam = \"Choosing Exam\",\n  choose_district = \"Choosing District\",\n}\n\ntype ExamReportModalsProps = {\n  modalFor: ModalForTypes;\n  modalState: boolean;\n  changeModalState: (state: boolean) => void;\n\n  // FOR CHANGING PERIOD =========================\n  applicationPeriods?: SessionPlanInterface[] | null;\n  selected_period?: SessionPlanInterface | null;\n  setSelectedPeriod?: (period: SessionPlanInterface) => void;\n  onPeriodChange?: (period_id: string) => void;\n\n  // FOR CHOOSING EXAM =========================\n  AllExamData?: examProgressStateInterface[];\n  // thisExam?: examProgressStateInterface | null;\n  // setSelectedExam?: (selectedExam: examProgressStateInterface | null) => void;\n  SetReportCourseId: (\n    data: examProgressStateInterface | null\n  ) => SetReportCourseIdAction;\n  thisExam?: examProgressStateInterface | null;\n\n  // FOR REPORT TYPE =========================\n  reportTitle?: reportTitleType;\n  setReportTitle?: (title: reportTitleType) => void;\n\n  // FOR EXCEL GENERATION =========================\n  generateReportModal?: {\n    reportType: \"EXCEL\" | \"PDF\";\n    status: boolean;\n  } | null;\n  setGenerateReportModal?: (\n    reportData: {\n      reportType: \"EXCEL\" | \"PDF\";\n      status: boolean;\n    } | null\n  ) => void;\n  excelReportTitle?: string;\n  setExcelReportTitle?: (title: string) => void;\n  examPreparationReportContent?: examPreparationReportContentInterface[];\n  setExamPreparationReportContent?: (\n    content: examPreparationReportContentInterface[]\n  ) => void;\n  updateExamToPrint?: () => void;\n  examsToPrint?:\n    | ExamPreparationToPrintInterface[]\n    | ExamPerformanceToPrintInterface[]\n    | null;\n  // FOR EXAM PERFORMANCE REPORT ================================\n  examPerformanceToPrint?: ExamPerformanceToPrintInterface[] | null;\n  examPerformanceReportContent?: examPerformanceReportContentInterface[];\n  setExamPerformanceReportContent?: (\n    value: examPerformanceReportContentInterface[]\n  ) => void;\n  // FOR EXCEL TOP 30 EXAM PERFORMANCE REPORT CONTENT ===============================\n  exam30PerformanceToPrint?: ExamPerformanceToPrintInterface[] | null;\n  exam30PerformanceReportContent?: examPerformanceReportContentInterface[];\n  setExam30PerformanceReportContent?: (\n    value: examPerformanceReportContentInterface[]\n  ) => void;\n  // FOR EXCEL EXAMINATION PROGRESS REPORT CONTENT ===============================\n  examinationProgressToPrint?: ExaminationProgressToPrintInterface[] | null;\n  examinationProgressReportContent?: ExaminationProgressReportContentInterface[];\n  setExaminationProgressExamPerformanceReportContent?: (\n    value: ExaminationProgressReportContentInterface[]\n  ) => void;\n  // FOR EXCEL CANDIDATE EXAM PERFORMANCE REPORT CONTENT ===============================\n  candidateExamPerformanceToPrint?:\n    | CandidateExamPerformanceToPrintInterface[]\n    | null;\n  candidateExamPerformanceReportContent?: CandidateExamPerformanceReportContentInterface[];\n  setCandidateExamPerformanceReportContent?: (\n    value: CandidateExamPerformanceReportContentInterface[]\n  ) => void;\n  // FOR EXCEL TOP 30 CANDIDATE EXAM PERFORMANCE REPORT CONTENT ===============================\n  candidate30ExamPerformanceToPrint?:\n    | CandidateExamPerformanceToPrintInterface[]\n    | null;\n  candidate30ExamPerformanceReportContent?: CandidateExamPerformanceReportContentInterface[];\n  setCandidate30ExamPerformanceReportContent?: (\n    value: CandidateExamPerformanceReportContentInterface[]\n  ) => void;\n  // FOR LOCATIONS PROVINCE, DISTRICT, CENTERS, ROOM ================================\n  locations: RoomLocationInterface[];\n  getAllRoom: Function;\n  SetReportDistrictId?: (\n    data: {\n      district_id: string;\n      district_name: string;\n    } | null\n  ) => SetReportDistrictIdAction;\n  districtId?: string;\n  isAllDistrictAllowed?: boolean;\n};\n\nconst ExamReportModals: React.FC<ExamReportModalsProps> = (props) => {\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [selectAll, setSelectAll] = useState<boolean>(true);\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const [loadingLocation, setLoadingLocation] = useState<boolean>(true);\n  const [error, setError] = useState<{ element: String; msg: string } | null>(\n    null\n  );\n  const [districtId, setDistrictId] = useState<string>(\n    props.districtId ? props.districtId : \"all\"\n  );\n\n  const isChangeAllowed = (key: any): boolean => {\n    // EXAM PREPARATION ######################\n    if (\n      props.reportTitle &&\n      props.reportTitle === reportTitleType.EXAM_PREPARATION\n    ) {\n      return examPreparationIsChangeAllowed(key);\n    }\n    // EXAM PERFORMANCE ######################\n    if (\n      props.reportTitle &&\n      (props.reportTitle === reportTitleType.EXAM_PERFORMANCE ||\n        props.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE)\n    ) {\n      return examPerformanceIsChangeAllowed(key);\n    }\n    // EXAMINATION PROGRESS ######################\n    if (\n      props.reportTitle &&\n      props.reportTitle === reportTitleType.EXAMINATION_PROGRESS\n    ) {\n      return examinationProgressIsChangeAllowed(key);\n    }\n    // CANDIDATE EXAM PERFORMANCE && TOP 30 CANDIDATE EXAM PERFORMANCE ######################\n    if (\n      props.reportTitle &&\n      (props.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE ||\n        props.reportTitle === reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE)\n    ) {\n      return candidateExamPerformanceIsChangeAllowed(key);\n    }\n    return false;\n  };\n\n  const updateExamPreparationReportContent = (\n    key: examPreparationReportContentKeyInterface\n  ) => {\n    if (props.examPreparationReportContent) {\n      let index: number = props.examPreparationReportContent.findIndex(\n        (item) => item.key === key\n      );\n      let newArray: examPreparationReportContentInterface[] =\n        props.examPreparationReportContent;\n      newArray[index].status = !newArray[index].status;\n      props.setExamPreparationReportContent &&\n        props.setExamPreparationReportContent(newArray);\n      let isSelectAllNeeded = newArray.find((item) => item.status === false);\n      if (isSelectAllNeeded) {\n        setSelectAll(false);\n      } else {\n        setSelectAll(true);\n      }\n\n      // UPDATE APPLICATION LIST FOR UPDATE ==============================\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n  };\n\n  const resetReportContent = (currentState: boolean) => {\n    if (props.reportTitle) {\n      // EXAM PREPARATION =======================================\n      if (\n        props.reportTitle === reportTitleType.EXAM_PREPARATION &&\n        props.examPreparationReportContent\n      ) {\n        let newArray: examPreparationReportContentInterface[] =\n          props.examPreparationReportContent;\n        for (const key in newArray) {\n          if (isChangeAllowed(newArray[key].key)) {\n            newArray[key].status = !currentState;\n          }\n        }\n\n        props.setExamPreparationReportContent &&\n          props.setExamPreparationReportContent(newArray);\n        setSelectAll(!currentState);\n\n        props.updateExamToPrint && props.updateExamToPrint();\n      }\n    }\n\n    // EXAM PERFORMANCE =======================================\n    if (\n      props.reportTitle === reportTitleType.EXAM_PERFORMANCE &&\n      props.examPerformanceReportContent\n    ) {\n      let newArray: examPerformanceReportContentInterface[] =\n        props.examPerformanceReportContent;\n      for (const key in newArray) {\n        if (isChangeAllowed(newArray[key].key)) {\n          newArray[key].status = !currentState;\n        }\n      }\n\n      props.setExamPerformanceReportContent &&\n        props.setExamPerformanceReportContent(newArray);\n      setSelectAll(!currentState);\n\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n\n    // TOP 30 EXAM PERFORMANCE =======================================\n    if (\n      props.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n      props.exam30PerformanceReportContent\n    ) {\n      let newArray: examPerformanceReportContentInterface[] =\n        props.exam30PerformanceReportContent;\n      for (const key in newArray) {\n        if (isChangeAllowed(newArray[key].key)) {\n          newArray[key].status = !currentState;\n        }\n      }\n\n      props.setExam30PerformanceReportContent &&\n        props.setExam30PerformanceReportContent(newArray);\n      setSelectAll(!currentState);\n\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n\n    // EXAMINATION PROGRESS =======================================\n    if (\n      props.reportTitle === reportTitleType.EXAMINATION_PROGRESS &&\n      props.examinationProgressReportContent\n    ) {\n      let newArray: ExaminationProgressReportContentInterface[] =\n        props.examinationProgressReportContent;\n      for (const key in newArray) {\n        if (isChangeAllowed(newArray[key].key)) {\n          newArray[key].status = !currentState;\n        }\n      }\n\n      props.setExaminationProgressExamPerformanceReportContent &&\n        props.setExaminationProgressExamPerformanceReportContent(newArray);\n      setSelectAll(!currentState);\n\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n\n    // CANDIDATE EXAM PERFORMANCE =======================================\n    if (\n      props.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE &&\n      props.candidateExamPerformanceReportContent\n    ) {\n      let newArray: CandidateExamPerformanceReportContentInterface[] =\n        props.candidateExamPerformanceReportContent;\n      for (const key in newArray) {\n        if (isChangeAllowed(newArray[key].key)) {\n          newArray[key].status = !currentState;\n        }\n      }\n\n      props.setCandidateExamPerformanceReportContent &&\n        props.setCandidateExamPerformanceReportContent(newArray);\n      setSelectAll(!currentState);\n\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n\n    // TOP 30 CANDIDATE EXAM PERFORMANCE =======================================\n    if (\n      props.reportTitle === reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE &&\n      props.candidate30ExamPerformanceReportContent\n    ) {\n      let newArray: CandidateExamPerformanceReportContentInterface[] =\n        props.candidate30ExamPerformanceReportContent;\n      for (const key in newArray) {\n        if (isChangeAllowed(newArray[key].key)) {\n          newArray[key].status = !currentState;\n        }\n      }\n\n      props.setCandidate30ExamPerformanceReportContent &&\n        props.setCandidate30ExamPerformanceReportContent(newArray);\n      setSelectAll(!currentState);\n\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n  };\n\n  const updateExamPerformanceReportContent = (\n    key: examPerformanceReportContentKeyInterface\n  ) => {\n    if (\n      props.reportTitle &&\n      props.reportTitle === reportTitleType.EXAM_PERFORMANCE &&\n      props.examPerformanceReportContent\n    ) {\n      let index: number = props.examPerformanceReportContent.findIndex(\n        (item) => item.key === key\n      );\n      let newArray: examPerformanceReportContentInterface[] =\n        props.examPerformanceReportContent;\n      newArray[index].status = !newArray[index].status;\n      props.setExamPerformanceReportContent &&\n        props.setExamPerformanceReportContent(newArray);\n      let isSelectAllNeeded = newArray.find((item) => item.status === false);\n      if (isSelectAllNeeded) {\n        setSelectAll(false);\n      } else {\n        setSelectAll(true);\n      }\n\n      // UPDATE APPLICATION LIST FOR UPDATE ==============================\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n    if (\n      props.reportTitle &&\n      props.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n      props.exam30PerformanceReportContent\n    ) {\n      let index: number = props.exam30PerformanceReportContent.findIndex(\n        (item) => item.key === key\n      );\n      let newArray: examPerformanceReportContentInterface[] =\n        props.exam30PerformanceReportContent;\n      newArray[index].status = !newArray[index].status;\n      props.setExam30PerformanceReportContent &&\n        props.setExam30PerformanceReportContent(newArray);\n      let isSelectAllNeeded = newArray.find((item) => item.status === false);\n      if (isSelectAllNeeded) {\n        setSelectAll(false);\n      } else {\n        setSelectAll(true);\n      }\n\n      // UPDATE APPLICATION LIST FOR UPDATE ==============================\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n  };\n\n  const updateExaminationProgressReportContent = (\n    key: ExaminationProgressReportContentKeyInterface\n  ) => {\n    if (props.examinationProgressReportContent) {\n      let index: number = props.examinationProgressReportContent.findIndex(\n        (item) => item.key === key\n      );\n      let newArray: ExaminationProgressReportContentInterface[] =\n        props.examinationProgressReportContent;\n      newArray[index].status = !newArray[index].status;\n      props.setExaminationProgressExamPerformanceReportContent &&\n        props.setExaminationProgressExamPerformanceReportContent(newArray);\n      let isSelectAllNeeded = newArray.find((item) => item.status === false);\n      if (isSelectAllNeeded) {\n        setSelectAll(false);\n      } else {\n        setSelectAll(true);\n      }\n\n      // UPDATE APPLICATION LIST FOR UPDATE ==============================\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n  };\n\n  const updateCandidateExamPerformanceReportContent = (\n    key: CandidateExamPerformanceReportContentKeyInterface\n  ) => {\n    if (\n      props.reportTitle &&\n      props.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE &&\n      props.candidateExamPerformanceReportContent\n    ) {\n      let index: number = props.candidateExamPerformanceReportContent.findIndex(\n        (item) => item.key === key\n      );\n      let newArray: CandidateExamPerformanceReportContentInterface[] =\n        props.candidateExamPerformanceReportContent;\n      newArray[index].status = !newArray[index].status;\n      props.setCandidateExamPerformanceReportContent &&\n        props.setCandidateExamPerformanceReportContent(newArray);\n      let isSelectAllNeeded = newArray.find((item) => item.status === false);\n      if (isSelectAllNeeded) {\n        setSelectAll(false);\n      } else {\n        setSelectAll(true);\n      }\n\n      // UPDATE APPLICATION LIST FOR UPDATE ==============================\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n\n    if (\n      props.reportTitle &&\n      props.reportTitle === reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE &&\n      props.candidate30ExamPerformanceReportContent\n    ) {\n      let index: number =\n        props.candidate30ExamPerformanceReportContent.findIndex(\n          (item) => item.key === key\n        );\n      let newArray: CandidateExamPerformanceReportContentInterface[] =\n        props.candidate30ExamPerformanceReportContent;\n      newArray[index].status = !newArray[index].status;\n      props.setCandidate30ExamPerformanceReportContent &&\n        props.setCandidate30ExamPerformanceReportContent(newArray);\n      let isSelectAllNeeded = newArray.find((item) => item.status === false);\n      if (isSelectAllNeeded) {\n        setSelectAll(false);\n      } else {\n        setSelectAll(true);\n      }\n\n      // UPDATE APPLICATION LIST FOR UPDATE ==============================\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n  };\n\n  useEffect(() => {\n    if (\n      !props.locations.length &&\n      props.modalFor === ModalForTypes.choose_district\n    ) {\n      props.getAllRoom((status: boolean, msg: string) => {\n        if (!status && msg.length > 0) console.error(msg);\n        setLoadingLocation(status);\n      });\n    } else {\n      setLoadingLocation(false);\n    }\n  }, [props]);\n\n  const selectDistrict = (district_id: string) => {\n    setError(null);\n    if (district_id === \"all\") {\n      if (\n        ((props.reportTitle &&\n          props.reportTitle ===\n            reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE) ||\n          (props.isAllDistrictAllowed &&\n            props.isAllDistrictAllowed === true)) &&\n        props.SetReportDistrictId\n      ) {\n        props.SetReportDistrictId(null);\n        props.changeModalState(false);\n      } else {\n        setError({ element: \"district\", msg: \"District is required\" });\n      }\n    } else {\n      if (props.SetReportDistrictId) {\n        let thisDistrict = LocationsInArray(props.locations).find(\n          (item) => item.district_id === district_id\n        );\n        if (!thisDistrict) {\n          return setError({ element: \"district\", msg: \"Invalid district id\" });\n        } else {\n          props.SetReportDistrictId({\n            district_id: thisDistrict.district_id,\n            district_name: thisDistrict.district_name,\n          });\n          props.changeModalState(false);\n        }\n      }\n    }\n  };\n\n  const showGenerateBtn = (): { status: boolean; data: any[] } => {\n    if (props.reportTitle) {\n      // EXAM PREPARATION ######################\n      if (\n        props.reportTitle === reportTitleType.EXAM_PREPARATION &&\n        props.excelReportTitle &&\n        props.examsToPrint\n      ) {\n        return { status: true, data: props.examsToPrint };\n      }\n      // EXAM PERFORMANCE ######################\n      if (\n        props.reportTitle === reportTitleType.EXAM_PERFORMANCE &&\n        props.excelReportTitle &&\n        props.examPerformanceToPrint\n      ) {\n        return { status: true, data: props.examPerformanceToPrint };\n      }\n      // TOP 30 EXAM PERFORMANCE ######################\n      if (\n        props.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n        props.excelReportTitle &&\n        props.exam30PerformanceToPrint\n      ) {\n        return { status: true, data: props.exam30PerformanceToPrint };\n      }\n      // EXAMINATION PROGRESS ######################\n      if (\n        props.reportTitle === reportTitleType.EXAMINATION_PROGRESS &&\n        props.excelReportTitle &&\n        props.examinationProgressToPrint\n      ) {\n        return { status: true, data: props.examinationProgressToPrint };\n      }\n      // CANDIDATE EXAM PERFORMANCE ######################\n      if (\n        props.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE &&\n        props.excelReportTitle &&\n        props.candidateExamPerformanceToPrint\n      ) {\n        return { status: true, data: props.candidateExamPerformanceToPrint };\n      }\n      // TOP 30 CANDIDATE EXAM PERFORMANCE ######################\n      if (\n        props.reportTitle === reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE &&\n        props.excelReportTitle &&\n        props.candidate30ExamPerformanceToPrint\n      ) {\n        return { status: true, data: props.candidate30ExamPerformanceToPrint };\n      }\n    }\n    return { status: false, data: [] };\n  };\n\n  return (\n    <div>\n      {/* LOAD MODAL FOR PERIOD ================================== */}\n      {props.modalFor === ModalForTypes.period &&\n        props.applicationPeriods &&\n        props.modalState && (\n          <Modal\n            title={\n              <div className=\"flex flex-row gap-4 items-center\">\n                <MdHistory className=\"text-5xl text-blue-600\" />\n                <div className=\"flex flex-col\">\n                  <span className=\"font-bold text-xl text-blue-600\">\n                    Choose a period\n                  </span>\n                </div>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() => props.selected_period && props.changeModalState(false)}\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{ title: true }}\n          >\n            <ChooseSession\n              allSession={props.applicationPeriods}\n              setSelectSession={(value: SessionPlanInterface | \"all\") => {\n                if (value !== \"all\") {\n                  props.setSelectedPeriod && props.setSelectedPeriod(value);\n                  props.onPeriodChange && props.onPeriodChange(value._id);\n                  props.changeModalState(false);\n                }\n              }}\n              chooseAll={false}\n              currentSelected={\n                props.selected_period ? props.selected_period : \"all\"\n              }\n            />\n          </Modal>\n        )}\n      {/* END LOAD MODAL FOR PERIOD ================================== */}\n\n      {/* LOAD MODAL FOR REPORT TYPES ================================== */}\n      {props.modalFor === ModalForTypes.title && props.modalState && (\n        <Modal\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              <CgFileDocument className=\"text-5xl text-blue-600\" />\n              <div className=\"flex flex-col\">\n                <span className=\"font-bold text-xl text-blue-600\">\n                  Choose exam report type\n                </span>\n              </div>\n            </div>\n          }\n          backDrop={true}\n          theme={Themes.default}\n          close={() => props.changeModalState(false)}\n          backDropClose={true}\n          widthSizeClass={ModalSize.extraLarge}\n          displayClose={true}\n          padding={{ title: true }}\n        >\n          <div className=\"px-2 pb-2\">\n            {Object.values(reportTitleType).map((item, i) => (\n              <div\n                onClick={() => {\n                  props.setReportTitle && props.setReportTitle(item);\n                  props.setExcelReportTitle && props.setExcelReportTitle(item);\n                  props.changeModalState(false);\n                }}\n                key={i + 1}\n                className={`flex items-center border rounded px-2 py-2 cursor-pointer group hover:bg-blue-100 hover:border-blue-500 mb-3 justify-between ${\n                  props.reportTitle && props.reportTitle === item\n                    ? \"bg-blue-50 border-blue-400\"\n                    : \"bg-white border-gray-200\"\n                }`}\n              >\n                <div>\n                  <div className=\"text-blue-500 text-sm font-medium italic\">\n                    Report type\n                  </div>\n                  <div className=\"font-bold\">\n                    {item}\n                    {item === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n                      \" district\"}\n                  </div>\n                </div>\n                <div className=\"btn bg-blue-400 group-hover:bg-blue-600 text-white mr-2\">\n                  Choose\n                </div>\n              </div>\n            ))}\n          </div>\n        </Modal>\n      )}\n      {/* END LOAD MODAL FOR REPORT TYPES ================================== */}\n\n      {/* GENERATE DYNAMIC REPORT CONTENT MODAL */}\n      {props.generateReportModal &&\n        props.modalFor === ModalForTypes.generateReportModal &&\n        props.modalState && (\n          <Modal\n            title={\n              <div className=\"flex flex-row gap-4 items-center\">\n                {/* <IoBriefcase className=\"text-5xl text-gray-500\" /> */}\n                <div className=\"flex flex-col\">\n                  <span className=\"font-bold text-2xl text-gray-500\">\n                    Generating Report contents\n                  </span>\n                  <span className=\"text-sm text-blue-600 font-normal\">\n                    Generating {props.generateReportModal.reportType} Report\n                  </span>\n                </div>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() =>\n              props.setGenerateReportModal && props.setGenerateReportModal(null)\n            }\n            backDropClose={false}\n            widthSizeClass={ModalSize.medium}\n            displayClose={true}\n            padding={{ title: true }}\n          >\n            <div className=\"px-6\">\n              <div className=\"my-2 text-base text-gray-700 sm:text-lg\">\n                <div className=\"flex flex-col\">\n                  <label>Title</label>\n                  <input\n                    type=\"text\"\n                    className={`text-left input-white w-20 inline-block ${\n                      formError && formError.element === \"report_title\"\n                        ? \"border-red-500\"\n                        : \"border-gray-500\"\n                    } border-2`}\n                    placeholder=\"Sub Category Title\"\n                    value={props.excelReportTitle ? props.excelReportTitle : \"\"}\n                    onChange={(e) => {\n                      props.setExcelReportTitle &&\n                        props.setExcelReportTitle(e.target.value);\n                      setFormError(null);\n                    }}\n                    // disabled={props.loading}\n                  />\n                  {formError && formError.element === \"report_title\" && (\n                    <span className=\"text-red-500\">{formError.msg}</span>\n                  )}\n                </div>\n                <div className=\"flex flex-col mt-2\">\n                  <label>Report content</label>\n                  {/* // EXAM PREPARATION ###################### */}\n                  {props.reportTitle &&\n                    props.reportTitle === reportTitleType.EXAM_PREPARATION && (\n                      <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                        {props.examPreparationReportContent &&\n                          props.examPreparationReportContent.map(\n                            (item, index) => (\n                              <div\n                                key={index}\n                                className={`flex items-center gap-1 ${\n                                  isChangeAllowed(item.key)\n                                    ? \"cursor-pointer\"\n                                    : \"cursor-not-allowed\"\n                                }`}\n                                onClick={() =>\n                                  isChangeAllowed(item.key) &&\n                                  updateExamPreparationReportContent(item.key)\n                                }\n                                title={\n                                  !isChangeAllowed(item.key)\n                                    ? \"Required for every report!\"\n                                    : \"\"\n                                }\n                              >\n                                {item.status ? (\n                                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                                ) : (\n                                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                                )}\n                                <span>{item.title}</span>\n                              </div>\n                            )\n                          )}\n                      </div>\n                    )}\n                  {/* // EXAM PERFORMANCE ###################### */}\n                  {props.reportTitle &&\n                    props.reportTitle === reportTitleType.EXAM_PERFORMANCE && (\n                      <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                        {props.examPerformanceReportContent &&\n                          props.examPerformanceReportContent.map(\n                            (item, index) => (\n                              <div\n                                key={index}\n                                className={`flex items-center gap-1 ${\n                                  isChangeAllowed(item.key)\n                                    ? \"cursor-pointer\"\n                                    : \"cursor-not-allowed\"\n                                }`}\n                                onClick={() =>\n                                  isChangeAllowed(item.key) &&\n                                  updateExamPerformanceReportContent(item.key)\n                                }\n                                title={\n                                  !isChangeAllowed(item.key)\n                                    ? \"Required for every report!\"\n                                    : \"\"\n                                }\n                              >\n                                {item.status ? (\n                                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                                ) : (\n                                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                                )}\n                                <span>{item.title}</span>\n                              </div>\n                            )\n                          )}\n                      </div>\n                    )}\n                  {/* // TOP 30 EXAM PERFORMANCE ###################### */}\n                  {props.reportTitle &&\n                    props.reportTitle ===\n                      reportTitleType.EXAM_DISTRICT_PERFORMANCE && (\n                      <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                        {props.exam30PerformanceReportContent &&\n                          props.exam30PerformanceReportContent.map(\n                            (item, index) => (\n                              <div\n                                key={index}\n                                className={`flex items-center gap-1 ${\n                                  isChangeAllowed(item.key)\n                                    ? \"cursor-pointer\"\n                                    : \"cursor-not-allowed\"\n                                }`}\n                                onClick={() =>\n                                  isChangeAllowed(item.key) &&\n                                  updateExamPerformanceReportContent(item.key)\n                                }\n                                title={\n                                  !isChangeAllowed(item.key)\n                                    ? \"Required for every report!\"\n                                    : \"\"\n                                }\n                              >\n                                {item.status ? (\n                                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                                ) : (\n                                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                                )}\n                                <span>{item.title}</span>\n                              </div>\n                            )\n                          )}\n                      </div>\n                    )}\n                  {/* // EXAMINATION PROGRESS ###################### */}\n                  {props.reportTitle &&\n                    props.reportTitle ===\n                      reportTitleType.EXAMINATION_PROGRESS && (\n                      <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                        {props.examinationProgressReportContent &&\n                          props.examinationProgressReportContent.map(\n                            (item, index) => (\n                              <div\n                                key={index}\n                                className={`flex items-center gap-1 ${\n                                  isChangeAllowed(item.key)\n                                    ? \"cursor-pointer\"\n                                    : \"cursor-not-allowed\"\n                                }`}\n                                onClick={() =>\n                                  isChangeAllowed(item.key) &&\n                                  updateExaminationProgressReportContent(\n                                    item.key\n                                  )\n                                }\n                                title={\n                                  !isChangeAllowed(item.key)\n                                    ? \"Required for every report!\"\n                                    : \"\"\n                                }\n                              >\n                                {item.status ? (\n                                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                                ) : (\n                                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                                )}\n                                <span>{item.title}</span>\n                              </div>\n                            )\n                          )}\n                      </div>\n                    )}\n                  {/* // EXAMINATION PROGRESS ###################### */}\n                  {/* // CANDIDATE EXAM PERFORMANCE ###################### */}\n                  {props.reportTitle &&\n                    props.reportTitle ===\n                      reportTitleType.APPLICANTS_PERFORMANCE && (\n                      <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                        {props.candidateExamPerformanceReportContent &&\n                          props.candidateExamPerformanceReportContent.map(\n                            (item, index) => (\n                              <div\n                                key={index}\n                                className={`flex items-center gap-1 ${\n                                  isChangeAllowed(item.key)\n                                    ? \"cursor-pointer\"\n                                    : \"cursor-not-allowed\"\n                                }`}\n                                onClick={() =>\n                                  isChangeAllowed(item.key) &&\n                                  updateCandidateExamPerformanceReportContent(\n                                    item.key\n                                  )\n                                }\n                                title={\n                                  !isChangeAllowed(item.key)\n                                    ? \"Required for every report!\"\n                                    : \"\"\n                                }\n                              >\n                                {item.status ? (\n                                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                                ) : (\n                                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                                )}\n                                <span>{item.title}</span>\n                              </div>\n                            )\n                          )}\n                      </div>\n                    )}\n                  {/* // END EXAMINATION PROGRESS ###################### */}\n                  {/* // TOP 30 CANDIDATE EXAM PERFORMANCE ###################### */}\n                  {props.reportTitle &&\n                    props.reportTitle ===\n                      reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE && (\n                      <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                        {props.candidate30ExamPerformanceReportContent &&\n                          props.candidate30ExamPerformanceReportContent.map(\n                            (item, index) => (\n                              <div\n                                key={index}\n                                className={`flex items-center gap-1 ${\n                                  isChangeAllowed(item.key)\n                                    ? \"cursor-pointer\"\n                                    : \"cursor-not-allowed\"\n                                }`}\n                                onClick={() =>\n                                  isChangeAllowed(item.key) &&\n                                  updateCandidateExamPerformanceReportContent(\n                                    item.key\n                                  )\n                                }\n                                title={\n                                  !isChangeAllowed(item.key)\n                                    ? \"Required for every report!\"\n                                    : \"\"\n                                }\n                              >\n                                {item.status ? (\n                                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                                ) : (\n                                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                                )}\n                                <span>{item.title}</span>\n                              </div>\n                            )\n                          )}\n                      </div>\n                    )}\n                  {/* // END TOP 30 CANDIDATE EXAM PERFORMANCE ###################### */}\n                  {formError && formError.element === \"report_content\" && (\n                    <span className=\"text-red-500\">{formError.msg}</span>\n                  )}\n                </div>\n              </div>\n              <div className=\"flex justify-between mb-2 mt-4\">\n                <div\n                  className={`flex items-center gap-1 cursor-pointer`}\n                  onClick={() => resetReportContent(selectAll)}\n                >\n                  {selectAll ? (\n                    <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                  ) : (\n                    <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                  )}\n                  <span>Select all</span>\n                </div>\n\n                {showGenerateBtn().status && (\n                  <ExportToExcel\n                    fileData={showGenerateBtn().data}\n                    fileName={props.excelReportTitle!}\n                    btnName=\"Generate\"\n                  />\n                )}\n              </div>\n            </div>\n          </Modal>\n        )}\n      {/* END GENERATE DYNAMIC REPORT CONTENT MODAL */}\n\n      {/* LOAD MODAL FOR CHOOSING EXAM ================================== */}\n      {props.modalFor === ModalForTypes.choose_exam &&\n        props.modalState &&\n        props.AllExamData && (\n          <Modal\n            title={\n              <div className=\"flex flex-row gap-4 items-center\">\n                <CgFileDocument className=\"text-5xl text-blue-600\" />\n                <div className=\"flex flex-col\">\n                  <span className=\"font-bold text-xl text-blue-600\">\n                    Choose exam\n                  </span>\n                </div>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() => props.changeModalState(false)}\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{ title: true }}\n          >\n            <div className=\"px-2 pb-2\">\n              <div className=\"w-full py-2\">\n                <input\n                  onChange={(e) => setSearchInput(e.target.value)}\n                  type=\"text\"\n                  value={searchInput}\n                  placeholder=\"Search...\"\n                  className=\"w-full bg-white py-2 px-3 rounded border border-gray-400\"\n                  disabled={props.AllExamData.length <= 0 ? true : false}\n                />\n              </div>\n              <div\n                onClick={() => {\n                  props.SetReportCourseId(null);\n                  props.changeModalState(false);\n                }}\n                className={`flex items-center border rounded px-2 py-2 cursor-pointer group hover:bg-blue-100 hover:border-blue-500 mb-3 justify-between ${\n                  props.thisExam === null\n                    ? \"bg-blue-50 border-blue-400\"\n                    : \"bg-white border-gray-200\"\n                }`}\n              >\n                <div>\n                  <div className=\"text-sm font-medium italic\">\n                    code: <span className=\"text-blue-500\">-</span>\n                  </div>\n                  <div className=\"font-bold text-lg\">All exams</div>\n                </div>\n                <div className=\"btn bg-blue-400 group-hover:bg-blue-600 text-white mr-2\">\n                  Choose\n                </div>\n              </div>\n              {searchExamData(props.AllExamData, searchInput).map((item, i) => (\n                <div\n                  onClick={() => {\n                    props.SetReportCourseId(item);\n                    props.changeModalState(false);\n                  }}\n                  key={i + 1}\n                  className={`flex items-center border rounded px-2 py-2 cursor-pointer group hover:bg-blue-100 hover:border-blue-500 mb-3 justify-between ${\n                    props.thisExam &&\n                    props.thisExam.course_id === item.course_id\n                      ? \"bg-blue-50 border-blue-400\"\n                      : \"bg-white border-gray-200\"\n                  }`}\n                >\n                  <div>\n                    <div className=\"text-sm font-medium italic\">\n                      code:{\" \"}\n                      <span className=\"text-blue-500\">{item.course_code}</span>\n                    </div>\n                    <div className=\"font-bold text-lg\">{item.course_name}</div>\n                  </div>\n                  <div className=\"btn bg-blue-400 group-hover:bg-blue-600 text-white mr-2\">\n                    Choose\n                  </div>\n                </div>\n              ))}\n            </div>\n          </Modal>\n        )}\n      {/* END LOAD MODAL FOR CHOOSING EXAM ================================== */}\n\n      {/* LOAD MODAL FOR CHOOSING DISTRICT ================================== */}\n      {props.modalFor === ModalForTypes.choose_district && props.modalState && (\n        <Modal\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              <CgFileDocument className=\"text-5xl text-blue-600\" />\n              <div className=\"flex flex-col\">\n                <span className=\"font-bold text-xl text-blue-600\">\n                  Choose district\n                </span>\n              </div>\n            </div>\n          }\n          backDrop={true}\n          theme={Themes.default}\n          close={() =>\n            !isEmptyOrSpaces(districtId) && props.changeModalState(false)\n          }\n          backDropClose={true}\n          widthSizeClass={ModalSize.medium}\n          displayClose={true}\n          padding={{ title: true }}\n        >\n          <div className=\"px-2 pb-2 \">\n            {loadingLocation ? (\n              <Loading />\n            ) : (\n              <section className=\"pb-8 px-7 \">\n                {/* <div className=\"grid grid-cols-1 \"> */}\n                <label className=\"uppercase md:text-sm text-xs text-gray-500 text-light font-semibold\">\n                  District\n                </label>\n                {props.locations.length > 0 ? (\n                  <div className=\"\">\n                    <select\n                      className={`py-3 px-3 w-full rounded border-2 bg-white mt-1 focus:outline-none ${\n                        error && error.element === \"district\"\n                          ? \"border-red-400 focus:border-red-800\"\n                          : \"border-gray-400 focus:border-gray-800\"\n                      }`}\n                      value={districtId}\n                      onChange={(e) => {\n                        setDistrictId(e.target.value);\n                        selectDistrict(e.target.value);\n                      }}\n                    >\n                      <option value=\"all\">Select district</option>\n                      {FC_DistinctDistrict(\n                        LocationsInArray(props.locations)\n                      ).map((item, index) => (\n                        <option\n                          key={index + item.district_id}\n                          value={item.district_id}\n                        >\n                          {item.district_name}\n                        </option>\n                      ))}\n                    </select>\n                    {error && error.element === \"district\" && (\n                      <p className=\"text-xs italic text-red-500 mt-3\">\n                        {error.msg}\n                      </p>\n                    )}\n                  </div>\n                ) : (\n                  <div className=\"alert-info\">No district found</div>\n                )}\n                {/* </div> */}\n              </section>\n            )}\n          </div>\n        </Modal>\n      )}\n      {/* END LOAD MODAL FOR CHOOSING DISTRICT ================================== */}\n    </div>\n  );\n};\n\nconst mapStateToProps = ({\n  locations,\n}: StoreState): {\n  locations: RoomLocationInterface[];\n} => {\n  return {\n    locations: locations.roomLocation,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    getAllRoom,\n    SetReportDistrictId,\n    SetReportCourseId,\n  })(ExamReportModals)\n);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { MdLock, MdLocationOn } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert, schoolLevelsStoreInterface } from \"../../actions\";\nimport { getAllRoom } from \"../../actions/location\";\nimport {\n  blockUserToSystem,\n  unBlockUserToSystem,\n  resetUserAccess,\n} from \"../../actions/users\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport Loading from \"../../components/Loading/Loading\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport Table from \"../../components/Table/Table\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport {\n  getRoleById,\n  capitalizeFirstLetter,\n  getInstituteById,\n  isEmptyOrSpaces,\n} from \"../../shared/dataTest\";\nimport {\n  RoomLocationInterface,\n  LocationRoomTableInterface,\n  DistrictInterface,\n  SystemUserRoleInterface,\n  UserInterface,\n  AccessTaskInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport { UserAccess } from \"./UserAccess\";\nimport UserRole from \"./UserRole\";\nimport profile from \"../../shared/blank_profile.png\"; // with im\nimport { FC_GetBase64Img } from \"../../utils/functions\";\n\nexport const getUserById = (users: UserInterface[], userId: string) => {\n  return users.find((item) => item.user_id === userId);\n};\n\nexport enum ModalState {\n  View_User = \"View User Info\",\n  Add_Access = \"Add Access To User\",\n  Update_Access = \"Update User Access\",\n  Close_Modal = \"Close Modal\",\n}\n\n// Table replaced with Emmy's function\nexport const LocationsInArray = (\n  LocationData: RoomLocationInterface[]\n): LocationRoomTableInterface[] | [] => {\n  let locationTemp: LocationRoomTableInterface[] = [];\n  for (let p in LocationData) {\n    let districts = LocationData[p].districts;\n    for (let d in districts) {\n      let centers = districts[d].centers;\n      for (let c in centers) {\n        let rooms = centers[c].rooms;\n        for (let r in rooms) {\n          locationTemp.push({\n            province_id: LocationData[p]._id,\n            province_name: LocationData[p].province_name,\n            district_id: districts[d]._id,\n            district_name: districts[d].district_name,\n            center_id: centers[c]._id,\n            center_name: centers[c].center_name,\n            room_id: rooms[r]._id,\n            room_name: rooms[r].room_number.toString(),\n            capacity: rooms[r].capacity,\n            occupied: rooms[r].occupied,\n          });\n        }\n      }\n    }\n  }\n  return locationTemp;\n};\n\ninterface AppProps {\n  users: UserInterface[];\n  roleList: SystemUserRoleInterface[];\n  userTypes: \"all\" | \"active\" | \"blocked\";\n  loadingUser: boolean;\n  schoolLevels: schoolLevelsStoreInterface;\n  setLoadingUser: (value: boolean) => void;\n  manageUser: UserInterface | null;\n  setManageUser: (value: UserInterface | null) => void;\n  changeRole: boolean;\n  setChangeRole: (value: boolean) => void;\n  currentPage: number;\n  manageUserId: string;\n  setManageUserId: (value: string) => void;\n  searchFind: string;\n\n  // REDUX =================\n  allRoom: RoomLocationInterface[];\n  getAllRoom: Function;\n  blockUserToSystem: Function;\n  unBlockUserToSystem: Function;\n  resetUserAccess: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface AppStates {\n  loadingRequest: boolean;\n  loading: boolean;\n  loadingRequestType: \"RESET\" | \"STATUS\" | \"CHANGE_ROLE\" | null;\n  roomList: RoomLocationInterface[] | null;\n  roomTable: LocationRoomTableInterface[] | null;\n  userAccess: AccessTaskInterface[] | null;\n  currentAccess: AccessTaskInterface | null;\n}\n\nclass UserList extends Component<AppProps, AppStates> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loadingRequest: false,\n      loading: true,\n      loadingRequestType: null,\n      roomList: null,\n      roomTable: null,\n      userAccess: null,\n      currentAccess: null,\n    };\n  }\n\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingRequestType = (\n    value: \"RESET\" | \"STATUS\" | \"CHANGE_ROLE\" | null\n  ) => {\n    this.setState({ loadingRequestType: value });\n  };\n\n  setRoomList = (value: RoomLocationInterface[] | null) => {\n    this.setState({ roomList: value });\n  };\n\n  setRoomTables = (value: LocationRoomTableInterface[] | null) => {\n    this.setState({ roomTable: value });\n  };\n\n  setCurrentAccess = (value: AccessTaskInterface | null) => {\n    this.setState({ currentAccess: value });\n  };\n\n  setUserAccess = (value: AccessTaskInterface[] | null) => {\n    this.setState({ userAccess: value });\n  };\n\n  componentDidMount = () => {\n    if (this.props.allRoom.length === 0) {\n      this.props.getAllRoom(\n        (status: boolean, msg: string, data?: RoomLocationInterface[]) => {\n          this.setLoading(status);\n          this.props.setLoadingUser(status);\n          if (!status && msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          if (data && data.length > 0) {\n            this.setRoomList(data);\n            this.setRoomTables(LocationsInArray(data));\n          }\n        }\n      );\n    } else if (this.state.loading) {\n      this.setRoomList(this.props.allRoom);\n      this.setRoomTables(LocationsInArray(this.props.allRoom));\n      this.props.setLoadingUser(false);\n      this.setLoading(false);\n    }\n  };\n\n  tableData = (): JSX.Element[] => {\n    if (this.props.loadingUser || this.state.loading) {\n      return [\n        <tr\n          key={Math.random()}\n          className=\"border-b border-gray-200 hover:bg-gray-100\"\n        >\n          <td className=\"p-3 text-center\" colSpan={8}>\n            <Loading />\n          </td>\n        </tr>,\n      ];\n    }\n\n    let data: UserInterface[] = this.props.users;\n    if (data.length <= 0) {\n      return [\n        <tr\n          key={Math.random()}\n          className=\"border-b border-gray-200 hover:bg-gray-100\"\n        >\n          <td className=\"p-3 text-center\" colSpan={8}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    const pageNumber: number =\n      this.props.currentPage > 1 ? (this.props.currentPage - 1) * 30 : 0;\n\n    return data.map((user: UserInterface, index: number) => (\n      <tr\n        key={index + Math.random()}\n        className=\"border-b border-gray-200 hover:bg-gray-100 group cursor-pointer\"\n        onClick={() => {\n          this.props.setManageUser(user);\n          this.props.setManageUserId(user.user_id);\n        }}\n      >\n        <td className=\"p-3 text-left whitespace-nowrap\">\n          {pageNumber + index + 1}\n        </td>\n        <td className=\"p-3 text-left\">\n          <span>\n            {user.user_info &&\n              user.user_info.fname + \" \" + user.user_info.lname}\n          </span>\n        </td>\n        <td className=\"p-3 text-left\">{user.email}</td>\n        {/* <td className=\"p-3 text-left\">{user.phone_number}</td> */}\n        <td className=\"p-3 text-left\">\n          {user.user_info && user.user_info.sex === \"M\" ? \"Male\" : \"Female\"}\n        </td>\n        <td className=\"p-3 text-left text-blue-700 text-base font-medium\">\n          {user.default_access &&\n            user.default_access.system_user_role_id &&\n            user.default_access.system_user_role_id && (\n              <span\n                className={`px-2 py-1 font-semibold rounded text-blue-700 bg-blue-100 dark:bg-blue-700 dark:text-blue-100`}\n              >\n                {getRoleById(\n                  this.props.roleList,\n                  user.default_access.system_user_role_id\n                )?.role &&\n                  capitalizeFirstLetter(\n                    getRoleById(\n                      this.props.roleList,\n                      user.default_access.system_user_role_id\n                    )?.role\n                  )}\n              </span>\n            )}\n        </td>\n        {/* {userTypes === \"all\" && (\n          <td>\n            {user.is_active ? (\n              <span className={`px-2 py-1 font-semibold text-green-700`}>\n                Active\n              </span>\n            ) : (\n              <span className={`px-2 py-1 font-semibold text-red-700`}>\n                Blocked\n              </span>\n            )}\n          </td>\n        )} */}\n        <td className=\"px-3 text-center\">\n          <button\n            className=\"btn bg-gray-200 group-hover:bg-blue-700 group-hover:text-white focus:outline-none\"\n            title=\"Manage User Access\"\n            onClick={() => {\n              this.props.setManageUser(user);\n              this.props.setManageUserId(user.user_id);\n            }}\n          >\n            Manage\n          </button>\n        </td>\n      </tr>\n    ));\n  };\n\n  blockUser = async (user_id: string, actionType: boolean) => {\n    if (!user_id) {\n      this.props.PushPopupAlert({\n        title: \"User Access is required doesn't exist\",\n        theme: PopupAlertTheme.danger,\n      });\n    }\n\n    this.setLoadingRequest(true);\n\n    if (\n      !window.confirm(\n        `Are sure you want to ${actionType ? \"block\" : \"activate\"} this user?`\n      )\n    ) {\n      return this.setLoadingRequest(false);\n    }\n\n    try {\n      const res = await axios.patch(\n        `${API.AUTH}/auth/user/disactive/${user_id}`,\n        {\n          is_active: !actionType,\n        }\n      );\n      if (res) {\n        console.log(\"====================================\");\n        console.log({ blockUserToSystem: res });\n        console.log(\"====================================\");\n        actionType\n          ? this.props.blockUserToSystem(user_id, this.props.currentPage)\n          : this.props.unBlockUserToSystem(user_id, this.props.currentPage);\n\n        this.props.PushPopupAlert({\n          title: `User has been ${actionType ? \"blocked\" : \"activated\"}!`,\n          theme: PopupAlertTheme.info,\n        });\n      }\n    } catch (error) {\n      console.error({ blockUser_ERROR: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n\n    this.setLoadingRequest(false);\n    user_id = \"\";\n  };\n\n  restUserAccess = async (user_id: string) => {\n    if (!user_id) {\n      this.props.PushPopupAlert({\n        title: \"User Access is required doesn't exist\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    if (!window.confirm(`Are sure you want to reset to default access?`)) {\n      return this.setLoadingRequest(false);\n    }\n\n    this.setLoadingRequest(true);\n    this.setLoadingRequestType(\"RESET\");\n\n    try {\n      const res = await axios.delete(\n        `${API.USER}/access/custom/user/${user_id}`\n      );\n      res && this.props.resetUserAccess(user_id, this.props.currentPage);\n      let resetedAccess: UserInterface | undefined | null = isEmptyOrSpaces(\n        this.props.searchFind\n      )\n        ? this.props.users.find((user) => user.user_id === user_id)\n        : this.props.manageUser;\n      if (resetedAccess) {\n        resetedAccess.default_access &&\n          this.setUserAccess(resetedAccess.default_access.access);\n        this.props.PushPopupAlert({\n          title: `Resetting User Access complete successfully`,\n          theme: PopupAlertTheme.info,\n        });\n        this.setCurrentAccess(null);\n      }\n    } catch (error) {\n      console.error({ reseting_user_access: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n\n    this.setLoadingRequest(false);\n    this.setLoadingRequestType(null);\n    user_id = \"\";\n  };\n\n  distinctDistrict = (\n    location: RoomLocationInterface[],\n    province_id?: string\n  ): DistrictInterface[] => {\n    let ids: string[] = [],\n      result: DistrictInterface[] = [];\n\n    if (province_id) {\n      result = location.find((item) => item._id === province_id)\n        ? location.find((item) => item._id === province_id)!.districts\n          ? location.find((item) => item._id === province_id)!.districts\n          : []\n        : [];\n    } else {\n      for (const key in location) {\n        if (Object.prototype.hasOwnProperty.call(location, key)) {\n          for (const keyDistrict in location[key].districts) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                location[key].districts,\n                keyDistrict\n              )\n            ) {\n              if (!ids.includes(location[key].districts[keyDistrict]._id)) {\n                ids.push(location[key].districts[keyDistrict]._id);\n                result.push(location[key].districts[keyDistrict]);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return result;\n  };\n\n  render() {\n    const DATA_GetUser = isEmptyOrSpaces(this.props.searchFind)\n      ? this.props.users.find(\n          (user) => user.user_id === this.props.manageUserId\n        )\n      : this.props.manageUser\n      ? this.props.manageUser\n      : undefined;\n    const DATA_GetRoleById =\n      DATA_GetUser && DATA_GetUser!.default_access\n        ? getRoleById(\n            this.props.roleList,\n            DATA_GetUser!.default_access!.system_user_role_id\n          )\n        : undefined;\n\n    const DATA_ThisRoom =\n      this.state.roomTable && DATA_GetUser\n        ? this.state.roomTable.find(\n            (room) => room.room_id === DATA_GetUser!.default_access?.room_id\n          )\n        : undefined;\n\n    return (\n      <div>\n        {!this.props.manageUser && (\n          <div className=\"grid md:grid-cols-5 gap-2 mb-5\">\n            <div className={`md:col-span-5 rounded`}>\n              <div className=\"my-2 flex sm:flex-row flex-col justify-between\">\n                <div className=\"flex flex-col md:flex-row gap-1 items-center mx-1.5\">\n                  {/* <span className=\"text-lg\">All User</span>\n                  <MdChevronRight className=\"w-7 h-7\" />\n                  <span className=\"text-lg underline\">All User</span> */}\n                </div>\n              </div>\n              {this.props.users && (\n                <Table\n                  columns={[\n                    { columnTitle: \"#\", alignText: \"left\", padding: \"p-3\" },\n                    { columnTitle: \"Names\", alignText: \"left\", padding: \"p-3\" },\n                    { columnTitle: \"Email\", alignText: \"left\", padding: \"p-3\" },\n                    {\n                      columnTitle: \"Gender\",\n                      alignText: \"left\",\n                      padding: \"p-3\",\n                    },\n                    { columnTitle: \"Role\", alignText: \"left\", padding: \"p-3\" },\n                    // { columnTitle: \"Status\", alignText: \"left\", padding: \"p-3\" },\n                    { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n                  ]}\n                  rows={this.tableData}\n                  pagination={false}\n                  search={true}\n                  thColor=\"gray\"\n                  loading={this.props.loadingUser || this.state.loading}\n                />\n              )}\n            </div>\n          </div>\n        )}\n\n        {/* -------------------------------------------------------- */}\n\n        {this.props.manageUser && (\n          <div className=\"bg-gray-100 h-100\">\n            {/* header */}\n            <div className=\"bg-white border-b border-t px-4 py-2 flex flex-col md:flex-row items-center gap-x-14\">\n              {DATA_GetUser ? (\n                <div\n                  key={DATA_GetUser!.user_id + Math.random()}\n                  className=\"flex flex-col md:flex-row md:items-start items-center w-full gap-3\"\n                >\n                  <img\n                    src={\n                      DATA_GetUser!.user_info.photo !== \"pic\" &&\n                      DATA_GetUser!.user_info.photo !== undefined\n                        ? FC_GetBase64Img(DATA_GetUser!.user_info.photo)\n                        : profile\n                    }\n                    alt=\"\"\n                    className=\"rounded-full w-32 h-32 object-contain\"\n                  />\n                  <div className=\"flex flex-col gap-1 items-start w-full\">\n                    <span className=\"text-2xl font-semibold\">\n                      {DATA_GetUser!.user_info.fname +\n                        \" \" +\n                        DATA_GetUser!.user_info.lname}\n                    </span>\n                    <div className=\"flex items-center\">\n                      <MdLock className=\"w-5 h-5\" />\n                      <span className=\"text-lg font-medium\">\n                        {DATA_GetRoleById && DATA_GetRoleById.role}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-1\">\n                      <span className=\"text-gray-500\">Level:</span>\n                      <span className=\"text-base font-medium\">\n                        {DATA_GetRoleById && DATA_GetRoleById.room_required\n                          ? \"Room\"\n                          : DATA_GetRoleById &&\n                            DATA_GetRoleById.education_institution_required\n                          ? \"Institute\"\n                          : \"-\"}\n                      </span>\n                    </div>\n                    {DATA_GetRoleById &&\n                    DATA_GetRoleById.education_institution_required ? (\n                      <div className=\"flex items-center gap-1\">\n                        <span className=\"text-gray-500\">Institute:</span>\n                        <span className=\"text-base font-medium\">\n                          {DATA_GetUser!.default_access &&\n                          this.props.schoolLevels.education_categories &&\n                          getInstituteById(\n                            this.props.schoolLevels.education_categories,\n                            DATA_GetUser!.default_access!\n                              .education_institution_id\n                          )\n                            ? getInstituteById(\n                                this.props.schoolLevels.education_categories,\n                                DATA_GetUser!.default_access!\n                                  .education_institution_id\n                              )!.education_category_title\n                            : \"Unknown Institute\"}\n                        </span>\n                      </div>\n                    ) : (\n                      DATA_GetRoleById &&\n                      DATA_GetRoleById.room_required && (\n                        <div className=\"flex items-center gap-1\">\n                          {/* <span className=\"text-gray-500\">Room:</span> */}\n                          <MdLocationOn className=\"text-gray-500\" />\n                          {DATA_ThisRoom && (\n                            <span className=\"text-base font-medium\">\n                              {DATA_ThisRoom?.district_name +\n                                \" - \" +\n                                DATA_ThisRoom?.center_name +\n                                \" - Room \" +\n                                DATA_ThisRoom?.room_name}\n                            </span>\n                          )}\n                        </div>\n                      )\n                    )}\n                  </div>\n                </div>\n              ) : (\n                <div className=\"w-full\">\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"User info not found\"}\n                  />\n                </div>\n              )}\n              {DATA_GetUser && (\n                <div\n                  key={DATA_GetUser!.user_id + Math.random()}\n                  className=\"flex flex-col w-full\"\n                >\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-gray-500\">NID:</span>\n                    <span className=\"text-base font-medium\">\n                      {DATA_GetUser!.n_id}\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-gray-500\">Email:</span>\n                    <span className=\"text-base font-medium\">\n                      {DATA_GetUser!.email}\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-gray-500\">Phone:</span>\n                    <span className=\"text-base font-medium\">\n                      {DATA_GetUser!.phone_number}\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-gray-500\">Status:</span>\n                    <span className=\"text-base font-medium\">\n                      {DATA_GetUser!.is_active === false ? \"Blocked\" : \"Active\"}\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    {DATA_GetUser!.custome_access && (\n                      <button\n                        className={`px-2 py-1 font-semibold text-gray-50 inline-flex items-center rounded ${\n                          this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"RESET\"\n                            ? \"cursor-wait bg-gray-400\"\n                            : \"bg-gray-600\"\n                        }`}\n                        onClick={() =>\n                          this.restUserAccess(DATA_GetUser!.user_id)\n                        }\n                        disabled={this.state.loadingRequest}\n                      >\n                        <MdLock className=\"w-4 h-4 fill-current\" />\n                        <span>\n                          {this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"RESET\"\n                            ? \"Resetting...\"\n                            : \"Reset Access\"}\n                        </span>\n                      </button>\n                    )}\n                    {!this.props.changeRole && (\n                      <button\n                        className=\"bg-yellow-300 hover:bg-yellow-400 px-2 py-1 font-semibold text-black inline-flex items-center rounded\"\n                        onClick={() => this.props.setChangeRole(true)}\n                      >\n                        <MdLock className=\"w-4 h-4 fill-current\" />\n                        <span>Change Role</span>\n                      </button>\n                    )}\n                    {DATA_GetUser!.is_active ? (\n                      <button\n                        className={`px-2 py-1 font-semibold text-gray-100 inline-flex items-center rounded ${\n                          this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"STATUS\"\n                            ? \"cursor-wait bg-red-500\"\n                            : \"bg-red-700\"\n                        }`}\n                        onClick={() =>\n                          !this.state.loadingRequest &&\n                          this.props.manageUser &&\n                          this.blockUser(\n                            DATA_GetUser!.user_id,\n                            DATA_GetUser!.is_active\n                          )\n                        }\n                        disabled={this.state.loadingRequest}\n                      >\n                        <MdLock className=\"w-4 h-4 fill-current\" />\n                        <span>\n                          {this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"RESET\"\n                            ? \"Loading...\"\n                            : \"Block user\"}\n                        </span>\n                      </button>\n                    ) : (\n                      <button\n                        className={`px-2 py-1 font-semibold text-gray-100 inline-flex items-center rounded ${\n                          this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"STATUS\"\n                            ? \"cursor-wait bg-yellow-500\"\n                            : \"bg-yellow-700\"\n                        }`}\n                        onClick={() =>\n                          !this.state.loadingRequest &&\n                          this.props.manageUser &&\n                          this.blockUser(\n                            DATA_GetUser!.user_id,\n                            DATA_GetUser!.is_active\n                          )\n                        }\n                        disabled={this.state.loadingRequest}\n                      >\n                        <MdLock className=\"w-4 h-4 fill-current\" />\n                        <span>\n                          {this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"RESET\"\n                            ? \"Loading...\"\n                            : \"Re-Activate\"}\n                        </span>\n                      </button>\n                    )}\n                  </div>\n                </div>\n              )}\n            </div>\n            {/* end header */}\n\n            {/* content */}\n            {this.props.manageUser &&\n            this.state.roomList &&\n            this.props.changeRole ? (\n              <UserRole\n                userInfo={this.props.manageUser}\n                roleList={this.props.roleList}\n                district={this.distinctDistrict(this.state.roomList)}\n                roomList={this.state.roomList}\n                setChangeRole={this.props.setChangeRole}\n                currentPage={this.props.currentPage}\n              />\n            ) : (\n              <UserAccess\n                userInfo={DATA_GetUser}\n                manageUserId={this.props.manageUserId}\n                setUserAccess={this.setUserAccess}\n                userAccess={this.state.userAccess}\n                setCurrentAccess={this.setCurrentAccess}\n                currentAccess={this.state.currentAccess}\n                currentPage={this.props.currentPage}\n              />\n            )}\n            {/* end content */}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  schoolLevels,\n  locations,\n}: StoreState): {\n  schoolLevels: schoolLevelsStoreInterface;\n  allRoom: RoomLocationInterface[];\n} => {\n  return {\n    schoolLevels,\n    allRoom: locations.roomLocation,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    blockUserToSystem,\n    unBlockUserToSystem,\n    resetUserAccess,\n    getAllRoom,\n    PushPopupAlert,\n  })(UserList)\n);\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { capitalizeFirstLetter } from \"../../shared/dataTest\";\nimport { SystemUserRoleInterface } from \"../../shared/interfaces\";\nimport search from \"../../utils/search\";\n\n// const searchRole = (\n//   objList: SystemUserRoleInterface[],\n//   text: string\n// ): SystemUserRoleInterface[] => {\n//   return objList.filter(\n//     (product) => product.role.toLocaleLowerCase() === text.toLocaleLowerCase()\n//   );\n// };\n\ntype RoleListProps = {\n  setChooseRole: (value: boolean) => void;\n  roleList: SystemUserRoleInterface[];\n  handleSelectRole: (role_id: string, TYPE?: \"SELECT\" | \"DEFAULT\") => void;\n  loadindRequest: boolean;\n};\n\nconst RoleList: React.FC<RoleListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section className=\"border-2 rounded border-gray-400\">\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={props.roleList.length > 0 ? false : true}\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseRole(false);\n          }}\n        >\n          Close\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}\n\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {search(props.roleList, searchInput).length > 0 ? (\n          search(props.roleList, searchInput).map((role, index) => (\n            <section key={index + role.role}>\n              <div className=\"group flex items-center justify-between my-1 hover:bg-gray-100\">\n                <div\n                  className=\"p-1 w-full mr-2 cursor-pointer\"\n                  onClick={() => {\n                    props.setChooseRole(false);\n                    !props.loadindRequest &&\n                      props.handleSelectRole(role.system_user_role_id);\n                  }}\n                >\n                  <p className=\"text-sm font-medium text-black\">\n                    {capitalizeFirstLetter(role.role)}\n                  </p>\n                </div>\n                <button\n                  type=\"button\"\n                  className=\"bg-blue-200 group-hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                >\n                  Choose\n                </button>\n              </div>\n            </section>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No role available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default React.memo(RoleList);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { MdHighlightOff } from \"react-icons/md\";\nimport { TiInputChecked } from \"react-icons/ti\";\nimport { connect } from \"react-redux\";\nimport { schoolLevelsStoreInterface, PushPopupAlert } from \"../../actions\";\nimport { assignRoleToUserAccess } from \"../../actions/users\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport Loading from \"../../components/Loading/Loading\";\nimport Table from \"../../components/Table/Table\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport {\n  UserInterface,\n  SystemUserRoleInterface,\n  DistrictInterface,\n  RoomLocationInterface,\n  AssignRoleToUserActionInterface,\n  LocationRoomTableInterface,\n  RoleToUserInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport RoleList from \"./RoleList\";\nimport { LocationsInArray } from \"./UserList\";\nconst url = `${API.AUTH}/auth/user/access`;\n\ninterface AppProps {\n  currentPage: number;\n  userInfo: UserInterface;\n  roleList: SystemUserRoleInterface[];\n  district: DistrictInterface[];\n  assignRoleToUserAccess: Function;\n  roomList: RoomLocationInterface[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  setChangeRole: (value: boolean) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface AppState {\n  loading: boolean;\n  loadingForm: boolean;\n  loadingRequest: boolean;\n  roleId: string;\n  provinceId: string;\n  districtId: string;\n  roomId: string;\n  instituteId: string;\n  centerId: string;\n  selectedRole: SystemUserRoleInterface | null;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  chooseRole: boolean;\n}\n\nclass UserRole extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingForm: true,\n      loadingRequest: false,\n      roleId: \"\",\n      provinceId: \"\",\n      districtId: \"\",\n      roomId: \"\",\n      instituteId: \"\",\n      centerId: \"\",\n      selectedRole: null,\n      formError: null,\n      chooseRole: false,\n    };\n  }\n\n  setRoleId = (value: string) => {\n    this.setState({ roleId: value });\n  };\n\n  setSelectedRole = (value: SystemUserRoleInterface | null) => {\n    this.setState({ selectedRole: value });\n  };\n\n  setProvinceId = (value: string) => {\n    this.setState({ provinceId: value });\n  };\n\n  setDistrictId = (value: string) => {\n    this.setState({ districtId: value });\n  };\n\n  setCenterId = (value: string) => {\n    this.setState({ centerId: value });\n  };\n\n  setRoomId = (value: string) => {\n    this.setState({ roomId: value });\n  };\n\n  setLoadingForm = (value: boolean) => {\n    this.setState({ loadingForm: value });\n  };\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setInstituteId = (value: string) => {\n    this.setState({ instituteId: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n  setChooseRole = (value: boolean) => {\n    this.setState({ chooseRole: value });\n  };\n\n  setDefaultState = (\n    default_access: RoleToUserInterface,\n    role: SystemUserRoleInterface\n  ) => {\n    // SET DEFAULT PROVINCE && DISTRICT ID =======================\n    let LOAD_province: LocationRoomTableInterface | undefined;\n    let LOAD_district: DistrictInterface | undefined;\n    if (role.district_required && this.props.roomList) {\n      LOAD_district = this.distinctDistrict(this.props.roomList).find(\n        (item) => item._id === default_access!.district_id\n      );\n      LOAD_district && this.setProvinceId(LOAD_district.province_id);\n      LOAD_district && this.setDistrictId(default_access!.district_id);\n      this.setLoadingForm(false);\n    } else if (role.room_required && this.props.roomList) {\n      // SET DEFAULT PROVINCE && DISTRICT && ROOM ID =======================\n\n      LOAD_province = LocationsInArray(this.props.roomList).find(\n        (item) => item.room_id === default_access!.room_id\n      );\n      LOAD_province && this.setProvinceId(LOAD_province.province_id);\n      LOAD_province && this.setDistrictId(LOAD_province.district_id);\n      LOAD_province && this.setCenterId(LOAD_province.center_id);\n      this.setRoomId(default_access.room_id);\n      this.setLoadingForm(false);\n    } else {\n      this.setLoadingForm(false);\n    }\n  };\n\n  componentDidMount = () => {\n    if (this.props.roleList.length) {\n      if (this.props.userInfo.default_access && this.state.loadingForm) {\n        // SET DEFAULT ROLE ID =======================\n        if (!this.state.roleId.length) {\n          let result = this.props.roleList.find(\n            (role) =>\n              role.system_user_role_id ===\n              this.props.userInfo.default_access!.system_user_role_id\n          );\n          if (result) {\n            this.setRoleId(\n              this.props.userInfo.default_access.system_user_role_id\n            );\n            this.setSelectedRole(result);\n            this.setDefaultState(this.props.userInfo.default_access, result);\n          }\n        }\n\n        console.log(\"====================================\");\n        console.log({ vvvvv: this.props.userInfo.default_access });\n        console.log(\"====================================\");\n      }\n\n      if (this.state.selectedRole && this.props.userInfo.default_access) {\n        this.setDefaultState(\n          this.props.userInfo.default_access,\n          this.state.selectedRole\n        );\n      }\n\n      this.setLoading(false);\n    }\n  };\n\n  handleSelectRole = (\n    role_id: string,\n    TYPE: \"SELECT\" | \"DEFAULT\" = \"SELECT\"\n  ) => {\n    if (this.props.roleList) {\n      let result = this.props.roleList.find(\n        (role) => role.system_user_role_id === role_id\n      );\n      if (result) {\n        this.setRoleId(role_id);\n        this.setSelectedRole(result);\n        this.state.formError &&\n          this.state.formError.element === \"role_id\" &&\n          this.setFormError(null);\n\n        if (TYPE === \"SELECT\") {\n          this.setProvinceId(\"\");\n          this.setDistrictId(\"\");\n          this.setCenterId(\"\");\n          this.setRoomId(\"\");\n          this.setInstituteId(\"\");\n        }\n      }\n    }\n  };\n\n  tableData = (): JSX.Element[] => {\n    if (\n      this.state.roleId.length > 0 &&\n      this.state.selectedRole === null &&\n      this.props.roleList\n    ) {\n      this.handleSelectRole(this.state.roleId, \"DEFAULT\");\n    }\n    if (this.state.selectedRole) {\n      return this.state.selectedRole.access.map((access, i) => (\n        <tr\n          key={i + access.id + Math.random()}\n          className={`text-left border-b border-gray-200 hover:bg-gray-100`}\n        >\n          <td className=\"px-2 py-1\">\n            <label className=\"inline-flex items-center\">\n              <span className=\"text-gray-900 capitalize text-xl font-normal cursor-pointer\">\n                {access.task}\n              </span>\n            </label>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.create ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.create ? (\n                <TiInputChecked />\n              ) : (\n                <MdHighlightOff />\n              )}\n              {access.permitted.create ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.view ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.view ? <TiInputChecked /> : <MdHighlightOff />}\n              {access.permitted.view ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.update ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.update ? (\n                <TiInputChecked />\n              ) : (\n                <MdHighlightOff />\n              )}\n              {access.permitted.update ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.delete ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.delete ? (\n                <TiInputChecked />\n              ) : (\n                <MdHighlightOff />\n              )}\n              {access.permitted.delete ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n        </tr>\n      ));\n    }\n    const optionB = [\n      <tr key=\"55re\">\n        <td colSpan={5} className=\"text-center px-2 py-2\">\n          No Default Access Available on this Role.\n        </td>\n      </tr>,\n    ];\n    return optionB;\n  };\n\n  assignRoleToUser = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!window.confirm(`Are sure you want to change user role?`)) {\n      return false;\n    }\n\n    if (!this.state.selectedRole) {\n      return this.setFormError({\n        element: \"role_id\",\n        msg: \"User role is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.room_required === true &&\n      isEmptyOrSpaces(this.state.provinceId)\n    ) {\n      return this.setFormError({\n        element: \"province_id\",\n        msg: \"Province is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.education_institution_required === true &&\n      isEmptyOrSpaces(this.state.instituteId)\n    ) {\n      return this.setFormError({\n        element: \"institute_id\",\n        msg: \"Institute is required on this role!\",\n      });\n    }\n\n    if (\n      (this.state.selectedRole.room_required === true ||\n        this.state.selectedRole.district_required === true) &&\n      isEmptyOrSpaces(this.state.districtId)\n    ) {\n      return this.setFormError({\n        element: \"district_id\",\n        msg: \"District is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.room_required === true &&\n      isEmptyOrSpaces(this.state.centerId)\n    ) {\n      return this.setFormError({\n        element: \"center_id\",\n        msg: \"Center is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.room_required === true &&\n      isEmptyOrSpaces(this.state.roomId)\n    ) {\n      return this.setFormError({\n        element: \"room_id\",\n        msg: \"Room is required!\",\n      });\n    }\n    this.setLoadingRequest(true);\n    let formData: AssignRoleToUserActionInterface = {\n      user_id: this.props.userInfo.user_id,\n      data: {\n        system_user_role_id: this.state.roleId,\n        status: 1,\n        role: this.state.selectedRole.role,\n        access: this.state.selectedRole.access,\n        school_id: \"\",\n        district_id: \"\",\n        room_id: this.state.selectedRole.room_required ? this.state.roomId : \"\",\n        education_institution_id: this.state.selectedRole\n          .education_institution_required\n          ? this.state.instituteId\n          : \"\",\n      },\n    };\n\n    try {\n      const res = await axios.post(`${url}/addroletouser`, {\n        user_id: this.props.userInfo.user_id,\n        system_user_role_id: this.state.roleId,\n        status: 1,\n        role: this.state.selectedRole.role,\n        access: true,\n        school_id: \"\",\n        district_id:\n          this.state.selectedRole.district_required === true\n            ? this.state.districtId\n            : \"\",\n        room_id:\n          this.state.selectedRole.room_required === true\n            ? this.state.roomId\n            : \"\",\n        education_institution_id: this.state.selectedRole\n          .education_institution_required\n          ? this.state.instituteId\n          : \"\",\n      });\n      if (res) {\n        console.log(\"====================================\");\n        console.log({ assignRoleToUser: res });\n        console.log(\"====================================\");\n        this.props.assignRoleToUserAccess(formData, this.props.currentPage);\n        this.setLoadingRequest(false);\n        this.props.setChangeRole(false);\n        this.props.PushPopupAlert({\n          title: \"Assigning Role to User completed successfully\",\n          theme: PopupAlertTheme.success,\n        });\n      }\n    } catch (error) {\n      console.log({ role_error: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  distinctDistrict = (\n    location: RoomLocationInterface[],\n    province_id?: string\n  ): DistrictInterface[] => {\n    let ids: string[] = [],\n      result: DistrictInterface[] = [];\n\n    if (province_id) {\n      result = location.find((item) => item._id === province_id)\n        ? location.find((item) => item._id === province_id)!.districts\n          ? location.find((item) => item._id === province_id)!.districts\n          : []\n        : [];\n    } else {\n      for (const key in location) {\n        if (Object.prototype.hasOwnProperty.call(location, key)) {\n          for (const keyDistrict in location[key].districts) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                location[key].districts,\n                keyDistrict\n              )\n            ) {\n              if (!ids.includes(location[key].districts[keyDistrict]._id)) {\n                ids.push(location[key].districts[keyDistrict]._id);\n                result.push(location[key].districts[keyDistrict]);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return result;\n  };\n\n  distinctCenter = (\n    rooms: RoomLocationInterface[],\n    district_id: string\n  ): LocationRoomTableInterface[] => {\n    let ids: string[] = [],\n      result: LocationRoomTableInterface[] = [];\n\n    LocationsInArray(rooms).forEach((element) => {\n      if (\n        !ids.includes(element.center_id) &&\n        element.district_id === district_id\n      ) {\n        ids.push(element.center_id);\n        result.push(element);\n      }\n    });\n    return result;\n  };\n\n  distinctRoom = (\n    rooms: RoomLocationInterface[],\n    center_id: string\n  ): LocationRoomTableInterface[] => {\n    let ids: string[] = [],\n      result: LocationRoomTableInterface[] = [];\n\n    LocationsInArray(rooms).forEach((element) => {\n      if (!ids.includes(element.room_id) && element.center_id === center_id) {\n        ids.push(element.room_id);\n        result.push(element);\n      }\n    });\n    return result;\n  };\n\n  render() {\n    if (\n      this.state.loading === true ||\n      this.state.loadingForm ||\n      this.props.userInfo.default_access === null ||\n      this.state.roleId.length === 0 ||\n      this.state.selectedRole === null\n    ) {\n      return (\n        <div className=\"text-center py-7 font-bold text-3xl text-gray-400 animate-pulse\">\n          Loading...\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 py-2 md:py-4 px-2 md:px-0\">\n        {/* left panel */}\n        <div className=\"col-span-1 bg-white w-full overflow-x-auto border rounded\">\n          <div className=\"px-6 md:px-12 py-5 bg-white mx-auto rounded-2xl w-100\">\n            <h3 className=\"font-semibold text-2xl text-gray-800 mb-4\">\n              Change User Role\n            </h3>\n            {this.state.loadingForm ? (\n              <Loading />\n            ) : (\n              <form onSubmit={(e) => this.assignRoleToUser(e)}>\n                <div className=\"space-y-5\">\n                  <div className=\"space-y-2\">\n                    <label className=\"text-sm font-medium text-gray-700 tracking-wide\">\n                      User Role\n                    </label>\n\n                    {!this.state.chooseRole && (\n                      <div\n                        className={`w-full text-base bg-white text-grey-darker cursor-pointer border-2 px-4 py-3 rounded focus:outline-none focus:bg-gray-100 ${\n                          this.state.formError &&\n                          this.state.formError.element === \"role_id\"\n                            ? \"border-red-500\"\n                            : \"border-gray-400\"\n                        }`}\n                        onClick={() => {\n                          !this.state.loadingRequest &&\n                            this.setChooseRole(true);\n                          !this.state.loadingRequest && this.setFormError(null);\n                        }}\n                      >\n                        {this.state.selectedRole\n                          ? this.state.selectedRole.role\n                          : \"Select role\"}\n                      </div>\n                    )}\n\n                    {this.state.chooseRole && (\n                      <RoleList\n                        setChooseRole={this.setChooseRole}\n                        handleSelectRole={this.handleSelectRole}\n                        roleList={this.props.roleList}\n                        loadindRequest={this.state.loadingRequest}\n                      />\n                    )}\n\n                    {this.state.formError &&\n                      this.state.formError.element === \"role_id\" && (\n                        <span className=\"text-red-500\">\n                          {this.state.formError.msg}\n                        </span>\n                      )}\n                  </div>\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.education_institution_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Institute\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"institute_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setInstituteId(e.target.value);\n                            this.setProvinceId(\"\");\n                            this.setDistrictId(\"\");\n                            this.setCenterId(\"\");\n                            this.setRoomId(\"\");\n                            this.state.formError &&\n                              this.state.formError.element === \"institute_id\" &&\n                              this.setFormError(null);\n                          }}\n                          disabled={this.state.loadingRequest}\n                          value={this.state.instituteId}\n                        >\n                          <option value=\"\">Select institute</option>\n                          {this.props.schoolLevels.education_categories &&\n                          this.props.schoolLevels.education_categories.length >\n                            0 ? (\n                            this.props.schoolLevels.education_categories.map(\n                              (institute) => (\n                                <option\n                                  value={institute.education_institute_id}\n                                  key={\n                                    institute.education_institute_id +\n                                    Math.random()\n                                  }\n                                >\n                                  {institute.education_category_title}\n                                </option>\n                              )\n                            )\n                          ) : (\n                            <option value=\"\" disabled>\n                              No institute available\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"institute_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.room_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Province\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"province_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setProvinceId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"province_id\" &&\n                              this.setFormError(null);\n                            this.setDistrictId(\"\");\n                            this.setCenterId(\"\");\n                            this.setRoomId(\"\");\n                          }}\n                          value={this.state.provinceId}\n                          disabled={this.state.loadingRequest}\n                        >\n                          <option value=\"\">Select province</option>\n                          {this.props.roomList &&\n                            this.props.roomList.map((province) => (\n                              <option\n                                key={province._id + Math.random()}\n                                value={province._id}\n                              >\n                                {province.province_name}\n                              </option>\n                            ))}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"province_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n                  {this.state.selectedRole &&\n                    (this.state.selectedRole.district_required ||\n                      this.state.selectedRole.room_required) && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          District\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"district_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setDistrictId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"district_id\" &&\n                              this.setFormError(null);\n                            this.setCenterId(\"\");\n                            this.setRoomId(\"\");\n                          }}\n                          value={this.state.districtId}\n                          disabled={this.state.loadingRequest}\n                        >\n                          <option value=\"\">Select district</option>\n                          {this.props.roomList &&\n                          this.distinctDistrict(\n                            this.props.roomList,\n                            !isEmptyOrSpaces(this.state.provinceId)\n                              ? this.state.provinceId\n                              : undefined\n                          ).length > 0 ? (\n                            this.distinctDistrict(\n                              this.props.roomList,\n                              !isEmptyOrSpaces(this.state.provinceId)\n                                ? this.state.provinceId\n                                : undefined\n                            ).map((district) => (\n                              <option\n                                key={district._id + Math.random()}\n                                value={district._id}\n                              >\n                                {district.district_name}\n                              </option>\n                            ))\n                          ) : (\n                            <option value=\"\" disabled>\n                              No district found\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"district_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.room_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Center\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"center_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setCenterId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"center_id\" &&\n                              this.setFormError(null);\n                            this.setRoomId(\"\");\n                          }}\n                          disabled={this.state.loadingRequest}\n                          value={this.state.centerId}\n                        >\n                          <option value=\"\">Select center</option>\n                          {this.state.districtId &&\n                          this.state.districtId.length > 0 &&\n                          this.props.roomList &&\n                          this.distinctCenter(\n                            this.props.roomList,\n                            this.state.districtId\n                          ).length > 0 ? (\n                            this.distinctCenter(\n                              this.props.roomList,\n                              this.state.districtId\n                            ).map((center, index) => (\n                              <option\n                                value={center.center_id}\n                                key={center.center_id + index + Math.random()}\n                              >\n                                {center.center_name}\n                              </option>\n                            ))\n                          ) : (\n                            <option value=\"\" disabled>\n                              No center found\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"center_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.room_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Room\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"room_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setRoomId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"room_id\" &&\n                              this.setFormError(null);\n                          }}\n                          disabled={this.state.loadingRequest}\n                          value={this.state.roomId}\n                        >\n                          <option value=\"\">Select room</option>\n                          {!isEmptyOrSpaces(this.state.centerId) &&\n                          this.props.roomList &&\n                          this.distinctRoom(\n                            this.props.roomList,\n                            this.state.centerId\n                          ).length > 0 ? (\n                            this.distinctRoom(\n                              this.props.roomList,\n                              this.state.centerId\n                            ).map((room, index) => (\n                              <option\n                                value={room.room_id}\n                                key={room.room_id + index + Math.random()}\n                                className={`${\n                                  room.room_name === \"0\" ? \"hidden\" : \"block\"\n                                }`}\n                              >\n                                {room.room_name}\n                              </option>\n                            ))\n                          ) : (\n                            <option value=\"\" disabled>\n                              No room found\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"room_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  <div className=\"flex justify-between 2xl:justify-start gap-2\">\n                    <button\n                      className=\"btn bg-gray-500 text-gray-50 focus:outline-none\"\n                      onClick={() => {\n                        this.props.setChangeRole(false);\n                        this.setFormError(null);\n                        this.setProvinceId(\"\");\n                        this.setDistrictId(\"\");\n                        this.setCenterId(\"\");\n                        this.setRoomId(\"\");\n                      }}\n                      disabled={this.state.loadingRequest}\n                    >\n                      Back\n                    </button>\n                    <button\n                      className=\"btn btn-blue focus:outline-none\"\n                      // onClick={() => assignRoleToUser()}\n                      disabled={this.state.loadingRequest}\n                    >\n                      {this.state.loadingRequest ? \"Loading...\" : \"Save Change\"}\n                    </button>\n                  </div>\n                </div>\n              </form>\n            )}\n          </div>\n        </div>\n        {/* end left panel */}\n\n        {/* ------------------------------------------------------------ */}\n\n        {/* right panel */}\n        <div className=\"cols-span-1 md:col-span-2 bg-white w-full border rounded text-center p-2 hidden md:block\">\n          <div className=\"my-4\">\n            <span className=\"text-gray-600 font-semibold text-2xl\">\n              {this.state.selectedRole?.role}'s Default Access\n            </span>\n          </div>\n          {!this.state.loading && (\n            <div className=\"overflow-x-auto w-full\">\n              <Table\n                columns={[\n                  {\n                    columnTitle: \"Access Name\",\n                    alignText: \"left\",\n                    padding: \"p-3\",\n                  },\n                  { columnTitle: \"Create\", alignText: \"left\" },\n                  { columnTitle: \"View\", alignText: \"left\" },\n                  { columnTitle: \"Update\", alignText: \"left\" },\n                  { columnTitle: \"Delete\", alignText: \"left\" },\n                ]}\n                rows={this.tableData}\n                pagination={false}\n                search={false}\n                searchBG=\"bg-gray-50\"\n                thColor=\"gray\"\n                tableId=\"defaultAccess\"\n              />\n            </div>\n          )}\n        </div>\n        {/* end right panel */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  schoolLevels,\n}: StoreState): {\n  schoolLevels: schoolLevelsStoreInterface;\n} => {\n  return { schoolLevels };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    assignRoleToUserAccess,\n    PushPopupAlert,\n  })(UserRole)\n);\n","export default __webpack_public_path__ + \"static/media/blank_profile.c3f94521.png\";","import React, { FC } from \"react\";\nimport { IconType } from \"react-icons\";\nimport { FaUsers } from \"react-icons/fa\";\nimport { toAnyDigit } from \"../../shared/dataTest\";\nimport { displayNumbers } from \"../../utils/functions\";\n\nexport type DashboardLabelItemInterface = {\n  // TITLE: Application or Exam or Shortlisted ....\n  title: string;\n  // ICON: FaExpand ....\n  icon: IconType;\n  // ICON COLOR: blue, indigo, gray ....\n  iconColor: string;\n  // COUNT: 0,1,2,3,5,23,563 ....\n  count: number;\n  // COUNT: 0,1,2,3,5,23,563 ....\n  countOver?: number;\n};\n\nconst DashboardLabelItem: FC<DashboardLabelItemInterface> = (\n  props = {\n    title: \"\",\n    icon: FaUsers,\n    iconColor: \"indigo\",\n    count: 0,\n    countOver: undefined,\n  }\n) => {\n  const IconDefined = props.icon;\n  return (\n    <div className=\"flex items-center px-6 py-4 bg-white w-full rounded-md space-x-2 mb-2 lg:mb-0 shadow-md\">\n      <div\n        className={`p-3 rounded-full bg-${props.iconColor}-200 bg-opacity-75`}\n      >\n        <IconDefined className={`h-8 w-8 text-${props.iconColor}-600`} />\n      </div>\n      <div>\n        <h1 className=\"text-3xl font-semibold text-gray-700\">\n          {props.count < 1000\n            ? toAnyDigit(props.count)\n            : displayNumbers(props.count)}{\" \"}\n          {props.countOver && \"/ \" + toAnyDigit(props.countOver)}\n        </h1>\n        <span className=\"text-gray-500 text-lg\">{props.title}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(DashboardLabelItem);\n","import React, { useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { SessionPlanInterface } from \"../../../interfaces\";\nimport { course } from \"../../../interfaces/course\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport { ExamsParcentageSuccessFailedRateByPeriodInterface } from \"../../../interfaces/reports\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { DATE, sortThisArray } from \"../../../utils/functions\";\n\nexport interface ExamPerformanceToPrintInterface {\n  course_id: number;\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string;\n  exam_period: string;\n  exam_date: string;\n  exam_time: string;\n  exam_duration: string;\n  exam_performance: number;\n}\n\nexport enum examPerformanceReportContentKeyInterface {\n  COURSER_NAME = \"course_name\",\n  COURSE_CODE = \"course_code\",\n  SCHOOL_LEVEL = \"school_levels\",\n  PERIOD = \"exam_period\",\n  DATE = \"exam_date\",\n  TIME = \"exam_time\",\n  DURATION = \"exam_duration\",\n  PERFORMANCE = \"exam_performance\",\n}\n\nexport interface examPerformanceReportContentInterface {\n  key: examPerformanceReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n\nexport const examPerformanceIsChangeAllowed = (\n  key: examPerformanceReportContentKeyInterface\n): boolean => {\n  if (\n    key === examPerformanceReportContentKeyInterface.COURSER_NAME ||\n    key === examPerformanceReportContentKeyInterface.COURSE_CODE ||\n    key === examPerformanceReportContentKeyInterface.PERIOD ||\n    key === examPerformanceReportContentKeyInterface.PERFORMANCE\n  ) {\n    return false;\n  }\n  return true;\n};\n\nexport const defaultExamPerformanceContent: examPerformanceReportContentInterface[] =\n  [\n    {\n      key: examPerformanceReportContentKeyInterface.COURSER_NAME,\n      title: \"Course names\",\n      status: true,\n    },\n    {\n      key: examPerformanceReportContentKeyInterface.COURSE_CODE,\n      title: \"Course code\",\n      status: true,\n    },\n    {\n      key: examPerformanceReportContentKeyInterface.SCHOOL_LEVEL,\n      title: \"School levels\",\n      status: true,\n    },\n    {\n      key: examPerformanceReportContentKeyInterface.PERIOD,\n      title: \"Exam period\",\n      status: true,\n    },\n    {\n      key: examPerformanceReportContentKeyInterface.DATE,\n      title: \"Exam date\",\n      status: true,\n    },\n    {\n      key: examPerformanceReportContentKeyInterface.TIME,\n      title: \"Exam time\",\n      status: true,\n    },\n    {\n      key: examPerformanceReportContentKeyInterface.DURATION,\n      title: \"Exam duration\",\n      status: true,\n    },\n    {\n      key: examPerformanceReportContentKeyInterface.PERFORMANCE,\n      title: \"Exam performance\",\n      status: true,\n    },\n  ];\n\nexport interface examPerformanceStateInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n  exam: ExamItemResponse | null;\n  exam_performance: number;\n}\n\nexport const FC_reportExamPerformanceData = (\n  allCourses: course[],\n  allExams: ExamItemResponse[],\n  examPerformance: ExamsParcentageSuccessFailedRateByPeriodInterface[]\n): examPerformanceStateInterface[] => {\n  let result: examPerformanceStateInterface[] = [],\n    ids: string[] = [];\n  for (const key in examPerformance) {\n    if (Object.prototype.hasOwnProperty.call(examPerformance, key)) {\n      if (ids.includes(examPerformance[key].answer_sheet_id)) continue;\n      ids.push(examPerformance[key].answer_sheet_id);\n      let courser = allCourses.find(\n        (item) => item.course_id === examPerformance[key].course\n      );\n      if (courser) {\n        let exam = allExams.find(\n          (item) =>\n            item.course === examPerformance[key].course &&\n            item.period === examPerformance[key].period\n        );\n        result.push({\n          course_name: courser.course_name,\n          course_code: courser.course_code,\n          description: courser.description,\n          school_levels: courser.school_levels,\n          course_id: courser.course_id,\n          exam: exam ? exam : null,\n          exam_performance: examPerformance[key].total_marks,\n        });\n      }\n    }\n  }\n  console.log(\"===============-----------------=====================\");\n  console.log({ result });\n  console.log(\"===============-----------------=====================\");\n  return result;\n};\n\nexport const searchExamPerformanceData = (\n  objList: examPerformanceStateInterface[],\n  text: string\n): examPerformanceStateInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (\n        prop === \"course_name\" ||\n        prop === \"course_code\" ||\n        prop === \"exam_performance\"\n      ) {\n        flag =\n          product[prop].toString().toLowerCase().indexOf(text.toLowerCase()) >\n          -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n};\n\ntype ExamPerformanceProps = {\n  loading: boolean;\n  examsListData: ExamItemResponse[] | null;\n  courseListData: course[] | null;\n  thisPeriod: SessionPlanInterface[];\n  examsPerformanceData:\n    | ExamsParcentageSuccessFailedRateByPeriodInterface[]\n    | null;\n};\n\nconst ExamPerformance: React.FC<ExamPerformanceProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const [isSorted, setIsSorted] = useState<boolean>(false);\n  const [sortProperty, setSortProperty] = useState<string>(\"\");\n  const [sortOrder, setSortOrder] = useState<\"ASC\" | \"DESC\">(\"ASC\");\n\n  const setSort = (thisProperty: string) => {\n    if (sortProperty === thisProperty && sortOrder === \"ASC\") {\n      setSortOrder(\"DESC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    } else {\n      setSortOrder(\"ASC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"bg-white my-4\">\n        <div className=\"w-full px-2 py-2\">\n          <input\n            onChange={(e) => setSearchInput(e.target.value)}\n            type=\"text\"\n            value={searchInput}\n            placeholder=\"Search...\"\n            className=\"w-full bg-gray-100 py-2 px-3 rounded\"\n            disabled={\n              props.courseListData &&\n              props.examsListData &&\n              props.examsPerformanceData &&\n              FC_reportExamPerformanceData(\n                props.courseListData,\n                props.examsListData,\n                props.examsPerformanceData\n              ).length <= 0\n                ? true\n                : false\n            }\n          />\n        </div>\n        <div className=\"w-full overflow-x-auto\">\n          <table className=\"w-full shadow\" id=\"report_content\">\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n              <tr>\n                <td className=\"px-2 py-2\">#</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"course_name\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Course <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">Exam date</td>\n                <td className=\"px-2 py-2\">Exam time</td>\n                <td className=\"px-2 py-2\">Exam duration</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"exam_performance\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Exam performance <BiSort />\n                  </div>\n                </td>\n              </tr>\n            </thead>\n            <tbody>\n              {props.courseListData === null || props.loading ? (\n                <tr>\n                  <td colSpan={6} className=\"px-2 py-2\">\n                    <Loading />\n                  </td>\n                </tr>\n              ) : props.examsListData &&\n                props.examsPerformanceData &&\n                FC_reportExamPerformanceData(\n                  props.courseListData,\n                  props.examsListData,\n                  props.examsPerformanceData\n                ).length <= 0 ? (\n                <tr>\n                  <td colSpan={6} className=\"px-2 py-2 text-center\">\n                    No Exam list available!\n                  </td>\n                </tr>\n              ) : (\n                props.examsListData &&\n                props.examsPerformanceData &&\n                sortThisArray(\n                  isSorted,\n                  searchExamPerformanceData(\n                    FC_reportExamPerformanceData(\n                      props.courseListData,\n                      props.examsListData,\n                      props.examsPerformanceData\n                    ),\n                    searchInput\n                  ),\n                  sortProperty,\n                  sortOrder\n                ).map((item: examPerformanceStateInterface, i) => (\n                  <tr\n                    key={i + 1}\n                    className={`bg-white text-gray-600 hover:bg-blue-100 hover:text-blue-700 border-b border-gray-300 hover:border-blue-500 text-sm`}\n                  >\n                    <td className=\"px-2 py-2\">{i + 1}</td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(item.course_name)} (\n                      <span className=\"font-semibold\">{item.course_code}</span>)\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam ? DATE(item.exam.exam_date) : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam ? item.exam.start_time : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam ? item.exam!.duration + \" min\" : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {Number(item.exam_performance.toFixed(1)) + \"%\"}\n                    </td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default React.memo(ExamPerformance);\n","import React from \"react\";\nimport DashboardLabelItem, {\n  DashboardLabelItemInterface,\n} from \"../DashboardLabelItem\";\n\ntype DashboardLabelProps = {\n  dataLabels: DashboardLabelItemInterface[];\n  labelsOnRow?: number;\n  childrenPosition?: \"START\" | \"END\";\n  children?: JSX.Element;\n};\n\nconst ExamDashboardLabels: React.FC<DashboardLabelProps> = (props) => {\n  const numCols: number = props.labelsOnRow\n    ? props.labelsOnRow > 4\n      ? props.labelsOnRow\n      : 4\n    : 4;\n  return (\n    <div\n      className={`grid 2xl:grid-cols-${numCols} xl:grid-cols-${\n        numCols - 1\n      } lg:grid-cols-${numCols - 2} md:grid-cols-${\n        numCols - 3\n      } sm:grid-cols-2 grid-cols-1 gap-4 items-center mx-auto`}\n    >\n      {props.children &&\n        ((props.childrenPosition && props.childrenPosition === \"START\") ||\n          !props.childrenPosition) &&\n        props.children}\n      {props.dataLabels.map((item, index) => (\n        <section key={index + item.title}>\n          <DashboardLabelItem\n            title={item.title}\n            icon={item.icon}\n            iconColor={item.iconColor}\n            count={item.count}\n          />\n        </section>\n      ))}\n      {props.children &&\n        props.childrenPosition &&\n        props.childrenPosition === \"END\" &&\n        props.children}\n    </div>\n  );\n};\n\nexport default React.memo(ExamDashboardLabels);\n","import React from \"react\";\nimport Chart from \"react-apexcharts\";\n\ntype chartType = {\n  options: {\n    labels: string[];\n    legend?: ApexLegend;\n    plotOptions?: ApexPlotOptions;\n    colors?: any[];\n  };\n  series: number[];\n  width?: number;\n};\n\nconst PieChart: React.FC<chartType> = (props) => {\n  return (\n    <div className=\"donut\">\n      <Chart\n        options={props.options}\n        series={props.series}\n        type=\"donut\"\n        width={`${props.width ? props.width : \"380\"}`}\n      />\n    </div>\n  );\n};\n\nexport default React.memo(PieChart);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { BiRightArrowAlt } from \"react-icons/bi\";\nimport {\n  MdDelete,\n  MdEdit,\n  MdHighlightOff,\n  MdRemoveRedEye,\n  MdSettings,\n} from \"react-icons/md\";\nimport { SiAddthis } from \"react-icons/si\";\nimport { TiInputChecked } from \"react-icons/ti\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { customizeUserAccess } from \"../../actions/users\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport Table from \"../../components/Table/Table\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport {\n  UserInterface,\n  AccessTaskInterface,\n  CustomeAccessInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\n\ninterface AppProps {\n  userInfo: UserInterface | undefined;\n  manageUserId: string;\n  setUserAccess: (value: AccessTaskInterface[] | null) => void;\n  userAccess: AccessTaskInterface[] | null;\n  setCurrentAccess: (value: AccessTaskInterface | null) => void;\n  currentAccess: AccessTaskInterface | null;\n  currentPage: number;\n\n  // REDUX ==============\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  customizeUserAccess: Function;\n}\n\ninterface AppStates {\n  loading: boolean;\n  loadindRequest: boolean;\n  // currentAccess:AccessTaskInterface | null;\n  // userAccess:AccessTaskInterface[] | null;\n  createPermission: boolean;\n  viewPermission: boolean;\n  updatePermission: boolean;\n  deletePermission: boolean;\n}\n\nclass _UserAccess extends Component<AppProps, AppStates> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadindRequest: false,\n      // currentAccess:null,\n      // userAccess:null,\n      createPermission: false,\n      viewPermission: false,\n      updatePermission: false,\n      deletePermission: false,\n    };\n  }\n\n  setViewPermission = (value: boolean) => {\n    this.setState({ viewPermission: value });\n  };\n\n  setLoadindRequest = (value: boolean) => {\n    this.setState({ loadindRequest: value });\n  };\n\n  setCreatePermission = (value: boolean) => {\n    this.setState({ createPermission: value });\n  };\n\n  setUpdatePermission = (value: boolean) => {\n    this.setState({ updatePermission: value });\n  };\n\n  setDeletePermission = (value: boolean) => {\n    this.setState({ deletePermission: value });\n  };\n\n  setLoadind = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  overrideUserAccess = (\n    default_access: AccessTaskInterface[],\n    custome_access: AccessTaskInterface[]\n  ) => {\n    if (default_access && custome_access && custome_access.length > 0) {\n      let overideAccess: AccessTaskInterface[] = [];\n      for (const key in default_access) {\n        if (Object.prototype.hasOwnProperty.call(default_access, key)) {\n          const findCustom = custome_access.find(\n            (custom) => custom.id === default_access[key].id\n          );\n          if (findCustom) {\n            overideAccess.push(findCustom);\n          } else {\n            overideAccess.push(default_access[key]);\n          }\n        }\n      }\n      this.props.setUserAccess(overideAccess);\n    }\n  };\n\n  componentDidMount = () => {\n    if (this.props.userInfo && this.props.userInfo.custome_access) {\n      this.props.userInfo.default_access &&\n        this.overrideUserAccess(\n          this.props.userInfo.default_access.access,\n          this.props.userInfo.custome_access.access\n        );\n      this.setLoadind(false);\n    } else {\n      this.props.userInfo &&\n        this.props.userInfo.default_access &&\n        this.props.setUserAccess(this.props.userInfo.default_access.access);\n      this.setLoadind(false);\n    }\n  };\n\n  tableData = (): JSX.Element[] => {\n    if (!this.props.userAccess)\n      return [\n        <tr key={Math.random()}>\n          <td>No data</td>\n        </tr>,\n      ];\n    return this.props.userAccess.map((access: AccessTaskInterface, i) => (\n      <tr\n        key={i + access.id + Math.random()}\n        className={`text-left border-b border-gray-200 cursor-pointer hover:bg-gray-100 ${\n          this.props.currentAccess &&\n          this.props.currentAccess.id === access.id &&\n          \"bg-gray-200 border my-3 hover:bg-gray-100\"\n        }`}\n        onClick={() =>\n          this.props.currentAccess && this.props.currentAccess.id === access.id\n            ? (this.props.setCurrentAccess(null),\n              this.setCreatePermission(false),\n              this.setViewPermission(false),\n              this.setUpdatePermission(false),\n              this.setDeletePermission(false))\n            : (this.props.setCurrentAccess(access),\n              this.setCreatePermission(access.permitted.create),\n              this.setViewPermission(access.permitted.view),\n              this.setUpdatePermission(access.permitted.update),\n              this.setDeletePermission(access.permitted.delete))\n        }\n      >\n        <td className=\"px-2 py-1\">\n          <label className=\"inline-flex items-center\">\n            {/* <input\n              type=\"radio\"\n              name=\"taskAccess\"\n              value={access.id}\n              className=\"form-radio h-4 w-4 text-gray-600\"\n              onChange={() => {\n                currentAccess\n                  ? this.setState({ currentAccess: null })\n                  : this.setState({ currentAccess: access });\n              }}\n              checked={currentAccess ? true : false}\n            /> */}\n            <span className=\"text-gray-900 capitalize text-xl font-normal cursor-pointer\">\n              {access.task}\n            </span>\n          </label>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.create ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.create ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.create ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.view ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.view ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.view ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.update ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.update ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.update ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.delete ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.delete ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.delete ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n      </tr>\n    ));\n  };\n\n  handleCustomization = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (this.props.userInfo) {\n      this.setLoadindRequest(true);\n      let task: [] | CustomeAccessInterface | null = null;\n      task = this.props.userInfo.custome_access;\n      let index = -1;\n\n      try {\n        if (task && this.props.currentAccess) {\n          index = task.access.findIndex(\n            (access) => access.id === this.props.currentAccess!.id\n          );\n          if (index >= 0) {\n            task.access[index].permitted.create = this.state.createPermission;\n            task.access[index].permitted.view = this.state.viewPermission;\n            task.access[index].permitted.update = this.state.updatePermission;\n            task.access[index].permitted.delete = this.state.deletePermission;\n          } else {\n            task.access.push({\n              id: this.props.currentAccess.id,\n              task: this.props.currentAccess.task,\n              key: this.props.currentAccess.key,\n              permitted: {\n                create: this.state.createPermission,\n                view: this.state.viewPermission,\n                update: this.state.updatePermission,\n                delete: this.state.deletePermission,\n              },\n            });\n          }\n        } else if (this.props.currentAccess) {\n          task = {\n            access: [\n              {\n                id: this.props.currentAccess.id,\n                task: this.props.currentAccess.task,\n                key: this.props.currentAccess.key,\n                permitted: {\n                  create: this.state.createPermission,\n                  view: this.state.viewPermission,\n                  update: this.state.updatePermission,\n                  delete: this.state.deletePermission,\n                },\n              },\n            ],\n            user_id: this.props.userInfo.user_id,\n            custome_user_access_id: \"\",\n          };\n        }\n\n        if (task) {\n          let res;\n          if (this.props.userInfo.custome_access !== null) {\n            res = await axios.patch<{ data: CustomeAccessInterface }>(\n              `${API.USER}/access/custom`,\n              {\n                access: task.access,\n                user_id: this.props.userInfo.user_id,\n              }\n            );\n          } else {\n            res = await axios.post<{ data: CustomeAccessInterface }>(\n              `${API.USER}/access/custom`,\n              {\n                access: task.access,\n                user_id: this.props.userInfo.user_id,\n              }\n            );\n          }\n\n          if (res) {\n            task.custome_user_access_id = res.data.data.custome_user_access_id;\n\n            this.props.customizeUserAccess(task, this.props.currentPage);\n            task &&\n              this.props.userInfo.default_access &&\n              this.overrideUserAccess(\n                this.props.userInfo.default_access.access,\n                task.access\n              );\n            this.props.PushPopupAlert({\n              title: `Resetting User Access complete successfully`,\n              theme: PopupAlertTheme.info,\n            });\n\n            task = null;\n            this.props.setCurrentAccess(null);\n            this.setCreatePermission(false);\n            this.setViewPermission(false);\n            this.setUpdatePermission(false);\n            this.setDeletePermission(false);\n          }\n        }\n      } catch (error) {\n        console.error({ customize_access: error });\n        this.props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      this.setLoadindRequest(false);\n    }\n  };\n\n  render() {\n    if (this.props.userInfo === undefined) {\n      return <Redirect to=\"/users\" />;\n    }\n\n    if (this.state.loading || this.props.userInfo === null) {\n      return (\n        <div className=\"text-center py-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading User Access...\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4 mx-1 my-2\">\n          <div\n            className={`col-span-1 md:col-span-3 bg-white w-full overflow-x-auto border rounded text-center p-2 ${\n              this.props.currentAccess ? \"hidden md:block\" : \"\"\n            }`}\n          >\n            <span className=\"text-gray-600 mt-2 font-semibold text-2xl\">\n              Settings\n            </span>\n            {!this.state.loading && (\n              <div className=\"overflow-x-auto w-full\">\n                <Table\n                  columns={[\n                    {\n                      columnTitle: \"Access Name\",\n                      alignText: \"left\",\n                      padding: \"p-3\",\n                    },\n                    { columnTitle: \"Create\", alignText: \"left\" },\n                    { columnTitle: \"View\", alignText: \"left\" },\n                    { columnTitle: \"Update\", alignText: \"left\" },\n                    { columnTitle: \"Delete\", alignText: \"left\" },\n                  ]}\n                  rows={this.tableData}\n                  pagination={false}\n                  search={true}\n                  searchBG=\"bg-gray-50\"\n                  thColor=\"gray\"\n                />\n              </div>\n            )}\n          </div>\n          <div className={`col-span-1 md:col-span-2`}>\n            {!this.props.currentAccess ? (\n              <div className=\"w-full hidden md:flex flex-col items-center text-gray-600 gap-1 py-3\">\n                <MdSettings className=\"w-20 h-20\" />\n                <span className=\"text-8 md:text-12\">\n                  Choose Access to Customize\n                </span>\n              </div>\n            ) : (\n              <div className={``}>\n                <h1 className=\"text-2xl md:text-3xl font-semibold text-center my-2 text-gray-900\">\n                  Customize User Access\n                </h1>\n                <div className=\"flex justify-center mb-3\">\n                  <h2 className=\"text-2xl font-semibold text-center text-gray-600 flex flex-row items-center\">\n                    <BiRightArrowAlt className=\"w-7 h-7\" />\n                    {this.props.currentAccess.task}\n                  </h2>\n                </div>\n\n                <div className=\"flex flex-col px-2 md:px-1\">\n                  <form\n                    className=\"flex flex-col items-center\"\n                    onSubmit={(e) => this.handleCustomization(e)}\n                  >\n                    <div className=\"inline-flex gap-2 items-center\">\n                      <SiAddthis className=\"w-7 h-7 text-gray-600\" />\n                      <div className=\"flex flex-col\">\n                        <h3 className=\"font-semibold text-xl\">Create</h3>\n                        <span className=\"text-gray-600 text-sm md:pr-1\">\n                          This permission gives the user the ability to create\n                        </span>\n                      </div>\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-checkbox h-7 w-7 text-teal-600\"\n                        onChange={() =>\n                          this.setCreatePermission(!this.state.createPermission)\n                        }\n                        checked={this.state.createPermission}\n                        disabled={this.state.loadindRequest}\n                      />\n                    </div>\n                    <div className=\"inline-flex gap-2 items-center\">\n                      <MdRemoveRedEye className=\"w-7 h-7 text-gray-600\" />\n                      <div className=\"flex flex-col\">\n                        <h3 className=\"font-semibold text-xl\">View</h3>\n                        <span className=\"text-gray-600 text-sm md:pr-4\">\n                          This permission gives the user the ability to view\n                        </span>\n                      </div>\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-checkbox h-7 w-7 text-teal-600\"\n                        onChange={() =>\n                          this.setViewPermission(!this.state.viewPermission)\n                        }\n                        checked={this.state.viewPermission}\n                        disabled={this.state.loadindRequest}\n                      />\n                    </div>\n                    <div className=\"inline-flex gap-2 items-center\">\n                      <MdEdit className=\"w-7 h-7 text-gray-600\" />\n                      <div className=\"flex flex-col\">\n                        <h3 className=\"font-semibold text-xl\">Update</h3>\n                        <span className=\"text-gray-600 text-sm\">\n                          This permission gives the user the ability to update\n                        </span>\n                      </div>\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-checkbox h-7 w-7 text-teal-600\"\n                        onChange={() =>\n                          this.setUpdatePermission(!this.state.updatePermission)\n                        }\n                        checked={this.state.updatePermission}\n                        disabled={this.state.loadindRequest}\n                      />\n                    </div>\n                    <div className=\"inline-flex gap-2 items-center\">\n                      <MdDelete className=\"w-7 h-7 text-gray-600\" />\n                      <div className=\"flex flex-col\">\n                        <h3 className=\"font-semibold text-xl\">Delete</h3>\n                        <span className=\"text-gray-600 text-sm md:pr-1\">\n                          This permission gives the user the ability to delete\n                        </span>\n                      </div>\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-checkbox h-7 w-7 text-teal-600\"\n                        onChange={() =>\n                          this.setDeletePermission(!this.state.deletePermission)\n                        }\n                        checked={this.state.deletePermission}\n                        disabled={this.state.loadindRequest}\n                      />\n                    </div>\n\n                    <div className=\"flex items-center justify-center w-full py-3 gap-2\">\n                      {/* <button className=\"btn btn-secondary bg-red-600\">Back</button> */}\n                      <button\n                        className=\"btn bg-gray-500 hover:bg-gray-700 focus:outline-none text-white\"\n                        disabled={this.state.loadindRequest}\n                        onClick={() => {\n                          this.props.setCurrentAccess(null);\n                          this.setCreatePermission(false);\n                          this.setViewPermission(false);\n                          this.setUpdatePermission(false);\n                          this.setDeletePermission(false);\n                        }}\n                      >\n                        Cancel\n                      </button>\n                      <button\n                        className=\"btn btn-blue\"\n                        disabled={this.state.loadindRequest}\n                      >\n                        {!this.state.loadindRequest\n                          ? \"Save Change\"\n                          : \"Processing..\"}\n                      </button>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const UserAccess = React.memo(\n  connect(null, {\n    customizeUserAccess,\n    PushPopupAlert,\n  })(_UserAccess)\n);\n","import React, { Fragment, useState } from \"react\";\nimport { AiFillDashboard } from \"react-icons/ai\";\nimport { MdBrightness1 } from \"react-icons/md\";\nimport { SessionPlanInterface } from \"../../../interfaces\";\nimport { education_category } from \"../../../interfaces/education_category\";\nimport { reportTitleType } from \"../../Admin/ExamReport/ExamReport\";\nimport ExamReportModals, {\n  ModalForTypes,\n} from \"../../Admin/ExamReport/ExamReportModals\";\n\ntype ExamReportTitleProps = {\n  // FOR SETTINGS ==============================\n  loading: boolean;\n\n  // FOR REPORT TYPE =========================\n  reportTitle: reportTitleType;\n  setReportTitle: (title: reportTitleType) => void;\n\n  //   FOR EDUCATION CATEGORY & PERIOD =====================\n  education_categories: education_category[] | null;\n  loadingEducation: boolean;\n  thisEducation: education_category | null;\n  setThisEducation: (value: education_category | null) => void;\n\n  //   FOR APPLICATION SESSION ============================\n  thisPeriod: string;\n  setThisPeriod: (value: string) => void;\n  application_sessions: SessionPlanInterface[];\n  onPeriodChange?: (period_id: string) => void;\n};\n\nconst ExamDashboardTitle: React.FC<ExamReportTitleProps> = (props) => {\n  const [changeReport, setChangeReport] = useState<boolean>(false);\n\n  return (\n    <Fragment>\n      <div className=\"mt-3 rounded flex flex-col md:flex-row md:justify-between items-start\">\n        <div className=\"flex flex-row items-center gap-3 mb-2\">\n          <AiFillDashboard className=\"text-7xl text-blue-600 hidden md:block\" />\n          <div className=\"flex flex-col\">\n            <span className=\"text-blue-600 text-3xl font-bold\">\n              Exam Dashboard\n            </span>\n            {false && (\n              <div\n                onClick={() => setChangeReport(true)}\n                className=\"flex flex-row gap-2\"\n              >\n                <span className=\"text-gray-500\">Report type: </span>\n                <span className=\"text-gray-600 font-bold underline cursor-pointer\">\n                  {props.reportTitle}\n                </span>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* FILTER SECTION PERIOD && EDUCATION */}\n        <section className=\"w-full md:w-auto my-2 md:my-0\">\n          {/* EDUCATION CATEGORY sections */}\n          <section className=\"flex items-start md:items-center justify-start md:justify-end gap-2\">\n            {props.education_categories &&\n              props.education_categories.length > 0 &&\n              props.education_categories.map((education, index) => (\n                <section\n                  key={education.education_institute_id + index}\n                  className={`w-auto ${\n                    props.loading || props.loadingEducation\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } ${\n                    props.thisEducation &&\n                    education.education_institute_id ===\n                      props.thisEducation.education_institute_id\n                      ? \"bg-blue-500 text-white font-bold\"\n                      : \"bg-gray-100 text-blue-800\"\n                  } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex items-center animate__animated animate__zoomIn`}\n                  onClick={() =>\n                    !props.loading &&\n                    !props.loadingEducation &&\n                    props.setThisEducation(education)\n                  }\n                >\n                  <section className=\"flex-1\">\n                    <MdBrightness1 className=\"inline-block mr-1 text-xs\" />\n                    <span>{education.education_category_title}</span>\n                  </section>\n\n                  {/* {count > 0 ? ( */}\n                  {/* <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n              12\n            </span> */}\n                  {/* ) : null} */}\n                </section>\n              ))}\n          </section>\n          {/* end EDUCATION CATEGORY sections */}\n          <div>\n            <select\n              className={`bg-white text-gray-600 border border-gray-400 rounded p-2 focus:outline-none ${\n                props.loading && \"cursor-wait\"\n              }`}\n              value={props.thisPeriod}\n              disabled={props.loading || props.loadingEducation}\n              onChange={(e) => {\n                props.setThisPeriod(e.target.value);\n                props.onPeriodChange && props.onPeriodChange(e.target.value);\n                // props.setLoadingApplications(true);\n                // props.GetApplicationPerPeriod(\n                //   e.target.value,\n                //   (status: boolean, msg: string) => {\n                //     props.setLoadingApplications(status);\n                //     if (!status && msg.length > 0) {\n                //       props.PushPopupAlert({\n                //         title: errorToText(msg),\n                //         theme: PopupAlertTheme.danger,\n                //       });\n                //     }\n                //   }\n                // );\n              }}\n            >\n              {props.application_sessions.map((session, item) => (\n                <option key={session._id + item} value={session._id}>\n                  {session.session_plan_name}\n                </option>\n              ))}\n            </select>\n          </div>\n        </section>\n        {/* END FILTER SECTION PERIOD && EDUCATION */}\n      </div>\n      {/* CHANGE REPORT TYPE MODAL CONTROLLERS ============================================ */}\n      {changeReport && (\n        <ExamReportModals\n          modalFor={ModalForTypes.title}\n          modalState={changeReport}\n          reportTitle={props.reportTitle}\n          changeModalState={setChangeReport}\n          setReportTitle={props.setReportTitle}\n        />\n      )}\n      {/* END CHANGE REPORT TYPE MODAL CONTROLLERS ============================================ */}\n    </Fragment>\n  );\n};\n\nexport default React.memo(ExamDashboardTitle);\n","import React, { Component } from \"react\";\nimport { examPreparationStateInterface } from \"../../Admin/ExamReport/ExamList\";\nimport VBarChart from \"../ChartComponents/VBarChart\";\n\ntype ExamPreparationChartProps = {\n  examPreparationProgress: {\n    all: examPreparationStateInterface[];\n    finished: examPreparationStateInterface[];\n    remaining: examPreparationStateInterface[];\n  };\n};\n\nclass ExamPreparationChart extends Component<ExamPreparationChartProps> {\n  render() {\n    return (\n      <div className=\"my-3 max-w-full bg-white\">\n        <div className=\"flex items-center justify-between px-3\">\n          <span className=\"text-gray-600 font-semibold text-xl py-4 px-0\">\n            Exams preparation chart\n          </span>\n        </div>\n\n        <div className=\"mb-4 pb-2 px-3\">\n          <VBarChart\n            labels={[\"Remaining exams\", \"Prepared exams\"]}\n            categoriesLabel={[\"Exam preparation progress\"]}\n            dataLabels={true}\n            yaxisText=\"Exam preparation progress\"\n            tooltipText=\"(Exams)\"\n            series={[\n              {\n                name: \"Remaining exams\",\n                data: [this.props.examPreparationProgress.remaining.length],\n              },\n              {\n                name: \"Prepared exams\",\n                data: [this.props.examPreparationProgress.finished.length],\n              },\n            ]}\n            colors={[\"#4b5563\", \"#469769\"]}\n            defaultBar={{\n              borderRadius: 4,\n              horizontal: false,\n              columnWidth: \"95%\",\n              endingShape: \"rounded\",\n            }}\n            chartHeight={550}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default React.memo(ExamPreparationChart);\n","import React, { Component } from \"react\";\nimport { examProgressStateInterface } from \"../../Admin/ExamReport/DoneExamList\";\nimport VBarChart from \"../ChartComponents/VBarChart\";\n\ntype ExamProgressChartProps = {\n  progressData: {\n    all: examProgressStateInterface[];\n    finished: examProgressStateInterface[];\n    remaining: examProgressStateInterface[];\n  };\n};\n\nclass ExamProgressChart extends Component<ExamProgressChartProps> {\n  render() {\n    return (\n      <div className=\"my-3 max-w-full bg-white\">\n        <div className=\"flex items-center justify-between px-3\">\n          <span className=\"text-gray-600 font-semibold text-xl py-4 px-0\">\n            Examination progress chart\n          </span>\n        </div>\n\n        <div className=\"mb-4 pb-2 px-3\">\n          <VBarChart\n            labels={[\"Remaining exams\", \"Prepared exams\"]}\n            categoriesLabel={[\"Examinations progress\"]}\n            dataLabels={true}\n            yaxisText=\"Examination progress\"\n            tooltipText=\"(Exams)\"\n            series={[\n              {\n                name: \"Remaining exams\",\n                data: [this.props.progressData.remaining.length],\n              },\n              {\n                name: \"Done exams\",\n                data: [this.props.progressData.finished.length],\n              },\n            ]}\n            colors={[\"#4b5563\", \"#469769\"]}\n            defaultBar={{\n              borderRadius: 4,\n              horizontal: false,\n              columnWidth: \"95%\",\n              endingShape: \"rounded\",\n            }}\n            chartHeight={550}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default React.memo(ExamProgressChart);\n","import React, { Component } from \"react\";\nimport { candidatePerfomranceStateInterface } from \"../../Admin/ExamReport/CandidatePerformance\";\nimport VBarChart from \"../ChartComponents/VBarChart\";\n\ntype ExamPerformanceChartProps = {\n  examPerformance: {\n    all: candidatePerfomranceStateInterface[];\n    pass: candidatePerfomranceStateInterface[];\n    failed: candidatePerfomranceStateInterface[];\n    active: candidatePerfomranceStateInterface[];\n  };\n};\n\nclass ExamPerformanceChart extends Component<ExamPerformanceChartProps> {\n  render() {\n    return (\n      <div className=\"my-3 max-w-full bg-white\">\n        <div className=\"flex items-center justify-between px-3\">\n          <span className=\"text-gray-600 font-semibold text-xl py-4 px-0\">\n            Examination performance chart\n          </span>\n        </div>\n\n        <div className=\"mb-4 pb-2 px-3\">\n          <VBarChart\n            labels={[\"Pass applicant(s)\", \"Failed applicant(s)\"]}\n            categoriesLabel={[\"Exam preparation progress\"]}\n            dataLabels={true}\n            yaxisText=\"Exam performance\"\n            tooltipText=\"(Applicants)\"\n            series={[\n              {\n                name: \"Pass applicant(s)\",\n                data: [this.props.examPerformance.pass.length],\n              },\n              {\n                name: \"Failed applicant(s)\",\n                data: [this.props.examPerformance.failed.length],\n              },\n            ]}\n            colors={[\"#469769\", \"#d97724\"]}\n            defaultBar={{\n              borderRadius: 4,\n              horizontal: false,\n              columnWidth: \"95%\",\n              endingShape: \"rounded\",\n            }}\n            chartHeight={550}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default React.memo(ExamPerformanceChart);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  schoolLevelsStoreInterface,\n  loadCourses,\n  loadExamsList,\n  loadEducationCategories,\n  loadDoneExam,\n  loadSchoolLevels,\n  loadPerfomranceExam,\n  loadCandidatesExamPerformance,\n  PushPopupAlert,\n  FilterParamType,\n} from \"../../../actions\";\nimport { StoreState } from \"../../../reducers\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport {\n  SessionPlanInterface,\n  course,\n  education_category,\n  ExamDoneAndRemainingByPeriodInterface,\n  school_level,\n} from \"../../../interfaces\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport { ExamReportReducerType } from \"../../../reducers/exam_report\";\nimport moment from \"moment\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport {\n  candidatePerfomranceStateInterface,\n  FC_reportCandidatePerformanceData,\n  FC_reportCandidatePerformanceDataFilter,\n} from \"../../Admin/ExamReport/CandidatePerformance\";\nimport {\n  examProgressStateInterface,\n  FC_reportDoneExamList,\n} from \"../../Admin/ExamReport/DoneExamList\";\nimport {\n  examPreparationStateInterface,\n  FC_reportExamList,\n} from \"../../Admin/ExamReport/ExamList\";\nimport { reportTitleType } from \"../../Admin/ExamReport/ExamReport\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport NoSession from \"../../SessionSettings/NoSession\";\nimport ExamDashboardTitle from \"./ExamDashboardTitle\";\nimport ExamDashboardLabels from \"./ExamDashboardLabels\";\nimport { FaBookOpen } from \"react-icons/fa\";\nimport PieChart from \"../ChartComponents/PieChart\";\nimport ExamPreparationChart from \"./ExamPreparationChart\";\nimport ExamProgressChart from \"./ExamProgressChart\";\nimport ExamPerformanceChart from \"./ExamPerformanceChart\";\n\nexport const getLevelbyId = (\n  school_levels: school_level[] | null,\n  level_id: string\n): school_level | undefined => {\n  if (school_levels) {\n    return school_levels.find((item) => item.school_level_id === level_id);\n  }\n};\n\nexport const loadCoursesByInstitute = (\n  thisEducation: education_category | null,\n  courseList: course[] | null,\n  school_levels: school_level[] | null\n): course[] | null => {\n  let result: course[] | null = [],\n    defaultValue: boolean = false;\n  if (courseList && thisEducation) {\n    for (const key in courseList) {\n      if (Object.prototype.hasOwnProperty.call(courseList, key)) {\n        if (courseList[key].school_levels.length > 0) {\n          courseList[key].school_levels.forEach((level) => {\n            let levelDetail = getLevelbyId(school_levels, level);\n            if (\n              levelDetail &&\n              (levelDetail.education_institute.includes(\n                thisEducation.education_institute_id\n              ) ||\n                levelDetail.education_institute.length <= 0)\n            ) {\n              result && result.push(courseList![key]);\n            }\n          });\n        } else {\n          result && result.push(courseList![key]);\n        }\n      }\n    }\n  }\n  // RETURN DEFAULT VALUES ====================\n  else {\n    defaultValue = true;\n  }\n  return defaultValue ? courseList : result;\n};\n\nexport const loadExaminationProgress = (\n  DoneExamList: ExamDoneAndRemainingByPeriodInterface[] | null,\n  examsList: ExamItemResponse[] | null,\n  thisEducation: education_category | null,\n  courseList: course[] | null,\n  school_levels: school_level[] | null,\n  period: string\n): {\n  all: examProgressStateInterface[];\n  finished: examProgressStateInterface[];\n  remaining: examProgressStateInterface[];\n} | null => {\n  let allData: examProgressStateInterface[] = [],\n    completeExams: examProgressStateInterface[] = [],\n    remainingExams: examProgressStateInterface[] = [],\n    dataFound: boolean = false;\n  if (\n    DoneExamList &&\n    loadCoursesByInstitute(thisEducation, courseList, school_levels) &&\n    examsList\n  ) {\n    dataFound = true;\n    allData = FC_reportDoneExamList(\n      loadCoursesByInstitute(thisEducation, courseList, school_levels)!,\n      examsList,\n      DoneExamList\n    ).filter((item) => item.exam && item.exam.period === period);\n    completeExams = allData.filter(\n      (item) => item.preparation_status.toLocaleLowerCase() === \"done\"\n    );\n    remainingExams = allData.filter(\n      (item) => item.preparation_status.toLocaleLowerCase() === \"active\"\n    );\n  }\n  console.log(\"====================================\");\n  console.log({ loadExaminationProgress: DoneExamList });\n  console.log(\"====================================\");\n  return dataFound\n    ? { all: allData, finished: completeExams, remaining: remainingExams }\n    : null;\n};\n\nexport const loadExamPreparationProgress = (\n  dataList: examPreparationStateInterface[]\n): {\n  all: examPreparationStateInterface[];\n  finished: examPreparationStateInterface[];\n  remaining: examPreparationStateInterface[];\n} => {\n  let allData: examPreparationStateInterface[] = dataList,\n    preparedExams: examPreparationStateInterface[] = dataList.filter(\n      (item) => item.preparation_status === \"prepared\"\n    ),\n    remainingExams: examPreparationStateInterface[] = dataList.filter(\n      (item) => item.preparation_status === \"not prepared\"\n    );\n  return { all: allData, finished: preparedExams, remaining: remainingExams };\n};\n\nexport const isDatePast = (dateParam: string): boolean => {\n  const date = moment().format(\"DD-MM-YYYY\");\n  const todayDate = moment(date, \"DD-MM-YYYY\");\n  const pastDate = moment(dateParam, \"DD-MM-YYYY\");\n\n  const dDiff = todayDate.diff(pastDate);\n\n  if (dDiff > 0) {\n    return false;\n  } else {\n    return true;\n  }\n};\n\nexport const loadExamAttendance = (\n  applicantList: candidatePerfomranceStateInterface[],\n  period: string\n): {\n  all: candidatePerfomranceStateInterface[];\n  pass: candidatePerfomranceStateInterface[];\n  failed: candidatePerfomranceStateInterface[];\n  active: candidatePerfomranceStateInterface[];\n} => {\n  return {\n    all: applicantList.filter((item) => item.exam.period === period),\n    pass: applicantList.filter(\n      (item) =>\n        item.exam.period === period &&\n        (item.exam_stastus !== \"Editing\" || isDatePast(item.exam.exam_date)) &&\n        item.user_total_marks >= 50\n    ),\n    failed: applicantList.filter(\n      (item) =>\n        item.exam.period === period &&\n        (item.exam_stastus !== \"Editing\" || isDatePast(item.exam.exam_date)) &&\n        item.user_total_marks < 50\n    ),\n    active: applicantList.filter(\n      (item) =>\n        item.exam.period === period &&\n        item.exam_stastus === \"Editing\" &&\n        !isDatePast(item.exam.exam_date)\n    ),\n  };\n};\n\ninterface ExamDashboardProps {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  courses: course[] | null;\n  examsList: ExamItemResponse[] | null;\n  adminExamReport: ExamReportReducerType;\n  GetAllSessionPlans: Function;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  loadCourses: (callback: (loading: boolean) => void) => void;\n  loadExamsList: (callback: (loading: boolean) => void) => void;\n  loadDoneExam: (period_id: string, callback: Function) => void;\n  loadPerfomranceExam: (period_id: string, callback: Function) => void;\n  loadSchoolLevels: (callback: (loading: boolean) => void) => void;\n  loadCandidatesExamPerformance: (\n    dataBody: FilterParamType | null,\n    callback: Function\n  ) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface ExamDashboardStates {\n  loading: boolean;\n  loadingCourses: boolean;\n  loadingExams: boolean;\n  loadingDoneExam: boolean;\n  loadingCandidatesExamPerformance: boolean;\n  loadingExamPerformance: boolean;\n  loadingSettings: boolean;\n  changingPeriod: boolean;\n  reportTitle: reportTitleType;\n  thisEducation: education_category | null;\n  thisPeriod: string;\n}\n\nclass _ExamDashboard extends Component<\n  ExamDashboardProps,\n  ExamDashboardStates\n> {\n  constructor(props: ExamDashboardProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingCourses: true,\n      loadingExams: true,\n      loadingDoneExam: true,\n      loadingCandidatesExamPerformance: true,\n      loadingExamPerformance: true,\n      loadingSettings: true,\n      changingPeriod: false,\n      reportTitle: reportTitleType.EXAM_PREPARATION,\n      thisEducation: null,\n      thisPeriod: \"\",\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingCourses = (value: boolean) => {\n    this.setState({ loadingCourses: value });\n  };\n\n  setLoadingExams = (value: boolean) => {\n    this.setState({ loadingExams: value });\n  };\n\n  setLoadingDoneExam = (value: boolean) => {\n    this.setState({ loadingDoneExam: value });\n  };\n\n  setLoadingCandidatesExamPerformance = (value: boolean) => {\n    this.setState({ loadingCandidatesExamPerformance: value });\n  };\n\n  setLoadingExamPerformance = (value: boolean) => {\n    this.setState({ loadingExamPerformance: value });\n  };\n\n  setLoadingSettings = (value: boolean) => {\n    this.setState({ loadingSettings: value });\n  };\n\n  setChangingPeriod = (value: boolean) => {\n    this.setState({ changingPeriod: value });\n  };\n\n  setReportTitle = (value: reportTitleType) => {\n    this.setState({ reportTitle: value });\n  };\n\n  setThisEducation = (value: education_category | null) => {\n    this.setState({ thisEducation: value });\n  };\n\n  setThisPeriod = (value: string) => {\n    this.setState({ thisPeriod: value });\n  };\n\n  loadByPeriods = (session: SessionPlanInterface) => {\n    this.props.loadDoneExam(session._id, (status: boolean, msg: string) => {\n      if (!status) {\n        if (msg.length > 0) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n        this.setLoadingDoneExam(false);\n      }\n    });\n\n    // --------------------------------------------\n    this.props.loadPerfomranceExam(\n      session._id,\n      (status: boolean, msg: string) => {\n        if (!status) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          this.setLoadingExamPerformance(false);\n        }\n      }\n    );\n  };\n\n  componentDidMount = () => {\n    if (\n      this.props.schoolLevels.education_categories === null ||\n      this.props.schoolLevels.education_categories.length === 0\n    ) {\n      this.props.loadEducationCategories(this.setLoadingSettings);\n    } else if (\n      this.props.schoolLevels.education_categories.length > 0 &&\n      !this.state.thisEducation\n    ) {\n      this.setThisEducation(this.props.schoolLevels.education_categories[0]);\n      this.setLoadingSettings(false);\n    }\n\n    if (this.props.application_sessions === null) {\n      this.props.GetAllSessionPlans(\n        (status: boolean, msg: string, sessions?: SessionPlanInterface[]) => {\n          this.setLoadingSettings(status);\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          if (!status && sessions && sessions.length > 0) {\n            let active_period: SessionPlanInterface | undefined;\n            active_period = sessions.find((item) => item.is_active);\n            if (active_period) {\n              this.setThisPeriod(active_period._id);\n            } else {\n              this.setThisPeriod(sessions[sessions.length - 1]._id);\n            }\n          }\n        }\n      );\n    } else if (\n      this.props.application_sessions.length > 0 &&\n      !this.state.thisPeriod.length\n    ) {\n      let active_period: SessionPlanInterface | undefined;\n      active_period = this.props.application_sessions.find(\n        (item) => item.is_active\n      );\n      if (active_period) {\n        this.setThisPeriod(active_period._id);\n        this.loadByPeriods(active_period);\n      } else {\n        this.setThisPeriod(\n          this.props.application_sessions[\n            this.props.application_sessions.length - 1\n          ]._id\n        );\n        this.loadByPeriods(\n          this.props.application_sessions[\n            this.props.application_sessions.length - 1\n          ]\n        );\n      }\n      this.setLoadingSettings(false);\n      this.setLoading(false);\n    }\n\n    if (\n      this.props.schoolLevels.school_levels === null ||\n      this.props.schoolLevels.school_levels.length <= 0\n    ) {\n      this.props.loadSchoolLevels(this.setLoadingSettings);\n    } else {\n      this.setLoadingSettings(false);\n    }\n\n    // if (this.state.thisPeriod.length > 0 && this.state.loadingDoneExam) {\n    //   this.props.loadDoneExam(\n    //     this.state.thisPeriod,\n    //     (status: boolean, msg: string) => {\n    //       if (!status) {\n    //         if (msg.length > 0) {\n    //           this.props.PushPopupAlert({\n    //             title: msg,\n    //             theme: PopupAlertTheme.danger,\n    //           });\n    //         }\n    //         this.setLoadingDoneExam(false);\n    //       }\n    //     }\n    //   );\n    // }\n    // if (this.state.thisPeriod.length > 0 && this.state.loadingExamPerformance) {\n    //   this.props.loadPerfomranceExam(\n    //     this.state.thisPeriod,\n    //     (status: boolean, msg: string) => {\n    //       if (!status) {\n    //         if (msg.length > 0) {\n    //           this.props.PushPopupAlert({\n    //             title: msg,\n    //             theme: PopupAlertTheme.danger,\n    //           });\n    //         }\n    //         this.setLoadingExamPerformance(false);\n    //       }\n    //     }\n    //   );\n    // }\n\n    if (\n      this.props.adminExamReport.CandidatesExamPerformance === null ||\n      (this.props.adminExamReport.CandidatesExamPerformance.length === 0 &&\n        this.state.loadingCandidatesExamPerformance)\n    ) {\n      this.props.loadCandidatesExamPerformance(\n        null,\n        (status: boolean, msg: string) => {\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            this.setLoadingCandidatesExamPerformance(false);\n          }\n        }\n      );\n    }\n  };\n\n  onPeriodChange = (period_id: string) => {\n    this.setLoadingDoneExam(true);\n    this.setLoadingExamPerformance(true);\n    this.setChangingPeriod(true);\n    this.props.loadDoneExam(period_id, (status: boolean, msg: string) => {\n      if (!status) {\n        let action: boolean = true;\n        if (msg.length > 0 && action) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n          action = false;\n        }\n        this.setLoadingDoneExam(false);\n      }\n    });\n\n    this.props.loadPerfomranceExam(\n      period_id,\n      (status: boolean, msg: string) => {\n        if (!status) {\n          let action: boolean = true;\n          if (msg.length > 0 && action) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n            action = false;\n          }\n          this.setLoadingExamPerformance(false);\n        }\n      }\n    );\n\n    if (!this.state.loadingDoneExam && !this.state.loadingExamPerformance) {\n      this.setChangingPeriod(false);\n    }\n  };\n\n  render() {\n    if (this.state.loading || this.props.application_sessions === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    if (this.props.application_sessions.length === 0) {\n      return <NoSession />;\n    }\n\n    return (\n      <div>\n        {/* HEADER TITLE */}\n        <ExamDashboardTitle\n          reportTitle={this.state.reportTitle}\n          setReportTitle={this.setReportTitle}\n          loading={this.state.changingPeriod}\n          education_categories={this.props.schoolLevels.education_categories}\n          loadingEducation={false}\n          thisEducation={this.state.thisEducation}\n          setThisEducation={this.setThisEducation}\n          thisPeriod={this.state.thisPeriod}\n          setThisPeriod={this.setThisPeriod}\n          application_sessions={this.props.application_sessions}\n          onPeriodChange={this.onPeriodChange}\n        />\n        {/* END HEADER TITLE */}\n\n        {/* ----------------------------------------------------------- */}\n\n        {/* EXAMS PREPARATION PROGRESS LABELS ======================================= */}\n        {this.props.examsList &&\n          loadCoursesByInstitute(\n            this.state.thisEducation,\n            this.props.courses,\n            this.props.schoolLevels.school_levels\n          ) && (\n            <section className=\"my-2\">\n              <div className=\"text-2xl font-semibold text-gray-600\">\n                Exams preparation status\n              </div>\n              <ExamDashboardLabels\n                dataLabels={[\n                  {\n                    title: \"Total exams\",\n                    icon: FaBookOpen,\n                    iconColor: \"blue\",\n                    count: loadExamPreparationProgress(\n                      FC_reportExamList(\n                        loadCoursesByInstitute(\n                          this.state.thisEducation,\n                          this.props.courses,\n                          this.props.schoolLevels.school_levels\n                        )!,\n                        this.props.examsList,\n                        this.state.thisPeriod\n                      )\n                    ).all.length,\n                  },\n                  {\n                    title: \"Prepared exams\",\n                    icon: FaBookOpen,\n                    iconColor: \"green\",\n                    count: loadExamPreparationProgress(\n                      FC_reportExamList(\n                        loadCoursesByInstitute(\n                          this.state.thisEducation,\n                          this.props.courses,\n                          this.props.schoolLevels.school_levels\n                        )!,\n                        this.props.examsList,\n                        this.state.thisPeriod\n                      )\n                    ).finished.length,\n                  },\n                  {\n                    title: \"Remaining exams\",\n                    icon: FaBookOpen,\n                    iconColor: \"gray\",\n                    count: loadExamPreparationProgress(\n                      FC_reportExamList(\n                        loadCoursesByInstitute(\n                          this.state.thisEducation,\n                          this.props.courses,\n                          this.props.schoolLevels.school_levels\n                        )!,\n                        this.props.examsList,\n                        this.state.thisPeriod\n                      )\n                    ).remaining.length,\n                  },\n                ]}\n                labelsOnRow={5}\n              >\n                <div className=\"flex justify-center\">\n                  <PieChart\n                    options={{\n                      labels: [\"Prepared\", \"Remaining\"],\n                      legend: {\n                        show: false,\n                        position: \"bottom\",\n                        horizontalAlign: \"center\",\n                        fontSize: \"16px\",\n                        itemMargin: {\n                          horizontal: 3,\n                          vertical: 0,\n                        },\n                      },\n                      plotOptions: {\n                        pie: {\n                          donut: {\n                            labels: {\n                              show: true,\n                              name: {\n                                show: true,\n                                fontSize: \"16px\",\n                                //   fontFamily: \"Rubik\",\n                                color: \"#2564eb\",\n                                offsetY: -10,\n                              },\n                              value: {\n                                show: true,\n                                fontSize: \"20px\",\n                                fontFamily: \"Helvetica, Arial, sans-serif\",\n                                color: \"#2564eb\",\n                                offsetY: 10,\n                                formatter: function (val) {\n                                  return val;\n                                },\n                              },\n                              total: {\n                                show: true,\n                                label: \"Total\",\n                                color: \"#2564eb\",\n                                formatter: function (w) {\n                                  return w.globals.seriesTotals.reduce(\n                                    (a: number, b: number) => {\n                                      return a + b;\n                                    },\n                                    0\n                                  );\n                                },\n                              },\n                            },\n                          },\n                        },\n                      },\n                      colors: [\"#469769\", \"#4b5563\"],\n                    }}\n                    series={[\n                      loadExamPreparationProgress(\n                        FC_reportExamList(\n                          loadCoursesByInstitute(\n                            this.state.thisEducation,\n                            this.props.courses,\n                            this.props.schoolLevels.school_levels\n                          )!,\n                          this.props.examsList,\n                          this.state.thisPeriod\n                        )\n                      ).finished.length,\n                      loadExamPreparationProgress(\n                        FC_reportExamList(\n                          loadCoursesByInstitute(\n                            this.state.thisEducation,\n                            this.props.courses,\n                            this.props.schoolLevels.school_levels\n                          )!,\n                          this.props.examsList,\n                          this.state.thisPeriod\n                        )\n                      ).remaining.length,\n                    ]}\n                    width={210}\n                  />\n                </div>\n              </ExamDashboardLabels>\n            </section>\n          )}\n        {/* EXAMS PREPARATION PROGRESS LABELS ======================================= */}\n\n        {/* ===================================================================================== */}\n\n        {/* EXAMS PROGRESS LABELS ======================================= */}\n        {loadExaminationProgress(\n          this.props.adminExamReport.DoneExam,\n          this.props.examsList,\n          this.state.thisEducation,\n          this.props.courses,\n          this.props.schoolLevels.school_levels,\n          this.state.thisPeriod\n        ) && (\n          <section className=\"my-2\">\n            <div className=\"text-2xl font-semibold text-gray-600\">\n              Examination progress status\n            </div>\n            <ExamDashboardLabels\n              dataLabels={[\n                {\n                  title: \"Total exams\",\n                  icon: FaBookOpen,\n                  iconColor: \"blue\",\n                  count: loadExaminationProgress(\n                    this.props.adminExamReport.DoneExam,\n                    this.props.examsList,\n                    this.state.thisEducation,\n                    this.props.courses,\n                    this.props.schoolLevels.school_levels,\n                    this.state.thisPeriod\n                  )!.all.length,\n                },\n                {\n                  title: \"Done exams\",\n                  icon: FaBookOpen,\n                  iconColor: \"green\",\n                  count: loadExaminationProgress(\n                    this.props.adminExamReport.DoneExam,\n                    this.props.examsList,\n                    this.state.thisEducation,\n                    this.props.courses,\n                    this.props.schoolLevels.school_levels,\n                    this.state.thisPeriod\n                  )!.finished.length,\n                },\n                {\n                  title: \"Remaining exams\",\n                  icon: FaBookOpen,\n                  iconColor: \"gray\",\n                  count: loadExaminationProgress(\n                    this.props.adminExamReport.DoneExam,\n                    this.props.examsList,\n                    this.state.thisEducation,\n                    this.props.courses,\n                    this.props.schoolLevels.school_levels,\n                    this.state.thisPeriod\n                  )!.remaining.length,\n                },\n              ]}\n              labelsOnRow={5}\n            >\n              <div className=\"flex justify-center\">\n                <PieChart\n                  options={{\n                    labels: [\"Done\", \"Remaining\"],\n                    legend: {\n                      show: false,\n                      position: \"bottom\",\n                      horizontalAlign: \"center\",\n                      fontSize: \"16px\",\n                      itemMargin: {\n                        horizontal: 3,\n                        vertical: 0,\n                      },\n                    },\n                    plotOptions: {\n                      pie: {\n                        donut: {\n                          labels: {\n                            show: true,\n                            name: {\n                              show: true,\n                              fontSize: \"16px\",\n                              //   fontFamily: \"Rubik\",\n                              color: \"#2564eb\",\n                              offsetY: -10,\n                            },\n                            value: {\n                              show: true,\n                              fontSize: \"20px\",\n                              fontFamily: \"Helvetica, Arial, sans-serif\",\n                              color: \"#2564eb\",\n                              offsetY: 10,\n                              formatter: function (val) {\n                                return val;\n                              },\n                            },\n                            total: {\n                              show: true,\n                              label: \"Total\",\n                              color: \"#2564eb\",\n                              formatter: function (w) {\n                                return w.globals.seriesTotals.reduce(\n                                  (a: number, b: number) => {\n                                    return a + b;\n                                  },\n                                  0\n                                );\n                              },\n                            },\n                          },\n                        },\n                      },\n                    },\n                    colors: [\"#469769\", \"#4b5563\"],\n                  }}\n                  series={[\n                    loadExaminationProgress(\n                      this.props.adminExamReport.DoneExam,\n                      this.props.examsList,\n                      this.state.thisEducation,\n                      this.props.courses,\n                      this.props.schoolLevels.school_levels,\n                      this.state.thisPeriod\n                    )!.finished.length,\n                    loadExaminationProgress(\n                      this.props.adminExamReport.DoneExam,\n                      this.props.examsList,\n                      this.state.thisEducation,\n                      this.props.courses,\n                      this.props.schoolLevels.school_levels,\n                      this.state.thisPeriod\n                    )!.remaining.length,\n                  ]}\n                  width={210}\n                />\n              </div>\n            </ExamDashboardLabels>\n          </section>\n        )}\n        {/* EXAMS PROGRESS LABELS ======================================= */}\n\n        {/* ===================================================================================== */}\n\n        {/* EXAMS PERFORMANCE LABELS ======================================= */}\n        {this.props.adminExamReport.CandidatesExamPerformance &&\n          loadCoursesByInstitute(\n            this.state.thisEducation,\n            this.props.courses,\n            this.props.schoolLevels.school_levels\n          ) && (\n            <section className=\"my-2\">\n              <div className=\"text-2xl font-semibold text-gray-600\">\n                Examination performance status\n              </div>\n              <ExamDashboardLabels\n                dataLabels={[\n                  {\n                    title: \"Total attendance\",\n                    icon: FaBookOpen,\n                    iconColor: \"blue\",\n                    count: loadExamAttendance(\n                      FC_reportCandidatePerformanceDataFilter(\n                        FC_reportCandidatePerformanceData(\n                          loadCoursesByInstitute(\n                            this.state.thisEducation,\n                            this.props.courses,\n                            this.props.schoolLevels.school_levels\n                          )!,\n                          this.props.adminExamReport.CandidatesExamPerformance,\n                          \"all\"\n                        ),\n                        \"all\"\n                      ),\n                      this.state.thisPeriod\n                    ).all.length,\n                  },\n                  {\n                    title: \"Pass applicant(s)\",\n                    icon: FaBookOpen,\n                    iconColor: \"green\",\n                    count: loadExamAttendance(\n                      FC_reportCandidatePerformanceDataFilter(\n                        FC_reportCandidatePerformanceData(\n                          loadCoursesByInstitute(\n                            this.state.thisEducation,\n                            this.props.courses,\n                            this.props.schoolLevels.school_levels\n                          )!,\n                          this.props.adminExamReport.CandidatesExamPerformance,\n                          \"all\"\n                        ),\n                        \"all\"\n                      ),\n                      this.state.thisPeriod\n                    ).pass.length,\n                  },\n                  {\n                    title: \"Failed applicant(s)\",\n                    icon: FaBookOpen,\n                    iconColor: \"yellow\",\n                    count: loadExamAttendance(\n                      FC_reportCandidatePerformanceDataFilter(\n                        FC_reportCandidatePerformanceData(\n                          loadCoursesByInstitute(\n                            this.state.thisEducation,\n                            this.props.courses,\n                            this.props.schoolLevels.school_levels\n                          )!,\n                          this.props.adminExamReport.CandidatesExamPerformance,\n                          \"all\"\n                        ),\n                        \"all\"\n                      ),\n                      this.state.thisPeriod\n                    ).failed.length,\n                  },\n                  // {\n                  //   title: \"Doing exam\",\n                  //   icon: FaBookOpen,\n                  //   iconColor: \"gray\",\n                  //   count: loadExamAttendance(\n                  //     FC_reportCandidatePerformanceDataFilter(\n                  //       FC_reportCandidatePerformanceData(\n                  //         loadCoursesByInstitute(\n                  //           thisEducation,\n                  //           props.courses,\n                  //           props.schoolLevels.school_levels\n                  //         )!,\n                  //         props.adminExamReport.CandidatesExamPerformance,\n                  //         \"all\"\n                  //       ),\n                  //       \"all\"\n                  //     ),\n                  //     thisPeriod\n                  //   ).active.length,\n                  // },\n                ]}\n                labelsOnRow={5}\n              >\n                <div className=\"flex justify-center\">\n                  <PieChart\n                    options={{\n                      labels: [\"Pass\", \"Failed\"],\n                      // labels: [\"Pass\", \"Failed\", \"Doing Exam\"],\n                      legend: {\n                        show: false,\n                        position: \"bottom\",\n                        horizontalAlign: \"center\",\n                        fontSize: \"16px\",\n                        itemMargin: {\n                          horizontal: 3,\n                          vertical: 0,\n                        },\n                      },\n                      plotOptions: {\n                        pie: {\n                          donut: {\n                            labels: {\n                              show: true,\n                              name: {\n                                show: true,\n                                fontSize: \"16px\",\n                                //   fontFamily: \"Rubik\",\n                                color: \"#2564eb\",\n                                offsetY: -10,\n                              },\n                              value: {\n                                show: true,\n                                fontSize: \"20px\",\n                                fontFamily: \"Helvetica, Arial, sans-serif\",\n                                color: \"#2564eb\",\n                                offsetY: 10,\n                                formatter: function (val) {\n                                  return val;\n                                },\n                              },\n                              total: {\n                                show: true,\n                                label: \"Total\",\n                                color: \"#2564eb\",\n                                formatter: function (w) {\n                                  return w.globals.seriesTotals.reduce(\n                                    (a: number, b: number) => {\n                                      return a + b;\n                                    },\n                                    0\n                                  );\n                                },\n                              },\n                            },\n                          },\n                        },\n                      },\n                      colors: [\"#469769\", \"#d97724\"],\n                      // colors: [\"#469769\", \"#d97724\", \"#4b5563\"],\n                    }}\n                    series={[\n                      loadExamAttendance(\n                        FC_reportCandidatePerformanceDataFilter(\n                          FC_reportCandidatePerformanceData(\n                            loadCoursesByInstitute(\n                              this.state.thisEducation,\n                              this.props.courses,\n                              this.props.schoolLevels.school_levels\n                            )!,\n                            this.props.adminExamReport\n                              .CandidatesExamPerformance,\n                            \"all\"\n                          ),\n                          \"all\"\n                        ),\n                        this.state.thisPeriod\n                      ).pass.length,\n                      loadExamAttendance(\n                        FC_reportCandidatePerformanceDataFilter(\n                          FC_reportCandidatePerformanceData(\n                            loadCoursesByInstitute(\n                              this.state.thisEducation,\n                              this.props.courses,\n                              this.props.schoolLevels.school_levels\n                            )!,\n                            this.props.adminExamReport\n                              .CandidatesExamPerformance,\n                            \"all\"\n                          ),\n                          \"all\"\n                        ),\n                        this.state.thisPeriod\n                      ).failed.length,\n                      // loadExamAttendance(\n                      //   FC_reportCandidatePerformanceDataFilter(\n                      //     FC_reportCandidatePerformanceData(\n                      //       loadCoursesByInstitute(\n                      //         thisEducation,\n                      //         props.courses,\n                      //         props.schoolLevels.school_levels\n                      //       )!,\n                      //       props.adminExamReport.CandidatesExamPerformance,\n                      //       \"all\"\n                      //     ),\n                      //     \"all\"\n                      //   ),\n                      //   thisPeriod\n                      // ).active.length,\n                    ]}\n                    width={210}\n                  />\n                </div>\n              </ExamDashboardLabels>\n            </section>\n          )}\n        {/* EXAMS PERFORMANCE LABELS ======================================= */}\n\n        {/* ------------------------------------------------------------------------------- */}\n\n        {/* ===================================================================================== */}\n\n        {/* EXAMS PREPARATION PROGRESS CHART ======================================= */}\n        {this.props.examsList &&\n          loadCoursesByInstitute(\n            this.state.thisEducation,\n            this.props.courses,\n            this.props.schoolLevels.school_levels\n          ) && (\n            <ExamPreparationChart\n              examPreparationProgress={loadExamPreparationProgress(\n                FC_reportExamList(\n                  loadCoursesByInstitute(\n                    this.state.thisEducation,\n                    this.props.courses,\n                    this.props.schoolLevels.school_levels\n                  )!,\n                  this.props.examsList,\n                  this.state.thisPeriod\n                )\n              )}\n            />\n          )}\n        {/* EXAMS PREPARATION PROGRESS CHART ======================================= */}\n\n        {/* ===================================================================================== */}\n\n        {/* EXAMINATION PROGRESS CHART ======================================= */}\n        {loadExaminationProgress(\n          this.props.adminExamReport.DoneExam,\n          this.props.examsList,\n          this.state.thisEducation,\n          this.props.courses,\n          this.props.schoolLevels.school_levels,\n          this.state.thisPeriod\n        ) && (\n          <ExamProgressChart\n            progressData={\n              loadExaminationProgress(\n                this.props.adminExamReport.DoneExam,\n                this.props.examsList,\n                this.state.thisEducation,\n                this.props.courses,\n                this.props.schoolLevels.school_levels,\n                this.state.thisPeriod\n              )!\n            }\n          />\n        )}\n        {/* EXAMINATION PROGRESS CHART ======================================= */}\n\n        {/* ===================================================================================== */}\n\n        {/* EXAM PERFORMANCE ON COUNTRY CHART ======================================= */}\n        {this.props.adminExamReport.CandidatesExamPerformance &&\n          loadCoursesByInstitute(\n            this.state.thisEducation,\n            this.props.courses,\n            this.props.schoolLevels.school_levels\n          ) && (\n            <ExamPerformanceChart\n              examPerformance={loadExamAttendance(\n                FC_reportCandidatePerformanceDataFilter(\n                  FC_reportCandidatePerformanceData(\n                    loadCoursesByInstitute(\n                      this.state.thisEducation,\n                      this.props.courses,\n                      this.props.schoolLevels.school_levels\n                    )!,\n                    this.props.adminExamReport.CandidatesExamPerformance,\n                    \"all\"\n                  ),\n                  \"all\"\n                ),\n                this.state.thisPeriod\n              )}\n            />\n          )}\n        {/* END EXAM PERFORMANCE ON COUNTRY CHART ======================================= */}\n\n        {/* ------------------------------------------------------------------------------- */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  sessionPlan,\n  schoolLevels,\n  course,\n  prepareExam,\n  adminExamReport,\n}: StoreState): {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  courses: course[] | null;\n  examsList: ExamItemResponse[] | null;\n  adminExamReport: ExamReportReducerType;\n} => {\n  return {\n    auth,\n    application_sessions: sessionPlan.allSessionPlans,\n    schoolLevels,\n    courses: course.courses,\n    examsList: prepareExam.examsList,\n    adminExamReport,\n  };\n};\n\nexport const ExamDashboard = connect(mapStateToProps, {\n  loadCourses,\n  loadExamsList,\n  loadEducationCategories,\n  loadDoneExam,\n  loadSchoolLevels,\n  loadPerfomranceExam,\n  loadCandidatesExamPerformance,\n  GetAllSessionPlans,\n  PushPopupAlert,\n})(_ExamDashboard);\n","import { PContractItem } from \"./candidate_placement_contract\";\n\nexport type ViewContractType = {\n  province: PContractItem;\n  district: PContractItem;\n  sector: PContractItem;\n  school: PContractItem;\n};\nexport interface WaitingListInterface {\n  _id: string;\n  status: WaitingListStatus;\n  user_id: string;\n  marks: number;\n  in_education: boolean;\n  session_id: string;\n  position_id: string;\n  gender: string;\n  createdAt: string;\n  updatedAt: string;\n  __v: number;\n  n_id: string;\n  phone_number: string;\n  email: string;\n  contract: ViewContractType;\n  user_info: {\n    document_type: string;\n    issue_number: string;\n    date_of_issue: string;\n    date_of_expiry: string;\n    place_of_issue: string;\n    application_number: string;\n    fname: string;\n    lname: string;\n    father_names: string;\n    mother_names: string;\n    sex: string;\n    date_of_birth: string;\n    place_of_birth: string;\n    country_of_birth: string;\n    village_id: string;\n    village: string;\n    cell: string;\n    sector: string;\n    district: string;\n    province: string;\n    civil_status: string;\n    spouse: null;\n    status: string;\n    photo: string;\n  };\n}\n\nexport enum WaitingListStatus {\n  WAITING = \"waiting\",\n  PENDING = \"pending\",\n  PLACED = \"placed\",\n}\n\nexport enum applicantGender {\n  male = \"Male\",\n  female = \"Female\",\n  null = \"-\",\n}\n\nexport interface WaitingListToPrintInterface {\n  id: string;\n  names: string;\n  gender: string;\n  national_id: string;\n  phone: string;\n  email: string;\n  user_position_marks: number;\n  position_title: string;\n  education_category: string;\n  waitingList_session: string;\n  date: string;\n  waiting_status: string;\n}\nexport interface WaitingListDataInterface {\n  waitingList_id: string;\n  names: string;\n  gender: applicantGender;\n  national_id: string;\n  phone: string;\n  email: string;\n  user_position_marks: number;\n  position_id: string;\n  position_title: string;\n  education_category_id: string;\n  education_category: string;\n  waitingList_session: string;\n  waitingList_session_id: string;\n  date: string;\n  waiting_status: string;\n  status: WaitingListStatus;\n}\n\nexport enum waitingListReportContentKeyInterface {\n  names = \"names\",\n  gender = \"gender\",\n  national_id = \"national_id\",\n  email = \"email\",\n  phone = \"phone\",\n  user_position_marks = \"user_position_marks\",\n  position_title = \"position_title\",\n  education_category = \"education_category\",\n  date = \"date\",\n  waiting_status = \"waiting_status\",\n  waitingList_session = \"waitingList_session\",\n}\n\nexport interface waitingListReportContentInterface {\n  key: waitingListReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n","import React from \"react\";\nimport { FaAngleDoubleRight } from \"react-icons/fa\";\nimport { ContractItemList } from \"../../containers/PlacementContract/Contract/Contract\";\n\ninterface AppProps {\n  data: ContractItemList[];\n  strict: boolean;\n  //   expandClick?: () => void;\n  //   loading: boolean;\n}\n\nconst DistrictView: React.FC<AppProps> = (props) => {\n  const displayMessage = (): JSX.Element => {\n    let result: JSX.Element = <></>;\n    let districts: string = \"\";\n    if (props.data.length === 0)\n      result = (\n        <p>\n          The system will place me in the available posts from all districts of\n          the selected provinces.\n        </p>\n      );\n    else if (props.strict === false && props.data.length > 0) {\n      props.data.forEach((district, index) => {\n        districts += district.title;\n        if (index <= props.data.length - 1) districts += \", \";\n      });\n\n      result = (\n        <p>\n          The system will place you in the available posts{\" \"}\n          <span className=\"font-semibold\">starting</span> from{\" \"}\n          <span className=\"font-semibold\">{districts}</span> and all remaining\n          districts.\n        </p>\n      );\n    } else if (props.strict === true && props.data.length > 0) {\n      props.data.forEach((district, index) => {\n        districts += district.title;\n        if (index <= props.data.length - 2) districts += \", \";\n        if (index === props.data.length - 2 && index > 0) districts += \" and \";\n      });\n\n      result = (\n        <p>\n          The system will <span className=\"font-semibold\">only</span> place me\n          in available posts in{\" \"}\n          <span className=\"font-semibold\">{districts}</span>.\n        </p>\n      );\n    }\n    return result;\n  };\n\n  return (\n    <div className=\"bg-white mt-9 px-4\">\n      <div className=\"flex flex-row items-center gap-1\">\n        <FaAngleDoubleRight />\n        <span className={`font-extrabold text-lg`}>\n          Preferences at district level\n        </span>\n      </div>\n\n      <p>{displayMessage()}</p>\n    </div>\n  );\n};\n\nexport default DistrictView;\n","import React from \"react\";\nimport { FaAngleDoubleRight } from \"react-icons/fa\";\nimport { ContractItemList } from \"../../containers/PlacementContract/Contract/Contract\";\n\ninterface AppProps {\n  data: ContractItemList[];\n  strict: boolean;\n  //   expandClick?: () => void;\n  //   loading: boolean;\n}\n\nconst ProvinceView: React.FC<AppProps> = (props) => {\n  const displayMessage = (): JSX.Element => {\n    let result: JSX.Element = <></>;\n    let provinces: string = \"\";\n    if (props.data.length === 0)\n      result = (\n        <p>\n          The system will place me in the available posts from all provinces.\n        </p>\n      );\n    else if (props.strict === false && props.data.length > 0) {\n      props.data.forEach((province, index) => {\n        provinces += province.title;\n        if (index <= props.data.length - 1) provinces += \", \";\n      });\n\n      result = (\n        <p>\n          The system will place me in the available posts{\" \"}\n          <span className=\"font-semibold\">starting</span> from{\" \"}\n          <span className=\"font-semibold\">{provinces}</span> and all remaining\n          provinces.\n        </p>\n      );\n    } else if (props.strict === true && props.data.length > 0) {\n      props.data.forEach((province, index) => {\n        provinces += province.title;\n        if (index <= props.data.length - 2) provinces += \", \";\n        if (index === props.data.length - 2 && index > 0) provinces += \" and \";\n      });\n\n      result = (\n        <p>\n          The system will <span className=\"font-semibold\">only</span> place me\n          in available posts in{\" \"}\n          <span className=\"font-semibold\">{provinces}</span>.\n        </p>\n      );\n    }\n    return result;\n  };\n\n  return (\n    <div className=\"bg-white mt-9 px-4\">\n      <div className=\"flex flex-row items-center gap-1\">\n        <FaAngleDoubleRight />\n        <span className={`font-extrabold text-lg`}>\n          Preferences at province level\n        </span>\n      </div>\n\n      <p>{displayMessage()}</p>\n    </div>\n  );\n};\n\nexport default ProvinceView;\n","import React from \"react\";\nimport { FaAngleDoubleRight } from \"react-icons/fa\";\nimport { ContractItemList } from \"../../containers/PlacementContract/Contract/Contract\";\n\ninterface AppProps {\n  data: ContractItemList[];\n  strict: boolean;\n  //   expandClick?: () => void;\n  //   loading: boolean;\n}\n\nconst SchoolView: React.FC<AppProps> = (props) => {\n  const displayMessage = (): JSX.Element => {\n    let result: JSX.Element = <></>;\n    let schools: string = \"\";\n    if (props.data.length === 0)\n      result = (\n        <p>\n          The system will place me in the available posts from all Schools of\n          the selected provinces, districts, and sectors.\n        </p>\n      );\n    else if (props.strict === false && props.data.length > 0) {\n      props.data.forEach((school, index) => {\n        schools += school.title;\n        if (index <= props.data.length - 1) schools += \", \";\n      });\n\n      result = (\n        <p>\n          The system will place me in the available posts{\" \"}\n          <span className=\"font-semibold\">starting</span> from{\" \"}\n          <span className=\"font-semibold\">{schools}</span> and in all remaining\n          schools from the selected schools, districts, and sectors.\n        </p>\n      );\n    } else if (props.strict === true && props.data.length > 0) {\n      props.data.forEach((school, index) => {\n        schools += school.title;\n        if (index <= props.data.length - 2) schools += \", \";\n        if (index === props.data.length - 2 && index > 0) schools += \" and \";\n      });\n\n      result = (\n        <p>\n          The system will <span className=\"font-semibold\">only</span> place me\n          in available posts in <span className=\"font-semibold\">{schools}</span>\n          .\n        </p>\n      );\n    }\n    return result;\n  };\n\n  return (\n    <div className=\"bg-white mt-9 px-4\">\n      <div className=\"flex flex-row items-center gap-1\">\n        <FaAngleDoubleRight />\n        <span className={`font-extrabold text-lg`}>\n          Preferences at school level\n        </span>\n      </div>\n\n      <p>{displayMessage()}</p>\n    </div>\n  );\n};\n\nexport default SchoolView;\n","import React from \"react\";\nimport { FaAngleDoubleRight } from \"react-icons/fa\";\nimport { ContractItemList } from \"../../containers/PlacementContract/Contract/Contract\";\n\ninterface AppProps {\n  data: ContractItemList[];\n  strict: boolean;\n  //   expandClick?: () => void;\n  //   loading: boolean;\n}\n\nconst SectorView: React.FC<AppProps> = (props) => {\n  const displayMessage = (): JSX.Element => {\n    let result: JSX.Element = <></>;\n    let sectors: string = \"\";\n    if (props.data.length === 0)\n      result = (\n        <p>The system will place me in the available posts from all sectors.</p>\n      );\n    else if (props.strict === false && props.data.length > 0) {\n      props.data.forEach((sector, index) => {\n        sectors += sector.title;\n        if (index <= props.data.length - 1) sectors += \", \";\n      });\n\n      result = (\n        <p>\n          The system will place me in the available posts{\" \"}\n          <span className=\"font-semibold\">starting</span> from{\" \"}\n          <span className=\"font-semibold\">{sectors}</span> and all remaining\n          sectors of the selected provinces and districts.\n        </p>\n      );\n    } else if (props.strict === true && props.data.length > 0) {\n      props.data.forEach((sector, index) => {\n        sectors += sector.title;\n        if (index <= props.data.length - 2) sectors += \", \";\n        if (index === props.data.length - 2 && index > 0) sectors += \" and \";\n      });\n\n      result = (\n        <p>\n          The system will <span className=\"font-semibold\">only</span> place me\n          in available posts in <span className=\"font-semibold\">{sectors}</span>\n          .\n        </p>\n      );\n    }\n    return result;\n  };\n\n  return (\n    <div className=\"bg-white mt-9 px-4\">\n      <div className=\"flex flex-row items-center gap-1\">\n        <FaAngleDoubleRight />\n        <span className={`font-extrabold text-lg`}>\n          Preferences at sector level\n        </span>\n      </div>\n\n      <p>{displayMessage()}</p>\n    </div>\n  );\n};\n\nexport default SectorView;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  FC_getLocations,\n  FC_LoadSchoolsByDistrict,\n  FC_LoadSchoolsByIDs,\n  FT_LoadSchoolsByDistrict,\n  FT_LoadSchoolsByIDs,\n  LocationAPI,\n  SchoolContract,\n} from \"../../actions\";\nimport {\n  FC_GetWaitingLocationList,\n  FT_GetWaitingLocationList,\n} from \"../../actions/location\";\nimport { ContractItemList } from \"../../containers/PlacementContract/Contract/Contract\";\nimport { ViewContractType } from \"../../interfaces/waitingList\";\nimport { StoreState } from \"../../reducers\";\nimport Loading from \"../Loading/Loading\";\nimport DistrictView from \"./DistrictView\";\nimport ProvinceView from \"./ProvinceView\";\nimport SchoolView from \"./SchoolView\";\nimport SectorView from \"./SectorView\";\n\ninterface ContractViewerProps {\n  // FROM PROPS\n  candidates: string;\n  position: string;\n  contract: ViewContractType;\n\n  // FROM REDUX =========\n  locations: LocationAPI | null;\n  FC_LoadSchoolsByDistrict: FT_LoadSchoolsByDistrict;\n  FC_LoadSchoolsByIDs: FT_LoadSchoolsByIDs;\n  FC_GetWaitingLocationList: FT_GetWaitingLocationList;\n}\n\ninterface ContractViewerState {\n  loading: boolean;\n  selectedSchool: SchoolContract[] | null;\n}\n\nclass ContractViewer extends Component<\n  ContractViewerProps,\n  ContractViewerState\n> {\n  constructor(props: ContractViewerProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      selectedSchool: null,\n    };\n  }\n\n  componentDidMount = () => {\n    if (this.props.locations === null)\n      FC_getLocations(\n        (status: boolean, data: LocationAPI | null, msg: string) => {\n          if (status === true && data !== null) {\n            this.props.FC_GetWaitingLocationList(data);\n            this.setState({\n              loading: false,\n            });\n          } else {\n            this.setState({\n              loading: false,\n            });\n          }\n        }\n      );\n    // else this.setState({ loading: false });\n    if (\n      this.state.selectedSchool === null &&\n      this.props.contract.school.values.length >= 1\n    ) {\n      this.setState({\n        loading: true,\n      });\n      this.props.FC_LoadSchoolsByIDs(\n        this.props.contract.school.values.map((itm) => itm.toString()),\n        (status, schools, err) => {\n          if (status === true) {\n            this.setState({\n              selectedSchool: schools,\n              loading: false,\n            });\n          }\n        }\n      );\n    } else this.setState({ loading: false, selectedSchool: [] });\n  };\n\n  render() {\n    if (\n      this.state.loading === true ||\n      this.props.locations === null ||\n      this.state.selectedSchool === null\n    ) {\n      return (\n        <div className=\"bg-white mt-6 mx-6 p-6 h-full flex flex-col items-start justify-center rounded\">\n          <div className=\"text-xl mx-4 my-4 animate-pulse\">\n            Loading contract, Please wait...\n          </div>\n          <Loading />\n        </div>\n      );\n    }\n\n    let ProvincesList: ContractItemList[] = [];\n    let DistrictList: ContractItemList[] = [];\n    let SectorList: ContractItemList[] = [];\n\n    if (this.props.contract !== null) {\n      // * Province\n      this.props.contract.province.values.forEach((el) => {\n        if (this.props.locations !== null) {\n          let findIt = this.props.locations.provinces.find(\n            (element) => element.province_code === el.toString()\n          );\n          if (findIt !== undefined) {\n            ProvincesList.push({\n              id: findIt.province_code,\n              title: findIt.province_name,\n            } as ContractItemList);\n          }\n        }\n      });\n\n      // * Province\n      this.props.contract.district.values.forEach((el) => {\n        if (this.props.locations !== null) {\n          let findIt = this.props.locations.districts.find(\n            (element) => element.district_code === el.toString()\n          );\n          if (findIt !== undefined) {\n            DistrictList.push({\n              id: findIt.district_code,\n              title: findIt.district_name,\n            } as ContractItemList);\n          }\n        }\n      });\n\n      // * Sector\n      this.props.contract.sector.values.forEach((el) => {\n        if (this.props.locations !== null) {\n          let findIt = this.props.locations.sectors.find(\n            (element) => element.sector_code === el.toString()\n          );\n          if (findIt !== undefined) {\n            SectorList.push({\n              id: findIt.sector_code,\n              title: findIt.sector_name,\n            } as ContractItemList);\n          }\n        }\n      });\n    }\n\n    const thisCandidate: JSX.Element = (\n      <span className=\"font-semibold\">{this.props.candidates}</span>\n    );\n    const thisPosition: JSX.Element = (\n      <span className=\"font-semibold\">{this.props.position}</span>\n    );\n\n    return (\n      <div className=\"pb-4\">\n        <div className=\"px-4\">\n          <h2 className=\"text-black text-center font-semibold text-2xl sm:text-3xl underline\">\n            Placement Preferences\n          </h2>\n\n          <div className=\"mt-6 text-lg flex flex-col\">\n            <p>Names: {thisCandidate}</p>\n            <p>Position: {thisPosition}</p>\n          </div>\n\n          {/* <p className=\"mt-5\">\n            This preferences were made by {thisCandidate} on {thisPosition}, by\n            Tempor in laborum culpa et consectetur elit occaecat cupidatat est\n            voluptate tempor deserunt non ea.\n          </p> */}\n        </div>\n\n        <ProvinceView\n          data={ProvincesList}\n          strict={this.props.contract.province.strict}\n        />\n\n        <DistrictView\n          data={DistrictList}\n          strict={this.props.contract.district.strict}\n        />\n\n        <SectorView\n          data={SectorList}\n          strict={this.props.contract.sector.strict}\n        />\n\n        <SchoolView\n          data={this.state.selectedSchool.map((itm) => ({\n            id: itm.school_code,\n            title: itm.school_name,\n          }))}\n          strict={this.props.contract.school.strict}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  locations,\n}: StoreState): {\n  locations: LocationAPI | null;\n} => {\n  return { locations: locations.waitingLocation };\n};\nexport default React.memo(\n  connect(mapStateToProps, {\n    FC_LoadSchoolsByDistrict,\n    FC_LoadSchoolsByIDs,\n    FC_GetWaitingLocationList,\n  })(ContractViewer)\n);\n","import React, { Component, Fragment } from \"react\";\nimport { BiExport, BiFilterAlt, BiSort } from \"react-icons/bi\";\nimport { FiEdit } from \"react-icons/fi\";\nimport { ImFilesEmpty } from \"react-icons/im\";\nimport { IoIosBriefcase } from \"react-icons/io\";\nimport { IoFilter } from \"react-icons/io5\";\nimport {\n  MdCheckBox,\n  MdCheckBoxOutlineBlank,\n  MdHistory,\n  MdRadioButtonChecked,\n  MdRadioButtonUnchecked,\n  MdSearch,\n} from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  schoolLevelsStoreInterface,\n  loadEducationCategories,\n  PushPopupAlert,\n} from \"../../../actions\";\nimport { FC_GetAllSessionByInstitution } from \"../../../actions/session\";\nimport { FC_GetPositionsByInstitution } from \"../../../actions/settings\";\nimport { getWaitingList } from \"../../../actions/waitingList\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport ContractViewer from \"../../../components/ContractViewer/ContractViewer\";\nimport {\n  generatePDF,\n  reportSettingsInterface,\n} from \"../../../components/DownloadPDF/rest\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport LoadingV2, { LoadingType } from \"../../../components/Loading/LoadingV2\";\nimport TableLoading from \"../../../components/Loading/TableLoading\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport {\n  SideNavigation,\n  MainItem,\n} from \"../../../components/Navigation/SideNavigation\";\nimport {\n  SessionPlanInterface,\n  PositionAPI,\n  education_category,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport {\n  applicantGender,\n  WaitingListDataInterface,\n  WaitingListInterface,\n  waitingListReportContentInterface,\n  waitingListReportContentKeyInterface,\n  WaitingListStatus,\n  WaitingListToPrintInterface,\n} from \"../../../interfaces/waitingList\";\nimport { StoreState } from \"../../../reducers\";\nimport {\n  capitalizeFirstLetter,\n  capitalizeFirstWord,\n  getPositionById,\n} from \"../../../shared/dataTest\";\nimport ExportToExcel from \"../../../utils/ExportToExcel\";\nimport {\n  DATE,\n  FC_HasInstitute,\n  search,\n  sortThisArray,\n} from \"../../../utils/functions\";\nimport ChooseSession from \"../../SessionSettings/ChooseSession\";\nimport NoSession from \"../../SessionSettings/NoSession\";\n\nexport const getPeriodById = (\n  allSession: SessionPlanInterface[],\n  period_id: string\n): SessionPlanInterface | undefined => {\n  return allSession.find((item) => item._id === period_id);\n};\n\nconst searchData = (\n  objList: WaitingListDataInterface[],\n  text: string\n): WaitingListDataInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (\n        prop === \"names\" ||\n        prop === \"gender\" ||\n        prop === \"national_id\" ||\n        prop === \"phone\" ||\n        prop === \"email\" ||\n        prop === \"user_position_marks\" ||\n        prop === \"position_title\" ||\n        prop === \"education_category\" ||\n        prop === \"waitingList_session\" ||\n        prop === \"date\" ||\n        prop === \"waiting_status\"\n      ) {\n        if (product[prop]) {\n          flag =\n            product[prop]!.toString()\n              .toLowerCase()\n              .indexOf(text.toLowerCase()) > -1;\n        }\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n};\n\nconst defaultReportContent: waitingListReportContentInterface[] = [\n  {\n    key: waitingListReportContentKeyInterface.names,\n    title: \"Applicant Names\",\n    status: true,\n  },\n  {\n    key: waitingListReportContentKeyInterface.national_id,\n    title: \"National ID\",\n    status: true,\n  },\n  {\n    key: waitingListReportContentKeyInterface.gender,\n    title: \"Gender\",\n    status: true,\n  },\n  {\n    key: waitingListReportContentKeyInterface.phone,\n    title: \"Phone\",\n    status: true,\n  },\n  {\n    key: waitingListReportContentKeyInterface.user_position_marks,\n    title: \"Applicant marks\",\n    status: true,\n  },\n  {\n    key: waitingListReportContentKeyInterface.waitingList_session,\n    title: \"Waiting list Session\",\n    status: true,\n  },\n  {\n    key: waitingListReportContentKeyInterface.education_category,\n    title: \"Education Institute\",\n    status: true,\n  },\n  {\n    key: waitingListReportContentKeyInterface.date,\n    title: \"Waiting list Date\",\n    status: true,\n  },\n  {\n    key: waitingListReportContentKeyInterface.waiting_status,\n    title: \"Waiting list Status\",\n    status: true,\n  },\n  {\n    key: waitingListReportContentKeyInterface.position_title,\n    title: \"Position\",\n    status: true,\n  },\n];\n\ntype AppProps = {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  systemPositions: PositionAPI[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  waitingList: WaitingListInterface[] | null;\n  getWaitingList: Function;\n  FC_GetPositionsByInstitution: Function;\n  FC_GetAllSessionByInstitution: Function;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype AppState = {\n  thisPeriod: SessionPlanInterface | \"all\";\n  loading: boolean;\n  loadingWaitingList: boolean;\n  waitingListToPrint: WaitingListToPrintInterface[] | null;\n  thisWaitingListStatus: WaitingListStatus | \"all\";\n  thisPosition: PositionAPI | null;\n  selectPosition: boolean;\n  sortProperty: string;\n  isSorted: boolean;\n  sortOrder: \"ASC\" | \"DESC\";\n  searchInput: string;\n  searchPositionInput: string;\n  downloading: boolean;\n  generateReportModal: {\n    reportType: \"EXCEL\" | \"PDF\";\n    status: boolean;\n  } | null;\n  reportTitle: string;\n  reportContent: waitingListReportContentInterface[];\n  selectAll: boolean;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  selectPeriod: boolean;\n  selectedWaiting: WaitingListDataInterface | null;\n  thisEducation: education_category | \"all\";\n};\n\nclass _WaitingListReport extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      thisPeriod: \"all\",\n      loading: true,\n      loadingWaitingList: true,\n      waitingListToPrint: null,\n      thisWaitingListStatus: \"all\",\n      thisPosition: null,\n      selectPosition: false,\n      sortProperty: \"\",\n      isSorted: false,\n      sortOrder: \"ASC\",\n      searchInput: \"\",\n      searchPositionInput: \"\",\n      downloading: false,\n      generateReportModal: null,\n      reportTitle: \"\",\n      reportContent: defaultReportContent,\n      selectAll: true,\n      formError: null,\n      selectPeriod: false,\n      thisEducation: \"all\",\n      selectedWaiting: null,\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingWaitingList = (value: boolean) => {\n    this.setState({ loadingWaitingList: value });\n  };\n\n  setThisPeriod = (value: SessionPlanInterface | \"all\") => {\n    this.setState({ thisPeriod: value });\n  };\n\n  setWaitingListToPrint = (value: WaitingListToPrintInterface[] | null) => {\n    this.setState({ waitingListToPrint: value });\n  };\n\n  setThisWaitingListStatus = (value: WaitingListStatus | \"all\") => {\n    this.setState({ thisWaitingListStatus: value });\n  };\n\n  setThisPosition = (value: PositionAPI | null) => {\n    this.setState({ thisPosition: value });\n  };\n\n  setSelectPosition = (value: boolean) => {\n    this.setState({ selectPosition: value });\n  };\n\n  setSortProperty = (value: string | \"all\") => {\n    this.setState({ sortProperty: value });\n  };\n\n  setIsSorted = (value: boolean) => {\n    this.setState({ isSorted: value });\n  };\n\n  setSortOrder = (value: \"ASC\" | \"DESC\") => {\n    this.setState({ sortOrder: value });\n  };\n\n  setSearchInput = (value: string) => {\n    this.setState({ searchInput: value });\n  };\n\n  setSearchPositionInput = (value: string) => {\n    this.setState({ searchPositionInput: value });\n  };\n\n  setDownloading = (value: boolean) => {\n    this.setState({ downloading: value });\n  };\n\n  setGenerateReportModal = (\n    value: {\n      reportType: \"EXCEL\" | \"PDF\";\n      status: boolean;\n    } | null\n  ) => {\n    this.setState({ generateReportModal: value });\n  };\n\n  setReportTitle = (value: string) => {\n    this.setState({ reportTitle: value });\n  };\n\n  setReportContent = (value: waitingListReportContentInterface[]) => {\n    this.setState({ reportContent: value });\n  };\n\n  setSelectAll = (value: boolean) => {\n    this.setState({ selectAll: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n\n  setSelectPeriod = (value: boolean) => {\n    this.setState({ selectPeriod: value });\n  };\n\n  setThisEducation = (value: education_category | \"all\") => {\n    this.setState({ thisEducation: value });\n  };\n\n  FC_OnInstitutionChanged = (institution_id: string) => {\n    // LOADING APPLICATION SESSION ====================================\n    this.props.FC_GetAllSessionByInstitution(\n      institution_id,\n      (status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (!status) {\n          if (msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      }\n    );\n    // END LOADING APPLICATION SESSION ====================================\n    // ###################################################################\n    // LOADING POSITIONS ====================================\n    this.props.FC_GetPositionsByInstitution(\n      institution_id,\n      (status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      }\n    );\n\n    // LOADING WAITING LIST ========================================\n    this.props.getWaitingList((status: boolean, msg: string) => {\n      this.setLoadingWaitingList(status);\n      if (status === false) {\n        if (msg.length > 0) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      }\n    });\n    // END LOADING CLAIM TYPES ========================================\n  };\n\n  componentDidMount = () => {\n    // LOADING EDUCATION CATEGORY =================================\n    if (FC_HasInstitute(this.props.auth.education_institution_id) === true) {\n      this.FC_OnInstitutionChanged(this.props.auth.education_institution_id!);\n    } else {\n      if (\n        this.props.schoolLevels.education_categories === null ||\n        this.props.schoolLevels.education_categories.length\n      ) {\n        this.props.loadEducationCategories(\n          (status: boolean, data?: education_category[]) => {\n            this.setLoading(status);\n            if (!status && data && data.length > 0) {\n              this.setThisEducation(data[0]);\n              if (\n                FC_HasInstitute(this.props.auth.education_institution_id) ===\n                false\n              ) {\n                this.FC_OnInstitutionChanged(data[0].education_institute_id);\n              } else {\n                this.FC_OnInstitutionChanged(\n                  this.props.auth.education_institution_id!\n                );\n              }\n            }\n          }\n        );\n      } else if (!this.props.schoolLevels.selectedEducationCategory) {\n        this.setThisEducation(this.props.schoolLevels.education_categories[0]);\n        this.FC_OnInstitutionChanged(\n          this.props.schoolLevels.education_categories[0].education_institute_id\n        );\n      }\n    }\n    // END LOADING EDUCATION CATEGORY =================================\n  };\n\n  setSort = (thisProperty: string) => {\n    if (\n      this.state.sortProperty === thisProperty &&\n      this.state.sortOrder === \"ASC\"\n    ) {\n      this.setSortOrder(\"DESC\");\n    } else {\n      this.setSortOrder(\"ASC\");\n    }\n    this.setSortProperty(thisProperty);\n    this.setIsSorted(true);\n  };\n\n  showStatus = (status: WaitingListStatus | \"all\"): string => {\n    let result: string = \"\";\n    switch (status) {\n      case WaitingListStatus.WAITING:\n        result = \"Waiting\";\n        break;\n      case WaitingListStatus.PENDING:\n        result = \"Placed & pending\";\n        break;\n      case WaitingListStatus.PLACED:\n        result = \"Placed & confirmed\";\n        break;\n      default:\n        result = \"All\";\n        break;\n    }\n\n    return result;\n  };\n\n  FC_WaitingListStatus = (\n    WaitingList: WaitingListDataInterface[]\n  ): {\n    title: string;\n    count: number;\n    type: WaitingListStatus | \"all\";\n  }[] => {\n    let output: {\n      title: string;\n      count: number;\n      type: WaitingListStatus | \"all\";\n    }[] = [{ title: \"All status\", count: WaitingList.length, type: \"all\" }];\n    const statusArray = Object.values(WaitingListStatus);\n    for (let i in statusArray) {\n      output.push({\n        title: capitalizeFirstLetter(statusArray[i]),\n        count: WaitingList.filter((itm) => itm.status === statusArray[i])\n          .length,\n        type: statusArray[i],\n      });\n    }\n    return output;\n  };\n\n  updateReportContent = (key: waitingListReportContentKeyInterface) => {\n    let index: number = this.state.reportContent.findIndex(\n      (item) => item.key === key\n    );\n    let newArray: waitingListReportContentInterface[] =\n      this.state.reportContent;\n    newArray[index].status = !newArray[index].status;\n    this.setReportContent(newArray);\n    let isSelectAllNeeded = newArray.find((item) => item.status === false);\n    if (isSelectAllNeeded) {\n      this.setSelectAll(false);\n    } else {\n      this.setSelectAll(true);\n    }\n\n    // UPDATE APPLICATION LIST FOR UPDATE ==============================\n    this.updateWaitingListToPrint();\n  };\n\n  updateWaitingListToPrint = () => {\n    // UPDATE REPORT TITLE ========================\n    if (this.state.thisPosition) {\n      let session: string = \"\";\n      if (this.state.thisPeriod === \"all\") {\n        session = \"All session\";\n      } else {\n        session = this.state.thisPeriod.session_plan_name;\n      }\n      this.setReportTitle(\n        \"Waiting list - \" +\n          this.state.thisPosition.position_title +\n          \" - \" +\n          session\n      );\n    }\n    // UPDATE CONTENT =============================\n    if (\n      this.props.systemPositions &&\n      this.props.waitingList &&\n      this.props.application_sessions\n    ) {\n      let arrayNew: WaitingListToPrintInterface[] = [];\n      let n: number = 1;\n      for (const key in this.props.waitingList) {\n        if (Object.prototype.hasOwnProperty.call(this.props.waitingList, key)) {\n          const element = this.props.waitingList[key];\n          const thisPosition = getPositionById(\n            this.props.systemPositions,\n            element.position_id\n          );\n          const thisSession = getPeriodById(\n            this.props.application_sessions,\n            element.session_id\n          );\n          let dataArray: WaitingListToPrintInterface = {\n            id: n.toString(),\n            names: element.user_info.fname + \" \" + element.user_info.lname,\n            gender: element.user_info.sex === \"M\" ? \"Male\" : \"Female\",\n            national_id: element.n_id,\n            phone: element.phone_number,\n            email: element.email,\n            user_position_marks: Number(element.marks.toFixed(2)),\n            position_title: thisPosition\n              ? thisPosition.position_title\n              : \"Unknown position\",\n            education_category: thisPosition\n              ? thisPosition.education_institute_id.education_category_title\n              : \"-\",\n            waitingList_session: thisSession\n              ? thisSession.session_plan_name\n              : \"Unknown session\",\n            date: DATE(element.createdAt),\n            waiting_status: this.showStatus(element.status),\n          };\n\n          for (const key in this.state.reportContent) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                this.state.reportContent,\n                key\n              )\n            ) {\n              if (!this.state.reportContent[key].status) {\n                delete dataArray[this.state.reportContent[key].key];\n              }\n            }\n          }\n          arrayNew.push(dataArray);\n          n++;\n        }\n      }\n      this.setWaitingListToPrint(arrayNew);\n      arrayNew = [];\n      n = 1;\n    }\n  };\n\n  FC_WaitingListData = (\n    allWaitList: WaitingListInterface[] | null,\n    systemPositions: PositionAPI[] | null\n  ): WaitingListDataInterface[] | null => {\n    if (\n      allWaitList === null ||\n      systemPositions === null ||\n      this.props.application_sessions === null\n    )\n      return null;\n    let arrayNew: WaitingListDataInterface[] = [];\n    // LOOP IN ALL WAITING LIST ONE BY ONE ###########################\n    for (const key in allWaitList) {\n      const element = allWaitList[key];\n      if (element.user_info) {\n        const thisPosition = getPositionById(\n          systemPositions,\n          element.position_id\n        );\n        const thisSession = getPeriodById(\n          this.props.application_sessions,\n          element.session_id\n        );\n        let dataArray: WaitingListDataInterface = {\n          names: element.user_info.fname + \" \" + element.user_info.lname,\n          waitingList_id: element._id,\n          gender:\n            element.user_info.sex === \"M\"\n              ? applicantGender.male\n              : applicantGender.female,\n          national_id: element.n_id,\n          phone: element.phone_number,\n          email: element.email,\n          user_position_marks: Number(element.marks.toFixed(2)),\n          position_id: thisPosition\n            ? thisPosition.position_id\n            : \"Unknown position\",\n          position_title: thisPosition\n            ? thisPosition.position_title\n            : \"Unknown position\",\n          education_category: thisPosition\n            ? thisPosition.education_institute_id.education_category_title\n            : \"\",\n          education_category_id: thisPosition\n            ? thisPosition.education_institute_id.education_institute_id\n            : \"\",\n          waitingList_session: thisSession\n            ? thisSession.session_plan_name\n            : \"Unknown session\",\n          date: DATE(element.createdAt),\n          waiting_status: this.showStatus(element.status),\n          status: element.status,\n          waitingList_session_id: element.session_id,\n        };\n        arrayNew.push(dataArray);\n      }\n    }\n    return arrayNew;\n  };\n\n  resetReportContent = (currentState: boolean) => {\n    let newArray: waitingListReportContentInterface[] =\n      this.state.reportContent;\n    for (const key in newArray) {\n      if (this.isChangeAllowed(newArray[key].key)) {\n        newArray[key].status = !currentState;\n      }\n    }\n\n    this.setReportContent(newArray);\n    this.setSelectAll(!currentState);\n    this.updateWaitingListToPrint();\n  };\n\n  isChangeAllowed = (key: waitingListReportContentKeyInterface): boolean => {\n    if (\n      key === waitingListReportContentKeyInterface.names ||\n      key === waitingListReportContentKeyInterface.waiting_status ||\n      key === waitingListReportContentKeyInterface.waitingList_session ||\n      key === waitingListReportContentKeyInterface.position_title ||\n      key === waitingListReportContentKeyInterface.date ||\n      key === waitingListReportContentKeyInterface.user_position_marks ||\n      key === waitingListReportContentKeyInterface.national_id ||\n      key === waitingListReportContentKeyInterface.education_category\n    ) {\n      return false;\n    }\n    return true;\n  };\n\n  generateReportTitle = (position_title: string) => {\n    let session: string = \"\";\n    if (this.state.thisPeriod === \"all\") {\n      session = \"All session\";\n    } else {\n      session = this.state.thisPeriod.session_plan_name;\n    }\n    this.setReportTitle(\"Waiting list - \" + position_title + \" - \" + session);\n  };\n\n  FC_GeneratePDF = () => {\n    if (!document.querySelectorAll(\"#report_content tbody tr\").length) {\n      this.props.PushPopupAlert({\n        title: `Can't generate Report of empty Data`,\n        theme: PopupAlertTheme.warning,\n      });\n      return;\n    }\n\n    let session: string = \"\";\n    if (this.state.thisPeriod === \"all\") {\n      session = \"All session\";\n    } else {\n      session = this.state.thisPeriod.session_plan_name;\n    }\n    const table: HTMLElement | null = document.getElementById(\"report_content\");\n    const reportSettings: reportSettingsInterface = {\n      doneBy: this.props.auth.user.fname + \" \" + this.props.auth.user.lname,\n      title: this.state.reportTitle,\n      subjectTitle: \"Position\",\n      subject: this.state.thisPosition\n        ? this.state.thisPosition.position_title\n        : \"All position\",\n      period: session,\n      footer: \"Online Teacher Recruitment\",\n      institute: this.state.thisPosition\n        ? this.state.thisPosition.education_institute_id\n            .education_category_title\n        : \"\",\n    };\n    table && generatePDF(reportSettings, table, this.setDownloading);\n  };\n\n  FC_FilterWaitingList = (\n    allWaitList: WaitingListDataInterface[],\n    waitingListStatus: WaitingListStatus | \"all\",\n    thisSession: SessionPlanInterface | \"all\",\n    institute: education_category | \"all\",\n    position: PositionAPI | null\n  ): WaitingListDataInterface[] => {\n    let result: WaitingListDataInterface[] = allWaitList;\n    if (waitingListStatus !== \"all\") {\n      result = result.filter((item) => item.status === waitingListStatus);\n    }\n\n    if (position) {\n      result = result.filter(\n        (item) => item.position_id === position.position_id\n      );\n    }\n\n    if (thisSession !== \"all\") {\n      result = result.filter(\n        (item) => item.waitingList_session_id === thisSession._id\n      );\n    }\n\n    if (institute !== \"all\") {\n      result = result.filter(\n        (item) => item.education_category === institute.education_category_title\n      );\n    }\n\n    return result;\n  };\n\n  viewContractor = (\n    waitingData: WaitingListDataInterface\n  ): WaitingListInterface | undefined => {\n    let result = undefined;\n\n    if (this.props.waitingList)\n      result = this.props.waitingList.find(\n        (item) => item._id === waitingData.waitingList_id\n      );\n    return result;\n  };\n\n  render() {\n    if (\n      this.props.application_sessions &&\n      this.props.application_sessions.length === 0\n    ) {\n      return <NoSession />;\n    }\n\n    return (\n      <div>\n        <SideNavigation>\n          {FC_HasInstitute(this.props.auth.education_institution_id) ===\n            false && (\n            <div className=\"flex flex-col mb-4\">\n              <span className=\"text-sm text-gray-600 mb-2\">\n                Education categories:\n              </span>\n              {this.props.schoolLevels.education_categories === null ? (\n                <Loading />\n              ) : this.props.schoolLevels.education_categories.length === 0 ? (\n                <span>No institute found</span>\n              ) : (\n                <Fragment>\n                  {/* <div\n                    onClick={() => this.setThisEducation(\"all\")}\n                    className={`border rounded px-2 py-2 mb-2 cursor-pointer ${\n                      this.state.thisEducation === \"all\"\n                        ? \"bg-blue-600 text-white hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                        : \"hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                    } font-bold flex flex-row items-center gap-2`}\n                  >\n                    {this.state.thisEducation === \"all\" ? (\n                      <MdRadioButtonChecked />\n                    ) : (\n                      <MdRadioButtonUnchecked />\n                    )}\n                    <span>All</span>\n                  </div> */}\n                  {this.props.schoolLevels.education_categories.map(\n                    (item, i) => (\n                      <div\n                        onClick={() => {\n                          this.setThisEducation(item);\n                          this.FC_OnInstitutionChanged(\n                            item.education_institute_id\n                          );\n                        }}\n                        key={i + 1}\n                        className={`border rounded px-2 py-2 mb-2 cursor-pointer ${\n                          this.state.thisEducation !== \"all\" &&\n                          this.state.thisEducation.education_institute_id ===\n                            item.education_institute_id\n                            ? \"bg-blue-600 text-white hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                            : \"hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                        } font-bold flex flex-row items-center gap-2`}\n                      >\n                        {this.state.thisEducation !== \"all\" &&\n                        this.state.thisEducation.education_institute_id ===\n                          item.education_institute_id ? (\n                          <MdRadioButtonChecked />\n                        ) : (\n                          <MdRadioButtonUnchecked />\n                        )}\n                        <span>{item.education_category_title}</span>\n                      </div>\n                    )\n                  )}\n                </Fragment>\n              )}\n            </div>\n          )}\n          <div className=\"\">\n            <div className=\"text-gray-600 text-sm mb-2\">Selected period:</div>\n            <div\n              onClick={() => this.setSelectPeriod(true)}\n              className=\"font-bold bg-blue-50 border border-blue-200 rounded py-2 cursor-pointer text-base px-2 hover:underline  text-blue-600  mb-4 w-full flex flex-row items-center gap-2 justify-between animate__animated animate__zoomIn\"\n            >\n              {this.state.thisPeriod !== \"all\"\n                ? `${capitalizeFirstWord(\n                    this.state.thisPeriod.session_plan_name\n                  )} - ${this.state.thisPeriod.period}`\n                : \"All session\"}\n              <FiEdit className=\"text-xl text-blue-600\" />\n            </div>\n          </div>\n\n          <div className=\"pt-1\">\n            <div className=\"text-sm text-gray-700 pb-2 pt-2\">Claim types:</div>\n            {this.state.loadingWaitingList ||\n            this.FC_WaitingListData(\n              this.props.waitingList,\n              this.props.systemPositions\n            ) === null ? (\n              <Loading />\n            ) : (\n              this.FC_WaitingListStatus(\n                this.FC_WaitingListData(\n                  this.props.waitingList,\n                  this.props.systemPositions\n                )!\n              ).map((item, index: number) => (\n                <div\n                  onClick={() => this.setThisWaitingListStatus(item.type)}\n                  key={item.title + index}\n                >\n                  <MainItem\n                    title={item.title}\n                    count={item.count}\n                    active={this.state.thisWaitingListStatus === item.type}\n                  />\n                </div>\n              ))\n            )}\n          </div>\n        </SideNavigation>\n\n        <section>\n          {/* REPORT TITLE ============================================ */}\n          <div className=\"grid md:grid-cols-12\">\n            <div className=\"col-span-6\">\n              <div className=\"mt-4 mx-4 flex flex-col gap-1\">\n                <span className=\"text-3xl font-bold text-gray-700\">\n                  Waiting list report\n                </span>\n                <div\n                  onClick={() => this.setSelectPosition(true)}\n                  className=\"flex flex-row gap-2\"\n                >\n                  <span className=\"text-gray-500\">Selected position: </span>\n                  <span className=\"text-blue-600 font-bold underline cursor-pointer\">\n                    {this.state.thisPosition !== null\n                      ? this.state.thisPosition.position_title\n                      : \"All position\"}\n                  </span>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-span-6\">\n              <div className=\"float-right mt-2\">\n                {this.props.waitingList && this.props.waitingList.length > 0 && (\n                  <div className=\"flex flex-row items-center justify-end font-bold mb-2\">\n                    <BiExport className=\"text-2xl text-gray-500\" />\n                    <span className=\"text-gray-500\">Export as</span>\n                    <button\n                      className=\"px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200\"\n                      disabled={this.state.loading}\n                      onClick={() => {\n                        this.updateWaitingListToPrint();\n                        this.setGenerateReportModal({\n                          reportType: \"EXCEL\",\n                          status: true,\n                        });\n                      }}\n                    >\n                      EXCEL\n                    </button>\n                    <button\n                      className={`px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200 ${\n                        this.state.downloading && \"cursor-wait\"\n                      }`}\n                      onClick={() => this.FC_GeneratePDF()}\n                      disabled={this.state.loading || this.state.downloading}\n                    >\n                      PDF\n                    </button>\n                  </div>\n                )}\n                <div\n                  onClick={() => this.setSelectPosition(true)}\n                  className=\"btn bg-blue-50 border border-blue-300 text-blue-600 cursor-pointer hover:bg-blue-100 flex flex-row items-center justify-center gap-2 text-sm \"\n                >\n                  <BiFilterAlt className=\"text-xl\" />\n                  Filter by position\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* END REPORT TITLE ============================================ */}\n\n          <div className=\"bg-white my-4\">\n            <div className=\"w-full px-2 py-2\">\n              <input\n                onChange={(e) => this.setSearchInput(e.target.value)}\n                type=\"text\"\n                value={this.state.searchInput}\n                placeholder=\"Search...\"\n                className=\"w-full bg-gray-100 py-2 px-3 rounded focus:border-gray-800\"\n                disabled={\n                  this.state.loadingWaitingList ||\n                  this.FC_WaitingListData(\n                    this.props.waitingList,\n                    this.props.systemPositions\n                  ) === null\n                }\n              />\n            </div>\n            <div className=\"w-full overflow-x-auto\">\n              <table className=\"w-full shadow\" id=\"report_content\">\n                <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                  <tr>\n                    <td className=\"px-2 py-2\">#</td>\n                    <td\n                      className=\"px-2 py-2 cursor-pointer\"\n                      onClick={() => this.setSort(\"names\")}\n                    >\n                      <div className=\"flex items-center gap-1\">\n                        Applicant names <BiSort />\n                      </div>\n                    </td>\n                    <td className=\"px-2 py-2\">National ID</td>\n                    <td\n                      className=\"px-2 py-2 cursor-pointer\"\n                      onClick={() => this.setSort(\"gender\")}\n                    >\n                      <div className=\"flex items-center gap-1\">\n                        Gender <BiSort />\n                      </div>\n                    </td>\n                    <td className=\"px-2 py-2\">Phone</td>\n                    <td\n                      className=\"px-2 py-2 cursor-pointer\"\n                      onClick={() => this.setSort(\"user_position_marks\")}\n                    >\n                      <div className=\"flex items-center gap-1\">\n                        Marks <BiSort />\n                      </div>\n                    </td>\n                    <td\n                      className=\"px-2 py-2 cursor-pointer\"\n                      onClick={() => this.setSort(\"position_title\")}\n                    >\n                      <div className=\"flex items-center gap-1\">\n                        Position <BiSort />\n                      </div>\n                    </td>\n                    <td\n                      className=\"px-2 py-2 cursor-pointer\"\n                      onClick={() => this.setSort(\"education_category\")}\n                    >\n                      <div className=\"flex items-center gap-1\">\n                        Institute <BiSort />\n                      </div>\n                    </td>\n                    <td\n                      className=\"px-2 py-2 cursor-pointer\"\n                      onClick={() => this.setSort(\"waiting_status\")}\n                    >\n                      <div className=\"flex items-center gap-1\">\n                        Status <BiSort />\n                      </div>\n                    </td>\n                    <td\n                      className=\"px-2 py-2 cursor-pointer\"\n                      onClick={() => this.setSort(\"waitingList_session\")}\n                    >\n                      <div className=\"flex items-center gap-1\">\n                        Session <BiSort />\n                      </div>\n                    </td>\n                    <td\n                      className=\"px-2 py-2 cursor-pointer\"\n                      onClick={() => this.setSort(\"date\")}\n                    >\n                      <div className=\"flex items-center gap-1\">\n                        Date <BiSort />\n                      </div>\n                    </td>\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.state.loadingWaitingList ? (\n                    <TableLoading cols={11} />\n                  ) : this.FC_WaitingListData(\n                      this.props.waitingList,\n                      this.props.systemPositions\n                    ) === null ? (\n                    <TableLoading cols={10} />\n                  ) : this.FC_FilterWaitingList(\n                      this.FC_WaitingListData(\n                        this.props.waitingList,\n                        this.props.systemPositions\n                      )!,\n                      this.state.thisWaitingListStatus,\n                      this.state.thisPeriod,\n                      this.state.thisEducation,\n                      this.state.thisPosition\n                    ).length === 0 ? (\n                    <tr>\n                      <td colSpan={11} className=\"px-2 py-2\">\n                        <div className=\"flex flex-col text-gray-400 items-center justify-center bg-gray-100 rounded py-10\">\n                          <ImFilesEmpty className=\"text-8xl text-gray-400 mb-2 animate__animated animate__shakeX\" />\n                          <span className=\"text-sm font-bold\">\n                            No result found! Please try to search again\n                          </span>\n                          <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n                            <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                              <li\n                                onClick={() => this.setSelectPosition(true)}\n                                className=\"underline text-gray-500 cursor-pointer\"\n                              >\n                                Filter by position\n                              </li>\n                              <li className=\"text-gray-400 italic\">or</li>\n                              <li\n                                className=\"text-gray-500 underline\"\n                                onClick={() => this.setSelectPeriod(true)}\n                              >\n                                Filter by period\n                              </li>\n                            </ul>\n                          </div>\n                        </div>\n                      </td>\n                    </tr>\n                  ) : (\n                    sortThisArray(\n                      this.state.isSorted,\n                      searchData(\n                        this.FC_FilterWaitingList(\n                          this.FC_WaitingListData(\n                            this.props.waitingList,\n                            this.props.systemPositions\n                          )!,\n                          this.state.thisWaitingListStatus,\n                          this.state.thisPeriod,\n                          this.state.thisEducation,\n                          this.state.thisPosition\n                        ),\n                        this.state.searchInput\n                      ),\n                      this.state.sortProperty,\n                      this.state.sortOrder\n                    ).map((item: WaitingListDataInterface, i: number) => (\n                      <tr\n                        key={i + 1}\n                        className={`${\n                          i % 2 !== 0 ? \"bg-gray-100\" : \"bg-white\"\n                        } text-gray-600 hover:bg-blue-100 hover:text-blue-700 cursor-pointer border-b border-gray-300 hover:border-blue-500 text-sm`}\n                        onClick={() => this.setState({ selectedWaiting: item })}\n                      >\n                        <td className=\"px-2 py-2\">{i + 1}</td>\n                        <td className=\"px-2 py-2\">{item.names}</td>\n                        <td className=\"px-2 py-2\">{item.national_id}</td>\n                        <td className=\"px-2 py-2\">{item.gender}</td>\n                        <td className=\"px-2 py-2\">{item.phone}</td>\n                        <td className=\"px-2 py-2\">\n                          {item.user_position_marks}\n                        </td>\n                        <td className=\"px-2 py-2\">{item.position_title}</td>\n                        <td className=\"px-2 py-2\">{item.education_category}</td>\n                        <td className=\"px-2 py-2\">\n                          {capitalizeFirstLetter(\n                            item.waiting_status.toLowerCase()\n                          )}\n                        </td>\n                        <td className=\"px-2 py-2\">\n                          {item.waitingList_session}\n                        </td>\n                        <td className=\"px-2 py-2\">{item.date}</td>\n                      </tr>\n                    ))\n                  )}\n                </tbody>\n              </table>\n            </div>\n          </div>\n\n          {/* CHOOSING POSITION MODAL */}\n          {this.state.selectPosition && (\n            <Modal\n              title={\n                <div className=\"flex flex-row gap-4 items-center\">\n                  <IoFilter className=\"text-5xl text-blue-600\" />\n                  <div className=\"flex flex-col\">\n                    <span className=\"font-bold text-xl text-blue-600\">\n                      Filter by a position\n                    </span>\n                  </div>\n                </div>\n              }\n              backDrop={true}\n              theme={Themes.default}\n              close={() => {\n                this.setSelectPosition(false);\n                this.setSearchPositionInput(\"\");\n              }}\n              backDropClose={true}\n              widthSizeClass={ModalSize.extraLarge}\n              displayClose={true}\n              padding={{ title: true }}\n            >\n              <div className=\"px-2 pb-2\">\n                {this.props.systemPositions === null ? (\n                  <LoadingV2 type={LoadingType.dark} />\n                ) : this.props.systemPositions.length === 0 ? (\n                  <div className=\"flex flex-col text-gray-400 items-center justify-center\">\n                    <MdSearch className=\"text-6xl\" />\n                    <div className=\"flex flex-col items-center justify-center\">\n                      <span>No positions found! Please go back!</span>\n                    </div>\n                  </div>\n                ) : (\n                  <>\n                    <div className=\"flex flex-col\">\n                      <span className=\"text-gray-600 text-xs font-bold\">\n                        Filter by position name\n                      </span>\n                      <input\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                          this.setSearchPositionInput(e.target.value)\n                        }\n                        type=\"text\"\n                        className=\"mb-4 bg-gray-100 px-3 py-2 rounded\"\n                        placeholder=\"Keyword...\"\n                      />\n                    </div>\n                    <div\n                      onClick={() => {\n                        this.generateReportTitle(\"All position\");\n                        this.setThisPosition(null);\n                        this.setSelectPosition(false);\n                        this.setSearchPositionInput(\"\");\n                      }}\n                      className=\"bg-white cursor-pointer rounded  px-3 py-2 border border-gray-200 hover:border-blue-500 hover:bg-blue-100 mb-2\"\n                    >\n                      <div className=\"grid lg:grid-cols-12\">\n                        <div className=\"col-span-12 lg:col-span-10\">\n                          <div className=\"flex flex-row items-center gap-3\">\n                            <div>\n                              <IoIosBriefcase className=\"text-4xl md:text-5xl text-blue-600\" />\n                            </div>\n                            <div className=\"flex flex-col\">\n                              <span className=\"text-base lg:text-lg font-bold text-gray-700\">\n                                All position\n                              </span>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-span-12 lg:col-span-2 hidden lg:block\">\n                          <div className=\"h-full flex items-center justify-end\">\n                            <div className=\"btn bg-blue-600 text-white float-right\">\n                              Choose\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    {search(\n                      this.props.systemPositions,\n                      this.state.searchPositionInput\n                    ).map((item: PositionAPI, key: number) => (\n                      <div\n                        key={key + 1}\n                        onClick={() => {\n                          this.generateReportTitle(item.position_title);\n                          this.setThisPosition(item);\n                          this.setSelectPosition(false);\n                          this.setSearchPositionInput(\"\");\n                        }}\n                        className=\"bg-white cursor-pointer rounded  px-3 py-2 border border-gray-200 hover:border-blue-500 hover:bg-blue-100 mb-2\"\n                      >\n                        <div className=\"grid lg:grid-cols-12\">\n                          <div className=\"col-span-12 lg:col-span-10\">\n                            <div className=\"flex flex-row items-center gap-3\">\n                              <div>\n                                <IoIosBriefcase className=\"text-4xl md:text-5xl text-blue-600\" />\n                              </div>\n                              <div className=\"flex flex-col\">\n                                <span className=\"text-xs lg:text-sm font-bold text-gray-700\">\n                                  {item.position_title}\n                                </span>\n                                <span className=\"text-xs text-gray-500 italic\">\n                                  School level:{\" \"}\n                                  <span\n                                    className=\"text-gray-800 font-light\"\n                                    style={{ fontStyle: \"normal\" }}\n                                  >\n                                    {item.school_level_id.school_level_name}\n                                  </span>\n                                </span>\n                                <span className=\"text-xs font-bold text-blue-600 bg-blue-100 w-max px-3 py-1 rounded-full\">\n                                  {\n                                    item.education_institute_id\n                                      .education_category_title\n                                  }\n                                </span>\n                              </div>\n                            </div>\n                          </div>\n                          <div className=\"col-span-12 lg:col-span-2 hidden lg:block\">\n                            <div className=\"h-full flex items-center justify-end\">\n                              <div className=\"btn bg-blue-600 text-white float-right\">\n                                Choose\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </>\n                )}\n              </div>\n            </Modal>\n          )}\n          {/* END CHOOSING POSITION MODAL */}\n\n          {/* ####################################################################################### */}\n\n          {/* CHOOSING PERIOD CONTENT MODAL */}\n          {this.state.selectPeriod && (\n            <Modal\n              title={\n                <div className=\"flex flex-row gap-4 items-center\">\n                  <MdHistory className=\"text-5xl text-blue-600\" />\n                  <span className=\"flex flex-col\">Choose a period</span>\n                </div>\n              }\n              backDrop={true}\n              theme={Themes.default}\n              close={() => this.setSelectPeriod(false)}\n              backDropClose={true}\n              widthSizeClass={ModalSize.extraLarge}\n              displayClose={true}\n              padding={{ title: true }}\n            >\n              <ChooseSession\n                allSession={this.props.application_sessions}\n                setSelectSession={(value: SessionPlanInterface | \"all\") => {\n                  this.setThisPeriod(value);\n                  this.setSelectPeriod(false);\n                }}\n                chooseAll={true}\n                currentSelected={this.state.thisPeriod}\n              />\n            </Modal>\n          )}\n          {/* END CHOOSING PERIOD CONTENT MODAL */}\n\n          {/* ####################################################################################### */}\n\n          {/* GENERATE DYNAMIC REPORT CONTENT MODAL */}\n          {this.state.generateReportModal !== null &&\n            this.state.generateReportModal.status === true && (\n              <Modal\n                title={\n                  <div className=\"flex flex-row gap-4 items-center\">\n                    {/* <IoBriefcase className=\"text-5xl text-gray-500\" /> */}\n                    <div className=\"flex flex-col\">\n                      <span className=\"font-bold text-2xl text-gray-500\">\n                        Generating Report contents\n                      </span>\n                      <span className=\"text-sm text-blue-600 font-normal\">\n                        Generating {this.state.generateReportModal.reportType}{\" \"}\n                        Report\n                      </span>\n                    </div>\n                  </div>\n                }\n                backDrop={true}\n                theme={Themes.default}\n                close={() => this.setGenerateReportModal(null)}\n                backDropClose={false}\n                widthSizeClass={ModalSize.medium}\n                displayClose={true}\n                padding={{ title: true }}\n              >\n                <div className=\"px-6\">\n                  <div className=\"my-2 text-base text-gray-700 sm:text-lg\">\n                    <div className=\"flex flex-col\">\n                      <label>Title</label>\n                      <input\n                        type=\"text\"\n                        className={`text-left input-white w-20 inline-block ${\n                          this.state.formError &&\n                          this.state.formError.element === \"report_title\"\n                            ? \"border-red-500\"\n                            : \"border-gray-500\"\n                        } border-2`}\n                        placeholder=\"Sub Category Title\"\n                        value={this.state.reportTitle}\n                        onChange={(e) => {\n                          this.setFormError(null);\n                          this.setReportTitle(e.target.value);\n                        }}\n                        disabled={this.state.loading}\n                      />\n                      {this.state.formError &&\n                        this.state.formError.element === \"report_title\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    <div className=\"flex flex-col mt-2\">\n                      <label>Report content</label>\n                      <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                        {this.state.reportContent.map((item, index) => (\n                          <div\n                            key={index}\n                            className={`flex items-center gap-1 ${\n                              this.isChangeAllowed(item.key)\n                                ? \"cursor-pointer\"\n                                : \"cursor-not-allowed\"\n                            }`}\n                            onClick={() =>\n                              this.isChangeAllowed(item.key) &&\n                              this.updateReportContent(item.key)\n                            }\n                            title={\n                              !this.isChangeAllowed(item.key)\n                                ? \"Required for every report!\"\n                                : \"\"\n                            }\n                          >\n                            {item.status ? (\n                              <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                            ) : (\n                              <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                            )}\n                            <span>{item.title}</span>\n                          </div>\n                        ))}\n                      </div>\n                      {this.state.formError &&\n                        this.state.formError.element === \"report_content\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                  </div>\n                  <div className=\"flex justify-between mb-2 mt-4\">\n                    <div\n                      className={`flex items-center gap-1 cursor-pointer`}\n                      onClick={() =>\n                        this.resetReportContent(this.state.selectAll)\n                      }\n                    >\n                      {this.state.selectAll ? (\n                        <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                      ) : (\n                        <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                      )}\n                      <span>Select all</span>\n                    </div>\n\n                    {this.state.waitingListToPrint && !this.state.loading && (\n                      <ExportToExcel\n                        fileData={this.state.waitingListToPrint}\n                        fileName={this.state.reportTitle}\n                        btnName=\"Generate\"\n                      />\n                    )}\n                  </div>\n                </div>\n              </Modal>\n            )}\n          {/* END GENERATE DYNAMIC REPORT CONTENT MODAL */}\n\n          {/* ####################################################################################### */}\n\n          {/* CHOOSING PERIOD CONTENT MODAL */}\n          {this.state.selectedWaiting &&\n            this.viewContractor(this.state.selectedWaiting) && (\n              <Modal\n                title={\n                  <div className=\"flex flex-row gap-4 items-center\">\n                    {/* <FaFileContract className=\"text-4xl text-blue-600\" />\n                    <span className=\"text-3xl\">\n                      {this.state.selectedWaiting.names +\n                        \"'s placement preferences\"}\n                    </span> */}\n                  </div>\n                }\n                backDrop={true}\n                theme={Themes.default}\n                close={() => this.setState({ selectedWaiting: null })}\n                backDropClose={true}\n                widthSizeClass={ModalSize.extraLarge}\n                displayClose={true}\n                padding={{ title: true, body: true }}\n              >\n                <div className=\"mb-7\">\n                  <ContractViewer\n                    contract={\n                      this.viewContractor(this.state.selectedWaiting)!.contract\n                    }\n                    candidates={this.state.selectedWaiting.names}\n                    position={this.state.selectedWaiting.position_title}\n                  />\n                </div>\n              </Modal>\n            )}\n        </section>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system_settings,\n  sessionPlan,\n  schoolLevels,\n  waitingList,\n}: StoreState): {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  systemPositions: PositionAPI[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  waitingList: WaitingListInterface[] | null;\n} => {\n  return {\n    auth: auth,\n    application_sessions: sessionPlan.allSessionPlans,\n    systemPositions: system_settings.systemPositions,\n    schoolLevels,\n    waitingList,\n  };\n};\n\nexport const WaitingListReport = connect(mapStateToProps, {\n  getWaitingList,\n  FC_GetAllSessionByInstitution,\n  loadEducationCategories,\n  FC_GetPositionsByInstitution,\n  PushPopupAlert,\n})(_WaitingListReport);\n"],"sourceRoot":""}
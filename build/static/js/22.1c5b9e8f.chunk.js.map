{"version":3,"sources":["containers/Claimings/Admin/AdminClaimExamView.tsx","containers/Positions/ViewDocRequirements.tsx","containers/Claimings/Admin/AdminClaimAppView.tsx","containers/Claimings/Admin/AdminClaimDocView.tsx","containers/Claimings/Admin/index.tsx","containers/AdminDashboard/ClaimDashboard/AllClaimChart.tsx","containers/AdminDashboard/ClaimDashboard/ClaimDashBoardTitle.tsx","containers/AdminDashboard/ClaimDashboard/ClaimDashboard.tsx","shared/dataTest.tsx","utils/question_bank.ts","components/Table/Table.tsx","components/Navigation/SideNavigation.tsx","actions/session.ts","actions/document.ts","actions/settings.ts","containers/DoExam/QuestionDetails/ConvertingAnswers.ts","containers/SessionSettings/NoSession.tsx","components/Loading/TableLoading.tsx","containers/Claimings/Candidate/FormPlacementList.tsx","containers/Claimings/Candidate/ClaimForm.tsx","shared/interfaces.tsx","containers/AdminDashboard/ChartComponents/VBarChart.tsx","utils/ExportToExcel.tsx","containers/Claimings/ClaimDocView.tsx","utils/mineduc.png","components/DownloadPDF/rest.tsx","components/AnswersDetails/CandidateAnswersDetails.tsx","containers/SessionSettings/ChooseSession.tsx","components/QuestionPreview/QuestionPreview.tsx","containers/Positions/ViewRequirements.tsx","components/AnswersDetails/AnswersDetails.tsx","containers/AdminDashboard/ChartComponents/PieChart.tsx","containers/Claimings/Candidate/ApplicationFormView.tsx","containers/DoExam/QuestionDetails/Answers/MultipleChoice.tsx","containers/DoExam/QuestionDetails/Answers/TrueFalse.tsx","containers/DoExam/QuestionDetails/Answers/SimpleCalculated.tsx","containers/DoExam/QuestionDetails/Answers/ShortAnswer.tsx","containers/DoExam/QuestionDetails/Answers/Numerical.tsx","containers/DoExam/QuestionDetails/Answers/CalculatedMultipleChoice.tsx","containers/DoExam/QuestionDetails/Answers/Essay.tsx","containers/DoExam/QuestionDetails/Answers/MatchingSelect.tsx","containers/DoExam/QuestionDetails/Answers/Matching.tsx","components/ClaimForm/ClaimFormComponent.tsx","containers/Claimings/Candidate/ExaminationFormView.tsx","containers/DoExam/DoExamTitle/FindAnswer.tsx","containers/DoExam/DoExamTitle/FindAnswerHybrid.tsx","containers/Claimings/Candidate/FormExamList.tsx","containers/CandidateExams/CandidateExams.tsx","containers/AdminDashboard/DashboardLabelItem.tsx","containers/AdminDashboard/ExamDashboard/ExamDashboardLabels.tsx","containers/Claimings/Admin/AdminFilterByType.tsx","containers/Claimings/ClaimHeaderTitle.tsx","containers/Claimings/Candidate/ChooseReason.tsx","containers/Claimings/Candidate/DocFormView.tsx","containers/Claimings/Candidate/FormApplicationList.tsx","containers/Claimings/Candidate/FormDocumentList.tsx","containers/DoExam/QuestionDetails/Answers/AnswersTypesCollection.tsx","containers/DoExam/QuestionDetails/Answers/HybridAnswers.tsx","containers/SessionSettings/ApplicationSession/SessionDetails.tsx","containers/Claimings/Candidate/index.tsx","containers/Claimings/ClaimApplView.tsx","containers/Claimings/ClaimExamView.tsx","containers/Claimings/ClaimPlacementView.tsx","containers/Claimings/Candidate/FilterByType.tsx","components/ViewPDF/ViewPDF.tsx","containers/Admin/Claiming/ClaimingReport.tsx"],"names":["viewTabs","ViewDocRequirements","props","useState","viewDoc","setViewDoc","loadingImage","setLoadingImage","isFullscreen","setSetFullscreen","isDocumentExist","category_id","sub_category_id","field_id","isEmptyOrSpaces","userDocs","filter","item","validation_status","find","category_subcategory_data","Table","columns","columnTitle","alignText","padding","rows","data","requirements","length","className","colSpan","map","index","subcategory_id","subcategory_title","field_title","onClick","pagination","search","thColor","Modal","backDrop","theme","Themes","default","close","backDropClose","widthSizeClass","ModalSize","extraLarge","displayClose","title","body","footer","Loading","files","isFileImage","getFileType","src","API","AUTH_FILES","alt","id","onLoad","onDoubleClick","fullScreen","ViewPDF","file_url","class_name","frame_title","setLoadingFile","React","memo","FC_AdminApplicationPositionDistinctCategory","thisPosition","documentCategories","PositionsTemp","DistinctCategoriesTemp","DistinctCategoriesIds","DistinctSubCategoriesTemp","DistinctSubCategoriesIds","req","thisRequirements","thisCategory","documentCategory","user_detail_category_id","category","thisSubCategory","documentSubCategory","user_detail_subcategory_id","subcategory","field","thisField","documentFields","_id","position_requirement","required","push","category_title","subcategory_required","includes","connect","auth","evaluateClaim","reAssessApplication","PushPopupAlert","loadingRequest","setLoadingRequest","actionTaken","setActionTaken","formError","setFormError","responseMsg","setResponseMsg","handleVerify","a","element","msg","subClaim","thisClaim","claims","level","claim_level","api_body","sub_claim_id","evaluation_comment","evaluated_by","user","user_id","decision_taken_status","evaluator_name","fname","lname","evaluator_email","email","axios","put","CLAIMING","res","console","log","evaluate_claim_res","ClaimDecisionStatus","ACCEPTED","overrideDecision","PopupAlertTheme","success","error","errorToText","danger","getReasonById","reason_id","claimReasons","patch","APPLICATION","claiming_on_id","userDetails","phone_number","comment","application_status","ApplicationStates","Shortlisted","application_id","code_error","getPositionById","position_id","systemPositions","user_info","thisApplication","position","position_title","description","school_level_id","school_level_name","education_institute_id","education_category_title","courses","course_name","course_code","course_id","NoResult","NoResultThemes","Dark","value","details","previous","status","Rejected","capitalizeFirstLetter","evaluater","name","DATE","createdAt","dangerouslySetInnerHTML","__html","reason","override_by","claim","default_claim_resaons","showDate","isClaimEvaluated","REJECTED","toLocaleLowerCase","last_claim_status","ClaimStatus","PENDING","DELETED","placeholder","cols","style","resize","onChange","e","target","disabled","window","confirm","verifyDocument","FC_DocValidation","doc_id","DocValidationStatusInterface","APPROVED","validated_by","in_education","disability","api_redux","date","post","AUTH","FC_shortListing","candidate_id","type","setViewImage","viewImage","adminDisplayClaimTitle","thisDoc","commet","questionTypes","loadQuestionTypes","loading","setLoading","marks","setMarks","profile","selectedTab","setSelectedTab","useEffect","handleMarksAddition","DO_EXAM","answer_sheet_id","Object","values","i","exam","AnswersDetails","showAnswers","exam_id","claimShowAnswer","thisExamSheet","thisExam","allAnswers","exam_location","questions","user_answers","period","course","exam_paper","user_status","used_duration","total_marks","number_of_question_answered","exam_total_marks","exam_start_time","exam_end_time","exam_date","updatedAt","gender","sex","Number","candidateDocuments","result","type_key","PlansTypeKeys","DOCUMENT_VALIDATION","AdminClaimGetDocTitle","main","doc","DocCategory","DocSubCategory","DocField","DocTitle","c","sub_category","getApplicationById","allApplications","application","Index","setState","setLoadingData","loadingData","setPeriodChanged","periodChanged","setThisPeriod","thisPeriod","setViewClaim","viewClaim","setClaimId","claimId","setClaimType","claimType","setCandidateId","candidateId","setDefaultSession","sessions","state","thisSession","is_active","loadsAllClaims","setSearchClaim","searchClaim","claiming","allClaims","getAllClaims","session_plan_id","loadsApplications","getAllApplications","loadsController","file_id","EXAMINATION","loadsAlAnswers","answersheet_id","allAnswer","getAllAnswers","componentDidMount","application_sessions","GetAllSessionPlans","documentReducer","getDocumentCategory","getDocumentSubCategory","getDocumentFields","getPositions","getClaimReasons","loadCourses","displayClaimTitle","thisDocs","thisAnswer","getCourseIdBySheetId","getCourseById","onPeriodChange","period_id","getLastClaimDate","claimsLength","this","claimTypes","SideNavigation","AdminFilterByType","loadingClaims","ClaimHeaderTitle","headerTitle","selectedClaimType","MARKS_PUBLICATION","PLACEMENT_TRANSFER","loadingSession","setLoadingSession","filterClaimsByClaimType","Light","Math","random","whichClaimType","whichClaimStatus","classes","TableLoading","getClaimById","ClaimTypesInterface","DOCUMENT","Component","AdminClaim","system_settings","sessionPlan","document","allSessionPlans","AllClaimChart","FC_GetAllClaimChartData","acceptedArray","rejectedArray","activeArray","labelArray","typeKey","ClaimTypes","count","accepted","rejected","pending","replace","active","labels","VBarChart","categoriesLabel","dataLabels","yaxisText","tooltipText","series","colors","defaultBar","borderRadius","horizontal","columnWidth","endingShape","stacked","ClaimDashBoardTitle","reportTitle","education_categories","allEducation","loadingApplications","loadingEducation","thisEducation","setThisEducation","education","session","session_plan_name","_ClaimDashboard","setLoadingInstitutes","loadingInstitutes","setLoadingPosition","loadingPosition","setLoadingApplications","setLoadingClaims","setLoadingDocuments","loadingDocuments","setLoadingClarifications","loadingClarifications","setLoadingFields","loadingFields","setThisLabel","thisLabel","schoolLevels","loadEducationCategories","getClaimInstitute","output","all","decision","forEach","PlansKey","reportClaimType","itm","claim_type","FC_ClaimData","arrayNew","n","key","prototype","hasOwnProperty","call","keyClaim","dataArray","claim_id","names","national_id","n_id","phone","education_category","claim_session","claim_title","getClaimDataByTitle","allData","NoSession","ExamDashboardLabels","icon","FaBookOpen","iconColor","labelsOnRow","PieChart","options","legend","show","horizontalAlign","fontSize","itemMargin","vertical","plotOptions","pie","donut","color","offsetY","fontFamily","formatter","val","total","label","w","globals","seriesTotals","reduce","b","width","ClaimDashboard","GetClaimingTypes","setSelectedClaimType","str","match","getRoleById","roles","roleId","role","system_user_role_id","getInstituteById","institutes","instituteId","positions","toTwoDigit","dec","floor","slice","toString","substr","toAnyDigit","zeroes","Array","join","charAt","toUpperCase","ExamTimeStatus","today","moment","tz","TimeZone","getQuestionType","question_types","type_id","check","undefined","check_type","questionTypeElements","findTotalMarks","results","sum","test","toFixed","CheckIfExamDone","validateCalculatedFormula","formula","characters","el","nextCharacter","convertFromStringToDate","responseDate","dateComponents","split","datePieces","timePieces","Date","parseInt","validateExamDate","start_time","end_time","Expired","toDay","examDate","startTime","getDate","getMonth","getFullYear","endTime","Waiting","getTime","Online","proctoringDefaultRules","rule","caption","table","tr","tableId","charactersLength","FC_makeID","totalItems","setTotalItems","totalPages","setTotalPages","currentPage","setCurrentPage","pages","setPages","pageSize","setPageSize","startIndex","setStartIndex","endIndex","setEndIndex","tablePagination","getElementById","getElementsByTagName","ceil","min","_pages","from","keys","display","tableSize","searchBG","filterType","td","toLowerCase","textContent","innerText","indexOf","filterTable","tableClass","rounded","hideColumns","column","isSortAllowed","switching","x","y","shouldSwitch","colIndex","dir","switchcount","innerHTML","parentNode","insertBefore","sortThisColumn","aria-label","page","pageIndex","_SideNavigation","PageHasSubNav","componentWillUnmount","isAuthenticated","navActive","system","navigation","children","NavToogle","MainItem","MdBrightness1","IconDefined","GetPlansTypes","callback","dispatch","setAxiosToken","get","GET_PLANS_TYPES","plan_types","ActionTypes","payload","setSelectedPlanType","thisType","SELECT_PLAN_TYPE","getActiveSessionPlan","GET_ACTIVE_SESSION_PLANS","session_plan","GET_ALL_SESSION_PLANS","session_data","createSessionPlan","CREATE_SESSION_PLAN","updateSessionPlan","UPDATE_SESSION_PLAN","sessionActivation","SESSION_ACTIVATION","deleteSessionPlan","DELETE_SESSION_PLAN","createAcademicSession","CREATE_ACADEMIC_SESSION","GetAllAcademicSession","PLACEMENT","GET_ALL_ACADEMIC_SESSION","updateAcademicSession","UPDATE_ACADEMIC_SESSION","academicSessionActivation","ACADEMIC_SESSION_ACTIVATION","deleteAcademicSession","DELETE_ACADEMIC_SESSION","getActiveAcademicSession","GET_ACTIVE_ACADEMIC_SESSION","docCategory","GET_DOCUMENT_CATEGORY","createDocumentCategory","CREATE_DOCUMENT_CATEGORY","updateDocumentCategory","UPDATE_DOCUMENT_CATEGORY","deleteDocumentCategory","DELETE_DOCUMENT_CATEGORY","docSubCategory","GET_DOCUMENT_SUB_CATEGORY","doc_SUB_category_error","createDocumentSubCategory","CREATE_DOCUMENT_SUB_CATEGORY","updateDocumentSubCategory","UPDATE_DOCUMENT_SUB_CATEGORY","deleteDocumentSubCategory","DELETE_DOCUMENT_SUB_CATEGORY","docFields","GET_DOCUMENT_FIELDS","createDocumentFields","CREATE_DOCUMENT_FIELDS","updateDocumentFields","reducer","UPDATE_DOCUMENT_FIELDS","deleteDocumentFields","DELETE_DOCUMENT_FIELDS","distinctCandidates","candidatesData","user_ids","candidate","getCandidatesInInstitute","educatin_type_id","session_id","GET_CANDIDATE_IN_INSTITUTE","VERIFY_DOCUMENT","getSystemSettings","GET_SYSTEM_SETTINGS","disableSystemSetting","DISABLE_SYSTEM_SETTINGS","GetTaskAccess","response","task","permitted","GET_TASK_ACCESS","GET_POSTIONS","deletePosition","DELETE_POSITION","publishPosition","PUBLISH_POSITION","toMultipleChoice","answers","answer","toTrueFalse","toMatching","toSimpleCalculated","toShortAnswer","toNumerical","toCalculatedMultipleChoice","toEssay","displayCols","colsArray","searchInput","setSearchInput","myPlacement","isClaimAllowed","myClaims","activeSession","placed","setChooseClaimFile","setViewThisFile","setClaimFileId","school","school_name","ClaimGetDocTitle","category_subcategory_Data_id","allClaim","claimOnId","ClaimForm","setLoadingForm","loadingForm","setAlertError","alertError","claimFileId","viewThisFile","chooseClaimFile","setChooseClaimReason","chooseClaimReason","setClaimReason","claimReason","setClaimComment","claimComment","isClaimTypeOpen","plans","isPlanActive","displayClaimType","loadExamAnswers","activeSessionPlan","getMyAnswers","application_session","setFormState","thisClaimType","thisClaimTypeId","formType","getDocumentById","documents","applications","getExamById","exams","getValidation","thisId","old_reason","old_status","old_evaluated_by","candidateApplications","cleanToClose","loadUserById","getClaimTitle","myAnswer","handleSubmit","preventDefault","old_evaluator_email","old_evaluator_name","institute_id","createClaim","selectClaimType","getMyRejectedApplications","getMyRejectedDocuments","getMyPlacement","generateChooseFileTitle","formState","medium","onSubmit","FormDocumentList","FormApplicationList","FormExamList","candidateAnswers","ChooseReason","allClaimReasons","DocFormView","ApplicationFormView","ExaminationFormView","thisAnswerSheet","getMyClaims","PostRequestStatusInterface","DocumentAttributesInterface","SESSION_PLAN_KEYS","chart","events","dataPointSelection","event","chartContext","config","labelClicked","dataPointIndex","FC_LoadSelected","seriesIndex","bar","enabled","xaxis","rotate","categories","tickPlacement","yaxis","text","fill","opacity","tooltip","grid","left","right","noData","align","verticalAlign","setOptions","chartClicked","zoom","autoScaleYaxis","height","chartHeight","ExportToExcel","fileData","fileName","btnName","showIcon","apiData","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","exportToCSV","isReclaimAllowed","_thisClaim","claim_status","EVALUATED","createReClaim","reClaimingMsg","warning","setReClaimingMsg","setReClaiming","reClaiming","require","addFooters","pageCount","internal","getNumberOfPages","setFont","setFontSize","setPage","String","generatePDF","reportSettings","callBack","orientation","lMargin","jsPDF","setTextColor","addImage","Logo","getWidth","institute","lines","splitTextToSize","subject","pdfInMM","subjectTitle","getTextWidth","addPage","autoTable","html","startY","margin","cellPadding","rowHeight","bodyStyles","valign","columnStyles","cellWidth","tableWidth","finalY","lastAutoTable","doneBy","save","returnPromise","then","CandidateAnswersDetails","tomorrow","setDate","setClaim","compareWithToday","isPlansActive","activePlans","plan","startDate","start_date","endDate","end_date","type_status","SessionPlanTypeStatus","OPEN","ChooseSession","searched","selectedPlan","setSelectedPlan","setSearch","allSession","chooseAll","currentSelected","setSelectSession","searchData","type_title","EmbeddedQuestion","selectedQuestion","language","questionAnswers","addAnswer","newTextResult","question","findQuestionType","questionTypeElementsType","Embedded","answeredQuestions","userQuestionAnswers","question_id","originalText","reference","sub_question","answerCheck","answered","QuestionForEmbedded","SingleMultiple","select","alert","ShortAnswer","returnSelect","typeShort","QuestionPreview","doExam","candidateExam","setSelectedExamQuestion","setQuestionLanguage","selectLang","setSelectLang","selectedLanguage","setSelectedLanguage","filterLanguages","langs","langItem","testLangQ","QuestionLanguages","l","LoadingType","white","question_answers","Hybrid","MultipleChoice","available_answers","selectedQuestionAnswer","selectedAns","answerQuestionFn","TrueFalse","candidate_exam","Matching","selectedExam","shuffledAnswers","Shuffle","SimpleCalculate","Numeric","CalculatedMultipleChoice","Essay","wholeQuestion","ViewRequirements","_AnswersDetails","setLoadingStatus","loadingStatus","user_exams_done","loadExamsDone","requestUserAnswers","userAnswersTotalMarks","user_marks","user_exam_details","discription","termes","answersList","submitQuestionAnswer","submitExam","setSubmitModal","is_deleted","chapters","customNumber","showCorrectAnswer","FC_GetProfileDetails","LoadCandidateApplications","setSelectedCandidateExam","setSelectedCourse","setSelectedPosition","InitializeExamDetails","AddUserApplication","loadApplicationPeriods","FC_ApplicationPositionDistinctCategory","checkAnswer","checkA","tes","addAnswerItemFn","newAnswers","questionAnswer","oldAnswers","selAns","tester","temp","t","newAnswersMultiple","xItem","SimpleCalculated","answeredValue","checkB","minHeight","Numerical","getRandomArbitrary","MatchingSelect","closeWindow","selectedAnswer","findWord","checkIfSelected","displayWindow","setDisplayWindow","setSelectedAnswer","ans","selectedQuestionId","selectedLang","ansi","testing","lang","testLang","checkE","testAnswerLang","it","checkAnswerStatus","arr","ReturnMatchingStatus","newItem","selectedStatus","sheet_id","ClaimFormComponent","isDocumentIdValid","info","isApplicationIdValid","app_id","app","isExamIdValid","candidate_applications","_isDocumentIdValid","_isApplicationIdValid","_isExamIdValid","application_period","application_history","fileId","sessionId","rules","right_click_enabled","copy_enabled","paste_enabled","stop_candidate_when_comeback","allow_to_leave_browser","resultDiv","subQuestionType","userAnswer","userAnswerSingle","userAnswer1","userAnswerMatch","userAnswerTureFalse","userAnswerNumerical","userAnswerSimpleCalculate","userAnswerShortAnswer","userAnswerEssay","FindAnswer","UserAnswersSel","SubQ","findQType","user_answer","testQ","changed","QuestionForHybrid","Calculated","FindAnswerHybrid","maxHeight","stri","fromCharCode","charCodeAt","getFailedExam","allCourses","tooday","myDate","todayConverted","ChangeLocationComponent","setDisplay","changeLocation","_CandidateExams","setloadingExamsDone","loadingExamsDone","loadCandidateExams","QBank","candidateExams","loadUserProfileDetails","InitializationFn","user_exams_temp","center_id","doing_exam","periods","selected_period","district_id","room_id","loadUserApplications","findLocation","updateLocation","selectedCourse","centersModal","maxExamModal","selectedPosition","successMessage","updateLocationFunction","addLocation","location","proctoring_type","selPeriod","applicationPeriods","removeDuplicatesExams","removeDuplicatesNotPreparedExams","setTimeOut","temps","activeExams","selectApplication","setMaxExamModal","closeModal","FC_Access","UserAccessList","MY_APPLICATION","view","selected_exam_id","selected_exam_details","to","preparedExam","center_name","room_number","school_levels","UserExamStatus","Editing","Paused","Done","Removed","found","duration_min","getMinutesFromTwoDates","timeout","returnString","days","notPreparedExam","positionCourses","CandidateExams","DashboardLabelItem","FaUsers","countOver","numCols","childrenPosition","claimList","loadingClaimTypes","setLoadingClaimTypes","countClaims","Fragment","isLoading","selectPeriod","getRejectedApplicants","applicationData","objList","product","flag","prop","DocumentTitleData","documentData","documentTemp","company","end_year","school_id","start_year","year","doc_title","getRejectedDocuments","AnswersTypesCollection","HybridAnswers","hybrid","isActivationAllowed","thisPlans","getPlanTypeByKey","allPlanTypes","viewThisSession","thisPlan","planEndDate","planStartDate","CLOSED","SessionDetails","handlePlanActivation","newState","newData","allowed_claim_level","history","setViewThisSession","ClaimTypesEnum","setViewPosition","viewPosition","district_name","loadingRejectedApplications","setLoadingRejectedApplications","loadingRejectedDocuments","setLoadingRejectedDocuments","COMPLETED","document_id","marks_publication","placement","displayDocClaimTitle","allCourse","setClaimForm","claimForm","loadClaims","setSession","isDeleteAllowed","thisCLaim","ClaimApplView","ClaimExamView","CandidateClaim","setError","defaultReportContent","claimReportContentKeyInterface","ClaimingReport","thisLevel","setThisLevel","downloading","setDownloading","claimToPrint","setClaimToPrint","sortProperty","setSortProperty","isSorted","setIsSorted","sortOrder","setSortOrder","generateReportModal","setGenerateReportModal","setReportTitle","reportContent","setReportContent","selectAll","setSelectAll","setSelectPeriod","setSort","thisProperty","updateClaimToPrint","isChangeAllowed","FC_FilterClaims","claimLevel","selectedType","currentType","levels","ClaimLevels","reportType","querySelectorAll","FC_GeneratePDF","sortThisArray","findIndex","newArray","isSelectAllNeeded","updateReportContent","currentState","resetReportContent"],"mappings":"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","file":"static/js/22.1c5b9e8f.chunk.js","sourcesContent":["import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdCancel, MdInfoOutline } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadQuestionTypes,\n  PushPopupAlert,\n  questionTypesStoreInterface,\n} from \"../../../actions\";\nimport { evaluateClaim } from \"../../../actions/claiming\";\nimport { AnswersDetails } from \"../../../components/AnswersDetails/AnswersDetails\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimExamResultsDetails,\n  claimReasonInterface,\n  ClaimStatus,\n  ClaimTypesInterfaceAPI,\n  course,\n} from \"../../../interfaces\";\nimport { ExamAnswerSheetDone } from \"../../../interfaces/exam\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { showDate } from \"../../../utils/functions\";\nimport { claimShowAnswer } from \"../Candidate/ExaminationFormView\";\nimport { isClaimEvaluated } from \"../ClaimDocView\";\nimport { claimResponseBody } from \"./AdminClaimDocView\";\n\nenum viewTabs {\n  profile = \"Applicant Profile\",\n  exam = \"Exam Details\",\n}\n\ntype AdminClaimExamViewProps = {\n  thisExamSheet: ClaimExamResultsDetails;\n  thisExam: course;\n  thisClaim: CandidateClaimInterface;\n  claimTypes: ClaimTypesInterfaceAPI[];\n  claimReasons: claimReasonInterface[] | null;\n\n  // REDUX ==================\n  auth: Auth;\n  questionTypes: questionTypesStoreInterface;\n  evaluateClaim: Function;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  PushPopupAlert: Function;\n};\n\nconst AdminClaimExamView: React.FC<AdminClaimExamViewProps> = (props) => {\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n  const [loading, setLoading] = useState(true);\n  const [actionTaken, setActionTaken] = useState<ClaimDecisionStatus | null>(\n    null\n  );\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [responseMsg, setResponseMsg] = useState<string>(\"\");\n  const [marks, setMarks] = useState<number>(0);\n  const [selectedTab, setSelectedTab] = useState<viewTabs>(viewTabs.profile);\n\n  useEffect(() => {\n    if (\n      props.questionTypes.questionTypes === null ||\n      (props.questionTypes.questionTypes.length === 0 && loading)\n    ) {\n      props.loadQuestionTypes(setLoading);\n    } else if (loading) {\n      setLoading(false);\n    }\n  }, [loading, props]);\n\n  if (loading || props.questionTypes.questionTypes === null) {\n    return <Loading />;\n  }\n\n  const handleVerify = async () => {\n    if (!actionTaken) {\n      setFormError({\n        element: \"action\",\n        msg: \"Action is required!\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    if (\n      actionTaken === ClaimDecisionStatus.ACCEPTED &&\n      (marks <= 0 || marks > 100)\n    ) {\n      setFormError({\n        element: \"marks\",\n        msg: \"Invalid marks, marks must be between 1 and 10\",\n      });\n\n      return setLoadingRequest(false);\n    }\n\n    if (isEmptyOrSpaces(responseMsg)) {\n      setFormError({\n        element: \"comment\",\n        msg: \"Reason of rejection is required\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    let subClaim = props.thisClaim.claims.find(\n      (item) => item.level === props.thisClaim.claim_level\n    );\n\n    if (subClaim) {\n      setLoadingRequest(true);\n      const api_body: claimResponseBody = {\n        sub_claim_id: subClaim.id,\n        evaluation_comment: responseMsg,\n        evaluated_by: props.auth.user.user_id,\n        decision_taken_status: actionTaken,\n        evaluator_name: props.auth.user.fname + \" \" + props.auth.user.lname,\n        evaluator_email: props.auth.user.email,\n      };\n\n      try {\n        const res = await axios.put<CandidateClaimInterface>(\n          `${API.CLAIMING}/user/evaluate/${props.thisClaim._id}`,\n          api_body\n        );\n        if (res) {\n          console.log({ evaluate_claim_res: res });\n          props.evaluateClaim(res.data);\n          // REVALIDATED DOCUMENT IF IT IS APPROVED =========================\n          if (actionTaken === ClaimDecisionStatus.ACCEPTED) {\n            await handleMarksAddition();\n          }\n          props.PushPopupAlert({\n            title: `Claim responded successfully!`,\n            theme: PopupAlertTheme.success,\n          });\n          // setDocumentId(\"null\");\n          setResponseMsg(\"\");\n          setActionTaken(null);\n        }\n      } catch (error) {\n        console.error(error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      setLoadingRequest(false);\n    }\n  };\n\n  const handleMarksAddition = async () => {\n    try {\n      await axios.put(`${API.DO_EXAM}/answersheet/user/marks/update`, {\n        answer_sheet_id: props.thisClaim.claiming_on_id,\n        marks: marks,\n      });\n    } catch (error) {\n      console.error(error);\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  // const getAnswersByQuestion = (question_id: string): ClaimGetUserAnswers[] => {\n  //   return props.thisExamSheet.user_answers.filter(\n  //     (item) => item.question === question_id\n  //   );\n  // };\n\n  const claimCandidateAnswers = (): ExamAnswerSheetDone[] => {\n    let result: ExamAnswerSheetDone[] = [\n      {\n        exam_location: props.thisExamSheet.exam_location,\n        questions: props.thisExamSheet.questions,\n        user_answers: props.thisExamSheet.user_answers,\n        user: props.thisExamSheet.user,\n        period: props.thisExamSheet.period,\n        course: props.thisExamSheet.course,\n        exam_paper: props.thisExamSheet.exam_paper,\n        user_status: props.thisExamSheet.user_status,\n        used_duration: props.thisExamSheet.used_duration,\n        total_marks: props.thisExamSheet.total_marks,\n        number_of_question_answered:\n          props.thisExamSheet.number_of_question_answered,\n        // start_time: string,\n        // end_time: string,\n        exam_total_marks: props.thisExamSheet.exam_total_marks,\n        exam_start_time: props.thisExamSheet.exam_start_time,\n        exam_end_time: props.thisExamSheet.exam_end_time,\n        exam_date: props.thisExamSheet.exam_date,\n        status: props.thisExamSheet.status,\n        createdAt: props.thisExamSheet.createdAt,\n        updatedAt: props.thisExamSheet.updatedAt,\n        disability: false,\n        gender: \"\",\n        in_education: false,\n        position: \"\",\n        answer_sheet_id: props.thisExamSheet.answer_sheet_id,\n      },\n    ];\n    // props.thisExamSheet\n\n    return result;\n  };\n\n  return (\n    <section className=\"\">\n      {/* #################### VIEW TABS ################################## */}\n      <div className=\"flex flex-row items-center mx-4\">\n        {Object.values(viewTabs).map((item, i) => (\n          <div\n            key={i}\n            onClick={() => setSelectedTab(item)}\n            className={`animate__animated ${\n              selectedTab === item\n                ? \"bg-blue-100 border-blue-600 text-blue-600 animate__zoomIn\"\n                : \"bg-white border-white text-gray-600\"\n            } hover:bg-blue-100 px-4 py-2 cursor-pointer font-bold border-b-4 hover:border-blue-600 hover:text-blue-600 rounded-t mt-1 mr-1`}\n          >\n            {item}\n          </div>\n        ))}\n      </div>\n      {/* #################### END VIEW TABS ################################## */}\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          {/* DISPLAY POSITION ==================================================== */}\n          {selectedTab === viewTabs.exam && (\n            <section className=\"w-full my-1 animate__animated animate__fadeIn rounded\">\n              <div className=\"bg-white w-full rounded p-2 mb-2\">\n                <AnswersDetails\n                  showAnswers={true}\n                  exam_id={claimShowAnswer(\n                    props.thisExamSheet,\n                    props.thisExam.course_name\n                  )}\n                  allAnswers={claimCandidateAnswers()}\n                  user_id={props.thisExamSheet.user}\n                />\n              </div>\n            </section>\n          )}\n          {/* END DISPLAY POSITION ==================================================== */}\n          {/* -------------------------------------------------------------------------------- */}\n          {/* DISPLAY PROFILE ==================================================== */}\n          {selectedTab === viewTabs.profile && (\n            <section className=\"w-full my-2 animate__animated animate__fadeIn rounded\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center gap-2\">\n                  <span className={`italic text-gray-600`}>Names:</span>\n                  <span className=\"text-gray-800 font-bold text-xl\">\n                    {props.thisClaim.userDetails.user_info.fname +\n                      \" \" +\n                      props.thisClaim.userDetails.user_info.lname}\n                  </span>\n                </div>\n              </div>\n            </section>\n          )}\n          {/* END DISPLAY PROFILE ==================================================== */}\n          {selectedTab === viewTabs.profile && (\n            <div className=\"\">\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Email:</span>\n                <span className=\"text-gray-800 font-bold text-lg\">\n                  {props.thisClaim.userDetails.email}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Phone:</span>\n                <span className=\"text-gray-800 font-bold text-lg\">\n                  {props.thisClaim.userDetails.phone_number}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Gender:</span>\n                <span className=\"text-gray-800 font-bold text-lg\">\n                  {props.thisClaim.userDetails.user_info.sex === \"M\"\n                    ? \"Male\"\n                    : \"Female\"}\n                </span>\n              </div>\n            </div>\n          )}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVEL 1 DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              <div className=\"text-gray-700 italic font-bold\">\n                Claim Comment (level {index + 1})\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2 mt-1 border rounded px-2 py-1 bg-gray-50\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-600 text-xs\">\n                  {showDate(claim.createdAt)}\n                  {/* {showDate(claim.createdAt) +\n                    \" at \" +\n                    moment.unix(claim.date_created).format(\"MM/DD/YYYY\")} */}\n                </span>\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-700 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n            </section>\n          ))}\n        {/* END CLAIM LEVEL 1 DETAILS ==================================================== */}\n      </div>\n\n      {/* FOOTER INITIAL ========================================== */}\n      {!actionTaken && (\n        <section className=\"flex items-center justify-between bg-gray-50 rounded mt-3\">\n          {/* SHOWING STATUS ===================================== */}\n          <div className=\"mx-4 my-4\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n          </div>\n\n          {props.thisClaim.last_claim_status === ClaimStatus.PENDING && (\n            <div className=\"flex items-center gap-2 px-2\">\n              <button\n                className={`px-4 py-2 font-semibold text-red-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-red-700 hover:bg-red-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.REJECTED);\n                }}\n              >\n                <MdCancel className=\"w-5 h-5\" />\n                <span>Reject</span>\n              </button>\n              <button\n                className={`px-4 py-2 font-semibold text-blue-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-blue-700 hover:bg-blue-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.ACCEPTED);\n                }}\n              >\n                <FaRegCheckCircle className=\"w-5 h-5\" />\n                <span>Accept</span>\n              </button>\n            </div>\n          )}\n        </section>\n      )}\n      {/* END FOOTER INITIAL ========================================== */}\n\n      {/* ======================================================== */}\n      {/* FOOTER RESPONSE ========================================== */}\n      {actionTaken && (\n        <section className=\"my-5 overflow-x-auto\">\n          <div className=\"italic text-gray-700 text-base my-1 mx-2\">\n            Selected decision:{\" \"}\n            <span\n              className={`font-semibold text-lg ${\n                actionTaken === ClaimDecisionStatus.ACCEPTED\n                  ? \"text-blue-700\"\n                  : \"text-yellow-800\"\n              }`}\n            >\n              {actionTaken === ClaimDecisionStatus.ACCEPTED\n                ? \"Approved\"\n                : \"Rejected\"}\n            </span>\n          </div>\n          {/* right part */}\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full space-y-1\">\n              {actionTaken === ClaimDecisionStatus.ACCEPTED && (\n                <div className=\"flex items-center justify-end w-full gap-2\">\n                  <span className=\"font-semibold\">Addition marks</span>\n                  <div className=\"px-2\">\n                    <input\n                      placeholder={`Addition marks`}\n                      className={`border border-${\n                        formError && formError.element === \"marks\"\n                          ? \"red\"\n                          : \"gray\"\n                      }-400 rounded px-3 py-1 w-auto focus:outline-none`}\n                      value={marks}\n                      onChange={(e) => {\n                        setMarks(Number(e.target.value));\n                        setFormError(null);\n                      }}\n                      disabled={loadingRequest}\n                    />\n                    {formError && formError.element === \"marks\" && (\n                      <p className=\"text-red-800\">{formError.msg}</p>\n                    )}\n                  </div>\n                </div>\n              )}\n              <div className=\"w-full px-2\">\n                <textarea\n                  placeholder={`Reason of your decision...`}\n                  cols={50}\n                  rows={actionTaken === ClaimDecisionStatus.ACCEPTED ? 2 : 3}\n                  className={`border border-${\n                    formError && formError.element === \"comment\"\n                      ? \"red\"\n                      : \"gray\"\n                  }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                  style={{ resize: \"none\" }}\n                  value={responseMsg}\n                  onChange={(e) => {\n                    setResponseMsg(e.target.value);\n                    setFormError(null);\n                  }}\n                  disabled={loadingRequest}\n                ></textarea>\n                {formError && formError.element === \"comment\" && (\n                  <p className=\"text-red-800\">{formError.msg}</p>\n                )}\n              </div>\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  setResponseMsg(\"\");\n                  setActionTaken(null);\n                  setFormError(null);\n                }}\n                disabled={loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={loadingRequest}\n                onClick={() =>\n                  window.confirm(\n                    `Are you sure you want to ${\n                      actionTaken === ClaimDecisionStatus.ACCEPTED\n                        ? \"approve\"\n                        : \"rejected\"\n                    } this document?`\n                  ) && handleVerify()\n                }\n              >\n                {loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n          {/* end right part */}\n        </section>\n      )}\n      {/* END FOOTER RESPONSE ========================================== */}\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  questionTypes,\n}: StoreState): {\n  auth: Auth;\n  questionTypes: questionTypesStoreInterface;\n} => {\n  return {\n    auth,\n    questionTypes,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    loadQuestionTypes,\n    evaluateClaim,\n    PushPopupAlert,\n  })(AdminClaimExamView)\n);\n","import React, { useState } from \"react\";\nimport { CgImage } from \"react-icons/cg\";\nimport Loading from \"../../components/Loading/Loading\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport Table from \"../../components/Table/Table\";\nimport ViewPDF from \"../../components/ViewPDF/ViewPDF\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { UserDocumentsInterface } from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { fullScreen, getFileType, isFileImage } from \"../../utils/functions\";\nimport { PositionRequirementTableInterface } from \"./ViewPosition\";\n\ninterface RequirementProps {\n  requirements: PositionRequirementTableInterface[];\n  userDocs: UserDocumentsInterface[];\n}\n\nconst ViewDocRequirements: React.FC<RequirementProps> = (props) => {\n  const [viewDoc, setViewDoc] = useState<UserDocumentsInterface | null>(null);\n  const [loadingImage, setLoadingImage] = useState<boolean>(false);\n  const [isFullscreen, setSetFullscreen] = useState<boolean>(false);\n\n  const isDocumentExist = (\n    category_id: string,\n    sub_category_id: string,\n    field_id: string\n  ): UserDocumentsInterface | undefined => {\n    if (!isEmptyOrSpaces(category_id)) {\n      let userDocs: UserDocumentsInterface[] = props.userDocs.filter(\n        (item) => item.category_id === category_id\n      );\n\n      if (!isEmptyOrSpaces(sub_category_id)) {\n        userDocs = userDocs.filter(\n          (item) =>\n            item.validation_status === \"approved\" &&\n            item.category_id === category_id &&\n            item.sub_category_id === sub_category_id\n        );\n      }\n\n      if (!isEmptyOrSpaces(field_id)) {\n        return userDocs.find(\n          (item) =>\n            item.validation_status === \"approved\" &&\n            item.category_id === category_id &&\n            item.category_subcategory_data === field_id\n        );\n      }\n    }\n    return undefined;\n  };\n  const tableData = (): JSX.Element[] => {\n    let data: PositionRequirementTableInterface[] = props.requirements;\n    if (data.length === 0) {\n      return [\n        <tr key={153} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={3}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    return data.map((item, index) => (\n      <tr\n        key={index + item.field_id}\n        className={`border-b border-gray-200 hover:bg-gray-100 ${\n          !isDocumentExist(\n            item.category_id,\n            item.subcategory_id,\n            item.field_id\n          ) && \"text-yellow-800\"\n        }`}\n      >\n        <td className=\"p-3 text-left whitespace-nowrap\">{index + 1})</td>\n        <td className=\"p-3 text-left\">\n          <span>\n            {isEmptyOrSpaces(item.field_id)\n              ? \"Any \" + item.subcategory_title\n              : item.subcategory_title + \" in \" + item.field_title}\n          </span>\n        </td>\n        <td className={`p-3 text-left text-lg italic`}>\n          {isDocumentExist(item.category_id, item.subcategory_id, item.field_id)\n            ? \"Found\"\n            : \"Not found\"}\n        </td>\n        <td className={`p-3 text-right text-lg italic`}>\n          {isDocumentExist(\n            item.category_id,\n            item.subcategory_id,\n            item.field_id\n          ) && (\n            <button\n              className=\"bg-gray-200 hover:bg-gray-300 rounded font-medium px-2 py-1 focus:outline-none\"\n              onClick={() => {\n                setViewDoc(\n                  isDocumentExist(\n                    item.category_id,\n                    item.subcategory_id,\n                    item.field_id\n                  )!\n                );\n                setLoadingImage(true);\n              }}\n            >\n              View Doc\n            </button>\n          )}\n        </td>\n      </tr>\n    ));\n  };\n  const handleFullScreen = () => {\n    if (isFullscreen) {\n      fullScreen(\"doc-img\", \"CLOSE\");\n      setSetFullscreen(false);\n    } else {\n      setSetFullscreen(true);\n      fullScreen(\"doc-img\", \"OPEN\");\n    }\n  };\n\n  return (\n    <div>\n      <Table\n        columns={[\n          { columnTitle: \"#\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Qualification\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Status\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n        ]}\n        rows={tableData}\n        pagination={false}\n        search={false}\n        thColor=\"gray\"\n      />\n\n      {viewDoc && (\n        <Modal\n          backDrop={true}\n          theme={Themes.default}\n          close={() => {\n            setViewDoc(null);\n            setLoadingImage(false);\n          }}\n          backDropClose={false}\n          widthSizeClass={ModalSize.extraLarge}\n          displayClose={true}\n          padding={{\n            title: true,\n            body: false,\n            footer: false,\n          }}\n          title=\"Doc view\"\n        >\n          {loadingImage && <Loading />}\n          {viewDoc.files && viewDoc.files.length > 0 ? (\n            isFileImage(getFileType(viewDoc.files)) ? (\n              <div className=\"relative\">\n                <img\n                  src={API.AUTH_FILES + viewDoc.files}\n                  alt=\"\"\n                  className={`w-full md:w-auto h-auto md:max-h-screen mx-auto ${\n                    loadingImage && \"hidden\"\n                  }`}\n                  id=\"doc-img\"\n                  onLoad={() => setLoadingImage(false)}\n                  onDoubleClick={() => handleFullScreen()}\n                />\n              </div>\n            ) : (\n              <ViewPDF\n                file_url={API.AUTH_FILES + viewDoc.files}\n                class_name={`w-full h-screen md:max-h-screen mx-auto ${\n                  loadingImage && \"hidden\"\n                }`}\n                frame_title={\"application PDF file view\"}\n                setLoadingFile={setLoadingImage}\n              />\n            )\n          ) : (\n            <div className=\"text-center text-red-400 py-8 animate__animated animate__fadeIn\">\n              <CgImage className=\"mx-auto w-40 h-40\" />\n              <span className=\"font-semibold text-4xl\">No Files Provided</span>\n            </div>\n          )}\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default React.memo(ViewDocRequirements);\n","import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdCancel, MdInfoOutline, MdTurnedIn } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert, reAssessApplication } from \"../../../actions\";\nimport { evaluateClaim } from \"../../../actions/claiming\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  allClaimApplicationInterface,\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  claimReasonInterface,\n  ClaimStatus,\n  ClaimTypesInterfaceAPI,\n  PositionAPI,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { DATE, showDate } from \"../../../utils/functions\";\nimport { PositionRequirementTableInterface } from \"../../Positions/ViewPosition\";\nimport ViewDocRequirements from \"../../Positions/ViewDocRequirements\";\nimport { isClaimEvaluated } from \"../ClaimDocView\";\nimport { claimResponseBody } from \"./AdminClaimDocView\";\n\nexport const FC_AdminApplicationPositionDistinctCategory = (\n  thisPosition: PositionAPI,\n  documentCategories: DocumentReducerInterface\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n  let requirements = thisPosition.requirements;\n  // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n  for (let req in requirements) {\n    let thisRequirements = requirements[req];\n    // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisCategory = documentCategories.documentCategory\n      ? documentCategories.documentCategory.find(\n          (item) =>\n            item.user_detail_category_id ===\n            thisRequirements.category.user_detail_category_id\n        ) && {\n          title: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.title,\n          user_detail_category_id: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.user_detail_category_id,\n        }\n      : {\n          title: \"\",\n          user_detail_category_id:\n            thisRequirements.category.user_detail_category_id,\n        };\n    // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisSubCategory = documentCategories.documentSubCategory\n      ? documentCategories.documentSubCategory.find(\n          (item) =>\n            item.user_detail_subcategory_id ===\n            thisRequirements.subcategory.user_detail_subcategory_id\n        )\n        ? {\n            title: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.title,\n            user_detail_subcategory_id:\n              documentCategories.documentSubCategory.find(\n                (item) =>\n                  item.user_detail_subcategory_id ===\n                  thisRequirements.subcategory.user_detail_subcategory_id\n              )!.user_detail_subcategory_id,\n            category_id: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.category_id,\n          }\n        : {\n            title: \"\",\n            user_detail_subcategory_id:\n              thisRequirements.subcategory.user_detail_subcategory_id,\n            category_id: \"\",\n          }\n      : {\n          title: \"\",\n          user_detail_subcategory_id:\n            thisRequirements.subcategory.user_detail_subcategory_id,\n          category_id: \"\",\n        };\n    // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n    if (thisCategory) {\n      for (let field in thisRequirements.position_requirement) {\n        // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n        let thisField = documentCategories.documentFields\n          ? documentCategories.documentFields.find(\n              (item) =>\n                item._id === thisRequirements.position_requirement[field]._id\n            )\n            ? {\n                title: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!.title,\n                _id: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n            : {\n                title: \"\",\n                _id: thisRequirements.position_requirement[field]._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n          : {\n              title: \"\",\n              _id: thisRequirements.position_requirement[field]._id,\n              required: thisRequirements.position_requirement[field].required,\n            };\n        // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n        PositionsTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: thisField.title,\n          field_id: thisField._id,\n          required: thisField.required,\n        });\n      }\n\n      // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n      ) {\n        DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n        DistinctCategoriesTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: \"\",\n          subcategory_title: \"\",\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n\n      // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctSubCategoriesIds.includes(\n          thisSubCategory.user_detail_subcategory_id\n        )\n      ) {\n        DistinctSubCategoriesIds.push(\n          thisSubCategory.user_detail_subcategory_id\n        );\n        DistinctSubCategoriesTemp.push({\n          category_id: thisSubCategory.category_id,\n          category_title: \"\",\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n    }\n  }\n  // DistinctCategoriesIds.;\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\ntype AdminClaimAppViewProps = {\n  thisApplication: allClaimApplicationInterface;\n  thisPosition: PositionAPI;\n  documentCategories: DocumentReducerInterface;\n  thisClaim: CandidateClaimInterface;\n  claimTypes: ClaimTypesInterfaceAPI[];\n  systemPositions: PositionAPI[];\n  claimReasons: claimReasonInterface[] | null;\n\n  // REDUX ==================\n  auth: Auth;\n  reAssessApplication: Function;\n  evaluateClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst AdminClaimAppView: React.FC<AdminClaimAppViewProps> = (props) => {\n  const [viewPosition, setViewPosition] = useState<boolean>(true);\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n  const [actionTaken, setActionTaken] = useState<ClaimDecisionStatus | null>(\n    null\n  );\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [responseMsg, setResponseMsg] = useState<string>(\"\");\n\n  const handleVerify = async () => {\n    if (!actionTaken) {\n      setFormError({\n        element: \"action\",\n        msg: \"Action is required!\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    if (isEmptyOrSpaces(responseMsg)) {\n      setFormError({\n        element: \"comment\",\n        msg: \"Reason of rejection is required\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    let subClaim = props.thisClaim.claims.find(\n      (item) => item.level === props.thisClaim.claim_level\n    );\n\n    if (subClaim) {\n      setLoadingRequest(true);\n      const api_body: claimResponseBody = {\n        sub_claim_id: subClaim.id,\n        evaluation_comment: responseMsg,\n        evaluated_by: props.auth.user.user_id,\n        decision_taken_status: actionTaken,\n        evaluator_name: props.auth.user.fname + \" \" + props.auth.user.lname,\n        evaluator_email: props.auth.user.email,\n      };\n\n      try {\n        const res = await axios.put<CandidateClaimInterface>(\n          `${API.CLAIMING}/user/evaluate/${props.thisClaim._id}`,\n          api_body\n        );\n        if (res) {\n          console.log(\"====================================\");\n          console.log({ evaluate_claim_res: res });\n          console.log(\"====================================\");\n          props.evaluateClaim(res.data);\n          // REVALIDATED DOCUMENT IF IT IS APPROVED =========================\n          if (actionTaken === ClaimDecisionStatus.ACCEPTED) {\n            await overrideDecision();\n          }\n          props.PushPopupAlert({\n            title: `Claim responded successfully!`,\n            theme: PopupAlertTheme.success,\n          });\n          // setDocumentId(\"null\");\n          setResponseMsg(\"\");\n          setActionTaken(null);\n        }\n      } catch (error) {\n        console.error(error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      setLoadingRequest(false);\n    }\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  const overrideDecision = async () => {\n    try {\n      const res = await axios.patch(\n        `${API.APPLICATION}/tolerateappl/${props.thisClaim.claiming_on_id}`,\n        {\n          user_id: props.auth.user.user_id,\n          email: props.thisClaim.userDetails.email,\n          phone_number: props.thisClaim.userDetails.phone_number,\n          comment: responseMsg,\n          application_status: ApplicationStates.Shortlisted,\n        }\n      );\n\n      res.data &&\n        props.reAssessApplication({\n          application_id: props.thisClaim.claiming_on_id,\n          application_status: ApplicationStates.Shortlisted,\n        });\n    } catch (error) {\n      console.error({ code_error: error });\n      PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      // errorToText(error);\n    }\n    setLoadingRequest(false);\n  };\n\n  const getPositionById = (position_id: string): PositionAPI | undefined => {\n    let result = props.systemPositions.find(\n      (item) => item.position_id === position_id\n    );\n\n    return result;\n  };\n\n  return (\n    <section>\n      <div className=\"w-full py-1 divide-y-2 space-y-4\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          {/* DISPLAY PROFILE ==================================================== */}\n          <section className=\"w-full mb-4 -mt-2 pb-3 px-4 bg-white\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center gap-2 px-12\">\n                <span className={`italic text-blue-600`}>Applicant:</span>\n                <span className=\"text-blue-800 font-bold text-xl\">\n                  {props.thisClaim.userDetails.user_info.fname +\n                    \" \" +\n                    props.thisClaim.userDetails.user_info.lname}\n                </span>\n              </div>\n              {false && (\n                <button\n                  type=\"button\"\n                  className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                  onClick={() => setViewPosition(!viewPosition)}\n                >\n                  {viewPosition ? \"Hide\" : \"More\"}\n                </button>\n              )}\n            </div>\n          </section>\n          {/* DISPLAY POSITION ==================================================== */}\n          <section className=\"w-full mb-4 bg-white px-4 py-2 rounded\">\n            <div className=\"bg-white w-full\">\n              <div className=\"text-gray-800 text-2xl font-bold\">\n                Position Details\n              </div>\n              <div className=\"flex items-center\">\n                <div className=\"flex items-center gap-2\">\n                  <span className={`italic text-gray-600`}>Name:</span>\n                  <span className=\"text-gray-800 font-bold text-2xl\">\n                    {getPositionById(props.thisApplication.position)\n                      ? getPositionById(props.thisApplication.position)!\n                          .position_title\n                      : \"Position not found\"}\n                  </span>\n                </div>\n              </div>\n              <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                <span className={`italic`}>Desc:</span>\n                <span className=\"font-semibold\">\n                  {getPositionById(props.thisApplication.position)\n                    ? getPositionById(props.thisApplication.position)!\n                        .description\n                    : \"\"}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                <span className={`italic`}>School level:</span>\n                <span className=\"font-semibold\">\n                  {getPositionById(props.thisApplication.position)\n                    ? getPositionById(props.thisApplication.position)!\n                        .school_level_id.school_level_name\n                    : \"\"}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                <span className={`italic`}>Institute:</span>\n                <span className=\"font-semibold\">\n                  {getPositionById(props.thisApplication.position)\n                    ? getPositionById(props.thisApplication.position)!\n                        .education_institute_id.education_category_title\n                    : \"\"}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                <span className={`italic`}>Exams:</span>\n                <span className=\"flex items-center gap-2\">\n                  {getPositionById(props.thisApplication.position) ? (\n                    getPositionById(\n                      props.thisApplication.position\n                    )!.courses.map((item, index) => (\n                      <div\n                        key={index + item.course_id}\n                        className=\"flex items-center gap-1\"\n                      >\n                        <span className=\"font-semibold\">\n                          {item.course_name}\n                        </span>\n                        <span className=\"text-gray-600\">\n                          ({item.course_code})\n                        </span>\n                        {index !==\n                          getPositionById(props.thisApplication.position)!\n                            .courses.length -\n                            1 && \",\"}\n                      </div>\n                    ))\n                  ) : (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"No courses found\"}\n                    />\n                  )}\n                </span>\n              </div>\n\n              <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                Position Requirements\n              </div>\n              {getPositionById(props.thisApplication.position) ? (\n                getPositionById(props.thisApplication.position)!.requirements\n                  .length > 0 ? (\n                  FC_AdminApplicationPositionDistinctCategory(\n                    getPositionById(props.thisApplication.position)!,\n                    props.documentCategories\n                  ).DistinctCategoriesTemp.map((item, index) => (\n                    <div\n                      className=\"bg-gray-100props.thisApplication.position rounded p-2\"\n                      key={index + item.category_id}\n                    >\n                      <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                        <MdTurnedIn />\n                        <span>{item.category_title}</span>\n                      </div>\n                      <div className=\"border bg-white mt-1\">\n                        <ViewDocRequirements\n                          requirements={FC_AdminApplicationPositionDistinctCategory(\n                            getPositionById(props.thisApplication.position)!,\n                            props.documentCategories\n                          ).PositionsTemp.filter(\n                            (req) => req.category_id === item.category_id\n                          )}\n                          userDocs={props.thisClaim.userDetails.details}\n                        />\n                      </div>\n                    </div>\n                  ))\n                ) : (\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"No requirements\"}\n                  ></NoResult>\n                )\n              ) : (\n                <NoResult\n                  theme={NoResultThemes.Dark}\n                  value={\"No requirements\"}\n                ></NoResult>\n              )}\n            </div>\n          </section>\n          {/* END DISPLAY POSITION ==================================================== */}\n          {/* -------------------------------------------------------------------------------- */}\n          {/* END DISPLAY PROFILE ==================================================== */}\n          {/* {selectedTab === viewTabs.profile && (\n            <div className=\"flex items-center\">\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Position name:</span>\n                <span className=\"text-gray-800 font-bold text-2xl\">\n                  {getPositionById(props.thisApplication.position)\n                    ? getPositionById(props.thisApplication.position)!\n                        .position_title\n                    : \"Position not found\"}\n                </span>\n              </div>\n            </div>\n          )} */}\n          <section className=\"px-4 py-2 bg-white rounded\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Status:</span>\n              <span\n                className={`font-bold ${\n                  props.thisClaim.previous\n                    ? props.thisClaim.previous.status ===\n                      ApplicationStates.Rejected\n                    : props.thisApplication.application_status ===\n                      ApplicationStates.Rejected\n                    ? \"text-yellow-900\"\n                    : \"text-blue-600\"\n                } rounded px-3 py-1`}\n              >\n                {props.thisClaim.previous\n                  ? capitalizeFirstLetter(props.thisClaim.previous.status)\n                  : capitalizeFirstLetter(\n                      props.thisApplication.application_status\n                    )}\n              </span>\n            </div>\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Evaluated by:</span>\n              <span className=\"font-semibold\">\n                {props.thisClaim.previous.evaluater.name}\n              </span>\n            </div>\n            {false && (\n              <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                <span className={`italic`}>Session:</span>\n                <span className=\"font-bold text-gray-900 py-1\">\n                  {props.thisApplication.application_session}\n                </span>\n              </div>\n            )}\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Date:</span>\n              <span className=\"font-bold text-gray-900 py-1\">\n                {DATE(props.thisApplication.createdAt)}\n              </span>\n            </div>\n            <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Reason:</span>\n              <span\n                className=\"font-normal\"\n                dangerouslySetInnerHTML={{\n                  __html: props.thisClaim.previous\n                    ? props.thisClaim.previous.reason\n                    : props.thisApplication.override_by.comment,\n                }}\n              ></span>\n            </div>\n          </section>\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVEL 1 DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section\n              className=\"flex flex-col px-4 pt-2 pb-3 rounded bg-white\"\n              key={index + claim.id}\n            >\n              <div className=\"text-gray-700 italic font-bold\">\n                Claim Comment (level {index + 1})\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2 mt-1 border rounded px-4 py-1 bg-gray-50\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-600 text-xs\">\n                  {showDate(claim.createdAt)}\n                  {/* {showDate(claim.createdAt) +\n                    \" at \" +\n                    moment.unix(claim.date_created).format(\"MM/DD/YYYY\")} */}\n                </span>\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-700 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span\n                        className=\"font-normal\"\n                        dangerouslySetInnerHTML={{\n                          __html: claim.evaluation_comment,\n                        }}\n                      ></span>\n                    </div>\n                  </div>\n                </section>\n              )}\n            </section>\n          ))}\n        {/* END CLAIM LEVEL 1 DETAILS ==================================================== */}\n      </div>\n\n      {/* FOOTER INITIAL ========================================== */}\n      {!actionTaken && (\n        <section className=\"flex items-center justify-between bg-gray-50 rounded mt-3\">\n          {/* SHOWING STATUS ===================================== */}\n          <div className=\"mx-4 my-4\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n          </div>\n\n          {props.thisClaim.last_claim_status === ClaimStatus.PENDING && (\n            <div className=\"flex items-center gap-2 px-2\">\n              <button\n                className={`px-4 py-2 font-semibold text-red-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-red-700 hover:bg-red-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.REJECTED);\n                }}\n              >\n                <MdCancel className=\"w-5 h-5\" />\n                <span>Reject</span>\n              </button>\n              <button\n                className={`px-4 py-2 font-semibold text-blue-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-blue-700 hover:bg-blue-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.ACCEPTED);\n                }}\n              >\n                <FaRegCheckCircle className=\"w-5 h-5\" />\n                <span>Accept</span>\n              </button>\n            </div>\n          )}\n        </section>\n      )}\n      {/* END FOOTER INITIAL ========================================== */}\n\n      {/* ======================================================== */}\n      {/* FOOTER RESPONSE ========================================== */}\n      {actionTaken && (\n        <section className=\"my-5 overflow-x-auto\">\n          <div className=\"italic text-gray-700 text-base my-1 mx-2\">\n            Selected decision:{\" \"}\n            <span\n              className={`font-semibold text-lg ${\n                actionTaken === ClaimDecisionStatus.ACCEPTED\n                  ? \"text-blue-700\"\n                  : \"text-yellow-800\"\n              }`}\n            >\n              {actionTaken === ClaimDecisionStatus.ACCEPTED\n                ? \"Approved\"\n                : \"Rejected\"}\n            </span>\n          </div>\n          {/* right part */}\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your decision...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  formError && formError.element === \"comment\" ? \"red\" : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={responseMsg}\n                onChange={(e) => {\n                  setResponseMsg(e.target.value);\n                  setFormError(null);\n                }}\n                disabled={loadingRequest}\n              ></textarea>\n              {formError && formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  setResponseMsg(\"\");\n                  setActionTaken(null);\n                  setFormError(null);\n                }}\n                disabled={loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={loadingRequest}\n                onClick={() =>\n                  window.confirm(\n                    `Are you sure you want to ${\n                      actionTaken === ClaimDecisionStatus.ACCEPTED\n                        ? \"approve\"\n                        : \"rejected\"\n                    } this document?`\n                  ) && handleVerify()\n                }\n              >\n                {loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n          {/* end right part */}\n        </section>\n      )}\n      {/* END FOOTER RESPONSE ========================================== */}\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n}: StoreState): {\n  auth: Auth;\n} => {\n  return {\n    auth: auth,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    evaluateClaim,\n    reAssessApplication,\n    PushPopupAlert,\n  })(AdminClaimAppView)\n);\n","import axios from \"axios\";\nimport React from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdCancel, MdInfoOutline } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { adminDisplayClaimTitle } from \".\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport { evaluateClaim } from \"../../../actions/claiming\";\nimport { verifyDocument } from \"../../../actions/document\";\nimport { VerifyDocumentInterface } from \"../../../actions/users\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  claimReasonInterface,\n  ClaimStatus,\n  ClaimTypesInterfaceAPI,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport {\n  DocValidationStatusInterface,\n  UserDocumentsInterface,\n} from \"../../../shared/interfaces\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { showDate } from \"../../../utils/functions\";\nimport { isClaimEvaluated } from \"../ClaimDocView\";\n\nexport type claimResponseBody = {\n  sub_claim_id: string;\n  evaluation_comment: string;\n  evaluated_by: string;\n  evaluator_name: string;\n  evaluator_email: string;\n  decision_taken_status: ClaimDecisionStatus;\n};\n\ntype AdminClaimDocViewProps = {\n  thisDoc: UserDocumentsInterface;\n  documentCategories: DocumentReducerInterface;\n  thisClaim: CandidateClaimInterface;\n  claimReasons: claimReasonInterface[] | null;\n  candidateId: string;\n  claimTypes: ClaimTypesInterfaceAPI[];\n  viewImage: boolean;\n  setViewImage: (value: boolean) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  actionTaken: ClaimDecisionStatus | null;\n  setActionTaken: (value: ClaimDecisionStatus | null) => void;\n  responseMsg: string;\n  setResponseMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX ==================\n  auth: Auth;\n  verifyDocument: Function;\n  evaluateClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst AdminClaimDocView: React.FC<AdminClaimDocViewProps> = (props) => {\n  const handleVerify = async () => {\n    if (!props.actionTaken) {\n      props.setFormError({\n        element: \"action\",\n        msg: \"Action is required!\",\n      });\n      return props.setLoadingRequest(false);\n    }\n\n    if (isEmptyOrSpaces(props.responseMsg)) {\n      props.setFormError({\n        element: \"comment\",\n        msg: \"Reason of rejection is required\",\n      });\n      return props.setLoadingRequest(false);\n    }\n\n    let subClaim = props.thisClaim.claims.find(\n      (item) => item.level === props.thisClaim.claim_level\n    );\n\n    if (subClaim) {\n      props.setLoadingRequest(true);\n      const api_body: claimResponseBody = {\n        sub_claim_id: subClaim.id,\n        evaluation_comment: props.responseMsg,\n        evaluated_by: props.auth.user.user_id,\n        decision_taken_status: props.actionTaken,\n        evaluator_name: props.auth.user.fname + \" \" + props.auth.user.lname,\n        evaluator_email: props.auth.user.email,\n      };\n\n      try {\n        const res = await axios.put<CandidateClaimInterface>(\n          `${API.CLAIMING}/user/evaluate/${props.thisClaim._id}`,\n          api_body\n        );\n        if (res) {\n          console.log({ evaluate_claim_res: res });\n          props.evaluateClaim(res.data);\n          // REVALIDATED DOCUMENT IF IT IS APPROVED =========================\n          if (props.actionTaken === ClaimDecisionStatus.ACCEPTED) {\n            await FC_DocValidation();\n          }\n          props.PushPopupAlert({\n            title: `Claim responded successfully!`,\n            theme: PopupAlertTheme.success,\n          });\n          // setDocumentId(\"null\");\n          props.setResponseMsg(\"\");\n          props.setActionTaken(null);\n        }\n      } catch (error) {\n        console.error(error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      props.setLoadingRequest(false);\n    }\n  };\n\n  const FC_DocValidation = async () => {\n    const api_body: VerifyDocumentInterface = {\n      user_id: props.thisClaim.user,\n      doc_id: props.thisClaim.claiming_on_id,\n      validation_status:\n        props.actionTaken === ClaimDecisionStatus.ACCEPTED\n          ? DocValidationStatusInterface.APPROVED\n          : DocValidationStatusInterface.REJECTED,\n      validated_by: {\n        user_id: props.auth.user.user_id,\n        comment: props.responseMsg,\n        validation_status:\n          props.actionTaken === ClaimDecisionStatus.ACCEPTED\n            ? DocValidationStatusInterface.APPROVED\n            : DocValidationStatusInterface.REJECTED,\n      },\n      in_education: false,\n      disability: false,\n    };\n    const api_redux: VerifyDocumentInterface = {\n      user_id: props.thisClaim.user,\n      doc_id: props.thisClaim.claiming_on_id,\n      validation_status:\n        props.actionTaken === ClaimDecisionStatus.ACCEPTED\n          ? DocValidationStatusInterface.APPROVED\n          : DocValidationStatusInterface.REJECTED,\n      validated_by: {\n        user_id: props.auth.user.user_id,\n        comment: props.responseMsg,\n        validation_status:\n          props.actionTaken === ClaimDecisionStatus.ACCEPTED\n            ? DocValidationStatusInterface.APPROVED\n            : DocValidationStatusInterface.REJECTED,\n        date: \"\",\n      },\n      in_education: false,\n      disability: false,\n    };\n\n    try {\n      const res = await axios.post<VerifyDocumentInterface>(\n        `${API.AUTH}/validateuserdoc`,\n        api_body\n      );\n      if (res) {\n        props.verifyDocument(api_redux);\n        await FC_shortListing(props.thisClaim.user);\n        // setDocumentId(\"null\");\n      }\n    } catch (error) {\n      console.error(error);\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  const FC_shortListing = async (candidate_id: string) => {\n    try {\n      const res = await axios.patch(\n        `${API.APPLICATION}/doccheckshortlist/${candidate_id}`\n      );\n      console.log({ res });\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2\">\n              <span className={`italic text-gray-600`}>Names:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.thisClaim.userDetails.user_info.fname +\n                  \" \" +\n                  props.thisClaim.userDetails.user_info.lname}\n              </span>\n            </div>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewImage(!props.viewImage)}\n            >\n              {props.viewImage ? \"Hide\" : \"View\"}\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <span className={`italic text-gray-600`}>Title:</span>\n            <span className=\"text-gray-800 font-bold text-2xl\">\n              {/* {ClaimGetDocTitle(props.documentCategories, props.thisDoc).main} */}\n              {props.thisClaim.userDetails.details.filter(\n                (item) => item.validation_status !== \"waiting\"\n              ).length > 0\n                ? adminDisplayClaimTitle(\n                    props.documentCategories,\n                    props.thisClaim.userDetails.details.filter(\n                      (item) => item.validation_status !== \"waiting\"\n                    ),\n                    props.thisClaim\n                  )\n                : \"-\"}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span className=\"font-bold text-yellow-900 rounded px-3 py-1\">\n              {props.thisClaim.previous\n                ? capitalizeFirstLetter(props.thisClaim.previous.status)\n                : capitalizeFirstLetter(props.thisDoc.validation_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {props.thisClaim.previous.evaluater.name}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisClaim.previous\n                ? props.thisClaim.previous.reason\n                : props.thisDoc.validated_by.commet}\n            </span>\n          </div>\n\n          {/* DISPLAY IMAGE ==================================================== */}\n          {props.viewImage && (\n            <div className=\"w-full my-1 animate__animated animate__fadeIn\">\n              <img\n                src={`${API.AUTH_FILES}/${props.thisDoc.files}`}\n                alt=\"doc file\"\n                className={`w-full animate__animated animate__fadeIn`}\n              />\n            </div>\n          )}\n          {/* END DISPLAY IMAGE ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVEL 1 DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              <div className=\"text-gray-700 italic font-bold\">\n                Claim Comment (level {index + 1})\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2 mt-1 border rounded px-4 py-1 bg-gray-50\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt)}\n                </span>\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-700 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n            </section>\n          ))}\n        {/* END CLAIM LEVEL 1 DETAILS ==================================================== */}\n      </div>\n\n      {/* FOOTER INITIAL ========================================== */}\n      {!props.actionTaken && (\n        <section className=\"flex items-center justify-between bg-gray-50 rounded mt-3\">\n          {/* SHOWING STATUS ===================================== */}\n          <div className=\"mx-4\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n          </div>\n\n          {props.thisClaim.last_claim_status === ClaimStatus.PENDING && (\n            <div className=\"flex items-center gap-2 px-2\">\n              <button\n                className={`px-4 py-2 font-semibold text-red-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-red-700 hover:bg-red-800`}\n                onClick={() => {\n                  props.setActionTaken(ClaimDecisionStatus.REJECTED);\n                }}\n              >\n                <MdCancel className=\"w-5 h-5\" />\n                <span>Reject</span>\n              </button>\n              <button\n                className={`px-4 py-2 font-semibold text-blue-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-blue-700 hover:bg-blue-800`}\n                onClick={() => {\n                  props.setActionTaken(ClaimDecisionStatus.ACCEPTED);\n                }}\n              >\n                <FaRegCheckCircle className=\"w-5 h-5\" />\n                <span>Accept</span>\n              </button>\n            </div>\n          )}\n        </section>\n      )}\n      {/* END FOOTER INITIAL ========================================== */}\n\n      {/* ======================================================== */}\n      {/* FOOTER RESPONSE ========================================== */}\n      {props.actionTaken && (\n        <section className=\"my-5 overflow-x-auto\">\n          <div className=\"italic text-gray-700 text-base my-1 mx-2\">\n            Selected decision:{\" \"}\n            <span\n              className={`font-semibold text-lg ${\n                props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                  ? \"text-blue-700\"\n                  : \"text-yellow-800\"\n              }`}\n            >\n              {props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                ? \"Approved\"\n                : \"Rejected\"}\n            </span>\n          </div>\n          {/* right part */}\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your decision...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.responseMsg}\n                onChange={(e) => {\n                  props.setResponseMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setResponseMsg(\"\");\n                  props.setActionTaken(null);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() =>\n                  window.confirm(\n                    `Are you sure you want to ${\n                      props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                        ? \"approve\"\n                        : \"rejected\"\n                    } this document?`\n                  ) && handleVerify()\n                }\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n          {/* end right part */}\n        </section>\n      )}\n      {/* END FOOTER RESPONSE ========================================== */}\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n}: StoreState): {\n  auth: Auth;\n} => {\n  return {\n    auth: auth,\n  };\n};\n\nexport default React.memo(connect(mapStateToProps, {\n  evaluateClaim,\n  verifyDocument,\n  PushPopupAlert,\n})(AdminClaimDocView));\n","import React, { Component } from \"react\";\nimport { MdArrowBack, MdInfoOutline } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Auth, loadCourses, PushPopupAlert } from \"../../../actions\";\nimport {\n  getAllClaims,\n  getAllApplications,\n  getClaimReasons,\n  getAllAnswers,\n} from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport { getPositions } from \"../../../actions/settings\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport TableLoading from \"../../../components/Loading/TableLoading\";\nimport { SideNavigation } from \"../../../components/Navigation/SideNavigation\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  SessionPlanInterface,\n  PositionAPI,\n  allClaimApplicationInterface,\n  CandidateClaimInterface,\n  PlansTypeKeys,\n  ClaimDecisionStatus,\n  ClaimTypesInterface,\n  course,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { UserDocumentsInterface } from \"../../../shared/interfaces\";\nimport { DATE } from \"../../../utils/functions\";\nimport search from \"../../../utils/search\";\nimport { getClaimById, whichClaimStatus, whichClaimType } from \"../Candidate\";\nimport { getCourseById, getCourseIdBySheetId } from \"../Candidate/FormExamList\";\nimport ClaimHeaderTitle from \"../ClaimHeaderTitle\";\nimport AdminClaimAppView from \"./AdminClaimAppView\";\nimport AdminClaimDocView from \"./AdminClaimDocView\";\nimport AdminClaimExamView from \"./AdminClaimExamView\";\nimport AdminFilterByType, {\n  filterClaimsByClaimType,\n} from \"./AdminFilterByType\";\n\n// export const getUserDocuments = (\n//   userList: UserInterface[],\n//   user_id: String\n// ): { user: UserInterface; document: UserDocumentsInterface[] } | null => {\n//   const thisUser = userList.find((item) => item.user_id === user_id);\n//   if (thisUser) {\n//     const thisDoc = thisUser.details.filter(\n//       (item) => item.validation_status !== \"waiting\"\n//     );\n//     return { user: thisUser, document: thisDoc };\n//   }\n//   return null;\n// };\n\nexport const adminDisplayClaimTitle = (\n  documentCategories: DocumentReducerInterface,\n  candidateDocuments: UserDocumentsInterface[],\n  thisClaim: CandidateClaimInterface\n): string => {\n  let result: string = \"\";\n\n  // CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n  if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n    let thisDoc = candidateDocuments.find(\n      (item) => item.doc_id === thisClaim.claiming_on_id\n    );\n    result = thisDoc\n      ? AdminClaimGetDocTitle(documentCategories, thisDoc).main\n      : \"Document not found\";\n  }\n  // END CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n\n  return result;\n};\n\nexport const AdminClaimGetDocTitle = (\n  documentCategories: DocumentReducerInterface,\n  doc: UserDocumentsInterface\n): { category: string; sub_category: string; field: string; main: string } => {\n  let DocCategory: string = \"\",\n    DocSubCategory: string = \"\",\n    DocField: string = \"\",\n    DocTitle: string = \"\";\n  if (\n    doc.sub_category_id &&\n    doc.sub_category_id.length > 0 &&\n    documentCategories.documentSubCategory\n  ) {\n    DocTitle = documentCategories.documentSubCategory.filter(\n      (c) => c.user_detail_subcategory_id === doc.sub_category_id\n    )[0].title;\n    DocSubCategory = DocTitle;\n  } else if (\n    doc.category_id.length > 0 &&\n    documentCategories.documentCategory\n  ) {\n    DocTitle = documentCategories.documentCategory.filter(\n      (c) => c.user_detail_category_id === doc.category_id\n    )[0].title;\n    DocCategory = DocTitle;\n  }\n  if (\n    doc.category_subcategory_data.length > 0 &&\n    documentCategories.documentFields\n  ) {\n    DocField = documentCategories.documentFields.filter(\n      (c) => c._id === doc.category_subcategory_data\n    )[0].title;\n    DocTitle += \" in \" + DocField;\n  }\n\n  return {\n    category: DocCategory,\n    sub_category: DocSubCategory,\n    field: DocField,\n    main: DocTitle,\n  };\n};\n\nexport const getApplicationById = (\n  allApplications: allClaimApplicationInterface[] | null,\n  systemPositions: PositionAPI[] | null,\n  application_id: String\n): {\n  application: allClaimApplicationInterface;\n  position: PositionAPI;\n} | null => {\n  if (allApplications) {\n    let thisApplication = allApplications.find(\n      (item) => item._id === application_id\n    );\n    if (thisApplication && systemPositions) {\n      let thisPosition = systemPositions.find(\n        (item) => item.position_id === thisApplication!.position\n      );\n      if (thisPosition) {\n        return { application: thisApplication, position: thisPosition };\n      }\n    }\n  }\n  return null;\n};\n\ntype AppProps = {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  systemPositions: PositionAPI[] | null;\n  courses: course[] | null;\n  loadCourses: Function;\n  getPositions: Function;\n  getClaimReasons: Function;\n  getAllApplications: Function;\n  getAllClaims: Function;\n  getAllAnswers: Function;\n  GetAllSessionPlans: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  verifyAllDocument: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype AppState = {\n  loading: boolean;\n  loadingData: boolean;\n  thisPeriod: SessionPlanInterface | null;\n  viewClaim: boolean;\n  periodChanged: boolean;\n  claimId: string | null;\n  claimType: string | null;\n  candidateId: string | null;\n  searchClaim: string;\n\n  // FOR FORM ================\n  viewImage: boolean;\n  loadingRequest: boolean;\n  actionTaken: ClaimDecisionStatus | null;\n  responseMsg: string;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n};\n\nclass Index extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingData: false,\n      thisPeriod: null,\n      viewClaim: false,\n      periodChanged: false,\n      claimId: null,\n      claimType: null,\n      candidateId: null,\n      searchClaim: \"\",\n\n      // FOR FORM ================\n      viewImage: false,\n      loadingRequest: false,\n      actionTaken: null,\n      responseMsg: \"\",\n      formError: null,\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingData = (value: boolean) => {\n    this.setState({ loadingData: value });\n  };\n\n  setPeriodChanged = (value: boolean) => {\n    this.setState({ periodChanged: value });\n  };\n\n  setThisPeriod = (value: SessionPlanInterface | null) => {\n    this.setState({ thisPeriod: value });\n  };\n\n  setViewClaim = (value: boolean) => {\n    this.setState({ viewClaim: value });\n  };\n\n  // ------------------------------\n  setClaimId = (value: string | null) => {\n    this.setState({ claimId: value });\n  };\n  setClaimType = (value: string | null) => {\n    this.setState({ claimType: value });\n  };\n  setCandidateId = (value: string | null) => {\n    this.setState({ candidateId: value });\n  };\n  setViewImage = (value: boolean) => {\n    this.setState({ viewImage: value });\n  };\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n\n  setActionTaken = (value: ClaimDecisionStatus | null) => {\n    this.setState({ actionTaken: value });\n  };\n\n  setResponseMsg = (value: string) => {\n    this.setState({ responseMsg: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n\n  setDefaultSession = (sessions: SessionPlanInterface[]) => {\n    // SETTING ACTIVE SESSION ==========================\n    if (this.state.thisPeriod === null) {\n      let thisSession = sessions.find((item) => item.is_active === true);\n      this.setThisPeriod(thisSession ? thisSession : sessions[0]);\n      this.loadsAllClaims(thisSession ? thisSession : sessions[0]);\n    }\n  };\n\n  setSearchClaim = (value: string) => {\n    this.setState({ searchClaim: value });\n  };\n\n  loadsAllClaims = (thisSession: SessionPlanInterface) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (this.props.claiming.allClaims === null) {\n      this.props.getAllClaims(\n        2,\n        thisSession.session_plan_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    }\n  };\n\n  loadsApplications = (application_id: string) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (\n      !this.props.claiming.allApplications.find(\n        (item) => item._id === application_id\n      )\n    ) {\n      this.props.getAllApplications(\n        application_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    }\n  };\n\n  loadsController = (file_id: string, claimType: PlansTypeKeys) => {\n    if (claimType === PlansTypeKeys.APPLICATION)\n      this.loadsApplications(file_id);\n    if (claimType === PlansTypeKeys.EXAMINATION) this.loadsAlAnswers(file_id);\n  };\n\n  loadsAlAnswers = (answersheet_id: string) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (\n      !this.props.claiming.allAnswer.find(\n        (item) => item.answer_sheet_id === answersheet_id\n      )\n    ) {\n      this.props.getAllAnswers(\n        answersheet_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    }\n  };\n\n  componentDidMount = () => {\n    // LOADING APPLICATION SESSION ====================================\n    if (this.props.application_sessions === null) {\n      this.props.GetAllSessionPlans(\n        (status: boolean, msg: string, data?: SessionPlanInterface[]) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data && data.length > 0) {\n              this.setDefaultSession(data);\n            }\n          }\n        }\n      );\n    } else if (this.props.application_sessions.length > 0) {\n      this.setDefaultSession(this.props.application_sessions);\n    }\n\n    // LOADING DOCUMENT CATEGORIES ==========================\n    if (!this.props.documentReducer.documentCategory) {\n      this.props.getDocumentCategory();\n      this.setLoading(false);\n    }\n\n    // LOADING DOCUMENT CLARIFICATIONS ==========================\n    if (!this.props.documentReducer.documentSubCategory) {\n      this.props.getDocumentSubCategory();\n      this.setLoading(false);\n    }\n\n    // LOADING DOCUMENT FIELDS ==========================\n    if (!this.props.documentReducer.documentFields) {\n      this.props.getDocumentFields();\n      this.setLoading(false);\n    }\n\n    if (this.props.systemPositions === null) {\n      this.props.getPositions((status: boolean, msg: string) => {\n        this.setLoading(status);\n        console.log({ status: status, msg: msg });\n        if (msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n\n    if (this.props.claiming.claimReasons === null) {\n      this.props.getClaimReasons((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (!status) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n\n    if (\n      this.props.courses === null ||\n      (this.props.courses.length === 0 && this.state.loading)\n    ) {\n      this.props.loadCourses(this.setLoading);\n      this.setLoading(false);\n    } else {\n      this.setLoading(false);\n    }\n  };\n\n  displayClaimTitle = (\n    thisClaim: CandidateClaimInterface\n  ): string | JSX.Element => {\n    let result: string = thisClaim.claiming_on_id;\n    if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      let thisDocs = thisClaim.userDetails.details.filter(\n        (item) => item.validation_status !== \"waiting\"\n      );\n      result =\n        thisDocs.length > 0\n          ? adminDisplayClaimTitle(\n              this.props.documentReducer,\n              thisDocs,\n              thisClaim\n            )\n          : \"Document not found\";\n    }\n    if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n      if (this.props.claiming.allApplications) {\n        let thisApplication = this.props.claiming.allApplications.find(\n          (item) => item._id === thisClaim.claiming_on_id\n        );\n        if (\n          thisApplication &&\n          this.props.claiming.allApplications &&\n          this.props.systemPositions\n        ) {\n          let thisPosition = this.props.systemPositions.find(\n            (item) => item.position_id === thisApplication!.position\n          );\n          if (thisPosition) {\n            result = thisPosition.position_title;\n          } else {\n            result = \"Application not found\";\n          }\n        }\n      }\n    }\n\n    if (\n      thisClaim.type_key === PlansTypeKeys.EXAMINATION &&\n      this.props.courses &&\n      this.props.claiming.allAnswer\n    ) {\n      let thisAnswer = getCourseIdBySheetId(\n        this.props.claiming.allAnswer,\n        thisClaim.claiming_on_id\n      );\n      if (thisAnswer && getCourseById(this.props.courses, thisAnswer.course)) {\n        result =\n          \"Exam of \" +\n          getCourseById(this.props.courses, thisAnswer.course)!.course_name;\n      } else {\n        result = \"Unknown exam\";\n      }\n    }\n\n    return result;\n  };\n\n  onPeriodChange = (period_id: string) => {\n    this.setPeriodChanged(true);\n    this.props.getAllClaims(2, period_id, (status: boolean, msg: string) => {\n      !status && this.setPeriodChanged(false);\n      this.setLoadingData(status);\n      if (status === false && msg.length) {\n        this.props.PushPopupAlert({\n          title: msg,\n          theme: PopupAlertTheme.danger,\n        });\n      }\n    });\n  };\n\n  getLastClaimDate = (claim: CandidateClaimInterface): string => {\n    let result: string = DATE(claim.createdAt);\n    const claimsLength: number = claim.claims.length;\n    result = DATE(claim.claims[claimsLength - 1].createdAt);\n    return result;\n  };\n\n  render() {\n    if (this.props.application_sessions === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    if (this.props.application_sessions.length === 0) {\n      return (\n        <div className=\"bg-yellow-100 rounded flex flex-col items-center justify-center p-6 my-8 text-yellow-900 border border-yellow-900\">\n          <MdInfoOutline className=\"text-6xl md:text-9xl\" />\n          <div className=\"text-center flex flex-col\">\n            <span className=\"text-2xl md:text-4xl font-extrabold\">\n              No active session\n            </span>\n            <span className=\"text-lg\">\n              Please Wait for the system to publish the sessions or contact the\n              administrator\n            </span>\n          </div>\n        </div>\n      );\n    }\n\n    if (this.props.claiming.allClaims === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    console.log(\"=================viewClaim===================\");\n    console.log({\n      allClaims: this.props.claiming.allClaims,\n      viewClaim: this.state.viewClaim,\n      candidateId: this.state.candidateId,\n      claimId: this.state.claimId,\n      // getClaimById: getClaimById(\n      //   this.props.claiming.allClaims,\n      //   this.state.claimId\n      // ),\n      claimTypes: this.props.claiming.claimTypes,\n    });\n    console.log(\"==================viewClaim==================\");\n\n    return (\n      <div>\n        {/* SIDE NAVIGATION */}\n        {!this.state.viewClaim && (\n          <SideNavigation>\n            {/* FILTER SECTION */}\n            <AdminFilterByType loadingClaims={this.state.loadingData} />\n            {/* END FILTER SECTION */}\n          </SideNavigation>\n        )}\n        {/* END SIDE NAVIGATION */}\n\n        {/* 00000000000000000000000000000000000 */}\n\n        {/* CLAIM TITLE ===================================== */}\n        {!this.state.viewClaim && (\n          <ClaimHeaderTitle\n            headerTitle={`${\n              this.props.claiming.selectedClaimType === \"all\"\n                ? \"All\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION\n                ? \"Documents\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.APPLICATION\n                ? \"Applications\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.EXAMINATION\n                ? \"Exam\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.MARKS_PUBLICATION\n                ? \"Marks publication\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.PLACEMENT_TRANSFER\n                ? \"Placements\"\n                : \"\"\n            } Claiming`}\n            loading={this.state.loadingData}\n            loadingSession={this.state.loading}\n            thisPeriod={this.state.thisPeriod}\n            setThisPeriod={this.setThisPeriod}\n            setLoadingSession={this.setLoadingData}\n            application_sessions={this.props.application_sessions}\n            onPeriodChange={this.onPeriodChange}\n            periodChanged={this.state.periodChanged}\n          />\n        )}\n        {/* END CLAIM TITLE ===================================== */}\n\n        {/* 00000000000000000000000000000000000 */}\n\n        {/* CLAIM CONTENT LIST ===================================== */}\n        {!this.state.viewClaim && (\n          <section className=\"bg-white w-full p-1\">\n            {/* FILTER FORM =================================== */}\n            <section className=\"flex flex-col-reverse sm:flex-row items-center gap-2 w-full my-2\">\n              <div className=\"w-full\">\n                <input\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                    this.setSearchClaim(e.target.value)\n                  }\n                  type=\"text\"\n                  className=\"input-white h-10 text-sm border-2 border-gray-400 focus:border-gray-500 w-full\"\n                  placeholder={`Search claim by title or type`}\n                  value={this.state.searchClaim}\n                  disabled={\n                    filterClaimsByClaimType(\n                      this.props.claiming.allClaims,\n                      this.props.claiming.selectedClaimType\n                    ).length > 0\n                      ? false\n                      : true\n                  }\n                />\n              </div>\n            </section>\n            {/* END FILTER FORM =================================== */}\n            <div className=\"w-full overflow-x-auto\">\n              <table className=\"w-full shadow\" id=\"report_content\">\n                <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                  <tr>\n                    <td className=\"px-2 py-2\">#</td>\n                    <td className=\"px-2 py-2\">Applicant names</td>\n                    <td className=\"px-2 py-2\">Claim title</td>\n                    <td className=\"px-2 py-2\">Claim date</td>\n                    {this.props.claiming.selectedClaimType === \"all\" && (\n                      <td className=\"px-2 py-2\">Claim type</td>\n                    )}\n                    <td className=\"px-2 py-2\">Claim level</td>\n                    <td className=\"px-2 py-2\">Claim status</td>\n                    <td className=\"px-2 py-2\"></td>\n                  </tr>\n                </thead>\n                <tbody>\n                  {!this.props.claiming.allClaims ||\n                  !this.props.claiming.claimTypes ||\n                  !this.props.systemPositions ||\n                  this.state.loadingData ? (\n                    <TableLoading\n                      cols={\n                        this.props.claiming.selectedClaimType === \"all\" ? 8 : 7\n                      }\n                    />\n                  ) : search(\n                      filterClaimsByClaimType(\n                        this.props.claiming.allClaims,\n                        this.props.claiming.selectedClaimType\n                      ),\n                      this.state.searchClaim\n                    ).length <= 0 ? (\n                    <tr\n                      className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                      key={Math.random()}\n                    >\n                      <td className=\"px-3 py-1\" colSpan={8}>\n                        <NoResult\n                          theme={NoResultThemes.Light}\n                          value={\"No claim found!\"}\n                        />\n                      </td>\n                    </tr>\n                  ) : (\n                    search(\n                      filterClaimsByClaimType(\n                        this.props.claiming.allClaims,\n                        this.props.claiming.selectedClaimType\n                      ),\n                      this.state.searchClaim\n                    ).map((claim: CandidateClaimInterface, index) => (\n                      <tr\n                        className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                        key={index + claim._id}\n                        onClick={() => {\n                          this.setViewClaim(true);\n                          this.setClaimId(claim._id);\n                          this.setCandidateId(claim.user);\n                          this.setClaimType(\n                            whichClaimType(claim)\n                              ? whichClaimType(claim)!\n                              : null\n                          );\n                          this.loadsController(\n                            claim.claiming_on_id,\n                            claim.type_key\n                          );\n                        }}\n                      >\n                        <td className=\"px-3 py-1\">{index + 1}</td>\n                        <td className=\"px-3 py-1 whitespace-nowrap\">\n                          {claim.userDetails.user_info.fname +\n                            \" \" +\n                            claim.userDetails.user_info.lname}\n                        </td>\n                        <td className=\"px-3 py-1 whitespace-nowrap\">\n                          {claim.title}\n                        </td>\n                        <td className=\"px-3 py-1 whitespace-nowrap\">\n                          {this.getLastClaimDate(claim)}\n                        </td>\n                        {this.props.claiming.selectedClaimType === \"all\" && (\n                          <td className=\"px-3 py-1 whitespace-nowrap\">\n                            {whichClaimType(claim)\n                              ? capitalizeFirstLetter(whichClaimType(claim)!)\n                              : \"-\"}\n                          </td>\n                        )}\n                        <td className=\"px-3 py-1 whitespace-nowrap italic\">\n                          Level {claim.claim_level}\n                        </td>\n                        <td className=\"px-3 py-1 whitespace-nowrap\">\n                          <span\n                            className={`inline-block rounded-full duration-300 text-xs font-semibold px-3 py-1 ${\n                              whichClaimStatus(claim).classes\n                            }`}\n                          >\n                            {whichClaimStatus(claim).status}\n                          </span>\n                        </td>\n                        <td className=\"px-3 py-1 text-center whitespace-nowrap\">\n                          <button className=\"btn bg-blue-500 text-white group-hover:bg-blue-600\">\n                            View\n                          </button>\n                        </td>\n                      </tr>\n                    ))\n                  )}\n                </tbody>\n              </table>\n            </div>\n          </section>\n        )}\n        {/* END CLAIM CONTENT LIST ===================================== */}\n\n        {/* 00000000000000000000000000000000000 */}\n\n        {/* view claim */}\n        {this.state.viewClaim &&\n          this.state.candidateId &&\n          this.props.claiming.allClaims &&\n          this.state.claimId &&\n          getClaimById(this.props.claiming.allClaims, this.state.claimId) &&\n          this.props.claiming.claimTypes && (\n            <section className=\"bg-white w-full my-4\">\n              {/* VIEW CLAIM HEADER =============================== */}\n              <section className=\"flex items-center gap-2 py-2 border-b\">\n                <button\n                  className={`ml-3 bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n                    this.state.loadingRequest\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } animate__animated animate__fadeIn`}\n                  disabled={this.state.loadingRequest}\n                  onClick={() => {\n                    this.setViewClaim(false);\n                    this.setViewImage(true);\n                    this.setLoadingRequest(false);\n                    this.setActionTaken(null);\n                    this.setResponseMsg(\"\");\n                    this.setFormError(null);\n                  }}\n                >\n                  <MdArrowBack className=\"w-7 h-7\" />\n                </button>\n                <div className={`text-gray-600 font-extrabold text-2xl px-2`}>\n                  Viewing claim\n                </div>\n              </section>\n              {/* END VIEW CLAIM HEADER =============================== */}\n\n              {this.state.loading && (\n                <div className=\"my-4\">\n                  <Loading />\n                </div>\n              )}\n\n              {!this.state.loading && (\n                <section className=\"bg-gray-200\">\n                  {/* FOR DOCUMENT ========================== */}\n                  {this.state.claimType &&\n                    this.state.claimType.toLocaleLowerCase() ===\n                      ClaimTypesInterface.DOCUMENT.toLocaleLowerCase() && (\n                      <div>\n                        {getClaimById(\n                          this.props.claiming.allClaims!,\n                          this.state.claimId!\n                        )!.userDetails.details.find(\n                          (item) =>\n                            item.doc_id ===\n                            getClaimById(\n                              this.props.claiming.allClaims!,\n                              this.state.claimId!\n                            )!.claiming_on_id\n                        ) ? (\n                          <AdminClaimDocView\n                            thisDoc={\n                              getClaimById(\n                                this.props.claiming.allClaims!,\n                                this.state.claimId!\n                              )!.userDetails.details.find(\n                                (item) =>\n                                  item.doc_id ===\n                                  getClaimById(\n                                    this.props.claiming.allClaims!,\n                                    this.state.claimId!\n                                  )!.claiming_on_id\n                              )!\n                            }\n                            documentCategories={this.props.documentReducer}\n                            thisClaim={\n                              getClaimById(\n                                this.props.claiming.allClaims,\n                                this.state.claimId\n                              )!\n                            }\n                            claimTypes={this.props.claiming.claimTypes}\n                            viewImage={this.state.viewImage}\n                            setViewImage={this.setViewImage}\n                            loadingRequest={this.state.loadingRequest}\n                            setLoadingRequest={this.setLoadingRequest}\n                            actionTaken={this.state.actionTaken}\n                            setActionTaken={this.setActionTaken}\n                            responseMsg={this.state.responseMsg}\n                            setResponseMsg={this.setResponseMsg}\n                            formError={this.state.formError}\n                            setFormError={this.setFormError}\n                            candidateId={this.state.candidateId}\n                            claimReasons={this.props.claiming.claimReasons}\n                          />\n                        ) : (\n                          <NoResult\n                            theme={NoResultThemes.Dark}\n                            value={\"Document not found\"}\n                          />\n                        )}\n                      </div>\n                    )}\n\n                  {/* FOR APPLICATION ========================== */}\n                  {this.state.claimType &&\n                    this.state.claimType.toLocaleLowerCase() ===\n                      ClaimTypesInterface.APPLICATION.toLocaleLowerCase() && (\n                      <div>\n                        {getApplicationById(\n                          this.props.claiming.allApplications,\n                          this.props.systemPositions,\n                          getClaimById(\n                            this.props.claiming.allClaims,\n                            this.state.claimId\n                          )!.claiming_on_id\n                        ) ? (\n                          this.props.systemPositions && (\n                            <AdminClaimAppView\n                              thisApplication={\n                                getApplicationById(\n                                  this.props.claiming.allApplications,\n                                  this.props.systemPositions,\n                                  getClaimById(\n                                    this.props.claiming.allClaims,\n                                    this.state.claimId\n                                  )!.claiming_on_id\n                                )!.application\n                              }\n                              thisPosition={\n                                getApplicationById(\n                                  this.props.claiming.allApplications,\n                                  this.props.systemPositions,\n                                  getClaimById(\n                                    this.props.claiming.allClaims,\n                                    this.state.claimId\n                                  )!.claiming_on_id\n                                )!.position\n                              }\n                              documentCategories={this.props.documentReducer}\n                              thisClaim={\n                                getClaimById(\n                                  this.props.claiming.allClaims,\n                                  this.state.claimId\n                                )!\n                              }\n                              claimTypes={this.props.claiming.claimTypes}\n                              systemPositions={this.props.systemPositions}\n                              claimReasons={this.props.claiming.claimReasons}\n                            />\n                          )\n                        ) : (\n                          <NoResult\n                            theme={NoResultThemes.Dark}\n                            value={\"Application not found\"}\n                          />\n                        )}\n                      </div>\n                    )}\n\n                  {/* FOR EXAMINATION ========================== */}\n                  {this.state.claimType &&\n                    this.state.claimType.toLocaleLowerCase() ===\n                      ClaimTypesInterface.EXAMINATION.toLocaleLowerCase() && (\n                      <div>\n                        {this.props.claiming.allAnswer &&\n                        this.props.courses &&\n                        getCourseIdBySheetId(\n                          this.props.claiming.allAnswer,\n                          getClaimById(\n                            this.props.claiming.allClaims,\n                            this.state.claimId\n                          )!.claiming_on_id\n                        ) &&\n                        getCourseById(\n                          this.props.courses,\n                          getCourseIdBySheetId(\n                            this.props.claiming.allAnswer,\n                            getClaimById(\n                              this.props.claiming.allClaims,\n                              this.state.claimId\n                            )!.claiming_on_id\n                          )!.course\n                        ) ? (\n                          <AdminClaimExamView\n                            thisExamSheet={\n                              getCourseIdBySheetId(\n                                this.props.claiming.allAnswer,\n                                getClaimById(\n                                  this.props.claiming.allClaims,\n                                  this.state.claimId\n                                )!.claiming_on_id\n                              )!\n                            }\n                            thisExam={\n                              getCourseById(\n                                this.props.courses,\n                                getCourseIdBySheetId(\n                                  this.props.claiming.allAnswer,\n                                  getClaimById(\n                                    this.props.claiming.allClaims,\n                                    this.state.claimId\n                                  )!.claiming_on_id\n                                )!.course\n                              )!\n                            }\n                            thisClaim={\n                              getClaimById(\n                                this.props.claiming.allClaims,\n                                this.state.claimId\n                              )!\n                            }\n                            claimTypes={this.props.claiming.claimTypes}\n                            claimReasons={this.props.claiming.claimReasons}\n                          />\n                        ) : (\n                          <NoResult\n                            theme={NoResultThemes.Dark}\n                            value={\"Exam not found\"}\n                          />\n                        )}\n                      </div>\n                    )}\n                </section>\n              )}\n            </section>\n          )}\n        {/* end view claim */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system_settings,\n  sessionPlan,\n  claiming,\n  document,\n  course,\n}: StoreState): {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  systemPositions: PositionAPI[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  courses: course[] | null;\n} => {\n  return {\n    auth: auth,\n    application_sessions: sessionPlan.allSessionPlans,\n    systemPositions: system_settings.systemPositions,\n    claiming,\n    documentReducer: document,\n    courses: course.courses,\n  };\n};\n\nexport const AdminClaim = connect(mapStateToProps, {\n  getAllClaims,\n  loadCourses,\n  getAllAnswers,\n  getClaimReasons,\n  getAllApplications,\n  GetAllSessionPlans,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  getPositions,\n  PushPopupAlert,\n})(Index);\n","import React from \"react\";\nimport VBarChart from \"../ChartComponents/VBarChart\";\n\ntype AllClaimChartProps = {\n  ClaimTypes: {\n    title: string;\n    count: {\n      all: number;\n      accepted: number;\n      rejected: number;\n      pending: number;\n    };\n    type: string | \"all\";\n  }[];\n};\n\nconst AllClaimChart: React.FC<AllClaimChartProps> = (props) => {\n  const FC_GetAllClaimChartData = (): {\n    accepted: number[];\n    rejected: number[];\n    active: number[];\n    labels: string[];\n  } => {\n    let acceptedArray: number[] = [],\n      rejectedArray: number[] = [],\n      activeArray: number[] = [],\n      labelArray: string[] = [];\n\n    for (const typeKey in props.ClaimTypes) {\n      if (props.ClaimTypes[typeKey].type !== \"all\") {\n        acceptedArray.push(props.ClaimTypes[typeKey].count.accepted);\n        rejectedArray.push(props.ClaimTypes[typeKey].count.rejected);\n        activeArray.push(props.ClaimTypes[typeKey].count.pending);\n        labelArray.push(props.ClaimTypes[typeKey].type.replace(/_/g, \" \"));\n      }\n    }\n    return {\n      accepted: acceptedArray,\n      rejected: rejectedArray,\n      active: activeArray,\n      labels: labelArray,\n    };\n  };\n\n  return (\n    <section className=\"my-3 max-w-full bg-white\">\n      <div className=\"flex items-center justify-between px-3\">\n        <span className=\"text-gray-600 font-semibold text-xl py-4 px-0\">\n          Claim chart on country level\n        </span>\n      </div>\n      <div className=\"mb-4 pb-2 px-3\">\n        <VBarChart\n          labels={FC_GetAllClaimChartData().labels}\n          categoriesLabel={FC_GetAllClaimChartData().labels}\n          dataLabels={false}\n          yaxisText=\"(Applicants)\"\n          tooltipText=\"Claims\"\n          series={[\n            {\n              name: \"Pending Claim\",\n              data: FC_GetAllClaimChartData().active,\n            },\n            {\n              name: \"Accepted Claim\",\n              data: FC_GetAllClaimChartData().accepted,\n            },\n            {\n              name: \"Rejected Claim\",\n              data: FC_GetAllClaimChartData().rejected,\n            },\n          ]}\n          colors={[\"#4b5563\", \"#469769\", \"#d97724\"]}\n          defaultBar={{\n            borderRadius: 4,\n            horizontal: false,\n            columnWidth: \"95%\",\n            endingShape: \"rounded\",\n          }}\n          stacked={true}\n        />\n      </div>\n    </section>\n  );\n};\n\nexport default React.memo(AllClaimChart);\n","import React from \"react\";\nimport { AiFillDashboard } from \"react-icons/ai\";\nimport { MdBrightness1 } from \"react-icons/md\";\nimport { SessionPlanInterface } from \"../../../interfaces\";\nimport { education_category } from \"../../../interfaces/education_category\";\n\ntype ClaimDashBoardTitleProps = {\n  reportTitle: string;\n  education_categories: education_category[] | null;\n  loading: boolean;\n  loadingApplications: boolean;\n  loadingEducation: boolean;\n  thisEducation: education_category | null;\n  allEducation: boolean;\n  periodChanged: boolean;\n  setThisEducation: (value: education_category | null) => void;\n  thisPeriod: string;\n  setThisPeriod: (value: string) => void;\n  application_sessions: SessionPlanInterface[];\n  onPeriodChange: (period_id: string) => void;\n};\n\nconst ClaimDashBoardTitle: React.FC<ClaimDashBoardTitleProps> = (props) => {\n  return (\n    <div className=\"mt-3 rounded flex flex-col md:flex-row md:justify-between items-start\">\n      <div className=\"flex flex-row items-center gap-3 mb-2\">\n        <AiFillDashboard className=\"text-6xl text-blue-600 hidden md:block\" />\n        <div className=\"flex flex-col\">\n          <span className=\"text-blue-600 text-3xl font-bold\">\n            {props.reportTitle}\n          </span>\n        </div>\n      </div>\n\n      {/* FILTER SECTION PERIOD && EDUCATION */}\n      <section className=\"w-full md:w-auto my-2 md:my-0\">\n        {/* EDUCATION CATEGORY sections */}\n        <section>\n          {props.education_categories && props.education_categories.length > 0 && (\n            <div className=\"flex items-start md:items-center justify-start md:justify-end gap-2\">\n              {props.allEducation && (\n                <div\n                  className={`w-auto ${\n                    props.loading ||\n                    props.loadingApplications ||\n                    props.loadingEducation ||\n                    props.periodChanged\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } ${\n                    props.thisEducation === null\n                      ? \"bg-blue-500 text-white font-bold\"\n                      : \"bg-gray-100 text-blue-800\"\n                  } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex items-center animate__animated animate__zoomIn`}\n                  onClick={() =>\n                    !props.loading &&\n                    !props.loadingEducation &&\n                    props.setThisEducation(null)\n                  }\n                >\n                  <section className=\"flex-1\">\n                    <MdBrightness1 className=\"inline-block mr-1 text-xs\" />\n                    <span>All</span>\n                  </section>\n                </div>\n              )}\n              {props.education_categories.map((education, index) => (\n                <div\n                  key={education.education_institute_id + index}\n                  className={`w-auto ${\n                    props.loading ||\n                    props.loadingApplications ||\n                    props.loadingEducation\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } ${\n                    props.thisEducation &&\n                    education.education_institute_id ===\n                      props.thisEducation.education_institute_id\n                      ? \"bg-blue-500 text-white font-bold\"\n                      : \"bg-gray-100 text-blue-800\"\n                  } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex items-center animate__animated animate__zoomIn`}\n                  onClick={() =>\n                    !props.loading &&\n                    !props.loadingApplications &&\n                    !props.loadingEducation &&\n                    props.setThisEducation(education)\n                  }\n                >\n                  <div className=\"flex-1\">\n                    <MdBrightness1 className=\"inline-block mr-1 text-xs\" />\n                    <span>{education.education_category_title}</span>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </section>\n        {/* end EDUCATION CATEGORY sections */}\n        <div>\n          <select\n            className={`bg-white text-gray-600 border border-gray-400 rounded p-2 focus:outline-none ${\n              props.loadingApplications && \"cursor-wait\"\n            }`}\n            value={props.thisPeriod}\n            disabled={\n              props.loading ||\n              props.loadingApplications ||\n              props.loadingEducation ||\n              props.periodChanged\n            }\n            onChange={(e) => {\n              props.setThisPeriod(e.target.value);\n              props.onPeriodChange(e.target.value);\n            }}\n          >\n            {props.application_sessions.map((session, item) => (\n              <option\n                key={session.session_plan_id + item}\n                value={session.session_plan_id}\n              >\n                {session.session_plan_name}\n              </option>\n            ))}\n          </select>\n        </div>\n      </section>\n      {/* END FILTER SECTION PERIOD && EDUCATION */}\n    </div>\n  );\n};\n\nexport default React.memo(ClaimDashBoardTitle);\n","import React, { Component } from \"react\";\nimport { FaBookOpen } from \"react-icons/fa\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  schoolLevelsStoreInterface,\n  getAllClaims,\n  GetClaimingTypes,\n  getAllApplications,\n  loadEducationCategories,\n  setSelectedClaimType,\n  PushPopupAlert,\n} from \"../../../actions\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport { getPositions } from \"../../../actions/settings\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport {\n  SessionPlanInterface,\n  PositionAPI,\n  education_category,\n  PlansTypeKeys,\n  CandidateClaimInterface,\n  ClaimToPrintInterface,\n  ClaimDecisionStatus,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { DATE } from \"../../../utils/functions\";\nimport { reportClaimType } from \"../../Admin/Claiming/ClaimingReport\";\nimport { adminDisplayClaimTitle } from \"../../Claimings/Admin\";\nimport NoSession from \"../../SessionSettings/NoSession\";\nimport PieChart from \"../ChartComponents/PieChart\";\nimport ExamDashboardLabels from \"../ExamDashboard/ExamDashboardLabels\";\nimport AllClaimChart from \"./AllClaimChart\";\nimport ClaimDashBoardTitle from \"./ClaimDashBoardTitle\";\n\ninterface WaitingListDashboardProps {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  systemPositions: PositionAPI[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  setSelectedClaimType: Function;\n  getPositions: Function;\n  getAllClaims: Function;\n  GetClaimingTypes: Function;\n  getAllApplications: Function;\n  GetAllSessionPlans: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface WaitingListDashboardStates {\n  thisPeriod: string;\n  loading: boolean;\n  loadingSession: boolean;\n  periodChanged: boolean;\n  loadingPosition: boolean;\n  loadingApplications: boolean;\n  loadingClaims: boolean;\n  loadingDocuments: boolean;\n  loadingInstitutes: boolean;\n  loadingClarifications: boolean;\n  loadingFields: boolean;\n  thisEducation: education_category | null;\n  thisLabel: PlansTypeKeys | \"all\";\n}\nclass _ClaimDashboard extends Component<\n  WaitingListDashboardProps,\n  WaitingListDashboardStates\n> {\n  constructor(props: WaitingListDashboardProps) {\n    super(props);\n\n    this.state = {\n      thisPeriod: \"\",\n      loading: true,\n      loadingSession: true,\n      periodChanged: false,\n      loadingPosition: true,\n      loadingApplications: true,\n      loadingClaims: true,\n      loadingDocuments: true,\n      loadingInstitutes: true,\n      loadingClarifications: true,\n      loadingFields: true,\n      thisEducation: null,\n      thisLabel: \"all\",\n    };\n  }\n\n  setLoadingInstitutes = (value: boolean) => {\n    this.setState({ loadingInstitutes: value });\n  };\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingSession = (value: boolean) => {\n    this.setState({ loadingSession: value });\n  };\n\n  setPeriodChanged = (value: boolean) => {\n    this.setState({ periodChanged: value });\n  };\n\n  setLoadingPosition = (value: boolean) => {\n    this.setState({ loadingPosition: value });\n  };\n\n  setLoadingApplications = (value: boolean) => {\n    this.setState({ loadingApplications: value });\n  };\n\n  setLoadingClaims = (value: boolean) => {\n    this.setState({ loadingClaims: value });\n  };\n  setLoadingDocuments = (value: boolean) => {\n    this.setState({ loadingDocuments: value });\n  };\n\n  setLoadingClarifications = (value: boolean) => {\n    this.setState({ loadingClarifications: value });\n  };\n\n  setLoadingFields = (value: boolean) => {\n    this.setState({ loadingFields: value });\n  };\n\n  setThisEducation = (value: education_category | null) => {\n    this.setState({ thisEducation: value });\n  };\n\n  setThisLabel = (value: PlansTypeKeys | \"all\") => {\n    this.setState({ thisLabel: value });\n  };\n\n  setThisPeriod = (value: string) => {\n    this.setState({ thisPeriod: value });\n  };\n\n  componentDidMount = () => {\n    // LOADING EDUCATION CATEGORY =================================\n    if (\n      this.props.schoolLevels.education_categories === null ||\n      this.props.schoolLevels.education_categories.length === 0\n    ) {\n      this.props.loadEducationCategories(this.setLoadingInstitutes);\n    } else {\n      this.setLoadingInstitutes(false);\n    }\n    // END LOADING EDUCATION CATEGORY =================================\n\n    // LOADING APPLICATION SESSION ====================================\n    if (\n      this.props.application_sessions === null ||\n      this.props.application_sessions.length === 0\n    ) {\n      this.props.GetAllSessionPlans(\n        (status: boolean, msg: string, data?: SessionPlanInterface[]) => {\n          if (!status) {\n            this.setLoadingSession(false);\n            this.setLoading(false);\n            if (msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data && data.length > 0) {\n              let thisSession = data.find((item) => item.is_active === true);\n              this.setThisPeriod(\n                thisSession\n                  ? thisSession.session_plan_id\n                  : data[data.length - 1].session_plan_id\n              );\n              this.onPeriodChange(\n                thisSession\n                  ? thisSession.session_plan_id\n                  : data[data.length - 1].session_plan_id\n              );\n            }\n          }\n        }\n      );\n    } else if (this.state.loadingSession) {\n      this.setLoading(false);\n      this.setLoadingSession(false);\n    }\n\n    // SETTING ACTIVE SESSION ==========================\n    if (\n      isEmptyOrSpaces(this.state.thisPeriod) &&\n      !this.state.loadingSession &&\n      this.props.application_sessions &&\n      this.props.application_sessions.length > 0\n    ) {\n      let thisSession = this.props.application_sessions.find(\n        (item) => item.is_active === true\n      );\n      this.setThisPeriod(\n        thisSession\n          ? thisSession.session_plan_id\n          : this.props.application_sessions[\n              this.props.application_sessions.length - 1\n            ].session_plan_id\n      );\n      this.onPeriodChange(\n        thisSession\n          ? thisSession.session_plan_id\n          : this.props.application_sessions[\n              this.props.application_sessions.length - 1\n            ].session_plan_id\n      );\n    }\n\n    // LOADING DOCUMENT CATEGORIES ==========================\n    if (\n      !this.props.documentReducer.documentCategory &&\n      this.state.loadingDocuments\n    ) {\n      this.props.getDocumentCategory();\n      this.setLoadingDocuments(false);\n    } else if (this.state.loadingDocuments) {\n      this.setLoadingDocuments(false);\n    }\n    // LOADING DOCUMENT CLARIFICATIONS ==========================\n    if (\n      !this.props.documentReducer.documentSubCategory &&\n      this.state.loadingClarifications\n    ) {\n      this.props.getDocumentSubCategory();\n      this.setLoadingClarifications(false);\n    } else if (this.state.loadingClarifications) {\n      this.setLoadingClarifications(false);\n    }\n    // LOADING DOCUMENT FIELDS ==========================\n    if (\n      !this.props.documentReducer.documentFields &&\n      this.state.loadingFields\n    ) {\n      this.props.getDocumentFields();\n      this.setLoadingFields(false);\n    } else if (this.state.loadingFields) {\n      this.setLoadingFields(false);\n    }\n\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n\n    // LOADING POSITIONS ==============================================\n    if (this.props.systemPositions === null) {\n      this.props.getPositions((status: boolean, msg: string) => {\n        this.setLoadingPosition(status);\n        console.log({ status: status, msg: msg });\n        if (msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    } else if (this.state.loadingPosition) {\n      this.setLoadingPosition(false);\n    }\n  };\n\n  onPeriodChange = (period_id: string) => {\n    this.setPeriodChanged(true);\n    this.props.getAllClaims(2, period_id, (status: boolean, msg: string) => {\n      !status && this.setPeriodChanged(false);\n      if (status === false && msg.length) {\n        this.props.PushPopupAlert({\n          title: msg,\n          theme: PopupAlertTheme.danger,\n        });\n      }\n    });\n\n    this.props.getAllApplications(period_id, (status: boolean, msg: string) => {\n      !status && this.setLoadingApplications(status);\n      if (status === false && msg.length) {\n        this.props.PushPopupAlert({\n          title: msg,\n          theme: PopupAlertTheme.danger,\n        });\n      }\n    });\n  };\n\n  getClaimInstitute = (thisClaim: CandidateClaimInterface): string | null => {\n    if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      return null;\n    }\n    if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n      if (this.props.claiming.allApplications) {\n        let thisApplication = this.props.claiming.allApplications.find(\n          (item) => item._id === thisClaim.claiming_on_id\n        );\n        if (\n          thisApplication &&\n          this.props.claiming.allApplications &&\n          this.props.systemPositions\n        ) {\n          // return thisApplication.\n          let thisPosition = this.props.systemPositions.find(\n            (item) => item.position_id === thisApplication!.position\n          );\n          if (thisPosition) {\n            return thisPosition.education_institute_id.education_institute_id;\n          }\n        }\n      }\n    }\n\n    return null;\n  };\n\n  displayClaimTitle = (thisClaim: CandidateClaimInterface): string => {\n    let result: string = thisClaim.claiming_on_id;\n    if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      result =\n        thisClaim.userDetails.details.filter(\n          (item) => item.validation_status !== \"waiting\"\n        ).length > 0\n          ? adminDisplayClaimTitle(\n              this.props.documentReducer,\n              thisClaim.userDetails.details.filter(\n                (item) => item.validation_status !== \"waiting\"\n              ),\n              thisClaim\n            )\n          : \"Document not found\";\n    }\n    if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n      if (this.props.claiming.allApplications) {\n        let thisApplication = this.props.claiming.allApplications.find(\n          (item) => item._id === thisClaim.claiming_on_id\n        );\n        if (\n          thisApplication &&\n          this.props.claiming.allApplications &&\n          this.props.systemPositions\n        ) {\n          let thisPosition = this.props.systemPositions.find(\n            (item) => item.position_id === thisApplication!.position\n          );\n          if (thisPosition) {\n            result = thisPosition.position_title;\n          } else {\n            result = \"Application not found\";\n          }\n        }\n      }\n    }\n\n    return result;\n  };\n\n  ClaimTypes = (\n    claims: ClaimToPrintInterface[]\n  ): {\n    title: string;\n    count: {\n      all: number;\n      accepted: number;\n      rejected: number;\n      pending: number;\n    };\n    type: PlansTypeKeys | \"all\";\n  }[] => {\n    let output: {\n      title: string;\n      count: {\n        all: number;\n        accepted: number;\n        rejected: number;\n        pending: number;\n      };\n      type: PlansTypeKeys | \"all\";\n    }[] = [\n      {\n        title: \"All claim types\",\n        count: {\n          all: claims.length,\n          accepted: claims.filter(\n            (item) => item.decision === ClaimDecisionStatus.ACCEPTED\n          ).length,\n          rejected: claims.filter(\n            (item) => item.decision === ClaimDecisionStatus.REJECTED\n          ).length,\n          pending: claims.filter((item) => item.decision === \"PENDING\").length,\n        },\n        type: \"all\",\n      },\n    ];\n\n    Object.values(PlansTypeKeys).forEach((PlansKey) => {\n      output.push({\n        title: capitalizeFirstLetter(reportClaimType(PlansKey)),\n        count: {\n          all: claims.filter((itm) => itm.claim_type === PlansKey).length,\n          accepted: claims.filter(\n            (itm) =>\n              itm.claim_type === PlansKey &&\n              itm.decision === ClaimDecisionStatus.ACCEPTED\n          ).length,\n          rejected: claims.filter(\n            (itm) =>\n              itm.claim_type === PlansKey &&\n              itm.decision === ClaimDecisionStatus.REJECTED\n          ).length,\n          pending: claims.filter(\n            (itm) => itm.claim_type === PlansKey && itm.decision === \"PENDING\"\n          ).length,\n        },\n        type: PlansKey,\n      });\n    });\n    return output;\n  };\n\n  FC_ClaimData = (\n    allClaims: CandidateClaimInterface[] | null\n  ): ClaimToPrintInterface[] => {\n    if (allClaims === null || allClaims.length <= 0) return [];\n    let arrayNew: ClaimToPrintInterface[] = [];\n    let n: number = 1;\n    // LOOP IN ALL CLAIM ONE BY ONE ###########################\n    for (const key in allClaims) {\n      if (Object.prototype.hasOwnProperty.call(allClaims, key)) {\n        // LOOP IN ALL CLAIM OF ONE FILE ONE BY ONE ===========================\n        for (const keyClaim in allClaims[key].claims) {\n          if (\n            Object.prototype.hasOwnProperty.call(\n              allClaims[key].claims,\n              keyClaim\n            )\n          ) {\n            const element = allClaims[key].claims[keyClaim];\n            let dataArray: ClaimToPrintInterface = {\n              claim_id: n,\n              names:\n                allClaims[key].userDetails.user_info.fname +\n                \" \" +\n                allClaims[key].userDetails.user_info.lname,\n              gender: allClaims[key].userDetails.user_info.sex\n                ? \"Male\"\n                : \"Female\",\n              national_id: allClaims[key].userDetails.n_id,\n              phone: allClaims[key].userDetails.phone_number,\n              email: allClaims[key].userDetails.email,\n              claim_type: allClaims[key].type_key,\n              claim_level: element.level,\n              education_category: this.getClaimInstitute(allClaims[key]),\n              claim_session: this.state.thisPeriod,\n              date: DATE(element.createdAt),\n              decision: element.decision_taken_status\n                ? element.decision_taken_status\n                : \"PENDING\",\n              claim_title: this.displayClaimTitle(allClaims[key]),\n            };\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n      }\n    }\n    return arrayNew;\n  };\n\n  getClaimDataByTitle = (\n    allData: {\n      title: string;\n      count: {\n        all: number;\n        accepted: number;\n        rejected: number;\n        pending: number;\n      };\n      type: PlansTypeKeys | \"all\";\n    }[]\n  ):\n    | {\n        title: string;\n        count: {\n          all: number;\n          accepted: number;\n          rejected: number;\n          pending: number;\n        };\n        type: PlansTypeKeys | \"all\";\n      }\n    | undefined => {\n    return allData.find((item) => item.type === this.state.thisLabel);\n  };\n\n  render() {\n    if (\n      this.props.application_sessions &&\n      this.props.application_sessions.length === 0\n    ) {\n      return <NoSession />;\n    }\n\n    if (\n      this.state.loading ||\n      this.props.application_sessions === null ||\n      this.props.claiming.allClaims === null\n    ) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {/* HEADER TITLE */}\n        <ClaimDashBoardTitle\n          education_categories={this.props.schoolLevels.education_categories}\n          loading={this.state.loading}\n          loadingApplications={this.state.loadingApplications}\n          loadingEducation={this.state.loadingInstitutes}\n          thisEducation={this.state.thisEducation}\n          setThisEducation={this.setThisEducation}\n          thisPeriod={this.state.thisPeriod}\n          setThisPeriod={this.setThisPeriod}\n          application_sessions={this.props.application_sessions}\n          reportTitle={\"Claim Dashboard\"}\n          allEducation={true}\n          periodChanged={this.state.periodChanged}\n          onPeriodChange={this.onPeriodChange}\n        />\n        {/* END HEADER TITLE */}\n\n        {/* ===================================================================================== */}\n\n        {/* CLAIM ALL STATUS LABELS ======================================= */}\n        <section className=\"my-2\">\n          <div className=\"text-2xl font-semibold text-gray-600\">\n            Claim type:\n            <select\n              className={`bg-white text-gray-600 border-2 border-blue-600 rounded-lg px-2 py-1 focus:outline-none`}\n              value={this.state.thisLabel}\n              onChange={(e) =>\n                this.setThisLabel(e.target.value as PlansTypeKeys | \"all\")\n              }\n            >\n              {this.ClaimTypes(\n                this.FC_ClaimData(this.props.claiming.allClaims)!\n              ).map((item, index: number) => (\n                <option key={item.type + index} value={item.type}>\n                  {capitalizeFirstLetter(item.title.toLocaleLowerCase())}\n                </option>\n              ))}\n            </select>\n          </div>\n          {this.getClaimDataByTitle(\n            this.ClaimTypes(this.FC_ClaimData(this.props.claiming.allClaims)!)\n          ) && (\n            <ExamDashboardLabels\n              dataLabels={[\n                {\n                  title: \"Total claim\",\n                  icon: FaBookOpen,\n                  iconColor: \"blue\",\n                  count: this.getClaimDataByTitle(\n                    this.ClaimTypes(\n                      this.FC_ClaimData(this.props.claiming.allClaims)!\n                    )\n                  )!.count.all,\n                },\n                {\n                  title: \"Accepted Claim\",\n                  icon: FaBookOpen,\n                  iconColor: \"green\",\n                  count: this.getClaimDataByTitle(\n                    this.ClaimTypes(\n                      this.FC_ClaimData(this.props.claiming.allClaims)!\n                    )\n                  )!.count.accepted,\n                },\n                {\n                  title: \"Rejected Claim\",\n                  icon: FaBookOpen,\n                  iconColor: \"yellow\",\n                  count: this.getClaimDataByTitle(\n                    this.ClaimTypes(\n                      this.FC_ClaimData(this.props.claiming.allClaims)!\n                    )\n                  )!.count.rejected,\n                },\n                {\n                  title: \"Pending Claim\",\n                  icon: FaBookOpen,\n                  iconColor: \"gray\",\n                  count: this.getClaimDataByTitle(\n                    this.ClaimTypes(\n                      this.FC_ClaimData(this.props.claiming.allClaims)!\n                    )\n                  )!.count.pending,\n                },\n              ]}\n              labelsOnRow={5}\n            >\n              <div className=\"flex justify-center\">\n                <PieChart\n                  options={{\n                    labels: [\"Accepted\", \"Rejected\", \"Pending\"],\n                    legend: {\n                      show: false,\n                      position: \"bottom\",\n                      horizontalAlign: \"center\",\n                      fontSize: \"16px\",\n                      itemMargin: {\n                        horizontal: 3,\n                        vertical: 0,\n                      },\n                    },\n                    plotOptions: {\n                      pie: {\n                        donut: {\n                          labels: {\n                            show: true,\n                            name: {\n                              show: true,\n                              fontSize: \"16px\",\n                              //   fontFamily: \"Rubik\",\n                              color: \"#2564eb\",\n                              offsetY: -10,\n                            },\n                            value: {\n                              show: true,\n                              fontSize: \"20px\",\n                              fontFamily: \"Helvetica, Arial, sans-serif\",\n                              color: \"#2564eb\",\n                              offsetY: 10,\n                              formatter: function (val) {\n                                return val;\n                              },\n                            },\n                            total: {\n                              show: true,\n                              label: \"Total\",\n                              color: \"#2564eb\",\n                              formatter: function (w) {\n                                return w.globals.seriesTotals.reduce(\n                                  (a: number, b: number) => {\n                                    return a + b;\n                                  },\n                                  0\n                                );\n                              },\n                            },\n                          },\n                        },\n                      },\n                    },\n                    colors: [\"#469769\", \"#d97724\", \"#4b5563\"],\n                  }}\n                  series={[\n                    this.getClaimDataByTitle(\n                      this.ClaimTypes(\n                        this.FC_ClaimData(this.props.claiming.allClaims)!\n                      )\n                    )!.count.accepted,\n                    this.getClaimDataByTitle(\n                      this.ClaimTypes(\n                        this.FC_ClaimData(this.props.claiming.allClaims)!\n                      )\n                    )!.count.rejected,\n                    this.getClaimDataByTitle(\n                      this.ClaimTypes(\n                        this.FC_ClaimData(this.props.claiming.allClaims)!\n                      )\n                    )!.count.pending,\n                  ]}\n                  width={210}\n                />\n              </div>\n            </ExamDashboardLabels>\n          )}\n        </section>\n        {/* CLAIM STATUS ON COUNTRY LEVEL LABELS ======================================= */}\n\n        {/* ===================================================================================== */}\n\n        {/* EXAM PERFORMANCE ON COUNTRY CHART ======================================= */}\n        <AllClaimChart\n          ClaimTypes={this.ClaimTypes(\n            this.FC_ClaimData(this.props.claiming.allClaims)\n          )}\n        />\n        {/* END EXAM PERFORMANCE ON COUNTRY CHART ======================================= */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system_settings,\n  sessionPlan,\n  claiming,\n  document,\n  schoolLevels,\n}: StoreState): {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  systemPositions: PositionAPI[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n} => {\n  return {\n    auth: auth,\n    application_sessions: sessionPlan.allSessionPlans,\n    systemPositions: system_settings.systemPositions,\n    claiming,\n    documentReducer: document,\n    schoolLevels,\n  };\n};\n\nexport const ClaimDashboard = connect(mapStateToProps, {\n  getAllClaims,\n  GetClaimingTypes,\n  getAllApplications,\n  GetAllSessionPlans,\n  loadEducationCategories,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  setSelectedClaimType,\n  getPositions,\n  PushPopupAlert,\n})(_ClaimDashboard);\n","import { education_category } from \"../interfaces\";\nimport { PositionAPI } from \"../interfaces/position\";\nimport {\n  CustomeAccessInterface,\n  PostSchoolInterface,\n  RoleToUserInterface,\n  SchoolInfoInterface,\n  SystemUserRoleInterface,\n} from \"./interfaces\";\n\nexport const data_posts_school: PostSchoolInterface[] = [];\n\nexport const isEmptyOrSpaces = (str: string): boolean => {\n  return str === null || str.match(/^ *$/) !== null;\n};\n\nexport const getUserTitle = (\n  accessRoles: SystemUserRoleInterface[],\n  roleId: string\n): string => {\n  const result = accessRoles.find((e) => e.system_user_role_id === roleId);\n  return result ? result.role : \"\";\n};\n\nexport const getRoleById = (\n  roles: SystemUserRoleInterface[],\n  roleId: string\n): SystemUserRoleInterface => {\n  return roles.filter((role) => role.system_user_role_id === roleId)[0];\n};\n\nexport const getInstituteById = (\n  institutes: education_category[],\n  instituteId: string\n): education_category | undefined => {\n  return institutes.find((item) => item.education_institute_id === instituteId);\n};\n\nexport const getPositionById_old = (\n  positions: PositionAPI[],\n  position_id: string\n): PositionAPI => {\n  console.log({\n    positions,\n    position_id,\n    data: positions.filter(\n      (position) => position.position_id === position_id\n    )[0],\n  });\n  return positions.filter(\n    (position) => position.position_id === position_id\n  )[0];\n};\n\nexport const getPositionById = (\n  positions: PositionAPI[],\n  position_id: string\n): PositionAPI | undefined => {\n  return positions.find((position) => position.position_id === position_id);\n};\n\nexport const getSchoolById = (\n  schools: SchoolInfoInterface[],\n  school_id: string\n): SchoolInfoInterface => {\n  return schools.filter((school) => school.school_id === school_id)[0];\n};\n\nexport const getPostById = (\n  posts: PostSchoolInterface[],\n  post_id: string\n): PostSchoolInterface => {\n  return posts.filter((post) => post.school_id === post_id)[0];\n};\n\nexport const getPostsBySchoolId = (\n  posts: PostSchoolInterface[],\n  school_id: string\n): PostSchoolInterface[] => {\n  return posts.filter((post) => post.school_id === school_id);\n};\n\nexport const getPostsByIds = (\n  posts: PostSchoolInterface[],\n  school_id: string,\n  position_id: string\n): PostSchoolInterface[] => {\n  return posts.filter(\n    (post) => post.school_id === school_id && post.position_id === position_id\n  );\n};\n\nexport const displayDate = (dateToDisplay: Date): string => {\n  return new Intl.DateTimeFormat(\"en-GB\", {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"2-digit\",\n  }).format(dateToDisplay);\n};\n\nexport const userAccess = (\n  defaultAccess: RoleToUserInterface,\n  customAccess: CustomeAccessInterface\n): RoleToUserInterface => {\n  // const data = defaultAccess.access.map((default,index,customAccess)=>{\n  //   let data_custom = customAccess\n  //   if\n  // })\n  // return customAccess.filter((custom) => custom.id === accecc_id)[0];\n  return defaultAccess;\n};\n\n// export const groupBy = (list: [], keyGetter: Function) => {\n//   const map = new Map();\n//   list.forEach((item) => {\n//     const key = keyGetter(item);\n//     const collection = map.get(key);\n//     if (!collection) {\n//       map.set(key, [item]);\n//     } else {\n//       collection.push(item);\n//     }\n//   });\n//   return map;\n// };\n\nexport const toTwoDigit = (value: number): string => {\n  var dec = value - Math.floor(value);\n  value = value - dec;\n  return (\"0\" + value).slice(-2) + dec.toString().substr(1);\n};\n\nexport const toAnyDigit = (\n  value: string | number,\n  padding: number = 3\n): string => {\n  var zeroes = new Array(padding + 1).join(\"0\");\n  return (zeroes + value).slice(-padding);\n};\n\nexport const capitalizeFirstLetter = (value: string): string => {\n  return value.charAt(0).toUpperCase() + value.slice(1);\n};\n\nexport const isDateExpiried = (paramDate: string) => {\n  const thisDate = new Date(paramDate);\n  const today = new Date();\n  if (thisDate.getTime() < today.getTime()) {\n    return true;\n  }\n\n  return false;\n};\n","import { candidateExamStoreInterface } from \"../actions/candidate_exam\";\nimport {\n  applicationExamAPI,\n  ApplicationPeriodGet,\n} from \"../interfaces/application\";\nimport { ExamAnswerSheetDone } from \"../interfaces/exam\";\nimport { PositionAPI, PositionAPICourse } from \"../interfaces/position\";\nimport { questionType, questionTypeElements } from \"../interfaces/question\";\nimport moment from \"moment-timezone\";\nimport { TimeZone } from \"./app.config\";\nimport { questionTypeElementsType } from \"@mastrecruit/common\";\n\nconst today = moment().tz(TimeZone);\n\nexport const getQuestionType = (\n  question_types: questionType[] | null,\n  type_id: string\n) => {\n  let type: questionTypeElementsType | null = null;\n  if (question_types !== null) {\n    let check = question_types.find((itm) => itm.id === type_id);\n    if (check !== undefined) {\n      let check_type = questionTypeElements.find(\n        (itm) => check && itm.key === check.element\n      );\n      if (check_type !== undefined) {\n        type = check_type.key;\n      }\n    }\n  }\n  return type;\n};\n\nexport const findTotalMarks = (\n  courses: PositionAPICourse[],\n  results: ExamAnswerSheetDone[] | null\n) => {\n  if (results !== null) {\n    let sum: number = 0;\n    for (let course of courses) {\n      let test = results.find((itm) => itm.course === course.course_id);\n      if (test !== undefined) {\n        sum = sum + test.total_marks;\n      }\n    }\n    return sum.toFixed(2);\n  } else {\n    return \"Wait...\";\n  }\n};\n\nexport const CheckIfExamDone = (\n  courses: PositionAPICourse[],\n  results: ExamAnswerSheetDone[] | null\n) => {\n  let res: boolean = false;\n  if (results !== null) {\n    for (let course of courses) {\n      let test = results.find((itm) => itm.course === course.course_id);\n      if (test !== undefined) {\n        res = true;\n      }\n    }\n  }\n  return res;\n};\n\nexport const CheckIfNoPendingExam = (\n  //NOT COMPLETE --> TO BE DONE\n  courses: PositionAPICourse[],\n  results: ExamAnswerSheetDone[] | null\n) => {\n  let res: boolean = false;\n  if (results !== null) {\n    for (let course of courses) {\n      let test = results.find((itm) => itm.course === course.course_id);\n      if (test !== undefined) {\n        res = true;\n      }\n    }\n  }\n  return res;\n};\n\nexport const validateCalculatedFormula = (\n  formula: string\n): { status: boolean; msg: string } => {\n  let characters: string[] = [];\n  if (\n    formula === undefined ||\n    formula === \"\" ||\n    formula.length === undefined ||\n    formula.length === 0\n  ) {\n    return {\n      status: false,\n      msg: `Please type a formula`,\n    };\n  }\n  if (formula.length < 3) {\n    return {\n      status: false,\n      msg: `The formula in not valid, it is not complete!`,\n    };\n  }\n  for (let el of formula) {\n    characters = [...characters, el];\n  }\n  if (characters[0] !== `\"`) {\n    return {\n      status: false,\n      msg: `Formula should start with (\") character`,\n    };\n  }\n  if (characters.filter((itm) => itm === `\"`).length < 2) {\n    return {\n      status: false,\n      msg: `Formula is missing closing (\") character`,\n    };\n  }\n  if (characters.filter((itm) => itm === `\"`).length > 2) {\n    return {\n      status: false,\n      msg: `Formula is invalid, because it has many (\") characters (${\n        characters.filter((itm) => itm === `\"`).length\n      })`,\n    };\n  }\n  if (\n    characters[characters.length - 1] !== `\"` &&\n    characters.filter((itm) => itm === `\"`).length === 2\n  ) {\n    let nextCharacter: string = \"\";\n    for (let i = 0; i < characters.length; i++) {\n      if (characters[i] === `\"` && i !== 0) {\n        nextCharacter = characters[i + 1];\n      }\n    }\n    if (nextCharacter !== `;`) {\n      return {\n        status: false,\n        msg: `Formula is missing separation character (;) between formula and error`,\n      };\n    }\n    if (characters[characters.length - 1] === `;`) {\n      return {\n        status: false,\n        msg: `Formula is missing error after (;) character`,\n      };\n    }\n  }\n  return {\n    status: true,\n    msg: `Formula is valid`,\n  };\n};\n\nexport function convertFromStringToDate(responseDate: string) {\n  let dateComponents = responseDate.split(\"T\");\n  let datePieces = dateComponents[0].split(\"-\");\n  let timePieces = dateComponents[1].split(\":\");\n  return new Date(\n    parseInt(datePieces[2]),\n    parseInt(datePieces[1]) - 1,\n    parseInt(datePieces[0]),\n    parseInt(timePieces[0]),\n    parseInt(timePieces[1]),\n    parseInt(timePieces[2])\n  );\n}\n\nexport enum ExamTimeStatus {\n  Waiting = \"Waiting\",\n  Online = \"Online\",\n  Expired = \"Expired\",\n}\n\nexport const validateExamDate = (\n  exam_date: string,\n  start_time: string,\n  end_time: string\n) => {\n  let status: ExamTimeStatus = ExamTimeStatus.Expired;\n  // Dates\n  const toDay: Date = new Date(today.toString());\n  const examDate = new Date(exam_date);\n\n  // Time\n  const startTime = convertFromStringToDate(\n    examDate.getDate() +\n      \"-\" +\n      (examDate.getMonth() + 1) +\n      \"-\" +\n      examDate.getFullYear() +\n      \"T\" +\n      start_time +\n      \":0\"\n  );\n  const endTime = convertFromStringToDate(\n    examDate.getDate() +\n      \"-\" +\n      (examDate.getMonth() + 1) +\n      \"-\" +\n      examDate.getFullYear() +\n      \"T\" +\n      end_time +\n      \":0\"\n  );\n\n  // check exam date\n  if (\n    examDate.getDate() > toDay.getDate() ||\n    examDate.getMonth() > toDay.getMonth() ||\n    examDate.getFullYear() > toDay.getFullYear()\n  ) {\n    status = ExamTimeStatus.Waiting;\n  }\n\n  if (\n    examDate.getDate() < toDay.getDate() ||\n    examDate.getMonth() < toDay.getMonth() ||\n    examDate.getFullYear() < toDay.getFullYear()\n  ) {\n    status = ExamTimeStatus.Expired;\n  }\n\n  if (\n    examDate.getDate() === toDay.getDate() &&\n    examDate.getMonth() === toDay.getMonth() &&\n    examDate.getFullYear() === toDay.getFullYear()\n  ) {\n    if (startTime.getTime() > toDay.getTime()) {\n      status = ExamTimeStatus.Waiting;\n    } else if (\n      startTime.getTime() <= toDay.getTime() &&\n      endTime.getTime() >= toDay.getTime()\n    ) {\n      status = ExamTimeStatus.Online;\n    } else {\n      status = ExamTimeStatus.Expired;\n    }\n  }\n  // console.log(\n  //   \"Dates comparison: \" + examDate.getDate() + \"=>\" + toDay.getDate()\n  // );\n  // console.log(\"Exam Status: \", status);\n  return status;\n};\n\nexport const InitializeExamsDone = (\n  selected_period: ApplicationPeriodGet | null,\n  selectedPosition: PositionAPI | null,\n  candidateExam: candidateExamStoreInterface,\n  loadExamsDone: (\n    periodId: string,\n    userId: string,\n    callback: (loading: boolean) => void\n  ) => void,\n  user_id: string,\n  setLoadingExamsDone: (status: boolean) => void,\n  selectedExams: applicationExamAPI[] | null,\n  InitializeExamDetails: (\n    periodId: string,\n    courseId: string,\n    district_id: string,\n    center_id: string,\n    room_id: string,\n    position: PositionAPI,\n    start_exam: boolean,\n    callback: (loading: boolean) => void\n  ) => void,\n  setLoadingExams: (status: boolean) => void\n) => {\n  if (selected_period !== null && selectedPosition !== null) {\n    loadExamsDone(\n      selected_period.session_plan_id,\n      user_id,\n      setLoadingExamsDone\n    );\n    for (let course of selectedPosition.courses) {\n      let testDone = candidateExam.user_exams_temp.find(\n        (itm) => itm.course === course.course_id\n      );\n      if (testDone === undefined) {\n        let center_id = selectedExams?.find(\n          (itm) => itm.course_id === course.course_id\n        );\n        if (center_id !== undefined) {\n          InitializeExamDetails(\n            selected_period.session_plan_id,\n            course.course_id,\n            center_id.district_id,\n            center_id.center_id,\n            center_id.room_id,\n            selectedPosition,\n            false,\n            setLoadingExams\n          );\n        }\n      }\n    }\n  }\n};\n\nexport const getActiveExam = (\n  candidateExam: candidateExamStoreInterface\n): ExamAnswerSheetDone | null => {\n  if (candidateExam.user_exams_done.length > 0) {\n    for (let exam of candidateExam.user_exams_done) {\n      if (\n        validateExamDate(\n          exam.exam_date,\n          exam.exam_start_time,\n          exam.exam_end_time\n        ) === ExamTimeStatus.Online\n      ) {\n        return exam;\n      }\n    }\n  }\n  return null;\n};\n\nexport const proctoringDefaultRules: {\n  rule: string;\n  status: boolean;\n  caption: string;\n}[] = [\n  {\n    rule: \"right_click_enabled\",\n    status: false,\n    caption: \"Enable right click\",\n  },\n  {\n    rule: \"copy_enabled\",\n    status: false,\n    caption: \"Enable copy\",\n  },\n  {\n    rule: \"paste_enabled\",\n    status: false,\n    caption: \"Enable paste\",\n  },\n  {\n    rule: \"stop_candidate_when_comeback\",\n    status: false,\n    caption: \"Enable Candidate when coming back\",\n  },\n  {\n    rule: \"allow_to_leave_browser\",\n    status: false,\n    caption: \"Enable to leave browser\",\n  },\n];\n","import React, { useEffect, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport { MdNavigateBefore, MdNavigateNext, MdSearch } from \"react-icons/md\";\n\nconst FC_makeID = (length: number = 5): string => {\n  let result: string = \"\";\n  let characters: string =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  let charactersLength = characters.length;\n  for (let i: number = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\nexport const sortThisColumn = (\n  tableId: string,\n  colIndex: number = 0,\n  dir: \"asc\" | \"desc\" = \"asc\"\n) => {\n  var table,\n    rows,\n    switching,\n    i,\n    x,\n    y,\n    shouldSwitch,\n    switchcount = 0;\n  table = document.getElementById(tableId) as HTMLTableElement;\n  switching = true;\n  /* Make a loop that will continue until\n  no switching has been done: */\n  if (table) {\n    while (switching) {\n      //start by saying: no switching is done:\n      switching = false;\n      rows = table.rows;\n      /*Loop through all table rows (except the\n    first, which contains table headers):*/\n      for (i = 1; i < rows.length - 1; i++) {\n        //start by saying there should be no switching:\n        shouldSwitch = false;\n        /*Get the two elements you want to compare,\n      one from current row and one from the next:*/\n        x = rows[i].getElementsByTagName(\"TD\")[colIndex];\n        y = rows[i + 1].getElementsByTagName(\"TD\")[colIndex];\n        /*check if the two rows should switch place,\n      based on the direction, asc or desc:*/\n        if (dir === \"asc\" && x && y) {\n          if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        } else if (dir === \"desc\" && x && y) {\n          if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        }\n      }\n      if (shouldSwitch && rows[i].parentNode) {\n        /*If a switch has been marked, make the switch\n      and mark that a switch has been done:*/\n        rows[i].parentNode!.insertBefore(rows[i + 1], rows[i]);\n        switching = true;\n        //Each time a switch is done, increase this count by 1:\n        switchcount++;\n      } else {\n        /*If no switching has been done AND the direction is \"asc\",\n      set the direction to \"desc\" and run the while loop again.*/\n        if (switchcount === 0 && dir === \"asc\") {\n          dir = \"desc\";\n          switching = true;\n        }\n      }\n      // if (i === 0) continue;\n      // rows.cells[i].style.backgroundColor = \"blue\";\n    }\n  }\n};\n\nexport interface TableColumnsInterface {\n  columnTitle: JSX.Element | string;\n  alignText: string;\n  padding?: string;\n  isSortAllowed?: boolean;\n}\n\ninterface TableProps {\n  columns: TableColumnsInterface[];\n  rows: Function;\n  hideColumns?: boolean;\n  pagination?: boolean;\n  search?: boolean;\n  tableSize?: string;\n  tableClass?: string;\n  tableId?: string;\n  rounded?: boolean;\n  searchBG?: string;\n  thColor?: string;\n  loading?: boolean;\n}\n\nconst Table: React.FC<TableProps> = (props) => {\n  const startPage = 1;\n  const tableId =\n    !props.tableId || props.tableId === \"myTable\" ? FC_makeID() : props.tableId;\n  let table: HTMLElement, tr: HTMLCollectionOf<HTMLTableRowElement>;\n  const [totalItems, setTotalItems] = useState<number>(0);\n  const [totalPages, setTotalPages] = useState<number>(1);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [pages, setPages] = useState<number[]>();\n  const [pageSize, setPageSize] = useState<number>(10);\n  const [startIndex, setStartIndex] = useState<number>(0);\n  const [endIndex, setEndIndex] = useState<number>(0);\n\n  useEffect(() => {\n    props.pagination && tablePagination();\n  });\n\n  const filterTable = (\n    data: string,\n    filterType?: \"default\" | \"field\"\n  ): void => {\n    var filter, tr, td, rows: number, cols: number, txtValue;\n    if (filterType === \"field\" && data === \"all\") data = \"\";\n    filter = data.toLowerCase();\n    table = document.getElementById(tableId!)!;\n    tr = table.getElementsByTagName(\"tr\");\n    for (rows = 0; rows < tr.length; rows++) {\n      for (cols = 0; cols < props.columns.length; cols++) {\n        td = tr[rows].getElementsByTagName(\"td\")[cols];\n        if (td) {\n          txtValue = td.textContent || td.innerText;\n          if (txtValue.toLowerCase().indexOf(filter) > -1) {\n            tr[rows].style.display = \"\";\n            break;\n          } else {\n            tr[rows].style.display = \"none\";\n          }\n        }\n      }\n    }\n  };\n\n  const tablePagination = (): void => {\n    table = document.getElementById(tableId)!;\n    tr = table.getElementsByTagName(\"tr\");\n    setTotalItems(tr.length);\n    setTotalPages(Math.ceil(totalItems / pageSize));\n\n    // calculate start and end item indexes on the current page\n    setStartIndex((currentPage - 1) * pageSize);\n    setEndIndex(Math.min(startIndex + pageSize - 1, totalItems - 1));\n\n    /**\n     * TODO!\n     * There is a problem with this condition\n     */\n    let _pages = Array.from(Array(totalPages + 1 - startPage).keys()).map(\n      (i) => startPage + i\n    );\n    if (!pages || _pages.length !== pages.length) {\n      setPages(_pages);\n    }\n\n    for (let i: number = 0; i < tr.length; i++) {\n      if (i >= startIndex && i <= endIndex) {\n        tr[i].style.display = \"\";\n      } else {\n        tr[i].style.display = \"none\";\n      }\n    }\n  };\n\n  return (\n    <div className={`${props.tableSize} overflow-x-auto`}>\n      {/* search box  */}\n      {props.search && (\n        <div className={`${props.searchBG} w-full mb-2`}>\n          {props.search && (\n            <div className=\"bg-white rounded flex items-center w-full p-2 border-2 border-gray-500\">\n              <MdSearch className=\"h-5 w-5 fill-current text-gray-400\" />\n              <input\n                type=\"search\"\n                placeholder=\"search\"\n                onChange={(e) => filterTable(e.target.value)}\n                className=\"w-full h-6 pl-4 text-sm outline-none focus:outline-none bg-white\"\n                disabled={props.loading}\n              />\n\n              {props.pagination && (\n                <div className=\"select\">\n                  <select\n                    className=\"text-base outline-none focus:outline-none bg-white\"\n                    onChange={(e) => setPageSize(Number(e.target.value))}\n                    disabled={props.loading}\n                  >\n                    <option value=\"10\">10</option>\n                    <option value=\"25\">25</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                  </select>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n      <div className=\"overflow-x-auto w-full\">\n        <table\n          className={\n            props.tableClass\n              ? props.tableClass\n              : `w-full shadow ${\n                  props.rounded && \"sm:rounded-lg\"\n                } table-auto order-table`\n          }\n          id={tableId}\n        >\n          {!props.hideColumns && (\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-base\">\n              <tr\n                className={`text-left tracking-wide bg-${props.thColor}-100 border-b-2 border-${props.thColor}-500 text-${props.thColor}-600`}\n              >\n                {props.columns.map((column, index) => (\n                  <th\n                    key={index}\n                    className={`${column.padding} text-${\n                      column.alignText\n                    } px-3 py-2 ${column.isSortAllowed && \"cursor-pointer\"}`}\n                    onClick={() =>\n                      column.isSortAllowed && sortThisColumn(tableId, index)\n                    }\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      {column.columnTitle}\n                      {column.isSortAllowed && <BiSort />}\n                    </div>\n                  </th>\n                ))}\n              </tr>\n            </thead>\n          )}\n          <tbody id=\"table-data\" className=\"bg-white text-black text-base\">\n            {props.rows()}\n          </tbody>\n        </table>\n        {props.pagination && (\n          <div className=\"sm:flex-1 sm:flex sm:items-center sm:justify-between mt-4 work-sans\">\n            <div>\n              <span className=\"text-xs xs:text-sm text-gray-900\">\n                Showing 1 to {pageSize} of {totalItems - 1} Entries\n              </span>\n            </div>\n            <div>\n              <nav className=\"inline-flex shadow-sm\">\n                <div>\n                  <button\n                    type=\"button\"\n                    className={`inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 text-sm font-medium text-gray-500 ${\n                      currentPage !== 1 && \"bg-white\"\n                    }`}\n                    aria-label=\"Previous\"\n                    disabled={currentPage === 1 || props.loading}\n                    onClick={() => setCurrentPage(currentPage - 1)}\n                  >\n                    <MdNavigateBefore className=\"h-5 w-5\" />\n                  </button>\n                </div>\n                <div>\n                  {pages &&\n                    pages.map((page, pageIndex) => (\n                      <button\n                        key={pageIndex}\n                        className={`-ml-px inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium text-gray-700 ${\n                          page !== currentPage\n                            ? \"bg-white\"\n                            : \"bg-gray-100 cursor-default\"\n                        }`}\n                        disabled={page === currentPage || props.loading}\n                        onClick={() => setCurrentPage(page)}\n                      >\n                        {page}\n                      </button>\n                    ))}\n                </div>\n                <div>\n                  <button\n                    type=\"button\"\n                    className={`inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 text-sm leading-5 font-medium text-gray-500 ${\n                      currentPage !== totalPages && \"bg-white\"\n                    }`}\n                    aria-label=\"Next\"\n                    disabled={currentPage === totalPages || props.loading}\n                    onClick={() => setCurrentPage(currentPage + 1)}\n                  >\n                    <MdNavigateNext className=\"h-5 w-5\" />\n                  </button>\n                </div>\n              </nav>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Table;\n","import React, { FC, ReactElement, ReactNode } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, System } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { NavToogle, PageHasSubNav } from \"../../actions\";\nimport { MdBrightness1, MdSearch } from \"react-icons/md\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  system: System;\n  PageHasSubNav: Function;\n  NavToogle: Function;\n  children: ReactNode;\n}\n//\ninterface AppState {\n  loading: boolean;\n}\n\nclass _SideNavigation extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount = () => this.props.PageHasSubNav(true);\n  componentWillUnmount = () => this.props.PageHasSubNav(false);\n\n  render() {\n    const isAuthenticated = this.props.auth.isAuthenticated;\n\n    if (isAuthenticated === false) {\n      return null;\n    }\n\n    const navActive = this.props.system.navigation;\n    return (\n      <div\n        className={`fixed w-48 p-1 pr-2 pl-6 text-gray-700 bg-white ${\n          navActive === true ? \"lg:left-16  left-16\" : \" -left-72 lg:left-16\"\n        }  top-0 bottom-0 pt-20 z-30 shadow-lg  transition-all duration-500 ease-in-out overflow-y-auto`}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n}: StoreState): { auth: Auth; system: System } => {\n  return { auth: auth, system: system };\n};\n\nexport const SideNavigation = connect(mapStateToProps, {\n  NavToogle,\n  PageHasSubNav,\n})(_SideNavigation);\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SearchComponentInterface = {\n  data: any[];\n};\n\nexport const Search: FC<SearchComponentInterface> = ({\n  data,\n}): ReactElement => {\n  return (\n    <div className=\"m-1 rounded-md shadow-md border border-blue-400 bg-white p-1 flex \">\n      <label htmlFor=\"search-text\" className=\"inline-block text-2xl\">\n        <MdSearch className=\"inline-block text-blue-400\" />\n      </label>\n      <input\n        type=\"search\"\n        className=\"outline-none bg-transparent flex-1 pl-1\"\n        placeholder=\"Search\"\n        id=\"search-text\"\n      />\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype MainItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const MainItem: FC<MainItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n  return (\n    <section\n      className={`${\n        active === true\n          ? \"bg-blue-500 text-white font-bold\"\n          : \"bg-blue-100 text-blue-800\"\n      } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex cursor-pointer items-center`}\n    >\n      <section className=\"flex-1\">\n        <IconDefined className=\"inline-block mr-1 text-xs\" />\n        <span>{title}</span>\n      </section>\n\n      {count > 0 ? (\n        <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n          {count}\n        </span>\n      ) : null}\n    </section>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemContainerComponentInterface = {\n  children: ReactNode;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const SubItemContainer: FC<SubItemContainerComponentInterface> = ({\n  children,\n}): ReactElement => {\n  return (\n    <div className=\"ml-3 overflow-y-auto border-l-2 border-blue-200 -mt-1 pt-2 mb-2 pl-1 cursor-pointer\">\n      {children}\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n * @important Remenber to use these components inside the <SubItemContainer>...</SubItemContainer>\n */\nexport const SubItem: FC<SubItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n\n  return (\n    <div\n      className={`animate__animated animate__zoomIn animate__faster ${\n        active === true ? \"bg-blue-500 text-white font-bold\" : \" text-blue-800\"\n      } text-blue-800 bg-blue-200 rounded-md px-1 mb-1 flex items-center py-1 font-bold`}\n    >\n      <IconDefined\n        className={`inline-block mr-0.1 text-xs ${\n          active === true ? \"text-white\" : \"\"\n        }`}\n      />\n      <span\n        className={`inline-block pl-1 ${active === true ? \"text-white\" : \"\"}`}\n      >\n        {title}\n      </span>\n      {count >= 1 ? (\n        <span\n          className={`text-sm fint-bold ${active === true ? \"text-white\" : \"\"}`}\n        >\n          {count}\n        </span>\n      ) : null}\n    </div>\n  );\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport {\n  AcademicSessionInterface,\n  PlansTypeInterface,\n  SessionPlanInterface,\n} from \"../interfaces\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// GET ACTIVE PLAN TYPES\nexport interface GetPlansTypesAction {\n  type: ActionTypes.GET_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// GET INACTIVE PLAN TYPES\nexport interface GetDeletedPlansTypesAction {\n  type: ActionTypes.GET_DELETED_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// CREATE PLAN TYPE\nexport interface CreatePlansTypeAction {\n  type: ActionTypes.CREATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// UPDATE PLAN TYPE\nexport interface UpdatePlansTypeAction {\n  type: ActionTypes.UPDATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// DELETE PLAN TYPE\nexport interface DeletePlansTypeAction {\n  type: ActionTypes.DELETE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// SET PLAN TYPE =====================================\nexport interface setSelectedPlanTypeActions {\n  type: ActionTypes.SELECT_PLAN_TYPE;\n  payload: PlansTypeInterface | \"all\";\n}\n\n// GET ALL SESSION PLAN\nexport interface GetAllSessionPlansAction {\n  type: ActionTypes.GET_ALL_SESSION_PLANS;\n  payload: SessionPlanInterface[];\n}\n\n// GET ACTIVE SESSION PLAN\nexport interface GetActiveSessionPlanAction {\n  type: ActionTypes.GET_ACTIVE_SESSION_PLANS;\n  payload: SessionPlanInterface | \"none\";\n}\n\n// CREATE SESSION PLAN\nexport interface CreateSessionPlansAction {\n  type: ActionTypes.CREATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// UPDATE SESSION PLAN\nexport interface UpdateSessionPlansAction {\n  type: ActionTypes.UPDATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// ACTIVATE SESSION PLAN\nexport interface ActivateSessionPlansAction {\n  type: ActionTypes.SESSION_ACTIVATION;\n  payload: SessionPlanInterface;\n}\n\n// DELETE SESSION PLAN\nexport interface DeleteSessionPlanAction {\n  type: ActionTypes.DELETE_SESSION_PLAN;\n  payload: string;\n}\n\n// GET ALL ACADEMIC SESSION\nexport interface GetAllAcademicSessionAction {\n  type: ActionTypes.GET_ALL_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface[];\n}\n\n// CREATE ACADEMIC SESSION\nexport interface CreateAcademicSessionAction {\n  type: ActionTypes.CREATE_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface;\n}\n\n// UPDATE ACADEMIC SESSION\nexport interface UpdateAcademicSessionAction {\n  type: ActionTypes.UPDATE_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface;\n}\n\n// ACTIVATE ACADEMIC SESSION\nexport interface ActivateAcademicSessionAction {\n  type: ActionTypes.ACADEMIC_SESSION_ACTIVATION;\n  payload: AcademicSessionInterface;\n}\n\n// DELETE ACADEMIC SESSION\nexport interface DeleteAcademicSessionAction {\n  type: ActionTypes.DELETE_ACADEMIC_SESSION;\n  payload: string;\n}\n\n// GET ACTIVE ACADEMIC SESSION\nexport interface GetActiveAcademicSessionAction {\n  type: ActionTypes.GET_ACTIVE_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface | \"none\";\n}\n\nexport type SessionActionType =\n  | GetPlansTypesAction\n  | GetDeletedPlansTypesAction\n  | CreatePlansTypeAction\n  | UpdatePlansTypeAction\n  | DeletePlansTypeAction\n  | GetAllSessionPlansAction\n  | GetActiveSessionPlanAction\n  | CreateSessionPlansAction\n  | UpdateSessionPlansAction\n  | ActivateSessionPlansAction\n  | DeleteSessionPlanAction\n  | setSelectedPlanTypeActions\n  | GetAllAcademicSessionAction\n  | CreateAcademicSessionAction\n  | UpdateAcademicSessionAction\n  | ActivateAcademicSessionAction\n  | DeleteAcademicSessionAction\n  | GetActiveAcademicSessionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type`\n      );\n      console.log({ GET_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetPlansTypesAction>({\n        type: ActionTypes.GET_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetDeletedPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type/deleted`\n      );\n      console.log({ GET_DELETED_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetDeletedPlansTypesAction>({\n        type: ActionTypes.GET_DELETED_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE PLAN TYPE\nexport const createPlanType = (\n  data: PlansTypeInterface\n): CreatePlansTypeAction => {\n  return {\n    type: ActionTypes.CREATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// UPDATE PLAN TYPE\nexport const updatePlanType = (\n  data: PlansTypeInterface\n): UpdatePlansTypeAction => {\n  return {\n    type: ActionTypes.UPDATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// DELETE PLAN TYPE\nexport const deletePlanType = (\n  data: PlansTypeInterface\n): DeletePlansTypeAction => {\n  return {\n    type: ActionTypes.DELETE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// SELECT PLAN TYPES ==========================\nexport const setSelectedPlanType = (\n  thisType: PlansTypeInterface | \"all\"\n): setSelectedPlanTypeActions => {\n  console.log({ thisType });\n  return {\n    type: ActionTypes.SELECT_PLAN_TYPE,\n    payload: thisType,\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const getActiveSessionPlan = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface>(\n        `${API.CLAIMING}/session/active/`\n      );\n      console.log({ GET_ACTIVE_SESSION_PLANS: res.data });\n      let session_plan: SessionPlanInterface | undefined = undefined;\n      // if (res.status === 200) {\n      //   // setApplications(res.data);\n      // }\n      if (res.data && res.data.is_active !== undefined) {\n        session_plan = res.data;\n      }\n      console.log({ session_plan: res.data });\n\n      dispatch<GetActiveSessionPlanAction>({\n        type: ActionTypes.GET_ACTIVE_SESSION_PLANS,\n        payload: session_plan ? session_plan : \"none\",\n      });\n      callback(false, \"\", session_plan ? session_plan : \"none\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ALL PLAN TYPES ==========================\nexport const GetAllSessionPlans = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface[]>(\n        `${API.CLAIMING}/session/`\n      );\n      console.log({ GET_ALL_SESSION_PLANS: res.data });\n      let session_data: SessionPlanInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          session_data = res.data;\n        }\n      }\n      dispatch<GetAllSessionPlansAction>({\n        type: ActionTypes.GET_ALL_SESSION_PLANS,\n        payload: session_data,\n      });\n      callback(false, \"\", session_data);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE SESSION PLAN\nexport const createSessionPlan = (\n  data: SessionPlanInterface\n): CreateSessionPlansAction => {\n  return {\n    type: ActionTypes.CREATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// UPDATE SESSION PLAN\nexport const updateSessionPlan = (\n  data: SessionPlanInterface\n): UpdateSessionPlansAction => {\n  return {\n    type: ActionTypes.UPDATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// ACTIVATE SESSION PLAN\nexport const sessionActivation = (\n  data: SessionPlanInterface\n): ActivateSessionPlansAction => {\n  return {\n    type: ActionTypes.SESSION_ACTIVATION,\n    payload: data,\n  };\n};\n\n// DELETE SESSION PLAN\nexport const deleteSessionPlan = (data: string): DeleteSessionPlanAction => {\n  return {\n    type: ActionTypes.DELETE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// CREATE ACADEMIC SESSION\nexport const createAcademicSession = (\n  data: AcademicSessionInterface\n): CreateAcademicSessionAction => {\n  return {\n    type: ActionTypes.CREATE_ACADEMIC_SESSION,\n    payload: data,\n  };\n};\n\n// GET ALL ACADEMIC SESSION ==========================\nexport const GetAllAcademicSession = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<AcademicSessionInterface[]>(\n        `${API.PLACEMENT}/postrequestperiod/`\n      );\n      console.log({ GET_ALL_SESSION_PLANS: res.data });\n      let session_data: AcademicSessionInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          session_data = res.data;\n        }\n      }\n      console.log(\"====================================\");\n      console.log({ GetAllAcademicSession: res });\n      console.log(\"====================================\");\n      dispatch<GetAllAcademicSessionAction>({\n        type: ActionTypes.GET_ALL_ACADEMIC_SESSION,\n        payload: session_data,\n      });\n      callback(false, \"\", session_data);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// UPDATE ACADEMIC SESSION\nexport const updateAcademicSession = (\n  data: AcademicSessionInterface\n): UpdateAcademicSessionAction => {\n  return {\n    type: ActionTypes.UPDATE_ACADEMIC_SESSION,\n    payload: data,\n  };\n};\n\n// ACTIVATE ACADEMIC SESSION\nexport const academicSessionActivation = (\n  data: AcademicSessionInterface\n): ActivateAcademicSessionAction => {\n  return {\n    type: ActionTypes.ACADEMIC_SESSION_ACTIVATION,\n    payload: data,\n  };\n};\n\n// DELETE ACADEMIC SESSION\nexport const deleteAcademicSession = (\n  data: string\n): DeleteAcademicSessionAction => {\n  return {\n    type: ActionTypes.DELETE_ACADEMIC_SESSION,\n    payload: data,\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const getActiveAcademicSession = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<AcademicSessionInterface>(\n        `${API.PLACEMENT}/postrequestperiod/one`\n      );\n      console.log({ GET_ACTIVE_ACADEMIC_SESSION: res.data });\n      let session_plan: AcademicSessionInterface | undefined = undefined;\n      // if (res.status === 200) {\n      //   // setApplications(res.data);\n      // }\n      if (res.data) {\n        session_plan = res.data;\n      }\n      console.log({ session_plan: res.data });\n\n      dispatch<GetActiveAcademicSessionAction>({\n        type: ActionTypes.GET_ACTIVE_ACADEMIC_SESSION,\n        payload: session_plan ? session_plan : \"none\",\n      });\n      callback(false, \"\", session_plan ? session_plan : \"none\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  CandidatesInterface,\n  DocumentCategoryInterface,\n  DocumentFieldsInterface,\n  DocumentSubCategoryInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { VerifyDocumentInterface } from \"./users\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// CATEGORY\nexport interface GetDocumentCategoryAction {\n  type: ActionTypes.GET_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface[];\n}\n\nexport interface CreateDocumentCategoryAction {\n  type: ActionTypes.CREATE_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface;\n}\n\nexport interface UpdateDocumentCategoryAction {\n  type: ActionTypes.UPDATE_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface;\n}\n\nexport interface DeleteDocumentCategoryAction {\n  type: ActionTypes.DELETE_DOCUMENT_CATEGORY;\n  payload: string;\n}\n\n// SUB CATEGORY\nexport interface GetDocumentSubCategoryAction {\n  type: ActionTypes.GET_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface[];\n}\n\nexport interface CreateDocumentSubCategoryAction {\n  type: ActionTypes.CREATE_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface;\n}\n\nexport interface UpdateDocumentSubCategoryAction {\n  type: ActionTypes.UPDATE_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface;\n}\n\nexport interface DeleteDocumentSubCategoryAction {\n  type: ActionTypes.DELETE_DOCUMENT_SUB_CATEGORY;\n  payload: string;\n}\n\n// FIELDS\nexport interface GetDocumentFieldsAction {\n  type: ActionTypes.GET_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface[];\n}\n\nexport interface CreateDocumentFieldsAction {\n  type: ActionTypes.CREATE_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface;\n}\n\nexport interface UpdateDocumentFieldsAction {\n  type: ActionTypes.UPDATE_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface;\n}\n\nexport interface DeleteDocumentFieldsAction {\n  type: ActionTypes.DELETE_DOCUMENT_FIELDS;\n  payload: string;\n}\n\n// DOCUMENT CHECKING\nexport interface GetCandidatesInInstituteAtion {\n  type: ActionTypes.GET_CANDIDATE_IN_INSTITUTE;\n  payload: CandidatesInterface[];\n}\n\nexport interface VerifyDocumentAction {\n  type: ActionTypes.VERIFY_DOCUMENT;\n  payload: VerifyDocumentInterface;\n}\n\nexport type DocumentCategoryActionType =\n  | GetDocumentCategoryAction\n  | CreateDocumentCategoryAction\n  | UpdateDocumentCategoryAction\n  | DeleteDocumentCategoryAction\n  | GetDocumentSubCategoryAction\n  | CreateDocumentSubCategoryAction\n  | UpdateDocumentSubCategoryAction\n  | DeleteDocumentSubCategoryAction\n  | GetDocumentFieldsAction\n  | CreateDocumentFieldsAction\n  | UpdateDocumentFieldsAction\n  | DeleteDocumentFieldsAction\n  | GetCandidatesInInstituteAtion\n  | VerifyDocumentAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// CATEGORY\n\nexport const getDocumentCategory = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get(`${API.AUTH}/detailcategory`);\n      console.log({ docCategory: res });\n      dispatch<GetDocumentCategoryAction>({\n        type: ActionTypes.GET_DOCUMENT_CATEGORY,\n        payload: res.data,\n      });\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n    }\n  };\n};\n\nexport const createDocumentCategory = (data: DocumentCategoryInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentCategoryAction>({\n      type: ActionTypes.CREATE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentCategory = (data: DocumentCategoryInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentCategoryAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentCategory = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentCategoryAction>({\n      type: ActionTypes.DELETE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\n// SUB CATEGORY\nexport const getDocumentSubCategory = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<DocumentSubCategoryInterface[]>(\n        `${API.AUTH}/detailsubcategory`\n      );\n      console.log({ docSubCategory: res });\n      dispatch<GetDocumentSubCategoryAction>({\n        type: ActionTypes.GET_DOCUMENT_SUB_CATEGORY,\n        payload: res.data,\n        // payload: response.data,\n      });\n    } catch (error) {\n      console.log({ doc_SUB_category_error: error });\n    }\n  };\n};\n\nexport const createDocumentSubCategory = (\n  data: DocumentSubCategoryInterface\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentSubCategoryAction>({\n      type: ActionTypes.CREATE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentSubCategory = (\n  data: DocumentSubCategoryInterface\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentSubCategoryAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentSubCategory = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentSubCategoryAction>({\n      type: ActionTypes.DELETE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\n// FIELDS\nexport const getDocumentFields = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<DocumentFieldsInterface[]>(\n        `${API.AUTH}/categorysubcatedata`\n      );\n      console.log({ docFields: res });\n      dispatch<GetDocumentFieldsAction>({\n        type: ActionTypes.GET_DOCUMENT_FIELDS,\n        payload: res.data,\n        // payload: response.data,\n      });\n    } catch (error) {\n      console.log({ doc_SUB_category_error: error });\n    }\n  };\n};\n\nexport const createDocumentFields = (data: DocumentFieldsInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentFieldsAction>({\n      type: ActionTypes.CREATE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentFields = (data: DocumentFieldsInterface) => {\n  console.log({ reducer: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentFieldsAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentFields = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentFieldsAction>({\n      type: ActionTypes.DELETE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\n// REMOVE DUPLICATION IN CANDIDATES IN EDUCATION CATEGORY PER SESSION\nconst distinctCandidates = (\n  candidatesData: CandidatesInterface[]\n): CandidatesInterface[] => {\n  let result: CandidatesInterface[] = [];\n  let user_ids: string[] = [];\n  const newArray: CandidatesInterface[] = candidatesData.filter((candidate) => {\n    return candidate !== null && candidate !== undefined;\n  });\n  newArray.forEach((candidate) => {\n    if (!user_ids.includes(candidate.user_id)) {\n      result.push(candidate);\n      user_ids.push(candidate.user_id);\n    }\n  });\n  return result;\n};\n// CANDIDATE IN EDUCATION CATEGORY PER SESSION\nexport const getCandidatesInInstitute = (\n  educatin_type_id: string,\n  session_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\", null);\n    try {\n      setAxiosToken();\n      const res = await axios.get<CandidatesInterface[]>(\n        `${API.APPLICATION}/educationtypeuserdocs/${educatin_type_id}/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({\n        getCandidatesInInstitute: res,\n        distinctCandidates: distinctCandidates(res.data),\n      });\n      console.log(\"====================================\");\n      dispatch<GetCandidatesInInstituteAtion>({\n        type: ActionTypes.GET_CANDIDATE_IN_INSTITUTE,\n        payload: distinctCandidates(res.data),\n        // payload: response.data,\n      });\n      callback(false, \"\", distinctCandidates(res.data));\n    } catch (error) {\n      console.log({ getCandidatesInInstitute: error });\n      callback(false, errorToText(error), null);\n    }\n  };\n};\n\nexport const verifyDocument = (data: VerifyDocumentInterface) => {\n  console.log(\"================verifyDocument====================\");\n  console.log({ verifyDocument: data });\n  console.log(\"================verifyDocument====================\");\n  return async (dispatch: Dispatch) => {\n    dispatch<VerifyDocumentAction>({\n      type: ActionTypes.VERIFY_DOCUMENT,\n      payload: data,\n    });\n  };\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AccessTaskInterface,\n  PermissionInterface,\n  SystemSettingsInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PositionAPI } from \"../interfaces/position\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// SYSTEM SETTINGS  ==============\nexport interface GetSystemSettingsAction {\n  type: ActionTypes.GET_SYSTEM_SETTINGS;\n  payload: SystemSettingsInterface[];\n}\n\nexport interface DisableSystemSettingsAction {\n  type: ActionTypes.DISABLE_SYSTEM_SETTINGS;\n  payload: {\n    system_setting_id: string;\n    status: \"enabled\" | \"disabled\";\n  };\n}\n\n// ROLE TASKS ACCESS SETTINGS ===================================\nexport interface GetTaskAccessAction {\n  type: ActionTypes.GET_TASK_ACCESS;\n  payload: AccessTaskInterface[];\n}\n\n// POSITIONS SETTINGS ===================================\nexport interface PositionCreateInterface {\n  position_id?: string;\n  position_title: string;\n  position_code: string;\n  description: string;\n  school_level_id: string;\n  subcategory_id: string;\n  education_institute_id: string;\n  courses: string[];\n  requirements: {\n    user_detail_category_id: string;\n    user_detail_subcategory_id: string;\n    position_requirement: {\n      category_subcategory_data_id: string;\n      required: boolean;\n    }[];\n    required: boolean;\n  }[];\n}\nexport interface GetPositionsAction {\n  type: ActionTypes.GET_POSTIONS;\n  payload: PositionAPI[];\n}\n\nexport interface CreatePositionsAction {\n  type: ActionTypes.CREATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface UpdatePositionsAction {\n  type: ActionTypes.UPDATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface DeletePositionSettingAction {\n  type: ActionTypes.DELETE_POSITION;\n  payload: string;\n}\n\nexport interface PublishPositionAction {\n  type: ActionTypes.PUBLISH_POSITION;\n  payload: {\n    position_id: string;\n    status: boolean;\n  };\n}\n\nexport type SystemActionType =\n  | GetSystemSettingsAction\n  | DisableSystemSettingsAction\n  | GetTaskAccessAction\n  | GetPositionsAction\n  | CreatePositionsAction\n  | UpdatePositionsAction\n  | DeletePositionSettingAction\n  | PublishPositionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSystemSettings = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<SystemSettingsInterface[]>(\n        `${API.AUTH}/settings`\n      );\n      dispatch<GetSystemSettingsAction>({\n        type: ActionTypes.GET_SYSTEM_SETTINGS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const disableSystemSetting = (data: {\n  system_setting_id: string;\n  status: \"enabled\" | \"disabled\";\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableSystemSettingsAction>({\n      type: ActionTypes.DISABLE_SYSTEM_SETTINGS,\n      payload: data,\n    });\n  };\n};\n\n// ============================ tasks access =======================\n\nexport const GetTaskAccess = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<\n        {\n          id: string;\n          title: string;\n          key: string;\n          permitted: PermissionInterface;\n        }[]\n      >(`${API.AUTH}/allroleaccess`);\n      let response: AccessTaskInterface[] = res.data.map((data) => ({\n        id: data.id,\n        task: data.title,\n        key: data.key,\n        permitted: data.permitted,\n      }));\n      dispatch<GetTaskAccessAction>({\n        type: ActionTypes.GET_TASK_ACCESS,\n        payload: response,\n      });\n      callback(false, \"\", response);\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// ============================ positions =======================\n\nexport const getPositions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(`${API.APPLICATION}/position`);\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createPosition = (data: PositionCreateInterface) => {\n  console.log({ createPosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreatePositionsAction>({\n      type: ActionTypes.CREATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const updatePosition = (data: PositionCreateInterface) => {\n  console.log({ updatePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdatePositionsAction>({\n      type: ActionTypes.UPDATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const deletePosition = (data: string) => {\n  console.log({ deletePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<DeletePositionSettingAction>({\n      type: ActionTypes.DELETE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const publishPosition = (data: {\n  position_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<PublishPositionAction>({\n      type: ActionTypes.PUBLISH_POSITION,\n      payload: data,\n    });\n  };\n};\n","import {\n  CalculatedMultipleChoiceQuestionAnswerInterface,\n  EmbeddedQuestionAnswerInterface,\n  EssayQuestionAnswerInterface,\n  MatchingQuestionAnswerInterface,\n  MultipleChoiceQuestionAnswerInterface,\n  NumericalQuestionAnswerInterface,\n  ShortAnswerQuestionAnswerInterface,\n  SimpleCalculatedQuestionAnswerInterface,\n  TrueFalseQuestionAnswerInterface,\n} from \"../../../interfaces/question\";\n\nexport const toMultipleChoice = (\n  answers: any[]\n): MultipleChoiceQuestionAnswerInterface[] => {\n  let res: MultipleChoiceQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [\n      ...res,\n      {\n        id: answer.id,\n        value: answer.value,\n        status: answer.status,\n      },\n    ];\n  }\n  return res;\n};\n\nexport const toTrueFalse = (\n  answers: any[]\n): TrueFalseQuestionAnswerInterface[] => {\n  let res: TrueFalseQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [\n      ...res,\n      {\n        id: answer.id,\n        value: answer.value,\n        status: answer.status,\n      },\n    ];\n  }\n  return res;\n};\n\nexport const toMatching = (\n  answers: any[]\n): MatchingQuestionAnswerInterface[] => {\n  let res: MatchingQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [\n      ...res,\n      {\n        id: answer.id,\n        value: answer.value,\n        status: answer.status,\n      },\n    ];\n  }\n  return res;\n};\n\nexport const toSimpleCalculated = (\n  answers: any[]\n): SimpleCalculatedQuestionAnswerInterface[] => {\n  let res: SimpleCalculatedQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [\n      ...res,\n      {\n        id: answer.id,\n        value: answer.value,\n        status: answer.status,\n      },\n    ];\n  }\n  return res;\n};\n\nexport const toShortAnswer = (\n  answers: any[]\n): ShortAnswerQuestionAnswerInterface[] => {\n  let res: ShortAnswerQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [\n      ...res,\n      {\n        id: answer.id,\n        value: answer.value,\n        status: answer.status,\n      },\n    ];\n  }\n  return res;\n};\n\nexport const toNumerical = (\n  answers: any[]\n): NumericalQuestionAnswerInterface[] => {\n  let res: NumericalQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [\n      ...res,\n      {\n        id: answer.id,\n        value: answer.value,\n        status: answer.status,\n      },\n    ];\n  }\n  return res;\n};\n\nexport const toCalculatedMultipleChoice = (\n  answers: any[]\n): CalculatedMultipleChoiceQuestionAnswerInterface[] => {\n  let res: CalculatedMultipleChoiceQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [\n      ...res,\n      {\n        id: answer.id,\n        value: answer.value,\n        status: answer.status,\n      },\n    ];\n  }\n  return res;\n};\n\nexport const toEssay = (answers: any[]): EssayQuestionAnswerInterface[] => {\n  let res: EssayQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [\n      ...res,\n      {\n        id: answer.id,\n        value: answer.value,\n        status: answer.status,\n      },\n    ];\n  }\n  return res;\n};\n\nexport const toEmbedded = (\n  answers: any[]\n): EmbeddedQuestionAnswerInterface[] => {\n  let res: EmbeddedQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [\n      ...res,\n      {\n        id: answer.id,\n        value: answer.value,\n        status: answer.status,\n      },\n    ];\n  }\n  return res;\n};\n","import React from \"react\";\nimport { MdInfoOutline } from \"react-icons/md\";\n\nconst NoSession = () => {\n  return (\n    <div className=\"my-5\">\n      <div className=\"bg-yellow-100 rounded flex flex-col items-center justify-center p-6 my-8 text-yellow-900 border border-yellow-900\">\n        <MdInfoOutline className=\"text-6xl md:text-9xl\" />\n        <div className=\"text-center flex flex-col\">\n          <span className=\"text-2xl md:text-4xl font-extrabold\">\n            No session available\n          </span>\n          <span className=\"text-lg\">\n            Please Wait for the system to publish the sessions or contact the\n            administrator\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NoSession;\n","import React from \"react\";\n\ntype TableLoadingProps = {\n  cols: number;\n};\nconst TableLoading: React.FC<TableLoadingProps> = (props) => {\n  const displayCols = (): JSX.Element[] => {\n    let colsArray: number[] = [];\n    for (let index = 0; index < props.cols; index++) {\n      colsArray.push(index);\n    }\n    let result = colsArray.map((element) => {\n      return (\n        <td className=\"p-3 text-center whitespace-nowrap\" key={element}>\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      );\n    });\n\n    return result;\n  };\n  return (\n    <>\n      <tr className=\"border-b border-gray-200\" key={228}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={22648}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={229768}>\n        {displayCols()}\n      </tr>\n    </>\n  );\n};\n\nexport default TableLoading;\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { ApplicationSession } from \"../../../actions\";\nimport {\n  course,\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimExamResultsDetails,\n} from \"../../../interfaces\";\nimport { candidatePlacementInterface } from \"../../../interfaces/placement\";\nimport { isClaimAllowed } from \"./ClaimForm\";\n\nexport const getCourseById = (courses: course[], course_id: string) => {\n  return courses.find((item) => item.course_id === course_id);\n};\n\nexport const getCourseIdBySheetId = (\n  allData: ClaimExamResultsDetails[],\n  sheet_id: string\n) => {\n  return allData.find((item) => item.answer_sheet_id === sheet_id);\n};\n\nexport const searchApplication = (\n  objList: claimApplicationsInterface[],\n  text: any\n): claimApplicationsInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (prop === \"position\") {\n        flag =\n          product.position.position_title\n            .toString()\n            .toLowerCase()\n            .indexOf(text.toLowerCase()) > -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n  // return objList.filter((product) =>\n  //   product.position.position_title.includes(text)\n  // );\n};\n\ntype FormPlacementListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  claimFileId: string;\n  viewThisFile: string;\n  myPlacement: candidatePlacementInterface | null;\n  myClaims: CandidateClaimInterface[];\n  activeSession: ApplicationSession;\n\n  // REDUX //////////////////////\n};\n\nconst FormPlacementList: React.FC<FormPlacementListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            props.myPlacement === null ||\n            isClaimAllowed(\n              props.myClaims,\n              props.activeSession.session_plan_id,\n              props.myPlacement.placed._id\n            )\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Close\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}{\" \"}\n      {/* searchData(props.candidateAnswers, searchInput) */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {props.myPlacement ? (\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            props.myPlacement.placed._id\n          ) && (\n            <div className=\"group flex items-center justify-between my-1 hover:bg-gray-100\">\n              <div\n                className=\"p-1 w-full mr-2 cursor-pointer\"\n                onClick={() => {\n                  props.setChooseClaimFile(false);\n                  props.setClaimFileId(props.myPlacement!.placed._id);\n                }}\n              >\n                <p className=\"text-base font-medium text-black\">\n                  Placed on {props.myPlacement.placed.school.school_name}\n                </p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                onClick={() => {\n                  props.setViewThisFile(props.myPlacement!.placed._id);\n                }}\n              >\n                View\n              </button>\n            </div>\n          )\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No placement to claim on!\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\n// const mapStateToProps = ({\n//   course,\n// }: StoreState): {\n//   courses: course[] | null;\n// } => {\n//   return {\n//     courses: course.courses,\n//   };\n// };\nexport default React.memo(connect(null, {})(FormPlacementList));\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, loadCourses, PushPopupAlert } from \"../../../actions\";\nimport {\n  createClaim,\n  DocumentClaimUser,\n  GetClaimingTypes,\n  getClaimReasons,\n  getMyAnswers,\n  getMyClaims,\n  getMyPlacement,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n} from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimExamResultsDetails,\n  claimReasonInterface,\n  course,\n  PlansInterface,\n  PlansTypeKeys,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { candidatePlacementInterface } from \"../../../interfaces/placement\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { API } from \"../../../utils/api\";\nimport { setAxiosToken } from \"../../../utils/AxiosToken\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { isPlanActive } from \"../../SessionSettings/ApplicationSession/SessionDetails\";\nimport ApplicationFormView from \"./ApplicationFormView\";\nimport ChooseReason from \"./ChooseReason\";\nimport DocFormView from \"./DocFormView\";\nimport ExaminationFormView from \"./ExaminationFormView\";\nimport FormApplicationList from \"./FormApplicationList\";\nimport FormDocumentList from \"./FormDocumentList\";\nimport FormExamList, {\n  getCourseById,\n  getCourseIdBySheetId,\n} from \"./FormExamList\";\nimport FormPlacementList from \"./FormPlacementList\";\n\nexport const ClaimGetDocTitle = (\n  documentCategories: DocumentReducerInterface,\n  doc: DocumentClaimUser\n): { category: string; sub_category: string; field: string; main: string } => {\n  let DocCategory: string = \"\",\n    DocSubCategory: string = \"\",\n    DocField: string = \"\",\n    DocTitle: string = \"\";\n  if (\n    doc.sub_category_id.length > 0 &&\n    documentCategories.documentSubCategory\n  ) {\n    DocTitle = documentCategories.documentSubCategory.filter(\n      (c) => c.user_detail_subcategory_id === doc.sub_category_id\n    )[0].title;\n    DocSubCategory = DocTitle;\n  } else if (\n    doc.category_id.length > 0 &&\n    documentCategories.documentCategory\n  ) {\n    DocTitle = documentCategories.documentCategory.filter(\n      (c) => c.user_detail_category_id === doc.category_id\n    )[0].title;\n    DocCategory = DocTitle;\n  }\n  if (\n    doc.category_subcategory_data &&\n    doc.category_subcategory_data.category_subcategory_Data_id.length > 0 &&\n    documentCategories.documentFields\n  ) {\n    console.log({ doc });\n    DocField = documentCategories.documentFields.filter(\n      (c) =>\n        c._id === doc.category_subcategory_data?.category_subcategory_Data_id\n    )[0].title;\n    DocTitle += \" in \" + DocField;\n  }\n\n  return {\n    category: DocCategory,\n    sub_category: DocSubCategory,\n    field: DocField,\n    main: DocTitle,\n  };\n};\n\nexport const isClaimAllowed = (\n  allClaim: CandidateClaimInterface[],\n  period_id: string,\n  claimOnId: string\n): boolean => {\n  if (\n    allClaim.find(\n      (item) =>\n        item.period_id === period_id && item.claiming_on_id === claimOnId\n    )\n  ) {\n    return false;\n  }\n  return true;\n};\n\ntype ClaimFormProps = {\n  // REQUIRED PROPS\n  formState: boolean;\n  setFormState: (value: boolean, response?: boolean) => void;\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  courses: course[] | null;\n  loadCourses: Function;\n  getMyAnswers: Function;\n  getMyPlacement: Function;\n  getClaimReasons: Function;\n  createClaim: Function;\n  GetClaimingTypes: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  getMyRejectedApplications: Function;\n  getMyRejectedDocuments: Function;\n  getMyClaims: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype ClaimFormState = {\n  loading: boolean;\n  loadingForm: boolean;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  thisClaimType: PlansTypeKeys | null;\n  thisClaimTypeId: string;\n  claimComment: string;\n  claimFileId: string;\n  chooseClaimFile: boolean;\n  chooseClaimReason: boolean;\n  claimReason: claimReasonInterface | null;\n  myPlacement: candidatePlacementInterface | null;\n  viewThisFile: string;\n  formType: \"DEFAULT\" | \"PROPS\";\n  alertError: string | null;\n};\n\nclass ClaimForm extends Component<ClaimFormProps, ClaimFormState> {\n  constructor(props: ClaimFormProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      loadingForm: false,\n      formError: null,\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      claimFileId: \"\",\n      chooseClaimFile: false,\n      viewThisFile: \"\",\n      formType: \"DEFAULT\",\n      alertError: null,\n      myPlacement: this.props.claiming.myPlacement,\n      chooseClaimReason: false,\n      claimReason: null,\n    };\n  }\n\n  setLoading = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  setLoadingForm = (state: boolean) => {\n    this.setState({ loadingForm: state });\n  };\n\n  setFormError = (\n    data: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: data });\n  };\n\n  setAlertError = (data: string | null) => {\n    this.setState({ alertError: data });\n  };\n\n  setClaimFileId = (data: string) => {\n    this.setState({ claimFileId: data });\n  };\n\n  setViewThisFile = (data: string) => {\n    this.setState({ viewThisFile: data });\n  };\n\n  setChooseClaimFile = (data: boolean) => {\n    this.setState({ chooseClaimFile: data });\n  };\n\n  setChooseClaimReason = (data: boolean) => {\n    this.setState({ chooseClaimReason: data });\n  };\n\n  setClaimReason = (value: claimReasonInterface | null) => {\n    this.setState({ claimReason: value });\n  };\n\n  setClaimComment = (data: string) => {\n    this.setState({ claimComment: data });\n  };\n\n  isClaimTypeOpen = (\n    thisSession: SessionPlanInterface,\n    thisType: PlansTypeKeys\n  ): boolean => {\n    let data: PlansInterface | undefined;\n    if (thisType === PlansTypeKeys.APPLICATION) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.APPLICATION\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    } else if (thisType === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.DOCUMENT_VALIDATION\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    } else if (thisType === PlansTypeKeys.PLACEMENT_TRANSFER) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.PLACEMENT_TRANSFER\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  displayClaimType = (claimType: PlansTypeKeys): string => {\n    let result: string = \"\";\n    switch (claimType) {\n      case PlansTypeKeys.APPLICATION:\n        result = \"application\";\n        break;\n      case PlansTypeKeys.DOCUMENT_VALIDATION:\n        result = \"document\";\n        break;\n      case PlansTypeKeys.EXAMINATION:\n        result = \"exam\";\n        break;\n      case PlansTypeKeys.MARKS_PUBLICATION:\n        result = \"marks publication\";\n        break;\n      case PlansTypeKeys.PLACEMENT_TRANSFER:\n        result = \"placement\";\n        break;\n      default:\n        result = \"\";\n        break;\n    }\n\n    return result;\n  };\n\n  loadExamAnswers = (\n    activeSessionPlan: SessionPlanInterface,\n    user_id: string\n  ) => {\n    this.props.getMyAnswers(\n      activeSessionPlan.session_plan_id,\n      user_id,\n      (status: boolean, msg: string, data: ClaimExamResultsDetails[]) => {\n        this.setLoading(status);\n        if (!status && msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n        if (data) {\n          console.log(\"====================================\");\n          console.log({ loadExamAnswers: data });\n          console.log(\"====================================\");\n        }\n      }\n    );\n  };\n\n  componentDidMount = () => {\n    if (this.props.auth.application_session === null) {\n      this.props.PushPopupAlert({\n        title: \"No session active session\",\n        theme: PopupAlertTheme.danger,\n      });\n      this.props.setFormState(false);\n      this.setState({\n        claimFileId: \"\",\n        thisClaimType: null,\n        thisClaimTypeId: \"\",\n        claimComment: \"\",\n        chooseClaimFile: false,\n        formType: \"DEFAULT\",\n        viewThisFile: \"\",\n        formError: null,\n      });\n    } else {\n      if (this.props.documentReducer.documentCategory === null) {\n        this.props.getDocumentCategory();\n      }\n      if (this.props.documentReducer.documentSubCategory === null) {\n        this.props.getDocumentSubCategory();\n      }\n      if (this.props.documentReducer.documentFields === null) {\n        this.props.getDocumentFields();\n      }\n      if (this.props.claiming.claimReasons === null) {\n        this.props.getClaimReasons((status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          }\n        });\n      }\n    }\n  };\n\n  getDocumentById = (\n    documents: DocumentClaimUser[],\n    doc_id: string\n  ): DocumentClaimUser => {\n    return documents.filter((item) => item.doc_id === doc_id)[0];\n  };\n\n  getApplicationById = (\n    applications: claimApplicationsInterface[],\n    application_id: string\n  ): claimApplicationsInterface => {\n    return applications.filter(\n      (item) => item.application_id === application_id\n    )[0];\n  };\n\n  getExamById = (\n    exams: ClaimExamResultsDetails[],\n    answer_sheet_id: string\n  ): ClaimExamResultsDetails | undefined => {\n    return exams.find((item) => item.answer_sheet_id === answer_sheet_id);\n  };\n\n  getValidation = (\n    thisId: string\n  ): {\n    old_reason: string;\n    old_status: string;\n    old_evaluated_by: string;\n  } => {\n    let result: {\n      old_reason: string;\n      old_status: string;\n      old_evaluated_by: string;\n    } = { old_reason: \"\", old_status: \"\", old_evaluated_by: \"\" };\n\n    if (\n      this.state.thisClaimType === PlansTypeKeys.DOCUMENT_VALIDATION &&\n      this.props.claiming.candidateDocuments\n    ) {\n      result = {\n        old_reason: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.comment,\n        old_status: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.validation_status,\n        old_evaluated_by: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.user_id,\n      };\n    } else if (\n      this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n      this.props.claiming.candidateApplications\n    ) {\n      result = {\n        old_reason: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.comment,\n        old_status: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.application_status,\n        old_evaluated_by: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.user_id,\n      };\n    }\n\n    return result;\n  };\n\n  cleanToClose = (response?: boolean) => {\n    this.props.setFormState(false);\n    this.setState({\n      claimFileId: \"\",\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      chooseClaimFile: false,\n      formType: \"DEFAULT\",\n      viewThisFile: \"\",\n      formError: null,\n    });\n  };\n\n  loadUserById = async (user_id: string, callback: Function) => {\n    if (isEmptyOrSpaces(user_id)) {\n      return this.props.PushPopupAlert({\n        title: \"No user id provided\",\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    try {\n      setAxiosToken();\n      const res = await axios.get<UserInterface>(\n        `${API.AUTH}/users/${user_id}`\n      );\n      console.log(\"====================================\");\n      console.log({ loadUserById: res });\n      console.log(\"====================================\");\n      if (res) {\n        callback(res.data);\n      }\n    } catch (error) {\n      console.error({ error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  getClaimTitle = (claimType: PlansTypeKeys): string => {\n    let result: string = \"\";\n    if (\n      claimType === PlansTypeKeys.DOCUMENT_VALIDATION &&\n      this.props.claiming.candidateDocuments\n    ) {\n      result = ClaimGetDocTitle(\n        this.props.documentReducer,\n        this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          this.state.claimFileId\n        )\n      ).main;\n    }\n    if (\n      claimType === PlansTypeKeys.APPLICATION &&\n      this.props.claiming.candidateApplications\n    ) {\n      result = this.getApplicationById(\n        this.props.claiming.candidateApplications,\n        this.state.claimFileId\n      ).position.position_title;\n    }\n    if (\n      claimType === PlansTypeKeys.EXAMINATION &&\n      this.props.courses &&\n      this.props.claiming.myAnswer &&\n      getCourseIdBySheetId(\n        this.props.claiming.myAnswer,\n        this.state.claimFileId\n      ) &&\n      getCourseById(\n        this.props.courses,\n        getCourseIdBySheetId(\n          this.props.claiming.myAnswer,\n          this.state.claimFileId\n        )!.course\n      )\n    ) {\n      result = getCourseById(\n        this.props.courses,\n        getCourseIdBySheetId(\n          this.props.claiming.myAnswer,\n          this.state.claimFileId\n        )!.course\n      )!.course_name;\n    }\n    if (\n      claimType === PlansTypeKeys.PLACEMENT_TRANSFER &&\n      this.state.myPlacement\n    ) {\n      result = \"Placed on \" + this.state.myPlacement.placed.school.school_name;\n    }\n\n    return result;\n  };\n\n  getClaimInstitute = (claimType: PlansTypeKeys): string => {\n    let result: string = \"\";\n    if (\n      claimType === PlansTypeKeys.APPLICATION &&\n      this.props.claiming.candidateApplications\n    ) {\n      result = this.getApplicationById(\n        this.props.claiming.candidateApplications,\n        this.state.claimFileId\n      ).position.education_institute_id.education_institute_id;\n    }\n\n    return result;\n  };\n\n  handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!this.state.thisClaimType) {\n      return this.setFormError({\n        element: \"claim_type\",\n        msg: \"Claim type is required!\",\n      });\n    }\n    if (isEmptyOrSpaces(this.state.claimFileId)) {\n      return this.setFormError({\n        element: \"claim_file\",\n        msg: `Please select ${this.state.thisClaimType.toLocaleLowerCase()} you are claiming on!`,\n      });\n    }\n\n    if (!this.state.claimReason) {\n      return this.setFormError({\n        element: \"claim_reason\",\n        msg: `Please select the reason of your claim!`,\n      });\n    }\n\n    if (isEmptyOrSpaces(this.state.claimComment)) {\n      return this.setFormError({\n        element: \"claim_comment\",\n        msg: `Claim comment is required!`,\n      });\n    }\n\n    if (!this.props.auth.application_session) {\n      return this.setAlertError(`No active claiming session is available!`);\n    }\n\n    this.setLoadingForm(true);\n    let old_evaluator_email: string = \"info@system.com\";\n    let old_evaluator_name: string = \"System\";\n    let evaluator_email: string = \"\";\n    let evaluator_name: string = \"\";\n    let title: string = this.getClaimTitle(this.state.thisClaimType);\n    let institute_id: string = this.getClaimInstitute(this.state.thisClaimType);\n\n    if (\n      this.state.thisClaimType !== PlansTypeKeys.EXAMINATION &&\n      this.getValidation(this.state.claimFileId).old_evaluated_by !== \"system\"\n    ) {\n      await this.loadUserById(\n        this.getValidation(this.state.claimFileId).old_evaluated_by,\n        (data: UserInterface) => {\n          old_evaluator_email = data.email;\n          old_evaluator_name =\n            data.user_info.fname + \" \" + data.user_info.lname;\n        }\n      );\n    }\n\n    if (this.state.thisClaimType === PlansTypeKeys.EXAMINATION) {\n    }\n\n    try {\n      // console.log(\"====================================\");\n      // console.log({\n      //   claiming_on_id: this.state.claimFileId,\n      //   type_key: this.state.thisClaimType,\n      //   user: this.props.auth.user.user_id,\n      //   period_id: this.props.auth.application_session.session_plan_id,\n      //   default_claim_resaons: this.state.claimReason.id,\n      //   reason: this.state.claimComment,\n      //   old_reason:\n      //     this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n      //     this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n      //       ? \"System\"\n      //       : this.getValidation(this.state.claimFileId).old_reason,\n      //   old_status:\n      //     this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n      //     this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n      //       ? \"Failed\"\n      //       : this.getValidation(this.state.claimFileId).old_status,\n      //   old_evaluated_by:\n      //     this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n      //     this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n      //       ? \"\"\n      //       : this.getValidation(this.state.claimFileId).old_evaluated_by,\n      //   old_evaluator_email,\n      //   old_evaluator_name,\n      //   evaluator_email,\n      //   evaluator_name,\n      //   title,\n      // });\n      // console.log(\"====================================\");\n\n      setAxiosToken();\n      const res = await axios.post<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/create`,\n        {\n          claiming_on_id: this.state.claimFileId,\n          type_key: this.state.thisClaimType,\n          user: this.props.auth.user.user_id,\n          period_id: this.props.auth.application_session.session_plan_id,\n          default_claim_resaons: this.state.claimReason.id,\n          reason: this.state.claimComment,\n          old_reason:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"System\"\n              : this.getValidation(this.state.claimFileId).old_reason,\n          old_status:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"Failed\"\n              : this.getValidation(this.state.claimFileId).old_status,\n          old_evaluated_by:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"\"\n              : this.getValidation(this.state.claimFileId).old_evaluated_by,\n          old_evaluator_email,\n          old_evaluator_name,\n          evaluator_email,\n          evaluator_name,\n          title,\n          institute_id,\n        }\n      );\n      console.log({ createClaim: res });\n      if (res.status === 201 || res.status === 200) {\n        this.props.createClaim(res.data);\n        this.props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        this.cleanToClose(true);\n      }\n    } catch (error) {\n      console.error({ error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.setLoadingForm(false);\n  };\n\n  selectClaimType = (thisClaim: string) => {\n    this.setState({\n      thisClaimType: isEmptyOrSpaces(thisClaim)\n        ? null\n        : (thisClaim as PlansTypeKeys),\n    });\n\n    if ((thisClaim as PlansTypeKeys) === PlansTypeKeys.APPLICATION) {\n      if (this.props.claiming.candidateApplications === null) {\n        this.props.getMyRejectedApplications(\n          this.props.auth.user.user_id,\n          (\n            status: boolean,\n            msg: string,\n            data?: claimApplicationsInterface[]\n          ) => {\n            this.setLoading(status);\n            if (!status) {\n              if (msg.length > 0) {\n                this.props.PushPopupAlert({\n                  title: msg,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n            }\n          }\n        );\n      }\n      if (\n        this.props.courses === null ||\n        (this.props.courses.length === 0 && this.state.loading)\n      ) {\n        this.props.loadCourses(this.setLoading);\n        this.setLoading(false);\n      } else {\n        this.setLoading(false);\n      }\n    } else if ((thisClaim as PlansTypeKeys) === PlansTypeKeys.EXAMINATION) {\n      if (\n        this.props.courses === null ||\n        (this.props.courses.length === 0 && this.state.loading)\n      ) {\n        this.props.loadCourses(this.setLoading);\n        this.setLoading(false);\n      } else {\n        this.setLoading(false);\n      }\n    } else if (\n      (thisClaim as PlansTypeKeys) === PlansTypeKeys.DOCUMENT_VALIDATION\n    ) {\n      if (this.props.claiming.candidateDocuments === null) {\n        this.props.getMyRejectedDocuments(\n          (status: boolean, msg: string, data?: DocumentClaimUser[]) => {\n            this.setLoading(status);\n            if (!status) {\n              if (msg.length > 0) {\n                this.props.PushPopupAlert({\n                  title: msg,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n            }\n          }\n        );\n      }\n    } else if (\n      (thisClaim as PlansTypeKeys) === PlansTypeKeys.PLACEMENT_TRANSFER\n    ) {\n      if (this.props.claiming.myPlacement === null) {\n        this.props.getMyPlacement(\n          this.props.auth.user.user_id,\n          (\n            status: boolean,\n            msg: string,\n            data?: candidatePlacementInterface | null\n          ) => {\n            this.setLoading(status);\n            if (!status) {\n              if (msg.length > 0) {\n                this.props.PushPopupAlert({\n                  title: msg,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n            }\n            if (data) {\n              this.setState({ myPlacement: data });\n            }\n          }\n        );\n      }\n    }\n  };\n\n  generateChooseFileTitle = (thisClaimType: PlansTypeKeys | null): string => {\n    let result: string = \"\";\n\n    switch (thisClaimType) {\n      case PlansTypeKeys.APPLICATION:\n        result = `Select application you are claiming on?`;\n        break;\n      case PlansTypeKeys.DOCUMENT_VALIDATION:\n        result = `Select document you are claiming on?`;\n        break;\n      case PlansTypeKeys.EXAMINATION:\n        result = `Select exam you are claiming on?`;\n        break;\n      case PlansTypeKeys.MARKS_PUBLICATION:\n        result = `Select marks publication you are claiming on?`;\n        break;\n      case PlansTypeKeys.PLACEMENT_TRANSFER:\n        result = `Select placement you are claiming on?`;\n        break;\n      default:\n        result = \"Select file you are claiming on?\";\n        break;\n    }\n\n    return result;\n  };\n\n  render() {\n    if (\n      this.props.auth.application_session === null ||\n      this.props.claiming.myClaims === null\n    ) {\n      return null;\n    }\n\n    return (\n      <div className=\"pb-3\">\n        {this.props.formState && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={(): void => {\n              !this.state.loadingForm &&\n                this.state.viewThisFile.length <= 0 &&\n                this.cleanToClose();\n              !this.state.loadingForm &&\n                this.state.viewThisFile.length > 0 &&\n                this.setViewThisFile(\"\");\n            }}\n            displayClose={true}\n            backDropClose={false}\n            title={\n              <div className=\"text-gray-900 font-bold text-xl md:ml-1\">\n                {this.state.viewThisFile.length <= 0 && \"Claiming form\"}\n                {this.state.viewThisFile.length > 0 &&\n                  this.state.thisClaimType ===\n                    PlansTypeKeys.DOCUMENT_VALIDATION &&\n                  \"Viewing document\"}\n                {this.state.viewThisFile.length > 0 &&\n                  this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n                  \"Viewing application\"}\n              </div>\n            }\n            widthSizeClass={\n              this.state.viewThisFile.length > 0\n                ? ModalSize.extraLarge\n                : ModalSize.medium\n            }\n            padding={{ title: true, body: false, footer: false }}\n          >\n            {/* CLAIM FORM ============================================== */}\n            {this.state.viewThisFile.length <= 0 && (\n              <form onSubmit={(e) => this.handleSubmit(e)}>\n                <div className=\"px-6 pb-3\">\n                  {this.state.alertError && (\n                    <div\n                      className=\"alert-warning cursor-pointer\"\n                      onClick={() => this.setAlertError(null)}\n                    >\n                      {this.state.alertError}\n                    </div>\n                  )}\n                  <div className=\"text-base text-gray-700 sm:text-lg\">\n                    {/* SELECT CLAIM TYPE ============================================== */}\n                    <div className=\"flex flex-col mb-2\">\n                      <label>Claim type</label>\n                      <select\n                        className={`rounded px-2 py-2 w-full bg-white focus:outline-none ${\n                          this.state.formType === \"PROPS\" &&\n                          \"cursor-not-allowed\"\n                        } ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_type\"\n                            ? \"border-red-500\"\n                            : \"border-gray-500\"\n                        } border-2`}\n                        onChange={(e: React.ChangeEvent<HTMLSelectElement>) => {\n                          this.selectClaimType(e.target.value);\n                          this.setClaimFileId(\"\");\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_type\" &&\n                            this.setFormError(null);\n                        }}\n                        value={\n                          this.state.thisClaimType\n                            ? this.state.thisClaimType\n                            : \"\"\n                        }\n                        disabled={\n                          this.state.loadingForm ||\n                          this.state.formType === \"PROPS\"\n                        }\n                      >\n                        <option value=\"\">Choose claim type</option>\n                        {Object.values(PlansTypeKeys).map((item, index) => (\n                          <option\n                            value={item}\n                            key={index + item}\n                            className={`${\n                              item === PlansTypeKeys.MARKS_PUBLICATION ||\n                              item === PlansTypeKeys.PLACEMENT_TRANSFER\n                                ? \"hidden\"\n                                : \"block\"\n                            }`}\n                          >\n                            {capitalizeFirstLetter(\n                              item.toLocaleLowerCase().replace(/_/g, \" \")\n                            )}\n                          </option>\n                        ))}\n                      </select>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_type\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END SELECT CLAIM TYPE ============================================== */}\n\n                    {/* SELECT FILE TO CLAIM ON ============================================== */}\n                    <div className=\"flex flex-col mb-2\">\n                      <label>\n                        {this.generateChooseFileTitle(this.state.thisClaimType)}\n                      </label>\n                      <div\n                        className={`text-left bg-white border-2 ${\n                          this.state.formType !== \"PROPS\"\n                            ? \"border-gray-700\"\n                            : \"border-gray-400 text-gray-500\"\n                        } rounded w-full ${\n                          this.state.chooseClaimFile ? \"h-64\" : \"h-10\"\n                        } ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_file\"\n                            ? \"border-red-500\"\n                            : \"\"\n                        } border-2 ${\n                          this.state.loading\n                            ? \"cursor-waiting\"\n                            : this.state.thisClaimType &&\n                              !this.state.chooseClaimFile &&\n                              this.state.formType !== \"PROPS\"\n                            ? \"cursor-pointer\"\n                            : !this.state.chooseClaimFile &&\n                              \"cursor-not-allowed\"\n                        }`}\n                        title={\n                          !this.state.thisClaimType\n                            ? \"Choose claim type first!\"\n                            : \"\"\n                        }\n                        onClick={() => {\n                          !this.state.loading &&\n                            this.state.formType === \"DEFAULT\" &&\n                            this.state.thisClaimType &&\n                            !this.state.chooseClaimFile &&\n                            this.setChooseClaimFile(true);\n                          !this.state.loading &&\n                            this.state.formError &&\n                            this.state.formError.element === \"claim_file\" &&\n                            this.setFormError(null);\n                        }}\n                      >\n                        {/* DISPLAYING FILTERED SELECTING FILE ============================ */}\n                        {this.state.claimFileId.length > 0 &&\n                        this.state.thisClaimType &&\n                        !this.state.chooseClaimFile ? (\n                          <p className=\"my-1 mx-2\">\n                            {this.getClaimTitle(this.state.thisClaimType)}\n                          </p>\n                        ) : (\n                          !this.state.chooseClaimFile && (\n                            <p className=\"my-1 mx-2\">\n                              Select Claim{\" \"}\n                              {this.state.thisClaimType &&\n                                this.state.thisClaimType\n                                  .toLocaleLowerCase()\n                                  .replace(/_/g, \" \")}\n                            </p>\n                          )\n                        )}\n                        {/* END DISPLAYING FILTERED SELECTING FILE ============================ */}\n\n                        {/* LISTING OF REJECTED DOCUMENTS ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.DOCUMENT_VALIDATION &&\n                          this.props.claiming.candidateDocuments &&\n                          this.props.claiming.myClaims &&\n                          this.props.auth.application_session && (\n                            <FormDocumentList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              claimFileId={this.state.claimFileId}\n                              viewThisFile={this.state.viewThisFile}\n                              candidateDocuments={\n                                this.props.claiming.candidateDocuments\n                              }\n                              documentCategories={this.props.documentReducer}\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.auth.application_session\n                              }\n                            />\n                          )}\n                        {/* END LISTING OF REJECTED DOCUMENTS ============================ */}\n                        {/* ---------------------------------------------------------- */}\n                        {/* LISTING OF REJECTED APPLICATION ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.APPLICATION &&\n                          this.props.claiming.candidateApplications &&\n                          this.props.claiming.myClaims &&\n                          this.props.auth.application_session && (\n                            <FormApplicationList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              claimFileId={this.state.claimFileId}\n                              viewThisFile={this.state.viewThisFile}\n                              candidateApplications={\n                                this.props.claiming.candidateApplications\n                              }\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.auth.application_session\n                              }\n                            />\n                          )}\n                        {/* END LISTING OF REJECTED APPLICATION ============================ */}\n                        {/* ---------------------------------------------------------- */}\n                        {/* LISTING OF FAILED EXAM ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.EXAMINATION &&\n                          this.props.claiming.myAnswer &&\n                          this.props.claiming.myClaims &&\n                          this.props.auth.application_session && (\n                            <FormExamList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              claimFileId={this.state.claimFileId}\n                              viewThisFile={this.state.viewThisFile}\n                              candidateAnswers={this.props.claiming.myAnswer}\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.auth.application_session\n                              }\n                            />\n                          )}\n                        {/* END LISTING OF FAILED EXAM ============================ */}\n                        {/* ---------------------------------------------------------- */}\n                        {/* PENDING PLACEMENT ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.PLACEMENT_TRANSFER &&\n                          this.props.claiming.myClaims &&\n                          this.props.auth.application_session && (\n                            <FormPlacementList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              claimFileId={this.state.claimFileId}\n                              viewThisFile={this.state.viewThisFile}\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.auth.application_session\n                              }\n                              myPlacement={this.state.myPlacement}\n                            />\n                          )}\n                        {/* END LISTING OF FAILED Placement ============================ */}\n                      </div>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_file\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END SELECT FILE TO CLAIM ON ============================================== */}\n\n                    {/* CLAIM REASONS ========================================== */}\n                    <div className=\"flex flex-col mb-2\">\n                      <label>Choose reason of your claim</label>\n                      <div\n                        className={`text-left bg-white border-2 border-gray-700 rounded w-full ${\n                          this.state.chooseClaimReason ? \"h-64\" : \"h-auto\"\n                        } ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_reason\"\n                            ? \"border-red-500\"\n                            : \"\"\n                        } border-2 ${\n                          this.props.claiming.claimReasons === null\n                            ? \"cursor-wait\"\n                            : \"cursor-pointer\"\n                        }`}\n                        title=\"Choose the reason for your claim!\"\n                        onClick={() => {\n                          !this.state.chooseClaimReason &&\n                            this.setState({ chooseClaimReason: true });\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_reason\" &&\n                            this.setFormError(null);\n                        }}\n                      >\n                        {/* DISPLAYING SELECTED REASON ============================ */}\n                        {this.state.claimReason &&\n                        !this.state.chooseClaimReason ? (\n                          <p className=\"my-1 mx-2\">\n                            {this.state.claimReason.reason}\n                          </p>\n                        ) : (\n                          !this.state.chooseClaimReason && (\n                            <p className=\"my-1 mx-2\">Select reason</p>\n                          )\n                        )}\n                        {/* END DISPLAYING SELECTED REASON ============================ */}\n\n                        {/* LISTING OF CLAIM REASONS ============================ */}\n                        {this.state.chooseClaimReason &&\n                          this.props.claiming.claimReasons && (\n                            <ChooseReason\n                              setChooseClaimReason={this.setChooseClaimReason}\n                              setClaimReason={this.setClaimReason}\n                              claimReason={this.state.claimReason}\n                              allClaimReasons={this.props.claiming.claimReasons}\n                            />\n                          )}\n                        {/* END LISTING OF CLAIM REASONS ============================ */}\n                      </div>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_reason\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END CLAIM REASONS ========================================== */}\n\n                    {/* CLAIM COMMENT ============================================== */}\n                    <div className=\"flex flex-col\">\n                      <label>Comment</label>\n                      <textarea\n                        className={`text-left input-white w-20 inline-block ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_comment\"\n                            ? \"border-red-500\"\n                            : \"border-gray-500\"\n                        } border-2`}\n                        placeholder={`Claim comment`}\n                        style={{ resize: \"none\" }}\n                        value={this.state.claimComment}\n                        onChange={(e) => {\n                          this.setClaimComment(e.target.value);\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_comment\" &&\n                            this.setFormError(null);\n                        }}\n                        rows={3}\n                        disabled={this.state.loadingForm}\n                      ></textarea>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_comment\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END CLAIM COMMENT ============================================== */}\n                  </div>\n\n                  <div className=\"pt-3 flex justify-between\">\n                    <button\n                      onClick={() => this.cleanToClose()}\n                      className={`btn bg-gray-400 text-white hover:bg-gray-600 focus:outline-none ${\n                        this.state.loadingForm && \"cursor-not-allowed\"\n                      }`}\n                      type=\"button\"\n                      disabled={this.state.loadingForm || this.state.loading}\n                    >\n                      Exit\n                    </button>\n                    <button\n                      className={`btn bg-primary text-white hover:bg-blue-600 focus:outline-none ${\n                        this.state.loadingForm && \"cursor-wait\"\n                      }`}\n                      type=\"submit\"\n                      disabled={this.state.loadingForm || this.state.loading}\n                    >\n                      {this.state.loadingForm ? \"Loading...\" : \"Claim\"}\n                    </button>\n                  </div>\n                </div>\n              </form>\n            )}\n            {/* END CLAIM FORM ============================================== */}\n\n            {/* CLAIM DOCUMENT VIEW ============================================== */}\n            {this.state.viewThisFile.length > 0 &&\n              this.props.claiming.candidateDocuments &&\n              this.state.thisClaimType ===\n                PlansTypeKeys.DOCUMENT_VALIDATION && (\n                <DocFormView\n                  thisDoc={this.getDocumentById(\n                    this.props.claiming.candidateDocuments,\n                    this.state.viewThisFile\n                  )}\n                  setViewThisFile={this.setViewThisFile}\n                  documentCategories={this.props.documentReducer}\n                  setChooseClaimFile={this.setChooseClaimFile}\n                  setClaimFileId={this.setClaimFileId}\n                />\n              )}\n            {/* END CLAIM DOCUMENT VIEW ============================================== */}\n            {/* ------------------------------------------------------------------------- */}\n            {/* CLAIM APPLICATION VIEW ============================================== */}\n            {this.state.viewThisFile.length > 0 &&\n              this.props.claiming.candidateApplications &&\n              this.state.thisClaimType === PlansTypeKeys.APPLICATION && (\n                <ApplicationFormView\n                  thisApplication={this.getApplicationById(\n                    this.props.claiming.candidateApplications,\n                    this.state.viewThisFile\n                  )}\n                  documentCategories={this.props.documentReducer}\n                  setChooseClaimFile={this.setChooseClaimFile}\n                  setClaimFileId={this.setClaimFileId}\n                  setViewThisFile={this.setViewThisFile}\n                />\n              )}\n            {/* END CLAIM APPLICATION VIEW ============================================== */}\n            {/* ------------------------------------------------------------------------- */}\n            {/* CLAIM EXAMINATION VIEW ============================================== */}\n            {this.state.viewThisFile.length > 0 &&\n              this.props.claiming.myAnswer &&\n              this.state.thisClaimType === PlansTypeKeys.EXAMINATION &&\n              this.getExamById(\n                this.props.claiming.myAnswer,\n                this.state.viewThisFile\n              ) && (\n                <ExaminationFormView\n                  thisAnswerSheet={\n                    this.getExamById(\n                      this.props.claiming.myAnswer,\n                      this.state.viewThisFile\n                    )!\n                  }\n                  setChooseClaimFile={this.setChooseClaimFile}\n                  setClaimFileId={this.setClaimFileId}\n                  setViewThisFile={this.setViewThisFile}\n                  // thisAnswerSheet={undefined}\n                  // setViewThisFile={undefined}\n                  // setChooseClaimFile={undefined}\n                  // setClaimFileId={undefined}\n                />\n              )}\n            {/* END CLAIM EXAMINATION VIEW ============================================== */}\n          </Modal>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  document,\n  claiming,\n  course,\n}: StoreState): {\n  auth: Auth;\n  documentReducer: DocumentReducerInterface;\n  claiming: ClaimingReducerType;\n  courses: course[] | null;\n} => {\n  return {\n    auth: auth,\n    documentReducer: document,\n    claiming,\n    courses: course.courses,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    loadCourses,\n    getMyClaims,\n    getClaimReasons,\n    getMyAnswers,\n    getMyPlacement,\n    createClaim,\n    GetClaimingTypes,\n    getMyRejectedApplications,\n    getMyRejectedDocuments,\n    getDocumentCategory,\n    getDocumentSubCategory,\n    getDocumentFields,\n    PushPopupAlert,\n  })(ClaimForm)\n);\n","import {\n  ApplicationStates,\n  SESSION_PLAN_KEYS,\n} from \"../interfaces/application\";\n\nexport interface SystemSettingsInterface {\n  system_setting_id: string;\n  name: string;\n  key: string;\n  status: \"enabled\" | \"disabled\";\n}\n\nexport interface ApplicationSessionInterface {\n  is_active: boolean;\n  application_session_name: string;\n  period: string;\n  application_start_date: string;\n  application_end_date: string;\n  createdAt: string;\n  updatedAt: string;\n  application_session_id: string;\n}\n\nexport interface UserInfoInterface {\n  document_type?: string;\n  issue_number?: string;\n  date_of_issue?: string;\n  date_of_expiry?: string;\n  place_of_issue?: string;\n  application_number?: string;\n  fname: string;\n  lname: string;\n  sex: \"M\" | \"F\";\n  father_names: string;\n  mother_names: string;\n  date_of_birth: string;\n  place_of_birth?: string;\n  country_of_birth: string;\n  village_id: string;\n  village: string;\n  cell: string;\n  sector: string;\n  district: string;\n  province: string;\n  photo?: string;\n  civil_status?: string;\n  spouse?: any;\n  status?: string;\n}\n\nexport interface MySchoolInterface {\n  _id: string;\n  school_name: string;\n  school_code: string;\n  province_id: string;\n  province_code: string;\n  district_id: {\n    _id: string;\n    district_name: string;\n  };\n  district_code: string;\n  sector_code: string;\n  sector_id: string;\n  school_status: string;\n  status: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface UserInterface {\n  user_id: string;\n  _id?: string;\n  n_id?: string;\n  phone_number: string;\n  email: string;\n  password?: string;\n  user_info: UserInfoInterface;\n  details: UserDocumentsInterface[];\n  user_photo?: string;\n  default_access: RoleToUserInterface | null;\n  custome_access: CustomeAccessInterface | null;\n  is_active: boolean;\n  disability: boolean;\n  in_education: boolean;\n}\n\nexport interface CandidateDetailsInterface_old {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: string;\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  } | null;\n  doc_history_status: string;\n  get_in_date: string;\n  approved?: string;\n}\n\nexport interface CandidateDetailsInterface {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: string;\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  } | null;\n  doc_history_status: string;\n  get_in_date: string;\n  approved?: string;\n}\n\nexport interface DocInterface {\n  category_subcategory_data: string;\n  school: string;\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  approved: string;\n  doc_id: string;\n  validated_by: null;\n  validation_status: string;\n  doc_history_status: string;\n  get_in_date: string;\n  date_modefied: string;\n}\n\nexport interface CandidateRoleToUserInterface {\n  key: string;\n  status: number;\n  access: boolean;\n  assigned_date: string;\n}\n\nexport interface CandidatesInterface_old {\n  user_id: string;\n  n_id: string;\n  fname: string;\n  lname: string;\n  phone_number: string;\n  district: string;\n  email: string;\n  details: CandidateDetailsInterface[];\n}\n\nexport interface ApplicationExamsInterface {\n  course_id: string;\n  proctoring_type: string;\n  center_id: string;\n  room_id: string;\n}\n\nexport interface CandidatesInterface {\n  user_id: string;\n  n_id: string;\n  fname: string;\n  lname: string;\n  phone_number: string;\n  district: string;\n  email: string;\n  in_education: boolean;\n  disability: boolean;\n  residence: {\n    province_id: string;\n    province_name: string;\n    district_id: string;\n    district_name: string;\n    sector_id: string;\n    sector_name: string;\n  };\n  details: CandidateDetailsInterface[];\n  exams: ApplicationExamsInterface[];\n}\n\nexport interface CustomeAccessInterface {\n  access: AccessTaskInterface[];\n  user_id: string;\n  custome_user_access_id: string;\n}\n\nexport interface UserDocumentsInterface {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: { title: string; school_id: string | null };\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  approved: \"waiting\" | \"approved\" | \"rejected\";\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    commet: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  };\n}\n\nexport interface SystemUserRoleInterface {\n  system_user_role_id: string;\n  role: string;\n  status: boolean;\n  access: AccessTaskInterface[];\n  district_required?: boolean;\n  school_required?: boolean;\n  room_required?: boolean;\n  education_institution_required?: boolean;\n  school_id: string;\n  district_id: string;\n}\n\nexport interface CustomeUserAccessInterface {\n  user_id: string;\n  access?: [\n    {\n      id: string;\n      task: string;\n      key: string;\n      permitted: {\n        create: boolean;\n        delete: boolean;\n        update: boolean;\n        view: boolean;\n      };\n    }\n  ];\n}\n\nexport interface PermissionInterface {\n  create: boolean;\n  view: boolean;\n  update: boolean;\n  delete: boolean;\n}\n\nexport interface AccessTaskInterface {\n  id: string;\n  task: string;\n  key: string;\n  permitted: PermissionInterface;\n}\n\nexport interface RoleToUserInterface {\n  system_user_role_id: string;\n  role: string;\n  access: AccessTaskInterface[];\n  status?: number;\n  school_id: string;\n  district_id: string;\n  room_id: string;\n  education_institution_id: string;\n}\n\nexport interface RoomsInterface {\n  occupied: number;\n  isUsed: boolean;\n  room_type: string;\n  room_number: number;\n  capacity: number;\n  _id: string;\n}\n\nexport interface CentersInterface {\n  rooms: RoomsInterface[];\n  isUsed: boolean;\n  _id: string;\n  center_name: string;\n  center_code: number;\n  district_id: string;\n}\n\nexport interface SectorInterface {\n  district_code: number;\n  district_id: string;\n  sector_name: string;\n  sector_code: number;\n  sector_id: string;\n}\n\nexport interface AllDistrictInterface {\n  sectors: string[];\n  centers: string[];\n  district_name: string;\n  district_code: string;\n  province_code: string;\n  province_id: string;\n  status: number;\n  createdAt: string;\n  updatedAt: string;\n  district_id: string;\n}\nexport interface DistrictInterface {\n  centers: CentersInterface[];\n  sectors: SectorInterface[];\n  province_code: number;\n  province_id: string;\n  district_name: string;\n  district_code: number;\n  _id: string;\n}\n\nexport interface RoomLocationInterface {\n  districts: DistrictInterface[];\n  province_name: string;\n  province_code: number;\n  _id: string;\n}\n\nexport interface AssignRoleToUserActionInterface {\n  user_id: string;\n  data: RoleToUserInterface;\n}\n\nexport interface AssignRoleToUserActionInterface {\n  user_id: string;\n  data: RoleToUserInterface;\n}\n\nexport enum PostRequestStatusInterface {\n  INITIATED = \"initiated\",\n  CONFIRMED = \"confirmed\",\n  RECEIVED = \"received\",\n}\n\nexport interface PostSchoolInterface_old {\n  post_at_school_id: string;\n  school_id: string;\n  position_id: string;\n  district_id: string;\n  needed_posts: number;\n  confirmed_posts?: number;\n  occupied_posts?: number;\n  requested_by: string;\n  confirmed_by?: string;\n  received_posts?: number;\n  request_date: Date;\n  approval_date?: Date;\n  post_at_school_status: PostRequestStatusInterface;\n}\n\nexport interface PostSchoolInterface {\n  _id: string;\n  school_id: string;\n  position_id: string;\n  district_id: string;\n  needed_posts: number;\n  male_number: number;\n  female_number: number;\n  description: string;\n  confirmed_posts?: number;\n  occupied_posts?: number;\n  requested_by: string;\n  confirmed_by?: string;\n  received_posts?: number;\n  request_date: Date;\n  approval_date?: Date;\n  requested_post_status: PostRequestStatusInterface;\n  school: {\n    _id: string;\n    school_name: string;\n    school_code: string;\n    province_id: string;\n    province_code: string;\n    district_id: {\n      _id: string;\n      district_name: string;\n    };\n    district_code: string;\n    sector_code: string;\n    sector_id: string;\n    school_status: string;\n    status: number;\n    createdAt: string;\n    updatedAt: string;\n  };\n  post_request_session_id: string;\n}\n\nexport interface SchoolInfoInterface {\n  school_id: string;\n  school_title: string;\n  district_id: string;\n  number_of_females?: number;\n  number_of_males?: number;\n}\n\nexport interface SchoolsInterface {\n  _id: string;\n  status: boolean;\n  school_name: string;\n  school_code: number;\n  province_id: string;\n  province_code: number;\n  district_id: string;\n  district_code: number;\n  sector_id: string;\n  sector_code: number;\n  education_category_id: string;\n}\n\nexport interface MySchoolInterface {\n  _id: string;\n  school_name: string;\n  school_code: string;\n  province_id: string;\n  province_code: string;\n  district_id: {\n    _id: string;\n    district_name: string;\n  };\n  district_code: string;\n  sector_code: string;\n  sector_id: string;\n  school_status: string;\n  status: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface SchoolLevelInterface {\n  school_level_id: string;\n  school_level_name: string;\n  description: string;\n  education_institute: string[];\n  courses: [];\n}\n\nexport interface CourseInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n}\n\nexport interface EducationInstituteInterface {\n  education_category_title: string;\n  school_levels: [];\n  description: string;\n  education_institute_id: string;\n}\n\nexport interface PositionRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface PositionInterface {\n  courses: CourseInterface[];\n  position_title: string;\n  description: string;\n  school_level_id: SchoolLevelInterface;\n  education_institute_id: EducationInstituteInterface;\n  requirements: PositionRequirementInterface[];\n  position_id: string;\n}\n\nexport enum DocumentAttributesInterface {\n  \"Title\" = \"title\",\n  \"Description\" = \"description\",\n  \"Files\" = \"files\",\n  \"email\" = \"email\",\n  \"names\" = \"names\",\n  \"phone_number\" = \"phone_number\",\n  \"position\" = \"position\",\n  \"relation\" = \"relation\",\n  \"src\" = \"src\",\n  \"year\" = \"year\",\n  \"company\" = \"company\",\n  \"category_subcategory_data\" = \"category_subcategory_data\",\n  \"others\" = \"others\",\n  \"start_year\" = \"start_year\",\n  \"end_year\" = \"end_year\",\n  \"School\" = \"School\",\n}\n\nexport enum DocValidationStatusInterface {\n  APPROVED = \"approved\",\n  REJECTED = \"rejected\",\n}\n\nexport interface DocumentCategoryInterface {\n  user_detail_category_id: string;\n  title: string;\n  description: string;\n  fields: DocumentAttributesInterface[];\n}\n\nexport interface DocumentSubCategoryInterface {\n  category_id: string;\n  title: string;\n  description: string;\n  user_detail_subcategory_id: string;\n}\n\nexport interface DocumentFieldsInterface {\n  _id: string;\n  category_id: string;\n  subcategory_id: string | null;\n  title: string;\n  description: string;\n  others: [];\n}\n\nexport interface ApplicationAssessmentInterface {\n  application_id: string;\n  user_id: string;\n  application_session: string;\n  application_status: string;\n  n_id: string;\n  phone_number: string;\n  email: string;\n  fname: string;\n  lname: string;\n  sex: \"M\" | \"F\";\n  district: string;\n  position: PositionApplicationInterface;\n  details: CandidateDetailsInterface[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface AdminApplicationsToPrintInterface {\n  application_id: number;\n  names: string;\n  gender?: string;\n  national_id?: string;\n  phone?: string;\n  email?: string;\n  position: string;\n  education_category?: string;\n  application_session?: string;\n  district?: string;\n  date?: string;\n  decision?: ApplicationStates;\n}\n\nexport interface PositionApplicationInterface {\n  courses: string[];\n  position_title: string;\n  description: string;\n  school_level_id: string;\n  education_institute_id: string;\n  requirements: PositionRequirementInterface[];\n  position_id: string;\n}\n\nexport interface PositionRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface ApplicationRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface PeriodInterface {\n  is_active: string;\n  application_session_name: string;\n  period: string;\n  application_start_date: string;\n  application_end_date: string;\n  createdAt: string;\n  updatedAt: string;\n  application_session_id: string;\n}\n\nexport interface LocationRoomTableInterface {\n  province_id: string;\n  province_name: string;\n  district_id: string;\n  district_name: string;\n  center_id: string;\n  center_name: string;\n  room_id: string;\n  room_name: string;\n  capacity: number;\n  occupied: number;\n}\n\nexport interface LocationSectorTableInterface {\n  province_id: string;\n  province_name: string;\n  province_code: number;\n  district_id: string;\n  district_name: string;\n  district_code: number;\n  sector_id: string;\n  sector_name: string;\n  sector_code: number;\n}\n\nexport interface PositionRequirementsFieldInterface {\n  category_id: string;\n  category_name: string;\n  sub_category_id: string;\n  sub_category_name: string;\n  field_id: string;\n  field_name: string;\n  sub_category_required: boolean;\n  required: boolean;\n  isAnyField: boolean;\n}\n\nexport interface PositionRequirementsQualificationInterface {\n  category_id: string;\n  category_name: string;\n  sub_category_id: string;\n  sub_category_name: string;\n  fields: DocumentFieldsInterface[];\n  required: boolean;\n}\n\nexport interface ApplicationPeriodInterface {\n  _id: string;\n  application_status: ApplicationStates;\n  userInfo: {\n    n_id: string;\n    phone_number: string;\n    email: string;\n    user_info: {\n      document_type: string;\n      issue_number: string;\n      date_of_issue: string;\n      date_of_expiry: string;\n      place_of_issue: string;\n      application_number: string;\n      fname: string;\n      lname: string;\n      father_names: string;\n      mother_names: string;\n      sex: string;\n      date_of_birth: string;\n      place_of_birth: string;\n      country_of_birth: string;\n      village_id: string;\n      village: string;\n      cell: string;\n      sector: string;\n      district: string;\n      province: string;\n      civil_status: string;\n      spouse: null;\n      status: string;\n      photo: string;\n    };\n  };\n  user_id: string;\n  position: string;\n  application_session: string;\n  exams: ApplicationExamsInterface[];\n}\n\nexport const getDocCategoryById = (\n  subDocs: DocumentCategoryInterface[],\n  docId: string\n): DocumentCategoryInterface => {\n  return subDocs.filter((doc) => doc.user_detail_category_id === docId)[0];\n};\n\nexport const getSubDocCategoryById = (\n  subDocs: DocumentSubCategoryInterface[],\n  docId: string\n): DocumentSubCategoryInterface => {\n  return subDocs.filter((doc) => doc.user_detail_subcategory_id === docId)[0];\n};\n\nexport const SESSION_PLAN_TYPES: {\n  type_id: number;\n  type_title: string;\n  type_key: SESSION_PLAN_KEYS;\n}[] = [\n  {\n    type_id: 1,\n    type_title: \"Application\",\n    type_key: SESSION_PLAN_KEYS.APPLICATION,\n  },\n  {\n    type_id: 2,\n    type_title: \"Document Validation\",\n    type_key: SESSION_PLAN_KEYS.DOCUMENT_VALIDATION,\n  },\n  {\n    type_id: 3,\n    type_title: \"Examination\",\n    type_key: SESSION_PLAN_KEYS.EXAMINATION,\n  },\n  {\n    type_id: 4,\n    type_title: \"Marks Publication\",\n    type_key: SESSION_PLAN_KEYS.MARKS_PUBLICATION,\n  },\n  {\n    type_id: 5,\n    type_title: \"Placement and Transfer\",\n    type_key: SESSION_PLAN_KEYS.PLACEMENT_TRANSFER,\n  },\n];\n","import { ApexOptions } from \"apexcharts\";\nimport React, { useEffect, useState } from \"react\";\nimport Chart from \"react-apexcharts\";\n\ntype VBarCharPropstInterface = {\n  labels: string[];\n  categoriesLabel: any;\n  bar?: {\n    borderRadius: number;\n    horizontal: boolean;\n    columnWidth: string;\n    endingShape: string;\n  };\n  dataLabels: boolean;\n  yaxisText: string;\n  tooltipText: string;\n  series: {\n    name: string;\n    data: number[];\n  }[];\n  defaultBar?: {\n    borderRadius: number;\n    horizontal: boolean;\n    columnWidth: string;\n    endingShape: string;\n  };\n  colors?: any[];\n  title?: {\n    text: string;\n    align: string;\n    margin: number;\n    offestY: number;\n    style: {\n      fontSize: string;\n    };\n  };\n  stacked?: boolean;\n  FC_LoadSelected?: (labelIndex: number, seriesIndex: number) => void;\n  chartHeight?: number;\n};\n\nconst defaultBar = {\n  borderRadius: 4,\n  horizontal: false,\n  columnWidth: \"95%\",\n  endingShape: \"rounded\",\n};\n\nconst VBarChart: React.FC<VBarCharPropstInterface> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [options, setOptions] = useState<ApexOptions>({\n    chart: {\n      events: {\n        dataPointSelection: (event, chartContext, config) => {\n          console.log({\n            labelClicked: config.w.config.labels[config.dataPointIndex],\n            // seriesClicked: config.w.config.series[config.dataPointIndex],\n          });\n          if (props.FC_LoadSelected) {\n            props.FC_LoadSelected(config.dataPointIndex, config.seriesIndex);\n          }\n          // console.log(config.seriesIndex);\n          // console.log(config.dataPointIndex);\n        },\n      },\n      stacked: props.stacked ? props.stacked : false,\n    },\n    plotOptions: {\n      bar: props.defaultBar ? props.defaultBar : defaultBar,\n    },\n    labels: props.labels,\n    dataLabels: {\n      enabled: true,\n    },\n    xaxis: {\n      labels: {\n        rotate: -45,\n      },\n      categories: props.categoriesLabel,\n      tickPlacement: \"on\",\n    },\n    yaxis: {\n      title: {\n        text: props.yaxisText,\n      },\n    },\n    fill: {\n      opacity: 1,\n    },\n    tooltip: {\n      y: {\n        formatter: function (val: number) {\n          return val + \" \" + props.tooltipText;\n        },\n      },\n    },\n    grid: {\n      padding: {\n        left: 30, // or whatever value that works\n        right: 30, // or whatever value that works\n      },\n    },\n    noData: {\n      text: \"No data found\",\n      align: \"center\",\n      verticalAlign: \"middle\",\n    },\n  });\n\n  useEffect(() => {\n    if (props.colors && props.colors.length > 0 && loading) {\n      setOptions({\n        chart: {\n          stacked: props.stacked ? props.stacked : false,\n          events: {\n            dataPointSelection: (event, chartContext, config) => {\n              console.log({\n                chartClicked: config.w.config.labels[config.dataPointIndex],\n              });\n              if (props.FC_LoadSelected) {\n                props.FC_LoadSelected(\n                  config.dataPointIndex,\n                  config.seriesIndex\n                );\n              }\n            },\n          },\n          zoom: {\n            enabled: true,\n            autoScaleYaxis: true,\n          },\n        },\n        plotOptions: {\n          bar: props.defaultBar ? props.defaultBar : defaultBar,\n        },\n        labels: props.labels,\n        dataLabels: {\n          enabled: true,\n        },\n        xaxis: {\n          labels: {\n            rotate: -45,\n          },\n          categories: props.categoriesLabel,\n          tickPlacement: \"on\",\n        },\n        yaxis: {\n          title: {\n            text: props.yaxisText,\n          },\n        },\n        fill: {\n          opacity: 1,\n        },\n        tooltip: {\n          y: {\n            formatter: function (val: number) {\n              return val + \" \" + props.tooltipText;\n            },\n          },\n        },\n        grid: {\n          padding: {\n            left: 30, // or whatever value that works\n            right: 30, // or whatever value that works\n          },\n        },\n        noData: {\n          text: \"No data found\",\n          align: \"center\",\n          verticalAlign: \"middle\",\n        },\n        colors: props.colors,\n      });\n    } else if (loading) {\n      setOptions({\n        chart: {\n          stacked: props.stacked ? props.stacked : false,\n          events: {\n            dataPointSelection: (event, chartContext, config) => {\n              console.log({\n                labelClicked: config.w.config.labels[config.dataPointIndex],\n                // seriesClicked: config.w.config.series[config.dataPointIndex],\n              });\n              if (props.FC_LoadSelected) {\n                props.FC_LoadSelected(\n                  config.dataPointIndex,\n                  config.seriesIndex\n                );\n              }\n              // console.log(config.seriesIndex);\n              // console.log(config.dataPointIndex);\n            },\n          },\n          zoom: {\n            enabled: true,\n            autoScaleYaxis: true,\n          },\n        },\n        plotOptions: {\n          bar: props.defaultBar ? props.defaultBar : defaultBar,\n        },\n        labels: props.labels,\n        dataLabels: {\n          enabled: true,\n        },\n        xaxis: {\n          labels: {\n            rotate: -45,\n          },\n          categories: props.categoriesLabel,\n          tickPlacement: \"on\",\n        },\n        yaxis: {\n          title: {\n            text: props.yaxisText,\n          },\n        },\n        fill: {\n          opacity: 1,\n        },\n        tooltip: {\n          y: {\n            formatter: function (val: number) {\n              return val + \" \" + props.tooltipText;\n            },\n          },\n        },\n        grid: {\n          padding: {\n            left: 30, // or whatever value that works\n            right: 30, // or whatever value that works\n          },\n        },\n        noData: {\n          text: \"No data found\",\n          align: \"center\",\n          verticalAlign: \"middle\",\n        },\n      });\n    }\n    setLoading(false);\n  }, [loading, options, props]);\n\n  if (loading) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading Data...\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"w-full\">\n      <Chart\n        options={options}\n        series={props.series}\n        type=\"bar\"\n        width=\"100%\"\n        height={props.chartHeight ? props.chartHeight : undefined}\n      />\n    </div>\n  );\n};\n\nexport default React.memo(VBarChart);\n","import React from \"react\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport { RiFileExcel2Fill } from \"react-icons/ri\";\n\ninterface ExportToExcelProps {\n  fileData: any[];\n  fileName: string;\n  btnName?: string;\n  className?: string;\n  showIcon?: boolean;\n}\n\nconst ExportToExcel: React.FC<ExportToExcelProps> = ({\n  fileData,\n  fileName,\n  btnName = \"Excel\",\n  className = \"flex items-center gap-1 px-4 py-1 rounded text-green-700 bg-white border hover:text-white hover:bg-green-700 border-green-700 font-bold\",\n  showIcon = true,\n}) => {\n  const fileType =\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n  const fileExtension = \".xlsx\";\n\n  const exportToCSV = (apiData: any[], fileName: string) => {\n    const ws = XLSX.utils.json_to_sheet(apiData);\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n    const data = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n\n  return (\n    <button\n      onClick={(e) => exportToCSV(fileData, fileName)}\n      className={className}\n    >\n      {showIcon && <RiFileExcel2Fill />}\n      {btnName}\n    </button>\n  );\n};\n\nexport default ExportToExcel;\n","import axios from \"axios\";\nimport React from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdInfoOutline } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { createReClaim, DocumentClaimUser } from \"../../actions/claiming\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  claimReasonInterface,\n  ClaimStatus,\n} from \"../../interfaces\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { DocumentReducerInterface } from \"../../reducers/document\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { errorToText, showDate } from \"../../utils/functions\";\nimport { ClaimGetDocTitle } from \"./Candidate/ClaimForm\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nexport const isClaimEvaluated = (\n  thisClaim: CandidateClaimInterface,\n  level: number\n): boolean => {\n  const _thisClaim = thisClaim.claims.find(\n    (item) =>\n      item.level === level && item.claim_status === ClaimStatus.EVALUATED\n  );\n  if (_thisClaim) {\n    return true;\n  }\n  return false;\n};\n\ntype ClaimDocViewProps = {\n  thisDoc: DocumentClaimUser;\n  // setViewThisFile: (value: string) => void;\n  documentCategories: DocumentReducerInterface;\n  claimReasons: claimReasonInterface[] | null;\n  thisClaim: CandidateClaimInterface;\n  viewImage: boolean;\n  setViewImage: (value: boolean) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  reClaiming: boolean;\n  setReClaiming: (value: boolean) => void;\n  reClaimingMsg: string;\n  setReClaimingMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX DATA =====================\n  createReClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst ClaimDocView: React.FC<ClaimDocViewProps> = (props) => {\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim sent successful\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim._id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Title:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {ClaimGetDocTitle(props.documentCategories, props.thisDoc).main}\n              </span>\n            </div>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewImage(!props.viewImage)}\n            >\n              {props.viewImage ? \"Hide\" : \"View\"}\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisDoc.validation_status === \"rejected\"\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } rounded px-3 py-1`}\n            >\n              {capitalizeFirstLetter(props.thisDoc.validation_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {props.thisClaim.previous.evaluater.name}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisDoc.validated_by.comment}\n            </span>\n          </div>\n\n          {/* DISPLAY IMAGE ==================================================== */}\n          {props.viewImage && (\n            <div className=\"w-full my-1 animate__animated animate__fadeIn\">\n              <img\n                src={`${API.AUTH_FILES}/${props.thisDoc.files}`}\n                alt=\"doc file\"\n                className={`w-full animate__animated animate__fadeIn`}\n              />\n            </div>\n          )}\n          {/* END DISPLAY IMAGE ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt)}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-center justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <button\n                className=\"btn btn-blue\"\n                onClick={() => props.setReClaiming(true)}\n                disabled={props.loadingRequest}\n              >\n                Reclaim\n              </button>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your reclaim...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nexport default React.memo(connect(null, {\n  createReClaim,\n  PushPopupAlert,\n})(ClaimDocView));\n","export default __webpack_public_path__ + \"static/media/mineduc.11a9ae1c.png\";","import jsPDF from \"jspdf\";\nimport { DATE } from \"../../utils/functions\";\nimport Logo from \"../../utils/mineduc.png\";\nrequire(\"jspdf-autotable\");\n\nexport const addFooters = (doc: any) => {\n  const pageCount = doc.internal.getNumberOfPages();\n\n  doc.setFont(\"helvetica\", \"italic\");\n  doc.setFontSize(8);\n  for (var i = 1; i <= pageCount; i++) {\n    doc.setPage(i);\n    doc.text(\n      \"Page \" + String(i) + \" of \" + String(pageCount),\n      doc.internal.pageSize.width / 2,\n      297,\n      {\n        align: \"center\",\n      }\n    );\n  }\n};\n\nexport type reportSettingsInterface = {\n  doneBy: string;\n  title: string;\n  subjectTitle: string;\n  subject: string;\n  institute: string;\n  period: string;\n  footer: string;\n  orientation?: \"p\" | \"l\";\n};\n\nexport const generatePDF = async (\n  reportSettings: reportSettingsInterface,\n  table: HTMLElement,\n  callBack: (status: boolean) => void\n) => {\n  callBack(true);\n  const orientation: \"p\" | \"l\" = reportSettings.orientation\n    ? reportSettings.orientation\n    : \"p\";\n  var lMargin: number = 20; //left margin in mm\n  var rMargin: number = 20; //right margin in mm\n  var pdfInMM: number = 185; // width of A4 in mm\n\n  //   var doc = new jsPDF(\"p\", \"mm\", \"a4\");\n  var doc: any = new jsPDF(orientation, \"mm\", \"a4\");\n\n  doc.setTextColor(95, 95, 95);\n  doc.setFontSize(28);\n  // doc.text(\n  //   this.props.reportTitle,\n  //   doc.internal.pageSize.getWidth() / 2,\n  //   30,\n  //   undefined,\n  //   \"center\"\n  // );\n  doc.addImage(Logo, \"png\", 20, 20, 10, 10);\n  doc.text(\"MINEDUC\", 32, 28.5, undefined, \"left\");\n  //   doc.setTextColor(19, 90, 152);\n  doc.setFontSize(26);\n  doc.text(\n    reportSettings.title,\n    doc.internal.pageSize.getWidth() / 2,\n    42.7,\n    undefined,\n    \"center\"\n  );\n\n  doc.setFontSize(20);\n  doc.text(\n    reportSettings.institute,\n    doc.internal.pageSize.getWidth() / 2,\n    53.7,\n    undefined,\n    \"center\"\n  );\n\n  var lines;\n  lines = doc.splitTextToSize(\n    reportSettings.subject,\n    pdfInMM - lMargin - rMargin\n  );\n  // if (reportSettings.position) {\n  // } else if (reportSettings.subject) {\n  //   lines = doc.splitTextToSize(\n  //     reportSettings.subject,\n  //     pdfInMM - lMargin - rMargin\n  //   );\n  // }\n\n  //   doc.setTextColor(0, 123, 255);\n  doc.setFontSize(16);\n  //   doc.text(lines, doc.internal.pageSize.getWidth() / 2, 45, {\n  //     maxWidth: 85,\n  //     align: \"center\",\n  //   });\n\n  var y = 63,\n    width;\n  doc.setTextColor(95, 95, 95);\n  doc.text(`${reportSettings.subjectTitle}: `, lMargin, y);\n  width = doc.getTextWidth(`${reportSettings.subjectTitle}: `);\n  // if (reportSettings.position) {\n  // } else if (reportSettings.position) {\n  //   doc.text(`Subject: `, lMargin, y);\n  //   width = doc.getTextWidth(\"Subject: \");\n  // }\n  // doc.setFontType(\"bold\");\n  doc.setTextColor(38, 38, 38);\n  for (var i = 0; i < lines.length; i++) {\n    if (y > 280) {\n      y = 10;\n      doc.addPage();\n    }\n    // doc.text(15, y, lines[i]);\n    doc.text(lines[i], lMargin + width, y);\n    y = y + 7;\n  }\n  doc.setTextColor(95, 95, 95);\n  doc.text(\"Period: \", lMargin, y + 3);\n  width = doc.getTextWidth(\"Period: \");\n  doc.setTextColor(38, 38, 38);\n  doc.text(reportSettings.period, lMargin + width, y + 3);\n\n  doc.autoTable({\n    html: table,\n    startY: 85,\n    margin: { horizontal: 20 },\n    cellPadding: 3, // Horizontal cell padding\n    // fontSize: 12,\n    rowHeight: 20,\n    // styles: { overflow: \"linebreak\" },\n    bodyStyles: { valign: \"top\" },\n    columnStyles: { email: { cellWidth: \"wrap\" } },\n    theme: \"striped\",\n    tableWidth: true,\n  });\n\n  doc.setFontSize(12);\n  let finalY = doc.lastAutoTable.finalY; // The y position on the page\n  doc.text(`Reported by: ${reportSettings.doneBy}`, lMargin, finalY + 15);\n  doc.text(\n    \"Report downloaded on \" + DATE(new Date().toString()),\n    lMargin,\n    finalY + 23\n  );\n\n  addFooters(doc);\n  await doc\n    .save(\n      `${\n        reportSettings.title +\n        \": \" +\n        reportSettings.subject +\n        \": \" +\n        reportSettings.period\n      }.pdf`,\n      { returnPromise: true }\n    )\n    .then(callBack(false));\n};\n","import moment from \"moment\";\nimport React, { useState } from \"react\";\nimport { IoHandLeftSharp } from \"react-icons/io5\";\nimport {\n  compareWithToday,\n  ExamDoneDetailsAnswers,\n} from \"../../containers/CandidateExams/CandidateExams\";\nimport { PlansTypeKeys } from \"../../interfaces\";\nimport { TimeZone } from \"../../utils/app.config\";\nimport { DATE } from \"../../utils/functions\";\nimport ClaimFormComponent from \"../ClaimForm/ClaimFormComponent\";\nimport { AnswersDetails } from \"./AnswersDetails\";\n\ninterface CandidateAnswersDetailsProps {\n  exam_id: ExamDoneDetailsAnswers;\n  showAnswers: boolean;\n}\n\nconst CandidateAnswersDetails = (props: CandidateAnswersDetailsProps) => {\n  const today = moment().tz(TimeZone);\n  let tomorrow = new Date();\n  tomorrow.setDate(today.date() + 1);\n  const [claim, setClaim] = useState<boolean>(false);\n  return (\n    <div>\n      {/* Check if period is open for claims */}\n      {compareWithToday(today, props.exam_id.exam_date) === false ? (\n        <div className=\"bg-yellow-100 text-yellow-800 font-extrabold text-center flex flex-col items-center justify-center text-lg px-2 py-6\">\n          <div className=\"mb-5 text-3xl\">\n            Please wait, the exam details will be visible soon!\n          </div>\n          <div className=\"text-gray-600\">Exam details will be visible from</div>\n          <div className=\"bg-white rounded-full px-3 py-1 text-gray-700\">\n            {DATE(tomorrow.toString())}\n          </div>\n        </div>\n      ) : claim === false ? (\n        <div className=\"mb-20\">\n          <AnswersDetails\n            exam_id={props.exam_id}\n            showAnswers={props.showAnswers}\n          />\n          {/* <div\n            onClick={() => setClaim(true)}\n            className=\"bg-blue-100 flex flex-row items-center px-3 py-2 -mt-10\"\n          >\n            <div className=\"btn bg-green-600 text-white text-center w-max px-6 text-2xl flex flex-row item-center justify-center gap-3 cursor-pointer\">\n              <IoHandLeftSharp className=\"text-3xl \" />{\" \"}\n              <span>Exam marks Claim</span>\n            </div>\n          </div> */}\n        </div>\n      ) : (\n        <div className=\"bg-gray-100 mt-4 pt-2 rounded\">\n          <ClaimFormComponent\n            setFormState={setClaim}\n            claim_type={PlansTypeKeys.EXAMINATION}\n            file_id={props.exam_id.exam_id}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CandidateAnswersDetails;\n","import React, { useState } from \"react\";\nimport {\n  MdCheckCircle,\n  MdRadioButtonUnchecked,\n  MdSearch,\n} from \"react-icons/md\";\nimport Loading from \"../../components/Loading/Loading\";\nimport {\n  PlansInterface,\n  SessionPlanInterface,\n  SessionPlanTypeStatus,\n} from \"../../interfaces\";\nimport { DATE } from \"../../utils/functions\";\nimport searchData from \"../../utils/search\";\n\nexport const isPlansActive = (plans: PlansInterface[]): PlansInterface[] => {\n  let today = new Date();\n  let activePlans: PlansInterface[] = [];\n  for (let plan of plans) {\n    let startDate = new Date(plan.start_date);\n    let endDate = new Date(plan.end_date);\n    if (\n      startDate.getTime() <= today.getTime() &&\n      endDate.getTime() >= today.getTime() &&\n      plan.type_status === SessionPlanTypeStatus.OPEN\n    ) {\n      activePlans = [...activePlans, plan];\n    }\n  }\n  return activePlans;\n};\n\ninterface ChooseSessionProps {\n  allSession: SessionPlanInterface[] | null;\n  setSelectSession: (period: SessionPlanInterface | \"all\") => void;\n  currentSelected: SessionPlanInterface | \"all\";\n  chooseAll: boolean;\n}\n\nconst ChooseSession = (props: ChooseSessionProps) => {\n  const [selectedPlan, setSelectedPlan] = useState<SessionPlanInterface | null>(\n    null\n  );\n  const [search, setSearch] = useState<string>(\"\");\n  const getSearch = (\n    period: SessionPlanInterface[],\n    searched: string\n  ): SessionPlanInterface[] => {\n    return searchData(period, searched) as SessionPlanInterface[];\n  };\n\n  return (\n    <div className=\"\">\n      <div className=\"px-3\">\n        <input\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n            setSearch(e.target.value)\n          }\n          type=\"text\"\n          className=\"py-3 px-4 w-full rounded border border-gray-400 mb-3\"\n          placeholder=\"Search by year, name\"\n          disabled={props.allSession === null || props.allSession.length === 0}\n        />\n      </div>\n\n      <div className=\"bg-gray-100 px-3 pt-3 pb-2 rounded-b\">\n        {props.allSession === null ? (\n          <Loading />\n        ) : props.allSession.length === 0 ? (\n          <div className=\"flex flex-col text-gray-400 items-center justify-center mb-2 bg-white py-4\">\n            <MdSearch className=\"text-6xl\" />\n            <div className=\"flex flex-col items-center justify-center\">\n              <span>No session found!</span>\n            </div>\n          </div>\n        ) : (\n          <section>\n            {props.chooseAll && (\n              <div\n                className={`rounded border ${\n                  props.currentSelected === \"all\"\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2 flex flex-col md:flex-row items-start md:items-center md:justify-between`}\n              >\n                <div className=\"flex flex-row items-center gap-3\">\n                  {props.currentSelected === \"all\" ? (\n                    <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                  ) : (\n                    <MdRadioButtonUnchecked\n                      className={`text-gray-300 text-4xl`}\n                    />\n                  )}\n                  <div className=\"flex flex-col\">\n                    <div className={`text-gray-600 font-bold`}>All session</div>\n                  </div>\n                </div>\n                <div\n                  onClick={() => {\n                    props.setSelectSession(\"all\");\n                  }}\n                  className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                >\n                  Select\n                </div>\n              </div>\n            )}\n            {getSearch(props.allSession, search).map((item, i) => (\n              <div\n                key={i + 1}\n                className={`rounded border ${\n                  props.currentSelected !== \"all\" &&\n                  props.currentSelected.session_plan_id === item.session_plan_id\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2`}\n              >\n                <div className=\"flex flex-col md:flex-row items-start md:items-center md:justify-between \">\n                  <div className=\"flex flex-row items-center gap-3\">\n                    {props.currentSelected !== \"all\" &&\n                    props.currentSelected.session_plan_id ===\n                      item.session_plan_id ? (\n                      <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                    ) : (\n                      <MdRadioButtonUnchecked\n                        className={`text-gray-300 text-4xl`}\n                      />\n                    )}\n                    <div className=\"flex flex-col\">\n                      <div\n                        className={`${\n                          props.currentSelected !== \"all\" &&\n                          props.currentSelected.session_plan_id ===\n                            item.session_plan_id\n                            ? \"text-blue-600\"\n                            : \"text-gray-600\"\n                        } font-bold`}\n                      >\n                        {item.session_plan_name}\n                      </div>\n                      <div className=\"text-sm text-gray-500\">\n                        <span>Status: </span>\n                        <span\n                          className={`${\n                            item.is_active === true\n                              ? \"text-gray-900 font-bold underline\"\n                              : \"text-gray-500 italic\"\n                          }`}\n                        >\n                          {item.is_active === true ? \"Active\" : \"Expired\"}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"flex flex-row items-center gap-2\">\n                    {(selectedPlan === null ||\n                      selectedPlan.session_plan_id !==\n                        item.session_plan_id) && (\n                      <div\n                        onClick={() => setSelectedPlan(item)}\n                        className=\"bg-gray-50 group-hover:bg-blue-100 font-semibold text-gray-400 group-hover:text-blue-600 rounded px-3 py-2 cursor-pointer\"\n                      >\n                        Details\n                      </div>\n                    )}\n                    <div\n                      onClick={() => {\n                        props.setSelectSession(item);\n                      }}\n                      className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                    >\n                      Select\n                    </div>\n                    {selectedPlan !== null &&\n                      selectedPlan.session_plan_id === item.session_plan_id && (\n                        <div\n                          onClick={() => setSelectedPlan(null)}\n                          className=\"bg-red-100 group-hover:bg-red-200 font-semibold text-red-600 group-hover:text-red-800 rounded px-3 py-2 cursor-pointer\"\n                        >\n                          Close\n                        </div>\n                      )}\n                  </div>\n                </div>\n                {selectedPlan !== null &&\n                  selectedPlan.session_plan_id === item.session_plan_id && (\n                    <div className=\"bg-white rounded border border-blue-50 mt-2 animate__animated animate__fadeIn\">\n                      <table className=\"w-full\">\n                        <thead className=\"bg-blue-50\">\n                          <tr className=\"text-left\">\n                            <th className=\"px-3 py-3\">#</th>\n                            <th>Plan</th>\n                            <th>Start date</th>\n                            <th>Ending date</th>\n                            <th>Status</th>\n                          </tr>\n                        </thead>\n                        <tbody className=\"text-sm\">\n                          {selectedPlan !== null &&\n                            selectedPlan.session_plan_id ===\n                              item.session_plan_id &&\n                            selectedPlan.plans.length > 0 &&\n                            item.plans.map((plan, i) => (\n                              <tr\n                                key={i + 1}\n                                className={`${\n                                  isPlansActive(item.plans).find(\n                                    (itm) => itm.type_key === plan.type_key\n                                  ) !== undefined\n                                    ? \"bg-blue-100 text-blue-600 font-bold\"\n                                    : \"\"\n                                } text-left border-b border-blue-50`}\n                              >\n                                <td className=\"px-3 py-1\">{i + 1}</td>\n                                <td>{plan.type_title}</td>\n                                <td>{DATE(plan.start_date, \"DD/MM/YYYY\")}</td>\n                                <td>{DATE(plan.end_date, \"DD/MM/YYYY\")}</td>\n                                <td>{plan.type_status}</td>\n                              </tr>\n                            ))}\n                        </tbody>\n                      </table>\n                    </div>\n                  )}\n              </div>\n            ))}\n          </section>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(ChooseSession);\n","import React, { useEffect, useState } from \"react\";\nimport { MdRadioButtonChecked, MdRadioButtonUnchecked } from \"react-icons/md\";\nimport {\n  QuestionAnswerFormat,\n  QuestionAnswerInterface,\n  QuestionInterface,\n  QuestionLanguage,\n  QuestionLanguages,\n  questionType,\n} from \"../../interfaces/index\";\nimport { newAnswer } from \"../../containers/DoExam/DoExam\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  candidateExamStoreInterface,\n  examDataInterface,\n  System,\n  setSelectedExamQuestion,\n  setQuestionLanguage,\n  questionTypesStoreInterface,\n  loadQuestionTypes,\n  QuestionAnswersStore,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { LoadingType } from \"../../components/Loading/LoadingV2\";\nimport {\n  toCalculatedMultipleChoice,\n  toEmbedded,\n  toEssay,\n  toMatching,\n  toMultipleChoice,\n  toNumerical,\n  toShortAnswer,\n  toSimpleCalculated,\n  toTrueFalse,\n} from \"../../containers/DoExam/QuestionDetails/ConvertingAnswers\";\nimport { BiWorld } from \"react-icons/bi\";\nimport { AiFillCaretDown } from \"react-icons/ai\";\nimport { FaTimes } from \"react-icons/fa\";\nimport { findQuestionType } from \"../../containers/DoExam/utils/utils\";\nimport MultipleChoice from \"../../containers/DoExam/QuestionDetails/Answers/MultipleChoice\";\nimport TrueFalse from \"../../containers/DoExam/QuestionDetails/Answers/TrueFalse\";\nimport SimpleCalculated from \"../../containers/DoExam/QuestionDetails/Answers/SimpleCalculated\";\nimport Matching from \"../../containers/DoExam/QuestionDetails/Answers/Matching\";\nimport ShortAnswer from \"../../containers/DoExam/QuestionDetails/Answers/ShortAnswer\";\nimport Numerical from \"../../containers/DoExam/QuestionDetails/Answers/Numerical\";\nimport CalculatedMultipleChoice from \"../../containers/DoExam/QuestionDetails/Answers/CalculatedMultipleChoice\";\nimport { Shuffle } from \"../../utils/functions\";\nimport Essay from \"../../containers/DoExam/QuestionDetails/Answers/Essay\";\nimport {\n  QuestionForEmbedded,\n  QuestionForHybrid,\n  questionShortElementsType,\n  questionTypeElementsType,\n  regExEmbedded,\n} from \"@mastrecruit/common\";\nimport Embedded from \"../../containers/DoExam/QuestionDetails/Answers/Embedded\";\nimport Hybrid from \"../../containers/DoExam/QuestionDetails/Answers/Hybrid\";\nimport HybridAnswers from \"../../containers/DoExam/QuestionDetails/Answers/HybridAnswers\";\n\ninterface QuestionDetailsProps {\n  selectedQuestion: QuestionInterface;\n  setSelectedQuestion: (question: QuestionInterface) => void;\n  answerQuestionFn: (answer: QuestionAnswersStore) => void;\n  questionAnswers: newAnswer[] | undefined;\n  doExam: examDataInterface;\n  auth: Auth;\n  candidateExam: candidateExamStoreInterface;\n  system: System;\n  setSelectedExamQuestion: (\n    exam_id: string,\n    question_id: string | null\n  ) => void;\n  setQuestionLanguage: (lang: QuestionLanguage) => void;\n  questionTypes: questionTypesStoreInterface;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  preview: boolean;\n  submitQuestionAnswer: boolean;\n}\n\nconst returnSelect = (\n  data: QuestionAnswerInterface,\n  type: questionShortElementsType | QuestionForEmbedded | QuestionForHybrid,\n  questionAnswers: QuestionAnswerInterface[],\n  addAnswer: (data: QuestionAnswerInterface) => void\n): JSX.Element => {\n  let answers: QuestionAnswerFormat[] = [];\n  for (let answer of data.answer) {\n    answers.push({\n      id: answer.id,\n      value: answer.value,\n      status: answer.status,\n    });\n  }\n  let answerCheck: QuestionAnswerInterface | undefined = questionAnswers.find(\n    (itm) => itm.reference === data.reference\n  );\n  let answered: QuestionAnswerFormat[] = [];\n  if (answerCheck !== undefined) {\n    answered = answerCheck.answer;\n  }\n  if (answers.length > 0) {\n    if (type === QuestionForEmbedded.SingleMultiple) {\n      return (\n        <span className=\"w-max\">\n          <select\n            className={`px-3 py-2 rounded text-base max-w-full border border-gray-300 ${\n              answered.length !== 0 &&\n              answers.find((itm) => itm.id === answered[0].id) !== undefined\n                ? \"text-blue-600 font-bold\"\n                : \"text-gray-700 font-bold\" //Example of condition of changing color\n            }`}\n            value={answered.length === 0 ? \"\" : answered[0].id}\n            onChange={(e) => {\n              let select = answers.find((itm) => itm.id === e.target.value);\n              if (select !== undefined) {\n                addAnswer({\n                  _id: data._id,\n                  reference: data.reference,\n                  answer: [\n                    {\n                      id: select.id,\n                      value: select.value,\n                      status: select.status,\n                    },\n                  ],\n                });\n              } else {\n                alert(\"Invalid choice!\");\n              }\n            }}\n          >\n            <option value={\"\"}>Choose correct answer</option>\n            {answers.map((item, i) => (\n              <option value={item.id} key={i + 1}>\n                {item.value}\n              </option>\n            ))}\n          </select>\n        </span>\n      );\n    } else {\n      return (\n        <span className=\"w-max bg-green-100\">\n          <input\n            value={\n              answered.length === 0\n                ? \"\"\n                : type === QuestionForEmbedded.ShortAnswer\n                ? answered[0].value\n                : answered[0].value[0]\n            }\n            onChange={(e) => {\n              addAnswer({\n                _id: data._id,\n                reference: data.reference,\n                answer: [\n                  {\n                    id: answers[0].id,\n                    value:\n                      type === QuestionForEmbedded.ShortAnswer\n                        ? e.target.value\n                        : [e.target.value],\n                    status: answers[0].status,\n                  },\n                ],\n              });\n            }}\n            type=\"text\"\n            className=\"bg-white px-3 py-1 rounded text-base text-blue-600 font-bold border border-gray-300\"\n          />\n        </span>\n      );\n    }\n  } else {\n    return <div>Question not valid!</div>;\n  }\n};\n\nexport const EmbeddedQuestion = (\n  selectedQuestion: QuestionInterface,\n  questionTypes: questionType[] | null,\n  language: QuestionLanguage,\n  questionAnswers: QuestionAnswersStore[],\n  addAnswer: (data: QuestionAnswerInterface) => void\n): JSX.Element => {\n  let newTextResult = [];\n  // Testing Question\n  let question = selectedQuestion.question.find(\n    (itm) => itm.language === language\n  );\n  if (\n    findQuestionType(selectedQuestion.type, questionTypes) !== null &&\n    findQuestionType(selectedQuestion.type, questionTypes) ===\n      questionTypeElementsType.Embedded\n  ) {\n    let answeredQuestions: QuestionAnswerInterface[] = [];\n    if (question !== undefined) {\n      let userQuestionAnswers = questionAnswers.find(\n        (itm) => itm.question_id === selectedQuestion.question_id\n      );\n      if (userQuestionAnswers !== undefined) {\n        answeredQuestions = userQuestionAnswers.answers;\n      }\n\n      var answers = question.answers;\n      var originalText = question.description.split(\" \");\n      // var newTexts = question.description.match(regExEmbedded);\n\n      for (let check of originalText) {\n        let test = answers.find((itm) => itm.reference === parseInt(check[1]));\n        if (test !== undefined) {\n          // Find type of subQuestion\n          let type = question.sub_question.find(\n            (itm) => itm.reference === parseInt(check[1])\n          );\n          if (type !== undefined) {\n            newTextResult.push(\n              returnSelect(test, type.typeShort, answeredQuestions, addAnswer)\n            );\n          }\n        } else {\n          newTextResult.push(check);\n        }\n      }\n    }\n  }\n  return (\n    <div className=\"w-full text-base font-semibold mt-2\">\n      {newTextResult.map((item, i) => (\n        <span key={i + 1} className=\"mr-1\">\n          {item}\n        </span>\n      ))}\n    </div>\n  );\n};\n\nconst _QuestionPreview = (props: QuestionDetailsProps) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [selectLang, setSelectLang] = useState<boolean>(false);\n  const [selectedLanguage, setSelectedLanguage] = useState(\n    props.selectedQuestion.question[0].language\n  );\n\n  const filterLanguages = () => {\n    let langs: {\n      key: QuestionLanguage;\n      value: string;\n    }[] = [];\n    for (let langItem of props.selectedQuestion.question) {\n      let testLangQ = QuestionLanguages.find(\n        (l) => l.key === langItem.language\n      );\n      if (testLangQ !== undefined) {\n        langs = [...langs, testLangQ];\n      }\n    }\n    return langs;\n  };\n\n  useEffect(() => {\n    if (\n      props.questionTypes.questionTypes === null ||\n      props.questionTypes.questionTypes.length === 0\n    ) {\n      props.loadQuestionTypes(setLoading);\n    }\n  }, [props]);\n  return (\n    <div className=\"bg-gray-800 h-full\">\n      {loading === true ? (\n        <div className=\"bg-gray-200 px-3 py-2 rounded my-2 overflow-y-auto pb-80 md:pb-60\">\n          <div className=\"rounded bg-white px-4 py-4 mt-5 mx-4\">\n            <div className=\"text-2xl mx-4 mb-3\">Loading...</div>\n            <Loading type={LoadingType.white} />\n          </div>\n        </div>\n      ) : (\n        <div className=\"bg-gray-200 px-3 py-2 my-2 overflow-y-auto pb-40 md:pb-10\">\n          <div className=\"flex flex-row gap-2 mt-2\">\n            <div className=\"flex flex-row justify-between w-full\">\n              {props.selectedQuestion.question.find(\n                (itm) => itm.language === selectedLanguage\n              ) && (\n                <div className=\"text-md flex flex-col w-full\">\n                  <div className=\"flex flex-row justify-between w-full\">\n                    <div\n                      dangerouslySetInnerHTML={{\n                        __html: props.selectedQuestion.question.find(\n                          (itm) => itm.language === selectedLanguage\n                        )!.title,\n                      }}\n                      className=\"text-sm text-gray-600 mb-2\"\n                    ></div>\n\n                    {/* Languages */}\n                    <div className=\"flex flex-row gap-2\">\n                      <div className=\"px-3 py-1 rounded-full flex items-center justify-center text-base font-bold bg-white text-blue-800\">\n                        {props.selectedQuestion.marks} marks\n                      </div>\n                      <div className=\"bg-white rounded h-10 hover:bg-white cursor-pointer\">\n                        <div\n                          onClick={() => setSelectLang(!selectLang)}\n                          className=\"flex flex-row items-center gap-2\"\n                        >\n                          <div className=\"rounded-l\">\n                            <BiWorld className=\"text-2xl my-2 ml-2\" />\n                          </div>\n                          <div\n                            className=\"flex flex-col\"\n                            style={{ width: \"97px\" }}\n                          >\n                            <span className=\"text-xs font-bold italic text-gray-700\">\n                              Language\n                            </span>\n                            <span\n                              title={\n                                filterLanguages().find(\n                                  (itm) => itm.key === selectedLanguage\n                                )?.value\n                              }\n                              className=\"text-sm font-bold text-blue-600 truncate\"\n                              style={{ width: \"97px\" }}\n                            >\n                              {\n                                filterLanguages().find(\n                                  (itm) => itm.key === selectedLanguage\n                                )?.value\n                              }\n                            </span>\n                          </div>\n                          <div\n                            className={`${\n                              selectLang === true\n                                ? \"bg-yellow-800 text-white\"\n                                : \"bg-gray-50 hover:bg-blue-600\"\n                            } h-10 rounded-r border-l border-gray-300 flex flex-row items-center justify-center cursor-pointer hover:text-white hover:border-white`}\n                          >\n                            {selectLang === true ? (\n                              <FaTimes className=\"text-xl my-2 mx-2\" />\n                            ) : (\n                              <AiFillCaretDown className=\"text-xl mb-1 mt-2 mx-2\" />\n                            )}\n                          </div>\n                        </div>\n                        {selectLang === true && (\n                          <div\n                            className=\"relative rounded overflow-hidden\"\n                            style={{ width: \"182px\" }}\n                          >\n                            <div className=\"bg-blue-700 animate__animated animate__fadeIn animate__faster rounded-b w-full right-0 flex flex-col\">\n                              {filterLanguages().map((item, i) => (\n                                <span\n                                  onClick={() => {\n                                    props.setQuestionLanguage(item.key);\n                                    setSelectLang(!selectLang);\n                                    setSelectedLanguage(item.key);\n                                  }}\n                                  key={i + 1}\n                                  className={`flex flex-row items-center animate__animated animate__fadeInDown animate__faster text-white text-sm px-2 py-2 border-2 ${\n                                    selectedLanguage === item.key\n                                      ? \"bg-blue-800 font-extrabold border-blue-800\"\n                                      : \"bg-blue-500 text-blue-100 border-blue-500 hover:bg-blue-700 hover:border-blue-700\"\n                                  }`}\n                                >\n                                  {selectedLanguage === item.key ? (\n                                    <MdRadioButtonChecked className=\"text-xl mr-2\" />\n                                  ) : (\n                                    <MdRadioButtonUnchecked className=\"text-xl mr-2\" />\n                                  )}{\" \"}\n                                  {item.value}\n                                </span>\n                              ))}\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                  {props.selectedQuestion.question_id !== null &&\n                  findQuestionType(\n                    props.selectedQuestion.type,\n                    props.questionTypes.questionTypes\n                  ) !== null &&\n                  findQuestionType(\n                    props.selectedQuestion.type,\n                    props.questionTypes.questionTypes\n                  ) === questionTypeElementsType.Embedded ? (\n                    EmbeddedQuestion(\n                      props.selectedQuestion,\n                      props.questionTypes.questionTypes,\n                      selectedLanguage,\n                      props.candidateExam.question_answers,\n                      () => {}\n                    )\n                  ) : (\n                    <div\n                      dangerouslySetInnerHTML={{\n                        __html: props.selectedQuestion.question.find(\n                          (itm) => itm.language === selectedLanguage\n                        )!.description,\n                      }}\n                      className=\"text-lg text-gray-800 font-bold mt-2\"\n                    ></div>\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n          <div\n            className={`my-4 py-2 px-2 ${\n              props.selectedQuestion.question_id !== null &&\n              findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) !== null &&\n              (findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) === questionTypeElementsType.Embedded ||\n                findQuestionType(\n                  props.selectedQuestion.type,\n                  props.questionTypes.questionTypes\n                ) === questionTypeElementsType.Hybrid)\n                ? \"\"\n                : \"bg-white\"\n            } rounded`}\n            onClick={() => selectLang === true && setSelectLang(false)}\n          >\n            {/* Single and Multiple choice */}\n            {props.selectedQuestion.question_id !== null &&\n              findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) !== null &&\n              (findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) === questionTypeElementsType.MultipleChoice ||\n                findQuestionType(\n                  props.selectedQuestion.type,\n                  props.questionTypes.questionTypes\n                ) === questionTypeElementsType.SingleMultiple) && (\n                <MultipleChoice\n                  type={findQuestionType(\n                    props.selectedQuestion.type,\n                    props.questionTypes.questionTypes\n                  )}\n                  available_answers={props.candidateExam.question_answers}\n                  selectedQuestionAnswer={{\n                    question_id: props.selectedQuestion.question_id,\n                    question: undefined,\n                    answers: toMultipleChoice(\n                      props.selectedQuestion.question.find(\n                        (itm) => itm.language === selectedLanguage\n                      )!.answers[0].answer\n                    ),\n                    selectedAns: props.selectedQuestion.question.find(\n                      (itm) => itm.language === selectedLanguage\n                    )!.answers[0],\n                  }}\n                  answerQuestionFn={props.answerQuestionFn}\n                />\n              )}\n            {/* True and False */}\n            {props.selectedQuestion.question_id !== null &&\n              findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) !== null &&\n              findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) === questionTypeElementsType.TrueFalse && (\n                <TrueFalse\n                  type={findQuestionType(\n                    props.candidateExam.candidate_exam?.questions.find(\n                      (itm) =>\n                        itm.question_id === props.selectedQuestion.question_id\n                    )?.type,\n                    props.questionTypes.questionTypes\n                  )}\n                  available_answers={props.candidateExam.question_answers}\n                  selectedQuestionAnswer={{\n                    question_id: props.selectedQuestion.question_id,\n                    question: undefined,\n                    answers: toTrueFalse(\n                      props.selectedQuestion.question.find(\n                        (itm) => itm.language === selectedLanguage\n                      )!.answers[0].answer\n                    ),\n                    selectedAns: props.selectedQuestion.question.find(\n                      (itm) => itm.language === selectedLanguage\n                    )!.answers[0],\n                  }}\n                  answerQuestionFn={props.answerQuestionFn}\n                />\n              )}\n            {/* Matching Question */}\n            {/* {console.log(\n              \"Type: \",\n              findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              )\n            )} */}\n            {props.selectedQuestion.question_id !== null &&\n              findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) !== null &&\n              findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) === questionTypeElementsType.Matching && (\n                <Matching\n                  selectedLanguage={selectedLanguage}\n                  selectedExam={props.candidateExam.candidate_exam}\n                  type={findQuestionType(\n                    props.candidateExam.candidate_exam?.questions.find(\n                      (itm) =>\n                        itm.question_id === props.selectedQuestion.question_id\n                    )?.type,\n                    props.questionTypes.questionTypes\n                  )}\n                  available_answers={props.candidateExam.question_answers}\n                  selectedQuestionAnswer={{\n                    question_id: props.selectedQuestion.question_id,\n                    question: undefined,\n                    answers: toMatching(\n                      props.selectedQuestion.question.find(\n                        (itm) => itm.language === selectedLanguage\n                      )!.answers[0].answer\n                    ),\n                    shuffledAnswers: Shuffle(\n                      toMatching(\n                        props.selectedQuestion.question.find(\n                          (itm) => itm.language === selectedLanguage\n                        )!.answers[0].answer\n                      )\n                    ),\n                    selectedAns: props.selectedQuestion.question.find(\n                      (itm) => itm.language === selectedLanguage\n                    )!.answers[0],\n                  }}\n                  answerQuestionFn={props.answerQuestionFn}\n                />\n              )}\n            {/* Simple Calculated */}\n            {props.selectedQuestion.question_id !== null &&\n              findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) !== null &&\n              findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) === questionTypeElementsType.SimpleCalculate && (\n                <SimpleCalculated\n                  type={findQuestionType(\n                    props.candidateExam.candidate_exam?.questions.find(\n                      (itm) =>\n                        itm.question_id === props.selectedQuestion.question_id\n                    )?.type,\n                    props.questionTypes.questionTypes\n                  )}\n                  available_answers={props.candidateExam.question_answers}\n                  selectedQuestionAnswer={{\n                    question_id: props.selectedQuestion.question_id,\n                    question: undefined,\n                    answers: toSimpleCalculated(\n                      props.selectedQuestion.question.find(\n                        (itm) => itm.language === selectedLanguage\n                      )!.answers[0].answer\n                    ),\n                    selectedAns: props.selectedQuestion.question.find(\n                      (itm) => itm.language === selectedLanguage\n                    )!.answers[0],\n                  }}\n                  answerQuestionFn={props.answerQuestionFn}\n                />\n              )}\n            {/* Short Answer */}\n            {props.selectedQuestion.question_id !== null &&\n              findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) !== null &&\n              findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) === questionTypeElementsType.ShortAnswer && (\n                <ShortAnswer\n                  type={findQuestionType(\n                    props.candidateExam.candidate_exam?.questions.find(\n                      (itm) =>\n                        itm.question_id === props.selectedQuestion.question_id\n                    )?.type,\n                    props.questionTypes.questionTypes\n                  )}\n                  available_answers={props.candidateExam.question_answers}\n                  selectedQuestionAnswer={{\n                    question_id: props.selectedQuestion.question_id,\n                    question: undefined,\n                    answers: toShortAnswer(\n                      props.selectedQuestion.question.find(\n                        (itm) => itm.language === selectedLanguage\n                      )!.answers[0].answer\n                    ),\n                    selectedAns: props.selectedQuestion.question.find(\n                      (itm) => itm.language === selectedLanguage\n                    )!.answers[0],\n                  }}\n                  answerQuestionFn={props.answerQuestionFn}\n                />\n              )}\n\n            {/* Numerical */}\n            {props.selectedQuestion.question_id !== null &&\n              findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) !== null &&\n              findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) === questionTypeElementsType.Numeric && (\n                <Numerical\n                  type={findQuestionType(\n                    props.candidateExam.candidate_exam?.questions.find(\n                      (itm) =>\n                        itm.question_id === props.selectedQuestion.question_id\n                    )?.type,\n                    props.questionTypes.questionTypes\n                  )}\n                  available_answers={props.candidateExam.question_answers}\n                  selectedQuestionAnswer={{\n                    question_id: props.selectedQuestion.question_id,\n                    question: undefined,\n                    answers: toNumerical(\n                      props.selectedQuestion.question.find(\n                        (itm) => itm.language === selectedLanguage\n                      )!.answers[0].answer\n                    ),\n                    selectedAns: props.selectedQuestion.question.find(\n                      (itm) => itm.language === selectedLanguage\n                    )!.answers[0],\n                  }}\n                  answerQuestionFn={props.answerQuestionFn}\n                />\n              )}\n            {/* Calculated Multiple choice */}\n            {props.selectedQuestion.question_id !== null &&\n              findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) !== null &&\n              findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) === questionTypeElementsType.CalculatedMultipleChoice && (\n                <CalculatedMultipleChoice\n                  type={findQuestionType(\n                    props.candidateExam.candidate_exam?.questions.find(\n                      (itm) =>\n                        itm.question_id === props.selectedQuestion.question_id\n                    )?.type,\n                    props.questionTypes.questionTypes\n                  )}\n                  available_answers={props.candidateExam.question_answers}\n                  selectedQuestionAnswer={{\n                    question_id: props.selectedQuestion.question_id,\n                    question: undefined,\n                    answers: toCalculatedMultipleChoice(\n                      props.selectedQuestion.question.find(\n                        (itm) => itm.language === selectedLanguage\n                      )!.answers[0].answer\n                    ),\n                    selectedAns: props.selectedQuestion.question.find(\n                      (itm) => itm.language === selectedLanguage\n                    )!.answers[0],\n                  }}\n                  answerQuestionFn={props.answerQuestionFn}\n                />\n              )}\n            {/* Essay answer */}\n            {props.selectedQuestion.question_id !== null &&\n              findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) !== null &&\n              findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) === questionTypeElementsType.Essay && (\n                <Essay\n                  type={findQuestionType(\n                    props.candidateExam.candidate_exam?.questions.find(\n                      (itm) =>\n                        itm.question_id === props.selectedQuestion.question_id\n                    )?.type,\n                    props.questionTypes.questionTypes\n                  )}\n                  available_answers={props.candidateExam.question_answers}\n                  selectedQuestionAnswer={{\n                    question_id: props.selectedQuestion.question_id,\n                    question: undefined,\n                    answers: toEssay(\n                      props.selectedQuestion.question.find(\n                        (itm) => itm.language === selectedLanguage\n                      )!.answers[0].answer\n                    ),\n                    selectedAns: props.selectedQuestion.question.find(\n                      (itm) => itm.language === selectedLanguage\n                    )!.answers[0],\n                  }}\n                  answerQuestionFn={props.answerQuestionFn}\n                />\n              )}\n            {/* Hybrid answer unique: it combines th above questions */}\n            {props.selectedQuestion.question_id !== null &&\n              findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) !== null &&\n              findQuestionType(\n                props.selectedQuestion.type,\n                props.questionTypes.questionTypes\n              ) === questionTypeElementsType.Hybrid && (\n                <HybridAnswers\n                  type={findQuestionType(\n                    props.candidateExam.candidate_exam?.questions.find(\n                      (itm) =>\n                        itm.question_id === props.selectedQuestion.question_id\n                    )?.type,\n                    props.questionTypes.questionTypes\n                  )}\n                  available_answers={props.candidateExam.question_answers}\n                  selectedQuestionAnswer={{\n                    question_id: props.selectedQuestion.question_id,\n                    question: undefined,\n                    answers: props.selectedQuestion.question.find(\n                      (itm) => itm.language === selectedLanguage\n                    )!.answers,\n                  }}\n                  wholeQuestion={props.selectedQuestion.question.find(\n                    (itm) => itm.language === selectedLanguage\n                  )}\n                  answerQuestionFn={props.answerQuestionFn}\n                  selectedLanguage={selectedLanguage}\n                  selectedExam={props.candidateExam.candidate_exam}\n                />\n              )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  doExam,\n  candidateExam,\n  system,\n  questionTypes,\n}: StoreState): {\n  auth: Auth;\n  doExam: examDataInterface;\n  candidateExam: candidateExamStoreInterface;\n  system: System;\n  questionTypes: questionTypesStoreInterface;\n} => {\n  return {\n    auth: auth,\n    doExam: doExam,\n    candidateExam: candidateExam,\n    system: system,\n    questionTypes: questionTypes,\n  };\n};\n\nconst QuestionPreview = connect(mapStateToProps, {\n  setSelectedExamQuestion,\n  setQuestionLanguage,\n  loadQuestionTypes,\n})(_QuestionPreview);\n\nexport default QuestionPreview;\n","import React from \"react\";\nimport Table from \"../../components/Table/Table\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { PositionRequirementTableInterface } from \"./ViewPosition\";\n\ninterface RequirementProps {\n  requirements: PositionRequirementTableInterface[];\n}\n\nconst ViewRequirements: React.FC<RequirementProps> = (props) => {\n  const tableData = (): JSX.Element[] => {\n    let data: PositionRequirementTableInterface[] = props.requirements;\n    // let data: PositionSubcategoryData[] =\n    //   props.position_requirement.position_requirement;\n    if (data.length === 0) {\n      return [\n        <tr key={153} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={3}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    return data.map((item, index) => (\n      <tr\n        key={index + item.field_id}\n        className=\"border-b border-gray-200 hover:bg-gray-100\"\n      >\n        <td className=\"p-3 text-left whitespace-nowrap\">{index + 1}</td>\n        <td className=\"p-3 text-left\">\n          <span>{item.subcategory_title}</span>\n        </td>\n        <td className=\"p-3 text-left\">\n          <span>\n            {isEmptyOrSpaces(item.field_id) ? \"Any document\" : item.field_title}\n          </span>\n        </td>\n        <td className=\"p-3 text-left text-lg italic\">\n          {isEmptyOrSpaces(item.field_id) ? (\n            item.subcategory_required ? (\n              <span className=\"text-yellow-800\">Required</span>\n            ) : (\n              \"Optional\"\n            )\n          ) : item.required ? (\n            <span className=\"text-yellow-800\">Required</span>\n          ) : (\n            \"Optional\"\n          )}\n        </td>\n      </tr>\n    ));\n  };\n\n  return (\n    <div>\n      <Table\n        columns={[\n          { columnTitle: \"#\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Qualification\", alignText: \"left\", padding: \"p-3\" },\n          // {\n          //   columnTitle: \"Qualification Status\",\n          //   alignText: \"left\",\n          //   padding: \"p-3\",\n          // },\n          { columnTitle: \"Document\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Status\", alignText: \"left\", padding: \"p-3\" },\n          // { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n        ]}\n        rows={tableData}\n        pagination={false}\n        search={false}\n        thColor=\"gray\"\n      />\n    </div>\n  );\n};\n\nexport default React.memo(ViewRequirements);\n","import React, { Component } from \"react\";\nimport FindAnswer from \"../../containers/DoExam/DoExamTitle/FindAnswer\";\nimport { ExamAnswerSheetDone } from \"../../interfaces/exam\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  CandidateApplicationsStoreInterface,\n  candidateExamStoreInterface,\n  FC_GetProfileDetails,\n  LoadCandidateApplications,\n  setSelectedCandidateExam,\n  setSelectedCourse,\n  setSelectedPosition,\n  InitializeExamDetails,\n  loadExamsDone,\n  AddUserApplication,\n  loadApplicationPeriods,\n  requestUserAnswers,\n  loadQuestionTypes,\n  questionTypesStoreInterface,\n  System,\n  courseStoreInterface,\n  loadCourses,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { DATE } from \"../../utils/functions\";\nimport { AiOutlineFileText } from \"react-icons/ai\";\nimport { ExamDoneDetailsAnswers } from \"../../containers/CandidateExams/CandidateExams\";\nimport Loading from \"../Loading/Loading\";\nimport { QuestionLanguage } from \"../../interfaces\";\nimport { findQuestionType } from \"../../containers/DoExam/utils/utils\";\nimport { questionTypeElementsType } from \"@mastrecruit/common\";\nimport { EmbeddedQuestion } from \"../QuestionPreview/QuestionPreview\";\nimport FindAnswerHybrid from \"../../containers/DoExam/DoExamTitle/FindAnswerHybrid\";\n\ninterface AnswersDetailsProps {\n  exam_id: ExamDoneDetailsAnswers;\n  showAnswers: boolean;\n  allAnswers?: ExamAnswerSheetDone[];\n  user_id?: string;\n  questionTypes: questionTypesStoreInterface;\n  requestUserAnswers: (\n    exam_id: string,\n    user_id: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  FC_GetProfileDetails: Function;\n  auth: Auth;\n  candidateExam: candidateExamStoreInterface;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  loadExamsDone: (\n    periodId: string,\n    userId: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  system: System;\n  course: courseStoreInterface;\n  loadCourses: (callback: (loading: boolean) => void) => void;\n}\ninterface AnswersDetailsState {\n  loading: boolean;\n  loadingStatus: boolean;\n}\n\nexport class _AnswersDetails extends Component<\n  AnswersDetailsProps,\n  AnswersDetailsState\n> {\n  constructor(props: AnswersDetailsProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      loadingStatus: false,\n    };\n  }\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  };\n  setLoadingStatus = (status: boolean) => {\n    this.setState({ loadingStatus: status });\n  };\n  componentDidMount = () => {\n    if (\n      this.props.questionTypes.questionTypes === null ||\n      this.props.questionTypes.questionTypes.length === 0\n    ) {\n      this.props.loadQuestionTypes(this.setLoading);\n    }\n    if (this.props.exam_id) {\n      if (this.props.course.courses === null) {\n        this.props.loadCourses(this.setLoading);\n      }\n      let check = this.props.candidateExam.user_exams_done.find(\n        (itm) =>\n          itm.course === this.props.exam_id.course &&\n          itm.period === this.props.exam_id.period &&\n          DATE(itm.exam_date) === DATE(this.props.exam_id.exam_date)\n      );\n      // Check if user exams loaded\n      if (\n        (this.props.candidateExam.user_exams_done.length === 0 ||\n          check === undefined) &&\n        this.props.allAnswers === undefined\n      ) {\n        this.props.loadExamsDone(\n          this.props.exam_id.period,\n          this.props.auth.user.user_id,\n          this.setLoadingStatus\n        );\n      }\n      if (check !== undefined) {\n        if (\n          this.props.candidateExam.user_exams_done.find(\n            (item) => item.exam_paper === check?.exam_paper\n          ) === undefined\n        ) {\n          this.props.requestUserAnswers(\n            check.exam_paper,\n            this.props.user_id === undefined\n              ? this.props.auth.user.user_id\n              : this.props.user_id,\n            this.setLoading\n          );\n        }\n      }\n    }\n  };\n  userAnswersTotalMarks = (user_answers: ExamAnswerSheetDone) => {\n    let total: number = 0;\n    for (let item of user_answers.user_answers) {\n      total += item.user_marks;\n    }\n    return total;\n  };\n  render() {\n    let user_exam_details: ExamAnswerSheetDone | undefined =\n      this.props.allAnswers === undefined\n        ? this.props.candidateExam.user_exams_done.find(\n            (itm) =>\n              itm.course === this.props.exam_id.course &&\n              itm.period === this.props.exam_id.period &&\n              DATE(itm.exam_date) === DATE(this.props.exam_id.exam_date)\n          )\n        : this.props.allAnswers.find(\n            (itm) =>\n              itm.course === this.props.exam_id.course &&\n              itm.period === this.props.exam_id.period &&\n              DATE(itm.exam_date) === DATE(this.props.exam_id.exam_date)\n          );\n    if (\n      this.state.loading === true ||\n      this.state.loadingStatus === true ||\n      this.props.course.courses === null\n    ) {\n      return (\n        <div className=\"my-6 rounded bg-white p-3\">\n          <Loading />\n        </div>\n      );\n    }\n    if (user_exam_details === undefined) {\n      return (\n        <div className=\"my-6 rounded bg-white p-3\">\n          <span className=\"text-4xl font-bold\">Exam details not found!</span>\n        </div>\n      );\n    }\n    return (\n      <div className=\"p-2 bg-gray-100\">\n        <div className=\"mb-5 -mt-5\">\n          {user_exam_details !== undefined && (\n            <div className=\"mt-5\">\n              <div className=\"px-3 mb-2 flex flex-row items-center gap-3\">\n                <div>\n                  <AiOutlineFileText className=\"text-5xl text-gray-500\" />\n                </div>\n                <div\n                  className=\"text-2xl font-extrabold\"\n                  dangerouslySetInnerHTML={{\n                    __html: \"Exam for \" + this.props.exam_id.course_name,\n                  }}\n                ></div>\n              </div>\n              <div className=\" p-3 bg-white rounded-t mb-0 border-b\">\n                <div className=\"text-sm text-gray-500 font-bold\">\n                  Exam date:\n                </div>\n                <div\n                  className=\"text-base font-bold\"\n                  dangerouslySetInnerHTML={{\n                    __html: DATE(this.props.exam_id.exam_date),\n                  }}\n                ></div>\n              </div>\n              <div className=\" p-3 bg-white mb-0 border-b\">\n                <div className=\"text-sm text-gray-500 font-bold\">\n                  Exam description:\n                </div>\n                <div\n                  className=\"text-base font-bold\"\n                  dangerouslySetInnerHTML={{\n                    __html: this.props.exam_id.discription,\n                  }}\n                ></div>\n              </div>\n              <div className=\" p-3 bg-white rounded-b mb-0\">\n                <div className=\"text-sm text-gray-500 font-bold\">\n                  Exam terms and conditions:\n                </div>\n                <div\n                  className=\"text-base font-bold\"\n                  dangerouslySetInnerHTML={{\n                    __html: this.props.exam_id.termes,\n                  }}\n                ></div>\n              </div>\n            </div>\n          )}\n        </div>\n        <div className=\"text-2xl font-extrabold text-blue-600 px-2 mb-3\">\n          Exam answers & marks\n        </div>\n        {user_exam_details === undefined ? (\n          \"Not Found\"\n        ) : user_exam_details.user_answers.length === 0 ? (\n          <div>\n            <div className=\"p-5 rounded-lg bg-yellow-100 text-black text-xl mb-5 text-center border border-white shadow-lg animate__animated animate__shakeX\">\n              Exam answers not found, You did not submit the exam!\n            </div>\n          </div>\n        ) : (\n          user_exam_details.user_answers.map((item, i) => (\n            <div\n              key={i + 1}\n              className=\"bg-white hover:bg-white border border-white hover:border-blue-400 px-2 py-2 rounded  animate__animated animate__fadeIn animate__fast group mb-2\"\n            >\n              <div className=\"grid md:grid-cols-11 w-full\">\n                <div className=\"col-span-12 flex flex-row items-center gap-3\">\n                  <div\n                    key={i + 1}\n                    className=\"w-6 h-6 p-2 rounded-full bg-gray-600 flex justify-center items-center font-bold text-lg text-white cursor-pointer\"\n                  >\n                    {i + 1}\n                  </div>\n                  {user_exam_details &&\n                    user_exam_details.questions.find(\n                      (itm) => itm.question_id === item.question\n                    ) !== undefined && (\n                      <div className=\"text-sm w-full\">\n                        {user_exam_details.questions.find(\n                          (itm) => itm.question_id === item.question\n                        ) &&\n                        findQuestionType(\n                          user_exam_details.questions.find(\n                            (itm) => itm.question_id === item.question\n                          )!.type,\n                          this.props.questionTypes.questionTypes\n                        ) !== null &&\n                        findQuestionType(\n                          user_exam_details.questions.find(\n                            (itm) => itm.question_id === item.question\n                          )!.type,\n                          this.props.questionTypes.questionTypes\n                        ) === questionTypeElementsType.Embedded ? (\n                          EmbeddedQuestion(\n                            user_exam_details.questions.find(\n                              (itm) => itm.question_id === item.question\n                            )!,\n                            this.props.questionTypes.questionTypes,\n                            item.language as QuestionLanguage,\n                            [\n                              {\n                                question_id: item.question,\n                                status: true,\n                                answers: item.answers,\n                                language: item.language as QuestionLanguage,\n                              },\n                            ],\n                            () => {}\n                          )\n                        ) : (\n                          <div\n                            dangerouslySetInnerHTML={{\n                              __html: user_exam_details.questions\n                                .find(\n                                  (itm) => itm.question_id === item.question\n                                )!\n                                .question.find(\n                                  (test) => test.language === item.language\n                                )!.description,\n                            }}\n                            className=\"font-bold text-gray-700 text-base\"\n                          ></div>\n                        )}\n                        {console.log(\n                          \"Test selected exam: \",\n                          item.answers,\n                          item.language\n                        )}\n                        <div className=\"text-blue-700 font-bold text-sm w-full\">\n                          {findQuestionType(\n                            user_exam_details.questions.find(\n                              (itm) => itm.question_id === item.question\n                            )!.type,\n                            this.props.questionTypes.questionTypes\n                          ) !== null &&\n                          findQuestionType(\n                            user_exam_details.questions.find(\n                              (itm) => itm.question_id === item.question\n                            )!.type,\n                            this.props.questionTypes.questionTypes\n                          ) === questionTypeElementsType.Embedded\n                            ? \"\"\n                            : \"Answer: \"}\n                          {this.props.questionTypes.questionTypes !== null &&\n                            user_exam_details.user_answers.find(\n                              (itm) => itm.question === item.question\n                            ) && (\n                              <div className=\"mb-2\">\n                                {findQuestionType(\n                                  user_exam_details.questions.find(\n                                    (itm) => itm.question_id === item.question\n                                  )!.type,\n                                  this.props.questionTypes.questionTypes\n                                ) &&\n                                findQuestionType(\n                                  user_exam_details.questions.find(\n                                    (itm) => itm.question_id === item.question\n                                  )!.type,\n                                  this.props.questionTypes.questionTypes\n                                ) === questionTypeElementsType.Hybrid ? (\n                                  <FindAnswerHybrid\n                                    selectedLanguage={\n                                      item.language as QuestionLanguage\n                                    }\n                                    questionTypes={this.props.questionTypes}\n                                    auth={this.props.auth}\n                                    candidateExam={this.props.candidateExam}\n                                    answersList={[\n                                      {\n                                        question_id: item.question,\n                                        status: true,\n                                        answers: item.answers,\n                                        language:\n                                          item.language as QuestionLanguage,\n                                      },\n                                    ]}\n                                    system={this.props.system}\n                                    setSelectedExamQuestion={() => {}}\n                                    submitQuestionAnswer={false}\n                                    loadQuestionTypes={\n                                      this.props.loadQuestionTypes\n                                    }\n                                    submitExam={() => {}}\n                                    selectedExam={\n                                      user_exam_details === undefined ||\n                                      this.props.course.courses === null\n                                        ? null\n                                        : this.props.course.courses.find(\n                                            (itm) =>\n                                              user_exam_details !== undefined &&\n                                              itm.course_id ===\n                                                user_exam_details.questions.find(\n                                                  (itm) =>\n                                                    itm.question_id ===\n                                                    item.question\n                                                )!.course\n                                          )!\n                                    }\n                                    setSubmitModal={(status: boolean) => {}}\n                                    wholeQuestion={\n                                      user_exam_details.questions.find(\n                                        (itm) =>\n                                          itm.question_id === item.question\n                                      )!\n                                    }\n                                  />\n                                ) : (\n                                  <FindAnswer\n                                    selectedLanguage={item.language}\n                                    question={{\n                                      is_deleted:\n                                        user_exam_details.questions.find(\n                                          (itm) =>\n                                            itm.question_id === item.question\n                                        )!.is_deleted,\n                                      question_id: item.question,\n                                      course: user_exam_details.questions.find(\n                                        (itm) =>\n                                          itm.question_id === item.question\n                                      )!.course,\n                                      question:\n                                        user_exam_details.questions.find(\n                                          (itm) =>\n                                            itm.question_id === item.question\n                                        )!.question,\n                                      type: user_exam_details.questions.find(\n                                        (itm) =>\n                                          itm.question_id === item.question\n                                      )!.type,\n                                      chapters:\n                                        user_exam_details.questions.find(\n                                          (itm) =>\n                                            itm.question_id === item.question\n                                        )!.chapters,\n                                      customNumber:\n                                        user_exam_details.questions.find(\n                                          (itm) =>\n                                            itm.question_id === item.question\n                                        )!.customNumber,\n                                      marks: user_exam_details.questions.find(\n                                        (itm) =>\n                                          itm.question_id === item.question\n                                      )!.marks,\n                                      answers: user_exam_details.questions.find(\n                                        (itm) =>\n                                          itm.question_id === item.question\n                                      )!.answers,\n                                    }}\n                                    answersList={[\n                                      {\n                                        question_id: item.question,\n                                        status: true,\n                                        answers:\n                                          user_exam_details.user_answers.find(\n                                            (itm) =>\n                                              itm.question === item.question\n                                          )!.answers,\n                                        language:\n                                          item.language as QuestionLanguage,\n                                      },\n                                    ]}\n                                    questionTypes={\n                                      this.props.questionTypes.questionTypes\n                                    }\n                                    showCorrectAnswer={this.props.showAnswers}\n                                    onClick={() => {}}\n                                  />\n                                )}\n                              </div>\n                            )}\n                        </div>\n                      </div>\n                    )}\n                </div>\n              </div>\n              <div className=\"col-span-1 flex items-center justify-between\">\n                <div></div>\n\n                <div className=\"w-max flex flex-col items-end justify-center bg-blue-50 rounded-md px-3 py-1 group-hover:bg-blue-100\">\n                  <div className=\"text-sm font-semibold text-gray-700\">\n                    Marks\n                  </div>\n                  <div className=\"text-sm font-extrabold text-gray-900 -mt-1\">\n                    <span className=\"text-blue-500\">\n                      {item.user_marks.toFixed(\n                        user_exam_details &&\n                          item.user_marks ===\n                            user_exam_details.questions.find(\n                              (itm) => itm.question_id === item.question\n                            )?.marks\n                          ? 0\n                          : 2\n                      )}\n                    </span>{\" \"}\n                    /{\" \"}\n                    {user_exam_details &&\n                      user_exam_details.questions.find(\n                        (itm) => itm.question_id === item.question\n                      )?.marks}\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))\n        )}\n        <div className=\"flex flex-row items-center justify-between gap-3 mb-10\">\n          <div className=\"bg-blue-100 p-3 pr-3 text-blue-700 flex flex-col items-start justify-center rounded-lg border-2 border-white\">\n            <span className=\"text-gray-700\">Total marks percentage</span>\n            <span className=\"text-3xl font-extrabold\">\n              {user_exam_details &&\n                user_exam_details.total_marks.toFixed(\n                  user_exam_details.total_marks === 100 ||\n                    user_exam_details.total_marks === 0\n                    ? 0\n                    : 2\n                )}\n              %\n            </span>\n          </div>\n          <div>\n            <div className=\"bg-white rounded-lg p-3\">\n              <div className=\"text-gray-500 font-bold text-base text-right\">\n                Exam total marks\n              </div>\n              {user_exam_details !== undefined && (\n                <div className=\"font-extrabold text-3xl text-gray-900 text-right\">\n                  {this.userAnswersTotalMarks(user_exam_details).toFixed(\n                    this.userAnswersTotalMarks(user_exam_details) ===\n                      user_exam_details.exam_total_marks ||\n                      this.userAnswersTotalMarks(user_exam_details) === 0\n                      ? 0\n                      : 2\n                  )}{\" \"}\n                  / {user_exam_details.exam_total_marks}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  candidateExam,\n  candidateApplications,\n  questionTypes,\n  system,\n  course,\n}: StoreState): {\n  auth: Auth;\n  candidateExam: candidateExamStoreInterface;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  questionTypes: questionTypesStoreInterface;\n  system: System;\n  course: courseStoreInterface;\n} => {\n  return {\n    auth: auth,\n    candidateExam: candidateExam,\n    candidateApplications: candidateApplications,\n    questionTypes: questionTypes,\n    system: system,\n    course: course,\n  };\n};\n\nexport const AnswersDetails = connect(mapStateToProps, {\n  FC_GetProfileDetails,\n  LoadCandidateApplications,\n  setSelectedCandidateExam,\n  setSelectedCourse,\n  setSelectedPosition,\n  InitializeExamDetails,\n  loadExamsDone,\n  AddUserApplication,\n  loadApplicationPeriods,\n  requestUserAnswers,\n  loadQuestionTypes,\n  loadCourses,\n})(_AnswersDetails);\n","import React from \"react\";\nimport Chart from \"react-apexcharts\";\n\ntype chartType = {\n  options: {\n    labels: string[];\n    legend?: ApexLegend;\n    plotOptions?: ApexPlotOptions;\n    colors?: any[];\n  };\n  series: number[];\n  width?: number;\n};\n\nconst PieChart: React.FC<chartType> = (props) => {\n  return (\n    <div className=\"donut\">\n      <Chart\n        options={props.options}\n        series={props.series}\n        type=\"donut\"\n        width={`${props.width ? props.width : \"380\"}`}\n      />\n    </div>\n  );\n};\n\nexport default React.memo(PieChart);\n","import React from \"react\";\nimport { MdTurnedIn } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../../actions\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  claimApplicationsInterface,\n  claimApplicationsPositionInterface,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { DATE } from \"../../../utils/functions\";\nimport { PositionRequirementTableInterface } from \"../../Positions/ViewPosition\";\nimport ViewRequirements from \"../../Positions/ViewRequirements\";\n\nexport const FC_ApplicationPositionDistinctCategory = (\n  thisPosition: claimApplicationsPositionInterface,\n  documentCategories: DocumentReducerInterface\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n  let requirements = thisPosition.requirements;\n  // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n  for (let req in requirements) {\n    let thisRequirements = requirements[req];\n    // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisCategory = documentCategories.documentCategory\n      ? documentCategories.documentCategory.find(\n          (item) =>\n            item.user_detail_category_id ===\n            thisRequirements.category.user_detail_category_id\n        ) && {\n          title: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.title,\n          user_detail_category_id: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.user_detail_category_id,\n        }\n      : {\n          title: \"\",\n          user_detail_category_id:\n            thisRequirements.category.user_detail_category_id,\n        };\n    // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisSubCategory = documentCategories.documentSubCategory\n      ? documentCategories.documentSubCategory.find(\n          (item) =>\n            item.user_detail_subcategory_id ===\n            thisRequirements.subcategory.user_detail_subcategory_id\n        )\n        ? {\n            title: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.title,\n            user_detail_subcategory_id:\n              documentCategories.documentSubCategory.find(\n                (item) =>\n                  item.user_detail_subcategory_id ===\n                  thisRequirements.subcategory.user_detail_subcategory_id\n              )!.user_detail_subcategory_id,\n            category_id: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.category_id,\n          }\n        : {\n            title: \"\",\n            user_detail_subcategory_id:\n              thisRequirements.subcategory.user_detail_subcategory_id,\n            category_id: \"\",\n          }\n      : {\n          title: \"\",\n          user_detail_subcategory_id:\n            thisRequirements.subcategory.user_detail_subcategory_id,\n          category_id: \"\",\n        };\n    // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n    if (thisCategory) {\n      for (let field in thisRequirements.position_requirement) {\n        // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n        let thisField = documentCategories.documentFields\n          ? documentCategories.documentFields.find(\n              (item) =>\n                item._id === thisRequirements.position_requirement[field]._id\n            )\n            ? {\n                title: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!.title,\n                _id: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n            : {\n                title: \"\",\n                _id: thisRequirements.subcategory.user_detail_subcategory_id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n          : {\n              title: \"\",\n              _id: thisRequirements.subcategory.user_detail_subcategory_id,\n              required: thisRequirements.position_requirement[field].required,\n            };\n        // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n        PositionsTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: thisField.title,\n          field_id: thisField._id,\n          required: thisField.required,\n        });\n      }\n\n      // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n      ) {\n        DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n        DistinctCategoriesTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: \"\",\n          subcategory_title: \"\",\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n\n      // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctSubCategoriesIds.includes(\n          thisSubCategory.user_detail_subcategory_id\n        )\n      ) {\n        DistinctSubCategoriesIds.push(\n          thisSubCategory.user_detail_subcategory_id\n        );\n        DistinctSubCategoriesTemp.push({\n          category_id: thisSubCategory.category_id,\n          category_title: \"\",\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n    }\n  }\n  // DistinctCategoriesIds.;\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\nexport const showEvaluator = (\n  userList: UserInterface[],\n  user_id: string\n): string => {\n  let result: string = \"\";\n  if (user_id === \"system\") {\n    result = \"System\";\n  } else {\n    // let user = getUserDocuments(userList, user_id);\n    // let user = undefined;\n    // if (user) {\n    //   result = user.user.user_info.fname + \" \" + user.user.user_info.lname;\n    // }\n  }\n  return result;\n};\n\ntype ApplicationFormViewProps = {\n  thisApplication: claimApplicationsInterface;\n  setViewThisFile: (value: string) => void;\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  documentCategories: DocumentReducerInterface;\n  PushPopupAlert: Function;\n};\n\nconst ApplicationFormView: React.FC<ApplicationFormViewProps> = (props) => {\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          {/* APPLICATION TITLE ========== */}\n          <section className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              {props.thisApplication.position.position_title}\n            </span>\n            <button\n              type=\"button\"\n              className=\"btn btn-blue\"\n              onClick={() => {\n                props.setChooseClaimFile(false);\n                props.setClaimFileId(props.thisApplication.application_id);\n                props.setViewThisFile(\"\");\n              }}\n            >\n              Choose\n            </button>\n          </section>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisApplication.createdAt)}\n            </span>\n          </div>\n          {false && (\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Session:</span>\n              <span className=\"font-bold text-gray-900 py-1\">\n                {\n                  props.thisApplication.application_session\n                    .application_session_name\n                }\n              </span>\n            </div>\n          )}\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisApplication.application_status ===\n                ApplicationStates.Rejected\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } py-1`}\n            >\n              {capitalizeFirstLetter(props.thisApplication.application_status)}\n            </span>\n          </div>\n          {/* <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {props.thisApplication.}\n            </span>\n          </div> */}\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span\n              className=\"font-semibold text-gray-900\"\n              dangerouslySetInnerHTML={{\n                __html: props.thisApplication.override_by.comment,\n              }}\n            ></span>\n          </div>\n        </div>\n        <div className=\"bg-white w-full rounded p-2 mb-2\">\n          <div className=\"text-gray-800 text-2xl font-bold my-2\">\n            Position Details\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Desc:</span>\n            <span className=\"font-semibold\">\n              {props.thisApplication.position.description}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>School level:</span>\n            <span className=\"font-semibold\">\n              {props.thisApplication.position.school_level_id.school_level_name}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Institute:</span>\n            <span className=\"font-semibold\">\n              {\n                props.thisApplication.position.education_institute_id\n                  .education_category_title\n              }\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Courses:</span>\n            <span className=\"flex items-center gap-2\">\n              {props.thisApplication.position.courses.map((item, index) => (\n                <div\n                  key={index + item.course_id}\n                  className=\"flex items-center gap-1\"\n                >\n                  <span className=\"font-semibold\">{item.course_name}</span>\n                  <span className=\"text-gray-600\">({item.course_code})</span>\n                  {index !==\n                    props.thisApplication.position.courses.length - 1 && \",\"}\n                </div>\n              ))}\n            </span>\n          </div>\n\n          <div className=\"text-gray-800 text-2xl font-bold my-2\">\n            Position Requirements\n          </div>\n          {props.thisApplication.position.requirements.length > 0 ? (\n            FC_ApplicationPositionDistinctCategory(\n              props.thisApplication.position,\n              props.documentCategories\n            ).DistinctCategoriesTemp.map((item, index) => (\n              <div\n                className=\"bg-gray-100props.thisApplication.position rounded p-2\"\n                key={index + item.category_id}\n              >\n                <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                  <MdTurnedIn />\n                  <span>{item.category_title}</span>\n                </div>\n                <div className=\"border bg-white mt-1\">\n                  <ViewRequirements\n                    requirements={FC_ApplicationPositionDistinctCategory(\n                      props.thisApplication.position,\n                      props.documentCategories\n                    ).PositionsTemp.filter(\n                      (req) => req.category_id === item.category_id\n                    )}\n                  />\n                </div>\n              </div>\n            ))\n          ) : (\n            <NoResult\n              theme={NoResultThemes.Dark}\n              value={\"No requirements\"}\n            ></NoResult>\n          )}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default React.memo(connect(null, { PushPopupAlert })(ApplicationFormView));\n","import React, { useEffect } from \"react\";\nimport { ImCheckboxChecked, ImCheckboxUnchecked } from \"react-icons/im\";\nimport { MdRadioButtonChecked, MdRadioButtonUnchecked } from \"react-icons/md\";\nimport { QuestionAnswersStore } from \"../../../../actions\";\nimport {\n  MultipleChoiceQuestionAnswerInterface,\n  QuestionAnswerInterface,\n  QuestionItemInterface,\n} from \"../../../../interfaces/question\";\nimport { questionTypeElementsType } from \"@mastrecruit/common\";\n\ninterface MultipleChoiceProps {\n  type: questionTypeElementsType | null;\n  available_answers: QuestionAnswersStore[];\n  selectedQuestionAnswer: {\n    question_id: string | null;\n    question: QuestionItemInterface | undefined;\n    answers: MultipleChoiceQuestionAnswerInterface[] | undefined;\n    selectedAns: QuestionAnswerInterface;\n  };\n  answerQuestionFn: (answer: QuestionAnswersStore) => void;\n}\n\nconst MultipleChoice = (props: MultipleChoiceProps) => {\n  const checkAnswer = (\n    item: MultipleChoiceQuestionAnswerInterface\n  ): boolean => {\n    let res = false;\n    if (props.available_answers.length > 0) {\n      let check = props.available_answers.find(\n        (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n      );\n      if (check !== undefined) {\n        let checkA = check.answers.find(\n          (tes) =>\n            tes.reference === props.selectedQuestionAnswer.selectedAns.reference\n        );\n        if (checkA !== undefined) {\n          let x = checkA.answer.find((itm) => itm.id === item.id);\n          if (x !== undefined && x.status === true) {\n            res = true;\n          }\n        }\n      }\n    }\n    return res;\n  };\n\n  const addAnswerItemFn = (\n    newAnswers: MultipleChoiceQuestionAnswerInterface[],\n    questionAnswer: QuestionAnswerInterface\n  ) => {\n    if (props.selectedQuestionAnswer.question_id !== null) {\n      props.selectedQuestionAnswer.question &&\n        props.answerQuestionFn({\n          question_id: props.selectedQuestionAnswer.question_id,\n          status: false,\n          answers: [\n            {\n              _id: questionAnswer._id,\n              reference: questionAnswer.reference,\n              answer: newAnswers,\n            },\n          ],\n          language: props.selectedQuestionAnswer.question.language,\n        });\n    }\n  };\n  const addAnswer = (\n    // Problem here!\n    item: MultipleChoiceQuestionAnswerInterface,\n    question_id: string | null\n  ) => {\n    let oldAnswers = props.available_answers.find(\n      (itm) => itm.question_id === question_id\n    );\n    if (oldAnswers !== undefined) {\n      let selAns = oldAnswers.answers.find(\n        (tester) =>\n          tester.reference ===\n          props.selectedQuestionAnswer.selectedAns.reference\n      );\n      if (selAns !== undefined) {\n        // Check type of question\n        let temp: MultipleChoiceQuestionAnswerInterface[] = [];\n        if (props.type === questionTypeElementsType.SingleMultiple) {\n          for (let t of selAns.answer) {\n            temp = [\n              ...temp,\n              {\n                id: t.id,\n                value: t.value,\n                status: false,\n              },\n            ];\n          }\n          addAnswerItemFn(temp, props.selectedQuestionAnswer.selectedAns);\n        }\n        let newAnswersMultiple: MultipleChoiceQuestionAnswerInterface[] = [];\n\n        for (let xItem of temp.length === 0 ? selAns.answer : temp) {\n          if (xItem.id === item.id) {\n            newAnswersMultiple = [\n              ...newAnswersMultiple,\n              {\n                id: xItem.id,\n                value: xItem.value,\n                status:\n                  props.type === questionTypeElementsType.SingleMultiple\n                    ? true\n                    : !xItem.status,\n              },\n            ];\n          } else {\n            newAnswersMultiple = [...newAnswersMultiple, xItem];\n          }\n\n          addAnswerItemFn(\n            newAnswersMultiple,\n            props.selectedQuestionAnswer.selectedAns\n          );\n        }\n      }\n    }\n  };\n  useEffect(() => {\n    let test = props.available_answers.find(\n      (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n    );\n    if (\n      test === undefined ||\n      (test !== undefined && test.answers[0].answer.length === 0)\n    ) {\n      if (\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.selectedQuestionAnswer !== undefined &&\n        props.selectedQuestionAnswer.question_id !== null\n      ) {\n        let newAnswers: MultipleChoiceQuestionAnswerInterface[] = [];\n        for (let a of props.selectedQuestionAnswer.answers) {\n          newAnswers = [\n            ...newAnswers,\n            {\n              id: a.id,\n              value: a.value,\n              status: false,\n            },\n          ];\n        }\n\n        props.selectedQuestionAnswer.question !== undefined &&\n          props.selectedQuestionAnswer.question &&\n          props.answerQuestionFn({\n            question_id: props.selectedQuestionAnswer.question_id,\n            status: true,\n            answers: [\n              {\n                _id: props.selectedQuestionAnswer.selectedAns._id,\n                reference: props.selectedQuestionAnswer.selectedAns.reference,\n                answer: newAnswers,\n              },\n            ],\n            language: props.selectedQuestionAnswer.question.language,\n          });\n      }\n    }\n  }, [props]);\n  return (\n    <div>\n      {props.selectedQuestionAnswer !== null &&\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.selectedQuestionAnswer.answers.map((item, i) => (\n          <div\n            title=\"Click to choose this option\"\n            key={i + 1}\n            onClick={() =>\n              addAnswer(item, props.selectedQuestionAnswer.question_id)\n            }\n            className={`px-2 py-2 ${\n              checkAnswer(item) === true\n                ? \"border bg-blue-100 border-white text-blue-600 hover:border-blue-600 rounded font-bold\"\n                : \"border-b bg-white border-gray-100 hover:bg-gray-100\"\n            } flex flex-row justify-left items-center cursor-pointer`}\n          >\n            {checkAnswer(item) === true ? (\n              <>\n                {props.type === questionTypeElementsType.SingleMultiple ? (\n                  <MdRadioButtonChecked className=\"text-2xl\" />\n                ) : (\n                  <ImCheckboxChecked className=\"text-2xl\" />\n                )}\n              </>\n            ) : props.type === questionTypeElementsType.SingleMultiple ? (\n              <MdRadioButtonUnchecked className=\"text-2xl truncate\" />\n            ) : (\n              <ImCheckboxUnchecked className=\"text-2xl\" />\n            )}\n            <div\n              dangerouslySetInnerHTML={{ __html: item.value }}\n              className=\"ml-2\"\n            ></div>\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default MultipleChoice;\n","import React, { useEffect } from \"react\";\nimport { MdRadioButtonChecked, MdRadioButtonUnchecked } from \"react-icons/md\";\nimport { QuestionAnswersStore } from \"../../../../actions\";\nimport {\n  QuestionAnswerInterface,\n  QuestionItemInterface,\n  TrueFalseQuestionAnswerInterface,\n} from \"../../../../interfaces/question\";\nimport { questionTypeElementsType } from \"@mastrecruit/common\";\n\ninterface TrueFalseProps {\n  type: questionTypeElementsType | null;\n  available_answers: QuestionAnswersStore[];\n  selectedQuestionAnswer: {\n    question_id: string | null;\n    question: QuestionItemInterface | undefined;\n    answers: TrueFalseQuestionAnswerInterface[] | undefined;\n    selectedAns: QuestionAnswerInterface;\n  };\n  answerQuestionFn: (answer: QuestionAnswersStore) => void;\n}\n\nconst TrueFalse = (props: TrueFalseProps) => {\n  const checkAnswer = (item: TrueFalseQuestionAnswerInterface): boolean => {\n    let res = false;\n    if (props.available_answers.length > 0) {\n      let check = props.available_answers.find(\n        (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n      );\n      if (check !== undefined) {\n        let checkA = check.answers.find(\n          (tes) =>\n            tes.reference === props.selectedQuestionAnswer.selectedAns.reference\n        );\n        if (checkA !== undefined) {\n          let x = checkA.answer.find((itm) => itm.id === item.id);\n          if (x !== undefined && x.status === true) {\n            res = true;\n          }\n        }\n      }\n    }\n    return res;\n  };\n  const addAnswerItemFn = (\n    newAnswers: TrueFalseQuestionAnswerInterface[],\n    questionAnswer: QuestionAnswerInterface\n  ) => {\n    if (props.selectedQuestionAnswer.question_id !== null) {\n      props.selectedQuestionAnswer.question &&\n        props.answerQuestionFn({\n          question_id: props.selectedQuestionAnswer.question_id,\n          status: false,\n          answers: [\n            {\n              _id: questionAnswer._id,\n              reference: questionAnswer.reference,\n              answer: newAnswers,\n            },\n          ],\n          language: props.selectedQuestionAnswer.question.language,\n        });\n    }\n  };\n\n  const addAnswer = (\n    //This has a problem\n    item: TrueFalseQuestionAnswerInterface,\n    question_id: string | null\n  ) => {\n    let oldAnswers = props.available_answers.find(\n      (itm) => itm.question_id === question_id\n    );\n    if (oldAnswers !== undefined) {\n      // Check type of question\n      let selAns = oldAnswers.answers.find(\n        (tester) =>\n          tester.reference ===\n          props.selectedQuestionAnswer.selectedAns.reference\n      );\n      if (selAns !== undefined) {\n        let temp: TrueFalseQuestionAnswerInterface[] = [];\n        for (let t of selAns.answer) {\n          temp = [\n            ...temp,\n            {\n              id: t.id,\n              value: t.value,\n              status: false,\n            },\n          ];\n        }\n        addAnswerItemFn(temp, selAns);\n        let newAnswers: TrueFalseQuestionAnswerInterface[] = [];\n        for (let x of temp.length === 0 ? selAns.answer : temp) {\n          if (x.id === item.id) {\n            newAnswers = [\n              ...newAnswers,\n              {\n                id: item.id,\n                value: item.value,\n                status: !x.status,\n              },\n            ];\n          } else {\n            newAnswers = [...newAnswers, x];\n          }\n        }\n        addAnswerItemFn(newAnswers, selAns);\n      }\n    }\n  };\n\n  useEffect(() => {\n    let test = props.available_answers.find(\n      (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n    );\n    if (\n      test === undefined ||\n      (test !== undefined && test.answers[0].answer.length === 0)\n    ) {\n      if (\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.selectedQuestionAnswer !== undefined &&\n        props.selectedQuestionAnswer.question_id !== null\n      ) {\n        let newAnswers: TrueFalseQuestionAnswerInterface[] = [];\n        for (let a of props.selectedQuestionAnswer.answers) {\n          newAnswers = [\n            ...newAnswers,\n            {\n              id: a.id,\n              value: a.value,\n              status: false,\n            },\n          ];\n        }\n        props.selectedQuestionAnswer.question !== undefined &&\n          props.selectedQuestionAnswer.question &&\n          props.answerQuestionFn({\n            question_id: props.selectedQuestionAnswer.question_id,\n            status: true,\n            answers: [\n              {\n                _id: props.selectedQuestionAnswer.selectedAns._id,\n                reference: props.selectedQuestionAnswer.selectedAns.reference,\n                answer: newAnswers,\n              },\n            ],\n            language: props.selectedQuestionAnswer.question.language,\n          });\n      }\n    }\n  }, [props]);\n\n  return (\n    <div className=\"\">\n      {props.selectedQuestionAnswer !== null &&\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.selectedQuestionAnswer.answers.map((item, i) => (\n          <div\n            key={i + 1}\n            onClick={() =>\n              addAnswer(item, props.selectedQuestionAnswer.question_id)\n            }\n            className={`px-2 py-2 border-b ${\n              checkAnswer(item) === true\n                ? \"border bg-blue-100 border-white text-blue-600 hover:border-blue-600 rounded font-bold\"\n                : \"border-b bg-white border-gray-100 hover:bg-gray-100\"\n            } flex flex-row justify-left items-center cursor-pointer`}\n          >\n            {checkAnswer(item) === true ? (\n              <MdRadioButtonChecked className=\"text-2xl\" />\n            ) : (\n              <MdRadioButtonUnchecked className=\"text-2xl\" />\n            )}\n            <span className=\"ml-2\">{item.value}</span>\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default TrueFalse;\n","import React, { useEffect } from \"react\";\nimport { QuestionAnswersStore } from \"../../../../actions\";\nimport {\n  QuestionAnswerInterface,\n  QuestionItemInterface,\n  SimpleCalculatedQuestionAnswerInterface,\n} from \"../../../../interfaces/question\";\nimport { questionTypeElementsType } from \"@mastrecruit/common\";\n\ninterface SimpleCalculatedProps {\n  type: questionTypeElementsType | null;\n  available_answers: QuestionAnswersStore[];\n  selectedQuestionAnswer: {\n    question_id: string | null;\n    question: QuestionItemInterface | undefined;\n    answers: SimpleCalculatedQuestionAnswerInterface[] | undefined;\n    selectedAns: QuestionAnswerInterface;\n  };\n  answerQuestionFn: (answer: QuestionAnswersStore) => void;\n}\n\nconst SimpleCalculated = (props: SimpleCalculatedProps) => {\n  const checkAnswer = (\n    item: SimpleCalculatedQuestionAnswerInterface\n  ): boolean => {\n    let res = false;\n    if (props.available_answers.length > 0) {\n      let check = props.available_answers.find(\n        (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n      );\n      if (check !== undefined) {\n        let checkA = check.answers.find(\n          (tes) =>\n            tes.reference === props.selectedQuestionAnswer.selectedAns.reference\n        );\n        if (checkA !== undefined) {\n          let x = checkA.answer.find((itm) => itm.id === item.id);\n          if (x !== undefined && x.value[0] !== \"\") {\n            res = true;\n          }\n        }\n      }\n    }\n    return res;\n  };\n  const addAnswerItemFn = (\n    newAnswers: { id: string; value: string; status: boolean }[],\n    questionAnswer: QuestionAnswerInterface\n  ) => {\n    if (props.selectedQuestionAnswer.question_id !== null) {\n      props.selectedQuestionAnswer.question &&\n        props.answerQuestionFn({\n          question_id: props.selectedQuestionAnswer.question_id,\n          status: false,\n          answers: [\n            {\n              _id: questionAnswer._id,\n              reference: questionAnswer.reference,\n              answer: [\n                {\n                  id: newAnswers[0].id,\n                  value: [newAnswers[0].value],\n                  status: newAnswers[0].status,\n                },\n              ],\n            },\n          ],\n          language: props.selectedQuestionAnswer.question.language,\n        });\n    }\n  };\n  const addAnswer = (\n    item: { id: string; value: string; status: boolean },\n    question_id: string | null\n  ) => {\n    let oldAnswers = props.available_answers.find(\n      (itm) => itm.question_id === question_id\n    );\n    if (oldAnswers !== undefined) {\n      // Check type of question\n      addAnswerItemFn(\n        [\n          {\n            id: props.selectedQuestionAnswer.selectedAns.answer[0].id,\n            value: item.value,\n            status: props.selectedQuestionAnswer.selectedAns.answer[0].status,\n          },\n        ],\n        props.selectedQuestionAnswer.selectedAns\n      );\n    }\n  };\n  const answeredValue = () => {\n    let answer = props.available_answers.find(\n      (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n    );\n    let checkB: QuestionAnswerInterface | undefined = undefined;\n    checkB =\n      answer === undefined\n        ? undefined\n        : answer.answers.find(\n            (tes) =>\n              tes.reference ===\n              props.selectedQuestionAnswer.selectedAns.reference\n          );\n    return answer !== undefined && checkB !== undefined\n      ? checkB.answer.length !== 0 && checkB.answer[0].value[0]\n      : \"\";\n  };\n\n  useEffect(() => {\n    let test = props.available_answers.find(\n      (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n    );\n    if (\n      test === undefined ||\n      (test !== undefined && test.answers[0].answer.length === 0)\n    ) {\n      if (\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.selectedQuestionAnswer !== undefined &&\n        props.selectedQuestionAnswer.question_id !== null\n      ) {\n        props.selectedQuestionAnswer.question !== undefined &&\n          props.selectedQuestionAnswer.question &&\n          props.answerQuestionFn({\n            question_id: props.selectedQuestionAnswer.question_id,\n            status: true,\n            answers: [\n              {\n                _id: props.selectedQuestionAnswer.selectedAns._id,\n                reference: props.selectedQuestionAnswer.selectedAns.reference,\n                answer: [\n                  {\n                    id: props.selectedQuestionAnswer.answers[0].id,\n                    value: [\"\"],\n                    status: props.selectedQuestionAnswer.answers[0].status,\n                  },\n                ],\n              },\n            ],\n            language: props.selectedQuestionAnswer.question.language,\n          });\n      }\n    }\n  }, [props]);\n\n  return (\n    <div className=\"\">\n      {props.selectedQuestionAnswer !== null &&\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.selectedQuestionAnswer.answers.map((item, i) => (\n          <div\n            key={i + 1}\n            className={`-mx-2 -my-2 flex flex-col justify-left rounded`}\n          >\n            <input\n              onChange={(e) => {\n                addAnswer(\n                  {\n                    id: item.id,\n                    value: e.target.value,\n                    status: item.status,\n                  },\n                  props.selectedQuestionAnswer.question_id\n                );\n              }}\n              type=\"text\"\n              value={answeredValue()}\n              className={`px-3 py-2 rounded focus:outline-none focus:border-none ${\n                checkAnswer(item) === true\n                  ? \"border-2 text-blue-600 font-bold bg-white border-blue-600\"\n                  : \"border text-gray-700 border-gray-500 bg-gray-50\"\n              }`}\n            />\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default SimpleCalculated;\n","import React, { useEffect } from \"react\";\nimport { QuestionAnswersStore } from \"../../../../actions\";\nimport {\n  QuestionAnswerInterface,\n  QuestionItemInterface,\n  ShortAnswerQuestionAnswerInterface,\n} from \"../../../../interfaces/question\";\nimport { questionTypeElementsType } from \"@mastrecruit/common\";\n\ninterface ShortAnswerProps {\n  type: questionTypeElementsType | null;\n  available_answers: QuestionAnswersStore[];\n  selectedQuestionAnswer: {\n    question_id: string | null;\n    question: QuestionItemInterface | undefined;\n    answers: ShortAnswerQuestionAnswerInterface[] | undefined;\n    selectedAns: QuestionAnswerInterface;\n  };\n  answerQuestionFn: (answer: QuestionAnswersStore) => void;\n}\n\nconst ShortAnswer = (props: ShortAnswerProps) => {\n  const checkAnswer = (item: ShortAnswerQuestionAnswerInterface): boolean => {\n    let res = false;\n    if (props.available_answers.length > 0) {\n      let check = props.available_answers.find(\n        (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n      );\n      if (check !== undefined) {\n        let checkA = check.answers.find(\n          (tes) =>\n            tes.reference === props.selectedQuestionAnswer.selectedAns.reference\n        );\n        if (checkA !== undefined) {\n          let x = checkA.answer.find((itm) => itm.id === item.id);\n          if (x !== undefined && x.value !== \"\") {\n            res = true;\n          }\n        }\n      }\n    }\n    return res;\n  };\n  const addAnswerItemFn = (\n    newAnswers: ShortAnswerQuestionAnswerInterface[],\n    questionAnswer: QuestionAnswerInterface\n  ) => {\n    if (props.selectedQuestionAnswer.question_id !== null) {\n      props.selectedQuestionAnswer.question &&\n        props.answerQuestionFn({\n          question_id: props.selectedQuestionAnswer.question_id,\n          status: false,\n          answers: [\n            {\n              _id: questionAnswer._id,\n              reference: questionAnswer.reference,\n              answer: newAnswers,\n            },\n          ],\n          language: props.selectedQuestionAnswer.question.language,\n        });\n    }\n  };\n  const addAnswer = (\n    item: { id: string; value: string; status: boolean },\n    question_id: string | null\n  ) => {\n    let oldAnswers = props.available_answers.find(\n      (itm) => itm.question_id === question_id\n    );\n    if (oldAnswers !== undefined) {\n      // Check type of question\n      addAnswerItemFn(\n        [\n          {\n            id: props.selectedQuestionAnswer.selectedAns.answer[0].id,\n            value: item.value,\n            status: props.selectedQuestionAnswer.selectedAns.answer[0].status,\n          },\n        ],\n        props.selectedQuestionAnswer.selectedAns\n      );\n    }\n  };\n  const answeredValue = () => {\n    let answer = props.available_answers.find(\n      (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n    );\n    let checkB: QuestionAnswerInterface | undefined = undefined;\n    checkB =\n      answer === undefined\n        ? undefined\n        : answer.answers.find(\n            (tes) =>\n              tes.reference ===\n              props.selectedQuestionAnswer.selectedAns.reference\n          );\n    return answer !== undefined && checkB !== undefined\n      ? checkB.answer.length !== 0 && checkB.answer[0].value\n      : \"\";\n  };\n\n  useEffect(() => {\n    let test = props.available_answers.find(\n      (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n    );\n    if (\n      test === undefined ||\n      (test !== undefined && test.answers[0].answer.length === 0)\n    ) {\n      if (\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.selectedQuestionAnswer !== undefined &&\n        props.selectedQuestionAnswer.question_id !== null\n      ) {\n        props.selectedQuestionAnswer.question !== undefined &&\n          props.selectedQuestionAnswer.question &&\n          props.answerQuestionFn({\n            question_id: props.selectedQuestionAnswer.question_id,\n            status: true,\n            answers: [\n              {\n                _id: props.selectedQuestionAnswer.selectedAns._id,\n                reference: props.selectedQuestionAnswer.selectedAns.reference,\n                answer: [\n                  {\n                    id: props.selectedQuestionAnswer.answers[0].id,\n                    value: \"\",\n                    status: props.selectedQuestionAnswer.answers[0].status,\n                  },\n                ],\n              },\n            ],\n            language: props.selectedQuestionAnswer.question.language,\n          });\n      }\n    }\n  }, [props]);\n  return (\n    <div className=\"\">\n      {props.selectedQuestionAnswer === undefined ? (\n        <div\n          className={`-mx-2 -my-2 flex flex-col justify-left rounded cursor-pointer`}\n        >\n          <textarea\n            value={\"\"}\n            className={`px-3 py-2 rounded focus:outline-none focus:border-none border text-gray-700 border-gray-500 bg-gray-50`}\n            style={{ minHeight: \"80px\" }}\n          ></textarea>\n        </div>\n      ) : (\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.selectedQuestionAnswer.answers.map((item, i) => (\n          <div\n            key={i + 1}\n            className={`-mx-2 -my-2 flex flex-col justify-left rounded cursor-pointer`}\n          >\n            <textarea\n              onChange={(e) => {\n                addAnswer(\n                  {\n                    id: item.id,\n                    value: e.target.value,\n                    status: item.status,\n                  },\n                  props.selectedQuestionAnswer.question_id\n                );\n              }}\n              value={answeredValue()}\n              className={`px-3 py-2 rounded focus:outline-none focus:border-none ${\n                checkAnswer(item) === true\n                  ? \"border-2 text-blue-600 font-bold bg-white border-blue-600\"\n                  : \"border text-gray-700 border-gray-500 bg-gray-50\"\n              }`}\n              style={{ minHeight: \"80px\" }}\n            ></textarea>\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\n\nexport default ShortAnswer;\n","import React, { useEffect } from \"react\";\nimport { QuestionAnswersStore } from \"../../../../actions\";\nimport {\n  NumericalQuestionAnswerInterface,\n  QuestionAnswerInterface,\n  QuestionItemInterface,\n} from \"../../../../interfaces/question\";\nimport { questionTypeElementsType } from \"@mastrecruit/common\";\n\ninterface NumericalProps {\n  type: questionTypeElementsType | null;\n  available_answers: QuestionAnswersStore[];\n  selectedQuestionAnswer: {\n    question_id: string | null;\n    question: QuestionItemInterface | undefined;\n    answers: NumericalQuestionAnswerInterface[] | undefined;\n    selectedAns: QuestionAnswerInterface;\n  };\n  answerQuestionFn: (answer: QuestionAnswersStore) => void;\n}\n\nconst Numerical = (props: NumericalProps) => {\n  const checkAnswer = (item: NumericalQuestionAnswerInterface): boolean => {\n    let res = false;\n    if (props.available_answers.length > 0) {\n      let check = props.available_answers.find(\n        (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n      );\n      if (check !== undefined) {\n        let checkA = check.answers.find(\n          (tes) =>\n            tes.reference === props.selectedQuestionAnswer.selectedAns.reference\n        );\n        if (checkA !== undefined) {\n          let x = checkA.answer.find((itm) => itm.id === item.id);\n          if (x !== undefined && x.value[0] !== \"\") {\n            res = true;\n          }\n        }\n      }\n    }\n    return res;\n  };\n  const addAnswerItemFn = (\n    newAnswers: { id: string; value: string[]; status: number[] }[],\n    questionAnswer: QuestionAnswerInterface\n  ) => {\n    if (props.selectedQuestionAnswer.question_id !== null) {\n      props.selectedQuestionAnswer.question &&\n        props.answerQuestionFn({\n          question_id: props.selectedQuestionAnswer.question_id,\n          status: false,\n          answers: [\n            {\n              _id: questionAnswer._id,\n              reference: questionAnswer.reference,\n              answer: newAnswers,\n            },\n          ],\n          language: props.selectedQuestionAnswer.question.language,\n        });\n    }\n  };\n  const addAnswer = (\n    item: { id: string; value: string; status: number[] },\n    question_id: string | null\n  ) => {\n    let oldAnswers = props.available_answers.find(\n      (itm) => itm.question_id === question_id\n    );\n    if (oldAnswers !== undefined) {\n      // Check type of question\n      addAnswerItemFn(\n        [\n          {\n            id: props.selectedQuestionAnswer.selectedAns.answer[0].id,\n            value: [item.value],\n            status: props.selectedQuestionAnswer.selectedAns.answer[0].status,\n          },\n        ],\n        props.selectedQuestionAnswer.selectedAns\n      );\n    }\n  };\n  const answeredValue = () => {\n    let answer = props.available_answers.find(\n      (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n    );\n    let checkB: QuestionAnswerInterface | undefined = undefined;\n    checkB =\n      answer === undefined\n        ? undefined\n        : answer.answers.find(\n            (tes) =>\n              tes.reference ===\n              props.selectedQuestionAnswer.selectedAns.reference\n          );\n    return answer !== undefined && checkB !== undefined\n      ? checkB.answer.length !== 0 && checkB.answer[0].value[0]\n      : \"\";\n  };\n\n  useEffect(() => {\n    let test = props.available_answers.find(\n      (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n    );\n    if (\n      test === undefined ||\n      (test !== undefined && test.answers[0].answer.length === 0)\n    ) {\n      if (\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.selectedQuestionAnswer !== undefined &&\n        props.selectedQuestionAnswer.question_id !== null\n      ) {\n        // props.answerQuestionFn({\n        //   question_id: props.selectedQuestionAnswer.question_id,\n        //   status: true,\n        //   answer: [\n        //     {\n        //       id: props.selectedQuestionAnswer.answers[0].id,\n        //       value: [\"\"],\n        //       status: props.selectedQuestionAnswer.answers[0].status,\n        //     },\n        //   ],\n        // });\n        props.selectedQuestionAnswer.question !== undefined &&\n          props.selectedQuestionAnswer.question &&\n          props.answerQuestionFn({\n            question_id: props.selectedQuestionAnswer.question_id,\n            status: true,\n            answers: [\n              {\n                _id: props.selectedQuestionAnswer.selectedAns._id,\n                reference: props.selectedQuestionAnswer.selectedAns.reference,\n                answer: [\n                  {\n                    id: props.selectedQuestionAnswer.answers[0].id,\n                    value: [\"\"],\n                    status: props.selectedQuestionAnswer.answers[0].status,\n                  },\n                ],\n              },\n            ],\n            language: props.selectedQuestionAnswer.question.language,\n          });\n      }\n    }\n  }, [props]);\n  return (\n    <div className=\"\">\n      {props.selectedQuestionAnswer !== null &&\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.selectedQuestionAnswer.answers.map((item, i) => (\n          <div\n            key={i + 1}\n            className={`-mx-2 -my-2 flex flex-col justify-left rounded cursor-pointer`}\n          >\n            <input\n              onChange={(e) => {\n                addAnswer(\n                  {\n                    id: item.id,\n                    value: e.target.value,\n                    status: item.status,\n                  },\n                  props.selectedQuestionAnswer.question_id\n                );\n              }}\n              type=\"text\"\n              value={answeredValue()}\n              className={`px-3 py-2 rounded focus:outline-none focus:border-none ${\n                checkAnswer(item) === true\n                  ? \"border-2 text-blue-600 font-bold border-blue-600\"\n                  : \"border text-gray-700 border-gray-500\"\n              }`}\n            />\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default Numerical;\n","import React, { useEffect } from \"react\";\nimport { ImCheckboxChecked, ImCheckboxUnchecked } from \"react-icons/im\";\nimport { MdRadioButtonChecked, MdRadioButtonUnchecked } from \"react-icons/md\";\nimport { QuestionAnswersStore } from \"../../../../actions\";\nimport {\n  CalculatedMultipleChoiceQuestionAnswerInterface,\n  QuestionAnswerInterface,\n  QuestionItemInterface,\n} from \"../../../../interfaces/question\";\nimport { getRandomArbitrary } from \"../../utils/utils\";\nimport { questionTypeElementsType } from \"@mastrecruit/common\";\n\ninterface CalculatedMultipleChoiceProps {\n  type: questionTypeElementsType | null;\n  available_answers: QuestionAnswersStore[];\n  selectedQuestionAnswer: {\n    question_id: string | null;\n    question: QuestionItemInterface | undefined;\n    answers: CalculatedMultipleChoiceQuestionAnswerInterface[] | undefined;\n    selectedAns: QuestionAnswerInterface;\n  };\n  answerQuestionFn: (answer: QuestionAnswersStore) => void;\n}\n\nconst CalculatedMultipleChoice = (props: CalculatedMultipleChoiceProps) => {\n  const checkAnswer = (\n    item: CalculatedMultipleChoiceQuestionAnswerInterface\n  ): boolean => {\n    let res = false;\n    if (props.available_answers.length > 0) {\n      let check = props.available_answers.find(\n        (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n      );\n      if (check !== undefined) {\n        let checkA = check.answers.find(\n          (tes) =>\n            tes.reference === props.selectedQuestionAnswer.selectedAns.reference\n        );\n        if (checkA !== undefined) {\n          let x = checkA.answer.find((itm) => itm.id === item.id);\n          if (x !== undefined && x.status === true) {\n            res = true;\n          }\n        }\n      }\n    }\n    return res;\n  };\n\n  const addAnswerItemFn = (\n    newAnswers: CalculatedMultipleChoiceQuestionAnswerInterface[],\n    questionAnswer: QuestionAnswerInterface\n  ) => {\n    if (props.selectedQuestionAnswer.question_id !== null) {\n      props.selectedQuestionAnswer.question &&\n        props.answerQuestionFn({\n          question_id: props.selectedQuestionAnswer.question_id,\n          status: false,\n          answers: [\n            {\n              _id: questionAnswer._id,\n              reference: questionAnswer.reference,\n              answer: newAnswers,\n            },\n          ],\n          language: props.selectedQuestionAnswer.question.language,\n        });\n    }\n  };\n  const addAnswer = (\n    item: CalculatedMultipleChoiceQuestionAnswerInterface,\n    question_id: string | null\n  ) => {\n    let oldAnswers = props.available_answers.find(\n      (itm) => itm.question_id === question_id\n    );\n    if (oldAnswers !== undefined) {\n      // Check type of question\n      let temp: CalculatedMultipleChoiceQuestionAnswerInterface[] = [];\n      if (\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.selectedQuestionAnswer.answers.filter(\n          (itm) => itm.status === true\n        ).length === 1\n      ) {\n        for (let t of props.selectedQuestionAnswer.selectedAns.answer) {\n          temp = [\n            ...temp,\n            {\n              id: t.id,\n              value: t.value,\n              status: false,\n            },\n          ];\n        }\n        addAnswerItemFn(temp, props.selectedQuestionAnswer.selectedAns);\n      }\n      let newAnswers: CalculatedMultipleChoiceQuestionAnswerInterface[] = [];\n      for (let x of temp.length === 0\n        ? props.selectedQuestionAnswer.selectedAns.answer\n        : temp) {\n        if (x.id === item.id) {\n          newAnswers = [\n            ...newAnswers,\n            {\n              id: item.id,\n              value: item.value,\n              status:\n                props.selectedQuestionAnswer.answers !== undefined &&\n                props.selectedQuestionAnswer.answers.filter(\n                  (itm) => itm.status === true\n                ).length === 1\n                  ? true\n                  : !x.status,\n            },\n          ];\n        } else {\n          newAnswers = [...newAnswers, x];\n        }\n      }\n      addAnswerItemFn(newAnswers, props.selectedQuestionAnswer.selectedAns);\n    }\n  };\n  useEffect(() => {\n    let test = props.available_answers.find(\n      (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n    );\n    if (\n      test === undefined ||\n      (test !== undefined && test.answers[0].answer.length === 0)\n    ) {\n      if (\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.selectedQuestionAnswer !== undefined &&\n        props.selectedQuestionAnswer.question_id !== null\n      ) {\n        let newAnswers: CalculatedMultipleChoiceQuestionAnswerInterface[] = [];\n        for (let a of props.selectedQuestionAnswer.answers) {\n          newAnswers = [\n            ...newAnswers,\n            {\n              id: a.id,\n              value: a.value,\n              status: false,\n            },\n          ];\n        }\n        props.selectedQuestionAnswer.question !== undefined &&\n          props.selectedQuestionAnswer.question &&\n          props.answerQuestionFn({\n            question_id: props.selectedQuestionAnswer.question_id,\n            status: true,\n            answers: [\n              {\n                _id: props.selectedQuestionAnswer.selectedAns._id,\n                reference: props.selectedQuestionAnswer.selectedAns.reference,\n                answer: newAnswers,\n              },\n            ],\n            language: props.selectedQuestionAnswer.question.language,\n          });\n      }\n    }\n  }, [props]);\n  return (\n    <div>\n      {props.selectedQuestionAnswer !== null &&\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.selectedQuestionAnswer.answers.map((item, i) => (\n          <div\n            key={i + 1}\n            onClick={() =>\n              addAnswer(item, props.selectedQuestionAnswer.question_id)\n            }\n            className={`px-2 py-2 border-b ${\n              checkAnswer(item) === true\n                ? \"border bg-blue-100 border-white text-blue-600 hover:border-blue-600 rounded font-bold\"\n                : \"border-b bg-white border-gray-100 hover:bg-gray-100\"\n            } flex flex-row justify-left items-center rounded cursor-pointer`}\n          >\n            {checkAnswer(item) === true ? (\n              <>\n                {props.selectedQuestionAnswer.answers !== undefined &&\n                props.selectedQuestionAnswer.answers.filter(\n                  (itm) => itm.status === true\n                ).length === 1 ? (\n                  <MdRadioButtonChecked className=\"text-2xl\" />\n                ) : (\n                  <ImCheckboxChecked className=\"text-2xl\" />\n                )}\n              </>\n            ) : props.selectedQuestionAnswer.answers !== undefined &&\n              props.selectedQuestionAnswer.answers.filter(\n                (itm) => itm.status === true\n              ).length === 1 ? (\n              <MdRadioButtonUnchecked className=\"text-2xl\" />\n            ) : (\n              <ImCheckboxUnchecked className=\"text-2xl\" />\n            )}\n            <span className=\"ml-2\">\n              {item.value.length > 2\n                ? item.value\n                : item.value.length === 2\n                ? getRandomArbitrary(item.value[0], item.value[1])\n                    .toFixed(2)\n                    .toString()\n                : item.value[0]}\n            </span>\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default CalculatedMultipleChoice;\n","import React, { useEffect } from \"react\";\nimport { QuestionAnswersStore } from \"../../../../actions\";\nimport {\n  EssayQuestionAnswerInterface,\n  QuestionAnswerInterface,\n  QuestionItemInterface,\n} from \"../../../../interfaces/question\";\nimport { questionTypeElementsType } from \"@mastrecruit/common\";\n\ninterface EssayQuestionProps {\n  type: questionTypeElementsType | null;\n  available_answers: QuestionAnswersStore[];\n  selectedQuestionAnswer: {\n    question_id: string | null;\n    question: QuestionItemInterface | undefined;\n    answers: EssayQuestionAnswerInterface[] | undefined;\n    selectedAns: QuestionAnswerInterface;\n  };\n  answerQuestionFn: (answer: QuestionAnswersStore) => void;\n}\n\nconst Essay = (props: EssayQuestionProps) => {\n  const checkAnswer = (item: EssayQuestionAnswerInterface): boolean => {\n    let res = false;\n    if (props.available_answers.length > 0) {\n      let check = props.available_answers.find(\n        (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n      );\n      if (check !== undefined) {\n        let checkA = check.answers.find(\n          (tes) =>\n            tes.reference === props.selectedQuestionAnswer.selectedAns.reference\n        );\n        if (checkA !== undefined) {\n          let x = checkA.answer.find((itm) => itm.id === item.id);\n          if (x !== undefined && x.value !== \"\") {\n            res = true;\n          }\n        }\n      }\n    }\n    return res;\n  };\n  const addAnswerItemFn = (\n    newAnswers: { id: string; value: string; status: boolean }[],\n    questionAnswer: QuestionAnswerInterface\n  ) => {\n    if (props.selectedQuestionAnswer.question_id !== null) {\n      props.selectedQuestionAnswer.question &&\n        props.answerQuestionFn({\n          question_id: props.selectedQuestionAnswer.question_id,\n          status: false,\n          answers: [\n            {\n              _id: questionAnswer._id,\n              reference: questionAnswer.reference,\n              answer: newAnswers,\n            },\n          ],\n          language: props.selectedQuestionAnswer.question.language,\n        });\n    }\n  };\n  const addAnswer = (\n    item: { id: string; value: string; status: boolean },\n    question_id: string | null\n  ) => {\n    let oldAnswers = props.available_answers.find(\n      (itm) => itm.question_id === question_id\n    );\n    if (oldAnswers !== undefined) {\n      let selAns = oldAnswers.answers.find(\n        (tester) =>\n          tester.reference ===\n          props.selectedQuestionAnswer.selectedAns.reference\n      );\n      if (selAns !== undefined) {\n        addAnswerItemFn(\n          [\n            {\n              id: selAns.answer[0].id,\n              value: item.value,\n              status: selAns.answer[0].status,\n            },\n          ],\n          selAns\n        );\n      }\n    }\n  };\n  const answeredValue = () => {\n    let answer = props.available_answers.find(\n      (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n    );\n    let checkB: QuestionAnswerInterface | undefined = undefined;\n    checkB =\n      answer === undefined\n        ? undefined\n        : answer.answers.find(\n            (tes) =>\n              tes.reference ===\n              props.selectedQuestionAnswer.selectedAns.reference\n          );\n    return answer !== undefined && checkB !== undefined\n      ? checkB.answer.length !== 0 && checkB.answer[0].value\n      : \"\";\n  };\n\n  useEffect(() => {\n    let test = props.available_answers.find(\n      (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n    );\n    if (\n      test === undefined ||\n      (test !== undefined && test.answers[0].answer.length === 0)\n    ) {\n      if (\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.selectedQuestionAnswer !== undefined &&\n        props.selectedQuestionAnswer.question_id !== null\n      ) {\n        props.selectedQuestionAnswer.question !== undefined &&\n          props.answerQuestionFn({\n            question_id: props.selectedQuestionAnswer.question_id,\n            status: true,\n            answers: [\n              {\n                _id: props.selectedQuestionAnswer.selectedAns._id,\n                reference: props.selectedQuestionAnswer.selectedAns.reference,\n                answer: [\n                  {\n                    id: props.selectedQuestionAnswer.answers[0].id,\n                    value: \"\",\n                    status: props.selectedQuestionAnswer.answers[0].status,\n                  },\n                ],\n              },\n            ],\n            language: props.selectedQuestionAnswer.question.language,\n          });\n      }\n    }\n  }, [props]);\n  return (\n    <div className=\"\">\n      {props.selectedQuestionAnswer !== null &&\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.selectedQuestionAnswer.answers.map((item, i) => (\n          <div\n            key={i + 1}\n            className={`-mx-2 -my-2 flex flex-col justify-left rounded cursor-pointer`}\n          >\n            <textarea\n              onChange={(e) => {\n                addAnswer(\n                  {\n                    id: item.id,\n                    value: e.target.value,\n                    status: item.status,\n                  },\n                  props.selectedQuestionAnswer.question_id\n                );\n              }}\n              value={answeredValue()}\n              className={`px-3 py-2 rounded focus:outline-none focus:border-none ${\n                checkAnswer(item) === true\n                  ? \"border-2 text-blue-600 font-bold bg-white border-blue-600\"\n                  : \"border text-gray-700 border-gray-500 bg-gray-50\"\n              }`}\n              style={{ minHeight: \"300px\" }}\n            ></textarea>\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default Essay;\n","import React from \"react\";\nimport { MdArrowBack, MdRadioButtonUnchecked } from \"react-icons/md\";\nimport { RiCheckboxCircleFill } from \"react-icons/ri\";\nimport {\n  MatchingQuestionAnswerInterface,\n  QuestionLanguage,\n} from \"../../../../interfaces\";\n\ninterface MatchingSelectProps {\n  selectedAnswer: MatchingQuestionAnswerInterface;\n  selectedStatus: string | null;\n  selectedQuestionAnswer: {\n    question_id: string;\n    answers: MatchingQuestionAnswerInterface[];\n    shuffledAnswers: MatchingQuestionAnswerInterface[];\n  };\n  checkAnswer: (item: MatchingQuestionAnswerInterface) => boolean;\n  addAnswer: (\n    item: MatchingQuestionAnswerInterface,\n    question_id: string | null\n  ) => void;\n  closeWindow: (status: boolean) => void;\n  findWord: (lang: QuestionLanguage, status: string | false) => string;\n  selectedLanguage: QuestionLanguage;\n  checkIfSelected: (x: string) => any;\n}\n\nconst MatchingSelect = (props: MatchingSelectProps) => {\n  return (\n    // <div className=\"\">\n    <div className=\"bg-gray-200 rounded-b animate__animated animate__fadeInUp animate__faster -mx-2 mt-2\">\n      <div className=\"text-lg font-bold px-3 pt-2 flex flex-row items-center justify-between\">\n        <div className=\"flex flex-row items-center gap-3\">\n          <div\n            title=\"Click to close this window\"\n            onClick={() => props.closeWindow(false)}\n            className=\"h-10 w-10 text-center bg-gray-50 border border-white hover:border-blue-400 text-gray-900 rounded-full flex items-center justify-center cursor-pointer hover:bg-blue-100 hover:text-blue-700\"\n          >\n            <MdArrowBack className=\"text-2xl\" />\n          </div>\n          <span className=\"text-gray-800\">Choose correct matching</span>\n        </div>\n      </div>\n      <div className=\"bg-gray-200 p-2 mx-0\">\n        {props.selectedQuestionAnswer.shuffledAnswers.map((item, i) => (\n          <div\n            key={i + 1}\n            onClick={() => {\n              props.addAnswer(\n                {\n                  id: props.selectedAnswer.id,\n                  value: props.selectedAnswer.value,\n                  status: item.status,\n                },\n                props.selectedQuestionAnswer.question_id\n              );\n              props.closeWindow(false);\n            }}\n            className={`${\n              item.status ===\n              props.findWord(\n                props.selectedLanguage,\n                props.checkIfSelected(props.selectedAnswer.id)\n              )\n                ? \"border-2 border-white bg-blue-100 font-bold text-blue-700\"\n                : \"border text-gray-500 hover:text-gray-900 hover:font-extrabold\"\n            } cursor-pointer rounded bg-white hover:bg-blue-50 hover:border-white p-3 mb-2 flex flex-row items-center gap-3`}\n          >\n            <div>\n              {item.status ===\n              props.findWord(\n                props.selectedLanguage,\n                props.checkIfSelected(props.selectedAnswer.id)\n              ) ? (\n                <RiCheckboxCircleFill className=\"text-3xl text-blue-600\" />\n              ) : (\n                <MdRadioButtonUnchecked className=\"text-3xl\" />\n              )}\n            </div>\n            <div dangerouslySetInnerHTML={{ __html: item.status }}></div>\n          </div>\n        ))}\n      </div>\n    </div>\n    // </div>\n  );\n};\n\nexport default MatchingSelect;\n","import React, { useEffect, useState } from \"react\";\nimport { BsFillCaretRightFill } from \"react-icons/bs\";\nimport { QuestionAnswersStore } from \"../../../../actions\";\nimport { CandidateExam } from \"../../../../interfaces/exam\";\nimport {\n  MatchingQuestionAnswerInterface,\n  MatchingStatuses,\n  QuestionAnswerInterface,\n  QuestionInterface,\n  QuestionItemInterface,\n  QuestionLanguage,\n  QuestionLanguages,\n} from \"../../../../interfaces/question\";\nimport MatchingSelect from \"./MatchingSelect\";\nimport { questionTypeElementsType } from \"@mastrecruit/common\";\n\ninterface MatchingProps {\n  selectedExam: CandidateExam | null;\n  selectedLanguage: QuestionLanguage;\n  type: questionTypeElementsType | null;\n  available_answers: QuestionAnswersStore[];\n  selectedQuestionAnswer: {\n    question_id: string | null;\n    question: QuestionItemInterface | undefined;\n    answers: MatchingQuestionAnswerInterface[] | undefined;\n    shuffledAnswers: MatchingQuestionAnswerInterface[] | undefined;\n    selectedAns: QuestionAnswerInterface;\n  };\n  answerQuestionFn: (answer: QuestionAnswersStore) => void;\n}\n\nconst Matching = (props: MatchingProps) => {\n  const [displayWindow, setDisplayWindow] = useState(false);\n  const [selectedAnswer, setSelectedAnswer] =\n    useState<MatchingQuestionAnswerInterface | null>(null);\n  const addAnswerItemFn = (\n    newAnswers: MatchingQuestionAnswerInterface[],\n    questionAnswer: QuestionAnswerInterface\n  ) => {\n    if (props.selectedQuestionAnswer.question_id !== null) {\n      props.selectedQuestionAnswer.question &&\n        props.answerQuestionFn({\n          question_id: props.selectedQuestionAnswer.question_id,\n          status: false,\n          answers: [\n            {\n              _id: questionAnswer._id,\n              reference: questionAnswer.reference,\n              answer: newAnswers,\n            },\n          ],\n          language: props.selectedQuestionAnswer.question.language,\n        });\n    }\n  };\n\n  const checkAnswer = (item: MatchingQuestionAnswerInterface): boolean => {\n    let res = false;\n    if (props.available_answers.length > 0) {\n      let check = props.available_answers.find(\n        (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n      );\n      if (check !== undefined) {\n        let checkA = check.answers.find(\n          (tes) =>\n            tes.reference === props.selectedQuestionAnswer.selectedAns.reference\n        );\n        if (checkA !== undefined) {\n          let x = checkA.answer.find((itm) => itm.id === item.id);\n          if (x !== undefined && x.status !== \"\") {\n            res = true;\n          }\n        }\n      }\n    }\n    return res;\n  };\n\n  const addAnswer = (\n    item: MatchingQuestionAnswerInterface,\n    question_id: string | null\n  ) => {\n    let oldAnswers = props.available_answers.find(\n      (itm) => itm.question_id === question_id\n    );\n    if (oldAnswers !== undefined) {\n      let selAns = oldAnswers.answers.find(\n        (tester) =>\n          tester.reference ===\n          props.selectedQuestionAnswer.selectedAns.reference\n      );\n      if (selAns !== undefined) {\n        let newAnswers: MatchingQuestionAnswerInterface[] = [];\n        for (let x of selAns.answer) {\n          if (x.id === item.id) {\n            newAnswers = [\n              ...newAnswers,\n              {\n                id: item.id,\n                value: item.value,\n                status: item.status,\n              },\n            ];\n          } else {\n            newAnswers = [...newAnswers, x];\n          }\n        }\n        addAnswerItemFn(newAnswers, selAns);\n      }\n    }\n  };\n\n  useEffect(() => {\n    let test = props.available_answers.find(\n      (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n    );\n    if (\n      test === undefined ||\n      (test !== undefined && test.answers[0].answer.length === 0)\n    ) {\n      if (\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.selectedQuestionAnswer !== undefined &&\n        props.selectedQuestionAnswer.question_id !== null\n      ) {\n        let newAnswers: MatchingQuestionAnswerInterface[] = [];\n        for (let a of props.selectedQuestionAnswer.answers) {\n          newAnswers = [\n            ...newAnswers,\n            {\n              id: a.id,\n              value: a.value,\n              status: \"\",\n            },\n          ];\n        }\n        props.selectedQuestionAnswer.question !== undefined &&\n          props.selectedQuestionAnswer.question &&\n          props.answerQuestionFn({\n            question_id: props.selectedQuestionAnswer.question_id,\n            status: true,\n            answers: [\n              {\n                _id: props.selectedQuestionAnswer.selectedAns._id,\n                reference: props.selectedQuestionAnswer.selectedAns.reference,\n                answer: newAnswers,\n              },\n            ],\n            language: props.selectedQuestionAnswer.question.language,\n          });\n      }\n    }\n  }, [props]);\n\n  const checkAnswerStatus = (\n    selectedQuestionId: string,\n    selectedLang: QuestionLanguage,\n    ansi: MatchingQuestionAnswerInterface\n  ) => {\n    if (props.selectedExam !== null) {\n      let testing = props.selectedExam.questions.find(\n        (test) => test.question_id === selectedQuestionId\n      );\n      if (testing !== undefined) {\n        for (let lang of QuestionLanguages) {\n          let testLang = testing.question.find(\n            (itm) => itm.language === lang.key\n          );\n          if (testLang !== undefined) {\n            let checkE = testLang.answers.find(\n              (tes) =>\n                tes.reference ===\n                props.selectedQuestionAnswer.selectedAns.reference\n            );\n            if (checkE !== undefined) {\n              let testAnswerLang = checkE.answer.find(\n                (it) => it.status.toString() === ansi.status\n              );\n              if (testAnswerLang !== undefined) {\n                return testAnswerLang.status.toString();\n              }\n            }\n          }\n        }\n      }\n    }\n    return false;\n  };\n\n  const checkIfSelected = (x: string) => {\n    let temp = props.available_answers.find(\n      (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n    );\n    if (temp !== undefined) {\n      let selAns = temp.answers.find(\n        (tester) =>\n          tester.reference ===\n          props.selectedQuestionAnswer.selectedAns.reference\n      );\n      if (selAns !== undefined) {\n        let ans = selAns.answer.find((itm) => itm.id === x);\n        if (ans !== undefined && ans.status !== \"\") {\n          if (props.selectedQuestionAnswer.question_id !== null) {\n            return checkAnswerStatus(\n              props.selectedQuestionAnswer.question_id,\n              props.selectedLanguage,\n              ans\n            );\n          }\n        }\n      }\n    }\n    return false;\n  };\n\n  const ReturnMatchingStatus = (): MatchingStatuses[] => {\n    let res: MatchingStatuses[] = [];\n    let question: QuestionInterface | undefined =\n      props.selectedExam?.questions.find(\n        (itm) => itm.question_id === props.selectedQuestionAnswer.question_id\n      );\n    if (question !== undefined) {\n      for (let item of question.question) {\n        let selAns = item.answers.find(\n          (tester) =>\n            tester.reference ===\n            props.selectedQuestionAnswer.selectedAns.reference\n        );\n        if (selAns !== undefined) {\n          for (let ans of selAns.answer) {\n            res = [\n              ...res,\n              {\n                id: ans.id,\n                lang: item.language,\n                status: ans.status.toString(),\n              },\n            ];\n          }\n        } else {\n          break;\n        }\n      }\n    }\n    return res;\n  };\n\n  const findWord = (lang: QuestionLanguage, status: string | false) => {\n    let res: string = \"\";\n    let arr: MatchingStatuses[] = ReturnMatchingStatus();\n    if (arr.length > 0) {\n      let item = arr.find((itm) => itm.status === status)?.id;\n      if (item !== undefined) {\n        let newItem = arr.find(\n          (itm) => itm.id === item && itm.lang === lang\n        )?.status;\n        if (newItem !== undefined) {\n          res = newItem;\n        }\n      }\n    }\n    return res;\n  };\n\n  const translateClass = \" transform rotate-90\";\n\n  return (\n    <div className=\"\">\n      {props.selectedQuestionAnswer !== null &&\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.selectedQuestionAnswer.answers.map((item, i) => (\n          <div\n            key={i + 1}\n            className={`${\n              checkAnswer(item) === true\n                ? \"px-2 mb-2 py-2 md:py-0\"\n                : \"px-2 py-2\"\n            } ${checkAnswer(item) === true ? \"border rounded\" : \"border-b\"} ${\n              checkAnswer(item) === true ? \"text-blue-600 border-blue-200\" : \"\"\n            } grid grid-cols-12`}\n          >\n            <div\n              className={`col-span-12 ${\n                checkAnswer(item) === true ? \"md:col-span-6\" : \"md:col-span-8\"\n              } flex flex-row items-center gap-2`}\n            >\n              {checkAnswer(item) === true ? (\n                <div className=\"flex items-center justify-center w-8 h-8 bg-blue-100 text-blue-600 text-xl font-normal rounded-full\">\n                  {i + 1}\n                </div>\n              ) : (\n                <div className=\"flex items-center justify-center w-8 h-8 bg-gray-100 text-gray-500 text-xl font-normal rounded-full\">\n                  {i + 1}\n                </div>\n              )}\n              <div\n                dangerouslySetInnerHTML={{ __html: item.value }}\n                className={`ml-2 ${\n                  selectedAnswer !== null &&\n                  selectedAnswer.id === item.id &&\n                  displayWindow === true\n                    ? \"text-blue-600 font-extrabold\"\n                    : \"text-gray-600\"\n                }`}\n              ></div>\n            </div>\n            {checkAnswer(item) === true ? (\n              <div\n                title=\"Click to change selected choice\"\n                onClick={() => {\n                  setSelectedAnswer(item);\n                  setDisplayWindow(!displayWindow);\n                }}\n                className=\"flex flex-row items-center gap-2 col-span-12 md:col-span-6 cursor-pointer md:hover:bg-blue-50 py-4 pr-2 -mr-2 rounded-r md:pl-4 md:border-l border-blue-200\"\n              >\n                <BsFillCaretRightFill\n                  className={`text-xl transition transform${\n                    selectedAnswer !== null &&\n                    selectedAnswer.id === item.id &&\n                    displayWindow === true\n                      ? translateClass\n                      : \"\"\n                  }`}\n                />\n                <div\n                  dangerouslySetInnerHTML={{\n                    __html: findWord(\n                      props.selectedLanguage,\n                      checkIfSelected(item.id)\n                    ),\n                  }}\n                ></div>\n              </div>\n            ) : (\n              <div className=\"col-span-12 md:col-span-4 flex items-center md:justify-start mt-2 md:mt-0\">\n                <div\n                  onClick={() => {\n                    setSelectedAnswer(item);\n                    setDisplayWindow(!displayWindow);\n                  }}\n                  title={\n                    checkAnswer(item) === true\n                      ? \"Click to change selected choice\"\n                      : \"Click to choose correct matching\"\n                  }\n                  className={`btn text-sm ${\n                    checkAnswer(item) === true ||\n                    (selectedAnswer !== null &&\n                      selectedAnswer.id === item.id &&\n                      displayWindow === true)\n                      ? \"bg-blue-50\"\n                      : \"bg-yellow-100 hover:bg-yellow-200\"\n                  } text-center cursor-pointer`}\n                >\n                  {checkAnswer(item) === true\n                    ? findWord(props.selectedLanguage, checkIfSelected(item.id))\n                    : selectedAnswer !== null &&\n                      selectedAnswer.id === item.id &&\n                      displayWindow === true\n                    ? \"Close matching list\"\n                    : \"Choose matching\"}\n                </div>\n              </div>\n            )}\n            <div className=\"col-span-12 md:col-span-12\">\n              {props.selectedQuestionAnswer.question_id !== null &&\n                props.selectedQuestionAnswer.answers !== undefined &&\n                props.selectedQuestionAnswer.shuffledAnswers !== undefined &&\n                selectedAnswer !== null &&\n                displayWindow === true &&\n                selectedAnswer.id === item.id && (\n                  <MatchingSelect\n                    selectedAnswer={selectedAnswer}\n                    selectedStatus={null}\n                    selectedQuestionAnswer={{\n                      question_id: props.selectedQuestionAnswer.question_id,\n                      answers: props.selectedQuestionAnswer.answers,\n                      shuffledAnswers:\n                        props.selectedQuestionAnswer.shuffledAnswers,\n                    }}\n                    checkAnswer={checkAnswer}\n                    addAnswer={addAnswer}\n                    closeWindow={setDisplayWindow}\n                    findWord={findWord}\n                    selectedLanguage={props.selectedLanguage}\n                    checkIfSelected={checkIfSelected}\n                  />\n                )}\n            </div>\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default Matching;\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  getMyClaims,\n  createClaim,\n  GetClaimingTypes,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  PushPopupAlert,\n  DocumentClaimUser,\n  getMyAnswers,\n  getClaimReasons,\n  CandidateApplicationsStoreInterface,\n  candidateExamStoreInterface,\n} from \"../../actions\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../actions/document\";\nimport ApplicationFormView from \"../../containers/Claimings/Candidate/ApplicationFormView\";\nimport ChooseReason from \"../../containers/Claimings/Candidate/ChooseReason\";\nimport { ClaimGetDocTitle } from \"../../containers/Claimings/Candidate/ClaimForm\";\nimport DocFormView from \"../../containers/Claimings/Candidate/DocFormView\";\nimport FormApplicationList from \"../../containers/Claimings/Candidate/FormApplicationList\";\nimport FormDocumentList from \"../../containers/Claimings/Candidate/FormDocumentList\";\nimport {\n  PlansTypeKeys,\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  claimReasonInterface,\n} from \"../../interfaces\";\nimport {\n  ApplicationStates,\n  GetApplicationsAPI,\n} from \"../../interfaces/application\";\nimport { ExamAnswerSheetDone } from \"../../interfaces/exam\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { ClaimingReducerType } from \"../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../reducers/document\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { UserInterface } from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { errorToText } from \"../../utils/errors\";\nimport { DATE } from \"../../utils/functions\";\nimport { PopupAlertData } from \"../Alert/Popup\";\nimport Loading from \"../Loading/Loading\";\n\nconst getCourseIdBySheetId = (\n  allData: ExamAnswerSheetDone[],\n  sheet_id: string\n) => {\n  return allData.find((item) => item.answer_sheet_id === sheet_id);\n};\n\ntype ClaimFormProps = {\n  claim_type: PlansTypeKeys;\n  file_id: string;\n  setFormState: (value: boolean, response?: boolean) => void;\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  candidateExam: candidateExamStoreInterface;\n  createClaim: Function;\n  GetClaimingTypes: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  getMyRejectedApplications: Function;\n  getMyRejectedDocuments: Function;\n  getMyClaims: Function;\n  getMyAnswers: Function;\n  getClaimReasons: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n\n  // DEFAULT DATA ==========\n  // candidateDocuments?: DocumentClaimUser[];\n  // candidateAnswers?: ClaimExamResultsDetails[];\n  // candidateApplications?: claimApplicationsInterface[];\n};\n\ntype ClaimFormState = {\n  loading: boolean;\n  loadingForm: boolean;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  thisClaimType: PlansTypeKeys | null;\n  thisClaimTypeId: string;\n  claimComment: string;\n  claimFileId: string;\n  chooseClaimFile: boolean;\n  chooseClaimReason: boolean;\n  claimReason: claimReasonInterface | null;\n  viewThisFile: string;\n  formType: \"DEFAULT\" | \"PROPS\";\n  alertError: string | null;\n};\n\nexport class ClaimFormComponent extends Component<\n  ClaimFormProps,\n  ClaimFormState\n> {\n  constructor(props: ClaimFormProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingForm: false,\n      formError: null,\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      claimFileId: \"\",\n      chooseClaimFile: false,\n      viewThisFile: \"\",\n      formType: \"DEFAULT\",\n      alertError: null,\n      chooseClaimReason: false,\n      claimReason: null,\n    };\n  }\n\n  // GENERATE SET STATES FUNCTIONS\n  setLoading = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  setLoadingForm = (state: boolean) => {\n    this.setState({ loadingForm: state });\n  };\n\n  setFormError = (\n    data: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: data });\n  };\n\n  setAlertError = (data: string | null) => {\n    this.setState({ alertError: data });\n  };\n\n  setClaimFileId = (data: string) => {\n    this.setState({ claimFileId: data });\n  };\n\n  setViewThisFile = (data: string) => {\n    this.setState({ viewThisFile: data });\n  };\n\n  setChooseClaimFile = (data: boolean) => {\n    this.setState({ chooseClaimFile: data });\n  };\n\n  setClaimComment = (data: string) => {\n    this.setState({ claimComment: data });\n  };\n\n  setChooseClaimReason = (value: boolean) => {\n    this.setState({ chooseClaimReason: value });\n  };\n\n  setClaimReason = (value: claimReasonInterface | null) => {\n    this.setState({ claimReason: value });\n  };\n\n  // CHECK IF PASSED ID IS VALID\n  isDocumentIdValid = (\n    documents: DocumentClaimUser[],\n    doc_id: string\n  ): {\n    status: boolean;\n    msg: string;\n    alert: PopupAlertTheme;\n  } => {\n    let doc = documents.find((item) => item.doc_id === doc_id);\n    if (doc) {\n      // CHECK IF DOCUMENT HAS REJECTED STATUS\n      if (doc.validated_by.validation_status !== \"rejected\") {\n        return {\n          status: false,\n          msg: \"Only rejected document are allowed for claim\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n      return { status: true, msg: \"\", alert: PopupAlertTheme.success };\n    } else {\n      return {\n        status: false,\n        msg: \"Invalid document id\",\n        alert: PopupAlertTheme.warning,\n      };\n    }\n  };\n\n  isApplicationIdValid = (\n    applications: GetApplicationsAPI[],\n    app_id: string\n  ): {\n    status: boolean;\n    msg: string;\n    alert: PopupAlertTheme;\n  } => {\n    const app = applications.find((item) => item.application_id === app_id);\n    if (app) {\n      // CHECK IF DOCUMENT HAS REJECTED STATUS\n      if (app.application_status !== ApplicationStates.Rejected) {\n        return {\n          status: false,\n          msg: \"Only rejected application are allowed for claim\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n      // CHECK IF DOCUMENT HAS ALREADY CLAIMED ON\n      return { status: true, msg: \"\", alert: PopupAlertTheme.info };\n    } else {\n      return {\n        status: false,\n        msg: \"Invalid application id\",\n        alert: PopupAlertTheme.warning,\n      };\n    }\n  };\n\n  isExamIdValid = (\n    exams: ExamAnswerSheetDone[],\n    exam_id: string\n  ): {\n    status: boolean;\n    msg: string;\n    alert: PopupAlertTheme;\n  } => {\n    const exam = exams.find((item) => item.answer_sheet_id === exam_id);\n    if (exam) {\n      // CHECK IF DOCUMENT HAS REJECTED STATUS\n      if (exam.total_marks === 100) {\n        return {\n          status: false,\n          msg: \"You can't claim on exam which you have 100%\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n\n      return { status: true, msg: \"\", alert: PopupAlertTheme.info };\n    } else {\n      return {\n        status: false,\n        msg: \"Invalid answer sheet id\",\n        alert: PopupAlertTheme.warning,\n      };\n    }\n    // return {\n    //   status: false,\n    //   msg: \"No Application, please try again!\",\n    //   alert: PopupAlertTheme.info,\n    // };\n  };\n\n  componentDidMount = () => {\n    if (this.props.auth.application_session === null) {\n      this.props.PushPopupAlert({\n        title: \"No session active session\",\n        theme: PopupAlertTheme.danger,\n      });\n      this.props.setFormState(false);\n      this.setState({\n        claimFileId: \"\",\n        thisClaimType: null,\n        thisClaimTypeId: \"\",\n        claimComment: \"\",\n        chooseClaimFile: false,\n        formType: \"DEFAULT\",\n        viewThisFile: \"\",\n        formError: null,\n      });\n    } else {\n      if (\n        this.props.documentReducer.documentCategory === null &&\n        this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION\n      ) {\n        this.props.getDocumentCategory();\n      }\n      if (\n        this.props.documentReducer.documentSubCategory === null &&\n        this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION\n      ) {\n        this.props.getDocumentSubCategory();\n      }\n      if (\n        this.props.documentReducer.documentFields === null &&\n        this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION\n      ) {\n        this.props.getDocumentFields();\n      }\n      if (\n        this.props.candidateApplications.candidate_applications !== null &&\n        this.props.claim_type === PlansTypeKeys.APPLICATION\n      )\n        this.setLoading(false);\n\n      if (\n        (this.props.claiming.candidateDocuments === null ||\n          this.props.claiming.candidateDocuments.length !==\n            this.props.auth.documents.length) &&\n        this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION\n      ) {\n        this.props.getMyRejectedDocuments(\n          (status: boolean, msg: string, data?: DocumentClaimUser[]) => {\n            this.setLoading(status);\n            if (!status) {\n              if (msg.length > 0) {\n                this.props.PushPopupAlert({\n                  title: msg,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n              if (data) {\n                // PROPS VALIDATION PROCESS ###############\n                if (\n                  this.props.claim_type &&\n                  this.props.file_id &&\n                  this.state.formType === \"DEFAULT\"\n                ) {\n                  if (\n                    this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION\n                  ) {\n                    let _isDocumentIdValid = this.isDocumentIdValid(\n                      data,\n                      this.props.file_id\n                    );\n                    if (!_isDocumentIdValid.status) {\n                      this.props.PushPopupAlert({\n                        title: _isDocumentIdValid.msg,\n                        theme: _isDocumentIdValid.alert,\n                      });\n                      // setAlertError(_isDocumentIdValid.msg);\n                      this.props.setFormState(false);\n                    } else {\n                      this.setState({\n                        thisClaimType: this.props.claim_type,\n                        claimFileId: this.props.file_id,\n                        formType: \"PROPS\",\n                      });\n                    }\n                  }\n                }\n              }\n            }\n          }\n        );\n      } else this.setLoading(false);\n\n      if (this.props.claim_type === PlansTypeKeys.EXAMINATION)\n        this.setLoading(false);\n\n      if (this.props.claiming.claimReasons === null) {\n        this.props.getClaimReasons((status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          }\n        });\n      }\n\n      if (this.props.claiming.myClaims === null) {\n        this.props.getMyClaims(\n          this.props.auth.user.user_id,\n          this.props.auth.application_session.session_plan_id,\n          (status: boolean, msg: string) => {\n            this.setLoading(status);\n            if (status === false && msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          }\n        );\n      } else this.setLoading(false);\n\n      // PROPS VALIDATION PROCESS ###############\n      if (\n        !isEmptyOrSpaces(this.props.claim_type) &&\n        !isEmptyOrSpaces(this.props.file_id) &&\n        this.state.formType === \"DEFAULT\"\n      ) {\n        this.setState({ thisClaimType: this.props.claim_type });\n        if (\n          this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION &&\n          this.props.claiming.candidateDocuments\n        ) {\n          let _isDocumentIdValid = this.isDocumentIdValid(\n            this.props.claiming.candidateDocuments,\n            this.props.file_id\n          );\n          if (!_isDocumentIdValid.status) {\n            this.props.PushPopupAlert({\n              title: _isDocumentIdValid.msg,\n              theme: _isDocumentIdValid.alert,\n            });\n            // setAlertError(_isDocumentIdValid.msg);\n            this.props.setFormState(false);\n          } else {\n            this.setState({\n              thisClaimType: this.props.claim_type,\n              claimFileId: this.props.file_id,\n              formType: \"PROPS\",\n            });\n          }\n        }\n        if (\n          this.props.claim_type === PlansTypeKeys.APPLICATION &&\n          this.props.candidateApplications.candidate_applications\n        ) {\n          let _isApplicationIdValid = this.isApplicationIdValid(\n            this.props.candidateApplications.candidate_applications,\n            this.props.file_id\n          );\n          if (!_isApplicationIdValid.status) {\n            this.props.PushPopupAlert({\n              title: _isApplicationIdValid.msg,\n              theme: _isApplicationIdValid.alert,\n            });\n            this.props.setFormState(false);\n          } else {\n            this.setState({\n              thisClaimType: this.props.claim_type,\n              claimFileId: this.props.file_id,\n              formType: \"PROPS\",\n            });\n          }\n        }\n\n        if (\n          this.props.claim_type === PlansTypeKeys.EXAMINATION &&\n          this.props.candidateExam.user_exams_done\n        ) {\n          let _isExamIdValid = this.isExamIdValid(\n            this.props.candidateExam.user_exams_done,\n            this.props.file_id\n          );\n          if (!_isExamIdValid.status) {\n            this.props.PushPopupAlert({\n              title: _isExamIdValid.msg,\n              theme: _isExamIdValid.alert,\n            });\n            this.props.setFormState(false);\n          } else {\n            this.setState({\n              thisClaimType: this.props.claim_type,\n              claimFileId: this.props.file_id,\n              formType: \"PROPS\",\n            });\n          }\n        }\n      }\n    }\n  };\n\n  getDocumentById = (\n    documents: DocumentClaimUser[],\n    doc_id: string\n  ): DocumentClaimUser => {\n    return documents.filter((item) => item.doc_id === doc_id)[0];\n  };\n\n  getApplicationById = (\n    applications: GetApplicationsAPI[],\n    application_id: string\n  ): claimApplicationsInterface | undefined => {\n    let result: claimApplicationsInterface | undefined = undefined;\n    let thisApplication = applications.find(\n      (item) => item.application_id === application_id\n    );\n\n    if (thisApplication)\n      result = {\n        application_id: thisApplication.application_id,\n        application_period: thisApplication.application_session.session_plan_id,\n        createdAt: thisApplication.createdAt,\n        exams: thisApplication.exams,\n        position: thisApplication.position,\n        application_status:\n          thisApplication.application_status as ApplicationStates,\n        updatedAt: thisApplication.updatedAt,\n        user_id: thisApplication.user_id,\n        application_history: thisApplication.application_history,\n        application_session: thisApplication.application_session,\n        override_by: {\n          application_status: thisApplication.override_by.application_status,\n          comment: thisApplication.override_by.comment,\n          date: thisApplication.override_by.date,\n          user_id: thisApplication.override_by.user_id,\n        },\n      };\n\n    return result;\n  };\n\n  getValidation = (\n    thisId: string\n  ): {\n    old_reason: string;\n    old_status: string;\n    old_evaluated_by: string;\n  } => {\n    let result: {\n      old_reason: string;\n      old_status: string;\n      old_evaluated_by: string;\n    } = { old_reason: \"\", old_status: \"\", old_evaluated_by: \"\" };\n\n    if (\n      this.state.thisClaimType === PlansTypeKeys.DOCUMENT_VALIDATION &&\n      this.props.claiming.candidateDocuments\n    ) {\n      result = {\n        old_reason: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.comment,\n        old_status: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.validation_status,\n        old_evaluated_by: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.user_id,\n      };\n    } else if (\n      this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n      this.props.candidateApplications.candidate_applications &&\n      this.getApplicationById(\n        this.props.candidateApplications.candidate_applications,\n        thisId\n      )\n    ) {\n      result = {\n        old_reason: this.getApplicationById(\n          this.props.candidateApplications.candidate_applications,\n          thisId\n        )!.override_by.comment,\n        old_status: this.getApplicationById(\n          this.props.candidateApplications.candidate_applications,\n          thisId\n        )!.override_by.application_status,\n        old_evaluated_by: this.getApplicationById(\n          this.props.candidateApplications.candidate_applications,\n          thisId\n        )!.override_by.user_id,\n      };\n    }\n\n    return result;\n  };\n\n  loadUserById = async (user_id: string, callback: Function) => {\n    if (isEmptyOrSpaces(user_id)) {\n      return this.props.PushPopupAlert({\n        title: \"No user id provided\",\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    try {\n      setAxiosToken();\n      const res = await axios.get<UserInterface>(\n        `${API.AUTH}/users/${user_id}`\n      );\n      console.log(\"====================================\");\n      console.log({ loadUserById: res });\n      console.log(\"====================================\");\n      if (res) {\n        callback(res.data);\n      }\n    } catch (error) {\n      console.error({ error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  getClaimTitle = (claimType: PlansTypeKeys): string => {\n    let result: string = \"\";\n    // title from document\n    if (\n      claimType === PlansTypeKeys.DOCUMENT_VALIDATION &&\n      this.props.claiming.candidateDocuments\n    ) {\n      result = ClaimGetDocTitle(\n        this.props.documentReducer,\n        this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          this.state.claimFileId\n        )\n      ).main;\n    }\n    // title from application\n    if (\n      claimType === PlansTypeKeys.APPLICATION &&\n      this.props.candidateApplications.candidate_applications &&\n      this.getApplicationById(\n        this.props.candidateApplications.candidate_applications,\n        this.state.claimFileId\n      )\n    ) {\n      result = this.getApplicationById(\n        this.props.candidateApplications.candidate_applications,\n        this.state.claimFileId\n      )!.position.position_title;\n    }\n    // title from examination\n    if (\n      claimType === PlansTypeKeys.EXAMINATION &&\n      getCourseIdBySheetId(\n        this.props.candidateExam.user_exams_done,\n        this.state.claimFileId\n      )\n    ) {\n      result = getCourseIdBySheetId(\n        this.props.candidateExam.user_exams_done,\n        this.state.claimFileId\n      )!.course;\n    }\n    // if (\n    //   claimType === PlansTypeKeys.PLACEMENT_TRANSFER &&\n    //   this.state.myPlacement\n    // ) {\n    //   result = \"Placed on \" + this.state.myPlacement.placed.school.school_name;\n    // }\n\n    return result;\n  };\n\n  cleanToClose = () => {\n    this.props.setFormState(false);\n    this.setState({\n      claimFileId: \"\",\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      chooseClaimFile: false,\n      formType: \"DEFAULT\",\n      viewThisFile: \"\",\n      formError: null,\n    });\n  };\n\n  handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!this.state.thisClaimType) {\n      return this.setFormError({\n        element: \"claim_type\",\n        msg: \"Claim type is required!\",\n      });\n    }\n    if (isEmptyOrSpaces(this.state.claimFileId)) {\n      return this.setFormError({\n        element: \"claim_file\",\n        msg: `Please select ${this.state.thisClaimType.toLocaleLowerCase()} you are claiming on!`,\n      });\n    }\n\n    if (!this.state.claimReason) {\n      return this.setFormError({\n        element: \"claim_reason\",\n        msg: `Please select the reason of your claim!`,\n      });\n    }\n\n    if (isEmptyOrSpaces(this.state.claimComment)) {\n      return this.setFormError({\n        element: \"claim_comment\",\n        msg: `Claim comment is required!`,\n      });\n    }\n\n    if (!this.props.auth.application_session) {\n      return this.setAlertError(`No active claiming session is available!`);\n    }\n    let old_evaluator_email: string = \"info@system.com\";\n    let old_evaluator_name: string = \"System\";\n    let evaluator_email: string = \"\";\n    let evaluator_name: string = \"\";\n    let title: string = this.getClaimTitle(this.state.thisClaimType);\n\n    if (\n      this.state.thisClaimType !== PlansTypeKeys.EXAMINATION &&\n      this.getValidation(this.state.claimFileId).old_evaluated_by !== \"system\"\n    ) {\n      await this.loadUserById(\n        this.getValidation(this.state.claimFileId).old_evaluated_by,\n        (data: UserInterface) => {\n          old_evaluator_email = data.email;\n          old_evaluator_name =\n            data.user_info.fname + \" \" + data.user_info.lname;\n        }\n      );\n    }\n    this.setLoadingForm(true);\n    try {\n      setAxiosToken();\n      const res = await axios.post<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/create`,\n        {\n          claiming_on_id: this.state.claimFileId,\n          type_key: this.state.thisClaimType,\n          user: this.props.auth.user.user_id,\n          period_id: this.props.auth.application_session.session_plan_id,\n          default_claim_resaons: this.state.claimReason.id,\n          reason: this.state.claimComment,\n          // old_reason: this.getValidation(this.state.claimFileId).old_reason,\n          // old_status: this.getValidation(this.state.claimFileId).old_status,\n          // old_evaluated_by: this.getValidation(this.state.claimFileId)\n          //   .old_evaluated_by,\n          old_reason:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"System\"\n              : this.getValidation(this.state.claimFileId).old_reason,\n          old_status:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"Failed\"\n              : this.getValidation(this.state.claimFileId).old_status,\n          old_evaluated_by:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"\"\n              : this.getValidation(this.state.claimFileId).old_evaluated_by,\n          old_evaluator_email,\n          old_evaluator_name,\n          evaluator_email,\n          evaluator_name,\n          title,\n        }\n      );\n      console.log(\"====================================\");\n      console.log({ createClaim: res.data });\n      console.log(\"====================================\");\n      if (res.status === 201 || res.status === 200) {\n        this.props.createClaim(res.data);\n        this.props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        this.cleanToClose();\n        this.props.setFormState(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.props.setFormState(false);\n    this.setLoadingForm(false);\n  };\n\n  displayClaimType = (claimType: PlansTypeKeys): string => {\n    let result: string = \"\";\n    switch (claimType) {\n      case PlansTypeKeys.APPLICATION:\n        result = \"application\";\n        break;\n      case PlansTypeKeys.DOCUMENT_VALIDATION:\n        result = \"document\";\n        break;\n      case PlansTypeKeys.EXAMINATION:\n        result = \"exam\";\n        break;\n      case PlansTypeKeys.MARKS_PUBLICATION:\n        result = \"marks publication\";\n        break;\n      case PlansTypeKeys.PLACEMENT_TRANSFER:\n        result = \"placement\";\n        break;\n      default:\n        result = \"\";\n        break;\n    }\n\n    return result;\n  };\n\n  selectClaimType = (thisClaim: string) => {\n    this.setState({\n      thisClaimType: isEmptyOrSpaces(thisClaim)\n        ? null\n        : (thisClaim as PlansTypeKeys),\n    });\n  };\n\n  generateChooseFileTitle = (thisClaimType: PlansTypeKeys | null): string => {\n    let result: string = \"\";\n\n    switch (thisClaimType) {\n      case PlansTypeKeys.APPLICATION:\n        result = `Select application you are claiming on?`;\n        break;\n      case PlansTypeKeys.DOCUMENT_VALIDATION:\n        result = `Select document you are claiming on?`;\n        break;\n      case PlansTypeKeys.EXAMINATION:\n        result = `Select exam you are claiming on?`;\n        break;\n      case PlansTypeKeys.MARKS_PUBLICATION:\n        result = `Select marks publication you are claiming on?`;\n        break;\n      case PlansTypeKeys.PLACEMENT_TRANSFER:\n        result = `Select placement you are claiming on?`;\n        break;\n      default:\n        result = \"Select file you are claiming on?\";\n        break;\n    }\n\n    return result;\n  };\n\n  getClaimById = (\n    myClaims: CandidateClaimInterface[],\n    fileId: string,\n    sessionId: string\n  ): CandidateClaimInterface | undefined => {\n    return myClaims.find(\n      (item) => item.claiming_on_id === fileId && item.period_id === sessionId\n    );\n  };\n\n  render() {\n    // CHECK IF STILL LOADING DATA ===============\n    if (\n      this.props.auth.application_session !== null &&\n      (this.state.loading ||\n        (this.props.claiming.myClaims === null &&\n          !isEmptyOrSpaces(this.props.file_id) &&\n          !isEmptyOrSpaces(this.props.claim_type)))\n    ) {\n      return <Loading />;\n    }\n\n    if (\n      this.props.claiming.myClaims &&\n      this.props.auth.application_session &&\n      this.getClaimById(\n        this.props.claiming.myClaims,\n        this.props.file_id,\n        this.props.auth.application_session.session_plan_id\n      ) !== undefined\n    ) {\n      return (\n        <div>\n          <h2 className=\"text-center text-2xl font-bold p-3 text-gray-500\">\n            Claims on this {this.displayClaimType(this.props.claim_type!)}\n          </h2>\n          {this.getClaimById(\n            this.props.claiming.myClaims,\n            this.props.file_id,\n            this.props.auth.application_session.session_plan_id\n          )!.claims.length >= 1 ? (\n            <div>\n              {this.getClaimById(\n                this.props.claiming.myClaims,\n                this.props.file_id,\n                this.props.auth.application_session.session_plan_id\n              )!.claims.map((itm) => (\n                <div className=\"p-2 border rounded mb-2\">\n                  <div className=\"p-1 border-b\">\n                    <span className=\"text-gray-400\">Created date:</span>{\" \"}\n                    <b>{DATE(itm.createdAt)}</b>\n                  </div>\n                  <div className=\"p-1 border-b\">\n                    <span className=\"text-gray-400\">Reason:</span>{\" \"}\n                    <p>{itm.reason}</p>\n                  </div>\n                  <div className=\"p-1 border-b\">\n                    <span className=\"text-gray-400\">Evaluation comment:</span>{\" \"}\n                    <p>{itm.evaluation_comment}</p>\n                  </div>\n                  <div className=\"p-1\">\n                    <span className=\"text-gray-400 block\">decision:</span>{\" \"}\n                    <h3 className=\"text-xl font-bold\">\n                      {itm.decision_taken_status}\n                    </h3>\n                  </div>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div>No claims found!</div>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"pb-3\">\n        {/* CLAIM FORM ============================================== */}\n        {this.state.viewThisFile.length <= 0 && (\n          <form onSubmit={(e) => this.handleSubmit(e)}>\n            <div className=\"px-6 pb-3\">\n              {this.state.alertError && (\n                <div\n                  className=\"alert-warning cursor-pointer\"\n                  onClick={() => this.setAlertError(null)}\n                >\n                  {this.state.alertError}\n                </div>\n              )}\n              <div className=\"text-base text-gray-700 sm:text-lg\">\n                {/* SELECT CLAIM TYPE ============================================== */}\n                <div className=\"flex flex-col mb-2\">\n                  <label>Claim type</label>\n                  <select\n                    className={`rounded px-2 py-2 w-full bg-white focus:outline-none ${\n                      this.state.formType === \"PROPS\" && \"cursor-not-allowed\"\n                    } ${\n                      this.state.formError &&\n                      this.state.formError.element === \"claim_type\"\n                        ? \"border-red-500\"\n                        : \"border-gray-500\"\n                    } border-2`}\n                    onChange={(e: React.ChangeEvent<HTMLSelectElement>) => {\n                      this.selectClaimType(e.target.value);\n                      this.setClaimFileId(\"\");\n                      this.state.formError &&\n                        this.state.formError.element === \"claim_type\" &&\n                        this.setFormError(null);\n                    }}\n                    value={\n                      this.state.thisClaimType ? this.state.thisClaimType : \"\"\n                    }\n                    disabled={\n                      this.state.loadingForm || this.state.formType === \"PROPS\"\n                    }\n                  >\n                    <option value=\"\">Choose claim type</option>\n                    {Object.values(PlansTypeKeys).map((item, index) => (\n                      <option value={item} key={index + item}>\n                        {capitalizeFirstLetter(\n                          item.toLocaleLowerCase().replace(/_/g, \" \")\n                        )}\n                      </option>\n                    ))}\n                  </select>\n                  {this.state.formError &&\n                    this.state.formError.element === \"claim_type\" && (\n                      <span className=\"text-red-500\">\n                        {this.state.formError.msg}\n                      </span>\n                    )}\n                </div>\n                {/* END SELECT CLAIM TYPE ============================================== */}\n\n                {/* SELECT FILE TO CLAIM ON ============================================== */}\n                <div className=\"flex flex-col mb-2\">\n                  <label>\n                    {this.generateChooseFileTitle(this.state.thisClaimType)}\n                  </label>\n                  <div\n                    className={`text-left bg-white border-2 ${\n                      this.state.formType !== \"PROPS\"\n                        ? \"border-gray-700\"\n                        : \"border-gray-400 text-gray-500\"\n                    } rounded w-full ${\n                      this.state.chooseClaimFile ? \"h-64\" : \"h-10\"\n                    } ${\n                      this.state.formError &&\n                      this.state.formError.element === \"claim_file\"\n                        ? \"border-red-500\"\n                        : \"\"\n                    } border-2 ${\n                      this.state.thisClaimType &&\n                      !this.state.chooseClaimFile &&\n                      this.state.formType !== \"PROPS\"\n                        ? \"cursor-pointer\"\n                        : !this.state.chooseClaimFile && \"cursor-not-allowed\"\n                    }`}\n                    title={\n                      !this.state.thisClaimType\n                        ? \"Choose claim type first!\"\n                        : \"\"\n                    }\n                    onClick={() => {\n                      this.state.formType === \"DEFAULT\" &&\n                        this.state.thisClaimType &&\n                        !this.state.chooseClaimFile &&\n                        this.setChooseClaimFile(true);\n                      this.state.formError &&\n                        this.state.formError.element === \"claim_file\" &&\n                        this.setFormError(null);\n                    }}\n                  >\n                    {/* DISPLAYING FILTERED SELECTING FILE ============================ */}\n                    {this.state.claimFileId.length > 0 &&\n                    !this.state.chooseClaimFile ? (\n                      <p className=\"my-1 mx-2\">\n                        {this.state.thisClaimType ===\n                          PlansTypeKeys.DOCUMENT_VALIDATION &&\n                          this.props.claiming.candidateDocuments &&\n                          ClaimGetDocTitle(\n                            this.props.documentReducer,\n                            this.getDocumentById(\n                              this.props.claiming.candidateDocuments,\n                              this.state.claimFileId\n                            )\n                          ).main}\n                        {this.state.thisClaimType ===\n                          PlansTypeKeys.APPLICATION &&\n                          this.props.candidateApplications\n                            .candidate_applications &&\n                          this.getApplicationById(\n                            this.props.candidateApplications\n                              .candidate_applications,\n                            this.state.claimFileId\n                          ) &&\n                          this.getApplicationById(\n                            this.props.candidateApplications\n                              .candidate_applications,\n                            this.state.claimFileId\n                          )!.position.position_title}\n                      </p>\n                    ) : (\n                      !this.state.chooseClaimFile && (\n                        <p className=\"my-1 mx-2\">\n                          Select Claim{\" \"}\n                          {this.state.thisClaimType &&\n                            this.state.thisClaimType\n                              .toLocaleLowerCase()\n                              .replace(/_/g, \" \")}\n                        </p>\n                      )\n                    )}\n                    {/* END DISPLAYING FILTERED SELECTING FILE ============================ */}\n\n                    {/* LISTING OF REJECTED DOCUMENTS ============================ */}\n                    {this.state.chooseClaimFile &&\n                      this.state.thisClaimType ===\n                        PlansTypeKeys.DOCUMENT_VALIDATION &&\n                      this.props.claiming.candidateDocuments &&\n                      this.props.claiming.myClaims &&\n                      this.props.auth.application_session && (\n                        <FormDocumentList\n                          setChooseClaimFile={this.setChooseClaimFile}\n                          setClaimFileId={this.setClaimFileId}\n                          setViewThisFile={this.setViewThisFile}\n                          claimFileId={this.state.claimFileId}\n                          viewThisFile={this.state.viewThisFile}\n                          candidateDocuments={\n                            this.props.claiming.candidateDocuments\n                          }\n                          documentCategories={this.props.documentReducer}\n                          myClaims={this.props.claiming.myClaims}\n                          activeSession={this.props.auth.application_session}\n                        />\n                      )}\n                    {/* END LISTING OF REJECTED DOCUMENTS ============================ */}\n                    {/* LISTING OF REJECTED APPLICATION ============================ */}\n                    {this.state.chooseClaimFile &&\n                      this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n                      this.props.claiming.candidateApplications &&\n                      this.props.claiming.myClaims &&\n                      this.props.auth.application_session && (\n                        <FormApplicationList\n                          setChooseClaimFile={this.setChooseClaimFile}\n                          setClaimFileId={this.setClaimFileId}\n                          setViewThisFile={this.setViewThisFile}\n                          claimFileId={this.state.claimFileId}\n                          viewThisFile={this.state.viewThisFile}\n                          candidateApplications={\n                            this.props.claiming.candidateApplications\n                          }\n                          myClaims={this.props.claiming.myClaims}\n                          activeSession={this.props.auth.application_session}\n                        />\n                      )}\n                    {/* END LISTING OF REJECTED APPLICATION ============================ */}\n                  </div>\n                  {this.state.formError &&\n                    this.state.formError.element === \"claim_file\" && (\n                      <span className=\"text-red-500\">\n                        {this.state.formError.msg}\n                      </span>\n                    )}\n                </div>\n                {/* END SELECT FILE TO CLAIM ON ============================================== */}\n\n                {/* CLAIM REASONS ========================================== */}\n                <div className=\"flex flex-col mb-2\">\n                  <label>Choose reason of your claim</label>\n                  <div\n                    className={`text-left bg-white border-2 border-gray-700 rounded w-full ${\n                      this.state.chooseClaimReason ? \"h-64\" : \"h-auto\"\n                    } ${\n                      this.state.formError &&\n                      this.state.formError.element === \"claim_reason\"\n                        ? \"border-red-500\"\n                        : \"\"\n                    } border-2 ${\n                      this.props.claiming.claimReasons === null\n                        ? \"cursor-wait\"\n                        : \"cursor-pointer\"\n                    }`}\n                    title=\"Choose the reason for your claim!\"\n                    onClick={() => {\n                      !this.state.chooseClaimReason &&\n                        this.setState({ chooseClaimReason: true });\n                      this.state.formError &&\n                        this.state.formError.element === \"claim_reason\" &&\n                        this.setFormError(null);\n                    }}\n                  >\n                    {/* DISPLAYING SELECTED REASON ============================ */}\n                    {this.state.claimReason && !this.state.chooseClaimReason ? (\n                      <p className=\"my-1 mx-2\">\n                        {this.state.claimReason.reason}\n                      </p>\n                    ) : (\n                      !this.state.chooseClaimReason && (\n                        <p className=\"my-1 mx-2\">Select reason</p>\n                      )\n                    )}\n                    {/* END DISPLAYING SELECTED REASON ============================ */}\n\n                    {/* LISTING OF CLAIM REASONS ============================ */}\n                    {this.state.chooseClaimReason &&\n                      this.props.claiming.claimReasons && (\n                        <ChooseReason\n                          setChooseClaimReason={this.setChooseClaimReason}\n                          setClaimReason={this.setClaimReason}\n                          claimReason={this.state.claimReason}\n                          allClaimReasons={this.props.claiming.claimReasons}\n                        />\n                      )}\n                    {/* END LISTING OF CLAIM REASONS ============================ */}\n                  </div>\n                  {this.state.formError &&\n                    this.state.formError.element === \"claim_reason\" && (\n                      <span className=\"text-red-500\">\n                        {this.state.formError.msg}\n                      </span>\n                    )}\n                </div>\n                {/* END CLAIM REASONS ========================================== */}\n\n                {/* CLAIM COMMENT ============================================== */}\n                <div className=\"flex flex-col\">\n                  <label>Comment</label>\n                  <textarea\n                    className={`text-left input-white w-20 inline-block ${\n                      this.state.formError &&\n                      this.state.formError.element === \"claim_comment\"\n                        ? \"border-red-500\"\n                        : \"border-gray-500\"\n                    } border-2`}\n                    placeholder={`Claim comment`}\n                    style={{ resize: \"none\" }}\n                    value={this.state.claimComment}\n                    onChange={(e) => {\n                      this.setClaimComment(e.target.value);\n                      this.state.formError &&\n                        this.state.formError.element === \"claim_comment\" &&\n                        this.setFormError(null);\n                    }}\n                    rows={3}\n                    disabled={this.state.loadingForm}\n                  ></textarea>\n                  {this.state.formError &&\n                    this.state.formError.element === \"claim_comment\" && (\n                      <span className=\"text-red-500\">\n                        {this.state.formError.msg}\n                      </span>\n                    )}\n                </div>\n                {/* END CLAIM COMMENT ============================================== */}\n              </div>\n              <div className=\"pt-3 flex justify-between\">\n                <button\n                  onClick={() => this.cleanToClose()}\n                  className={`btn bg-gray-400 text-white hover:bg-gray-600 focus:outline-none ${\n                    this.state.loadingForm && \"cursor-not-allowed\"\n                  }`}\n                  type=\"button\"\n                  disabled={this.state.loadingForm}\n                >\n                  Exit\n                </button>\n                <button\n                  className={`btn bg-primary text-white hover:bg-blue-600 focus:outline-none ${\n                    this.state.loadingForm && \"cursor-wait\"\n                  }`}\n                  type=\"submit\"\n                  disabled={this.state.loadingForm}\n                >\n                  {this.state.loadingForm ? \"Loading...\" : \"Claim\"}\n                </button>\n              </div>\n            </div>\n          </form>\n        )}\n        {/* END CLAIM FORM ============================================== */}\n\n        {/* CLAIM DOCUMENT VIEW ============================================== */}\n        {this.state.viewThisFile.length > 0 &&\n          this.props.claiming.candidateDocuments &&\n          this.state.thisClaimType === PlansTypeKeys.DOCUMENT_VALIDATION && (\n            <DocFormView\n              thisDoc={this.getDocumentById(\n                this.props.claiming.candidateDocuments,\n                this.state.viewThisFile\n              )}\n              setViewThisFile={this.setViewThisFile}\n              documentCategories={this.props.documentReducer}\n              setChooseClaimFile={this.setChooseClaimFile}\n              setClaimFileId={this.setClaimFileId}\n            />\n          )}\n        {/* END CLAIM DOCUMENT VIEW ============================================== */}\n        {/* CLAIM APPLICATION VIEW ============================================== */}\n        {this.state.viewThisFile.length > 0 &&\n          this.props.candidateApplications.candidate_applications &&\n          this.getApplicationById(\n            this.props.candidateApplications.candidate_applications,\n            this.state.viewThisFile\n          ) &&\n          this.state.thisClaimType === PlansTypeKeys.APPLICATION && (\n            <ApplicationFormView\n              thisApplication={\n                this.getApplicationById(\n                  this.props.candidateApplications.candidate_applications,\n                  this.state.viewThisFile\n                )!\n              }\n              documentCategories={this.props.documentReducer}\n              setChooseClaimFile={this.setChooseClaimFile}\n              setClaimFileId={this.setClaimFileId}\n              setViewThisFile={this.setViewThisFile}\n            />\n          )}\n        {/* END CLAIM APPLICATION VIEW ============================================== */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  document,\n  claiming,\n  candidateApplications,\n  candidateExam,\n}: StoreState): {\n  auth: Auth;\n  documentReducer: DocumentReducerInterface;\n  claiming: ClaimingReducerType;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  candidateExam: candidateExamStoreInterface;\n} => {\n  return {\n    auth: auth,\n    documentReducer: document,\n    claiming,\n    candidateApplications: candidateApplications,\n    candidateExam: candidateExam,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getMyClaims,\n  getMyAnswers,\n  getClaimReasons,\n  createClaim,\n  GetClaimingTypes,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  PushPopupAlert,\n})(ClaimFormComponent);\n","import React from \"react\";\nimport { AnswersDetails } from \"../../../components/AnswersDetails/AnswersDetails\";\nimport {\n  claimApplicationsPositionInterface,\n  ClaimExamResultsDetails,\n} from \"../../../interfaces\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { DATE } from \"../../../utils/functions\";\nimport { ExamDoneDetailsAnswers } from \"../../CandidateExams/CandidateExams\";\nimport { PositionRequirementTableInterface } from \"../../Positions/ViewPosition\";\n\nexport const FC_ApplicationPositionDistinctCategory = (\n  thisPosition: claimApplicationsPositionInterface,\n  documentCategories: DocumentReducerInterface\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n  let requirements = thisPosition.requirements;\n  // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n  for (let req in requirements) {\n    let thisRequirements = requirements[req];\n    // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisCategory = documentCategories.documentCategory\n      ? documentCategories.documentCategory.find(\n          (item) =>\n            item.user_detail_category_id ===\n            thisRequirements.category.user_detail_category_id\n        ) && {\n          title: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.title,\n          user_detail_category_id: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.user_detail_category_id,\n        }\n      : {\n          title: \"\",\n          user_detail_category_id:\n            thisRequirements.category.user_detail_category_id,\n        };\n    // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisSubCategory = documentCategories.documentSubCategory\n      ? documentCategories.documentSubCategory.find(\n          (item) =>\n            item.user_detail_subcategory_id ===\n            thisRequirements.subcategory.user_detail_subcategory_id\n        )\n        ? {\n            title: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.title,\n            user_detail_subcategory_id:\n              documentCategories.documentSubCategory.find(\n                (item) =>\n                  item.user_detail_subcategory_id ===\n                  thisRequirements.subcategory.user_detail_subcategory_id\n              )!.user_detail_subcategory_id,\n            category_id: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.category_id,\n          }\n        : {\n            title: \"\",\n            user_detail_subcategory_id:\n              thisRequirements.subcategory.user_detail_subcategory_id,\n            category_id: \"\",\n          }\n      : {\n          title: \"\",\n          user_detail_subcategory_id:\n            thisRequirements.subcategory.user_detail_subcategory_id,\n          category_id: \"\",\n        };\n    // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n    if (thisCategory) {\n      for (let field in thisRequirements.position_requirement) {\n        // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n        let thisField = documentCategories.documentFields\n          ? documentCategories.documentFields.find(\n              (item) =>\n                item._id === thisRequirements.position_requirement[field]._id\n            )\n            ? {\n                title: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!.title,\n                _id: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n            : {\n                title: \"\",\n                _id: thisRequirements.subcategory.user_detail_subcategory_id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n          : {\n              title: \"\",\n              _id: thisRequirements.subcategory.user_detail_subcategory_id,\n              required: thisRequirements.position_requirement[field].required,\n            };\n        // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n        PositionsTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: thisField.title,\n          field_id: thisField._id,\n          required: thisField.required,\n        });\n      }\n\n      // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n      ) {\n        DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n        DistinctCategoriesTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: \"\",\n          subcategory_title: \"\",\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n\n      // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctSubCategoriesIds.includes(\n          thisSubCategory.user_detail_subcategory_id\n        )\n      ) {\n        DistinctSubCategoriesIds.push(\n          thisSubCategory.user_detail_subcategory_id\n        );\n        DistinctSubCategoriesTemp.push({\n          category_id: thisSubCategory.category_id,\n          category_title: \"\",\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n    }\n  }\n  // DistinctCategoriesIds.;\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\nexport const showEvaluator = (\n  userList: UserInterface[],\n  user_id: string\n): string => {\n  let result: string = \"\";\n  if (user_id === \"system\") {\n    result = \"System\";\n  } else {\n    // let user = getUserDocuments(userList, user_id);\n    // let user = undefined;\n    // if (user) {\n    //   result = user.user.user_info.fname + \" \" + user.user.user_info.lname;\n    // }\n  }\n  return result;\n};\n\nexport const claimShowAnswer = (\n  answer: ClaimExamResultsDetails,\n  course_name: string\n): ExamDoneDetailsAnswers => {\n  const result: ExamDoneDetailsAnswers = {\n    course: answer.course,\n    course_name: course_name,\n    discription: answer.discription,\n    termes: answer.termes,\n    rules: {\n      right_click_enabled: false,\n      copy_enabled: false,\n      paste_enabled: false,\n      stop_candidate_when_comeback: false,\n      allow_to_leave_browser: false,\n    },\n    period: answer.period,\n    exam_date: answer.exam_date,\n    exam_id: answer.exam_id,\n  };\n  return result;\n};\n\ntype ExaminationFormViewProps = {\n  thisAnswerSheet: ClaimExamResultsDetails;\n  setViewThisFile: (value: string) => void;\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n};\n\nconst ExaminationFormView: React.FC<ExaminationFormViewProps> = (props) => {\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          {/* APPLICATION TITLE ========== */}\n          <section className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              {props.thisAnswerSheet.course_name}\n            </span>\n            <button\n              type=\"button\"\n              className=\"btn btn-blue\"\n              onClick={() => {\n                props.setChooseClaimFile(false);\n                props.setClaimFileId(props.thisAnswerSheet.answer_sheet_id);\n                props.setViewThisFile(\"\");\n              }}\n            >\n              Choose\n            </button>\n          </section>\n\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisAnswerSheet.createdAt)}\n            </span>\n          </div>\n        </div>\n        {/* QUESTIONS ----------------------------- */}\n        <AnswersDetails\n          showAnswers={false}\n          exam_id={claimShowAnswer(\n            props.thisAnswerSheet,\n            props.thisAnswerSheet.course_name\n          )}\n        />\n        {/* END QUESTIONS ----------------------------- */}\n      </div>\n    </section>\n  );\n};\n\nexport default React.memo(ExaminationFormView);\n","import React from \"react\";\nimport {\n  BsCheckSquareFill,\n  BsCheckCircleFill,\n  BsArrowRightSquareFill,\n  BsArrowRightCircleFill,\n} from \"react-icons/bs\";\nimport { QuestionAnswersStore } from \"../../../actions\";\nimport {\n  CalculatedMultipleChoiceQuestionAnswerInterface,\n  MatchingQuestionAnswerInterface,\n  MultipleChoiceQuestionAnswerInterface,\n  QuestionInterface,\n  questionType,\n  TrueFalseQuestionAnswerInterface,\n  NumericalQuestionAnswerInterface,\n  ShortAnswerQuestionAnswerInterface,\n  SimpleCalculatedQuestionAnswerInterface,\n  QuestionLanguage,\n  LanguageInterface,\n  EssayQuestionAnswerInterface,\n  QuestionAnswerInterface,\n  QuestionAnswerFormat,\n} from \"../../../interfaces\";\nimport {\n  toCalculatedMultipleChoice,\n  toEssay,\n  toMatching,\n  toMultipleChoice,\n  toNumerical,\n  toShortAnswer,\n  toSimpleCalculated,\n  toTrueFalse,\n} from \"../QuestionDetails/ConvertingAnswers\";\nimport { findQuestionType } from \"../utils/utils\";\nimport {\n  QuestionForHybrid,\n  questionTypeElementsType,\n} from \"@mastrecruit/common\";\nimport { findQType } from \"./FindAnswerHybrid\";\n\ninterface FindAnswerProps {\n  question: QuestionInterface;\n  answersList: QuestionAnswersStore[];\n  selectedLanguage: QuestionLanguage | LanguageInterface;\n  questionTypes: questionType[];\n  showCorrectAnswer: boolean;\n  subQuestionType?: questionTypeElementsType;\n  reference?: number;\n  onClick: () => void;\n}\n\nconst resultDiv = (\n  user_answers: QuestionAnswerFormat[],\n  question_answers: QuestionAnswerFormat[],\n  props: FindAnswerProps\n): JSX.Element => {\n  switch (\n    props.subQuestionType === undefined\n      ? findQuestionType(props.question.type, props.questionTypes)\n      : props.subQuestionType\n  ) {\n    case questionTypeElementsType.MultipleChoice:\n      const userAnswer: MultipleChoiceQuestionAnswerInterface[] =\n        toMultipleChoice(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswer\n            .filter((itm) => itm.status === true)\n            .map((item, i) => (\n              <div\n                key={i + 1}\n                onClick={props.onClick}\n                className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n              >\n                <div className=\"text-xl text-blue-600\">\n                  <BsCheckSquareFill />\n                </div>\n                <div dangerouslySetInnerHTML={{ __html: item.value }}></div>\n              </div>\n            ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers\n                  .filter((itm) => itm.status === true)\n                  .map((item, i) => (\n                    <div\n                      key={i + 1}\n                      onClick={props.onClick}\n                      className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                    >\n                      <div className=\"text-xl text-blue-600\">\n                        <BsCheckSquareFill />\n                      </div>\n                      <div\n                        dangerouslySetInnerHTML={{ __html: item.value }}\n                      ></div>\n                    </div>\n                  ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    case questionTypeElementsType.SingleMultiple:\n      const userAnswerSingle: MultipleChoiceQuestionAnswerInterface[] =\n        toMultipleChoice(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswerSingle\n            .filter((itm) => itm.status === true)\n            .map((item, i) => (\n              <div\n                key={i + 1}\n                onClick={props.onClick}\n                className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n              >\n                <div className=\"text-xl text-blue-600\">\n                  <BsCheckCircleFill />\n                </div>\n                <div dangerouslySetInnerHTML={{ __html: item.value }}></div>\n              </div>\n            ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers\n                  .filter((itm) => itm.status === true)\n                  .map((item, i) => (\n                    <div\n                      key={i + 1}\n                      onClick={props.onClick}\n                      className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                    >\n                      <div className=\"text-xl text-blue-600\">\n                        <BsCheckCircleFill />\n                      </div>\n                      <div\n                        dangerouslySetInnerHTML={{ __html: item.value }}\n                      ></div>\n                    </div>\n                  ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n\n    case questionTypeElementsType.CalculatedMultipleChoice:\n      const userAnswer1: CalculatedMultipleChoiceQuestionAnswerInterface[] =\n        toCalculatedMultipleChoice(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswer1\n            .filter((itm) => itm.status === true)\n            .map((item, i) => (\n              <div\n                key={i + 1}\n                onClick={props.onClick}\n                className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n              >\n                <div className=\"text-xl text-blue-600\">\n                  <BsCheckSquareFill />\n                </div>\n                <div className=\"text-base font-normal text-gray-500\">\n                  {item.value.length > 1 ? (\n                    <>\n                      Between{\" \"}\n                      <span className=\"underline text-gray-600 font-extrabold\">\n                        {item.value[0]}\n                      </span>{\" \"}\n                      and{\" \"}\n                      <span className=\"underline text-gray-600 font-extrabold\">\n                        {item.value[1]}\n                      </span>\n                    </>\n                  ) : (\n                    <span className=\"text-gray-700\">\n                      {item.value[0].toString()}\n                    </span>\n                  )}\n                </div>\n              </div>\n            ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers\n                  .filter((itm) => itm.status === true)\n                  .map((item, i) => (\n                    <div\n                      key={i + 1}\n                      onClick={props.onClick}\n                      className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 mb-1 py-3 font-bold\"\n                    >\n                      <div className=\"text-xl text-blue-600\">\n                        <BsCheckSquareFill />\n                      </div>\n                      <div className=\"text-base font-normal text-gray-500\">\n                        {item.value.length > 1 ? (\n                          <>\n                            Between{\" \"}\n                            <span className=\"underline text-blue-600 font-extrabold\">\n                              {item.value[0]}\n                            </span>{\" \"}\n                            and{\" \"}\n                            <span className=\"underline text-blue-600 font-extrabold\">\n                              {item.value[1]}\n                            </span>\n                          </>\n                        ) : (\n                          <span className=\"text-blue-600\">\n                            {item.value[0].toString()}\n                          </span>\n                        )}\n                      </div>\n                    </div>\n                  ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n\n    case questionTypeElementsType.Matching:\n      const userAnswerMatch: MatchingQuestionAnswerInterface[] =\n        toMatching(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswerMatch.map((item, i) => (\n            <div\n              key={i + 1}\n              onClick={props.onClick}\n              className=\"bg-gray-100 rounded cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 font-bold border border-blue-300\"\n            >\n              <div className=\"text-xl text-blue-600 font-bold p-3 pr-1 md:pr-3\">\n                <div className=\"h-8 w-8 p-3 bg-blue-100 rounded-full flex items-center justify-center\">\n                  {i + 1}\n                </div>\n              </div>\n              <div className=\"flex flex-col lg:flex-row items-center gap-3 w-full h-full truncate\">\n                <div\n                  className=\"w-full mt-3 lg:mb-0\"\n                  dangerouslySetInnerHTML={{ __html: item.value }}\n                ></div>\n                <div className=\"flex flex-row items-center gap-3 w-full mb-3 lg:mb-0\">\n                  <div className=\"text-3xl text-gray-500 group-hover:text-blue-600\">\n                    <BsArrowRightSquareFill />\n                  </div>\n                  <div\n                    className=\"w-full mr-2\"\n                    dangerouslySetInnerHTML={{ __html: item.status }}\n                  ></div>\n                </div>\n              </div>\n            </div>\n          ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers.map((item, i) => (\n                  <div\n                    key={i + 1}\n                    onClick={props.onClick}\n                    className=\"bg-blue-50 rounded cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 font-bold border border-blue-300\"\n                  >\n                    <div className=\"text-xl text-blue-600 font-bold p-3 pr-1 md:pr-3\">\n                      <div className=\"h-8 w-8 p-3 bg-blue-100 rounded-full flex items-center justify-center\">\n                        {i + 1}\n                      </div>\n                    </div>\n                    <div className=\"flex flex-col lg:flex-row items-center gap-3 w-full h-full truncate\">\n                      <div\n                        className=\"w-full mt-3 lg:mb-0\"\n                        dangerouslySetInnerHTML={{ __html: item.value }}\n                      ></div>\n                      <div className=\"flex flex-row items-center gap-3 w-full mb-3 lg:mb-0\">\n                        <div className=\"text-3xl text-gray-500 group-hover:text-blue-600\">\n                          <BsArrowRightSquareFill />\n                        </div>\n                        <div\n                          className=\"w-full mr-2\"\n                          dangerouslySetInnerHTML={{ __html: item.status }}\n                        ></div>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    case questionTypeElementsType.TrueFalse:\n      const userAnswerTureFalse: TrueFalseQuestionAnswerInterface[] =\n        toTrueFalse(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswerTureFalse\n            .filter((itm) => itm.status === true)\n            .map((item, i) => (\n              <div\n                key={i + 1}\n                onClick={props.onClick}\n                className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n              >\n                <div className=\"text-xl\">\n                  <BsArrowRightCircleFill />\n                </div>\n                <div dangerouslySetInnerHTML={{ __html: item.value }}></div>\n              </div>\n            ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers\n                  .filter((itm) => itm.status === true)\n                  .map((item, i) => (\n                    <div\n                      key={i + 1}\n                      onClick={props.onClick}\n                      className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-blue-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                    >\n                      <div className=\"text-xl\">\n                        <BsArrowRightCircleFill />\n                      </div>\n                      <div\n                        dangerouslySetInnerHTML={{ __html: item.value }}\n                      ></div>\n                    </div>\n                  ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    case questionTypeElementsType.Numeric:\n      const userAnswerNumerical: NumericalQuestionAnswerInterface[] =\n        toNumerical(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswerNumerical.map((item, i) => (\n            <div\n              key={i + 1}\n              onClick={props.onClick}\n              className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n            >\n              <div className=\"text-xl\">\n                <BsArrowRightCircleFill />\n              </div>\n              <div className=\"text-gray-600 text-base font-normal\">\n                {item.value.length > 1 ? (\n                  <>\n                    Between{\" \"}\n                    <span className=\"underline text-gray-600 font-extrabold\">\n                      {item.value[0]}\n                    </span>{\" \"}\n                    and{\" \"}\n                    <span className=\"underline text-gray-600 font-extrabold\">\n                      {item.value[1]}\n                    </span>\n                  </>\n                ) : (\n                  item.value.length > 0 && (\n                    <span className=\"text-gray-700\">\n                      {item.value[0].toString()}\n                    </span>\n                  )\n                )}\n              </div>\n            </div>\n          ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers.map((item, i) => (\n                  <div\n                    key={i + 1}\n                    onClick={props.onClick}\n                    className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-blue-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                  >\n                    <div className=\"text-xl\">\n                      <BsArrowRightCircleFill />\n                    </div>\n                    <div className=\"text-gray-600 text-base font-normal\">\n                      {item.value.length > 1 ? (\n                        <>\n                          Between{\" \"}\n                          <span className=\"underline text-blue-600 font-extrabold\">\n                            {item.value[0] - item.value[1]}\n                          </span>{\" \"}\n                          and{\" \"}\n                          <span className=\"underline text-blue-600 font-extrabold\">\n                            {item.value[0] + item.value[1]}\n                          </span>\n                        </>\n                      ) : (\n                        item.value.length > 0 && (\n                          <span className=\"text-blue-700\">\n                            {item.value[0].toString()}\n                          </span>\n                        )\n                      )}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    case questionTypeElementsType.SimpleCalculate:\n      const userAnswerSimpleCalculate: SimpleCalculatedQuestionAnswerInterface[] =\n        toSimpleCalculated(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswerSimpleCalculate.map((item, i) => (\n            <div\n              key={i + 1}\n              onClick={props.onClick}\n              className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n            >\n              <div className=\"text-xl\">\n                <BsArrowRightCircleFill />\n              </div>\n              <div className=\"text-gray-600 text-base font-normal\">\n                {item.value.length > 1 ? (\n                  <>\n                    Between{\" \"}\n                    <span className=\"underline text-gray-600 font-extrabold\">\n                      {item.value[0]}\n                    </span>{\" \"}\n                    and{\" \"}\n                    <span className=\"underline text-gray-600 font-extrabold\">\n                      {item.value[1]}\n                    </span>\n                  </>\n                ) : (\n                  item.value.length > 0 && (\n                    <span className=\"text-gray-700\">\n                      {item.value[0].toString()}\n                    </span>\n                  )\n                )}\n              </div>\n            </div>\n          ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers.map((item, i) => (\n                  <div\n                    key={i + 1}\n                    onClick={props.onClick}\n                    className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-blue-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                  >\n                    <div className=\"text-xl\">\n                      <BsArrowRightCircleFill />\n                    </div>\n                    <div className=\"text-gray-600 text-base font-normal\">\n                      {item.value.length > 1 ? (\n                        <>\n                          Between{\" \"}\n                          <span className=\"underline text-blue-600 font-extrabold\">\n                            {item.value[0]}\n                          </span>{\" \"}\n                          and{\" \"}\n                          <span className=\"underline text-blue-600 font-extrabold\">\n                            {item.value[1]}\n                          </span>\n                        </>\n                      ) : (\n                        item.value.length > 0 && (\n                          <span className=\"text-blue-700\">\n                            {item.value[0].toString()}\n                          </span>\n                        )\n                      )}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    case questionTypeElementsType.ShortAnswer:\n      const userAnswerShortAnswer: ShortAnswerQuestionAnswerInterface[] =\n        toShortAnswer(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswerShortAnswer.map((item, i) => (\n            <div\n              key={i + 1}\n              onClick={props.onClick}\n              className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n            >\n              <div className=\"text-xl\">\n                <BsArrowRightCircleFill />\n              </div>\n              <div\n                dangerouslySetInnerHTML={{\n                  __html: item.value,\n                }}\n              ></div>\n            </div>\n          ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers.map((item, i) => (\n                  <div\n                    key={i + 1}\n                    onClick={props.onClick}\n                    className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-blue-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                  >\n                    <div className=\"text-xl\">\n                      <BsArrowRightCircleFill />\n                    </div>\n                    <div\n                      dangerouslySetInnerHTML={{\n                        __html: item.value,\n                      }}\n                    ></div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    // Essay\n    case questionTypeElementsType.Essay:\n      const userAnswerEssay: EssayQuestionAnswerInterface[] =\n        toEssay(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswerEssay.map((item, i) => (\n            <div\n              key={i + 1}\n              onClick={props.onClick}\n              className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n            >\n              <div className=\"text-xl\">\n                <BsArrowRightCircleFill />\n              </div>\n              <div\n                dangerouslySetInnerHTML={{\n                  __html: item.value,\n                }}\n              ></div>\n            </div>\n          ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers.map((item, i) => (\n                  <div\n                    key={i + 1}\n                    onClick={props.onClick}\n                    className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-blue-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                  >\n                    <div className=\"text-xl\">\n                      <BsArrowRightCircleFill />\n                    </div>\n                    <div\n                      dangerouslySetInnerHTML={{\n                        __html: item.value,\n                      }}\n                    ></div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    case questionTypeElementsType.Embedded:\n      return <div></div>;\n    case questionTypeElementsType.Hybrid:\n      return <div></div>;\n    default:\n      return <div className=\"text-blue-600 font-extrabold\">Answer added</div>;\n  }\n};\n\nconst FindAnswer = (props: FindAnswerProps) => {\n  const answer = props.answersList.find(\n    (item) => item.question_id === props.question.question_id\n  );\n  let UserAnswersSel = props.question.question.find(\n    (itm) => itm.language === props.selectedLanguage\n  );\n  if (UserAnswersSel === undefined && props.question.question.length > 0) {\n    UserAnswersSel =\n      props.question.question.find(\n        (itm) => itm.language === props.selectedLanguage\n      ) === undefined\n        ? props.question.question[0]\n        : props.question.question.find(\n            (itm) => itm.language === props.selectedLanguage\n          )!;\n  }\n  if (answer === undefined || UserAnswersSel === undefined) {\n    return (\n      <div className=\"text-yellow-600 font-extrabold text-2xl text-center\">\n        No answer found!\n      </div>\n    );\n  } else {\n    let SubQ = UserAnswersSel.sub_question.find(\n      (itm) => findQType(itm.typeShort) === props.subQuestionType\n    );\n    return (\n      <div>\n        {SubQ === undefined\n          ? resultDiv(\n              answer.answers[0].answer,\n              UserAnswersSel.answers[0].answer,\n              props\n            )\n          : answer.answers\n              .filter((itm) => SubQ && itm.reference === SubQ.reference)\n              .map((user_answer) => {\n                const testQ = UserAnswersSel!.answers.find(\n                  (itm) => itm.reference === user_answer.reference\n                );\n                if (testQ !== undefined) {\n                  return resultDiv(user_answer.answer, testQ.answer, props);\n                } else {\n                  return <div>Answered</div>;\n                }\n              })}\n      </div>\n    );\n  }\n};\n\nexport default FindAnswer;\n","import {\n  QuestionForEmbedded,\n  QuestionForHybrid,\n  questionShortElementsType,\n  questionTypeElementsType,\n} from \"@mastrecruit/common\";\nimport React from \"react\";\nimport { MdCheckCircle, MdClose } from \"react-icons/md\";\nimport { Auth } from \"../../../actions/auth\";\nimport {\n  candidateExamStoreInterface,\n  QuestionAnswersStore,\n} from \"../../../actions/candidate_exam\";\nimport { questionTypesStoreInterface } from \"../../../actions/questionTypes\";\nimport { System } from \"../../../actions/system\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { EmbeddedQuestion } from \"../../../components/QuestionPreview/QuestionPreview\";\nimport { course } from \"../../../interfaces/course\";\nimport {\n  QuestionAnswerInterface,\n  QuestionInterface,\n  QuestionLanguage,\n} from \"../../../interfaces/question\";\nimport {\n  ExamAnsweredQuestions,\n  ExamPendingQuestions,\n  findQuestionType,\n} from \"../utils/utils\";\nimport FindAnswer from \"./FindAnswer\";\n\ninterface QuestionsReviewProps {\n  auth: Auth;\n  candidateExam: candidateExamStoreInterface;\n  system: System;\n  setSelectedExamQuestion: (\n    exam_id: string,\n    question_id: string | null\n  ) => void;\n  submitQuestionAnswer: boolean;\n  questionTypes: questionTypesStoreInterface;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  submitExam: () => void;\n  selectedExam: course | null;\n  setSubmitModal: (status: boolean) => void;\n  selectedLanguage: QuestionLanguage;\n  wholeQuestion: QuestionInterface;\n  answersList: QuestionAnswersStore[];\n}\n\nexport const findQType = (\n  typeShort: questionShortElementsType | QuestionForEmbedded | QuestionForHybrid\n): questionTypeElementsType => {\n  let changed: questionTypeElementsType = questionTypeElementsType.Hybrid;\n  switch (typeShort) {\n    case QuestionForHybrid.Calculated:\n      changed = questionTypeElementsType.Calculated;\n      break;\n    case QuestionForHybrid.CalculatedMultipleChoice:\n      changed = questionTypeElementsType.CalculatedMultipleChoice;\n      break;\n    case QuestionForHybrid.Essay:\n      changed = questionTypeElementsType.Essay;\n      break;\n    case QuestionForHybrid.Matching:\n      changed = questionTypeElementsType.Matching;\n      break;\n    case QuestionForHybrid.MultipleChoice:\n      changed = questionTypeElementsType.MultipleChoice;\n      break;\n    case QuestionForHybrid.Numeric:\n      changed = questionTypeElementsType.Numeric;\n      break;\n    case QuestionForHybrid.ShortAnswer:\n      changed = questionTypeElementsType.ShortAnswer;\n      break;\n    case QuestionForHybrid.SimpleCalculate:\n      changed = questionTypeElementsType.SimpleCalculate;\n      break;\n    case QuestionForHybrid.SingleMultiple:\n      changed = questionTypeElementsType.SingleMultiple;\n      break;\n    case QuestionForHybrid.TrueFalse:\n      changed = questionTypeElementsType.TrueFalse;\n      break;\n  }\n  return changed;\n};\n\nconst FindAnswerHybrid = (props: QuestionsReviewProps) => {\n  let str = \"a\";\n  if (props.submitQuestionAnswer === true) {\n    return (\n      <div className=\"bg-white rounded mx-4 my-4\">\n        <div className=\"text-gray-600 mx-4\">Saving changes, Please wait...</div>\n        <Loading />\n      </div>\n    );\n  }\n  return (\n    <div className={`pt-4 border-t border-gray-300 bg-white`}>\n      <div className=\"px-4 pb-2\">\n        <div className=\"my-2\">\n          <div\n            className=\"flex flex-col gap-3 overflow-y-auto\"\n            style={{ maxHeight: \"100%\" }}\n          >\n            {console.log(\n              \"Whole: \",\n              props.wholeQuestion,\n              props.selectedLanguage\n            )}\n            <div>\n              {findQuestionType(\n                props.wholeQuestion.type,\n                props.questionTypes.questionTypes\n              ) === questionTypeElementsType.Hybrid &&\n                props.wholeQuestion.question.find(\n                  (test) => test.language === props.selectedLanguage\n                ) !== undefined &&\n                props.wholeQuestion.question\n                  .find((test) => test.language === props.selectedLanguage)!\n                  .sub_question.map((item, i) => {\n                    let stri = String.fromCharCode(\n                      str.charCodeAt(str.length - 1) + i\n                    );\n                    return (\n                      <div\n                        key={i + 1}\n                        className=\"bg-white hover:bg-white border border-white hover:border-blue-400 px-2 py-2 rounded  animate__animated animate__fadeIn animate__fast group\"\n                      >\n                        <div className=\"grid md:grid-cols-12 w-full\">\n                          <div className=\"col-span-12 flex flex-row items-center gap-3\">\n                            <div\n                              key={i + 1}\n                              className=\"w-6 h-6 p-2 rounded-full bg-blue-100 flex justify-center items-center font-bold text-lg text-blue-600 cursor-pointer\"\n                            >\n                              {stri}\n                            </div>\n                            <div className=\"text-sm w-full\">\n                              {props.wholeQuestion.question.find(\n                                (test) =>\n                                  test.language === props.selectedLanguage\n                              ) !== undefined ? (\n                                findQuestionType(\n                                  item.type,\n                                  props.questionTypes.questionTypes\n                                ) === questionTypeElementsType.Embedded ? (\n                                  EmbeddedQuestion(\n                                    props.wholeQuestion!,\n                                    props.questionTypes.questionTypes,\n                                    props.selectedLanguage,\n                                    props.candidateExam.question_answers,\n                                    (data: QuestionAnswerInterface) => {}\n                                  )\n                                ) : (\n                                  <div\n                                    className=\"font-bold text-gray-700 text-base\"\n                                    dangerouslySetInnerHTML={{\n                                      __html: item.description,\n                                    }}\n                                  ></div>\n                                )\n                              ) : (\n                                props.wholeQuestion.question.length > 0 && (\n                                  <div\n                                    className=\"font-bold text-gray-700 text-base max-h-20 truncate\"\n                                    dangerouslySetInnerHTML={{\n                                      __html: item.description,\n                                    }}\n                                  ></div>\n                                )\n                              )}\n                              <div className=\"text-blue-700 font-bold text-sm w-full\">\n                                Answer: &nbsp;\n                                {props.questionTypes.questionTypes !== null && (\n                                  <FindAnswer\n                                    selectedLanguage={props.selectedLanguage}\n                                    question={props.wholeQuestion}\n                                    answersList={props.answersList}\n                                    questionTypes={\n                                      props.questionTypes.questionTypes\n                                    }\n                                    onClick={() => {}}\n                                    showCorrectAnswer={false}\n                                    subQuestionType={findQType(item.typeShort)}\n                                    reference={item.reference}\n                                  />\n                                )}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    );\n                  })}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FindAnswerHybrid;\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { ApplicationSession } from \"../../../actions\";\nimport {\n  course,\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimExamResultsDetails,\n} from \"../../../interfaces\";\nimport { StoreState } from \"../../../reducers\";\nimport { search } from \"../../../utils/functions\";\nimport { isClaimAllowed } from \"./ClaimForm\";\n\nconst getFailedExam = (\n  allData: ClaimExamResultsDetails[],\n  allCourses: course[]\n): ClaimExamResultsDetails[] => {\n  let result: ClaimExamResultsDetails[] = [];\n  allData.forEach((element) => {\n    if (element.total_marks < 100) {\n      let data = element;\n      data.course_name = getCourseById(allCourses, element.course)\n        ? getCourseById(allCourses, element.course)!.course_name\n        : \"Unknown exam\";\n      result.push(data);\n    }\n  });\n\n  return result;\n};\n\nexport const getCourseById = (courses: course[], course_id: string) => {\n  return courses.find((item) => item.course_id === course_id);\n};\n\nexport const getCourseIdBySheetId = (\n  allData: ClaimExamResultsDetails[],\n  sheet_id: string\n) => {\n  return allData.find((item) => item.answer_sheet_id === sheet_id);\n};\n\nexport const searchApplication = (\n  objList: claimApplicationsInterface[],\n  text: any\n): claimApplicationsInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (prop === \"position\") {\n        flag =\n          product.position.position_title\n            .toString()\n            .toLowerCase()\n            .indexOf(text.toLowerCase()) > -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n  // return objList.filter((product) =>\n  //   product.position.position_title.includes(text)\n  // );\n};\n\ntype FormExamListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  claimFileId: string;\n  viewThisFile: string;\n  candidateAnswers: ClaimExamResultsDetails[];\n  myClaims: CandidateClaimInterface[];\n  activeSession: ApplicationSession;\n\n  // REDUX //////////////////////\n  courses: course[] | null;\n};\n\nconst FormExamList: React.FC<FormExamListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            !props.courses ||\n            getFailedExam(props.candidateAnswers, props.courses).filter(\n              (item) =>\n                isClaimAllowed(\n                  props.myClaims,\n                  props.activeSession.session_plan_id,\n                  item.answer_sheet_id\n                )\n            ).length > 0\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Close\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}{\" \"}\n      {/* searchData(props.candidateAnswers, searchInput) */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {props.courses &&\n        getFailedExam(props.candidateAnswers, props.courses).filter((item) =>\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            item.answer_sheet_id\n          )\n        ).length > 0 ? (\n          search(\n            getFailedExam(props.candidateAnswers, props.courses).filter(\n              (item) =>\n                isClaimAllowed(\n                  props.myClaims,\n                  props.activeSession.session_plan_id,\n                  item.answer_sheet_id\n                )\n            ),\n            searchInput\n          ).map((item: ClaimExamResultsDetails, index: number) => (\n            <div\n              className={`group flex items-center justify-between my-1 hover:bg-gray-100 ${\n                props.claimFileId === item.answer_sheet_id &&\n                \"bg-blue-50 border-l-4 border-blue-500\"\n              }`}\n              key={index + item.answer_sheet_id}\n            >\n              <div\n                className=\"p-1 w-full mr-2 cursor-pointer\"\n                onClick={() => {\n                  props.setChooseClaimFile(false);\n                  props.setClaimFileId(item.answer_sheet_id);\n                }}\n              >\n                <p className=\"text-base font-medium text-black\">\n                  {item.course_name}\n                </p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                onClick={() => {\n                  props.setViewThisFile(item.answer_sheet_id);\n                }}\n              >\n                View\n              </button>\n            </div>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No failed exam available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  course,\n}: StoreState): {\n  courses: course[] | null;\n} => {\n  return {\n    courses: course.courses,\n  };\n};\nexport default React.memo(connect(mapStateToProps, {})(FormExamList));\n","import React, { Component, Fragment, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { BiArrowBack } from \"react-icons/bi\";\nimport { BsFillFileEarmarkTextFill } from \"react-icons/bs\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment-timezone\";\nimport { TimeZone } from \"../../utils/app.config\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  Auth,\n  CandidateApplicationsStoreInterface,\n  candidateExamStoreInterface,\n  FC_Access,\n  FC_GetProfileDetails,\n  LoadCandidateApplications,\n  setSelectedCandidateExam,\n  setSelectedCourse,\n  setSelectedPosition,\n  InitializeExamDetails,\n  loadExamsDone,\n  AddUserApplication,\n  loadApplicationPeriods,\n  applicationPeriodsStoreInterface,\n  InitialExamDetails,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { UserExamStatus, UserExamsListInterface } from \"../../interfaces/exam\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { DATE, getMinutesFromTwoDates } from \"../../utils/functions\";\nimport { CountDown } from \"../../components/CountDown/CountDown\";\nimport { ExamTimeStatus, validateExamDate } from \"../../utils/question_bank\";\nimport { course, PositionAPI, PositionAPICourse } from \"../../interfaces\";\nimport {\n  ApplicationPeriodGet,\n  ApplicationStates,\n  GetApplicationsAPI,\n} from \"../../interfaces/application\";\nimport { UserAccessList } from \"../../utils/auth_access\";\nimport { MdClose } from \"react-icons/md\";\nimport ChooseExamCenter, {\n  LocationTableInterface,\n} from \"../Application/ExamCenter/ChooseExamCenter\";\nimport { sentExamInterface } from \"../Application/ExamCenter/ExamCenter\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport CandidateAnswersDetails from \"../../components/AnswersDetails/CandidateAnswersDetails\";\n\nexport const compareWithToday = (tooday: moment.Moment, date: string) => {\n  const myDate = DATE(date, \"MM/DD/YYYY\");\n  let todayConverted =\n    (tooday.get(\"month\") < 9 ? \"0\" : \"\") +\n    (tooday.get(\"month\") + 1).toString() +\n    \"/\" +\n    tooday.get(\"date\") +\n    \"/\" +\n    tooday.get(\"year\");\n  if (new Date(myDate).getTime() < new Date(todayConverted).getTime()) {\n    return true;\n  }\n  return false;\n};\n\nexport interface ExamDoneDetailsAnswers {\n  exam_id: string;\n  course: string;\n  course_name: string;\n  discription: string;\n  termes: string;\n  rules: {\n    right_click_enabled: boolean;\n    copy_enabled: boolean;\n    paste_enabled: boolean;\n    stop_candidate_when_comeback: boolean;\n    allow_to_leave_browser: boolean;\n  };\n  period: string;\n  exam_date: string;\n}\n\ninterface NotPreparedExam {\n  course: string;\n  course_name: string;\n  course_code: string;\n  position: string;\n}\ninterface changeLocProps {\n  changeLocation: () => void;\n}\ninterface CandidateExamsProps {\n  FC_GetProfileDetails: Function;\n  auth: Auth;\n  candidateExam: candidateExamStoreInterface;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  LoadCandidateApplications: (\n    user_id: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  setSelectedCandidateExam: (selected_exam: InitialExamDetails | null) => void; // Not used\n  setSelectedCourse: (course: course | null) => void;\n  setSelectedPosition: (position: PositionAPI) => void;\n  InitializeExamDetails: (\n    periodId: string,\n    courseId: string,\n    district_id: string,\n    center_id: string,\n    room_id: string,\n    position: PositionAPI,\n    start_exam: boolean,\n    callback: (loading: boolean) => void\n  ) => void;\n  loadExamsDone: (\n    periodId: string,\n    userId: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  AddUserApplication: (application: GetApplicationsAPI) => void;\n  periods: applicationPeriodsStoreInterface;\n  loadApplicationPeriods: (callback: (loading: boolean) => void) => void;\n}\n\nconst ChangeLocationComponent = (props: changeLocProps): JSX.Element => {\n  const [display, setDisplay] = useState<boolean>(true);\n  if (display === false) {\n    return <div></div>;\n  }\n  return (\n    <div className=\"absolute right-2 left-2 md:right-1/4 md:left-1/4 lg:left-1/2 lg:right-auto bg-yellow-50 shadow-xl rounded py-1 px-1 flex flex-row justify-between items-center gap-2 text-yellow-800 -mt-5 lg:-mt-8\">\n      <div className=\"flex flex-row gap-2 items-center justify-between w-full pl-1\">\n        <span className=\"font-bold\">You are advised to change location</span>\n        <div\n          onClick={props.changeLocation}\n          className=\"px-2 py-1 rounded bg-blue-100 text-blue-600 w-max cursor-pointer\"\n        >\n          Change\n        </div>\n      </div>\n      <div\n        onClick={() => setDisplay(false)}\n        className=\"bg-yellow-100 text-yellow-600 rounded-full flex items-center justify-center p-1 h-8 w-8 cursor-pointer\"\n      >\n        <MdClose className=\"text-4xl\" />\n      </div>\n    </div>\n  );\n};\n\ninterface candidatePendingExamsList {\n  preparedExam: UserExamsListInterface[];\n  notPreparedExam: NotPreparedExam[];\n}\ninterface CandidateExamsState {\n  loading: boolean;\n  loadingExamsDone: boolean;\n  candidateExams: candidatePendingExamsList | null;\n  activeExams: string[];\n  candidateApplications: GetApplicationsAPI[] | null;\n  selectedCourse: course | null;\n  centersModal: boolean;\n  maxExamModal: boolean;\n  selectedPosition: string;\n  successMessage: string;\n  selectedExam: ExamDoneDetailsAnswers | null;\n  doing_exam: boolean;\n}\n\nexport class _CandidateExams extends Component<\n  CandidateExamsProps,\n  CandidateExamsState\n> {\n  constructor(props: CandidateExamsProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      loadingExamsDone: false,\n      candidateExams: null,\n      activeExams: [],\n      candidateApplications: null,\n      selectedCourse: null,\n      centersModal: false,\n      maxExamModal: false,\n      selectedPosition: \"\",\n      successMessage: \"\",\n      selectedExam: null,\n      doing_exam: false,\n    };\n  }\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  };\n  setloadingExamsDone = (status: boolean) => {\n    this.setState({ loadingExamsDone: status });\n  };\n  loadCandidateExams = async (user: string, period: string) => {\n    this.setLoading(true);\n    setAxiosToken();\n    try {\n      const res = await axios.get<candidatePendingExamsList>(\n        `${API.QBank}/exam/user/${user}/${period}`\n      );\n      this.setState({ candidateExams: res.data });\n      // console.log(\"My exams list: \", res.data);\n    } catch (error: any) {\n      console.log(\"My exams error: \", { ...error });\n      alert(errorToText(error));\n    }\n    this.setLoading(false);\n  };\n  loadUserProfileDetails = () => {\n    this.setLoading(true);\n    this.props.FC_GetProfileDetails(\n      this.props.auth.user.user_id,\n      (status: boolean, msg: string) => {\n        if (status === true) {\n          this.setLoading(false);\n        } else {\n          this.setLoading(true);\n        }\n      }\n    );\n  };\n\n  InitializationFn = (\n    application: GetApplicationsAPI,\n    item: UserExamsListInterface\n  ) => {\n    for (let course of application.position.courses) {\n      let testDone = this.props.candidateExam.user_exams_temp.find(\n        (itm) => itm.course === course.course_id\n      );\n      if (testDone === undefined) {\n        let center_id = application.exams.find(\n          (itm) => itm.course_id === course.course_id\n        );\n        if (center_id !== undefined) {\n          if (\n            application.application_status === ApplicationStates.Shortlisted\n          ) {\n            // Select exam\n            this.props.setSelectedPosition(application.position);\n            this.props.setSelectedCourse(\n              application.position.courses.find(\n                (itm) => itm.course_id === item.course\n              )!\n            );\n            this.setState({ doing_exam: true });\n            return (\n              this.props.periods.selected_period &&\n              this.props.InitializeExamDetails(\n                application.application_session.session_plan_id,\n                course.course_id,\n                center_id.district_id,\n                center_id.center_id,\n                center_id.room_id,\n                application.position,\n                true,\n                this.setLoading\n              )\n            );\n          } else {\n            alert(\"Corresponding application is not shortlisted!\");\n          }\n        }\n      }\n    }\n  };\n  loadUserApplications = async () => {\n    this.props.LoadCandidateApplications(\n      this.props.auth.user.user_id,\n      this.setLoading\n    );\n  };\n  findLocation = (position_id: string, course_id: string) => {\n    if (this.props.candidateApplications.candidate_applications !== null) {\n      const test = this.props.candidateApplications.candidate_applications.find(\n        (item) =>\n          item.position.position_id === position_id &&\n          item.exams.filter((itm) => itm.course_id === course_id)\n      );\n      if (test !== undefined) {\n        let course = test.exams.find((itm) => itm.course_id === course_id);\n        if (course !== undefined) {\n          return course;\n        }\n      }\n    }\n    return null;\n  };\n  updateLocation = async (\n    application_id: string,\n    exams: sentExamInterface[]\n  ) => {\n    this.setState({ loading: true });\n    for (let i in exams) {\n      try {\n        const res = await axios.post(\n          `${API.APPLICATION}/application/updatemissed`,\n          {\n            application_id: application_id,\n            exams: exams[i],\n          }\n        );\n        if (res.status === 200) {\n          this.setState({\n            selectedCourse: null,\n            centersModal: false,\n            maxExamModal: false,\n            selectedPosition: \"\",\n            successMessage: \"Location updated successfully!\",\n          });\n          this.loadUserApplications();\n        }\n      } catch (error: any) {\n        console.log(\"Update loc err: \", { ...error });\n      }\n    }\n  };\n  updateLocationFunction = (exams: sentExamInterface[]) => {\n    if (this.props.candidateApplications.candidate_applications !== null) {\n      let application =\n        this.props.candidateApplications.candidate_applications.find(\n          (item) => item.position.position_id === this.state.selectedPosition\n        );\n      if (application !== undefined) {\n        this.updateLocation(application.application_id, exams);\n      } else {\n        alert(\"Invalid application\");\n      }\n    } else {\n      alert(\"Missing application\");\n    }\n  };\n  addLocation = (\n    course_id: string,\n    course_name: string,\n    course_code: string,\n    location: LocationTableInterface,\n    exam_id: string\n  ) => {\n    return this.updateLocationFunction([\n      {\n        course_id: course_id,\n        proctoring_type: \"Center\",\n        center_id: location.center_id,\n        district_id: location.district_id,\n      },\n    ]);\n  };\n  componentDidMount = () => {\n    const selPeriod =\n      this.props.periods.selected_period === null\n        ? this.props.auth.application_session?.session_plan_id\n        : this.props.periods.selected_period.session_plan_id;\n\n    if (selPeriod !== undefined && this.state.candidateExams === null) {\n      this.loadCandidateExams(this.props.auth.user.user_id, selPeriod);\n    }\n    if (\n      this.props.auth.user.sex === \"\" ||\n      this.props.auth.user.sex.length === 0\n    ) {\n      this.loadUserProfileDetails();\n    }\n    if (this.props.periods.applicationPeriods === null) {\n      this.props.loadApplicationPeriods(this.setLoading);\n    }\n    if (this.props.candidateApplications.candidate_applications === null) {\n      this.loadUserApplications();\n    }\n  };\n\n  removeDuplicatesExams = (\n    exams: UserExamsListInterface[]\n  ): UserExamsListInterface[] => {\n    let temp: UserExamsListInterface[] = [];\n    if (this.props.candidateApplications.candidate_applications !== null) {\n      for (let item of exams) {\n        if (\n          this.props.candidateApplications.candidate_applications.find(\n            (test) => test.position.position_id === item.position\n          ) !== undefined\n        ) {\n          if (temp.find((itm) => itm._id === item._id) === undefined) {\n            temp = [...temp, item];\n          }\n        }\n      }\n    }\n    return temp;\n  };\n\n  removeDuplicatesNotPreparedExams = (\n    exams: NotPreparedExam[]\n  ): NotPreparedExam[] => {\n    let temp: NotPreparedExam[] = [];\n    if (this.props.candidateApplications.candidate_applications !== null) {\n      for (let item of exams) {\n        if (\n          this.props.candidateApplications.candidate_applications.find(\n            (test) => test.position.position_id === item.position\n          ) !== undefined\n        ) {\n          if (temp.find((itm) => itm.course === item.course) === undefined) {\n            temp = [...temp, item];\n          }\n        }\n      }\n    }\n    return temp;\n  };\n  setTimeOut = (exam_id: string) => {\n    let temps: string[] = this.state.activeExams;\n    this.setState({\n      activeExams: [...temps, exam_id],\n    });\n  };\n  selectApplication = (\n    applications: GetApplicationsAPI[] | null,\n    position_id: string,\n    course_id: string,\n    selected_period: ApplicationPeriodGet | null\n  ): GetApplicationsAPI | null => {\n    if (applications !== null && selected_period !== null) {\n      let temp = applications.find(\n        (item) =>\n          item.position.position_id === position_id &&\n          item.application_session.session_plan_id ===\n            selected_period.session_plan_id\n      );\n      if (temp !== undefined) {\n        if (\n          temp.position.courses.find((itm) => itm.course_id === course_id) !==\n          undefined\n        ) {\n          return temp;\n        }\n      }\n    }\n    return null;\n  };\n  setMaxExamModal = (status: boolean) => {\n    this.setState({ maxExamModal: status });\n  };\n\n  changeLocation = (item: PositionAPICourse) => {\n    this.setState({ selectedCourse: item, centersModal: true });\n    this.setMaxExamModal(true);\n  };\n\n  closeModal = () => {\n    this.setState({ centersModal: false });\n    this.setMaxExamModal(false);\n  };\n\n  render() {\n    const today = moment().tz(TimeZone);\n    // console.log(\"TODAY: \", today.get(\"days\"));\n    const selPeriod =\n      this.props.periods.selected_period === null\n        ? this.props.auth.application_session\n        : this.props.periods.selected_period;\n    if (!FC_Access(this.props.auth, UserAccessList.MY_APPLICATION).view) {\n      return <Redirect to=\"/\" />;\n    }\n    if (\n      this.props.candidateExam.selected_exam_id !== null &&\n      this.props.candidateExam.selected_exam_details !== null &&\n      (this.props.candidateExam.doing_exam === true ||\n        this.state.doing_exam === true)\n    ) {\n      return <Redirect to=\"/do-exam\" />;\n    }\n    return (\n      <Fragment>\n        {this.state.selectedCourse === null ? (\n          <div className=\"mt-2 -ml-2 mr-3 pb-5\">\n            <div className=\"rounded mt-2\">\n              <div className=\"flex flex-row items-center gap-3\">\n                <Link\n                  to=\"/apps-page\"\n                  title=\"Back to menus\"\n                  className=\"bg-white group hover:bg-blue-50 h-10 w-10 flex items-center justify-center rounded-full cursor-pointer\"\n                >\n                  <BiArrowBack className=\"text-3xl text-blue-600 group-hover:text-blue-800\" />\n                </Link>\n                <div className=\"flex flex-col\">\n                  <span className=\"font-extrabold text-3xl\">My exams</span>\n                  <span className=\"text-gray-600 text-sm\">\n                    List of exams that are assigned to you\n                  </span>\n                </div>\n              </div>\n            </div>\n            {this.state.successMessage !== \"\" && (\n              <div\n                title=\"Click to close the message\"\n                onClick={() => this.setState({ successMessage: \"\" })}\n                className=\"animate__animated animate__zoomIn px-3 py-2 bg-green-500 text-white my-2 rounded cursor-pointer\"\n              >\n                {this.state.successMessage}\n              </div>\n            )}\n            {console.log(\"Not found: \", this.state.candidateExams)}\n            {this.state.loading === true ||\n            this.state.loadingExamsDone === true ||\n            this.state.candidateExams === null ||\n            this.props.candidateApplications.candidate_applications == null ? (\n              <div className=\"px-4 pt-5 pb-1 bg-white mt-2 rounded\">\n                <Loading />\n              </div>\n            ) : this.removeDuplicatesExams(\n                this.state.candidateExams.preparedExam\n              ).length === 0 ? (\n              <div className=\"bg-gray-50 rounded px-4 py-5 text-center font-bold mt-2 text-2xl text-gray-400\">\n                No exams found\n              </div>\n            ) : (\n              this.removeDuplicatesExams(\n                this.state.candidateExams.preparedExam\n              ).map((item, i) => (\n                <div key={i + 1} className=\"my-2 rounded bg-white p-2 group\">\n                  <div className=\"flex flex-col md:flex-row items-center justify-between\">\n                    <div className=\"flex flex-col md:flex-row items-center gap-2 w-full\">\n                      <div>\n                        <BsFillFileEarmarkTextFill className=\"hidden md:block text-4xl text-gray-300 group-hover:text-blue-600\" />\n                      </div>\n                      <div className=\"flex flex-col w-full\">\n                        <span className=\"text-base text-gray-800 font-extrabold group-hover:text-blue-600\">\n                          {item.course_name}\n                        </span>\n                        <div className=\"flex flex-row items-center justify-start w-full gap-3 -mt-1\">\n                          <div className=\"text-sm text-gray-500 group-hover:text-blue-600\">\n                            Date: {DATE(item.exam_date, \"DD/MM/YYYY\")}\n                          </div>\n                          <div className=\"hidden md:block text-sm bg-gray-100 underline text-gray-500  font-bold rounded-full px-2\">\n                            Start time: {item.start_time}\n                          </div>\n                          <div className=\"hidden md:block text-sm bg-blue-100 text-blue-900  font-bold rounded-full px-2\">\n                            Status: {item.user_status}\n                          </div>\n                        </div>\n                        {this.findLocation(item.position, item.course) !==\n                          null && (\n                          <div className=\"flex flex-row items-center gap-2 mt-2\">\n                            <div>\n                              Exam center:{\" \"}\n                              <span className=\"text-sm bg-gray-100 text-blue-900 group-hover:text-blue-600 font-bold rounded-full px-2 w-max\">\n                                {\n                                  this.findLocation(item.position, item.course)\n                                    ?.center_name\n                                }\n                              </span>\n                            </div>\n                            <div className=\"w-max flex flex-col md:flex-row\">\n                              Room number:{\" \"}\n                              {this.findLocation(item.position, item.course)\n                                ?.room_number === 0 ? (\n                                <span className=\"text-sm bg-yellow-100 text-yellow-900 group-hover:text-yellow-800 font-bold rounded-full px-2 w-max flex items-center justify-center\">\n                                  Waiting room\n                                </span>\n                              ) : (\n                                <span className=\"text-sm bg-gray-100 text-blue-900 group-hover:text-blue-600 font-bold rounded-full px-2 w-max\">\n                                  {\n                                    this.findLocation(\n                                      item.position,\n                                      item.course\n                                    )?.room_number\n                                  }\n                                </span>\n                              )}\n                              {/* Change loc */}\n                              {this.findLocation(item.position, item.course)\n                                ?.room_number === 0 &&\n                                validateExamDate(\n                                  item.exam_date,\n                                  item.start_time,\n                                  item.end_time\n                                ) !== ExamTimeStatus.Expired && (\n                                  <ChangeLocationComponent\n                                    changeLocation={() => {\n                                      this.setState({\n                                        selectedCourse: {\n                                          course_name: item.course_name,\n                                          course_code: item.course_code,\n                                          description: item.course_name,\n                                          school_levels: [],\n                                          course_id: item.course,\n                                        },\n                                        selectedPosition: item.position,\n                                        centersModal: true,\n                                      });\n                                      this.setMaxExamModal(true);\n                                    }}\n                                  />\n                                )}\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                    <div className=\"lg:w-full flex flex-row items-center justify-end\">\n                      {this.state.activeExams.find(\n                        (itm) => itm === item._id\n                      ) !== undefined ||\n                      item.user_status === UserExamStatus.Editing ||\n                      item.user_status === UserExamStatus.Paused ? (\n                        validateExamDate(\n                          item.exam_date,\n                          item.start_time,\n                          item.end_time\n                        ) !== ExamTimeStatus.Expired ? (\n                          this.selectApplication(\n                            this.props.candidateApplications\n                              .candidate_applications,\n                            item.position,\n                            item.course,\n                            selPeriod\n                          )?.application_status !==\n                          ApplicationStates.Shortlisted ? (\n                            <div className=\"text-yellow-800 font-extrabold text-base bg-yellow-100 rounded px-3 py-1 cursor-not-allowed\">\n                              Not shortlisted\n                            </div>\n                          ) : (\n                            <div\n                              onClick={() => {\n                                let application = this.selectApplication(\n                                  this.props.candidateApplications\n                                    .candidate_applications,\n                                  item.position,\n                                  item.course,\n                                  selPeriod\n                                );\n                                if (application !== null) {\n                                  this.InitializationFn(application, item);\n                                } else {\n                                  alert(\"Invalid exam!\");\n                                }\n                              }}\n                              className={`${\n                                item.user_status === UserExamStatus.Editing ||\n                                item.user_status === UserExamStatus.Paused\n                                  ? \"bg-green-600 group-hover:bg-green-800\"\n                                  : \"bg-blue-600 group-hover:bg-blue-800\"\n                              } btn  text-white cursor-pointer w-max`}\n                            >\n                              {item.user_status === UserExamStatus.Editing\n                                ? \"Back to Exam\"\n                                : item.user_status === UserExamStatus.Paused\n                                ? \"Paused, back to exam\"\n                                : \"Start Exam\"}\n                            </div>\n                          )\n                        ) : item.user_status === UserExamStatus.Editing ||\n                          item.user_status === UserExamStatus.Done ||\n                          item.user_status === UserExamStatus.Paused ||\n                          item.user_status === UserExamStatus.Removed ? (\n                          <div className=\"text-blue-700 flex flex-col items-end justify-center w-max\">\n                            <span>Marks</span>\n                            <span className=\"text-2xl font-extrabold -mt-2\">\n                              {item.user_marks.toFixed(\n                                item.user_marks === 100 || item.user_marks === 0\n                                  ? 0\n                                  : 2\n                              )}\n                              %\n                            </span>\n                            <div\n                              onClick={() =>\n                                this.setState({\n                                  selectedExam: {\n                                    course: item.course,\n                                    course_name: item.course_name,\n                                    discription: item.discription,\n                                    termes: item.termes,\n                                    rules: item.rules,\n                                    period: item.period,\n                                    exam_date: item.exam_date,\n                                    exam_id: item._id,\n                                  },\n                                })\n                              }\n                              className=\"btn bg-blue-100 text-blue-700 cursor-pointer\"\n                            >\n                              Check details\n                            </div>\n                          </div>\n                        ) : (\n                          <div className=\"bg-yellow-100 text-yellow-700 font-extrabold text-base px-3 py-1 rounded-md w-max\">\n                            Expired\n                          </div>\n                        )\n                      ) : item.found === false ? (\n                        <div\n                          title=\"Please wait for the exam time\"\n                          className=\"text-lg lg:text-xl font-extrabold bg-green-100 text-green-700 px-3 py-1 rounded cursor-not-allowed w-max\"\n                        >\n                          <CountDown\n                            start_time={new Date(today.toString()).toString()}\n                            duration_min={getMinutesFromTwoDates(\n                              new Date(today.toString()),\n                              new Date(\n                                DATE(item.exam_date, \"MM/DD/YYYY\") +\n                                  \" \" +\n                                  item.start_time\n                              )\n                            )}\n                            timeout={() => this.setTimeOut(item._id)}\n                            returnString={true}\n                            labels={true}\n                            days\n                          />\n                        </div>\n                      ) : (\n                        <div className=\"text-blue-700 flex flex-col items-end justify-center w-max\">\n                          <span>Marks</span>\n                          <span className=\"text-2xl font-extrabold -mt-2\">\n                            {item.user_marks.toFixed(\n                              item.user_marks === 100 || item.user_marks === 0\n                                ? 0\n                                : 2\n                            )}\n                            %\n                          </span>\n                          <div\n                            onClick={() =>\n                              this.setState({\n                                selectedExam: {\n                                  course: item.course,\n                                  course_name: item.course_name,\n                                  discription: item.discription,\n                                  termes: item.termes,\n                                  rules: item.rules,\n                                  period: item.period,\n                                  exam_date: item.exam_date,\n                                  exam_id: item._id,\n                                },\n                              })\n                            }\n                            className=\"btn bg-blue-100 text-blue-700 cursor-pointer\"\n                          >\n                            Check details\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              ))\n            )}\n            {/* Not prepared exams */}\n            {this.state.candidateExams !== null &&\n              this.state.loading !== true &&\n              this.removeDuplicatesNotPreparedExams(\n                this.state.candidateExams.notPreparedExam\n              ).length > 0 &&\n              this.removeDuplicatesNotPreparedExams(\n                this.state.candidateExams.notPreparedExam\n              ).map((item, i) => (\n                <div\n                  key={i + 1}\n                  className=\"my-2 rounded bg-white p-2 py-3 group\"\n                >\n                  <div className=\"flex flex-col md:flex-row items-center justify-between\">\n                    <div className=\"flex flex-col md:flex-row items-center gap-2 w-full\">\n                      <div className=\"\">\n                        <BsFillFileEarmarkTextFill className=\"hidden md:block text-4xl text-gray-300 group-hover:text-blue-600\" />\n                      </div>\n                      <div className=\"flex flex-col\">\n                        <span className=\"text-base text-gray-600 font-bold group-hover:text-blue-600\">\n                          {item.course_name}\n                        </span>\n                        <div className=\"flex flex-row items-center gap-3 -mt-1\">\n                          {this.findLocation(item.position, item.course) !==\n                            null && (\n                            <div className=\"flex flex-row items-center gap-2 mt-2\">\n                              <div className=\"flex flex-col md:flex-row md:items-center\">\n                                Exam center:{\" \"}\n                                <span className=\"text-sm bg-gray-100 text-blue-900 group-hover:text-blue-600 font-bold rounded-full px-2 w-max\">\n                                  {\n                                    this.findLocation(\n                                      item.position,\n                                      item.course\n                                    )?.center_name\n                                  }\n                                </span>\n                              </div>\n                              <div className=\"w-max flex flex-col md:flex-row md:items-center\">\n                                Room number:{\" \"}\n                                {this.findLocation(item.position, item.course)\n                                  ?.room_number === 0 ? (\n                                  <span className=\"text-sm bg-yellow-100 text-yellow-900 group-hover:text-yellow-800 font-bold rounded-full px-2 w-max flex items-center justify-center\">\n                                    Waiting room\n                                  </span>\n                                ) : (\n                                  <span className=\"text-sm bg-gray-100 text-blue-900 group-hover:text-blue-600 font-bold rounded-full px-2 w-max\">\n                                    {\n                                      this.findLocation(\n                                        item.position,\n                                        item.course\n                                      )?.room_number\n                                    }\n                                  </span>\n                                )}\n                                {/* Change loc */}\n                                {this.findLocation(item.position, item.course)\n                                  ?.room_number === 0 && (\n                                  <ChangeLocationComponent\n                                    changeLocation={() => {\n                                      this.setState({\n                                        selectedCourse: {\n                                          course_name: item.course_name,\n                                          course_code: item.course_code,\n                                          description: item.course_name,\n                                          school_levels: [],\n                                          course_id: item.course,\n                                        },\n                                        selectedPosition: item.position,\n                                        centersModal: true,\n                                      });\n                                      this.setMaxExamModal(true);\n                                    }}\n                                  />\n                                )}\n                              </div>\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"bg-gray-100 text-gray-600 font-extrabold text-base px-3 py-1 rounded-md\">\n                      Not prepared\n                    </div>\n                  </div>\n                </div>\n              ))}\n          </div>\n        ) : this.state.loading === true ? (\n          <div className=\"px-4 pt-5 pb-1 bg-white mt-2 rounded\">\n            <Loading />\n          </div>\n        ) : (\n          <div className=\"animate__animated animate__fadeInUp animate__faster mt-2 mr-1 -ml-3 rounded-t-md bg-white shadow-md pb-5\">\n            <div className=\"flex flex-row gap-4 items-center justify-between bg-blue-100 py-2 px-2 mb-2\">\n              <div className=\"flex flex-col w-full\">\n                <div className=\"flex flex-row gap-2 items-center justify-between w-full pl-2\">\n                  <span className=\"font-bold text-xl text-gray-800\">\n                    Change exam location\n                  </span>\n                  <div className=\"bg-white hover:text-yellow-700 hover:bg-white rounded-full p-1 h-10 w-10 border-2 border-white hover:border-yellow-600 flex items-center justify-center\">\n                    <MdClose\n                      className=\"cursor-pointer font-extrabold text-3xl\"\n                      onClick={() => {\n                        this.setState({\n                          centersModal: false,\n                          selectedCourse: null,\n                        });\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <ChooseExamCenter\n              positionCourses={this.state.selectedCourse}\n              addLocation={this.addLocation}\n              closeModal={this.closeModal}\n            />\n          </div>\n        )}\n        {this.state.selectedExam !== null && (\n          <Modal\n            title={\n              <div className=\"text-2xl font-extrabold text-blue-600 px-2\">\n                Exam result details\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() => this.setState({ selectedExam: null })}\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{ title: true }}\n          >\n            <CandidateAnswersDetails\n              exam_id={this.state.selectedExam}\n              showAnswers={false}\n            />\n          </Modal>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  candidateExam,\n  candidateApplications,\n  periods,\n}: StoreState): {\n  auth: Auth;\n  candidateExam: candidateExamStoreInterface;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n} => {\n  return {\n    auth: auth,\n    candidateExam: candidateExam,\n    candidateApplications: candidateApplications,\n    periods: periods,\n  };\n};\n\nexport const CandidateExams = connect(mapStateToProps, {\n  FC_GetProfileDetails,\n  LoadCandidateApplications,\n  setSelectedCandidateExam,\n  setSelectedCourse,\n  setSelectedPosition,\n  InitializeExamDetails,\n  loadExamsDone,\n  AddUserApplication,\n  loadApplicationPeriods,\n})(_CandidateExams);\n","import React, { FC } from \"react\";\nimport { IconType } from \"react-icons\";\nimport { FaUsers } from \"react-icons/fa\";\nimport { toAnyDigit } from \"../../shared/dataTest\";\n\nexport type DashboardLabelItemInterface = {\n  // TITLE: Application or Exam or Shortlisted ....\n  title: string;\n  // ICON: FaExpand ....\n  icon: IconType;\n  // ICON COLOR: blue, indigo, gray ....\n  iconColor: string;\n  // COUNT: 0,1,2,3,5,23,563 ....\n  count: number;\n  // COUNT: 0,1,2,3,5,23,563 ....\n  countOver?: number;\n};\n\nconst DashboardLabelItem: FC<DashboardLabelItemInterface> = (\n  props = {\n    title: \"\",\n    icon: FaUsers,\n    iconColor: \"indigo\",\n    count: 0,\n    countOver: undefined,\n  }\n) => {\n  const IconDefined = props.icon;\n  return (\n    <div className=\"flex items-center px-6 py-4 bg-white w-full rounded-md space-x-2 mb-2 lg:mb-0 shadow-md\">\n      <div\n        className={`p-3 rounded-full bg-${props.iconColor}-200 bg-opacity-75`}\n      >\n        <IconDefined className={`h-8 w-8 text-${props.iconColor}-600`} />\n      </div>\n      <div>\n        <h1 className=\"text-3xl font-semibold text-gray-700\">\n          {toAnyDigit(props.count)}{\" \"}\n          {props.countOver && \"/ \" + toAnyDigit(props.countOver)}\n        </h1>\n        <span className=\"text-gray-500 text-lg\">{props.title}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(DashboardLabelItem);\n","import React from \"react\";\nimport DashboardLabelItem, {\n  DashboardLabelItemInterface,\n} from \"../DashboardLabelItem\";\n\ntype DashboardLabelProps = {\n  dataLabels: DashboardLabelItemInterface[];\n  labelsOnRow?: number;\n  childrenPosition?: \"START\" | \"END\";\n  children?: JSX.Element;\n};\n\nconst ExamDashboardLabels: React.FC<DashboardLabelProps> = (props) => {\n  const numCols: number = props.labelsOnRow\n    ? props.labelsOnRow > 4\n      ? props.labelsOnRow\n      : 4\n    : 4;\n  return (\n    <div\n      className={`grid 2xl:grid-cols-${numCols} xl:grid-cols-${\n        numCols - 1\n      } lg:grid-cols-${numCols - 2} md:grid-cols-${\n        numCols - 3\n      } sm:grid-cols-2 grid-cols-1 gap-4 items-center mx-auto`}\n    >\n      {props.children &&\n        ((props.childrenPosition && props.childrenPosition === \"START\") ||\n          !props.childrenPosition) &&\n        props.children}\n      {props.dataLabels.map((item, index) => (\n        <section key={index + item.title}>\n          <DashboardLabelItem\n            title={item.title}\n            icon={item.icon}\n            iconColor={item.iconColor}\n            count={item.count}\n          />\n        </section>\n      ))}\n      {props.children &&\n        props.childrenPosition &&\n        props.childrenPosition === \"END\" &&\n        props.children}\n    </div>\n  );\n};\n\nexport default React.memo(ExamDashboardLabels);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport {\n  getAllClaims,\n  GetClaimingTypes,\n  setSelectedClaimType,\n} from \"../../../actions/claiming\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport { MainItem } from \"../../../components/Navigation/SideNavigation\";\nimport {\n  CandidateClaimInterface,\n  ClaimStatus,\n  PlansTypeKeys,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\n\nexport const filterClaimsByClaimType = (\n  claimList: CandidateClaimInterface[],\n  claimType: PlansTypeKeys | \"all\"\n): CandidateClaimInterface[] => {\n  if (claimType === \"all\") {\n    return claimList;\n  }\n\n  return claimList.filter((item) => item.type_key === claimType);\n};\n\ntype AdminFilterByTypeProps = {\n  loadingClaims: boolean;\n  FC_CountByType?: Function;\n\n  // REDUX PROPS =======================================\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  GetClaimingTypes: Function;\n  setSelectedClaimType: Function;\n  getAllClaims: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\nconst AdminFilterByType: React.FC<AdminFilterByTypeProps> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingClaimTypes, setLoadingClaimTypes] = useState<boolean>(true);\n\n  useEffect(() => {\n    if (props.claiming.claimTypes === null) {\n      props.GetClaimingTypes((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          setLoadingClaimTypes(false);\n          setLoading(false);\n        }\n      });\n    } else if (loadingClaimTypes) {\n      setLoadingClaimTypes(false);\n      setLoading(false);\n    }\n  }, [loadingClaimTypes, props]);\n\n  const countClaims = (\n    claiming: ClaimingReducerType,\n    thisType: PlansTypeKeys | \"all\"\n  ): number => {\n    let result: number = 0;\n\n    if (claiming.allClaims && thisType === \"all\") {\n      result = claiming.allClaims.filter(\n        (item) => item.last_claim_status === ClaimStatus.PENDING\n      ).length;\n    }\n    if (claiming.allClaims && thisType !== \"all\") {\n      result = claiming.allClaims.filter(\n        (item) =>\n          item.type_key === thisType &&\n          item.last_claim_status === ClaimStatus.PENDING\n      ).length;\n    }\n\n    return result;\n  };\n\n  return (\n    <React.Fragment>\n      <span className=\"mt-2 text-sm\">Filter by claim type</span>\n      {/* WHILE LOADING DATA ================================== */}\n      {(loading || props.loadingClaims) && (\n        <section className=\"space-y-2\">\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </section>\n      )}\n      {/* END WHILE LOADING DATA ================================== */}\n\n      {/* AFTER LOADING DATA ================================== */}\n      {!loading && !props.loadingClaims && props.claiming.claimTypes && (\n        <section>\n          {/* ALL ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(\"ALL\");\n              props.setSelectedClaimType(\"all\");\n            }}\n          >\n            <MainItem\n              title=\"All\"\n              active={props.claiming.selectedClaimType === \"all\"}\n              count={countClaims(props.claiming, \"all\")}\n            />\n          </div>\n          {/* APPLICATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(ClaimTypesInterface.DOCUMENT);\n              props.setSelectedClaimType(PlansTypeKeys.APPLICATION);\n            }}\n          >\n            <MainItem\n              title={\"Application\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.APPLICATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.APPLICATION)}\n            />\n          </div>\n          {/* DOCUMENT ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.DOCUMENT_VALIDATION);\n            }}\n          >\n            <MainItem\n              title={\"Document\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION\n              }\n              count={countClaims(\n                props.claiming,\n                PlansTypeKeys.DOCUMENT_VALIDATION\n              )}\n            />\n          </div>\n          {/* EXAMINATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.EXAMINATION);\n            }}\n          >\n            <MainItem\n              title={\"Exam\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.EXAMINATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.EXAMINATION)}\n            />\n          </div>\n          {false && (\n            <div\n              className=\"mt-2\"\n              onClick={() => {\n                props.setSelectedClaimType(PlansTypeKeys.PLACEMENT_TRANSFER);\n              }}\n            >\n              <MainItem\n                title={\"Placement\"}\n                active={\n                  props.claiming.selectedClaimType !== \"all\" &&\n                  props.claiming.selectedClaimType ===\n                    PlansTypeKeys.PLACEMENT_TRANSFER\n                }\n                count={countClaims(\n                  props.claiming,\n                  PlansTypeKeys.PLACEMENT_TRANSFER\n                )}\n              />\n            </div>\n          )}\n        </section>\n      )}\n      {/* END AFTER LOADING DATA ================================== */}\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  claiming,\n}: StoreState): { auth: Auth; claiming: ClaimingReducerType } => {\n  return { auth, claiming };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    GetClaimingTypes,\n    setSelectedClaimType,\n    getAllClaims,\n    PushPopupAlert,\n  })(AdminFilterByType)\n);\n","import React from \"react\";\nimport { AiFillDashboard } from \"react-icons/ai\";\nimport { SessionPlanInterface } from \"../../interfaces\";\n\ntype ClaimHeaderTitleProps = {\n  headerTitle: string;\n  loading: boolean;\n  loadingSession: boolean;\n  periodChanged: boolean;\n  thisPeriod: SessionPlanInterface | null;\n  setThisPeriod: (state: SessionPlanInterface | null) => void;\n  setLoadingSession: (state: boolean) => void;\n  application_sessions: SessionPlanInterface[];\n  onPeriodChange: (period_id: string) => void;\n};\n\nconst selectPeriod = (\n  sessions: SessionPlanInterface[],\n  period_id: string,\n  setThisPeriod: (state: SessionPlanInterface | null) => void\n) => {\n  setThisPeriod(\n    sessions.filter((item) => item.session_plan_id === period_id)[0]\n  );\n};\n\nconst ClaimHeaderTitle: React.FC<ClaimHeaderTitleProps> = (props) => {\n  const isLoading = (): boolean => {\n    if (props.loading || props.loadingSession || props.periodChanged) {\n      return true;\n    }\n    return false;\n  };\n\n  return (\n    <div className=\"mt-3 rounded flex flex-col md:flex-row md:justify-between items-start\">\n      <div className=\"flex flex-row items-center gap-3 mb-2\">\n        <AiFillDashboard className=\"text-6xl text-blue-600 hidden md:block\" />\n        <div className=\"flex flex-col\">\n          <span className=\"text-blue-600 text-3xl font-bold\">\n            {props.headerTitle}\n          </span>\n        </div>\n      </div>\n\n      {/* FILTER SECTION PERIOD && EDUCATION */}\n      <section className=\"w-full md:w-auto my-2 md:my-0\">\n        <div>\n          <select\n            className={`bg-white text-gray-600 border border-gray-400 rounded p-2 focus:outline-none ${\n              isLoading() ? \"cursor-wait\" : \"cursor-default\"\n            }`}\n            value={props.thisPeriod ? props.thisPeriod.session_plan_id : \"\"}\n            disabled={isLoading()}\n            onChange={(e) => {\n              selectPeriod(\n                props.application_sessions,\n                e.target.value,\n                props.setThisPeriod\n              );\n              props.setLoadingSession(true);\n              props.onPeriodChange(e.target.value);\n            }}\n          >\n            {props.application_sessions.map((session, item) => (\n              <option\n                key={session.session_plan_id + item}\n                value={session.session_plan_id}\n              >\n                {session.session_plan_name}\n              </option>\n            ))}\n          </select>\n        </div>\n      </section>\n      {/* END FILTER SECTION PERIOD && EDUCATION */}\n    </div>\n  );\n};\n\nexport default React.memo(ClaimHeaderTitle);\n","import React, { Component } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { claimReasonInterface } from \"../../../interfaces\";\nimport search from \"../../../utils/search\";\n\nexport const claimReasonsData = [\n  { key: 1, reason: \"Not placed (Sinahawe umwanya)\" },\n  {\n    key: 2,\n    reason:\n      \"Not placed with higher marks (Sinahawe umwanya kandi hari abo ndusha twakoze bimwe bawuhawe)\",\n  },\n  {\n    key: 3,\n    reason:\n      \"Want to change district of placement (Nifuza guhindurirwa akarere nahawemo umwanya)\",\n  },\n  {\n    key: 4,\n    reason: \"Rejected offer by mistake (Nibeshye nanga umwanya nahawe)\",\n  },\n  {\n    key: 0,\n    reason: \"None of the above (nta na kimwe muri ibyo byavuzwe haruguru)\",\n  },\n];\n\ntype ChooseReasonProps = {\n  claimReason: claimReasonInterface | null;\n  setClaimReason: (value: claimReasonInterface | null) => void;\n  setChooseClaimReason: (value: boolean) => void;\n  allClaimReasons: claimReasonInterface[];\n};\n\ntype ChooseReasonState = {\n  searchInput: string;\n};\n\nclass ChooseReason extends Component<ChooseReasonProps, ChooseReasonState> {\n  constructor(props: ChooseReasonProps) {\n    super(props);\n\n    this.state = {\n      searchInput: \"\",\n    };\n  }\n\n  setSearchInput = (value: string) => {\n    this.setState({ searchInput: value });\n  };\n\n  render() {\n    return (\n      <div>\n        {/* SEARCH PART */}\n        <div className=\"flex items-center w-full my-1\">\n          <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n          <input\n            type=\"text\"\n            placeholder=\"Search\"\n            className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n            onChange={(e) => this.setSearchInput(e.target.value)}\n            value={this.state.searchInput}\n          />\n          <button\n            className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n            type=\"button\"\n            onClick={() => this.props.setChooseClaimReason(false)}\n          >\n            Close\n          </button>\n        </div>\n        {/* END SEARCH PART ///////////////// */}\n\n        <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n          {search(this.props.allClaimReasons, this.state.searchInput).map(\n            (item: claimReasonInterface, index) => (\n              <section key={index.toString() + item.id}>\n                <div\n                  className={`py-1 w-full px-2 hover:bg-gray-100 cursor-pointer ${\n                    this.props.claimReason &&\n                    this.props.claimReason.id === item.id\n                      ? \"border-l-4 border-blue-500 bg-blue-50\"\n                      : \"my-1\"\n                  }`}\n                  onClick={() => {\n                    this.props.setChooseClaimReason(false);\n                    this.props.setClaimReason(item);\n                  }}\n                >\n                  <p className=\"text-base text-black\">{item.reason}</p>\n                </div>\n              </section>\n            )\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default React.memo(ChooseReason);\n","import React from \"react\";\nimport { DocumentClaimUser } from \"../../../actions/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { ClaimGetDocTitle } from \"./ClaimForm\";\n\ntype DocFormViewProps = {\n  thisDoc: DocumentClaimUser;\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  documentCategories: DocumentReducerInterface;\n};\n\nconst DocFormView: React.FC<DocFormViewProps> = (props) => {\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-xl\">\n              {ClaimGetDocTitle(props.documentCategories, props.thisDoc).main}\n            </span>\n            <button\n              type=\"button\"\n              className=\"btn btn-blue\"\n              onClick={() => {\n                props.setChooseClaimFile(false);\n                props.setClaimFileId(props.thisDoc.doc_id);\n                props.setViewThisFile(\"\");\n              }}\n            >\n              Choose\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span className=\"font-bold text-yellow-900 rounded px-3 py-1\">\n              {capitalizeFirstLetter(props.thisDoc.validation_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              ################\n              {/* {loadingUsers ? (\n                <div className=\"w-24 h-3 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n              ) : getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                ) ? (\n                getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                )!.user.user_info.fname +\n                \" \" +\n                getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                )!.user.user_info.lname\n              ) : (\n                \"-\"\n              )} */}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisDoc.validated_by.comment}\n            </span>\n          </div>\n          <div className=\"w-full my-1\">\n            <img\n              src={`${API.AUTH_FILES}/${props.thisDoc.files}`}\n              alt=\"doc file\"\n              className={`w-full`}\n            />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default React.memo(DocFormView);\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { ApplicationSession } from \"../../../actions\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { isClaimAllowed } from \"./ClaimForm\";\n\nconst getRejectedApplicants = (\n  applicationData: claimApplicationsInterface[]\n): claimApplicationsInterface[] => {\n  return applicationData.filter(\n    (item) => item.application_status === ApplicationStates.Rejected\n  );\n};\n\nexport const searchApplication = (\n  objList: claimApplicationsInterface[],\n  text: any\n): claimApplicationsInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (prop === \"position\") {\n        flag =\n          product.position.position_title\n            .toString()\n            .toLowerCase()\n            .indexOf(text.toLowerCase()) > -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n  // return objList.filter((product) =>\n  //   product.position.position_title.includes(text)\n  // );\n};\n\ntype FormApplicationListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  claimFileId: string;\n  viewThisFile: string;\n  candidateApplications: claimApplicationsInterface[];\n  myClaims: CandidateClaimInterface[];\n  activeSession: ApplicationSession;\n};\n\nconst FormApplicationList: React.FC<FormApplicationListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            getRejectedApplicants(props.candidateApplications).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.application_id\n              )\n            ).length > 0\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Close\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}{\" \"}\n      {/* searchData(props.candidateApplications, searchInput) */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {getRejectedApplicants(props.candidateApplications).filter((item) =>\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            item.application_id\n          )\n        ).length > 0 ? (\n          searchApplication(\n            getRejectedApplicants(props.candidateApplications).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.application_id\n              )\n            ),\n            searchInput\n          ).map((item, index) => (\n            <div\n              className={`group flex items-center justify-between my-1 hover:bg-gray-100 ${\n                props.claimFileId === item.application_id &&\n                \"bg-blue-50 border-l-4 border-blue-500\"\n              }`}\n              key={index + item.application_id}\n            >\n              <div\n                className=\"p-1 w-full mr-2 cursor-pointer\"\n                onClick={() => {\n                  props.setChooseClaimFile(false);\n                  props.setClaimFileId(item.application_id);\n                }}\n              >\n                <p className=\"text-base font-medium text-black\">\n                  {item.position.position_title}\n                </p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                onClick={() => {\n                  props.setViewThisFile(item.application_id);\n                }}\n              >\n                View\n              </button>\n            </div>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No Rejected document available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default React.memo(FormApplicationList);\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { ClaimGetDocTitle, isClaimAllowed } from \"./ClaimForm\";\nimport { DocumentClaimUser } from \"../../../actions/claiming\";\nimport { CategorySubcategoryData } from \"../../../interfaces/candidatesInterfaces\";\nimport { CandidateClaimInterface } from \"../../../interfaces\";\nimport { ApplicationSession } from \"../../../actions\";\n\nexport interface DocumentTitleInterface {\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  school: {\n    school_name: string;\n    _id: string;\n    status: boolean;\n    education_category_id?: {\n      education_category_title: string;\n      _id: string;\n    };\n    district_id?: {\n      district_name: string;\n      _id: string;\n    };\n  } | null;\n  school_id: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  validation_status: string;\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: string;\n    date: string;\n  };\n  doc_id: string;\n  doc_title: string;\n  category_subcategory_data: CategorySubcategoryData | null;\n}\n\nexport const DocumentTitleData = (\n  documentData: DocumentClaimUser[],\n  documentCategories: DocumentReducerInterface\n): DocumentTitleInterface[] | [] => {\n  let documentTemp: DocumentTitleInterface[] = [];\n  for (let i in documentData) {\n    documentTemp.push({\n      category_id: documentData[i].category_id,\n      company: documentData[i].company,\n      description: documentData[i].description,\n      email: documentData[i].email,\n      end_year: documentData[i].end_year,\n      files: documentData[i].files,\n      names: documentData[i].names,\n      phone_number: documentData[i].phone_number,\n      school: documentData[i].school,\n      school_id: documentData[i].school_id,\n      start_year: documentData[i].start_year,\n      sub_category_id: documentData[i].sub_category_id,\n      title: documentData[i].title,\n      year: documentData[i].year,\n      validation_status: documentData[i].validation_status,\n      validated_by: documentData[i].validated_by,\n      doc_id: documentData[i].doc_id,\n      doc_title: ClaimGetDocTitle(documentCategories, documentData[i]).main,\n      category_subcategory_data: documentData[i].category_subcategory_data,\n    });\n  }\n  return documentTemp;\n};\n\nconst getRejectedDocuments = (\n  documentData: DocumentClaimUser[]\n): DocumentClaimUser[] => {\n  console.log({\n    rejected: documentData.filter(\n      (item) => item.validation_status === \"rejected\"\n    ),\n  });\n  return documentData.filter((item) => item.validation_status === \"rejected\");\n};\n\nexport const searchDocuments = (\n  objList: DocumentTitleInterface[],\n  text: any\n): DocumentTitleInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter(\n    (product) =>\n      product.doc_title.toString().toLowerCase().indexOf(text.toLowerCase()) >\n      -1\n  );\n};\n\ntype FormDocumentListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  claimFileId: string;\n  viewThisFile: string;\n  candidateDocuments: DocumentClaimUser[];\n  documentCategories: DocumentReducerInterface;\n  myClaims: CandidateClaimInterface[];\n  activeSession: ApplicationSession;\n};\n\nconst FormDocumentList: React.FC<FormDocumentListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            DocumentTitleData(\n              getRejectedDocuments(props.candidateDocuments),\n              props.documentCategories\n            ).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.doc_id\n              )\n            ).length > 0\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Close\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {props.candidateDocuments.filter((item) =>\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            item.doc_id\n          )\n        ).length > 0 ? (\n          searchDocuments(\n            DocumentTitleData(\n              getRejectedDocuments(props.candidateDocuments),\n              props.documentCategories\n            ).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.doc_id\n              )\n            ),\n            searchInput\n          ).map((doc, index) => (\n            <section key={index + doc.doc_id}>\n              <div\n                className={`group flex items-center justify-between my-1 hover:bg-gray-100 ${\n                  props.claimFileId === doc.doc_id &&\n                  \"bg-blue-50 border-l-4 border-blue-500\"\n                }`}\n              >\n                <div\n                  className=\"p-1 w-full mr-2 cursor-pointer\"\n                  onClick={() => {\n                    props.setChooseClaimFile(false);\n                    props.setClaimFileId(doc.doc_id);\n                  }}\n                >\n                  <p className=\"text-base font-medium text-black\">\n                    {ClaimGetDocTitle(props.documentCategories, doc).main}\n                  </p>\n                </div>\n                <button\n                  type=\"button\"\n                  className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                  onClick={() => {\n                    props.viewThisFile === doc.doc_id\n                      ? props.setViewThisFile(\"\")\n                      : props.setViewThisFile(doc.doc_id);\n                  }}\n                >\n                  {props.viewThisFile === doc.doc_id ? \"Close\" : \"View\"}\n                </button>\n              </div>\n            </section>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No Rejected document available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default React.memo(FormDocumentList);\n","import React, { useEffect } from \"react\";\nimport { ImCheckboxChecked, ImCheckboxUnchecked } from \"react-icons/im\";\nimport { MdRadioButtonChecked, MdRadioButtonUnchecked } from \"react-icons/md\";\nimport { QuestionAnswersStore } from \"../../../../actions\";\nimport {\n  MultipleChoiceQuestionAnswerInterface,\n  QuestionAnswerInterface,\n  QuestionItemInterface,\n  QuestionLanguage,\n  SubQuestionInterface,\n} from \"../../../../interfaces/question\";\nimport {\n  questionTypeElementsType,\n  QuestionForHybrid,\n} from \"@mastrecruit/common\";\nimport Hybrid from \"./Hybrid\";\nimport TrueFalse from \"./TrueFalse\";\nimport {\n  toCalculatedMultipleChoice,\n  toEssay,\n  toMatching,\n  toMultipleChoice,\n  toNumerical,\n  toShortAnswer,\n  toSimpleCalculated,\n  toTrueFalse,\n} from \"../ConvertingAnswers\";\nimport SimpleCalculated from \"./SimpleCalculated\";\nimport MultipleChoice from \"./MultipleChoice\";\nimport CalculatedMultipleChoice from \"./CalculatedMultipleChoice\";\nimport Matching from \"./Matching\";\nimport { Shuffle } from \"../../../../utils/functions\";\nimport { CandidateExam } from \"../../../../interfaces/exam\";\nimport Essay from \"./Essay\";\nimport Numerical from \"./Numerical\";\nimport ShortAnswer from \"./ShortAnswer\";\n\n// All question types except Embedded and Hybrid\n\ninterface AnswersTypesCollectionProps {\n  type: questionTypeElementsType | null;\n  available_answers: QuestionAnswersStore[];\n  selectedQuestionAnswer: {\n    question_id: string | null;\n    question: QuestionItemInterface | undefined;\n    answers: QuestionAnswerInterface[] | undefined;\n  };\n  answerQuestionFn: (answer: QuestionAnswersStore) => void;\n  wholeQuestion: QuestionItemInterface | undefined;\n  selectedExam: CandidateExam | null;\n  selectedLanguage: QuestionLanguage;\n  item: SubQuestionInterface;\n  hybrid: boolean;\n}\n\nconst AnswersTypesCollection = (props: AnswersTypesCollectionProps) => {\n  return (\n    <div>\n      {/* TrueFalse */}\n      {props.wholeQuestion !== undefined &&\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.item.typeShort === QuestionForHybrid.TrueFalse &&\n        props.selectedQuestionAnswer.answers\n          .filter((test) => test.reference === props.item.reference)\n          .map((itm, i) => (\n            <TrueFalse\n              key={i + 1}\n              type={props.type}\n              available_answers={props.available_answers}\n              selectedQuestionAnswer={{\n                question_id: props.selectedQuestionAnswer.question_id,\n                question: props.selectedQuestionAnswer.question,\n                answers: toTrueFalse(itm.answer),\n                selectedAns: itm,\n              }}\n              answerQuestionFn={props.answerQuestionFn}\n            />\n          ))}\n      {/* Calculated */}\n      {props.wholeQuestion !== undefined &&\n        props.selectedQuestionAnswer.answers !== undefined &&\n        (props.item.typeShort === QuestionForHybrid.Calculated ||\n          props.item.typeShort === QuestionForHybrid.SimpleCalculate) &&\n        props.selectedQuestionAnswer.answers\n          .filter((test) => test.reference === props.item.reference)\n          .map((itm, i) => (\n            <SimpleCalculated\n              key={i + 1}\n              type={props.type}\n              available_answers={props.available_answers}\n              selectedQuestionAnswer={{\n                question_id: props.selectedQuestionAnswer.question_id,\n                question: props.selectedQuestionAnswer.question,\n                answers: toSimpleCalculated(itm.answer),\n                selectedAns: itm,\n              }}\n              answerQuestionFn={props.answerQuestionFn}\n            />\n          ))}\n      {/* MultipleChoice */}\n      {props.wholeQuestion !== undefined &&\n        props.selectedQuestionAnswer.answers !== undefined &&\n        (props.item.typeShort === QuestionForHybrid.SingleMultiple ||\n          props.item.typeShort === QuestionForHybrid.MultipleChoice) &&\n        props.selectedQuestionAnswer.answers\n          .filter((test) => test.reference === props.item.reference)\n          .map((itm, i) => (\n            <MultipleChoice\n              key={i + 1}\n              type={props.type}\n              available_answers={props.available_answers}\n              selectedQuestionAnswer={{\n                question_id: props.selectedQuestionAnswer.question_id,\n                question: props.selectedQuestionAnswer.question,\n                answers: toMultipleChoice(itm.answer),\n                selectedAns: itm,\n              }}\n              answerQuestionFn={props.answerQuestionFn}\n            />\n          ))}\n      {/* Calculated MultipleChoice */}\n      {props.wholeQuestion !== undefined &&\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.item.typeShort === QuestionForHybrid.CalculatedMultipleChoice &&\n        props.selectedQuestionAnswer.answers\n          .filter((test) => test.reference === props.item.reference)\n          .map((itm, i) => (\n            <CalculatedMultipleChoice\n              key={i + 1}\n              type={props.type}\n              available_answers={props.available_answers}\n              selectedQuestionAnswer={{\n                question_id: props.selectedQuestionAnswer.question_id,\n                question: props.selectedQuestionAnswer.question,\n                answers: toCalculatedMultipleChoice(itm.answer),\n                selectedAns: itm,\n              }}\n              answerQuestionFn={props.answerQuestionFn}\n            />\n          ))}\n\n      {/* Matching */}\n      {props.wholeQuestion !== undefined &&\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.item.typeShort === QuestionForHybrid.Matching &&\n        props.selectedQuestionAnswer.answers\n          .filter((test) => test.reference === props.item.reference)\n          .map((itm, i) => (\n            <Matching\n              key={i + 1}\n              type={props.type}\n              available_answers={props.available_answers}\n              selectedQuestionAnswer={{\n                question_id: props.selectedQuestionAnswer.question_id,\n                question: props.selectedQuestionAnswer.question,\n                answers: toMatching(itm.answer),\n                shuffledAnswers: Shuffle(toMatching(itm.answer)),\n                selectedAns: itm,\n              }}\n              answerQuestionFn={props.answerQuestionFn}\n              selectedExam={props.selectedExam}\n              selectedLanguage={props.selectedLanguage}\n            />\n          ))}\n      {/* Esssay */}\n      {props.wholeQuestion !== undefined &&\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.item.typeShort === QuestionForHybrid.Essay &&\n        props.selectedQuestionAnswer.answers\n          .filter((test) => test.reference === props.item.reference)\n          .map((itm, i) => (\n            <Essay\n              key={i + 1}\n              type={props.type}\n              available_answers={props.available_answers}\n              selectedQuestionAnswer={{\n                question_id: props.selectedQuestionAnswer.question_id,\n                question: props.selectedQuestionAnswer.question,\n                answers: toEssay(itm.answer),\n                selectedAns: itm,\n              }}\n              answerQuestionFn={props.answerQuestionFn}\n            />\n          ))}\n      {/* Numerical */}\n      {props.wholeQuestion !== undefined &&\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.item.typeShort === QuestionForHybrid.Numeric &&\n        props.selectedQuestionAnswer.answers\n          .filter((test) => test.reference === props.item.reference)\n          .map((itm, i) => (\n            <Numerical\n              key={i + 1}\n              type={props.type}\n              available_answers={props.available_answers}\n              selectedQuestionAnswer={{\n                question_id: props.selectedQuestionAnswer.question_id,\n                question: props.selectedQuestionAnswer.question,\n                answers: toNumerical(itm.answer),\n                selectedAns: itm,\n              }}\n              answerQuestionFn={props.answerQuestionFn}\n            />\n          ))}\n      {/* ShortAnswer */}\n      {props.wholeQuestion !== undefined &&\n        props.selectedQuestionAnswer.answers !== undefined &&\n        props.item.typeShort === QuestionForHybrid.ShortAnswer &&\n        props.selectedQuestionAnswer.answers\n          .filter((test) => test.reference === props.item.reference)\n          .map((itm, i) => (\n            <ShortAnswer\n              key={i + 1}\n              type={props.type}\n              available_answers={props.available_answers}\n              selectedQuestionAnswer={{\n                question_id: props.selectedQuestionAnswer.question_id,\n                question: props.selectedQuestionAnswer.question,\n                answers: toShortAnswer(itm.answer),\n                selectedAns: itm,\n              }}\n              answerQuestionFn={props.answerQuestionFn}\n            />\n          ))}\n    </div>\n  );\n};\n\nexport default AnswersTypesCollection;\n","import React, { useEffect } from \"react\";\nimport { ImCheckboxChecked, ImCheckboxUnchecked } from \"react-icons/im\";\nimport { MdRadioButtonChecked, MdRadioButtonUnchecked } from \"react-icons/md\";\nimport { QuestionAnswersStore } from \"../../../../actions\";\nimport {\n  MultipleChoiceQuestionAnswerInterface,\n  QuestionAnswerInterface,\n  QuestionItemInterface,\n  QuestionLanguage,\n} from \"../../../../interfaces/question\";\nimport {\n  questionTypeElementsType,\n  QuestionForHybrid,\n} from \"@mastrecruit/common\";\nimport Hybrid from \"./Hybrid\";\nimport TrueFalse from \"./TrueFalse\";\nimport {\n  toCalculatedMultipleChoice,\n  toEssay,\n  toMatching,\n  toMultipleChoice,\n  toNumerical,\n  toShortAnswer,\n  toSimpleCalculated,\n  toTrueFalse,\n} from \"../ConvertingAnswers\";\nimport SimpleCalculated from \"./SimpleCalculated\";\nimport MultipleChoice from \"./MultipleChoice\";\nimport CalculatedMultipleChoice from \"./CalculatedMultipleChoice\";\nimport Matching from \"./Matching\";\nimport { Shuffle } from \"../../../../utils/functions\";\nimport { CandidateExam } from \"../../../../interfaces/exam\";\nimport Essay from \"./Essay\";\nimport Numerical from \"./Numerical\";\nimport ShortAnswer from \"./ShortAnswer\";\nimport AnswersTypesCollection from \"./AnswersTypesCollection\";\n\ninterface HybridProps {\n  type: questionTypeElementsType | null;\n  available_answers: QuestionAnswersStore[];\n  selectedQuestionAnswer: {\n    question_id: string | null;\n    question: QuestionItemInterface | undefined;\n    answers: QuestionAnswerInterface[] | undefined;\n  };\n  answerQuestionFn: (answer: QuestionAnswersStore) => void;\n  wholeQuestion: QuestionItemInterface | undefined;\n  selectedExam: CandidateExam | null;\n  selectedLanguage: QuestionLanguage;\n}\n\nconst HybridAnswers = (props: HybridProps) => {\n  let str = \"a\";\n  // useEffect(() => {\n  //   if (props.selectedQuestionAnswer.question_id !== null) {\n  //     // Check if question is already there in answersList\n  //     let checkAnswerAvail = props.available_answers.find(\n  //       (item) => item.question_id === props.selectedQuestionAnswer.question_id\n  //     );\n  //     if (props.wholeQuestion !== undefined) {\n  //       let answersRes: QuestionAnswerInterface[] = [];\n  //       if (checkAnswerAvail === undefined) {\n  //         answersRes = props.wholeQuestion.answers;\n  //       } else {\n  //         for (let newAns of props.wholeQuestion.answers) {\n  //           if (\n  //             checkAnswerAvail.answers.find(\n  //               (item) => item._id === newAns._id\n  //             ) === undefined\n  //           ) {\n  //             console.log(\"Ans not duplicted: \", newAns);\n  //             answersRes = [\n  //               ...answersRes,\n  //               {\n  //                 _id: newAns._id,\n  //                 reference: newAns.reference,\n  //                 answer: [],\n  //               },\n  //             ];\n  //           }\n  //         }\n  //       }\n  //       props.answerQuestionFn({\n  //         question_id: props.selectedQuestionAnswer.question_id,\n  //         status: false, //Check if submitted online\n  //         answers: answersRes,\n  //       });\n  //     }\n  //   }\n  // }, [props]);\n  return (\n    <div>\n      {props.wholeQuestion !== undefined &&\n        props.wholeQuestion.sub_question.length > 0 &&\n        props.wholeQuestion.sub_question.map((item, i) => {\n          let stri = String.fromCharCode(str.charCodeAt(str.length - 1) + i);\n          return (\n            <div\n              title=\"Click to choose this option\"\n              key={i + 1}\n              className={`px-2 py-2\n             bg-white\n            rounded mb-2`}\n            >\n              <div className=\"flex flex-row items-center w-full gap-2 mb-2\">\n                <div>\n                  <div className=\"flex items-center justify-center h-8 w-8 rounded-full bg-gray-100 border border-gray-400 font-bold\">\n                    {stri}\n                  </div>\n                </div>\n                <div className=\"flex flex-row items-center justify-between w-full gap-2\">\n                  <div className=\"font-bold\">{item.description}</div>\n                  <div>\n                    <div className=\"bg-blue-100 text-blue-600 px-3 py-1 rounded-full font-bold\">\n                      {item.marks} marks\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"border-t px-2 py-2\">\n                <AnswersTypesCollection\n                  type={props.type}\n                  available_answers={props.available_answers}\n                  selectedQuestionAnswer={props.selectedQuestionAnswer}\n                  answerQuestionFn={props.answerQuestionFn}\n                  wholeQuestion={props.wholeQuestion}\n                  selectedExam={props.selectedExam}\n                  selectedLanguage={props.selectedLanguage}\n                  item={item}\n                  hybrid={true}\n                />\n              </div>\n            </div>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default HybridAnswers;\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { VscLoading } from \"react-icons/vsc\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../../actions\";\nimport { updateSessionPlan } from \"../../../actions/session\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport {\n  allPlanTypes,\n  PlansInterface,\n  PlansTypeInterface,\n  PlansTypeKeys,\n  SessionPlanInterface,\n  SessionPlanTypeStatus,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { DATE, errorToText } from \"../../../utils/functions\";\n\nexport const isActivationAllowed = (thisPlans: PlansInterface): boolean => {\n  let today: Date = new Date(),\n    end_date = new Date(thisPlans.end_date);\n  if (end_date.getTime() >= today.getTime()) {\n    return true;\n  }\n  return false;\n};\n\nexport const getPlanTypeByKey = (\n  type_key: PlansTypeKeys\n): PlansTypeInterface | undefined => {\n  return allPlanTypes.find((item) => item.type_key === type_key);\n};\n\nexport const isPlanActive = (\n  viewThisSession: SessionPlanInterface,\n  thisPlan: PlansInterface\n): \"OPEN\" | \"CLOSED\" | \"WAITING\" => {\n  if (viewThisSession.is_active) {\n    let today = new Date(),\n      planEndDate = new Date(thisPlan.end_date),\n      planStartDate = new Date(thisPlan.start_date);\n    if (\n      planEndDate.getTime() >= today.getTime() &&\n      planStartDate.getTime() <= today.getTime() &&\n      thisPlan.type_status !== SessionPlanTypeStatus.CLOSED\n    ) {\n      return \"OPEN\";\n    } else if (\n      planStartDate.getTime() > today.getTime() &&\n      thisPlan.type_status !== SessionPlanTypeStatus.CLOSED\n    ) {\n      return \"WAITING\";\n    }\n  }\n  return \"CLOSED\";\n};\n\ntype SessionDetailsProps = {\n  viewThisSession: SessionPlanInterface;\n  setViewThisSession: (data: SessionPlanInterface) => void;\n\n  // REDUX ----------------\n  updateSessionPlan: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype SessionDetailsState = {\n  loadingRequest: string;\n};\n\nexport class SessionDetails extends Component<\n  SessionDetailsProps,\n  SessionDetailsState\n> {\n  constructor(props: SessionDetailsProps) {\n    super(props);\n\n    this.state = {\n      loadingRequest: \"\",\n    };\n  }\n\n  handlePlanActivation = async (\n    session: SessionPlanInterface,\n    thisPlan: PlansInterface\n  ) => {\n    const newState: \"open\" | \"close\" = session.is_active ? \"close\" : \"open\";\n\n    if (!window.confirm(`Are you sure you want to ${newState} this plan?`)) {\n      return true;\n    }\n\n    if (!isActivationAllowed(thisPlan)) {\n      this.props.PushPopupAlert({\n        title: `Opening/Closing plan which has been expired is not allowed!`,\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    let newData: SessionPlanInterface = {\n      session_plan_name: session.session_plan_name,\n      period: session.period,\n      is_active: session.is_active,\n      plans: [],\n      createdAt: session.createdAt,\n      updatedAt: session.updatedAt,\n      session_plan_id: session.session_plan_id,\n    };\n    for (const key in session.plans) {\n      if (Object.prototype.hasOwnProperty.call(session.plans, key)) {\n        const element = session.plans[key];\n        if (thisPlan.type_key === element.type_key) {\n          if (thisPlan.type_status === SessionPlanTypeStatus.OPEN) {\n            newData.plans.push({\n              type_id: thisPlan.type_id,\n              type_title: thisPlan.type_title,\n              type_key: thisPlan.type_key,\n              type_status: SessionPlanTypeStatus.CLOSED,\n              start_date: thisPlan.start_date,\n              end_date: thisPlan.end_date,\n              allowed_claim_level: thisPlan.allowed_claim_level,\n              _id: thisPlan._id,\n              history: thisPlan.history,\n            });\n          } else {\n            newData.plans.push({\n              type_id: thisPlan.type_id,\n              type_title: thisPlan.type_title,\n              type_key: thisPlan.type_key,\n              type_status: SessionPlanTypeStatus.OPEN,\n              start_date: thisPlan.start_date,\n              end_date: thisPlan.end_date,\n              allowed_claim_level: thisPlan.allowed_claim_level,\n              _id: thisPlan._id,\n              history: thisPlan.history,\n            });\n          }\n        } else {\n          newData.plans.push(element);\n        }\n      }\n    }\n\n    console.log(\"====================================\");\n    console.log({ newData });\n    console.log(\"====================================\");\n\n    this.setState({ loadingRequest: thisPlan.type_key });\n    try {\n      const res = await axios.put<SessionPlanInterface>(\n        `${API.CLAIMING}/session/${session.session_plan_id}`,\n        newData\n      );\n      this.props.updateSessionPlan(res.data);\n      this.props.setViewThisSession(res.data);\n      this.props.PushPopupAlert({\n        title: `Session ${newState}d successfully`,\n        theme: PopupAlertTheme.info,\n      });\n      this.setState({ loadingRequest: \"\" });\n      console.log(\"updateSessionPlan: \", res);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.warning,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <table className=\"w-full bg-white shadow p-5\" id=\"session_content\">\n        <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n          <tr>\n            <td className=\"p-2\">#</td>\n            <td className=\"p-2\">Plan Type</td>\n            <td className=\"p-2\">Start Date</td>\n            <td className=\"p-2\">End date</td>\n            {this.props.viewThisSession.is_active && (\n              <td className=\"p-2\" colSpan={2}>\n                Status\n              </td>\n            )}\n          </tr>\n        </thead>\n        <tbody>\n          {/* WHILE DATA FOUND ====================== */}\n          {this.props.viewThisSession.plans.map((item, index) => (\n            <tr\n              key={index + item._id}\n              className={`border-b border-gray-200 hover:bg-gray-100`}\n            >\n              <td className=\"p-2 text-left whitespace-nowrap\">{index + 1}</td>\n              <td className=\"p-2 text-left\">\n                <span className=\"text-lg\">\n                  {getPlanTypeByKey(item.type_key) &&\n                    capitalizeFirstLetter(\n                      getPlanTypeByKey(item.type_key)!.type_title\n                    )}\n                </span>\n              </td>\n              <td className=\"p-2 text-left\">{DATE(item.start_date)}</td>\n              <td className=\"p-2 text-left\">{DATE(item.end_date)}</td>\n              {this.props.viewThisSession.is_active && (\n                <td>\n                  {isPlanActive(this.props.viewThisSession, item) === \"OPEN\" ? (\n                    <span className={`px-2 py-1 font-semibold text-green-700`}>\n                      Open\n                    </span>\n                  ) : isPlanActive(this.props.viewThisSession, item) ===\n                    \"WAITING\" ? (\n                    <span className={`px-2 py-1 font-semibold text-gray-700`}>\n                      Waiting\n                    </span>\n                  ) : (\n                    <span className={`px-2 py-1 font-semibold text-red-700`}>\n                      Closed\n                    </span>\n                  )}\n                </td>\n              )}\n              {this.props.viewThisSession.is_active && (\n                <td>\n                  {isActivationAllowed(item) && (\n                    <div className=\"flex items-center justify-center gap-1\">\n                      <div\n                        className={`relative ${\n                          this.state.loadingRequest.length > 0\n                            ? \"cursor-not-allowed\"\n                            : \"cursor-pointer\"\n                        }`}\n                        title={\n                          item.type_status === SessionPlanTypeStatus.OPEN\n                            ? \"Deactivating session\"\n                            : \"Activating session\"\n                        }\n                        onClick={() =>\n                          this.state.loadingRequest.length <= 0 &&\n                          this.handlePlanActivation(\n                            this.props.viewThisSession,\n                            item\n                          )\n                        }\n                      >\n                        <span className=\"block w-14 h-8 bg-gray-100 rounded-full shadow-inner\"></span>\n                        <span\n                          className={`absolute block w-6 h-6 mt-1 ml-1 rounded-full shadow inset-y-0 left-0 focus-within:shadow-outline transition-transform duration-500 ease-in-out ${\n                            item.type_status === SessionPlanTypeStatus.CLOSED\n                              ? \"bg-red-500\"\n                              : \"bg-green-500 transform translate-x-full\"\n                          }`}\n                        ></span>\n                      </div>\n                      {this.state.loadingRequest === item.type_key && (\n                        <VscLoading className=\"animate__animated animate__rotateIn animate__infinite\" />\n                      )}\n                    </div>\n                  )}\n                </td>\n              )}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nexport default React.memo(connect(null, {\n  updateSessionPlan,\n  PushPopupAlert,\n})(SessionDetails));\n","import React, { Component } from \"react\";\nimport { MdAdd, MdArrowBack, MdDelete, MdInfoOutline } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Auth, loadCourses, PushPopupAlert } from \"../../../actions\";\nimport {\n  DocumentClaimUser,\n  getClaimReasons,\n  getMyAnswers,\n  getMyClaims,\n  getMyPlacement,\n} from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport { SideNavigation } from \"../../../components/Navigation/SideNavigation\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimStatus,\n  PlansTypeKeys,\n  SessionPlanInterface,\n  course,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport search from \"../../../utils/search\";\nimport { filterClaimsByClaimType } from \"../Admin/AdminFilterByType\";\nimport ClaimApplView from \"../ClaimApplView\";\nimport ClaimDocView, { isClaimEvaluated } from \"../ClaimDocView\";\nimport ClaimExamView from \"../ClaimExamView\";\nimport ClaimHeaderTitle from \"../ClaimHeaderTitle\";\nimport ClaimPlacementView from \"../ClaimPlacementView\";\nimport ClaimForm, { ClaimGetDocTitle } from \"./ClaimForm\";\nimport FilterByType from \"./FilterByType\";\nimport { getCourseById, getCourseIdBySheetId } from \"./FormExamList\";\n\nexport enum ClaimTypesEnum {\n  application = \"application\",\n  document = \"document\",\n  exam = \"exam\",\n  marks_publication = \"marks publication\",\n  placement = \"placement\",\n}\n\nexport const getDocumentById = (\n  candidateDocuments: DocumentClaimUser[],\n  document_id: string\n): DocumentClaimUser | null => {\n  let result: DocumentClaimUser | undefined = candidateDocuments.find(\n    (item) => item.doc_id === document_id\n  );\n  return result ? result : null;\n};\n\nexport const whichClaimType = (\n  thisClaim: CandidateClaimInterface\n): ClaimTypesEnum | undefined => {\n  if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n    return ClaimTypesEnum.application;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n    return ClaimTypesEnum.document;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.EXAMINATION) {\n    return ClaimTypesEnum.exam;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.MARKS_PUBLICATION) {\n    return ClaimTypesEnum.marks_publication;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.PLACEMENT_TRANSFER) {\n    return ClaimTypesEnum.placement;\n  }\n};\n\nexport const whichClaimStatus = (\n  thisClaim: CandidateClaimInterface\n): {\n  classes: string;\n  status: string;\n} => {\n  let classes: string, status: string;\n  switch (thisClaim.last_claim_status) {\n    case ClaimStatus.COMPLETED:\n      classes = \"text-blue-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.COMPLETED.toLocaleLowerCase());\n      break;\n    case ClaimStatus.EVALUATED:\n      classes = \"text-green-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.EVALUATED.toLocaleLowerCase());\n      break;\n\n    case ClaimStatus.DELETED:\n      classes = \"text-red-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.DELETED.toLocaleLowerCase());\n      break;\n\n    default:\n      classes = \"text-yellow-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.PENDING.toLocaleLowerCase());\n      break;\n  }\n\n  return { classes, status };\n};\n\nexport const getClaimById = (\n  claimList: CandidateClaimInterface[],\n  claim_id: string\n): CandidateClaimInterface | null => {\n  // console.log(\"====================================\");\n  // console.log({ claimList, claim_id });\n  // console.log(\"====================================\");\n  let result: CandidateClaimInterface | undefined = claimList.find(\n    (item) => item._id === claim_id\n  );\n  return result ? result : null;\n};\n\nexport const getApplicationById = (\n  candidateApplications: claimApplicationsInterface[],\n  application_id: string\n): claimApplicationsInterface | null => {\n  let result: claimApplicationsInterface | undefined =\n    candidateApplications.find(\n      (item) => item.application_id === application_id\n    );\n  return result ? result : null;\n};\n\nexport const displayDocClaimTitle = (\n  documentCategories: DocumentReducerInterface,\n  candidateDocuments: DocumentClaimUser[],\n  thisClaim: CandidateClaimInterface\n): string => {\n  let result: string = \"\";\n\n  // CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n  if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n    let thisDoc = getDocumentById(candidateDocuments, thisClaim.claiming_on_id);\n    result = thisDoc\n      ? ClaimGetDocTitle(documentCategories, thisDoc).main\n      : \"Document not found\";\n  }\n  // END CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n  return result;\n};\n\nexport const displayClaimTitle = (\n  claiming: ClaimingReducerType,\n  documentReducer: DocumentReducerInterface,\n  allCourse: course[] | null,\n  thisClaim: CandidateClaimInterface\n): string => {\n  let result: string = thisClaim.claiming_on_id;\n\n  if (\n    thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION &&\n    claiming.candidateDocuments\n  ) {\n    result = displayDocClaimTitle(\n      documentReducer,\n      claiming.candidateDocuments,\n      thisClaim\n    );\n  }\n  if (\n    thisClaim.type_key === PlansTypeKeys.APPLICATION &&\n    claiming.candidateApplications\n  ) {\n    let thisApplication = getApplicationById(\n      claiming.candidateApplications,\n      thisClaim.claiming_on_id\n    );\n    if (thisApplication) {\n      result = thisApplication.position.position_title;\n    } else {\n      result = \"Application not found\";\n    }\n  }\n\n  if (\n    thisClaim.type_key === PlansTypeKeys.EXAMINATION &&\n    allCourse &&\n    claiming.myAnswer\n  ) {\n    let thisAnswer = getCourseIdBySheetId(\n      claiming.myAnswer,\n      thisClaim.claiming_on_id\n    );\n    if (thisAnswer && getCourseById(allCourse, thisAnswer.course)) {\n      result = getCourseById(allCourse, thisAnswer.course)!.course_name;\n    } else {\n      result = \"Exam not found\";\n    }\n  }\n\n  if (thisClaim.type_key === PlansTypeKeys.PLACEMENT_TRANSFER) {\n    result = claiming.myPlacement\n      ? \"Placed on \" + claiming.myPlacement.placed.school.school_name\n      : \"Placement not found\";\n  }\n\n  return result;\n};\n\n// -------------------------------------------------------------------------\n\ntype AppProps = {\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  application_sessions: SessionPlanInterface[] | null;\n  courses: course[] | null;\n  documentReducer: DocumentReducerInterface;\n  getMyPlacement: Function;\n  getMyClaims: Function;\n  loadCourses: Function;\n  getMyAnswers: Function;\n  getClaimReasons: Function;\n  GetAllSessionPlans: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype AppState = {\n  loading: boolean;\n  loadingSession: boolean;\n  thisPeriod: SessionPlanInterface | null;\n  periodChanged: boolean;\n  viewClaim: boolean;\n  claimId: string | null;\n  claimForm: boolean;\n\n  // FOR FORM ================\n  viewImage: boolean;\n  loadingRequest: boolean;\n  reClaiming: boolean;\n  reClaimingMsg: string;\n  searchClaim: string;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n};\n\nclass Index extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingSession: true,\n      thisPeriod: null,\n      periodChanged: false,\n      viewClaim: false,\n      claimId: null,\n      claimForm: false,\n      searchClaim: \"\",\n\n      // FOR FORM ================\n      viewImage: false,\n      loadingRequest: false,\n      reClaiming: false,\n      reClaimingMsg: \"\",\n      formError: null,\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingSession = (value: boolean) => {\n    this.setState({ loadingSession: value });\n  };\n\n  setViewClaim = (value: boolean) => {\n    this.setState({ viewClaim: value });\n  };\n\n  setPeriodChanged = (value: boolean) => {\n    this.setState({ periodChanged: value });\n  };\n\n  setClaimForm = (value: boolean) => {\n    this.setState({ claimForm: value });\n  };\n\n  setViewImage = (value: boolean) => {\n    this.setState({ viewImage: value });\n  };\n\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n\n  setReClaiming = (value: boolean) => {\n    this.setState({ reClaiming: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n\n  setReClaimingMsg = (value: string) => {\n    this.setState({ reClaimingMsg: value });\n  };\n\n  setClaimId = (value: string | null) => {\n    this.setState({ claimId: value });\n  };\n\n  setThisPeriod = (value: SessionPlanInterface | null) => {\n    this.setState({ thisPeriod: value });\n  };\n\n  setSearchClaim = (value: string) => {\n    this.setState({ searchClaim: value });\n  };\n\n  loadClaims = (thisPeriod: SessionPlanInterface) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (this.props.claiming.myClaims === null && thisPeriod !== null) {\n      this.props.getMyClaims(\n        this.props.auth.user.user_id,\n        thisPeriod.session_plan_id,\n        (status: boolean, msg: string) => {\n          !status && this.setLoading(status);\n          if (status === false && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    } else if (thisPeriod && this.state.loading) {\n      this.setLoading(false);\n    }\n  };\n\n  setSession = (sessions: SessionPlanInterface[]) => {\n    // SETTING ACTIVE SESSION ==========================\n    if (this.state.thisPeriod === null && sessions.length > 0) {\n      let thisSession = sessions.find((item) => item.is_active === true);\n      this.setThisPeriod(thisSession ? thisSession : sessions[0]);\n      this.loadClaims(thisSession ? thisSession : sessions[0]);\n      this.loadExamAnswers(\n        thisSession ? thisSession : sessions[0],\n        this.props.auth.user.user_id\n      );\n    }\n  };\n\n  loadExamAnswers = (\n    activeSessionPlan: SessionPlanInterface,\n    user_id: string\n  ) => {\n    this.props.getMyAnswers(\n      activeSessionPlan.session_plan_id,\n      user_id,\n      (status: boolean, msg: string, data: SessionPlanInterface | \"none\") => {\n        this.setLoading(status);\n        if (!status && msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n        if (data) {\n          console.log(\"====================================\");\n          console.log({ loadExamAnswers: data });\n          console.log(\"====================================\");\n        }\n      }\n    );\n    if (this.props.claiming.claimReasons === null) {\n      this.props.getClaimReasons((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (!status) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n  };\n\n  componentDidMount = () => {\n    if (\n      this.props.courses === null ||\n      (this.props.courses.length === 0 && this.state.loading)\n    ) {\n      this.props.loadCourses(this.setLoading);\n      this.setLoading(false);\n    } else {\n      this.setLoading(false);\n    }\n\n    // LOADING APPLICATION SESSION ====================================\n    if (this.props.application_sessions === null) {\n      this.props.GetAllSessionPlans(\n        (status: boolean, msg: string, data?: SessionPlanInterface[]) => {\n          if (!status) {\n            this.setLoadingSession(false);\n            if (msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data && data.length > 0) {\n              // SETTING ACTIVE SESSION ==========================\n              if (this.state.thisPeriod === null) {\n                this.setSession(data);\n              }\n            }\n          }\n        }\n      );\n    } else {\n      this.setSession(this.props.application_sessions);\n      this.setLoadingSession(false);\n    }\n\n    if (!this.props.documentReducer.documentCategory) {\n      this.props.getDocumentCategory();\n      this.setLoading(false);\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n    if (!this.props.documentReducer.documentSubCategory && this.state.loading) {\n      this.props.getDocumentSubCategory();\n      this.setLoading(false);\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n\n    if (!this.props.documentReducer.documentFields && this.state.loading) {\n      this.props.getDocumentFields();\n      this.setLoading(false);\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n\n    if (this.props.claiming.myPlacement === null) {\n      this.props.getMyPlacement(\n        this.props.auth.user.user_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          }\n        }\n      );\n    }\n  };\n\n  isDeleteAllowed = (thisCLaim: CandidateClaimInterface): boolean => {\n    if (!isClaimEvaluated(thisCLaim, 1)) {\n      return true;\n    }\n    return false;\n  };\n\n  onPeriodChange = (period_id: string) => {\n    this.setPeriodChanged(true);\n    this.props.getMyClaims(\n      this.props.auth.user.user_id,\n      period_id,\n      (status: boolean, msg: string) => {\n        this.setLoadingRequest(status);\n        !status && this.setPeriodChanged(false);\n        if (status === false && msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      }\n    );\n  };\n\n  render() {\n    if (this.props.application_sessions === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    if (this.props.application_sessions.length === 0) {\n      return (\n        <div className=\"bg-yellow-100 rounded flex flex-col items-center justify-center p-6 my-8 text-yellow-900 border border-yellow-900\">\n          <MdInfoOutline className=\"text-6xl md:text-9xl\" />\n          <div className=\"text-center flex flex-col\">\n            <span className=\"text-2xl md:text-4xl font-extrabold\">\n              No active session\n            </span>\n            <span className=\"text-lg\">\n              Please Wait for the system to publish the sessions or contact the\n              administrator\n            </span>\n          </div>\n        </div>\n      );\n    }\n\n    if (this.props.claiming.myClaims === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {/* SIDE NAVIGATION */}\n        {!this.state.viewClaim && (\n          <SideNavigation>\n            <button\n              className=\"btn mb-3 border-2 border-blue-500 hover:bg-blue-500 hover:text-white flex items-center flex-1 font-bold w-full focus:outline-none\"\n              onClick={() => {\n                this.setClaimForm(true);\n                // alert(\"clicked\");\n              }}\n              disabled={\n                this.state.viewClaim ||\n                this.state.loading ||\n                this.state.loadingRequest\n              }\n            >\n              <MdAdd className=\"inline-block mr-1 text-xl font-bold\" />\n              <span>Claiming</span>\n            </button>\n\n            {/* FILTER SECTION */}\n            <FilterByType loadingClaims={this.state.loadingRequest} />\n            {/* END FILTER SECTION */}\n          </SideNavigation>\n        )}\n        {/* END SIDE NAVIGATION */}\n\n        {/* ------------------------------------------------------------------- */}\n\n        {/* CLAIM TITLE ===================================== */}\n        {!this.state.viewClaim && (\n          <ClaimHeaderTitle\n            headerTitle={`${\n              this.props.claiming.selectedClaimType === \"all\"\n                ? \"All\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION\n                ? \"Documents\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.APPLICATION\n                ? \"Applications\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.EXAMINATION\n                ? \"Exam\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.MARKS_PUBLICATION\n                ? \"Marks publication\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.PLACEMENT_TRANSFER\n                ? \"Placements\"\n                : \"\"\n            } Claiming`}\n            loading={this.state.loading}\n            loadingSession={this.state.loadingSession}\n            thisPeriod={this.state.thisPeriod}\n            setThisPeriod={this.setThisPeriod}\n            setLoadingSession={this.setLoadingSession}\n            application_sessions={this.props.application_sessions}\n            onPeriodChange={this.onPeriodChange}\n            periodChanged={this.state.periodChanged}\n          />\n        )}\n        {/* END CLAIM TITLE ===================================== */}\n\n        {/* ----------------------------------------------------------------------- */}\n\n        {!this.state.viewClaim && (\n          <section className=\"bg-white w-full p-1\">\n            {/* FILTER FORM =================================== */}\n            <section className=\"flex flex-col-reverse sm:flex-row items-center gap-2 w-full my-2\">\n              <div className=\"w-full\">\n                <input\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                    this.setSearchClaim(e.target.value)\n                  }\n                  type=\"text\"\n                  className=\"input-white h-10 text-sm border-2 border-gray-400 focus:border-gray-500 w-full\"\n                  placeholder={`Search claim by title or type`}\n                  value={this.state.searchClaim}\n                  disabled={\n                    filterClaimsByClaimType(\n                      this.props.claiming.myClaims,\n                      this.props.claiming.selectedClaimType\n                    ).length > 0\n                      ? false\n                      : true\n                  }\n                />\n              </div>\n            </section>\n            {/* END FILTER FORM =================================== */}\n            <table className=\"w-full shadow\" id=\"report_content\">\n              <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                <tr>\n                  <td className=\"px-2 py-2\">#</td>\n                  <td className=\"px-2 py-2\">Claim title</td>\n                  {this.props.claiming.selectedClaimType === \"all\" && (\n                    <td className=\"px-2 py-2\">Claim type</td>\n                  )}\n                  <td className=\"px-2 py-2\">Claim level</td>\n                  <td className=\"px-2 py-2\">Claim status</td>\n                  <td className=\"px-2 py-2\"></td>\n                </tr>\n              </thead>\n              <tbody>\n                {filterClaimsByClaimType(\n                  this.props.claiming.myClaims,\n                  this.props.claiming.selectedClaimType\n                ).length <= 0 ? (\n                  <tr\n                    className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                    key=\"key3201\"\n                  >\n                    <td className=\"px-3 py-1\" colSpan={4}>\n                      <NoResult\n                        theme={NoResultThemes.Light}\n                        value={\"No claim found!\"}\n                      />\n                    </td>\n                  </tr>\n                ) : search(\n                    filterClaimsByClaimType(\n                      this.props.claiming.myClaims,\n                      this.props.claiming.selectedClaimType\n                    ),\n                    this.state.searchClaim\n                  ).length <= 0 ? (\n                  <tr\n                    className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                    key=\"key3201\"\n                  >\n                    <td className=\"px-3 py-1\" colSpan={4}>\n                      <NoResult\n                        theme={NoResultThemes.Light}\n                        value={\"Nothing found!\"}\n                      />\n                    </td>\n                  </tr>\n                ) : (\n                  search(\n                    filterClaimsByClaimType(\n                      this.props.claiming.myClaims,\n                      this.props.claiming.selectedClaimType\n                    ),\n                    this.state.searchClaim\n                  ).map((claim: CandidateClaimInterface, index) => (\n                    <tr\n                      className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                      key={index + claim._id}\n                      onClick={() => {\n                        this.setViewClaim(true);\n                        this.setClaimId(claim._id);\n                      }}\n                    >\n                      <td className=\"px-3 py-1 whitespace-nowrap\">\n                        {index + 1}\n                      </td>\n                      <td className=\"px-3 py-1 whitespace-nowrap\">\n                        {claim.title}\n                      </td>\n                      {this.props.claiming.selectedClaimType === \"all\" && (\n                        <td className=\"px-3 py-1 whitespace-nowrap\">\n                          {whichClaimType(claim)\n                            ? capitalizeFirstLetter(whichClaimType(claim)!)\n                            : \"-\"}\n                        </td>\n                      )}\n                      <td className=\"px-3 py-1 whitespace-nowrap italic\">\n                        Level {claim.claim_level}\n                      </td>\n                      <td className=\"px-3 py-1 whitespace-nowrap\">\n                        <span\n                          className={`inline-block rounded-full duration-300 text-xs font-semibold px-3 py-1 ${\n                            whichClaimStatus(claim).classes\n                          }`}\n                        >\n                          {whichClaimStatus(claim).status}\n                        </span>\n                      </td>\n                      <td className=\"px-3 py-1 text-center whitespace-nowrap\">\n                        <button className=\"btn bg-blue-500 text-white group-hover:bg-blue-600\">\n                          View\n                        </button>\n                      </td>\n                    </tr>\n                  ))\n                )}\n              </tbody>\n            </table>\n          </section>\n        )}\n\n        {/* ----------------------------------------------------------------------- */}\n\n        {this.state.viewClaim &&\n          this.props.claiming.myClaims &&\n          this.state.claimId &&\n          getClaimById(this.props.claiming.myClaims, this.state.claimId) && (\n            <section className=\"bg-white w-full p-1 my-4\">\n              {/* VIEW CLAIM HEADER =============================== */}\n              <section className=\"flex items-center gap-2 py-2 border-b\">\n                <button\n                  className={`ml-3 bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n                    this.state.loadingRequest\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } animate__animated animate__fadeIn`}\n                  disabled={this.state.loadingRequest}\n                  onClick={() => {\n                    this.setViewClaim(false);\n                    this.setViewImage(false);\n                    this.setLoadingRequest(false);\n                    this.setFormError(null);\n                    this.setReClaiming(false);\n                    this.setReClaimingMsg(\"\");\n                  }}\n                >\n                  <MdArrowBack className=\"w-7 h-7\" />\n                </button>\n                {this.isDeleteAllowed(\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!\n                ) && (\n                  <button\n                    className={`bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n                      this.state.loadingRequest\n                        ? \"cursor-not-allowed\"\n                        : \"cursor-pointer\"\n                    } animate__animated animate__fadeIn hidden`}\n                    disabled={this.state.loadingRequest}\n                    // onClick={() => {\n                    //   this.handleDelete();\n                    // }}\n                  >\n                    <MdDelete className=\"w-7 h-7\" />\n                  </button>\n                )}\n              </section>\n              {/* END VIEW CLAIM HEADER =============================== */}\n              <section className=\"my-2\">\n                {/* VIEWING CLAIM OF A DOCUMENT ===================== */}\n                {getClaimById(this.props.claiming.myClaims, this.state.claimId)!\n                  .type_key === PlansTypeKeys.DOCUMENT_VALIDATION &&\n                this.props.claiming.candidateDocuments &&\n                getDocumentById(\n                  this.props.claiming.candidateDocuments,\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.claiming_on_id\n                ) ? (\n                  <ClaimDocView\n                    thisDoc={\n                      getDocumentById(\n                        this.props.claiming.candidateDocuments,\n                        getClaimById(\n                          this.props.claiming.myClaims,\n                          this.state.claimId\n                        )!.claiming_on_id\n                      )!\n                    }\n                    documentCategories={this.props.documentReducer}\n                    thisClaim={\n                      getClaimById(\n                        this.props.claiming.myClaims,\n                        this.state.claimId\n                      )!\n                    }\n                    viewImage={this.state.viewImage}\n                    setViewImage={this.setViewImage}\n                    loadingRequest={this.state.loadingRequest}\n                    setLoadingRequest={this.setLoadingRequest}\n                    reClaiming={this.state.reClaiming}\n                    setReClaiming={this.setReClaiming}\n                    reClaimingMsg={this.state.reClaimingMsg}\n                    setReClaimingMsg={this.setReClaimingMsg}\n                    formError={this.state.formError}\n                    setFormError={this.setFormError}\n                    claimReasons={this.props.claiming.claimReasons}\n                  />\n                ) : (\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.type_key === PlansTypeKeys.DOCUMENT_VALIDATION && (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"Document not found\"}\n                    />\n                  )\n                )}\n                {/* END VIEWING CLAIM OF A DOCUMENT ===================== */}\n\n                {/* ############################################################### */}\n\n                {/* VIEWING CLAIM OF AN APPLICATION ===================== */}\n                {getClaimById(this.props.claiming.myClaims, this.state.claimId)!\n                  .type_key === PlansTypeKeys.APPLICATION &&\n                this.props.claiming.candidateApplications &&\n                getApplicationById(\n                  this.props.claiming.candidateApplications,\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.claiming_on_id\n                ) ? (\n                  <ClaimApplView\n                    thisApplication={\n                      getApplicationById(\n                        this.props.claiming.candidateApplications,\n                        getClaimById(\n                          this.props.claiming.myClaims,\n                          this.state.claimId\n                        )!.claiming_on_id\n                      )!\n                    }\n                    documentCategories={this.props.documentReducer}\n                    thisClaim={\n                      getClaimById(\n                        this.props.claiming.myClaims,\n                        this.state.claimId\n                      )!\n                    }\n                    viewPosition={this.state.viewImage}\n                    setViewPosition={this.setViewImage}\n                    loadingRequest={this.state.loadingRequest}\n                    setLoadingRequest={this.setLoadingRequest}\n                    reClaiming={this.state.reClaiming}\n                    setReClaiming={this.setReClaiming}\n                    reClaimingMsg={this.state.reClaimingMsg}\n                    setReClaimingMsg={this.setReClaimingMsg}\n                    formError={this.state.formError}\n                    setFormError={this.setFormError}\n                    claimReasons={this.props.claiming.claimReasons}\n                  />\n                ) : (\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.type_key === PlansTypeKeys.APPLICATION && (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"Application not found\"}\n                    />\n                  )\n                )}\n                {/* END VIEWING CLAIM OF AN APPLICATION ===================== */}\n\n                {/* VIEWING CLAIM OF AN EXAM ===================== */}\n                {getClaimById(this.props.claiming.myClaims, this.state.claimId)!\n                  .type_key === PlansTypeKeys.EXAMINATION &&\n                this.props.claiming.myAnswer &&\n                this.props.courses &&\n                getCourseIdBySheetId(\n                  this.props.claiming.myAnswer,\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.claiming_on_id\n                ) &&\n                getCourseById(\n                  this.props.courses,\n                  getCourseIdBySheetId(\n                    this.props.claiming.myAnswer,\n                    getClaimById(\n                      this.props.claiming.myClaims,\n                      this.state.claimId\n                    )!.claiming_on_id\n                  )!.course\n                ) ? (\n                  <ClaimExamView\n                    thisExam={\n                      getCourseById(\n                        this.props.courses,\n                        getCourseIdBySheetId(\n                          this.props.claiming.myAnswer,\n                          getClaimById(\n                            this.props.claiming.myClaims,\n                            this.state.claimId\n                          )!.claiming_on_id\n                        )!.course\n                      )!\n                    }\n                    thisClaim={\n                      getClaimById(\n                        this.props.claiming.myClaims,\n                        this.state.claimId\n                      )!\n                    }\n                    viewPosition={this.state.viewImage}\n                    setViewPosition={this.setViewImage}\n                    loadingRequest={this.state.loadingRequest}\n                    setLoadingRequest={this.setLoadingRequest}\n                    reClaiming={this.state.reClaiming}\n                    setReClaiming={this.setReClaiming}\n                    reClaimingMsg={this.state.reClaimingMsg}\n                    setReClaimingMsg={this.setReClaimingMsg}\n                    formError={this.state.formError}\n                    setFormError={this.setFormError}\n                    thisExamSheet={\n                      getCourseIdBySheetId(\n                        this.props.claiming.myAnswer,\n                        getClaimById(\n                          this.props.claiming.myClaims,\n                          this.state.claimId\n                        )!.claiming_on_id\n                      )!\n                    }\n                    claimReasons={this.props.claiming.claimReasons}\n                  />\n                ) : (\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.type_key === PlansTypeKeys.EXAMINATION && (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"Exam not found\"}\n                    />\n                  )\n                )}\n                {/* END VIEWING CLAIM OF AN EXAM ===================== */}\n\n                {/* ----------------------------------------------------------- */}\n                {/* VIEWING CLAIM OF A DOCUMENT ===================== */}\n                {getClaimById(this.props.claiming.myClaims, this.state.claimId)!\n                  .type_key === PlansTypeKeys.PLACEMENT_TRANSFER &&\n                this.props.claiming.myPlacement ? (\n                  <ClaimPlacementView\n                    thisClaim={\n                      getClaimById(\n                        this.props.claiming.myClaims,\n                        this.state.claimId\n                      )!\n                    }\n                    loadingRequest={this.state.loadingRequest}\n                    setLoadingRequest={this.setLoadingRequest}\n                    reClaiming={this.state.reClaiming}\n                    setReClaiming={this.setReClaiming}\n                    reClaimingMsg={this.state.reClaimingMsg}\n                    setReClaimingMsg={this.setReClaimingMsg}\n                    formError={this.state.formError}\n                    setFormError={this.setFormError}\n                    myPlacement={this.props.claiming.myPlacement}\n                  />\n                ) : (\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.type_key === PlansTypeKeys.PLACEMENT_TRANSFER && (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"Placement not found\"}\n                    />\n                  )\n                )}\n                {/* END VIEWING CLAIM OF A DOCUMENT ===================== */}\n              </section>\n            </section>\n          )}\n        {/* end view claim */}\n\n        {/* ----------------------------------------------------------------------- */}\n        {/* CLAIM FORM  ################ */}\n        {this.state.claimForm && (\n          <ClaimForm\n            formState={this.state.claimForm}\n            setFormState={this.setClaimForm}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  sessionPlan,\n  claiming,\n  document,\n  course,\n}: StoreState): {\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  application_sessions: SessionPlanInterface[] | null;\n  documentReducer: DocumentReducerInterface;\n  courses: course[] | null;\n} => {\n  return {\n    auth: auth,\n    claiming,\n    application_sessions: sessionPlan.allSessionPlans,\n    documentReducer: document,\n    courses: course.courses,\n  };\n};\n\nexport const CandidateClaim = connect(mapStateToProps, {\n  getMyClaims,\n  GetAllSessionPlans,\n  getClaimReasons,\n  loadCourses,\n  getMyPlacement,\n  getMyAnswers,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  PushPopupAlert,\n})(Index);\n","import axios from \"axios\";\nimport React from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdInfoOutline, MdTurnedIn } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { createReClaim } from \"../../actions/claiming\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimDecisionStatus,\n  claimReasonInterface,\n  ClaimStatus,\n} from \"../../interfaces\";\nimport { ApplicationStates } from \"../../interfaces/application\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { DocumentReducerInterface } from \"../../reducers/document\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { DATE, errorToText, showDate } from \"../../utils/functions\";\nimport ViewRequirements from \"../Positions/ViewRequirements\";\nimport { FC_ApplicationPositionDistinctCategory } from \"./Candidate/ApplicationFormView\";\nimport { isClaimEvaluated } from \"./ClaimDocView\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\ntype ClaimDocViewProps = {\n  thisApplication: claimApplicationsInterface;\n  documentCategories: DocumentReducerInterface;\n  claimReasons: claimReasonInterface[] | null;\n  thisClaim: CandidateClaimInterface;\n  viewPosition: boolean;\n  setViewPosition: (value: boolean) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  reClaiming: boolean;\n  setReClaiming: (value: boolean) => void;\n  reClaimingMsg: string;\n  setReClaimingMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX DATA =====================\n  createReClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst ClaimDocView: React.FC<ClaimDocViewProps> = (props) => {\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim is required\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim._id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              {props.thisApplication.position.position_title}\n            </span>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewPosition(!props.viewPosition)}\n            >\n              {props.viewPosition ? \"Hide\" : \"More\"}\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisClaim.previous.status === ApplicationStates.Rejected\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } rounded px-3 py-1`}\n            >\n              {capitalizeFirstLetter(props.thisClaim.previous.status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {props.thisClaim.previous.evaluater.name}\n            </span>\n          </div>\n          {false && (\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Session:</span>\n              <span className=\"font-bold text-gray-900 py-1\">\n                {\n                  props.thisApplication.application_session\n                    .application_session_name\n                }\n              </span>\n            </div>\n          )}\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisApplication.createdAt)}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span\n              className=\"font-normal\"\n              dangerouslySetInnerHTML={{\n                __html: props.thisClaim.previous.reason,\n              }}\n            ></span>\n          </div>\n\n          {/* DISPLAY POSITION ==================================================== */}\n          {props.viewPosition && (\n            <div className=\"w-full my-1 animate__animated animate__fadeIn rounded\">\n              <div className=\"bg-white w-full\">\n                <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                  Position Details\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Desc:</span>\n                  <span className=\"font-semibold\">\n                    {props.thisApplication.position.description}\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>School level:</span>\n                  <span className=\"font-semibold\">\n                    {\n                      props.thisApplication.position.school_level_id\n                        .school_level_name\n                    }\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Institute:</span>\n                  <span className=\"font-semibold\">\n                    {\n                      props.thisApplication.position.education_institute_id\n                        .education_category_title\n                    }\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Courses:</span>\n                  <span className=\"flex items-center gap-2\">\n                    {props.thisApplication.position.courses.map(\n                      (item, index) => (\n                        <div\n                          key={index + item.course_id}\n                          className=\"flex items-center gap-1\"\n                        >\n                          <span className=\"font-semibold\">\n                            {item.course_name}\n                          </span>\n                          <span className=\"text-gray-600\">\n                            ({item.course_code})\n                          </span>\n                          {index !==\n                            props.thisApplication.position.courses.length - 1 &&\n                            \",\"}\n                        </div>\n                      )\n                    )}\n                  </span>\n                </div>\n\n                <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                  Position Requirements\n                </div>\n                {props.thisApplication.position.requirements.length > 0 ? (\n                  FC_ApplicationPositionDistinctCategory(\n                    props.thisApplication.position,\n                    props.documentCategories\n                  ).DistinctCategoriesTemp.map((item, index) => (\n                    <div\n                      className=\"bg-gray-100props.thisApplication.position rounded p-2\"\n                      key={index + item.category_id}\n                    >\n                      <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                        <MdTurnedIn />\n                        <span>{item.category_title}</span>\n                      </div>\n                      <div className=\"border bg-white mt-1\">\n                        <ViewRequirements\n                          requirements={FC_ApplicationPositionDistinctCategory(\n                            props.thisApplication.position,\n                            props.documentCategories\n                          ).PositionsTemp.filter(\n                            (req) => req.category_id === item.category_id\n                          )}\n                        />\n                      </div>\n                    </div>\n                  ))\n                ) : (\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"No requirements\"}\n                  ></NoResult>\n                )}\n              </div>\n            </div>\n          )}\n          {/* END DISPLAY POSITION ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt)}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-center justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <button\n                className=\"btn btn-blue\"\n                onClick={() => props.setReClaiming(true)}\n                disabled={props.loadingRequest}\n              >\n                Reclaim\n              </button>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your reclaim...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nexport default React.memo(connect(null, {\n  createReClaim,\n  PushPopupAlert,\n})(ClaimDocView));\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdInfoOutline } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport {\n  loadQuestionTypes,\n  PushPopupAlert,\n  questionTypesStoreInterface,\n} from \"../../actions\";\nimport { createReClaim } from \"../../actions/claiming\";\nimport CandidateAnswersDetails from \"../../components/AnswersDetails/CandidateAnswersDetails\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimExamResultsDetails,\n  claimReasonInterface,\n  ClaimStatus,\n  course,\n} from \"../../interfaces\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { errorToText, showDate } from \"../../utils/functions\";\nimport { claimShowAnswer } from \"./Candidate/ExaminationFormView\";\nimport { isClaimEvaluated } from \"./ClaimDocView\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\ntype ClaimDocViewProps = {\n  thisExam: course;\n  thisExamSheet: ClaimExamResultsDetails;\n  thisClaim: CandidateClaimInterface;\n  viewPosition: boolean;\n  claimReasons: claimReasonInterface[] | null;\n  setViewPosition: (value: boolean) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  reClaiming: boolean;\n  setReClaiming: (value: boolean) => void;\n  reClaimingMsg: string;\n  setReClaimingMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX DATA =====================\n  questionTypes: questionTypesStoreInterface;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  createReClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst ClaimDocView: React.FC<ClaimDocViewProps> = (props) => {\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (\n      props.questionTypes.questionTypes === null ||\n      (props.questionTypes.questionTypes.length === 0 && loading)\n    ) {\n      props.loadQuestionTypes(setLoading);\n    }\n  }, [loading, props]);\n\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim is required\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim._id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              Exam of {props.thisExam.course_name}{\" \"}\n            </span>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewPosition(!props.viewPosition)}\n            >\n              {props.viewPosition ? \"Hide\" : \"More\"}\n            </button>\n          </div>\n\n          {/* DISPLAY EXAM SHEET ==================================================== */}\n          {props.viewPosition && (\n            <div className=\"bg-white w-full rounded p-2 mb-2\">\n              <CandidateAnswersDetails\n                showAnswers={false}\n                exam_id={claimShowAnswer(\n                  props.thisExamSheet,\n                  props.thisExam.course_name\n                )}\n              />\n            </div>\n          )}\n          {/* END DISPLAY POSITION ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt)}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {loading ? (\n                          <div className=\"w-24 h-3 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n                        ) : (\n                          props.thisClaim.userDetails.user_info.fname +\n                          \" \" +\n                          props.thisClaim.userDetails.user_info.lname\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-center justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <button\n                className=\"btn btn-blue\"\n                onClick={() => props.setReClaiming(true)}\n                disabled={props.loadingRequest}\n              >\n                Reclaim\n              </button>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your reclaim...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  questionTypes,\n}: StoreState): {\n  questionTypes: questionTypesStoreInterface;\n} => {\n  return { questionTypes: questionTypes };\n};\n\nexport default React.memo(connect(mapStateToProps, {\n  loadQuestionTypes,\n  createReClaim,\n  PushPopupAlert,\n})(ClaimDocView));\n","import axios from \"axios\";\nimport React from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { createReClaim } from \"../../actions/claiming\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimStatus,\n} from \"../../interfaces\";\nimport { candidatePlacementInterface } from \"../../interfaces/placement\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { errorToText, showDate } from \"../../utils/functions\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nexport const isClaimEvaluated = (\n  thisClaim: CandidateClaimInterface,\n  level: number\n): boolean => {\n  const _thisClaim = thisClaim.claims.find(\n    (item) =>\n      item.level === level && item.claim_status === ClaimStatus.EVALUATED\n  );\n  if (_thisClaim) {\n    return true;\n  }\n  return false;\n};\n\ntype ClaimPlacementViewProps = {\n  myPlacement: candidatePlacementInterface;\n  thisClaim: CandidateClaimInterface;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  reClaiming: boolean;\n  setReClaiming: (value: boolean) => void;\n  reClaimingMsg: string;\n  setReClaimingMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX DATA =====================\n  createReClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst ClaimPlacementView: React.FC<ClaimPlacementViewProps> = (props) => {\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim sent successful\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim._id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>School:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.myPlacement.placed.school.school_name}\n              </span>\n            </div>\n          </div>\n          {/* <div className=\"flex items-center\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Position:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.myPlacement.placed.school.school_name}\n              </span>\n            </div>\n          </div> */}\n          <div className=\"flex items-center\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>District:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.myPlacement.placed.school.district_id.district_name}\n              </span>\n            </div>\n          </div>\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt)}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-center justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <button\n                className=\"btn btn-blue\"\n                onClick={() => props.setReClaiming(true)}\n                disabled={props.loadingRequest}\n              >\n                Reclaim\n              </button>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your reclaim...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nexport default React.memo(connect(null, {\n  createReClaim,\n  PushPopupAlert,\n})(ClaimPlacementView));\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport {\n  GetClaimingTypes,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  setSelectedClaimType,\n} from \"../../../actions/claiming\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport { MainItem } from \"../../../components/Navigation/SideNavigation\";\nimport { ClaimStatus, PlansTypeKeys } from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\n\ntype FilterByTypeProps = {\n  // thisClaimType: ClaimTypesInterface | \"ALL\";\n  // setThisClaimType: React.Dispatch<\n  //   React.SetStateAction<ClaimTypesInterface | \"ALL\">\n  // >;\n  loadingClaims: boolean;\n  FC_CountByType?: Function;\n\n  // REDUX PROPS =======================================\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  GetClaimingTypes: Function;\n  setSelectedClaimType: Function;\n  getMyRejectedApplications: Function;\n  getMyRejectedDocuments: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\nconst FilterByType: React.FC<FilterByTypeProps> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingRejectedApplications, setLoadingRejectedApplications] =\n    useState<boolean>(true);\n  const [loadingRejectedDocuments, setLoadingRejectedDocuments] =\n    useState<boolean>(true);\n  const [loadingClaimTypes, setLoadingClaimTypes] = useState<boolean>(true);\n\n  useEffect(() => {\n    if (props.claiming.candidateApplications === null) {\n      props.getMyRejectedApplications(\n        props.auth.user.user_id,\n        (status: boolean, msg: string) => {\n          if (status === false) {\n            if (msg.length > 0) {\n              props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            setLoadingRejectedApplications(false);\n          }\n        }\n      );\n    } else if (loadingRejectedApplications) {\n      setLoadingRejectedApplications(false);\n    }\n\n    if (props.claiming.candidateDocuments === null) {\n      console.log(\"filterrrrrrrrrrrrrrrrrrrr loadingRejectedDocuments\");\n      props.getMyRejectedDocuments((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          setLoadingRejectedDocuments(false);\n        }\n      });\n    } else if (loadingRejectedDocuments) {\n      setLoadingRejectedDocuments(false);\n    }\n\n    if (props.claiming.claimTypes === null) {\n      props.GetClaimingTypes((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          setLoadingClaimTypes(false);\n        }\n      });\n    } else if (loadingClaimTypes) {\n      setLoadingClaimTypes(false);\n    }\n\n    if (\n      !loadingRejectedApplications &&\n      !loadingRejectedDocuments &&\n      !loadingClaimTypes &&\n      loading\n    ) {\n      setLoading(false);\n    }\n  }, [\n    loading,\n    loadingClaimTypes,\n    loadingRejectedApplications,\n    loadingRejectedDocuments,\n    props,\n  ]);\n\n  const countClaims = (\n    claiming: ClaimingReducerType,\n    thisType: PlansTypeKeys | \"all\"\n  ): number => {\n    let result: number = 0;\n\n    if (claiming.myClaims && thisType === \"all\") {\n      result = claiming.myClaims.filter(\n        (item) =>\n          item.last_claim_status !== ClaimStatus.DELETED &&\n          item.last_claim_status !== ClaimStatus.COMPLETED\n      ).length;\n    }\n    if (claiming.myClaims && thisType !== \"all\") {\n      result = claiming.myClaims.filter(\n        (item) =>\n          item.type_key === thisType &&\n          item.last_claim_status !== ClaimStatus.DELETED &&\n          item.last_claim_status !== ClaimStatus.COMPLETED\n      ).length;\n    }\n\n    return result;\n  };\n\n  return (\n    <React.Fragment>\n      <span className=\"mt-2 text-sm\">Filter by claim type</span>\n      {/* WHILE LOADING DATA ================================== */}\n      {(loading || props.loadingClaims) && (\n        <section className=\"space-y-2\">\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </section>\n      )}\n      {/* END WHILE LOADING DATA ================================== */}\n\n      {/* AFTER LOADING DATA ================================== */}\n      {!loading && !props.loadingClaims && (\n        <section>\n          {/* ALL ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(\"ALL\");\n              props.setSelectedClaimType(\"all\");\n            }}\n          >\n            <MainItem\n              title=\"All\"\n              active={props.claiming.selectedClaimType === \"all\"}\n              count={countClaims(props.claiming, \"all\")}\n            />\n          </div>\n          {/* APPLICATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(ClaimTypesInterface.DOCUMENT);\n              props.setSelectedClaimType(PlansTypeKeys.APPLICATION);\n            }}\n          >\n            <MainItem\n              title={\"Application\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.APPLICATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.APPLICATION)}\n            />\n          </div>\n          {/* DOCUMENT ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.DOCUMENT_VALIDATION);\n            }}\n          >\n            <MainItem\n              title={\"Document\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION\n              }\n              count={countClaims(\n                props.claiming,\n                PlansTypeKeys.DOCUMENT_VALIDATION\n              )}\n            />\n          </div>\n          {/* EXAMINATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.EXAMINATION);\n            }}\n          >\n            <MainItem\n              title={\"Exam\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.EXAMINATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.EXAMINATION)}\n            />\n          </div>\n          {/* PLACEMENT TRANSFER ================================= */}\n          {false && (\n            <div\n              className=\"mt-2\"\n              onClick={() => {\n                props.setSelectedClaimType(PlansTypeKeys.PLACEMENT_TRANSFER);\n              }}\n            >\n              <MainItem\n                title={\"Placement\"}\n                active={\n                  props.claiming.selectedClaimType !== \"all\" &&\n                  props.claiming.selectedClaimType ===\n                    PlansTypeKeys.PLACEMENT_TRANSFER\n                }\n                count={countClaims(\n                  props.claiming,\n                  PlansTypeKeys.PLACEMENT_TRANSFER\n                )}\n              />\n            </div>\n          )}\n          {/* <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setThisClaimType(ClaimTypesInterface.APPLICATION);\n            }}\n          >\n            <MainItem\n              title={capitalizeFirstLetter(ClaimTypesInterface.APPLICATION)}\n              active={props.thisClaimType === ClaimTypesInterface.APPLICATION}\n              count={countClaims(props.claiming).applications}\n            />\n          </div>\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setThisClaimType(ClaimTypesInterface.PLACEMENT);\n            }}\n          >\n            <MainItem\n              title={capitalizeFirstLetter(ClaimTypesInterface.PLACEMENT)}\n              active={props.thisClaimType === ClaimTypesInterface.PLACEMENT}\n              count={countClaims(props.claiming).placement}\n            />\n          </div> */}\n        </section>\n      )}\n      {/* END AFTER LOADING DATA ================================== */}\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  claiming,\n}: StoreState): { auth: Auth; claiming: ClaimingReducerType } => {\n  return { auth, claiming };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    GetClaimingTypes,\n    setSelectedClaimType,\n    getMyRejectedApplications,\n    getMyRejectedDocuments,\n    PushPopupAlert,\n  })(FilterByType)\n);\n","import React, { useEffect, useState } from \"react\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\n\ntype ViewPDFProps = {\n  file_url: string;\n  class_name: string;\n  frame_title: string;\n  setLoadingFile: (state: boolean) => void;\n};\n\nconst ViewPDF: React.FC<ViewPDFProps> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<{ element: string; msg: string } | null>(\n    null\n  );\n  useEffect(() => {\n    if (loading) {\n      if (isEmptyOrSpaces(props.file_url)) {\n        setError({ element: \"PDF_FILE\", msg: \"File url is required\" });\n      } else if (error !== null) {\n        setError(null);\n      }\n      setLoading(false);\n    }\n  }, [error, loading, props.file_url]);\n\n  return (\n    <div className=\"w-full\">\n      {error ? (\n        <div className=\"alert-warning mt-2 mx-14\">{error.msg}</div>\n      ) : (\n        <object\n          data={props.file_url}\n          type=\"application/pdf\"\n          className={props.class_name}\n          onLoad={() => props.setLoadingFile(false)}\n        >\n          <iframe\n            src={props.file_url}\n            className={props.class_name}\n            title={props.frame_title}\n            onLoad={() => props.setLoadingFile(false)}\n          >\n            <p>This browser does not support PDF!</p>\n          </iframe>\n        </object>\n      )}\n    </div>\n  );\n};\n\nexport default ViewPDF;\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { BiExport, BiSort } from \"react-icons/bi\";\nimport { FiEdit } from \"react-icons/fi\";\nimport { ImFilesEmpty } from \"react-icons/im\";\nimport {\n  MdCheckBox,\n  MdCheckBoxOutlineBlank,\n  MdHistory,\n  MdRadioButtonChecked,\n  MdRadioButtonUnchecked,\n} from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadEducationCategories,\n  PushPopupAlert,\n  schoolLevelsStoreInterface,\n} from \"../../../actions\";\nimport {\n  getAllClaims,\n  getAllApplications,\n  setSelectedClaimType,\n  GetClaimingTypes,\n} from \"../../../actions/claiming\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport {\n  generatePDF,\n  reportSettingsInterface,\n} from \"../../../components/DownloadPDF/rest\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport {\n  SideNavigation,\n  MainItem,\n} from \"../../../components/Navigation/SideNavigation\";\nimport {\n  CandidateClaimInterface,\n  claimReportContentInterface,\n  claimReportContentKeyInterface,\n  ClaimToPrintInterface,\n} from \"../../../interfaces/claimings\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport ExportToExcel from \"../../../utils/ExportToExcel\";\nimport { DATE, sortThisArray } from \"../../../utils/functions\";\nimport { ClaimTypesEnum, whichClaimType } from \"../../Claimings/Candidate\";\nimport TableLoading from \"../../../components/Loading/TableLoading\";\nimport {\n  education_category,\n  PlansTypeKeys,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport ChooseSession from \"../../SessionSettings/ChooseSession\";\nimport NoSession from \"../../SessionSettings/NoSession\";\n\nexport const reportClaimType = (\n  type: PlansTypeKeys | \"all\"\n): ClaimTypesEnum | \"all\" => {\n  let result: ClaimTypesEnum | \"all\" = \"all\";\n  switch (type) {\n    case PlansTypeKeys.APPLICATION:\n      result = ClaimTypesEnum.application;\n      break;\n    case PlansTypeKeys.DOCUMENT_VALIDATION:\n      result = ClaimTypesEnum.document;\n      break;\n    case PlansTypeKeys.EXAMINATION:\n      result = ClaimTypesEnum.exam;\n      break;\n    case PlansTypeKeys.MARKS_PUBLICATION:\n      result = ClaimTypesEnum.marks_publication;\n      break;\n    case PlansTypeKeys.PLACEMENT_TRANSFER:\n      result = ClaimTypesEnum.placement;\n      break;\n    default:\n      result = \"all\";\n      break;\n  }\n\n  return result;\n};\n\nconst searchData = (\n  objList: ClaimToPrintInterface[],\n  text: string\n): ClaimToPrintInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (\n        prop === \"names\" ||\n        prop === \"gender\" ||\n        prop === \"national_id\" ||\n        prop === \"phone\" ||\n        prop === \"email\" ||\n        prop === \"claim_title\" ||\n        prop === \"claim_type\" ||\n        prop === \"claim_level\" ||\n        prop === \"education_category\" ||\n        prop === \"claim_session\" ||\n        prop === \"date\" ||\n        prop === \"decision\"\n      ) {\n        if (product[prop]) {\n          flag =\n            product[prop]!.toString()\n              .toLowerCase()\n              .indexOf(text.toLowerCase()) > -1;\n        }\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n};\n\nconst defaultReportContent: claimReportContentInterface[] = [\n  {\n    key: claimReportContentKeyInterface.names,\n    title: \"Applicant Names\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.national_id,\n    title: \"National ID\",\n    status: true,\n  },\n  { key: claimReportContentKeyInterface.gender, title: \"Gender\", status: true },\n  { key: claimReportContentKeyInterface.phone, title: \"Phone\", status: true },\n  {\n    key: claimReportContentKeyInterface.claim_session,\n    title: \"Claim Session\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.education_category,\n    title: \"Education Institute\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.date,\n    title: \"Claim Date\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.decision,\n    title: \"Decision\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.claim_title,\n    title: \"Claim Title\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.claim_type,\n    title: \"Claim Type\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.claim_level,\n    title: \"Claim Level\",\n    status: true,\n  },\n];\n\ntype AppProps = {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  // systemPositions: PositionAPI[] | null;\n  // courses: course[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  // loadCourses: Function;\n  // getAllAnswers: Function;\n  setSelectedClaimType: Function;\n  // getPositions: Function;\n  getAllClaims: Function;\n  GetClaimingTypes: Function;\n  // getAllApplications: Function;\n  GetAllSessionPlans: Function;\n  // getDocumentCategory: Function;\n  // getDocumentSubCategory: Function;\n  // getDocumentFields: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\nconst _ClaimingReport: React.FC<AppProps> = (props) => {\n  const [thisPeriod, setThisPeriod] = useState<SessionPlanInterface | null>(\n    null\n  );\n  const [thisLevel, setThisLevel] = useState<number | \"all\">(\"all\");\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingSession, setLoadingSession] = useState<boolean>(true);\n  const [periodChanged, setPeriodChanged] = useState<boolean>(false);\n  const [loadingClaims, setLoadingClaims] = useState<boolean>(true);\n  const [loadingInstitutes, setLoadingInstitutes] = useState<boolean>(true);\n  const [downloading, setDownloading] = useState<boolean>(false);\n  const [claimToPrint, setClaimToPrint] = useState<\n    ClaimToPrintInterface[] | null\n  >();\n\n  const [sortProperty, setSortProperty] = useState<string>(\"\");\n  const [isSorted, setIsSorted] = useState<boolean>(false);\n  const [sortOrder, setSortOrder] = useState<\"ASC\" | \"DESC\">(\"ASC\");\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const [generateReportModal, setGenerateReportModal] = useState<{\n    reportType: \"EXCEL\" | \"PDF\";\n    status: boolean;\n  } | null>(null);\n  const [reportTitle, setReportTitle] = useState<string>(\"\");\n  const [reportContent, setReportContent] =\n    useState<claimReportContentInterface[]>(defaultReportContent);\n  const [selectAll, setSelectAll] = useState<boolean>(true);\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [selectPeriod, setSelectPeriod] = useState<boolean>(false);\n  const [thisEducation, setThisEducation] = useState<\n    education_category | \"all\"\n  >(\"all\");\n\n  useEffect(() => {\n    // LOADING EDUCATION CATEGORY =================================\n    if (\n      props.schoolLevels.education_categories === null ||\n      props.schoolLevels.education_categories.length === 0\n    ) {\n      props.loadEducationCategories(setLoadingInstitutes);\n    } else {\n      setLoadingInstitutes(false);\n    }\n    // END LOADING EDUCATION CATEGORY =================================\n    // LOADING CLAIM TYPES ========================================\n    if (props.claiming.claimTypes === null) {\n      props.GetClaimingTypes((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n    // END LOADING CLAIM TYPES ========================================\n    // LOADING APPLICATION SESSION ====================================\n    if (props.application_sessions === null) {\n      props.GetAllSessionPlans((status: boolean, msg: string) => {\n        if (!status) {\n          setLoadingSession(false);\n          setLoading(false);\n          if (msg.length) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    } else if (loadingSession) {\n      setLoading(false);\n      setLoadingSession(false);\n    }\n\n    // SETTING ACTIVE SESSION ==========================\n    if (\n      thisPeriod === null &&\n      !loadingSession &&\n      props.application_sessions &&\n      props.application_sessions.length > 0\n    ) {\n      let thisSession = props.application_sessions.find(\n        (item) => item.is_active === true\n      );\n      setThisPeriod(thisSession ? thisSession : props.application_sessions[0]);\n      // if (props.claiming.allAnswer === null) {\n      //   props.getAllAnswers(\n      //     thisSession\n      //       ? thisSession.session_plan_id\n      //       : props.application_sessions[0].session_plan_id,\n      //     (status: boolean, msg: string) => {\n      //       setLoading(status);\n      //       if (!status && msg.length) {\n      //         props.PushPopupAlert({\n      //           title: msg,\n      //           theme: PopupAlertTheme.danger,\n      //         });\n      //       }\n      //     }\n      //   );\n      // }\n    }\n\n    // LOADING DOCUMENT CATEGORIES ==========================\n    // if (!props.documentReducer.documentCategory && loadingDocuments) {\n    //   props.getDocumentCategory();\n    //   setLoadingDocuments(false);\n    // } else if (loadingDocuments) {\n    //   setLoadingDocuments(false);\n    // }\n    // LOADING DOCUMENT CLARIFICATIONS ==========================\n    // if (!props.documentReducer.documentSubCategory && loadingClarifications) {\n    //   props.getDocumentSubCategory();\n    //   setLoadingClarifications(false);\n    // } else if (loadingClarifications) {\n    //   setLoadingClarifications(false);\n    // }\n    // LOADING DOCUMENT FIELDS ==========================\n    // if (!props.documentReducer.documentFields && loadingFields) {\n    //   props.getDocumentFields();\n    //   setLoadingFields(false);\n    // } else if (loadingFields) {\n    //   setLoadingFields(false);\n    // }\n\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (props.claiming.allClaims === null && thisPeriod !== null) {\n      props.getAllClaims(\n        2,\n        thisPeriod.session_plan_id,\n        (status: boolean, msg: string) => {\n          !status && setLoadingClaims(status);\n          if (status === false && msg.length) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    } else if (thisPeriod && loadingClaims) {\n      setLoadingClaims(false);\n    }\n\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    // if (props.claiming.allApplications === null && thisPeriod !== null) {\n    //   props.getAllApplications(\n    //     thisPeriod.session_plan_id,\n    //     (status: boolean, msg: string) => {\n    //       !status && setLoadingApplications(status);\n    //       if (status === false && msg.length) {\n    //         props.PushPopupAlert({\n    //           title: msg,\n    //           theme: PopupAlertTheme.danger,\n    //         });\n    //       }\n    //     }\n    //   );\n    // } else if (thisPeriod && loadingApplications) {\n    //   setLoadingApplications(false);\n    // }\n\n    // if (props.systemPositions === null) {\n    //   props.getPositions((status: boolean, msg: string) => {\n    //     setLoadingPosition(status);\n    //     console.log({ status: status, msg: msg });\n    //     if (msg.length) {\n    //       props.PushPopupAlert({\n    //         title: msg,\n    //         theme: PopupAlertTheme.danger,\n    //       });\n    //     }\n    //   });\n    // } else if (loadingPosition) {\n    //   setLoadingPosition(false);\n    // }\n\n    // LOADING COURSE ====================================\n    // if (\n    //   props.courses === null ||\n    //   (props.courses.length === 0 && loadingCourses)\n    // ) {\n    //   props.loadCourses(setLoadingCourses);\n    // } else if (loadingCourses) {\n    //   setLoadingCourses(false);\n    // }\n  }, [loadingClaims, loadingSession, props, thisPeriod]);\n\n  if (loading === true) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading Data...\n      </div>\n    );\n  }\n\n  if (props.application_sessions && props.application_sessions.length === 0) {\n    return <NoSession />;\n  }\n\n  // const displayClaimTitle = (thisClaim: CandidateClaimInterface): string => {\n  //   let result: string = thisClaim.claiming_on_id;\n  //   if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n  //     result =\n  //       thisClaim.userDetails.details.filter(\n  //         (item) => item.validation_status !== \"waiting\"\n  //       ).length > 0\n  //         ? adminDisplayClaimTitle(\n  //             props.documentReducer,\n  //             thisClaim.userDetails.details.filter(\n  //               (item) => item.validation_status !== \"waiting\"\n  //             ),\n  //             thisClaim\n  //           )\n  //         : \"Document not found\";\n  //   }\n  //   if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n  //     if (props.claiming.allApplications) {\n  //       let thisApplication = props.claiming.allApplications.find(\n  //         (item) => item._id === thisClaim.claiming_on_id\n  //       );\n  //       if (\n  //         thisApplication &&\n  //         props.claiming.allApplications &&\n  //         props.systemPositions\n  //       ) {\n  //         let thisPosition = props.systemPositions.find(\n  //           (item) => item.position_id === thisApplication!.position\n  //         );\n  //         if (thisPosition) {\n  //           result = thisPosition.position_title;\n  //         } else {\n  //           result = \"Application not found\";\n  //         }\n  //       }\n  //     }\n  //   }\n\n  //   if (\n  //     thisClaim.type_key === PlansTypeKeys.EXAMINATION &&\n  //     props.courses &&\n  //     props.claiming.allAnswer\n  //   ) {\n  //     let thisAnswer = getCourseIdBySheetId(\n  //       props.claiming.allAnswer,\n  //       thisClaim.claiming_on_id\n  //     );\n  //     if (thisAnswer && getCourseById(props.courses, thisAnswer.course)) {\n  //       result =\n  //         \"Exam of \" +\n  //         getCourseById(props.courses, thisAnswer.course)!.course_name;\n  //     } else {\n  //       result = \"Unknown exam\";\n  //     }\n  //   }\n\n  //   return result;\n  // };\n\n  // const getClaimInstitute = (\n  //   thisClaim: CandidateClaimInterface\n  // ): string | null => {\n  //   if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n  //     return null;\n  //   }\n  //   // if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n  //   //   if (props.claiming.allApplications) {\n  //   //     let thisApplication = props.claiming.allApplications.find(\n  //   //       (item) => item._id === thisClaim.claiming_on_id\n  //   //     );\n  //   //     if (\n  //   //       thisApplication &&\n  //   //       props.claiming.allApplications &&\n  //   //       props.systemPositions\n  //   //     ) {\n  //   //       // return thisApplication.\n  //   //       let thisPosition = props.systemPositions.find(\n  //   //         (item) => item.position_id === thisApplication!.position\n  //   //       );\n  //   //       if (thisPosition) {\n  //   //         return thisPosition.education_institute_id.education_institute_id;\n  //   //       }\n  //   //     }\n  //   //   }\n  //   // }\n\n  //   return null;\n  // };\n\n  const onPeriodChange = (period_id: string) => {\n    setPeriodChanged(true);\n    props.getAllClaims(2, period_id, (status: boolean, msg: string) => {\n      !status && setPeriodChanged(false);\n      if (status === false && msg.length) {\n        props.PushPopupAlert({\n          title: msg,\n          theme: PopupAlertTheme.danger,\n        });\n      }\n    });\n  };\n\n  const isClaimTypeActive = (\n    selectedType: PlansTypeKeys | \"all\",\n    currentType: PlansTypeKeys | \"all\"\n  ): boolean => {\n    if (currentType === \"all\" && selectedType === \"all\") {\n      return true;\n    } else if (currentType !== \"all\" && selectedType !== \"all\") {\n      if (currentType === selectedType) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  const setSort = (thisProperty: string) => {\n    if (sortProperty === thisProperty && sortOrder === \"ASC\") {\n      setSortOrder(\"DESC\");\n    } else {\n      setSortOrder(\"ASC\");\n    }\n    setSortProperty(thisProperty);\n    setIsSorted(true);\n  };\n\n  const ClaimTypes = (\n    claims: ClaimToPrintInterface[]\n  ): {\n    title: string;\n    count: number;\n    type: PlansTypeKeys | \"all\";\n  }[] => {\n    let output: {\n      title: string;\n      count: number;\n      type: PlansTypeKeys | \"all\";\n    }[] = [{ title: \"All types\", count: claims.length, type: \"all\" }];\n\n    Object.values(PlansTypeKeys).forEach((PlansKey) => {\n      if (PlansKey !== PlansTypeKeys.MARKS_PUBLICATION) {\n        output.push({\n          title: capitalizeFirstLetter(reportClaimType(PlansKey)),\n          count:\n            claims.length > 0\n              ? claims.filter(\n                  (itm) => itm.claim_type === reportClaimType(PlansKey)\n                ).length\n              : 0,\n          type: PlansKey,\n        });\n      }\n    });\n\n    return output;\n  };\n\n  const ClaimLevels = (\n    claims: ClaimToPrintInterface[]\n  ): {\n    title: string;\n    count: number;\n    level: number | \"all\";\n  }[] => {\n    let output: {\n        title: string;\n        count: number;\n        level: number | \"all\";\n      }[] = [{ title: \"All levels\", count: claims.length, level: \"all\" }],\n      levels: number[] = [1, 2];\n    for (let i in levels) {\n      output.push({\n        title: \"Level \" + levels[i],\n        count: claims.filter((itm) => itm.claim_level === levels[i]).length,\n        level: levels[i],\n      });\n    }\n    return output;\n  };\n\n  const updateReportContent = (key: claimReportContentKeyInterface) => {\n    let index: number = reportContent.findIndex((item) => item.key === key);\n    let newArray: claimReportContentInterface[] = reportContent;\n    newArray[index].status = !newArray[index].status;\n    setReportContent(newArray);\n    let isSelectAllNeeded = newArray.find((item) => item.status === false);\n    if (isSelectAllNeeded) {\n      setSelectAll(false);\n    } else {\n      setSelectAll(true);\n    }\n\n    // UPDATE APPLICATION LIST FOR UPDATE ==============================\n    updateClaimToPrint();\n  };\n\n  const updateClaimToPrint = () => {\n    // UPDATE REPORT TITLE ========================\n    if (thisPeriod) {\n      let title = \"Claim Report \" + thisPeriod.session_plan_name;\n      // if (thisLevel!==\"all\") {\n      //   title = \"Claim Report - Level \"+thisLevel + thisPeriod.session_plan_name;\n      // }\n      setReportTitle(title);\n    }\n    // UPDATE CONTENT =============================\n    if (props.claiming.allClaims && props.claiming.claimTypes) {\n      let arrayNew: ClaimToPrintInterface[] = [];\n      let n: number = 1;\n      for (const key in props.claiming.allClaims) {\n        if (\n          Object.prototype.hasOwnProperty.call(props.claiming.allClaims, key)\n        ) {\n          for (const keyClaim in props.claiming.allClaims[key].claims) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                props.claiming.allClaims[key].claims,\n                keyClaim\n              )\n            ) {\n              const element = props.claiming.allClaims[key].claims[keyClaim];\n              const thisType = whichClaimType(props.claiming.allClaims[key]);\n              let dataArray: ClaimToPrintInterface = {\n                claim_id: n,\n                names:\n                  props.claiming.allClaims[key].userDetails.user_info.fname +\n                  \" \" +\n                  props.claiming.allClaims[key].userDetails.user_info.lname,\n                gender: props.claiming.allClaims[key].userDetails.user_info.sex\n                  ? \"Male\"\n                  : \"Female\",\n                national_id: props.claiming.allClaims[key].userDetails.n_id!,\n                phone: props.claiming.allClaims[key].userDetails.phone_number,\n                email: props.claiming.allClaims[key].userDetails.email,\n                claim_type: thisType ? thisType : \"\",\n                claim_level: element.level,\n                education_category: \"\",\n                claim_session: thisPeriod ? thisPeriod.session_plan_name : \"\",\n                date: DATE(element.createdAt),\n                decision: element.decision_taken_status\n                  ? element.decision_taken_status\n                  : \"PENDING\",\n                claim_title: props.claiming.allClaims[key].title,\n              };\n              for (const key in reportContent) {\n                if (Object.prototype.hasOwnProperty.call(reportContent, key)) {\n                  if (!reportContent[key].status) {\n                    delete dataArray[reportContent[key].key];\n                  }\n                }\n              }\n              arrayNew.push(dataArray);\n              n++;\n            }\n          }\n        }\n      }\n      setClaimToPrint(arrayNew);\n      arrayNew = [];\n      n = 1;\n    }\n  };\n\n  const FC_ClaimData = (\n    allClaims: CandidateClaimInterface[] | null\n  ): ClaimToPrintInterface[] | null => {\n    if (allClaims === null) return null;\n    let arrayNew: ClaimToPrintInterface[] = [];\n    let n: number = 1;\n    // LOOP IN ALL CLAIM ONE BY ONE ###########################\n    for (const key in allClaims) {\n      if (Object.prototype.hasOwnProperty.call(allClaims, key)) {\n        // LOOP IN ALL CLAIM OF ONE FILE ONE BY ONE ===========================\n        for (const keyClaim in allClaims[key].claims) {\n          if (\n            Object.prototype.hasOwnProperty.call(\n              allClaims[key].claims,\n              keyClaim\n            )\n          ) {\n            const element = allClaims[key].claims[keyClaim];\n            const thisType = whichClaimType(allClaims[key]);\n            let dataArray: ClaimToPrintInterface = {\n              claim_id: n,\n              names:\n                allClaims[key].userDetails.user_info.fname +\n                \" \" +\n                allClaims[key].userDetails.user_info.lname,\n              gender: allClaims[key].userDetails.user_info.sex\n                ? \"Male\"\n                : \"Female\",\n              national_id: allClaims[key].userDetails.n_id!,\n              phone: allClaims[key].userDetails.phone_number,\n              email: allClaims[key].userDetails.email,\n              claim_type: thisType ? thisType : \"\",\n              claim_level: element.level,\n              education_category:\n                allClaims[key].institute_id &&\n                !isEmptyOrSpaces(allClaims[key].institute_id)\n                  ? allClaims[key].institute_id\n                  : null,\n              claim_session: thisPeriod ? thisPeriod.session_plan_name : \"\",\n              date: DATE(element.createdAt),\n              decision: element.decision_taken_status\n                ? element.decision_taken_status\n                : \"PENDING\",\n              claim_title: allClaims[key].title\n                ? allClaims[key].title\n                : \"Undefined\",\n            };\n            // for (const key in reportContent) {\n            //   if (Object.prototype.hasOwnProperty.call(reportContent, key)) {\n            //     if (!reportContent[key].status) {\n            //       delete dataArray[reportContent[key].key];\n            //     }\n            //   }\n            // }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n      }\n    }\n    return arrayNew;\n  };\n\n  const resetReportContent = (currentState: boolean) => {\n    let newArray: claimReportContentInterface[] = reportContent;\n    for (const key in newArray) {\n      if (isChangeAllowed(newArray[key].key)) {\n        newArray[key].status = !currentState;\n      }\n    }\n\n    setReportContent(newArray);\n    setSelectAll(!currentState);\n    updateClaimToPrint();\n  };\n\n  const isChangeAllowed = (key: claimReportContentKeyInterface): boolean => {\n    if (\n      key === claimReportContentKeyInterface.names ||\n      key === claimReportContentKeyInterface.decision ||\n      key === claimReportContentKeyInterface.claim_session ||\n      key === claimReportContentKeyInterface.claim_type ||\n      key === claimReportContentKeyInterface.date\n    ) {\n      return false;\n    }\n    return true;\n  };\n\n  const FC_GeneratePDF = () => {\n    if (!document.querySelectorAll(\"#report_content tbody tr\").length) {\n      props.PushPopupAlert({\n        title: `Can't generate Report of empty Data`,\n        theme: PopupAlertTheme.warning,\n      });\n      return;\n    }\n\n    if (thisPeriod) {\n      const table: HTMLElement | null =\n        document.getElementById(\"report_content\");\n      const reportSettings: reportSettingsInterface = {\n        doneBy: props.auth.user.fname + \" \" + props.auth.user.lname,\n        title: \"Claim Report\",\n        subjectTitle: \"Claim type\",\n        subject:\n          props.claiming.selectedClaimType === \"all\"\n            ? \"All Types\"\n            : props.claiming.selectedClaimType,\n        period: thisPeriod.session_plan_name,\n        footer: \"Online Recruitment\",\n        institute:\n          thisEducation === \"all\"\n            ? \"All institute\"\n            : thisEducation.education_category_title,\n      };\n      table && generatePDF(reportSettings, table, setDownloading);\n    }\n  };\n\n  const FC_FilterClaims = (\n    allClaims: ClaimToPrintInterface[],\n    claimType: PlansTypeKeys | \"all\",\n    claimLevel: number | \"all\",\n    institute: education_category | \"all\"\n  ): ClaimToPrintInterface[] => {\n    let result: ClaimToPrintInterface[] = allClaims;\n    if (claimType !== \"all\") {\n      result = result.filter((item) => item.claim_type === claimType);\n    }\n    if (claimLevel !== \"all\") {\n      result = result.filter((item) => item.claim_level === claimLevel);\n    }\n\n    if (institute !== \"all\") {\n      result = result.filter(\n        (item) =>\n          item.education_category === null ||\n          item.education_category === institute.education_institute_id\n      );\n    }\n\n    return result;\n  };\n\n  return (\n    <Fragment>\n      <SideNavigation>\n        <div className=\"flex flex-col mb-4\">\n          <span className=\"text-sm text-gray-600 mb-2\">\n            Education categories:\n          </span>\n          {props.schoolLevels.education_categories === null ||\n          loadingInstitutes ? (\n            <Loading />\n          ) : props.schoolLevels.education_categories.length === 0 ? (\n            <span>No result found</span>\n          ) : (\n            <Fragment>\n              <div\n                onClick={() => setThisEducation(\"all\")}\n                className={`border rounded px-2 py-2 mb-2 cursor-pointer ${\n                  thisEducation === \"all\"\n                    ? \"bg-blue-600 text-white hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                    : \"hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                } font-bold flex flex-row items-center gap-2`}\n              >\n                {thisEducation === \"all\" ? (\n                  <MdRadioButtonChecked />\n                ) : (\n                  <MdRadioButtonUnchecked />\n                )}\n                <span>All</span>\n              </div>\n              {props.schoolLevels.education_categories.map((item, i) => (\n                <div\n                  onClick={() => setThisEducation(item)}\n                  key={i + 1}\n                  className={`border rounded px-2 py-2 mb-2 cursor-pointer ${\n                    thisEducation !== \"all\" &&\n                    thisEducation.education_institute_id ===\n                      item.education_institute_id\n                      ? \"bg-blue-600 text-white hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                      : \"hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                  } font-bold flex flex-row items-center gap-2`}\n                >\n                  {thisEducation !== \"all\" &&\n                  thisEducation.education_institute_id ===\n                    item.education_institute_id ? (\n                    <MdRadioButtonChecked />\n                  ) : (\n                    <MdRadioButtonUnchecked />\n                  )}\n                  <span>{item.education_category_title}</span>\n                </div>\n              ))}\n            </Fragment>\n          )}\n        </div>\n        <div className=\"\">\n          <div className=\"text-gray-600 text-sm mb-2\">Selected period:</div>\n          <div\n            onClick={() => setSelectPeriod(true)}\n            className=\"font-bold bg-blue-50 border border-blue-200 rounded py-2 cursor-pointer text-xs px-2 hover:underline  text-blue-600  mb-4 w-full flex flex-row items-center animate__animated animate__zoomIn\"\n          >\n            {thisPeriod !== null\n              ? `${thisPeriod.session_plan_name} - ${thisPeriod.period}`\n              : \"Filter by period\"}\n            <FiEdit className=\"text-3xl text-blue-600\" />\n          </div>\n        </div>\n        <div className=\"pt-1\">\n          <div className=\"text-sm text-gray-700 pb-2 pt-2\">Claim types:</div>\n          {props.claiming.claimTypes === null ||\n          FC_ClaimData(props.claiming.allClaims) === null ? (\n            <Loading />\n          ) : (\n            ClaimTypes(FC_ClaimData(props.claiming.allClaims)!).map(\n              (item, index: number) => (\n                <div\n                  onClick={() =>\n                    props.setSelectedClaimType(reportClaimType(item.type))\n                  }\n                  key={item.title + index}\n                >\n                  <MainItem\n                    title={item.title}\n                    count={item.count}\n                    active={isClaimTypeActive(\n                      props.claiming.selectedClaimType,\n                      item.type\n                    )}\n                  />\n                </div>\n              )\n            )\n          )}\n        </div>\n        <div className=\"pt-1\">\n          <div className=\"text-sm text-gray-700 pb-2 pt-2\">Claim level:</div>\n          {props.claiming.claimTypes === null ||\n          FC_ClaimData(props.claiming.allClaims) === null ? (\n            <Loading />\n          ) : (\n            ClaimLevels(FC_ClaimData(props.claiming.allClaims)!).map(\n              (item, index: number) => (\n                <div\n                  onClick={() => setThisLevel(item.level)}\n                  key={item.title + index}\n                >\n                  <MainItem\n                    title={item.title}\n                    count={item.count}\n                    active={item.level === thisLevel}\n                  />\n                </div>\n              )\n            )\n          )}\n        </div>\n      </SideNavigation>\n      <section>\n        {/* REPORT TITLE ============================================ */}\n        <div className=\"grid md:grid-cols-12\">\n          <div className=\"col-span-8\">\n            <div className=\"mt-4 mx-4 flex flex-col gap-1\">\n              <span className=\"text-3xl font-bold text-gray-700\">\n                Claim report\n              </span>\n            </div>\n          </div>\n          <div className=\"col-span-4\">\n            <div className=\"float-right mt-2\">\n              {props.claiming.allClaims && props.claiming.allClaims.length > 0 && (\n                <div className=\"flex flex-row items-center justify-end font-bold mb-2\">\n                  <BiExport className=\"text-2xl text-gray-500\" />\n                  <span className=\"text-gray-500\">Export as</span>\n                  <button\n                    className=\"px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200\"\n                    disabled={loading}\n                    onClick={() => {\n                      updateClaimToPrint();\n                      setGenerateReportModal({\n                        reportType: \"EXCEL\",\n                        status: true,\n                      });\n                    }}\n                  >\n                    EXCEL\n                  </button>\n                  <button\n                    className={`px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200 ${\n                      downloading && \"cursor-wait\"\n                    }`}\n                    onClick={() => FC_GeneratePDF()}\n                    disabled={loading || downloading}\n                  >\n                    PDF\n                  </button>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n        {/* END REPORT TITLE ============================================ */}\n        <div className=\"bg-white my-4\">\n          <div className=\"w-full px-2 py-2\">\n            <input\n              onChange={(e) => setSearchInput(e.target.value)}\n              type=\"text\"\n              value={searchInput}\n              placeholder=\"Search...\"\n              className=\"w-full bg-gray-100 py-2 px-3 rounded focus:border-gray-800\"\n              disabled={\n                props.claiming.allClaims === null ||\n                props.claiming.claimTypes === null ||\n                FC_ClaimData(props.claiming.allClaims) === null ||\n                periodChanged\n              }\n            />\n          </div>\n          <table className=\"w-full shadow\" id=\"report_content\">\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n              <tr>\n                <td className=\"px-2 py-2\">#</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"names\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Applicant names <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">National ID</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"gender\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Gender <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">Phone</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"claim_title\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Claim Title <BiSort />\n                  </div>\n                </td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"claim_type\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Claim Type <BiSort />\n                  </div>\n                </td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"claim_level\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Claim Level <BiSort />\n                  </div>\n                </td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"decision\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Status <BiSort />\n                  </div>\n                </td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"date\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Date <BiSort />\n                  </div>\n                </td>\n              </tr>\n            </thead>\n            <tbody>\n              {props.claiming.allClaims === null ||\n              props.claiming.claimTypes === null ||\n              periodChanged ? (\n                <TableLoading cols={10} />\n              ) : FC_ClaimData(props.claiming.allClaims) === null ? (\n                <TableLoading cols={10} />\n              ) : FC_FilterClaims(\n                  FC_ClaimData(props.claiming.allClaims)!,\n                  props.claiming.selectedClaimType,\n                  thisLevel,\n                  thisEducation\n                ).length === 0 ? (\n                <tr>\n                  <td colSpan={10} className=\"px-2 py-2\">\n                    <div className=\"flex flex-col text-gray-400 items-center justify-center bg-gray-100 rounded py-10\">\n                      <ImFilesEmpty className=\"text-8xl text-gray-400 mb-2 animate__animated animate__shakeX\" />\n                      <span className=\"text-sm font-bold\">\n                        No result found! Please try to search again\n                      </span>\n                      <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n                        <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                          <li\n                            onClick={() => setSelectPeriod(true)}\n                            className=\"underline text-gray-500 cursor-pointer\"\n                          >\n                            Filter by period\n                          </li>\n                          <li className=\"text-gray-400 italic\">or</li>\n                          <li className=\"text-gray-500\">\n                            Filter by Claim type\n                          </li>\n                          <li className=\"text-gray-400 italic\">or</li>\n                          <li className=\"text-gray-500\">\n                            Filter by Claim Level\n                          </li>\n                        </ul>\n                      </div>\n                    </div>\n                  </td>\n                </tr>\n              ) : (\n                sortThisArray(\n                  isSorted,\n                  searchData(\n                    FC_FilterClaims(\n                      FC_ClaimData(props.claiming.allClaims)!,\n                      props.claiming.selectedClaimType,\n                      thisLevel,\n                      thisEducation\n                    ),\n                    searchInput\n                  ),\n                  sortProperty,\n                  sortOrder\n                ).map((item: ClaimToPrintInterface, i) => (\n                  <tr\n                    key={i + 1}\n                    className={`${\n                      i % 2 !== 0 ? \"bg-gray-100\" : \"bg-white\"\n                    } text-gray-600 hover:bg-blue-100 hover:text-blue-700 border-b border-gray-300 hover:border-blue-500 text-sm`}\n                  >\n                    <td className=\"px-2 py-2\">{i + 1}</td>\n                    <td className=\"px-2 py-2\">{item.names}</td>\n                    <td className=\"px-2 py-2\">{item.national_id}</td>\n                    <td className=\"px-2 py-2\">{item.gender}</td>\n                    <td className=\"px-2 py-2\">{item.phone}</td>\n                    <td className=\"px-2 py-2\">{item.claim_title}</td>\n                    <td className=\"px-2 py-2\">{item.claim_type}</td>\n                    <td className=\"px-2 py-2\">{\"Level \" + item.claim_level}</td>\n                    <td className=\"px-2 py-2\">\n                      {item.decision}\n                      {/* {capitalizeFirstLetter(item.decision)} */}\n                    </td>\n                    <td className=\"px-2 py-2\">{item.date}</td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </section>\n      {/* GENERATE DYNAMIC REPORT CONTENT MODAL */}\n      {generateReportModal !== null && generateReportModal.status === true && (\n        <Modal\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              {/* <IoBriefcase className=\"text-5xl text-gray-500\" /> */}\n              <div className=\"flex flex-col\">\n                <span className=\"font-bold text-2xl text-gray-500\">\n                  Generating Report contents\n                </span>\n                <span className=\"text-sm text-blue-600 font-normal\">\n                  Generating {generateReportModal.reportType} Report\n                </span>\n              </div>\n            </div>\n          }\n          backDrop={true}\n          theme={Themes.default}\n          close={() => setGenerateReportModal(null)}\n          backDropClose={false}\n          widthSizeClass={ModalSize.medium}\n          displayClose={true}\n          padding={{ title: true }}\n        >\n          <div className=\"px-6\">\n            <div className=\"my-2 text-base text-gray-700 sm:text-lg\">\n              <div className=\"flex flex-col\">\n                <label>Title</label>\n                <input\n                  type=\"text\"\n                  className={`text-left input-white w-20 inline-block ${\n                    formError && formError.element === \"report_title\"\n                      ? \"border-red-500\"\n                      : \"border-gray-500\"\n                  } border-2`}\n                  placeholder=\"Sub Category Title\"\n                  value={reportTitle}\n                  onChange={(e) => {\n                    setFormError(null);\n                    setReportTitle(e.target.value);\n                  }}\n                  disabled={loading}\n                />\n                {formError && formError.element === \"report_title\" && (\n                  <span className=\"text-red-500\">{formError.msg}</span>\n                )}\n              </div>\n              <div className=\"flex flex-col mt-2\">\n                <label>Report content</label>\n                <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                  {reportContent.map((item, index) => (\n                    <div\n                      key={index}\n                      className={`flex items-center gap-1 ${\n                        isChangeAllowed(item.key)\n                          ? \"cursor-pointer\"\n                          : \"cursor-not-allowed\"\n                      }`}\n                      onClick={() =>\n                        isChangeAllowed(item.key) &&\n                        updateReportContent(item.key)\n                      }\n                      title={\n                        !isChangeAllowed(item.key)\n                          ? \"Required for every report!\"\n                          : \"\"\n                      }\n                    >\n                      {item.status ? (\n                        <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                      ) : (\n                        <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                      )}\n                      <span>{item.title}</span>\n                    </div>\n                  ))}\n                </div>\n                {formError && formError.element === \"report_content\" && (\n                  <span className=\"text-red-500\">{formError.msg}</span>\n                )}\n              </div>\n            </div>\n            <div className=\"flex justify-between mb-2 mt-4\">\n              <div\n                className={`flex items-center gap-1 cursor-pointer`}\n                onClick={() => resetReportContent(selectAll)}\n              >\n                {selectAll ? (\n                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                ) : (\n                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                )}\n                <span>Select all</span>\n              </div>\n\n              {claimToPrint && !loading && (\n                <ExportToExcel\n                  fileData={claimToPrint}\n                  fileName={reportTitle}\n                  btnName=\"Generate\"\n                />\n              )}\n            </div>\n          </div>\n        </Modal>\n      )}\n      {/* END GENERATE DYNAMIC REPORT CONTENT MODAL */}\n      {selectPeriod && (\n        <Modal\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              <MdHistory className=\"text-5xl text-blue-600\" />\n              <span className=\"flex flex-col\">Choose a period</span>\n            </div>\n          }\n          backDrop={true}\n          theme={Themes.default}\n          close={() => thisPeriod !== null && setSelectPeriod(false)}\n          backDropClose={true}\n          widthSizeClass={ModalSize.extraLarge}\n          displayClose={true}\n          padding={{ title: true }}\n        >\n          <ChooseSession\n            allSession={props.application_sessions}\n            setSelectSession={(value: SessionPlanInterface | \"all\") => {\n              value !== \"all\" && setThisPeriod(value);\n              value !== \"all\" && onPeriodChange(value.session_plan_id);\n              value !== \"all\" && setSelectPeriod(false);\n            }}\n            chooseAll={false}\n            currentSelected={thisPeriod ? thisPeriod : \"all\"}\n          />\n        </Modal>\n      )}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  sessionPlan,\n  claiming,\n  document,\n  schoolLevels,\n}: StoreState): {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n} => {\n  return {\n    auth: auth,\n    application_sessions: sessionPlan.allSessionPlans,\n    claiming,\n    documentReducer: document,\n    schoolLevels,\n  };\n};\n\nexport const ClaimingReport = connect(mapStateToProps, {\n  getAllClaims,\n  GetClaimingTypes,\n  getAllApplications,\n  GetAllSessionPlans,\n  loadEducationCategories,\n  setSelectedClaimType,\n  PushPopupAlert,\n})(_ClaimingReport);\n"],"sourceRoot":""}
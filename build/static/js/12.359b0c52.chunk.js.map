{"version":3,"sources":["components/Navigation/SideNavigation.tsx","actions/users.ts","containers/SessionSettings/NoSession.tsx","containers/Admin/ExamReport/DoneExamList.tsx","containers/AdminDashboard/ChartComponents/VBarChart.tsx","containers/Admin/ExamReport/ExamReport.tsx","containers/Admin/ExamReport/CandiadtePerformancePerDistrict.tsx","containers/Admin/ExamReport/ExamPerformancePerDistrict.tsx","containers/Admin/ExamReport/ExamReportFilters.tsx","containers/Admin/ExamReport/ExamReportTitle.tsx","utils/ExportToExcel.tsx","utils/mineduc.png","components/DownloadPDF/rest.tsx","actions/schools.ts","containers/UserManagement/UserList.tsx","containers/UserManagement/RoleList.tsx","containers/UserManagement/UserRole.tsx","shared/blank_profile.png","containers/SessionSettings/ChooseSession.tsx","containers/Admin/ExamReport/CandidatePerformance.tsx","containers/Admin/ExamReport/ExamList.tsx","containers/Admin/ExamReport/ExamReportModals.tsx","containers/AdminDashboard/ChartComponents/PieChart.tsx","containers/UserManagement/UserAccess.tsx","containers/AdminDashboard/DashboardLabelItem.tsx","containers/Admin/ExamReport/ExamPerformance.tsx","containers/AdminDashboard/ExamDashboard/ExamDashboardLabels.tsx","containers/Locations/ViewDistricts.tsx","containers/Locations/ViewProvince.tsx","containers/Locations/ViewSectors.tsx","containers/Locations/Locations.tsx","containers/AdminDashboard/ExamDashboard/ExamDashboardTitle.tsx","containers/AdminDashboard/ExamDashboard/ExamPreparationChart.tsx","containers/AdminDashboard/ExamDashboard/ExamProgressChart.tsx","containers/AdminDashboard/ExamDashboard/ExamPerformanceChart.tsx","containers/AdminDashboard/ExamDashboard/ExamDashboard.tsx"],"names":["_SideNavigation","props","componentDidMount","PageHasSubNav","componentWillUnmount","state","loading","this","auth","isAuthenticated","navActive","system","navigation","className","children","React","Component","SideNavigation","connect","NavToogle","MainItem","title","icon","MdBrightness1","active","count","IconDefined","documentValidationStatus","userPageLimit","fetchUserAccess","page","callback","dispatch","a","setAxiosToken","axios","get","API","AUTH","res","console","log","type","ActionTypes","FETCH_USERS_ACCESS","payload","users","data","next","previous","total_users","error","user_error","errorToText","blockUserToSystem","user_id","BLOCK_USER_TO_SYSTEM","id","unBlockUserToSystem","UNBLOCK_USER_TO_SYSTEM","assignRoleToUserAccess","ASSIGN_ROLE_TO_USER","customizeUserAccess","CUSTOMIZE_USER_ACCESS","resetUserAccess","RESET_USER_ACCESS","NoSession","ExaminationProgressReportContentKeyInterface","examinationProgressIsChangeAllowed","key","COURSER_NAME","COURSE_CODE","PERIOD","STATUS","defaultExaminationProgressContent","status","SCHOOL_LEVEL","DATE","TIME","DURATION","displayStatus","FC_reportDoneExamList","allCourses","allExams","doneExams","result","ids","Object","prototype","hasOwnProperty","call","includes","push","courser","find","item","course_id","course","doneExam","period","course_name","course_code","description","school_levels","exam","preparation_status","exam_status","FC_reportDoneExamListFilter","thisList","thisValue","filter","searchExamData","objList","text","undefined","product","flag","prop","toString","toLowerCase","indexOf","DoneExamList","useState","searchInput","setSearchInput","isSorted","setIsSorted","sortProperty","setSortProperty","sortOrder","setSortOrder","setSort","thisProperty","onChange","e","target","value","placeholder","disabled","courseListData","examsListData","doneExamsData","filterExamProgress","length","onClick","colSpan","sortThisArray","map","i","capitalizeFirstLetter","exam_date","start_time","duration","getPeriodById","thisPeriod","session_plan_name","memo","defaultBar","borderRadius","horizontal","columnWidth","endingShape","VBarChart","setLoading","chart","events","dataPointSelection","event","chartContext","config","labelClicked","w","labels","dataPointIndex","FC_LoadSelected","seriesIndex","stacked","plotOptions","bar","dataLabels","enabled","xaxis","rotate","categories","categoriesLabel","tickPlacement","yaxis","yaxisText","fill","opacity","tooltip","y","formatter","val","tooltipText","grid","padding","left","right","noData","align","verticalAlign","options","setOptions","useEffect","colors","chartClicked","zoom","autoScaleYaxis","series","width","height","chartHeight","reportTitleType","FC_CandiadtePerformancePerDistrictFilter","dataList","swap","district_id","exam_stastus","exam_location","j","user_total_marks","adminExamReport","candidatePerformanceData","FC_reportCandidatePerformanceData","reportCourseId","reportDistrictId","filterApplicantPerformance","Loading","searchCandidatePerformanceData","slice","controlRowsByStatus","user_name","national_id","user_email","user_phone","timestampToDate","timeAMPM","end_time","ReportUserExamStatus","Editing","Number","toFixed","FC_ExamPerformancePerDistrictPropsData","examsData","pass","failed","exam_ids","toLocaleLowerCase","_marks","candidatesByExam","_key","user","total_marks","user_status","pass_applicant","failed_applicant","applicants","NoResult","theme","NoResultThemes","Dark","search","ExamReportFilters","reportTitle","EXAM_PERFORMANCE","EXAM_DISTRICT_PERFORMANCE","EXAM_PREPARATION","setFilterPreparation","filterPreparation","EXAMINATION_PROGRESS","setFilterExamProgress","APPLICANTS_PERFORMANCE","APPLICANTS_DISTRICT_PERFORMANCE","setFilterApplicantPerformance","values","index","schoolLevels","prepareExam","courses","examsList","SetReportDistrictId","changeReport","setChangeReport","districtModal","setDistrictModal","excelModal","setExcelModal","courseModal","setCourseModal","district_name","dataToPrint","updateExamToPrint","setGenerateReportModal","reportType","downloading","downlaodPDF","ExamReportModals","modalFor","ModalForTypes","generateReportModal","modalState","changeModalState","excelReportTitle","setExcelReportTitle","examsToPrint","examPreparationReportContent","setExamPreparationReportContent","examPerformanceToPrint","examPerformanceReportContent","setExamPerformanceReportContent","exam30PerformanceToPrint","exam30PerformanceReportContent","setExam30PerformanceReportContent","examinationProgressToPrint","examinationProgressReportContent","setExaminationProgressExamPerformanceReportContent","candidateExamPerformanceToPrint","candidateExamPerformanceReportContent","setCandidateExamPerformanceReportContent","candidate30ExamPerformanceToPrint","candidate30ExamPerformanceReportContent","setCandidate30ExamPerformanceReportContent","setReportTitle","choose_district","districtId","loadExaminationProgress","DoneExam","selectedEducationCategory","choose_exam","AllExamData","finished","thisExam","getExamByCourseId","periods","period_id","session_plan_id","loadAllExams","selected_period","_ExamReport","setState","setLoadingCourses","loadingCourses","setLoadingExams","loadingExams","setDownloading","setLoadingDoneExam","loadingDoneExam","setLoadingCandidatesExamPerformance","loadingCandidatesExamPerformance","setLoadingExamPerformance","loadingExamPerformance","setLoadingSettings","loadingSettings","setSelectPeriod","selectPeriod","setSelectedPeriod","setExamsToPrint","setExamPerformanceToPrint","setExam30PerformanceToPrint","setExaminationProgressToPrint","setCandidateExamPerformanceToPrint","setCandidate30ExamPerformanceToPrint","selectDefaultSession","allSession","active_period","is_active","allSessionPlans","GetAllSessionPlans","msg","isEmptyOrSpaces","PushPopupAlert","PopupAlertTheme","danger","education_categories","loadEducationCategories","setSelectedEducationCategory","loadSchoolLevels","loadCourses","loadExamsList","application_session","loadDoneExam","CandidatesExamPerformance","loadCandidatesExamPerformance","order","sortBy","ReportGetCandidatePerformanceSortTypes","ExamPerformance","loadPerfomranceExam","onPeriodChange","getLevelbyId","level_id","school_level_id","getCourses","search_all","forEach","level","levelDetail","education_institute","education_institute_id","FC_reportExamList","arrayNew","n","school_level","element","findLevel","school_level_name","dataArray","exam_period","exam_time","exam_duration","FC_reportExamPerformanceData","exam_performance","applicant_id","exam_start_time","exam_end_time","performance_status","applicant_name","email","phone","marks","addToTitle","document","querySelectorAll","warning","table","getElementById","reportSettings","doneBy","fname","lname","subjectTitle","subject","footer","institute","education_category_title","orientation","generatePDF","defaultExamPreparationReportContent","defaultExamPerformanceContent","defaultCandidateExamPerformanceContent","ExamList","examsPerformanceData","thisDistrict","Light","component","CandidatePerformance","applicationPeriods","ExamReport","sessionPlan","ExportToExcel","fileData","fileName","btnName","showIcon","apiData","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","exportToCSV","require","addFooters","doc","pageCount","internal","getNumberOfPages","setFont","setFontSize","setPage","String","pageSize","callBack","lMargin","jsPDF","setTextColor","addImage","Logo","getWidth","lines","splitTextToSize","pdfInMM","getTextWidth","addPage","autoTable","html","startY","margin","cellPadding","rowHeight","bodyStyles","valign","columnStyles","cellWidth","tableWidth","finalY","lastAutoTable","Date","save","returnPromise","then","getSchools","APPLICATION","GET_SCHOOLS","getSchoolById","schoolId","GET_SCHOOLS_BY_ID","createSchool","schools","CREATE_SCHOOL","updateSchool","UPDATE_SCHOOL","deleteSchool","DELETE_SCHOOL","fetchSchoolPosts","school_id","PLACEMENT","schoolPosts","FETCH_SCHOOL_POSTS","getSchoolPlacement","GET_SCHOOL_PLACEMENT","createSchoolPost","CREATE_SCHOOL_POST","updateSchoolPost","TYPE","UPDATE_SCHOOL_POST","fetchDistrictPosts","FETCH_DISTRICT_POSTS","getDistrictPlacement","GET_DISTRICT_PLACEMENT","getInstitutePlacementLimit","institute_id","session_id","GET_INSTITUTE_PLACEMENT_LIMIT","getDistrictPlacementLimit","GET_DISTRICT_PLACEMENT_LIMIT","updateInstitutePlacementLimit","UPDATE_INSTITUTE_PLACEMENT_LIMIT","ModalState","RoleList","roleList","setChooseRole","role","loadindRequest","handleSelectRole","system_user_role_id","UserRole","setRoleId","roleId","setSelectedRole","selectedRole","setProvinceId","provinceId","setDistrictId","setCenterId","centerId","setRoomId","roomId","setLoadingForm","loadingForm","setSchoolId","setChooseSchool","chooseSchool","setInstituteId","instituteId","setFormError","formError","setLoadingRequest","loadingRequest","chooseRole","setDefaultState","default_access","LOAD_province","LOAD_district","district_required","roomList","distinctDistrict","_id","province_id","room_required","LocationsInArray","room_id","center_id","school_required","schoolList","LOAD_school","userInfo","vvvvv","role_id","tableData","access","task","permitted","create","view","update","delete","Math","random","assignRoleToUser","preventDefault","window","confirm","education_institution_required","formData","education_institution_id","post","currentPage","setChangeRole","success","role_error","location","districts","keyDistrict","distinctCenter","rooms","distinctRoom","onSubmit","province","province_name","district","school","school_name","center","center_name","room","room_name","Table","columns","columnTitle","alignText","rows","pagination","searchBG","thColor","tableId","getUserById","userId","LocationData","locationTemp","p","d","centers","c","r","room_number","capacity","occupied","UserList","setManageUserId","manageUserId","setLoadingSchool","loadingSchool","setLoadingRequestType","loadingRequestType","setRoomList","setRoomTables","roomTable","setCurrentAccess","currentAccess","setSchoolList","setUserAccess","userAccess","allRoom","getAllRoom","loadingUser","setManageUser","user_info","sex","getRoleById","blockUser","actionType","patch","info","blockUser_ERROR","restUserAccess","resetedAccess","reseting_user_access","manageUser","src","photo","profile","alt","getInstituteById","n_id","phone_number","custome_access","changeRole","UserAccess","locations","roomLocation","isPlansActive","plans","today","activePlans","plan","startDate","start_date","endDate","end_date","getTime","type_status","SessionPlanTypeStatus","OPEN","ChooseSession","searched","selectedPlan","setSelectedPlan","setSearch","chooseAll","currentSelected","setSelectSession","searchData","itm","type_key","type_title","CandidateExamPerformanceReportContentKeyInterface","candidateExamPerformanceIsChangeAllowed","APPLICANT","N_ID","EMAIL","PHONE","MARKS","START_TIME","END_TIME","FC_reportCandidatePerformanceDataFilter","examPreparationReportContentKeyInterface","examPreparationIsChangeAllowed","FC_reportExamListFilter","thisStatus","searchExamList","createdAt","FC_DistinctDistrict","flags","output","l","SetReportCourseId","selectAll","setSelectAll","loadingLocation","setLoadingLocation","setError","isChangeAllowed","examPerformanceIsChangeAllowed","updateExamPerformanceReportContent","findIndex","newArray","isSelectAllNeeded","updateCandidateExamPerformanceReportContent","showGenerateBtn","backDrop","Themes","default","close","backDropClose","widthSizeClass","ModalSize","extraLarge","displayClose","medium","updateExamPreparationReportContent","updateExaminationProgressReportContent","currentState","resetReportContent","isAllDistrictAllowed","selectDistrict","PieChart","_UserAccess","setViewPermission","viewPermission","setLoadindRequest","setCreatePermission","createPermission","setUpdatePermission","updatePermission","setDeletePermission","deletePermission","setLoadind","overrideUserAccess","overideAccess","findCustom","custom","handleCustomization","custome_user_access_id","customize_access","to","checked","DashboardLabelItem","FaUsers","iconColor","countOver","toAnyDigit","examPerformanceReportContentKeyInterface","PERFORMANCE","examPerformance","answer_sheet_id","Fragment","ExamDashboardLabels","numCols","labelsOnRow","childrenPosition","FC_CreateDistrict","FC_UpdateDistrict","FC_DeleteDistrict","districtName","setDistrictName","districtCode","setDistrictCode","handleSubmit","actionTypes","thisProvince","province_code","district_code","sectors","setActionTypes","setThisDistrict","doc_category_error","Modal","body","FC_CreateProvince","FC_UpdateProvince","FC_DeleteProvince","provinceTitle","setProvinceTitle","provinceCode","setProvinceCode","updated","setThisProvince","province_error","FC_CreateSector","FC_UpdateSector","FC_DeleteSector","sectorName","setSectorName","sectorCode","setSectorCode","sector_name","sector_code","sector_id","thisSector","setThisSector","sector_error","handleDelete","sectorId","district_error","sector","Locations","ViewDistricts","ExamDashboardTitle","education","loadingEducation","thisEducation","setThisEducation","setThisPeriod","application_sessions","session","ExamPreparationChart","name","examPreparationProgress","remaining","ExamProgressChart","progressData","ExamPerformanceChart","loadCoursesByInstitute","courseList","defaultValue","allData","completeExams","remainingExams","dataFound","all","loadExamPreparationProgress","isDatePast","dateParam","date","moment","format","todayDate","pastDate","diff","loadExamAttendance","applicantList","_ExamDashboard","setChangingPeriod","changingPeriod","loadByPeriods","sessions","action","FaBookOpen","legend","show","position","horizontalAlign","fontSize","itemMargin","vertical","pie","donut","color","offsetY","fontFamily","total","label","globals","seriesTotals","reduce","b","ExamDashboard"],"mappings":"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","file":"static/js/12.359b0c52.chunk.js","sourcesContent":["import React, { FC, ReactElement, ReactNode } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, System } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { NavToogle, PageHasSubNav } from \"../../actions\";\nimport { MdBrightness1, MdSearch } from \"react-icons/md\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  system: System;\n  PageHasSubNav: Function;\n  NavToogle: Function;\n  children: ReactNode;\n}\n//\ninterface AppState {\n  loading: boolean;\n}\n\nclass _SideNavigation extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount = () => this.props.PageHasSubNav(true);\n  componentWillUnmount = () => this.props.PageHasSubNav(false);\n\n  render() {\n    const isAuthenticated = this.props.auth.isAuthenticated;\n\n    if (isAuthenticated === false) {\n      return null;\n    }\n\n    const navActive = this.props.system.navigation;\n    return (\n      <div\n        className={`fixed w-48 p-1 pr-2 pl-6 text-gray-700 bg-white ${\n          navActive === true ? \"lg:left-16  left-16\" : \" -left-72 lg:left-16\"\n        }  top-0 bottom-0 pt-20 z-30 shadow-lg  transition-all duration-500 ease-in-out overflow-y-auto`}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n}: StoreState): { auth: Auth; system: System } => {\n  return { auth: auth, system: system };\n};\n\nexport const SideNavigation = connect(mapStateToProps, {\n  NavToogle,\n  PageHasSubNav,\n})(_SideNavigation);\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SearchComponentInterface = {\n  data: any[];\n};\n\nexport const Search: FC<SearchComponentInterface> = ({\n  data,\n}): ReactElement => {\n  return (\n    <div className=\"m-1 rounded-md shadow-md border border-blue-400 bg-white p-1 flex \">\n      <label htmlFor=\"search-text\" className=\"inline-block text-2xl\">\n        <MdSearch className=\"inline-block text-blue-400\" />\n      </label>\n      <input\n        type=\"search\"\n        className=\"outline-none bg-transparent flex-1 pl-1\"\n        placeholder=\"Search\"\n        id=\"search-text\"\n      />\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype MainItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const MainItem: FC<MainItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n  return (\n    <section\n      className={`${\n        active === true\n          ? \"bg-blue-500 text-white font-bold\"\n          : \"bg-blue-100 text-blue-800\"\n      } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex cursor-pointer items-center`}\n    >\n      <section className=\"flex-1\">\n        <IconDefined className=\"inline-block mr-1 text-xs\" />\n        <span>{title}</span>\n      </section>\n\n      {count > 0 ? (\n        <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n          {count}\n        </span>\n      ) : null}\n    </section>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemContainerComponentInterface = {\n  children: ReactNode;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const SubItemContainer: FC<SubItemContainerComponentInterface> = ({\n  children,\n}): ReactElement => {\n  return (\n    <div className=\"ml-3 overflow-y-auto border-l-2 border-blue-200 -mt-1 pt-2 mb-2 pl-1 cursor-pointer\">\n      {children}\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n * @important Remenber to use these components inside the <SubItemContainer>...</SubItemContainer>\n */\nexport const SubItem: FC<SubItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n\n  return (\n    <div\n      className={`animate__animated animate__zoomIn animate__faster ${\n        active === true ? \"bg-blue-500 text-white font-bold\" : \" text-blue-800\"\n      } text-blue-800 bg-blue-200 rounded-md px-1 mb-1 flex items-center py-1 font-bold`}\n    >\n      <IconDefined\n        className={`inline-block mr-0.1 text-xs ${\n          active === true ? \"text-white\" : \"\"\n        }`}\n      />\n      <span\n        className={`inline-block pl-1 ${active === true ? \"text-white\" : \"\"}`}\n      >\n        {title}\n      </span>\n      {count >= 1 ? (\n        <span\n          className={`text-sm fint-bold ${active === true ? \"text-white\" : \"\"}`}\n        >\n          {count}\n        </span>\n      ) : null}\n    </div>\n  );\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AssignRoleToUserActionInterface,\n  CustomeAccessInterface,\n  UserInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\n\nexport const userPageLimit: number = 30;\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\nexport interface FetchUsersAction {\n  type: ActionTypes.FETCH_USERS_ACCESS;\n  payload: UserAccessInterface;\n}\n\nexport interface BlockUserToSystem {\n  type: ActionTypes.BLOCK_USER_TO_SYSTEM | ActionTypes.UNBLOCK_USER_TO_SYSTEM;\n  payload: { id: string; page: number };\n}\n\nexport interface AssignRoleToUserAction {\n  type: ActionTypes.ASSIGN_ROLE_TO_USER;\n  payload: { data: AssignRoleToUserActionInterface; page: number };\n}\n\nexport interface CustomizeUserAccessAction {\n  type: ActionTypes.CUSTOMIZE_USER_ACCESS;\n  payload: { data: CustomeAccessInterface; page: number };\n}\n\nexport interface ResetUserAccessAction {\n  type: ActionTypes.RESET_USER_ACCESS;\n  payload: { user_id: string; page: number };\n}\n\nexport type fetchUserAccessInterface = {\n  users: UserInterface[] | null;\n  next: {\n    page: number;\n    limit: number;\n  } | null;\n  previous: {\n    page: number;\n    limit: number;\n  } | null;\n  total_users: number;\n};\n\nexport type UserAccessInterface = {\n  users: { data: UserInterface[]; page: number }[] | null;\n  next: {\n    page: number;\n    limit: number;\n  } | null;\n  previous: {\n    page: number;\n    limit: number;\n  } | null;\n  total_users: number;\n};\n\nexport enum documentValidationStatus {\n  waiting = \"waiting\",\n  approved = \"approved\",\n  rejected = \"rejected\",\n}\n\nexport interface VerifyDocumentInterface {\n  user_id: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date?: string;\n  };\n  in_education: boolean;\n  disability: boolean;\n}\n\nexport type AccessUserActionType =\n  | FetchUsersAction\n  | BlockUserToSystem\n  | AssignRoleToUserAction\n  | CustomizeUserAccessAction\n  | ResetUserAccessAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const fetchUserAccess = (page: number, callback?: Function) => {\n  callback && callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<fetchUserAccessInterface>(\n        `${API.AUTH}/users?page=${page}&limit=${userPageLimit}`\n      );\n      console.log(\"====================================\");\n      console.log({ fetchUserAccess: res });\n      console.log(\"====================================\");\n      dispatch<FetchUsersAction>({\n        type: ActionTypes.FETCH_USERS_ACCESS,\n        payload: {\n          users: [{ data: res.data.users!, page: page }],\n          next: res.data.next,\n          previous: res.data.previous,\n          total_users: res.data.total_users,\n        },\n      });\n      callback && callback(false, \"\", res.data.users);\n    } catch (error) {\n      console.error({ user_error: error });\n      callback && callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const blockUserToSystem = (user_id: string, page: number) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<BlockUserToSystem>({\n      type: ActionTypes.BLOCK_USER_TO_SYSTEM,\n      payload: { id: user_id, page },\n    });\n  };\n};\n\nexport const unBlockUserToSystem = (user_id: string, page: number) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<BlockUserToSystem>({\n      type: ActionTypes.UNBLOCK_USER_TO_SYSTEM,\n      payload: { id: user_id, page },\n    });\n  };\n};\n\nexport const assignRoleToUserAccess = (\n  data: AssignRoleToUserActionInterface,\n  page: number\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<AssignRoleToUserAction>({\n      type: ActionTypes.ASSIGN_ROLE_TO_USER,\n      payload: { data, page },\n    });\n  };\n};\n\nexport const customizeUserAccess = (\n  data: CustomeAccessInterface,\n  page: number\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CustomizeUserAccessAction>({\n      type: ActionTypes.CUSTOMIZE_USER_ACCESS,\n      payload: { data, page },\n    });\n  };\n};\n\nexport const resetUserAccess = (data: string, page: number) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<ResetUserAccessAction>({\n      type: ActionTypes.RESET_USER_ACCESS,\n      payload: { user_id: data, page },\n    });\n  };\n};\n","import React from \"react\";\nimport { MdInfoOutline } from \"react-icons/md\";\n\nconst NoSession = () => {\n  return (\n    <div className=\"my-5\">\n      <div className=\"bg-yellow-100 rounded flex flex-col items-center justify-center p-6 my-8 text-yellow-900 border border-yellow-900\">\n        <MdInfoOutline className=\"text-6xl md:text-9xl\" />\n        <div className=\"text-center flex flex-col\">\n          <span className=\"text-2xl md:text-4xl font-extrabold\">\n            No session available\n          </span>\n          <span className=\"text-lg\">\n            Please Wait for the system to publish the sessions or contact the\n            administrator\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NoSession;\n","import React, { Fragment, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { SessionPlanInterface } from \"../../../interfaces\";\nimport { course } from \"../../../interfaces/course\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport { ExamDoneAndRemainingByPeriodInterface } from \"../../../interfaces/reports\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { DATE, sortThisArray } from \"../../../utils/functions\";\n// import searchExamData from \"../../../utils/search\";\nimport { getPeriodById } from \"./ExamReport\";\n\n// EXCEL FILE FUNCTIONS ================================\nexport interface ExaminationProgressToPrintInterface {\n  course_id: number;\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string;\n  exam_period: string;\n  exam_date: string;\n  exam_time: string;\n  exam_duration: string;\n  exam_status: string;\n}\n\nexport enum ExaminationProgressReportContentKeyInterface {\n  COURSER_NAME = \"course_name\",\n  COURSE_CODE = \"course_code\",\n  SCHOOL_LEVEL = \"school_levels\",\n  PERIOD = \"exam_period\",\n  DATE = \"exam_date\",\n  TIME = \"exam_time\",\n  DURATION = \"exam_duration\",\n  STATUS = \"exam_status\",\n}\n\nexport interface ExaminationProgressReportContentInterface {\n  key: ExaminationProgressReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n\nexport const examinationProgressIsChangeAllowed = (\n  key: ExaminationProgressReportContentKeyInterface\n): boolean => {\n  if (\n    key === ExaminationProgressReportContentKeyInterface.COURSER_NAME ||\n    key === ExaminationProgressReportContentKeyInterface.COURSE_CODE ||\n    key === ExaminationProgressReportContentKeyInterface.PERIOD ||\n    key === ExaminationProgressReportContentKeyInterface.STATUS\n  ) {\n    return false;\n  }\n  return true;\n};\n\nexport const defaultExaminationProgressContent: ExaminationProgressReportContentInterface[] =\n  [\n    {\n      key: ExaminationProgressReportContentKeyInterface.COURSER_NAME,\n      title: \"Course names\",\n      status: true,\n    },\n    {\n      key: ExaminationProgressReportContentKeyInterface.COURSE_CODE,\n      title: \"Course code\",\n      status: true,\n    },\n    {\n      key: ExaminationProgressReportContentKeyInterface.SCHOOL_LEVEL,\n      title: \"School levels\",\n      status: true,\n    },\n    {\n      key: ExaminationProgressReportContentKeyInterface.PERIOD,\n      title: \"Exam period\",\n      status: true,\n    },\n    {\n      key: ExaminationProgressReportContentKeyInterface.DATE,\n      title: \"Exam date\",\n      status: true,\n    },\n    {\n      key: ExaminationProgressReportContentKeyInterface.TIME,\n      title: \"Exam time\",\n      status: true,\n    },\n    {\n      key: ExaminationProgressReportContentKeyInterface.DURATION,\n      title: \"Exam duration\",\n      status: true,\n    },\n    {\n      key: ExaminationProgressReportContentKeyInterface.STATUS,\n      title: \"Exam Status\",\n      status: true,\n    },\n  ];\n\n// END EXCEL FILE FUNCTIONS ================================\n\nexport const displayStatus = (status: string): string => {\n  if (status === \"Done\") {\n    return \"Completed\";\n  }\n  if (status === \"Editing\") {\n    return \"In exam\";\n  }\n  return status;\n};\n\nexport interface examProgressStateInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n  exam: ExamItemResponse | null;\n  preparation_status: string;\n}\n\nexport const FC_reportDoneExamList = (\n  allCourses: course[],\n  allExams: ExamItemResponse[],\n  doneExams: ExamDoneAndRemainingByPeriodInterface[]\n): examProgressStateInterface[] => {\n  let result: examProgressStateInterface[] = [],\n    ids: string[] = [];\n  for (const key in allExams) {\n    if (Object.prototype.hasOwnProperty.call(allExams, key)) {\n      if (ids.includes(allExams[key].id)) continue;\n      ids.push(allExams[key].id);\n      let courser = allCourses.find(\n        (item) => item.course_id === allExams[key].course\n      );\n      if (courser) {\n        let doneExam = doneExams.find(\n          (item) =>\n            item.course === allExams[key].course &&\n            item.period === allExams[key].period\n        );\n        result.push({\n          course_name: courser.course_name,\n          course_code: courser.course_code,\n          description: courser.description,\n          school_levels: courser.school_levels,\n          course_id: courser.course_id,\n          exam: allExams[key],\n          preparation_status: doneExam ? doneExam.exam_status : \"remaining\",\n        });\n      }\n    }\n  }\n  return result;\n};\n\nexport const FC_reportDoneExamListFilter = (\n  thisList: examProgressStateInterface[],\n  thisValue: \"all\" | \"Done\" | \"Active\"\n): examProgressStateInterface[] => {\n  if (thisValue === \"all\") {\n    return thisList;\n  } else {\n    return thisList.filter((item) => item.preparation_status === thisValue);\n  }\n};\n\nexport const searchExamData = (\n  objList: examProgressStateInterface[],\n  text: string\n): examProgressStateInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (\n        prop === \"course_name\" ||\n        prop === \"course_code\" ||\n        prop === \"preparation_status\"\n      ) {\n        flag =\n          product[prop].toString().toLowerCase().indexOf(text.toLowerCase()) >\n          -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n};\n\ntype DoneExamListProps = {\n  loading: boolean;\n  examsListData: ExamItemResponse[] | null;\n  courseListData: course[] | null;\n  thisPeriod: SessionPlanInterface[];\n  doneExamsData: ExamDoneAndRemainingByPeriodInterface[] | null;\n\n  // for filter purpose =============================\n  filterExamProgress: \"all\" | \"Done\" | \"Active\";\n};\n\nconst DoneExamList: React.FC<DoneExamListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const [isSorted, setIsSorted] = useState<boolean>(false);\n  const [sortProperty, setSortProperty] = useState<string>(\"\");\n  const [sortOrder, setSortOrder] = useState<\"ASC\" | \"DESC\">(\"ASC\");\n\n  const setSort = (thisProperty: string) => {\n    if (sortProperty === thisProperty && sortOrder === \"ASC\") {\n      setSortOrder(\"DESC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    } else {\n      setSortOrder(\"ASC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    }\n  };\n\n  return (\n    <Fragment>\n      <div className=\"bg-white my-4\">\n        <div className=\"w-full px-2 py-2\">\n          <input\n            onChange={(e) => setSearchInput(e.target.value)}\n            type=\"text\"\n            value={searchInput}\n            placeholder=\"Search...\"\n            className=\"w-full bg-gray-100 py-2 px-3 rounded\"\n            disabled={\n              props.courseListData &&\n              props.examsListData &&\n              props.doneExamsData &&\n              FC_reportDoneExamListFilter(\n                FC_reportDoneExamList(\n                  props.courseListData,\n                  props.examsListData,\n                  props.doneExamsData\n                ),\n                props.filterExamProgress\n              ).length <= 0\n                ? true\n                : false\n            }\n          />\n        </div>\n        <table className=\"w-full shadow\" id=\"report_content\">\n          <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n            <tr>\n              <td className=\"px-2 py-2\">#</td>\n              <td\n                className=\"px-2 py-2 cursor-pointer\"\n                onClick={() => setSort(\"course_name\")}\n              >\n                <div className=\"flex items-center gap-1\">\n                  Course <BiSort />\n                </div>\n              </td>\n              <td className=\"px-2 py-2\">Exam date</td>\n              <td className=\"px-2 py-2\">Exam time</td>\n              <td className=\"px-2 py-2\">Exam duration</td>\n              <td className=\"px-2 py-2\">Exam Period</td>\n              <td\n                className=\"px-2 py-2 cursor-pointer\"\n                onClick={() => setSort(\"preparation_status\")}\n              >\n                <div className=\"flex items-center gap-1\">\n                  Exam Status <BiSort />\n                </div>\n              </td>\n            </tr>\n          </thead>\n          <tbody>\n            {props.courseListData === null || props.loading ? (\n              <tr>\n                <td colSpan={7} className=\"px-2 py-2\">\n                  <Loading />\n                </td>\n              </tr>\n            ) : props.examsListData &&\n              props.doneExamsData &&\n              FC_reportDoneExamListFilter(\n                FC_reportDoneExamList(\n                  props.courseListData,\n                  props.examsListData,\n                  props.doneExamsData\n                ),\n                props.filterExamProgress\n              ).length <= 0 ? (\n              <tr>\n                <td colSpan={7} className=\"px-2 py-2 text-center\">\n                  No Exam list available!\n                </td>\n              </tr>\n            ) : (\n              props.examsListData &&\n              props.doneExamsData &&\n              sortThisArray(\n                isSorted,\n                searchExamData(\n                  FC_reportDoneExamListFilter(\n                    FC_reportDoneExamList(\n                      props.courseListData,\n                      props.examsListData,\n                      props.doneExamsData\n                    ),\n                    props.filterExamProgress\n                  ),\n                  searchInput\n                ),\n                sortProperty,\n                sortOrder\n              ).map((item, i) => (\n                <tr\n                  key={i + 1}\n                  className={`${\n                    item.preparation_status === \"Done\"\n                      ? \"bg-blue-50\"\n                      : \"bg-white\"\n                  } text-gray-600 hover:bg-blue-100 hover:text-blue-700 border-b border-gray-300 hover:border-blue-500 text-sm`}\n                >\n                  <td className=\"px-2 py-2\">{i + 1}</td>\n                  <td className=\"px-2 py-2\">\n                    {capitalizeFirstLetter(item.course_name)} (\n                    <span className=\"font-semibold\">{item.course_code}</span>)\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam ? DATE(item.exam.exam_date) : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam ? item.exam.start_time : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam ? item.exam!.duration + \" min\" : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam\n                      ? getPeriodById(props.thisPeriod, item.exam.period)\n                        ? getPeriodById(props.thisPeriod, item.exam.period)!\n                            .session_plan_name\n                        : \"-\"\n                      : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {capitalizeFirstLetter(\n                      displayStatus(item.preparation_status)\n                    )}\n                  </td>\n                </tr>\n              ))\n            )}\n          </tbody>\n        </table>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default React.memo(DoneExamList);\n","import { ApexOptions } from \"apexcharts\";\nimport React, { useEffect, useState } from \"react\";\nimport Chart from \"react-apexcharts\";\n\ntype VBarCharPropstInterface = {\n  labels: string[];\n  categoriesLabel: any;\n  bar?: {\n    borderRadius: number;\n    horizontal: boolean;\n    columnWidth: string;\n    endingShape: string;\n  };\n  dataLabels: boolean;\n  yaxisText: string;\n  tooltipText: string;\n  series: {\n    name: string;\n    data: number[];\n  }[];\n  defaultBar?: {\n    borderRadius: number;\n    horizontal: boolean;\n    columnWidth: string;\n    endingShape: string;\n  };\n  colors?: any[];\n  title?: {\n    text: string;\n    align: string;\n    margin: number;\n    offestY: number;\n    style: {\n      fontSize: string;\n    };\n  };\n  stacked?: boolean;\n  FC_LoadSelected?: (labelIndex: number, seriesIndex: number) => void;\n  chartHeight?: number;\n};\n\nconst defaultBar = {\n  borderRadius: 4,\n  horizontal: false,\n  columnWidth: \"95%\",\n  endingShape: \"rounded\",\n};\n\nconst VBarChart: React.FC<VBarCharPropstInterface> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [options, setOptions] = useState<ApexOptions>({\n    chart: {\n      events: {\n        dataPointSelection: (event, chartContext, config) => {\n          console.log({\n            labelClicked: config.w.config.labels[config.dataPointIndex],\n            // seriesClicked: config.w.config.series[config.dataPointIndex],\n          });\n          if (props.FC_LoadSelected) {\n            props.FC_LoadSelected(config.dataPointIndex, config.seriesIndex);\n          }\n          // console.log(config.seriesIndex);\n          // console.log(config.dataPointIndex);\n        },\n      },\n      stacked: props.stacked ? props.stacked : false,\n    },\n    plotOptions: {\n      bar: props.defaultBar ? props.defaultBar : defaultBar,\n    },\n    labels: props.labels,\n    dataLabels: {\n      enabled: true,\n    },\n    xaxis: {\n      labels: {\n        rotate: -45,\n      },\n      categories: props.categoriesLabel,\n      tickPlacement: \"on\",\n    },\n    yaxis: {\n      title: {\n        text: props.yaxisText,\n      },\n    },\n    fill: {\n      opacity: 1,\n    },\n    tooltip: {\n      y: {\n        formatter: function (val: number) {\n          return val + \" \" + props.tooltipText;\n        },\n      },\n    },\n    grid: {\n      padding: {\n        left: 30, // or whatever value that works\n        right: 30, // or whatever value that works\n      },\n    },\n    noData: {\n      text: \"No data found\",\n      align: \"center\",\n      verticalAlign: \"middle\",\n    },\n  });\n\n  useEffect(() => {\n    if (props.colors && props.colors.length > 0 && loading) {\n      setOptions({\n        chart: {\n          stacked: props.stacked ? props.stacked : false,\n          events: {\n            dataPointSelection: (event, chartContext, config) => {\n              console.log({\n                chartClicked: config.w.config.labels[config.dataPointIndex],\n              });\n              if (props.FC_LoadSelected) {\n                props.FC_LoadSelected(\n                  config.dataPointIndex,\n                  config.seriesIndex\n                );\n              }\n            },\n          },\n          zoom: {\n            enabled: true,\n            autoScaleYaxis: true,\n          },\n        },\n        plotOptions: {\n          bar: props.defaultBar ? props.defaultBar : defaultBar,\n        },\n        labels: props.labels,\n        dataLabels: {\n          enabled: true,\n        },\n        xaxis: {\n          labels: {\n            rotate: -45,\n          },\n          categories: props.categoriesLabel,\n          tickPlacement: \"on\",\n        },\n        yaxis: {\n          title: {\n            text: props.yaxisText,\n          },\n        },\n        fill: {\n          opacity: 1,\n        },\n        tooltip: {\n          y: {\n            formatter: function (val: number) {\n              return val + \" \" + props.tooltipText;\n            },\n          },\n        },\n        grid: {\n          padding: {\n            left: 30, // or whatever value that works\n            right: 30, // or whatever value that works\n          },\n        },\n        noData: {\n          text: \"No data found\",\n          align: \"center\",\n          verticalAlign: \"middle\",\n        },\n        colors: props.colors,\n      });\n    } else if (loading) {\n      setOptions({\n        chart: {\n          stacked: props.stacked ? props.stacked : false,\n          events: {\n            dataPointSelection: (event, chartContext, config) => {\n              console.log({\n                labelClicked: config.w.config.labels[config.dataPointIndex],\n                // seriesClicked: config.w.config.series[config.dataPointIndex],\n              });\n              if (props.FC_LoadSelected) {\n                props.FC_LoadSelected(\n                  config.dataPointIndex,\n                  config.seriesIndex\n                );\n              }\n              // console.log(config.seriesIndex);\n              // console.log(config.dataPointIndex);\n            },\n          },\n          zoom: {\n            enabled: true,\n            autoScaleYaxis: true,\n          },\n        },\n        plotOptions: {\n          bar: props.defaultBar ? props.defaultBar : defaultBar,\n        },\n        labels: props.labels,\n        dataLabels: {\n          enabled: true,\n        },\n        xaxis: {\n          labels: {\n            rotate: -45,\n          },\n          categories: props.categoriesLabel,\n          tickPlacement: \"on\",\n        },\n        yaxis: {\n          title: {\n            text: props.yaxisText,\n          },\n        },\n        fill: {\n          opacity: 1,\n        },\n        tooltip: {\n          y: {\n            formatter: function (val: number) {\n              return val + \" \" + props.tooltipText;\n            },\n          },\n        },\n        grid: {\n          padding: {\n            left: 30, // or whatever value that works\n            right: 30, // or whatever value that works\n          },\n        },\n        noData: {\n          text: \"No data found\",\n          align: \"center\",\n          verticalAlign: \"middle\",\n        },\n      });\n    }\n    setLoading(false);\n  }, [loading, options, props]);\n\n  if (loading) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading Data...\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"w-full\">\n      <Chart\n        options={options}\n        series={props.series}\n        type=\"bar\"\n        width=\"100%\"\n        height={props.chartHeight ? props.chartHeight : undefined}\n      />\n    </div>\n  );\n};\n\nexport default React.memo(VBarChart);\n","import React, { Component } from \"react\";\nimport { BiFilterAlt } from \"react-icons/bi\";\nimport { FiEdit } from \"react-icons/fi\";\nimport { MdRadioButtonChecked, MdRadioButtonUnchecked } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  schoolLevelsStoreInterface,\n  setSelectedPeriod,\n  loadCourses,\n  loadExamsList,\n  loadEducationCategories,\n  loadDoneExam,\n  loadSchoolLevels,\n  loadPerfomranceExam,\n  loadCandidatesExamPerformance,\n  setSelectedEducationCategory,\n  PushPopupAlert,\n  FilterParamType,\n  ReportGetCandidatePerformanceSortTypes,\n} from \"../../../actions\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport {\n  generatePDF,\n  reportSettingsInterface,\n} from \"../../../components/DownloadPDF/rest\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { SideNavigation } from \"../../../components/Navigation/SideNavigation\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  course,\n  education_category,\n  ReportUserExamStatus,\n  school_level,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport {\n  ExamItemResponse,\n  PrepareExamStatus,\n  QuestionNumberFormat,\n} from \"../../../interfaces/prepare_exam\";\nimport { StoreState } from \"../../../reducers\";\nimport { ExamReportReducerType } from \"../../../reducers/exam_report\";\nimport { SessionPlanReducerInterface } from \"../../../reducers/session\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { DATE, timestampToDate } from \"../../../utils/functions\";\nimport NoSession from \"../../SessionSettings/NoSession\";\nimport CandiadtePerformancePerDistrict, {\n  FC_CandiadtePerformancePerDistrictFilter,\n} from \"./CandiadtePerformancePerDistrict\";\nimport CandidatePerformance, {\n  CandidateExamPerformanceToPrintInterface,\n  CandidateExamPerformanceReportContentInterface,\n  defaultCandidateExamPerformanceContent,\n  candidatePerfomranceStateInterface,\n  FC_reportCandidatePerformanceData,\n} from \"./CandidatePerformance\";\nimport DoneExamList, {\n  ExaminationProgressToPrintInterface,\n  ExaminationProgressReportContentInterface,\n  defaultExaminationProgressContent,\n  displayStatus,\n  examProgressStateInterface,\n  FC_reportDoneExamList,\n} from \"./DoneExamList\";\nimport ExamList, {\n  ExamPreparationToPrintInterface,\n  examPreparationReportContentInterface,\n  defaultExamPreparationReportContent,\n  examPreparationStateInterface,\n  FC_reportExamList,\n} from \"./ExamList\";\nimport ExamPerformance, {\n  ExamPerformanceToPrintInterface,\n  examPerformanceReportContentInterface,\n  defaultExamPerformanceContent,\n  examPerformanceStateInterface,\n  FC_reportExamPerformanceData,\n} from \"./ExamPerformance\";\nimport ExamPerformancePerDistrict, {\n  FC_ExamPerformancePerDistrictPropsData,\n} from \"./ExamPerformancePerDistrict\";\nimport ExamReportFilters from \"./ExamReportFilters\";\nimport ExamReportModals, { ModalForTypes } from \"./ExamReportModals\";\nimport ExamReportTitle from \"./ExamReportTitle\";\n\nexport interface reportCourseInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n  exam: {\n    questions: string[];\n    status: number;\n    period: string;\n    course: string;\n    exam_status: PrepareExamStatus;\n    termes: string;\n    questions_per_page: number;\n    exam_date: string;\n    start_time: string;\n    duration: number;\n    number_format: QuestionNumberFormat;\n    discription: string;\n    createdAt: string;\n    updatedAt: string;\n    id: string;\n  };\n}\n\nexport const getExamByCourseId = (\n  allExams: ExamItemResponse[],\n  course_id: string\n): ExamItemResponse | undefined => {\n  return allExams.find((item) => item.course === course_id);\n};\n\nexport const getPeriodById = (\n  periods: SessionPlanInterface[],\n  period_id: string\n): SessionPlanInterface | undefined => {\n  return periods.find((item) => item.session_plan_id === period_id);\n};\n\nexport const loadAllExams = (\n  examsList: ExamItemResponse[] | null,\n  selected_period: SessionPlanInterface | null\n): ExamItemResponse[] | null => {\n  let result: ExamItemResponse[] | null = examsList;\n  if (result && selected_period) {\n    result = result.filter(\n      (item) => item.period === selected_period?.session_plan_id\n    );\n  } else {\n    result = examsList;\n  }\n  return result;\n};\n\n// TYPES OF REPORTS ======================================\nexport enum reportTitleType {\n  APPLICANTS_PERFORMANCE = \"Exam report\",\n  EXAM_PREPARATION = \"List of prepared and not prepared exams\",\n  EXAM_PERFORMANCE = \"Exam performance\",\n  EXAMINATION_PROGRESS = \"List of complete & remaining exams\",\n  EXAM_DISTRICT_PERFORMANCE = \"Top 30 exams passed in\", // ADD DISTRICT NAME EX: Muhanga District\n  APPLICANTS_DISTRICT_PERFORMANCE = \"Top 30 applicants performance\", // ADD DISTRICT NAME EX: Muhanga District && EXAM NAME EX: Physics\n}\n\ninterface ExamReportProps {\n  auth: Auth;\n  periods: SessionPlanReducerInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n  courses: course[] | null;\n  examsList: ExamItemResponse[] | null;\n  adminExamReport: ExamReportReducerType;\n  GetAllSessionPlans: Function;\n  loadEducationCategories: Function;\n  setSelectedEducationCategory: (\n    education_category: education_category\n  ) => void;\n  loadCourses: (callback: (loading: boolean) => void) => void;\n  loadExamsList: (callback: (loading: boolean) => void) => void;\n  loadDoneExam: (period_id: string, callback: Function) => void;\n  loadPerfomranceExam: (period_id: string, callback: Function) => void;\n  loadSchoolLevels: (callback: (loading: boolean) => void) => void;\n  loadCandidatesExamPerformance: (\n    dataBody: FilterParamType | null,\n    callback: Function\n  ) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface ExamReportState {\n  loading: boolean;\n  loadingCourses: boolean;\n  loadingExams: boolean;\n  downloading: boolean;\n  loadingDoneExam: boolean;\n  loadingCandidatesExamPerformance: boolean;\n  loadingExamPerformance: boolean;\n  loadingSettings: boolean;\n\n  // FILTER STATES =======================================\n  filterPreparation: \"prepared\" | \"not prepared\" | \"all\";\n  filterExamProgress: \"Done\" | \"Active\" | \"all\";\n  filterApplicantPerformance: ReportUserExamStatus | \"all\";\n  // END FILTER STATES =======================================\n\n  selectPeriod: boolean;\n  generateReportModal: {\n    reportType: \"EXCEL\" | \"PDF\";\n    status: boolean;\n  } | null;\n  districtModal: boolean;\n  selected_period: SessionPlanInterface | null;\n\n  // GENERATE EXCEL REPORT =======================================\n  // WHAT TO PRINT ########################################\n  reportTitle: reportTitleType;\n  // WHAT TITLE TO PRINT ########################################\n  excelReportTitle: string;\n  // SET DEFAULT CONTENT ########################################\n  // ############### EXAM PREPARATION ######################\n  examsToPrint: ExamPreparationToPrintInterface[] | null;\n  examPreparationReportContent: examPreparationReportContentInterface[];\n  // ############### EXAM PERFORMANCE ######################\n  examPerformanceToPrint: ExamPerformanceToPrintInterface[] | null;\n  examPerformanceReportContent: examPerformanceReportContentInterface[];\n  // ############### TOP 30 EXAM PERFORMANCE ######################\n  exam30PerformanceToPrint: ExamPerformanceToPrintInterface[] | null;\n  exam30PerformanceReportContent: examPerformanceReportContentInterface[];\n  // ############### EXAMINATION PROGRESS ######################\n  examinationProgressToPrint: ExaminationProgressToPrintInterface[] | null;\n  examinationProgressReportContent: ExaminationProgressReportContentInterface[];\n  // ############### CANDIDATE EXAM PERFORMANCE ######################\n  candidateExamPerformanceToPrint:\n    | CandidateExamPerformanceToPrintInterface[]\n    | null;\n\n  candidateExamPerformanceReportContent: CandidateExamPerformanceReportContentInterface[];\n  // ############### CANDIDATE EXAM PERFORMANCE ######################\n\n  candidate30ExamPerformanceToPrint:\n    | CandidateExamPerformanceToPrintInterface[]\n    | null;\n\n  candidate30ExamPerformanceReportContent: CandidateExamPerformanceReportContentInterface[];\n  // END GENERATE EXCEL REPORT =======================================\n}\n\nclass _ExamReport extends Component<ExamReportProps, ExamReportState> {\n  constructor(props: ExamReportProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingCourses: true,\n      loadingExams: true,\n      downloading: false,\n      loadingDoneExam: true,\n      loadingCandidatesExamPerformance: true,\n      loadingExamPerformance: true,\n      loadingSettings: true,\n      selectPeriod: false,\n      districtModal: false,\n\n      // FILTER STATES =======================================\n      filterPreparation: \"all\",\n      filterExamProgress: \"all\",\n      filterApplicantPerformance: \"all\",\n      // END FILTER STATES =======================================\n\n      generateReportModal: null,\n      selected_period: null,\n\n      // GENERATE EXCEL REPORT =======================================\n      // WHAT TO PRINT ########################################\n      reportTitle: reportTitleType.APPLICANTS_PERFORMANCE,\n      // WHAT TITLE TO PRINT ########################################\n      excelReportTitle: reportTitleType.APPLICANTS_PERFORMANCE,\n      // SET DEFAULT CONTENT ########################################\n      // ############### EXAM PREPARATION ######################\n      examsToPrint: null,\n      examPreparationReportContent: defaultExamPreparationReportContent,\n      // ############### EXAM PERFORMANCE ######################\n      examPerformanceToPrint: null,\n      examPerformanceReportContent: defaultExamPerformanceContent,\n      // ############### TOP 30 EXAM PERFORMANCE ######################\n      exam30PerformanceToPrint: null,\n      exam30PerformanceReportContent: defaultExamPerformanceContent,\n      // ############### EXAMINATION PROGRESS ######################\n      examinationProgressToPrint: null,\n      examinationProgressReportContent: defaultExaminationProgressContent,\n      // ############### CANDIDATE EXAM PERFORMANCE ######################\n      candidateExamPerformanceToPrint: null,\n\n      candidateExamPerformanceReportContent:\n        defaultCandidateExamPerformanceContent,\n      // ############### CANDIDATE EXAM PERFORMANCE ######################\n\n      candidate30ExamPerformanceToPrint: null,\n\n      candidate30ExamPerformanceReportContent:\n        defaultCandidateExamPerformanceContent,\n      // END GENERATE EXCEL REPORT =======================================\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingCourses = (value: boolean) => {\n    this.setState({ loadingCourses: value });\n  };\n\n  setLoadingExams = (value: boolean) => {\n    this.setState({ loadingExams: value });\n  };\n\n  setDownloading = (value: boolean) => {\n    this.setState({ downloading: value });\n  };\n\n  setLoadingDoneExam = (value: boolean) => {\n    this.setState({ loadingDoneExam: value });\n  };\n\n  setLoadingCandidatesExamPerformance = (value: boolean) => {\n    this.setState({ loadingCandidatesExamPerformance: value });\n  };\n\n  setLoadingExamPerformance = (value: boolean) => {\n    this.setState({ loadingExamPerformance: value });\n  };\n\n  setLoadingSettings = (value: boolean) => {\n    this.setState({ loadingSettings: value });\n  };\n\n  setSelectPeriod = (value: boolean) => {\n    this.setState({ selectPeriod: value });\n  };\n\n  setDistrictModal = (value: boolean) => {\n    this.setState({ districtModal: value });\n  };\n\n  setFilterPreparation = (value: \"prepared\" | \"not prepared\" | \"all\") => {\n    this.setState({ filterPreparation: value });\n  };\n\n  setFilterExamProgress = (value: \"Done\" | \"Active\" | \"all\") => {\n    this.setState({ filterExamProgress: value });\n  };\n\n  setFilterApplicantPerformance = (value: ReportUserExamStatus | \"all\") => {\n    this.setState({ filterApplicantPerformance: value });\n  };\n\n  setGenerateReportModal = (\n    value: {\n      reportType: \"EXCEL\" | \"PDF\";\n      status: boolean;\n    } | null\n  ) => {\n    this.setState({ generateReportModal: value });\n  };\n\n  setSelectedPeriod = (value: SessionPlanInterface | null) => {\n    this.setState({ selected_period: value });\n  };\n\n  setReportTitle = (value: reportTitleType) => {\n    this.setState({ reportTitle: value });\n  };\n\n  setExcelReportTitle = (value: string) => {\n    this.setState({ excelReportTitle: value });\n  };\n\n  setExamsToPrint = (value: ExamPreparationToPrintInterface[] | null) => {\n    this.setState({ examsToPrint: value });\n  };\n\n  setExamPreparationReportContent = (\n    value: examPreparationReportContentInterface[]\n  ) => {\n    this.setState({ examPreparationReportContent: value });\n  };\n  setExamPerformanceToPrint = (\n    value: ExamPerformanceToPrintInterface[] | null\n  ) => {\n    this.setState({ examPerformanceToPrint: value });\n  };\n  setExamPerformanceReportContent = (\n    value: examPerformanceReportContentInterface[]\n  ) => {\n    this.setState({ examPerformanceReportContent: value });\n  };\n\n  setExam30PerformanceToPrint = (\n    value: ExamPerformanceToPrintInterface[] | null\n  ) => {\n    this.setState({ exam30PerformanceToPrint: value });\n  };\n  setExam30PerformanceReportContent = (\n    value: examPerformanceReportContentInterface[]\n  ) => {\n    this.setState({ exam30PerformanceReportContent: value });\n  };\n  setExaminationProgressToPrint = (\n    value: ExaminationProgressToPrintInterface[] | null\n  ) => {\n    this.setState({ examinationProgressToPrint: value });\n  };\n  setExaminationProgressExamPerformanceReportContent = (\n    value: ExaminationProgressReportContentInterface[]\n  ) => {\n    this.setState({ examinationProgressReportContent: value });\n  };\n\n  setCandidateExamPerformanceToPrint = (\n    value: CandidateExamPerformanceToPrintInterface[] | null\n  ) => {\n    this.setState({ candidateExamPerformanceToPrint: value });\n  };\n\n  setCandidateExamPerformanceReportContent = (\n    value: CandidateExamPerformanceReportContentInterface[]\n  ) => {\n    this.setState({ candidateExamPerformanceReportContent: value });\n  };\n\n  setCandidate30ExamPerformanceToPrint = (\n    value: CandidateExamPerformanceToPrintInterface[] | null\n  ) => {\n    this.setState({ candidate30ExamPerformanceToPrint: value });\n  };\n\n  setCandidate30ExamPerformanceReportContent = (\n    value: CandidateExamPerformanceReportContentInterface[]\n  ) => {\n    this.setState({ candidate30ExamPerformanceReportContent: value });\n  };\n\n  selectDefaultSession = (allSession: SessionPlanInterface[]) => {\n    if (allSession.length > 0) {\n      let active_period = allSession.find((item) => item.is_active);\n      this.setSelectedPeriod(active_period ? active_period : allSession[0]);\n    }\n    this.setSelectPeriod(false);\n  };\n\n  componentDidMount = () => {\n    if (\n      this.props.periods.allSessionPlans === null ||\n      this.props.periods.allSessionPlans.length === 0\n    ) {\n      this.props.GetAllSessionPlans(\n        (status: boolean, msg: string, data?: SessionPlanInterface[]) => {\n          this.setLoadingSettings(status);\n          if (!status) {\n            if (!isEmptyOrSpaces(msg)) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (\n              data &&\n              data.length > 0 &&\n              this.state.selected_period === null\n            ) {\n              this.selectDefaultSession(data);\n            }\n          }\n        }\n      );\n    } else if (this.state.selected_period === null) {\n      this.selectDefaultSession(this.props.periods.allSessionPlans);\n    }\n\n    if (\n      this.props.schoolLevels.education_categories === null ||\n      this.props.schoolLevels.education_categories.length\n    ) {\n      this.props.loadEducationCategories(\n        (status: boolean, msg: string, data?: education_category[]) => {\n          this.setLoadingSettings(status);\n          if (!status) {\n            if (!isEmptyOrSpaces(msg)) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (\n              data &&\n              data.length > 0 &&\n              !this.props.schoolLevels.selectedEducationCategory\n            ) {\n              this.props.setSelectedEducationCategory(data[0]);\n            }\n          }\n        }\n      );\n    } else if (!this.props.schoolLevels.selectedEducationCategory) {\n      this.props.setSelectedEducationCategory(\n        this.props.schoolLevels.education_categories[0]\n      );\n    }\n\n    if (\n      this.props.schoolLevels.school_levels === null ||\n      this.props.schoolLevels.school_levels.length <= 0\n    ) {\n      this.props.loadSchoolLevels(this.setLoadingSettings);\n    }\n\n    if (\n      this.props.courses === null ||\n      (this.props.courses.length === 0 && this.state.loadingCourses)\n    ) {\n      this.props.loadCourses(this.setLoadingCourses);\n    } else if (this.state.loadingCourses) {\n      this.setLoadingCourses(false);\n    }\n\n    if (\n      this.props.examsList === null ||\n      (this.props.examsList.length === 0 && this.state.loadingExams)\n    ) {\n      this.props.loadExamsList(this.setLoadingExams);\n    } else if (this.state.loadingExams) {\n      this.setLoadingExams(false);\n    }\n\n    if (\n      this.props.auth.application_session &&\n      this.props.auth.application_session.session_plan_id &&\n      (this.props.adminExamReport.DoneExam === null ||\n        (this.props.adminExamReport.DoneExam.length === 0 &&\n          this.state.loadingDoneExam))\n    ) {\n      this.props.loadDoneExam(\n        this.props.auth.application_session.session_plan_id,\n        (status: boolean, msg: string) => {\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            this.setLoadingDoneExam(false);\n          }\n        }\n      );\n    } else if (this.state.loadingDoneExam) {\n      this.setLoadingDoneExam(false);\n    }\n\n    if (\n      this.props.auth.application_session &&\n      this.props.auth.application_session.session_plan_id &&\n      (this.props.adminExamReport.CandidatesExamPerformance === null ||\n        (this.props.adminExamReport.CandidatesExamPerformance.length === 0 &&\n          this.state.loadingCandidatesExamPerformance))\n    ) {\n      this.props.loadCandidatesExamPerformance(\n        {\n          order: \"desc\",\n          sortBy: ReportGetCandidatePerformanceSortTypes.DATE,\n          filter: {\n            period: this.props.auth.application_session.session_plan_id,\n          },\n        },\n        (status: boolean, msg: string) => {\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            this.setLoadingCandidatesExamPerformance(false);\n          }\n        }\n      );\n    } else if (this.state.loadingCandidatesExamPerformance) {\n      this.setLoadingCandidatesExamPerformance(false);\n    }\n\n    if (\n      this.props.auth.application_session &&\n      this.props.auth.application_session.session_plan_id &&\n      (this.props.adminExamReport.ExamPerformance === null ||\n        (this.props.adminExamReport.ExamPerformance.length === 0 &&\n          this.state.loadingExamPerformance))\n    ) {\n      this.props.loadPerfomranceExam(\n        this.props.auth.application_session.session_plan_id,\n        (status: boolean, msg: string) => {\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            this.setLoadingExamPerformance(false);\n          }\n        }\n      );\n    } else if (this.state.loadingExamPerformance) {\n      this.setLoadingExamPerformance(false);\n    }\n\n    if (this.state.excelReportTitle === this.state.reportTitle) {\n      let result: string = \"\";\n      if (\n        this.state.excelReportTitle ===\n          reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n        this.props.adminExamReport.reportDistrictId\n      ) {\n        result += ` ${this.props.adminExamReport.reportDistrictId.district_name} district`;\n      } else if (\n        this.state.excelReportTitle ===\n        reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE\n      ) {\n        if (this.props.adminExamReport.reportDistrictId) {\n          result += ` in ${this.props.adminExamReport.reportDistrictId.district_name} district`;\n        }\n        if (this.props.adminExamReport.reportCourseId) {\n          result += ` in exam of ${this.props.adminExamReport.reportCourseId.course_name}(${this.props.adminExamReport.reportCourseId.course_code})`;\n        }\n      } else {\n        result = \"\";\n      }\n      this.setExcelReportTitle(this.state.excelReportTitle + result);\n      this.setLoading(false);\n    }\n  };\n\n  onPeriodChange = (period_id: string) => {\n    this.props.loadDoneExam(period_id, (status: boolean, msg: string) => {\n      this.setLoadingDoneExam(status);\n      if (!status) {\n        if (msg.length > 0) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n        this.setLoadingDoneExam(false);\n      }\n    });\n\n    this.props.loadPerfomranceExam(\n      period_id,\n      (status: boolean, msg: string) => {\n        this.setLoadingExamPerformance(status);\n        if (!status) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          this.setLoadingExamPerformance(false);\n        }\n      }\n    );\n\n    this.props.loadCandidatesExamPerformance(\n      {\n        order: \"desc\",\n        sortBy: ReportGetCandidatePerformanceSortTypes.DATE,\n        filter: {\n          period: period_id,\n        },\n      },\n      (status: boolean, msg: string) => {\n        if (!status) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          this.setLoadingCandidatesExamPerformance(false);\n        }\n      }\n    );\n  };\n\n  getLevelbyId = (level_id: string): school_level | undefined => {\n    if (this.props.schoolLevels.school_levels) {\n      return this.props.schoolLevels.school_levels.find(\n        (item) => item.school_level_id === level_id\n      );\n    }\n  };\n\n  getCourses = (): course[] | null => {\n    let result: course[] | null = [],\n      search_all: boolean = true;\n    if (this.props.courses) {\n      // FILTER BY EDICATION CATEGORY ====================\n      if (this.props.schoolLevels.selectedEducationCategory) {\n        for (const key in this.props.courses) {\n          if (Object.prototype.hasOwnProperty.call(this.props.courses, key)) {\n            if (this.props.courses[key].school_levels.length > 0) {\n              this.props.courses[key].school_levels.forEach((level) => {\n                let levelDetail = this.getLevelbyId(level);\n                if (\n                  levelDetail &&\n                  (levelDetail.education_institute.includes(\n                    this.props.schoolLevels.selectedEducationCategory!\n                      .education_institute_id\n                  ) ||\n                    levelDetail.education_institute.length <= 0)\n                ) {\n                  result && result.push(this.props.courses![key]);\n                }\n              });\n            } else {\n              result && result.push(this.props.courses![key]);\n            }\n          }\n        }\n      }\n      // RETURN DEFAULT VALUES ====================\n      else {\n        search_all = false;\n      }\n    }\n    return !search_all ? this.props.courses : result;\n  };\n\n  updateExamToPrint = () => {\n    // EXAM PREPARATION ######################\n    if (this.state.reportTitle === reportTitleType.EXAM_PREPARATION) {\n      if (\n        loadAllExams(this.props.examsList, this.state.selected_period) &&\n        this.getCourses() &&\n        this.props.periods.allSessionPlans\n      ) {\n        let data: examPreparationStateInterface[] = FC_reportExamList(\n          this.getCourses()!,\n          loadAllExams(this.props.examsList, this.state.selected_period)!\n        );\n        let arrayNew: ExamPreparationToPrintInterface[] = [];\n        let n: number = 1;\n        for (const key in data) {\n          if (Object.prototype.hasOwnProperty.call(data, key)) {\n            let school_level: string = \"\";\n            if (data[key].school_levels.length) {\n              data[key].school_levels.forEach((element, index) => {\n                let findLevel = this.getLevelbyId(element);\n                if (index === 0) {\n                  school_level = findLevel ? findLevel.school_level_name : \"\";\n                } else {\n                  school_level += findLevel\n                    ? \", \" + findLevel.school_level_name\n                    : \"\";\n                }\n              });\n            } else {\n              school_level = \"Any level\";\n            }\n            let dataArray: ExamPreparationToPrintInterface = {\n              course_id: n,\n              course_name: data[key].course_name,\n              course_code: data[key].course_code,\n              description: data[key].description,\n              school_levels: data[key].school_levels.length\n                ? school_level\n                : \"Any\",\n              exam_period: data[key].exam\n                ? getPeriodById(\n                    this.props.periods.allSessionPlans,\n                    data[key].exam!.period\n                  )\n                  ? getPeriodById(\n                      this.props.periods.allSessionPlans,\n                      data[key].exam!.period\n                    )!.session_plan_name\n                  : \"-\"\n                : \"-\",\n              exam_date: data[key].exam ? DATE(data[key].exam!.exam_date) : \"-\",\n              exam_time: data[key].exam ? data[key].exam!.start_time : \"-\",\n              exam_duration: data[key].exam\n                ? data[key].exam!.duration.toString()\n                : \"-\",\n              preparation_status: data[key].exam ? \"Prepared\" : \"Not prepared\",\n            };\n\n            for (const key in this.state.examPreparationReportContent) {\n              if (\n                Object.prototype.hasOwnProperty.call(\n                  this.state.examPreparationReportContent,\n                  key\n                )\n              ) {\n                if (!this.state.examPreparationReportContent[key].status) {\n                  delete dataArray[\n                    this.state.examPreparationReportContent[key].key\n                  ];\n                }\n              }\n            }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n        this.setExamsToPrint(arrayNew);\n        arrayNew = [];\n        n = 1;\n        // props.applicationsToPrint=;\n      }\n    }\n    // EXAM PERFORMANCE ######################\n    if (this.state.reportTitle === reportTitleType.EXAM_PERFORMANCE) {\n      if (\n        loadAllExams(this.props.examsList, this.state.selected_period) &&\n        this.getCourses() &&\n        this.props.adminExamReport.ExamPerformance &&\n        this.props.periods.allSessionPlans\n      ) {\n        let data: examPerformanceStateInterface[] =\n          FC_reportExamPerformanceData(\n            this.getCourses()!,\n            loadAllExams(this.props.examsList, this.state.selected_period)!,\n            this.props.adminExamReport.ExamPerformance\n          );\n        let arrayNew: ExamPerformanceToPrintInterface[] = [];\n        let n: number = 1;\n        for (const key in data) {\n          if (Object.prototype.hasOwnProperty.call(data, key)) {\n            let school_level: string = \"\";\n            if (data[key].school_levels.length) {\n              data[key].school_levels.forEach((element, index) => {\n                let findLevel = this.getLevelbyId(element);\n                if (index === 0) {\n                  school_level = findLevel ? findLevel.school_level_name : \"\";\n                } else {\n                  school_level += findLevel\n                    ? \", \" + findLevel.school_level_name\n                    : \"\";\n                }\n              });\n            } else {\n              school_level = \"Any level\";\n            }\n            let dataArray: ExamPerformanceToPrintInterface = {\n              course_id: n,\n              course_name: data[key].course_name,\n              course_code: data[key].course_code,\n              description: data[key].description,\n              school_levels: data[key].school_levels.length\n                ? school_level\n                : \"Any\",\n              exam_period: data[key].exam\n                ? getPeriodById(\n                    this.props.periods.allSessionPlans,\n                    data[key].exam!.period\n                  )\n                  ? getPeriodById(\n                      this.props.periods.allSessionPlans,\n                      data[key].exam!.period\n                    )!.session_plan_name\n                  : \"-\"\n                : \"-\",\n              exam_date: data[key].exam ? DATE(data[key].exam!.exam_date) : \"-\",\n              exam_time: data[key].exam ? data[key].exam!.start_time : \"-\",\n              exam_duration: data[key].exam\n                ? data[key].exam!.duration.toString()\n                : \"-\",\n              exam_performance: Number(data[key].exam_performance.toFixed(1)),\n            };\n\n            for (const key in this.state.examPerformanceReportContent) {\n              if (\n                Object.prototype.hasOwnProperty.call(\n                  this.state.examPerformanceReportContent,\n                  key\n                )\n              ) {\n                if (!this.state.examPerformanceReportContent[key].status) {\n                  delete dataArray[\n                    this.state.examPerformanceReportContent[key].key\n                  ];\n                }\n              }\n            }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n        this.setExamPerformanceToPrint(arrayNew);\n        arrayNew = [];\n        n = 1;\n        // props.applicationsToPrint=;\n      }\n    }\n    // TOP 30 EXAM PERFORMANCE ######################\n    if (this.state.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE) {\n      if (\n        loadAllExams(this.props.examsList, this.state.selected_period) &&\n        this.getCourses() &&\n        this.props.adminExamReport.DoneExam &&\n        this.props.adminExamReport.CandidatesExamPerformance &&\n        this.props.adminExamReport.reportDistrictId &&\n        this.props.periods.allSessionPlans\n      ) {\n        let data = FC_ExamPerformancePerDistrictPropsData(\n          this.getCourses()!,\n          loadAllExams(this.props.examsList, this.state.selected_period)!,\n          this.props.adminExamReport.DoneExam,\n          this.props.adminExamReport.CandidatesExamPerformance,\n          this.props.adminExamReport.reportDistrictId.district_id\n        ).slice(0, 30);\n        let arrayNew: ExamPerformanceToPrintInterface[] = [];\n        let n: number = 1;\n        for (const key in data) {\n          if (Object.prototype.hasOwnProperty.call(data, key)) {\n            let school_level: string = \"\";\n            if (data[key].school_levels.length) {\n              data[key].school_levels.forEach((element, index) => {\n                let findLevel = this.getLevelbyId(element);\n                if (index === 0) {\n                  school_level = findLevel ? findLevel.school_level_name : \"\";\n                } else {\n                  school_level += findLevel\n                    ? \", \" + findLevel.school_level_name\n                    : \"\";\n                }\n              });\n            } else {\n              school_level = \"Any level\";\n            }\n            let dataArray: ExamPerformanceToPrintInterface = {\n              course_id: n,\n              course_name: data[key].course_name,\n              course_code: data[key].course_code,\n              description: data[key].description,\n              school_levels: data[key].school_levels.length\n                ? school_level\n                : \"Any\",\n              exam_period: data[key].exam\n                ? getPeriodById(\n                    this.props.periods.allSessionPlans,\n                    data[key].exam!.period\n                  )\n                  ? getPeriodById(\n                      this.props.periods.allSessionPlans,\n                      data[key].exam!.period\n                    )!.session_plan_name\n                  : \"-\"\n                : \"-\",\n              exam_date: data[key].exam ? DATE(data[key].exam!.exam_date) : \"-\",\n              exam_time: data[key].exam ? data[key].exam!.start_time : \"-\",\n              exam_duration: data[key].exam\n                ? data[key].exam!.duration.toString()\n                : \"-\",\n              exam_performance: 0,\n            };\n\n            for (const key in this.state.exam30PerformanceReportContent) {\n              if (\n                Object.prototype.hasOwnProperty.call(\n                  this.state.exam30PerformanceReportContent,\n                  key\n                )\n              ) {\n                if (!this.state.exam30PerformanceReportContent[key].status) {\n                  delete dataArray[\n                    this.state.exam30PerformanceReportContent[key].key\n                  ];\n                }\n              }\n            }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n        this.setExam30PerformanceToPrint(arrayNew);\n        arrayNew = [];\n        n = 1;\n      }\n    }\n    // EXAMINATION PROGRESS ######################\n    if (this.state.reportTitle === reportTitleType.EXAMINATION_PROGRESS) {\n      if (\n        loadAllExams(this.props.examsList, this.state.selected_period) &&\n        this.getCourses() &&\n        this.props.adminExamReport.DoneExam &&\n        this.props.periods.allSessionPlans\n      ) {\n        let data: examProgressStateInterface[] = FC_reportDoneExamList(\n          this.getCourses()!,\n          loadAllExams(this.props.examsList, this.state.selected_period)!,\n          this.props.adminExamReport.DoneExam\n        );\n        let arrayNew: ExaminationProgressToPrintInterface[] = [];\n        let n: number = 1;\n        for (const key in data) {\n          if (Object.prototype.hasOwnProperty.call(data, key)) {\n            let school_level: string = \"\";\n            if (data[key].school_levels.length) {\n              data[key].school_levels.forEach((element, index) => {\n                let findLevel = this.getLevelbyId(element);\n                if (index === 0) {\n                  school_level = findLevel ? findLevel.school_level_name : \"\";\n                } else {\n                  school_level += findLevel\n                    ? \", \" + findLevel.school_level_name\n                    : \"\";\n                }\n              });\n            } else {\n              school_level = \"Any level\";\n            }\n            let dataArray: ExaminationProgressToPrintInterface = {\n              course_id: n,\n              course_name: data[key].course_name,\n              course_code: data[key].course_code,\n              description: data[key].description,\n              school_levels: data[key].school_levels.length\n                ? school_level\n                : \"Any\",\n              exam_period: data[key].exam\n                ? getPeriodById(\n                    this.props.periods.allSessionPlans,\n                    data[key].exam!.period\n                  )\n                  ? getPeriodById(\n                      this.props.periods.allSessionPlans,\n                      data[key].exam!.period\n                    )!.session_plan_name\n                  : \"-\"\n                : \"-\",\n              exam_date: data[key].exam ? DATE(data[key].exam!.exam_date) : \"-\",\n              exam_time: data[key].exam ? data[key].exam!.start_time : \"-\",\n              exam_duration: data[key].exam\n                ? data[key].exam!.duration.toString()\n                : \"-\",\n              exam_status:\n                data[key].preparation_status === \"Done\"\n                  ? \"Completed\"\n                  : data[key].preparation_status,\n            };\n\n            for (const key in this.state.examinationProgressReportContent) {\n              if (\n                Object.prototype.hasOwnProperty.call(\n                  this.state.examinationProgressReportContent,\n                  key\n                )\n              ) {\n                if (!this.state.examinationProgressReportContent[key].status) {\n                  delete dataArray[\n                    this.state.examinationProgressReportContent[key].key\n                  ];\n                }\n              }\n            }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n        this.setExaminationProgressToPrint(arrayNew);\n        arrayNew = [];\n        n = 1;\n        // props.applicationsToPrint=;\n      }\n    }\n    // CANDIDATE EXAM PERFORMANCE ######################\n    if (this.state.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE) {\n      if (\n        this.getCourses() &&\n        this.props.adminExamReport.CandidatesExamPerformance &&\n        this.props.periods.allSessionPlans\n      ) {\n        let data: candidatePerfomranceStateInterface[] =\n          FC_reportCandidatePerformanceData(\n            this.getCourses()!,\n            this.props.adminExamReport.CandidatesExamPerformance,\n            this.props.adminExamReport.reportCourseId\n              ? this.props.adminExamReport.reportCourseId.course_id\n              : \"all\"\n          );\n        let arrayNew: CandidateExamPerformanceToPrintInterface[] = [];\n        let n: number = 1;\n        for (const key in data) {\n          if (Object.prototype.hasOwnProperty.call(data, key)) {\n            let school_level: string = \"\";\n            if (data[key].school_levels.length) {\n              data[key].school_levels.forEach((element, index) => {\n                let findLevel = this.getLevelbyId(element);\n                if (index === 0) {\n                  school_level = findLevel ? findLevel.school_level_name : \"\";\n                } else {\n                  school_level += findLevel\n                    ? \", \" + findLevel.school_level_name\n                    : \"\";\n                }\n              });\n            } else {\n              school_level = \"Any level\";\n            }\n            let dataArray: CandidateExamPerformanceToPrintInterface = {\n              applicant_id: n,\n              course_name: data[key].course_name,\n              course_code: data[key].course_code,\n              description: data[key].description,\n              school_levels: data[key].school_levels.length\n                ? school_level\n                : \"Any\",\n              exam_period: getPeriodById(\n                this.props.periods.allSessionPlans,\n                data[key].exam.period\n              )\n                ? getPeriodById(\n                    this.props.periods.allSessionPlans,\n                    data[key].exam.period\n                  )!.session_plan_name\n                : \"-\",\n              exam_date: DATE(data[key].exam.exam_date),\n              exam_start_time: timestampToDate(\n                Number(data[key].exam.start_time)\n              ).timeAMPM,\n              exam_end_time: timestampToDate(Number(data[key].exam.end_time))\n                .timeAMPM,\n              performance_status: capitalizeFirstLetter(\n                displayStatus(data[key].exam_stastus)\n              ),\n              applicant_name: capitalizeFirstLetter(data[key].user_name),\n              national_id: data[key].national_id,\n              email: data[key].user_email,\n              phone: data[key].user_phone,\n              marks:\n                data[key].exam_stastus !== ReportUserExamStatus.Editing\n                  ? Number(data[key].user_total_marks.toFixed(1)) + \"%\"\n                  : \"-\",\n            };\n\n            for (const key in this.state\n              .candidateExamPerformanceReportContent) {\n              if (\n                Object.prototype.hasOwnProperty.call(\n                  this.state.candidateExamPerformanceReportContent,\n                  key\n                )\n              ) {\n                if (\n                  !this.state.candidateExamPerformanceReportContent[key].status\n                ) {\n                  delete dataArray[\n                    this.state.candidateExamPerformanceReportContent[key].key\n                  ];\n                }\n              }\n            }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n        this.setCandidateExamPerformanceToPrint(arrayNew);\n        arrayNew = [];\n        n = 1;\n        // props.applicationsToPrint=;\n      }\n    }\n    // 30 CANDIDATE EXAM PERFORMANCE ######################\n    if (\n      this.state.reportTitle === reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE\n    ) {\n      if (\n        this.getCourses() &&\n        this.props.adminExamReport.CandidatesExamPerformance &&\n        this.props.periods.allSessionPlans\n      ) {\n        let data: candidatePerfomranceStateInterface[] =\n          FC_CandiadtePerformancePerDistrictFilter(\n            FC_reportCandidatePerformanceData(\n              this.getCourses()!,\n              this.props.adminExamReport.CandidatesExamPerformance,\n              this.props.adminExamReport.reportCourseId\n                ? this.props.adminExamReport.reportCourseId.course_id\n                : \"all\"\n            ),\n            this.props.adminExamReport.reportDistrictId\n              ? this.props.adminExamReport.reportDistrictId.district_id\n              : null,\n            this.props.adminExamReport.reportCourseId\n              ? this.props.adminExamReport.reportCourseId.course_id\n              : null,\n            this.state.filterApplicantPerformance\n          ).slice(0, 30);\n        let arrayNew: CandidateExamPerformanceToPrintInterface[] = [];\n        let n: number = 1;\n        for (const key in data) {\n          if (Object.prototype.hasOwnProperty.call(data, key)) {\n            let school_level: string = \"\";\n            if (data[key].school_levels.length) {\n              data[key].school_levels.forEach((element, index) => {\n                let findLevel = this.getLevelbyId(element);\n                if (index === 0) {\n                  school_level = findLevel ? findLevel.school_level_name : \"\";\n                } else {\n                  school_level += findLevel\n                    ? \", \" + findLevel.school_level_name\n                    : \"\";\n                }\n              });\n            } else {\n              school_level = \"Any level\";\n            }\n            let dataArray: CandidateExamPerformanceToPrintInterface = {\n              applicant_id: n,\n              course_name: data[key].course_name,\n              course_code: data[key].course_code,\n              description: data[key].description,\n              school_levels: data[key].school_levels.length\n                ? school_level\n                : \"Any\",\n              exam_period: getPeriodById(\n                this.props.periods.allSessionPlans,\n                data[key].exam.period\n              )\n                ? getPeriodById(\n                    this.props.periods.allSessionPlans,\n                    data[key].exam.period\n                  )!.session_plan_name\n                : \"-\",\n              exam_date: DATE(data[key].exam.exam_date),\n              exam_start_time: timestampToDate(\n                Number(data[key].exam.start_time)\n              ).timeAMPM,\n              exam_end_time: timestampToDate(Number(data[key].exam.end_time))\n                .timeAMPM,\n              performance_status: capitalizeFirstLetter(\n                displayStatus(data[key].exam_stastus)\n              ),\n              applicant_name: capitalizeFirstLetter(data[key].user_name),\n              national_id: data[key].national_id,\n              email: data[key].user_email,\n              phone: data[key].user_phone,\n              marks:\n                data[key].exam_stastus !== ReportUserExamStatus.Editing\n                  ? Number(data[key].user_total_marks.toFixed(1)) + \"%\"\n                  : \"-\",\n            };\n\n            for (const key in this.state\n              .candidate30ExamPerformanceReportContent) {\n              if (\n                Object.prototype.hasOwnProperty.call(\n                  this.state.candidate30ExamPerformanceReportContent,\n                  key\n                )\n              ) {\n                if (\n                  !this.state.candidate30ExamPerformanceReportContent[key]\n                    .status\n                ) {\n                  delete dataArray[\n                    this.state.candidate30ExamPerformanceReportContent[key].key\n                  ];\n                }\n              }\n            }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n        this.setCandidate30ExamPerformanceToPrint(arrayNew);\n        arrayNew = [];\n        n = 1;\n        // props.applicationsToPrint=;\n      }\n    }\n  };\n\n  addToTitle = (): string => {\n    let result: string = \"\";\n\n    if (\n      this.state.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n      this.props.adminExamReport.reportDistrictId\n    ) {\n      result += ` ${this.props.adminExamReport.reportDistrictId.district_name} district`;\n    } else if (\n      this.state.reportTitle === reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE\n    ) {\n      if (this.props.adminExamReport.reportDistrictId) {\n        result += ` in ${this.props.adminExamReport.reportDistrictId.district_name} district`;\n      }\n      if (this.props.adminExamReport.reportCourseId) {\n        result += ` in exam of ${this.props.adminExamReport.reportCourseId.course_name}(${this.props.adminExamReport.reportCourseId.course_code})`;\n      }\n    } else {\n      result = \"\";\n    }\n    return result;\n  };\n\n  downlaodPDF = async () => {\n    if (!document.querySelectorAll(\"#report_content tbody tr\").length) {\n      this.props.PushPopupAlert({\n        title: `Can't generate Report of empty Data`,\n        theme: PopupAlertTheme.warning,\n      });\n      return false;\n    }\n\n    if (this.state.selected_period) {\n      const table: HTMLElement | null =\n        document.getElementById(\"report_content\");\n      const reportSettings: reportSettingsInterface = {\n        doneBy: this.props.auth.user.fname + \" \" + this.props.auth.user.lname,\n        title: \"Exam Report\",\n        subjectTitle: \"Subject\",\n        subject: `${this.state.reportTitle} ${this.addToTitle()}`,\n        period: this.state.selected_period.session_plan_name,\n        footer: \"Online Teacher Recruitment\",\n        institute: this.props.schoolLevels.selectedEducationCategory\n          ? this.props.schoolLevels.selectedEducationCategory\n              .education_category_title\n          : \"All institute\",\n        orientation:\n          this.state.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE ||\n          this.state.reportTitle ===\n            reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE\n            ? \"l\"\n            : \"p\",\n      };\n      table && (await generatePDF(reportSettings, table, this.setDownloading));\n    }\n  };\n\n  render() {\n    if (this.state.loading || this.props.periods.allSessionPlans === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading data...\n        </div>\n      );\n    }\n\n    if (this.props.periods.allSessionPlans.length === 0) {\n      return <NoSession />;\n    }\n\n    return (\n      <div>\n        <SideNavigation>\n          <div className=\"flex flex-col mb-4\">\n            <span className=\"text-sm text-gray-600 mb-2\">\n              Education categories:\n            </span>\n            {this.props.schoolLevels.education_categories === null ? (\n              <Loading />\n            ) : this.props.schoolLevels.education_categories.length === 0 ? (\n              <span>No result found</span>\n            ) : (\n              this.props.schoolLevels.education_categories.map((item, i) => (\n                <div\n                  onClick={() => {\n                    this.props.setSelectedEducationCategory(item);\n                    this.updateExamToPrint();\n                  }}\n                  key={i + 1}\n                  className={`border rounded px-2 py-2 mb-2 cursor-pointer ${\n                    this.props.schoolLevels.selectedEducationCategory !==\n                      null &&\n                    this.props.schoolLevels.selectedEducationCategory\n                      .education_institute_id === item.education_institute_id\n                      ? \"bg-blue-600 text-white hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                      : \"hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                  } font-bold flex flex-row items-center gap-2`}\n                >\n                  {this.props.schoolLevels.selectedEducationCategory !== null &&\n                  this.props.schoolLevels.selectedEducationCategory\n                    .education_institute_id === item.education_institute_id ? (\n                    <MdRadioButtonChecked />\n                  ) : (\n                    <MdRadioButtonUnchecked />\n                  )}\n                  <span>{item.education_category_title}</span>\n                </div>\n              ))\n            )}\n          </div>\n          <div className=\"\">\n            <div className=\"text-gray-600 text-sm mb-2\">Selected period:</div>\n            <div\n              onClick={() => this.setSelectPeriod(true)}\n              className=\"font-bold bg-blue-50 border border-blue-200 rounded py-2 cursor-pointer text-xs px-2 hover:underline justify-between text-blue-600  mb-4 w-full flex flex-row items-center animate__animated animate__zoomIn\"\n            >\n              {this.state.selected_period !== null\n                ? `${this.state.selected_period.session_plan_name}`\n                : \"Filter by period\"}\n              <FiEdit className=\"text-lg text-blue-600\" />\n            </div>\n          </div>\n          <ExamReportFilters\n            reportTitle={this.state.reportTitle}\n            filterPreparation={this.state.filterPreparation}\n            setFilterPreparation={this.setFilterPreparation}\n            filterExamProgress={this.state.filterExamProgress}\n            setFilterExamProgress={this.setFilterExamProgress}\n            filterApplicantPerformance={this.state.filterApplicantPerformance}\n            setFilterApplicantPerformance={this.setFilterApplicantPerformance}\n          />\n        </SideNavigation>\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* REPORT TITLE CONTROLLERS ============================================ */}\n        <ExamReportTitle\n          downloading={this.state.downloading}\n          dataToPrint={loadAllExams(\n            this.props.examsList,\n            this.state.selected_period\n          )}\n          downlaodPDF={this.downlaodPDF}\n          reportTitle={this.state.reportTitle}\n          setReportTitle={this.setReportTitle}\n          setGenerateReportModal={this.setGenerateReportModal}\n          generateReportModal={this.state.generateReportModal}\n          excelReportTitle={this.state.excelReportTitle}\n          setExcelReportTitle={this.setExcelReportTitle}\n          updateExamToPrint={this.updateExamToPrint}\n          // EXAM PREPARATION ######################\n          examsToPrint={this.state.examsToPrint}\n          examPreparationReportContent={this.state.examPreparationReportContent}\n          setExamPreparationReportContent={this.setExamPreparationReportContent}\n          // EXAM PERFORMANCE ######################\n          examPerformanceToPrint={this.state.examPerformanceToPrint}\n          examPerformanceReportContent={this.state.examPerformanceReportContent}\n          setExamPerformanceReportContent={this.setExamPerformanceReportContent}\n          // TOP 30 EXAM PERFORMANCE ######################\n          exam30PerformanceToPrint={this.state.exam30PerformanceToPrint}\n          exam30PerformanceReportContent={\n            this.state.exam30PerformanceReportContent\n          }\n          setExam30PerformanceReportContent={\n            this.setExam30PerformanceReportContent\n          }\n          // EXAMINATION PROGRESS ######################\n          examinationProgressToPrint={this.state.examinationProgressToPrint}\n          examinationProgressReportContent={\n            this.state.examinationProgressReportContent\n          }\n          setExaminationProgressExamPerformanceReportContent={\n            this.setExaminationProgressExamPerformanceReportContent\n          }\n          // CANDIDATE EXAM PERFORMANCE ######################\n          candidateExamPerformanceToPrint={\n            this.state.candidateExamPerformanceToPrint\n          }\n          candidateExamPerformanceReportContent={\n            this.state.candidateExamPerformanceReportContent\n          }\n          setCandidateExamPerformanceReportContent={\n            this.setCandidateExamPerformanceReportContent\n          }\n          // CANDIDATE EXAM PERFORMANCE ######################\n          candidate30ExamPerformanceToPrint={\n            this.state.candidate30ExamPerformanceToPrint\n          }\n          candidate30ExamPerformanceReportContent={\n            this.state.candidate30ExamPerformanceReportContent\n          }\n          setCandidate30ExamPerformanceReportContent={\n            this.setCandidate30ExamPerformanceReportContent\n          }\n          thisPeriod={\n            this.state.selected_period\n              ? this.state.selected_period.session_plan_id\n              : \"\"\n          }\n        />\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* EXAM LIST CONTROLLERS ============================================ */}\n        {this.state.reportTitle === reportTitleType.EXAM_PREPARATION &&\n          this.props.periods.allSessionPlans && (\n            <ExamList\n              loading={\n                this.state.loadingExams ||\n                this.state.loadingCourses ||\n                this.state.loadingDoneExam\n              }\n              examsListData={loadAllExams(\n                this.props.examsList,\n                this.state.selected_period\n              )}\n              courseListData={this.getCourses()}\n              thisPeriod={this.props.periods.allSessionPlans}\n              filterPreparation={this.state.filterPreparation}\n            />\n          )}\n        {/* EXAM LIST CONTROLLERS ============================================ */}\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* DONE & REMAING EXAM LIST CONTROLLERS ============================================ */}\n        {this.state.reportTitle === reportTitleType.EXAMINATION_PROGRESS &&\n          this.props.periods.allSessionPlans && (\n            <DoneExamList\n              loading={\n                this.state.loadingExams\n                  ? true\n                  : this.state.loadingCourses\n                  ? true\n                  : this.state.loadingDoneExam\n                  ? true\n                  : false\n              }\n              examsListData={loadAllExams(\n                this.props.examsList,\n                this.state.selected_period\n              )}\n              courseListData={this.getCourses()}\n              thisPeriod={this.props.periods.allSessionPlans}\n              doneExamsData={this.props.adminExamReport.DoneExam}\n              filterExamProgress={this.state.filterExamProgress}\n            />\n          )}\n        {/* DONE & REMAING EXAM LIST CONTROLLERS ============================================ */}\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* EXAM PERFORMANCE CONTROLLERS ============================================ */}\n        {this.state.reportTitle === reportTitleType.EXAM_PERFORMANCE &&\n          this.props.periods.allSessionPlans && (\n            <ExamPerformance\n              loading={\n                this.state.loadingExams\n                  ? true\n                  : this.state.loadingCourses\n                  ? true\n                  : this.state.loadingExamPerformance\n                  ? true\n                  : false\n              }\n              examsListData={loadAllExams(\n                this.props.examsList,\n                this.state.selected_period\n              )}\n              courseListData={this.getCourses()}\n              thisPeriod={this.props.periods.allSessionPlans}\n              examsPerformanceData={this.props.adminExamReport.ExamPerformance} // doneExamsData={props.adminExamReport.DoneExam}\n            />\n          )}\n        {/* END EXAM PERFORMANCE CONTROLLERS ============================================ */}\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* EXAM PERFORMANCE PER DISTRICT LIST CONTROLLERS ============================================ */}\n        {this.state.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n        this.props.periods.allSessionPlans &&\n        this.props.adminExamReport.reportDistrictId ? (\n          <ExamPerformancePerDistrict\n            loading={\n              this.state.loadingExams\n                ? true\n                : this.state.loadingCourses\n                ? true\n                : this.state.loadingCandidatesExamPerformance\n                ? true\n                : false\n            }\n            examsListData={loadAllExams(\n              this.props.examsList,\n              this.state.selected_period\n            )}\n            doneExamsData={this.props.adminExamReport.DoneExam}\n            courseListData={this.getCourses()}\n            thisPeriod={this.props.periods.allSessionPlans}\n            candidatePerformanceData={\n              this.props.adminExamReport.CandidatesExamPerformance\n            }\n            thisDistrict={this.props.adminExamReport.reportDistrictId}\n          />\n        ) : (\n          this.state.reportTitle ===\n            reportTitleType.EXAM_DISTRICT_PERFORMANCE && (\n            <NoResult\n              theme={NoResultThemes.Light}\n              value={\"Select district to view data\"}\n              component={\n                <div\n                  onClick={() => this.setDistrictModal(true)}\n                  className=\"btn bg-blue-50 border border-blue-300 text-blue-600 cursor-pointer hover:bg-blue-100 flex flex-row items-center justify-center gap-2 text-sm \"\n                >\n                  <BiFilterAlt className=\"text-xl\" />\n                  Filter by district\n                </div>\n              }\n            />\n          )\n        )}\n        {/* EXAM PERFORMANCE PER DISTRICT LIST CONTROLLERS ============================================  */}\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* APPLICANTS PERFORMANCE EXAM LIST CONTROLLERS ============================================ */}\n        {this.state.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE &&\n          this.props.periods.allSessionPlans && (\n            <CandidatePerformance\n              loading={\n                this.state.loadingExams\n                  ? true\n                  : this.state.loadingCourses\n                  ? true\n                  : this.state.loadingCandidatesExamPerformance\n                  ? true\n                  : false\n              }\n              examsListData={loadAllExams(\n                this.props.examsList,\n                this.state.selected_period\n              )}\n              courseListData={this.getCourses()}\n              thisPeriod={this.props.periods.allSessionPlans}\n              candidatePerformanceData={\n                this.props.adminExamReport.CandidatesExamPerformance\n              }\n              filterApplicantPerformance={this.state.filterApplicantPerformance}\n            />\n          )}\n        {/* APPLICANTS PERFORMANCE EXAM LIST CONTROLLERS ============================================  */}\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* APPLICANTS PERFORMANCE EXAM PER DISTRICT LIST CONTROLLERS ============================================ */}\n        {this.state.reportTitle ===\n          reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE &&\n          this.props.periods.allSessionPlans && (\n            <CandiadtePerformancePerDistrict\n              loading={\n                this.state.loadingExams\n                  ? true\n                  : this.state.loadingCourses\n                  ? true\n                  : this.state.loadingCandidatesExamPerformance\n                  ? true\n                  : false\n              }\n              examsListData={loadAllExams(\n                this.props.examsList,\n                this.state.selected_period\n              )}\n              courseListData={this.getCourses()}\n              thisPeriod={this.props.periods.allSessionPlans}\n              candidatePerformanceData={\n                this.props.adminExamReport.CandidatesExamPerformance\n              }\n              filterApplicantPerformance={this.state.filterApplicantPerformance}\n            />\n          )}\n        {/* APPLICANTS PERFORMANCE EXAM PER DISTRICT LIST CONTROLLERS ============================================  */}\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* CHANGE DISTRICT FILTER MODAL CONTROLLERS ============================================ */}\n        {this.state.districtModal && (\n          <ExamReportModals\n            modalFor={ModalForTypes.choose_district}\n            modalState={this.state.districtModal}\n            changeModalState={this.setDistrictModal}\n            districtId={\n              this.props.adminExamReport.reportDistrictId\n                ? this.props.adminExamReport.reportDistrictId.district_id\n                : \"all\"\n            }\n            reportTitle={this.state.reportTitle}\n          />\n        )}\n        {/* END CHANGE DISTRICT FILTER MODAL CONTROLLERS ============================================ */}\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* MODAL CONTROLLERS ============================================ */}\n        <ExamReportModals\n          modalState={this.state.selectPeriod}\n          changeModalState={this.setSelectPeriod}\n          applicationPeriods={this.props.periods.allSessionPlans}\n          selected_period={this.state.selected_period}\n          setSelectedPeriod={this.setSelectedPeriod}\n          onPeriodChange={this.onPeriodChange}\n          modalFor={ModalForTypes.period}\n        />\n        {/* END MODAL CONTROLLERS ============================================ */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  sessionPlan,\n  schoolLevels,\n  course,\n  prepareExam,\n  adminExamReport,\n}: StoreState): {\n  auth: Auth;\n  periods: SessionPlanReducerInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n  courses: course[] | null;\n  examsList: ExamItemResponse[] | null;\n  adminExamReport: ExamReportReducerType;\n} => {\n  return {\n    auth,\n    periods: sessionPlan,\n    schoolLevels,\n    courses: course.courses,\n    examsList: prepareExam.examsList,\n    adminExamReport,\n  };\n};\n\nexport const ExamReport = connect(mapStateToProps, {\n  setSelectedPeriod,\n  loadCourses,\n  loadExamsList,\n  GetAllSessionPlans,\n  loadEducationCategories,\n  loadDoneExam,\n  loadSchoolLevels,\n  loadPerfomranceExam,\n  loadCandidatesExamPerformance,\n  setSelectedEducationCategory,\n  PushPopupAlert,\n})(_ExamReport);\n","import React, { Fragment, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport {\n  course,\n  CandidatesFailedSucceeded,\n  ReportUserExamStatus,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport { StoreState } from \"../../../reducers\";\nimport { ExamReportReducerType } from \"../../../reducers/exam_report\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { DATE, timestampToDate } from \"../../../utils/functions\";\nimport {\n  candidatePerfomranceStateInterface,\n  controlRowsByStatus,\n  FC_reportCandidatePerformanceData,\n  searchCandidatePerformanceData,\n} from \"./CandidatePerformance\";\nimport { displayStatus } from \"./DoneExamList\";\nimport { getPeriodById } from \"./ExamReport\";\n\nexport const FC_CandiadtePerformancePerDistrictFilter = (\n  dataList: candidatePerfomranceStateInterface[],\n  district_id: string | null = null,\n  course_id: string | null = null,\n  thisValue: ReportUserExamStatus | \"all\" = \"all\"\n): candidatePerfomranceStateInterface[] => {\n  let result: candidatePerfomranceStateInterface[] = [];\n  if (thisValue === \"all\") {\n    result = dataList;\n  } else {\n    result = dataList.filter((item) => item.exam_stastus === thisValue);\n  }\n\n  if (district_id) {\n    result = result.filter(\n      (item) =>\n        item.exam.exam_location &&\n        item.exam.exam_location.district_id === district_id\n    );\n  }\n  if (course_id) {\n    result = result.filter((item) => item.course_id === course_id);\n  }\n\n  // SORTING ARRAY FROM MAX TO MIN ==========================\n  let swap: candidatePerfomranceStateInterface;\n  for (let i = 0; i < result.length; i++) {\n    for (let j = i; j < result.length; j++) {\n      if (result[j].user_total_marks > result[i].user_total_marks) {\n        swap = result[j];\n        result[j] = result[i];\n        result[i] = swap;\n      }\n    }\n  }\n  return result;\n};\n\ntype CandiadtePerformancePerDistrictProps = {\n  loading: boolean;\n  examsListData: ExamItemResponse[] | null;\n  courseListData: course[] | null;\n  thisPeriod: SessionPlanInterface[];\n  candidatePerformanceData: CandidatesFailedSucceeded[] | null;\n\n  // redux props ============\n  adminExamReport: ExamReportReducerType;\n  // FOR APPLICANT PERFORMANCE PROPS\n  filterApplicantPerformance: ReportUserExamStatus | \"all\";\n};\n\nconst CandiadtePerformancePerDistrict: React.FC<\n  CandiadtePerformancePerDistrictProps\n> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n\n  return (\n    <Fragment>\n      <div className=\"bg-white my-4\">\n        <div className=\"w-full px-2 py-2\">\n          <input\n            onChange={(e) => setSearchInput(e.target.value)}\n            type=\"text\"\n            value={searchInput}\n            placeholder=\"Search...\"\n            className=\"w-full bg-gray-100 py-2 px-3 rounded\"\n            disabled={\n              props.courseListData &&\n              props.candidatePerformanceData &&\n              FC_CandiadtePerformancePerDistrictFilter(\n                FC_reportCandidatePerformanceData(\n                  props.courseListData,\n                  props.candidatePerformanceData,\n                  props.adminExamReport.reportCourseId\n                    ? props.adminExamReport.reportCourseId.course_id\n                    : \"all\"\n                ),\n                props.adminExamReport.reportDistrictId\n                  ? props.adminExamReport.reportDistrictId.district_id\n                  : null,\n                props.adminExamReport.reportCourseId\n                  ? props.adminExamReport.reportCourseId.course_id\n                  : null,\n                props.filterApplicantPerformance\n              ).length <= 0\n                ? true\n                : false\n            }\n          />\n        </div>\n        <div className=\"w-full overflow-x-auto\">\n          <table className=\"w-full shadow\" id=\"report_content\">\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n              <tr>\n                <td className=\"px-2 py-2\">#</td>\n                <td className=\"px-2 py-2\">Applicants</td>\n                <td className=\"px-2 py-2\">National ID</td>\n                <td className=\"px-2 py-2\">Email</td>\n                <td className=\"px-2 py-2\">Phone</td>\n                <td className=\"px-2 py-2\">\n                  <div className=\"flex items-center gap-1\">Exam</div>\n                </td>\n                <td className=\"px-2 py-2\">Exam period</td>\n                <td className=\"px-2 py-2\">Exam date</td>\n                <td className=\"px-2 py-2\">Exam start time</td>\n                <td className=\"px-2 py-2\">Exam end time</td>\n                <td className=\"px-2 py-2\">\n                  <div className=\"flex items-center gap-1\">Marks</div>\n                </td>\n                <td className=\"px-2 py-2\">Status</td>\n              </tr>\n            </thead>\n            <tbody>\n              {props.courseListData === null || props.loading ? (\n                <tr>\n                  <td colSpan={12} className=\"px-2 py-2\">\n                    <Loading />\n                  </td>\n                </tr>\n              ) : props.candidatePerformanceData &&\n                FC_CandiadtePerformancePerDistrictFilter(\n                  FC_reportCandidatePerformanceData(\n                    props.courseListData,\n                    props.candidatePerformanceData,\n                    props.adminExamReport.reportCourseId\n                      ? props.adminExamReport.reportCourseId.course_id\n                      : \"all\"\n                  ),\n                  props.adminExamReport.reportDistrictId\n                    ? props.adminExamReport.reportDistrictId.district_id\n                    : null,\n                  props.adminExamReport.reportCourseId\n                    ? props.adminExamReport.reportCourseId.course_id\n                    : null,\n                  props.filterApplicantPerformance\n                ).length <= 0 ? (\n                <tr>\n                  <td colSpan={12} className=\"px-2 py-2 text-center\">\n                    No applicant list available!\n                  </td>\n                </tr>\n              ) : (\n                props.candidatePerformanceData &&\n                searchCandidatePerformanceData(\n                  FC_CandiadtePerformancePerDistrictFilter(\n                    FC_reportCandidatePerformanceData(\n                      props.courseListData,\n                      props.candidatePerformanceData,\n                      props.adminExamReport.reportCourseId\n                        ? props.adminExamReport.reportCourseId.course_id\n                        : \"all\"\n                    ),\n                    props.adminExamReport.reportDistrictId\n                      ? props.adminExamReport.reportDistrictId.district_id\n                      : null,\n                    props.adminExamReport.reportCourseId\n                      ? props.adminExamReport.reportCourseId.course_id\n                      : null,\n                    props.filterApplicantPerformance\n                  ).slice(0, 30),\n                  searchInput\n                ).map((item, i) => (\n                  <tr\n                    key={i + 1}\n                    className={`${controlRowsByStatus(\n                      item.exam_stastus\n                    )} text-gray-600 hover:bg-blue-100 hover:text-blue-700 text-sm`}\n                  >\n                    <td className=\"px-2 py-2\">{i + 1}</td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(item.user_name)}\n                    </td>\n                    <td className=\"px-2 py-2\">{item.national_id}</td>\n                    <td className=\"px-2 py-2\">{item.user_email}</td>\n                    <td className=\"px-2 py-2\">{item.user_phone}</td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(item.course_name)} (\n                      <span className=\"font-semibold\">{item.course_code}</span>)\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam\n                        ? getPeriodById(props.thisPeriod, item.exam.period)\n                          ? getPeriodById(props.thisPeriod, item.exam.period)!\n                              .session_plan_name\n                          : \"-\"\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam.exam_date ? DATE(item.exam.exam_date) : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam.start_time\n                        ? timestampToDate(item.exam.start_time).timeAMPM\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam.end_time\n                        ? timestampToDate(item.exam.end_time).timeAMPM\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam_stastus !== ReportUserExamStatus.Editing\n                        ? Number(item.user_total_marks.toFixed(1)) + \"%\"\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(displayStatus(item.exam_stastus))}\n                    </td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  adminExamReport,\n}: StoreState): {\n  adminExamReport: ExamReportReducerType;\n} => {\n  return {\n    adminExamReport,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {})(CandiadtePerformancePerDistrict)\n);\n","import React, { Fragment, useState } from \"react\";\nimport { connect } from \"react-redux\";\n// import { BiSort } from \"react-icons/bi\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  course,\n  CandidatesFailedSucceeded,\n  ExamDoneAndRemainingByPeriodInterface,\n  ReportUserExamStatus,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport { StoreState } from \"../../../reducers\";\nimport { ExamReportReducerType } from \"../../../reducers/exam_report\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { DATE } from \"../../../utils/functions\";\nimport search from \"../../../utils/search\";\nimport { getPeriodById } from \"./ExamReport\";\n\nexport interface examPerformanceStateInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  applicants: number;\n  course_id: string;\n  pass_applicant: number;\n  failed_applicant: number;\n  exam: ExamItemResponse;\n  user_total_marks: number;\n}\n\nexport const FC_ExamPerformancePerDistrictPropsData = (\n  allCourses: course[],\n  allExams: ExamItemResponse[],\n  examsData: ExamDoneAndRemainingByPeriodInterface[],\n  candidatePerformanceData: CandidatesFailedSucceeded[],\n  district_id: string\n): examPerformanceStateInterface[] => {\n  let pass: number = 0,\n    failed: number = 0,\n    result: examPerformanceStateInterface[] = [],\n    ids: string[] = [],\n    exam_ids: string[] = [],\n    doneExamsData: ExamDoneAndRemainingByPeriodInterface[] = examsData.filter(\n      (item) => item.exam_status.toLocaleLowerCase() === \"done\"\n    );\n\n  for (const key in doneExamsData) {\n    if (Object.prototype.hasOwnProperty.call(doneExamsData, key)) {\n      if (exam_ids.includes(doneExamsData[key].id)) continue;\n      exam_ids.push(doneExamsData[key].id);\n      let courser = allCourses.find(\n        (item) => item.course_id === doneExamsData[key].course\n      );\n      let _marks: number = 0;\n\n      if (courser) {\n        // CALCURATING SUM OF ALL CANDIDATES MARKS BY EXAM ID=================================\n        let candidatesByExam: CandidatesFailedSucceeded[] =\n          candidatePerformanceData.filter(\n            (item) =>\n              item.course === doneExamsData[key].course &&\n              item.exam_location &&\n              item.exam_location.district_id === district_id\n          );\n        for (const _key in candidatesByExam) {\n          if (Object.prototype.hasOwnProperty.call(candidatesByExam, _key)) {\n            if (ids.includes(candidatesByExam[_key].user.user_id)) continue;\n            ids.push(candidatesByExam[_key].user.user_id);\n            _marks += candidatesByExam[_key].total_marks;\n            if (\n              candidatesByExam[_key].user_status !==\n                ReportUserExamStatus.Editing &&\n              candidatesByExam[_key].total_marks >= 50\n            ) {\n              pass += 1;\n            } else if (\n              candidatesByExam[_key].user_status !==\n              ReportUserExamStatus.Editing\n            ) {\n              failed += 1;\n            }\n          }\n        }\n        let exam = allExams.find(\n          (item) =>\n            item.course === doneExamsData[key].course &&\n            item.period === doneExamsData[key].period\n        );\n        if (exam) {\n          result.push({\n            course_name: courser.course_name,\n            course_code: courser.course_code,\n            description: courser.description,\n            school_levels: courser.school_levels,\n            course_id: courser.course_id,\n            exam: exam,\n            pass_applicant: pass,\n            failed_applicant: failed,\n            applicants: ids.length,\n            user_total_marks: _marks ? _marks / ids.length : _marks, //candidatesByExam.length\n          });\n        }\n        _marks = 0;\n        ids = [];\n      }\n    }\n    exam_ids = [];\n  }\n\n  // SORTING ARRAY FROM MAX TO MIN ==========================\n  let swap: examPerformanceStateInterface;\n  for (let i = 0; i < result.length; i++) {\n    for (let j = i; j < result.length; j++) {\n      if (result[j].user_total_marks > result[i].user_total_marks) {\n        swap = result[j];\n        result[j] = result[i];\n        result[i] = swap;\n      }\n    }\n  }\n  return result;\n};\n\ntype ExamPerformancePerDistrictProps = {\n  loading: boolean;\n  examsListData: ExamItemResponse[] | null;\n  doneExamsData: ExamDoneAndRemainingByPeriodInterface[] | null;\n  courseListData: course[] | null;\n  thisPeriod: SessionPlanInterface[];\n  candidatePerformanceData: CandidatesFailedSucceeded[] | null;\n  thisDistrict: { district_id: string; district_name: string };\n  adminExamReport: ExamReportReducerType;\n};\n\nconst ExamPerformancePerDistrict: React.FC<ExamPerformancePerDistrictProps> = (\n  props\n) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n\n  return (\n    <Fragment>\n      <div className=\"bg-white my-4 max-w-full overflow-x-auto\">\n        <div className=\"w-full px-2 py-2\">\n          <input\n            onChange={(e) => setSearchInput(e.target.value)}\n            type=\"text\"\n            value={searchInput}\n            placeholder=\"Search...\"\n            className=\"w-full bg-gray-100 py-2 px-3 rounded\"\n            disabled={\n              props.courseListData &&\n              props.examsListData &&\n              props.doneExamsData &&\n              props.candidatePerformanceData &&\n              props.adminExamReport.reportDistrictId &&\n              FC_ExamPerformancePerDistrictPropsData(\n                props.courseListData,\n                props.examsListData,\n                props.doneExamsData,\n                props.candidatePerformanceData,\n                props.adminExamReport.reportDistrictId.district_id\n              ).slice(0, 30).length <= 0\n                ? true\n                : false\n            }\n          />\n        </div>\n        <table className=\"w-full shadow\" id=\"report_content\">\n          <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n            <tr>\n              <td className=\"px-2 py-2\">#</td>\n              <td\n                className=\"px-2 py-2 cursor-pointer\"\n                // onClick={() => setSort(\"course_name\")}\n              >\n                <div className=\"flex items-center gap-1\">\n                  Course\n                  {/* <BiSort /> */}\n                </div>\n              </td>\n              <td className=\"px-2 py-2\">Exam date</td>\n              <td className=\"px-2 py-2\">Exam time</td>\n              <td className=\"px-2 py-2\">Exam duration</td>\n              <td className=\"px-2 py-2\">Exam Period</td>\n              <td className=\"px-2 py-2\">Pass Applicants</td>\n              <td className=\"px-2 py-2\">Failed Applicants</td>\n              <td\n                className=\"px-2 py-2 cursor-pointer\"\n                // onClick={() => setSort(\"user_total_marks\")}\n              >\n                <div className=\"flex items-center gap-1\">\n                  Percentage\n                  {/* <BiSort /> */}\n                </div>\n              </td>\n            </tr>\n          </thead>\n          <tbody>\n            {props.courseListData === null || props.loading ? (\n              <tr>\n                <td colSpan={7} className=\"px-2 py-2\">\n                  <Loading />\n                </td>\n              </tr>\n            ) : props.examsListData &&\n              props.doneExamsData &&\n              props.candidatePerformanceData &&\n              props.adminExamReport.reportDistrictId &&\n              FC_ExamPerformancePerDistrictPropsData(\n                props.courseListData,\n                props.examsListData,\n                props.doneExamsData,\n                props.candidatePerformanceData,\n                props.adminExamReport.reportDistrictId.district_id\n              ).length <= 0 ? (\n              <tr>\n                <td colSpan={7} className=\"px-2 py-2 text-center\">\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"No Exam list available!\"}\n                  />\n                </td>\n              </tr>\n            ) : (\n              props.examsListData &&\n              props.doneExamsData &&\n              props.candidatePerformanceData &&\n              props.adminExamReport.reportDistrictId &&\n              search(\n                FC_ExamPerformancePerDistrictPropsData(\n                  props.courseListData,\n                  props.examsListData,\n                  props.doneExamsData,\n                  props.candidatePerformanceData,\n                  props.adminExamReport.reportDistrictId.district_id\n                ).slice(0, 30),\n                searchInput\n              ).map((item: examPerformanceStateInterface, i) => (\n                <tr\n                  key={i + 1}\n                  className={`bg-white text-gray-600 hover:bg-blue-100 hover:text-blue-700 border-b border-gray-300 hover:border-blue-500 text-sm`}\n                >\n                  <td className=\"px-2 py-2\">{i + 1}</td>\n                  <td className=\"px-2 py-2\">\n                    {capitalizeFirstLetter(item.course_name)} (\n                    <span className=\"font-semibold\">{item.course_code}</span>)\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam ? DATE(item.exam.exam_date) : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam ? item.exam.start_time : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam ? item.exam!.duration + \" min\" : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam\n                      ? getPeriodById(props.thisPeriod, item.exam.period)\n                        ? getPeriodById(props.thisPeriod, item.exam.period)!\n                            .session_plan_name\n                        : \"-\"\n                      : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.pass_applicant !== undefined\n                      ? item.pass_applicant\n                      : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.failed_applicant !== undefined\n                      ? item.failed_applicant\n                      : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {Number(item.user_total_marks.toFixed(1)) + \"%\"}\n                  </td>\n                </tr>\n              ))\n            )}\n          </tbody>\n        </table>\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  adminExamReport,\n}: StoreState): {\n  adminExamReport: ExamReportReducerType;\n} => {\n  return {\n    adminExamReport,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {})(ExamPerformancePerDistrict)\n);\n","import React, { Fragment } from \"react\";\nimport { MainItem } from \"../../../components/Navigation/SideNavigation\";\nimport { ReportUserExamStatus } from \"../../../interfaces\";\nimport { displayStatus } from \"./DoneExamList\";\nimport { reportTitleType } from \"./ExamReport\";\n\ntype ExamReportFiltersProps = {\n  reportTitle: reportTitleType;\n\n  // FOR EXAM PREPARATION PROPS =========================================\n  filterPreparation: \"prepared\" | \"not prepared\" | \"all\";\n  setFilterPreparation: (value: \"prepared\" | \"not prepared\" | \"all\") => void;\n\n  // FOR EXAMINATION PROGRESS PROPS ========================================\n  filterExamProgress: \"all\" | \"Done\" | \"Active\";\n  setFilterExamProgress: (value: \"all\" | \"Done\" | \"Active\") => void;\n\n  // FOR APPLICANT PERFORMANCE PROPS\n  filterApplicantPerformance: ReportUserExamStatus | \"all\";\n  setFilterApplicantPerformance: (value: \"all\" | ReportUserExamStatus) => void;\n};\nconst ExamReportFilters: React.FC<ExamReportFiltersProps> = (props) => {\n  return (\n    <Fragment>\n      {props.reportTitle !== reportTitleType.EXAM_PERFORMANCE &&\n        props.reportTitle !== reportTitleType.EXAM_DISTRICT_PERFORMANCE && (\n          <div className=\"pt-1\">\n            <div className=\"text-sm text-gray-700 pb-2 pt-2\">\n              Filter by statuses:\n            </div>\n            {/* FILTER OF EXAM PREPARATION ================================ */}\n            {props.reportTitle === reportTitleType.EXAM_PREPARATION && (\n              <section>\n                <div onClick={() => props.setFilterPreparation(\"all\")}>\n                  <MainItem\n                    title=\"All\"\n                    count={0}\n                    active={props.filterPreparation === \"all\"}\n                  />\n                </div>\n                <div onClick={() => props.setFilterPreparation(\"prepared\")}>\n                  <MainItem\n                    title=\"Prepared\"\n                    count={0}\n                    active={props.filterPreparation === \"prepared\"}\n                  />\n                </div>\n                <div onClick={() => props.setFilterPreparation(\"not prepared\")}>\n                  <MainItem\n                    title=\"Not Prepared\"\n                    count={0}\n                    active={props.filterPreparation === \"not prepared\"}\n                  />\n                </div>\n              </section>\n            )}\n            {/* END FILTER OF EXAM PREPARATION ================================ */}\n\n            {/* FILTER OF EXAMINATION PROGRESS ================================ */}\n            {props.reportTitle === reportTitleType.EXAMINATION_PROGRESS && (\n              <section>\n                <div onClick={() => props.setFilterExamProgress(\"all\")}>\n                  <MainItem\n                    title=\"All\"\n                    count={0}\n                    active={props.filterExamProgress === \"all\"}\n                  />\n                </div>\n                <div onClick={() => props.setFilterExamProgress(\"Done\")}>\n                  <MainItem\n                    title=\"Completed exam\"\n                    count={0}\n                    active={props.filterExamProgress === \"Done\"}\n                  />\n                </div>\n                <div onClick={() => props.setFilterExamProgress(\"Active\")}>\n                  <MainItem\n                    title=\"Remaining Exam\"\n                    count={0}\n                    active={props.filterExamProgress === \"Active\"}\n                  />\n                </div>\n              </section>\n            )}\n            {/* END FILTER OF EXAMINATION PROGRESS ================================ */}\n\n            {/* FILTER OF APPLICANTS PERFORMANCE ================================ */}\n            {(props.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE ||\n              props.reportTitle ===\n                reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE) && (\n              <section>\n                <div onClick={() => props.setFilterApplicantPerformance(\"all\")}>\n                  <MainItem\n                    title=\"All\"\n                    count={0}\n                    active={props.filterApplicantPerformance === \"all\"}\n                  />\n                </div>\n\n                {Object.values(ReportUserExamStatus).map((item, index) => (\n                  <div\n                    onClick={() => props.setFilterApplicantPerformance(item)}\n                    key={index + item}\n                  >\n                    <MainItem\n                      title={displayStatus(item)}\n                      count={0}\n                      active={props.filterApplicantPerformance === item}\n                    />\n                  </div>\n                ))}\n              </section>\n            )}\n            {/* END FILTER OF APPLICANTS PERFORMANCE ================================ */}\n          </div>\n        )}\n    </Fragment>\n  );\n};\n\nexport default React.memo(ExamReportFilters);\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { BiExport, BiFilterAlt } from \"react-icons/bi\";\nimport { FaEdit } from \"react-icons/fa\";\nimport { connect } from \"react-redux\";\nimport {\n  schoolLevelsStoreInterface,\n  SetReportDistrictId,\n  SetReportDistrictIdAction,\n} from \"../../../actions\";\nimport { course } from \"../../../interfaces/index\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport { StoreState } from \"../../../reducers\";\nimport { ExamReportReducerType } from \"../../../reducers/exam_report\";\nimport { loadExaminationProgress } from \"../../AdminDashboard/ExamDashboard/ExamDashboard\";\nimport {\n  CandidateExamPerformanceReportContentInterface,\n  CandidateExamPerformanceToPrintInterface,\n} from \"./CandidatePerformance\";\nimport {\n  ExaminationProgressReportContentInterface,\n  ExaminationProgressToPrintInterface,\n} from \"./DoneExamList\";\nimport {\n  examPreparationReportContentInterface,\n  ExamPreparationToPrintInterface,\n} from \"./ExamList\";\nimport {\n  ExamPerformanceToPrintInterface,\n  examPerformanceReportContentInterface,\n} from \"./ExamPerformance\";\nimport { reportTitleType } from \"./ExamReport\";\nimport ExamReportModals, { ModalForTypes } from \"./ExamReportModals\";\n\ntype ExamReportTitleProps = {\n  thisPeriod: string;\n  // FOR PRINT PDF =========================\n  downloading: boolean;\n  dataToPrint: any[] | null;\n  downlaodPDF: () => Promise<false | undefined>;\n  // FOR REPORT TYPE =========================\n  reportTitle: reportTitleType;\n  setReportTitle: (title: reportTitleType) => void;\n  // FOR GENERATE EXCEL =========================\n  generateReportModal: {\n    reportType: \"EXCEL\" | \"PDF\";\n    status: boolean;\n  } | null;\n  setGenerateReportModal: (\n    reportData: {\n      reportType: \"EXCEL\" | \"PDF\";\n      status: boolean;\n    } | null\n  ) => void;\n  excelReportTitle: string;\n  setExcelReportTitle: (title: string) => void;\n  updateExamToPrint: () => void;\n  // FOR EXCEL EXAM PREPARATION REPORT CONTENT ===============================\n  examPreparationReportContent: examPreparationReportContentInterface[];\n  setExamPreparationReportContent: (\n    content: examPreparationReportContentInterface[]\n  ) => void;\n  examsToPrint:\n    | ExamPreparationToPrintInterface[]\n    | ExamPerformanceToPrintInterface[]\n    | null;\n  // FOR EXCEL EXAM PERFORMANCE REPORT CONTENT ===============================\n  examPerformanceToPrint: ExamPerformanceToPrintInterface[] | null;\n  examPerformanceReportContent: examPerformanceReportContentInterface[];\n  setExamPerformanceReportContent: (\n    value: examPerformanceReportContentInterface[]\n  ) => void;\n\n  // FOR EXCEL TOP 30 EXAM PERFORMANCE REPORT CONTENT ===============================\n  exam30PerformanceToPrint: ExamPerformanceToPrintInterface[] | null;\n  exam30PerformanceReportContent: examPerformanceReportContentInterface[];\n  setExam30PerformanceReportContent: (\n    value: examPerformanceReportContentInterface[]\n  ) => void;\n\n  // FOR EXCEL EXAMINATION PROGRESS REPORT CONTENT ===============================\n  examinationProgressToPrint: ExaminationProgressToPrintInterface[] | null;\n  examinationProgressReportContent: ExaminationProgressReportContentInterface[];\n  setExaminationProgressExamPerformanceReportContent: (\n    value: ExaminationProgressReportContentInterface[]\n  ) => void;\n\n  // FOR EXCEL CANDIDATE EXAM PERFORMANCE REPORT CONTENT ===============================\n  candidateExamPerformanceToPrint:\n    | CandidateExamPerformanceToPrintInterface[]\n    | null;\n  candidateExamPerformanceReportContent: CandidateExamPerformanceReportContentInterface[];\n  setCandidateExamPerformanceReportContent: (\n    value: CandidateExamPerformanceReportContentInterface[]\n  ) => void;\n\n  // FOR EXCEL TOP 30 CANDIDATE EXAM PERFORMANCE REPORT CONTENT ===============================\n  candidate30ExamPerformanceToPrint:\n    | CandidateExamPerformanceToPrintInterface[]\n    | null;\n  candidate30ExamPerformanceReportContent: CandidateExamPerformanceReportContentInterface[];\n  setCandidate30ExamPerformanceReportContent: (\n    value: CandidateExamPerformanceReportContentInterface[]\n  ) => void;\n\n  // FOR CHOOSING LOCATION ===========================\n  adminExamReport: ExamReportReducerType;\n  SetReportDistrictId: (\n    data: {\n      district_id: string;\n      district_name: string;\n    } | null\n  ) => SetReportDistrictIdAction;\n\n  // FROM REDUX =================\n  schoolLevels: schoolLevelsStoreInterface;\n  courses: course[] | null;\n  examsList: ExamItemResponse[] | null;\n};\n\nconst ExamReportTitle: React.FC<ExamReportTitleProps> = (props) => {\n  const [changeReport, setChangeReport] = useState<boolean>(false);\n  const [districtModal, setDistrictModal] = useState<boolean>(false);\n  const [excelModal, setExcelModal] = useState<boolean>(false);\n  const [courseModal, setCourseModal] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (\n      props.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n      props.adminExamReport.reportDistrictId === null\n    ) {\n      setDistrictModal(true);\n    }\n    if (\n      props.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n      props.adminExamReport.reportDistrictId !== null\n    ) {\n      setDistrictModal(false);\n    }\n  }, [props.adminExamReport.reportDistrictId, props.reportTitle]);\n\n  return (\n    <Fragment>\n      <div className=\"grid md:grid-cols-12 items-center\">\n        <div className=\"col-span-1 md:col-span-8\">\n          <div className=\"mt-4 mx-4 flex flex-col gap-1\">\n            <span className=\"text-xl font-bold text-gray-700\">Exam Report</span>\n            <div\n              className=\"flex flex-row gap-2 items-end cursor-pointer\"\n              onClick={() => setChangeReport(true)}\n            >\n              <span className=\"text-gray-500 text-xl\">Report type: </span>\n              <span className=\"text-blue-600 text-3xl font-bold underline\">\n                {props.reportTitle}{\" \"}\n                {props.reportTitle ===\n                  reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n                props.adminExamReport.reportDistrictId\n                  ? props.adminExamReport.reportDistrictId.district_name\n                  : \"\"}\n              </span>\n            </div>\n            {(props.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE ||\n              props.reportTitle ===\n                reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE ||\n              props.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE) && (\n              <div className=\"flex flex-wrap justify-starts items-center text-xs text-gray-800 font-medium gap-1 my-1\">\n                <span className=\"text-gray-500\">Filter result: </span>\n                {props.adminExamReport.reportDistrictId &&\n                (props.reportTitle ===\n                  reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE ||\n                  props.reportTitle ===\n                    reportTitleType.EXAM_DISTRICT_PERFORMANCE) ? (\n                  <span className=\"px-2 py-1 rounded bg-gray-300\">\n                    # {props.adminExamReport.reportDistrictId.district_name}\n                  </span>\n                ) : (\n                  <span className=\"px-2 py-1 rounded bg-gray-300\">\n                    # All district\n                  </span>\n                )}\n                {props.adminExamReport.reportCourseId ? (\n                  props.reportTitle ===\n                    reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE && (\n                    <span className=\"px-2 py-1 rounded bg-gray-300\">\n                      #\n                      {props.adminExamReport.reportCourseId.course_name +\n                        \" (\" +\n                        props.adminExamReport.reportCourseId.course_code +\n                        \")\"}\n                    </span>\n                  )\n                ) : (\n                  <span className=\"px-2 py-1 rounded bg-gray-300\">\n                    # All exams\n                  </span>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n        <div className=\"col-span-1 md:col-span-4\">\n          <div className=\"float-right mt-3\">\n            {props.dataToPrint && props.dataToPrint.length > 0 && (\n              <div className=\"flex flex-row items-center justify-end font-bold mb-2\">\n                <BiExport className=\"text-2xl text-gray-500\" />\n                <span className=\"text-gray-500\">Export as</span>\n                <button\n                  className={`px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200 focus:outline-none`}\n                  // disabled={\n                  //   props.examsToPrint && props.examsToPrint.length <= 0\n                  //     ? true\n                  //     : false\n                  // }\n                  onClick={() => {\n                    props.updateExamToPrint();\n                    setExcelModal(true);\n                    props.setGenerateReportModal({\n                      reportType: \"EXCEL\",\n                      status: true,\n                    });\n                  }}\n                >\n                  EXCEL\n                </button>\n                <button\n                  className={`px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200 focus:outline-none ${\n                    props.downloading && \"cursor-wait\"\n                  }`}\n                  onClick={() => props.downlaodPDF()}\n                  disabled={props.downloading}\n                >\n                  PDF\n                </button>\n              </div>\n            )}\n\n            <div>\n              <div\n                onClick={() => setChangeReport(true)}\n                className=\"bg-blue-50 py-2 px-2 border border-blue-300 text-blue-600 font-medium hover:bg-blue-100 flex flex-row items-center justify-center gap-2 text-sm float-right\"\n              >\n                <FaEdit className=\"text-xl\" />\n                Change Report\n              </div>\n            </div>\n\n            <section className=\"flex items-center gap-1 float-right mt-1\">\n              {(props.reportTitle ===\n                reportTitleType.EXAM_DISTRICT_PERFORMANCE ||\n                props.reportTitle ===\n                  reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE) && (\n                <div\n                  onClick={() => setDistrictModal(true)}\n                  className=\"btn bg-blue-50 border border-blue-300 text-blue-600 cursor-pointer hover:bg-blue-100 flex flex-row items-center justify-center gap-2 text-sm \"\n                >\n                  <BiFilterAlt className=\"text-xl\" />\n                  Filter by district\n                </div>\n              )}\n              {(props.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE ||\n                props.reportTitle ===\n                  reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE) && (\n                <div\n                  onClick={() => setCourseModal(true)}\n                  className=\"btn bg-blue-50 border border-blue-300 text-blue-600 cursor-pointer hover:bg-blue-100 flex flex-row items-center justify-center gap-2 text-sm \"\n                >\n                  <BiFilterAlt className=\"text-xl\" />\n                  Filter by exam\n                </div>\n              )}\n            </section>\n          </div>\n        </div>\n      </div>\n\n      {/* GENERATE EXCEL MODAL CONTROLLERS ============================================ */}\n      {excelModal && (\n        <ExamReportModals\n          modalFor={ModalForTypes.generateReportModal}\n          modalState={excelModal}\n          changeModalState={setExcelModal}\n          reportTitle={props.reportTitle}\n          setGenerateReportModal={props.setGenerateReportModal}\n          excelReportTitle={props.excelReportTitle}\n          setExcelReportTitle={props.setExcelReportTitle}\n          updateExamToPrint={props.updateExamToPrint}\n          generateReportModal={props.generateReportModal}\n          // EXAM PREPARATION ######################\n          examsToPrint={props.examsToPrint}\n          examPreparationReportContent={props.examPreparationReportContent}\n          setExamPreparationReportContent={\n            props.setExamPreparationReportContent\n          }\n          // EXAM PERFORMANCE ######################\n          examPerformanceToPrint={props.examPerformanceToPrint}\n          examPerformanceReportContent={props.examPerformanceReportContent}\n          setExamPerformanceReportContent={\n            props.setExamPerformanceReportContent\n          }\n          // TOP 30 EXAM PERFORMANCE ######################\n          exam30PerformanceToPrint={props.exam30PerformanceToPrint}\n          exam30PerformanceReportContent={props.exam30PerformanceReportContent}\n          setExam30PerformanceReportContent={\n            props.setExam30PerformanceReportContent\n          }\n          // EXAMINATION PROGRESS ######################\n          examinationProgressToPrint={props.examinationProgressToPrint}\n          examinationProgressReportContent={\n            props.examinationProgressReportContent\n          }\n          setExaminationProgressExamPerformanceReportContent={\n            props.setExaminationProgressExamPerformanceReportContent\n          }\n          // CANDIDATE EXAM PERFORMANCE ######################\n          candidateExamPerformanceToPrint={\n            props.candidateExamPerformanceToPrint\n          }\n          candidateExamPerformanceReportContent={\n            props.candidateExamPerformanceReportContent\n          }\n          setCandidateExamPerformanceReportContent={\n            props.setCandidateExamPerformanceReportContent\n          }\n          candidate30ExamPerformanceToPrint={\n            props.candidate30ExamPerformanceToPrint\n          }\n          candidate30ExamPerformanceReportContent={\n            props.candidate30ExamPerformanceReportContent\n          }\n          setCandidate30ExamPerformanceReportContent={\n            props.setCandidate30ExamPerformanceReportContent\n          }\n        />\n      )}\n      {/* END GENERATE EXCEL MODAL CONTROLLERS ============================================ */}\n\n      {/* CHANGE REPORT TYPE MODAL CONTROLLERS ============================================ */}\n      {changeReport && (\n        <ExamReportModals\n          modalFor={ModalForTypes.title}\n          modalState={changeReport}\n          reportTitle={props.reportTitle}\n          changeModalState={setChangeReport}\n          setReportTitle={props.setReportTitle}\n          setExcelReportTitle={props.setExcelReportTitle}\n        />\n      )}\n      {/* END CHANGE REPORT TYPE MODAL CONTROLLERS ============================================ */}\n\n      {/* CHANGE DISTRICT FILTER MODAL CONTROLLERS ============================================ */}\n      {districtModal && (\n        <ExamReportModals\n          modalFor={ModalForTypes.choose_district}\n          modalState={districtModal}\n          changeModalState={setDistrictModal}\n          districtId={\n            props.adminExamReport.reportDistrictId\n              ? props.adminExamReport.reportDistrictId.district_id\n              : \"all\"\n          }\n          reportTitle={props.reportTitle}\n        />\n      )}\n      {/* END CHANGE DISTRICT FILTER MODAL CONTROLLERS ============================================ */}\n\n      {/* CHANGE COURSE FILTER MODAL CONTROLLERS ============================================ */}\n      {courseModal &&\n        loadExaminationProgress(\n          props.adminExamReport.DoneExam,\n          props.examsList,\n          props.schoolLevels.selectedEducationCategory,\n          props.courses,\n          props.schoolLevels.school_levels,\n          props.thisPeriod\n        ) && (\n          <ExamReportModals\n            modalFor={ModalForTypes.choose_exam}\n            modalState={courseModal}\n            AllExamData={\n              loadExaminationProgress(\n                props.adminExamReport.DoneExam,\n                props.examsList,\n                props.schoolLevels.selectedEducationCategory,\n                props.courses,\n                props.schoolLevels.school_levels,\n                props.thisPeriod\n              )!.finished\n            }\n            changeModalState={setCourseModal}\n            thisExam={props.adminExamReport.reportCourseId}\n          />\n        )}\n      {/* END CHANGE COURSE FILTER MODAL CONTROLLERS ============================================ */}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  adminExamReport,\n  schoolLevels,\n  course,\n  prepareExam,\n}: StoreState): {\n  schoolLevels: schoolLevelsStoreInterface;\n  courses: course[] | null;\n  examsList: ExamItemResponse[] | null;\n  adminExamReport: ExamReportReducerType;\n} => {\n  return {\n    schoolLevels,\n    courses: course.courses,\n    examsList: prepareExam.examsList,\n    adminExamReport,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, { SetReportDistrictId })(ExamReportTitle)\n);\n","import React from \"react\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport { RiFileExcel2Fill } from \"react-icons/ri\";\n\ninterface ExportToExcelProps {\n  fileData: any[];\n  fileName: string;\n  btnName?: string;\n  className?: string;\n  showIcon?: boolean;\n}\n\nconst ExportToExcel: React.FC<ExportToExcelProps> = ({\n  fileData,\n  fileName,\n  btnName = \"Excel\",\n  className = \"flex items-center gap-1 px-4 py-1 rounded text-green-700 bg-white border hover:text-white hover:bg-green-700 border-green-700 font-bold\",\n  showIcon = true,\n}) => {\n  const fileType =\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n  const fileExtension = \".xlsx\";\n\n  const exportToCSV = (apiData: any[], fileName: string) => {\n    const ws = XLSX.utils.json_to_sheet(apiData);\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n    const data = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n\n  return (\n    <button\n      onClick={(e) => exportToCSV(fileData, fileName)}\n      className={className}\n    >\n      {showIcon && <RiFileExcel2Fill />}\n      {btnName}\n    </button>\n  );\n};\n\nexport default ExportToExcel;\n","export default __webpack_public_path__ + \"static/media/mineduc.11a9ae1c.png\";","import jsPDF from \"jspdf\";\nimport { DATE } from \"../../utils/functions\";\nimport Logo from \"../../utils/mineduc.png\";\nrequire(\"jspdf-autotable\");\n\nexport const addFooters = (doc: any) => {\n  const pageCount = doc.internal.getNumberOfPages();\n\n  doc.setFont(\"helvetica\", \"italic\");\n  doc.setFontSize(8);\n  for (var i = 1; i <= pageCount; i++) {\n    doc.setPage(i);\n    doc.text(\n      \"Page \" + String(i) + \" of \" + String(pageCount),\n      doc.internal.pageSize.width / 2,\n      297,\n      {\n        align: \"center\",\n      }\n    );\n  }\n};\n\nexport type reportSettingsInterface = {\n  doneBy: string;\n  title: string;\n  subjectTitle: string;\n  subject: string;\n  institute: string;\n  period: string;\n  footer: string;\n  orientation?: \"p\" | \"l\";\n};\n\nexport const generatePDF = async (\n  reportSettings: reportSettingsInterface,\n  table: HTMLElement,\n  callBack: (status: boolean) => void\n) => {\n  callBack(true);\n  const orientation: \"p\" | \"l\" = reportSettings.orientation\n    ? reportSettings.orientation\n    : \"p\";\n  var lMargin: number = 20; //left margin in mm\n  var rMargin: number = 20; //right margin in mm\n  var pdfInMM: number = 185; // width of A4 in mm\n\n  //   var doc = new jsPDF(\"p\", \"mm\", \"a4\");\n  var doc: any = new jsPDF(orientation, \"mm\", \"a4\");\n\n  doc.setTextColor(95, 95, 95);\n  doc.setFontSize(28);\n  // doc.text(\n  //   this.props.reportTitle,\n  //   doc.internal.pageSize.getWidth() / 2,\n  //   30,\n  //   undefined,\n  //   \"center\"\n  // );\n  doc.addImage(Logo, \"png\", 20, 20, 10, 10);\n  doc.text(\"MINEDUC\", 32, 28.5, undefined, \"left\");\n  //   doc.setTextColor(19, 90, 152);\n  doc.setFontSize(26);\n  doc.text(\n    reportSettings.title,\n    doc.internal.pageSize.getWidth() / 2,\n    42.7,\n    undefined,\n    \"center\"\n  );\n\n  doc.setFontSize(20);\n  doc.text(\n    reportSettings.institute,\n    doc.internal.pageSize.getWidth() / 2,\n    53.7,\n    undefined,\n    \"center\"\n  );\n\n  var lines;\n  lines = doc.splitTextToSize(\n    reportSettings.subject,\n    pdfInMM - lMargin - rMargin\n  );\n  // if (reportSettings.position) {\n  // } else if (reportSettings.subject) {\n  //   lines = doc.splitTextToSize(\n  //     reportSettings.subject,\n  //     pdfInMM - lMargin - rMargin\n  //   );\n  // }\n\n  //   doc.setTextColor(0, 123, 255);\n  doc.setFontSize(16);\n  //   doc.text(lines, doc.internal.pageSize.getWidth() / 2, 45, {\n  //     maxWidth: 85,\n  //     align: \"center\",\n  //   });\n\n  var y = 63,\n    width;\n  doc.setTextColor(95, 95, 95);\n  doc.text(`${reportSettings.subjectTitle}: `, lMargin, y);\n  width = doc.getTextWidth(`${reportSettings.subjectTitle}: `);\n  // if (reportSettings.position) {\n  // } else if (reportSettings.position) {\n  //   doc.text(`Subject: `, lMargin, y);\n  //   width = doc.getTextWidth(\"Subject: \");\n  // }\n  // doc.setFontType(\"bold\");\n  doc.setTextColor(38, 38, 38);\n  for (var i = 0; i < lines.length; i++) {\n    if (y > 280) {\n      y = 10;\n      doc.addPage();\n    }\n    // doc.text(15, y, lines[i]);\n    doc.text(lines[i], lMargin + width, y);\n    y = y + 7;\n  }\n  doc.setTextColor(95, 95, 95);\n  doc.text(\"Period: \", lMargin, y + 3);\n  width = doc.getTextWidth(\"Period: \");\n  doc.setTextColor(38, 38, 38);\n  doc.text(reportSettings.period, lMargin + width, y + 3);\n\n  doc.autoTable({\n    html: table,\n    startY: 85,\n    margin: { horizontal: 20 },\n    cellPadding: 3, // Horizontal cell padding\n    // fontSize: 12,\n    rowHeight: 20,\n    // styles: { overflow: \"linebreak\" },\n    bodyStyles: { valign: \"top\" },\n    columnStyles: { email: { cellWidth: \"wrap\" } },\n    theme: \"striped\",\n    tableWidth: true,\n  });\n\n  doc.setFontSize(12);\n  let finalY = doc.lastAutoTable.finalY; // The y position on the page\n  doc.text(`Reported by: ${reportSettings.doneBy}`, lMargin, finalY + 15);\n  doc.text(\n    \"Report downloaded on \" + DATE(new Date().toString()),\n    lMargin,\n    finalY + 23\n  );\n\n  addFooters(doc);\n  await doc\n    .save(\n      `${\n        reportSettings.title +\n        \": \" +\n        reportSettings.subject +\n        \": \" +\n        reportSettings.period\n      }.pdf`,\n      { returnPromise: true }\n    )\n    .then(callBack(false));\n};\n","import { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  MySchoolInterface,\n  PostSchoolInterface,\n  SchoolInfoInterface,\n  SchoolsInterface,\n} from \"../shared/interfaces\";\n// import { setAxiosToken } from \"../utils/AxiosToken\";\nimport axios from \"axios\";\nimport { API } from \"../utils/api\";\nimport { errorToText } from \"../utils/errors\";\nimport { placedCandidateInterface } from \"../interfaces/marks_publication\";\nimport { PlacementListInterface } from \"../containers/PlacementLimit/PlacementLimit\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\nexport interface GetSchoolsAction {\n  type: ActionTypes.GET_SCHOOLS;\n  payload: SchoolsInterface[];\n}\n\nexport interface GetSchoolByIdAction {\n  type: ActionTypes.GET_SCHOOLS_BY_ID;\n  payload: MySchoolInterface;\n}\n\nexport interface GetSchoolsInfoAction {\n  type: ActionTypes.GET_SCHOOLS_INFO;\n  payload: SchoolInfoInterface[];\n}\n\nexport interface CreateSchoolAction {\n  type: ActionTypes.CREATE_SCHOOL;\n  payload: SchoolsInterface;\n}\n\nexport interface UpdateSchoolAction {\n  type: ActionTypes.UPDATE_SCHOOL;\n  payload: SchoolsInterface;\n}\n\nexport interface DeleteSchoolAction {\n  type: ActionTypes.DELETE_SCHOOL;\n  payload: string;\n}\n\n// School Posts interfaces\nexport interface FetchSchoolPostsAction {\n  type: ActionTypes.FETCH_SCHOOL_POSTS;\n  payload: PostSchoolInterface[];\n}\n\n// School Placements interfaces\nexport interface GetSchoolPlacementAction {\n  type: ActionTypes.GET_SCHOOL_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\n// District School Placements interfaces\nexport interface GetDistrictPlacementAction {\n  type: ActionTypes.GET_DISTRICT_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\n// District School Placements interfaces\nexport interface GetSessionPlacementAction {\n  type: ActionTypes.GET_SESSION_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\nexport interface FetchDistrictPostsAction {\n  type: ActionTypes.FETCH_DISTRICT_POSTS;\n  payload: PostSchoolInterface[];\n}\n\nexport interface CreateSchoolPostAction {\n  type: ActionTypes.CREATE_SCHOOL_POST;\n  payload: PostSchoolInterface;\n}\n\nexport interface UpdateSchoolPostAction {\n  type: ActionTypes.UPDATE_SCHOOL_POST;\n  payload: {\n    TYPE: \"DISTRICT\" | \"SCHOOL\" | \"RECEIVED\";\n    data: PostSchoolInterface;\n  };\n}\n\nexport interface DeleteSchoolPostAction {\n  type: ActionTypes.DELETE_SCHOOL_POST;\n  payload: PostSchoolInterface[];\n}\n\n// Get Institute Limit Posts Action interfaces\nexport interface GetInstitutePlacementLimitAction {\n  type: ActionTypes.GET_INSTITUTE_PLACEMENT_LIMIT;\n  payload: PlacementListInterface[];\n}\n\nexport interface GetDistrictPlacementLimitAction {\n  type: ActionTypes.GET_DISTRICT_PLACEMENT_LIMIT;\n  payload: PlacementListInterface[];\n}\n\nexport interface UpdateInstitutePlacementLimitAction {\n  type: ActionTypes.UPDATE_INSTITUTE_PLACEMENT_LIMIT;\n  payload: { limit_id: string; confirmed_post: number };\n}\n\nexport type SchoolActionType =\n  | GetSchoolsAction\n  | GetSchoolByIdAction\n  | GetSchoolsInfoAction\n  | CreateSchoolAction\n  | UpdateSchoolAction\n  | DeleteSchoolAction\n  | FetchSchoolPostsAction\n  | GetSchoolPlacementAction\n  | FetchDistrictPostsAction\n  | CreateSchoolPostAction\n  | UpdateSchoolPostAction\n  | DeleteSchoolPostAction\n  | GetDistrictPlacementAction\n  | GetSessionPlacementAction\n  | GetInstitutePlacementLimitAction\n  | GetDistrictPlacementLimitAction\n  | UpdateInstitutePlacementLimitAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSchools = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      const res = await axios.get<SchoolsInterface[]>(\n        `${API.APPLICATION}/schools`\n      );\n      dispatch<GetSchoolsAction>({\n        type: ActionTypes.GET_SCHOOLS,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSchoolById = (schoolId: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<MySchoolInterface>(\n        `${API.APPLICATION}/schools/${schoolId}`\n      );\n      dispatch<GetSchoolByIdAction>({\n        type: ActionTypes.GET_SCHOOLS_BY_ID,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// export const getSchoolsInfo = () => {\n//   return async (dispatch: Dispatch) => {\n//     setAxiosToken();\n//     const response = await axios.get<SchoolInfoInterface[]>(url);\n\n//     dispatch<GetSchoolsInfoAction>({\n//       type: ActionTypes.GET_SCHOOLS_INFO,\n//       payload: response.data,\n//     });\n//   };\n// };\n\nexport const createSchool = (data: SchoolsInterface) => {\n  console.log({ schools: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateSchoolAction>({\n      type: ActionTypes.CREATE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const updateSchool = (data: SchoolsInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateSchoolAction>({\n      type: ActionTypes.UPDATE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteSchool = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteSchoolAction>({\n      type: ActionTypes.DELETE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const fetchSchoolPosts = (school_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PostSchoolInterface[]>(\n        `${API.PLACEMENT}/requestpost/school/${school_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ schoolPosts: res });\n      console.log(\"====================================\");\n\n      dispatch<FetchSchoolPostsAction>({\n        type: ActionTypes.FETCH_SCHOOL_POSTS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSchoolPlacement = (school_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/school/${school_id}`\n      );\n\n      console.log({ getSchoolPlacement: res.data });\n\n      dispatch<GetSchoolPlacementAction>({\n        type: ActionTypes.GET_SCHOOL_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createSchoolPost = (data: PostSchoolInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateSchoolPostAction>({\n      type: ActionTypes.CREATE_SCHOOL_POST,\n      payload: data,\n    });\n  };\n};\n\nexport const updateSchoolPost = (\n  TYPE: \"DISTRICT\" | \"SCHOOL\" | \"RECEIVED\",\n  data: PostSchoolInterface\n) => {\n  console.log({ TYPE, data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateSchoolPostAction>({\n      type: ActionTypes.UPDATE_SCHOOL_POST,\n      payload: { TYPE, data },\n    });\n  };\n};\n\nexport const deleteSchoolPost = (data: PostSchoolInterface[]) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteSchoolPostAction>({\n      type: ActionTypes.DELETE_SCHOOL_POST,\n      payload: data,\n    });\n  };\n};\n\nexport const fetchDistrictPosts = (district_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PostSchoolInterface[]>(\n        `${API.PLACEMENT}/requestpost/district/${district_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ fetchDistrictPosts: res });\n      console.log(\"====================================\");\n\n      dispatch<FetchDistrictPostsAction>({\n        type: ActionTypes.FETCH_DISTRICT_POSTS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getDistrictPlacement = (\n  district_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/district/${district_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getDistrictPlacement: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetDistrictPlacementAction>({\n        type: ActionTypes.GET_DISTRICT_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSessionPlacement = (session_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/session/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getSessionPlacement: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetSessionPlacementAction>({\n        type: ActionTypes.GET_SESSION_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getInstitutePlacementLimit = (\n  institute_id: string,\n  session_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PlacementListInterface[]>(\n        `${API.PLACEMENT}/confirmedpostrequest/institute/${institute_id}/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getInstitutePlacementLimit: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetInstitutePlacementLimitAction>({\n        type: ActionTypes.GET_INSTITUTE_PLACEMENT_LIMIT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getDistrictPlacementLimit = (\n  district_id: string,\n  session_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PlacementListInterface[]>(\n        `${API.PLACEMENT}/confirmedpostrequest/district/${district_id}/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getDistrictPlacementLimit: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetDistrictPlacementLimitAction>({\n        type: ActionTypes.GET_DISTRICT_PLACEMENT_LIMIT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const updateInstitutePlacementLimit = (data: {\n  limit_id: string;\n  confirmed_post: number;\n}) => {\n  console.log(\"====================================\");\n  console.log({ updateInstitutePlacementLimit: data });\n  console.log(\"====================================\");\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateInstitutePlacementLimitAction>({\n      type: ActionTypes.UPDATE_INSTITUTE_PLACEMENT_LIMIT,\n      payload: data,\n    });\n  };\n};\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { MdLock, MdLocationOn } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert, schoolLevelsStoreInterface } from \"../../actions\";\nimport { getAllRoom } from \"../../actions/location\";\nimport { getSchools } from \"../../actions/schools\";\nimport {\n  blockUserToSystem,\n  unBlockUserToSystem,\n  resetUserAccess,\n} from \"../../actions/users\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport Loading from \"../../components/Loading/Loading\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport Table from \"../../components/Table/Table\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport {\n  getRoleById,\n  capitalizeFirstLetter,\n  getInstituteById,\n} from \"../../shared/dataTest\";\nimport {\n  RoomLocationInterface,\n  LocationRoomTableInterface,\n  DistrictInterface,\n  SystemUserRoleInterface,\n  UserInterface,\n  AccessTaskInterface,\n  SchoolsInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport { distinctDistrict } from \"../Locations/Locations\";\nimport { UserAccess } from \"./UserAccess\";\nimport UserRole from \"./UserRole\";\nimport profile from \"../../shared/blank_profile.png\"; // with im\n\nexport const getUserById = (users: UserInterface[], userId: string) => {\n  return users.find((item) => item.user_id === userId);\n};\n\nexport enum ModalState {\n  View_User = \"View User Info\",\n  Add_Access = \"Add Access To User\",\n  Update_Access = \"Update User Access\",\n  Close_Modal = \"Close Modal\",\n}\n\n// Tobe replaced with Emmy's function\nexport const LocationsInArray = (\n  LocationData: RoomLocationInterface[]\n): LocationRoomTableInterface[] | [] => {\n  let locationTemp: LocationRoomTableInterface[] = [];\n  for (let p in LocationData) {\n    let districts = LocationData[p].districts;\n    for (let d in districts) {\n      let centers = districts[d].centers;\n      for (let c in centers) {\n        let rooms = centers[c].rooms;\n        for (let r in rooms) {\n          locationTemp.push({\n            province_id: LocationData[p]._id,\n            province_name: LocationData[p].province_name,\n            district_id: districts[d]._id,\n            district_name: districts[d].district_name,\n            center_id: centers[c]._id,\n            center_name: centers[c].center_name,\n            room_id: rooms[r]._id,\n            room_name: rooms[r].room_number.toString(),\n            capacity: rooms[r].capacity,\n            occupied: rooms[r].occupied,\n          });\n        }\n      }\n    }\n  }\n  return locationTemp;\n};\n\ninterface AppProps {\n  users: UserInterface[];\n  roleList: SystemUserRoleInterface[];\n  userTypes: \"all\" | \"active\" | \"blocked\";\n  loadingUser: boolean;\n  schoolLevels: schoolLevelsStoreInterface;\n  setLoadingUser: (value: boolean) => void;\n  manageUser: UserInterface | null;\n  setManageUser: (value: UserInterface | null) => void;\n  changeRole: boolean;\n  setChangeRole: (value: boolean) => void;\n  currentPage: number;\n\n  // REDUX =================\n  allRoom: RoomLocationInterface[];\n  getAllRoom: Function;\n  schools: SchoolsInterface[];\n  getSchools: Function;\n  blockUserToSystem: Function;\n  unBlockUserToSystem: Function;\n  resetUserAccess: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface AppStates {\n  manageUserId: string;\n  loadingRequest: boolean;\n  loading: boolean;\n  loadingSchool: boolean;\n  loadingRequestType: \"RESET\" | \"STATUS\" | \"CHANGE_ROLE\" | null;\n  schoolList: SchoolsInterface[] | null;\n  roomList: RoomLocationInterface[] | null;\n  roomTable: LocationRoomTableInterface[] | null;\n  userAccess: AccessTaskInterface[] | null;\n  currentAccess: AccessTaskInterface | null;\n}\n\nclass UserList extends Component<AppProps, AppStates> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      manageUserId: \"\",\n      loadingRequest: false,\n      loading: true,\n      loadingSchool: true,\n      loadingRequestType: null,\n      schoolList: null,\n      roomList: null,\n      roomTable: null,\n      userAccess: null,\n      currentAccess: null,\n    };\n  }\n\n  setManageUserId = (value: string) => {\n    this.setState({ manageUserId: value });\n  };\n\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n\n  setLoadingSchool = (value: boolean) => {\n    this.setState({ loadingSchool: value });\n  };\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingRequestType = (\n    value: \"RESET\" | \"STATUS\" | \"CHANGE_ROLE\" | null\n  ) => {\n    this.setState({ loadingRequestType: value });\n  };\n\n  setRoomList = (value: RoomLocationInterface[] | null) => {\n    this.setState({ roomList: value });\n  };\n\n  setRoomTables = (value: LocationRoomTableInterface[] | null) => {\n    this.setState({ roomTable: value });\n  };\n\n  setCurrentAccess = (value: AccessTaskInterface | null) => {\n    this.setState({ currentAccess: value });\n  };\n\n  setSchoolList = (value: SchoolsInterface[] | null) => {\n    this.setState({ schoolList: value });\n  };\n\n  setUserAccess = (value: AccessTaskInterface[] | null) => {\n    this.setState({ userAccess: value });\n  };\n\n  componentDidMount = () => {\n    if (this.props.schools.length === 0) {\n      this.props.getSchools(\n        (status: boolean, msg: string, data?: SchoolsInterface[]) => {\n          this.setLoadingSchool(status);\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data) {\n              this.setLoadingSchool(false);\n              this.setSchoolList(data);\n            }\n          }\n        }\n      );\n    } else {\n      this.setSchoolList(this.props.schools);\n      this.setLoadingSchool(false);\n    }\n\n    if (this.props.allRoom.length === 0) {\n      this.props.getAllRoom(\n        (status: boolean, msg: string, data?: RoomLocationInterface[]) => {\n          this.setLoading(status);\n          if (!status && msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          if (data && data.length > 0) {\n            this.setRoomList(data);\n            this.setRoomTables(LocationsInArray(data));\n          }\n        }\n      );\n    } else if (this.state.loading) {\n      this.setRoomList(this.props.allRoom);\n      this.setRoomTables(LocationsInArray(this.props.allRoom));\n      this.setLoading(false);\n    }\n  };\n\n  tableData = (): JSX.Element[] => {\n    if (\n      this.props.loadingUser ||\n      this.state.loading ||\n      this.state.loadingSchool\n    ) {\n      return [\n        <tr\n          key={Math.random()}\n          className=\"border-b border-gray-200 hover:bg-gray-100\"\n        >\n          <td className=\"p-3 text-center\" colSpan={8}>\n            <Loading />\n          </td>\n        </tr>,\n      ];\n    }\n\n    let data: UserInterface[] = this.props.users;\n    if (data.length <= 0) {\n      return [\n        <tr\n          key={Math.random()}\n          className=\"border-b border-gray-200 hover:bg-gray-100\"\n        >\n          <td className=\"p-3 text-center\" colSpan={8}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    return data.map((user: UserInterface, index: number) => (\n      <tr\n        key={index + Math.random()}\n        className=\"border-b border-gray-200 hover:bg-gray-100 group cursor-pointer\"\n        onClick={() => {\n          this.props.setManageUser(user);\n          this.setManageUserId(user.user_id);\n        }}\n      >\n        <td className=\"p-3 text-left whitespace-nowrap\">{index + 1}</td>\n        <td className=\"p-3 text-left\">\n          <span>\n            {user.user_info &&\n              user.user_info.fname + \" \" + user.user_info.lname}\n          </span>\n        </td>\n        <td className=\"p-3 text-left\">{user.email}</td>\n        {/* <td className=\"p-3 text-left\">{user.phone_number}</td> */}\n        <td className=\"p-3 text-left\">\n          {user.user_info && user.user_info.sex === \"M\" ? \"Male\" : \"Female\"}\n        </td>\n        <td className=\"p-3 text-left text-blue-700 text-base font-medium\">\n          {user.default_access &&\n            user.default_access.system_user_role_id &&\n            user.default_access.system_user_role_id && (\n              <span\n                className={`px-2 py-1 font-semibold rounded text-blue-700 bg-blue-100 dark:bg-blue-700 dark:text-blue-100`}\n              >\n                {getRoleById(\n                  this.props.roleList,\n                  user.default_access.system_user_role_id\n                )?.role &&\n                  capitalizeFirstLetter(\n                    getRoleById(\n                      this.props.roleList,\n                      user.default_access.system_user_role_id\n                    )?.role\n                  )}\n              </span>\n            )}\n        </td>\n        {/* {userTypes === \"all\" && (\n          <td>\n            {user.is_active ? (\n              <span className={`px-2 py-1 font-semibold text-green-700`}>\n                Active\n              </span>\n            ) : (\n              <span className={`px-2 py-1 font-semibold text-red-700`}>\n                Blocked\n              </span>\n            )}\n          </td>\n        )} */}\n        <td className=\"px-3 text-center\">\n          <button\n            className=\"btn bg-gray-200 group-hover:bg-blue-700 group-hover:text-white focus:outline-none\"\n            title=\"Manage User Access\"\n            onClick={() => {\n              this.props.setManageUser(user);\n              this.setManageUserId(user.user_id);\n            }}\n          >\n            Manage\n          </button>\n        </td>\n      </tr>\n    ));\n  };\n\n  blockUser = async (user_id: string, actionType: boolean) => {\n    if (!user_id) {\n      this.props.PushPopupAlert({\n        title: \"User Access is required doesn't exist\",\n        theme: PopupAlertTheme.danger,\n      });\n    }\n\n    this.setLoadingRequest(true);\n\n    if (\n      !window.confirm(\n        `Are sure you want to ${actionType ? \"block\" : \"activate\"} this user?`\n      )\n    ) {\n      return this.setLoadingRequest(false);\n    }\n\n    try {\n      const res = await axios.patch(`${API.AUTH}/users/disactive/${user_id}`, {\n        is_active: !actionType,\n      });\n      if (res) {\n        console.log(\"====================================\");\n        console.log({ blockUserToSystem: res });\n        console.log(\"====================================\");\n        actionType\n          ? this.props.blockUserToSystem(user_id, this.props.currentPage)\n          : this.props.unBlockUserToSystem(user_id, this.props.currentPage);\n\n        this.props.PushPopupAlert({\n          title: `User has been ${actionType ? \"blocked\" : \"activated\"}!`,\n          theme: PopupAlertTheme.info,\n        });\n      }\n    } catch (error) {\n      console.error({ blockUser_ERROR: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n\n    this.setLoadingRequest(false);\n    user_id = \"\";\n  };\n\n  restUserAccess = async (user_id: string) => {\n    if (!user_id) {\n      this.props.PushPopupAlert({\n        title: \"User Access is required doesn't exist\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    if (!window.confirm(`Are sure you want to reset to default access?`)) {\n      return this.setLoadingRequest(false);\n    }\n\n    this.setLoadingRequest(true);\n    this.setLoadingRequestType(\"RESET\");\n\n    try {\n      const res = await axios.delete(`${API.AUTH}/custaccess/user/${user_id}`);\n      res && this.props.resetUserAccess(user_id, this.props.currentPage);\n      let resetedAccess: UserInterface | undefined = this.props.users.find(\n        (user) => user.user_id === user_id\n      );\n      if (resetedAccess) {\n        resetedAccess.default_access &&\n          this.setUserAccess(resetedAccess.default_access.access);\n        this.props.PushPopupAlert({\n          title: `Resetting User Access complete successfully`,\n          theme: PopupAlertTheme.info,\n        });\n        this.setCurrentAccess(null);\n      }\n    } catch (error) {\n      console.error({ reseting_user_access: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n\n    this.setLoadingRequest(false);\n    this.setLoadingRequestType(null);\n    user_id = \"\";\n  };\n\n  distinctDistrict = (\n    location: RoomLocationInterface[],\n    province_id?: string\n  ): DistrictInterface[] => {\n    let ids: string[] = [],\n      result: DistrictInterface[] = [];\n\n    if (province_id) {\n      result = location.find((item) => item._id === province_id)\n        ? location.find((item) => item._id === province_id)!.districts\n          ? location.find((item) => item._id === province_id)!.districts\n          : []\n        : [];\n    } else {\n      for (const key in location) {\n        if (Object.prototype.hasOwnProperty.call(location, key)) {\n          for (const keyDistrict in location[key].districts) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                location[key].districts,\n                keyDistrict\n              )\n            ) {\n              if (!ids.includes(location[key].districts[keyDistrict]._id)) {\n                ids.push(location[key].districts[keyDistrict]._id);\n                result.push(location[key].districts[keyDistrict]);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return result;\n  };\n\n  render() {\n    return (\n      <div>\n        {!this.props.manageUser && (\n          <div className=\"grid md:grid-cols-5 gap-2 mb-5\">\n            <div className={`md:col-span-5 rounded`}>\n              <div className=\"my-2 flex sm:flex-row flex-col justify-between\">\n                <div className=\"flex flex-col md:flex-row gap-1 items-center mx-1.5\">\n                  {/* <span className=\"text-lg\">All User</span>\n                  <MdChevronRight className=\"w-7 h-7\" />\n                  <span className=\"text-lg underline\">All User</span> */}\n                </div>\n              </div>\n              {this.props.users && (\n                <Table\n                  columns={[\n                    { columnTitle: \"#\", alignText: \"left\", padding: \"p-3\" },\n                    { columnTitle: \"Names\", alignText: \"left\", padding: \"p-3\" },\n                    { columnTitle: \"Email\", alignText: \"left\", padding: \"p-3\" },\n                    {\n                      columnTitle: \"Gender\",\n                      alignText: \"left\",\n                      padding: \"p-3\",\n                    },\n                    { columnTitle: \"Role\", alignText: \"left\", padding: \"p-3\" },\n                    // { columnTitle: \"Status\", alignText: \"left\", padding: \"p-3\" },\n                    { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n                  ]}\n                  rows={this.tableData}\n                  pagination={false}\n                  search={true}\n                  thColor=\"gray\"\n                  loading={\n                    this.props.loadingUser ||\n                    this.state.loading ||\n                    this.state.loadingSchool\n                  }\n                />\n              )}\n            </div>\n          </div>\n        )}\n\n        {/* -------------------------------------------------------- */}\n\n        {this.props.manageUser && (\n          <div className=\"bg-gray-100 h-100\">\n            {/* header */}\n            <div className=\"bg-white border-b border-t px-4 py-2 flex flex-col md:flex-row items-center gap-x-14\">\n              {this.props.users.find(\n                (user) => user.user_id === this.state.manageUserId\n              ) ? (\n                <div\n                  key={\n                    this.props.users.find(\n                      (user) => user.user_id === this.state.manageUserId\n                    )!.user_id + Math.random()\n                  }\n                  className=\"flex flex-col md:flex-row md:items-start items-center w-full gap-3\"\n                >\n                  <img\n                    src={\n                      this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.user_info.photo !== \"pic\"\n                        ? this.props.users.find(\n                            (user) => user.user_id === this.state.manageUserId\n                          )!.user_info.photo\n                        : profile\n                    }\n                    alt=\"\"\n                    className=\"rounded-full w-32 h-32\"\n                  />\n                  <div className=\"flex flex-col gap-1 items-start w-full\">\n                    <span className=\"text-2xl font-semibold\">\n                      {this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.user_info.fname +\n                        \" \" +\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.user_info.lname}\n                    </span>\n                    <div className=\"flex items-center\">\n                      <MdLock className=\"w-5 h-5\" />\n                      <span className=\"text-lg font-medium\">\n                        {this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.default_access &&\n                          getRoleById(\n                            this.props.roleList,\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.default_access!.system_user_role_id\n                          ).role}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-1\">\n                      <span className=\"text-gray-500\">Level:</span>\n                      <span className=\"text-base font-medium\">\n                        {this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.default_access &&\n                        getRoleById(\n                          this.props.roleList,\n                          this.props.users.find(\n                            (user) => user.user_id === this.state.manageUserId\n                          )!.default_access!.system_user_role_id\n                        ).district_required\n                          ? \"District\"\n                          : this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.default_access &&\n                            getRoleById(\n                              this.props.roleList,\n                              this.props.users.find(\n                                (user) =>\n                                  user.user_id === this.state.manageUserId\n                              )!.default_access!.system_user_role_id\n                            ).school_required\n                          ? \"School\"\n                          : this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.default_access &&\n                            getRoleById(\n                              this.props.roleList,\n                              this.props.users.find(\n                                (user) =>\n                                  user.user_id === this.state.manageUserId\n                              )!.default_access!.system_user_role_id\n                            ).room_required\n                          ? \"Room\"\n                          : this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.default_access &&\n                            getRoleById(\n                              this.props.roleList,\n                              this.props.users.find(\n                                (user) =>\n                                  user.user_id === this.state.manageUserId\n                              )!.default_access!.system_user_role_id\n                            ).education_institution_required\n                          ? \"Institute\"\n                          : \"-\"}\n                      </span>\n                    </div>\n                    {this.props.users.find(\n                      (user) => user.user_id === this.state.manageUserId\n                    )!.default_access &&\n                    getRoleById(\n                      this.props.roleList,\n                      this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.default_access!.system_user_role_id\n                    ).education_institution_required ? (\n                      <div className=\"flex items-center gap-1\">\n                        <span className=\"text-gray-500\">Institute:</span>\n                        <span className=\"text-base font-medium\">\n                          {this.props.users.find(\n                            (user) => user.user_id === this.state.manageUserId\n                          )!.default_access &&\n                          this.props.schoolLevels.education_categories &&\n                          getInstituteById(\n                            this.props.schoolLevels.education_categories,\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.default_access!.education_institution_id\n                          )\n                            ? getInstituteById(\n                                this.props.schoolLevels.education_categories,\n                                this.props.users.find(\n                                  (user) =>\n                                    user.user_id === this.state.manageUserId\n                                )!.default_access!.education_institution_id\n                              )!.education_category_title\n                            : \"Unknown Institute\"}\n                        </span>\n                      </div>\n                    ) : this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.default_access &&\n                      getRoleById(\n                        this.props.roleList,\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.default_access!.system_user_role_id\n                      ).district_required ? (\n                      <div className=\"flex items-center gap-1\">\n                        <span className=\"text-gray-500\">District:</span>\n                        <span className=\"text-base font-medium\">\n                          {this.props.users.find(\n                            (user) => user.user_id === this.state.manageUserId\n                          )!.default_access &&\n                            this.state.roomList &&\n                            distinctDistrict(this.state.roomList).find(\n                              (item) =>\n                                item.district_id ===\n                                this.props.users.find(\n                                  (user) =>\n                                    user.user_id === this.state.manageUserId\n                                )!.default_access!.district_id\n                            ) &&\n                            distinctDistrict(this.state.roomList).find(\n                              (item) =>\n                                item.district_id ===\n                                this.props.users.find(\n                                  (user) =>\n                                    user.user_id === this.state.manageUserId\n                                )!.default_access!.district_id\n                            )!.district_name}\n                        </span>\n                      </div>\n                    ) : this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.default_access &&\n                      getRoleById(\n                        this.props.roleList,\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.default_access!.system_user_role_id\n                      ).school_required ? (\n                      <div className=\"flex items-center gap-1\">\n                        <span className=\"text-gray-500\">School:</span>\n                        <span className=\"text-base font-medium\">\n                          {this.state.schoolList &&\n                          this.state.schoolList.find(\n                            (school) =>\n                              school._id ===\n                              this.props.users.find(\n                                (user) =>\n                                  user.user_id === this.state.manageUserId\n                              )!.default_access?.school_id\n                          )\n                            ? this.state.schoolList.find(\n                                (school) =>\n                                  school._id ===\n                                  this.props.users.find(\n                                    (user) =>\n                                      user.user_id === this.state.manageUserId\n                                  )!.default_access?.school_id\n                              )!.school_name\n                            : \"Unknown school\"}\n                        </span>\n                      </div>\n                    ) : (\n                      this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.default_access &&\n                      getRoleById(\n                        this.props.roleList,\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.default_access!.system_user_role_id\n                      ).room_required && (\n                        <div className=\"flex items-center gap-1\">\n                          {/* <span className=\"text-gray-500\">Room:</span> */}\n                          <MdLocationOn className=\"text-gray-500\" />\n                          {this.state.roomTable && (\n                            <span className=\"text-base font-medium\">\n                              {this.state.roomTable.find(\n                                (room) =>\n                                  room.room_id ===\n                                  this.props.users.find(\n                                    (user) =>\n                                      user.user_id === this.state.manageUserId\n                                  )!.default_access?.room_id\n                              )?.district_name +\n                                \" - \" +\n                                this.state.roomTable.find(\n                                  (room) =>\n                                    room.room_id ===\n                                    this.props.users.find(\n                                      (user) =>\n                                        user.user_id === this.state.manageUserId\n                                    )!.default_access?.room_id\n                                )?.center_name +\n                                \" - Room \" +\n                                this.state.roomTable.find(\n                                  (room) =>\n                                    room.room_id ===\n                                    this.props.users.find(\n                                      (user) =>\n                                        user.user_id === this.state.manageUserId\n                                    )!.default_access?.room_id\n                                )?.room_name}\n                            </span>\n                          )}\n                        </div>\n                      )\n                    )}\n                  </div>\n                </div>\n              ) : (\n                <NoResult\n                  theme={NoResultThemes.Dark}\n                  value={\"User info not found\"}\n                />\n              )}\n              {this.props.users.find(\n                (user) => user.user_id === this.state.manageUserId\n              ) && (\n                <div\n                  key={\n                    this.props.users.find(\n                      (user) => user.user_id === this.state.manageUserId\n                    )!.user_id + Math.random()\n                  }\n                  className=\"flex flex-col w-full\"\n                >\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-gray-500\">NID:</span>\n                    <span className=\"text-base font-medium\">\n                      {\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.n_id\n                      }\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-gray-500\">Email:</span>\n                    <span className=\"text-base font-medium\">\n                      {\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.email\n                      }\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-gray-500\">Phone:</span>\n                    <span className=\"text-base font-medium\">\n                      {\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.phone_number\n                      }\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-gray-500\">Status:</span>\n                    <span className=\"text-base font-medium\">\n                      {this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.is_active === false\n                        ? \"Blocked\"\n                        : \"Active\"}\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    {this.props.users.find(\n                      (user) => user.user_id === this.state.manageUserId\n                    )!.custome_access && (\n                      <button\n                        className={`px-2 py-1 font-semibold text-gray-50 inline-flex items-center rounded ${\n                          this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"RESET\"\n                            ? \"cursor-wait bg-gray-400\"\n                            : \"bg-gray-600\"\n                        }`}\n                        onClick={() =>\n                          this.restUserAccess(\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.user_id\n                          )\n                        }\n                        disabled={this.state.loadingRequest}\n                      >\n                        <MdLock className=\"w-4 h-4 fill-current\" />\n                        <span>\n                          {this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"RESET\"\n                            ? \"Reseting...\"\n                            : \"Reset Access\"}\n                        </span>\n                      </button>\n                    )}\n                    {!this.props.changeRole && (\n                      <button\n                        className=\"bg-yellow-300 hover:bg-yellow-400 px-2 py-1 font-semibold text-black inline-flex items-center rounded\"\n                        onClick={() => this.props.setChangeRole(true)}\n                      >\n                        <MdLock className=\"w-4 h-4 fill-current\" />\n                        <span>Change Role</span>\n                      </button>\n                    )}\n                    {this.props.users.find(\n                      (user) => user.user_id === this.state.manageUserId\n                    )!.is_active ? (\n                      <button\n                        className={`px-2 py-1 font-semibold text-gray-100 inline-flex items-center rounded ${\n                          this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"STATUS\"\n                            ? \"cursor-wait bg-red-500\"\n                            : \"bg-red-700\"\n                        }`}\n                        onClick={() =>\n                          !this.state.loadingRequest &&\n                          this.props.manageUser &&\n                          this.blockUser(\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.user_id,\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.is_active\n                          )\n                        }\n                        disabled={this.state.loadingRequest}\n                      >\n                        <MdLock className=\"w-4 h-4 fill-current\" />\n                        <span>\n                          {this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"RESET\"\n                            ? \"Loading...\"\n                            : \"Block user\"}\n                        </span>\n                      </button>\n                    ) : (\n                      <button\n                        className={`px-2 py-1 font-semibold text-gray-100 inline-flex items-center rounded ${\n                          this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"STATUS\"\n                            ? \"cursor-wait bg-yellow-500\"\n                            : \"bg-yellow-700\"\n                        }`}\n                        onClick={() =>\n                          !this.state.loadingRequest &&\n                          this.props.manageUser &&\n                          this.blockUser(\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.user_id,\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.is_active\n                          )\n                        }\n                        disabled={this.state.loadingRequest}\n                      >\n                        <MdLock className=\"w-4 h-4 fill-current\" />\n                        <span>\n                          {this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"RESET\"\n                            ? \"Loading...\"\n                            : \"Re-Activate\"}\n                        </span>\n                      </button>\n                    )}\n                  </div>\n                </div>\n              )}\n            </div>\n            {/* end header */}\n\n            {/* content */}\n            {this.props.manageUser &&\n            this.state.roomList &&\n            this.props.changeRole ? (\n              <UserRole\n                userInfo={this.props.manageUser}\n                roleList={this.props.roleList}\n                district={this.distinctDistrict(this.state.roomList)}\n                schoolList={this.state.schoolList}\n                roomList={this.state.roomList}\n                setChangeRole={this.props.setChangeRole}\n                currentPage={this.props.currentPage}\n              />\n            ) : (\n              <UserAccess\n                userInfo={getUserById(\n                  this.props.users,\n                  this.state.manageUserId\n                )}\n                manageUserId={this.state.manageUserId}\n                setUserAccess={this.setUserAccess}\n                userAccess={this.state.userAccess}\n                setCurrentAccess={this.setCurrentAccess}\n                currentAccess={this.state.currentAccess}\n                currentPage={this.props.currentPage}\n              />\n            )}\n            {/* end content */}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  schoolLevels,\n  schools,\n  locations,\n}: StoreState): {\n  schoolLevels: schoolLevelsStoreInterface;\n  schools: SchoolsInterface[];\n  allRoom: RoomLocationInterface[];\n} => {\n  return {\n    schoolLevels,\n    schools: schools.schools,\n    allRoom: locations.roomLocation,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    blockUserToSystem,\n    unBlockUserToSystem,\n    resetUserAccess,\n    getSchools,\n    getAllRoom,\n    PushPopupAlert,\n  })(UserList)\n);\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { capitalizeFirstLetter } from \"../../shared/dataTest\";\nimport { SystemUserRoleInterface } from \"../../shared/interfaces\";\nimport search from \"../../utils/search\";\n\n// const searchRole = (\n//   objList: SystemUserRoleInterface[],\n//   text: string\n// ): SystemUserRoleInterface[] => {\n//   return objList.filter(\n//     (product) => product.role.toLocaleLowerCase() === text.toLocaleLowerCase()\n//   );\n// };\n\ntype RoleListProps = {\n  setChooseRole: (value: boolean) => void;\n  roleList: SystemUserRoleInterface[];\n  handleSelectRole: (role_id: string, TYPE?: \"SELECT\" | \"DEFAULT\") => void;\n  loadindRequest: boolean;\n};\n\nconst RoleList: React.FC<RoleListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section className=\"border-2 rounded border-gray-400\">\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={props.roleList.length > 0 ? false : true}\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseRole(false);\n          }}\n        >\n          Close\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}\n\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {search(props.roleList, searchInput).length > 0 ? (\n          search(props.roleList, searchInput).map((role, index) => (\n            <section key={index + role.role}>\n              <div className=\"group flex items-center justify-between my-1 hover:bg-gray-100\">\n                <div\n                  className=\"p-1 w-full mr-2 cursor-pointer\"\n                  onClick={() => {\n                    props.setChooseRole(false);\n                    !props.loadindRequest &&\n                      props.handleSelectRole(role.system_user_role_id);\n                  }}\n                >\n                  <p className=\"text-sm font-medium text-black\">\n                    {capitalizeFirstLetter(role.role)}\n                  </p>\n                </div>\n                <button\n                  type=\"button\"\n                  className=\"bg-blue-200 group-hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                >\n                  Choose\n                </button>\n              </div>\n            </section>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No role available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default React.memo(RoleList);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { MdHighlightOff } from \"react-icons/md\";\nimport { TiInputChecked } from \"react-icons/ti\";\nimport { connect } from \"react-redux\";\nimport { schoolLevelsStoreInterface, PushPopupAlert } from \"../../actions\";\nimport { assignRoleToUserAccess } from \"../../actions/users\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport Loading from \"../../components/Loading/Loading\";\nimport Table from \"../../components/Table/Table\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport {\n  UserInterface,\n  SystemUserRoleInterface,\n  DistrictInterface,\n  SchoolsInterface,\n  RoomLocationInterface,\n  AssignRoleToUserActionInterface,\n  LocationRoomTableInterface,\n  RoleToUserInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport RoleList from \"./RoleList\";\nimport { LocationsInArray } from \"./UserList\";\n\ninterface AppProps {\n  currentPage: number;\n  userInfo: UserInterface;\n  roleList: SystemUserRoleInterface[];\n  district: DistrictInterface[];\n  assignRoleToUserAccess: Function;\n  schoolList: SchoolsInterface[] | null;\n  roomList: RoomLocationInterface[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  setChangeRole: (value: boolean) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface AppState {\n  loading: boolean;\n  loadingForm: boolean;\n  loadingRequest: boolean;\n  roleId: string;\n  provinceId: string;\n  districtId: string;\n  schoolId: string;\n  roomId: string;\n  instituteId: string;\n  centerId: string;\n  selectedRole: SystemUserRoleInterface | null;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  chooseRole: boolean;\n  chooseSchool: boolean;\n}\n\nclass UserRole extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingForm: true,\n      loadingRequest: false,\n      roleId: \"\",\n      provinceId: \"\",\n      districtId: \"\",\n      schoolId: \"\",\n      roomId: \"\",\n      instituteId: \"\",\n      centerId: \"\",\n      selectedRole: null,\n      formError: null,\n      chooseRole: false,\n      chooseSchool: false,\n    };\n  }\n\n  setRoleId = (value: string) => {\n    this.setState({ roleId: value });\n  };\n\n  setSelectedRole = (value: SystemUserRoleInterface | null) => {\n    this.setState({ selectedRole: value });\n  };\n\n  setProvinceId = (value: string) => {\n    this.setState({ provinceId: value });\n  };\n\n  setDistrictId = (value: string) => {\n    this.setState({ districtId: value });\n  };\n\n  setCenterId = (value: string) => {\n    this.setState({ centerId: value });\n  };\n\n  setRoomId = (value: string) => {\n    this.setState({ roomId: value });\n  };\n\n  setLoadingForm = (value: boolean) => {\n    this.setState({ loadingForm: value });\n  };\n\n  setSchoolId = (value: string) => {\n    this.setState({ schoolId: value });\n  };\n\n  setChooseSchool = (value: boolean) => {\n    this.setState({ chooseSchool: value });\n  };\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setInstituteId = (value: string) => {\n    this.setState({ instituteId: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n  setChooseRole = (value: boolean) => {\n    this.setState({ chooseRole: value });\n  };\n\n  setDefaultState = (\n    default_access: RoleToUserInterface,\n    role: SystemUserRoleInterface\n  ) => {\n    // SET DEFAULT PROVINCE && DISTRICT ID =======================\n    let LOAD_province: LocationRoomTableInterface | undefined;\n    let LOAD_district: DistrictInterface | undefined;\n    if (role.district_required && this.props.roomList) {\n      LOAD_district = this.distinctDistrict(this.props.roomList).find(\n        (item) => item._id === default_access!.district_id\n      );\n      LOAD_district && this.setProvinceId(LOAD_district.province_id);\n      LOAD_district && this.setDistrictId(default_access!.district_id);\n      this.setLoadingForm(false);\n    } else if (role.room_required && this.props.roomList) {\n      // SET DEFAULT PROVINCE && DISTRICT && ROOM ID =======================\n\n      LOAD_province = LocationsInArray(this.props.roomList).find(\n        (item) => item.room_id === default_access!.room_id\n      );\n      LOAD_province && this.setProvinceId(LOAD_province.province_id);\n      LOAD_province && this.setDistrictId(LOAD_province.district_id);\n      LOAD_province && this.setCenterId(LOAD_province.center_id);\n      this.setRoomId(default_access.room_id);\n      this.setLoadingForm(false);\n    } else if (\n      role.school_required &&\n      this.props.roomList &&\n      this.props.schoolList\n    ) {\n      // SET DEFAULT PROVINCE && DISTRICT && SCHOOL ID =======================\n      let LOAD_school: SchoolsInterface | undefined =\n        this.props.schoolList.find(\n          (item) => item._id === default_access!.school_id\n        );\n      if (LOAD_school) {\n        LOAD_province = LocationsInArray(this.props.roomList).find(\n          (item) => item.district_id === LOAD_school?.district_id\n        );\n        LOAD_province && this.setProvinceId(LOAD_province.province_id);\n        LOAD_province && this.setDistrictId(LOAD_province.district_id);\n        this.setSchoolId(default_access.school_id);\n        this.setLoadingForm(false);\n      } else {\n        this.setLoadingForm(false);\n      }\n    } else {\n      this.setLoadingForm(false);\n    }\n  };\n\n  componentDidMount = () => {\n    if (this.props.roleList.length) {\n      if (this.props.userInfo.default_access && this.state.loadingForm) {\n        // SET DEFAULT ROLE ID =======================\n        if (!this.state.roleId.length) {\n          let result = this.props.roleList.find(\n            (role) =>\n              role.system_user_role_id ===\n              this.props.userInfo.default_access!.system_user_role_id\n          );\n          if (result) {\n            this.setRoleId(\n              this.props.userInfo.default_access.system_user_role_id\n            );\n            this.setSelectedRole(result);\n            this.setDefaultState(this.props.userInfo.default_access, result);\n          }\n        }\n\n        console.log(\"====================================\");\n        console.log({ vvvvv: this.props.userInfo.default_access });\n        console.log(\"====================================\");\n      }\n\n      if (this.state.selectedRole && this.props.userInfo.default_access) {\n        this.setDefaultState(\n          this.props.userInfo.default_access,\n          this.state.selectedRole\n        );\n      }\n\n      this.setLoading(false);\n    }\n  };\n\n  handleSelectRole = (\n    role_id: string,\n    TYPE: \"SELECT\" | \"DEFAULT\" = \"SELECT\"\n  ) => {\n    if (this.props.roleList) {\n      let result = this.props.roleList.find(\n        (role) => role.system_user_role_id === role_id\n      );\n      if (result) {\n        this.setRoleId(role_id);\n        this.setSelectedRole(result);\n        this.state.formError &&\n          this.state.formError.element === \"role_id\" &&\n          this.setFormError(null);\n\n        if (TYPE === \"SELECT\") {\n          this.setProvinceId(\"\");\n          this.setDistrictId(\"\");\n          this.setSchoolId(\"\");\n          this.setCenterId(\"\");\n          this.setRoomId(\"\");\n          this.setInstituteId(\"\");\n        }\n      }\n    }\n  };\n\n  tableData = (): JSX.Element[] => {\n    if (\n      this.state.roleId.length > 0 &&\n      this.state.selectedRole === null &&\n      this.props.roleList\n    ) {\n      this.handleSelectRole(this.state.roleId, \"DEFAULT\");\n    }\n    if (this.state.selectedRole) {\n      return this.state.selectedRole.access.map((access, i) => (\n        <tr\n          key={i + access.id + Math.random()}\n          className={`text-left border-b border-gray-200 hover:bg-gray-100`}\n        >\n          <td className=\"px-2 py-1\">\n            <label className=\"inline-flex items-center\">\n              <span className=\"text-gray-900 capitalize text-xl font-normal cursor-pointer\">\n                {access.task}\n              </span>\n            </label>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.create ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.create ? (\n                <TiInputChecked />\n              ) : (\n                <MdHighlightOff />\n              )}\n              {access.permitted.create ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.view ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.view ? <TiInputChecked /> : <MdHighlightOff />}\n              {access.permitted.view ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.update ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.update ? (\n                <TiInputChecked />\n              ) : (\n                <MdHighlightOff />\n              )}\n              {access.permitted.update ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.delete ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.delete ? (\n                <TiInputChecked />\n              ) : (\n                <MdHighlightOff />\n              )}\n              {access.permitted.delete ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n        </tr>\n      ));\n    }\n    const optionB = [\n      <tr key=\"55re\">\n        <td colSpan={5} className=\"text-center px-2 py-2\">\n          No Default Access Available on this Role.\n        </td>\n      </tr>,\n    ];\n    return optionB;\n  };\n\n  assignRoleToUser = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!window.confirm(`Are sure you want to change user role?`)) {\n      return false;\n    }\n\n    if (!this.state.selectedRole) {\n      return this.setFormError({\n        element: \"role_id\",\n        msg: \"User role is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.room_required === true &&\n      isEmptyOrSpaces(this.state.provinceId)\n    ) {\n      return this.setFormError({\n        element: \"province_id\",\n        msg: \"Province is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.education_institution_required === true &&\n      isEmptyOrSpaces(this.state.instituteId)\n    ) {\n      return this.setFormError({\n        element: \"institute_id\",\n        msg: \"Institute is required on this role!\",\n      });\n    }\n\n    if (\n      (this.state.selectedRole.room_required === true ||\n        this.state.selectedRole.district_required === true) &&\n      isEmptyOrSpaces(this.state.districtId)\n    ) {\n      return this.setFormError({\n        element: \"district_id\",\n        msg: \"District is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.school_required === true &&\n      isEmptyOrSpaces(this.state.schoolId)\n    ) {\n      return this.setFormError({\n        element: \"school_id\",\n        msg: \"School is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.room_required === true &&\n      isEmptyOrSpaces(this.state.centerId)\n    ) {\n      return this.setFormError({\n        element: \"center_id\",\n        msg: \"Center is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.room_required === true &&\n      isEmptyOrSpaces(this.state.roomId)\n    ) {\n      return this.setFormError({\n        element: \"room_id\",\n        msg: \"Room is required!\",\n      });\n    }\n    this.setLoadingRequest(true);\n    let formData: AssignRoleToUserActionInterface = {\n      user_id: this.props.userInfo.user_id,\n      data: {\n        system_user_role_id: this.state.roleId,\n        status: 1,\n        role: this.state.selectedRole.role,\n        access: this.state.selectedRole.access,\n        school_id: this.state.selectedRole.school_required\n          ? this.state.schoolId\n          : \"\",\n        district_id: this.state.selectedRole.district_required\n          ? this.state.districtId\n          : \"\",\n        room_id: this.state.selectedRole.room_required ? this.state.roomId : \"\",\n        education_institution_id: this.state.selectedRole\n          .education_institution_required\n          ? this.state.instituteId\n          : \"\",\n      },\n    };\n\n    try {\n      const res = await axios.post(`${API.AUTH}/addroletouser`, {\n        user_id: this.props.userInfo.user_id,\n        system_user_role_id: this.state.roleId,\n        status: 1,\n        role: this.state.selectedRole.role,\n        access: true,\n        school_id:\n          this.state.selectedRole.school_required === true\n            ? this.state.schoolId\n            : \"\",\n        district_id:\n          this.state.selectedRole.district_required === true\n            ? this.state.districtId\n            : \"\",\n        room_id:\n          this.state.selectedRole.room_required === true\n            ? this.state.roomId\n            : \"\",\n        education_institution_id: this.state.selectedRole\n          .education_institution_required\n          ? this.state.instituteId\n          : \"\",\n      });\n      if (res) {\n        console.log(\"====================================\");\n        console.log({ assignRoleToUser: res });\n        console.log(\"====================================\");\n        this.props.assignRoleToUserAccess(formData, this.props.currentPage);\n        this.setLoadingRequest(false);\n        this.props.setChangeRole(false);\n        this.props.PushPopupAlert({\n          title: \"Assigning Role to User completed successfully\",\n          theme: PopupAlertTheme.success,\n        });\n      }\n    } catch (error) {\n      console.log({ role_error: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  distinctDistrict = (\n    location: RoomLocationInterface[],\n    province_id?: string\n  ): DistrictInterface[] => {\n    let ids: string[] = [],\n      result: DistrictInterface[] = [];\n\n    if (province_id) {\n      result = location.find((item) => item._id === province_id)\n        ? location.find((item) => item._id === province_id)!.districts\n          ? location.find((item) => item._id === province_id)!.districts\n          : []\n        : [];\n    } else {\n      for (const key in location) {\n        if (Object.prototype.hasOwnProperty.call(location, key)) {\n          for (const keyDistrict in location[key].districts) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                location[key].districts,\n                keyDistrict\n              )\n            ) {\n              if (!ids.includes(location[key].districts[keyDistrict]._id)) {\n                ids.push(location[key].districts[keyDistrict]._id);\n                result.push(location[key].districts[keyDistrict]);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return result;\n  };\n\n  distinctCenter = (\n    rooms: RoomLocationInterface[],\n    district_id: string\n  ): LocationRoomTableInterface[] => {\n    let ids: string[] = [],\n      result: LocationRoomTableInterface[] = [];\n\n    LocationsInArray(rooms).forEach((element) => {\n      if (\n        !ids.includes(element.center_id) &&\n        element.district_id === district_id\n      ) {\n        ids.push(element.center_id);\n        result.push(element);\n      }\n    });\n    return result;\n  };\n\n  distinctRoom = (\n    rooms: RoomLocationInterface[],\n    center_id: string\n  ): LocationRoomTableInterface[] => {\n    let ids: string[] = [],\n      result: LocationRoomTableInterface[] = [];\n\n    LocationsInArray(rooms).forEach((element) => {\n      if (!ids.includes(element.room_id) && element.center_id === center_id) {\n        ids.push(element.room_id);\n        result.push(element);\n      }\n    });\n    return result;\n  };\n\n  render() {\n    if (\n      this.state.loading === true ||\n      this.state.loadingForm ||\n      this.props.userInfo.default_access === null ||\n      this.state.roleId.length === 0 ||\n      this.state.selectedRole === null\n    ) {\n      return (\n        <div className=\"text-center py-7 font-bold text-3xl text-gray-400 animate-pulse\">\n          Loading...\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 py-2 md:py-4 px-2 md:px-0\">\n        {/* left panel */}\n        <div className=\"col-span-1 bg-white w-full overflow-x-auto border rounded\">\n          <div className=\"px-6 md:px-12 py-5 bg-white mx-auto rounded-2xl w-100\">\n            <h3 className=\"font-semibold text-2xl text-gray-800 mb-4\">\n              Change User Role\n            </h3>\n            {this.state.loadingForm ? (\n              <Loading />\n            ) : (\n              <form onSubmit={(e) => this.assignRoleToUser(e)}>\n                <div className=\"space-y-5\">\n                  <div className=\"space-y-2\">\n                    <label className=\"text-sm font-medium text-gray-700 tracking-wide\">\n                      User Role\n                    </label>\n\n                    {!this.state.chooseRole && (\n                      <div\n                        className={`w-full text-base bg-white text-grey-darker cursor-pointer border-2 px-4 py-3 rounded focus:outline-none focus:bg-gray-100 ${\n                          this.state.formError &&\n                          this.state.formError.element === \"role_id\"\n                            ? \"border-red-500\"\n                            : \"border-gray-400\"\n                        }`}\n                        onClick={() => {\n                          !this.state.loadingRequest &&\n                            this.setChooseRole(true);\n                          !this.state.loadingRequest && this.setFormError(null);\n                        }}\n                      >\n                        {this.state.selectedRole\n                          ? this.state.selectedRole.role\n                          : \"Select role\"}\n                      </div>\n                    )}\n\n                    {this.state.chooseRole && (\n                      <RoleList\n                        setChooseRole={this.setChooseRole}\n                        handleSelectRole={this.handleSelectRole}\n                        roleList={this.props.roleList}\n                        loadindRequest={this.state.loadingRequest}\n                      />\n                    )}\n\n                    {this.state.formError &&\n                      this.state.formError.element === \"role_id\" && (\n                        <span className=\"text-red-500\">\n                          {this.state.formError.msg}\n                        </span>\n                      )}\n                  </div>\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.education_institution_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Institute\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"institute_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setInstituteId(e.target.value);\n                            this.setProvinceId(\"\");\n                            this.setDistrictId(\"\");\n                            this.setSchoolId(\"\");\n                            this.setCenterId(\"\");\n                            this.setRoomId(\"\");\n                            this.state.formError &&\n                              this.state.formError.element === \"institute_id\" &&\n                              this.setFormError(null);\n                          }}\n                          disabled={this.state.loadingRequest}\n                          value={this.state.instituteId}\n                        >\n                          <option value=\"\">Select institute</option>\n                          {this.props.schoolLevels.education_categories &&\n                          this.props.schoolLevels.education_categories.length >\n                            0 ? (\n                            this.props.schoolLevels.education_categories.map(\n                              (institute) => (\n                                <option\n                                  value={institute.education_institute_id}\n                                  key={\n                                    institute.education_institute_id +\n                                    Math.random()\n                                  }\n                                >\n                                  {institute.education_category_title}\n                                </option>\n                              )\n                            )\n                          ) : (\n                            <option value=\"\" disabled>\n                              No institute available\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"institute_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.room_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Province\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"province_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setProvinceId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"province_id\" &&\n                              this.setFormError(null);\n                            this.setDistrictId(\"\");\n                            this.setSchoolId(\"\");\n                            this.setCenterId(\"\");\n                            this.setRoomId(\"\");\n                          }}\n                          value={this.state.provinceId}\n                          disabled={this.state.loadingRequest}\n                        >\n                          <option value=\"\">Select province</option>\n                          {this.props.roomList &&\n                            this.props.roomList.map((province) => (\n                              <option\n                                key={province._id + Math.random()}\n                                value={province._id}\n                              >\n                                {province.province_name}\n                              </option>\n                            ))}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"province_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n                  {this.state.selectedRole &&\n                    (this.state.selectedRole.district_required ||\n                      this.state.selectedRole.room_required) && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          District\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"district_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setDistrictId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"district_id\" &&\n                              this.setFormError(null);\n                            this.setSchoolId(\"\");\n                            this.setCenterId(\"\");\n                            this.setRoomId(\"\");\n                          }}\n                          value={this.state.districtId}\n                          disabled={this.state.loadingRequest}\n                        >\n                          <option value=\"\">Select district</option>\n                          {this.props.roomList &&\n                          this.distinctDistrict(\n                            this.props.roomList,\n                            !isEmptyOrSpaces(this.state.provinceId)\n                              ? this.state.provinceId\n                              : undefined\n                          ).length > 0 ? (\n                            this.distinctDistrict(\n                              this.props.roomList,\n                              !isEmptyOrSpaces(this.state.provinceId)\n                                ? this.state.provinceId\n                                : undefined\n                            ).map((district) => (\n                              <option\n                                key={district._id + Math.random()}\n                                value={district._id}\n                              >\n                                {district.district_name}\n                              </option>\n                            ))\n                          ) : (\n                            <option value=\"\" disabled>\n                              No district found\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"district_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.school_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          School\n                        </label>\n                        {/* {!this.state.chooseSchool && (\n                          <div\n                            className={`w-full text-base bg-white text-grey-darker cursor-pointer border-2 px-4 py-3 rounded focus:outline-none focus:bg-gray-100 ${\n                              this.state.formError &&\n                              this.state.formError.element === \"school_id\"\n                                ? \"border-red-500\"\n                                : \"border-gray-400\"\n                            }`}\n                            onClick={() => {\n                              !this.state.loadingRequest &&\n                                this.setChooseSchool(true);\n                              !this.state.loadingRequest &&\n                                this.setFormError(null);\n                            }}\n                          >\n                            {this.state.schoolId\n                              ? this.state.schoolId\n                              : \"Select school\"}\n                          </div>\n                        )}\n\n                        {this.state.chooseSchool && (\n                          <ChooseSchoolById\n                            allSchool={this.props.schoolList}\n                            setSelectSchool={(school_id: string) => {\n                              this.setSchoolId(school_id);\n                              this.state.formError &&\n                                this.state.formError.element === \"school_id\" &&\n                                this.setFormError(null);\n                              this.setCenterId(\"\");\n                              this.setRoomId(\"\");\n                            }}\n                            currentSelected={this.state.schoolId}\n                            setChooseSchool={this.setChooseSchool}\n                          />\n                        )} */}\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"school_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setSchoolId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"school_id\" &&\n                              this.setFormError(null);\n                            this.setCenterId(\"\");\n                            this.setRoomId(\"\");\n                          }}\n                          disabled={this.state.loadingRequest}\n                          value={this.state.schoolId}\n                        >\n                          <option value=\"\">Selected school</option>\n                          {this.props.schoolList &&\n                            this.props.schoolList.map((school) => (\n                              <option\n                                value={school._id}\n                                key={school._id + Math.random()}\n                              >\n                                {school.school_name}\n                              </option>\n                            ))}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"school_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.room_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Center\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"center_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setCenterId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"center_id\" &&\n                              this.setFormError(null);\n                            this.setRoomId(\"\");\n                          }}\n                          disabled={this.state.loadingRequest}\n                          value={this.state.centerId}\n                        >\n                          <option value=\"\">Select center</option>\n                          {this.state.districtId &&\n                          this.state.districtId.length > 0 &&\n                          this.props.roomList &&\n                          this.distinctCenter(\n                            this.props.roomList,\n                            this.state.districtId\n                          ).length > 0 ? (\n                            this.distinctCenter(\n                              this.props.roomList,\n                              this.state.districtId\n                            ).map((center, index) => (\n                              <option\n                                value={center.center_id}\n                                key={center.center_id + index + Math.random()}\n                              >\n                                {center.center_name}\n                              </option>\n                            ))\n                          ) : (\n                            <option value=\"\" disabled>\n                              No center found\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"center_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.room_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Room\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"room_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setRoomId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"room_id\" &&\n                              this.setFormError(null);\n                          }}\n                          disabled={this.state.loadingRequest}\n                          value={this.state.roomId}\n                        >\n                          <option value=\"\">Select room</option>\n                          {!isEmptyOrSpaces(this.state.centerId) &&\n                          this.props.roomList &&\n                          this.distinctRoom(\n                            this.props.roomList,\n                            this.state.centerId\n                          ).length > 0 ? (\n                            this.distinctRoom(\n                              this.props.roomList,\n                              this.state.centerId\n                            ).map((room, index) => (\n                              <option\n                                value={room.room_id}\n                                key={room.room_id + index + Math.random()}\n                                className={`${\n                                  room.room_name === \"0\" ? \"hidden\" : \"block\"\n                                }`}\n                              >\n                                {room.room_name}\n                              </option>\n                            ))\n                          ) : (\n                            <option value=\"\" disabled>\n                              No room found\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"room_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  <div className=\"flex justify-between 2xl:justify-start gap-2\">\n                    <button\n                      className=\"btn bg-gray-500 text-gray-50 focus:outline-none\"\n                      onClick={() => {\n                        this.props.setChangeRole(false);\n                        this.setFormError(null);\n                        this.setProvinceId(\"\");\n                        this.setDistrictId(\"\");\n                        this.setSchoolId(\"\");\n                        this.setCenterId(\"\");\n                        this.setRoomId(\"\");\n                      }}\n                      disabled={this.state.loadingRequest}\n                    >\n                      Back\n                    </button>\n                    <button\n                      className=\"btn btn-blue focus:outline-none\"\n                      // onClick={() => assignRoleToUser()}\n                      disabled={this.state.loadingRequest}\n                    >\n                      {this.state.loadingRequest ? \"Loading...\" : \"Save Change\"}\n                    </button>\n                  </div>\n                </div>\n              </form>\n            )}\n          </div>\n        </div>\n        {/* end left panel */}\n\n        {/* ------------------------------------------------------------ */}\n\n        {/* right panel */}\n        <div className=\"cols-span-1 md:col-span-2 bg-white w-full border rounded text-center p-2 hidden md:block\">\n          <div className=\"my-4\">\n            <span className=\"text-gray-600 font-semibold text-2xl\">\n              {this.state.selectedRole?.role}'s Default Access\n            </span>\n          </div>\n          {!this.state.loading && (\n            <div className=\"overflow-x-auto w-full\">\n              <Table\n                columns={[\n                  {\n                    columnTitle: \"Access Name\",\n                    alignText: \"left\",\n                    padding: \"p-3\",\n                  },\n                  { columnTitle: \"Create\", alignText: \"left\" },\n                  { columnTitle: \"View\", alignText: \"left\" },\n                  { columnTitle: \"Update\", alignText: \"left\" },\n                  { columnTitle: \"Delete\", alignText: \"left\" },\n                ]}\n                rows={this.tableData}\n                pagination={false}\n                search={false}\n                searchBG=\"bg-gray-50\"\n                thColor=\"gray\"\n                tableId=\"defaultAccess\"\n              />\n            </div>\n          )}\n        </div>\n        {/* end right panel */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  schoolLevels,\n}: StoreState): {\n  schoolLevels: schoolLevelsStoreInterface;\n} => {\n  return { schoolLevels };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    assignRoleToUserAccess,\n    PushPopupAlert,\n  })(UserRole)\n);\n","export default __webpack_public_path__ + \"static/media/blank_profile.c3f94521.png\";","import React, { useState } from \"react\";\nimport {\n  MdCheckCircle,\n  MdRadioButtonUnchecked,\n  MdSearch,\n} from \"react-icons/md\";\nimport Loading from \"../../components/Loading/Loading\";\nimport {\n  PlansInterface,\n  SessionPlanInterface,\n  SessionPlanTypeStatus,\n} from \"../../interfaces\";\nimport { DATE } from \"../../utils/functions\";\nimport searchData from \"../../utils/search\";\n\nexport const isPlansActive = (plans: PlansInterface[]): PlansInterface[] => {\n  let today = new Date();\n  let activePlans: PlansInterface[] = [];\n  for (let plan of plans) {\n    let startDate = new Date(plan.start_date);\n    let endDate = new Date(plan.end_date);\n    if (\n      startDate.getTime() <= today.getTime() &&\n      endDate.getTime() >= today.getTime() &&\n      plan.type_status === SessionPlanTypeStatus.OPEN\n    ) {\n      activePlans = [...activePlans, plan];\n    }\n  }\n  return activePlans;\n};\n\ninterface ChooseSessionProps {\n  allSession: SessionPlanInterface[] | null;\n  setSelectSession: (period: SessionPlanInterface | \"all\") => void;\n  currentSelected: SessionPlanInterface | \"all\";\n  chooseAll: boolean;\n}\n\nconst ChooseSession = (props: ChooseSessionProps) => {\n  const [selectedPlan, setSelectedPlan] = useState<SessionPlanInterface | null>(\n    null\n  );\n  const [search, setSearch] = useState<string>(\"\");\n  const getSearch = (\n    period: SessionPlanInterface[],\n    searched: string\n  ): SessionPlanInterface[] => {\n    return searchData(period, searched) as SessionPlanInterface[];\n  };\n\n  return (\n    <div className=\"\">\n      <div className=\"px-3\">\n        <input\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n            setSearch(e.target.value)\n          }\n          type=\"text\"\n          className=\"py-3 px-4 w-full rounded border border-gray-400 mb-3\"\n          placeholder=\"Search by year, name\"\n          disabled={props.allSession === null || props.allSession.length === 0}\n        />\n      </div>\n\n      <div className=\"bg-gray-100 px-3 pt-3 pb-2 rounded-b\">\n        {props.allSession === null ? (\n          <Loading />\n        ) : props.allSession.length === 0 ? (\n          <div className=\"flex flex-col text-gray-400 items-center justify-center mb-2 bg-white py-4\">\n            <MdSearch className=\"text-6xl\" />\n            <div className=\"flex flex-col items-center justify-center\">\n              <span>No session found!</span>\n            </div>\n          </div>\n        ) : (\n          <section>\n            {props.chooseAll && (\n              <div\n                className={`rounded border ${\n                  props.currentSelected === \"all\"\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2 flex flex-col md:flex-row items-start md:items-center md:justify-between`}\n              >\n                <div className=\"flex flex-row items-center gap-3\">\n                  {props.currentSelected === \"all\" ? (\n                    <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                  ) : (\n                    <MdRadioButtonUnchecked\n                      className={`text-gray-300 text-4xl`}\n                    />\n                  )}\n                  <div className=\"flex flex-col\">\n                    <div className={`text-gray-600 font-bold`}>All session</div>\n                  </div>\n                </div>\n                <div\n                  onClick={() => {\n                    props.setSelectSession(\"all\");\n                  }}\n                  className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                >\n                  Select\n                </div>\n              </div>\n            )}\n            {getSearch(props.allSession, search).map((item, i) => (\n              <div\n                key={i + 1}\n                className={`rounded border ${\n                  props.currentSelected !== \"all\" &&\n                  props.currentSelected.session_plan_id === item.session_plan_id\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2`}\n              >\n                <div className=\"flex flex-col md:flex-row items-start md:items-center md:justify-between \">\n                  <div className=\"flex flex-row items-center gap-3\">\n                    {props.currentSelected !== \"all\" &&\n                    props.currentSelected.session_plan_id ===\n                      item.session_plan_id ? (\n                      <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                    ) : (\n                      <MdRadioButtonUnchecked\n                        className={`text-gray-300 text-4xl`}\n                      />\n                    )}\n                    <div className=\"flex flex-col\">\n                      <div\n                        className={`${\n                          props.currentSelected !== \"all\" &&\n                          props.currentSelected.session_plan_id ===\n                            item.session_plan_id\n                            ? \"text-blue-600\"\n                            : \"text-gray-600\"\n                        } font-bold`}\n                      >\n                        {item.session_plan_name}\n                      </div>\n                      <div className=\"text-sm text-gray-500\">\n                        <span>Status: </span>\n                        <span\n                          className={`${\n                            item.is_active === true\n                              ? \"text-gray-900 font-bold underline\"\n                              : \"text-gray-500 italic\"\n                          }`}\n                        >\n                          {item.is_active === true ? \"Active\" : \"Expired\"}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"flex flex-row items-center gap-2\">\n                    {(selectedPlan === null ||\n                      selectedPlan.session_plan_id !==\n                        item.session_plan_id) && (\n                      <div\n                        onClick={() => setSelectedPlan(item)}\n                        className=\"bg-gray-50 group-hover:bg-blue-100 font-semibold text-gray-400 group-hover:text-blue-600 rounded px-3 py-2 cursor-pointer\"\n                      >\n                        Details\n                      </div>\n                    )}\n                    <div\n                      onClick={() => {\n                        props.setSelectSession(item);\n                      }}\n                      className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                    >\n                      Select\n                    </div>\n                    {selectedPlan !== null &&\n                      selectedPlan.session_plan_id === item.session_plan_id && (\n                        <div\n                          onClick={() => setSelectedPlan(null)}\n                          className=\"bg-red-100 group-hover:bg-red-200 font-semibold text-red-600 group-hover:text-red-800 rounded px-3 py-2 cursor-pointer\"\n                        >\n                          Close\n                        </div>\n                      )}\n                  </div>\n                </div>\n                {selectedPlan !== null &&\n                  selectedPlan.session_plan_id === item.session_plan_id && (\n                    <div className=\"bg-white rounded border border-blue-50 mt-2 animate__animated animate__fadeIn\">\n                      <table className=\"w-full\">\n                        <thead className=\"bg-blue-50\">\n                          <tr className=\"text-left\">\n                            <th className=\"px-3 py-3\">#</th>\n                            <th>Plan</th>\n                            <th>Start date</th>\n                            <th>Ending date</th>\n                            <th>Status</th>\n                          </tr>\n                        </thead>\n                        <tbody className=\"text-sm\">\n                          {selectedPlan !== null &&\n                            selectedPlan.session_plan_id ===\n                              item.session_plan_id &&\n                            selectedPlan.plans.length > 0 &&\n                            item.plans.map((plan, i) => (\n                              <tr\n                                key={i + 1}\n                                className={`${\n                                  isPlansActive(item.plans).find(\n                                    (itm) => itm.type_key === plan.type_key\n                                  ) !== undefined\n                                    ? \"bg-blue-100 text-blue-600 font-bold\"\n                                    : \"\"\n                                } text-left border-b border-blue-50`}\n                              >\n                                <td className=\"px-3 py-1\">{i + 1}</td>\n                                <td>{plan.type_title}</td>\n                                <td>{DATE(plan.start_date, \"DD/MM/YYYY\")}</td>\n                                <td>{DATE(plan.end_date, \"DD/MM/YYYY\")}</td>\n                                <td>{plan.type_status}</td>\n                              </tr>\n                            ))}\n                        </tbody>\n                      </table>\n                    </div>\n                  )}\n              </div>\n            ))}\n          </section>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(ChooseSession);\n","import React, { Fragment, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport { connect } from \"react-redux\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { SessionPlanInterface } from \"../../../interfaces\";\nimport { course } from \"../../../interfaces/course\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport {\n  CandidatesFailedSucceeded,\n  ReportUserExamStatus,\n} from \"../../../interfaces/reports\";\nimport { StoreState } from \"../../../reducers\";\nimport { ExamReportReducerType } from \"../../../reducers/exam_report\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { DATE, sortThisArray, timestampToDate } from \"../../../utils/functions\";\nimport { displayStatus } from \"./DoneExamList\";\nimport { getPeriodById } from \"./ExamReport\";\n\n// EXCEL FILE FUNCTIONS ================================\nexport interface CandidateExamPerformanceToPrintInterface {\n  applicant_id: number;\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string;\n  exam_period: string;\n  exam_date: string;\n  exam_start_time: string;\n  exam_end_time: string;\n  applicant_name: string;\n  national_id: string;\n  email: string;\n  phone: string;\n  marks: string;\n  performance_status: string;\n}\n\nexport enum CandidateExamPerformanceReportContentKeyInterface {\n  APPLICANT = \"applicant_name\",\n  N_ID = \"national_id\",\n  EMAIL = \"email\",\n  PHONE = \"phone\",\n  MARKS = \"marks\",\n  STATUS = \"performance_status\",\n  COURSER_NAME = \"course_name\",\n  COURSE_CODE = \"course_code\",\n  SCHOOL_LEVEL = \"school_levels\",\n  PERIOD = \"exam_period\",\n  DATE = \"exam_date\",\n  START_TIME = \"exam_start_time\",\n  END_TIME = \"exam_end_time\",\n}\n\nexport interface CandidateExamPerformanceReportContentInterface {\n  key: CandidateExamPerformanceReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n\nexport const candidateExamPerformanceIsChangeAllowed = (\n  key: CandidateExamPerformanceReportContentKeyInterface\n): boolean => {\n  if (\n    key === CandidateExamPerformanceReportContentKeyInterface.COURSER_NAME ||\n    key === CandidateExamPerformanceReportContentKeyInterface.COURSE_CODE ||\n    key === CandidateExamPerformanceReportContentKeyInterface.PERIOD ||\n    key === CandidateExamPerformanceReportContentKeyInterface.APPLICANT ||\n    key === CandidateExamPerformanceReportContentKeyInterface.N_ID\n  ) {\n    return false;\n  }\n  return true;\n};\n\nexport const defaultCandidateExamPerformanceContent: CandidateExamPerformanceReportContentInterface[] =\n  [\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.APPLICANT,\n      title: \"Applicant names\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.N_ID,\n      title: \"National ID\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.EMAIL,\n      title: \"Email\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.PHONE,\n      title: \"Phone\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.MARKS,\n      title: \"Marks\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.COURSER_NAME,\n      title: \"Course names\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.COURSE_CODE,\n      title: \"Course code\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.SCHOOL_LEVEL,\n      title: \"School levels\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.PERIOD,\n      title: \"Exam period\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.DATE,\n      title: \"Exam date\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.START_TIME,\n      title: \"Exam start time\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.END_TIME,\n      title: \"Exam end time\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.STATUS,\n      title: \"Status\",\n      status: true,\n    },\n  ];\n// END EXCEL FILE FUNCTIONS ================================\n\nexport interface candidatePerfomranceStateInterface {\n  user_id: string;\n  user_name: string;\n  national_id: string;\n  user_email: string;\n  user_phone: string;\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n  exam: CandidatesFailedSucceeded;\n  user_total_marks: number;\n  exam_stastus: ReportUserExamStatus;\n}\n\nexport const FC_reportCandidatePerformanceData = (\n  allCourses: course[],\n  data: CandidatesFailedSucceeded[],\n  course_id: string\n): candidatePerfomranceStateInterface[] => {\n  let result: candidatePerfomranceStateInterface[] = [],\n    ids: string[] = [];\n  for (const key in data) {\n    if (Object.prototype.hasOwnProperty.call(data, key)) {\n      if (!ids.includes(data[key]._id)) {\n        ids.push(data[key]._id);\n        let courser = allCourses.find(\n          (item) => item.course_id === data[key].course\n        );\n        if (courser) {\n          result.push({\n            user_id: data[key].user.user_id,\n            user_name:\n              capitalizeFirstLetter(data[key].user.user_info.lname) +\n              \" \" +\n              capitalizeFirstLetter(data[key].user.user_info.fname),\n            national_id: data[key].user.n_id ? data[key].user.n_id : \"\",\n            user_email: data[key].user.email,\n            user_phone: data[key].user.phone_number,\n            course_name: courser.course_name,\n            course_code: courser.course_code,\n            description: courser.description,\n            school_levels: courser.school_levels,\n            course_id: courser.course_id,\n            exam: data[key],\n            user_total_marks: data[key].total_marks,\n            exam_stastus: data[key].user_status,\n          });\n        }\n      }\n    }\n  }\n\n  if (course_id !== \"all\") {\n    result = result.filter((item) => item.course_id === course_id);\n  }\n  return result;\n};\n\nexport const FC_reportCandidatePerformanceDataFilter = (\n  thisList: candidatePerfomranceStateInterface[],\n  thisValue: ReportUserExamStatus | \"all\"\n): candidatePerfomranceStateInterface[] => {\n  if (thisValue === \"all\") {\n    return thisList;\n  } else {\n    return thisList.filter((item) => item.exam_stastus === thisValue);\n  }\n};\n\nexport const searchCandidatePerformanceData = (\n  objList: candidatePerfomranceStateInterface[],\n  text: string\n): candidatePerfomranceStateInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (\n        prop === \"course_name\" ||\n        prop === \"course_code\" ||\n        prop === \"user_total_marks\" ||\n        prop === \"exam_stastus\" ||\n        prop === \"description\" ||\n        prop === \"user_name\" ||\n        prop === \"user_phone\" ||\n        prop === \"user_email\" ||\n        prop === \"national_id\"\n      ) {\n        flag =\n          product[prop].toString().toLowerCase().indexOf(text.toLowerCase()) >\n          -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n};\n\nexport const controlRowsByStatus = (status: string): string => {\n  if (status === \"Done\") {\n    return \"bg-blue-50 border-gray-300 hover:border-blue-500 border-t border-b\";\n  }\n  if (status === \"Removed\") {\n    return \"bg-white border-red-300 hover:border-red-500 border-t border-b\";\n  }\n  if (status === \"Paused\") {\n    return \"bg-white border-yellow-300 hover:border-yellow-500 border-t border-b\";\n  }\n  return \"bg-white border-gray-300 hover:border-blue-500 border-t border-b\";\n};\n\ntype CandidatePerformanceProps = {\n  loading: boolean;\n  examsListData: ExamItemResponse[] | null;\n  courseListData: course[] | null;\n  thisPeriod: SessionPlanInterface[];\n  candidatePerformanceData: CandidatesFailedSucceeded[] | null;\n\n  // redux props ============\n  adminExamReport: ExamReportReducerType;\n  // FOR APPLICANT PERFORMANCE PROPS\n  filterApplicantPerformance: ReportUserExamStatus | \"all\";\n};\n\nconst CandidatePerformance: React.FC<CandidatePerformanceProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const [isSorted, setIsSorted] = useState<boolean>(false);\n  const [sortProperty, setSortProperty] = useState<string>(\"\");\n  const [sortOrder, setSortOrder] = useState<\"ASC\" | \"DESC\">(\"ASC\");\n\n  const setSort = (thisProperty: string) => {\n    if (sortProperty === thisProperty && sortOrder === \"ASC\") {\n      setSortOrder(\"DESC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    } else {\n      setSortOrder(\"ASC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    }\n  };\n\n  return (\n    <Fragment>\n      <div className=\"bg-white my-4\">\n        <div className=\"w-full px-2 py-2\">\n          <input\n            onChange={(e) => setSearchInput(e.target.value)}\n            type=\"text\"\n            value={searchInput}\n            placeholder=\"Search...\"\n            className=\"w-full bg-gray-100 py-2 px-3 rounded\"\n            disabled={\n              props.courseListData &&\n              props.candidatePerformanceData &&\n              FC_reportCandidatePerformanceDataFilter(\n                FC_reportCandidatePerformanceData(\n                  props.courseListData,\n                  props.candidatePerformanceData,\n                  props.adminExamReport.reportCourseId\n                    ? props.adminExamReport.reportCourseId.course_id\n                    : \"all\"\n                ),\n                props.filterApplicantPerformance\n              ).length <= 0\n                ? true\n                : false\n            }\n          />\n        </div>\n        <div className=\"w-full overflow-x-auto\">\n          <table className=\"w-full shadow\" id=\"report_content\">\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n              <tr>\n                <td className=\"px-2 py-2\">#</td>\n                <td className=\"px-2 py-2\" onClick={() => setSort(\"user_name\")}>\n                  Applicants\n                </td>\n                <td className=\"px-2 py-2\">National ID</td>\n                <td className=\"px-2 py-2\">Email</td>\n                <td className=\"px-2 py-2\">Phone</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"course_name\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Exam <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">Exam period</td>\n                <td className=\"px-2 py-2\">Exam date</td>\n                <td className=\"px-2 py-2\">Exam start time</td>\n                <td className=\"px-2 py-2\">Exam end time</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"user_total_marks\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Marks <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">Status</td>\n              </tr>\n            </thead>\n            <tbody>\n              {props.courseListData === null || props.loading ? (\n                <tr>\n                  <td colSpan={12} className=\"px-2 py-2\">\n                    <Loading />\n                  </td>\n                </tr>\n              ) : props.candidatePerformanceData &&\n                FC_reportCandidatePerformanceDataFilter(\n                  FC_reportCandidatePerformanceData(\n                    props.courseListData,\n                    props.candidatePerformanceData,\n                    props.adminExamReport.reportCourseId\n                      ? props.adminExamReport.reportCourseId.course_id\n                      : \"all\"\n                  ),\n                  props.filterApplicantPerformance\n                ).length <= 0 ? (\n                <tr>\n                  <td colSpan={12} className=\"px-2 py-2 text-center\">\n                    No applicant list available!\n                  </td>\n                </tr>\n              ) : (\n                props.candidatePerformanceData &&\n                sortThisArray(\n                  isSorted,\n                  searchCandidatePerformanceData(\n                    FC_reportCandidatePerformanceDataFilter(\n                      FC_reportCandidatePerformanceData(\n                        props.courseListData,\n                        props.candidatePerformanceData,\n                        props.adminExamReport.reportCourseId\n                          ? props.adminExamReport.reportCourseId.course_id\n                          : \"all\"\n                      ),\n                      props.filterApplicantPerformance\n                    ),\n                    searchInput\n                  ),\n                  sortProperty,\n                  sortOrder\n                ).map((item: candidatePerfomranceStateInterface, i) => (\n                  <tr\n                    key={i + 1}\n                    className={`${controlRowsByStatus(\n                      item.exam_stastus\n                    )} text-gray-600 hover:bg-blue-100 hover:text-blue-700 text-sm`}\n                  >\n                    <td className=\"px-2 py-2\">{i + 1}</td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(item.user_name)}\n                    </td>\n                    <td className=\"px-2 py-2\">{item.national_id}</td>\n                    <td className=\"px-2 py-2\">{item.user_email}</td>\n                    <td className=\"px-2 py-2\">{item.user_phone}</td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(item.course_name)} (\n                      <span className=\"font-semibold\">{item.course_code}</span>)\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam\n                        ? getPeriodById(props.thisPeriod, item.exam.period)\n                          ? getPeriodById(props.thisPeriod, item.exam.period)!\n                              .session_plan_name\n                          : \"-\"\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam.exam_date ? DATE(item.exam.exam_date) : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam.start_time\n                        ? timestampToDate(item.exam.start_time).timeAMPM\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam.end_time\n                        ? timestampToDate(item.exam.end_time).timeAMPM\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam_stastus !== ReportUserExamStatus.Editing\n                        ? Number(item.user_total_marks.toFixed(1)) + \"%\"\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(displayStatus(item.exam_stastus))}\n                    </td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  adminExamReport,\n}: StoreState): {\n  adminExamReport: ExamReportReducerType;\n} => {\n  return {\n    adminExamReport,\n  };\n};\n\nexport default React.memo(connect(mapStateToProps, {})(CandidatePerformance));\n","import React, { Fragment, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { SessionPlanInterface } from \"../../../interfaces\";\nimport { course } from \"../../../interfaces/course\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { DATE, sortThisArray } from \"../../../utils/functions\";\n// import searchData from \"../../../utils/search\";\nimport { getPeriodById } from \"./ExamReport\";\n\n// EXCEL INTERFACES ======================================\nexport interface ExamPreparationToPrintInterface {\n  course_id: number;\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string;\n  exam_period: string;\n  exam_date: string;\n  exam_time: string;\n  exam_duration: string;\n  // exam: ExamItemResponse | null;\n  preparation_status: string;\n}\n\nexport enum examPreparationReportContentKeyInterface {\n  \"course_name\" = \"course_name\",\n  \"course_code\" = \"course_code\",\n  SCHOOL_LEVEL = \"school_levels\",\n  PERIOD = \"exam_period\",\n  DATE = \"exam_date\",\n  TIME = \"exam_time\",\n  DURATION = \"exam_duration\",\n  STATUS = \"preparation_status\",\n}\n\nexport interface examPreparationReportContentInterface {\n  key: examPreparationReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n\nexport const defaultExamPreparationReportContent: examPreparationReportContentInterface[] =\n  [\n    {\n      key: examPreparationReportContentKeyInterface.course_name,\n      title: \"Course names\",\n      status: true,\n    },\n    {\n      key: examPreparationReportContentKeyInterface.course_code,\n      title: \"Course code\",\n      status: true,\n    },\n    {\n      key: examPreparationReportContentKeyInterface.SCHOOL_LEVEL,\n      title: \"School levels\",\n      status: true,\n    },\n    {\n      key: examPreparationReportContentKeyInterface.PERIOD,\n      title: \"Exam period\",\n      status: true,\n    },\n    {\n      key: examPreparationReportContentKeyInterface.DATE,\n      title: \"Exam date\",\n      status: true,\n    },\n    {\n      key: examPreparationReportContentKeyInterface.TIME,\n      title: \"Exam time\",\n      status: true,\n    },\n    {\n      key: examPreparationReportContentKeyInterface.DURATION,\n      title: \"Exam duration\",\n      status: true,\n    },\n    {\n      key: examPreparationReportContentKeyInterface.STATUS,\n      title: \"Exam status\",\n      status: true,\n    },\n  ];\n\nexport const examPreparationIsChangeAllowed = (\n  key: examPreparationReportContentKeyInterface\n): boolean => {\n  if (\n    key === examPreparationReportContentKeyInterface.course_name ||\n    key === examPreparationReportContentKeyInterface.course_code\n  ) {\n    return false;\n  }\n  return true;\n};\n// END EXCEL INTERFACES ======================================\n\nexport interface examPreparationStateInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n  exam: ExamItemResponse | null;\n  preparation_status: \"prepared\" | \"not prepared\";\n}\n\nexport const FC_reportExamList = (\n  allCourses: course[],\n  allExams: ExamItemResponse[],\n  period: string = \"\"\n): examPreparationStateInterface[] => {\n  let result: examPreparationStateInterface[] = [],\n    ids: string[] = [];\n  for (const key in allCourses) {\n    if (Object.prototype.hasOwnProperty.call(allCourses, key)) {\n      if (ids.includes(allCourses[key].course_id)) continue;\n      ids.push(allCourses[key].course_id);\n      let exam = !isEmptyOrSpaces(period)\n        ? allExams.find(\n            (item) =>\n              item.course === allCourses[key].course_id &&\n              item.period === period\n          )\n        : allExams.find((item) => item.course === allCourses[key].course_id);\n      if (exam) {\n        result.push({\n          course_name: allCourses[key].course_name,\n          course_code: allCourses[key].course_code,\n          description: allCourses[key].description,\n          school_levels: allCourses[key].school_levels,\n          course_id: allCourses[key].course_id,\n          exam: exam,\n          preparation_status: \"prepared\",\n        });\n      } else {\n        result.push({\n          course_name: allCourses[key].course_name,\n          course_code: allCourses[key].course_code,\n          description: allCourses[key].description,\n          school_levels: allCourses[key].school_levels,\n          course_id: allCourses[key].course_id,\n          exam: null,\n          preparation_status: \"not prepared\",\n        });\n      }\n    }\n  }\n  return result;\n};\n\nexport const FC_reportExamListFilter = (\n  thisList: examPreparationStateInterface[],\n  thisStatus: \"all\" | \"prepared\" | \"not prepared\"\n): examPreparationStateInterface[] => {\n  if (thisStatus === \"all\") {\n    return thisList;\n  } else {\n    return thisList.filter((item) => item.preparation_status === thisStatus);\n  }\n};\n\nexport const searchExamList = (\n  objList: examPreparationStateInterface[],\n  text: string\n): examPreparationStateInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (\n        prop === \"course_name\" ||\n        prop === \"course_code\" ||\n        prop === \"preparation_status\"\n      ) {\n        flag =\n          product[prop].toString().toLowerCase().indexOf(text.toLowerCase()) >\n          -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n};\n\ntype ExamListProps = {\n  loading: boolean;\n  examsListData: ExamItemResponse[] | null;\n  courseListData: course[] | null;\n  thisPeriod: SessionPlanInterface[];\n  // FOR EXAM PREPARATION PROPS =========================================\n  filterPreparation: \"prepared\" | \"not prepared\" | \"all\";\n};\n\nconst ExamList: React.FC<ExamListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const [isSorted, setIsSorted] = useState<boolean>(false);\n  const [sortProperty, setSortProperty] = useState<string>(\"\");\n  const [sortOrder, setSortOrder] = useState<\"ASC\" | \"DESC\">(\"ASC\");\n\n  const setSort = (thisProperty: string) => {\n    if (sortProperty === thisProperty && sortOrder === \"ASC\") {\n      setSortOrder(\"DESC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    } else {\n      setSortOrder(\"ASC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    }\n  };\n\n  return (\n    <Fragment>\n      <div className=\"bg-white my-4\">\n        <div className=\"w-full px-2 py-2\">\n          {props.courseListData && props.examsListData && (\n            <input\n              onChange={(e) => setSearchInput(e.target.value)}\n              type=\"text\"\n              value={searchInput}\n              placeholder=\"Search...\"\n              className=\"w-full bg-gray-100 py-2 px-3 rounded\"\n              disabled={\n                FC_reportExamListFilter(\n                  FC_reportExamList(props.courseListData, props.examsListData),\n                  props.filterPreparation\n                ).length <= 0\n              }\n            />\n          )}\n        </div>\n        <div className=\"w-full overflow-x-auto\">\n          <table className=\"w-full shadow\" id=\"report_content\">\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n              <tr>\n                <td className=\"px-2 py-2\">#</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"course_name\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Course <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">Exam date</td>\n                <td className=\"px-2 py-2\">Exam time</td>\n                <td className=\"px-2 py-2\">Exam duration</td>\n                <td className=\"px-2 py-2\">Exam Period</td>\n                <td className=\"px-2 py-2\">Created at</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"preparation_status\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Exam Status <BiSort />\n                  </div>\n                </td>\n              </tr>\n            </thead>\n            <tbody>\n              {props.courseListData === null || props.loading ? (\n                <tr>\n                  <td colSpan={8} className=\"px-2 py-2\">\n                    <Loading />\n                  </td>\n                </tr>\n              ) : props.courseListData &&\n                props.examsListData &&\n                FC_reportExamListFilter(\n                  FC_reportExamList(props.courseListData, props.examsListData),\n                  props.filterPreparation\n                ).length <= 0 ? (\n                <tr>\n                  <td colSpan={8} className=\"px-2 py-2 text-center\">\n                    No Course for exam found\n                  </td>\n                </tr>\n              ) : (\n                props.examsListData &&\n                sortThisArray(\n                  isSorted,\n                  searchExamList(\n                    FC_reportExamListFilter(\n                      FC_reportExamList(\n                        props.courseListData,\n                        props.examsListData\n                      ),\n                      props.filterPreparation\n                    ),\n                    searchInput\n                  ),\n                  sortProperty,\n                  sortOrder\n                ).map((item, i) => (\n                  <tr\n                    key={i + 1}\n                    className={`${\n                      item.exam ? \"bg-blue-50\" : \"bg-white\"\n                    } text-gray-600 hover:bg-blue-100 hover:text-blue-700 border-b border-gray-300 hover:border-blue-500 text-sm`}\n                  >\n                    <td className=\"px-2 py-2\">{i + 1}</td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(item.course_name)} (\n                      <span className=\"font-semibold\">{item.course_code}</span>)\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam ? DATE(item.exam.exam_date) : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam ? item.exam.start_time : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam ? item.exam!.duration + \" min\" : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam\n                        ? getPeriodById(props.thisPeriod, item.exam.period)\n                          ? getPeriodById(props.thisPeriod, item.exam.period)!\n                              .session_plan_name\n                          : \"-\"\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam ? DATE(item.exam.createdAt) : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(\n                        item.exam ? \"Prepared\" : \"Not prepared\"\n                      )}\n                    </td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default React.memo(ExamList);\n","import React, { useEffect, useState } from \"react\";\nimport { CgFileDocument } from \"react-icons/cg\";\nimport { MdCheckBox, MdCheckBoxOutlineBlank, MdHistory } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  SetReportCourseId,\n  SetReportCourseIdAction,\n  SetReportDistrictId,\n  SetReportDistrictIdAction,\n} from \"../../../actions\";\nimport { getAllRoom } from \"../../../actions/location\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport { SessionPlanInterface } from \"../../../interfaces\";\nimport { StoreState } from \"../../../reducers\";\nimport { isEmptyOrSpaces } from \"../../../shared/dataTest\";\nimport {\n  LocationRoomTableInterface,\n  RoomLocationInterface,\n} from \"../../../shared/interfaces\";\nimport ExportToExcel from \"../../../utils/ExportToExcel\";\nimport ChooseSession from \"../../SessionSettings/ChooseSession\";\nimport { LocationsInArray } from \"../../UserManagement/UserList\";\nimport {\n  CandidateExamPerformanceToPrintInterface,\n  CandidateExamPerformanceReportContentInterface,\n  CandidateExamPerformanceReportContentKeyInterface,\n  candidateExamPerformanceIsChangeAllowed,\n} from \"./CandidatePerformance\";\nimport {\n  examinationProgressIsChangeAllowed,\n  ExaminationProgressReportContentInterface,\n  ExaminationProgressReportContentKeyInterface,\n  ExaminationProgressToPrintInterface,\n  examProgressStateInterface,\n  searchExamData,\n} from \"./DoneExamList\";\nimport {\n  examPreparationReportContentInterface,\n  ExamPreparationToPrintInterface,\n  examPreparationReportContentKeyInterface,\n  examPreparationIsChangeAllowed,\n} from \"./ExamList\";\nimport {\n  ExamPerformanceToPrintInterface,\n  examPerformanceReportContentInterface,\n  examPerformanceReportContentKeyInterface,\n  examPerformanceIsChangeAllowed,\n} from \"./ExamPerformance\";\nimport { reportTitleType } from \"./ExamReport\";\n\nexport const FC_DistinctDistrict = (\n  locations: LocationRoomTableInterface[]\n): LocationRoomTableInterface[] => {\n  var flags: string[] = [],\n    output: LocationRoomTableInterface[] = [],\n    l: number = locations.length,\n    i: number;\n  for (i = 0; i < l; i++) {\n    if (flags.includes(locations[i].district_id)) continue;\n    flags.push(locations[i].district_id);\n    output.push(locations[i]);\n  }\n\n  return output;\n};\n\nexport enum ModalForTypes {\n  title = \"TITLE\",\n  period = \"PERIOD\",\n  generateReportModal = \"GENERATE REPORT\",\n  choose_exam = \"Choosing Exam\",\n  choose_district = \"Choosing District\",\n}\n\ntype ExamReportModalsProps = {\n  modalFor: ModalForTypes;\n  modalState: boolean;\n  changeModalState: (state: boolean) => void;\n\n  // FOR CHANGING PERIOD =========================\n  applicationPeriods?: SessionPlanInterface[] | null;\n  selected_period?: SessionPlanInterface | null;\n  setSelectedPeriod?: (period: SessionPlanInterface) => void;\n  onPeriodChange?: (period_id: string) => void;\n\n  // FOR CHOOSING EXAM =========================\n  AllExamData?: examProgressStateInterface[];\n  // thisExam?: examProgressStateInterface | null;\n  // setSelectedExam?: (selectedExam: examProgressStateInterface | null) => void;\n  SetReportCourseId: (\n    data: examProgressStateInterface | null\n  ) => SetReportCourseIdAction;\n  thisExam?: examProgressStateInterface | null;\n\n  // FOR REPORT TYPE =========================\n  reportTitle?: reportTitleType;\n  setReportTitle?: (title: reportTitleType) => void;\n\n  // FOR EXCEL GENERATION =========================\n  generateReportModal?: {\n    reportType: \"EXCEL\" | \"PDF\";\n    status: boolean;\n  } | null;\n  setGenerateReportModal?: (\n    reportData: {\n      reportType: \"EXCEL\" | \"PDF\";\n      status: boolean;\n    } | null\n  ) => void;\n  excelReportTitle?: string;\n  setExcelReportTitle?: (title: string) => void;\n  examPreparationReportContent?: examPreparationReportContentInterface[];\n  setExamPreparationReportContent?: (\n    content: examPreparationReportContentInterface[]\n  ) => void;\n  updateExamToPrint?: () => void;\n  examsToPrint?:\n    | ExamPreparationToPrintInterface[]\n    | ExamPerformanceToPrintInterface[]\n    | null;\n  // FOR EXAM PERFORMANCE REPORT ================================\n  examPerformanceToPrint?: ExamPerformanceToPrintInterface[] | null;\n  examPerformanceReportContent?: examPerformanceReportContentInterface[];\n  setExamPerformanceReportContent?: (\n    value: examPerformanceReportContentInterface[]\n  ) => void;\n  // FOR EXCEL TOP 30 EXAM PERFORMANCE REPORT CONTENT ===============================\n  exam30PerformanceToPrint?: ExamPerformanceToPrintInterface[] | null;\n  exam30PerformanceReportContent?: examPerformanceReportContentInterface[];\n  setExam30PerformanceReportContent?: (\n    value: examPerformanceReportContentInterface[]\n  ) => void;\n  // FOR EXCEL EXAMINATION PROGRESS REPORT CONTENT ===============================\n  examinationProgressToPrint?: ExaminationProgressToPrintInterface[] | null;\n  examinationProgressReportContent?: ExaminationProgressReportContentInterface[];\n  setExaminationProgressExamPerformanceReportContent?: (\n    value: ExaminationProgressReportContentInterface[]\n  ) => void;\n  // FOR EXCEL CANDIDATE EXAM PERFORMANCE REPORT CONTENT ===============================\n  candidateExamPerformanceToPrint?:\n    | CandidateExamPerformanceToPrintInterface[]\n    | null;\n  candidateExamPerformanceReportContent?: CandidateExamPerformanceReportContentInterface[];\n  setCandidateExamPerformanceReportContent?: (\n    value: CandidateExamPerformanceReportContentInterface[]\n  ) => void;\n  // FOR EXCEL TOP 30 CANDIDATE EXAM PERFORMANCE REPORT CONTENT ===============================\n  candidate30ExamPerformanceToPrint?:\n    | CandidateExamPerformanceToPrintInterface[]\n    | null;\n  candidate30ExamPerformanceReportContent?: CandidateExamPerformanceReportContentInterface[];\n  setCandidate30ExamPerformanceReportContent?: (\n    value: CandidateExamPerformanceReportContentInterface[]\n  ) => void;\n  // FOR LOCATIONS PROVINCE, DISTRICT, CENTERS, ROOM ================================\n  locations: RoomLocationInterface[];\n  getAllRoom: Function;\n  SetReportDistrictId?: (\n    data: {\n      district_id: string;\n      district_name: string;\n    } | null\n  ) => SetReportDistrictIdAction;\n  districtId?: string;\n  isAllDistrictAllowed?: boolean;\n};\n\nconst ExamReportModals: React.FC<ExamReportModalsProps> = (props) => {\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [selectAll, setSelectAll] = useState<boolean>(true);\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const [loadingLocation, setLoadingLocation] = useState<boolean>(true);\n  const [error, setError] = useState<{ element: String; msg: string } | null>(\n    null\n  );\n  const [districtId, setDistrictId] = useState<string>(\n    props.districtId ? props.districtId : \"all\"\n  );\n\n  const isChangeAllowed = (key: any): boolean => {\n    // EXAM PREPARATION ######################\n    if (\n      props.reportTitle &&\n      props.reportTitle === reportTitleType.EXAM_PREPARATION\n    ) {\n      return examPreparationIsChangeAllowed(key);\n    }\n    // EXAM PERFORMANCE ######################\n    if (\n      props.reportTitle &&\n      (props.reportTitle === reportTitleType.EXAM_PERFORMANCE ||\n        props.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE)\n    ) {\n      return examPerformanceIsChangeAllowed(key);\n    }\n    // EXAMINATION PROGRESS ######################\n    if (\n      props.reportTitle &&\n      props.reportTitle === reportTitleType.EXAMINATION_PROGRESS\n    ) {\n      return examinationProgressIsChangeAllowed(key);\n    }\n    // CANDIDATE EXAM PERFORMANCE && TOP 30 CANDIDATE EXAM PERFORMANCE ######################\n    if (\n      props.reportTitle &&\n      (props.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE ||\n        props.reportTitle === reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE)\n    ) {\n      return candidateExamPerformanceIsChangeAllowed(key);\n    }\n    return false;\n  };\n\n  const updateExamPreparationReportContent = (\n    key: examPreparationReportContentKeyInterface\n  ) => {\n    if (props.examPreparationReportContent) {\n      let index: number = props.examPreparationReportContent.findIndex(\n        (item) => item.key === key\n      );\n      let newArray: examPreparationReportContentInterface[] =\n        props.examPreparationReportContent;\n      newArray[index].status = !newArray[index].status;\n      props.setExamPreparationReportContent &&\n        props.setExamPreparationReportContent(newArray);\n      let isSelectAllNeeded = newArray.find((item) => item.status === false);\n      if (isSelectAllNeeded) {\n        setSelectAll(false);\n      } else {\n        setSelectAll(true);\n      }\n\n      // UPDATE APPLICATION LIST FOR UPDATE ==============================\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n  };\n\n  const resetReportContent = (currentState: boolean) => {\n    if (props.reportTitle) {\n      // EXAM PREPARATION =======================================\n      if (\n        props.reportTitle === reportTitleType.EXAM_PREPARATION &&\n        props.examPreparationReportContent\n      ) {\n        let newArray: examPreparationReportContentInterface[] =\n          props.examPreparationReportContent;\n        for (const key in newArray) {\n          if (isChangeAllowed(newArray[key].key)) {\n            newArray[key].status = !currentState;\n          }\n        }\n\n        props.setExamPreparationReportContent &&\n          props.setExamPreparationReportContent(newArray);\n        setSelectAll(!currentState);\n\n        props.updateExamToPrint && props.updateExamToPrint();\n      }\n    }\n\n    // EXAM PERFORMANCE =======================================\n    if (\n      props.reportTitle === reportTitleType.EXAM_PERFORMANCE &&\n      props.examPerformanceReportContent\n    ) {\n      let newArray: examPerformanceReportContentInterface[] =\n        props.examPerformanceReportContent;\n      for (const key in newArray) {\n        if (isChangeAllowed(newArray[key].key)) {\n          newArray[key].status = !currentState;\n        }\n      }\n\n      props.setExamPerformanceReportContent &&\n        props.setExamPerformanceReportContent(newArray);\n      setSelectAll(!currentState);\n\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n\n    // TOP 30 EXAM PERFORMANCE =======================================\n    if (\n      props.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n      props.exam30PerformanceReportContent\n    ) {\n      let newArray: examPerformanceReportContentInterface[] =\n        props.exam30PerformanceReportContent;\n      for (const key in newArray) {\n        if (isChangeAllowed(newArray[key].key)) {\n          newArray[key].status = !currentState;\n        }\n      }\n\n      props.setExam30PerformanceReportContent &&\n        props.setExam30PerformanceReportContent(newArray);\n      setSelectAll(!currentState);\n\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n\n    // EXAMINATION PROGRESS =======================================\n    if (\n      props.reportTitle === reportTitleType.EXAMINATION_PROGRESS &&\n      props.examinationProgressReportContent\n    ) {\n      let newArray: ExaminationProgressReportContentInterface[] =\n        props.examinationProgressReportContent;\n      for (const key in newArray) {\n        if (isChangeAllowed(newArray[key].key)) {\n          newArray[key].status = !currentState;\n        }\n      }\n\n      props.setExaminationProgressExamPerformanceReportContent &&\n        props.setExaminationProgressExamPerformanceReportContent(newArray);\n      setSelectAll(!currentState);\n\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n\n    // CANDIDATE EXAM PERFORMANCE =======================================\n    if (\n      props.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE &&\n      props.candidateExamPerformanceReportContent\n    ) {\n      let newArray: CandidateExamPerformanceReportContentInterface[] =\n        props.candidateExamPerformanceReportContent;\n      for (const key in newArray) {\n        if (isChangeAllowed(newArray[key].key)) {\n          newArray[key].status = !currentState;\n        }\n      }\n\n      props.setCandidateExamPerformanceReportContent &&\n        props.setCandidateExamPerformanceReportContent(newArray);\n      setSelectAll(!currentState);\n\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n\n    // TOP 30 CANDIDATE EXAM PERFORMANCE =======================================\n    if (\n      props.reportTitle === reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE &&\n      props.candidate30ExamPerformanceReportContent\n    ) {\n      let newArray: CandidateExamPerformanceReportContentInterface[] =\n        props.candidate30ExamPerformanceReportContent;\n      for (const key in newArray) {\n        if (isChangeAllowed(newArray[key].key)) {\n          newArray[key].status = !currentState;\n        }\n      }\n\n      props.setCandidate30ExamPerformanceReportContent &&\n        props.setCandidate30ExamPerformanceReportContent(newArray);\n      setSelectAll(!currentState);\n\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n  };\n\n  const updateExamPerformanceReportContent = (\n    key: examPerformanceReportContentKeyInterface\n  ) => {\n    if (\n      props.reportTitle &&\n      props.reportTitle === reportTitleType.EXAM_PERFORMANCE &&\n      props.examPerformanceReportContent\n    ) {\n      let index: number = props.examPerformanceReportContent.findIndex(\n        (item) => item.key === key\n      );\n      let newArray: examPerformanceReportContentInterface[] =\n        props.examPerformanceReportContent;\n      newArray[index].status = !newArray[index].status;\n      props.setExamPerformanceReportContent &&\n        props.setExamPerformanceReportContent(newArray);\n      let isSelectAllNeeded = newArray.find((item) => item.status === false);\n      if (isSelectAllNeeded) {\n        setSelectAll(false);\n      } else {\n        setSelectAll(true);\n      }\n\n      // UPDATE APPLICATION LIST FOR UPDATE ==============================\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n    if (\n      props.reportTitle &&\n      props.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n      props.exam30PerformanceReportContent\n    ) {\n      let index: number = props.exam30PerformanceReportContent.findIndex(\n        (item) => item.key === key\n      );\n      let newArray: examPerformanceReportContentInterface[] =\n        props.exam30PerformanceReportContent;\n      newArray[index].status = !newArray[index].status;\n      props.setExam30PerformanceReportContent &&\n        props.setExam30PerformanceReportContent(newArray);\n      let isSelectAllNeeded = newArray.find((item) => item.status === false);\n      if (isSelectAllNeeded) {\n        setSelectAll(false);\n      } else {\n        setSelectAll(true);\n      }\n\n      // UPDATE APPLICATION LIST FOR UPDATE ==============================\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n  };\n\n  const updateExaminationProgressReportContent = (\n    key: ExaminationProgressReportContentKeyInterface\n  ) => {\n    if (props.examinationProgressReportContent) {\n      let index: number = props.examinationProgressReportContent.findIndex(\n        (item) => item.key === key\n      );\n      let newArray: ExaminationProgressReportContentInterface[] =\n        props.examinationProgressReportContent;\n      newArray[index].status = !newArray[index].status;\n      props.setExaminationProgressExamPerformanceReportContent &&\n        props.setExaminationProgressExamPerformanceReportContent(newArray);\n      let isSelectAllNeeded = newArray.find((item) => item.status === false);\n      if (isSelectAllNeeded) {\n        setSelectAll(false);\n      } else {\n        setSelectAll(true);\n      }\n\n      // UPDATE APPLICATION LIST FOR UPDATE ==============================\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n  };\n\n  const updateCandidateExamPerformanceReportContent = (\n    key: CandidateExamPerformanceReportContentKeyInterface\n  ) => {\n    if (\n      props.reportTitle &&\n      props.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE &&\n      props.candidateExamPerformanceReportContent\n    ) {\n      let index: number = props.candidateExamPerformanceReportContent.findIndex(\n        (item) => item.key === key\n      );\n      let newArray: CandidateExamPerformanceReportContentInterface[] =\n        props.candidateExamPerformanceReportContent;\n      newArray[index].status = !newArray[index].status;\n      props.setCandidateExamPerformanceReportContent &&\n        props.setCandidateExamPerformanceReportContent(newArray);\n      let isSelectAllNeeded = newArray.find((item) => item.status === false);\n      if (isSelectAllNeeded) {\n        setSelectAll(false);\n      } else {\n        setSelectAll(true);\n      }\n\n      // UPDATE APPLICATION LIST FOR UPDATE ==============================\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n\n    if (\n      props.reportTitle &&\n      props.reportTitle === reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE &&\n      props.candidate30ExamPerformanceReportContent\n    ) {\n      let index: number =\n        props.candidate30ExamPerformanceReportContent.findIndex(\n          (item) => item.key === key\n        );\n      let newArray: CandidateExamPerformanceReportContentInterface[] =\n        props.candidate30ExamPerformanceReportContent;\n      newArray[index].status = !newArray[index].status;\n      props.setCandidate30ExamPerformanceReportContent &&\n        props.setCandidate30ExamPerformanceReportContent(newArray);\n      let isSelectAllNeeded = newArray.find((item) => item.status === false);\n      if (isSelectAllNeeded) {\n        setSelectAll(false);\n      } else {\n        setSelectAll(true);\n      }\n\n      // UPDATE APPLICATION LIST FOR UPDATE ==============================\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n  };\n\n  useEffect(() => {\n    if (\n      !props.locations.length &&\n      props.modalFor === ModalForTypes.choose_district\n    ) {\n      props.getAllRoom((status: boolean, msg: string) => {\n        if (!status && msg.length > 0) console.error(msg);\n        setLoadingLocation(status);\n      });\n    } else {\n      setLoadingLocation(false);\n    }\n  }, [props]);\n\n  const selectDistrict = (district_id: string) => {\n    setError(null);\n    if (district_id === \"all\") {\n      if (\n        ((props.reportTitle &&\n          props.reportTitle ===\n            reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE) ||\n          (props.isAllDistrictAllowed &&\n            props.isAllDistrictAllowed === true)) &&\n        props.SetReportDistrictId\n      ) {\n        props.SetReportDistrictId(null);\n        props.changeModalState(false);\n      } else {\n        setError({ element: \"district\", msg: \"District is required\" });\n      }\n    } else {\n      if (props.SetReportDistrictId) {\n        let thisDistrict = LocationsInArray(props.locations).find(\n          (item) => item.district_id === district_id\n        );\n        if (!thisDistrict) {\n          return setError({ element: \"district\", msg: \"Invalid district id\" });\n        } else {\n          props.SetReportDistrictId({\n            district_id: thisDistrict.district_id,\n            district_name: thisDistrict.district_name,\n          });\n          props.changeModalState(false);\n        }\n      }\n    }\n  };\n\n  const showGenerateBtn = (): { status: boolean; data: any[] } => {\n    if (props.reportTitle) {\n      // EXAM PREPARATION ######################\n      if (\n        props.reportTitle === reportTitleType.EXAM_PREPARATION &&\n        props.excelReportTitle &&\n        props.examsToPrint\n      ) {\n        return { status: true, data: props.examsToPrint };\n      }\n      // EXAM PERFORMANCE ######################\n      if (\n        props.reportTitle === reportTitleType.EXAM_PERFORMANCE &&\n        props.excelReportTitle &&\n        props.examPerformanceToPrint\n      ) {\n        return { status: true, data: props.examPerformanceToPrint };\n      }\n      // TOP 30 EXAM PERFORMANCE ######################\n      if (\n        props.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n        props.excelReportTitle &&\n        props.exam30PerformanceToPrint\n      ) {\n        return { status: true, data: props.exam30PerformanceToPrint };\n      }\n      // EXAMINATION PROGRESS ######################\n      if (\n        props.reportTitle === reportTitleType.EXAMINATION_PROGRESS &&\n        props.excelReportTitle &&\n        props.examinationProgressToPrint\n      ) {\n        return { status: true, data: props.examinationProgressToPrint };\n      }\n      // CANDIDATE EXAM PERFORMANCE ######################\n      if (\n        props.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE &&\n        props.excelReportTitle &&\n        props.candidateExamPerformanceToPrint\n      ) {\n        return { status: true, data: props.candidateExamPerformanceToPrint };\n      }\n      // TOP 30 CANDIDATE EXAM PERFORMANCE ######################\n      if (\n        props.reportTitle === reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE &&\n        props.excelReportTitle &&\n        props.candidate30ExamPerformanceToPrint\n      ) {\n        return { status: true, data: props.candidate30ExamPerformanceToPrint };\n      }\n    }\n    return { status: false, data: [] };\n  };\n\n  return (\n    <div>\n      {/* LOAD MODAL FOR PERIOD ================================== */}\n      {props.modalFor === ModalForTypes.period &&\n        props.applicationPeriods &&\n        props.modalState && (\n          <Modal\n            title={\n              <div className=\"flex flex-row gap-4 items-center\">\n                <MdHistory className=\"text-5xl text-blue-600\" />\n                <div className=\"flex flex-col\">\n                  <span className=\"font-bold text-xl text-blue-600\">\n                    Choose a period\n                  </span>\n                </div>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() => props.selected_period && props.changeModalState(false)}\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{ title: true }}\n          >\n            <ChooseSession\n              allSession={props.applicationPeriods}\n              setSelectSession={(value: SessionPlanInterface | \"all\") => {\n                if (value !== \"all\") {\n                  props.setSelectedPeriod && props.setSelectedPeriod(value);\n                  props.onPeriodChange &&\n                    props.onPeriodChange(value.session_plan_id);\n                  props.changeModalState(false);\n                }\n              }}\n              chooseAll={false}\n              currentSelected={\n                props.selected_period ? props.selected_period : \"all\"\n              }\n            />\n          </Modal>\n        )}\n      {/* END LOAD MODAL FOR PERIOD ================================== */}\n\n      {/* LOAD MODAL FOR REPORT TYPES ================================== */}\n      {props.modalFor === ModalForTypes.title && props.modalState && (\n        <Modal\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              <CgFileDocument className=\"text-5xl text-blue-600\" />\n              <div className=\"flex flex-col\">\n                <span className=\"font-bold text-xl text-blue-600\">\n                  Choose exam report type\n                </span>\n              </div>\n            </div>\n          }\n          backDrop={true}\n          theme={Themes.default}\n          close={() => props.changeModalState(false)}\n          backDropClose={true}\n          widthSizeClass={ModalSize.extraLarge}\n          displayClose={true}\n          padding={{ title: true }}\n        >\n          <div className=\"px-2 pb-2\">\n            {Object.values(reportTitleType).map((item, i) => (\n              <div\n                onClick={() => {\n                  props.setReportTitle && props.setReportTitle(item);\n                  props.setExcelReportTitle && props.setExcelReportTitle(item);\n                  props.changeModalState(false);\n                }}\n                key={i + 1}\n                className={`flex items-center border rounded px-2 py-2 cursor-pointer group hover:bg-blue-100 hover:border-blue-500 mb-3 justify-between ${\n                  props.reportTitle && props.reportTitle === item\n                    ? \"bg-blue-50 border-blue-400\"\n                    : \"bg-white border-gray-200\"\n                }`}\n              >\n                <div>\n                  <div className=\"text-blue-500 text-sm font-medium italic\">\n                    Report type\n                  </div>\n                  <div className=\"font-bold\">\n                    {item}\n                    {item === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n                      \" district\"}\n                  </div>\n                </div>\n                <div className=\"btn bg-blue-400 group-hover:bg-blue-600 text-white mr-2\">\n                  Choose\n                </div>\n              </div>\n            ))}\n          </div>\n        </Modal>\n      )}\n      {/* END LOAD MODAL FOR REPORT TYPES ================================== */}\n\n      {/* GENERATE DYNAMIC REPORT CONTENT MODAL */}\n      {props.generateReportModal &&\n        props.modalFor === ModalForTypes.generateReportModal &&\n        props.modalState && (\n          <Modal\n            title={\n              <div className=\"flex flex-row gap-4 items-center\">\n                {/* <IoBriefcase className=\"text-5xl text-gray-500\" /> */}\n                <div className=\"flex flex-col\">\n                  <span className=\"font-bold text-2xl text-gray-500\">\n                    Generating Report contents\n                  </span>\n                  <span className=\"text-sm text-blue-600 font-normal\">\n                    Generating {props.generateReportModal.reportType} Report\n                  </span>\n                </div>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() =>\n              props.setGenerateReportModal && props.setGenerateReportModal(null)\n            }\n            backDropClose={false}\n            widthSizeClass={ModalSize.medium}\n            displayClose={true}\n            padding={{ title: true }}\n          >\n            <div className=\"px-6\">\n              <div className=\"my-2 text-base text-gray-700 sm:text-lg\">\n                <div className=\"flex flex-col\">\n                  <label>Title</label>\n                  <input\n                    type=\"text\"\n                    className={`text-left input-white w-20 inline-block ${\n                      formError && formError.element === \"report_title\"\n                        ? \"border-red-500\"\n                        : \"border-gray-500\"\n                    } border-2`}\n                    placeholder=\"Sub Category Title\"\n                    value={props.excelReportTitle ? props.excelReportTitle : \"\"}\n                    onChange={(e) => {\n                      props.setExcelReportTitle &&\n                        props.setExcelReportTitle(e.target.value);\n                      setFormError(null);\n                    }}\n                    // disabled={props.loading}\n                  />\n                  {formError && formError.element === \"report_title\" && (\n                    <span className=\"text-red-500\">{formError.msg}</span>\n                  )}\n                </div>\n                <div className=\"flex flex-col mt-2\">\n                  <label>Report content</label>\n                  {/* // EXAM PREPARATION ###################### */}\n                  {props.reportTitle &&\n                    props.reportTitle === reportTitleType.EXAM_PREPARATION && (\n                      <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                        {props.examPreparationReportContent &&\n                          props.examPreparationReportContent.map(\n                            (item, index) => (\n                              <div\n                                key={index}\n                                className={`flex items-center gap-1 ${\n                                  isChangeAllowed(item.key)\n                                    ? \"cursor-pointer\"\n                                    : \"cursor-not-allowed\"\n                                }`}\n                                onClick={() =>\n                                  isChangeAllowed(item.key) &&\n                                  updateExamPreparationReportContent(item.key)\n                                }\n                                title={\n                                  !isChangeAllowed(item.key)\n                                    ? \"Required for every report!\"\n                                    : \"\"\n                                }\n                              >\n                                {item.status ? (\n                                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                                ) : (\n                                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                                )}\n                                <span>{item.title}</span>\n                              </div>\n                            )\n                          )}\n                      </div>\n                    )}\n                  {/* // EXAM PERFORMANCE ###################### */}\n                  {props.reportTitle &&\n                    props.reportTitle === reportTitleType.EXAM_PERFORMANCE && (\n                      <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                        {props.examPerformanceReportContent &&\n                          props.examPerformanceReportContent.map(\n                            (item, index) => (\n                              <div\n                                key={index}\n                                className={`flex items-center gap-1 ${\n                                  isChangeAllowed(item.key)\n                                    ? \"cursor-pointer\"\n                                    : \"cursor-not-allowed\"\n                                }`}\n                                onClick={() =>\n                                  isChangeAllowed(item.key) &&\n                                  updateExamPerformanceReportContent(item.key)\n                                }\n                                title={\n                                  !isChangeAllowed(item.key)\n                                    ? \"Required for every report!\"\n                                    : \"\"\n                                }\n                              >\n                                {item.status ? (\n                                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                                ) : (\n                                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                                )}\n                                <span>{item.title}</span>\n                              </div>\n                            )\n                          )}\n                      </div>\n                    )}\n                  {/* // TOP 30 EXAM PERFORMANCE ###################### */}\n                  {props.reportTitle &&\n                    props.reportTitle ===\n                      reportTitleType.EXAM_DISTRICT_PERFORMANCE && (\n                      <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                        {props.exam30PerformanceReportContent &&\n                          props.exam30PerformanceReportContent.map(\n                            (item, index) => (\n                              <div\n                                key={index}\n                                className={`flex items-center gap-1 ${\n                                  isChangeAllowed(item.key)\n                                    ? \"cursor-pointer\"\n                                    : \"cursor-not-allowed\"\n                                }`}\n                                onClick={() =>\n                                  isChangeAllowed(item.key) &&\n                                  updateExamPerformanceReportContent(item.key)\n                                }\n                                title={\n                                  !isChangeAllowed(item.key)\n                                    ? \"Required for every report!\"\n                                    : \"\"\n                                }\n                              >\n                                {item.status ? (\n                                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                                ) : (\n                                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                                )}\n                                <span>{item.title}</span>\n                              </div>\n                            )\n                          )}\n                      </div>\n                    )}\n                  {/* // EXAMINATION PROGRESS ###################### */}\n                  {props.reportTitle &&\n                    props.reportTitle ===\n                      reportTitleType.EXAMINATION_PROGRESS && (\n                      <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                        {props.examinationProgressReportContent &&\n                          props.examinationProgressReportContent.map(\n                            (item, index) => (\n                              <div\n                                key={index}\n                                className={`flex items-center gap-1 ${\n                                  isChangeAllowed(item.key)\n                                    ? \"cursor-pointer\"\n                                    : \"cursor-not-allowed\"\n                                }`}\n                                onClick={() =>\n                                  isChangeAllowed(item.key) &&\n                                  updateExaminationProgressReportContent(\n                                    item.key\n                                  )\n                                }\n                                title={\n                                  !isChangeAllowed(item.key)\n                                    ? \"Required for every report!\"\n                                    : \"\"\n                                }\n                              >\n                                {item.status ? (\n                                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                                ) : (\n                                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                                )}\n                                <span>{item.title}</span>\n                              </div>\n                            )\n                          )}\n                      </div>\n                    )}\n                  {/* // EXAMINATION PROGRESS ###################### */}\n                  {/* // CANDIDATE EXAM PERFORMANCE ###################### */}\n                  {props.reportTitle &&\n                    props.reportTitle ===\n                      reportTitleType.APPLICANTS_PERFORMANCE && (\n                      <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                        {props.candidateExamPerformanceReportContent &&\n                          props.candidateExamPerformanceReportContent.map(\n                            (item, index) => (\n                              <div\n                                key={index}\n                                className={`flex items-center gap-1 ${\n                                  isChangeAllowed(item.key)\n                                    ? \"cursor-pointer\"\n                                    : \"cursor-not-allowed\"\n                                }`}\n                                onClick={() =>\n                                  isChangeAllowed(item.key) &&\n                                  updateCandidateExamPerformanceReportContent(\n                                    item.key\n                                  )\n                                }\n                                title={\n                                  !isChangeAllowed(item.key)\n                                    ? \"Required for every report!\"\n                                    : \"\"\n                                }\n                              >\n                                {item.status ? (\n                                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                                ) : (\n                                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                                )}\n                                <span>{item.title}</span>\n                              </div>\n                            )\n                          )}\n                      </div>\n                    )}\n                  {/* // END EXAMINATION PROGRESS ###################### */}\n                  {/* // TOP 30 CANDIDATE EXAM PERFORMANCE ###################### */}\n                  {props.reportTitle &&\n                    props.reportTitle ===\n                      reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE && (\n                      <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                        {props.candidate30ExamPerformanceReportContent &&\n                          props.candidate30ExamPerformanceReportContent.map(\n                            (item, index) => (\n                              <div\n                                key={index}\n                                className={`flex items-center gap-1 ${\n                                  isChangeAllowed(item.key)\n                                    ? \"cursor-pointer\"\n                                    : \"cursor-not-allowed\"\n                                }`}\n                                onClick={() =>\n                                  isChangeAllowed(item.key) &&\n                                  updateCandidateExamPerformanceReportContent(\n                                    item.key\n                                  )\n                                }\n                                title={\n                                  !isChangeAllowed(item.key)\n                                    ? \"Required for every report!\"\n                                    : \"\"\n                                }\n                              >\n                                {item.status ? (\n                                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                                ) : (\n                                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                                )}\n                                <span>{item.title}</span>\n                              </div>\n                            )\n                          )}\n                      </div>\n                    )}\n                  {/* // END TOP 30 CANDIDATE EXAM PERFORMANCE ###################### */}\n                  {formError && formError.element === \"report_content\" && (\n                    <span className=\"text-red-500\">{formError.msg}</span>\n                  )}\n                </div>\n              </div>\n              <div className=\"flex justify-between mb-2 mt-4\">\n                <div\n                  className={`flex items-center gap-1 cursor-pointer`}\n                  onClick={() => resetReportContent(selectAll)}\n                >\n                  {selectAll ? (\n                    <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                  ) : (\n                    <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                  )}\n                  <span>Select all</span>\n                </div>\n\n                {showGenerateBtn().status && (\n                  <ExportToExcel\n                    fileData={showGenerateBtn().data}\n                    fileName={props.excelReportTitle!}\n                    btnName=\"Generate\"\n                  />\n                )}\n              </div>\n            </div>\n          </Modal>\n        )}\n      {/* END GENERATE DYNAMIC REPORT CONTENT MODAL */}\n\n      {/* LOAD MODAL FOR CHOOSING EXAM ================================== */}\n      {props.modalFor === ModalForTypes.choose_exam &&\n        props.modalState &&\n        props.AllExamData && (\n          <Modal\n            title={\n              <div className=\"flex flex-row gap-4 items-center\">\n                <CgFileDocument className=\"text-5xl text-blue-600\" />\n                <div className=\"flex flex-col\">\n                  <span className=\"font-bold text-xl text-blue-600\">\n                    Choose exam\n                  </span>\n                </div>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() => props.changeModalState(false)}\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{ title: true }}\n          >\n            <div className=\"px-2 pb-2\">\n              <div className=\"w-full py-2\">\n                <input\n                  onChange={(e) => setSearchInput(e.target.value)}\n                  type=\"text\"\n                  value={searchInput}\n                  placeholder=\"Search...\"\n                  className=\"w-full bg-white py-2 px-3 rounded border border-gray-400\"\n                  disabled={props.AllExamData.length <= 0 ? true : false}\n                />\n              </div>\n              <div\n                onClick={() => {\n                  props.SetReportCourseId(null);\n                  props.changeModalState(false);\n                }}\n                className={`flex items-center border rounded px-2 py-2 cursor-pointer group hover:bg-blue-100 hover:border-blue-500 mb-3 justify-between ${\n                  props.thisExam === null\n                    ? \"bg-blue-50 border-blue-400\"\n                    : \"bg-white border-gray-200\"\n                }`}\n              >\n                <div>\n                  <div className=\"text-sm font-medium italic\">\n                    code: <span className=\"text-blue-500\">-</span>\n                  </div>\n                  <div className=\"font-bold text-lg\">All exams</div>\n                </div>\n                <div className=\"btn bg-blue-400 group-hover:bg-blue-600 text-white mr-2\">\n                  Choose\n                </div>\n              </div>\n              {searchExamData(props.AllExamData, searchInput).map((item, i) => (\n                <div\n                  onClick={() => {\n                    props.SetReportCourseId(item);\n                    props.changeModalState(false);\n                  }}\n                  key={i + 1}\n                  className={`flex items-center border rounded px-2 py-2 cursor-pointer group hover:bg-blue-100 hover:border-blue-500 mb-3 justify-between ${\n                    props.thisExam &&\n                    props.thisExam.course_id === item.course_id\n                      ? \"bg-blue-50 border-blue-400\"\n                      : \"bg-white border-gray-200\"\n                  }`}\n                >\n                  <div>\n                    <div className=\"text-sm font-medium italic\">\n                      code:{\" \"}\n                      <span className=\"text-blue-500\">{item.course_code}</span>\n                    </div>\n                    <div className=\"font-bold text-lg\">{item.course_name}</div>\n                  </div>\n                  <div className=\"btn bg-blue-400 group-hover:bg-blue-600 text-white mr-2\">\n                    Choose\n                  </div>\n                </div>\n              ))}\n            </div>\n          </Modal>\n        )}\n      {/* END LOAD MODAL FOR CHOOSING EXAM ================================== */}\n\n      {/* LOAD MODAL FOR CHOOSING DISTRICT ================================== */}\n      {props.modalFor === ModalForTypes.choose_district && props.modalState && (\n        <Modal\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              <CgFileDocument className=\"text-5xl text-blue-600\" />\n              <div className=\"flex flex-col\">\n                <span className=\"font-bold text-xl text-blue-600\">\n                  Choose district\n                </span>\n              </div>\n            </div>\n          }\n          backDrop={true}\n          theme={Themes.default}\n          close={() =>\n            !isEmptyOrSpaces(districtId) && props.changeModalState(false)\n          }\n          backDropClose={true}\n          widthSizeClass={ModalSize.medium}\n          displayClose={true}\n          padding={{ title: true }}\n        >\n          <div className=\"px-2 pb-2 \">\n            {loadingLocation ? (\n              <Loading />\n            ) : (\n              <section className=\"pb-8 px-7 \">\n                {/* <div className=\"grid grid-cols-1 \"> */}\n                <label className=\"uppercase md:text-sm text-xs text-gray-500 text-light font-semibold\">\n                  District\n                </label>\n                {props.locations.length > 0 ? (\n                  <div className=\"\">\n                    <select\n                      className={`py-3 px-3 w-full rounded border-2 bg-white mt-1 focus:outline-none ${\n                        error && error.element === \"district\"\n                          ? \"border-red-400 focus:border-red-800\"\n                          : \"border-gray-400 focus:border-gray-800\"\n                      }`}\n                      value={districtId}\n                      onChange={(e) => {\n                        setDistrictId(e.target.value);\n                        selectDistrict(e.target.value);\n                      }}\n                    >\n                      <option value=\"all\">Select district</option>\n                      {FC_DistinctDistrict(\n                        LocationsInArray(props.locations)\n                      ).map((item, index) => (\n                        <option\n                          key={index + item.district_id}\n                          value={item.district_id}\n                        >\n                          {item.district_name}\n                        </option>\n                      ))}\n                    </select>\n                    {error && error.element === \"district\" && (\n                      <p className=\"text-xs italic text-red-500 mt-3\">\n                        {error.msg}\n                      </p>\n                    )}\n                  </div>\n                ) : (\n                  <div className=\"alert-info\">No district found</div>\n                )}\n                {/* </div> */}\n              </section>\n            )}\n          </div>\n        </Modal>\n      )}\n      {/* END LOAD MODAL FOR CHOOSING DISTRICT ================================== */}\n    </div>\n  );\n};\n\nconst mapStateToProps = ({\n  locations,\n}: StoreState): {\n  locations: RoomLocationInterface[];\n} => {\n  return {\n    locations: locations.roomLocation,\n  };\n};\n\nexport default React.memo(connect(mapStateToProps, {\n  getAllRoom,\n  SetReportDistrictId,\n  SetReportCourseId,\n})(ExamReportModals));\n","import React from \"react\";\nimport Chart from \"react-apexcharts\";\n\ntype chartType = {\n  options: {\n    labels: string[];\n    legend?: ApexLegend;\n    plotOptions?: ApexPlotOptions;\n    colors?: any[];\n  };\n  series: number[];\n  width?: number;\n};\n\nconst PieChart: React.FC<chartType> = (props) => {\n  return (\n    <div className=\"donut\">\n      <Chart\n        options={props.options}\n        series={props.series}\n        type=\"donut\"\n        width={`${props.width ? props.width : \"380\"}`}\n      />\n    </div>\n  );\n};\n\nexport default React.memo(PieChart);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { BiRightArrowAlt } from \"react-icons/bi\";\nimport {\n  MdDelete,\n  MdEdit,\n  MdHighlightOff,\n  MdRemoveRedEye,\n  MdSettings,\n} from \"react-icons/md\";\nimport { SiAddthis } from \"react-icons/si\";\nimport { TiInputChecked } from \"react-icons/ti\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { customizeUserAccess } from \"../../actions/users\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport Table from \"../../components/Table/Table\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport {\n  UserInterface,\n  AccessTaskInterface,\n  CustomeAccessInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\n\ninterface AppProps {\n  userInfo: UserInterface | undefined;\n  manageUserId: string;\n  setUserAccess: (value: AccessTaskInterface[] | null) => void;\n  userAccess: AccessTaskInterface[] | null;\n  setCurrentAccess: (value: AccessTaskInterface | null) => void;\n  currentAccess: AccessTaskInterface | null;\n  currentPage: number;\n\n  // REDUX ==============\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  customizeUserAccess: Function;\n}\n\ninterface AppStates {\n  loading: boolean;\n  loadindRequest: boolean;\n  // currentAccess:AccessTaskInterface | null;\n  // userAccess:AccessTaskInterface[] | null;\n  createPermission: boolean;\n  viewPermission: boolean;\n  updatePermission: boolean;\n  deletePermission: boolean;\n}\n\nclass _UserAccess extends Component<AppProps, AppStates> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadindRequest: false,\n      // currentAccess:null,\n      // userAccess:null,\n      createPermission: false,\n      viewPermission: false,\n      updatePermission: false,\n      deletePermission: false,\n    };\n  }\n\n  setViewPermission = (value: boolean) => {\n    this.setState({ viewPermission: value });\n  };\n\n  setLoadindRequest = (value: boolean) => {\n    this.setState({ loadindRequest: value });\n  };\n\n  setCreatePermission = (value: boolean) => {\n    this.setState({ createPermission: value });\n  };\n\n  setUpdatePermission = (value: boolean) => {\n    this.setState({ updatePermission: value });\n  };\n\n  setDeletePermission = (value: boolean) => {\n    this.setState({ deletePermission: value });\n  };\n\n  setLoadind = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  overrideUserAccess = (\n    default_access: AccessTaskInterface[],\n    custome_access: AccessTaskInterface[]\n  ) => {\n    if (default_access && custome_access && custome_access.length > 0) {\n      let overideAccess: AccessTaskInterface[] = [];\n      for (const key in default_access) {\n        if (Object.prototype.hasOwnProperty.call(default_access, key)) {\n          const findCustom = custome_access.find(\n            (custom) => custom.id === default_access[key].id\n          );\n          if (findCustom) {\n            overideAccess.push(findCustom);\n          } else {\n            overideAccess.push(default_access[key]);\n          }\n        }\n      }\n      this.props.setUserAccess(overideAccess);\n    }\n  };\n\n  componentDidMount = () => {\n    if (this.props.userInfo && this.props.userInfo.custome_access) {\n      this.props.userInfo.default_access &&\n        this.overrideUserAccess(\n          this.props.userInfo.default_access.access,\n          this.props.userInfo.custome_access.access\n        );\n      this.setLoadind(false);\n    } else {\n      this.props.userInfo &&\n        this.props.userInfo.default_access &&\n        this.props.setUserAccess(this.props.userInfo.default_access.access);\n      this.setLoadind(false);\n    }\n  };\n\n  tableData = (): JSX.Element[] => {\n    if (!this.props.userAccess)\n      return [\n        <tr key={Math.random()}>\n          <td>No data</td>\n        </tr>,\n      ];\n    return this.props.userAccess.map((access: AccessTaskInterface, i) => (\n      <tr\n        key={i + access.id + Math.random()}\n        className={`text-left border-b border-gray-200 cursor-pointer hover:bg-gray-100 ${\n          this.props.currentAccess &&\n          this.props.currentAccess.id === access.id &&\n          \"bg-gray-200 border my-3 hover:bg-gray-100\"\n        }`}\n        onClick={() =>\n          this.props.currentAccess && this.props.currentAccess.id === access.id\n            ? (this.props.setCurrentAccess(null),\n              this.setCreatePermission(false),\n              this.setViewPermission(false),\n              this.setUpdatePermission(false),\n              this.setDeletePermission(false))\n            : (this.props.setCurrentAccess(access),\n              this.setCreatePermission(access.permitted.create),\n              this.setViewPermission(access.permitted.view),\n              this.setUpdatePermission(access.permitted.update),\n              this.setDeletePermission(access.permitted.delete))\n        }\n      >\n        <td className=\"px-2 py-1\">\n          <label className=\"inline-flex items-center\">\n            {/* <input\n              type=\"radio\"\n              name=\"taskAccess\"\n              value={access.id}\n              className=\"form-radio h-4 w-4 text-gray-600\"\n              onChange={() => {\n                currentAccess\n                  ? this.setState({ currentAccess: null })\n                  : this.setState({ currentAccess: access });\n              }}\n              checked={currentAccess ? true : false}\n            /> */}\n            <span className=\"text-gray-900 capitalize text-xl font-normal cursor-pointer\">\n              {access.task}\n            </span>\n          </label>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.create ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.create ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.create ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.view ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.view ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.view ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.update ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.update ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.update ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.delete ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.delete ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.delete ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n      </tr>\n    ));\n  };\n\n  handleCustomization = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (this.props.userInfo) {\n      this.setLoadindRequest(true);\n      let task: [] | CustomeAccessInterface | null = null;\n      task = this.props.userInfo.custome_access;\n      let index = -1;\n\n      try {\n        if (task && this.props.currentAccess) {\n          index = task.access.findIndex(\n            (access) => access.id === this.props.currentAccess!.id\n          );\n          if (index >= 0) {\n            task.access[index].permitted.create = this.state.createPermission;\n            task.access[index].permitted.view = this.state.viewPermission;\n            task.access[index].permitted.update = this.state.updatePermission;\n            task.access[index].permitted.delete = this.state.deletePermission;\n          } else {\n            task.access.push({\n              id: this.props.currentAccess.id,\n              task: this.props.currentAccess.task,\n              key: this.props.currentAccess.key,\n              permitted: {\n                create: this.state.createPermission,\n                view: this.state.viewPermission,\n                update: this.state.updatePermission,\n                delete: this.state.deletePermission,\n              },\n            });\n          }\n        } else if (this.props.currentAccess) {\n          task = {\n            access: [\n              {\n                id: this.props.currentAccess.id,\n                task: this.props.currentAccess.task,\n                key: this.props.currentAccess.key,\n                permitted: {\n                  create: this.state.createPermission,\n                  view: this.state.viewPermission,\n                  update: this.state.updatePermission,\n                  delete: this.state.deletePermission,\n                },\n              },\n            ],\n            user_id: this.props.userInfo.user_id,\n            custome_user_access_id: \"\",\n          };\n        }\n\n        if (task) {\n          let res;\n          if (this.props.userInfo.custome_access !== null) {\n            res = await axios.patch<{ data: CustomeAccessInterface }>(\n              `${API.AUTH}/custaccess`,\n              {\n                access: task.access,\n                user_id: this.props.userInfo.user_id,\n              }\n            );\n          } else {\n            res = await axios.post<{ data: CustomeAccessInterface }>(\n              `${API.AUTH}/custaccess`,\n              {\n                access: task.access,\n                user_id: this.props.userInfo.user_id,\n              }\n            );\n          }\n\n          if (res) {\n            task.custome_user_access_id = res.data.data.custome_user_access_id;\n\n            this.props.customizeUserAccess(task, this.props.currentPage);\n            task &&\n              this.props.userInfo.default_access &&\n              this.overrideUserAccess(\n                this.props.userInfo.default_access.access,\n                task.access\n              );\n            this.props.PushPopupAlert({\n              title: `Resetting User Access complete successfully`,\n              theme: PopupAlertTheme.info,\n            });\n\n            task = null;\n            this.props.setCurrentAccess(null);\n            this.setCreatePermission(false);\n            this.setViewPermission(false);\n            this.setUpdatePermission(false);\n            this.setDeletePermission(false);\n          }\n        }\n      } catch (error) {\n        console.error({ customize_access: error });\n        this.props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      this.setLoadindRequest(false);\n    }\n  };\n\n  render() {\n    if (this.props.userInfo === undefined) {\n      return <Redirect to=\"/users\" />;\n    }\n\n    if (this.state.loading || this.props.userInfo === null) {\n      return (\n        <div className=\"text-center py-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading User Access...\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4 mx-1 my-2\">\n          <div\n            className={`col-span-1 md:col-span-3 bg-white w-full overflow-x-auto border rounded text-center p-2 ${\n              this.props.currentAccess ? \"hidden md:block\" : \"\"\n            }`}\n          >\n            <span className=\"text-gray-600 mt-2 font-semibold text-2xl\">\n              Settings\n            </span>\n            {!this.state.loading && (\n              <div className=\"overflow-x-auto w-full\">\n                <Table\n                  columns={[\n                    {\n                      columnTitle: \"Access Name\",\n                      alignText: \"left\",\n                      padding: \"p-3\",\n                    },\n                    { columnTitle: \"Create\", alignText: \"left\" },\n                    { columnTitle: \"View\", alignText: \"left\" },\n                    { columnTitle: \"Update\", alignText: \"left\" },\n                    { columnTitle: \"Delete\", alignText: \"left\" },\n                  ]}\n                  rows={this.tableData}\n                  pagination={false}\n                  search={true}\n                  searchBG=\"bg-gray-50\"\n                  thColor=\"gray\"\n                />\n              </div>\n            )}\n          </div>\n          <div className={`col-span-1 md:col-span-2`}>\n            {!this.props.currentAccess ? (\n              <div className=\"w-full hidden md:flex flex-col items-center text-gray-600 gap-1 py-3\">\n                <MdSettings className=\"w-20 h-20\" />\n                <span className=\"text-8 md:text-12\">\n                  Choose Access to Customize\n                </span>\n              </div>\n            ) : (\n              <div className={``}>\n                <h1 className=\"text-2xl md:text-3xl font-semibold text-center my-2 text-gray-900\">\n                  Customize User Access\n                </h1>\n                <div className=\"flex justify-center mb-3\">\n                  <h2 className=\"text-2xl font-semibold text-center text-gray-600 flex flex-row items-center\">\n                    <BiRightArrowAlt className=\"w-7 h-7\" />\n                    {this.props.currentAccess.task}\n                  </h2>\n                </div>\n\n                <div className=\"flex flex-col px-2 md:px-1\">\n                  <form\n                    className=\"flex flex-col items-center\"\n                    onSubmit={(e) => this.handleCustomization(e)}\n                  >\n                    <div className=\"inline-flex gap-2 items-center\">\n                      <SiAddthis className=\"w-7 h-7 text-gray-600\" />\n                      <div className=\"flex flex-col\">\n                        <h3 className=\"font-semibold text-xl\">Create</h3>\n                        <span className=\"text-gray-600 text-sm md:pr-1\">\n                          This permission gives the user the ability to create\n                        </span>\n                      </div>\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-checkbox h-7 w-7 text-teal-600\"\n                        onChange={() =>\n                          this.setCreatePermission(!this.state.createPermission)\n                        }\n                        checked={this.state.createPermission}\n                        disabled={this.state.loadindRequest}\n                      />\n                    </div>\n                    <div className=\"inline-flex gap-2 items-center\">\n                      <MdRemoveRedEye className=\"w-7 h-7 text-gray-600\" />\n                      <div className=\"flex flex-col\">\n                        <h3 className=\"font-semibold text-xl\">View</h3>\n                        <span className=\"text-gray-600 text-sm md:pr-4\">\n                          This permission gives the user the ability to view\n                        </span>\n                      </div>\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-checkbox h-7 w-7 text-teal-600\"\n                        onChange={() =>\n                          this.setViewPermission(!this.state.viewPermission)\n                        }\n                        checked={this.state.viewPermission}\n                        disabled={this.state.loadindRequest}\n                      />\n                    </div>\n                    <div className=\"inline-flex gap-2 items-center\">\n                      <MdEdit className=\"w-7 h-7 text-gray-600\" />\n                      <div className=\"flex flex-col\">\n                        <h3 className=\"font-semibold text-xl\">Update</h3>\n                        <span className=\"text-gray-600 text-sm\">\n                          This permission gives the user the ability to update\n                        </span>\n                      </div>\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-checkbox h-7 w-7 text-teal-600\"\n                        onChange={() =>\n                          this.setUpdatePermission(!this.state.updatePermission)\n                        }\n                        checked={this.state.updatePermission}\n                        disabled={this.state.loadindRequest}\n                      />\n                    </div>\n                    <div className=\"inline-flex gap-2 items-center\">\n                      <MdDelete className=\"w-7 h-7 text-gray-600\" />\n                      <div className=\"flex flex-col\">\n                        <h3 className=\"font-semibold text-xl\">Delete</h3>\n                        <span className=\"text-gray-600 text-sm md:pr-1\">\n                          This permission gives the user the ability to delete\n                        </span>\n                      </div>\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-checkbox h-7 w-7 text-teal-600\"\n                        onChange={() =>\n                          this.setDeletePermission(!this.state.deletePermission)\n                        }\n                        checked={this.state.deletePermission}\n                        disabled={this.state.loadindRequest}\n                      />\n                    </div>\n\n                    <div className=\"flex items-center justify-center w-full py-3 gap-2\">\n                      {/* <button className=\"btn btn-secondary bg-red-600\">Back</button> */}\n                      <button\n                        className=\"btn bg-gray-500 hover:bg-gray-700 focus:outline-none text-white\"\n                        disabled={this.state.loadindRequest}\n                        onClick={() => {\n                          this.props.setCurrentAccess(null);\n                          this.setCreatePermission(false);\n                          this.setViewPermission(false);\n                          this.setUpdatePermission(false);\n                          this.setDeletePermission(false);\n                        }}\n                      >\n                        Cancel\n                      </button>\n                      <button\n                        className=\"btn btn-blue\"\n                        disabled={this.state.loadindRequest}\n                      >\n                        {!this.state.loadindRequest\n                          ? \"Save Change\"\n                          : \"Processing..\"}\n                      </button>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const UserAccess = React.memo(\n  connect(null, {\n    customizeUserAccess,\n    PushPopupAlert,\n  })(_UserAccess)\n);\n","import React, { FC } from \"react\";\nimport { IconType } from \"react-icons\";\nimport { FaUsers } from \"react-icons/fa\";\nimport { toAnyDigit } from \"../../shared/dataTest\";\n\nexport type DashboardLabelItemInterface = {\n  // TITLE: Application or Exam or Shortlisted ....\n  title: string;\n  // ICON: FaExpand ....\n  icon: IconType;\n  // ICON COLOR: blue, indigo, gray ....\n  iconColor: string;\n  // COUNT: 0,1,2,3,5,23,563 ....\n  count: number;\n  // COUNT: 0,1,2,3,5,23,563 ....\n  countOver?: number;\n};\n\nconst DashboardLabelItem: FC<DashboardLabelItemInterface> = (\n  props = {\n    title: \"\",\n    icon: FaUsers,\n    iconColor: \"indigo\",\n    count: 0,\n    countOver: undefined,\n  }\n) => {\n  const IconDefined = props.icon;\n  return (\n    <div className=\"flex items-center px-6 py-4 bg-white w-full rounded-md space-x-2 mb-2 lg:mb-0 shadow-md\">\n      <div\n        className={`p-3 rounded-full bg-${props.iconColor}-200 bg-opacity-75`}\n      >\n        <IconDefined className={`h-8 w-8 text-${props.iconColor}-600`} />\n      </div>\n      <div>\n        <h1 className=\"text-3xl font-semibold text-gray-700\">\n          {toAnyDigit(props.count)}{\" \"}\n          {props.countOver && \"/ \" + toAnyDigit(props.countOver)}\n        </h1>\n        <span className=\"text-gray-500 text-lg\">{props.title}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(DashboardLabelItem);\n","import React, { useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { SessionPlanInterface } from \"../../../interfaces\";\nimport { course } from \"../../../interfaces/course\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport { ExamsParcentageSuccessFailedRateByPeriodInterface } from \"../../../interfaces/reports\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { DATE, sortThisArray } from \"../../../utils/functions\";\n\nexport interface ExamPerformanceToPrintInterface {\n  course_id: number;\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string;\n  exam_period: string;\n  exam_date: string;\n  exam_time: string;\n  exam_duration: string;\n  exam_performance: number;\n}\n\nexport enum examPerformanceReportContentKeyInterface {\n  COURSER_NAME = \"course_name\",\n  COURSE_CODE = \"course_code\",\n  SCHOOL_LEVEL = \"school_levels\",\n  PERIOD = \"exam_period\",\n  DATE = \"exam_date\",\n  TIME = \"exam_time\",\n  DURATION = \"exam_duration\",\n  PERFORMANCE = \"exam_performance\",\n}\n\nexport interface examPerformanceReportContentInterface {\n  key: examPerformanceReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n\nexport const examPerformanceIsChangeAllowed = (\n  key: examPerformanceReportContentKeyInterface\n): boolean => {\n  if (\n    key === examPerformanceReportContentKeyInterface.COURSER_NAME ||\n    key === examPerformanceReportContentKeyInterface.COURSE_CODE ||\n    key === examPerformanceReportContentKeyInterface.PERIOD ||\n    key === examPerformanceReportContentKeyInterface.PERFORMANCE\n  ) {\n    return false;\n  }\n  return true;\n};\n\nexport const defaultExamPerformanceContent: examPerformanceReportContentInterface[] =\n  [\n    {\n      key: examPerformanceReportContentKeyInterface.COURSER_NAME,\n      title: \"Course names\",\n      status: true,\n    },\n    {\n      key: examPerformanceReportContentKeyInterface.COURSE_CODE,\n      title: \"Course code\",\n      status: true,\n    },\n    {\n      key: examPerformanceReportContentKeyInterface.SCHOOL_LEVEL,\n      title: \"School levels\",\n      status: true,\n    },\n    {\n      key: examPerformanceReportContentKeyInterface.PERIOD,\n      title: \"Exam period\",\n      status: true,\n    },\n    {\n      key: examPerformanceReportContentKeyInterface.DATE,\n      title: \"Exam date\",\n      status: true,\n    },\n    {\n      key: examPerformanceReportContentKeyInterface.TIME,\n      title: \"Exam time\",\n      status: true,\n    },\n    {\n      key: examPerformanceReportContentKeyInterface.DURATION,\n      title: \"Exam duration\",\n      status: true,\n    },\n    {\n      key: examPerformanceReportContentKeyInterface.PERFORMANCE,\n      title: \"Exam performance\",\n      status: true,\n    },\n  ];\n\nexport interface examPerformanceStateInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n  exam: ExamItemResponse | null;\n  exam_performance: number;\n}\n\nexport const FC_reportExamPerformanceData = (\n  allCourses: course[],\n  allExams: ExamItemResponse[],\n  examPerformance: ExamsParcentageSuccessFailedRateByPeriodInterface[]\n): examPerformanceStateInterface[] => {\n  let result: examPerformanceStateInterface[] = [],\n    ids: string[] = [];\n  for (const key in examPerformance) {\n    if (Object.prototype.hasOwnProperty.call(examPerformance, key)) {\n      if (ids.includes(examPerformance[key].answer_sheet_id)) continue;\n      ids.push(examPerformance[key].answer_sheet_id);\n      let courser = allCourses.find(\n        (item) => item.course_id === examPerformance[key].course\n      );\n      if (courser) {\n        let exam = allExams.find(\n          (item) =>\n            item.course === examPerformance[key].course &&\n            item.period === examPerformance[key].period\n        );\n        result.push({\n          course_name: courser.course_name,\n          course_code: courser.course_code,\n          description: courser.description,\n          school_levels: courser.school_levels,\n          course_id: courser.course_id,\n          exam: exam ? exam : null,\n          exam_performance: examPerformance[key].total_marks,\n        });\n      }\n    }\n  }\n  console.log(\"===============-----------------=====================\");\n  console.log({ result });\n  console.log(\"===============-----------------=====================\");\n  return result;\n};\n\nexport const searchExamPerformanceData = (\n  objList: examPerformanceStateInterface[],\n  text: string\n): examPerformanceStateInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (\n        prop === \"course_name\" ||\n        prop === \"course_code\" ||\n        prop === \"exam_performance\"\n      ) {\n        flag =\n          product[prop].toString().toLowerCase().indexOf(text.toLowerCase()) >\n          -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n};\n\ntype ExamPerformanceProps = {\n  loading: boolean;\n  examsListData: ExamItemResponse[] | null;\n  courseListData: course[] | null;\n  thisPeriod: SessionPlanInterface[];\n  examsPerformanceData:\n    | ExamsParcentageSuccessFailedRateByPeriodInterface[]\n    | null;\n};\n\nconst ExamPerformance: React.FC<ExamPerformanceProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const [isSorted, setIsSorted] = useState<boolean>(false);\n  const [sortProperty, setSortProperty] = useState<string>(\"\");\n  const [sortOrder, setSortOrder] = useState<\"ASC\" | \"DESC\">(\"ASC\");\n\n  const setSort = (thisProperty: string) => {\n    if (sortProperty === thisProperty && sortOrder === \"ASC\") {\n      setSortOrder(\"DESC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    } else {\n      setSortOrder(\"ASC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"bg-white my-4\">\n        <div className=\"w-full px-2 py-2\">\n          <input\n            onChange={(e) => setSearchInput(e.target.value)}\n            type=\"text\"\n            value={searchInput}\n            placeholder=\"Search...\"\n            className=\"w-full bg-gray-100 py-2 px-3 rounded\"\n            disabled={\n              props.courseListData &&\n              props.examsListData &&\n              props.examsPerformanceData &&\n              FC_reportExamPerformanceData(\n                props.courseListData,\n                props.examsListData,\n                props.examsPerformanceData\n              ).length <= 0\n                ? true\n                : false\n            }\n          />\n        </div>\n        <div className=\"w-full overflow-x-auto\">\n          <table className=\"w-full shadow\" id=\"report_content\">\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n              <tr>\n                <td className=\"px-2 py-2\">#</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"course_name\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Course <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">Exam date</td>\n                <td className=\"px-2 py-2\">Exam time</td>\n                <td className=\"px-2 py-2\">Exam duration</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"exam_performance\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Exam performance <BiSort />\n                  </div>\n                </td>\n              </tr>\n            </thead>\n            <tbody>\n              {props.courseListData === null || props.loading ? (\n                <tr>\n                  <td colSpan={6} className=\"px-2 py-2\">\n                    <Loading />\n                  </td>\n                </tr>\n              ) : props.examsListData &&\n                props.examsPerformanceData &&\n                FC_reportExamPerformanceData(\n                  props.courseListData,\n                  props.examsListData,\n                  props.examsPerformanceData\n                ).length <= 0 ? (\n                <tr>\n                  <td colSpan={6} className=\"px-2 py-2 text-center\">\n                    No Exam list available!\n                  </td>\n                </tr>\n              ) : (\n                props.examsListData &&\n                props.examsPerformanceData &&\n                sortThisArray(\n                  isSorted,\n                  searchExamPerformanceData(\n                    FC_reportExamPerformanceData(\n                      props.courseListData,\n                      props.examsListData,\n                      props.examsPerformanceData\n                    ),\n                    searchInput\n                  ),\n                  sortProperty,\n                  sortOrder\n                ).map((item: examPerformanceStateInterface, i) => (\n                  <tr\n                    key={i + 1}\n                    className={`bg-white text-gray-600 hover:bg-blue-100 hover:text-blue-700 border-b border-gray-300 hover:border-blue-500 text-sm`}\n                  >\n                    <td className=\"px-2 py-2\">{i + 1}</td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(item.course_name)} (\n                      <span className=\"font-semibold\">{item.course_code}</span>)\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam ? DATE(item.exam.exam_date) : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam ? item.exam.start_time : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam ? item.exam!.duration + \" min\" : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {Number(item.exam_performance.toFixed(1)) + \"%\"}\n                    </td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default React.memo(ExamPerformance);\n","import React from \"react\";\nimport DashboardLabelItem, {\n  DashboardLabelItemInterface,\n} from \"../DashboardLabelItem\";\n\ntype DashboardLabelProps = {\n  dataLabels: DashboardLabelItemInterface[];\n  labelsOnRow?: number;\n  childrenPosition?: \"START\" | \"END\";\n  children?: JSX.Element;\n};\n\nconst ExamDashboardLabels: React.FC<DashboardLabelProps> = (props) => {\n  const numCols: number = props.labelsOnRow\n    ? props.labelsOnRow > 4\n      ? props.labelsOnRow\n      : 4\n    : 4;\n  return (\n    <div\n      className={`grid 2xl:grid-cols-${numCols} xl:grid-cols-${\n        numCols - 1\n      } lg:grid-cols-${numCols - 2} md:grid-cols-${\n        numCols - 3\n      } sm:grid-cols-2 grid-cols-1 gap-4 items-center mx-auto`}\n    >\n      {props.children &&\n        ((props.childrenPosition && props.childrenPosition === \"START\") ||\n          !props.childrenPosition) &&\n        props.children}\n      {props.dataLabels.map((item, index) => (\n        <section key={index + item.title}>\n          <DashboardLabelItem\n            title={item.title}\n            icon={item.icon}\n            iconColor={item.iconColor}\n            count={item.count}\n          />\n        </section>\n      ))}\n      {props.children &&\n        props.childrenPosition &&\n        props.childrenPosition === \"END\" &&\n        props.children}\n    </div>\n  );\n};\n\nexport default React.memo(ExamDashboardLabels);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  FC_CreateDistrict,\n  FC_DeleteDistrict,\n  FC_UpdateDistrict,\n} from \"../../actions/location\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport {\n  DistrictInterface,\n  RoomLocationInterface,\n} from \"../../shared/interfaces\";\nimport { PushPopupAlert } from \"../../actions/system\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { errorToText } from \"../../utils/errors\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\n\ninterface AppProps {\n  thisProvince: RoomLocationInterface;\n  thisDistrict: DistrictInterface | null;\n  loadingRequest: boolean;\n  actionTypes:\n    | \"CREATE_PROVINCE\"\n    | \"UPDATE_PROVINCE\"\n    | \"CREATE_DISTRICT\"\n    | \"UPDATE_DISTRICT\"\n    | \"CREATE_SECTOR\"\n    | \"UPDATE_SECTOR\"\n    | null;\n  setLoadingRequest: React.Dispatch<React.SetStateAction<boolean>>;\n  setThisDistrict: React.Dispatch<\n    React.SetStateAction<DistrictInterface | null>\n  >;\n  setActionTypes: React.Dispatch<\n    React.SetStateAction<\n      | \"CREATE_PROVINCE\"\n      | \"UPDATE_PROVINCE\"\n      | \"CREATE_DISTRICT\"\n      | \"UPDATE_DISTRICT\"\n      | \"CREATE_SECTOR\"\n      | \"UPDATE_SECTOR\"\n      | null\n    >\n  >;\n  FC_CreateDistrict: Function;\n  FC_UpdateDistrict: Function;\n  FC_DeleteDistrict: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\nconst ViewDistrict: React.FC<AppProps> = (props) => {\n  const [districtName, setDistrictName] = useState<string>(\"\");\n  const [districtCode, setDistrictCode] = useState<number>(0);\n  const [error, setError] = useState<{ element: string; msg: string } | null>(\n    null\n  );\n\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(districtName)) {\n      return setError({\n        element: \"district_name\",\n        msg: \"District name is required\",\n      });\n    }\n\n    if (districtCode <= 0) {\n      return setError({\n        element: \"district_code\",\n        msg: \"Invalid district code, code must be greater than 0\",\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      let res;\n      if (props.actionTypes === \"CREATE_DISTRICT\") {\n        res = await axios.post<{ data: DistrictInterface }>(\n          `${API.APPLICATION}/district`,\n          {\n            province_id: props.thisProvince._id,\n            province_code: props.thisProvince.province_code,\n            district_name: districtName,\n            district_code: districtCode,\n            centers: [],\n          }\n        );\n        if (res.data) {\n          console.log({\n            province_id: props.thisProvince._id,\n            data: res.data.data,\n            res,\n          });\n          props.FC_CreateDistrict({\n            province_id: props.thisProvince._id,\n            data: {\n              centers: res.data.data.centers,\n              sectors: res.data.data.sectors,\n              province_code: res.data.data.province_code,\n              province_id: res.data.data.province_id,\n              district_code: res.data.data.district_code,\n              district_name: res.data.data.district_name,\n              district_id: res.data.data._id,\n            },\n          });\n          props.PushPopupAlert({\n            title: \"New district created successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setDistrictName(\"\");\n          setDistrictCode(0);\n        }\n      } else if (\n        props.thisDistrict &&\n        props.actionTypes === \"UPDATE_DISTRICT\"\n      ) {\n        const centers: string[] = props.thisDistrict.centers.map(\n          (center) => center._id\n        );\n        res = await axios.patch<{ data: DistrictInterface }>(\n          `${API.APPLICATION}/district`,\n          {\n            district_id: props.thisDistrict._id,\n            province_code: props.thisProvince.province_code,\n            district_name: districtName,\n            district_code: districtCode,\n            centers,\n          }\n        );\n        if (res.data) {\n          props.FC_UpdateDistrict({\n            province_id: props.thisProvince._id,\n            district_id: props.thisDistrict._id,\n            district_name: districtName,\n          });\n          props.PushPopupAlert({\n            title: \"District updated successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setDistrictName(\"\");\n          props.setThisDistrict(null);\n        }\n      }\n    } catch (error) {\n      console.log({ doc_category_error: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      props.setLoadingRequest(false);\n    }\n  };\n\n  // const handleDelete = async (districtId: string) => {\n  //   try {\n  //     const res = await axios.delete<DistrictInterface>(\n  //       `${API.APPLICATION}/district/${districtId}`\n  //     );\n\n  //     if (res.data) {\n  //       props.FC_DeleteDistrict({\n  //         province_id: props.thisProvince._id,\n  //         district_id: districtId,\n  //       });\n  //       props.PushPopupAlert({\n  //         title: \"District deleted successfully\",\n  //         theme: PopupAlertTheme.success,\n  //       });\n  //       props.setLoadingRequest(false);\n  //       props.setActionTypes(null);\n  //     }\n  //   } catch (error) {\n  //     console.log({ district_error: error });\n  //     props.PushPopupAlert({\n  //       title: errorToText(error),\n  //       theme: PopupAlertTheme.danger,\n  //     });\n  //     props.setLoadingRequest(false);\n  //   }\n  // };\n\n  return (\n    <div className={`w-full p-2`}>\n      {props.thisProvince.districts.length > 0 ? (\n        <div className=\"rounded border border-gray-100 shadow-sm animate__animated animate__fadeIn\">\n          <table className=\"w-full z-0\">\n            <thead className=\"bg-gray-50\">\n              <tr className=\"text-left\">\n                <th className=\"px-3 py-3\">#</th>\n                <th>District name</th>\n                <th>District code</th>\n                <th>Sectors</th>\n                {/* <th>Status</th> */}\n              </tr>\n            </thead>\n            <tbody className=\"text-base\">\n              {props.thisProvince.districts.map((district, index) => (\n                <tr\n                  key={index + district._id}\n                  className={`text-left border-b border-gray-50`}\n                >\n                  <td className=\"px-3 py-1\">{index + 1}</td>\n                  <td>{district.district_name}</td>\n                  <td>{district.district_code}</td>\n                  <td>\n                    {district.sectors && district.sectors.length > 0\n                      ? district.sectors.length + \" Sector(s)\"\n                      : \"\"}\n                  </td>\n                  {/* <td>\n                    <div className=\"flex items-center gap-2\">\n                      <button\n                        title={\n                          props.thisDistrict &&\n                          props.thisDistrict._id === district._id\n                            ? \"Close Centers\"\n                            : \"View Centers\"\n                        }\n                        className={`${\n                          props.thisDistrict &&\n                          props.thisDistrict._id === district._id\n                            ? \"bg-gray-500 hover:bg-gray-600\"\n                            : \"bg-gray-400 hover:bg-gray-500\"\n                        } p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none`}\n                        onClick={() =>\n                          !props.thisDistrict ||\n                          props.thisDistrict._id !== district._id\n                            ? props.setThisDistrict(district)\n                            : props.setThisDistrict(null)\n                        }\n                      >\n                        {props.thisDistrict &&\n                        props.thisDistrict._id === district._id ? (\n                          <IoMdEyeOff className=\"text-white w-4 h-4\" />\n                        ) : (\n                          <IoMdEye className=\"text-white w-4 h-4\" />\n                        )}\n                      </button>\n                      <button\n                        title=\"Update district\"\n                        className=\"bg-blue-500 hover:bg-blue-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                        onClick={() => {\n                          props.setThisDistrict(district);\n                          setDistrictName(district.district_name);\n                          setDistrictCode(district.district_code);\n                          props.setActionTypes(\"UPDATE_DISTRICT\");\n                        }}\n                        disabled={\n                          props.loadingRequest || props.actionTypes !== null\n                        }\n                      >\n                        <MdCreate className=\"text-white w-4 h-4\" />\n                      </button>\n                      <button\n                        title=\"Delete Sub-Category\"\n                        className=\"bg-red-500 hover:bg-red-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                        onClick={() => handleDelete(district._id)}\n                        disabled={props.loadingRequest}\n                      >\n                        <MdClear className=\"text-white w-4 h-4\" />\n                      </button>\n                    </div>\n                  </td> */}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        <NoResult\n          theme={NoResultThemes.Dark}\n          value={\"No district found!\"}\n          component={\n            <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n              <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                <li\n                  onClick={() => props.setActionTypes(\"CREATE_DISTRICT\")}\n                  className=\"underline text-gray-500 cursor-pointer\"\n                >\n                  Add district\n                </li>\n              </ul>\n            </div>\n          }\n        />\n      )}\n\n      {/* modal for creating new categories or sub category */}\n      {props.actionTypes &&\n        (props.actionTypes === \"CREATE_DISTRICT\" ||\n          props.actionTypes === \"UPDATE_DISTRICT\") && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={(): void => {\n              props.setActionTypes(null);\n              setDistrictName(\"\");\n              setDistrictCode(10);\n              setError(null);\n            }}\n            displayClose={false}\n            backDropClose={false}\n            title={\n              <div className=\"flex items-center space-x-5\">\n                <div className=\"block pl-2 font-semibold text-xl self-start text-gray-700\">\n                  {/* <p className=\"text-base text-gray-500 font-medium\">\n                    You are{\" \"}\n                    {actionType === \"CREATE_SUB\" || \"CREATE_CAT\"\n                      ? \"creating\"\n                      : \"updating\"}\n                  </p> */}\n                  <h2 className=\"uppercase text-back\">\n                    {props.actionTypes === \"CREATE_DISTRICT\"\n                      ? \"CREATING NEW DISTRICT\"\n                      : props.actionTypes === \"UPDATE_DISTRICT\" &&\n                        \"UPDATING EXISTING DISTRICT\"}\n                  </h2>\n                </div>\n              </div>\n            }\n            widthSizeClass={ModalSize.medium}\n            padding={{ title: true, body: false, footer: false }}\n          >\n            <div className=\"mx-5 mb-4\">\n              <div className=\"py-2 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n                <div className=\"flex flex-col\">\n                  <label>District name</label>\n                  <input\n                    type=\"text\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"district_name\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"district_name\" &&\n                        setError(null);\n                      setDistrictName(e.target.value);\n                    }}\n                    value={districtName}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"district_name\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n                <div className=\"flex flex-col\">\n                  <label>District code</label>\n                  <input\n                    type=\"number\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"district_code\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"district_code\" &&\n                        setError(null);\n                      setDistrictCode(Number(e.target.value));\n                    }}\n                    value={districtCode}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"district_code\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n              </div>\n              <div className=\"pt-4 flex justify-between\">\n                <button\n                  onClick={() => {\n                    props.setActionTypes(null);\n                    setDistrictName(\"\");\n                    setDistrictCode(10);\n                    setError(null);\n                  }}\n                  className={`btn bg-gray-400 text-white hover:bg-gray-600`}\n                  type=\"button\"\n                  disabled={props.loadingRequest}\n                >\n                  Exit\n                </button>\n                <button\n                  className=\"btn bg-primary text-white hover:bg-blue-600\"\n                  type=\"button\"\n                  onClick={() => handleSubmit()}\n                  disabled={props.loadingRequest}\n                >\n                  {props.loadingRequest ? \"Loading...\" : \"Save\"}\n                </button>\n              </div>\n            </div>\n          </Modal>\n        )}\n      {/* end modal for creating new categories or sub category */}\n    </div>\n  );\n};\n\nexport default React.memo(connect(null, {\n  FC_CreateDistrict,\n  FC_UpdateDistrict,\n  FC_DeleteDistrict,\n  PushPopupAlert,\n})(ViewDistrict));\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { IoMdEye, IoMdEyeOff } from \"react-icons/io\";\nimport {\n  FC_CreateProvince,\n  FC_DeleteProvince,\n  FC_UpdateProvince,\n} from \"../../actions/location\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport {\n  DistrictInterface,\n  RoomLocationInterface,\n} from \"../../shared/interfaces\";\nimport { PushPopupAlert } from \"../../actions/system\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { errorToText } from \"../../utils/errors\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\n\ninterface AppProps {\n  thisProvince: RoomLocationInterface | null;\n  thisDistrict: DistrictInterface | null;\n  loadingRequest: boolean;\n  locations: RoomLocationInterface[];\n  actionTypes:\n    | \"CREATE_PROVINCE\"\n    | \"UPDATE_PROVINCE\"\n    | \"CREATE_DISTRICT\"\n    | \"UPDATE_DISTRICT\"\n    | \"CREATE_SECTOR\"\n    | \"UPDATE_SECTOR\"\n    | null;\n  setLoadingRequest: React.Dispatch<React.SetStateAction<boolean>>;\n  setThisProvince: React.Dispatch<\n    React.SetStateAction<RoomLocationInterface | null>\n  >;\n  setActionTypes: React.Dispatch<\n    React.SetStateAction<\n      | \"CREATE_PROVINCE\"\n      | \"UPDATE_PROVINCE\"\n      | \"CREATE_DISTRICT\"\n      | \"UPDATE_DISTRICT\"\n      | \"CREATE_SECTOR\"\n      | \"UPDATE_SECTOR\"\n      | null\n    >\n  >;\n  FC_CreateProvince: Function;\n  FC_UpdateProvince: Function;\n  FC_DeleteProvince: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\nconst ViewProvince: React.FC<AppProps> = (props) => {\n  const [provinceTitle, setProvinceTitle] = useState<string>(\"\");\n  const [provinceCode, setProvinceCode] = useState<number>(0);\n  const [error, setError] = useState<{ element: string; msg: string } | null>(\n    null\n  );\n\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(provinceTitle)) {\n      return setError({\n        element: \"province_title\",\n        msg: \"Title of Province is required\",\n      });\n    }\n\n    if (provinceCode <= 0) {\n      return setError({\n        element: \"province_code\",\n        msg: \"Code of Province is required\",\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      let res;\n      if (props.actionTypes === \"CREATE_PROVINCE\") {\n        res = await axios.post<{ data: RoomLocationInterface }>(\n          `${API.APPLICATION}/province`,\n          {\n            province_name: provinceTitle,\n            province_code: provinceCode,\n            districts: [],\n          }\n        );\n\n        if (res.data) {\n          props.FC_CreateProvince(res.data.data);\n          props.PushPopupAlert({\n            title: \"New Province created successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setProvinceTitle(\"\");\n        }\n      } else if (\n        props.thisProvince &&\n        props.actionTypes === \"UPDATE_PROVINCE\"\n      ) {\n        const districts: string[] = props.thisProvince.districts.map(\n          (district) => district._id\n        );\n        res = await axios.patch<{ updated: RoomLocationInterface }>(\n          `${API.APPLICATION}/province`,\n          {\n            province_id: props.thisProvince._id,\n            province_name: provinceTitle,\n            province_code: provinceCode,\n            districts,\n          }\n        );\n        if (res.data) {\n          console.log({ res: res.data.updated });\n          props.FC_UpdateProvince(res.data.updated);\n          props.PushPopupAlert({\n            title: \"Province updated successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setProvinceTitle(\"\");\n          props.setThisProvince(null);\n        }\n      }\n    } catch (error) {\n      console.error({ province_error: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      props.setLoadingRequest(false);\n    }\n  };\n\n  // const handleDelete = async (provinceId: string) => {\n  //   try {\n  //     const res = await axios.delete<RoomLocationInterface>(\n  //       `${API.APPLICATION}/province/${provinceId}`\n  //     );\n\n  //     if (res.data) {\n  //       console.log({ res });\n  //       props.FC_DeleteProvince(provinceId);\n  //       props.PushPopupAlert({\n  //         title: \"Province deleted successfully\",\n  //         theme: PopupAlertTheme.success,\n  //       });\n  //       props.setLoadingRequest(false);\n  //       props.setActionTypes(null);\n  //     }\n  //   } catch (error) {\n  //     console.log({ province_error: error });\n  //     props.PushPopupAlert({\n  //       title: errorToText(error),\n  //       theme: PopupAlertTheme.danger,\n  //     });\n  //     props.setLoadingRequest(false);\n  //   }\n  // };\n\n  return (\n    <div className={`w-full p-2`}>\n      {props.locations.length > 0 ? (\n        props.locations.map((province, index) => (\n          <div\n            key={index + province._id}\n            className=\"flex justify-between items-center p-2 mb-3 rounded border border-gray-100 shadow\"\n          >\n            <div className=\"flex items-center\">\n              <div className=\"ml-2\">\n                <div className=\"text-xl font-semibold text-gray-600\">\n                  {province.province_name}\n                </div>\n                <div className=\"text-sm font-light text-gray-500\">\n                  {province.districts.length > 0\n                    ? province.districts.length + \"District(s)\"\n                    : null}\n                </div>\n              </div>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <button\n                title={\n                  props.thisProvince &&\n                  props.thisProvince._id === province._id &&\n                  props.actionTypes !== \"UPDATE_PROVINCE\"\n                    ? \"Close Districts\"\n                    : \"View Districts\"\n                }\n                className={`${\n                  props.thisProvince &&\n                  props.thisProvince._id === province._id &&\n                  props.actionTypes !== \"UPDATE_PROVINCE\"\n                    ? \"bg-gray-500 hover:bg-gray-600\"\n                    : \"bg-gray-400 hover:bg-gray-500\"\n                } p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none`}\n                onClick={() => {\n                  !props.thisProvince || props.thisProvince._id !== province._id\n                    ? props.setThisProvince(province)\n                    : props.setThisProvince(null);\n                  setProvinceTitle(\"\");\n                  props.setActionTypes(null);\n                }}\n              >\n                {props.thisProvince &&\n                props.thisProvince._id === province._id &&\n                props.actionTypes !== \"UPDATE_PROVINCE\" ? (\n                  <IoMdEyeOff className=\"text-white w-4 h-4\" />\n                ) : (\n                  <IoMdEye className=\"text-white w-4 h-4\" />\n                )}\n              </button>\n              {/* <button\n                title=\"Update Province\"\n                className=\"bg-blue-500 hover:bg-blue-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                onClick={() => {\n                  props.setThisProvince(province);\n                  setProvinceTitle(province.province_name);\n                  setProvinceCode(province.province_code);\n                  props.setActionTypes(\"UPDATE_PROVINCE\");\n                }}\n                disabled={props.loadingRequest || props.actionTypes !== null}\n              >\n                <MdCreate className=\"text-white w-4 h-4\" />\n              </button>\n              <button\n                title=\"Delete Sub-Category\"\n                className=\"bg-red-500 hover:bg-red-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                onClick={() => handleDelete(province._id)}\n                disabled={props.loadingRequest || props.actionTypes !== null}\n              >\n                <MdClear className=\"text-white w-4 h-4\" />\n              </button> */}\n            </div>\n          </div>\n        ))\n      ) : (\n        <NoResult\n          theme={NoResultThemes.Dark}\n          value=\"No province found!\"\n          component={\n            <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n              <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                <li\n                  onClick={() => props.setActionTypes(\"CREATE_PROVINCE\")}\n                  className=\"underline text-gray-500 cursor-pointer\"\n                >\n                  Add province\n                </li>\n              </ul>\n            </div>\n          }\n        />\n      )}\n\n      {/* modal for creating new categories or sub category */}\n      {props.actionTypes &&\n        (props.actionTypes === \"CREATE_PROVINCE\" ||\n          props.actionTypes === \"UPDATE_PROVINCE\") && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={(): void => {\n              props.setActionTypes(null);\n              setProvinceTitle(\"\");\n              setProvinceCode(0);\n              setError(null);\n            }}\n            displayClose={false}\n            backDropClose={false}\n            title={\n              <div className=\"flex items-center space-x-5\">\n                <div className=\"block pl-2 font-semibold text-xl self-start text-gray-700\">\n                  <h2 className=\"uppercase text-back\">\n                    {props.actionTypes === \"CREATE_PROVINCE\"\n                      ? \"CREATING NEW PROVINCE\"\n                      : props.actionTypes === \"UPDATE_PROVINCE\" &&\n                        \"UPDATING EXISTING PROVINCE\"}\n                  </h2>\n                </div>\n              </div>\n            }\n            widthSizeClass={ModalSize.medium}\n            padding={{ title: true, body: false, footer: false }}\n          >\n            <div className=\"mx-5 mb-4\">\n              <div className=\"py-2 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n                <div className=\"flex flex-col\">\n                  <label>Province name</label>\n                  <input\n                    type=\"text\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"province_title\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"province_title\" &&\n                        setError(null);\n                      setProvinceTitle(e.target.value);\n                    }}\n                    value={provinceTitle}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"province_title\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n                <div className=\"flex flex-col\">\n                  <label>Province code</label>\n                  <input\n                    type=\"number\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"province_code\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"province_code\" &&\n                        setError(null);\n                      setProvinceCode(Number(e.target.value));\n                    }}\n                    value={provinceCode}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"province_code\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n              </div>\n              <div className=\"pt-4 flex justify-between\">\n                <button\n                  onClick={() => {\n                    props.setActionTypes(null);\n                    setProvinceTitle(\"\");\n                    setProvinceCode(0);\n                    setError(null);\n                  }}\n                  className={`btn bg-gray-400 text-white hover:bg-gray-600`}\n                  type=\"button\"\n                  disabled={props.loadingRequest}\n                >\n                  Exit\n                </button>\n                <button\n                  className=\"btn bg-primary text-white hover:bg-blue-600\"\n                  type=\"button\"\n                  onClick={() => handleSubmit()}\n                  disabled={props.loadingRequest}\n                >\n                  {props.loadingRequest ? \"Loading...\" : \"Save\"}\n                </button>\n              </div>\n            </div>\n          </Modal>\n        )}\n      {/* end modal for creating new categories or sub category */}\n    </div>\n  );\n};\n\nexport default React.memo(\n  connect(null, {\n    FC_CreateProvince,\n    FC_UpdateProvince,\n    FC_DeleteProvince,\n    PushPopupAlert,\n  })(ViewProvince)\n);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { MdClear, MdCreate } from \"react-icons/md\";\nimport {\n  FC_CreateSector,\n  FC_DeleteSector,\n  FC_UpdateSector,\n} from \"../../actions/location\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport { DistrictInterface, SectorInterface } from \"../../shared/interfaces\";\nimport { PushPopupAlert } from \"../../actions/system\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { errorToText } from \"../../utils/errors\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\n\ninterface AppProps {\n  thisDistrict: DistrictInterface;\n  thisSector: SectorInterface | null;\n  loadingRequest: boolean;\n  actionTypes:\n    | \"CREATE_PROVINCE\"\n    | \"UPDATE_PROVINCE\"\n    | \"CREATE_DISTRICT\"\n    | \"UPDATE_DISTRICT\"\n    | \"CREATE_SECTOR\"\n    | \"UPDATE_SECTOR\"\n    | null;\n  setLoadingRequest: React.Dispatch<React.SetStateAction<boolean>>;\n  setThisSector: React.Dispatch<React.SetStateAction<SectorInterface | null>>;\n  setActionTypes: React.Dispatch<\n    React.SetStateAction<\n      | \"CREATE_PROVINCE\"\n      | \"UPDATE_PROVINCE\"\n      | \"CREATE_DISTRICT\"\n      | \"UPDATE_DISTRICT\"\n      | \"CREATE_SECTOR\"\n      | \"UPDATE_SECTOR\"\n      | null\n    >\n  >;\n  FC_CreateSector: Function;\n  FC_UpdateSector: Function;\n  FC_DeleteSector: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\nconst ViewSectors: React.FC<AppProps> = (props) => {\n  const [sectorName, setSectorName] = useState<string>(\"\");\n  const [sectorCode, setSectorCode] = useState<number>(0);\n  const [error, setError] = useState<{ element: string; msg: string } | null>(\n    null\n  );\n\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(sectorName)) {\n      return setError({\n        element: \"sector_name\",\n        msg: \"Sector name is required\",\n      });\n    }\n\n    if (sectorCode <= 0) {\n      return setError({\n        element: \"sector_code\",\n        msg: \"Invalid sector code, must be \",\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      let res;\n      if (props.actionTypes === \"CREATE_SECTOR\") {\n        res = await axios.post<{ data: SectorInterface }>(\n          `${API.APPLICATION}/sector`,\n          {\n            district_id: props.thisDistrict._id,\n            district_code: props.thisDistrict.district_code,\n            sector_name: sectorName,\n            sector_code: sectorCode,\n          }\n        );\n        if (res.data) {\n          console.log({\n            district_id: props.thisDistrict._id,\n            data: res.data.data,\n            res,\n          });\n          props.FC_CreateSector({\n            province_id: props.thisDistrict.province_id,\n            district_id: props.thisDistrict._id,\n            data: {\n              district_id: res.data.data.district_id,\n              district_code: res.data.data.district_code,\n              sector_name: res.data.data.sector_name,\n              sector_code: res.data.data.sector_code,\n              sector_id: res.data.data.sector_id,\n            },\n          });\n          props.PushPopupAlert({\n            title: \"New sector created successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setSectorName(\"\");\n        }\n      } else if (props.thisSector && props.actionTypes === \"UPDATE_SECTOR\") {\n        res = await axios.patch<{ data: DistrictInterface }>(\n          `${API.APPLICATION}/sector`,\n          {\n            district_id: props.thisSector.district_id,\n            district_code: props.thisDistrict.district_code,\n            sector_id: props.thisSector.sector_id,\n            sector_name: sectorName,\n            sector_code: sectorCode,\n          }\n        );\n        if (res.data) {\n          props.FC_UpdateSector({\n            province_id: props.thisDistrict.province_id,\n            district_id: props.thisSector.district_id,\n            sector_id: props.thisSector.sector_id,\n            sector_name: sectorName,\n            sector_code: sectorCode,\n          });\n          props.PushPopupAlert({\n            title: \"Sector updated successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setSectorName(\"\");\n          props.setThisSector(null);\n        }\n      }\n    } catch (error) {\n      console.log({ sector_error: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      props.setLoadingRequest(false);\n    }\n  };\n\n  const handleDelete = async (sectorId: string) => {\n    try {\n      const res = await axios.delete<SectorInterface>(\n        `${API.APPLICATION}/sector/${sectorId}`\n      );\n\n      if (res.data) {\n        props.FC_DeleteSector({\n          province_id: props.thisDistrict.province_id,\n          district_id: props.thisDistrict._id,\n          sector_id: sectorId,\n        });\n        props.PushPopupAlert({\n          title: \"Sector deleted successfully\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setLoadingRequest(false);\n        props.setActionTypes(null);\n      }\n    } catch (error) {\n      console.log({ district_error: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      props.setLoadingRequest(false);\n    }\n  };\n\n  return (\n    <div className={`w-full p-2`}>\n      {props.thisDistrict.sectors && props.thisDistrict.sectors.length > 0 ? (\n        <div className=\"rounded border border-gray-100 shadow-sm animate__animated animate__fadeIn\">\n          <table className=\"w-full z-0\">\n            <thead className=\"bg-gray-50\">\n              <tr className=\"text-left\">\n                <th className=\"px-3 py-3\">#</th>\n                <th>Sector name</th>\n                <th>Sector code</th>\n                <th>Status</th>\n              </tr>\n            </thead>\n            <tbody className=\"text-sm\">\n              {props.thisDistrict.sectors.map((sector, index) => (\n                <tr\n                  key={index + sector.district_id}\n                  className={`text-left border-b border-gray-50`}\n                >\n                  <td className=\"px-3 py-1\">{index + 1}</td>\n                  <td>{sector.sector_name}</td>\n                  <td>{sector.sector_name}</td>\n                  <td>\n                    <div className=\"flex items-center gap-2\">\n                      <button\n                        title=\"Update sector\"\n                        className=\"bg-blue-500 hover:bg-blue-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                        onClick={() => {\n                          props.setThisSector(sector);\n                          setSectorName(sector.sector_name);\n                          setSectorCode(sector.sector_code);\n                          props.setActionTypes(\"UPDATE_SECTOR\");\n                        }}\n                        disabled={\n                          props.loadingRequest || props.actionTypes !== null\n                        }\n                      >\n                        <MdCreate className=\"text-white w-4 h-4\" />\n                      </button>\n                      <button\n                        title=\"Delete sector\"\n                        className=\"bg-red-500 hover:bg-red-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                        onClick={() => handleDelete(sector.sector_id)}\n                        disabled={props.loadingRequest}\n                      >\n                        <MdClear className=\"text-white w-4 h-4\" />\n                      </button>\n                    </div>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        <NoResult\n          theme={NoResultThemes.Dark}\n          value={\"No sector found!\"}\n          component={\n            <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n              <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                <li\n                  onClick={() => props.setActionTypes(\"CREATE_SECTOR\")}\n                  className=\"underline text-gray-500 cursor-pointer\"\n                >\n                  Add sector\n                </li>\n              </ul>\n            </div>\n          }\n        />\n      )}\n\n      {/* modal for creating new categories or sub category */}\n      {props.actionTypes &&\n        (props.actionTypes === \"CREATE_SECTOR\" ||\n          props.actionTypes === \"UPDATE_SECTOR\") && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={(): void => {\n              props.setActionTypes(null);\n              setSectorName(\"\");\n              setSectorCode(0);\n              setError(null);\n            }}\n            displayClose={false}\n            backDropClose={false}\n            title={\n              <div className=\"flex items-center space-x-5\">\n                <div className=\"block pl-2 font-semibold text-xl self-start text-gray-700\">\n                  {/* <p className=\"text-base text-gray-500 font-medium\">\n                    You are{\" \"}\n                    {actionType === \"CREATE_SUB\" || \"CREATE_CAT\"\n                      ? \"creating\"\n                      : \"updating\"}\n                  </p> */}\n                  <h2 className=\"uppercase text-back\">\n                    {props.actionTypes === \"CREATE_SECTOR\"\n                      ? \"CREATING NEW SECTOR\"\n                      : props.actionTypes === \"UPDATE_SECTOR\" &&\n                        \"UPDATING EXISTING SECTOR\"}\n                  </h2>\n                </div>\n              </div>\n            }\n            widthSizeClass={ModalSize.medium}\n            padding={{ title: true, body: false, footer: false }}\n          >\n            <div className=\"w-full px-5 mb-5\">\n              <div className=\"py-3 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n                <div className=\"flex flex-col\">\n                  <label>Sector name</label>\n                  <input\n                    type=\"text\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"sector_name\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"sector_name\" &&\n                        setError(null);\n                      setSectorName(e.target.value);\n                    }}\n                    value={sectorName}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"sector_name\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n                <div className=\"flex flex-col\">\n                  <label>Sector code</label>\n                  <input\n                    type=\"number\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"sector_code\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"sector_code\" &&\n                        setError(null);\n                      setSectorCode(Number(e.target.value));\n                    }}\n                    value={sectorCode}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"sector_code\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n              </div>\n              <div className=\"pt-4 flex justify-between\">\n                <button\n                  onClick={() => {\n                    props.setActionTypes(null);\n                    setSectorName(\"\");\n                    setSectorCode(0);\n                    setError(null);\n                  }}\n                  className={`btn bg-gray-400 text-white hover:bg-gray-600`}\n                  type=\"button\"\n                  disabled={props.loadingRequest}\n                >\n                  Exit\n                </button>\n                <button\n                  className=\"btn bg-primary text-white hover:bg-blue-600\"\n                  type=\"button\"\n                  onClick={() => handleSubmit()}\n                  disabled={props.loadingRequest}\n                >\n                  {props.loadingRequest ? \"Loading...\" : \"Save\"}\n                </button>\n              </div>\n            </div>\n          </Modal>\n        )}\n      {/* end modal for creating new categories or sub category */}\n    </div>\n  );\n};\n\nexport default React.memo(\n  connect(null, {\n    FC_CreateSector,\n    FC_UpdateSector,\n    FC_DeleteSector,\n    PushPopupAlert,\n  })(ViewSectors)\n);\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { AiOutlineFilter } from \"react-icons/ai\";\nimport { BsCaretRightFill } from \"react-icons/bs\";\nimport { connect } from \"react-redux\";\nimport { getAllRoom } from \"../../actions/location\";\nimport { StoreState } from \"../../reducers\";\nimport {\n  DistrictInterface,\n  LocationRoomTableInterface,\n  RoomLocationInterface,\n  SectorInterface,\n} from \"../../shared/interfaces\";\nimport { LocationsInArray } from \"../UserManagement/UserList\";\nimport ViewDistricts from \"./ViewDistricts\";\nimport ViewProvince from \"./ViewProvince\";\nimport ViewSectors from \"./ViewSectors\";\n\nexport const distinctDistrict = (\n  rooms: RoomLocationInterface[],\n  province_id?: string\n): LocationRoomTableInterface[] => {\n  let ids: string[] = [],\n    result: LocationRoomTableInterface[] = [];\n\n  LocationsInArray(rooms).forEach((element) => {\n    if (!ids.includes(element.district_id)) {\n      if (province_id && element.province_id === province_id) {\n        ids.push(element.district_id);\n        result.push(element);\n      } else if (province_id === undefined) {\n        ids.push(element.district_id);\n        result.push(element);\n      }\n    }\n  });\n\n  return result;\n};\n\nexport const distinctCenter = (\n  rooms: RoomLocationInterface[],\n  district_id: string\n): LocationRoomTableInterface[] => {\n  let ids: string[] = [],\n    result: LocationRoomTableInterface[] = [];\n\n  LocationsInArray(rooms).forEach((element) => {\n    if (\n      !ids.includes(element.center_id) &&\n      element.district_id === district_id\n    ) {\n      ids.push(element.center_id);\n      result.push(element);\n    }\n  });\n  return result;\n};\n\nexport const distinctRoom = (\n  rooms: RoomLocationInterface[],\n  center_id: string\n): LocationRoomTableInterface[] => {\n  let ids: string[] = [],\n    result: LocationRoomTableInterface[] = [];\n\n  LocationsInArray(rooms).forEach((element) => {\n    if (!ids.includes(element.room_id) && element.center_id === center_id) {\n      ids.push(element.room_id);\n      result.push(element);\n    }\n  });\n  return result;\n};\n\ninterface AppProps {\n  locations: RoomLocationInterface[];\n  getAllRoom: Function;\n}\n\nconst _Locations: React.FC<AppProps> = (props) => {\n  const [actionTypes, setActionTypes] = useState<\n    | \"CREATE_PROVINCE\"\n    | \"UPDATE_PROVINCE\"\n    | \"CREATE_DISTRICT\"\n    | \"UPDATE_DISTRICT\"\n    | \"CREATE_SECTOR\"\n    | \"UPDATE_SECTOR\"\n    | null\n  >(null);\n  const [thisProvince, setThisProvince] =\n    useState<RoomLocationInterface | null>(null);\n  const [thisDistrict, setThisDistrict] = useState<DistrictInterface | null>(\n    null\n  );\n  const [thisSector, setThisSector] = useState<SectorInterface | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (!props.locations.length && loading) {\n      props.getAllRoom((status: boolean, msg: string) => {\n        setLoading(status);\n        if (!status && msg.length > 0) {\n          console.log(msg);\n        }\n      });\n    } else if (loading) {\n      setLoading(false);\n    }\n  }, [loading, props]);\n\n  if (loading === true) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading locations...\n      </div>\n    );\n  }\n\n  const displayTitle = () => {\n    if (\n      (!thisSector ||\n        (thisSector &&\n          (actionTypes === \"CREATE_SECTOR\" ||\n            actionTypes === \"UPDATE_SECTOR\"))) &&\n      thisDistrict &&\n      actionTypes !== \"CREATE_DISTRICT\" &&\n      actionTypes !== \"UPDATE_DISTRICT\"\n    ) {\n      return (\n        <div className=\"flex items-center gap-1\">\n          <span\n            className=\"cursor-pointer uppercase text-xl font-semibold text-gray-800\"\n            onClick={() => {\n              setThisProvince(null);\n            }}\n          >\n            province\n          </span>\n          <span>/</span>\n          <span\n            className=\"cursor-pointer uppercase text-xl font-semibold text-gray-800\"\n            onClick={() => {\n              setThisDistrict(null);\n            }}\n          >\n            district\n          </span>\n          <span>/</span>\n          <span className=\"text-xl text-gray-800\">\n            {thisDistrict.district_name}\n          </span>\n        </div>\n      );\n    } else if (\n      (!thisDistrict ||\n        (thisDistrict &&\n          (actionTypes === \"CREATE_DISTRICT\" ||\n            actionTypes === \"UPDATE_DISTRICT\"))) &&\n      thisProvince\n    ) {\n      return (\n        <div className=\"flex items-center gap-2\">\n          <span\n            className=\"cursor-pointer uppercase text-xl font-semibold text-gray-800\"\n            onClick={() => {\n              setThisProvince(null);\n            }}\n          >\n            province\n          </span>\n          <span>/</span>\n          <span className=\"text-xl text-gray-800\">\n            {thisProvince.province_name}\n          </span>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"flex items-center gap-1\">\n        <span className=\"uppercase text-xl font-semibold text-gray-800\">\n          province\n        </span>\n        <span>/</span>\n      </div>\n    );\n  };\n\n  return (\n    <Fragment>\n      <div className=\"w-full my-5\">\n        {/* header title */}\n        <div className=\"flex justify-between p-2 gap-1\">\n          <div className=\"flex flex-col\">\n            <span className=\"text-blue-600 text-2xl md:text-2xl lg:text-3xl font-bold\">\n              Locations Management\n            </span>\n\n            <div className=\"flex flex-row items-center md:gap-3 gap-2 mt-1\">\n              <AiOutlineFilter className=\"text-xl\" />\n              <div className=\"flex flex-row items-center gap-1\">\n                {thisProvince && (\n                  <span className=\"text-gray-700 text-base font-bold\">\n                    {thisProvince.province_name}\n                  </span>\n                )}\n                {thisDistrict && (\n                  <div className=\"flex flex-row items-center gap-1\">\n                    <BsCaretRightFill />\n                    <span className=\"text-blue-600 text-base font-bold underline\">\n                      {thisDistrict.district_name} district\n                    </span>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n        {/* end header title */}\n\n        <div className=\"w-full bg-white\">\n          <div className=\"border-b px-2 py-3 flex justify-between\">\n            {displayTitle()}\n\n            {/* CREATE NEW PROVINCE =====================================*/}\n            {/* {(!thisProvince ||\n              (thisProvince &&\n                (actionTypes === \"CREATE_PROVINCE\" ||\n                  actionTypes === \"UPDATE_PROVINCE\"))) && (\n              <button\n                type=\"button\"\n                className={`btn hover:bg-blue-500 mb-1 border-2 border-blue-500 bg-white\n        hover:text-white rounded-md flex items-center font-bold text-gray-700 focus:outline-none gap-1 ${\n          loadingRequest && \"cursor-wait\"\n        } ${actionTypes !== null && \"cursor-not-allowed\"}`}\n                onClick={() => setActionTypes(\"CREATE_PROVINCE\")}\n                disabled={actionTypes !== null || loadingRequest}\n              >\n                <MdAdd className=\"inline-block mr-1 text-xl font-bold\" />\n                New Province\n              </button>\n            )} */}\n            {/* CREATE NEW DISTRICT =====================================*/}\n            {/* {(!thisDistrict ||\n              (thisDistrict &&\n                (actionTypes === \"CREATE_DISTRICT\" ||\n                  actionTypes === \"UPDATE_DISTRICT\"))) &&\n              thisProvince && (\n                <button\n                  type=\"button\"\n                  className={`btn hover:bg-blue-500 mb-1 border-2 border-blue-500 bg-white\n        hover:text-white rounded-md flex items-center font-bold text-gray-700 focus:outline-none gap-1 ${\n          loadingRequest && \"cursor-wait\"\n        } ${actionTypes !== null && \"cursor-not-allowed\"}`}\n                  onClick={() => setActionTypes(\"CREATE_DISTRICT\")}\n                  disabled={actionTypes !== null || loadingRequest}\n                >\n                  <MdAdd className=\"inline-block mr-1 text-xl font-bold\" />\n                  New District\n                </button>\n              )} */}\n\n            {/* CREATE NEW SECTOR =====================================*/}\n            {/* {(!thisSector ||\n              (thisSector &&\n                (actionTypes === \"CREATE_SECTOR\" ||\n                  actionTypes === \"UPDATE_SECTOR\"))) &&\n              thisDistrict &&\n              actionTypes !== \"CREATE_DISTRICT\" &&\n              actionTypes !== \"UPDATE_DISTRICT\" && (\n                <button\n                  type=\"button\"\n                  className={`btn hover:bg-blue-500 mb-1 border-2 border-blue-500 bg-white\n        hover:text-white rounded-md flex items-center font-bold text-gray-700 focus:outline-none gap-1 ${\n          loadingRequest && \"cursor-wait\"\n        } ${actionTypes !== null && \"cursor-not-allowed\"}`}\n                  onClick={() => setActionTypes(\"CREATE_SECTOR\")}\n                  disabled={actionTypes !== null || loadingRequest}\n                >\n                  <MdAdd className=\"inline-block mr-1 text-xl font-bold\" />\n                  New Sector\n                </button>\n              )} */}\n          </div>\n\n          {(!thisProvince ||\n            (thisProvince &&\n              (actionTypes === \"CREATE_PROVINCE\" ||\n                actionTypes === \"UPDATE_PROVINCE\"))) && (\n            <ViewProvince\n              thisProvince={thisProvince}\n              thisDistrict={thisDistrict}\n              loadingRequest={loadingRequest}\n              locations={props.locations}\n              actionTypes={actionTypes}\n              setLoadingRequest={setLoadingRequest}\n              setThisProvince={setThisProvince}\n              setActionTypes={setActionTypes}\n            />\n          )}\n\n          {(!thisDistrict ||\n            (thisDistrict &&\n              (actionTypes === \"CREATE_DISTRICT\" ||\n                actionTypes === \"UPDATE_DISTRICT\"))) &&\n            thisProvince && (\n              <ViewDistricts\n                thisDistrict={thisDistrict}\n                loadingRequest={loadingRequest}\n                actionTypes={actionTypes}\n                setLoadingRequest={setLoadingRequest}\n                setActionTypes={setActionTypes}\n                thisProvince={thisProvince}\n                setThisDistrict={setThisDistrict}\n              />\n            )}\n\n          {(!thisSector ||\n            (thisSector &&\n              (actionTypes === \"CREATE_SECTOR\" ||\n                actionTypes === \"UPDATE_SECTOR\"))) &&\n            thisDistrict &&\n            actionTypes !== \"CREATE_DISTRICT\" &&\n            actionTypes !== \"UPDATE_DISTRICT\" && (\n              <ViewSectors\n                thisDistrict={thisDistrict}\n                thisSector={thisSector}\n                loadingRequest={loadingRequest}\n                actionTypes={actionTypes}\n                setLoadingRequest={setLoadingRequest}\n                setThisSector={setThisSector}\n                setActionTypes={setActionTypes}\n              />\n            )}\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  locations,\n}: StoreState): {\n  locations: RoomLocationInterface[];\n} => {\n  return { locations: locations.roomLocation };\n};\n\nexport const Locations = React.memo(\n  connect(mapStateToProps, {\n    getAllRoom,\n  })(_Locations)\n);\n","import React, { Fragment, useState } from \"react\";\nimport { AiFillDashboard } from \"react-icons/ai\";\nimport { MdBrightness1 } from \"react-icons/md\";\nimport { SessionPlanInterface } from \"../../../interfaces\";\nimport { education_category } from \"../../../interfaces/education_category\";\nimport { reportTitleType } from \"../../Admin/ExamReport/ExamReport\";\nimport ExamReportModals, {\n  ModalForTypes,\n} from \"../../Admin/ExamReport/ExamReportModals\";\n\ntype ExamReportTitleProps = {\n  // FOR SETTINGS ==============================\n  loading: boolean;\n\n  // FOR REPORT TYPE =========================\n  reportTitle: reportTitleType;\n  setReportTitle: (title: reportTitleType) => void;\n\n  //   FOR EDUCATION CATEGORY & PERIOD =====================\n  education_categories: education_category[] | null;\n  loadingEducation: boolean;\n  thisEducation: education_category | null;\n  setThisEducation: (value: education_category | null) => void;\n\n  //   FOR APPLICATION SESSION ============================\n  thisPeriod: string;\n  setThisPeriod: (value: string) => void;\n  application_sessions: SessionPlanInterface[];\n  onPeriodChange?: (period_id: string) => void;\n};\n\nconst ExamDashboardTitle: React.FC<ExamReportTitleProps> = (props) => {\n  const [changeReport, setChangeReport] = useState<boolean>(false);\n\n  return (\n    <Fragment>\n      <div className=\"mt-3 rounded flex flex-col md:flex-row md:justify-between items-start\">\n        <div className=\"flex flex-row items-center gap-3 mb-2\">\n          <AiFillDashboard className=\"text-7xl text-blue-600 hidden md:block\" />\n          <div className=\"flex flex-col\">\n            <span className=\"text-blue-600 text-3xl font-bold\">\n              Exam Dashboard\n            </span>\n            {false && (\n              <div\n                onClick={() => setChangeReport(true)}\n                className=\"flex flex-row gap-2\"\n              >\n                <span className=\"text-gray-500\">Report type: </span>\n                <span className=\"text-gray-600 font-bold underline cursor-pointer\">\n                  {props.reportTitle}\n                </span>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* FILTER SECTION PERIOD && EDUCATION */}\n        <section className=\"w-full md:w-auto my-2 md:my-0\">\n          {/* EDUCATION CATEGORY sections */}\n          <section className=\"flex items-start md:items-center justify-start md:justify-end gap-2\">\n            {props.education_categories &&\n              props.education_categories.length > 0 &&\n              props.education_categories.map((education, index) => (\n                <section\n                  key={education.education_institute_id + index}\n                  className={`w-auto ${\n                    props.loading || props.loadingEducation\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } ${\n                    props.thisEducation &&\n                    education.education_institute_id ===\n                      props.thisEducation.education_institute_id\n                      ? \"bg-blue-500 text-white font-bold\"\n                      : \"bg-gray-100 text-blue-800\"\n                  } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex items-center animate__animated animate__zoomIn`}\n                  onClick={() =>\n                    !props.loading &&\n                    !props.loadingEducation &&\n                    props.setThisEducation(education)\n                  }\n                >\n                  <section className=\"flex-1\">\n                    <MdBrightness1 className=\"inline-block mr-1 text-xs\" />\n                    <span>{education.education_category_title}</span>\n                  </section>\n\n                  {/* {count > 0 ? ( */}\n                  {/* <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n              12\n            </span> */}\n                  {/* ) : null} */}\n                </section>\n              ))}\n          </section>\n          {/* end EDUCATION CATEGORY sections */}\n          <div>\n            <select\n              className={`bg-white text-gray-600 border border-gray-400 rounded p-2 focus:outline-none ${\n                props.loading && \"cursor-wait\"\n              }`}\n              value={props.thisPeriod}\n              disabled={props.loading || props.loadingEducation}\n              onChange={(e) => {\n                props.setThisPeriod(e.target.value);\n                props.onPeriodChange && props.onPeriodChange(e.target.value);\n                // props.setLoadingApplications(true);\n                // props.GetApplicationPerPeriod(\n                //   e.target.value,\n                //   (status: boolean, msg: string) => {\n                //     props.setLoadingApplications(status);\n                //     if (!status && msg.length > 0) {\n                //       props.PushPopupAlert({\n                //         title: errorToText(msg),\n                //         theme: PopupAlertTheme.danger,\n                //       });\n                //     }\n                //   }\n                // );\n              }}\n            >\n              {props.application_sessions.map((session, item) => (\n                <option\n                  key={session.session_plan_id + item}\n                  value={session.session_plan_id}\n                >\n                  {session.session_plan_name}\n                </option>\n              ))}\n            </select>\n          </div>\n        </section>\n        {/* END FILTER SECTION PERIOD && EDUCATION */}\n      </div>\n      {/* CHANGE REPORT TYPE MODAL CONTROLLERS ============================================ */}\n      {changeReport && (\n        <ExamReportModals\n          modalFor={ModalForTypes.title}\n          modalState={changeReport}\n          reportTitle={props.reportTitle}\n          changeModalState={setChangeReport}\n          setReportTitle={props.setReportTitle}\n        />\n      )}\n      {/* END CHANGE REPORT TYPE MODAL CONTROLLERS ============================================ */}\n    </Fragment>\n  );\n};\n\nexport default React.memo(ExamDashboardTitle);\n","import React, { Component } from \"react\";\nimport { examPreparationStateInterface } from \"../../Admin/ExamReport/ExamList\";\nimport VBarChart from \"../ChartComponents/VBarChart\";\n\ntype ExamPreparationChartProps = {\n  examPreparationProgress: {\n    all: examPreparationStateInterface[];\n    finished: examPreparationStateInterface[];\n    remaining: examPreparationStateInterface[];\n  };\n};\n\nclass ExamPreparationChart extends Component<ExamPreparationChartProps> {\n  render() {\n    return (\n      <div className=\"my-3 max-w-full bg-white\">\n        <div className=\"flex items-center justify-between px-3\">\n          <span className=\"text-gray-600 font-semibold text-xl py-4 px-0\">\n            Exams preparation chart\n          </span>\n        </div>\n\n        <div className=\"mb-4 pb-2 px-3\">\n          <VBarChart\n            labels={[\"Remaining exams\", \"Prepared exams\"]}\n            categoriesLabel={[\"Exam preparation progress\"]}\n            dataLabels={true}\n            yaxisText=\"Exam preparation progress\"\n            tooltipText=\"(Exams)\"\n            series={[\n              {\n                name: \"Remaining exams\",\n                data: [this.props.examPreparationProgress.remaining.length],\n              },\n              {\n                name: \"Prepared exams\",\n                data: [this.props.examPreparationProgress.finished.length],\n              },\n            ]}\n            colors={[\"#4b5563\", \"#469769\"]}\n            defaultBar={{\n              borderRadius: 4,\n              horizontal: false,\n              columnWidth: \"95%\",\n              endingShape: \"rounded\",\n            }}\n            chartHeight={550}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default React.memo(ExamPreparationChart);\n","import React, { Component } from \"react\";\nimport { examProgressStateInterface } from \"../../Admin/ExamReport/DoneExamList\";\nimport VBarChart from \"../ChartComponents/VBarChart\";\n\ntype ExamProgressChartProps = {\n  progressData: {\n    all: examProgressStateInterface[];\n    finished: examProgressStateInterface[];\n    remaining: examProgressStateInterface[];\n  };\n};\n\nclass ExamProgressChart extends Component<ExamProgressChartProps> {\n  render() {\n    return (\n      <div className=\"my-3 max-w-full bg-white\">\n        <div className=\"flex items-center justify-between px-3\">\n          <span className=\"text-gray-600 font-semibold text-xl py-4 px-0\">\n            Examination progress chart\n          </span>\n        </div>\n\n        <div className=\"mb-4 pb-2 px-3\">\n          <VBarChart\n            labels={[\"Remaining exams\", \"Prepared exams\"]}\n            categoriesLabel={[\"Examinations progress\"]}\n            dataLabels={true}\n            yaxisText=\"Examination progress\"\n            tooltipText=\"(Exams)\"\n            series={[\n              {\n                name: \"Remaining exams\",\n                data: [this.props.progressData.remaining.length],\n              },\n              {\n                name: \"Done exams\",\n                data: [this.props.progressData.finished.length],\n              },\n            ]}\n            colors={[\"#4b5563\", \"#469769\"]}\n            defaultBar={{\n              borderRadius: 4,\n              horizontal: false,\n              columnWidth: \"95%\",\n              endingShape: \"rounded\",\n            }}\n            chartHeight={550}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default React.memo(ExamProgressChart);\n","import React, { Component } from \"react\";\nimport { candidatePerfomranceStateInterface } from \"../../Admin/ExamReport/CandidatePerformance\";\nimport VBarChart from \"../ChartComponents/VBarChart\";\n\ntype ExamPerformanceChartProps = {\n  examPerformance: {\n    all: candidatePerfomranceStateInterface[];\n    pass: candidatePerfomranceStateInterface[];\n    failed: candidatePerfomranceStateInterface[];\n    active: candidatePerfomranceStateInterface[];\n  };\n};\n\nclass ExamPerformanceChart extends Component<ExamPerformanceChartProps> {\n  render() {\n    return (\n      <div className=\"my-3 max-w-full bg-white\">\n        <div className=\"flex items-center justify-between px-3\">\n          <span className=\"text-gray-600 font-semibold text-xl py-4 px-0\">\n            Examination performance chart\n          </span>\n        </div>\n\n        <div className=\"mb-4 pb-2 px-3\">\n          <VBarChart\n            labels={[\"Pass applicant(s)\", \"Failed applicant(s)\"]}\n            categoriesLabel={[\"Exam preparation progress\"]}\n            dataLabels={true}\n            yaxisText=\"Exam performance\"\n            tooltipText=\"(Applicants)\"\n            series={[\n              {\n                name: \"Pass applicant(s)\",\n                data: [this.props.examPerformance.pass.length],\n              },\n              {\n                name: \"Failed applicant(s)\",\n                data: [this.props.examPerformance.failed.length],\n              },\n            ]}\n            colors={[\"#469769\", \"#d97724\"]}\n            defaultBar={{\n              borderRadius: 4,\n              horizontal: false,\n              columnWidth: \"95%\",\n              endingShape: \"rounded\",\n            }}\n            chartHeight={550}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default React.memo(ExamPerformanceChart);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  schoolLevelsStoreInterface,\n  loadCourses,\n  loadExamsList,\n  loadEducationCategories,\n  loadDoneExam,\n  loadSchoolLevels,\n  loadPerfomranceExam,\n  loadCandidatesExamPerformance,\n  PushPopupAlert,\n  FilterParamType,\n} from \"../../../actions\";\nimport { StoreState } from \"../../../reducers\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport {\n  SessionPlanInterface,\n  course,\n  education_category,\n  ExamDoneAndRemainingByPeriodInterface,\n  school_level,\n} from \"../../../interfaces\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport { ExamReportReducerType } from \"../../../reducers/exam_report\";\nimport moment from \"moment\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport {\n  candidatePerfomranceStateInterface,\n  FC_reportCandidatePerformanceData,\n  FC_reportCandidatePerformanceDataFilter,\n} from \"../../Admin/ExamReport/CandidatePerformance\";\nimport {\n  examProgressStateInterface,\n  FC_reportDoneExamList,\n} from \"../../Admin/ExamReport/DoneExamList\";\nimport {\n  examPreparationStateInterface,\n  FC_reportExamList,\n} from \"../../Admin/ExamReport/ExamList\";\nimport { reportTitleType } from \"../../Admin/ExamReport/ExamReport\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport NoSession from \"../../SessionSettings/NoSession\";\nimport ExamDashboardTitle from \"./ExamDashboardTitle\";\nimport ExamDashboardLabels from \"./ExamDashboardLabels\";\nimport { FaBookOpen } from \"react-icons/fa\";\nimport PieChart from \"../ChartComponents/PieChart\";\nimport ExamPreparationChart from \"./ExamPreparationChart\";\nimport ExamProgressChart from \"./ExamProgressChart\";\nimport ExamPerformanceChart from \"./ExamPerformanceChart\";\n\nexport const getLevelbyId = (\n  school_levels: school_level[] | null,\n  level_id: string\n): school_level | undefined => {\n  if (school_levels) {\n    return school_levels.find((item) => item.school_level_id === level_id);\n  }\n};\n\nexport const loadCoursesByInstitute = (\n  thisEducation: education_category | null,\n  courseList: course[] | null,\n  school_levels: school_level[] | null\n): course[] | null => {\n  let result: course[] | null = [],\n    defaultValue: boolean = false;\n  if (courseList && thisEducation) {\n    for (const key in courseList) {\n      if (Object.prototype.hasOwnProperty.call(courseList, key)) {\n        if (courseList[key].school_levels.length > 0) {\n          courseList[key].school_levels.forEach((level) => {\n            let levelDetail = getLevelbyId(school_levels, level);\n            if (\n              levelDetail &&\n              (levelDetail.education_institute.includes(\n                thisEducation.education_institute_id\n              ) ||\n                levelDetail.education_institute.length <= 0)\n            ) {\n              result && result.push(courseList![key]);\n            }\n          });\n        } else {\n          result && result.push(courseList![key]);\n        }\n      }\n    }\n  }\n  // RETURN DEFAULT VALUES ====================\n  else {\n    defaultValue = true;\n  }\n  return defaultValue ? courseList : result;\n};\n\nexport const loadExaminationProgress = (\n  DoneExamList: ExamDoneAndRemainingByPeriodInterface[] | null,\n  examsList: ExamItemResponse[] | null,\n  thisEducation: education_category | null,\n  courseList: course[] | null,\n  school_levels: school_level[] | null,\n  period: string\n): {\n  all: examProgressStateInterface[];\n  finished: examProgressStateInterface[];\n  remaining: examProgressStateInterface[];\n} | null => {\n  let allData: examProgressStateInterface[] = [],\n    completeExams: examProgressStateInterface[] = [],\n    remainingExams: examProgressStateInterface[] = [],\n    dataFound: boolean = false;\n  if (\n    DoneExamList &&\n    loadCoursesByInstitute(thisEducation, courseList, school_levels) &&\n    examsList\n  ) {\n    dataFound = true;\n    allData = FC_reportDoneExamList(\n      loadCoursesByInstitute(thisEducation, courseList, school_levels)!,\n      examsList,\n      DoneExamList\n    ).filter((item) => item.exam && item.exam.period === period);\n    completeExams = allData.filter(\n      (item) => item.preparation_status.toLocaleLowerCase() === \"done\"\n    );\n    remainingExams = allData.filter(\n      (item) => item.preparation_status.toLocaleLowerCase() === \"active\"\n    );\n  }\n  console.log(\"====================================\");\n  console.log({ loadExaminationProgress: DoneExamList });\n  console.log(\"====================================\");\n  return dataFound\n    ? { all: allData, finished: completeExams, remaining: remainingExams }\n    : null;\n};\n\nexport const loadExamPreparationProgress = (\n  dataList: examPreparationStateInterface[]\n): {\n  all: examPreparationStateInterface[];\n  finished: examPreparationStateInterface[];\n  remaining: examPreparationStateInterface[];\n} => {\n  let allData: examPreparationStateInterface[] = dataList,\n    preparedExams: examPreparationStateInterface[] = dataList.filter(\n      (item) => item.preparation_status === \"prepared\"\n    ),\n    remainingExams: examPreparationStateInterface[] = dataList.filter(\n      (item) => item.preparation_status === \"not prepared\"\n    );\n  return { all: allData, finished: preparedExams, remaining: remainingExams };\n};\n\nexport const isDatePast = (dateParam: string): boolean => {\n  const date = moment().format(\"DD-MM-YYYY\");\n  const todayDate = moment(date, \"DD-MM-YYYY\");\n  const pastDate = moment(dateParam, \"DD-MM-YYYY\");\n\n  const dDiff = todayDate.diff(pastDate);\n\n  if (dDiff > 0) {\n    return false;\n  } else {\n    return true;\n  }\n};\n\nexport const loadExamAttendance = (\n  applicantList: candidatePerfomranceStateInterface[],\n  period: string\n): {\n  all: candidatePerfomranceStateInterface[];\n  pass: candidatePerfomranceStateInterface[];\n  failed: candidatePerfomranceStateInterface[];\n  active: candidatePerfomranceStateInterface[];\n} => {\n  return {\n    all: applicantList.filter((item) => item.exam.period === period),\n    pass: applicantList.filter(\n      (item) =>\n        item.exam.period === period &&\n        (item.exam_stastus !== \"Editing\" || isDatePast(item.exam.exam_date)) &&\n        item.user_total_marks >= 50\n    ),\n    failed: applicantList.filter(\n      (item) =>\n        item.exam.period === period &&\n        (item.exam_stastus !== \"Editing\" || isDatePast(item.exam.exam_date)) &&\n        item.user_total_marks < 50\n    ),\n    active: applicantList.filter(\n      (item) =>\n        item.exam.period === period &&\n        item.exam_stastus === \"Editing\" &&\n        !isDatePast(item.exam.exam_date)\n    ),\n  };\n};\n\ninterface ExamDashboardProps {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  courses: course[] | null;\n  examsList: ExamItemResponse[] | null;\n  adminExamReport: ExamReportReducerType;\n  GetAllSessionPlans: Function;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  loadCourses: (callback: (loading: boolean) => void) => void;\n  loadExamsList: (callback: (loading: boolean) => void) => void;\n  loadDoneExam: (period_id: string, callback: Function) => void;\n  loadPerfomranceExam: (period_id: string, callback: Function) => void;\n  loadSchoolLevels: (callback: (loading: boolean) => void) => void;\n  loadCandidatesExamPerformance: (\n    dataBody: FilterParamType | null,\n    callback: Function\n  ) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface ExamDashboardStates {\n  loading: boolean;\n  loadingCourses: boolean;\n  loadingExams: boolean;\n  loadingDoneExam: boolean;\n  loadingCandidatesExamPerformance: boolean;\n  loadingExamPerformance: boolean;\n  loadingSettings: boolean;\n  changingPeriod: boolean;\n  reportTitle: reportTitleType;\n  thisEducation: education_category | null;\n  thisPeriod: string;\n}\n\nclass _ExamDashboard extends Component<\n  ExamDashboardProps,\n  ExamDashboardStates\n> {\n  constructor(props: ExamDashboardProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingCourses: true,\n      loadingExams: true,\n      loadingDoneExam: true,\n      loadingCandidatesExamPerformance: true,\n      loadingExamPerformance: true,\n      loadingSettings: true,\n      changingPeriod: false,\n      reportTitle: reportTitleType.EXAM_PREPARATION,\n      thisEducation: null,\n      thisPeriod: \"\",\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingCourses = (value: boolean) => {\n    this.setState({ loadingCourses: value });\n  };\n\n  setLoadingExams = (value: boolean) => {\n    this.setState({ loadingExams: value });\n  };\n\n  setLoadingDoneExam = (value: boolean) => {\n    this.setState({ loadingDoneExam: value });\n  };\n\n  setLoadingCandidatesExamPerformance = (value: boolean) => {\n    this.setState({ loadingCandidatesExamPerformance: value });\n  };\n\n  setLoadingExamPerformance = (value: boolean) => {\n    this.setState({ loadingExamPerformance: value });\n  };\n\n  setLoadingSettings = (value: boolean) => {\n    this.setState({ loadingSettings: value });\n  };\n\n  setChangingPeriod = (value: boolean) => {\n    this.setState({ changingPeriod: value });\n  };\n\n  setReportTitle = (value: reportTitleType) => {\n    this.setState({ reportTitle: value });\n  };\n\n  setThisEducation = (value: education_category | null) => {\n    this.setState({ thisEducation: value });\n  };\n\n  setThisPeriod = (value: string) => {\n    this.setState({ thisPeriod: value });\n  };\n\n  loadByPeriods = (session: SessionPlanInterface) => {\n    this.props.loadDoneExam(\n      session.session_plan_id,\n      (status: boolean, msg: string) => {\n        if (!status) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          this.setLoadingDoneExam(false);\n        }\n      }\n    );\n\n    // --------------------------------------------\n    this.props.loadPerfomranceExam(\n      session.session_plan_id,\n      (status: boolean, msg: string) => {\n        if (!status) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          this.setLoadingExamPerformance(false);\n        }\n      }\n    );\n  };\n\n  componentDidMount = () => {\n    if (\n      this.props.schoolLevels.education_categories === null ||\n      this.props.schoolLevels.education_categories.length === 0\n    ) {\n      this.props.loadEducationCategories(this.setLoadingSettings);\n    } else if (\n      this.props.schoolLevels.education_categories.length > 0 &&\n      !this.state.thisEducation\n    ) {\n      this.setThisEducation(this.props.schoolLevels.education_categories[0]);\n      this.setLoadingSettings(false);\n    }\n\n    if (this.props.application_sessions === null) {\n      this.props.GetAllSessionPlans(\n        (status: boolean, msg: string, sessions?: SessionPlanInterface[]) => {\n          this.setLoadingSettings(status);\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          if (!status && sessions && sessions.length > 0) {\n            let active_period: SessionPlanInterface | undefined;\n            active_period = sessions.find((item) => item.is_active);\n            if (active_period) {\n              this.setThisPeriod(active_period.session_plan_id);\n            } else {\n              this.setThisPeriod(sessions[sessions.length - 1].session_plan_id);\n            }\n          }\n        }\n      );\n    } else if (\n      this.props.application_sessions.length > 0 &&\n      !this.state.thisPeriod.length\n    ) {\n      let active_period: SessionPlanInterface | undefined;\n      active_period = this.props.application_sessions.find(\n        (item) => item.is_active\n      );\n      if (active_period) {\n        this.setThisPeriod(active_period.session_plan_id);\n        this.loadByPeriods(active_period);\n      } else {\n        this.setThisPeriod(\n          this.props.application_sessions[\n            this.props.application_sessions.length - 1\n          ].session_plan_id\n        );\n        this.loadByPeriods(\n          this.props.application_sessions[\n            this.props.application_sessions.length - 1\n          ]\n        );\n      }\n      this.setLoadingSettings(false);\n      this.setLoading(false);\n    }\n\n    if (\n      this.props.schoolLevels.school_levels === null ||\n      this.props.schoolLevels.school_levels.length <= 0\n    ) {\n      this.props.loadSchoolLevels(this.setLoadingSettings);\n    } else {\n      this.setLoadingSettings(false);\n    }\n\n    // if (this.state.thisPeriod.length > 0 && this.state.loadingDoneExam) {\n    //   this.props.loadDoneExam(\n    //     this.state.thisPeriod,\n    //     (status: boolean, msg: string) => {\n    //       if (!status) {\n    //         if (msg.length > 0) {\n    //           this.props.PushPopupAlert({\n    //             title: msg,\n    //             theme: PopupAlertTheme.danger,\n    //           });\n    //         }\n    //         this.setLoadingDoneExam(false);\n    //       }\n    //     }\n    //   );\n    // }\n    // if (this.state.thisPeriod.length > 0 && this.state.loadingExamPerformance) {\n    //   this.props.loadPerfomranceExam(\n    //     this.state.thisPeriod,\n    //     (status: boolean, msg: string) => {\n    //       if (!status) {\n    //         if (msg.length > 0) {\n    //           this.props.PushPopupAlert({\n    //             title: msg,\n    //             theme: PopupAlertTheme.danger,\n    //           });\n    //         }\n    //         this.setLoadingExamPerformance(false);\n    //       }\n    //     }\n    //   );\n    // }\n\n    if (\n      this.props.adminExamReport.CandidatesExamPerformance === null ||\n      (this.props.adminExamReport.CandidatesExamPerformance.length === 0 &&\n        this.state.loadingCandidatesExamPerformance)\n    ) {\n      this.props.loadCandidatesExamPerformance(\n        null,\n        (status: boolean, msg: string) => {\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            this.setLoadingCandidatesExamPerformance(false);\n          }\n        }\n      );\n    }\n  };\n\n  onPeriodChange = (period_id: string) => {\n    this.setLoadingDoneExam(true);\n    this.setLoadingExamPerformance(true);\n    this.setChangingPeriod(true);\n    this.props.loadDoneExam(period_id, (status: boolean, msg: string) => {\n      if (!status) {\n        let action: boolean = true;\n        if (msg.length > 0 && action) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n          action = false;\n        }\n        this.setLoadingDoneExam(false);\n      }\n    });\n\n    this.props.loadPerfomranceExam(\n      period_id,\n      (status: boolean, msg: string) => {\n        if (!status) {\n          let action: boolean = true;\n          if (msg.length > 0 && action) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n            action = false;\n          }\n          this.setLoadingExamPerformance(false);\n        }\n      }\n    );\n\n    if (!this.state.loadingDoneExam && !this.state.loadingExamPerformance) {\n      this.setChangingPeriod(false);\n    }\n  };\n\n  render() {\n    if (this.state.loading || this.props.application_sessions === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    if (this.props.application_sessions.length === 0) {\n      return <NoSession />;\n    }\n\n    return (\n      <div>\n        {/* HEADER TITLE */}\n        <ExamDashboardTitle\n          reportTitle={this.state.reportTitle}\n          setReportTitle={this.setReportTitle}\n          loading={this.state.changingPeriod}\n          education_categories={this.props.schoolLevels.education_categories}\n          loadingEducation={false}\n          thisEducation={this.state.thisEducation}\n          setThisEducation={this.setThisEducation}\n          thisPeriod={this.state.thisPeriod}\n          setThisPeriod={this.setThisPeriod}\n          application_sessions={this.props.application_sessions}\n          onPeriodChange={this.onPeriodChange}\n        />\n        {/* END HEADER TITLE */}\n\n        {/* ----------------------------------------------------------- */}\n\n        {/* EXAMS PREPARATION PROGRESS LABELS ======================================= */}\n        {this.props.examsList &&\n          loadCoursesByInstitute(\n            this.state.thisEducation,\n            this.props.courses,\n            this.props.schoolLevels.school_levels\n          ) && (\n            <section className=\"my-2\">\n              <div className=\"text-2xl font-semibold text-gray-600\">\n                Exams preparation status\n              </div>\n              <ExamDashboardLabels\n                dataLabels={[\n                  {\n                    title: \"Total exams\",\n                    icon: FaBookOpen,\n                    iconColor: \"blue\",\n                    count: loadExamPreparationProgress(\n                      FC_reportExamList(\n                        loadCoursesByInstitute(\n                          this.state.thisEducation,\n                          this.props.courses,\n                          this.props.schoolLevels.school_levels\n                        )!,\n                        this.props.examsList,\n                        this.state.thisPeriod\n                      )\n                    ).all.length,\n                  },\n                  {\n                    title: \"Prepared exams\",\n                    icon: FaBookOpen,\n                    iconColor: \"green\",\n                    count: loadExamPreparationProgress(\n                      FC_reportExamList(\n                        loadCoursesByInstitute(\n                          this.state.thisEducation,\n                          this.props.courses,\n                          this.props.schoolLevels.school_levels\n                        )!,\n                        this.props.examsList,\n                        this.state.thisPeriod\n                      )\n                    ).finished.length,\n                  },\n                  {\n                    title: \"Remaining exams\",\n                    icon: FaBookOpen,\n                    iconColor: \"gray\",\n                    count: loadExamPreparationProgress(\n                      FC_reportExamList(\n                        loadCoursesByInstitute(\n                          this.state.thisEducation,\n                          this.props.courses,\n                          this.props.schoolLevels.school_levels\n                        )!,\n                        this.props.examsList,\n                        this.state.thisPeriod\n                      )\n                    ).remaining.length,\n                  },\n                ]}\n                labelsOnRow={5}\n              >\n                <div className=\"flex justify-center\">\n                  <PieChart\n                    options={{\n                      labels: [\"Prepared\", \"Remaining\"],\n                      legend: {\n                        show: false,\n                        position: \"bottom\",\n                        horizontalAlign: \"center\",\n                        fontSize: \"16px\",\n                        itemMargin: {\n                          horizontal: 3,\n                          vertical: 0,\n                        },\n                      },\n                      plotOptions: {\n                        pie: {\n                          donut: {\n                            labels: {\n                              show: true,\n                              name: {\n                                show: true,\n                                fontSize: \"16px\",\n                                //   fontFamily: \"Rubik\",\n                                color: \"#2564eb\",\n                                offsetY: -10,\n                              },\n                              value: {\n                                show: true,\n                                fontSize: \"20px\",\n                                fontFamily: \"Helvetica, Arial, sans-serif\",\n                                color: \"#2564eb\",\n                                offsetY: 10,\n                                formatter: function (val) {\n                                  return val;\n                                },\n                              },\n                              total: {\n                                show: true,\n                                label: \"Total\",\n                                color: \"#2564eb\",\n                                formatter: function (w) {\n                                  return w.globals.seriesTotals.reduce(\n                                    (a: number, b: number) => {\n                                      return a + b;\n                                    },\n                                    0\n                                  );\n                                },\n                              },\n                            },\n                          },\n                        },\n                      },\n                      colors: [\"#469769\", \"#4b5563\"],\n                    }}\n                    series={[\n                      loadExamPreparationProgress(\n                        FC_reportExamList(\n                          loadCoursesByInstitute(\n                            this.state.thisEducation,\n                            this.props.courses,\n                            this.props.schoolLevels.school_levels\n                          )!,\n                          this.props.examsList,\n                          this.state.thisPeriod\n                        )\n                      ).finished.length,\n                      loadExamPreparationProgress(\n                        FC_reportExamList(\n                          loadCoursesByInstitute(\n                            this.state.thisEducation,\n                            this.props.courses,\n                            this.props.schoolLevels.school_levels\n                          )!,\n                          this.props.examsList,\n                          this.state.thisPeriod\n                        )\n                      ).remaining.length,\n                    ]}\n                    width={210}\n                  />\n                </div>\n              </ExamDashboardLabels>\n            </section>\n          )}\n        {/* EXAMS PREPARATION PROGRESS LABELS ======================================= */}\n\n        {/* ===================================================================================== */}\n\n        {/* EXAMS PROGRESS LABELS ======================================= */}\n        {loadExaminationProgress(\n          this.props.adminExamReport.DoneExam,\n          this.props.examsList,\n          this.state.thisEducation,\n          this.props.courses,\n          this.props.schoolLevels.school_levels,\n          this.state.thisPeriod\n        ) && (\n          <section className=\"my-2\">\n            <div className=\"text-2xl font-semibold text-gray-600\">\n              Examination progress status\n            </div>\n            <ExamDashboardLabels\n              dataLabels={[\n                {\n                  title: \"Total exams\",\n                  icon: FaBookOpen,\n                  iconColor: \"blue\",\n                  count: loadExaminationProgress(\n                    this.props.adminExamReport.DoneExam,\n                    this.props.examsList,\n                    this.state.thisEducation,\n                    this.props.courses,\n                    this.props.schoolLevels.school_levels,\n                    this.state.thisPeriod\n                  )!.all.length,\n                },\n                {\n                  title: \"Done exams\",\n                  icon: FaBookOpen,\n                  iconColor: \"green\",\n                  count: loadExaminationProgress(\n                    this.props.adminExamReport.DoneExam,\n                    this.props.examsList,\n                    this.state.thisEducation,\n                    this.props.courses,\n                    this.props.schoolLevels.school_levels,\n                    this.state.thisPeriod\n                  )!.finished.length,\n                },\n                {\n                  title: \"Remaining exams\",\n                  icon: FaBookOpen,\n                  iconColor: \"gray\",\n                  count: loadExaminationProgress(\n                    this.props.adminExamReport.DoneExam,\n                    this.props.examsList,\n                    this.state.thisEducation,\n                    this.props.courses,\n                    this.props.schoolLevels.school_levels,\n                    this.state.thisPeriod\n                  )!.remaining.length,\n                },\n              ]}\n              labelsOnRow={5}\n            >\n              <div className=\"flex justify-center\">\n                <PieChart\n                  options={{\n                    labels: [\"Done\", \"Remaining\"],\n                    legend: {\n                      show: false,\n                      position: \"bottom\",\n                      horizontalAlign: \"center\",\n                      fontSize: \"16px\",\n                      itemMargin: {\n                        horizontal: 3,\n                        vertical: 0,\n                      },\n                    },\n                    plotOptions: {\n                      pie: {\n                        donut: {\n                          labels: {\n                            show: true,\n                            name: {\n                              show: true,\n                              fontSize: \"16px\",\n                              //   fontFamily: \"Rubik\",\n                              color: \"#2564eb\",\n                              offsetY: -10,\n                            },\n                            value: {\n                              show: true,\n                              fontSize: \"20px\",\n                              fontFamily: \"Helvetica, Arial, sans-serif\",\n                              color: \"#2564eb\",\n                              offsetY: 10,\n                              formatter: function (val) {\n                                return val;\n                              },\n                            },\n                            total: {\n                              show: true,\n                              label: \"Total\",\n                              color: \"#2564eb\",\n                              formatter: function (w) {\n                                return w.globals.seriesTotals.reduce(\n                                  (a: number, b: number) => {\n                                    return a + b;\n                                  },\n                                  0\n                                );\n                              },\n                            },\n                          },\n                        },\n                      },\n                    },\n                    colors: [\"#469769\", \"#4b5563\"],\n                  }}\n                  series={[\n                    loadExaminationProgress(\n                      this.props.adminExamReport.DoneExam,\n                      this.props.examsList,\n                      this.state.thisEducation,\n                      this.props.courses,\n                      this.props.schoolLevels.school_levels,\n                      this.state.thisPeriod\n                    )!.finished.length,\n                    loadExaminationProgress(\n                      this.props.adminExamReport.DoneExam,\n                      this.props.examsList,\n                      this.state.thisEducation,\n                      this.props.courses,\n                      this.props.schoolLevels.school_levels,\n                      this.state.thisPeriod\n                    )!.remaining.length,\n                  ]}\n                  width={210}\n                />\n              </div>\n            </ExamDashboardLabels>\n          </section>\n        )}\n        {/* EXAMS PROGRESS LABELS ======================================= */}\n\n        {/* ===================================================================================== */}\n\n        {/* EXAMS PERFORMANCE LABELS ======================================= */}\n        {this.props.adminExamReport.CandidatesExamPerformance &&\n          loadCoursesByInstitute(\n            this.state.thisEducation,\n            this.props.courses,\n            this.props.schoolLevels.school_levels\n          ) && (\n            <section className=\"my-2\">\n              <div className=\"text-2xl font-semibold text-gray-600\">\n                Examination performance status\n              </div>\n              <ExamDashboardLabels\n                dataLabels={[\n                  {\n                    title: \"Total attendance\",\n                    icon: FaBookOpen,\n                    iconColor: \"blue\",\n                    count: loadExamAttendance(\n                      FC_reportCandidatePerformanceDataFilter(\n                        FC_reportCandidatePerformanceData(\n                          loadCoursesByInstitute(\n                            this.state.thisEducation,\n                            this.props.courses,\n                            this.props.schoolLevels.school_levels\n                          )!,\n                          this.props.adminExamReport.CandidatesExamPerformance,\n                          \"all\"\n                        ),\n                        \"all\"\n                      ),\n                      this.state.thisPeriod\n                    ).all.length,\n                  },\n                  {\n                    title: \"Pass applicant(s)\",\n                    icon: FaBookOpen,\n                    iconColor: \"green\",\n                    count: loadExamAttendance(\n                      FC_reportCandidatePerformanceDataFilter(\n                        FC_reportCandidatePerformanceData(\n                          loadCoursesByInstitute(\n                            this.state.thisEducation,\n                            this.props.courses,\n                            this.props.schoolLevels.school_levels\n                          )!,\n                          this.props.adminExamReport.CandidatesExamPerformance,\n                          \"all\"\n                        ),\n                        \"all\"\n                      ),\n                      this.state.thisPeriod\n                    ).pass.length,\n                  },\n                  {\n                    title: \"Failed applicant(s)\",\n                    icon: FaBookOpen,\n                    iconColor: \"yellow\",\n                    count: loadExamAttendance(\n                      FC_reportCandidatePerformanceDataFilter(\n                        FC_reportCandidatePerformanceData(\n                          loadCoursesByInstitute(\n                            this.state.thisEducation,\n                            this.props.courses,\n                            this.props.schoolLevels.school_levels\n                          )!,\n                          this.props.adminExamReport.CandidatesExamPerformance,\n                          \"all\"\n                        ),\n                        \"all\"\n                      ),\n                      this.state.thisPeriod\n                    ).failed.length,\n                  },\n                  // {\n                  //   title: \"Doing exam\",\n                  //   icon: FaBookOpen,\n                  //   iconColor: \"gray\",\n                  //   count: loadExamAttendance(\n                  //     FC_reportCandidatePerformanceDataFilter(\n                  //       FC_reportCandidatePerformanceData(\n                  //         loadCoursesByInstitute(\n                  //           thisEducation,\n                  //           props.courses,\n                  //           props.schoolLevels.school_levels\n                  //         )!,\n                  //         props.adminExamReport.CandidatesExamPerformance,\n                  //         \"all\"\n                  //       ),\n                  //       \"all\"\n                  //     ),\n                  //     thisPeriod\n                  //   ).active.length,\n                  // },\n                ]}\n                labelsOnRow={5}\n              >\n                <div className=\"flex justify-center\">\n                  <PieChart\n                    options={{\n                      labels: [\"Pass\", \"Failed\"],\n                      // labels: [\"Pass\", \"Failed\", \"Doing Exam\"],\n                      legend: {\n                        show: false,\n                        position: \"bottom\",\n                        horizontalAlign: \"center\",\n                        fontSize: \"16px\",\n                        itemMargin: {\n                          horizontal: 3,\n                          vertical: 0,\n                        },\n                      },\n                      plotOptions: {\n                        pie: {\n                          donut: {\n                            labels: {\n                              show: true,\n                              name: {\n                                show: true,\n                                fontSize: \"16px\",\n                                //   fontFamily: \"Rubik\",\n                                color: \"#2564eb\",\n                                offsetY: -10,\n                              },\n                              value: {\n                                show: true,\n                                fontSize: \"20px\",\n                                fontFamily: \"Helvetica, Arial, sans-serif\",\n                                color: \"#2564eb\",\n                                offsetY: 10,\n                                formatter: function (val) {\n                                  return val;\n                                },\n                              },\n                              total: {\n                                show: true,\n                                label: \"Total\",\n                                color: \"#2564eb\",\n                                formatter: function (w) {\n                                  return w.globals.seriesTotals.reduce(\n                                    (a: number, b: number) => {\n                                      return a + b;\n                                    },\n                                    0\n                                  );\n                                },\n                              },\n                            },\n                          },\n                        },\n                      },\n                      colors: [\"#469769\", \"#d97724\"],\n                      // colors: [\"#469769\", \"#d97724\", \"#4b5563\"],\n                    }}\n                    series={[\n                      loadExamAttendance(\n                        FC_reportCandidatePerformanceDataFilter(\n                          FC_reportCandidatePerformanceData(\n                            loadCoursesByInstitute(\n                              this.state.thisEducation,\n                              this.props.courses,\n                              this.props.schoolLevels.school_levels\n                            )!,\n                            this.props.adminExamReport\n                              .CandidatesExamPerformance,\n                            \"all\"\n                          ),\n                          \"all\"\n                        ),\n                        this.state.thisPeriod\n                      ).pass.length,\n                      loadExamAttendance(\n                        FC_reportCandidatePerformanceDataFilter(\n                          FC_reportCandidatePerformanceData(\n                            loadCoursesByInstitute(\n                              this.state.thisEducation,\n                              this.props.courses,\n                              this.props.schoolLevels.school_levels\n                            )!,\n                            this.props.adminExamReport\n                              .CandidatesExamPerformance,\n                            \"all\"\n                          ),\n                          \"all\"\n                        ),\n                        this.state.thisPeriod\n                      ).failed.length,\n                      // loadExamAttendance(\n                      //   FC_reportCandidatePerformanceDataFilter(\n                      //     FC_reportCandidatePerformanceData(\n                      //       loadCoursesByInstitute(\n                      //         thisEducation,\n                      //         props.courses,\n                      //         props.schoolLevels.school_levels\n                      //       )!,\n                      //       props.adminExamReport.CandidatesExamPerformance,\n                      //       \"all\"\n                      //     ),\n                      //     \"all\"\n                      //   ),\n                      //   thisPeriod\n                      // ).active.length,\n                    ]}\n                    width={210}\n                  />\n                </div>\n              </ExamDashboardLabels>\n            </section>\n          )}\n        {/* EXAMS PERFORMANCE LABELS ======================================= */}\n\n        {/* ------------------------------------------------------------------------------- */}\n\n        {/* ===================================================================================== */}\n\n        {/* EXAMS PREPARATION PROGRESS CHART ======================================= */}\n        {this.props.examsList &&\n          loadCoursesByInstitute(\n            this.state.thisEducation,\n            this.props.courses,\n            this.props.schoolLevels.school_levels\n          ) && (\n            <ExamPreparationChart\n              examPreparationProgress={loadExamPreparationProgress(\n                FC_reportExamList(\n                  loadCoursesByInstitute(\n                    this.state.thisEducation,\n                    this.props.courses,\n                    this.props.schoolLevels.school_levels\n                  )!,\n                  this.props.examsList,\n                  this.state.thisPeriod\n                )\n              )}\n            />\n          )}\n        {/* EXAMS PREPARATION PROGRESS CHART ======================================= */}\n\n        {/* ===================================================================================== */}\n\n        {/* EXAMINATION PROGRESS CHART ======================================= */}\n        {loadExaminationProgress(\n          this.props.adminExamReport.DoneExam,\n          this.props.examsList,\n          this.state.thisEducation,\n          this.props.courses,\n          this.props.schoolLevels.school_levels,\n          this.state.thisPeriod\n        ) && (\n          <ExamProgressChart\n            progressData={\n              loadExaminationProgress(\n                this.props.adminExamReport.DoneExam,\n                this.props.examsList,\n                this.state.thisEducation,\n                this.props.courses,\n                this.props.schoolLevels.school_levels,\n                this.state.thisPeriod\n              )!\n            }\n          />\n        )}\n        {/* EXAMINATION PROGRESS CHART ======================================= */}\n\n        {/* ===================================================================================== */}\n\n        {/* EXAM PERFORMANCE ON COUNTRY CHART ======================================= */}\n        {this.props.adminExamReport.CandidatesExamPerformance &&\n          loadCoursesByInstitute(\n            this.state.thisEducation,\n            this.props.courses,\n            this.props.schoolLevels.school_levels\n          ) && (\n            <ExamPerformanceChart\n              examPerformance={loadExamAttendance(\n                FC_reportCandidatePerformanceDataFilter(\n                  FC_reportCandidatePerformanceData(\n                    loadCoursesByInstitute(\n                      this.state.thisEducation,\n                      this.props.courses,\n                      this.props.schoolLevels.school_levels\n                    )!,\n                    this.props.adminExamReport.CandidatesExamPerformance,\n                    \"all\"\n                  ),\n                  \"all\"\n                ),\n                this.state.thisPeriod\n              )}\n            />\n          )}\n        {/* END EXAM PERFORMANCE ON COUNTRY CHART ======================================= */}\n\n        {/* ------------------------------------------------------------------------------- */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  sessionPlan,\n  schoolLevels,\n  course,\n  prepareExam,\n  adminExamReport,\n}: StoreState): {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  courses: course[] | null;\n  examsList: ExamItemResponse[] | null;\n  adminExamReport: ExamReportReducerType;\n} => {\n  return {\n    auth,\n    application_sessions: sessionPlan.allSessionPlans,\n    schoolLevels,\n    courses: course.courses,\n    examsList: prepareExam.examsList,\n    adminExamReport,\n  };\n};\n\nexport const ExamDashboard = connect(mapStateToProps, {\n  loadCourses,\n  loadExamsList,\n  loadEducationCategories,\n  loadDoneExam,\n  loadSchoolLevels,\n  loadPerfomranceExam,\n  loadCandidatesExamPerformance,\n  GetAllSessionPlans,\n  PushPopupAlert,\n})(_ExamDashboard);\n"],"sourceRoot":""}
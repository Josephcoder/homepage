{"version":3,"sources":["containers/SessionSettings/NoSession.tsx","components/Navigation/SideNavigation.tsx","actions/settings.ts","components/Loading/TableLoading.tsx","utils/ExportToExcel.tsx","utils/mineduc.png","components/DownloadPDF/rest.tsx","containers/SessionSettings/ChooseSession.tsx","interfaces/waitingList.ts","components/ContractViewer/DistrictView.tsx","components/ContractViewer/ProvinceView.tsx","components/ContractViewer/SchoolView.tsx","components/ContractViewer/SectorView.tsx","components/ContractViewer/ContractViewer.tsx","containers/Admin/WaitingList/WaitingListReport.tsx"],"names":["NoSession","title","description","content","undefined","className","React","memo","_SideNavigation","props","componentDidMount","PageHasSubNav","componentWillUnmount","state","loading","this","auth","isAuthenticated","navActive","system","navigation","children","Component","SideNavigation","connect","NavToogle","MainItem","icon","MdBrightness1","active","count","IconDefined","url","API","AUTH","getSystemSettings","callback","dispatch","a","setAxiosToken","axios","get","res","console","log","type","ActionTypes","GET_SYSTEM_SETTINGS","payload","data","code_error","errorToText","disableSystemSetting","DISABLE_SYSTEM_SETTINGS","GetTaskAccess","response","map","id","task","key","permitted","GET_TASK_ACCESS","getPositions","APPLICATION","GET_POSTIONS","deletePosition","DELETE_POSITION","publishPosition","PUBLISH_POSITION","FC_GetPositionsByInstitution","institution_id","TableLoading","displayCols","colsArray","index","cols","push","element","Math","random","ExportToExcel","fileData","fileName","btnName","showIcon","onClick","e","apiData","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","exportToCSV","require","addFooters","doc","pageCount","internal","getNumberOfPages","setFont","setFontSize","i","setPage","text","String","pageSize","width","align","generatePDF","reportSettings","table","callBack","orientation","lMargin","jsPDF","setTextColor","addImage","Logo","getWidth","institute","lines","splitTextToSize","subject","pdfInMM","y","subjectTitle","getTextWidth","length","addPage","period","autoTable","html","startY","margin","horizontal","cellPadding","rowHeight","bodyStyles","valign","columnStyles","email","cellWidth","theme","tableWidth","finalY","lastAutoTable","doneBy","DATE","Date","toString","save","returnPromise","then","isPlansActive","plans","today","activePlans","plan","startDate","start_date","endDate","end_date","getTime","type_status","SessionPlanTypeStatus","OPEN","ChooseSession","searched","useState","selectedPlan","setSelectedPlan","search","setSearch","onChange","target","value","placeholder","disabled","allSession","chooseAll","currentSelected","setSelectSession","searchData","item","_id","session_plan_name","is_active","find","itm","type_key","type_title","WaitingListStatus","applicantGender","waitingListReportContentKeyInterface","DistrictView","result","districts","strict","forEach","district","displayMessage","ProvinceView","provinces","province","SchoolView","schools","school","SectorView","sectors","sector","ContractViewer","locations","FC_getLocations","status","msg","FC_GetWaitingLocationList","setState","selectedSchool","contract","values","FC_LoadSchoolsByIDs","err","Loading","ProvincesList","DistrictList","SectorList","el","findIt","province_code","province_name","district_code","district_name","sector_code","sector_name","thisCandidate","candidates","thisPosition","position","school_code","school_name","waitingLocation","FC_LoadSchoolsByDistrict","getPeriodById","period_id","defaultReportContent","names","national_id","gender","phone","user_position_marks","waitingList_session","education_category","date","waiting_status","position_title","_WaitingListReport","setLoading","setLoadingWaitingList","loadingWaitingList","setThisPeriod","thisPeriod","setWaitingListToPrint","waitingListToPrint","setThisWaitingListStatus","thisWaitingListStatus","setThisPosition","setSelectPosition","selectPosition","setSortProperty","sortProperty","setIsSorted","isSorted","setSortOrder","sortOrder","setSearchInput","searchInput","setSearchPositionInput","searchPositionInput","setDownloading","downloading","setGenerateReportModal","generateReportModal","setReportTitle","reportTitle","setReportContent","reportContent","setSelectAll","selectAll","setFormError","formError","setSelectPeriod","selectPeriod","setThisEducation","thisEducation","FC_OnInstitutionChanged","FC_GetAllSessionByInstitution","PushPopupAlert","PopupAlertTheme","danger","getWaitingList","FC_HasInstitute","education_institution_id","schoolLevels","education_categories","loadEducationCategories","education_institute_id","selectedEducationCategory","setSort","thisProperty","showStatus","WAITING","PENDING","PLACED","FC_WaitingListStatus","WaitingList","output","statusArray","Object","capitalizeFirstLetter","filter","updateReportContent","findIndex","newArray","updateWaitingListToPrint","session","systemPositions","waitingList","application_sessions","arrayNew","n","prototype","hasOwnProperty","call","getPositionById","position_id","thisSession","session_id","dataArray","user_info","fname","lname","sex","n_id","phone_number","Number","marks","toFixed","education_category_title","createdAt","FC_WaitingListData","allWaitList","waitingList_id","male","female","education_category_id","waitingList_session_id","resetReportContent","currentState","isChangeAllowed","generateReportTitle","FC_GeneratePDF","document","querySelectorAll","getElementById","user","footer","warning","FC_FilterWaitingList","waitingListStatus","viewContractor","waitingData","selectedWaiting","objList","capitalizeFirstWord","reportType","colSpan","sortThisArray","product","flag","prop","toLowerCase","indexOf","Modal","backDrop","Themes","default","close","backDropClose","widthSizeClass","ModalSize","extraLarge","displayClose","padding","LoadingV2","LoadingType","dark","style","fontStyle","school_level_id","school_level_name","medium","body","WaitingListReport","system_settings","sessionPlan","allSessionPlans"],"mappings":"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","file":"static/js/26.0616d2bc.chunk.js","sourcesContent":["import React from \"react\";\nimport { IoWarning } from \"react-icons/io5\";\n// import { MdInfoOutline } from \"react-icons/md\";\nimport { NavLink } from \"react-router-dom\";\n\ntype NoSessionProps = {\n  title?: string;\n  description?: string;\n  content?: any;\n};\n\nconst NoSession: React.FC<NoSessionProps> = ({\n  title = \"No session available\",\n  description = \"Please Wait for the system to publish the sessions or contact the administrator\",\n  content = undefined,\n}) => {\n  return (\n    <div className=\"w-full my-5\">\n      <section className=\"py-10 flex flex-col items-center rounded border border-gray-300 bg-white text-2xl font-medium text-yellow-800 animate__animated animate__pulse\">\n        <div className=\"flex flex-col items-center\">\n          <IoWarning className=\"w-32 h-32\" />\n          {description}\n        </div>\n        {content && content}\n        {false && (\n          <div className=\"text-center group text-sm -mb-3 mt-5\">\n            <NavLink\n              to=\"/apps-page\"\n              className=\"border border-rounded-md bg-gray-100 text-gray-900 rounded border-gray-100 group-hover:bg-gray-50 group-hover:border-gray-400 px-2 py-1\"\n            >\n              Back to App\n            </NavLink>\n          </div>\n        )}\n      </section>\n    </div>\n  );\n};\n\nexport default React.memo(NoSession);\n","import React, { FC, ReactElement, ReactNode } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, System } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { NavToogle, PageHasSubNav } from \"../../actions\";\nimport { MdBrightness1, MdSearch } from \"react-icons/md\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  system: System;\n  PageHasSubNav: Function;\n  NavToogle: Function;\n  children: ReactNode;\n}\n//\ninterface AppState {\n  loading: boolean;\n}\n\nclass _SideNavigation extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount = () => this.props.PageHasSubNav(true);\n  componentWillUnmount = () => this.props.PageHasSubNav(false);\n\n  render() {\n    const isAuthenticated = this.props.auth.isAuthenticated;\n\n    if (isAuthenticated === false) {\n      return null;\n    }\n\n    const navActive = this.props.system.navigation;\n    return (\n      <div\n        className={`fixed w-48 p-1 pr-2 pl-6 text-gray-700 bg-white ${\n          navActive === true ? \"lg:left-16  left-16\" : \" -left-72 lg:left-16\"\n        }  top-0 bottom-0 pt-20 z-30 shadow-lg  transition-all duration-500 ease-in-out overflow-y-auto`}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n}: StoreState): { auth: Auth; system: System } => {\n  return { auth: auth, system: system };\n};\n\nexport const SideNavigation = connect(mapStateToProps, {\n  NavToogle,\n  PageHasSubNav,\n})(_SideNavigation);\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SearchComponentInterface = {\n  data: any[];\n};\n\nexport const Search: FC<SearchComponentInterface> = ({\n  data,\n}): ReactElement => {\n  return (\n    <div className=\"m-1 rounded-md shadow-md border border-blue-400 bg-white p-1 flex \">\n      <label htmlFor=\"search-text\" className=\"inline-block text-2xl\">\n        <MdSearch className=\"inline-block text-blue-400\" />\n      </label>\n      <input\n        type=\"search\"\n        className=\"outline-none bg-transparent flex-1 pl-1\"\n        placeholder=\"Search\"\n        id=\"search-text\"\n      />\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype MainItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const MainItem: FC<MainItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n  return (\n    <section\n      className={`${\n        active === true\n          ? \"bg-blue-500 text-white font-bold\"\n          : \"bg-blue-100 text-blue-800\"\n      } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex cursor-pointer items-center`}\n    >\n      <section className=\"flex-1\">\n        <IconDefined className=\"inline-block mr-1 text-xs\" />\n        <span>{title}</span>\n      </section>\n\n      {count > 0 ? (\n        <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n          {count}\n        </span>\n      ) : null}\n    </section>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemContainerComponentInterface = {\n  children: ReactNode;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const SubItemContainer: FC<SubItemContainerComponentInterface> = ({\n  children,\n}): ReactElement => {\n  return (\n    <div className=\"ml-3 overflow-y-auto border-l-2 border-blue-200 -mt-1 pt-2 mb-2 pl-1 cursor-pointer\">\n      {children}\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n * @important Remenber to use these components inside the <SubItemContainer>...</SubItemContainer>\n */\nexport const SubItem: FC<SubItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n\n  return (\n    <div\n      className={`animate__animated animate__zoomIn animate__faster ${\n        active === true ? \"bg-blue-500 text-white font-bold\" : \" text-blue-800\"\n      } text-blue-800 bg-blue-200 rounded-md px-1 mb-1 flex items-center py-1 font-bold`}\n    >\n      <IconDefined\n        className={`inline-block mr-0.1 text-xs ${\n          active === true ? \"text-white\" : \"\"\n        }`}\n      />\n      <span\n        className={`inline-block pl-1 ${active === true ? \"text-white\" : \"\"}`}\n      >\n        {title}\n      </span>\n      {count >= 1 ? (\n        <span\n          className={`text-sm fint-bold ${active === true ? \"text-white\" : \"\"}`}\n        >\n          {count}\n        </span>\n      ) : null}\n    </div>\n  );\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AccessTaskInterface,\n  PermissionInterface,\n  SystemSettingsInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PositionAPI } from \"../interfaces/position\";\n\nconst url = `${API.AUTH}/auth/user/access`;\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// SYSTEM SETTINGS  ==============\nexport interface GetSystemSettingsAction {\n  type: ActionTypes.GET_SYSTEM_SETTINGS;\n  payload: SystemSettingsInterface[];\n}\n\nexport interface DisableSystemSettingsAction {\n  type: ActionTypes.DISABLE_SYSTEM_SETTINGS;\n  payload: {\n    system_setting_id: string;\n    status: \"enabled\" | \"disabled\";\n  };\n}\n\n// ROLE TASKS ACCESS SETTINGS ===================================\nexport interface GetTaskAccessAction {\n  type: ActionTypes.GET_TASK_ACCESS;\n  payload: AccessTaskInterface[];\n}\n\n// POSITIONS SETTINGS ===================================\nexport interface PositionCreateInterface {\n  position_id?: string;\n  position_title: string;\n  position_code: string;\n  description: string;\n  school_level_id: string;\n  subcategory_id: string;\n  education_institute_id: string;\n  courses: string[];\n  requirements: {\n    user_detail_category_id: string;\n    user_detail_subcategory_id: string;\n    position_requirement: {\n      category_subcategory_data_id: string;\n      required: boolean;\n    }[];\n    required: boolean;\n  }[];\n}\nexport interface GetPositionsAction {\n  type: ActionTypes.GET_POSTIONS;\n  payload: PositionAPI[];\n}\n\nexport interface CreatePositionsAction {\n  type: ActionTypes.CREATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface UpdatePositionsAction {\n  type: ActionTypes.UPDATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface DeletePositionSettingAction {\n  type: ActionTypes.DELETE_POSITION;\n  payload: string;\n}\n\nexport interface PublishPositionAction {\n  type: ActionTypes.PUBLISH_POSITION;\n  payload: {\n    position_id: string;\n    status: boolean;\n  };\n}\n\nexport type SystemActionType =\n  | GetSystemSettingsAction\n  | DisableSystemSettingsAction\n  | GetTaskAccessAction\n  | GetPositionsAction\n  | CreatePositionsAction\n  | UpdatePositionsAction\n  | DeletePositionSettingAction\n  | PublishPositionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSystemSettings = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<SystemSettingsInterface[]>(\n        `${API.AUTH}/system/setting`\n      );\n      console.log(\"=================getSystemSettings===================\");\n      console.log(res);\n      console.log(\"=================getSystemSettings===================\");\n      dispatch<GetSystemSettingsAction>({\n        type: ActionTypes.GET_SYSTEM_SETTINGS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const disableSystemSetting = (data: {\n  system_setting_id: string;\n  status: \"enabled\" | \"disabled\";\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableSystemSettingsAction>({\n      type: ActionTypes.DISABLE_SYSTEM_SETTINGS,\n      payload: data,\n    });\n  };\n};\n\n// ============================ tasks access =======================\n\nexport const GetTaskAccess = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<\n        {\n          id: string;\n          title: string;\n          key: string;\n          permitted: PermissionInterface;\n        }[]\n      >(`${url}/roleaccess`);\n      let response: AccessTaskInterface[] = res.data.map((data) => ({\n        id: data.id,\n        task: data.title,\n        key: data.key,\n        permitted: data.permitted,\n      }));\n      dispatch<GetTaskAccessAction>({\n        type: ActionTypes.GET_TASK_ACCESS,\n        payload: response,\n      });\n      callback(false, \"\", response);\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// ============================ positions =======================\n\nexport const getPositions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(`${API.APPLICATION}/position`);\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createPosition = (data: PositionCreateInterface) => {\n  console.log({ createPosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreatePositionsAction>({\n      type: ActionTypes.CREATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const updatePosition = (data: PositionCreateInterface) => {\n  console.log({ updatePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdatePositionsAction>({\n      type: ActionTypes.UPDATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const deletePosition = (data: string) => {\n  console.log({ deletePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<DeletePositionSettingAction>({\n      type: ActionTypes.DELETE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const publishPosition = (data: {\n  position_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<PublishPositionAction>({\n      type: ActionTypes.PUBLISH_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_GetPositionsByInstitution = (\n  institution_id: string,\n  callback: (status: boolean, msg: string, data?: PositionAPI[]) => void\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(\n        `${API.APPLICATION}/position/instituteposition/${institution_id}`\n      );\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n","import React from \"react\";\n\ntype TableLoadingProps = {\n  cols: number;\n};\nconst TableLoading: React.FC<TableLoadingProps> = (props) => {\n  const displayCols = (): JSX.Element[] => {\n    let colsArray: number[] = [];\n    for (let index = 0; index < props.cols; index++) {\n      colsArray.push(index);\n    }\n    let result = colsArray.map((element) => {\n      return (\n        <td className=\"p-3 text-center whitespace-nowrap\" key={element}>\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      );\n    });\n\n    return result;\n  };\n  return (\n    <>\n      <tr className=\"border-b border-gray-200\" key={Math.random()}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={Math.random()}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={Math.random()}>\n        {displayCols()}\n      </tr>\n    </>\n  );\n};\n\nexport default TableLoading;\n","import React from \"react\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport { RiFileExcel2Fill } from \"react-icons/ri\";\n\ninterface ExportToExcelProps {\n  fileData: any[];\n  fileName: string;\n  btnName?: string;\n  className?: string;\n  showIcon?: boolean;\n}\n\nconst ExportToExcel: React.FC<ExportToExcelProps> = ({\n  fileData,\n  fileName,\n  btnName = \"Excel\",\n  className = \"flex items-center gap-1 px-4 py-1 rounded text-green-700 bg-white border hover:text-white hover:bg-green-700 border-green-700 font-bold\",\n  showIcon = true,\n}) => {\n  const fileType =\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n  const fileExtension = \".xlsx\";\n\n  const exportToCSV = (apiData: any[], fileName: string) => {\n    const ws = XLSX.utils.json_to_sheet(apiData);\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n    const data = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n\n  return (\n    <button\n      onClick={(e) => exportToCSV(fileData, fileName)}\n      className={className}\n    >\n      {showIcon && <RiFileExcel2Fill />}\n      {btnName}\n    </button>\n  );\n};\n\nexport default ExportToExcel;\n","export default __webpack_public_path__ + \"static/media/mineduc.11a9ae1c.png\";","import jsPDF from \"jspdf\";\nimport { DATE } from \"../../utils/functions\";\nimport Logo from \"../../utils/mineduc.png\";\nrequire(\"jspdf-autotable\");\n\nexport const addFooters = (doc: any) => {\n  const pageCount = doc.internal.getNumberOfPages();\n\n  doc.setFont(\"helvetica\", \"italic\");\n  doc.setFontSize(8);\n  for (var i = 1; i <= pageCount; i++) {\n    doc.setPage(i);\n    doc.text(\n      \"Page \" + String(i) + \" of \" + String(pageCount),\n      doc.internal.pageSize.width / 2,\n      297,\n      {\n        align: \"center\",\n      }\n    );\n  }\n};\n\nexport type reportSettingsInterface = {\n  doneBy: string;\n  title: string;\n  subjectTitle: string;\n  subject: string;\n  institute: string;\n  period: string;\n  footer: string;\n  orientation?: \"p\" | \"l\";\n};\n\nexport const generatePDF = async (\n  reportSettings: reportSettingsInterface,\n  table: HTMLElement,\n  callBack: (status: boolean) => void\n) => {\n  callBack(true);\n  const orientation: \"p\" | \"l\" = reportSettings.orientation\n    ? reportSettings.orientation\n    : \"p\";\n  var lMargin: number = 20; //left margin in mm\n  var rMargin: number = 20; //right margin in mm\n  var pdfInMM: number = 185; // width of A4 in mm\n\n  //   var doc = new jsPDF(\"p\", \"mm\", \"a4\");\n  var doc: any = new jsPDF(orientation, \"mm\", \"a4\");\n\n  doc.setTextColor(95, 95, 95);\n  doc.setFontSize(28);\n  // doc.text(\n  //   this.props.reportTitle,\n  //   doc.internal.pageSize.getWidth() / 2,\n  //   30,\n  //   undefined,\n  //   \"center\"\n  // );\n  doc.addImage(Logo, \"png\", 20, 20, 10, 10);\n  doc.text(\"MINEDUC\", 32, 28.5, undefined, \"left\");\n  //   doc.setTextColor(19, 90, 152);\n  doc.setFontSize(26);\n  doc.text(\n    reportSettings.title,\n    doc.internal.pageSize.getWidth() / 2,\n    42.7,\n    undefined,\n    \"center\"\n  );\n\n  doc.setFontSize(20);\n  doc.text(\n    reportSettings.institute,\n    doc.internal.pageSize.getWidth() / 2,\n    53.7,\n    undefined,\n    \"center\"\n  );\n\n  var lines;\n  lines = doc.splitTextToSize(\n    reportSettings.subject,\n    pdfInMM - lMargin - rMargin\n  );\n  // if (reportSettings.position) {\n  // } else if (reportSettings.subject) {\n  //   lines = doc.splitTextToSize(\n  //     reportSettings.subject,\n  //     pdfInMM - lMargin - rMargin\n  //   );\n  // }\n\n  //   doc.setTextColor(0, 123, 255);\n  doc.setFontSize(16);\n  //   doc.text(lines, doc.internal.pageSize.getWidth() / 2, 45, {\n  //     maxWidth: 85,\n  //     align: \"center\",\n  //   });\n\n  var y = 63,\n    width;\n  doc.setTextColor(95, 95, 95);\n  doc.text(`${reportSettings.subjectTitle}: `, lMargin, y);\n  width = doc.getTextWidth(`${reportSettings.subjectTitle}: `);\n  // if (reportSettings.position) {\n  // } else if (reportSettings.position) {\n  //   doc.text(`Subject: `, lMargin, y);\n  //   width = doc.getTextWidth(\"Subject: \");\n  // }\n  // doc.setFontType(\"bold\");\n  doc.setTextColor(38, 38, 38);\n  for (var i = 0; i < lines.length; i++) {\n    if (y > 280) {\n      y = 10;\n      doc.addPage();\n    }\n    // doc.text(15, y, lines[i]);\n    doc.text(lines[i], lMargin + width, y);\n    y = y + 7;\n  }\n  doc.setTextColor(95, 95, 95);\n  doc.text(\"Period: \", lMargin, y + 3);\n  width = doc.getTextWidth(\"Period: \");\n  doc.setTextColor(38, 38, 38);\n  doc.text(reportSettings.period, lMargin + width, y + 3);\n\n  doc.autoTable({\n    html: table,\n    startY: 85,\n    margin: { horizontal: 20 },\n    cellPadding: 3, // Horizontal cell padding\n    // fontSize: 12,\n    rowHeight: 20,\n    // styles: { overflow: \"linebreak\" },\n    bodyStyles: { valign: \"top\" },\n    columnStyles: { email: { cellWidth: \"wrap\" } },\n    theme: \"striped\",\n    tableWidth: true,\n  });\n\n  doc.setFontSize(12);\n  let finalY = doc.lastAutoTable.finalY; // The y position on the page\n  doc.text(`Reported by: ${reportSettings.doneBy}`, lMargin, finalY + 15);\n  doc.text(\n    \"Report downloaded on \" + DATE(new Date().toString()),\n    lMargin,\n    finalY + 23\n  );\n\n  addFooters(doc);\n  await doc\n    .save(\n      `${\n        reportSettings.title +\n        \": \" +\n        reportSettings.subject +\n        \": \" +\n        reportSettings.period\n      }.pdf`,\n      { returnPromise: true }\n    )\n    .then(callBack(false));\n};\n","import React, { useState } from \"react\";\nimport {\n  MdCheckCircle,\n  MdRadioButtonUnchecked,\n  MdSearch,\n} from \"react-icons/md\";\nimport Loading from \"../../components/Loading/Loading\";\nimport {\n  PlansInterface,\n  SessionPlanInterface,\n  SessionPlanTypeStatus,\n} from \"../../interfaces\";\nimport { DATE } from \"../../utils/functions\";\nimport searchData from \"../../utils/search\";\n\nexport const isPlansActive = (plans: PlansInterface[]): PlansInterface[] => {\n  let today = new Date();\n  let activePlans: PlansInterface[] = [];\n  for (let plan of plans) {\n    let startDate = new Date(plan.start_date);\n    let endDate = new Date(plan.end_date);\n    if (\n      startDate.getTime() <= today.getTime() &&\n      endDate.getTime() >= today.getTime() &&\n      plan.type_status === SessionPlanTypeStatus.OPEN\n    ) {\n      activePlans = [...activePlans, plan];\n    }\n  }\n  return activePlans;\n};\n\ninterface ChooseSessionProps {\n  allSession: SessionPlanInterface[] | null;\n  setSelectSession: (period: SessionPlanInterface | \"all\") => void;\n  currentSelected: SessionPlanInterface | \"all\";\n  chooseAll: boolean;\n}\n\nconst ChooseSession = (props: ChooseSessionProps) => {\n  const [selectedPlan, setSelectedPlan] = useState<SessionPlanInterface | null>(\n    null\n  );\n  const [search, setSearch] = useState<string>(\"\");\n  const getSearch = (\n    period: SessionPlanInterface[],\n    searched: string\n  ): SessionPlanInterface[] => {\n    return searchData(period, searched) as SessionPlanInterface[];\n  };\n\n  return (\n    <div className=\"\">\n      <div className=\"px-3\">\n        <input\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n            setSearch(e.target.value)\n          }\n          type=\"text\"\n          className=\"py-3 px-4 w-full rounded border border-gray-400 mb-3\"\n          placeholder=\"Search by year, name\"\n          disabled={props.allSession === null || props.allSession.length === 0}\n        />\n      </div>\n\n      <div className=\"bg-gray-100 px-3 pt-3 pb-2 rounded-b\">\n        {props.allSession === null ? (\n          <Loading />\n        ) : props.allSession.length === 0 ? (\n          <div className=\"flex flex-col text-gray-400 items-center justify-center mb-2 bg-white py-4\">\n            <MdSearch className=\"text-6xl\" />\n            <div className=\"flex flex-col items-center justify-center\">\n              <span>No session found!</span>\n            </div>\n          </div>\n        ) : (\n          <section>\n            {props.chooseAll && (\n              <div\n                className={`rounded border ${\n                  props.currentSelected === \"all\"\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2 flex flex-col md:flex-row items-start md:items-center md:justify-between`}\n              >\n                <div className=\"flex flex-row items-center gap-3\">\n                  {props.currentSelected === \"all\" ? (\n                    <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                  ) : (\n                    <MdRadioButtonUnchecked\n                      className={`text-gray-300 text-4xl`}\n                    />\n                  )}\n                  <div className=\"flex flex-col\">\n                    <div className={`text-gray-600 font-bold`}>All session</div>\n                  </div>\n                </div>\n                <div\n                  onClick={() => {\n                    props.setSelectSession(\"all\");\n                  }}\n                  className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                >\n                  Select\n                </div>\n              </div>\n            )}\n            {getSearch(props.allSession, search).map((item, i) => (\n              <div\n                key={i + 1}\n                className={`rounded border ${\n                  props.currentSelected !== \"all\" &&\n                  props.currentSelected._id === item._id\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2`}\n              >\n                <div className=\"flex flex-col md:flex-row items-start md:items-center md:justify-between \">\n                  <div className=\"flex flex-row items-center gap-3\">\n                    {props.currentSelected !== \"all\" &&\n                    props.currentSelected._id === item._id ? (\n                      <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                    ) : (\n                      <MdRadioButtonUnchecked\n                        className={`text-gray-300 text-4xl`}\n                      />\n                    )}\n                    <div className=\"flex flex-col\">\n                      <div\n                        className={`${\n                          props.currentSelected !== \"all\" &&\n                          props.currentSelected._id === item._id\n                            ? \"text-blue-600\"\n                            : \"text-gray-600\"\n                        } font-bold`}\n                      >\n                        {item.session_plan_name}\n                      </div>\n                      <div className=\"text-sm text-gray-500\">\n                        <span>Status: </span>\n                        <span\n                          className={`${\n                            item.is_active === true\n                              ? \"text-gray-900 font-bold underline\"\n                              : \"text-gray-500 italic\"\n                          }`}\n                        >\n                          {item.is_active === true ? \"Active\" : \"Expired\"}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"flex flex-row items-center gap-2\">\n                    {(selectedPlan === null ||\n                      selectedPlan._id !== item._id) && (\n                      <div\n                        onClick={() => setSelectedPlan(item)}\n                        className=\"bg-gray-50 group-hover:bg-blue-100 font-semibold text-gray-400 group-hover:text-blue-600 rounded px-3 py-2 cursor-pointer\"\n                      >\n                        Details\n                      </div>\n                    )}\n                    <div\n                      onClick={() => {\n                        props.setSelectSession(item);\n                      }}\n                      className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                    >\n                      Select\n                    </div>\n                    {selectedPlan !== null && selectedPlan._id === item._id && (\n                      <div\n                        onClick={() => setSelectedPlan(null)}\n                        className=\"bg-red-100 group-hover:bg-red-200 font-semibold text-red-600 group-hover:text-red-800 rounded px-3 py-2 cursor-pointer\"\n                      >\n                        Close\n                      </div>\n                    )}\n                  </div>\n                </div>\n                {selectedPlan !== null && selectedPlan._id === item._id && (\n                  <div className=\"bg-white rounded border border-blue-50 mt-2 animate__animated animate__fadeIn\">\n                    <table className=\"w-full\">\n                      <thead className=\"bg-blue-50\">\n                        <tr className=\"text-left\">\n                          <th className=\"px-3 py-3\">#</th>\n                          <th>Plan</th>\n                          <th>Start date</th>\n                          <th>Ending date</th>\n                          <th>Status</th>\n                        </tr>\n                      </thead>\n                      <tbody className=\"text-sm\">\n                        {selectedPlan !== null &&\n                          selectedPlan._id === item._id &&\n                          selectedPlan.plans.length > 0 &&\n                          item.plans.map((plan, i) => (\n                            <tr\n                              key={i + 1}\n                              className={`${\n                                isPlansActive(item.plans).find(\n                                  (itm) => itm.type_key === plan.type_key\n                                ) !== undefined\n                                  ? \"bg-blue-100 text-blue-600 font-bold\"\n                                  : \"\"\n                              } text-left border-b border-blue-50`}\n                            >\n                              <td className=\"px-3 py-1\">{i + 1}</td>\n                              <td>{plan.type_title}</td>\n                              <td>{DATE(plan.start_date, \"DD/MM/YYYY\")}</td>\n                              <td>{DATE(plan.end_date, \"DD/MM/YYYY\")}</td>\n                              <td>{plan.type_status}</td>\n                            </tr>\n                          ))}\n                      </tbody>\n                    </table>\n                  </div>\n                )}\n              </div>\n            ))}\n          </section>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(ChooseSession);\n","import { PContractItem } from \"./candidate_placement_contract\";\n\nexport type ViewContractType = {\n  province: PContractItem;\n  district: PContractItem;\n  sector: PContractItem;\n  school: PContractItem;\n};\nexport interface WaitingListInterface {\n  _id: string;\n  status: WaitingListStatus;\n  user_id: string;\n  marks: number;\n  in_education: boolean;\n  session_id: string;\n  position_id: string;\n  gender: string;\n  createdAt: string;\n  updatedAt: string;\n  __v: number;\n  n_id: string;\n  phone_number: string;\n  email: string;\n  contract: ViewContractType;\n  user_info: {\n    document_type: string;\n    issue_number: string;\n    date_of_issue: string;\n    date_of_expiry: string;\n    place_of_issue: string;\n    application_number: string;\n    fname: string;\n    lname: string;\n    father_names: string;\n    mother_names: string;\n    sex: string;\n    date_of_birth: string;\n    place_of_birth: string;\n    country_of_birth: string;\n    village_id: string;\n    village: string;\n    cell: string;\n    sector: string;\n    district: string;\n    province: string;\n    civil_status: string;\n    spouse: null;\n    status: string;\n    photo: string;\n  };\n}\n\nexport enum WaitingListStatus {\n  WAITING = \"waiting\",\n  PENDING = \"pending\",\n  PLACED = \"placed\",\n}\n\nexport enum applicantGender {\n  male = \"Male\",\n  female = \"Female\",\n  null = \"-\",\n}\n\nexport interface WaitingListToPrintInterface {\n  id: string;\n  names: string;\n  gender: string;\n  national_id: string;\n  phone: string;\n  email: string;\n  user_position_marks: number;\n  position_title: string;\n  education_category: string;\n  waitingList_session: string;\n  date: string;\n  waiting_status: string;\n}\nexport interface WaitingListDataInterface {\n  waitingList_id: string;\n  names: string;\n  gender: applicantGender;\n  national_id: string;\n  phone: string;\n  email: string;\n  user_position_marks: number;\n  position_id: string;\n  position_title: string;\n  education_category_id: string;\n  education_category: string;\n  waitingList_session: string;\n  waitingList_session_id: string;\n  date: string;\n  waiting_status: string;\n  status: WaitingListStatus;\n}\n\nexport enum waitingListReportContentKeyInterface {\n  names = \"names\",\n  gender = \"gender\",\n  national_id = \"national_id\",\n  email = \"email\",\n  phone = \"phone\",\n  user_position_marks = \"user_position_marks\",\n  position_title = \"position_title\",\n  education_category = \"education_category\",\n  date = \"date\",\n  waiting_status = \"waiting_status\",\n  waitingList_session = \"waitingList_session\",\n}\n\nexport interface waitingListReportContentInterface {\n  key: waitingListReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n","import React from \"react\";\nimport { FaAngleDoubleRight } from \"react-icons/fa\";\nimport { ContractItemList } from \"../../containers/PlacementContract/Contract/Contract\";\n\ninterface AppProps {\n  data: ContractItemList[];\n  strict: boolean;\n  //   expandClick?: () => void;\n  //   loading: boolean;\n}\n\nconst DistrictView: React.FC<AppProps> = (props) => {\n  const displayMessage = (): JSX.Element => {\n    let result: JSX.Element = <></>;\n    let districts: string = \"\";\n    if (props.data.length === 0)\n      result = (\n        <p>\n          The system will place me in the available posts from all districts of\n          the selected provinces.\n        </p>\n      );\n    else if (props.strict === false && props.data.length > 0) {\n      props.data.forEach((district, index) => {\n        districts += district.title;\n        if (index <= props.data.length - 1) districts += \", \";\n      });\n\n      result = (\n        <p>\n          The system will place you in the available posts{\" \"}\n          <span className=\"font-semibold\">starting</span> from{\" \"}\n          <span className=\"font-semibold\">{districts}</span> and all remaining\n          districts.\n        </p>\n      );\n    } else if (props.strict === true && props.data.length > 0) {\n      props.data.forEach((district, index) => {\n        districts += district.title;\n        if (index <= props.data.length - 2) districts += \", \";\n        if (index === props.data.length - 2 && index > 0) districts += \" and \";\n      });\n\n      result = (\n        <p>\n          The system will <span className=\"font-semibold\">only</span> place me\n          in available posts in{\" \"}\n          <span className=\"font-semibold\">{districts}</span>.\n        </p>\n      );\n    }\n    return result;\n  };\n\n  return (\n    <div className=\"bg-white mt-9 px-4\">\n      <div className=\"flex flex-row items-center gap-1\">\n        <FaAngleDoubleRight />\n        <span className={`font-extrabold text-lg`}>\n          Preferences at district level\n        </span>\n      </div>\n\n      <p>{displayMessage()}</p>\n    </div>\n  );\n};\n\nexport default DistrictView;\n","import React from \"react\";\nimport { FaAngleDoubleRight } from \"react-icons/fa\";\nimport { ContractItemList } from \"../../containers/PlacementContract/Contract/Contract\";\n\ninterface AppProps {\n  data: ContractItemList[];\n  strict: boolean;\n  //   expandClick?: () => void;\n  //   loading: boolean;\n}\n\nconst ProvinceView: React.FC<AppProps> = (props) => {\n  const displayMessage = (): JSX.Element => {\n    let result: JSX.Element = <></>;\n    let provinces: string = \"\";\n    if (props.data.length === 0)\n      result = (\n        <p>\n          The system will place me in the available posts from all provinces.\n        </p>\n      );\n    else if (props.strict === false && props.data.length > 0) {\n      props.data.forEach((province, index) => {\n        provinces += province.title;\n        if (index <= props.data.length - 1) provinces += \", \";\n      });\n\n      result = (\n        <p>\n          The system will place me in the available posts{\" \"}\n          <span className=\"font-semibold\">starting</span> from{\" \"}\n          <span className=\"font-semibold\">{provinces}</span> and all remaining\n          provinces.\n        </p>\n      );\n    } else if (props.strict === true && props.data.length > 0) {\n      props.data.forEach((province, index) => {\n        provinces += province.title;\n        if (index <= props.data.length - 2) provinces += \", \";\n        if (index === props.data.length - 2 && index > 0) provinces += \" and \";\n      });\n\n      result = (\n        <p>\n          The system will <span className=\"font-semibold\">only</span> place me\n          in available posts in{\" \"}\n          <span className=\"font-semibold\">{provinces}</span>.\n        </p>\n      );\n    }\n    return result;\n  };\n\n  return (\n    <div className=\"bg-white mt-9 px-4\">\n      <div className=\"flex flex-row items-center gap-1\">\n        <FaAngleDoubleRight />\n        <span className={`font-extrabold text-lg`}>\n          Preferences at province level\n        </span>\n      </div>\n\n      <p>{displayMessage()}</p>\n    </div>\n  );\n};\n\nexport default ProvinceView;\n","import React from \"react\";\nimport { FaAngleDoubleRight } from \"react-icons/fa\";\nimport { ContractItemList } from \"../../containers/PlacementContract/Contract/Contract\";\n\ninterface AppProps {\n  data: ContractItemList[];\n  strict: boolean;\n  //   expandClick?: () => void;\n  //   loading: boolean;\n}\n\nconst SchoolView: React.FC<AppProps> = (props) => {\n  const displayMessage = (): JSX.Element => {\n    let result: JSX.Element = <></>;\n    let schools: string = \"\";\n    if (props.data.length === 0)\n      result = (\n        <p>\n          The system will place me in the available posts from all Schools of\n          the selected provinces, districts, and sectors.\n        </p>\n      );\n    else if (props.strict === false && props.data.length > 0) {\n      props.data.forEach((school, index) => {\n        schools += school.title;\n        if (index <= props.data.length - 1) schools += \", \";\n      });\n\n      result = (\n        <p>\n          The system will place me in the available posts{\" \"}\n          <span className=\"font-semibold\">starting</span> from{\" \"}\n          <span className=\"font-semibold\">{schools}</span> and in all remaining\n          schools from the selected schools, districts, and sectors.\n        </p>\n      );\n    } else if (props.strict === true && props.data.length > 0) {\n      props.data.forEach((school, index) => {\n        schools += school.title;\n        if (index <= props.data.length - 2) schools += \", \";\n        if (index === props.data.length - 2 && index > 0) schools += \" and \";\n      });\n\n      result = (\n        <p>\n          The system will <span className=\"font-semibold\">only</span> place me\n          in available posts in <span className=\"font-semibold\">{schools}</span>\n          .\n        </p>\n      );\n    }\n    return result;\n  };\n\n  return (\n    <div className=\"bg-white mt-9 px-4\">\n      <div className=\"flex flex-row items-center gap-1\">\n        <FaAngleDoubleRight />\n        <span className={`font-extrabold text-lg`}>\n          Preferences at school level\n        </span>\n      </div>\n\n      <p>{displayMessage()}</p>\n    </div>\n  );\n};\n\nexport default SchoolView;\n","import React from \"react\";\nimport { FaAngleDoubleRight } from \"react-icons/fa\";\nimport { ContractItemList } from \"../../containers/PlacementContract/Contract/Contract\";\n\ninterface AppProps {\n  data: ContractItemList[];\n  strict: boolean;\n  //   expandClick?: () => void;\n  //   loading: boolean;\n}\n\nconst SectorView: React.FC<AppProps> = (props) => {\n  const displayMessage = (): JSX.Element => {\n    let result: JSX.Element = <></>;\n    let sectors: string = \"\";\n    if (props.data.length === 0)\n      result = (\n        <p>The system will place me in the available posts from all sectors.</p>\n      );\n    else if (props.strict === false && props.data.length > 0) {\n      props.data.forEach((sector, index) => {\n        sectors += sector.title;\n        if (index <= props.data.length - 1) sectors += \", \";\n      });\n\n      result = (\n        <p>\n          The system will place me in the available posts{\" \"}\n          <span className=\"font-semibold\">starting</span> from{\" \"}\n          <span className=\"font-semibold\">{sectors}</span> and all remaining\n          sectors of the selected provinces and districts.\n        </p>\n      );\n    } else if (props.strict === true && props.data.length > 0) {\n      props.data.forEach((sector, index) => {\n        sectors += sector.title;\n        if (index <= props.data.length - 2) sectors += \", \";\n        if (index === props.data.length - 2 && index > 0) sectors += \" and \";\n      });\n\n      result = (\n        <p>\n          The system will <span className=\"font-semibold\">only</span> place me\n          in available posts in <span className=\"font-semibold\">{sectors}</span>\n          .\n        </p>\n      );\n    }\n    return result;\n  };\n\n  return (\n    <div className=\"bg-white mt-9 px-4\">\n      <div className=\"flex flex-row items-center gap-1\">\n        <FaAngleDoubleRight />\n        <span className={`font-extrabold text-lg`}>\n          Preferences at sector level\n        </span>\n      </div>\n\n      <p>{displayMessage()}</p>\n    </div>\n  );\n};\n\nexport default SectorView;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  FC_getLocations,\n  FC_LoadSchoolsByDistrict,\n  FC_LoadSchoolsByIDs,\n  FT_LoadSchoolsByDistrict,\n  FT_LoadSchoolsByIDs,\n  LocationAPI,\n  SchoolContract,\n} from \"../../actions\";\nimport {\n  FC_GetWaitingLocationList,\n  FT_GetWaitingLocationList,\n} from \"../../actions/location\";\nimport { ContractItemList } from \"../../containers/PlacementContract/Contract/Contract\";\nimport { ViewContractType } from \"../../interfaces/waitingList\";\nimport { StoreState } from \"../../reducers\";\nimport Loading from \"../Loading/Loading\";\nimport DistrictView from \"./DistrictView\";\nimport ProvinceView from \"./ProvinceView\";\nimport SchoolView from \"./SchoolView\";\nimport SectorView from \"./SectorView\";\n\ninterface ContractViewerProps {\n  // FROM PROPS\n  candidates: string;\n  position: string;\n  contract: ViewContractType;\n\n  // FROM REDUX =========\n  locations: LocationAPI | null;\n  FC_LoadSchoolsByDistrict: FT_LoadSchoolsByDistrict;\n  FC_LoadSchoolsByIDs: FT_LoadSchoolsByIDs;\n  FC_GetWaitingLocationList: FT_GetWaitingLocationList;\n}\n\ninterface ContractViewerState {\n  loading: boolean;\n  selectedSchool: SchoolContract[] | null;\n}\n\nclass ContractViewer extends Component<\n  ContractViewerProps,\n  ContractViewerState\n> {\n  constructor(props: ContractViewerProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      selectedSchool: null,\n    };\n  }\n\n  componentDidMount = () => {\n    if (this.props.locations === null)\n      FC_getLocations(\n        (status: boolean, data: LocationAPI | null, msg: string) => {\n          if (status === true && data !== null) {\n            this.props.FC_GetWaitingLocationList(data);\n            this.setState({\n              loading: false,\n            });\n          } else {\n            this.setState({\n              loading: false,\n            });\n          }\n        }\n      );\n    // else this.setState({ loading: false });\n    if (\n      this.state.selectedSchool === null &&\n      this.props.contract.school.values.length >= 1\n    ) {\n      this.setState({\n        loading: true,\n      });\n      this.props.FC_LoadSchoolsByIDs(\n        this.props.contract.school.values.map((itm) => itm.toString()),\n        (status, schools, err) => {\n          if (status === true) {\n            this.setState({\n              selectedSchool: schools,\n              loading: false,\n            });\n          }\n        }\n      );\n    } else this.setState({ loading: false, selectedSchool: [] });\n  };\n\n  render() {\n    if (\n      this.state.loading === true ||\n      this.props.locations === null ||\n      this.state.selectedSchool === null\n    ) {\n      return (\n        <div className=\"bg-white mt-6 mx-6 p-6 h-full flex flex-col items-start justify-center rounded\">\n          <div className=\"text-xl mx-4 my-4 animate-pulse\">\n            Loading contract, Please wait...\n          </div>\n          <Loading />\n        </div>\n      );\n    }\n\n    let ProvincesList: ContractItemList[] = [];\n    let DistrictList: ContractItemList[] = [];\n    let SectorList: ContractItemList[] = [];\n\n    if (this.props.contract !== null) {\n      // * Province\n      this.props.contract.province.values.forEach((el) => {\n        if (this.props.locations !== null) {\n          let findIt = this.props.locations.provinces.find(\n            (element) => element.province_code === el.toString()\n          );\n          if (findIt !== undefined) {\n            ProvincesList.push({\n              id: findIt.province_code,\n              title: findIt.province_name,\n            } as ContractItemList);\n          }\n        }\n      });\n\n      // * Province\n      this.props.contract.district.values.forEach((el) => {\n        if (this.props.locations !== null) {\n          let findIt = this.props.locations.districts.find(\n            (element) => element.district_code === el.toString()\n          );\n          if (findIt !== undefined) {\n            DistrictList.push({\n              id: findIt.district_code,\n              title: findIt.district_name,\n            } as ContractItemList);\n          }\n        }\n      });\n\n      // * Sector\n      this.props.contract.sector.values.forEach((el) => {\n        if (this.props.locations !== null) {\n          let findIt = this.props.locations.sectors.find(\n            (element) => element.sector_code === el.toString()\n          );\n          if (findIt !== undefined) {\n            SectorList.push({\n              id: findIt.sector_code,\n              title: findIt.sector_name,\n            } as ContractItemList);\n          }\n        }\n      });\n    }\n\n    const thisCandidate: JSX.Element = (\n      <span className=\"font-semibold\">{this.props.candidates}</span>\n    );\n    const thisPosition: JSX.Element = (\n      <span className=\"font-semibold\">{this.props.position}</span>\n    );\n\n    return (\n      <div className=\"pb-4\">\n        <div className=\"px-4\">\n          <h2 className=\"text-black text-center font-semibold text-2xl sm:text-3xl underline\">\n            Placement Preferences\n          </h2>\n\n          <div className=\"mt-6 text-lg flex flex-col\">\n            <p>Names: {thisCandidate}</p>\n            <p>Position: {thisPosition}</p>\n          </div>\n\n          {/* <p className=\"mt-5\">\n            This preferences were made by {thisCandidate} on {thisPosition}, by\n            Tempor in laborum culpa et consectetur elit occaecat cupidatat est\n            voluptate tempor deserunt non ea.\n          </p> */}\n        </div>\n\n        <ProvinceView\n          data={ProvincesList}\n          strict={this.props.contract.province.strict}\n        />\n\n        <DistrictView\n          data={DistrictList}\n          strict={this.props.contract.district.strict}\n        />\n\n        <SectorView\n          data={SectorList}\n          strict={this.props.contract.sector.strict}\n        />\n\n        <SchoolView\n          data={this.state.selectedSchool.map((itm) => ({\n            id: itm.school_code,\n            title: itm.school_name,\n          }))}\n          strict={this.props.contract.school.strict}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  locations,\n}: StoreState): {\n  locations: LocationAPI | null;\n} => {\n  return { locations: locations.waitingLocation };\n};\nexport default React.memo(\n  connect(mapStateToProps, {\n    FC_LoadSchoolsByDistrict,\n    FC_LoadSchoolsByIDs,\n    FC_GetWaitingLocationList,\n  })(ContractViewer)\n);\n","import React, { Component, Fragment } from \"react\";\nimport { BiExport, BiFilterAlt, BiSort } from \"react-icons/bi\";\nimport { FiEdit } from \"react-icons/fi\";\nimport { ImFilesEmpty } from \"react-icons/im\";\nimport { IoIosBriefcase } from \"react-icons/io\";\nimport { IoFilter } from \"react-icons/io5\";\nimport {\n  MdCheckBox,\n  MdCheckBoxOutlineBlank,\n  MdHistory,\n  MdRadioButtonChecked,\n  MdRadioButtonUnchecked,\n  MdSearch,\n} from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  schoolLevelsStoreInterface,\n  loadEducationCategories,\n  PushPopupAlert,\n} from \"../../../actions\";\nimport { FC_GetAllSessionByInstitution } from \"../../../actions/session\";\nimport { FC_GetPositionsByInstitution } from \"../../../actions/settings\";\nimport { getWaitingList } from \"../../../actions/waitingList\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport ContractViewer from \"../../../components/ContractViewer/ContractViewer\";\nimport {\n  generatePDF,\n  reportSettingsInterface,\n} from \"../../../components/DownloadPDF/rest\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport LoadingV2, { LoadingType } from \"../../../components/Loading/LoadingV2\";\nimport TableLoading from \"../../../components/Loading/TableLoading\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport {\n  SideNavigation,\n  MainItem,\n} from \"../../../components/Navigation/SideNavigation\";\nimport {\n  SessionPlanInterface,\n  PositionAPI,\n  education_category,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport {\n  applicantGender,\n  WaitingListDataInterface,\n  WaitingListInterface,\n  waitingListReportContentInterface,\n  waitingListReportContentKeyInterface,\n  WaitingListStatus,\n  WaitingListToPrintInterface,\n} from \"../../../interfaces/waitingList\";\nimport { StoreState } from \"../../../reducers\";\nimport {\n  capitalizeFirstLetter,\n  capitalizeFirstWord,\n  getPositionById,\n} from \"../../../shared/dataTest\";\nimport ExportToExcel from \"../../../utils/ExportToExcel\";\nimport {\n  DATE,\n  FC_HasInstitute,\n  search,\n  sortThisArray,\n} from \"../../../utils/functions\";\nimport ChooseSession from \"../../SessionSettings/ChooseSession\";\nimport NoSession from \"../../SessionSettings/NoSession\";\n\nexport const getPeriodById = (\n  allSession: SessionPlanInterface[],\n  period_id: string\n): SessionPlanInterface | undefined => {\n  return allSession.find((item) => item._id === period_id);\n};\n\nconst searchData = (\n  objList: WaitingListDataInterface[],\n  text: string\n): WaitingListDataInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (\n        prop === \"names\" ||\n        prop === \"gender\" ||\n        prop === \"national_id\" ||\n        prop === \"phone\" ||\n        prop === \"email\" ||\n        prop === \"user_position_marks\" ||\n        prop === \"position_title\" ||\n        prop === \"education_category\" ||\n        prop === \"waitingList_session\" ||\n        prop === \"date\" ||\n        prop === \"waiting_status\"\n      ) {\n        if (product[prop]) {\n          flag =\n            product[prop]!.toString()\n              .toLowerCase()\n              .indexOf(text.toLowerCase()) > -1;\n        }\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n};\n\nconst defaultReportContent: waitingListReportContentInterface[] = [\n  {\n    key: waitingListReportContentKeyInterface.names,\n    title: \"Applicant Names\",\n    status: true,\n  },\n  {\n    key: waitingListReportContentKeyInterface.national_id,\n    title: \"National ID\",\n    status: true,\n  },\n  {\n    key: waitingListReportContentKeyInterface.gender,\n    title: \"Gender\",\n    status: true,\n  },\n  {\n    key: waitingListReportContentKeyInterface.phone,\n    title: \"Phone\",\n    status: true,\n  },\n  {\n    key: waitingListReportContentKeyInterface.user_position_marks,\n    title: \"Applicant marks\",\n    status: true,\n  },\n  {\n    key: waitingListReportContentKeyInterface.waitingList_session,\n    title: \"Waiting list Session\",\n    status: true,\n  },\n  {\n    key: waitingListReportContentKeyInterface.education_category,\n    title: \"Education Institute\",\n    status: true,\n  },\n  {\n    key: waitingListReportContentKeyInterface.date,\n    title: \"Waiting list Date\",\n    status: true,\n  },\n  {\n    key: waitingListReportContentKeyInterface.waiting_status,\n    title: \"Waiting list Status\",\n    status: true,\n  },\n  {\n    key: waitingListReportContentKeyInterface.position_title,\n    title: \"Position\",\n    status: true,\n  },\n];\n\ntype AppProps = {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  systemPositions: PositionAPI[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  waitingList: WaitingListInterface[] | null;\n  getWaitingList: Function;\n  FC_GetPositionsByInstitution: Function;\n  FC_GetAllSessionByInstitution: Function;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype AppState = {\n  thisPeriod: SessionPlanInterface | \"all\";\n  loading: boolean;\n  loadingWaitingList: boolean;\n  waitingListToPrint: WaitingListToPrintInterface[] | null;\n  thisWaitingListStatus: WaitingListStatus | \"all\";\n  thisPosition: PositionAPI | null;\n  selectPosition: boolean;\n  sortProperty: string;\n  isSorted: boolean;\n  sortOrder: \"ASC\" | \"DESC\";\n  searchInput: string;\n  searchPositionInput: string;\n  downloading: boolean;\n  generateReportModal: {\n    reportType: \"EXCEL\" | \"PDF\";\n    status: boolean;\n  } | null;\n  reportTitle: string;\n  reportContent: waitingListReportContentInterface[];\n  selectAll: boolean;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  selectPeriod: boolean;\n  selectedWaiting: WaitingListDataInterface | null;\n  thisEducation: education_category | \"all\";\n};\n\nclass _WaitingListReport extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      thisPeriod: \"all\",\n      loading: true,\n      loadingWaitingList: true,\n      waitingListToPrint: null,\n      thisWaitingListStatus: \"all\",\n      thisPosition: null,\n      selectPosition: false,\n      sortProperty: \"\",\n      isSorted: false,\n      sortOrder: \"ASC\",\n      searchInput: \"\",\n      searchPositionInput: \"\",\n      downloading: false,\n      generateReportModal: null,\n      reportTitle: \"\",\n      reportContent: defaultReportContent,\n      selectAll: true,\n      formError: null,\n      selectPeriod: false,\n      thisEducation: \"all\",\n      selectedWaiting: null,\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingWaitingList = (value: boolean) => {\n    this.setState({ loadingWaitingList: value });\n  };\n\n  setThisPeriod = (value: SessionPlanInterface | \"all\") => {\n    this.setState({ thisPeriod: value });\n  };\n\n  setWaitingListToPrint = (value: WaitingListToPrintInterface[] | null) => {\n    this.setState({ waitingListToPrint: value });\n  };\n\n  setThisWaitingListStatus = (value: WaitingListStatus | \"all\") => {\n    this.setState({ thisWaitingListStatus: value });\n  };\n\n  setThisPosition = (value: PositionAPI | null) => {\n    this.setState({ thisPosition: value });\n  };\n\n  setSelectPosition = (value: boolean) => {\n    this.setState({ selectPosition: value });\n  };\n\n  setSortProperty = (value: string | \"all\") => {\n    this.setState({ sortProperty: value });\n  };\n\n  setIsSorted = (value: boolean) => {\n    this.setState({ isSorted: value });\n  };\n\n  setSortOrder = (value: \"ASC\" | \"DESC\") => {\n    this.setState({ sortOrder: value });\n  };\n\n  setSearchInput = (value: string) => {\n    this.setState({ searchInput: value });\n  };\n\n  setSearchPositionInput = (value: string) => {\n    this.setState({ searchPositionInput: value });\n  };\n\n  setDownloading = (value: boolean) => {\n    this.setState({ downloading: value });\n  };\n\n  setGenerateReportModal = (\n    value: {\n      reportType: \"EXCEL\" | \"PDF\";\n      status: boolean;\n    } | null\n  ) => {\n    this.setState({ generateReportModal: value });\n  };\n\n  setReportTitle = (value: string) => {\n    this.setState({ reportTitle: value });\n  };\n\n  setReportContent = (value: waitingListReportContentInterface[]) => {\n    this.setState({ reportContent: value });\n  };\n\n  setSelectAll = (value: boolean) => {\n    this.setState({ selectAll: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n\n  setSelectPeriod = (value: boolean) => {\n    this.setState({ selectPeriod: value });\n  };\n\n  setThisEducation = (value: education_category | \"all\") => {\n    this.setState({ thisEducation: value });\n  };\n\n  FC_OnInstitutionChanged = (institution_id: string) => {\n    // LOADING APPLICATION SESSION ====================================\n    this.props.FC_GetAllSessionByInstitution(\n      institution_id,\n      (status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (!status) {\n          if (msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      }\n    );\n    // END LOADING APPLICATION SESSION ====================================\n    // ###################################################################\n    // LOADING POSITIONS ====================================\n    this.props.FC_GetPositionsByInstitution(\n      institution_id,\n      (status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      }\n    );\n\n    // LOADING WAITING LIST ========================================\n    this.props.getWaitingList((status: boolean, msg: string) => {\n      this.setLoadingWaitingList(status);\n      if (status === false) {\n        if (msg.length > 0) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      }\n    });\n    // END LOADING CLAIM TYPES ========================================\n  };\n\n  componentDidMount = () => {\n    // LOADING EDUCATION CATEGORY =================================\n    if (FC_HasInstitute(this.props.auth.education_institution_id) === true) {\n      this.FC_OnInstitutionChanged(this.props.auth.education_institution_id!);\n    } else {\n      if (\n        this.props.schoolLevels.education_categories === null ||\n        this.props.schoolLevels.education_categories.length\n      ) {\n        this.props.loadEducationCategories(\n          (status: boolean, data?: education_category[]) => {\n            this.setLoading(status);\n            if (!status && data && data.length > 0) {\n              this.setThisEducation(data[0]);\n              if (\n                FC_HasInstitute(this.props.auth.education_institution_id) ===\n                false\n              ) {\n                this.FC_OnInstitutionChanged(data[0].education_institute_id);\n              } else {\n                this.FC_OnInstitutionChanged(\n                  this.props.auth.education_institution_id!\n                );\n              }\n            }\n          }\n        );\n      } else if (!this.props.schoolLevels.selectedEducationCategory) {\n        this.setThisEducation(this.props.schoolLevels.education_categories[0]);\n        this.FC_OnInstitutionChanged(\n          this.props.schoolLevels.education_categories[0].education_institute_id\n        );\n      }\n    }\n    // END LOADING EDUCATION CATEGORY =================================\n  };\n\n  setSort = (thisProperty: string) => {\n    if (\n      this.state.sortProperty === thisProperty &&\n      this.state.sortOrder === \"ASC\"\n    ) {\n      this.setSortOrder(\"DESC\");\n    } else {\n      this.setSortOrder(\"ASC\");\n    }\n    this.setSortProperty(thisProperty);\n    this.setIsSorted(true);\n  };\n\n  showStatus = (status: WaitingListStatus | \"all\"): string => {\n    let result: string = \"\";\n    switch (status) {\n      case WaitingListStatus.WAITING:\n        result = \"Waiting\";\n        break;\n      case WaitingListStatus.PENDING:\n        result = \"Placed & pending\";\n        break;\n      case WaitingListStatus.PLACED:\n        result = \"Placed & confirmed\";\n        break;\n      default:\n        result = \"All\";\n        break;\n    }\n\n    return result;\n  };\n\n  FC_WaitingListStatus = (\n    WaitingList: WaitingListDataInterface[]\n  ): {\n    title: string;\n    count: number;\n    type: WaitingListStatus | \"all\";\n  }[] => {\n    let output: {\n      title: string;\n      count: number;\n      type: WaitingListStatus | \"all\";\n    }[] = [{ title: \"All status\", count: WaitingList.length, type: \"all\" }];\n    const statusArray = Object.values(WaitingListStatus);\n    for (let i in statusArray) {\n      output.push({\n        title: capitalizeFirstLetter(statusArray[i]),\n        count: WaitingList.filter((itm) => itm.status === statusArray[i])\n          .length,\n        type: statusArray[i],\n      });\n    }\n    return output;\n  };\n\n  updateReportContent = (key: waitingListReportContentKeyInterface) => {\n    let index: number = this.state.reportContent.findIndex(\n      (item) => item.key === key\n    );\n    let newArray: waitingListReportContentInterface[] =\n      this.state.reportContent;\n    newArray[index].status = !newArray[index].status;\n    this.setReportContent(newArray);\n    let isSelectAllNeeded = newArray.find((item) => item.status === false);\n    if (isSelectAllNeeded) {\n      this.setSelectAll(false);\n    } else {\n      this.setSelectAll(true);\n    }\n\n    // UPDATE APPLICATION LIST FOR UPDATE ==============================\n    this.updateWaitingListToPrint();\n  };\n\n  updateWaitingListToPrint = () => {\n    // UPDATE REPORT TITLE ========================\n    if (this.state.thisPosition) {\n      let session: string = \"\";\n      if (this.state.thisPeriod === \"all\") {\n        session = \"All session\";\n      } else {\n        session = this.state.thisPeriod.session_plan_name;\n      }\n      this.setReportTitle(\n        \"Waiting list - \" +\n          this.state.thisPosition.position_title +\n          \" - \" +\n          session\n      );\n    }\n    // UPDATE CONTENT =============================\n    if (\n      this.props.systemPositions &&\n      this.props.waitingList &&\n      this.props.application_sessions\n    ) {\n      let arrayNew: WaitingListToPrintInterface[] = [];\n      let n: number = 1;\n      for (const key in this.props.waitingList) {\n        if (Object.prototype.hasOwnProperty.call(this.props.waitingList, key)) {\n          const element = this.props.waitingList[key];\n          const thisPosition = getPositionById(\n            this.props.systemPositions,\n            element.position_id\n          );\n          const thisSession = getPeriodById(\n            this.props.application_sessions,\n            element.session_id\n          );\n          let dataArray: WaitingListToPrintInterface = {\n            id: n.toString(),\n            names: element.user_info.fname + \" \" + element.user_info.lname,\n            gender: element.user_info.sex === \"M\" ? \"Male\" : \"Female\",\n            national_id: element.n_id,\n            phone: element.phone_number,\n            email: element.email,\n            user_position_marks: Number(element.marks.toFixed(2)),\n            position_title: thisPosition\n              ? thisPosition.position_title\n              : \"Unknown position\",\n            education_category: thisPosition\n              ? thisPosition.education_institute_id.education_category_title\n              : \"-\",\n            waitingList_session: thisSession\n              ? thisSession.session_plan_name\n              : \"Unknown session\",\n            date: DATE(element.createdAt),\n            waiting_status: this.showStatus(element.status),\n          };\n\n          for (const key in this.state.reportContent) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                this.state.reportContent,\n                key\n              )\n            ) {\n              if (!this.state.reportContent[key].status) {\n                delete dataArray[this.state.reportContent[key].key];\n              }\n            }\n          }\n          arrayNew.push(dataArray);\n          n++;\n        }\n      }\n      this.setWaitingListToPrint(arrayNew);\n      arrayNew = [];\n      n = 1;\n    }\n  };\n\n  FC_WaitingListData = (\n    allWaitList: WaitingListInterface[] | null,\n    systemPositions: PositionAPI[] | null\n  ): WaitingListDataInterface[] | null => {\n    if (\n      allWaitList === null ||\n      systemPositions === null ||\n      this.props.application_sessions === null\n    )\n      return null;\n    let arrayNew: WaitingListDataInterface[] = [];\n    // LOOP IN ALL WAITING LIST ONE BY ONE ###########################\n    for (const key in allWaitList) {\n      const element = allWaitList[key];\n      if (element.user_info) {\n        const thisPosition = getPositionById(\n          systemPositions,\n          element.position_id\n        );\n        const thisSession = getPeriodById(\n          this.props.application_sessions,\n          element.session_id\n        );\n        let dataArray: WaitingListDataInterface = {\n          names: element.user_info.fname + \" \" + element.user_info.lname,\n          waitingList_id: element._id,\n          gender:\n            element.user_info.sex === \"M\"\n              ? applicantGender.male\n              : applicantGender.female,\n          national_id: element.n_id,\n          phone: element.phone_number,\n          email: element.email,\n          user_position_marks: Number(element.marks.toFixed(2)),\n          position_id: thisPosition\n            ? thisPosition.position_id\n            : \"Unknown position\",\n          position_title: thisPosition\n            ? thisPosition.position_title\n            : \"Unknown position\",\n          education_category: thisPosition\n            ? thisPosition.education_institute_id.education_category_title\n            : \"\",\n          education_category_id: thisPosition\n            ? thisPosition.education_institute_id.education_institute_id\n            : \"\",\n          waitingList_session: thisSession\n            ? thisSession.session_plan_name\n            : \"Unknown session\",\n          date: DATE(element.createdAt),\n          waiting_status: this.showStatus(element.status),\n          status: element.status,\n          waitingList_session_id: element.session_id,\n        };\n        arrayNew.push(dataArray);\n      }\n    }\n    return arrayNew;\n  };\n\n  resetReportContent = (currentState: boolean) => {\n    let newArray: waitingListReportContentInterface[] =\n      this.state.reportContent;\n    for (const key in newArray) {\n      if (this.isChangeAllowed(newArray[key].key)) {\n        newArray[key].status = !currentState;\n      }\n    }\n\n    this.setReportContent(newArray);\n    this.setSelectAll(!currentState);\n    this.updateWaitingListToPrint();\n  };\n\n  isChangeAllowed = (key: waitingListReportContentKeyInterface): boolean => {\n    if (\n      key === waitingListReportContentKeyInterface.names ||\n      key === waitingListReportContentKeyInterface.waiting_status ||\n      key === waitingListReportContentKeyInterface.waitingList_session ||\n      key === waitingListReportContentKeyInterface.position_title ||\n      key === waitingListReportContentKeyInterface.date ||\n      key === waitingListReportContentKeyInterface.user_position_marks ||\n      key === waitingListReportContentKeyInterface.national_id ||\n      key === waitingListReportContentKeyInterface.education_category\n    ) {\n      return false;\n    }\n    return true;\n  };\n\n  generateReportTitle = (position_title: string) => {\n    let session: string = \"\";\n    if (this.state.thisPeriod === \"all\") {\n      session = \"All session\";\n    } else {\n      session = this.state.thisPeriod.session_plan_name;\n    }\n    this.setReportTitle(\"Waiting list - \" + position_title + \" - \" + session);\n  };\n\n  FC_GeneratePDF = () => {\n    if (!document.querySelectorAll(\"#report_content tbody tr\").length) {\n      this.props.PushPopupAlert({\n        title: `Can't generate Report of empty Data`,\n        theme: PopupAlertTheme.warning,\n      });\n      return;\n    }\n\n    let session: string = \"\";\n    if (this.state.thisPeriod === \"all\") {\n      session = \"All session\";\n    } else {\n      session = this.state.thisPeriod.session_plan_name;\n    }\n    const table: HTMLElement | null = document.getElementById(\"report_content\");\n    const reportSettings: reportSettingsInterface = {\n      doneBy: this.props.auth.user.fname + \" \" + this.props.auth.user.lname,\n      title: this.state.reportTitle,\n      subjectTitle: \"Position\",\n      subject: this.state.thisPosition\n        ? this.state.thisPosition.position_title\n        : \"All position\",\n      period: session,\n      footer: \"Online Teacher Recruitment\",\n      institute: this.state.thisPosition\n        ? this.state.thisPosition.education_institute_id\n            .education_category_title\n        : \"\",\n    };\n    table && generatePDF(reportSettings, table, this.setDownloading);\n  };\n\n  FC_FilterWaitingList = (\n    allWaitList: WaitingListDataInterface[],\n    waitingListStatus: WaitingListStatus | \"all\",\n    thisSession: SessionPlanInterface | \"all\",\n    institute: education_category | \"all\",\n    position: PositionAPI | null\n  ): WaitingListDataInterface[] => {\n    let result: WaitingListDataInterface[] = allWaitList;\n    if (waitingListStatus !== \"all\") {\n      result = result.filter((item) => item.status === waitingListStatus);\n    }\n\n    if (position) {\n      result = result.filter(\n        (item) => item.position_id === position.position_id\n      );\n    }\n\n    if (thisSession !== \"all\") {\n      result = result.filter(\n        (item) => item.waitingList_session_id === thisSession._id\n      );\n    }\n\n    if (institute !== \"all\") {\n      result = result.filter(\n        (item) => item.education_category === institute.education_category_title\n      );\n    }\n\n    return result;\n  };\n\n  viewContractor = (\n    waitingData: WaitingListDataInterface\n  ): WaitingListInterface | undefined => {\n    let result = undefined;\n\n    if (this.props.waitingList)\n      result = this.props.waitingList.find(\n        (item) => item._id === waitingData.waitingList_id\n      );\n    return result;\n  };\n\n  render() {\n    if (\n      this.props.application_sessions &&\n      this.props.application_sessions.length === 0\n    ) {\n      return <NoSession />;\n    }\n\n    return (\n      <div>\n        <SideNavigation>\n          {FC_HasInstitute(this.props.auth.education_institution_id) ===\n            false && (\n            <div className=\"flex flex-col mb-4\">\n              <span className=\"text-sm text-gray-600 mb-2\">\n                Education categories:\n              </span>\n              {this.props.schoolLevels.education_categories === null ? (\n                <Loading />\n              ) : this.props.schoolLevels.education_categories.length === 0 ? (\n                <span>No institute found</span>\n              ) : (\n                <Fragment>\n                  {/* <div\n                    onClick={() => this.setThisEducation(\"all\")}\n                    className={`border rounded px-2 py-2 mb-2 cursor-pointer ${\n                      this.state.thisEducation === \"all\"\n                        ? \"bg-blue-600 text-white hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                        : \"hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                    } font-bold flex flex-row items-center gap-2`}\n                  >\n                    {this.state.thisEducation === \"all\" ? (\n                      <MdRadioButtonChecked />\n                    ) : (\n                      <MdRadioButtonUnchecked />\n                    )}\n                    <span>All</span>\n                  </div> */}\n                  {this.props.schoolLevels.education_categories.map(\n                    (item, i) => (\n                      <div\n                        onClick={() => {\n                          this.setThisEducation(item);\n                          this.FC_OnInstitutionChanged(\n                            item.education_institute_id\n                          );\n                        }}\n                        key={i + 1}\n                        className={`border rounded px-2 py-2 mb-2 cursor-pointer ${\n                          this.state.thisEducation !== \"all\" &&\n                          this.state.thisEducation.education_institute_id ===\n                            item.education_institute_id\n                            ? \"bg-blue-600 text-white hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                            : \"hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                        } font-bold flex flex-row items-center gap-2`}\n                      >\n                        {this.state.thisEducation !== \"all\" &&\n                        this.state.thisEducation.education_institute_id ===\n                          item.education_institute_id ? (\n                          <MdRadioButtonChecked />\n                        ) : (\n                          <MdRadioButtonUnchecked />\n                        )}\n                        <span>{item.education_category_title}</span>\n                      </div>\n                    )\n                  )}\n                </Fragment>\n              )}\n            </div>\n          )}\n          <div className=\"\">\n            <div className=\"text-gray-600 text-sm mb-2\">Selected period:</div>\n            <div\n              onClick={() => this.setSelectPeriod(true)}\n              className=\"font-bold bg-blue-50 border border-blue-200 rounded py-2 cursor-pointer text-base px-2 hover:underline  text-blue-600  mb-4 w-full flex flex-row items-center gap-2 justify-between animate__animated animate__zoomIn\"\n            >\n              {this.state.thisPeriod !== \"all\"\n                ? `${capitalizeFirstWord(\n                    this.state.thisPeriod.session_plan_name\n                  )} - ${this.state.thisPeriod.period}`\n                : \"All session\"}\n              <FiEdit className=\"text-xl text-blue-600\" />\n            </div>\n          </div>\n\n          <div className=\"pt-1\">\n            <div className=\"text-sm text-gray-700 pb-2 pt-2\">Claim types:</div>\n            {this.state.loadingWaitingList ||\n            this.FC_WaitingListData(\n              this.props.waitingList,\n              this.props.systemPositions\n            ) === null ? (\n              <Loading />\n            ) : (\n              this.FC_WaitingListStatus(\n                this.FC_WaitingListData(\n                  this.props.waitingList,\n                  this.props.systemPositions\n                )!\n              ).map((item, index: number) => (\n                <div\n                  onClick={() => this.setThisWaitingListStatus(item.type)}\n                  key={item.title + index}\n                >\n                  <MainItem\n                    title={item.title}\n                    count={item.count}\n                    active={this.state.thisWaitingListStatus === item.type}\n                  />\n                </div>\n              ))\n            )}\n          </div>\n        </SideNavigation>\n\n        <section>\n          {/* REPORT TITLE ============================================ */}\n          <div className=\"grid md:grid-cols-12\">\n            <div className=\"col-span-6\">\n              <div className=\"mt-4 mx-4 flex flex-col gap-1\">\n                <span className=\"text-3xl font-bold text-gray-700\">\n                  Waiting list report\n                </span>\n                <div\n                  onClick={() => this.setSelectPosition(true)}\n                  className=\"flex flex-row gap-2\"\n                >\n                  <span className=\"text-gray-500\">Selected position: </span>\n                  <span className=\"text-blue-600 font-bold underline cursor-pointer\">\n                    {this.state.thisPosition !== null\n                      ? this.state.thisPosition.position_title\n                      : \"All position\"}\n                  </span>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-span-6\">\n              <div className=\"float-right mt-2\">\n                {this.props.waitingList && this.props.waitingList.length > 0 && (\n                  <div className=\"flex flex-row items-center justify-end font-bold mb-2\">\n                    <BiExport className=\"text-2xl text-gray-500\" />\n                    <span className=\"text-gray-500\">Export as</span>\n                    <button\n                      className=\"px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200\"\n                      disabled={this.state.loading}\n                      onClick={() => {\n                        this.updateWaitingListToPrint();\n                        this.setGenerateReportModal({\n                          reportType: \"EXCEL\",\n                          status: true,\n                        });\n                      }}\n                    >\n                      EXCEL\n                    </button>\n                    <button\n                      className={`px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200 ${\n                        this.state.downloading && \"cursor-wait\"\n                      }`}\n                      onClick={() => this.FC_GeneratePDF()}\n                      disabled={this.state.loading || this.state.downloading}\n                    >\n                      PDF\n                    </button>\n                  </div>\n                )}\n                <div\n                  onClick={() => this.setSelectPosition(true)}\n                  className=\"btn bg-blue-50 border border-blue-300 text-blue-600 cursor-pointer hover:bg-blue-100 flex flex-row items-center justify-center gap-2 text-sm \"\n                >\n                  <BiFilterAlt className=\"text-xl\" />\n                  Filter by position\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* END REPORT TITLE ============================================ */}\n\n          <div className=\"bg-white my-4\">\n            <div className=\"w-full px-2 py-2\">\n              <input\n                onChange={(e) => this.setSearchInput(e.target.value)}\n                type=\"text\"\n                value={this.state.searchInput}\n                placeholder=\"Search...\"\n                className=\"w-full bg-gray-100 py-2 px-3 rounded focus:border-gray-800\"\n                disabled={\n                  this.state.loadingWaitingList ||\n                  this.FC_WaitingListData(\n                    this.props.waitingList,\n                    this.props.systemPositions\n                  ) === null\n                }\n              />\n            </div>\n            <div className=\"w-full overflow-x-auto\">\n              <table className=\"w-full shadow\" id=\"report_content\">\n                <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                  <tr>\n                    <td className=\"px-2 py-2\">#</td>\n                    <td\n                      className=\"px-2 py-2 cursor-pointer\"\n                      onClick={() => this.setSort(\"names\")}\n                    >\n                      <div className=\"flex items-center gap-1\">\n                        Applicant names <BiSort />\n                      </div>\n                    </td>\n                    <td className=\"px-2 py-2\">National ID</td>\n                    <td\n                      className=\"px-2 py-2 cursor-pointer\"\n                      onClick={() => this.setSort(\"gender\")}\n                    >\n                      <div className=\"flex items-center gap-1\">\n                        Gender <BiSort />\n                      </div>\n                    </td>\n                    <td className=\"px-2 py-2\">Phone</td>\n                    <td\n                      className=\"px-2 py-2 cursor-pointer\"\n                      onClick={() => this.setSort(\"user_position_marks\")}\n                    >\n                      <div className=\"flex items-center gap-1\">\n                        Marks <BiSort />\n                      </div>\n                    </td>\n                    <td\n                      className=\"px-2 py-2 cursor-pointer\"\n                      onClick={() => this.setSort(\"position_title\")}\n                    >\n                      <div className=\"flex items-center gap-1\">\n                        Position <BiSort />\n                      </div>\n                    </td>\n                    <td\n                      className=\"px-2 py-2 cursor-pointer\"\n                      onClick={() => this.setSort(\"education_category\")}\n                    >\n                      <div className=\"flex items-center gap-1\">\n                        Institute <BiSort />\n                      </div>\n                    </td>\n                    <td\n                      className=\"px-2 py-2 cursor-pointer\"\n                      onClick={() => this.setSort(\"waiting_status\")}\n                    >\n                      <div className=\"flex items-center gap-1\">\n                        Status <BiSort />\n                      </div>\n                    </td>\n                    <td\n                      className=\"px-2 py-2 cursor-pointer\"\n                      onClick={() => this.setSort(\"waitingList_session\")}\n                    >\n                      <div className=\"flex items-center gap-1\">\n                        Session <BiSort />\n                      </div>\n                    </td>\n                    <td\n                      className=\"px-2 py-2 cursor-pointer\"\n                      onClick={() => this.setSort(\"date\")}\n                    >\n                      <div className=\"flex items-center gap-1\">\n                        Date <BiSort />\n                      </div>\n                    </td>\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.state.loadingWaitingList ? (\n                    <TableLoading cols={11} />\n                  ) : this.FC_WaitingListData(\n                      this.props.waitingList,\n                      this.props.systemPositions\n                    ) === null ? (\n                    <TableLoading cols={10} />\n                  ) : this.FC_FilterWaitingList(\n                      this.FC_WaitingListData(\n                        this.props.waitingList,\n                        this.props.systemPositions\n                      )!,\n                      this.state.thisWaitingListStatus,\n                      this.state.thisPeriod,\n                      this.state.thisEducation,\n                      this.state.thisPosition\n                    ).length === 0 ? (\n                    <tr>\n                      <td colSpan={11} className=\"px-2 py-2\">\n                        <div className=\"flex flex-col text-gray-400 items-center justify-center bg-gray-100 rounded py-10\">\n                          <ImFilesEmpty className=\"text-8xl text-gray-400 mb-2 animate__animated animate__shakeX\" />\n                          <span className=\"text-sm font-bold\">\n                            No result found! Please try to search again\n                          </span>\n                          <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n                            <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                              <li\n                                onClick={() => this.setSelectPosition(true)}\n                                className=\"underline text-gray-500 cursor-pointer\"\n                              >\n                                Filter by position\n                              </li>\n                              <li className=\"text-gray-400 italic\">or</li>\n                              <li\n                                className=\"text-gray-500 underline\"\n                                onClick={() => this.setSelectPeriod(true)}\n                              >\n                                Filter by period\n                              </li>\n                            </ul>\n                          </div>\n                        </div>\n                      </td>\n                    </tr>\n                  ) : (\n                    sortThisArray(\n                      this.state.isSorted,\n                      searchData(\n                        this.FC_FilterWaitingList(\n                          this.FC_WaitingListData(\n                            this.props.waitingList,\n                            this.props.systemPositions\n                          )!,\n                          this.state.thisWaitingListStatus,\n                          this.state.thisPeriod,\n                          this.state.thisEducation,\n                          this.state.thisPosition\n                        ),\n                        this.state.searchInput\n                      ),\n                      this.state.sortProperty,\n                      this.state.sortOrder\n                    ).map((item: WaitingListDataInterface, i: number) => (\n                      <tr\n                        key={i + 1}\n                        className={`${\n                          i % 2 !== 0 ? \"bg-gray-100\" : \"bg-white\"\n                        } text-gray-600 hover:bg-blue-100 hover:text-blue-700 cursor-pointer border-b border-gray-300 hover:border-blue-500 text-sm`}\n                        onClick={() => this.setState({ selectedWaiting: item })}\n                      >\n                        <td className=\"px-2 py-2\">{i + 1}</td>\n                        <td className=\"px-2 py-2\">{item.names}</td>\n                        <td className=\"px-2 py-2\">{item.national_id}</td>\n                        <td className=\"px-2 py-2\">{item.gender}</td>\n                        <td className=\"px-2 py-2\">{item.phone}</td>\n                        <td className=\"px-2 py-2\">\n                          {item.user_position_marks}\n                        </td>\n                        <td className=\"px-2 py-2\">{item.position_title}</td>\n                        <td className=\"px-2 py-2\">{item.education_category}</td>\n                        <td className=\"px-2 py-2\">\n                          {capitalizeFirstLetter(\n                            item.waiting_status.toLowerCase()\n                          )}\n                        </td>\n                        <td className=\"px-2 py-2\">\n                          {item.waitingList_session}\n                        </td>\n                        <td className=\"px-2 py-2\">{item.date}</td>\n                      </tr>\n                    ))\n                  )}\n                </tbody>\n              </table>\n            </div>\n          </div>\n\n          {/* CHOOSING POSITION MODAL */}\n          {this.state.selectPosition && (\n            <Modal\n              title={\n                <div className=\"flex flex-row gap-4 items-center\">\n                  <IoFilter className=\"text-5xl text-blue-600\" />\n                  <div className=\"flex flex-col\">\n                    <span className=\"font-bold text-xl text-blue-600\">\n                      Filter by a position\n                    </span>\n                  </div>\n                </div>\n              }\n              backDrop={true}\n              theme={Themes.default}\n              close={() => {\n                this.setSelectPosition(false);\n                this.setSearchPositionInput(\"\");\n              }}\n              backDropClose={true}\n              widthSizeClass={ModalSize.extraLarge}\n              displayClose={true}\n              padding={{ title: true }}\n            >\n              <div className=\"px-2 pb-2\">\n                {this.props.systemPositions === null ? (\n                  <LoadingV2 type={LoadingType.dark} />\n                ) : this.props.systemPositions.length === 0 ? (\n                  <div className=\"flex flex-col text-gray-400 items-center justify-center\">\n                    <MdSearch className=\"text-6xl\" />\n                    <div className=\"flex flex-col items-center justify-center\">\n                      <span>No positions found! Please go back!</span>\n                    </div>\n                  </div>\n                ) : (\n                  <>\n                    <div className=\"flex flex-col\">\n                      <span className=\"text-gray-600 text-xs font-bold\">\n                        Filter by position name\n                      </span>\n                      <input\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                          this.setSearchPositionInput(e.target.value)\n                        }\n                        type=\"text\"\n                        className=\"mb-4 bg-gray-100 px-3 py-2 rounded\"\n                        placeholder=\"Keyword...\"\n                      />\n                    </div>\n                    <div\n                      onClick={() => {\n                        this.generateReportTitle(\"All position\");\n                        this.setThisPosition(null);\n                        this.setSelectPosition(false);\n                        this.setSearchPositionInput(\"\");\n                      }}\n                      className=\"bg-white cursor-pointer rounded  px-3 py-2 border border-gray-200 hover:border-blue-500 hover:bg-blue-100 mb-2\"\n                    >\n                      <div className=\"grid lg:grid-cols-12\">\n                        <div className=\"col-span-12 lg:col-span-10\">\n                          <div className=\"flex flex-row items-center gap-3\">\n                            <div>\n                              <IoIosBriefcase className=\"text-4xl md:text-5xl text-blue-600\" />\n                            </div>\n                            <div className=\"flex flex-col\">\n                              <span className=\"text-base lg:text-lg font-bold text-gray-700\">\n                                All position\n                              </span>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-span-12 lg:col-span-2 hidden lg:block\">\n                          <div className=\"h-full flex items-center justify-end\">\n                            <div className=\"btn bg-blue-600 text-white float-right\">\n                              Choose\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    {search(\n                      this.props.systemPositions,\n                      this.state.searchPositionInput\n                    ).map((item: PositionAPI, key: number) => (\n                      <div\n                        key={key + 1}\n                        onClick={() => {\n                          this.generateReportTitle(item.position_title);\n                          this.setThisPosition(item);\n                          this.setSelectPosition(false);\n                          this.setSearchPositionInput(\"\");\n                        }}\n                        className=\"bg-white cursor-pointer rounded  px-3 py-2 border border-gray-200 hover:border-blue-500 hover:bg-blue-100 mb-2\"\n                      >\n                        <div className=\"grid lg:grid-cols-12\">\n                          <div className=\"col-span-12 lg:col-span-10\">\n                            <div className=\"flex flex-row items-center gap-3\">\n                              <div>\n                                <IoIosBriefcase className=\"text-4xl md:text-5xl text-blue-600\" />\n                              </div>\n                              <div className=\"flex flex-col\">\n                                <span className=\"text-xs lg:text-sm font-bold text-gray-700\">\n                                  {item.position_title}\n                                </span>\n                                <span className=\"text-xs text-gray-500 italic\">\n                                  School level:{\" \"}\n                                  <span\n                                    className=\"text-gray-800 font-light\"\n                                    style={{ fontStyle: \"normal\" }}\n                                  >\n                                    {item.school_level_id.school_level_name}\n                                  </span>\n                                </span>\n                                <span className=\"text-xs font-bold text-blue-600 bg-blue-100 w-max px-3 py-1 rounded-full\">\n                                  {\n                                    item.education_institute_id\n                                      .education_category_title\n                                  }\n                                </span>\n                              </div>\n                            </div>\n                          </div>\n                          <div className=\"col-span-12 lg:col-span-2 hidden lg:block\">\n                            <div className=\"h-full flex items-center justify-end\">\n                              <div className=\"btn bg-blue-600 text-white float-right\">\n                                Choose\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </>\n                )}\n              </div>\n            </Modal>\n          )}\n          {/* END CHOOSING POSITION MODAL */}\n\n          {/* ####################################################################################### */}\n\n          {/* CHOOSING PERIOD CONTENT MODAL */}\n          {this.state.selectPeriod && (\n            <Modal\n              title={\n                <div className=\"flex flex-row gap-4 items-center\">\n                  <MdHistory className=\"text-5xl text-blue-600\" />\n                  <span className=\"flex flex-col\">Choose a period</span>\n                </div>\n              }\n              backDrop={true}\n              theme={Themes.default}\n              close={() => this.setSelectPeriod(false)}\n              backDropClose={true}\n              widthSizeClass={ModalSize.extraLarge}\n              displayClose={true}\n              padding={{ title: true }}\n            >\n              <ChooseSession\n                allSession={this.props.application_sessions}\n                setSelectSession={(value: SessionPlanInterface | \"all\") => {\n                  this.setThisPeriod(value);\n                  this.setSelectPeriod(false);\n                }}\n                chooseAll={true}\n                currentSelected={this.state.thisPeriod}\n              />\n            </Modal>\n          )}\n          {/* END CHOOSING PERIOD CONTENT MODAL */}\n\n          {/* ####################################################################################### */}\n\n          {/* GENERATE DYNAMIC REPORT CONTENT MODAL */}\n          {this.state.generateReportModal !== null &&\n            this.state.generateReportModal.status === true && (\n              <Modal\n                title={\n                  <div className=\"flex flex-row gap-4 items-center\">\n                    {/* <IoBriefcase className=\"text-5xl text-gray-500\" /> */}\n                    <div className=\"flex flex-col\">\n                      <span className=\"font-bold text-2xl text-gray-500\">\n                        Generating Report contents\n                      </span>\n                      <span className=\"text-sm text-blue-600 font-normal\">\n                        Generating {this.state.generateReportModal.reportType}{\" \"}\n                        Report\n                      </span>\n                    </div>\n                  </div>\n                }\n                backDrop={true}\n                theme={Themes.default}\n                close={() => this.setGenerateReportModal(null)}\n                backDropClose={false}\n                widthSizeClass={ModalSize.medium}\n                displayClose={true}\n                padding={{ title: true }}\n              >\n                <div className=\"px-6\">\n                  <div className=\"my-2 text-base text-gray-700 sm:text-lg\">\n                    <div className=\"flex flex-col\">\n                      <label>Title</label>\n                      <input\n                        type=\"text\"\n                        className={`text-left input-white w-20 inline-block ${\n                          this.state.formError &&\n                          this.state.formError.element === \"report_title\"\n                            ? \"border-red-500\"\n                            : \"border-gray-500\"\n                        } border-2`}\n                        placeholder=\"Sub Category Title\"\n                        value={this.state.reportTitle}\n                        onChange={(e) => {\n                          this.setFormError(null);\n                          this.setReportTitle(e.target.value);\n                        }}\n                        disabled={this.state.loading}\n                      />\n                      {this.state.formError &&\n                        this.state.formError.element === \"report_title\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    <div className=\"flex flex-col mt-2\">\n                      <label>Report content</label>\n                      <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                        {this.state.reportContent.map((item, index) => (\n                          <div\n                            key={index}\n                            className={`flex items-center gap-1 ${\n                              this.isChangeAllowed(item.key)\n                                ? \"cursor-pointer\"\n                                : \"cursor-not-allowed\"\n                            }`}\n                            onClick={() =>\n                              this.isChangeAllowed(item.key) &&\n                              this.updateReportContent(item.key)\n                            }\n                            title={\n                              !this.isChangeAllowed(item.key)\n                                ? \"Required for every report!\"\n                                : \"\"\n                            }\n                          >\n                            {item.status ? (\n                              <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                            ) : (\n                              <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                            )}\n                            <span>{item.title}</span>\n                          </div>\n                        ))}\n                      </div>\n                      {this.state.formError &&\n                        this.state.formError.element === \"report_content\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                  </div>\n                  <div className=\"flex justify-between mb-2 mt-4\">\n                    <div\n                      className={`flex items-center gap-1 cursor-pointer`}\n                      onClick={() =>\n                        this.resetReportContent(this.state.selectAll)\n                      }\n                    >\n                      {this.state.selectAll ? (\n                        <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                      ) : (\n                        <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                      )}\n                      <span>Select all</span>\n                    </div>\n\n                    {this.state.waitingListToPrint && !this.state.loading && (\n                      <ExportToExcel\n                        fileData={this.state.waitingListToPrint}\n                        fileName={this.state.reportTitle}\n                        btnName=\"Generate\"\n                      />\n                    )}\n                  </div>\n                </div>\n              </Modal>\n            )}\n          {/* END GENERATE DYNAMIC REPORT CONTENT MODAL */}\n\n          {/* ####################################################################################### */}\n\n          {/* CHOOSING PERIOD CONTENT MODAL */}\n          {this.state.selectedWaiting &&\n            this.viewContractor(this.state.selectedWaiting) && (\n              <Modal\n                title={\n                  <div className=\"flex flex-row gap-4 items-center\">\n                    {/* <FaFileContract className=\"text-4xl text-blue-600\" />\n                    <span className=\"text-3xl\">\n                      {this.state.selectedWaiting.names +\n                        \"'s placement preferences\"}\n                    </span> */}\n                  </div>\n                }\n                backDrop={true}\n                theme={Themes.default}\n                close={() => this.setState({ selectedWaiting: null })}\n                backDropClose={true}\n                widthSizeClass={ModalSize.extraLarge}\n                displayClose={true}\n                padding={{ title: true, body: true }}\n              >\n                <div className=\"mb-7\">\n                  <ContractViewer\n                    contract={\n                      this.viewContractor(this.state.selectedWaiting)!.contract\n                    }\n                    candidates={this.state.selectedWaiting.names}\n                    position={this.state.selectedWaiting.position_title}\n                  />\n                </div>\n              </Modal>\n            )}\n        </section>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system_settings,\n  sessionPlan,\n  schoolLevels,\n  waitingList,\n}: StoreState): {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  systemPositions: PositionAPI[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  waitingList: WaitingListInterface[] | null;\n} => {\n  return {\n    auth: auth,\n    application_sessions: sessionPlan.allSessionPlans,\n    systemPositions: system_settings.systemPositions,\n    schoolLevels,\n    waitingList,\n  };\n};\n\nexport const WaitingListReport = connect(mapStateToProps, {\n  getWaitingList,\n  FC_GetAllSessionByInstitution,\n  loadEducationCategories,\n  FC_GetPositionsByInstitution,\n  PushPopupAlert,\n})(_WaitingListReport);\n"],"sourceRoot":""}
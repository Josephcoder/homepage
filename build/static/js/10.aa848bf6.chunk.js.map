{"version":3,"sources":["../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","containers/QuestionBank/QuestionSettings/SchoolLevels/SchoolLevels.tsx","containers/QuestionBank/QuestionSettings/SettingsComponents/EducationCategorySelect.tsx","containers/QuestionBank/QuestionSettings/SchoolLevels/AddSchoolLevel.tsx","containers/QuestionBank/QuestionSettings/Courses/Courses.tsx","containers/QuestionBank/QuestionSettings/Courses/AddCourse.tsx","containers/QuestionBank/QuestionSettings/EducationCategories/EducationCategories.tsx","containers/QuestionBank/QuestionSettings/EducationCategories/AddEducationCategory.tsx","containers/QuestionBank/QuestionSettings/QuestionTypes/QuestionTypes.tsx","containers/QuestionBank/QuestionSettings/QuestionTypes/AddQuestionType.tsx","containers/QuestionBank/QuestionSettings/SettingsComponents/SchoolLevelSelect.tsx"],"names":["getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","validate","uuid","REGEX","test","byteToHex","i","push","toString","substr","stringify","arr","offset","arguments","length","undefined","toLowerCase","TypeError","v4","options","buf","rnds","random","SchoolLevelsAction","EducationCategorySelect","props","className","style","height","schoolLevels","education_categories","map","item","onClick","loading","setEducationCategories","find","itm","education_institute_id","filter","x","education_category_title","description","AddSchoolLevel","useState","school_level_id","setSchool_level_id","school_level_title","setSchool_level_title","setDescription","education_category","setEducation_category","formError","setFormError","setLoading","submitSchoolLevel","e","a","preventDefault","selectedSchoolLevel","action","Update","element","msg","axios","patch","API","APPLICATION","school_level_name","education_institute","courses","PushPopupAlert","title","theme","PopupAlertTheme","info","closeModal","post","success","danger","console","log","useEffect","onSubmit","school_levels","disabled","onChange","target","value","type","minHeight","View","deleteSelected","Delete","SchoolLevels","connect","auth","periods","questionTypes","system","loadApplicationPeriods","setSelectedPeriod","loadSchoolLevels","setSelectedEducationCategory","addNew","setAddNew","setSelectedSchoolLevel","deleteEducationCategoryFn","school_level","delete","warning","Loading","Modal","backDrop","Themes","default","close","widthSizeClass","ModalSize","extraLarge","displayClose","backDropClose","padding","body","state","medium","CoursesAction","AddCourse","course_id","setCourse_id","course_name","setCourse_name","course_code","setCourse_code","chapters","setChapters","setSchool_levels","openAdd","chapter","addChapter","setAddChapter","submitCourse","selectedCourse","obj","setSelectedCourse","response","data","errors","message","SchoolLevelSelect","placeholder","name","status","id","uuidv4","addNewChapter","Courses","course","loadCourses","search","setSearch","deleteCourseFn","searchData","EducationCategoryTypeAction","AddEducationCategory","setEducation_institute_id","setEducation_category_title","submitEducationCategory","selectedEducationCategory","EducationCategories","loadEducationCategories","QT_QuestionTypeAction","AddQuestionType","setTitle","setElement","submitQuestionType","selectedQuestionType","put","QBank","questionTypeElements","key","selected","QuestionTypes","loadQuestionTypes","setSelectedQuestionType","deleteQuestionTypeFn","questionType"],"mappings":"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","file":"static/js/10.aa848bf6.chunk.js","sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import React, { Fragment, useEffect, useState } from \"react\";\nimport { MdEdit } from \"react-icons/md\";\nimport { CgDetailsMore } from \"react-icons/cg\";\nimport { HiOutlineDocumentSearch } from \"react-icons/hi\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadApplicationPeriods,\n  setSelectedPeriod,\n  applicationPeriodsStoreInterface,\n  schoolLevelsStoreInterface,\n  loadSchoolLevels,\n  setSelectedEducationCategory,\n  System,\n  PushPopupAlert,\n} from \"../../../../actions\";\nimport Loading from \"../../../../components/Loading/Loading\";\nimport { StoreState } from \"../../../../reducers\";\nimport Modal, { ModalSize, Themes } from \"../../../../components/Modal/Modal\";\nimport AddQuestionType from \"./AddSchoolLevel\";\nimport { PopupAlertData } from \"../../../../components/Alert/Popup\";\nimport { IoMdTrash } from \"react-icons/io\";\nimport axios from \"axios\";\nimport { API } from \"../../../../utils/api\";\nimport { PopupAlertTheme } from \"../../../../interfaces/popupAlert\";\nimport { school_level } from \"../../../../interfaces/school_level\";\n\ninterface SchoolLevelsPropsInterface {\n  system: System;\n  schoolLevels: schoolLevelsStoreInterface;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  loadSchoolLevels: (callback: (loading: boolean) => void) => void;\n}\n\nexport enum SchoolLevelsAction {\n  Create = \"Create\",\n  View = \"View\",\n  Delete = \"Delete\",\n  Update = \"Update\",\n}\n\nexport interface S_SchoolLevelDetails {\n  action: SchoolLevelsAction;\n  selectedSchoolLevel: school_level;\n}\n\nconst _SchoolLevels = (props: SchoolLevelsPropsInterface) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [addNew, setAddNew] = useState<boolean>(false);\n  const [selectedSchoolLevel, setSelectedSchoolLevel] =\n    useState<S_SchoolLevelDetails | null>(null);\n\n  const closeAddNewModal = (state: boolean) => {\n    setAddNew(state);\n    props.loadSchoolLevels(setLoading);\n  };\n\n  const deleteEducationCategoryFn = async (school_level: school_level) => {\n    if (school_level.school_level_id !== undefined) {\n      setLoading(true);\n      try {\n        await axios.delete(\n          `${API.APPLICATION}/schoollevel/${school_level.school_level_id}`\n        );\n        props.loadSchoolLevels(setLoading);\n        props.PushPopupAlert({\n          title: `School level removed successfully`,\n          theme: PopupAlertTheme.success,\n        });\n        setSelectedSchoolLevel(null);\n        // console.log(\"Deleted: \", res);\n      } catch (error: any) {\n        props.PushPopupAlert({\n          title: `Acton failed, Try again later!`,\n          theme: PopupAlertTheme.warning,\n        });\n        setLoading(false);\n        setSelectedSchoolLevel(null);\n        console.log(\"err: \", { ...error });\n      }\n      // setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (\n      props.schoolLevels.school_levels === null ||\n      props.schoolLevels.school_levels.length === 0\n    ) {\n      props.loadSchoolLevels(setLoading);\n    }\n  }, [props, setLoading]);\n  return (\n    <Fragment>\n      <div className=\"mt-1\">\n        <div className=\"flex flex-row justify-between items-center bg-gray-100 py-1\">\n          <div className=\"text-blue-600 font-extrabold text-xl px-2\">\n            Lists of school levels\n          </div>\n          {loading === false && (\n            <div\n              onClick={() => setAddNew(true)}\n              className=\"btn bg-blue-600 text-white cursor-pointer hover:bg-blue-800\"\n            >\n              Add new\n            </div>\n          )}\n        </div>\n        <div className=\"flex flex-col\">\n          {props.schoolLevels.school_levels === null || loading === true ? (\n            <Loading />\n          ) : props.schoolLevels.school_levels.length === 0 ? (\n            <div className=\"text-gray-400 px-6 py-4 rounded border mt-4 text-xl font-extrabold flex flex-col items-center justify-center bg-gray-100\">\n              <HiOutlineDocumentSearch className=\"text-7xl text-gray-400 animate__animated animate__shakeX\" />\n              <span>No question types available</span>\n            </div>\n          ) : (\n            props.schoolLevels.school_levels.map((item, i) => (\n              <div\n                className={`border flex flex-row px-3 py-2 rounded items-center my-1 justify-between`}\n              >\n                <div className=\"flex flex-col\">\n                  <span className=\"text-gray-600 font-extrabold\">\n                    {item.school_level_name}\n                  </span>\n                  <span className={`text-xs pr-5 text-gray-500`}>\n                    {item.description}\n                  </span>\n                </div>\n                <div className=\"flex flex-row items-center gap-2\">\n                  <div\n                    onClick={() =>\n                      setSelectedSchoolLevel({\n                        action: SchoolLevelsAction.View,\n                        selectedSchoolLevel: item,\n                      })\n                    }\n                    className=\"bg-gray-50 hover:bg-gray-200 rounded-full px-1 py-1 cursor-pointer\"\n                  >\n                    <CgDetailsMore className=\"text-3xl text-gray-700\" />\n                  </div>\n                  <div\n                    onClick={() =>\n                      setSelectedSchoolLevel({\n                        action: SchoolLevelsAction.Update,\n                        selectedSchoolLevel: item,\n                      })\n                    }\n                    className=\"bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 cursor-pointer\"\n                  >\n                    <MdEdit className=\"text-3xl text-blue-700\" />\n                  </div>\n                  <div\n                    onClick={() =>\n                      setSelectedSchoolLevel({\n                        action: SchoolLevelsAction.Delete,\n                        selectedSchoolLevel: item,\n                      })\n                    }\n                    className=\"bg-gray-100 hover:bg-red-100 rounded-full px-1 py-1 cursor-pointer\"\n                  >\n                    <IoMdTrash className=\"text-3xl text-yellow-700\" />\n                  </div>\n                </div>\n              </div>\n            ))\n          )}\n        </div>\n      </div>\n      {(addNew === true ||\n        (selectedSchoolLevel !== null &&\n          (selectedSchoolLevel.action === SchoolLevelsAction.Update ||\n            selectedSchoolLevel.action === SchoolLevelsAction.View))) && (\n        <Modal\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              <div className=\"flex flex-col\">\n                <span className=\"font-extrabold text-2xl text-gray-500\">\n                  {selectedSchoolLevel !== null &&\n                  selectedSchoolLevel.action === SchoolLevelsAction.Update\n                    ? selectedSchoolLevel.selectedSchoolLevel.school_level_name\n                    : selectedSchoolLevel !== null &&\n                      selectedSchoolLevel.action === SchoolLevelsAction.View\n                    ? selectedSchoolLevel.selectedSchoolLevel.school_level_name\n                    : \"Add new school level\"}\n                </span>\n                <span className=\"text-sm text-gray-500 font-normal\">\n                  {selectedSchoolLevel !== null &&\n                  selectedSchoolLevel.action === SchoolLevelsAction.Update\n                    ? \"Update the selected school level\"\n                    : selectedSchoolLevel !== null &&\n                      selectedSchoolLevel.action === SchoolLevelsAction.View\n                    ? \"View more details for the selected school level\"\n                    : \"School level will be used in different components in the system, make sure what you're creating\"}\n                </span>\n              </div>\n            </div>\n          }\n          backDrop={true}\n          theme={Themes.default}\n          close={() => {\n            setAddNew(false);\n            setSelectedSchoolLevel(null);\n          }}\n          widthSizeClass={ModalSize.extraLarge}\n          displayClose={true}\n          backDropClose={true}\n          padding={{ title: true, body: true }}\n        >\n          <AddQuestionType\n            closeModal={closeAddNewModal}\n            school_levels={props.schoolLevels}\n            PushPopupAlert={props.PushPopupAlert}\n            selectedSchoolLevel={selectedSchoolLevel}\n            deleteSelected={setSelectedSchoolLevel}\n          />\n        </Modal>\n      )}\n      {selectedSchoolLevel !== null &&\n        selectedSchoolLevel.action === SchoolLevelsAction.Delete && (\n          <Modal\n            title={\n              <div className=\"flex flex-row gap-4 items-center\">\n                <div className=\"flex flex-col\">\n                  <span className=\"font-extrabold text-2xl text-gray-500\">\n                    {selectedSchoolLevel.selectedSchoolLevel.school_level_name}\n                  </span>\n                </div>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() => setSelectedSchoolLevel(null)}\n            widthSizeClass={ModalSize.medium}\n            displayClose={true}\n            backDropClose={true}\n            padding={{ title: true, body: true }}\n          >\n            <div className=\"-mt-6\">\n              <span className=\"text-red-600 font-bold\">\n                Are you sure do you want to delete this school level?\n              </span>\n              <div className=\"flex flex-row items-center justify-between mt-2\">\n                <div\n                  onClick={() => setSelectedSchoolLevel(null)}\n                  className=\"btn bg-gray-100 text-gray-700 cursor-pointer hover:bg-gray-200\"\n                >\n                  Cancel\n                </div>\n                <div\n                  onClick={() =>\n                    deleteEducationCategoryFn(\n                      selectedSchoolLevel.selectedSchoolLevel\n                    )\n                  }\n                  className=\"btn bg-red-600 text-white cursor-pointer hover:bg-red-800\"\n                >\n                  Yes, Delete\n                </div>\n              </div>\n            </div>\n          </Modal>\n        )}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  periods,\n  schoolLevels,\n  questionTypes,\n  system,\n}: StoreState): {\n  auth: Auth;\n  periods: applicationPeriodsStoreInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n  system: System;\n} => {\n  return {\n    auth: auth,\n    periods: periods,\n    schoolLevels: schoolLevels,\n    system: system,\n  };\n};\n\nconst SchoolLevels = connect(mapStateToProps, {\n  loadApplicationPeriods,\n  setSelectedPeriod,\n  loadSchoolLevels,\n  setSelectedEducationCategory,\n  PushPopupAlert,\n})(_SchoolLevels);\n\nexport default SchoolLevels;\n","import React from 'react'\nimport { ImCheckboxChecked, ImCheckboxUnchecked } from 'react-icons/im'\nimport { schoolLevelsStoreInterface } from '../../../../actions/school_levels'\n\ninterface EducationCategorySelectProps {\n  schoolLevels: schoolLevelsStoreInterface;\n  education_categories: string[];\n  setEducationCategories: (item: string[]) => void;\n  loading: boolean;\n}\n\nconst EducationCategorySelect = (props: EducationCategorySelectProps) => {\n  return (\n    <div className=\"rounded flex flex-col gap-2 overflow-y-auto border pb-3 px-3\" style={{height: '80vh'}}>\n      <div className=\"flex flex-row items-center gap-2\">\n        <span className=\"text-sm text-gray-600 font-bold mt-2 mb-1\">Choose school level</span><span className=\"text-xs text-gray-500 italic mt-2 mb-1\">(Optional)</span>\n      </div>\n      {props.schoolLevels.education_categories?.map((item, i) => (\n        <div onClick={() => props.loading === false && props.setEducationCategories(props.education_categories.find(itm => itm === item.education_institute_id) ? props.education_categories.filter(x => x !== item.education_institute_id) :[...props.education_categories, item.education_institute_id])} key={i + 1}className={`flex flex-row items-center gap-3 p-3 rounded cursor-pointer ${props.education_categories.find(itm => itm === item.education_institute_id) ? \"bg-blue-50 text-blue-600\" : props.loading === true ? \"bg-gray-100 text-gray-400\" : \"bg-gray-100 text-gray-600\"} ${props.loading === true ? \"hover:bg-gray-100 hover:text-gray-400\" : \"hover:bg-blue-100 hover:text-blue-600\"}`}>\n          {props.education_categories.find(itm => itm === item.education_institute_id) ?\n          <ImCheckboxChecked className=\"text-3xl\" /> :\n          <ImCheckboxUnchecked className=\"text-3xl\" />}\n          <div className=\"flex flex-col gap-0\">\n            <span className=\"font-extrabold text-lg\">{item.education_category_title}</span>\n            <span className=\"text-xs -mt-1\">{item.description}</span>\n          </div>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default EducationCategorySelect\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { schoolLevelsStoreInterface } from \"../../../../actions/school_levels\";\nimport { PopupAlertData } from \"../../../../components/Alert/Popup\";\nimport { formErrorInterface } from \"../../../../interfaces/form\";\nimport { PopupAlertTheme } from \"../../../../interfaces/popupAlert\";\nimport { API } from \"../../../../utils/api\";\nimport EducationCategorySelect from \"../SettingsComponents/EducationCategorySelect\";\nimport { SchoolLevelsAction, S_SchoolLevelDetails } from \"./SchoolLevels\";\n\ninterface AddSchoolLevelProps {\n  closeModal: (state: boolean) => void;\n  school_levels: schoolLevelsStoreInterface;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  selectedSchoolLevel: S_SchoolLevelDetails | null;\n  deleteSelected: (selectedDetail: S_SchoolLevelDetails) => void;\n}\n\nconst AddSchoolLevel = (props: AddSchoolLevelProps) => {\n  // States\n  const [school_level_id, setSchool_level_id] = useState<string>(\"\");\n  const [school_level_title, setSchool_level_title] = useState<string>(\"\");\n  const [description, setDescription] = useState<string>(\"\");\n  const [education_category, setEducation_category] = useState<string[]>([]);\n  const [formError, setFormError] = useState<formErrorInterface | null>(null);\n  const [loading, setLoading] = useState<boolean>(false);\n  const submitSchoolLevel = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    // validation\n    if (\n      props.selectedSchoolLevel?.action === SchoolLevelsAction.Update &&\n      school_level_id === \"\"\n    ) {\n      return setFormError({\n        element: \"school_level_id\",\n        msg: \"Please choose School level\",\n      });\n    } else if (school_level_title === \"\") {\n      return setFormError({\n        element: \"school_level_title\",\n        msg: \"Please fill the school level name\",\n      });\n    } else if (description === \"\") {\n      return setFormError({\n        element: \"description\",\n        msg: \"Please fill the description\",\n      });\n    } else {\n      setLoading(true);\n      try {\n        // Update current\n        if (\n          props.selectedSchoolLevel !== null &&\n          props.selectedSchoolLevel.selectedSchoolLevel.school_level_id !==\n            undefined\n        ) {\n          await axios.patch(`${API.APPLICATION}/schoollevel`, {\n            school_level_id: school_level_id,\n            school_level_name: school_level_title,\n            description: description,\n            education_institute: education_category,\n            courses: [],\n          });\n          props.PushPopupAlert({\n            title: `School level updated successfully`,\n            description: `After updating the School level, you have access to delete and update it!`,\n            theme: PopupAlertTheme.info,\n          });\n          props.closeModal(false);\n          // console.log(\"Result: \", res);\n        } else {\n          // Add new\n          await axios.post(`${API.APPLICATION}/schoollevel`, {\n            school_level_name: school_level_title,\n            description: description,\n            education_institute: education_category,\n            courses: [],\n          });\n          props.PushPopupAlert({\n            title: `School level added successfully`,\n            description: `After adding the School level, you have access to delete and update it!`,\n            theme: PopupAlertTheme.success,\n          });\n          props.closeModal(false);\n          // console.log(\"Result: \", res);\n        }\n      } catch (error: any) {\n        props.PushPopupAlert({\n          title: `Failed to add School level! Try again`,\n          theme: PopupAlertTheme.danger,\n        });\n        console.log(\"Err: \", { ...error });\n      }\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (props.selectedSchoolLevel !== null) {\n      if (school_level_id === \"\") {\n        setSchool_level_id(\n          props.selectedSchoolLevel.selectedSchoolLevel.school_level_id\n        );\n      }\n      if (school_level_title === \"\") {\n        setSchool_level_title(\n          props.selectedSchoolLevel.selectedSchoolLevel.school_level_name\n        );\n      }\n      if (description === \"\") {\n        setDescription(\n          props.selectedSchoolLevel.selectedSchoolLevel.description\n        );\n      }\n      if (education_category.length === 0) {\n        setEducation_category(\n          props.selectedSchoolLevel.selectedSchoolLevel.education_institute\n        );\n      }\n    }\n  }, [\n    props,\n    school_level_id,\n    school_level_title,\n    description,\n    education_category,\n  ]);\n  return (\n    <form onSubmit={submitSchoolLevel} className=\"-mt-2\">\n      <div className=\"grid md:grid-cols-12 gap-5\">\n        <div className=\"col-span-6\">\n          <EducationCategorySelect\n            schoolLevels={props.school_levels}\n            education_categories={education_category}\n            setEducationCategories={setEducation_category}\n            loading={loading}\n          />\n        </div>\n        <div className=\"col-span-6\">\n          <div className=\"flex flex-col mb-2\">\n            <span className=\"text-sm text-gray-600 font-bold mb-1\">Title</span>\n            <input\n              disabled={loading}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                setSchool_level_title(e.target.value);\n                setFormError(null);\n              }}\n              type=\"text\"\n              value={school_level_title}\n              className={`input-white border-2 ${\n                formError !== null && formError.element === \"school_level_title\"\n                  ? \"border-red-500\"\n                  : \"border-gray-500\"\n              }`}\n            />\n            {formError !== null &&\n              formError.element === \"school_level_title\" && (\n                <span className=\"text-red-600 font-bold text-xs\">\n                  {formError.msg}\n                </span>\n              )}\n          </div>\n          <div className=\"flex flex-col mb-2\">\n            <span className=\"text-sm text-gray-600 font-bold mt-2 mb-1\">\n              Description\n            </span>\n            <textarea\n              disabled={loading}\n              onChange={(e: React.ChangeEvent<HTMLTextAreaElement>) => {\n                setDescription(e.target.value);\n                setFormError(null);\n              }}\n              value={description}\n              className={`input-white border-2 ${\n                formError !== null && formError.element === \"description\"\n                  ? \"border-red-500\"\n                  : \"border-gray-500\"\n              }`}\n              style={{ minHeight: \"100px\" }}\n            >\n              {description}\n            </textarea>\n            {formError !== null && formError.element === \"description\" && (\n              <span className=\"text-red-600 font-bold text-xs\">\n                {formError.msg}\n              </span>\n            )}\n          </div>\n          <div className=\"flex flex-row justify-between items-center\">\n            {props.selectedSchoolLevel?.action === SchoolLevelsAction.View ? (\n              <button\n                onClick={() =>\n                  props.selectedSchoolLevel &&\n                  props.deleteSelected({\n                    action: SchoolLevelsAction.Delete,\n                    selectedSchoolLevel:\n                      props.selectedSchoolLevel.selectedSchoolLevel,\n                  })\n                }\n                type=\"button\"\n                className=\"btn border border-red-600 text-red-700\"\n              >\n                Delete\n              </button>\n            ) : (\n              <div></div>\n            )}\n            <button\n              disabled={loading}\n              type=\"submit\"\n              className={`btn bg-blue-600 text-white ${\n                loading === true\n                  ? \"animate__animated animate__flash animate__infinite\"\n                  : \"\"\n              }`}\n            >\n              {loading === true\n                ? \"Please wait...\"\n                : props.selectedSchoolLevel !== null\n                ? \"Update\"\n                : \"Add\"}\n            </button>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default AddSchoolLevel;\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { MdEdit } from \"react-icons/md\";\nimport { CgDetailsMore } from \"react-icons/cg\";\nimport { HiOutlineDocumentSearch } from \"react-icons/hi\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadApplicationPeriods,\n  setSelectedPeriod,\n  applicationPeriodsStoreInterface,\n  schoolLevelsStoreInterface,\n  loadSchoolLevels,\n  setSelectedEducationCategory,\n  System,\n  PushPopupAlert,\n  courseStoreInterface,\n  loadCourses,\n} from \"../../../../actions\";\nimport Loading from \"../../../../components/Loading/Loading\";\nimport { StoreState } from \"../../../../reducers\";\nimport Modal, { ModalSize, Themes } from \"../../../../components/Modal/Modal\";\nimport { PopupAlertData } from \"../../../../components/Alert/Popup\";\nimport { IoMdTrash } from \"react-icons/io\";\nimport axios from \"axios\";\nimport { API } from \"../../../../utils/api\";\nimport { PopupAlertTheme } from \"../../../../interfaces/popupAlert\";\nimport { course } from \"../../../../interfaces\";\nimport AddCourse from \"./AddCourse\";\nimport searchData from \"../../../../utils/search\";\n\ninterface CoursePropsInterface {\n  system: System;\n  course: courseStoreInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  loadSchoolLevels: (callback: (loading: boolean) => void) => void;\n  loadCourses: (callback: (loading: boolean) => void) => void;\n}\n\nexport enum CoursesAction {\n  Create = \"Create\",\n  View = \"View\",\n  Delete = \"Delete\",\n  Update = \"Update\",\n}\n\nexport interface S_CourseDetails {\n  action: CoursesAction;\n  selectedCourse: course;\n}\n\nconst _Courses = (props: CoursePropsInterface) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [addNew, setAddNew] = useState<boolean>(false);\n  const [search, setSearch] = useState<string>(\"\");\n  const [selectedCourse, setSelectedCourse] = useState<S_CourseDetails | null>(\n    null\n  );\n\n  const closeAddNewModal = (state: boolean) => {\n    props.loadCourses(setLoading);\n    setAddNew(state);\n  };\n\n  const deleteCourseFn = async (course: course) => {\n    if (course.course_id !== undefined) {\n      setLoading(true);\n      try {\n        await axios.delete(`${API.APPLICATION}/course/${course.course_id}`);\n        props.loadCourses(setLoading);\n        props.PushPopupAlert({\n          title: `Course removed successfully`,\n          theme: PopupAlertTheme.success,\n        });\n        setSelectedCourse(null);\n        // console.log(\"Deleted: \", res);\n      } catch (error) {\n        props.PushPopupAlert({\n          title: `Acton failed, Try again later!`,\n          theme: PopupAlertTheme.warning,\n        });\n        setLoading(false);\n        setSelectedCourse(null);\n        console.log(\"err: \", error);\n      }\n      // setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (\n      props.schoolLevels.school_levels === null ||\n      props.schoolLevels.school_levels.length === 0\n    ) {\n      props.loadSchoolLevels(setLoading);\n    }\n    if (props.course.courses === null || props.course.courses.length === 0) {\n      props.loadCourses(setLoading);\n    }\n  }, [props, setLoading]);\n  return (\n    <Fragment>\n      <div className=\"mt-1\">\n        <div className=\"flex flex-row justify-between items-center bg-gray-100 py-1\">\n          <div className=\"text-blue-600 font-extrabold text-xl px-2\">\n            List of courses\n          </div>\n          {loading === false && (\n            <div\n              onClick={() => setAddNew(true)}\n              className=\"btn bg-blue-600 text-white cursor-pointer hover:bg-blue-800\"\n            >\n              Add new\n            </div>\n          )}\n        </div>\n        <div>\n          <input\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n              setSearch(e.target.value)\n            }\n            type=\"text\"\n            className=\"input-white border border-gray-500 my-2\"\n            placeholder=\"Search\"\n            value={search}\n          />\n        </div>\n        <div className=\"flex flex-col\">\n          {props.course.courses === null || loading === true ? (\n            <Loading />\n          ) : props.course.courses.length === 0 ? (\n            <div className=\"text-gray-400 px-6 py-4 rounded border mt-4 text-xl font-extrabold flex flex-col items-center justify-center bg-gray-100\">\n              <HiOutlineDocumentSearch className=\"text-7xl text-gray-400 animate__animated animate__shakeX\" />\n              <span>No courses available</span>\n            </div>\n          ) : (\n            searchData(props.course.courses, search).map((item, i) => (\n              <div\n                className={`border flex flex-row px-3 py-2 rounded items-center my-1 justify-between`}\n              >\n                <div className=\"flex flex-col\">\n                  <span className=\"text-gray-600 font-extrabold\">\n                    {item.course_name}\n                  </span>\n                  <span className={`text-xs pr-5 text-gray-500`}>\n                    {item.description}\n                  </span>\n                </div>\n                <div className=\"flex flex-row items-center gap-2\">\n                  <div\n                    onClick={() =>\n                      setSelectedCourse({\n                        action: CoursesAction.View,\n                        selectedCourse: item,\n                      })\n                    }\n                    className=\"bg-gray-50 hover:bg-gray-200 rounded-full px-1 py-1 cursor-pointer\"\n                  >\n                    <CgDetailsMore className=\"text-3xl text-gray-700\" />\n                  </div>\n                  <div\n                    onClick={() =>\n                      setSelectedCourse({\n                        action: CoursesAction.Update,\n                        selectedCourse: item,\n                      })\n                    }\n                    className=\"bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 cursor-pointer\"\n                  >\n                    <MdEdit className=\"text-3xl text-blue-700\" />\n                  </div>\n                  <div\n                    onClick={() =>\n                      setSelectedCourse({\n                        action: CoursesAction.Delete,\n                        selectedCourse: item,\n                      })\n                    }\n                    className=\"bg-gray-100 hover:bg-red-100 rounded-full px-1 py-1 cursor-pointer\"\n                  >\n                    <IoMdTrash className=\"text-3xl text-yellow-700\" />\n                  </div>\n                </div>\n              </div>\n            ))\n          )}\n        </div>\n      </div>\n      {(addNew === true ||\n        (selectedCourse !== null &&\n          (selectedCourse.action === CoursesAction.Update ||\n            selectedCourse.action === CoursesAction.View))) && (\n        <Modal\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              <div className=\"flex flex-col\">\n                <span className=\"font-extrabold text-2xl text-gray-500\">\n                  {selectedCourse !== null &&\n                  selectedCourse.action === CoursesAction.Update\n                    ? selectedCourse.selectedCourse.course_name\n                    : selectedCourse !== null &&\n                      selectedCourse.action === CoursesAction.View\n                    ? selectedCourse.selectedCourse.course_name\n                    : \"Add new course\"}\n                </span>\n                <span className=\"text-sm text-gray-500 font-normal\">\n                  {selectedCourse !== null &&\n                  selectedCourse.action === CoursesAction.Update\n                    ? \"Update the selected course\"\n                    : selectedCourse !== null &&\n                      selectedCourse.action === CoursesAction.View\n                    ? \"View more details for the selected course\"\n                    : \"Course will be used in different components in the system, make sure what you're creating\"}\n                </span>\n              </div>\n            </div>\n          }\n          backDrop={true}\n          theme={Themes.default}\n          close={() => {\n            setAddNew(false);\n            setSelectedCourse(null);\n          }}\n          widthSizeClass={ModalSize.extraLarge}\n          displayClose={true}\n          backDropClose={true}\n          padding={{ title: true, body: true }}\n        >\n          <AddCourse\n            closeModal={closeAddNewModal}\n            courses={props.course}\n            PushPopupAlert={props.PushPopupAlert}\n            selectedCourse={selectedCourse}\n            deleteSelected={setSelectedCourse}\n            schoolLevels={props.schoolLevels}\n            setSelectedCourse={setSelectedCourse}\n          />\n        </Modal>\n      )}\n      {selectedCourse !== null &&\n        selectedCourse.action === CoursesAction.Delete && (\n          <Modal\n            title={\n              <div className=\"flex flex-row gap-4 items-center\">\n                <div className=\"flex flex-col\">\n                  <span className=\"font-extrabold text-2xl text-gray-500\">\n                    {selectedCourse.selectedCourse.course_name}\n                  </span>\n                </div>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() => setSelectedCourse(null)}\n            widthSizeClass={ModalSize.medium}\n            displayClose={true}\n            backDropClose={true}\n            padding={{ title: true, body: true }}\n          >\n            <div className=\"-mt-6\">\n              <span className=\"text-red-600 font-bold\">\n                Are you sure do you want to delete this course?\n              </span>\n              <div className=\"flex flex-row items-center justify-between mt-2\">\n                <div\n                  onClick={() => setSelectedCourse(null)}\n                  className=\"btn bg-gray-100 text-gray-700 cursor-pointer hover:bg-gray-200\"\n                >\n                  Cancel\n                </div>\n                <div\n                  onClick={() => deleteCourseFn(selectedCourse.selectedCourse)}\n                  className=\"btn bg-red-600 text-white cursor-pointer hover:bg-red-800\"\n                >\n                  Yes, Delete\n                </div>\n              </div>\n            </div>\n          </Modal>\n        )}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  periods,\n  schoolLevels,\n  system,\n  course,\n}: StoreState): {\n  auth: Auth;\n  periods: applicationPeriodsStoreInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n  system: System;\n  course: courseStoreInterface;\n} => {\n  return {\n    auth: auth,\n    periods: periods,\n    schoolLevels: schoolLevels,\n    system: system,\n    course: course,\n  };\n};\n\nconst Courses = connect(mapStateToProps, {\n  loadApplicationPeriods,\n  setSelectedPeriod,\n  loadSchoolLevels,\n  setSelectedEducationCategory,\n  PushPopupAlert,\n  loadCourses,\n})(_Courses);\n\nexport default Courses;\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { IoMdAddCircle } from \"react-icons/io\";\nimport { courseStoreInterface } from \"../../../../actions/course\";\nimport { schoolLevelsStoreInterface } from \"../../../../actions/school_levels\";\nimport { PopupAlertData } from \"../../../../components/Alert/Popup\";\nimport { course, CourseChapter } from \"../../../../interfaces/course\";\nimport { formErrorInterface } from \"../../../../interfaces/form\";\nimport { PopupAlertTheme } from \"../../../../interfaces/popupAlert\";\nimport { API } from \"../../../../utils/api\";\nimport SchoolLevelSelect from \"../SettingsComponents/SchoolLevelSelect\";\nimport { CoursesAction, S_CourseDetails } from \"./Courses\";\nimport { v4 as uuidv4 } from \"uuid\";\n\ninterface AddCourseProps {\n  closeModal: (state: boolean) => void;\n  courses: courseStoreInterface;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  selectedCourse: S_CourseDetails | null;\n  deleteSelected: (selectedDetail: S_CourseDetails) => void;\n  schoolLevels: schoolLevelsStoreInterface;\n  setSelectedCourse: (courseDetail: S_CourseDetails | null) => void;\n}\n\nconst AddCourse = (props: AddCourseProps) => {\n  // States\n  const [course_id, setCourse_id] = useState<string>(\"\");\n  const [course_name, setCourse_name] = useState<string>(\"\");\n  const [course_code, setCourse_code] = useState<string>(\"\");\n  const [description, setDescription] = useState<string>(\"\");\n  const [chapters, setChapters] = useState<CourseChapter[]>([]);\n  const [school_levels, setSchool_levels] = useState<string[]>([]);\n  const [formError, setFormError] = useState<formErrorInterface | null>(null);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [addChapter, setAddChapter] = useState<{\n    openAdd: boolean;\n    chapter: string;\n  }>({ openAdd: false, chapter: \"\" });\n  const submitCourse = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    // validation\n    if (\n      props.selectedCourse?.action === CoursesAction.Update &&\n      course_id === \"\"\n    ) {\n      return setFormError({\n        element: \"course_id\",\n        msg: \"Please choose Course\",\n      });\n    } else if (course_name === \"\") {\n      return setFormError({\n        element: \"course_name\",\n        msg: \"Please fill the course name\",\n      });\n    } else if (course_code === \"\") {\n      return setFormError({\n        element: \"course_code\",\n        msg: \"Please fill the course code\",\n      });\n    } else if (description === \"\") {\n      return setFormError({\n        element: \"description\",\n        msg: \"Please fill the description\",\n      });\n    } else {\n      setLoading(true);\n      try {\n        // Update current\n        if (\n          props.selectedCourse !== null &&\n          props.selectedCourse.selectedCourse.course_id !== undefined\n        ) {\n          let obj: course = {\n            course_id: course_id,\n            course_name: course_name,\n            course_code: course_code,\n            description: description,\n            school_levels: school_levels,\n            chapters: chapters,\n          };\n          await axios.patch(`${API.APPLICATION}/course`, obj);\n          props.PushPopupAlert({\n            title: `Course updated successfully`,\n            description: `After updating the course, you have access to delete and update it!`,\n            theme: PopupAlertTheme.info,\n          });\n          props.setSelectedCourse({\n            action: props.selectedCourse.action,\n            selectedCourse: obj,\n          });\n          props.closeModal(false);\n          // console.log(\"Result: \", res);\n        } else {\n          // Add new\n          await axios.post(`${API.APPLICATION}/course`, {\n            course_name: course_name,\n            course_code: course_code,\n            description: description,\n            school_levels: school_levels,\n            chapters: chapters,\n          });\n          props.PushPopupAlert({\n            title: `Course added successfully`,\n            description: `After adding the Course, you have access to delete and update it!`,\n            theme: PopupAlertTheme.success,\n          });\n          props.closeModal(false);\n          // console.log(\"Result: \", res);\n        }\n      } catch (error: any) {\n        if (error.response) {\n          if (error.response.data) {\n            if (error.response.data.errors !== undefined) {\n              if (error.response.data.errors.length > 0) {\n                props.PushPopupAlert({\n                  title: error.response.data.errors[0].message,\n                  theme: PopupAlertTheme.danger,\n                });\n              } else {\n                props.PushPopupAlert({\n                  title: `Failed to add course! Try again`,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n            } else {\n              props.PushPopupAlert({\n                title: `Failed to add course! Try again`,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          } else {\n            props.PushPopupAlert({\n              title: `Failed to add course! Try again`,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n        console.log(\"Err: \", { ...error });\n      }\n      setLoading(false);\n    }\n  };\n\n  const addNewChapter = () => {\n    if (addChapter.chapter === \"\") {\n      return setAddChapter({ openAdd: false, chapter: \"\" });\n    }\n    if (addChapter.openAdd === true) {\n      setAddChapter({ openAdd: true, chapter: \"\" });\n      setChapters([\n        {\n          name: addChapter.chapter,\n          status: 1,\n          id: uuidv4(),\n        },\n        ...chapters,\n      ]);\n    }\n  };\n\n  const removeChapter = (chapter: CourseChapter) => {\n    setChapters(chapters.filter((itm) => itm.id !== chapter.id));\n  };\n\n  useEffect(() => {\n    if (props.selectedCourse !== null) {\n      // console.log(\"Sle: \", props.selectedCourse);\n      if (course_id === \"\") {\n        setCourse_id(props.selectedCourse.selectedCourse.course_id);\n      }\n      if (course_name === \"\") {\n        setCourse_name(props.selectedCourse.selectedCourse.course_name);\n      }\n      if (course_code === \"\") {\n        setCourse_code(props.selectedCourse.selectedCourse.course_code);\n      }\n      if (description === \"\") {\n        setDescription(props.selectedCourse.selectedCourse.description);\n      }\n      if (school_levels.length === 0) {\n        setSchool_levels(props.selectedCourse.selectedCourse.school_levels);\n      }\n      if (chapters.length === 0) {\n        if (props.selectedCourse.selectedCourse.chapters !== undefined) {\n          setChapters(props.selectedCourse.selectedCourse.chapters);\n        }\n      }\n    }\n  }, [\n    props,\n    course_id,\n    course_name,\n    course_code,\n    description,\n    school_levels,\n    chapters,\n  ]);\n  return (\n    <form onSubmit={submitCourse} className=\"-mt-2\">\n      <div className=\"grid md:grid-cols-12 gap-5\">\n        <div className=\"col-span-6\">\n          <SchoolLevelSelect\n            schoolLevels={props.schoolLevels}\n            school_levels={school_levels}\n            setSchool_levels={setSchool_levels}\n            loading={loading}\n          />\n        </div>\n        <div className=\"col-span-6\">\n          <div className=\"flex flex-col mb-2\">\n            <span className=\"text-sm text-gray-600 font-bold mb-1\">\n              Course name\n            </span>\n            <input\n              disabled={loading}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                setCourse_name(e.target.value);\n                setFormError(null);\n              }}\n              type=\"text\"\n              value={course_name}\n              className={`input-white border-2 ${\n                formError !== null && formError.element === \"course_name\"\n                  ? \"border-red-500\"\n                  : \"border-gray-500\"\n              }`}\n            />\n            {formError !== null && formError.element === \"course_name\" && (\n              <span className=\"text-red-600 font-bold text-xs\">\n                {formError.msg}\n              </span>\n            )}\n          </div>\n          <div className=\"flex flex-col mb-2\">\n            <span className=\"text-sm text-gray-600 font-bold mb-1\">\n              Course code\n            </span>\n            <input\n              disabled={loading}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                setCourse_code(e.target.value);\n                setFormError(null);\n              }}\n              type=\"text\"\n              value={course_code}\n              className={`input-white border-2 ${\n                formError !== null && formError.element === \"course_code\"\n                  ? \"border-red-500\"\n                  : \"border-gray-500\"\n              }`}\n            />\n            {formError !== null && formError.element === \"course_code\" && (\n              <span className=\"text-red-600 font-bold text-xs\">\n                {formError.msg}\n              </span>\n            )}\n          </div>\n          <div className=\"flex flex-col mb-2\">\n            <span className=\"text-sm text-gray-600 font-bold mt-2 mb-1\">\n              Description\n            </span>\n            <textarea\n              disabled={loading}\n              onChange={(e: React.ChangeEvent<HTMLTextAreaElement>) => {\n                setDescription(e.target.value);\n                setFormError(null);\n              }}\n              value={description}\n              className={`input-white border-2 ${\n                formError !== null && formError.element === \"description\"\n                  ? \"border-red-500\"\n                  : \"border-gray-500\"\n              }`}\n              style={{ minHeight: \"100px\" }}\n            >\n              {description}\n            </textarea>\n            {formError !== null && formError.element === \"description\" && (\n              <span className=\"text-red-600 font-bold text-xs\">\n                {formError.msg}\n              </span>\n            )}\n          </div>\n          <div className=\"flex flex-col mb-2\">\n            <div className=\"flex items-center justify-between\">\n              <span className=\"text-gray-600 font-bold\">Course chapters</span>\n              {addChapter.openAdd === false && (\n                <div\n                  onClick={() => setAddChapter({ openAdd: true, chapter: \"\" })}\n                  className=\"cursor-pointer btn bg-blue-50 text-blue-600 text-sm flex flex-row gap-1 items-center\"\n                >\n                  <IoMdAddCircle className=\"text-2xl\" />\n                  <span>Add chapter</span>\n                </div>\n              )}\n            </div>\n            {/* Add chapter */}\n            <div>\n              {addChapter.openAdd === true && (\n                <div className=\"flex flex-row items-center justify-between gap-2 mt-2\">\n                  <input\n                    onChange={(e) => {\n                      setAddChapter({ openAdd: true, chapter: e.target.value });\n                    }}\n                    value={addChapter.chapter}\n                    type=\"text\"\n                    placeholder=\"Chapter name\"\n                    className=\"input-white border-2 rounded border-gray-500\"\n                  />\n                  <div\n                    onClick={() => loading === false && addNewChapter()}\n                    className={`${\n                      loading === false\n                        ? \"cursor-pointer\"\n                        : \"cursor-not-allowed\"\n                    } btn ${\n                      addChapter.chapter === \"\"\n                        ? loading === true\n                          ? \"bg-gray-200\"\n                          : \"bg-red-600\"\n                        : \"bg-blue-600\"\n                    } text-white text-sm flex flex-row gap-1 items-center`}\n                  >\n                    <span>{addChapter.chapter === \"\" ? \"Close\" : \"Add\"}</span>\n                  </div>\n                </div>\n              )}\n            </div>\n            {chapters.length === 0 ? (\n              <div className=\"rounded bg-gray-50 px-2 py-6 mt-2 flex flex-col text-sm text-gray-400 font-extrabold text-center\">\n                No chapters added\n              </div>\n            ) : (\n              <div>\n                {chapters.map((item, i) => (\n                  <div\n                    key={i + 1}\n                    className={`flex flex-row items-center justify-between border ${\n                      props.selectedCourse !== null &&\n                      props.selectedCourse.selectedCourse.chapters &&\n                      props.selectedCourse.selectedCourse.chapters.filter(\n                        (itm) => itm.id === item.id\n                      ).length === 0\n                        ? \"bg-gray-50 border-gray-200 text-gray-500\"\n                        : \"bg-white border-blue-200 text-blue-600\"\n                    } my-1 pl-2 pr-1 py-1 rounded text-sm font-bold`}\n                  >\n                    <span>{item.name}</span>\n                    <div\n                      onClick={() => loading === false && removeChapter(item)}\n                      className={`btn ${\n                        loading === false\n                          ? \"cursor-pointer\"\n                          : \"cursor-not-allowed\"\n                      } bg-red-100 text-red-700 text-xs`}\n                    >\n                      Remove\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n          {addChapter.chapter === \"\" && (\n            <div className=\"flex flex-row justify-between items-center\">\n              {props.selectedCourse?.action === CoursesAction.View ? (\n                <button\n                  onClick={() =>\n                    props.selectedCourse &&\n                    props.deleteSelected({\n                      action: CoursesAction.Delete,\n                      selectedCourse: props.selectedCourse.selectedCourse,\n                    })\n                  }\n                  type=\"button\"\n                  className=\"btn border border-red-600 text-red-700\"\n                >\n                  Delete\n                </button>\n              ) : (\n                <div></div>\n              )}\n              <button\n                disabled={loading}\n                type=\"submit\"\n                className={`btn bg-blue-600 text-white ${\n                  loading === true\n                    ? \"animate__animated animate__flash animate__infinite\"\n                    : \"\"\n                }`}\n              >\n                {loading === true\n                  ? \"Please wait...\"\n                  : props.selectedCourse !== null\n                  ? \"Update course\"\n                  : \"Add course\"}\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default AddCourse;\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { MdEdit } from \"react-icons/md\";\nimport { CgDetailsMore } from \"react-icons/cg\";\nimport { HiOutlineDocumentSearch } from \"react-icons/hi\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadApplicationPeriods,\n  setSelectedPeriod,\n  applicationPeriodsStoreInterface,\n  schoolLevelsStoreInterface,\n  loadEducationCategories,\n  setSelectedEducationCategory,\n  loadSchoolLevels,\n  System,\n  PushPopupAlert,\n} from \"../../../../actions\";\nimport Loading from \"../../../../components/Loading/Loading\";\nimport { StoreState } from \"../../../../reducers\";\nimport Modal, { ModalSize, Themes } from \"../../../../components/Modal/Modal\";\nimport { PopupAlertData } from \"../../../../components/Alert/Popup\";\nimport { IoMdTrash } from \"react-icons/io\";\nimport axios from \"axios\";\nimport { API } from \"../../../../utils/api\";\nimport { PopupAlertTheme } from \"../../../../interfaces/popupAlert\";\nimport { education_category } from \"../../../../interfaces/education_category\";\nimport AddEducationCategory from \"./AddEducationCategory\";\n\ninterface EducationCategoryPropsInterface {\n  system: System;\n  schoolLevels: schoolLevelsStoreInterface;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  loadSchoolLevels: (callback: (loading: boolean) => void) => void;\n}\n\nexport enum EducationCategoryTypeAction {\n  Create = \"Create\",\n  View = \"View\",\n  Delete = \"Delete\",\n  Update = \"Update\",\n}\n\nexport interface E_EducationCategoryDetails {\n  action: EducationCategoryTypeAction;\n  selectedEducationCategory: education_category;\n}\n\nconst _EducationCategories = (props: EducationCategoryPropsInterface) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [addNew, setAddNew] = useState<boolean>(false);\n  const [selectedEducationCategory, setSelectedEducationCategory] =\n    useState<E_EducationCategoryDetails | null>(null);\n\n  const closeAddNewModal = (state: boolean) => {\n    setAddNew(state);\n    props.loadEducationCategories(setLoading);\n  };\n\n  const deleteEducationCategoryFn = async (\n    education_category: education_category\n  ) => {\n    if (education_category.education_institute_id !== undefined) {\n      setLoading(true);\n      try {\n        await axios.delete(\n          `${API.APPLICATION}/educationinstitute/${education_category.education_institute_id}`\n        );\n        props.loadEducationCategories(setLoading);\n        props.PushPopupAlert({\n          title: `Education category removed successfully`,\n          theme: PopupAlertTheme.success,\n        });\n        setSelectedEducationCategory(null);\n        // console.log(\"Deleted: \", res);\n      } catch (error) {\n        console.log(\"err: \", error);\n      }\n      // setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (\n      props.schoolLevels.education_categories === null ||\n      props.schoolLevels.education_categories.length === 0\n    ) {\n      props.loadEducationCategories(setLoading);\n    }\n    if (\n      props.schoolLevels.school_levels === null ||\n      props.schoolLevels.school_levels.length === 0\n    ) {\n      props.loadSchoolLevels(setLoading);\n    }\n  }, [props, setLoading]);\n  return (\n    <Fragment>\n      <div className=\"mt-1\">\n        <div className=\"flex flex-row justify-between items-center bg-gray-100 py-1\">\n          <div className=\"text-blue-600 font-extrabold text-xl px-2\">\n            Lists of education categories\n          </div>\n          {loading === false && (\n            <div\n              onClick={() => setAddNew(true)}\n              className=\"btn bg-blue-600 text-white cursor-pointer hover:bg-blue-800\"\n            >\n              Add new\n            </div>\n          )}\n        </div>\n        <div className=\"flex flex-col\">\n          {props.schoolLevels.education_categories === null ||\n          loading === true ? (\n            <Loading />\n          ) : props.schoolLevels.education_categories.length === 0 ? (\n            <div className=\"text-gray-400 px-6 py-4 rounded border mt-4 text-xl font-extrabold flex flex-col items-center justify-center bg-gray-100\">\n              <HiOutlineDocumentSearch className=\"text-7xl text-gray-400 animate__animated animate__shakeX\" />\n              <span>No education categories available</span>\n            </div>\n          ) : (\n            props.schoolLevels.education_categories.map((item, i) => (\n              <div\n                className={`border flex flex-row px-3 py-2 rounded items-center my-1 justify-between`}\n              >\n                <div className=\"flex flex-col\">\n                  <span className=\"text-gray-600 font-extrabold\">\n                    {item.education_category_title}\n                  </span>\n                  <span className={`text-xs pr-5 text-gray-500`}>\n                    {item.description}\n                  </span>\n                </div>\n                <div className=\"flex flex-row items-center gap-2\">\n                  <div\n                    onClick={() =>\n                      setSelectedEducationCategory({\n                        action: EducationCategoryTypeAction.View,\n                        selectedEducationCategory: item,\n                      })\n                    }\n                    className=\"bg-gray-50 hover:bg-gray-200 rounded-full px-1 py-1 cursor-pointer\"\n                  >\n                    <CgDetailsMore className=\"text-3xl text-gray-700\" />\n                  </div>\n                  <div\n                    onClick={() =>\n                      setSelectedEducationCategory({\n                        action: EducationCategoryTypeAction.Update,\n                        selectedEducationCategory: item,\n                      })\n                    }\n                    className=\"bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 cursor-pointer\"\n                  >\n                    <MdEdit className=\"text-3xl text-blue-700\" />\n                  </div>\n                  <div\n                    onClick={() =>\n                      setSelectedEducationCategory({\n                        action: EducationCategoryTypeAction.Delete,\n                        selectedEducationCategory: item,\n                      })\n                    }\n                    className=\"bg-gray-100 hover:bg-red-100 rounded-full px-1 py-1 cursor-pointer\"\n                  >\n                    <IoMdTrash className=\"text-3xl text-yellow-700\" />\n                  </div>\n                </div>\n              </div>\n            ))\n          )}\n        </div>\n      </div>\n      {(addNew === true ||\n        (selectedEducationCategory !== null &&\n          (selectedEducationCategory.action ===\n            EducationCategoryTypeAction.Update ||\n            selectedEducationCategory.action ===\n              EducationCategoryTypeAction.View))) && (\n        <Modal\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              <div className=\"flex flex-col\">\n                <span className=\"font-extrabold text-2xl text-gray-500\">\n                  {selectedEducationCategory !== null &&\n                  selectedEducationCategory.action ===\n                    EducationCategoryTypeAction.Update\n                    ? selectedEducationCategory.selectedEducationCategory\n                        .education_category_title\n                    : selectedEducationCategory !== null &&\n                      selectedEducationCategory.action ===\n                        EducationCategoryTypeAction.View\n                    ? selectedEducationCategory.selectedEducationCategory\n                        .education_category_title\n                    : \"Add new education category\"}\n                </span>\n                <span className=\"text-sm text-gray-500 font-normal\">\n                  {selectedEducationCategory !== null &&\n                  selectedEducationCategory.action ===\n                    EducationCategoryTypeAction.Update\n                    ? \"Update the selected education category\"\n                    : selectedEducationCategory !== null &&\n                      selectedEducationCategory.action ===\n                        EducationCategoryTypeAction.View\n                    ? \"View more details for the selected education category\"\n                    : \"An education category will be used in different components in the system, make sure what you're creating\"}\n                </span>\n              </div>\n            </div>\n          }\n          backDrop={true}\n          theme={Themes.default}\n          close={() => {\n            setAddNew(false);\n            setSelectedEducationCategory(null);\n          }}\n          widthSizeClass={ModalSize.extraLarge}\n          displayClose={true}\n          backDropClose={true}\n          padding={{ title: true, body: true }}\n        >\n          <AddEducationCategory\n            closeModal={closeAddNewModal}\n            education_categories={props.schoolLevels}\n            PushPopupAlert={props.PushPopupAlert}\n            selectedEducationCategory={selectedEducationCategory}\n            deleteSelected={setSelectedEducationCategory}\n            schoolLevels={props.schoolLevels}\n          />\n        </Modal>\n      )}\n      {selectedEducationCategory !== null &&\n        selectedEducationCategory.action ===\n          EducationCategoryTypeAction.Delete && (\n          <Modal\n            title={\n              <div className=\"flex flex-row gap-4 items-center\">\n                <div className=\"flex flex-col\">\n                  <span className=\"font-extrabold text-2xl text-gray-500\">\n                    {\n                      selectedEducationCategory.selectedEducationCategory\n                        .education_category_title\n                    }\n                  </span>\n                </div>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() => setSelectedEducationCategory(null)}\n            widthSizeClass={ModalSize.medium}\n            displayClose={true}\n            backDropClose={true}\n            padding={{ title: true, body: true }}\n          >\n            <div className=\"-mt-6\">\n              <span className=\"text-red-600 font-bold\">\n                Are you sure do you want to delete this education category?\n              </span>\n              <div className=\"flex flex-row items-center justify-between mt-2\">\n                <div\n                  onClick={() => setSelectedEducationCategory(null)}\n                  className=\"btn bg-gray-100 text-gray-700 cursor-pointer hover:bg-gray-200\"\n                >\n                  Cancel\n                </div>\n                <div\n                  onClick={() =>\n                    deleteEducationCategoryFn(\n                      selectedEducationCategory.selectedEducationCategory\n                    )\n                  }\n                  className=\"btn bg-red-600 text-white cursor-pointer hover:bg-red-800\"\n                >\n                  Yes, Delete\n                </div>\n              </div>\n            </div>\n          </Modal>\n        )}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  periods,\n  schoolLevels,\n  system,\n}: StoreState): {\n  auth: Auth;\n  periods: applicationPeriodsStoreInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n  system: System;\n} => {\n  return {\n    auth: auth,\n    periods: periods,\n    schoolLevels: schoolLevels,\n    system: system,\n  };\n};\n\nconst EducationCategories = connect(mapStateToProps, {\n  loadApplicationPeriods,\n  setSelectedPeriod,\n  loadEducationCategories,\n  setSelectedEducationCategory,\n  PushPopupAlert,\n  loadSchoolLevels,\n})(_EducationCategories);\n\nexport default EducationCategories;\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { schoolLevelsStoreInterface } from \"../../../../actions/school_levels\";\nimport { PopupAlertData } from \"../../../../components/Alert/Popup\";\nimport { formErrorInterface } from \"../../../../interfaces/form\";\nimport { PopupAlertTheme } from \"../../../../interfaces/popupAlert\";\nimport { API } from \"../../../../utils/api\";\nimport SchoolLevelSelect from \"../SettingsComponents/SchoolLevelSelect\";\nimport {\n  EducationCategoryTypeAction,\n  E_EducationCategoryDetails,\n} from \"./EducationCategories\";\n\ninterface AddEducationCategoryProps {\n  closeModal: (state: boolean) => void;\n  education_categories: schoolLevelsStoreInterface;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  selectedEducationCategory: E_EducationCategoryDetails | null;\n  deleteSelected: (selectedDetail: E_EducationCategoryDetails) => void;\n  schoolLevels: schoolLevelsStoreInterface;\n}\n\nconst AddEducationCategory = (props: AddEducationCategoryProps) => {\n  // States\n  const [education_institute_id, setEducation_institute_id] =\n    useState<string>(\"\");\n  const [education_category_title, setEducation_category_title] =\n    useState<string>(\"\");\n  const [description, setDescription] = useState<string>(\"\");\n  const [school_levels, setSchool_levels] = useState<string[]>([]);\n  const [formError, setFormError] = useState<formErrorInterface | null>(null);\n  const [loading, setLoading] = useState<boolean>(false);\n  const submitEducationCategory = async (\n    e: React.FormEvent<HTMLFormElement>\n  ) => {\n    e.preventDefault();\n    // validation\n    if (\n      props.selectedEducationCategory?.action ===\n        EducationCategoryTypeAction.Update &&\n      education_institute_id === \"\"\n    ) {\n      return setFormError({\n        element: \"education_institute_id\",\n        msg: \"Please choose education category\",\n      });\n    } else if (education_category_title === \"\") {\n      return setFormError({\n        element: \"education_category_title\",\n        msg: \"Please fill the education category title\",\n      });\n    } else if (description === \"\") {\n      return setFormError({\n        element: \"description\",\n        msg: \"Please fill the description\",\n      });\n    } else {\n      setLoading(true);\n      try {\n        // Update current\n        console.log(\"Sel schoo le: \", school_levels);\n        if (\n          props.selectedEducationCategory !== null &&\n          props.selectedEducationCategory.selectedEducationCategory\n            .education_institute_id !== undefined\n        ) {\n          await axios.patch(`${API.APPLICATION}/educationinstitute`, {\n            education_institute_id: education_institute_id,\n            education_category_title: education_category_title,\n            description: description,\n            school_levels: school_levels,\n          });\n          props.PushPopupAlert({\n            title: `Education category updated successfully`,\n            description: `After updating the education category, you have access to delete and update it!`,\n            theme: PopupAlertTheme.info,\n          });\n          props.closeModal(false);\n          // console.log(\"Result: \", res);\n        } else {\n          // Add new\n          await axios.post(`${API.APPLICATION}/educationinstitute`, {\n            education_category_title: education_category_title,\n            description: description,\n            school_levels: school_levels,\n          });\n          props.PushPopupAlert({\n            title: `Education category added successfully`,\n            description: `After adding the Education category, you have access to delete and update it!`,\n            theme: PopupAlertTheme.success,\n          });\n          props.closeModal(false);\n          // console.log(\"Result: \", res);\n        }\n      } catch (error) {\n        props.PushPopupAlert({\n          title: `Failed to add Education category! Try again`,\n          theme: PopupAlertTheme.danger,\n        });\n        console.log(\"Err: \", error);\n      }\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (props.selectedEducationCategory !== null) {\n      if (education_institute_id === \"\") {\n        setEducation_institute_id(\n          props.selectedEducationCategory.selectedEducationCategory\n            .education_institute_id\n        );\n      }\n      if (education_category_title === \"\") {\n        setEducation_category_title(\n          props.selectedEducationCategory.selectedEducationCategory\n            .education_category_title\n        );\n      }\n      if (description === \"\") {\n        setDescription(\n          props.selectedEducationCategory.selectedEducationCategory.description\n        );\n      }\n      if (school_levels.length === 0) {\n        setSchool_levels(\n          props.selectedEducationCategory.selectedEducationCategory\n            .school_levels\n        );\n      }\n    }\n  }, [\n    props,\n    education_institute_id,\n    education_category_title,\n    description,\n    school_levels,\n  ]);\n  return (\n    <form onSubmit={submitEducationCategory} className=\"-mt-2\">\n      <div className=\"grid md:grid-cols-12 gap-5\">\n        <div className=\"col-span-6\">\n          <SchoolLevelSelect\n            schoolLevels={props.schoolLevels}\n            school_levels={school_levels}\n            setSchool_levels={setSchool_levels}\n            loading={loading}\n          />\n        </div>\n        <div className=\"col-span-6\">\n          <div className=\"flex flex-col mb-2\">\n            <span className=\"text-sm text-gray-600 font-bold mb-1\">Title</span>\n            <input\n              disabled={loading}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                setEducation_category_title(e.target.value);\n                setFormError(null);\n              }}\n              type=\"text\"\n              value={education_category_title}\n              className={`input-white border-2 ${\n                formError !== null && formError.element === \"title\"\n                  ? \"border-red-500\"\n                  : \"border-gray-500\"\n              }`}\n            />\n            {formError !== null && formError.element === \"title\" && (\n              <span className=\"text-red-600 font-bold text-xs\">\n                {formError.msg}\n              </span>\n            )}\n          </div>\n          <div className=\"flex flex-col mb-2\">\n            <span className=\"text-sm text-gray-600 font-bold mt-2 mb-1\">\n              Description\n            </span>\n            <textarea\n              disabled={loading}\n              onChange={(e: React.ChangeEvent<HTMLTextAreaElement>) => {\n                setDescription(e.target.value);\n                setFormError(null);\n              }}\n              value={description}\n              className={`input-white border-2 ${\n                formError !== null && formError.element === \"description\"\n                  ? \"border-red-500\"\n                  : \"border-gray-500\"\n              }`}\n              style={{ minHeight: \"100px\" }}\n            >\n              {description}\n            </textarea>\n            {formError !== null && formError.element === \"description\" && (\n              <span className=\"text-red-600 font-bold text-xs\">\n                {formError.msg}\n              </span>\n            )}\n          </div>\n          <div className=\"flex flex-row justify-between items-center\">\n            {props.selectedEducationCategory?.action ===\n            EducationCategoryTypeAction.View ? (\n              <button\n                onClick={() =>\n                  props.selectedEducationCategory &&\n                  props.deleteSelected({\n                    action: EducationCategoryTypeAction.Delete,\n                    selectedEducationCategory:\n                      props.selectedEducationCategory.selectedEducationCategory,\n                  })\n                }\n                type=\"button\"\n                className=\"btn border border-red-600 text-red-700\"\n              >\n                Delete\n              </button>\n            ) : (\n              <div></div>\n            )}\n            <button\n              disabled={loading}\n              type=\"submit\"\n              className={`btn bg-blue-600 text-white ${\n                loading === true\n                  ? \"animate__animated animate__flash animate__infinite\"\n                  : \"\"\n              }`}\n            >\n              {loading === true\n                ? \"Please wait...\"\n                : props.selectedEducationCategory !== null\n                ? \"Update\"\n                : \"Add\"}\n            </button>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default AddEducationCategory;\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { MdEdit } from \"react-icons/md\";\nimport { CgDetailsMore } from \"react-icons/cg\";\nimport { HiOutlineDocumentSearch } from \"react-icons/hi\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadApplicationPeriods,\n  setSelectedPeriod,\n  applicationPeriodsStoreInterface,\n  schoolLevelsStoreInterface,\n  loadEducationCategories,\n  setSelectedEducationCategory,\n  questionTypesStoreInterface,\n  loadQuestionTypes,\n  System,\n  PushPopupAlert,\n} from \"../../../../actions\";\nimport Loading from \"../../../../components/Loading/Loading\";\nimport { StoreState } from \"../../../../reducers\";\nimport Modal, { ModalSize, Themes } from \"../../../../components/Modal/Modal\";\nimport AddQuestionType from \"./AddQuestionType\";\nimport { PopupAlertData } from \"../../../../components/Alert/Popup\";\nimport { IoMdTrash } from \"react-icons/io\";\nimport { questionType } from \"../../../../interfaces/question\";\nimport axios from \"axios\";\nimport { API } from \"../../../../utils/api\";\nimport { PopupAlertTheme } from \"../../../../interfaces/popupAlert\";\n\ninterface QuestionTypesPropsInterface {\n  system: System;\n  questionTypes: questionTypesStoreInterface;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\nexport enum QT_QuestionTypeAction {\n  Create = \"Create\",\n  View = \"View\",\n  Delete = \"Delete\",\n  Update = \"Update\",\n}\n\nexport interface QT_QuestionTypeDetails {\n  action: QT_QuestionTypeAction;\n  selectedQuestionType: questionType;\n}\n\nconst _QuestionTypes = (props: QuestionTypesPropsInterface) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [addNew, setAddNew] = useState<boolean>(false);\n  const [selectedQuestionType, setSelectedQuestionType] =\n    useState<QT_QuestionTypeDetails | null>(null);\n\n  const closeAddNewModal = (state: boolean) => {\n    setAddNew(state);\n    props.loadQuestionTypes(setLoading);\n  };\n\n  const deleteQuestionTypeFn = async (questionType: questionType) => {\n    if (questionType.id !== undefined) {\n      setLoading(true);\n      try {\n        await axios.delete(`${API.QBank}/question-type/${questionType.id}`);\n        props.loadQuestionTypes(setLoading);\n        props.PushPopupAlert({\n          title: `Question type removed successfully`,\n          theme: PopupAlertTheme.success,\n        });\n        setSelectedQuestionType(null);\n        // console.log(\"Deleted: \", res);\n      } catch (error: any) {\n        console.log(\"err: \", { ...error });\n      }\n      // setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (\n      props.questionTypes.questionTypes === null ||\n      props.questionTypes.questionTypes.length === 0\n    ) {\n      props.loadQuestionTypes(setLoading);\n    }\n  }, [props, setLoading]);\n  return (\n    <Fragment>\n      <div className=\"mt-1\">\n        <div className=\"flex flex-row justify-between items-center bg-gray-100 py-1\">\n          <div className=\"text-blue-600 font-extrabold text-xl px-2\">\n            Lists of question types\n          </div>\n          {loading === false && (\n            <div\n              onClick={() => setAddNew(true)}\n              className=\"btn bg-blue-600 text-white cursor-pointer hover:bg-blue-800\"\n            >\n              Add new\n            </div>\n          )}\n        </div>\n        <div className=\"flex flex-col\">\n          {props.questionTypes.questionTypes === null || loading === true ? (\n            <Loading />\n          ) : props.questionTypes.questionTypes.length === 0 ? (\n            <div className=\"text-gray-400 px-6 py-4 rounded border mt-4 text-xl font-extrabold flex flex-col items-center justify-center bg-gray-100\">\n              <HiOutlineDocumentSearch className=\"text-7xl text-gray-400 animate__animated animate__shakeX\" />\n              <span>No question types available</span>\n            </div>\n          ) : (\n            props.questionTypes.questionTypes.map((item, i) => (\n              <div\n                className={`border flex flex-row px-3 py-2 rounded items-center my-1 justify-between`}\n              >\n                <div className=\"flex flex-col\">\n                  <span className=\"text-gray-600 font-extrabold\">\n                    {item.title}\n                  </span>\n                  <span className={`text-xs pr-5 text-gray-500`}>\n                    {item.description}\n                  </span>\n                </div>\n                <div className=\"flex flex-row items-center gap-2\">\n                  <div\n                    onClick={() =>\n                      setSelectedQuestionType({\n                        action: QT_QuestionTypeAction.View,\n                        selectedQuestionType: item,\n                      })\n                    }\n                    className=\"bg-gray-50 hover:bg-gray-200 rounded-full px-1 py-1 cursor-pointer\"\n                  >\n                    <CgDetailsMore className=\"text-3xl text-gray-700\" />\n                  </div>\n                  <div\n                    onClick={() =>\n                      setSelectedQuestionType({\n                        action: QT_QuestionTypeAction.Update,\n                        selectedQuestionType: item,\n                      })\n                    }\n                    className=\"bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 cursor-pointer\"\n                  >\n                    <MdEdit className=\"text-3xl text-blue-700\" />\n                  </div>\n                  <div\n                    onClick={() =>\n                      setSelectedQuestionType({\n                        action: QT_QuestionTypeAction.Delete,\n                        selectedQuestionType: item,\n                      })\n                    }\n                    className=\"bg-gray-100 hover:bg-red-100 rounded-full px-1 py-1 cursor-pointer\"\n                  >\n                    <IoMdTrash className=\"text-3xl text-yellow-700\" />\n                  </div>\n                </div>\n              </div>\n            ))\n          )}\n        </div>\n      </div>\n      {(addNew === true ||\n        (selectedQuestionType !== null &&\n          (selectedQuestionType.action === QT_QuestionTypeAction.Update ||\n            selectedQuestionType.action === QT_QuestionTypeAction.View))) && (\n        <Modal\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              <div className=\"flex flex-col\">\n                <span className=\"font-extrabold text-2xl text-gray-500\">\n                  {selectedQuestionType !== null &&\n                  selectedQuestionType.action === QT_QuestionTypeAction.Update\n                    ? selectedQuestionType.selectedQuestionType.title\n                    : selectedQuestionType !== null &&\n                      selectedQuestionType.action === QT_QuestionTypeAction.View\n                    ? selectedQuestionType.selectedQuestionType.title\n                    : \"Add new question type\"}\n                </span>\n                <span className=\"text-sm text-gray-500 font-normal\">\n                  {selectedQuestionType !== null &&\n                  selectedQuestionType.action === QT_QuestionTypeAction.Update\n                    ? \"Update the selected question type\"\n                    : selectedQuestionType !== null &&\n                      selectedQuestionType.action === QT_QuestionTypeAction.View\n                    ? \"View more details for the selected question type\"\n                    : \"New question type will be visible at the time of question preparation\"}\n                </span>\n              </div>\n            </div>\n          }\n          backDrop={true}\n          theme={Themes.default}\n          close={() => {\n            setAddNew(false);\n            setSelectedQuestionType(null);\n          }}\n          widthSizeClass={ModalSize.medium}\n          displayClose={true}\n          backDropClose={true}\n          padding={{ title: true, body: true }}\n        >\n          <AddQuestionType\n            closeModal={closeAddNewModal}\n            questionTypes={props.questionTypes}\n            PushPopupAlert={props.PushPopupAlert}\n            selectedQuestionType={selectedQuestionType}\n            deleteSelected={setSelectedQuestionType}\n          />\n        </Modal>\n      )}\n      {selectedQuestionType !== null &&\n        selectedQuestionType.action === QT_QuestionTypeAction.Delete && (\n          <Modal\n            title={\n              <div className=\"flex flex-row gap-4 items-center\">\n                <div className=\"flex flex-col\">\n                  <span className=\"font-extrabold text-2xl text-gray-500\">\n                    {selectedQuestionType.selectedQuestionType.title}\n                  </span>\n                </div>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() => setSelectedQuestionType(null)}\n            widthSizeClass={ModalSize.medium}\n            displayClose={true}\n            backDropClose={true}\n            padding={{ title: true, body: true }}\n          >\n            <div className=\"-mt-6\">\n              <span className=\"text-red-600 font-bold\">\n                Are you sure do you want to delete this question type?\n              </span>\n              <div className=\"flex flex-row items-center justify-between mt-2\">\n                <div\n                  onClick={() => setSelectedQuestionType(null)}\n                  className=\"btn bg-gray-100 text-gray-700 cursor-pointer hover:bg-gray-200\"\n                >\n                  Cancel\n                </div>\n                <div\n                  onClick={() =>\n                    deleteQuestionTypeFn(\n                      selectedQuestionType.selectedQuestionType\n                    )\n                  }\n                  className=\"btn bg-red-600 text-white cursor-pointer hover:bg-red-800\"\n                >\n                  Yes, Delete\n                </div>\n              </div>\n            </div>\n          </Modal>\n        )}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  periods,\n  schoolLevels,\n  questionTypes,\n  system,\n}: StoreState): {\n  auth: Auth;\n  periods: applicationPeriodsStoreInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n  questionTypes: questionTypesStoreInterface;\n  system: System;\n} => {\n  return {\n    auth: auth,\n    periods: periods,\n    schoolLevels: schoolLevels,\n    questionTypes: questionTypes,\n    system: system,\n  };\n};\n\nconst QuestionTypes = connect(mapStateToProps, {\n  loadApplicationPeriods,\n  setSelectedPeriod,\n  loadEducationCategories,\n  setSelectedEducationCategory,\n  loadQuestionTypes,\n  PushPopupAlert,\n})(_QuestionTypes);\n\nexport default QuestionTypes;\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { questionTypesStoreInterface } from \"../../../../actions/questionTypes\";\nimport { PopupAlertData } from \"../../../../components/Alert/Popup\";\nimport { formErrorInterface } from \"../../../../interfaces/form\";\nimport { PopupAlertTheme } from \"../../../../interfaces/popupAlert\";\nimport { questionTypeElements } from \"../../../../interfaces/question\";\nimport { API } from \"../../../../utils/api\";\nimport { QT_QuestionTypeAction, QT_QuestionTypeDetails } from \"./QuestionTypes\";\n\ninterface AddQuestionTypeProps {\n  closeModal: (state: boolean) => void;\n  questionTypes: questionTypesStoreInterface;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  selectedQuestionType: QT_QuestionTypeDetails | null;\n  deleteSelected: (selectedDetail: QT_QuestionTypeDetails) => void;\n}\n\nconst AddQuestionType = (props: AddQuestionTypeProps) => {\n  // States\n  const [title, setTitle] = useState<string>(\"\");\n  const [element, setElement] = useState<string>(\"\");\n  const [description, setDescription] = useState<string>(\"\");\n  const [formError, setFormError] = useState<formErrorInterface | null>(null);\n  const [loading, setLoading] = useState<boolean>(false);\n  const submitQuestionType = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    // validation\n    if (title === \"\") {\n      return setFormError({\n        element: \"title\",\n        msg: \"Please fill the title\",\n      });\n    } else if (element === \"\" || element.length === 0) {\n      return setFormError({\n        element: \"element\",\n        msg: \"Please fill the element\",\n      });\n    } else if (description === \"\") {\n      return setFormError({\n        element: \"description\",\n        msg: \"Please fill the description\",\n      });\n    } else {\n      setLoading(true);\n      try {\n        // Update current\n        if (\n          props.selectedQuestionType !== null &&\n          props.selectedQuestionType.selectedQuestionType.id !== undefined\n        ) {\n          await axios.put(\n            `${API.QBank}/question-type/${props.selectedQuestionType.selectedQuestionType.id}`,\n            {\n              status: 1,\n              title: title,\n              element: element,\n              description: description,\n            }\n          );\n          props.PushPopupAlert({\n            title: `Question type updated successfully`,\n            description: `After updating the question type, you have access to delete and update it!`,\n            theme: PopupAlertTheme.info,\n          });\n          props.closeModal(false);\n          // console.log(\"Result: \", res);\n        } else {\n          // Add new\n          await axios.post(`${API.QBank}/question-type`, {\n            status: 1,\n            title: title,\n            element: element,\n            description: description,\n          });\n          props.PushPopupAlert({\n            title: `Question type added successfully`,\n            description: `After adding the question type, you have access to delete and update it!`,\n            theme: PopupAlertTheme.success,\n          });\n          props.closeModal(false);\n          // console.log(\"Result: \", res);\n        }\n      } catch (error: any) {\n        props.PushPopupAlert({\n          title: `Failed to add question type! Try again`,\n          theme: PopupAlertTheme.danger,\n        });\n        console.log(\"Err: \", { ...error });\n      }\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (props.selectedQuestionType !== null) {\n      if (title === \"\") {\n        setTitle(props.selectedQuestionType.selectedQuestionType.title);\n      }\n      if (element === \"\") {\n        setElement(props.selectedQuestionType.selectedQuestionType.element);\n      }\n      if (description === \"\") {\n        setDescription(\n          props.selectedQuestionType.selectedQuestionType.description\n        );\n      }\n    }\n  }, [props, title, element, description]);\n  return (\n    <form onSubmit={submitQuestionType} className=\"-mt-2\">\n      <div className=\"flex flex-col mb-2\">\n        <span className=\"text-sm text-gray-600 font-bold mt-2 mb-1\">\n          Element\n        </span>\n        {props.selectedQuestionType !== null ? (\n          <div className=\"bg-blue-100 text-blue-600 font-bold px-3 py-2 rounded\">\n            {\n              questionTypeElements.find(\n                (itm) =>\n                  props.selectedQuestionType &&\n                  itm.key ===\n                    props.selectedQuestionType.selectedQuestionType.element\n              )?.value\n            }\n          </div>\n        ) : (\n          <select\n            disabled={loading}\n            onChange={(e: React.ChangeEvent<HTMLSelectElement>) => {\n              setElement(e.target.value);\n              setFormError(null);\n            }}\n            className={`input-white border-2 ${\n              formError !== null && formError.element === \"element\"\n                ? \"border-red-500\"\n                : \"border-gray-500\"\n            }`}\n          >\n            <option value=\"\">Choose element</option>\n            {questionTypeElements.map((item, i) => (\n              <>\n                {props.questionTypes.questionTypes &&\n                  props.questionTypes.questionTypes.find(\n                    (itm) => itm.element === item.key\n                  ) === undefined && (\n                    <option\n                      selected={element === item.key ? true : false}\n                      key={i + 1}\n                      value={item.key}\n                    >\n                      {item.value}\n                    </option>\n                  )}\n              </>\n            ))}\n          </select>\n        )}\n        {formError !== null && formError.element === \"element\" && (\n          <span className=\"text-red-600 font-bold text-xs\">\n            {formError.msg}\n          </span>\n        )}\n      </div>\n      <div className=\"flex flex-col mb-2\">\n        <span className=\"text-sm text-gray-600 font-bold mb-1\">Title</span>\n        <input\n          disabled={loading}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setTitle(e.target.value);\n            setFormError(null);\n          }}\n          type=\"text\"\n          value={title}\n          className={`input-white border-2 ${\n            formError !== null && formError.element === \"title\"\n              ? \"border-red-500\"\n              : \"border-gray-500\"\n          }`}\n        />\n        {formError !== null && formError.element === \"title\" && (\n          <span className=\"text-red-600 font-bold text-xs\">\n            {formError.msg}\n          </span>\n        )}\n      </div>\n      <div className=\"flex flex-col mb-2\">\n        <span className=\"text-sm text-gray-600 font-bold mt-2 mb-1\">\n          Description\n        </span>\n        <textarea\n          disabled={loading}\n          onChange={(e: React.ChangeEvent<HTMLTextAreaElement>) => {\n            setDescription(e.target.value);\n            setFormError(null);\n          }}\n          value={description}\n          className={`input-white border-2 ${\n            formError !== null && formError.element === \"description\"\n              ? \"border-red-500\"\n              : \"border-gray-500\"\n          }`}\n          style={{ minHeight: \"100px\" }}\n        >\n          {description}\n        </textarea>\n        {formError !== null && formError.element === \"description\" && (\n          <span className=\"text-red-600 font-bold text-xs\">\n            {formError.msg}\n          </span>\n        )}\n      </div>\n      <div className=\"flex flex-row justify-between items-center\">\n        {props.selectedQuestionType?.action === QT_QuestionTypeAction.View ? (\n          <button\n            onClick={() =>\n              props.selectedQuestionType &&\n              props.deleteSelected({\n                action: QT_QuestionTypeAction.Delete,\n                selectedQuestionType:\n                  props.selectedQuestionType.selectedQuestionType,\n              })\n            }\n            type=\"button\"\n            className=\"btn border border-red-600 text-red-700\"\n          >\n            Delete\n          </button>\n        ) : (\n          <div></div>\n        )}\n        <button\n          disabled={loading}\n          type=\"submit\"\n          className={`btn bg-blue-600 text-white ${\n            loading === true\n              ? \"animate__animated animate__flash animate__infinite\"\n              : \"\"\n          }`}\n        >\n          {loading === true\n            ? \"Please wait...\"\n            : props.selectedQuestionType !== null\n            ? \"Update question type\"\n            : \"Add question type\"}\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default AddQuestionType;\n","import React from 'react'\nimport { ImCheckboxChecked, ImCheckboxUnchecked } from 'react-icons/im'\nimport { schoolLevelsStoreInterface } from '../../../../actions/school_levels'\n\ninterface SchoolLevelSelectProps {\n  schoolLevels: schoolLevelsStoreInterface;\n  school_levels: string[];\n  setSchool_levels: (item: string[]) => void;\n  loading: boolean;\n}\n\nconst SchoolLevelSelect = (props: SchoolLevelSelectProps) => {\n  return (\n    <div className=\"rounded flex flex-col gap-2 overflow-y-auto border pb-3 px-3\" style={{height: '80vh'}}>\n      <div className=\"flex flex-row items-center gap-2\">\n        <span className=\"text-sm text-gray-600 font-bold mt-2 mb-1\">Choose school level</span><span className=\"text-xs text-gray-500 italic mt-2 mb-1\">(Optional)</span>\n      </div>\n      {props.schoolLevels.school_levels?.map((item, i) => (\n        <div onClick={() => props.loading === false && props.setSchool_levels(props.school_levels.find(itm => itm === item.school_level_id) ? props.school_levels.filter(x => x !== item.school_level_id) :[...props.school_levels, item.school_level_id])} key={i + 1}className={`flex flex-row items-center gap-3 p-3 rounded cursor-pointer ${props.school_levels.find(itm => itm === item.school_level_id) ? \"bg-blue-50 text-blue-600\" : props.loading === true ? \"bg-gray-100 text-gray-400\" : \"bg-gray-100 text-gray-600\"} ${props.loading === true ? \"hover:bg-gray-100 hover:text-gray-400\" : \"hover:bg-blue-100 hover:text-blue-600\"}`}>\n          {props.school_levels.find(itm => itm === item.school_level_id) ?\n          <ImCheckboxChecked className=\"text-3xl\" /> :\n          <ImCheckboxUnchecked className=\"text-3xl\" />}\n          <div className=\"flex flex-col gap-0\">\n            <span className=\"font-extrabold text-lg\">{item.school_level_name}</span>\n            <span className=\"text-xs -mt-1\">{item.description}</span>\n          </div>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default SchoolLevelSelect\n"],"sourceRoot":""}
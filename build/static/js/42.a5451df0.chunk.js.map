{"version":3,"sources":["actions/users.ts","components/Table/Table.tsx","components/Navigation/SideNavigation.tsx","containers/UserManagement/UserAccess.tsx","containers/UserManagement/UserList.tsx","shared/blank_profile.png","containers/UserManagement/RoleList.tsx","containers/UserManagement/UserRole.tsx","containers/UserManagement/index.tsx"],"names":["documentValidationStatus","fetchUserAccess","dispatch","a","setAxiosToken","axios","get","API","AUTH","res","console","log","users_response","type","ActionTypes","FETCH_USERS_ACCESS","payload","data","users","error","user_error","blockUserToSystem","BLOCK_USER_TO_SYSTEM","unBlockUserToSystem","UNBLOCK_USER_TO_SYSTEM","assignRoleToUserAccess","ASSIGN_ROLE_TO_USER","customizeUserAccess","CUSTOMIZE_USER_ACCESS","resetUserAccess","RESET_USER_ACCESS","verifyAllDocument","VERIFY_ALL_DOCUMENT","Table","table","tr","rows","columns","hideColumns","pagination","search","tableSize","tableClass","tableId","rounded","searchBG","thColor","loading","length","result","characters","charactersLength","i","charAt","Math","floor","random","FC_makeID","useState","totalItems","setTotalItems","totalPages","setTotalPages","currentPage","setCurrentPage","pages","setPages","pageSize","setPageSize","startIndex","setStartIndex","endIndex","setEndIndex","useEffect","tablePagination","document","getElementById","getElementsByTagName","ceil","min","_pages","Array","from","keys","map","style","display","className","placeholder","onChange","e","filterType","filter","td","cols","toLowerCase","textContent","innerText","indexOf","filterTable","target","value","disabled","Number","id","column","index","padding","alignText","isSortAllowed","onClick","switching","x","y","shouldSwitch","colIndex","dir","switchcount","innerHTML","parentNode","insertBefore","sortThisColumn","columnTitle","aria-label","page","pageIndex","_SideNavigation","props","componentDidMount","PageHasSubNav","componentWillUnmount","state","this","auth","isAuthenticated","navActive","system","navigation","children","React","Component","SideNavigation","connect","NavToogle","MainItem","title","icon","MdBrightness1","active","count","IconDefined","SubItemContainer","SubItem","UserAccess","userInfo","setFeedBack","setUserAccess","feedBack","userAccess","currentAccess","setCurrentAccess","setLoadind","loadindRequest","setLoadindRequest","createPermission","setCreatePermission","viewPermission","setViewPermission","updatePermission","setUpdatePermission","deletePermission","setDeletePermission","overrideUserAccess","default_access","custome_access","overideAccess","key","Object","prototype","hasOwnProperty","call","findCustom","find","custom","push","access","entries","handleCustomization","preventDefault","message","task","findIndex","permitted","create","view","update","delete","user_id","custome_user_access_id","patch","post","customize_access","errorToText","onSubmit","checked","ModalState","RoleList","searchInput","setSearchInput","roleList","setChooseRole","role","handleSelectRole","system_user_role_id","capitalizeFirstLetter","UserRole","setRoleId","setState","roleId","setSelectedRole","selectedRole","setProvinceId","provinceId","setDistrictId","districtId","setCenterId","centerId","setRoomId","roomId","setLoadingForm","loadingForm","setSchoolId","schoolId","setLoading","setInstituteId","instituteId","setFormError","formError","setLoadingRequest","loadingRequest","chooseRole","setDefaultState","LOAD_province","LOAD_district","district_required","roomList","distinctDistrict","item","_id","district_id","province_id","room_required","LocationsInArray","room_id","center_id","school_required","schoolList","LOAD_school","school_id","vvvvv","role_id","TYPE","element","tableData","colSpan","assignRoleToUser","window","confirm","msg","isEmptyOrSpaces","education_institution_required","formData","status","education_institution_id","setChangeRole","PushPopupAlert","theme","PopupAlertTheme","success","role_error","danger","location","ids","districts","keyDistrict","includes","distinctCenter","rooms","forEach","distinctRoom","Loading","schoolLevels","education_categories","institute","education_institute_id","education_category_title","province","province_name","undefined","district","district_name","school","school_name","center","center_name","room","room_name","LocationData","locationTemp","p","d","centers","c","r","room_number","toString","capacity","occupied","userTypes","loadingUser","setLoadingUser","manageUser","setManageUser","changeRole","manageUserId","setManageUserId","loadingRequestType","setLoadingRequestType","setSchoolList","setRoomList","roomTable","setRoomTables","loadSchools","APPLICATION","loadRooms","blockUser","actionType","restUserAccess","resetedAccess","user","reseting_user_access","user_info","fname","lname","email","sex","getRoleById","src","photo","profile","alt","getInstituteById","NoResult","NoResultThemes","Dark","n_id","phone_number","is_active","TabTypes","UserManagment","userList","accessRoles","fetchAccessRoles","loadEducationCategories","allUser","activeUser","blockedUser","labelCounts","setLabelCounts","userTabs","All_Users","setDistrict","userData","setUserData","loadingUsers","setLoadingUsers","filterByRoleLevel","setFilerByRoleLevel","detailFeedBack","setDetailFeedBack","loadDistrict","code_error","filterByRole","Blocked_Users","Active_Users"],"mappings":"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","file":"static/js/42.a5451df0.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AssignRoleToUserActionInterface,\n  CustomeAccessInterface,\n  UserInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\ninterface FetchUsersAction {\n  type: ActionTypes.FETCH_USERS_ACCESS;\n  payload: UserInterface[];\n}\n\ninterface BlockUserToSystem {\n  type: ActionTypes.BLOCK_USER_TO_SYSTEM | ActionTypes.UNBLOCK_USER_TO_SYSTEM;\n  payload: string;\n}\n\ninterface AssignRoleToUserAction {\n  type: ActionTypes.ASSIGN_ROLE_TO_USER;\n  payload: AssignRoleToUserActionInterface;\n}\n\ninterface CustomizeUserAccessAction {\n  type: ActionTypes.CUSTOMIZE_USER_ACCESS;\n  payload: CustomeAccessInterface;\n}\n\ninterface ResetUserAccessAction {\n  type: ActionTypes.RESET_USER_ACCESS;\n  payload: string;\n}\n\ntype fetchUserAccessInterface = {\n  users: UserInterface[];\n  next: {\n    page: number;\n    limit: number;\n  } | null;\n  previous: {\n    page: number;\n    limit: number;\n  } | null;\n  total_users: number;\n};\n\nexport enum documentValidationStatus {\n  waiting = \"waiting\",\n  approved = \"approved\",\n  rejected = \"rejected\",\n}\n\nexport interface VerifyDocumentInterface {\n  user_id: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date?: string;\n  };\n  in_education: boolean;\n  disability: boolean;\n}\n\ninterface VerifyAllDocumentAction {\n  type: ActionTypes.VERIFY_ALL_DOCUMENT;\n  payload: VerifyDocumentInterface;\n}\n\nexport type AccessUserActionType =\n  | FetchUsersAction\n  | BlockUserToSystem\n  | AssignRoleToUserAction\n  | CustomizeUserAccessAction\n  | ResetUserAccessAction\n  | VerifyAllDocumentAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const fetchUserAccess = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<fetchUserAccessInterface>(\n        `${API.AUTH}/users?page=1&limit=500`\n      );\n      console.log({ users_response: res });\n      dispatch<FetchUsersAction>({\n        type: ActionTypes.FETCH_USERS_ACCESS,\n        payload: res.data.users,\n      });\n    } catch (error) {\n      console.error({ user_error: error });\n    }\n  };\n};\n\nexport const blockUserToSystem = (data: string) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<BlockUserToSystem>({\n      type: ActionTypes.BLOCK_USER_TO_SYSTEM,\n      payload: data,\n    });\n  };\n};\n\nexport const unBlockUserToSystem = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<BlockUserToSystem>({\n      type: ActionTypes.UNBLOCK_USER_TO_SYSTEM,\n      payload: data,\n    });\n  };\n};\n\nexport const assignRoleToUserAccess = (\n  data: AssignRoleToUserActionInterface\n) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<AssignRoleToUserAction>({\n      type: ActionTypes.ASSIGN_ROLE_TO_USER,\n      payload: data,\n      // payload: response.data,\n    });\n  };\n};\n\nexport const customizeUserAccess = (data: CustomeAccessInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CustomizeUserAccessAction>({\n      type: ActionTypes.CUSTOMIZE_USER_ACCESS,\n      payload: data,\n    });\n  };\n};\n\nexport const resetUserAccess = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<ResetUserAccessAction>({\n      type: ActionTypes.RESET_USER_ACCESS,\n      payload: data,\n    });\n  };\n};\n\nexport const verifyAllDocument = (data: VerifyDocumentInterface) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<VerifyAllDocumentAction>({\n      type: ActionTypes.VERIFY_ALL_DOCUMENT,\n      payload: data,\n    });\n  };\n};\n","import React, { useEffect, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport { MdNavigateBefore, MdNavigateNext, MdSearch } from \"react-icons/md\";\n\nconst FC_makeID = (length: number = 5): string => {\n  let result: string = \"\";\n  let characters: string =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  let charactersLength = characters.length;\n  for (let i: number = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\nexport const sortThisColumn = (\n  tableId: string,\n  colIndex: number = 0,\n  dir: \"asc\" | \"desc\" = \"asc\"\n) => {\n  var table,\n    rows,\n    switching,\n    i,\n    x,\n    y,\n    shouldSwitch,\n    switchcount = 0;\n  table = document.getElementById(tableId) as HTMLTableElement;\n  switching = true;\n  /* Make a loop that will continue until\n  no switching has been done: */\n  if (table) {\n    while (switching) {\n      //start by saying: no switching is done:\n      switching = false;\n      rows = table.rows;\n      /*Loop through all table rows (except the\n    first, which contains table headers):*/\n      for (i = 1; i < rows.length - 1; i++) {\n        //start by saying there should be no switching:\n        shouldSwitch = false;\n        /*Get the two elements you want to compare,\n      one from current row and one from the next:*/\n        x = rows[i].getElementsByTagName(\"TD\")[colIndex];\n        y = rows[i + 1].getElementsByTagName(\"TD\")[colIndex];\n        /*check if the two rows should switch place,\n      based on the direction, asc or desc:*/\n        if (dir === \"asc\" && x && y) {\n          if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        } else if (dir === \"desc\" && x && y) {\n          if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        }\n      }\n      if (shouldSwitch && rows[i].parentNode) {\n        /*If a switch has been marked, make the switch\n      and mark that a switch has been done:*/\n        rows[i].parentNode!.insertBefore(rows[i + 1], rows[i]);\n        switching = true;\n        //Each time a switch is done, increase this count by 1:\n        switchcount++;\n      } else {\n        /*If no switching has been done AND the direction is \"asc\",\n      set the direction to \"desc\" and run the while loop again.*/\n        if (switchcount === 0 && dir === \"asc\") {\n          dir = \"desc\";\n          switching = true;\n        }\n      }\n      // if (i === 0) continue;\n      // rows.cells[i].style.backgroundColor = \"blue\";\n    }\n  }\n};\n\nexport interface TableColumnsInterface {\n  columnTitle: JSX.Element | string;\n  alignText: string;\n  padding?: string;\n  isSortAllowed?: boolean;\n}\n\ninterface TableProps {\n  columns: TableColumnsInterface[];\n  rows: Function;\n  hideColumns?: boolean;\n  pagination?: boolean;\n  search?: boolean;\n  tableSize?: string;\n  tableClass?: string;\n  tableId?: string;\n  rounded?: boolean;\n  searchBG?: string;\n  thColor?: string;\n  loading?: boolean;\n}\n\nconst Table: React.FC<TableProps> = ({\n  rows,\n  columns,\n  hideColumns = false,\n  pagination = false,\n  search = false,\n  tableSize = \"w-full\",\n  tableClass,\n  tableId = \"myTable\",\n  rounded = false,\n  searchBG = \"bg-gray-200\",\n  thColor = \"blue\",\n  loading = false,\n}) => {\n  const startPage = 1;\n  tableId = tableId === \"myTable\" ? FC_makeID() : tableId;\n  let table: HTMLElement, tr: HTMLCollectionOf<HTMLTableRowElement>;\n  const [totalItems, setTotalItems] = useState<number>(0);\n  const [totalPages, setTotalPages] = useState<number>(1);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [pages, setPages] = useState<number[]>();\n  const [pageSize, setPageSize] = useState<number>(10);\n  const [startIndex, setStartIndex] = useState<number>(0);\n  const [endIndex, setEndIndex] = useState<number>(0);\n\n  useEffect(() => {\n    pagination && tablePagination();\n  });\n\n  const filterTable = (\n    data: string,\n    filterType?: \"default\" | \"field\"\n  ): void => {\n    var filter, tr, td, rows: number, cols: number, txtValue;\n    if (filterType === \"field\" && data === \"all\") data = \"\";\n    filter = data.toLowerCase();\n    table = document.getElementById(tableId)!;\n    tr = table.getElementsByTagName(\"tr\");\n    for (rows = 0; rows < tr.length; rows++) {\n      for (cols = 0; cols < columns.length; cols++) {\n        td = tr[rows].getElementsByTagName(\"td\")[cols];\n        if (td) {\n          txtValue = td.textContent || td.innerText;\n          if (txtValue.toLowerCase().indexOf(filter) > -1) {\n            tr[rows].style.display = \"\";\n            break;\n          } else {\n            tr[rows].style.display = \"none\";\n          }\n        }\n      }\n    }\n  };\n\n  const tablePagination = (): void => {\n    table = document.getElementById(tableId)!;\n    tr = table.getElementsByTagName(\"tr\");\n    setTotalItems(tr.length);\n    setTotalPages(Math.ceil(totalItems / pageSize));\n\n    // calculate start and end item indexes on the current page\n    setStartIndex((currentPage - 1) * pageSize);\n    setEndIndex(Math.min(startIndex + pageSize - 1, totalItems - 1));\n\n    /**\n     * TODO!\n     * There is a problem with this condition\n     */\n    let _pages = Array.from(Array(totalPages + 1 - startPage).keys()).map(\n      (i) => startPage + i\n    );\n    if (!pages || _pages.length !== pages.length) {\n      setPages(_pages);\n    }\n\n    for (let i: number = 0; i < tr.length; i++) {\n      if (i >= startIndex && i <= endIndex) {\n        tr[i].style.display = \"\";\n      } else {\n        tr[i].style.display = \"none\";\n      }\n    }\n  };\n\n  return (\n    <div className={`${tableSize}`}>\n      {/* search box  */}\n      {search && (\n        <div className={`${searchBG} w-full mb-2`}>\n          {search && (\n            <div className=\"bg-white rounded flex items-center w-full p-2 border-2 border-gray-500\">\n              <MdSearch className=\"h-5 w-5 fill-current text-gray-400\" />\n              <input\n                type=\"search\"\n                placeholder=\"search\"\n                onChange={(e) => filterTable(e.target.value)}\n                className=\"w-full h-6 pl-4 text-sm outline-none focus:outline-none bg-white\"\n                disabled={loading}\n              />\n\n              {pagination && (\n                <div className=\"select\">\n                  <select\n                    className=\"text-base outline-none focus:outline-none bg-white\"\n                    onChange={(e) => setPageSize(Number(e.target.value))}\n                    disabled={loading}\n                  >\n                    <option value=\"10\">10</option>\n                    <option value=\"25\">25</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                  </select>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n      <table\n        className={\n          tableClass\n            ? tableClass\n            : `w-full shadow ${\n                rounded && \"sm:rounded-lg\"\n              } table-auto order-table`\n        }\n        id={tableId}\n      >\n        {!hideColumns && (\n          <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-base\">\n            <tr\n              className={`text-left tracking-wide bg-${thColor}-100 border-b-2 border-${thColor}-500 text-${thColor}-600`}\n            >\n              {columns.map((column, index) => (\n                <th\n                  key={index}\n                  className={`${column.padding} text-${\n                    column.alignText\n                  } px-3 py-2 ${column.isSortAllowed && \"cursor-pointer\"}`}\n                  onClick={() =>\n                    column.isSortAllowed && sortThisColumn(tableId, index)\n                  }\n                >\n                  <div className=\"flex items-center gap-1\">\n                    {column.columnTitle}\n                    {column.isSortAllowed && <BiSort />}\n                  </div>\n                </th>\n              ))}\n            </tr>\n          </thead>\n        )}\n        <tbody id=\"table-data\" className=\"bg-white text-black text-base\">\n          {rows()}\n        </tbody>\n      </table>\n      {pagination && (\n        <div className=\"sm:flex-1 sm:flex sm:items-center sm:justify-between mt-4 work-sans\">\n          <div>\n            <span className=\"text-xs xs:text-sm text-gray-900\">\n              Showing 1 to {pageSize} of {totalItems - 1} Entries\n            </span>\n          </div>\n          <div>\n            <nav className=\"inline-flex shadow-sm\">\n              <div>\n                <button\n                  type=\"button\"\n                  className={`inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 text-sm font-medium text-gray-500 ${\n                    currentPage !== 1 && \"bg-white\"\n                  }`}\n                  aria-label=\"Previous\"\n                  disabled={currentPage === 1 || loading}\n                  onClick={() => setCurrentPage(currentPage - 1)}\n                >\n                  <MdNavigateBefore className=\"h-5 w-5\" />\n                </button>\n              </div>\n              <div>\n                {pages &&\n                  pages.map((page, pageIndex) => (\n                    <button\n                      key={pageIndex}\n                      className={`-ml-px inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium text-gray-700 ${\n                        page !== currentPage\n                          ? \"bg-white\"\n                          : \"bg-gray-100 cursor-default\"\n                      }`}\n                      disabled={page === currentPage || loading}\n                      onClick={() => setCurrentPage(page)}\n                    >\n                      {page}\n                    </button>\n                  ))}\n              </div>\n              <div>\n                <button\n                  type=\"button\"\n                  className={`inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 text-sm leading-5 font-medium text-gray-500 ${\n                    currentPage !== totalPages && \"bg-white\"\n                  }`}\n                  aria-label=\"Next\"\n                  disabled={currentPage === totalPages || loading}\n                  onClick={() => setCurrentPage(currentPage + 1)}\n                >\n                  <MdNavigateNext className=\"h-5 w-5\" />\n                </button>\n              </div>\n            </nav>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Table;\n","import React, { FC, ReactElement, ReactNode } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, System } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { NavToogle, PageHasSubNav } from \"../../actions\";\nimport { MdBrightness1, MdSearch } from \"react-icons/md\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  system: System;\n  PageHasSubNav: Function;\n  NavToogle: Function;\n  children: ReactNode;\n}\n//\ninterface AppState {\n  loading: boolean;\n}\n\nclass _SideNavigation extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount = () => this.props.PageHasSubNav(true);\n  componentWillUnmount = () => this.props.PageHasSubNav(false);\n\n  render() {\n    const isAuthenticated = this.props.auth.isAuthenticated;\n\n    if (isAuthenticated === false) {\n      return null;\n    }\n\n    const navActive = this.props.system.navigation;\n    return (\n      <div\n        className={`fixed w-48 p-1 pr-2 pl-6 text-gray-700 bg-white ${\n          navActive === true ? \"lg:left-16  left-16\" : \" -left-72 lg:left-16\"\n        }  top-0 bottom-0 pt-20 z-30 shadow-lg  transition-all duration-500 ease-in-out overflow-y-auto`}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n}: StoreState): { auth: Auth; system: System } => {\n  return { auth: auth, system: system };\n};\n\nexport const SideNavigation = connect(mapStateToProps, {\n  NavToogle,\n  PageHasSubNav,\n})(_SideNavigation);\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SearchComponentInterface = {\n  data: any[];\n};\n\nexport const Search: FC<SearchComponentInterface> = ({\n  data,\n}): ReactElement => {\n  return (\n    <div className=\"m-1 rounded-md shadow-md border border-blue-400 bg-white p-1 flex \">\n      <label htmlFor=\"search-text\" className=\"inline-block text-2xl\">\n        <MdSearch className=\"inline-block text-blue-400\" />\n      </label>\n      <input\n        type=\"search\"\n        className=\"outline-none bg-transparent flex-1 pl-1\"\n        placeholder=\"Search\"\n        id=\"search-text\"\n      />\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype MainItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const MainItem: FC<MainItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n  return (\n    <section\n      className={`${\n        active === true\n          ? \"bg-blue-500 text-white font-bold\"\n          : \"bg-blue-100 text-blue-800\"\n      } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex cursor-pointer items-center`}\n    >\n      <section className=\"flex-1\">\n        <IconDefined className=\"inline-block mr-1 text-xs\" />\n        <span>{title}</span>\n      </section>\n\n      {count > 0 ? (\n        <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n          {count}\n        </span>\n      ) : null}\n    </section>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemContainerComponentInterface = {\n  children: ReactNode;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const SubItemContainer: FC<SubItemContainerComponentInterface> = ({\n  children,\n}): ReactElement => {\n  return (\n    <div className=\"ml-3 overflow-y-auto border-l-2 border-blue-200 -mt-1 pt-2 mb-2 pl-1 cursor-pointer\">\n      {children}\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n * @important Remenber to use these components inside the <SubItemContainer>...</SubItemContainer>\n */\nexport const SubItem: FC<SubItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n\n  return (\n    <div\n      className={`animate__animated animate__zoomIn animate__faster ${\n        active === true ? \"bg-blue-500 text-white font-bold\" : \" text-blue-800\"\n      } text-blue-800 bg-blue-200 rounded-md px-1 mb-1 flex items-center py-1 font-bold`}\n    >\n      <IconDefined\n        className={`inline-block mr-0.1 text-xs ${\n          active === true ? \"text-white\" : \"\"\n        }`}\n      />\n      <span\n        className={`inline-block pl-1 ${active === true ? \"text-white\" : \"\"}`}\n      >\n        {title}\n      </span>\n      {count >= 1 ? (\n        <span\n          className={`text-sm fint-bold ${active === true ? \"text-white\" : \"\"}`}\n        >\n          {count}\n        </span>\n      ) : null}\n    </div>\n  );\n};\n","import axios from \"axios\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { BiRightArrowAlt } from \"react-icons/bi\";\nimport {\n  MdDelete,\n  MdEdit,\n  MdHighlightOff,\n  MdRemoveRedEye,\n  MdSettings,\n} from \"react-icons/md\";\nimport { SiAddthis } from \"react-icons/si\";\nimport { TiInputChecked } from \"react-icons/ti\";\nimport { connect } from \"react-redux\";\nimport { customizeUserAccess } from \"../../actions/users\";\nimport Table from \"../../components/Table/Table\";\nimport {\n  AccessTaskInterface,\n  CustomeAccessInterface,\n  UserInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\n\ninterface AppProps {\n  userInfo: UserInterface;\n  manageUserId: string;\n  customizeUserAccess: Function;\n  setFeedBack: React.Dispatch<\n    React.SetStateAction<{\n      type: \"success\" | \"danger\" | \"warning\" | \"\";\n      message: string;\n    }>\n  >;\n  feedBack: {\n    type: \"success\" | \"danger\" | \"warning\" | \"\";\n    message: string;\n  };\n  setUserAccess: React.Dispatch<\n    React.SetStateAction<AccessTaskInterface[] | null>\n  >;\n  userAccess: AccessTaskInterface[] | null;\n  setCurrentAccess: React.Dispatch<\n    React.SetStateAction<AccessTaskInterface | null>\n  >;\n  currentAccess: AccessTaskInterface | null;\n}\n\nconst _UserAccess: React.FC<AppProps> = ({\n  userInfo,\n  customizeUserAccess,\n  setFeedBack,\n  feedBack,\n  setUserAccess,\n  userAccess,\n  currentAccess,\n  setCurrentAccess,\n}) => {\n  const [loading, setLoadind] = useState<boolean>(true);\n  const [loadindRequest, setLoadindRequest] = useState<boolean>(false);\n  // const [currentAccess, setCurrentAccess] =\n  //   useState<AccessTaskInterface | null>();\n  // const [userAccess, setUserAccess] = useState<AccessTaskInterface[] | null>();\n  const [createPermission, setCreatePermission] = useState<boolean>(false);\n  const [viewPermission, setViewPermission] = useState<boolean>(false);\n  const [updatePermission, setUpdatePermission] = useState<boolean>(false);\n  const [deletePermission, setDeletePermission] = useState<boolean>(false);\n\n  const overrideUserAccess = (\n    default_access: AccessTaskInterface[],\n    custome_access: AccessTaskInterface[]\n  ) => {\n    if (default_access && custome_access && custome_access.length > 0) {\n      let overideAccess: AccessTaskInterface[] = [];\n      // for (const [key, access] of Object.entries(default_access)) {\n      //   const findCustom = custome_access.find(\n      //     (custom) => custom.id === access.id\n      //   );\n      //   if (findCustom) {\n      //     overideAccess.push(findCustom);\n      //   } else {\n      //     overideAccess.push(access);\n      //   }\n      // }\n      for (const key in default_access) {\n        if (Object.prototype.hasOwnProperty.call(default_access, key)) {\n          const findCustom = custome_access.find(\n            (custom) => custom.id === default_access[key].id\n          );\n          if (findCustom) {\n            overideAccess.push(findCustom);\n          } else {\n            overideAccess.push(default_access[key]);\n          }\n        }\n      }\n      setUserAccess(overideAccess);\n    }\n  };\n\n  useEffect(() => {\n    const overrideUserAccess = (\n      default_access: AccessTaskInterface[],\n      custome_access: AccessTaskInterface[]\n    ) => {\n      if (default_access && custome_access && custome_access.length > 0) {\n        let overideAccess: AccessTaskInterface[] = [];\n        for (const [key, access] of Object.entries(default_access)) {\n          const findCustom = custome_access.find(\n            (custom) => custom.id === access.id\n          );\n          if (findCustom) {\n            overideAccess.push(findCustom);\n          } else {\n            overideAccess.push(access);\n          }\n          console.log(key);\n        }\n        setUserAccess(overideAccess);\n      }\n    };\n\n    if (userInfo && userInfo.custome_access) {\n      userInfo.default_access &&\n        overrideUserAccess(\n          userInfo.default_access.access,\n          userInfo.custome_access.access\n        );\n    }\n  }, [userInfo, setUserAccess]);\n\n  useEffect(() => {\n    if (userInfo && !userInfo.custome_access) {\n      userInfo.default_access && setUserAccess(userInfo.default_access.access);\n    }\n    setLoadind(false);\n  }, [userInfo, setUserAccess]);\n\n  const tableData = (): JSX.Element[] => {\n    if (!userAccess)\n      return [\n        <tr key={46}>\n          <td>No data</td>\n        </tr>,\n      ];\n    return userAccess.map((access: AccessTaskInterface, i) => (\n      <tr\n        key={i + access.id}\n        className={`text-left border-b border-gray-200 cursor-pointer hover:bg-gray-100 ${\n          currentAccess &&\n          currentAccess.id === access.id &&\n          \"bg-gray-200 border my-3 hover:bg-gray-100\"\n        }`}\n        onClick={() =>\n          currentAccess && currentAccess.id === access.id\n            ? (setCurrentAccess(null),\n              setCreatePermission(false),\n              setViewPermission(false),\n              setUpdatePermission(false),\n              setDeletePermission(false))\n            : (setCurrentAccess(access),\n              setCreatePermission(access.permitted.create),\n              setViewPermission(access.permitted.view),\n              setUpdatePermission(access.permitted.update),\n              setDeletePermission(access.permitted.delete))\n        }\n      >\n        <td className=\"px-2 py-1\">\n          <label className=\"inline-flex items-center\">\n            {/* <input\n              type=\"radio\"\n              name=\"taskAccess\"\n              value={access.id}\n              className=\"form-radio h-4 w-4 text-gray-600\"\n              onChange={() => {\n                currentAccess\n                  ? this.setState({ currentAccess: null })\n                  : this.setState({ currentAccess: access });\n              }}\n              checked={currentAccess ? true : false}\n            /> */}\n            <span className=\"text-gray-900 capitalize text-xl font-normal cursor-pointer\">\n              {access.task}\n            </span>\n          </label>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.create ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.create ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.create ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.view ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.view ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.view ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.update ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.update ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.update ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.delete ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.delete ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.delete ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n      </tr>\n    ));\n  };\n\n  const handleCustomization = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setLoadindRequest(true);\n    setFeedBack({\n      type: \"\",\n      message: \"\",\n    });\n    let task: [] | CustomeAccessInterface | null = null;\n    task = userInfo.custome_access;\n    let index = -1;\n\n    try {\n      if (task && currentAccess) {\n        index = task.access.findIndex(\n          (access) => access.id === currentAccess.id\n        );\n        if (index >= 0) {\n          task.access[index].permitted.create = createPermission;\n          task.access[index].permitted.view = viewPermission;\n          task.access[index].permitted.update = updatePermission;\n          task.access[index].permitted.delete = deletePermission;\n        } else {\n          task.access.push({\n            id: currentAccess.id,\n            task: currentAccess.task,\n            key: currentAccess.key,\n            permitted: {\n              create: createPermission,\n              view: viewPermission,\n              update: updatePermission,\n              delete: deletePermission,\n            },\n          });\n        }\n      } else if (currentAccess) {\n        task = {\n          access: [\n            {\n              id: currentAccess.id,\n              task: currentAccess.task,\n              key: currentAccess.key,\n              permitted: {\n                create: createPermission,\n                view: viewPermission,\n                update: updatePermission,\n                delete: deletePermission,\n              },\n            },\n          ],\n          user_id: userInfo.user_id,\n          custome_user_access_id: \"\",\n        };\n      }\n\n      if (task) {\n        let res;\n        if (userInfo.custome_access !== null) {\n          res = await axios.patch<{ data: CustomeAccessInterface }>(\n            `${API.AUTH}/custaccess`,\n            {\n              access: task.access,\n              user_id: userInfo.user_id,\n            }\n          );\n        } else {\n          res = await axios.post<{ data: CustomeAccessInterface }>(\n            `${API.AUTH}/custaccess`,\n            {\n              access: task.access,\n              user_id: userInfo.user_id,\n            }\n          );\n        }\n\n        if (res) {\n          task.custome_user_access_id = res.data.data.custome_user_access_id;\n          console.log({ task });\n          console.log(res.data.data);\n\n          customizeUserAccess(task);\n          task &&\n            userInfo.default_access &&\n            overrideUserAccess(userInfo.default_access.access, task.access);\n          setFeedBack({\n            type: \"success\",\n            message: `Reseting User Access complete successfully`,\n          });\n\n          task = null;\n          setCurrentAccess(null);\n          setCreatePermission(false);\n          setViewPermission(false);\n          setUpdatePermission(false);\n          setDeletePermission(false);\n        }\n      }\n    } catch (error) {\n      console.error({ customize_access: error });\n      setFeedBack({\n        type: \"danger\",\n        message: errorToText(error),\n      });\n    }\n    setLoadindRequest(false);\n  };\n\n  if (loading === true || userInfo === null) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading User Access...\n      </div>\n    );\n  }\n\n  if (loading) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading...\n      </div>\n    );\n  }\n\n  return (\n    <Fragment>\n      <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4 mx-1 my-2\">\n        <div\n          className={`col-span-1 md:col-span-3 bg-white w-full overflow-x-auto border rounded text-center p-2 ${\n            currentAccess ? \"hidden md:block\" : \"\"\n          }`}\n        >\n          <span className=\"text-gray-600 mt-2 font-semibold text-2xl\">\n            Settings\n          </span>\n          {!loading && (\n            <div className=\"overflow-x-auto w-full\">\n              <Table\n                columns={[\n                  {\n                    columnTitle: \"Access Name\",\n                    alignText: \"left\",\n                    padding: \"p-3\",\n                  },\n                  { columnTitle: \"Create\", alignText: \"left\" },\n                  { columnTitle: \"View\", alignText: \"left\" },\n                  { columnTitle: \"Update\", alignText: \"left\" },\n                  { columnTitle: \"Delete\", alignText: \"left\" },\n                ]}\n                rows={tableData}\n                pagination={false}\n                search={true}\n                searchBG=\"bg-gray-50\"\n                thColor=\"gray\"\n              />\n            </div>\n          )}\n        </div>\n        <div className={`col-span-1 md:col-span-2`}>\n          {!currentAccess ? (\n            <div className=\"w-full hidden md:flex flex-col items-center text-gray-600 gap-1 py-3\">\n              <MdSettings className=\"w-20 h-20\" />\n              <span className=\"text-8 md:text-12\">\n                Choose Access to Customize\n              </span>\n            </div>\n          ) : (\n            <div className={``}>\n              <h1 className=\"text-2xl md:text-3xl font-semibold text-center my-2 text-gray-900\">\n                Customize User Access\n              </h1>\n              <div className=\"flex justify-center mb-3\">\n                <h2 className=\"text-2xl font-semibold text-center text-gray-600 flex flex-row items-center\">\n                  <BiRightArrowAlt className=\"w-7 h-7\" />\n                  {currentAccess.task}\n                </h2>\n              </div>\n\n              <div className=\"flex flex-col px-2 md:px-1\">\n                <form\n                  className=\"flex flex-col items-center\"\n                  onSubmit={(e) => handleCustomization(e)}\n                >\n                  <div className=\"inline-flex gap-2 items-center\">\n                    <SiAddthis className=\"w-7 h-7 text-gray-600\" />\n                    <div className=\"flex flex-col\">\n                      <h3 className=\"font-semibold text-xl\">Create</h3>\n                      <span className=\"text-gray-600 text-sm md:pr-1\">\n                        This permission gives the user the ability to create\n                      </span>\n                    </div>\n                    <input\n                      type=\"checkbox\"\n                      className=\"form-checkbox h-7 w-7 text-teal-600\"\n                      onChange={() => setCreatePermission(!createPermission)}\n                      checked={createPermission}\n                      disabled={loadindRequest}\n                    />\n                  </div>\n                  <div className=\"inline-flex gap-2 items-center\">\n                    <MdRemoveRedEye className=\"w-7 h-7 text-gray-600\" />\n                    <div className=\"flex flex-col\">\n                      <h3 className=\"font-semibold text-xl\">View</h3>\n                      <span className=\"text-gray-600 text-sm md:pr-4\">\n                        This permission gives the user the ability to view\n                      </span>\n                    </div>\n                    <input\n                      type=\"checkbox\"\n                      className=\"form-checkbox h-7 w-7 text-teal-600\"\n                      onChange={() => setViewPermission(!viewPermission)}\n                      checked={viewPermission}\n                      disabled={loadindRequest}\n                    />\n                  </div>\n                  <div className=\"inline-flex gap-2 items-center\">\n                    <MdEdit className=\"w-7 h-7 text-gray-600\" />\n                    <div className=\"flex flex-col\">\n                      <h3 className=\"font-semibold text-xl\">Update</h3>\n                      <span className=\"text-gray-600 text-sm\">\n                        This permission gives the user the ability to update\n                      </span>\n                    </div>\n                    <input\n                      type=\"checkbox\"\n                      className=\"form-checkbox h-7 w-7 text-teal-600\"\n                      onChange={() => setUpdatePermission(!updatePermission)}\n                      checked={updatePermission}\n                      disabled={loadindRequest}\n                    />\n                  </div>\n                  <div className=\"inline-flex gap-2 items-center\">\n                    <MdDelete className=\"w-7 h-7 text-gray-600\" />\n                    <div className=\"flex flex-col\">\n                      <h3 className=\"font-semibold text-xl\">Delete</h3>\n                      <span className=\"text-gray-600 text-sm md:pr-1\">\n                        This permission gives the user the ability to delete\n                      </span>\n                    </div>\n                    <input\n                      type=\"checkbox\"\n                      className=\"form-checkbox h-7 w-7 text-teal-600\"\n                      onChange={() => setDeletePermission(!deletePermission)}\n                      checked={deletePermission}\n                      disabled={loadindRequest}\n                    />\n                  </div>\n\n                  <div className=\"flex items-center justify-center w-full py-3 gap-2\">\n                    {/* <button className=\"btn btn-secondary bg-red-600\">Back</button> */}\n                    <button\n                      className=\"btn bg-gray-500 hover:bg-gray-700 focus:outline-none text-white\"\n                      disabled={loadindRequest}\n                      onClick={() => {\n                        setCurrentAccess(null);\n                        setCreatePermission(false);\n                        setViewPermission(false);\n                        setUpdatePermission(false);\n                        setDeletePermission(false);\n                      }}\n                    >\n                      Cancel\n                    </button>\n                    <button className=\"btn btn-blue\" disabled={loadindRequest}>\n                      {!loadindRequest ? \"Save Change\" : \"Processing..\"}\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport const UserAccess = connect(null, {\n  customizeUserAccess,\n})(_UserAccess);\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { MdErrorOutline, MdClose, MdLock, MdLocationOn } from \"react-icons/md\";\nimport Table from \"../../components/Table/Table\";\n\nimport {\n  capitalizeFirstLetter,\n  getInstituteById,\n  getRoleById,\n} from \"../../shared/dataTest\";\nimport { connect } from \"react-redux\";\nimport {\n  AccessTaskInterface,\n  DistrictInterface,\n  LocationRoomTableInterface,\n  RoomLocationInterface,\n  SchoolsInterface,\n  SystemUserRoleInterface,\n  UserInterface,\n} from \"../../shared/interfaces\";\nimport profile from \"../../shared/blank_profile.png\"; // with im\nimport { UserAccess } from \"./UserAccess\";\nimport UserRole from \"./UserRole\";\nimport {\n  blockUserToSystem,\n  unBlockUserToSystem,\n  resetUserAccess,\n} from \"../../actions/users\";\nimport { errorToText } from \"../../utils/errors\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { StoreState } from \"../../reducers\";\nimport { schoolLevelsStoreInterface } from \"../../actions\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\n\nexport enum ModalState {\n  View_User = \"View User Info\",\n  Add_Access = \"Add Access To User\",\n  Update_Access = \"Update User Access\",\n  Close_Modal = \"Close Modal\",\n}\n\ninterface AppProps {\n  users: UserInterface[];\n  roleList: SystemUserRoleInterface[];\n  userTypes: \"all\" | \"active\" | \"blocked\";\n  district: DistrictInterface[];\n  loadingUser: boolean;\n  schoolLevels: schoolLevelsStoreInterface;\n  setLoadingUser: React.Dispatch<React.SetStateAction<boolean>>;\n  manageUser: UserInterface | null;\n  setManageUser: React.Dispatch<React.SetStateAction<UserInterface | null>>;\n  changeRole: boolean;\n  setChangeRole: React.Dispatch<React.SetStateAction<boolean>>;\n  feedBack: {\n    type: \"success\" | \"danger\" | \"warning\" | \"\";\n    message: string;\n  };\n  setFeedBack: React.Dispatch<\n    React.SetStateAction<{\n      type: \"success\" | \"danger\" | \"warning\" | \"\";\n      message: string;\n    }>\n  >;\n  blockUserToSystem: Function;\n  unBlockUserToSystem: Function;\n  resetUserAccess: Function;\n}\n\n// Tobe replaced with Emmy's function\nexport const LocationsInArray = (\n  LocationData: RoomLocationInterface[]\n): LocationRoomTableInterface[] | [] => {\n  let locationTemp: LocationRoomTableInterface[] = [];\n  for (let p in LocationData) {\n    let districts = LocationData[p].districts;\n    for (let d in districts) {\n      let centers = districts[d].centers;\n      for (let c in centers) {\n        let rooms = centers[c].rooms;\n        for (let r in rooms) {\n          locationTemp.push({\n            province_id: LocationData[p]._id,\n            province_name: LocationData[p].province_name,\n            district_id: districts[d]._id,\n            district_name: districts[d].district_name,\n            center_id: centers[c]._id,\n            center_name: centers[c].center_name,\n            room_id: rooms[r]._id,\n            room_name: rooms[r].room_number.toString(),\n            capacity: rooms[r].capacity,\n            occupied: rooms[r].occupied,\n          });\n        }\n      }\n    }\n  }\n  return locationTemp;\n};\n\nconst UserList: React.FC<AppProps> = ({\n  users,\n  roleList,\n  userTypes,\n  district,\n  loadingUser,\n  schoolLevels,\n  setLoadingUser,\n  blockUserToSystem,\n  unBlockUserToSystem,\n  manageUser,\n  setManageUser,\n  changeRole,\n  setChangeRole,\n  feedBack,\n  setFeedBack,\n  resetUserAccess,\n}) => {\n  // const [manageUser, setManageUser] = useState<UserInterface | null>();\n  const [manageUserId, setManageUserId] = useState<string>(\"\");\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n  const [loadingRequestType, setLoadingRequestType] = useState<\n    \"RESET\" | \"STATUS\" | \"CHANGE_ROLE\" | null\n  >(null);\n  const [schoolList, setSchoolList] = useState<SchoolsInterface[] | null>(null);\n  const [roomList, setRoomList] = useState<RoomLocationInterface[] | null>(\n    null\n  );\n  const [roomTable, setRoomTables] = useState<\n    LocationRoomTableInterface[] | null\n  >(null);\n  const [userAccess, setUserAccess] = useState<AccessTaskInterface[] | null>(\n    null\n  );\n  const [currentAccess, setCurrentAccess] =\n    useState<AccessTaskInterface | null>(null);\n\n  useEffect(() => {\n    const loadSchools = async () => {\n      setFeedBack({ type: \"\", message: \"\" });\n      setLoadingUser(true);\n      try {\n        const res = await axios.get<SchoolsInterface[]>(\n          `${API.APPLICATION}/schools`\n        );\n        setSchoolList(res.data);\n        setLoadingUser(false);\n      } catch (error) {\n        setFeedBack({ type: \"danger\", message: errorToText(error) });\n      }\n    };\n    const loadRooms = async () => {\n      setFeedBack({ type: \"\", message: \"\" });\n      setLoadingUser(true);\n\n      try {\n        const res = await axios.get<RoomLocationInterface[]>(\n          `${API.APPLICATION}/roomlocation`\n        );\n        setRoomList(res.data);\n        setRoomTables(LocationsInArray(res.data));\n        setLoadingUser(false);\n      } catch (error) {\n        setFeedBack({ type: \"danger\", message: errorToText(error) });\n      }\n    };\n\n    loadSchools();\n    loadRooms();\n  }, [setFeedBack, setLoadingUser]);\n\n  const tableData = (): JSX.Element[] => {\n    if (loadingUser === true) {\n      return [\n        <tr key={1} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={8}>\n            <Loading />\n          </td>\n        </tr>,\n      ];\n    }\n\n    let data: UserInterface[] = users;\n    if (data.length <= 0) {\n      return [\n        <tr key={1} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={8}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    return data.map((user: UserInterface, index: number) => (\n      <tr\n        key={index}\n        className=\"border-b border-gray-200 hover:bg-gray-100 group cursor-pointer\"\n        onClick={() => {\n          setManageUser(user);\n          setManageUserId(user.user_id);\n        }}\n      >\n        <td className=\"p-3 text-left whitespace-nowrap\">{index + 1}</td>\n        <td className=\"p-3 text-left\">\n          <span>\n            {user.user_info &&\n              user.user_info.fname + \" \" + user.user_info.lname}\n          </span>\n        </td>\n        <td className=\"p-3 text-left\">{user.email}</td>\n        {/* <td className=\"p-3 text-left\">{user.phone_number}</td> */}\n        <td className=\"p-3 text-left\">\n          {user.user_info && user.user_info.sex === \"M\" ? \"Male\" : \"Female\"}\n        </td>\n        <td className=\"p-3 text-left text-blue-700 text-base font-medium\">\n          {user.default_access &&\n            user.default_access.system_user_role_id &&\n            user.default_access.system_user_role_id && (\n              <span\n                className={`px-2 py-1 font-semibold rounded text-blue-700 bg-blue-100 dark:bg-blue-700 dark:text-blue-100`}\n              >\n                {getRoleById(roleList, user.default_access.system_user_role_id)\n                  ?.role &&\n                  capitalizeFirstLetter(\n                    getRoleById(\n                      roleList,\n                      user.default_access.system_user_role_id\n                    )?.role\n                  )}\n              </span>\n            )}\n        </td>\n        {/* {userTypes === \"all\" && (\n          <td>\n            {user.is_active ? (\n              <span className={`px-2 py-1 font-semibold text-green-700`}>\n                Active\n              </span>\n            ) : (\n              <span className={`px-2 py-1 font-semibold text-red-700`}>\n                Blocked\n              </span>\n            )}\n          </td>\n        )} */}\n        <td className=\"px-3 text-center\">\n          <button\n            className=\"btn bg-gray-200 group-hover:bg-blue-700 group-hover:text-white focus:outline-none\"\n            title=\"Manage User Access\"\n            onClick={() => {\n              setManageUser(user);\n              setManageUserId(user.user_id);\n            }}\n          >\n            Manage\n          </button>\n        </td>\n      </tr>\n    ));\n  };\n\n  const blockUser = (\n    user_id: string,\n    actionType: \"block\" | \"un-block\" = \"block\"\n  ): void => {\n    setFeedBack({\n      type: \"\",\n      message: \"\",\n    });\n    if (!user_id) {\n      setFeedBack({\n        type: \"warning\",\n        message: \"User Access is required doesn't exist\",\n      });\n    }\n\n    setLoadingRequest(true);\n\n    if (!window.confirm(`Are sure you want to ${actionType} this user?`)) {\n      return setLoadingRequest(false);\n    }\n    actionType === \"block\"\n      ? blockUserToSystem(user_id)\n      : unBlockUserToSystem(user_id);\n\n    setFeedBack({\n      type: \"success\",\n      message: `User has been ${\n        actionType === \"block\" ? \"block\" : \"unblock\"\n      }ed!`,\n    });\n\n    setLoadingRequest(false);\n    user_id = \"\";\n  };\n\n  const restUserAccess = async (user_id: string) => {\n    setFeedBack({\n      type: \"\",\n      message: \"\",\n    });\n    if (!user_id) {\n      setFeedBack({\n        type: \"warning\",\n        message: \"User Access is required doesn't exist\",\n      });\n    }\n\n    if (!window.confirm(`Are sure you want to reset to default access?`)) {\n      return setLoadingRequest(false);\n    }\n\n    setLoadingRequest(true);\n    setLoadingRequestType(\"RESET\");\n\n    try {\n      const res = await axios.delete(`${API.AUTH}/custaccess/user/${user_id}`);\n      res && resetUserAccess(user_id);\n      let resetedAccess: UserInterface = users.filter(\n        (user) => user.user_id === user_id\n      )[0];\n      resetedAccess.default_access &&\n        setUserAccess(resetedAccess.default_access.access);\n      setFeedBack({\n        type: \"success\",\n        message: `Reseting User Access complete successfully`,\n      });\n      setCurrentAccess(null);\n    } catch (error) {\n      console.error({ reseting_user_access: error });\n      setFeedBack({\n        type: \"danger\",\n        message: errorToText(error),\n      });\n    }\n\n    setLoadingRequest(false);\n    setLoadingRequestType(null);\n    user_id = \"\";\n  };\n\n  const distinctDistrict = (\n    location: RoomLocationInterface[],\n    province_id?: string\n  ): DistrictInterface[] => {\n    let ids: string[] = [],\n      result: DistrictInterface[] = [];\n\n    if (province_id) {\n      result = location.find((item) => item._id === province_id)\n        ? location.find((item) => item._id === province_id)!.districts\n          ? location.find((item) => item._id === province_id)!.districts\n          : []\n        : [];\n    } else {\n      for (const key in location) {\n        if (Object.prototype.hasOwnProperty.call(location, key)) {\n          for (const keyDistrict in location[key].districts) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                location[key].districts,\n                keyDistrict\n              )\n            ) {\n              if (!ids.includes(location[key].districts[keyDistrict]._id)) {\n                ids.push(location[key].districts[keyDistrict]._id);\n                result.push(location[key].districts[keyDistrict]);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return result;\n  };\n\n  return (\n    <Fragment>\n      {feedBack && feedBack.type !== \"\" && (\n        <div\n          className={`alert-${feedBack.type} flex flex-row items-center relative`}\n        >\n          <span className=\"absolute top-0 bottom-0 right-0 px-4 py-3\">\n            <MdClose\n              className=\"h-5 w-5 text-gray-700 hover:font-bold\"\n              title=\"Close\"\n              onClick={() => setFeedBack({ type: \"\", message: \"\" })}\n            />\n          </span>\n          <MdErrorOutline className=\"h-10 w-10\" />\n          <div className=\"alert-content ml-4\">\n            <div className=\"alert-title font-semibold text-lg\">\n              {feedBack.type === \"success\" ? \"Success\" : \"Error\"}\n            </div>\n            <div className=\"alert-description text-sm\">{feedBack.message}</div>\n          </div>\n        </div>\n      )}\n      {!manageUser && (\n        <div className=\"grid md:grid-cols-5 gap-2 mb-5\">\n          <div className={`md:col-span-5 rounded`}>\n            <div className=\"my-2 flex sm:flex-row flex-col justify-between\">\n              <div className=\"flex flex-col md:flex-row gap-1 items-center mx-1.5\">\n                {/* <span className=\"text-lg\">All User</span>\n              <MdChevronRight className=\"w-7 h-7\" />\n              <span className=\"text-lg underline\">All User</span> */}\n              </div>\n              {/* will be used later */}\n              {/* <div className=\"flex flex-row items-center gap-1\">\n              <button className=\"btn flex items-center p-1 bg-red-700 hover:bg-red-800 text-gray-100\">\n                <AiFillFilePdf className=\"h-6 w-6\" />\n                <p className=\" text-lg font-medium ml-2 \">PDF</p>\n              </button>\n\n              <button className=\"btn flex items-center p-1 bg-green-700 hover:bg-green-800 text-gray-100\">\n                <RiFileExcel2Fill className=\"w-6 h-6\" />\n                <div>\n                  <p className=\" text-lg font-medium ml-2 \">EXCEL</p>\n                </div>\n              </button>\n            </div> */}\n            </div>\n            {users && (\n              <Table\n                columns={[\n                  { columnTitle: \"#\", alignText: \"left\", padding: \"p-3\" },\n                  { columnTitle: \"Names\", alignText: \"left\", padding: \"p-3\" },\n                  { columnTitle: \"Email\", alignText: \"left\", padding: \"p-3\" },\n                  { columnTitle: \"Gender\", alignText: \"left\", padding: \"p-3\" },\n                  { columnTitle: \"Role\", alignText: \"left\", padding: \"p-3\" },\n                  // { columnTitle: \"Status\", alignText: \"left\", padding: \"p-3\" },\n                  { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n                ]}\n                rows={tableData}\n                pagination={true}\n                search={true}\n                thColor=\"gray\"\n                loading={loadingUser}\n              />\n            )}\n          </div>\n        </div>\n      )}\n\n      {manageUser && (\n        <div className=\"bg-gray-100 h-100\">\n          {feedBack && feedBack.type !== \"\" && (\n            <div\n              className={`alert-${feedBack.type} flex flex-row items-center relative mb-4`}\n            >\n              <span className=\"absolute top-0 bottom-0 right-0 px-4 py-3\">\n                <MdClose\n                  className=\"h-5 w-5 text-gray-700 hover:font-bold\"\n                  title=\"Close\"\n                  onClick={() => setFeedBack({ type: \"\", message: \"\" })}\n                />\n              </span>\n              <MdErrorOutline className=\"h-10 w-10\" />\n              <div className=\"alert-content ml-4\">\n                <div className=\"alert-title font-semibold text-lg\">\n                  {feedBack.type === \"success\" ? \"Success\" : \"Error\"}\n                </div>\n                <div className=\"alert-description text-sm\">\n                  {feedBack.message}\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* header */}\n          <div className=\"bg-white border-b border-t px-4 py-2 flex flex-col md:flex-row items-center gap-x-14\">\n            {users.find((user) => user.user_id === manageUserId) ? (\n              <div\n                key={\n                  users.find((user) => user.user_id === manageUserId)!.user_id\n                }\n                className=\"flex flex-col md:flex-row md:items-start items-center w-full gap-3\"\n              >\n                <img\n                  src={\n                    users.find((user) => user.user_id === manageUserId)!\n                      .user_info.photo !== \"pic\"\n                      ? users.find((user) => user.user_id === manageUserId)!\n                          .user_info.photo\n                      : profile\n                  }\n                  alt=\"\"\n                  className=\"rounded-full w-32 h-32\"\n                />\n                <div className=\"flex flex-col gap-1 items-start w-full\">\n                  <span className=\"text-2xl font-semibold\">\n                    {users.find((user) => user.user_id === manageUserId)!\n                      .user_info.fname +\n                      \" \" +\n                      users.find((user) => user.user_id === manageUserId)!\n                        .user_info.lname}\n                  </span>\n                  <div className=\"flex items-center\">\n                    <MdLock className=\"w-5 h-5\" />\n                    <span className=\"text-lg font-medium\">\n                      {users.find((user) => user.user_id === manageUserId)!\n                        .default_access &&\n                        getRoleById(\n                          roleList,\n                          users.find((user) => user.user_id === manageUserId)!\n                            .default_access!.system_user_role_id\n                        ).role}\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-gray-500\">Level:</span>\n                    <span className=\"text-base font-medium\">\n                      {users.find((user) => user.user_id === manageUserId)!\n                        .default_access &&\n                      getRoleById(\n                        roleList,\n                        users.find((user) => user.user_id === manageUserId)!\n                          .default_access!.system_user_role_id\n                      ).district_required\n                        ? \"District\"\n                        : users.find((user) => user.user_id === manageUserId)!\n                            .default_access &&\n                          getRoleById(\n                            roleList,\n                            users.find((user) => user.user_id === manageUserId)!\n                              .default_access!.system_user_role_id\n                          ).school_required\n                        ? \"School\"\n                        : users.find((user) => user.user_id === manageUserId)!\n                            .default_access &&\n                          getRoleById(\n                            roleList,\n                            users.find((user) => user.user_id === manageUserId)!\n                              .default_access!.system_user_role_id\n                          ).room_required\n                        ? \"Room\"\n                        : users.find((user) => user.user_id === manageUserId)!\n                            .default_access &&\n                          getRoleById(\n                            roleList,\n                            users.find((user) => user.user_id === manageUserId)!\n                              .default_access!.system_user_role_id\n                          ).education_institution_required\n                        ? \"Institute\"\n                        : \"-\"}\n                    </span>\n                  </div>\n                  {users.find((user) => user.user_id === manageUserId)!\n                    .default_access &&\n                  getRoleById(\n                    roleList,\n                    users.find((user) => user.user_id === manageUserId)!\n                      .default_access!.system_user_role_id\n                  ).education_institution_required ? (\n                    <div className=\"flex items-center gap-1\">\n                      <span className=\"text-gray-500\">Institute:</span>\n                      <span className=\"text-base font-medium\">\n                        {users.find((user) => user.user_id === manageUserId)!\n                          .default_access &&\n                        schoolLevels.education_categories &&\n                        getInstituteById(\n                          schoolLevels.education_categories,\n                          users.find((user) => user.user_id === manageUserId)!\n                            .default_access!.education_institution_id\n                        )\n                          ? getInstituteById(\n                              schoolLevels.education_categories,\n                              users.find(\n                                (user) => user.user_id === manageUserId\n                              )!.default_access!.education_institution_id\n                            )!.education_category_title\n                          : \"Unknown Institute\"}\n                      </span>\n                    </div>\n                  ) : users.find((user) => user.user_id === manageUserId)!\n                      .default_access &&\n                    getRoleById(\n                      roleList,\n                      users.find((user) => user.user_id === manageUserId)!\n                        .default_access!.system_user_role_id\n                    ).district_required ? (\n                    <div className=\"flex items-center gap-1\">\n                      <span className=\"text-gray-500\">District:</span>\n                      <span className=\"text-base font-medium\">\n                        {users.find((user) => user.user_id === manageUserId)!\n                          .default_access &&\n                          roomList &&\n                          distinctDistrict(roomList).find(\n                            (item) =>\n                              item._id ===\n                              users.find(\n                                (user) => user.user_id === manageUserId\n                              )!.default_access!.district_id\n                          ) &&\n                          distinctDistrict(roomList).find(\n                            (item) =>\n                              item._id ===\n                              users.find(\n                                (user) => user.user_id === manageUserId\n                              )!.default_access!.district_id\n                          )!.district_name}\n                      </span>\n                    </div>\n                  ) : users.find((user) => user.user_id === manageUserId)!\n                      .default_access &&\n                    getRoleById(\n                      roleList,\n                      users.find((user) => user.user_id === manageUserId)!\n                        .default_access!.system_user_role_id\n                    ).school_required ? (\n                    <div className=\"flex items-center gap-1\">\n                      <span className=\"text-gray-500\">School:</span>\n                      <span className=\"text-base font-medium\">\n                        {schoolList &&\n                        schoolList.find(\n                          (school) =>\n                            school._id ===\n                            users.find((user) => user.user_id === manageUserId)!\n                              .default_access?.school_id\n                        )\n                          ? schoolList.find(\n                              (school) =>\n                                school._id ===\n                                users.find(\n                                  (user) => user.user_id === manageUserId\n                                )!.default_access?.school_id\n                            )!.school_name\n                          : \"Unknown school\"}\n                      </span>\n                    </div>\n                  ) : (\n                    users.find((user) => user.user_id === manageUserId)!\n                      .default_access &&\n                    getRoleById(\n                      roleList,\n                      users.find((user) => user.user_id === manageUserId)!\n                        .default_access!.system_user_role_id\n                    ).room_required && (\n                      <div className=\"flex items-center gap-1\">\n                        {/* <span className=\"text-gray-500\">Room:</span> */}\n                        <MdLocationOn className=\"text-gray-500\" />\n                        {roomTable && (\n                          <span className=\"text-base font-medium\">\n                            {roomTable.find(\n                              (room) =>\n                                room.room_id ===\n                                users.find(\n                                  (user) => user.user_id === manageUserId\n                                )!.default_access?.room_id\n                            )?.district_name +\n                              \" - \" +\n                              roomTable.find(\n                                (room) =>\n                                  room.room_id ===\n                                  users.find(\n                                    (user) => user.user_id === manageUserId\n                                  )!.default_access?.room_id\n                              )?.center_name +\n                              \" - Room \" +\n                              roomTable.find(\n                                (room) =>\n                                  room.room_id ===\n                                  users.find(\n                                    (user) => user.user_id === manageUserId\n                                  )!.default_access?.room_id\n                              )?.room_name}\n                          </span>\n                        )}\n                      </div>\n                    )\n                  )}\n                </div>\n              </div>\n            ) : (\n              <NoResult\n                theme={NoResultThemes.Dark}\n                value={\"User info not found\"}\n              />\n            )}\n            {users.find((user) => user.user_id === manageUserId) && (\n              <div\n                key={\n                  users.find((user) => user.user_id === manageUserId)!.user_id\n                }\n                className=\"flex flex-col w-full\"\n              >\n                <div className=\"flex items-center gap-1\">\n                  <span className=\"text-gray-500\">NID:</span>\n                  <span className=\"text-base font-medium\">\n                    {users.find((user) => user.user_id === manageUserId)!.n_id}\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-1\">\n                  <span className=\"text-gray-500\">Email:</span>\n                  <span className=\"text-base font-medium\">\n                    {users.find((user) => user.user_id === manageUserId)!.email}\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-1\">\n                  <span className=\"text-gray-500\">Phone:</span>\n                  <span className=\"text-base font-medium\">\n                    {\n                      users.find((user) => user.user_id === manageUserId)!\n                        .phone_number\n                    }\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-1\">\n                  <span className=\"text-gray-500\">Status:</span>\n                  <span className=\"text-base font-medium\">\n                    {users.find((user) => user.user_id === manageUserId)!\n                      .is_active === false\n                      ? \"Blocked\"\n                      : \"Active\"}\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-1\">\n                  {users.find((user) => user.user_id === manageUserId)!\n                    .custome_access && (\n                    <button\n                      className={`px-2 py-1 font-semibold text-gray-50 inline-flex items-center rounded ${\n                        loadingRequestType && loadingRequestType === \"RESET\"\n                          ? \"cursor-wait bg-gray-400\"\n                          : \"bg-gray-600\"\n                      }`}\n                      onClick={() =>\n                        restUserAccess(\n                          users.find((user) => user.user_id === manageUserId)!\n                            .user_id\n                        )\n                      }\n                      disabled={loadingRequest}\n                    >\n                      <MdLock className=\"w-4 h-4 fill-current\" />\n                      <span>\n                        {loadingRequestType && loadingRequestType === \"RESET\"\n                          ? \"Reseting...\"\n                          : \"Reset Access\"}\n                      </span>\n                    </button>\n                  )}\n                  {!changeRole && (\n                    <button\n                      className=\"bg-yellow-300 hover:bg-yellow-400 px-2 py-1 font-semibold text-black inline-flex items-center rounded\"\n                      onClick={() => setChangeRole(true)}\n                    >\n                      <MdLock className=\"w-4 h-4 fill-current\" />\n                      <span>Change Role</span>\n                    </button>\n                  )}\n                  {users.find((user) => user.user_id === manageUserId)!\n                    .is_active ? (\n                    <button\n                      className={`px-2 py-1 font-semibold hidden text-gray-100 inline-flex items-center rounded ${\n                        loadingRequestType && loadingRequestType === \"STATUS\"\n                          ? \"cursor-wait bg-red-500\"\n                          : \"bg-red-700\"\n                      }`}\n                      onClick={() =>\n                        !loadingRequest &&\n                        manageUser &&\n                        blockUser(\n                          users.find((user) => user.user_id === manageUserId)!\n                            .user_id\n                        )\n                      }\n                      disabled={loadingRequest}\n                    >\n                      <MdLock className=\"w-4 h-4 fill-current\" />\n                      <span>\n                        {loadingRequestType && loadingRequestType === \"RESET\"\n                          ? \"Loading...\"\n                          : \"Activate\"}\n                      </span>\n                    </button>\n                  ) : (\n                    <button\n                      className={`px-2 py-1 font-semibold hidden text-gray-100 inline-flex items-center rounded ${\n                        loadingRequestType && loadingRequestType === \"STATUS\"\n                          ? \"cursor-wait bg-yellow-500\"\n                          : \"bg-yellow-700\"\n                      }`}\n                      onClick={() =>\n                        !loadingRequest &&\n                        manageUser &&\n                        blockUser(\n                          users.find((user) => user.user_id === manageUserId)!\n                            .user_id\n                        )\n                      }\n                      disabled={loadingRequest}\n                    >\n                      <MdLock className=\"w-4 h-4 fill-current\" />\n                      <span>\n                        {loadingRequestType && loadingRequestType === \"RESET\"\n                          ? \"Loading...\"\n                          : \"Re-Activate\"}\n                      </span>\n                    </button>\n                  )}\n                </div>\n              </div>\n            )}\n          </div>\n          {/* end header */}\n\n          {/* content */}\n          {manageUser && changeRole ? (\n            <UserRole\n              userInfo={manageUser}\n              roleList={roleList}\n              district={district}\n              setFeedBack={setFeedBack}\n              schoolList={schoolList}\n              roomList={roomList}\n              setChangeRole={setChangeRole}\n            />\n          ) : (\n            <UserAccess\n              userInfo={\n                users.filter((user) => user.user_id === manageUserId)[0]\n              }\n              manageUserId={manageUserId}\n              feedBack={feedBack}\n              setFeedBack={setFeedBack}\n              setUserAccess={setUserAccess}\n              userAccess={userAccess}\n              setCurrentAccess={setCurrentAccess}\n              currentAccess={currentAccess}\n            />\n          )}\n          {/* end content */}\n        </div>\n      )}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  schoolLevels,\n}: StoreState): { schoolLevels: schoolLevelsStoreInterface } => {\n  return { schoolLevels };\n};\n\nexport default connect(mapStateToProps, {\n  blockUserToSystem,\n  unBlockUserToSystem,\n  resetUserAccess,\n})(UserList);\n","export default __webpack_public_path__ + \"static/media/blank_profile.c3f94521.png\";","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { capitalizeFirstLetter } from \"../../shared/dataTest\";\nimport { SystemUserRoleInterface } from \"../../shared/interfaces\";\nimport search from \"../../utils/search\";\n\n// const searchRole = (\n//   objList: SystemUserRoleInterface[],\n//   text: string\n// ): SystemUserRoleInterface[] => {\n//   return objList.filter(\n//     (product) => product.role.toLocaleLowerCase() === text.toLocaleLowerCase()\n//   );\n// };\n\ntype RoleListProps = {\n  setChooseRole: (value: boolean) => void;\n  roleList: SystemUserRoleInterface[];\n  handleSelectRole: (role_id: string, TYPE?: \"SELECT\" | \"DEFAULT\") => void;\n  loadindRequest: boolean;\n};\n\nconst RoleList: React.FC<RoleListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section className=\"border-2 rounded border-gray-400\">\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            search(props.roleList, searchInput).length > 0 ? false : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseRole(false);\n          }}\n        >\n          Close\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}\n\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {search(props.roleList, searchInput).length > 0 ? (\n          search(props.roleList, searchInput).map((role, index) => (\n            <section key={index + role.role}>\n              <div className=\"group flex items-center justify-between my-1 hover:bg-gray-100\">\n                <div\n                  className=\"p-1 w-full mr-2 cursor-pointer\"\n                  onClick={() => {\n                    props.setChooseRole(false);\n                    !props.loadindRequest &&\n                      props.handleSelectRole(role.system_user_role_id);\n                  }}\n                >\n                  <p className=\"text-sm font-medium text-black\">\n                    {capitalizeFirstLetter(role.role)}\n                  </p>\n                </div>\n                <button\n                  type=\"button\"\n                  className=\"bg-blue-200 group-hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                >\n                  Choose\n                </button>\n              </div>\n            </section>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No role available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default RoleList;\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { MdHighlightOff } from \"react-icons/md\";\nimport { TiInputChecked } from \"react-icons/ti\";\nimport { connect } from \"react-redux\";\nimport { schoolLevelsStoreInterface, PushPopupAlert } from \"../../actions\";\nimport { assignRoleToUserAccess } from \"../../actions/users\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport Loading from \"../../components/Loading/Loading\";\nimport Table from \"../../components/Table/Table\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport {\n  UserInterface,\n  SystemUserRoleInterface,\n  DistrictInterface,\n  SchoolsInterface,\n  RoomLocationInterface,\n  AssignRoleToUserActionInterface,\n  LocationRoomTableInterface,\n  RoleToUserInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport RoleList from \"./RoleList\";\nimport { LocationsInArray } from \"./UserList\";\n\ninterface AppProps {\n  userInfo: UserInterface;\n  roleList: SystemUserRoleInterface[];\n  district: DistrictInterface[];\n  setFeedBack: React.Dispatch<\n    React.SetStateAction<{\n      type: \"success\" | \"danger\" | \"warning\" | \"\";\n      message: string;\n    }>\n  >;\n  assignRoleToUserAccess: Function;\n  schoolList: SchoolsInterface[] | null;\n  roomList: RoomLocationInterface[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  setChangeRole: React.Dispatch<React.SetStateAction<boolean>>;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface AppState {\n  loading: boolean;\n  loadingForm: boolean;\n  loadingRequest: boolean;\n  roleId: string;\n  provinceId: string;\n  districtId: string;\n  schoolId: string;\n  roomId: string;\n  instituteId: string;\n  centerId: string;\n  selectedRole: SystemUserRoleInterface | null;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  chooseRole: boolean;\n}\n\nclass UserRole extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingForm: true,\n      loadingRequest: false,\n      roleId: \"\",\n      provinceId: \"\",\n      districtId: \"\",\n      schoolId: \"\",\n      roomId: \"\",\n      instituteId: \"\",\n      centerId: \"\",\n      selectedRole: null,\n      formError: null,\n      chooseRole: false,\n    };\n  }\n\n  setRoleId = (value: string) => {\n    this.setState({ roleId: value });\n  };\n\n  setSelectedRole = (value: SystemUserRoleInterface | null) => {\n    this.setState({ selectedRole: value });\n  };\n\n  setProvinceId = (value: string) => {\n    this.setState({ provinceId: value });\n  };\n\n  setDistrictId = (value: string) => {\n    this.setState({ districtId: value });\n  };\n\n  setCenterId = (value: string) => {\n    this.setState({ centerId: value });\n  };\n\n  setRoomId = (value: string) => {\n    this.setState({ roomId: value });\n  };\n\n  setLoadingForm = (value: boolean) => {\n    this.setState({ loadingForm: value });\n  };\n\n  setSchoolId = (value: string) => {\n    this.setState({ schoolId: value });\n  };\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setInstituteId = (value: string) => {\n    this.setState({ instituteId: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n  setChooseRole = (value: boolean) => {\n    this.setState({ chooseRole: value });\n  };\n  // setLoadingForm = (value: boolean) => {\n  //   this.setState({ loadingForm: value });\n  // };\n\n  setDefaultState = (\n    default_access: RoleToUserInterface,\n    role: SystemUserRoleInterface\n  ) => {\n    // SET DEFAULT PROVINCE && DISTRICT ID =======================\n    let LOAD_province: LocationRoomTableInterface | undefined;\n    let LOAD_district: DistrictInterface | undefined;\n    if (role.district_required && this.props.roomList) {\n      LOAD_district = this.distinctDistrict(this.props.roomList).find(\n        (item) => item._id === default_access!.district_id\n      );\n      LOAD_district && this.setProvinceId(LOAD_district.province_id);\n      LOAD_district && this.setDistrictId(default_access!.district_id);\n      this.setLoadingForm(false);\n    } else if (role.room_required && this.props.roomList) {\n      // SET DEFAULT PROVINCE && DISTRICT && ROOM ID =======================\n\n      LOAD_province = LocationsInArray(this.props.roomList).find(\n        (item) => item.room_id === default_access!.room_id\n      );\n      LOAD_province && this.setProvinceId(LOAD_province.province_id);\n      LOAD_province && this.setDistrictId(LOAD_province.district_id);\n      LOAD_province && this.setCenterId(LOAD_province.center_id);\n      this.setRoomId(default_access.room_id);\n      this.setLoadingForm(false);\n    } else if (\n      role.school_required &&\n      this.props.roomList &&\n      this.props.schoolList\n    ) {\n      // SET DEFAULT PROVINCE && DISTRICT && SCHOOL ID =======================\n      let LOAD_school: SchoolsInterface | undefined =\n        this.props.schoolList.find(\n          (item) => item._id === default_access!.school_id\n        );\n      if (LOAD_school) {\n        LOAD_province = LocationsInArray(this.props.roomList).find(\n          (item) => item.district_id === LOAD_school?.district_id\n        );\n        LOAD_province && this.setProvinceId(LOAD_province.province_id);\n        LOAD_province && this.setDistrictId(LOAD_province.district_id);\n        this.setSchoolId(default_access.school_id);\n        this.setLoadingForm(false);\n      } else {\n        this.setLoadingForm(false);\n      }\n    } else {\n      this.setLoadingForm(false);\n    }\n  };\n\n  componentDidMount = () => {\n    if (this.props.roleList.length) {\n      if (this.props.userInfo.default_access && this.state.loadingForm) {\n        // SET DEFAULT ROLE ID =======================\n        if (!this.state.roleId.length) {\n          let result = this.props.roleList.find(\n            (role) =>\n              role.system_user_role_id ===\n              this.props.userInfo.default_access!.system_user_role_id\n          );\n          if (result) {\n            this.setRoleId(\n              this.props.userInfo.default_access.system_user_role_id\n            );\n            this.setSelectedRole(result);\n            this.setDefaultState(this.props.userInfo.default_access, result);\n          }\n        }\n\n        console.log(\"====================================\");\n        console.log({ vvvvv: this.props.userInfo.default_access });\n        console.log(\"====================================\");\n      }\n\n      if (this.state.selectedRole && this.props.userInfo.default_access) {\n        this.setDefaultState(\n          this.props.userInfo.default_access,\n          this.state.selectedRole\n        );\n      }\n\n      this.setLoading(false);\n    }\n  };\n\n  handleSelectRole = (\n    role_id: string,\n    TYPE: \"SELECT\" | \"DEFAULT\" = \"SELECT\"\n  ) => {\n    if (this.props.roleList) {\n      let result = this.props.roleList.find(\n        (role) => role.system_user_role_id === role_id\n      );\n      if (result) {\n        this.setRoleId(role_id);\n        this.setSelectedRole(result);\n        this.state.formError &&\n          this.state.formError.element === \"role_id\" &&\n          this.setFormError(null);\n\n        if (TYPE === \"SELECT\") {\n          this.setProvinceId(\"\");\n          this.setDistrictId(\"\");\n          this.setSchoolId(\"\");\n          this.setCenterId(\"\");\n          this.setRoomId(\"\");\n          this.setInstituteId(\"\");\n        }\n      }\n    }\n  };\n\n  tableData = (): JSX.Element[] => {\n    if (\n      this.state.roleId.length > 0 &&\n      this.state.selectedRole === null &&\n      this.props.roleList\n    ) {\n      this.handleSelectRole(this.state.roleId, \"DEFAULT\");\n    }\n    if (this.state.selectedRole) {\n      return this.state.selectedRole.access.map((access, i) => (\n        <tr\n          key={i + access.id}\n          className={`text-left border-b border-gray-200 hover:bg-gray-100`}\n        >\n          <td className=\"px-2 py-1\">\n            <label className=\"inline-flex items-center\">\n              <span className=\"text-gray-900 capitalize text-xl font-normal cursor-pointer\">\n                {access.task}\n              </span>\n            </label>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.create ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.create ? (\n                <TiInputChecked />\n              ) : (\n                <MdHighlightOff />\n              )}\n              {access.permitted.create ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.view ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.view ? <TiInputChecked /> : <MdHighlightOff />}\n              {access.permitted.view ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.update ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.update ? (\n                <TiInputChecked />\n              ) : (\n                <MdHighlightOff />\n              )}\n              {access.permitted.update ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.delete ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.delete ? (\n                <TiInputChecked />\n              ) : (\n                <MdHighlightOff />\n              )}\n              {access.permitted.delete ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n        </tr>\n      ));\n    }\n    const optionB = [\n      <tr key=\"55re\">\n        <td colSpan={5} className=\"text-center px-2 py-2\">\n          No Default Access Available on this Role.\n        </td>\n      </tr>,\n    ];\n    return optionB;\n  };\n\n  assignRoleToUser = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!window.confirm(`Are sure you want to change user role?`)) {\n      return false;\n    }\n    if (!this.state.selectedRole) {\n      return this.setFormError({\n        element: \"role_id\",\n        msg: \"User role is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.room_required === true &&\n      isEmptyOrSpaces(this.state.provinceId)\n    ) {\n      return this.setFormError({\n        element: \"province_id\",\n        msg: \"Province is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.education_institution_required === true &&\n      isEmptyOrSpaces(this.state.instituteId)\n    ) {\n      return this.setFormError({\n        element: \"institute_id\",\n        msg: \"Institute is required on this role!\",\n      });\n    }\n\n    if (\n      (this.state.selectedRole.room_required === true ||\n        this.state.selectedRole.district_required === true) &&\n      isEmptyOrSpaces(this.state.districtId)\n    ) {\n      return this.setFormError({\n        element: \"district_id\",\n        msg: \"District is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.school_required === true &&\n      isEmptyOrSpaces(this.state.schoolId)\n    ) {\n      return this.setFormError({\n        element: \"school_id\",\n        msg: \"School is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.room_required === true &&\n      isEmptyOrSpaces(this.state.centerId)\n    ) {\n      return this.setFormError({\n        element: \"center_id\",\n        msg: \"Center is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.room_required === true &&\n      isEmptyOrSpaces(this.state.roomId)\n    ) {\n      return this.setFormError({\n        element: \"room_id\",\n        msg: \"Room is required!\",\n      });\n    }\n    this.setLoadingRequest(true);\n    let formData: AssignRoleToUserActionInterface = {\n      user_id: this.props.userInfo.user_id,\n      data: {\n        system_user_role_id: this.state.roleId,\n        status: 1,\n        role: this.state.selectedRole.role,\n        access: this.state.selectedRole.access,\n        school_id: this.state.selectedRole.school_required\n          ? this.state.schoolId\n          : \"\",\n        district_id: this.state.selectedRole.district_required\n          ? this.state.districtId\n          : \"\",\n        room_id: this.state.selectedRole.room_required ? this.state.roomId : \"\",\n        education_institution_id: this.state.selectedRole\n          .education_institution_required\n          ? this.state.instituteId\n          : \"\",\n      },\n    };\n\n    try {\n      const res = await axios.post(`${API.AUTH}/addroletouser`, {\n        user_id: this.props.userInfo.user_id,\n        system_user_role_id: this.state.roleId,\n        status: 1,\n        role: this.state.selectedRole.role,\n        access: true,\n        school_id:\n          this.state.selectedRole.school_required === true\n            ? this.state.schoolId\n            : \"\",\n        district_id:\n          this.state.selectedRole.district_required === true\n            ? this.state.districtId\n            : \"\",\n        room_id:\n          this.state.selectedRole.room_required === true\n            ? this.state.roomId\n            : \"\",\n        education_institution_id: this.state.selectedRole\n          .education_institution_required\n          ? this.state.instituteId\n          : \"\",\n      });\n      if (res) {\n        console.log(\"====================================\");\n        console.log({ assignRoleToUser: res });\n        console.log(\"====================================\");\n        this.props.assignRoleToUserAccess(formData);\n        this.setLoadingRequest(false);\n        this.props.setChangeRole(false);\n        this.props.PushPopupAlert({\n          title: \"Assigning Role to User completed successfully\",\n          theme: PopupAlertTheme.success,\n        });\n      }\n    } catch (error) {\n      console.log({ role_error: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  distinctDistrict = (\n    location: RoomLocationInterface[],\n    province_id?: string\n  ): DistrictInterface[] => {\n    let ids: string[] = [],\n      result: DistrictInterface[] = [];\n\n    if (province_id) {\n      result = location.find((item) => item._id === province_id)\n        ? location.find((item) => item._id === province_id)!.districts\n          ? location.find((item) => item._id === province_id)!.districts\n          : []\n        : [];\n    } else {\n      for (const key in location) {\n        if (Object.prototype.hasOwnProperty.call(location, key)) {\n          for (const keyDistrict in location[key].districts) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                location[key].districts,\n                keyDistrict\n              )\n            ) {\n              if (!ids.includes(location[key].districts[keyDistrict]._id)) {\n                ids.push(location[key].districts[keyDistrict]._id);\n                result.push(location[key].districts[keyDistrict]);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return result;\n  };\n\n  distinctCenter = (\n    rooms: RoomLocationInterface[],\n    district_id: string\n  ): LocationRoomTableInterface[] => {\n    let ids: string[] = [],\n      result: LocationRoomTableInterface[] = [];\n\n    LocationsInArray(rooms).forEach((element) => {\n      if (\n        !ids.includes(element.center_id) &&\n        element.district_id === district_id\n      ) {\n        ids.push(element.center_id);\n        result.push(element);\n      }\n    });\n    return result;\n  };\n\n  distinctRoom = (\n    rooms: RoomLocationInterface[],\n    center_id: string\n  ): LocationRoomTableInterface[] => {\n    let ids: string[] = [],\n      result: LocationRoomTableInterface[] = [];\n\n    LocationsInArray(rooms).forEach((element) => {\n      if (!ids.includes(element.room_id) && element.center_id === center_id) {\n        ids.push(element.room_id);\n        result.push(element);\n      }\n    });\n    return result;\n  };\n\n  render() {\n    if (\n      this.state.loading === true ||\n      this.state.loadingForm ||\n      this.props.userInfo.default_access === null ||\n      this.state.roleId.length === 0 ||\n      this.state.selectedRole === null\n    ) {\n      return (\n        <div className=\"text-center py-7 font-bold text-3xl text-gray-400 animate-pulse\">\n          Loading...\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 py-2 md:py-4 px-2 md:px-0\">\n        {/* left panel */}\n        <div className=\"col-span-1 bg-white w-full overflow-x-auto border rounded\">\n          <div className=\"px-6 md:px-12 py-5 bg-white mx-auto rounded-2xl w-100\">\n            <h3 className=\"font-semibold text-2xl text-gray-800 mb-4\">\n              Change User Role\n            </h3>\n            {this.state.loadingForm ? (\n              <Loading />\n            ) : (\n              <form onSubmit={(e) => this.assignRoleToUser(e)}>\n                <div className=\"space-y-5\">\n                  <div className=\"space-y-2\">\n                    <label className=\"text-sm font-medium text-gray-700 tracking-wide\">\n                      User Role\n                    </label>\n\n                    {!this.state.chooseRole && (\n                      <div\n                        className={`w-full text-base bg-white text-grey-darker cursor-pointer border-2 px-4 py-3 rounded focus:outline-none focus:bg-gray-100 ${\n                          this.state.formError &&\n                          this.state.formError.element === \"role_id\"\n                            ? \"border-red-500\"\n                            : \"border-gray-400\"\n                        }`}\n                        onClick={() => {\n                          !this.state.loadingRequest &&\n                            this.setChooseRole(true);\n                          !this.state.loadingRequest && this.setFormError(null);\n                        }}\n                      >\n                        {this.state.selectedRole\n                          ? this.state.selectedRole.role\n                          : \"Select role\"}\n                      </div>\n                    )}\n\n                    {this.state.chooseRole && (\n                      <RoleList\n                        setChooseRole={this.setChooseRole}\n                        handleSelectRole={this.handleSelectRole}\n                        roleList={this.props.roleList}\n                        loadindRequest={this.state.loadingRequest}\n                      />\n                    )}\n\n                    {this.state.formError &&\n                      this.state.formError.element === \"role_id\" && (\n                        <span className=\"text-red-500\">\n                          {this.state.formError.msg}\n                        </span>\n                      )}\n                  </div>\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.education_institution_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Institute\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"institute_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setInstituteId(e.target.value);\n                            this.setProvinceId(\"\");\n                            this.setDistrictId(\"\");\n                            this.setSchoolId(\"\");\n                            this.setCenterId(\"\");\n                            this.setRoomId(\"\");\n                            this.state.formError &&\n                              this.state.formError.element === \"institute_id\" &&\n                              this.setFormError(null);\n                          }}\n                          disabled={this.state.loadingRequest}\n                          value={this.state.instituteId}\n                        >\n                          <option value=\"\">Select institute</option>\n                          {this.props.schoolLevels.education_categories &&\n                          this.props.schoolLevels.education_categories.length >\n                            0 ? (\n                            this.props.schoolLevels.education_categories.map(\n                              (institute) => (\n                                <option\n                                  value={institute.education_institute_id}\n                                  key={institute.education_institute_id}\n                                >\n                                  {institute.education_category_title}\n                                </option>\n                              )\n                            )\n                          ) : (\n                            <option value=\"\" disabled>\n                              No institute available\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"institute_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.room_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Province\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"province_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setProvinceId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"province_id\" &&\n                              this.setFormError(null);\n                            this.setDistrictId(\"\");\n                            this.setSchoolId(\"\");\n                            this.setCenterId(\"\");\n                            this.setRoomId(\"\");\n                          }}\n                          value={this.state.provinceId}\n                          disabled={this.state.loadingRequest}\n                        >\n                          <option value=\"\">Select province</option>\n                          {this.props.roomList &&\n                            this.props.roomList.map((province) => (\n                              <option key={province._id} value={province._id}>\n                                {province.province_name}\n                              </option>\n                            ))}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"province_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n                  {this.state.selectedRole &&\n                    (this.state.selectedRole.district_required ||\n                      this.state.selectedRole.room_required) && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          District\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"district_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setDistrictId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"district_id\" &&\n                              this.setFormError(null);\n                            this.setSchoolId(\"\");\n                            this.setCenterId(\"\");\n                            this.setRoomId(\"\");\n                          }}\n                          value={this.state.districtId}\n                          disabled={this.state.loadingRequest}\n                        >\n                          <option value=\"\">Select district</option>\n                          {this.props.roomList &&\n                          this.distinctDistrict(\n                            this.props.roomList,\n                            !isEmptyOrSpaces(this.state.provinceId)\n                              ? this.state.provinceId\n                              : undefined\n                          ).length > 0 ? (\n                            this.distinctDistrict(\n                              this.props.roomList,\n                              !isEmptyOrSpaces(this.state.provinceId)\n                                ? this.state.provinceId\n                                : undefined\n                            ).map((district) => (\n                              <option key={district._id} value={district._id}>\n                                {district.district_name}\n                              </option>\n                            ))\n                          ) : (\n                            <option value=\"\" disabled>\n                              No district found\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"district_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.school_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          School\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"school_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setSchoolId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"school_id\" &&\n                              this.setFormError(null);\n                            this.setCenterId(\"\");\n                            this.setRoomId(\"\");\n                          }}\n                          disabled={this.state.loadingRequest}\n                          value={this.state.schoolId}\n                        >\n                          <option value=\"\">Selected school</option>\n                          {this.props.schoolList &&\n                            this.props.schoolList.map((school) => (\n                              <option value={school._id} key={school._id}>\n                                {school.school_name}\n                              </option>\n                            ))}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"school_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.room_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Center\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"center_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setCenterId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"center_id\" &&\n                              this.setFormError(null);\n                            this.setRoomId(\"\");\n                          }}\n                          disabled={this.state.loadingRequest}\n                          value={this.state.centerId}\n                        >\n                          <option value=\"\">Select center</option>\n                          {this.state.districtId &&\n                          this.state.districtId.length > 0 &&\n                          this.props.roomList &&\n                          this.distinctCenter(\n                            this.props.roomList,\n                            this.state.districtId\n                          ).length > 0 ? (\n                            this.distinctCenter(\n                              this.props.roomList,\n                              this.state.districtId\n                            ).map((center, index) => (\n                              <option\n                                value={center.center_id}\n                                key={center.center_id + index}\n                              >\n                                {center.center_name}\n                              </option>\n                            ))\n                          ) : (\n                            <option value=\"\" disabled>\n                              No center found\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"center_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.room_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Room\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"room_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setRoomId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"room_id\" &&\n                              this.setFormError(null);\n                          }}\n                          disabled={this.state.loadingRequest}\n                          value={this.state.roomId}\n                        >\n                          <option value=\"\">Select room</option>\n                          {!isEmptyOrSpaces(this.state.centerId) &&\n                          this.props.roomList &&\n                          this.distinctRoom(\n                            this.props.roomList,\n                            this.state.centerId\n                          ).length > 0 ? (\n                            this.distinctRoom(\n                              this.props.roomList,\n                              this.state.centerId\n                            ).map((room, index) => (\n                              <option\n                                value={room.room_id}\n                                key={room.room_id + index}\n                                className={`${\n                                  room.room_name === \"0\" ? \"hidden\" : \"block\"\n                                }`}\n                              >\n                                {room.room_name}\n                              </option>\n                            ))\n                          ) : (\n                            <option value=\"\" disabled>\n                              No room found\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"room_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  <div className=\"flex justify-between 2xl:justify-start gap-2\">\n                    <button\n                      className=\"btn bg-gray-500 text-gray-50 focus:outline-none\"\n                      onClick={() => {\n                        this.props.setChangeRole(false);\n                        this.setFormError(null);\n                        this.setProvinceId(\"\");\n                        this.setDistrictId(\"\");\n                        this.setSchoolId(\"\");\n                        this.setCenterId(\"\");\n                        this.setRoomId(\"\");\n                      }}\n                      disabled={this.state.loadingRequest}\n                    >\n                      Back\n                    </button>\n                    <button\n                      className=\"btn btn-blue focus:outline-none\"\n                      // onClick={() => assignRoleToUser()}\n                      disabled={this.state.loadingRequest}\n                    >\n                      {this.state.loadingRequest ? \"Loading...\" : \"Save Change\"}\n                    </button>\n                  </div>\n                </div>\n              </form>\n            )}\n          </div>\n        </div>\n        {/* end left panel */}\n\n        {/* ------------------------------------------------------------ */}\n\n        {/* right panel */}\n        <div className=\"cols-span-1 md:col-span-2 bg-white w-full border rounded text-center p-2 hidden md:block\">\n          <div className=\"my-4\">\n            <span className=\"text-gray-600 font-semibold text-2xl\">\n              {this.state.selectedRole?.role}'s Default Access\n            </span>\n          </div>\n          {!this.state.loading && (\n            <div className=\"overflow-x-auto w-full\">\n              <Table\n                columns={[\n                  {\n                    columnTitle: \"Access Name\",\n                    alignText: \"left\",\n                    padding: \"p-3\",\n                  },\n                  { columnTitle: \"Create\", alignText: \"left\" },\n                  { columnTitle: \"View\", alignText: \"left\" },\n                  { columnTitle: \"Update\", alignText: \"left\" },\n                  { columnTitle: \"Delete\", alignText: \"left\" },\n                ]}\n                rows={this.tableData}\n                pagination={false}\n                search={false}\n                searchBG=\"bg-gray-50\"\n                thColor=\"gray\"\n                tableId=\"defaultAccess\"\n              />\n            </div>\n          )}\n        </div>\n        {/* end right panel */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  schoolLevels,\n}: StoreState): {\n  schoolLevels: schoolLevelsStoreInterface;\n} => {\n  return { schoolLevels };\n};\n\nexport default connect(mapStateToProps, {\n  assignRoleToUserAccess,\n  PushPopupAlert,\n})(UserRole);\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  MdClose,\n  MdErrorOutline,\n  MdLabel,\n  MdSupervisorAccount,\n} from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { StoreState } from \"../../reducers\";\n\nimport { fetchUserAccess } from \"../../actions/users\";\nimport { fetchAccessRoles } from \"../../actions/access\";\n\nimport UserList from \"./UserList\";\n\nimport {\n  DistrictInterface,\n  SystemUserRoleInterface,\n  UserInterface,\n} from \"../../shared/interfaces\";\nimport {\n  MainItem,\n  SideNavigation,\n  SubItem,\n  SubItemContainer,\n} from \"../../components/Navigation/SideNavigation\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport { FaFilter } from \"react-icons/fa\";\nimport { AiOutlineCaretRight } from \"react-icons/ai\";\nimport {\n  loadEducationCategories,\n  schoolLevelsStoreInterface,\n} from \"../../actions\";\nimport { IoMdArrowRoundBack } from \"react-icons/io\";\n\nenum TabTypes {\n  All_Users = \"All Users\",\n  Active_Users = \"Active Users\",\n  Blocked_Users = \"Blocked Users\",\n}\n\ninterface AppProps {\n  userList: UserInterface[];\n  accessRoles: SystemUserRoleInterface[];\n  schoolLevels: schoolLevelsStoreInterface;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  fetchUserAccess: Function;\n  fetchAccessRoles: Function;\n}\n\nconst _UserManagment: React.FC<AppProps> = ({\n  userList,\n  accessRoles,\n  schoolLevels,\n  loadEducationCategories,\n  fetchUserAccess,\n  fetchAccessRoles,\n}) => {\n  const [labelCounts, setLabelCounts] = useState<{\n    allUser: number;\n    activeUser: number;\n    blockedUser: number;\n  }>({\n    allUser: 0,\n    activeUser: 0,\n    blockedUser: 0,\n  });\n  let userTabs: TabTypes = TabTypes.All_Users;\n  // const [userTabs, setUserTabs] = useState<TabTypes>(TabTypes.All_Users);\n  const [feedBack, setFeedBack] = useState<{\n    type: \"success\" | \"danger\" | \"warning\" | \"\";\n    message: string;\n  }>();\n  const [district, setDistrict] = useState<DistrictInterface[]>();\n  const [userData, setUserData] = useState<UserInterface[]>();\n  const [loadingUsers, setLoadingUsers] = useState<boolean>(true);\n  const [filterByRoleLevel, setFilerByRoleLevel] = useState<\"all\" | string>(\n    \"all\"\n  );\n  const [openFilterByRole, setOpenFilterByRole] = useState<boolean>(false);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingUser, setLoadingUser] = useState<boolean>(true);\n  const [manageUser, setManageUser] = useState<UserInterface | null>(null);\n  const [changeRole, setChangeRole] = useState<boolean>(false);\n  const [detailFeedBack, setDetailFeedBack] = useState<{\n    type: \"success\" | \"danger\" | \"warning\" | \"\";\n    message: string;\n  }>({ type: \"\", message: \"\" });\n\n  useEffect(() => {\n    // LOADING EDUCATION CATEGORY =================================\n    if (\n      schoolLevels.education_categories === null ||\n      schoolLevels.education_categories.length === 0\n    ) {\n      loadEducationCategories((status: boolean) => {\n        console.log({ loadEducationCategories: status });\n      });\n    }\n    // END LOADING EDUCATION CATEGORY =================================\n\n    if (!accessRoles.length) {\n      fetchAccessRoles();\n    }\n    if (loadingUsers && !userList.length) {\n      fetchUserAccess();\n      setLoadingUsers(false);\n    } else {\n      setLoadingUsers(false);\n    }\n    if (!district) {\n      loadDistrict();\n    }\n    if (accessRoles.length && userList.length) {\n      console.log({ userList });\n      setUserData(userList);\n      // REAL CODES TO BE USED ======================\n      // setLabelCounts({\n      //   allUser: userList.length,\n      //   activeUser: userList.filter((user) => user.is_active).length,\n      //   blockedUser: userList.filter((user) => !user.is_active).length,\n      // });\n\n      // FAKE CODES TO BE USED FOR DISPLAY ======================\n      setLabelCounts({\n        allUser: userList.length,\n        activeUser: userList.filter((user) => !user.is_active).length,\n        blockedUser: userList.filter((user) => user.is_active).length,\n      });\n      setLoading(false);\n    }\n  }, [\n    accessRoles.length,\n    district,\n    fetchAccessRoles,\n    fetchUserAccess,\n    loadEducationCategories,\n    loadingUsers,\n    schoolLevels.education_categories,\n    userList,\n  ]);\n\n  const handleTabs = (): JSX.Element => {\n    if (userTabs === TabTypes.Blocked_Users && district && userData) {\n      return (\n        <UserList\n          users={userData.filter((user) => !user.is_active)}\n          roleList={accessRoles}\n          userTypes=\"blocked\"\n          district={district}\n          loadingUser={loadingUser}\n          setLoadingUser={setLoadingUser}\n          manageUser={manageUser}\n          setManageUser={setManageUser}\n          changeRole={changeRole}\n          setChangeRole={setChangeRole}\n          feedBack={detailFeedBack}\n          setFeedBack={setDetailFeedBack}\n        />\n      );\n    } else if (userTabs === TabTypes.Active_Users && district && userData) {\n      return (\n        <UserList\n          users={userData.filter((user) => user.is_active)}\n          roleList={accessRoles}\n          userTypes=\"active\"\n          district={district}\n          loadingUser={loadingUser}\n          setLoadingUser={setLoadingUser}\n          manageUser={manageUser}\n          setManageUser={setManageUser}\n          changeRole={changeRole}\n          setChangeRole={setChangeRole}\n          feedBack={detailFeedBack}\n          setFeedBack={setDetailFeedBack}\n        />\n      );\n    } else if (district && userData) {\n      return (\n        <UserList\n          users={userData}\n          roleList={accessRoles}\n          userTypes=\"all\"\n          district={district}\n          loadingUser={loadingUser}\n          setLoadingUser={setLoadingUser}\n          manageUser={manageUser}\n          setManageUser={setManageUser}\n          changeRole={changeRole}\n          setChangeRole={setChangeRole}\n          feedBack={detailFeedBack}\n          setFeedBack={setDetailFeedBack}\n        />\n      );\n    } else return <div></div>;\n  };\n\n  const filterByRole = (value: string = \"all\") => {\n    let result: UserInterface[];\n    if (value === \"all\") {\n      setFilerByRoleLevel(\"all\");\n      setUserData(userList);\n      setLabelCounts({\n        allUser: userList.length,\n        activeUser: userList.filter((user) => user.is_active).length,\n        blockedUser: userList.filter((user) => !user.is_active).length,\n      });\n    } else {\n      setFilerByRoleLevel(value);\n      result = userList.filter(\n        (user) =>\n          user.default_access &&\n          user.default_access.system_user_role_id === value\n      );\n      setUserData(result);\n      setLabelCounts({\n        allUser: userList.length,\n        activeUser: result.filter((user) => user.is_active).length,\n        blockedUser: result.filter((user) => !user.is_active).length,\n      });\n    }\n  };\n\n  const getRoleById = (\n    roleList: SystemUserRoleInterface[],\n    roleId: string\n  ): SystemUserRoleInterface => {\n    return roleList.filter((item) => item.system_user_role_id === roleId)[0];\n  };\n\n  const countByRole = (value: string): number => {\n    if (value === \"all\") {\n      return userList.length;\n    }\n    return userList.filter(\n      (user) =>\n        user.default_access && user.default_access.system_user_role_id === value\n    ).length;\n  };\n\n  const loadDistrict = async () => {\n    try {\n      const res = await axios.get<DistrictInterface[]>(\n        `${API.APPLICATION}/district`\n      );\n      setDistrict(res.data);\n    } catch (error) {\n      console.log({ code_error: error });\n    }\n  };\n\n  if (loading === true) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading users...\n      </div>\n    );\n  }\n\n  return (\n    <Fragment>\n      {false && (\n        <SideNavigation>\n          {/* <Search data={[1, 2, 3]} /> */}\n\n          <span className=\"text-sm mt-2\">Filter by role</span>\n          <section\n            className=\"mt-2\"\n            onClick={() => {\n              setOpenFilterByRole(!openFilterByRole);\n              filterByRole(\"all\");\n            }}\n          >\n            <MainItem\n              title={\"Users by Role\"}\n              count={countByRole(\"all\")}\n              active={filterByRoleLevel === \"all\" ? true : false}\n            />\n          </section>\n          {openFilterByRole && filterByRoleLevel && (\n            <SubItemContainer>\n              {accessRoles.length &&\n                accessRoles.map((sub_itm, i: number) => (\n                  <section\n                    key={sub_itm.system_user_role_id}\n                    onClick={() => filterByRole(sub_itm.system_user_role_id)}\n                  >\n                    <SubItem\n                      title={sub_itm.role}\n                      icon={MdLabel}\n                      active={\n                        filterByRoleLevel !== \"id\" &&\n                        sub_itm.system_user_role_id === filterByRoleLevel\n                          ? true\n                          : false\n                      }\n                    />\n                  </section>\n                ))}\n            </SubItemContainer>\n          )}\n\n          {/* <span className=\"text-sm mt-2\">Filter by Status</span> */}\n          {/* <section\n          className=\"mt-2\"\n          onClick={() => setUserTabs(TabTypes.All_Users)}\n        >\n          <MainItem\n            title={\"All Status\"}\n            count={labelCounts.allUser}\n            active={userTabs === TabTypes.All_Users ? true : false}\n          />\n        </section>\n        {\n          <SubItemContainer>\n            <section onClick={() => setUserTabs(TabTypes.Active_Users)}>\n              <SubItem\n                title=\"Active\"\n                icon={MdLabel}\n                active={userTabs === TabTypes.Active_Users ? true : false}\n              />\n            </section>\n            <section onClick={() => setUserTabs(TabTypes.Blocked_Users)}>\n              <SubItem\n                title=\"Blocked\"\n                icon={MdLabel}\n                active={userTabs === TabTypes.Blocked_Users ? true : false}\n              />\n            </section>\n          </SubItemContainer>\n        } */}\n        </SideNavigation>\n      )}\n      {/* Title */}\n      {!manageUser && (\n        <div className=\"w-full my-5 px-1\">\n          {/* header title */}\n          {false && (\n            <div className=\"flex flex-row items-center\">\n              <MdSupervisorAccount className=\"text-blue-700 w-36 h-36\" />\n              <div className=\"flex flex-col\">\n                <h1 className=\"text-3xl font-semibold\">\n                  System Users Management\n                </h1>\n                <div className=\"flex flex-row items-center mx-2 md:gap-3 gap-2\">\n                  <div className=\"flex flex-col mt-1\">\n                    <span className=\"text-gray-600 text-base\">All User(s)</span>\n                    <span className=\"text-gray-600 text-2xl font-bold\">\n                      {labelCounts.allUser}\n                    </span>\n                  </div>\n                  {userTabs !== TabTypes.Blocked_Users && (\n                    <div className=\"flex flex-col mt-1\">\n                      <span className=\"text-gray-600 text-base\">\n                        Active User(s)\n                      </span>\n                      <span className=\"text-gray-600 text-2xl font-bold\">\n                        {labelCounts.activeUser}\n                      </span>\n                    </div>\n                  )}\n                  {userTabs !== TabTypes.Active_Users && (\n                    <div className=\"flex flex-col mt-1\">\n                      <span className=\"text-gray-600 text-base\">\n                        Blocked User(s)\n                      </span>\n                      <span className=\"text-gray-600 text-2xl font-bold\">\n                        {labelCounts.blockedUser}\n                      </span>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          )}\n          <div className=\"flex flex-row items-center\">\n            <MdSupervisorAccount className=\"text-blue-700 w-24 h-24\" />\n            <div className=\"flex flex-col\">\n              <h1 className=\"text-3xl font-semibold\">\n                System Users Management\n              </h1>\n              <div className=\"flex items-center gap-1\">\n                <div className=\"flex flex-row items-center mx-2 md:gap-3 gap-2\">\n                  <div className=\"flex items-center mt-1 gap-1\">\n                    <span className=\"text-gray-600 text-base italic\">\n                      All User(s):\n                    </span>\n                    <span className=\"text-gray-600 text-2xl font-bold\">\n                      {labelCounts.allUser}\n                    </span>\n                  </div>\n                </div>\n                {filterByRoleLevel !== \"all\" &&\n                  accessRoles.length > 0 &&\n                  filterByRoleLevel.length > 0 &&\n                  userData && (\n                    <div className=\"flex items-center mt-1\">\n                      <AiOutlineCaretRight />\n                      <span className=\"text-gray-600 text-base italic mr-1\">\n                        {getRoleById(accessRoles, filterByRoleLevel).role}\n                        {\" (s)\"}:\n                      </span>\n                      <span className=\"text-gray-600 text-2xl font-bold\">\n                        {userData.length}\n                      </span>\n                    </div>\n                  )}\n              </div>\n            </div>\n          </div>\n          {/* end header title */}\n        </div>\n      )}\n      {/* Feedback */}\n      {feedBack && feedBack.type !== \"\" && (\n        <div\n          className={`alert-${feedBack.type} flex flex-row items-center relative my-2`}\n        >\n          <span className=\"absolute top-0 bottom-0 right-0 px-4 py-3\">\n            <MdClose\n              className=\"h-5 w-5 text-gray-700 hover:font-bold\"\n              title=\"Close\"\n              onClick={() => setFeedBack({ type: \"\", message: \"\" })}\n            />\n          </span>\n          <MdErrorOutline className=\"h-10 w-10\" />\n          <div className=\"alert-content ml-4\">\n            <div className=\"alert-title font-semibold text-lg\">\n              {feedBack.type === \"success\" ? \"Success\" : \"Error\"}\n            </div>\n            <div className=\"alert-description text-sm\">{feedBack.message}</div>\n          </div>\n        </div>\n      )}\n      <div\n        className={`bg-white shadow rounded border border-gray-2 p-2 w-full overflow-x-auto ${\n          manageUser ? \"mt-3\" : \"\"\n        }`}\n      >\n        {/* FILTER SECTION ================================ */}\n        {!manageUser && (\n          <section>\n            <div className=\"my-2 font-medium text-xl flex items-center gap-2\">\n              <FaFilter />\n              Filter by role\n            </div>\n            <div className=\"flex items-center md:flex-row flex-col gap-2\">\n              <div className=\"flex flex-col mb-3 md:w-1/4 w-full\">\n                <select\n                  className={`w-full bg-white text-grey-darker border-2 border-gray-500 rounded h-10 px-2 focus:outline-none focus:bg-gray-100 animate__animated animate__fadeIn ${\n                    loadingUser && \"cursor-wait\"\n                  }`}\n                  onChange={(e: React.ChangeEvent<HTMLSelectElement>) =>\n                    filterByRole(e.target.value)\n                  }\n                  disabled={loadingUser}\n                >\n                  <option value=\"all\">All roles</option>\n                  {accessRoles.length > 0 ? (\n                    accessRoles.map((item, i) => (\n                      <option\n                        key={i + item.system_user_role_id}\n                        value={item.system_user_role_id}\n                      >\n                        {item.role}\n                      </option>\n                    ))\n                  ) : (\n                    <option value=\"\" disabled>\n                      No Role\n                    </option>\n                  )}\n                </select>\n              </div>\n            </div>\n          </section>\n        )}\n        {manageUser && (\n          <div className=\"flex items-center gap-3 mb-2 text-gray-600\">\n            <button\n              className=\"inline-block p-3 transition rounded-full bg-gray-400 ripple hover:bg-gray-600 focus:outline-none\"\n              onClick={() => {\n                setManageUser(null);\n                setChangeRole(false);\n                setDetailFeedBack({ message: \"\", type: \"\" });\n              }}\n            >\n              <IoMdArrowRoundBack className=\"w-6 h-6 text-gray-50\" />\n            </button>\n\n            <div className=\"flex flex-col hidden\">\n              <span className=\"text-gray-800 font-semibold text-2xl\">\n                {manageUser.user_info.fname + \" \" + manageUser.user_info.lname}\n              </span>\n              <span className=\"text-gray-600 font-normal text-sm\">\n                {manageUser.email}\n              </span>\n            </div>\n          </div>\n        )}\n        {/* END FILTER SECTION ================================ */}\n        {handleTabs()}\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  users,\n  access,\n  schoolLevels,\n}: StoreState): {\n  userList: UserInterface[];\n  accessRoles: SystemUserRoleInterface[];\n  schoolLevels: schoolLevelsStoreInterface;\n} => {\n  return { userList: users, accessRoles: access.accessRoles, schoolLevels };\n};\n\nexport const UserManagment = connect(mapStateToProps, {\n  fetchUserAccess,\n  fetchAccessRoles,\n  loadEducationCategories,\n})(_UserManagment);\n"],"sourceRoot":""}
{"version":3,"sources":["actions/users.ts","actions/session.ts","components/Navigation/SideNavigation.tsx","actions/settings.ts","utils/ExportToExcel.tsx","utils/mineduc.png","components/DownloadPDF/rest.tsx","containers/SessionSettings/ChooseSession.tsx","components/Loading/TableLoading.tsx","interfaces/waitingList.ts","actions/waitingList.ts","containers/Admin/WaitingList/WaitingListReport.tsx"],"names":["documentValidationStatus","fetchUserAccess","dispatch","a","setAxiosToken","axios","get","API","AUTH","res","console","log","users_response","type","ActionTypes","FETCH_USERS_ACCESS","payload","data","users","error","user_error","blockUserToSystem","BLOCK_USER_TO_SYSTEM","unBlockUserToSystem","UNBLOCK_USER_TO_SYSTEM","assignRoleToUserAccess","ASSIGN_ROLE_TO_USER","customizeUserAccess","CUSTOMIZE_USER_ACCESS","resetUserAccess","RESET_USER_ACCESS","verifyAllDocument","VERIFY_ALL_DOCUMENT","GetPlansTypes","callback","CLAIMING","GET_PLANS_TYPES","plan_types","status","length","errorToText","setSelectedPlanType","thisType","SELECT_PLAN_TYPE","getActiveSessionPlan","GET_ACTIVE_SESSION_PLANS","session_plan","undefined","is_active","GetAllSessionPlans","GET_ALL_SESSION_PLANS","session_data","createSessionPlan","CREATE_SESSION_PLAN","updateSessionPlan","UPDATE_SESSION_PLAN","sessionActivation","SESSION_ACTIVATION","deleteSessionPlan","DELETE_SESSION_PLAN","_SideNavigation","props","componentDidMount","PageHasSubNav","componentWillUnmount","state","loading","this","auth","isAuthenticated","navActive","system","navigation","className","children","React","Component","SideNavigation","connect","NavToogle","MainItem","title","icon","MdBrightness1","active","count","IconDefined","SubItemContainer","SubItem","getSystemSettings","GET_SYSTEM_SETTINGS","code_error","disableSystemSetting","DISABLE_SYSTEM_SETTINGS","getApplicationSessions","APPLICATION","GET_APPLICATION_SESSIONS","getPositions","GET_POSTIONS","deletePosition","DELETE_POSITION","publishPosition","PUBLISH_POSITION","ExportToExcel","fileData","fileName","btnName","showIcon","onClick","e","apiData","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","exportToCSV","require","addFooters","doc","pageCount","internal","getNumberOfPages","setFont","setFontSize","i","setPage","text","String","pageSize","width","align","generatePDF","reportSettings","table","callBack","orientation","lMargin","jsPDF","setTextColor","addImage","Logo","getWidth","institute","lines","splitTextToSize","subject","pdfInMM","y","subjectTitle","getTextWidth","addPage","period","autoTable","html","startY","margin","horizontal","cellPadding","rowHeight","bodyStyles","valign","columnStyles","email","cellWidth","theme","tableWidth","finalY","lastAutoTable","doneBy","DATE","Date","toString","save","returnPromise","then","isPlansActive","plans","today","activePlans","plan","startDate","start_date","endDate","end_date","getTime","type_status","SessionPlanTypeStatus","OPEN","ChooseSession","searched","useState","selectedPlan","setSelectedPlan","search","setSearch","onChange","target","value","placeholder","disabled","allSession","chooseAll","currentSelected","setSelectSession","searchData","map","item","session_plan_id","session_plan_name","find","itm","type_key","type_title","TableLoading","displayCols","colsArray","index","cols","push","element","WaitingListStatus","applicantGender","waitingListReportContentKeyInterface","getWaitingList","position","waiting_status","Waiting","sortBy","post","DO_EXAM","order","filter","api_waiting","GET_WAITING_LIST","getUserById","userList","user_id","getPeriodById","period_id","defaultReportContent","key","names","national_id","gender","phone","user_position_marks","waitingList_session","education_category","date","position_title","WaitingListReport","system_settings","sessionPlan","schoolLevels","waitingList","application_sessions","allSessionPlans","systemPositions","loadEducationCategories","PushPopupAlert","thisPeriod","setThisPeriod","setLoading","loadingSession","setLoadingSession","loadingPosition","setLoadingPosition","loadingInstitutes","setLoadingInstitutes","loadingUsers","setLoadingUsers","loadingWaitingList","setLoadingWaitingList","waitingListToPrint","setWaitingListToPrint","thisWaitingListStatus","setThisWaitingListStatus","thisPosition","setThisPosition","selectPosition","setSelectPosition","sortProperty","setSortProperty","isSorted","setIsSorted","sortOrder","setSortOrder","searchInput","setSearchInput","searchPositionInput","setSearchPositionInput","downloading","setDownloading","generateReportModal","setGenerateReportModal","reportTitle","setReportTitle","reportContent","setReportContent","selectAll","setSelectAll","formError","setFormError","selectPeriod","setSelectPeriod","thisEducation","setThisEducation","useEffect","education_categories","msg","PopupAlertTheme","danger","objList","setSort","thisProperty","updateWaitingListToPrint","session","arrayNew","n","Object","prototype","hasOwnProperty","call","getPositionById","thisUser","user","thisSession","dataArray","id","user_info","fname","lname","sex","n_id","phone_number","Number","toFixed","education_institute_id","education_category_title","createdAt","FC_WaitingListData","allWaitList","waitingList_id","male","null","position_id","education_category_id","waitingList_session_id","isChangeAllowed","FC_FilterWaitingList","waitingListStatus","result","WaitingList","output","statusArray","values","FC_WaitingListStatus","reportType","document","querySelectorAll","getElementById","footer","warning","FC_GeneratePDF","colSpan","sortThisArray","product","flag","prop","toLowerCase","indexOf","capitalizeFirstLetter","backDrop","Themes","default","close","backDropClose","widthSizeClass","ModalSize","extraLarge","displayClose","padding","LoadingType","dark","generateReportTitle","style","fontStyle","school_level_id","school_level_name","medium","findIndex","newArray","isSelectAllNeeded","updateReportContent","currentState","resetReportContent"],"mappings":"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","file":"static/js/26.2313468e.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AssignRoleToUserActionInterface,\n  CustomeAccessInterface,\n  UserInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\ninterface FetchUsersAction {\n  type: ActionTypes.FETCH_USERS_ACCESS;\n  payload: UserInterface[];\n}\n\ninterface BlockUserToSystem {\n  type: ActionTypes.BLOCK_USER_TO_SYSTEM | ActionTypes.UNBLOCK_USER_TO_SYSTEM;\n  payload: string;\n}\n\ninterface AssignRoleToUserAction {\n  type: ActionTypes.ASSIGN_ROLE_TO_USER;\n  payload: AssignRoleToUserActionInterface;\n}\n\ninterface CustomizeUserAccessAction {\n  type: ActionTypes.CUSTOMIZE_USER_ACCESS;\n  payload: CustomeAccessInterface;\n}\n\ninterface ResetUserAccessAction {\n  type: ActionTypes.RESET_USER_ACCESS;\n  payload: string;\n}\n\ntype fetchUserAccessInterface = {\n  users: UserInterface[];\n  next: {\n    page: number;\n    limit: number;\n  } | null;\n  previous: {\n    page: number;\n    limit: number;\n  } | null;\n  total_users: number;\n};\n\nexport enum documentValidationStatus {\n  waiting = \"waiting\",\n  approved = \"approved\",\n  rejected = \"rejected\",\n}\n\nexport interface VerifyDocumentInterface {\n  user_id: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date?: string;\n  };\n  in_education: boolean;\n  disability: boolean;\n}\n\ninterface VerifyAllDocumentAction {\n  type: ActionTypes.VERIFY_ALL_DOCUMENT;\n  payload: VerifyDocumentInterface;\n}\n\nexport type AccessUserActionType =\n  | FetchUsersAction\n  | BlockUserToSystem\n  | AssignRoleToUserAction\n  | CustomizeUserAccessAction\n  | ResetUserAccessAction\n  | VerifyAllDocumentAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const fetchUserAccess = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<fetchUserAccessInterface>(\n        `${API.AUTH}/users?page=1&limit=500`\n      );\n      console.log({ users_response: res });\n      dispatch<FetchUsersAction>({\n        type: ActionTypes.FETCH_USERS_ACCESS,\n        payload: res.data.users,\n      });\n    } catch (error) {\n      console.error({ user_error: error });\n    }\n  };\n};\n\nexport const blockUserToSystem = (data: string) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<BlockUserToSystem>({\n      type: ActionTypes.BLOCK_USER_TO_SYSTEM,\n      payload: data,\n    });\n  };\n};\n\nexport const unBlockUserToSystem = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<BlockUserToSystem>({\n      type: ActionTypes.UNBLOCK_USER_TO_SYSTEM,\n      payload: data,\n    });\n  };\n};\n\nexport const assignRoleToUserAccess = (\n  data: AssignRoleToUserActionInterface\n) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<AssignRoleToUserAction>({\n      type: ActionTypes.ASSIGN_ROLE_TO_USER,\n      payload: data,\n      // payload: response.data,\n    });\n  };\n};\n\nexport const customizeUserAccess = (data: CustomeAccessInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CustomizeUserAccessAction>({\n      type: ActionTypes.CUSTOMIZE_USER_ACCESS,\n      payload: data,\n    });\n  };\n};\n\nexport const resetUserAccess = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<ResetUserAccessAction>({\n      type: ActionTypes.RESET_USER_ACCESS,\n      payload: data,\n    });\n  };\n};\n\nexport const verifyAllDocument = (data: VerifyDocumentInterface) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<VerifyAllDocumentAction>({\n      type: ActionTypes.VERIFY_ALL_DOCUMENT,\n      payload: data,\n    });\n  };\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PlansTypeInterface, SessionPlanInterface } from \"../interfaces\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// GET ACTIVE PLAN TYPES\nexport interface GetPlansTypesAction {\n  type: ActionTypes.GET_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// GET INACTIVE PLAN TYPES\nexport interface GetDeletedPlansTypesAction {\n  type: ActionTypes.GET_DELETED_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// CREATE PLAN TYPE\nexport interface CreatePlansTypeAction {\n  type: ActionTypes.CREATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// UPDATE PLAN TYPE\nexport interface UpdatePlansTypeAction {\n  type: ActionTypes.UPDATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// DELETE PLAN TYPE\nexport interface DeletePlansTypeAction {\n  type: ActionTypes.DELETE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// SET PLAN TYPE =====================================\nexport interface setSelectedPlanTypeActions {\n  type: ActionTypes.SELECT_PLAN_TYPE;\n  payload: PlansTypeInterface | \"all\";\n}\n\n// GET ALL SESSION PLAN\nexport interface GetAllSessionPlansAction {\n  type: ActionTypes.GET_ALL_SESSION_PLANS;\n  payload: SessionPlanInterface[];\n}\n\n// GET ACTIVE SESSION PLAN\nexport interface GetActiveSessionPlanAction {\n  type: ActionTypes.GET_ACTIVE_SESSION_PLANS;\n  payload: SessionPlanInterface | \"none\";\n}\n\n// CREATE SESSION PLAN\nexport interface CreateSessionPlansAction {\n  type: ActionTypes.CREATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// UPDATE SESSION PLAN\nexport interface UpdateSessionPlansAction {\n  type: ActionTypes.UPDATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// ACTIVATE SESSION PLAN\nexport interface ActivateSessionPlansAction {\n  type: ActionTypes.SESSION_ACTIVATION;\n  payload: SessionPlanInterface;\n}\n\n// DELETE SESSION PLAN\nexport interface DeleteSessionPlanAction {\n  type: ActionTypes.DELETE_SESSION_PLAN;\n  payload: string;\n}\n\nexport type SessionActionType =\n  | GetPlansTypesAction\n  | GetDeletedPlansTypesAction\n  | CreatePlansTypeAction\n  | UpdatePlansTypeAction\n  | DeletePlansTypeAction\n  | GetAllSessionPlansAction\n  | GetActiveSessionPlanAction\n  | CreateSessionPlansAction\n  | UpdateSessionPlansAction\n  | ActivateSessionPlansAction\n  | DeleteSessionPlanAction\n  | setSelectedPlanTypeActions;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type`\n      );\n      console.log({ GET_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetPlansTypesAction>({\n        type: ActionTypes.GET_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetDeletedPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type/deleted`\n      );\n      console.log({ GET_DELETED_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetDeletedPlansTypesAction>({\n        type: ActionTypes.GET_DELETED_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE PLAN TYPE\nexport const createPlanType = (\n  data: PlansTypeInterface\n): CreatePlansTypeAction => {\n  return {\n    type: ActionTypes.CREATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// UPDATE PLAN TYPE\nexport const updatePlanType = (\n  data: PlansTypeInterface\n): UpdatePlansTypeAction => {\n  return {\n    type: ActionTypes.UPDATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// DELETE PLAN TYPE\nexport const deletePlanType = (\n  data: PlansTypeInterface\n): DeletePlansTypeAction => {\n  return {\n    type: ActionTypes.DELETE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// SELECT PLAN TYPES ==========================\nexport const setSelectedPlanType = (\n  thisType: PlansTypeInterface | \"all\"\n): setSelectedPlanTypeActions => {\n  console.log({ thisType });\n  return {\n    type: ActionTypes.SELECT_PLAN_TYPE,\n    payload: thisType,\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const getActiveSessionPlan = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface>(\n        `${API.CLAIMING}/session/active/`\n      );\n      console.log({ GET_ACTIVE_SESSION_PLANS: res.data });\n      let session_plan: SessionPlanInterface | undefined = undefined;\n      // if (res.status === 200) {\n      //   // setApplications(res.data);\n      // }\n      if (res.data && res.data.is_active !== undefined) {\n        session_plan = res.data;\n      }\n      console.log({ session_plan: res.data });\n\n      dispatch<GetActiveSessionPlanAction>({\n        type: ActionTypes.GET_ACTIVE_SESSION_PLANS,\n        payload: session_plan ? session_plan : \"none\",\n      });\n      callback(false, \"\", session_plan ? session_plan : \"none\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ALL PLAN TYPES ==========================\nexport const GetAllSessionPlans = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface[]>(\n        `${API.CLAIMING}/session/`\n      );\n      console.log({ GET_ALL_SESSION_PLANS: res.data });\n      let session_data: SessionPlanInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          session_data = res.data;\n        }\n      }\n      dispatch<GetAllSessionPlansAction>({\n        type: ActionTypes.GET_ALL_SESSION_PLANS,\n        payload: session_data,\n      });\n      callback(false, \"\", session_data);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE SESSION PLAN\nexport const createSessionPlan = (\n  data: SessionPlanInterface\n): CreateSessionPlansAction => {\n  return {\n    type: ActionTypes.CREATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// UPDATE SESSION PLAN\nexport const updateSessionPlan = (\n  data: SessionPlanInterface\n): UpdateSessionPlansAction => {\n  return {\n    type: ActionTypes.UPDATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// ACTIVATE SESSION PLAN\nexport const sessionActivation = (\n  data: SessionPlanInterface\n): ActivateSessionPlansAction => {\n  return {\n    type: ActionTypes.SESSION_ACTIVATION,\n    payload: data,\n  };\n};\n\n// DELETE SESSION PLAN\nexport const deleteSessionPlan = (data: string): DeleteSessionPlanAction => {\n  return {\n    type: ActionTypes.DELETE_SESSION_PLAN,\n    payload: data,\n  };\n};\n","import React, { FC, ReactElement, ReactNode } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, System } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { NavToogle, PageHasSubNav } from \"../../actions\";\nimport { MdBrightness1, MdSearch } from \"react-icons/md\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  system: System;\n  PageHasSubNav: Function;\n  NavToogle: Function;\n  children: ReactNode;\n}\n//\ninterface AppState {\n  loading: boolean;\n}\n\nclass _SideNavigation extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount = () => this.props.PageHasSubNav(true);\n  componentWillUnmount = () => this.props.PageHasSubNav(false);\n\n  render() {\n    const isAuthenticated = this.props.auth.isAuthenticated;\n\n    if (isAuthenticated === false) {\n      return null;\n    }\n\n    const navActive = this.props.system.navigation;\n    return (\n      <div\n        className={`fixed w-48 p-1 pr-2 pl-6 text-gray-700 bg-white ${\n          navActive === true ? \"lg:left-16  left-16\" : \" -left-72 lg:left-16\"\n        }  top-0 bottom-0 pt-20 z-30 shadow-lg  transition-all duration-500 ease-in-out overflow-y-auto`}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n}: StoreState): { auth: Auth; system: System } => {\n  return { auth: auth, system: system };\n};\n\nexport const SideNavigation = connect(mapStateToProps, {\n  NavToogle,\n  PageHasSubNav,\n})(_SideNavigation);\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SearchComponentInterface = {\n  data: any[];\n};\n\nexport const Search: FC<SearchComponentInterface> = ({\n  data,\n}): ReactElement => {\n  return (\n    <div className=\"m-1 rounded-md shadow-md border border-blue-400 bg-white p-1 flex \">\n      <label htmlFor=\"search-text\" className=\"inline-block text-2xl\">\n        <MdSearch className=\"inline-block text-blue-400\" />\n      </label>\n      <input\n        type=\"search\"\n        className=\"outline-none bg-transparent flex-1 pl-1\"\n        placeholder=\"Search\"\n        id=\"search-text\"\n      />\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype MainItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const MainItem: FC<MainItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n  return (\n    <section\n      className={`${\n        active === true\n          ? \"bg-blue-500 text-white font-bold\"\n          : \"bg-blue-100 text-blue-800\"\n      } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex cursor-pointer items-center`}\n    >\n      <section className=\"flex-1\">\n        <IconDefined className=\"inline-block mr-1 text-xs\" />\n        <span>{title}</span>\n      </section>\n\n      {count > 0 ? (\n        <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n          {count}\n        </span>\n      ) : null}\n    </section>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemContainerComponentInterface = {\n  children: ReactNode;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const SubItemContainer: FC<SubItemContainerComponentInterface> = ({\n  children,\n}): ReactElement => {\n  return (\n    <div className=\"ml-3 overflow-y-auto border-l-2 border-blue-200 -mt-1 pt-2 mb-2 pl-1 cursor-pointer\">\n      {children}\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n * @important Remenber to use these components inside the <SubItemContainer>...</SubItemContainer>\n */\nexport const SubItem: FC<SubItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n\n  return (\n    <div\n      className={`animate__animated animate__zoomIn animate__faster ${\n        active === true ? \"bg-blue-500 text-white font-bold\" : \" text-blue-800\"\n      } text-blue-800 bg-blue-200 rounded-md px-1 mb-1 flex items-center py-1 font-bold`}\n    >\n      <IconDefined\n        className={`inline-block mr-0.1 text-xs ${\n          active === true ? \"text-white\" : \"\"\n        }`}\n      />\n      <span\n        className={`inline-block pl-1 ${active === true ? \"text-white\" : \"\"}`}\n      >\n        {title}\n      </span>\n      {count >= 1 ? (\n        <span\n          className={`text-sm fint-bold ${active === true ? \"text-white\" : \"\"}`}\n        >\n          {count}\n        </span>\n      ) : null}\n    </div>\n  );\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  ApplicationSessionInterface,\n  SystemSettingsInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PositionAPI } from \"../interfaces/position\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// SYSTEM SETTINGS  ==============\nexport interface GetSystemSettingsAction {\n  type: ActionTypes.GET_SYSTEM_SETTINGS;\n  payload: SystemSettingsInterface[];\n}\n\nexport interface DisableSystemSettingsAction {\n  type: ActionTypes.DISABLE_SYSTEM_SETTINGS;\n  payload: {\n    system_setting_id: string;\n    status: \"enabled\" | \"disabled\";\n  };\n}\n\n// APPLICATION SETTINGS ===================================\nexport interface GetApplicationSessionAction {\n  type: ActionTypes.GET_APPLICATION_SESSIONS;\n  payload: ApplicationSessionInterface[];\n}\n\nexport interface CreateApplicationSessionAction {\n  type: ActionTypes.CREATE_APPLICATION_SESSIONS;\n  payload: ApplicationSessionInterface;\n}\n\nexport interface UpdateApplicationSessionAction {\n  type: ActionTypes.UPDATE_APPLICATION_SESSIONS;\n  payload: ApplicationSessionInterface;\n}\n\nexport interface DisableApplicationSessionAction {\n  type: ActionTypes.DISABLE_APPLICATION_SESSION;\n  payload: {\n    application_session_id: string;\n    status: boolean;\n  };\n}\n\n// POSITIONS SETTINGS ===================================\nexport interface PositionCreateInterface {\n  position_id?: string;\n  position_title: string;\n  description: string;\n  school_level_id: string;\n  education_institute_id: string;\n  courses: string[];\n  requirements: {\n    user_detail_category_id: string;\n    user_detail_subcategory_id: string;\n    position_requirement: {\n      category_subcategory_data_id: string;\n      required: boolean;\n    }[];\n    required: boolean;\n  }[];\n}\nexport interface GetPositionsAction {\n  type: ActionTypes.GET_POSTIONS;\n  payload: PositionAPI[];\n}\n\nexport interface CreatePositionsAction {\n  type: ActionTypes.CREATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface UpdatePositionsAction {\n  type: ActionTypes.UPDATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface DeletePositionAction {\n  type: ActionTypes.DELETE_POSITION;\n  payload: string;\n}\n\nexport interface PublishPositionAction {\n  type: ActionTypes.PUBLISH_POSITION;\n  payload: {\n    position_id: string;\n    status: boolean;\n  };\n}\n\nexport type SystemActionType =\n  | GetSystemSettingsAction\n  | DisableSystemSettingsAction\n  | GetApplicationSessionAction\n  | CreateApplicationSessionAction\n  | UpdateApplicationSessionAction\n  | DisableApplicationSessionAction\n  | GetPositionsAction\n  | CreatePositionsAction\n  | UpdatePositionsAction\n  | DeletePositionAction\n  | PublishPositionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSystemSettings = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<SystemSettingsInterface[]>(\n        `${API.AUTH}/settings`\n      );\n      dispatch<GetSystemSettingsAction>({\n        type: ActionTypes.GET_SYSTEM_SETTINGS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const disableSystemSetting = (data: {\n  system_setting_id: string;\n  status: \"enabled\" | \"disabled\";\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableSystemSettingsAction>({\n      type: ActionTypes.DISABLE_SYSTEM_SETTINGS,\n      payload: data,\n    });\n  };\n};\n\n// ============================ PERIODS =======================\n\nexport const getApplicationSessions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<ApplicationSessionInterface[]>(\n        `${API.APPLICATION}/applicationsesion`\n      );\n      dispatch<GetApplicationSessionAction>({\n        type: ActionTypes.GET_APPLICATION_SESSIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createAplicationSession = (data: ApplicationSessionInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateApplicationSessionAction>({\n      type: ActionTypes.CREATE_APPLICATION_SESSIONS,\n      payload: data,\n    });\n  };\n};\n\nexport const updateAplicationSession = (data: ApplicationSessionInterface) => {\n  console.log({ check: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateApplicationSessionAction>({\n      type: ActionTypes.UPDATE_APPLICATION_SESSIONS,\n      payload: data,\n    });\n  };\n};\n\nexport const disableApplicationSession = (data: {\n  application_session_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableApplicationSessionAction>({\n      type: ActionTypes.DISABLE_APPLICATION_SESSION,\n      payload: data,\n    });\n  };\n};\n\nexport const getPositions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(`${API.APPLICATION}/position`);\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createPosition = (data: PositionCreateInterface) => {\n  console.log({ createPosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreatePositionsAction>({\n      type: ActionTypes.CREATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const updatePosition = (data: PositionCreateInterface) => {\n  console.log({ updatePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdatePositionsAction>({\n      type: ActionTypes.UPDATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const deletePosition = (data: string) => {\n  console.log({ deletePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<DeletePositionAction>({\n      type: ActionTypes.DELETE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const publishPosition = (data: {\n  position_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<PublishPositionAction>({\n      type: ActionTypes.PUBLISH_POSITION,\n      payload: data,\n    });\n  };\n};\n","import React from \"react\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport { RiFileExcel2Fill } from \"react-icons/ri\";\n\ninterface ExportToExcelProps {\n  fileData: any[];\n  fileName: string;\n  btnName?: string;\n  className?: string;\n  showIcon?: boolean;\n}\n\nconst ExportToExcel: React.FC<ExportToExcelProps> = ({\n  fileData,\n  fileName,\n  btnName = \"Excel\",\n  className = \"flex items-center gap-1 px-4 py-1 rounded text-green-700 bg-white border hover:text-white hover:bg-green-700 border-green-700 font-bold\",\n  showIcon = true,\n}) => {\n  const fileType =\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n  const fileExtension = \".xlsx\";\n\n  const exportToCSV = (apiData: any[], fileName: string) => {\n    const ws = XLSX.utils.json_to_sheet(apiData);\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n    const data = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n\n  return (\n    <button\n      onClick={(e) => exportToCSV(fileData, fileName)}\n      className={className}\n    >\n      {showIcon && <RiFileExcel2Fill />}\n      {btnName}\n    </button>\n  );\n};\n\nexport default ExportToExcel;\n","export default __webpack_public_path__ + \"static/media/mineduc.11a9ae1c.png\";","import jsPDF from \"jspdf\";\nimport { DATE } from \"../../utils/functions\";\nimport Logo from \"../../utils/mineduc.png\";\nrequire(\"jspdf-autotable\");\n\nexport const addFooters = (doc: any) => {\n  const pageCount = doc.internal.getNumberOfPages();\n\n  doc.setFont(\"helvetica\", \"italic\");\n  doc.setFontSize(8);\n  for (var i = 1; i <= pageCount; i++) {\n    doc.setPage(i);\n    doc.text(\n      \"Page \" + String(i) + \" of \" + String(pageCount),\n      doc.internal.pageSize.width / 2,\n      297,\n      {\n        align: \"center\",\n      }\n    );\n  }\n};\n\nexport type reportSettingsInterface = {\n  doneBy: string;\n  title: string;\n  subjectTitle: string;\n  subject: string;\n  institute: string;\n  period: string;\n  footer: string;\n  orientation?: \"p\" | \"l\";\n};\n\nexport const generatePDF = async (\n  reportSettings: reportSettingsInterface,\n  table: HTMLElement,\n  callBack: (status: boolean) => void\n) => {\n  callBack(true);\n  const orientation: \"p\" | \"l\" = reportSettings.orientation\n    ? reportSettings.orientation\n    : \"p\";\n  var lMargin: number = 20; //left margin in mm\n  var rMargin: number = 20; //right margin in mm\n  var pdfInMM: number = 185; // width of A4 in mm\n\n  //   var doc = new jsPDF(\"p\", \"mm\", \"a4\");\n  var doc: any = new jsPDF(orientation, \"mm\", \"a4\");\n\n  doc.setTextColor(95, 95, 95);\n  doc.setFontSize(28);\n  // doc.text(\n  //   this.props.reportTitle,\n  //   doc.internal.pageSize.getWidth() / 2,\n  //   30,\n  //   undefined,\n  //   \"center\"\n  // );\n  doc.addImage(Logo, \"png\", 20, 20, 10, 10);\n  doc.text(\"MINEDUC\", 32, 28.5, undefined, \"left\");\n  //   doc.setTextColor(19, 90, 152);\n  doc.setFontSize(26);\n  doc.text(\n    reportSettings.title,\n    doc.internal.pageSize.getWidth() / 2,\n    42.7,\n    undefined,\n    \"center\"\n  );\n\n  doc.setFontSize(20);\n  doc.text(\n    reportSettings.institute,\n    doc.internal.pageSize.getWidth() / 2,\n    53.7,\n    undefined,\n    \"center\"\n  );\n\n  var lines;\n  lines = doc.splitTextToSize(\n    reportSettings.subject,\n    pdfInMM - lMargin - rMargin\n  );\n  // if (reportSettings.position) {\n  // } else if (reportSettings.subject) {\n  //   lines = doc.splitTextToSize(\n  //     reportSettings.subject,\n  //     pdfInMM - lMargin - rMargin\n  //   );\n  // }\n\n  //   doc.setTextColor(0, 123, 255);\n  doc.setFontSize(16);\n  //   doc.text(lines, doc.internal.pageSize.getWidth() / 2, 45, {\n  //     maxWidth: 85,\n  //     align: \"center\",\n  //   });\n\n  var y = 63,\n    width;\n  doc.setTextColor(95, 95, 95);\n  doc.text(`${reportSettings.subjectTitle}: `, lMargin, y);\n  width = doc.getTextWidth(`${reportSettings.subjectTitle}: `);\n  // if (reportSettings.position) {\n  // } else if (reportSettings.position) {\n  //   doc.text(`Subject: `, lMargin, y);\n  //   width = doc.getTextWidth(\"Subject: \");\n  // }\n  // doc.setFontType(\"bold\");\n  doc.setTextColor(38, 38, 38);\n  for (var i = 0; i < lines.length; i++) {\n    if (y > 280) {\n      y = 10;\n      doc.addPage();\n    }\n    // doc.text(15, y, lines[i]);\n    doc.text(lines[i], lMargin + width, y);\n    y = y + 7;\n  }\n  doc.setTextColor(95, 95, 95);\n  doc.text(\"Period: \", lMargin, y + 3);\n  width = doc.getTextWidth(\"Period: \");\n  doc.setTextColor(38, 38, 38);\n  doc.text(reportSettings.period, lMargin + width, y + 3);\n\n  doc.autoTable({\n    html: table,\n    startY: 85,\n    margin: { horizontal: 20 },\n    cellPadding: 3, // Horizontal cell padding\n    // fontSize: 12,\n    rowHeight: 20,\n    // styles: { overflow: \"linebreak\" },\n    bodyStyles: { valign: \"top\" },\n    columnStyles: { email: { cellWidth: \"wrap\" } },\n    theme: \"striped\",\n    tableWidth: true,\n  });\n\n  doc.setFontSize(12);\n  let finalY = doc.lastAutoTable.finalY; // The y position on the page\n  doc.text(`Reported by: ${reportSettings.doneBy}`, lMargin, finalY + 15);\n  doc.text(\n    \"Report downloaded on \" + DATE(new Date().toString()),\n    lMargin,\n    finalY + 23\n  );\n\n  addFooters(doc);\n  await doc\n    .save(\n      `${\n        reportSettings.title +\n        \": \" +\n        reportSettings.subject +\n        \": \" +\n        reportSettings.period\n      }.pdf`,\n      { returnPromise: true }\n    )\n    .then(callBack(false));\n};\n","import React, { useState } from \"react\";\nimport {\n  MdCheckCircle,\n  MdRadioButtonUnchecked,\n  MdSearch,\n} from \"react-icons/md\";\nimport Loading from \"../../components/Loading/Loading\";\nimport {\n  PlansInterface,\n  SessionPlanInterface,\n  SessionPlanTypeStatus,\n} from \"../../interfaces\";\nimport { DATE } from \"../../utils/functions\";\nimport searchData from \"../../utils/search\";\n\nexport const isPlansActive = (plans: PlansInterface[]): PlansInterface[] => {\n  let today = new Date();\n  let activePlans: PlansInterface[] = [];\n  for (let plan of plans) {\n    let startDate = new Date(plan.start_date);\n    let endDate = new Date(plan.end_date);\n    if (\n      startDate.getTime() <= today.getTime() &&\n      endDate.getTime() >= today.getTime() &&\n      plan.type_status === SessionPlanTypeStatus.OPEN\n    ) {\n      activePlans = [...activePlans, plan];\n    }\n  }\n  return activePlans;\n};\n\ninterface ChooseSessionProps {\n  allSession: SessionPlanInterface[] | null;\n  setSelectSession: (period: SessionPlanInterface | \"all\") => void;\n  currentSelected: SessionPlanInterface | \"all\";\n  chooseAll: boolean;\n}\n\nconst ChooseSession = (props: ChooseSessionProps) => {\n  const [selectedPlan, setSelectedPlan] = useState<SessionPlanInterface | null>(\n    null\n  );\n  const [search, setSearch] = useState<string>(\"\");\n  const getSearch = (\n    period: SessionPlanInterface[],\n    searched: string\n  ): SessionPlanInterface[] => {\n    return searchData(period, searched) as SessionPlanInterface[];\n  };\n\n  return (\n    <div className=\"\">\n      <div className=\"px-3\">\n        <input\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n            setSearch(e.target.value)\n          }\n          type=\"text\"\n          className=\"py-3 px-4 w-full rounded border border-gray-400 mb-3\"\n          placeholder=\"Search by year, name\"\n          disabled={props.allSession === null || props.allSession.length === 0}\n        />\n      </div>\n\n      <div className=\"bg-gray-100 px-3 pt-3 pb-2 rounded-b\">\n        {props.allSession === null ? (\n          <Loading />\n        ) : props.allSession.length === 0 ? (\n          <div className=\"flex flex-col text-gray-400 items-center justify-center mb-2 bg-white py-4\">\n            <MdSearch className=\"text-6xl\" />\n            <div className=\"flex flex-col items-center justify-center\">\n              <span>No session found!</span>\n            </div>\n          </div>\n        ) : (\n          <section>\n            {props.chooseAll && (\n              <div\n                className={`rounded border ${\n                  props.currentSelected === \"all\"\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2 flex flex-col md:flex-row items-start md:items-center md:justify-between`}\n              >\n                <div className=\"flex flex-row items-center gap-3\">\n                  {props.currentSelected === \"all\" ? (\n                    <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                  ) : (\n                    <MdRadioButtonUnchecked\n                      className={`text-gray-300 text-4xl`}\n                    />\n                  )}\n                  <div className=\"flex flex-col\">\n                    <div className={`text-gray-600 font-bold`}>All session</div>\n                  </div>\n                </div>\n                <div\n                  onClick={() => {\n                    props.setSelectSession(\"all\");\n                  }}\n                  className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                >\n                  Select\n                </div>\n              </div>\n            )}\n            {getSearch(props.allSession, search).map((item, i) => (\n              <div\n                key={i + 1}\n                className={`rounded border ${\n                  props.currentSelected !== \"all\" &&\n                  props.currentSelected.session_plan_id === item.session_plan_id\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2`}\n              >\n                <div className=\"flex flex-col md:flex-row items-start md:items-center md:justify-between \">\n                  <div className=\"flex flex-row items-center gap-3\">\n                    {props.currentSelected !== \"all\" &&\n                    props.currentSelected.session_plan_id ===\n                      item.session_plan_id ? (\n                      <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                    ) : (\n                      <MdRadioButtonUnchecked\n                        className={`text-gray-300 text-4xl`}\n                      />\n                    )}\n                    <div className=\"flex flex-col\">\n                      <div\n                        className={`${\n                          props.currentSelected !== \"all\" &&\n                          props.currentSelected.session_plan_id ===\n                            item.session_plan_id\n                            ? \"text-blue-600\"\n                            : \"text-gray-600\"\n                        } font-bold`}\n                      >\n                        {item.session_plan_name}\n                      </div>\n                      <div className=\"text-sm text-gray-500\">\n                        <span>Status: </span>\n                        <span\n                          className={`${\n                            item.is_active === true\n                              ? \"text-gray-900 font-bold underline\"\n                              : \"text-gray-500 italic\"\n                          }`}\n                        >\n                          {item.is_active === true ? \"Active\" : \"Expired\"}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"flex flex-row items-center gap-2\">\n                    {(selectedPlan === null ||\n                      selectedPlan.session_plan_id !==\n                        item.session_plan_id) && (\n                      <div\n                        onClick={() => setSelectedPlan(item)}\n                        className=\"bg-gray-50 group-hover:bg-blue-100 font-semibold text-gray-400 group-hover:text-blue-600 rounded px-3 py-2 cursor-pointer\"\n                      >\n                        Details\n                      </div>\n                    )}\n                    <div\n                      onClick={() => {\n                        props.setSelectSession(item);\n                      }}\n                      className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                    >\n                      Select\n                    </div>\n                    {selectedPlan !== null &&\n                      selectedPlan.session_plan_id === item.session_plan_id && (\n                        <div\n                          onClick={() => setSelectedPlan(null)}\n                          className=\"bg-red-100 group-hover:bg-red-200 font-semibold text-red-600 group-hover:text-red-800 rounded px-3 py-2 cursor-pointer\"\n                        >\n                          Close\n                        </div>\n                      )}\n                  </div>\n                </div>\n                {selectedPlan !== null &&\n                  selectedPlan.session_plan_id === item.session_plan_id && (\n                    <div className=\"bg-white rounded border border-blue-50 mt-2 animate__animated animate__fadeIn\">\n                      <table className=\"w-full\">\n                        <thead className=\"bg-blue-50\">\n                          <tr className=\"text-left\">\n                            <th className=\"px-3 py-3\">#</th>\n                            <th>Plan</th>\n                            <th>Start date</th>\n                            <th>Ending date</th>\n                            <th>Status</th>\n                          </tr>\n                        </thead>\n                        <tbody className=\"text-sm\">\n                          {selectedPlan !== null &&\n                            selectedPlan.session_plan_id ===\n                              item.session_plan_id &&\n                            selectedPlan.plans.length > 0 &&\n                            item.plans.map((plan, i) => (\n                              <tr\n                                key={i + 1}\n                                className={`${\n                                  isPlansActive(item.plans).find(\n                                    (itm) => itm.type_key === plan.type_key\n                                  ) !== undefined\n                                    ? \"bg-blue-100 text-blue-600 font-bold\"\n                                    : \"\"\n                                } text-left border-b border-blue-50`}\n                              >\n                                <td className=\"px-3 py-1\">{i + 1}</td>\n                                <td>{plan.type_title}</td>\n                                <td>{DATE(plan.start_date, \"DD/MM/YYYY\")}</td>\n                                <td>{DATE(plan.end_date, \"DD/MM/YYYY\")}</td>\n                                <td>{plan.type_status}</td>\n                              </tr>\n                            ))}\n                        </tbody>\n                      </table>\n                    </div>\n                  )}\n              </div>\n            ))}\n          </section>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ChooseSession;\n","import React from \"react\";\n\ntype TableLoadingProps = {\n  cols: number;\n};\nconst TableLoading: React.FC<TableLoadingProps> = (props) => {\n  const displayCols = (): JSX.Element[] => {\n    let colsArray: number[] = [];\n    for (let index = 0; index < props.cols; index++) {\n      colsArray.push(index);\n    }\n    let result = colsArray.map((element) => {\n      return (\n        <td className=\"p-3 text-center whitespace-nowrap\" key={element}>\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      );\n    });\n\n    return result;\n  };\n  return (\n    <>\n      <tr className=\"border-b border-gray-200\" key={228}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={22648}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={229768}>\n        {displayCols()}\n      </tr>\n    </>\n  );\n};\n\nexport default TableLoading;\n","export interface WaitingListInterface {\n  user: string;\n  period: string;\n  position: string;\n  waiting_status: WaitingListStatus;\n  status: number;\n  user_position_marks: number;\n  createdAt: string;\n  updatedAt: string;\n  id: string;\n}\n\nexport enum WaitingListStatus {\n  // when user have Passed Exam and Waiting To Be Placed to exam\n  Waiting = \"Waiting\",\n  // when user have been Placed to school\n  Placed = \"Placed\",\n  // when user have been Failed exam\n  Failed = \"Failed\",\n}\n\nexport enum applicantGender {\n  male = \"Male\",\n  female = \"Female\",\n  null = \"-\",\n}\n\nexport interface WaitingListToPrintInterface {\n  id: string;\n  names: string;\n  gender: string;\n  national_id: string;\n  phone: string;\n  email: string;\n  user_position_marks: number;\n  position_title: string;\n  education_category: string;\n  waitingList_session: string;\n  date: string;\n  waiting_status: WaitingListStatus;\n}\nexport interface WaitingListDataInterface {\n  waitingList_id: string;\n  names: string;\n  gender: applicantGender;\n  national_id: string;\n  phone: string;\n  email: string;\n  user_position_marks: number;\n  position_id: string;\n  position_title: string;\n  education_category_id: string;\n  education_category: string;\n  waitingList_session: string;\n  waitingList_session_id: string;\n  date: string;\n  waiting_status: WaitingListStatus;\n}\n\nexport enum waitingListReportContentKeyInterface {\n  names = \"names\",\n  gender = \"gender\",\n  national_id = \"national_id\",\n  email = \"email\",\n  phone = \"phone\",\n  user_position_marks = \"user_position_marks\",\n  position_title = \"position_title\",\n  education_category = \"education_category\",\n  date = \"date\",\n  waiting_status = \"waiting_status\",\n  waitingList_session = \"waitingList_session\",\n}\n\nexport interface waitingListReportContentInterface {\n  key: waitingListReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport {\n  WaitingListInterface,\n  WaitingListStatus,\n} from \"../interfaces/waitingList\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// GET WAITING LIST\nexport interface GetWaitingListAction {\n  type: ActionTypes.GET_WAITING_LIST;\n  payload: WaitingListInterface[];\n}\n\nexport type WaitingListActionType = GetWaitingListAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// GET WAITING LIST\nexport const getWaitingList = (\n  position: string,\n  callback: Function,\n  waiting_status: WaitingListStatus = WaitingListStatus.Waiting,\n  sortBy: \"createdAt\" | \"position\" = \"createdAt\"\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.post<WaitingListInterface[]>(\n        `${API.DO_EXAM}/waiting`,\n        {\n          order: \"desc\",\n          sortBy,\n          filter: {\n            waiting_status,\n            position,\n          },\n        }\n      );\n      console.log({ api_waiting: res.data });\n\n      dispatch<GetWaitingListAction>({\n        type: ActionTypes.GET_WAITING_LIST,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error(error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { BiExport, BiFilterAlt, BiSort } from \"react-icons/bi\";\nimport { FiEdit } from \"react-icons/fi\";\nimport { ImFilesEmpty } from \"react-icons/im\";\nimport {\n  MdCheckBox,\n  MdCheckBoxOutlineBlank,\n  MdHistory,\n  MdRadioButtonChecked,\n  MdRadioButtonUnchecked,\n  MdSearch,\n} from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadEducationCategories,\n  PushPopupAlert,\n  schoolLevelsStoreInterface,\n} from \"../../../actions\";\nimport { getPositions } from \"../../../actions/settings\";\nimport { fetchUserAccess } from \"../../../actions/users\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport {\n  generatePDF,\n  reportSettingsInterface,\n} from \"../../../components/DownloadPDF/rest\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport {\n  MainItem,\n  SideNavigation,\n} from \"../../../components/Navigation/SideNavigation\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { PositionAPI } from \"../../../interfaces/position\";\nimport { StoreState } from \"../../../reducers\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport ExportToExcel from \"../../../utils/ExportToExcel\";\nimport { DATE, search, sortThisArray } from \"../../../utils/functions\";\nimport TableLoading from \"../../../components/Loading/TableLoading\";\nimport { education_category, SessionPlanInterface } from \"../../../interfaces\";\nimport { getWaitingList } from \"../../../actions/waitingList\";\nimport {\n  applicantGender,\n  WaitingListDataInterface,\n  WaitingListInterface,\n  waitingListReportContentInterface,\n  waitingListReportContentKeyInterface,\n  WaitingListStatus,\n  WaitingListToPrintInterface,\n} from \"../../../interfaces/waitingList\";\nimport { IoFilter } from \"react-icons/io5\";\nimport LoadingV2, { LoadingType } from \"../../../components/Loading/LoadingV2\";\nimport { IoIosBriefcase } from \"react-icons/io\";\nimport {\n  capitalizeFirstLetter,\n  getPositionById,\n} from \"../../../shared/dataTest\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport ChooseSession from \"../../SessionSettings/ChooseSession\";\n\nexport const getUserById = (\n  userList: UserInterface[],\n  user_id: string\n): UserInterface | undefined => {\n  return userList.find((item) => item.user_id === user_id);\n};\n\nexport const getPeriodById = (\n  allSession: SessionPlanInterface[],\n  period_id: string\n): SessionPlanInterface | undefined => {\n  return allSession.find((item) => item.session_plan_id === period_id);\n};\n\nconst searchData = (\n  objList: WaitingListDataInterface[],\n  text: string\n): WaitingListDataInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (\n        prop === \"names\" ||\n        prop === \"gender\" ||\n        prop === \"national_id\" ||\n        prop === \"phone\" ||\n        prop === \"email\" ||\n        prop === \"user_position_marks\" ||\n        prop === \"position_title\" ||\n        prop === \"education_category\" ||\n        prop === \"waitingList_session\" ||\n        prop === \"date\" ||\n        prop === \"waiting_status\"\n      ) {\n        if (product[prop]) {\n          flag =\n            product[prop]!.toString()\n              .toLowerCase()\n              .indexOf(text.toLowerCase()) > -1;\n        }\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n};\n\nconst defaultReportContent: waitingListReportContentInterface[] = [\n  {\n    key: waitingListReportContentKeyInterface.names,\n    title: \"Applicant Names\",\n    status: true,\n  },\n  {\n    key: waitingListReportContentKeyInterface.national_id,\n    title: \"National ID\",\n    status: true,\n  },\n  {\n    key: waitingListReportContentKeyInterface.gender,\n    title: \"Gender\",\n    status: true,\n  },\n  {\n    key: waitingListReportContentKeyInterface.phone,\n    title: \"Phone\",\n    status: true,\n  },\n  {\n    key: waitingListReportContentKeyInterface.user_position_marks,\n    title: \"Applicant marks\",\n    status: true,\n  },\n  {\n    key: waitingListReportContentKeyInterface.waitingList_session,\n    title: \"Waiting list Session\",\n    status: true,\n  },\n  {\n    key: waitingListReportContentKeyInterface.education_category,\n    title: \"Education Institute\",\n    status: true,\n  },\n  {\n    key: waitingListReportContentKeyInterface.date,\n    title: \"Waiting list Date\",\n    status: true,\n  },\n  {\n    key: waitingListReportContentKeyInterface.waiting_status,\n    title: \"Waiting list Status\",\n    status: true,\n  },\n  {\n    key: waitingListReportContentKeyInterface.position_title,\n    title: \"Position\",\n    status: true,\n  },\n];\n\ntype AppProps = {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  userList: UserInterface[];\n  systemPositions: PositionAPI[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  waitingList: WaitingListInterface[] | null;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  getWaitingList: Function;\n  getPositions: Function;\n  GetAllSessionPlans: Function;\n  fetchUserAccess: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\nconst _WaitingListReport: React.FC<AppProps> = (props) => {\n  const [thisPeriod, setThisPeriod] = useState<SessionPlanInterface | \"all\">(\n    \"all\"\n  );\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingSession, setLoadingSession] = useState<boolean>(true);\n  const [loadingPosition, setLoadingPosition] = useState<boolean>(true);\n  const [loadingInstitutes, setLoadingInstitutes] = useState<boolean>(true);\n  const [loadingUsers, setLoadingUsers] = useState(true);\n  const [loadingWaitingList, setLoadingWaitingList] = useState(true);\n  const [waitingListToPrint, setWaitingListToPrint] = useState<\n    WaitingListToPrintInterface[] | null\n  >();\n\n  const [thisWaitingListStatus, setThisWaitingListStatus] = useState<\n    WaitingListStatus | \"all\"\n  >(\"all\");\n  const [thisPosition, setThisPosition] = useState<PositionAPI | null>(null);\n  const [selectPosition, setSelectPosition] = useState<boolean>(false);\n  const [sortProperty, setSortProperty] = useState<string>(\"\");\n  const [isSorted, setIsSorted] = useState<boolean>(false);\n  const [sortOrder, setSortOrder] = useState<\"ASC\" | \"DESC\">(\"ASC\");\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const [searchPositionInput, setSearchPositionInput] = useState<string>(\"\");\n  const [downloading, setDownloading] = useState<boolean>(false);\n  const [generateReportModal, setGenerateReportModal] = useState<{\n    reportType: \"EXCEL\" | \"PDF\";\n    status: boolean;\n  } | null>(null);\n  const [reportTitle, setReportTitle] = useState<string>(\"\");\n  const [reportContent, setReportContent] =\n    useState<waitingListReportContentInterface[]>(defaultReportContent);\n  const [selectAll, setSelectAll] = useState<boolean>(true);\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [selectPeriod, setSelectPeriod] = useState<boolean>(false);\n  const [thisEducation, setThisEducation] = useState<\n    education_category | \"all\"\n  >(\"all\");\n\n  useEffect(() => {\n    // LOADING EDUCATION CATEGORY =================================\n    if (\n      props.schoolLevels.education_categories === null ||\n      props.schoolLevels.education_categories.length === 0\n    ) {\n      props.loadEducationCategories(setLoadingInstitutes);\n    } else {\n      setLoadingInstitutes(false);\n    }\n    // END LOADING EDUCATION CATEGORY =================================\n    // ###################################################################\n    // LOADING APPLICATION SESSION ====================================\n    if (props.application_sessions === null) {\n      props.GetAllSessionPlans((status: boolean, msg: string) => {\n        if (!status) {\n          setLoadingSession(false);\n          setLoading(false);\n          if (msg.length) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    } else if (loadingSession) {\n      setLoading(false);\n      setLoadingSession(false);\n    }\n\n    // ###################################################################\n    // LOADING POSITIONS ====================================\n    if (props.systemPositions === null) {\n      props.getPositions((status: boolean, msg: string) => {\n        setLoadingPosition(status);\n        if (msg.length) {\n          props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    } else if (loadingPosition) {\n      setLoadingPosition(false);\n    }\n\n    if (props.systemPositions && thisPosition === null && !selectPosition) {\n      setSelectPosition(true);\n    }\n    // END LOADING POSITIONS ====================================\n\n    if (!props.userList.length && loadingUsers) {\n      setLoadingUsers(false);\n      props.fetchUserAccess();\n    } else if (loadingUsers) {\n      setLoadingUsers(false);\n    }\n  }, [\n    loadingPosition,\n    loadingSession,\n    loadingUsers,\n    props,\n    selectPosition,\n    thisPeriod,\n    thisPosition,\n  ]);\n\n  const loadWaitingList = (position_id: string) => {\n    // LOADING WAITING LIST ========================================\n    setLoadingWaitingList(true);\n    props.getWaitingList(position_id, (status: boolean, msg: string) => {\n      if (status === false) {\n        setLoadingWaitingList(status);\n        if (msg.length > 0) {\n          props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      }\n    });\n    // END LOADING CLAIM TYPES ========================================\n  };\n\n  const loadPosition = () => {\n    setLoadingPosition(true);\n    props.getPositions((status: boolean, msg: string) => {\n      setLoadingPosition(status);\n      if (msg.length) {\n        props.PushPopupAlert({\n          title: msg,\n          theme: PopupAlertTheme.danger,\n        });\n      }\n    });\n  };\n\n  if (loading === true) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading Data...\n      </div>\n    );\n  }\n\n  const setSort = (thisProperty: string) => {\n    if (sortProperty === thisProperty && sortOrder === \"ASC\") {\n      setSortOrder(\"DESC\");\n    } else {\n      setSortOrder(\"ASC\");\n    }\n    setSortProperty(thisProperty);\n    setIsSorted(true);\n  };\n\n  const FC_WaitingListStatus = (\n    WaitingList: WaitingListDataInterface[]\n  ): {\n    title: string;\n    count: number;\n    type: WaitingListStatus | \"all\";\n  }[] => {\n    let output: {\n      title: string;\n      count: number;\n      type: WaitingListStatus | \"all\";\n    }[] = [{ title: \"All status\", count: WaitingList.length, type: \"all\" }];\n    const statusArray = Object.values(WaitingListStatus);\n    for (let i in statusArray) {\n      output.push({\n        title: statusArray[i],\n        count: WaitingList.filter(\n          (itm) => itm.waiting_status === statusArray[i]\n        ).length,\n        type: statusArray[i],\n      });\n    }\n    return output;\n  };\n\n  const updateReportContent = (key: waitingListReportContentKeyInterface) => {\n    let index: number = reportContent.findIndex((item) => item.key === key);\n    let newArray: waitingListReportContentInterface[] = reportContent;\n    newArray[index].status = !newArray[index].status;\n    setReportContent(newArray);\n    let isSelectAllNeeded = newArray.find((item) => item.status === false);\n    if (isSelectAllNeeded) {\n      setSelectAll(false);\n    } else {\n      setSelectAll(true);\n    }\n\n    // UPDATE APPLICATION LIST FOR UPDATE ==============================\n    updateWaitingListToPrint();\n  };\n\n  const updateWaitingListToPrint = () => {\n    // UPDATE REPORT TITLE ========================\n    if (thisPosition) {\n      let session: string = \"\";\n      if (thisPeriod === \"all\") {\n        session = \"All session\";\n      } else {\n        session = thisPeriod.session_plan_name;\n      }\n      setReportTitle(\n        \"Waiting list - \" + thisPosition.position_title + \" - \" + session\n      );\n    }\n    // UPDATE CONTENT =============================\n    if (\n      props.systemPositions &&\n      props.waitingList &&\n      props.application_sessions\n    ) {\n      let arrayNew: WaitingListToPrintInterface[] = [];\n      let n: number = 1;\n      for (const key in props.waitingList) {\n        if (Object.prototype.hasOwnProperty.call(props.waitingList, key)) {\n          const element = props.waitingList[key];\n          const thisPosition = getPositionById(\n            props.systemPositions,\n            element.position\n          );\n          const thisUser = getUserById(props.userList, element.user);\n          const thisSession = getPeriodById(\n            props.application_sessions,\n            element.period\n          );\n          let dataArray: WaitingListToPrintInterface = {\n            id: n.toString(),\n            names: thisUser\n              ? thisUser.user_info.fname + \" \" + thisUser.user_info.lname\n              : \"Unknown user\",\n            gender: thisUser\n              ? thisUser.user_info.sex === \"M\"\n                ? \"Male\"\n                : \"Female\"\n              : \"-\",\n            national_id: thisUser ? (thisUser.n_id ? thisUser.n_id : \"-\") : \"-\",\n            phone: thisUser ? thisUser.phone_number : \"-\",\n            email: thisUser ? thisUser.email : \"-\",\n            user_position_marks: Number(element.user_position_marks.toFixed(2)),\n            position_title: thisPosition\n              ? thisPosition.position_title\n              : \"Unknown position\",\n            education_category: thisPosition\n              ? thisPosition.education_institute_id.education_category_title\n              : \"-\",\n            waitingList_session: thisSession\n              ? thisSession.session_plan_name\n              : \"Unknown session\",\n            date: DATE(element.createdAt),\n            waiting_status: element.waiting_status,\n          };\n\n          for (const key in reportContent) {\n            if (Object.prototype.hasOwnProperty.call(reportContent, key)) {\n              if (!reportContent[key].status) {\n                delete dataArray[reportContent[key].key];\n              }\n            }\n          }\n          arrayNew.push(dataArray);\n          n++;\n        }\n      }\n      setWaitingListToPrint(arrayNew);\n      arrayNew = [];\n      n = 1;\n    }\n  };\n\n  const FC_WaitingListData = (\n    allWaitList: WaitingListInterface[] | null,\n    systemPositions: PositionAPI[] | null\n  ): WaitingListDataInterface[] | null => {\n    if (\n      allWaitList === null ||\n      systemPositions === null ||\n      props.application_sessions === null\n    )\n      return null;\n    let arrayNew: WaitingListDataInterface[] = [];\n    // LOOP IN ALL WAITING LIST ONE BY ONE ###########################\n    for (const key in allWaitList) {\n      if (Object.prototype.hasOwnProperty.call(allWaitList, key)) {\n        const element = allWaitList[key];\n        const thisPosition = getPositionById(systemPositions, element.position);\n        const thisUser = getUserById(props.userList, element.user);\n        const thisSession = getPeriodById(\n          props.application_sessions,\n          element.period\n        );\n        let dataArray: WaitingListDataInterface = {\n          names: thisUser\n            ? thisUser.user_info.fname + \" \" + thisUser.user_info.lname\n            : \"Unknown user\",\n          waitingList_id: element.id,\n          gender: thisUser\n            ? thisUser.user_info.sex === \"M\"\n              ? applicantGender.male\n              : applicantGender.male\n            : applicantGender.null,\n          national_id: thisUser ? (thisUser.n_id ? thisUser.n_id : \"-\") : \"-\",\n          phone: thisUser ? thisUser.phone_number : \"-\",\n          email: thisUser ? thisUser.email : \"-\",\n          user_position_marks: Number(element.user_position_marks.toFixed(2)),\n          position_id: thisPosition\n            ? thisPosition.position_id\n            : \"Unknown position\",\n          position_title: thisPosition\n            ? thisPosition.position_title\n            : \"Unknown position\",\n          education_category: thisPosition\n            ? thisPosition.education_institute_id.education_category_title\n            : \"\",\n          education_category_id: thisPosition\n            ? thisPosition.education_institute_id.education_institute_id\n            : \"\",\n          waitingList_session: thisSession\n            ? thisSession.session_plan_name\n            : \"Unknown session\",\n          date: DATE(element.createdAt),\n          waiting_status: element.waiting_status,\n          waitingList_session_id: element.period,\n        };\n        arrayNew.push(dataArray);\n      }\n    }\n    return arrayNew;\n  };\n\n  const resetReportContent = (currentState: boolean) => {\n    let newArray: waitingListReportContentInterface[] = reportContent;\n    for (const key in newArray) {\n      if (isChangeAllowed(newArray[key].key)) {\n        newArray[key].status = !currentState;\n      }\n    }\n\n    setReportContent(newArray);\n    setSelectAll(!currentState);\n    updateWaitingListToPrint();\n  };\n\n  const isChangeAllowed = (\n    key: waitingListReportContentKeyInterface\n  ): boolean => {\n    if (\n      key === waitingListReportContentKeyInterface.names ||\n      key === waitingListReportContentKeyInterface.waiting_status ||\n      key === waitingListReportContentKeyInterface.waitingList_session ||\n      key === waitingListReportContentKeyInterface.position_title ||\n      key === waitingListReportContentKeyInterface.date ||\n      key === waitingListReportContentKeyInterface.user_position_marks ||\n      key === waitingListReportContentKeyInterface.national_id ||\n      key === waitingListReportContentKeyInterface.education_category\n    ) {\n      return false;\n    }\n    return true;\n  };\n\n  const generateReportTitle = (position_title: string) => {\n    let session: string = \"\";\n    if (thisPeriod === \"all\") {\n      session = \"All session\";\n    } else {\n      session = thisPeriod.session_plan_name;\n    }\n    setReportTitle(\"Waiting list - \" + position_title + \" - \" + session);\n  };\n\n  const FC_GeneratePDF = () => {\n    if (!document.querySelectorAll(\"#report_content tbody tr\").length) {\n      props.PushPopupAlert({\n        title: `Can't generate Report of empty Data`,\n        theme: PopupAlertTheme.warning,\n      });\n      return;\n    }\n\n    let session: string = \"\";\n    if (thisPeriod === \"all\") {\n      session = \"All session\";\n    } else {\n      session = thisPeriod.session_plan_name;\n    }\n    const table: HTMLElement | null = document.getElementById(\"report_content\");\n    const reportSettings: reportSettingsInterface = {\n      doneBy: props.auth.user.fname + \" \" + props.auth.user.lname,\n      title: reportTitle,\n      subjectTitle: \"Position\",\n      subject: thisPosition ? thisPosition.position_title : \"\",\n      period: session,\n      footer: \"Online Recruitment\",\n      institute: thisPosition\n        ? thisPosition.education_institute_id.education_category_title\n        : \"\",\n    };\n    table && generatePDF(reportSettings, table, setDownloading);\n  };\n\n  const FC_FilterWaitingList = (\n    allWaitList: WaitingListDataInterface[],\n    waitingListStatus: WaitingListStatus | \"all\",\n    thisSession: SessionPlanInterface | \"all\",\n    institute: education_category | \"all\"\n  ): WaitingListDataInterface[] => {\n    let result: WaitingListDataInterface[] = allWaitList;\n    if (waitingListStatus !== \"all\") {\n      result = result.filter(\n        (item) => item.waiting_status === waitingListStatus\n      );\n    }\n    if (thisSession !== \"all\") {\n      result = result.filter(\n        (item) => item.waitingList_session_id === thisSession.session_plan_id\n      );\n    }\n\n    if (institute !== \"all\") {\n      result = result.filter(\n        (item) => item.education_category === institute.education_category_title\n      );\n    }\n\n    return result;\n  };\n\n  return (\n    <Fragment>\n      <SideNavigation>\n        <div className=\"flex flex-col mb-4\">\n          <span className=\"text-sm text-gray-600 mb-2\">\n            Education categories:\n          </span>\n          {props.schoolLevels.education_categories === null ||\n          loadingInstitutes ? (\n            <Loading />\n          ) : props.schoolLevels.education_categories.length === 0 ? (\n            <span>No result found</span>\n          ) : (\n            <Fragment>\n              <div\n                onClick={() => setThisEducation(\"all\")}\n                className={`border rounded px-2 py-2 mb-2 cursor-pointer ${\n                  thisEducation === \"all\"\n                    ? \"bg-blue-600 text-white hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                    : \"hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                } font-bold flex flex-row items-center gap-2`}\n              >\n                {thisEducation === \"all\" ? (\n                  <MdRadioButtonChecked />\n                ) : (\n                  <MdRadioButtonUnchecked />\n                )}\n                <span>All</span>\n              </div>\n              {props.schoolLevels.education_categories.map((item, i) => (\n                <div\n                  onClick={() => setThisEducation(item)}\n                  key={i + 1}\n                  className={`border rounded px-2 py-2 mb-2 cursor-pointer ${\n                    thisEducation !== \"all\" &&\n                    thisEducation.education_institute_id ===\n                      item.education_institute_id\n                      ? \"bg-blue-600 text-white hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                      : \"hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                  } font-bold flex flex-row items-center gap-2`}\n                >\n                  {thisEducation !== \"all\" &&\n                  thisEducation.education_institute_id ===\n                    item.education_institute_id ? (\n                    <MdRadioButtonChecked />\n                  ) : (\n                    <MdRadioButtonUnchecked />\n                  )}\n                  <span>{item.education_category_title}</span>\n                </div>\n              ))}\n            </Fragment>\n          )}\n        </div>\n        <div className=\"\">\n          <div className=\"text-gray-600 text-sm mb-2\">Selected period:</div>\n          <div\n            onClick={() => setSelectPeriod(true)}\n            className=\"font-bold bg-blue-50 border border-blue-200 rounded py-2 cursor-pointer text-base px-2 hover:underline  text-blue-600  mb-4 w-full flex flex-row items-center gap-2 justify-between animate__animated animate__zoomIn\"\n          >\n            {thisPeriod !== \"all\"\n              ? `${thisPeriod.session_plan_name} - ${thisPeriod.period}`\n              : \"All session\"}\n            <FiEdit className=\"text-xl text-blue-600\" />\n          </div>\n        </div>\n\n        <div className=\"pt-1\">\n          <div className=\"text-sm text-gray-700 pb-2 pt-2\">Claim types:</div>\n          {loadingWaitingList ||\n          FC_WaitingListData(props.waitingList, props.systemPositions) ===\n            null ? (\n            <Loading />\n          ) : (\n            FC_WaitingListStatus(\n              FC_WaitingListData(props.waitingList, props.systemPositions)!\n            ).map((item, index: number) => (\n              <div\n                onClick={() => setThisWaitingListStatus(item.type)}\n                key={item.title + index}\n              >\n                <MainItem\n                  title={item.title}\n                  count={item.count}\n                  active={thisWaitingListStatus === item.type}\n                />\n              </div>\n            ))\n          )}\n        </div>\n      </SideNavigation>\n      <section>\n        {/* REPORT TITLE ============================================ */}\n        <div className=\"grid md:grid-cols-12\">\n          <div className=\"col-span-6\">\n            <div className=\"mt-4 mx-4 flex flex-col gap-1\">\n              <span className=\"text-3xl font-bold text-gray-700\">\n                Waiting list report\n              </span>\n              <div\n                onClick={() => setSelectPosition(true)}\n                className=\"flex flex-row gap-2\"\n              >\n                <span className=\"text-gray-500\">Selected position: </span>\n                <span className=\"text-blue-600 font-bold underline cursor-pointer\">\n                  {thisPosition !== null\n                    ? thisPosition.position_title\n                    : \"No position selected, Click to select\"}\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-span-6\">\n            <div className=\"float-right mt-2\">\n              {props.waitingList && props.waitingList.length > 0 && (\n                <div className=\"flex flex-row items-center justify-end font-bold mb-2\">\n                  <BiExport className=\"text-2xl text-gray-500\" />\n                  <span className=\"text-gray-500\">Export as</span>\n                  <button\n                    className=\"px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200\"\n                    disabled={loading}\n                    onClick={() => {\n                      updateWaitingListToPrint();\n                      setGenerateReportModal({\n                        reportType: \"EXCEL\",\n                        status: true,\n                      });\n                    }}\n                  >\n                    EXCEL\n                  </button>\n                  <button\n                    className={`px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200 ${\n                      downloading && \"cursor-wait\"\n                    }`}\n                    onClick={() => FC_GeneratePDF()}\n                    disabled={loading || downloading}\n                  >\n                    PDF\n                  </button>\n                </div>\n              )}\n              <div\n                onClick={() => setSelectPosition(true)}\n                className=\"btn bg-blue-50 border border-blue-300 text-blue-600 cursor-pointer hover:bg-blue-100 flex flex-row items-center justify-center gap-2 text-sm \"\n              >\n                <BiFilterAlt className=\"text-xl\" />\n                Filter by position\n              </div>\n            </div>\n          </div>\n        </div>\n        {/* END REPORT TITLE ============================================ */}\n        <div className=\"bg-white my-4\">\n          <div className=\"w-full px-2 py-2\">\n            <input\n              onChange={(e) => setSearchInput(e.target.value)}\n              type=\"text\"\n              value={searchInput}\n              placeholder=\"Search...\"\n              className=\"w-full bg-gray-100 py-2 px-3 rounded focus:border-gray-800\"\n              disabled={\n                loadingWaitingList ||\n                FC_WaitingListData(props.waitingList, props.systemPositions) ===\n                  null\n              }\n            />\n          </div>\n          <table className=\"w-full shadow\" id=\"report_content\">\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n              <tr>\n                <td className=\"px-2 py-2\">#</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"names\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Applicant names <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">National ID</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"gender\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Gender <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">Phone</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"user_position_marks\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Marks <BiSort />\n                  </div>\n                </td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"education_category\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Institute <BiSort />\n                  </div>\n                </td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"waiting_status\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Status <BiSort />\n                  </div>\n                </td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"waitingList_session\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Session <BiSort />\n                  </div>\n                </td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"date\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Date <BiSort />\n                  </div>\n                </td>\n              </tr>\n            </thead>\n            <tbody>\n              {loadingWaitingList ? (\n                <TableLoading cols={10} />\n              ) : FC_WaitingListData(\n                  props.waitingList,\n                  props.systemPositions\n                ) === null ? (\n                <TableLoading cols={10} />\n              ) : FC_FilterWaitingList(\n                  FC_WaitingListData(props.waitingList, props.systemPositions)!,\n                  thisWaitingListStatus,\n                  thisPeriod,\n                  thisEducation\n                ).length === 0 ? (\n                <tr>\n                  <td colSpan={10} className=\"px-2 py-2\">\n                    <div className=\"flex flex-col text-gray-400 items-center justify-center bg-gray-100 rounded py-10\">\n                      <ImFilesEmpty className=\"text-8xl text-gray-400 mb-2 animate__animated animate__shakeX\" />\n                      <span className=\"text-sm font-bold\">\n                        No result found! Please try to search again\n                      </span>\n                      <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n                        <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                          <li\n                            onClick={() => setSelectPosition(true)}\n                            className=\"underline text-gray-500 cursor-pointer\"\n                          >\n                            Filter by position\n                          </li>\n                          <li className=\"text-gray-400 italic\">or</li>\n                          <li\n                            className=\"text-gray-500 underline\"\n                            onClick={() => setSelectPeriod(true)}\n                          >\n                            Filter by period\n                          </li>\n                        </ul>\n                      </div>\n                    </div>\n                  </td>\n                </tr>\n              ) : (\n                sortThisArray(\n                  isSorted,\n                  searchData(\n                    FC_FilterWaitingList(\n                      FC_WaitingListData(\n                        props.waitingList,\n                        props.systemPositions\n                      )!,\n                      thisWaitingListStatus,\n                      thisPeriod,\n                      thisEducation\n                    ),\n                    searchInput\n                  ),\n                  sortProperty,\n                  sortOrder\n                ).map((item, i) => (\n                  <tr\n                    key={i + 1}\n                    className={`${\n                      i % 2 !== 0 ? \"bg-gray-100\" : \"bg-white\"\n                    } text-gray-600 hover:bg-blue-100 hover:text-blue-700 cursor-pointer border-b border-gray-300 hover:border-blue-500 text-sm`}\n                  >\n                    <td className=\"px-2 py-2\">{i + 1}</td>\n                    <td className=\"px-2 py-2\">{item.names}</td>\n                    <td className=\"px-2 py-2\">{item.national_id}</td>\n                    <td className=\"px-2 py-2\">{item.gender}</td>\n                    <td className=\"px-2 py-2\">{item.phone}</td>\n                    <td className=\"px-2 py-2\">{item.user_position_marks}</td>\n                    <td className=\"px-2 py-2\">{item.education_category}</td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(item.waiting_status.toLowerCase())}\n                    </td>\n                    <td className=\"px-2 py-2\">{item.waitingList_session}</td>\n                    <td className=\"px-2 py-2\">{item.date}</td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </section>\n\n      {/* CHOOSING POSITION MODAL */}\n      {selectPosition && thisPeriod && (\n        <Modal\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              <IoFilter className=\"text-5xl text-blue-600\" />\n              <div className=\"flex flex-col\">\n                <span className=\"font-bold text-xl text-blue-600\">\n                  Filter by a position\n                </span>\n              </div>\n            </div>\n          }\n          backDrop={true}\n          theme={Themes.default}\n          close={() => thisPosition !== null && setSelectPosition(false)}\n          backDropClose={true}\n          widthSizeClass={ModalSize.extraLarge}\n          displayClose={true}\n          padding={{ title: true }}\n        >\n          <div className=\"px-2 pb-2\">\n            {props.systemPositions === null ? (\n              <LoadingV2 type={LoadingType.dark} />\n            ) : props.systemPositions.length === 0 ? (\n              <div className=\"flex flex-col text-gray-400 items-center justify-center\">\n                <MdSearch className=\"text-6xl\" />\n                <div className=\"flex flex-col items-center justify-center\">\n                  <span>No positions found! Please go back!</span>\n                  <button\n                    onClick={() => loadPosition()}\n                    className={`btn bg-yellow-100 text-yellow-700 my-4 hover:bg-yellow-200 ${\n                      loadingPosition && \"animate-pulse\"\n                    }`}\n                    disabled={loadingPosition}\n                  >\n                    {loadingPosition ? \"Loading...\" : \"Reload\"}\n                  </button>\n                </div>\n              </div>\n            ) : (\n              <>\n                <div className=\"flex flex-col\">\n                  <span className=\"text-gray-600 text-xs font-bold\">\n                    Filter by position name\n                  </span>\n                  <input\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                      setSearchPositionInput(e.target.value)\n                    }\n                    type=\"text\"\n                    className=\"mb-4 bg-gray-100 px-3 py-2 rounded\"\n                    placeholder=\"Keyword...\"\n                  />\n                </div>\n                {search(props.systemPositions, searchPositionInput).map(\n                  (item: PositionAPI, key: number) => (\n                    <div\n                      key={key + 1}\n                      onClick={() => {\n                        generateReportTitle(item.position_title);\n                        setThisPosition(item);\n                        loadWaitingList(item.position_id);\n                        setSelectPosition(false);\n                      }}\n                      className=\"bg-white cursor-pointer rounded  px-3 py-2 border border-gray-200 hover:border-blue-500 hover:bg-blue-100 mb-2\"\n                    >\n                      <div className=\"grid lg:grid-cols-12\">\n                        <div className=\"col-span-12 lg:col-span-10\">\n                          <div className=\"flex flex-row items-center gap-3\">\n                            <div>\n                              <IoIosBriefcase className=\"text-4xl md:text-5xl text-blue-600\" />\n                            </div>\n                            <div className=\"flex flex-col\">\n                              <span className=\"text-xs lg:text-sm font-bold text-gray-700\">\n                                {item.position_title}\n                              </span>\n                              <span className=\"text-xs text-gray-500 italic\">\n                                School level:{\" \"}\n                                <span\n                                  className=\"text-gray-800 font-light\"\n                                  style={{ fontStyle: \"normal\" }}\n                                >\n                                  {item.school_level_id.school_level_name}\n                                </span>\n                              </span>\n                              <span className=\"text-xs font-bold text-blue-600 bg-blue-100 w-max px-3 py-1 rounded-full\">\n                                {\n                                  item.education_institute_id\n                                    .education_category_title\n                                }\n                              </span>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-span-12 lg:col-span-2 hidden lg:block\">\n                          <div className=\"h-full flex items-center justify-end\">\n                            <div className=\"btn bg-blue-600 text-white float-right\">\n                              Choose\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  )\n                )}\n              </>\n            )}\n          </div>\n        </Modal>\n      )}\n      {/* END CHOOSING POSITION MODAL */}\n      {/* ####################################################################################### */}\n      {/* GENERATE DYNAMIC REPORT CONTENT MODAL */}\n      {generateReportModal !== null && generateReportModal.status === true && (\n        <Modal\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              {/* <IoBriefcase className=\"text-5xl text-gray-500\" /> */}\n              <div className=\"flex flex-col\">\n                <span className=\"font-bold text-2xl text-gray-500\">\n                  Generating Report contents\n                </span>\n                <span className=\"text-sm text-blue-600 font-normal\">\n                  Generating {generateReportModal.reportType} Report\n                </span>\n              </div>\n            </div>\n          }\n          backDrop={true}\n          theme={Themes.default}\n          close={() => setGenerateReportModal(null)}\n          backDropClose={false}\n          widthSizeClass={ModalSize.medium}\n          displayClose={true}\n          padding={{ title: true }}\n        >\n          <div className=\"px-6\">\n            <div className=\"my-2 text-base text-gray-700 sm:text-lg\">\n              <div className=\"flex flex-col\">\n                <label>Title</label>\n                <input\n                  type=\"text\"\n                  className={`text-left input-white w-20 inline-block ${\n                    formError && formError.element === \"report_title\"\n                      ? \"border-red-500\"\n                      : \"border-gray-500\"\n                  } border-2`}\n                  placeholder=\"Sub Category Title\"\n                  value={reportTitle}\n                  onChange={(e) => {\n                    setFormError(null);\n                    setReportTitle(e.target.value);\n                  }}\n                  disabled={loading}\n                />\n                {formError && formError.element === \"report_title\" && (\n                  <span className=\"text-red-500\">{formError.msg}</span>\n                )}\n              </div>\n              <div className=\"flex flex-col mt-2\">\n                <label>Report content</label>\n                <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                  {reportContent.map((item, index) => (\n                    <div\n                      key={index}\n                      className={`flex items-center gap-1 ${\n                        isChangeAllowed(item.key)\n                          ? \"cursor-pointer\"\n                          : \"cursor-not-allowed\"\n                      }`}\n                      onClick={() =>\n                        isChangeAllowed(item.key) &&\n                        updateReportContent(item.key)\n                      }\n                      title={\n                        !isChangeAllowed(item.key)\n                          ? \"Required for every report!\"\n                          : \"\"\n                      }\n                    >\n                      {item.status ? (\n                        <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                      ) : (\n                        <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                      )}\n                      <span>{item.title}</span>\n                    </div>\n                  ))}\n                </div>\n                {formError && formError.element === \"report_content\" && (\n                  <span className=\"text-red-500\">{formError.msg}</span>\n                )}\n              </div>\n            </div>\n            <div className=\"flex justify-between mb-2 mt-4\">\n              <div\n                className={`flex items-center gap-1 cursor-pointer`}\n                onClick={() => resetReportContent(selectAll)}\n              >\n                {selectAll ? (\n                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                ) : (\n                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                )}\n                <span>Select all</span>\n              </div>\n\n              {waitingListToPrint && !loading && (\n                <ExportToExcel\n                  fileData={waitingListToPrint}\n                  fileName={reportTitle}\n                  btnName=\"Generate\"\n                />\n              )}\n            </div>\n          </div>\n        </Modal>\n      )}\n      {/* END GENERATE DYNAMIC REPORT CONTENT MODAL */}\n      {/* ####################################################################################### */}\n      {/* CHOOSING PERIOD CONTENT MODAL */}\n      {selectPeriod && (\n        <Modal\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              <MdHistory className=\"text-5xl text-blue-600\" />\n              <span className=\"flex flex-col\">Choose a period</span>\n            </div>\n          }\n          backDrop={true}\n          theme={Themes.default}\n          close={() => thisPeriod !== null && setSelectPeriod(false)}\n          backDropClose={true}\n          widthSizeClass={ModalSize.extraLarge}\n          displayClose={true}\n          padding={{ title: true }}\n        >\n          <ChooseSession\n            allSession={props.application_sessions}\n            setSelectSession={(value: SessionPlanInterface | \"all\") => {\n              setThisPeriod(value);\n              setSelectPeriod(false);\n            }}\n            chooseAll={true}\n            currentSelected={thisPeriod}\n          />\n        </Modal>\n      )}\n      {/* END CHOOSING PERIOD CONTENT MODAL */}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  system_settings,\n  sessionPlan,\n  users,\n  schoolLevels,\n  waitingList,\n}: StoreState): {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  systemPositions: PositionAPI[] | null;\n  userList: UserInterface[];\n  schoolLevels: schoolLevelsStoreInterface;\n  waitingList: WaitingListInterface[] | null;\n} => {\n  return {\n    auth: auth,\n    application_sessions: sessionPlan.allSessionPlans,\n    systemPositions: system_settings.systemPositions,\n    userList: users,\n    schoolLevels,\n    waitingList,\n  };\n};\n\nexport const WaitingListReport = connect(mapStateToProps, {\n  getWaitingList,\n  GetAllSessionPlans,\n  loadEducationCategories,\n  fetchUserAccess,\n  getPositions,\n  PushPopupAlert,\n})(_WaitingListReport);\n"],"sourceRoot":""}
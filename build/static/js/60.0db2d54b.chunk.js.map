{"version":3,"sources":["containers/QuestionBank/QuestionSettings/QuestionSettingsCourses.tsx"],"names":["SettingsType","QuestionSettingsCourses","props","state","loading","settings","settingType","questionTypes","caption","courses","educationCategory","schoolLevels","selectedSetting","className","this","map","item","i","onClick","setState","Component"],"mappings":"6NAOKA,E,oGAAAA,K,8BAAAA,E,kBAAAA,E,sCAAAA,E,4BAAAA,E,qBAAAA,M,KAkBE,IAAMC,EAAb,kDAIE,WAAYC,GAA+B,IAAD,8BACxC,cAAMA,IAEDC,MAAQ,CACXC,SAAS,EACTC,SAAU,CACR,CACEC,YAAaN,EAAaO,cAC1BC,QAAS,kBAEX,CACEF,YAAaN,EAAaS,QAC1BD,QAAS,WAEX,CACEF,YAAaN,EAAaU,kBAC1BF,QAAS,wBAEX,CACEF,YAAaN,EAAaW,aAC1BH,QAAS,kBAGbI,gBAAiBZ,EAAaS,SAvBQ,EAJ5C,0CA8BE,WAAU,IAAD,OACP,OACE,sBAAKI,UAAU,GAAf,UACE,sBAAKA,UAAU,0DAAf,UACE,sBAAKA,UAAU,mCAAf,UACE,cAAC,IAAD,CAAsBA,UAAU,2BAChC,sBAAKA,UAAU,gBAAf,UACE,sBAAMA,UAAU,mCAAhB,6BAGA,sBAAMA,UAAU,wBAAhB,iDAKJ,qBAAKA,UAAU,qBAKjB,qBAAKA,UAAU,gBAAf,SACE,qBAAKA,UAAU,gBAAf,SACE,qBAAKA,UAAU,8BAAf,SACE,sBAAKA,UAAU,8CAAf,UACE,qBAAKA,UAAU,6BAAf,SACGC,KAAKX,MAAME,SAASU,KAAI,SAACC,EAAMC,GAAP,OACvB,qBACEC,QAAS,kBACP,EAAKC,SAAS,CAAEP,gBAAiBI,EAAKV,eAExCO,UAAS,4BACP,EAAKV,MAAMS,kBAAoBI,EAAKV,YAChC,4DACA,sCAHG,kIAJX,SAUGU,EAAKR,eAIZ,sBAAKK,UAAU,qBAAf,UACGC,KAAKX,MAAMS,kBACVZ,EAAaO,eAAiB,cAAC,IAAD,IAC/BO,KAAKX,MAAMS,kBACVZ,EAAaU,mBAAqB,cAAC,IAAD,IACnCI,KAAKX,MAAMS,kBAAoBZ,EAAaW,cAC3C,cAAC,IAAD,IAEDG,KAAKX,MAAMS,kBAAoBZ,EAAaS,SAC3C,cAAC,IAAD,uBA/EpB,GAA6CW","file":"static/js/60.0db2d54b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { RiFolderSettingsFill } from \"react-icons/ri\";\nimport Courses from \"./Courses/Courses\";\nimport EducationCategories from \"./EducationCategories/EducationCategories\";\nimport QuestionTypes from \"./QuestionTypes/QuestionTypes\";\nimport SchoolLevels from \"./SchoolLevels/SchoolLevels\";\n\nenum SettingsType {\n  questionTypes = \"questionTypes\",\n  courses = \"courses\",\n  educationCategory = \"educationCategory\",\n  schoolLevels = \"schoolLevels\",\n  chapters = \"chapters\",\n}\n\ninterface QuestionSettingsState {\n  loading: boolean;\n  settings: {\n    settingType: SettingsType;\n    caption: string;\n  }[];\n  selectedSetting: SettingsType | null;\n}\ninterface QuestionSettingsProps {}\n\nexport class QuestionSettingsCourses extends Component<\n  QuestionSettingsProps,\n  QuestionSettingsState\n> {\n  constructor(props: QuestionSettingsProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      settings: [\n        {\n          settingType: SettingsType.questionTypes,\n          caption: \"Question Types\",\n        },\n        {\n          settingType: SettingsType.courses,\n          caption: \"Courses\",\n        },\n        {\n          settingType: SettingsType.educationCategory,\n          caption: \"Education categories\",\n        },\n        {\n          settingType: SettingsType.schoolLevels,\n          caption: \"School levels\",\n        },\n      ],\n      selectedSetting: SettingsType.courses,\n    };\n  }\n  render() {\n    return (\n      <div className=\"\">\n        <div className=\"mt-3 rounded flex flex-row justify-between items-center\">\n          <div className=\"flex flex-row items-center gap-3\">\n            <RiFolderSettingsFill className=\"text-6xl text-blue-600\" />\n            <div className=\"flex flex-col\">\n              <span className=\"text-blue-600 text-2xl font-bold\">\n                List of courses\n              </span>\n              <span className=\"text-gray-600 text-sm\">\n                List of all available courses\n              </span>\n            </div>\n          </div>\n          <div className=\"flex flex-row\">\n            {/* <Link to=\"/method-add-question\" className={`btn bg-blue-100 hover:bg-white text-blue-700 border-2 border-white`}>Add questions</Link> */}\n            {/* <div className=\"btn bg-black bg-opacity-30 text-white border-2 border-white\">Change course</div> */}\n          </div>\n        </div>\n        <div className=\"mt-3 flex-col\">\n          <div className=\"flex flex-col\">\n            <div className=\"bg-white flex rounded mb-20\">\n              <div className=\"bg-white w-full border border-white rounded\">\n                <div className=\"flex flex-row items-center\">\n                  {this.state.settings.map((item, i) => (\n                    <div\n                      onClick={() =>\n                        this.setState({ selectedSetting: item.settingType })\n                      }\n                      className={`animate__animated ${\n                        this.state.selectedSetting === item.settingType\n                          ? \"bg-blue-100 border-blue-600 text-blue-600 animate__zoomIn\"\n                          : \"bg-white border-white text-gray-600\"\n                      } hover:bg-blue-100 px-4 py-2 cursor-pointer font-bold border-b-4 hover:border-blue-600 hover:text-blue-600 rounded-t mt-1 mx-1`}\n                    >\n                      {item.caption}\n                    </div>\n                  ))}\n                </div>\n                <div className=\"=rounded mx-1 mb-1\">\n                  {this.state.selectedSetting ===\n                    SettingsType.questionTypes && <QuestionTypes />}\n                  {this.state.selectedSetting ===\n                    SettingsType.educationCategory && <EducationCategories />}\n                  {this.state.selectedSetting === SettingsType.schoolLevels && (\n                    <SchoolLevels />\n                  )}\n                  {this.state.selectedSetting === SettingsType.courses && (\n                    <Courses />\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}
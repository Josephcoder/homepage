{"version":3,"sources":["components/UploadPostsRequests/UploadPostsRequests.tsx","containers/PlacementAlgorithm/Districts/Districts.tsx","components/ExcelExport/ExcelExport.tsx","components/ExcelExport/ExportCSV.tsx","containers/PlacementAlgorithm/PlacementReport/PlacementReport.tsx","containers/PlacementAlgorithm/Positions/Positions.tsx","components/RunPlacement/ResultPreview.tsx","assets/robot/robot2.gif","assets/robot/robotic-automation.png","assets/robot/robot1.gif","components/RunPlacement/RunPlacement.tsx","containers/PlacementAlgorithm/PostsRequests/PostsRequests.tsx","containers/PlacementAlgorithm/PlacementAlgorithm.tsx","actions/settings.ts"],"names":["UploadPostsRequests","props","submitPostsRequests","e","a","preventDefault","state","selected_file","setState","error","success","loading","formData","FormData","append","session","_id","axios","post","API","PLACEMENT","res","console","log","errorToText","className","onSubmit","this","session_plan_name","type","onChange","target","files","disabled","Alert","title","theme","AlertInterface","danger","description","Loading","onClick","closeWindow","Component","Districts","searchValue","placeholder","value","search","districts","length","colSpan","map","item","i","selectDistrict","district_code","selected_district_code","district_name","ExcelExport","TableDetails","data","index","rowFormat","tableHead","thead","ExportCSV","Heading","headerFormat","csvData","fileName","wscols","ws","utils","json_to_sheet","header","headers","skipHeader","sheet_add_json","origin","wb","Sheets","SheetNames","excelBuffer","write","bookType","Blob","FileSaver","saveAs","exportToCSV","buttonColor","buttonTitle","ExportExcelReport","placementReport","id","toString","names","fname","lname","phone_number","email","position","position_name","position_code","marks","gender","disability","in_education","requested_district","values","val","GetDistrictName","strict","district","sector","school_name","wch","Math","max","distr_desc","selectedDistrict","editSearchValue","selectedPosition","position_title","DATE","Date","parseInt","PlacementReport","view_all","GetPlacementReport","chooseDistrict","commaFy","Positions","positions","selectPosition","selected_position_code","placedCandidates","filter","itm","ResultPreview","algorithmResponse","search_value","RunPlacement","getTotalRequests","total","postRequests","totalRequestedTeacher","getTotalPlaced","RunAlgorithm","window","confirm","selected_position","count","count_district","setInterval","view_algorithm_response","selected_district","style","height","totalPlacedTeachers","src","ROBOT1","alt","ROBOT2","cancel","ROBOT_INFO","Modal","backDrop","Themes","default","close","backDropClose","widthSizeClass","ModalSize","maxWidth","displayClose","padding","body","PostsRequests","runAlgorithm","uploadPostsRequests","undefined","footer","GetDistrictsPostsRequests","_PlacementAlgorithm","find","get","posts_requests","GetDistrictPlacementReport","GetPositionPlacementReport","componentDidMount","FC_getLocations","locations","msg","auth","education_institution_id","FC_GetPositionsByInstitution","status","documentType","choosePosition","select_district_modal","application_session","large","medium","PlacementAlgorithm","connect","periods","url","AUTH","getSystemSettings","callback","dispatch","setAxiosToken","ActionTypes","GET_SYSTEM_SETTINGS","payload","code_error","disableSystemSetting","DISABLE_SYSTEM_SETTINGS","GetTaskAccess","response","task","key","permitted","GET_TASK_ACCESS","getPositions","APPLICATION","GET_POSTIONS","deletePosition","DELETE_POSITION","publishPosition","PUBLISH_POSITION","institution_id"],"mappings":"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","file":"static/js/35.367ee5f9.chunk.js","sourcesContent":["import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { ApplicationSession } from \"../../actions\";\nimport { DistrictPostsRequests } from \"../../containers/PlacementAlgorithm/PlacementAlgorithm\";\nimport { PositionAPI } from \"../../interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport Alert, { AlertInterface } from \"../Alert/Alert\";\nimport Loading from \"../Loading/Loading\";\n\ninterface UploadPostsRequestsProps {\n  session: ApplicationSession;\n  closeWindow: () => void;\n}\ninterface UploadPostsRequestsState {\n  loading: boolean;\n  error: string;\n  success: string;\n  selected_file: File | null;\n}\n\nexport class UploadPostsRequests extends Component<\n  UploadPostsRequestsProps,\n  UploadPostsRequestsState\n> {\n  constructor(props: UploadPostsRequestsProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      error: \"\",\n      success: \"\",\n      selected_file: null,\n    };\n  }\n  submitPostsRequests = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    // Validation\n    if (this.state.selected_file === null) {\n      return this.setState({\n        error: \"Please select excel file of posts requests\",\n        success: \"\",\n      });\n    }\n    this.setState({ error: \"\", success: \"\", loading: true });\n    try {\n      const formData = new FormData();\n      formData.append(\"positionSchoolRequest\", this.state.selected_file);\n      formData.append(\"academic_year\", this.props.session._id);\n      const res = await axios.post(`${API.PLACEMENT}/schoolrequest`, formData);\n      if (res) {\n        console.log(\"Res adding posts: \", res);\n        this.setState({\n          success: \"Posts requests added successfully!\",\n          error: \"\",\n          loading: false,\n        });\n      }\n    } catch (error: any) {\n      console.log(\"Err: \", { ...error });\n      this.setState({ error: errorToText(error), success: \"\", loading: false });\n    }\n  };\n  render() {\n    return (\n      <div className=\"p-3 md:p-8\">\n        <form onSubmit={this.submitPostsRequests} className=\"w-full\">\n          <div className=\"flex flex-col items-center justify-center gap-2\">\n            <div className=\"font-extrabold text-3xl\">Upload posts requests</div>\n            <div className=\"bg-blue-100 rounded-md px-3 text-lg font-bold text-blue-800\">\n              {this.props.session.session_plan_name}\n            </div>\n            <div>\n              <span>Select excel file</span>\n              <input\n                type=\"file\"\n                onChange={(e) => {\n                  if (e.target.files !== null) {\n                    this.setState({\n                      selected_file: e.target.files[0],\n                      error: \"\",\n                      success: \"\",\n                    });\n                  } else {\n                    this.setState({\n                      error: \"Failed to select a file!\",\n                      success: \"\",\n                    });\n                  }\n                }}\n                disabled={this.state.loading}\n                className={`px-3 py-2 rounded-md border-2 ${\n                  this.state.loading === true\n                    ? \"bg-gray-100 border-gray-200\"\n                    : \"border-gray-700\"\n                } w-full`}\n              />\n            </div>\n            {/* Error message */}\n            {this.state.error !== \"\" && (\n              <div className=\"my-4 mb-0 w-full\">\n                <Alert\n                  title=\"Action failed!\"\n                  theme={AlertInterface.danger}\n                  description={this.state.error}\n                />\n              </div>\n            )}\n            {/* Success message */}\n            {this.state.success !== \"\" && (\n              <div className=\"my-4 mb-0 w-full\">\n                <Alert\n                  title=\"Action done successfully!\"\n                  theme={AlertInterface.success}\n                  description={this.state.success}\n                />\n              </div>\n            )}\n            {this.state.loading === true ? (\n              <div className=\"w-full mt-2 border rounded-xl p-3\">\n                <Loading />\n                <div className=\"-mt-10 ml-4 font-extrabold animate-pulse\">\n                  Loading, please wait...\n                </div>\n              </div>\n            ) : (\n              <div className=\"flex flex-row items-center justify-center gap-2 mt-4\">\n                <div\n                  onClick={() => this.props.closeWindow()}\n                  className=\"btn bg-gray-500 font-bold w-max rounded px-3 py-2 cursor-pointer hover:bg-gray-700 text-white\"\n                >\n                  Close window\n                </div>\n\n                <button\n                  type=\"submit\"\n                  className=\"btn bg-blue-600 font-bold w-max rounded px-3 py-2 cursor-pointer hover:bg-blue-800 text-white\"\n                >\n                  Upload posts requests\n                </button>\n              </div>\n            )}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default UploadPostsRequests;\n","import React, { Component } from \"react\";\nimport { DistrictLocationItem, LocationAPI } from \"../../../actions\";\nimport { search } from \"../../../utils/functions\";\n\ninterface DistrictsProps {\n  districts: LocationAPI;\n  selected_district_code: string;\n  selectDistrict: (district_code: string) => void;\n}\ninterface DistrictsState {\n  loading: boolean;\n  searchValue: string;\n}\n\nexport class Districts extends Component<DistrictsProps, DistrictsState> {\n  constructor(props: DistrictsProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      searchValue: \"\",\n    };\n  }\n  render() {\n    return (\n      <div className=\"bg-white\">\n        <div className=\"my-3\">\n          <input\n            placeholder=\"Search by district name\"\n            type=\"text\"\n            value={this.state.searchValue}\n            onChange={(e) => this.setState({ searchValue: e.target.value })}\n            className=\"px-3 py-2 rounded border border-gray-400 w-full\"\n          />\n        </div>\n        <div>\n          <table className=\"w-full text-left text-sm\">\n            <thead>\n              <tr className=\"bg-blue-600 text-white\">\n                <th className=\"px-3 py-2\">#</th>\n                <th className=\"px-3 py-2\">Code</th>\n                <th className=\"px-3 py-2\">District name</th>\n                <th className=\"px-3 py-2\"></th>\n              </tr>\n            </thead>\n            <tbody>\n              {search(this.props.districts.districts, this.state.searchValue)\n                .length === 0 ? (\n                <tr>\n                  <td\n                    colSpan={4}\n                    className=\"py-6 text-center font-extralight text-2xl\"\n                  >\n                    No result found!\n                  </td>\n                </tr>\n              ) : (\n                (\n                  search(\n                    this.props.districts.districts,\n                    this.state.searchValue\n                  ) as DistrictLocationItem[]\n                ).map((item, i) => (\n                  <tr\n                    onClick={() =>\n                      this.props.selectDistrict(item.district_code)\n                    }\n                    className={`group ${\n                      item.district_code === this.props.selected_district_code\n                        ? \"bg-blue-100 font-bold text-blue-600\"\n                        : i % 2 !== 0\n                        ? \"bg-gray-100\"\n                        : \"bg-white\"\n                    } hover:bg-blue-100 hover:text-blue-600 cursor-pointer`}\n                  >\n                    <td className=\"px-3 py-2\">{i + 1}</td>\n                    <td className=\"px-3 py-2\">{item.district_code}</td>\n                    <td className=\"px-3 py-2\">{item.district_name}</td>\n                    <td className=\"p-1 flex flex-row items-center justify-end\">\n                      {item.district_code !==\n                        this.props.selected_district_code && (\n                        <div className=\"cursor-pointer rounded bg-blue-100 group-hover:bg-blue-600 group-hover:text-white px-2 py-1\">\n                          Choose\n                        </div>\n                      )}\n                    </td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Districts;\n","import React from \"react\";\n\n// 3. create customers table component\ninterface TableProps {\n  thead: React.DetailedHTMLProps<\n    React.HTMLAttributes<HTMLTableSectionElement>,\n    HTMLTableSectionElement\n  >;\n  rowFormat: (item: any, index: number) => JSX.Element;\n  data: any[];\n  tableHead?: JSX.Element;\n}\nconst ExcelExport = (props: TableProps) => {\n  const TableDetails = props.data.map((item, index) =>\n    props.rowFormat(item, index)\n  );\n\n  return (\n    <div>\n      {props.tableHead}\n      <table className=\"w-full text-left mt-3 text-sm animate__animated animate__fadeIn\">\n        {props.thead}\n        <tbody>{TableDetails}</tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default ExcelExport;\n","import React from \"react\";\nimport FileSaver from \"file-saver\";\nimport { ColInfo, utils, write } from \"xlsx\";\nimport { RiFileExcel2Fill } from \"react-icons/ri\";\n\ninterface FileInterfaceProps {\n  headers: string[];\n  csvData: any[];\n  fileName: string;\n  wscols: ColInfo[] | undefined;\n  headerFormat: any;\n  buttonTitle: string;\n  buttonColor: \"blue\" | \"green\";\n}\n\nconst ExportCSV = (props: FileInterfaceProps) => {\n  // ******** XLSX with object key as header *************\n  // const fileType =\n  //   \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n  // const fileExtension = \".xlsx\";\n\n  // const exportToCSV = (csvData, fileName) => {\n  //   const ws = XLSX.utils.json_to_sheet(csvData);\n  //   const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n  //   const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n  //   const data = new Blob([excelBuffer], { type: fileType });\n  //   FileSaver.saveAs(data, fileName + fileExtension);\n  // };\n\n  // ******** XLSX with new header *************\n  const fileType =\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n  const fileExtension = \".xlsx\";\n\n  const Heading = [props.headerFormat];\n\n  const exportToCSV = (\n    csvData: any[],\n    fileName: string,\n    wscols: ColInfo[] | undefined\n  ) => {\n    const ws = utils.json_to_sheet(Heading, {\n      header: props.headers,\n      skipHeader: true,\n    });\n    ws[\"!cols\"] = wscols;\n    utils.sheet_add_json(ws, csvData, {\n      header: props.headers,\n      skipHeader: true,\n      origin: -1, //ok\n    });\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = write(wb, { bookType: \"xlsx\", type: \"array\" });\n    const data = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n\n  return (\n    <div\n      onClick={(e) => exportToCSV(props.csvData, props.fileName, props.wscols)}\n      className={`flex flex-row items-center gap-2 w-max bg-${props.buttonColor}-600 hover:bg-${props.buttonColor}-800 text-white rounded cursor-pointer px-3 py-2 animate__animated animate__zoomIn`}\n    >\n      <div>\n        <RiFileExcel2Fill className=\"text-2xl\" />\n      </div>\n      <span>{props.buttonTitle}</span>\n    </div>\n  );\n};\n\nexport default ExportCSV;\n\n// This component is a presentational component which takes the data to download and file name as props. The exportToCSV method is invoked when the export button is clicked on line 20.\n","import React, { Component } from \"react\";\nimport { MdAssignmentTurnedIn, MdInfoOutline } from \"react-icons/md\";\nimport { RiFileExcel2Fill } from \"react-icons/ri\";\nimport { DistrictLocationItem } from \"../../../actions\";\nimport ExcelExport from \"../../../components/ExcelExport/ExcelExport\";\nimport ExportCSV from \"../../../components/ExcelExport/ExportCSV\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { PositionAPI } from \"../../../interfaces\";\nimport { commaFy, DATE, search } from \"../../../utils/functions\";\nimport { PlacementReportInterface } from \"../PlacementAlgorithm\";\n\ninterface PlacementReportProps {\n  selectedDistrict: DistrictLocationItem | null;\n  selectedPosition: PositionAPI;\n  chooseDistrict: () => void;\n  placementReport: PlacementReportInterface[] | null;\n  GetPlacementReport: (position_code: string, district_code: string) => void;\n  GetDistrictName: (district_code: string) => string;\n  view_all: boolean;\n}\ninterface PlacementReportState {\n  loading: boolean;\n  searchValue: string;\n}\n\ninterface ExportExcelReportProps {\n  placementReport: PlacementReportInterface[];\n  GetDistrictName: (district_code: string) => string;\n  selectedDistrict: DistrictLocationItem | null;\n  selectedPosition: PositionAPI;\n  searchValue: string;\n  editSearchValue: (value: string) => void;\n}\n\nconst ExportExcelReport = (props: ExportExcelReportProps): JSX.Element => {\n  const data = (\n    search(\n      props.placementReport,\n      props.searchValue\n    ) as PlacementReportInterface[]\n  ).map((item, i) => ({\n    id: (i + 1).toString(),\n    names: `${item.fname} ${item.lname}`,\n    phone_number: item.phone_number,\n    email: item.email,\n    position: `${item.position_name}(${item.position_code})`,\n    marks: `${item.marks}`,\n    gender: item.gender,\n    disability: item.disability === true ? \"Yes\" : \"No\",\n    in_education: item.in_education === true ? \"Yes\" : \"No\",\n    requested_district: `${\n      item.requested_district.values.length === 0\n        ? \"All districts\"\n        : item.requested_district.values.map(\n            (val) =>\n              ` ${props.GetDistrictName(val.toString())}${\n                item.requested_district.values.length > 0 &&\n                item.requested_district.values[\n                  item.requested_district.values.length - 1\n                ] === val\n                  ? item.requested_district.strict === false\n                    ? \" and other districts\"\n                    : \"\"\n                  : \"\"\n              }`\n          )\n    }`,\n    district: props.GetDistrictName(item.district_code.toString()),\n    sector: item.sector,\n    school_name: item.school_name,\n  }));\n\n  const wscols = [\n    { wch: Math.max(...data.map((item) => item.id.length)) },\n    { wch: Math.max(...data.map((item) => item.names.length)) },\n    { wch: Math.max(...data.map((item) => item.phone_number.length)) },\n    { wch: Math.max(...data.map((item) => item.email.length)) },\n    { wch: Math.max(...data.map((item) => item.position.length)) },\n    { wch: Math.max(...data.map((item) => item.marks.length)) },\n    { wch: Math.max(...data.map((item) => item.gender.length)) },\n    { wch: Math.max(...data.map((item) => item.disability.length)) },\n    { wch: Math.max(...data.map((item) => item.in_education.length)) },\n    { wch: Math.max(...data.map((item) => item.requested_district.length)) },\n    { wch: Math.max(...data.map((item) => item.district.length)) },\n    { wch: Math.max(...data.map((item) => item.sector.length)) },\n    { wch: Math.max(...data.map((item) => item.school_name.length)) },\n  ];\n\n  const headers = [\n    { label: \"#\", key: \"id\" },\n    { label: \"Names\", key: \"Names\" },\n    { label: \"Phone number\", key: \"Phone_number\" },\n    { label: \"Email\", key: \"Email\" },\n    { label: \"Position\", key: \"Position\" },\n    { label: \"Marks\", key: \"Marks\" },\n    { label: \"Gender\", key: \"Gender\" },\n    { label: \"Disability\", key: \"Disability\" },\n    { label: \"In Education\", key: \"In_Education\" },\n    { label: \"Preferences\", key: \"Preferences\" },\n    { label: \"Placed District\", key: \"Placed_District\" },\n    { label: \"Placed Sector\", key: \"Placed_Sector\" },\n    { label: \"Placed School\", key: \"Placed_School\" },\n  ];\n\n  const distr_desc = `${\n    props.selectedDistrict === null ? \"\" : props.selectedDistrict.district_name\n  }${props.selectedDistrict !== null ? \"(\" : \"\"}${\n    props.selectedDistrict === null ? \"\" : props.selectedDistrict?.district_code\n  }${props.selectedDistrict !== null ? \")\" : \"\"} ${\n    props.selectedDistrict === null ? \"\" : \"- \"\n  }`;\n\n  return (\n    <div>\n      {/* Filter */}\n      <div className=\"mt-2 flex flex-row items-center gap-2 w-full\">\n        <input\n          placeholder=\"Search by teacher name or school name\"\n          type=\"text\"\n          value={props.searchValue}\n          onChange={(e) => props.editSearchValue(e.target.value)}\n          className=\"px-3 py-2 rounded border border-gray-400 w-full\"\n        />\n        {\n          <select className=\"px-3 py-2 rounded border border-gray-400\">\n            <option value=\"\">Choose district</option>\n          </select>\n        }\n        <div>\n          <ExportCSV\n            csvData={data}\n            fileName={`${props.selectedDistrict !== null ? distr_desc : \"\"}${\n              props.selectedPosition.position_title\n            }${props.selectedDistrict !== null ? \"(\" : \"\"}${\n              props.selectedPosition.position_code\n            }${\n              props.selectedDistrict !== null ? \")\" : \"\"\n            } TRS Placement Report on ${DATE(new Date().toString())}`}\n            wscols={wscols}\n            headers={[\n              \"id\",\n              \"names\",\n              \"phone_number\",\n              \"email\",\n              \"position\",\n              \"marks\",\n              \"gender\",\n              \"disability\",\n              \"in_education\",\n              \"requested_district\",\n              \"district\",\n              \"sector\",\n              \"school_name\",\n            ]}\n            headerFormat={{\n              id: \"#\",\n              names: \"Names\",\n              phone_number: \"Phone number\",\n              email: \"Email\",\n              position: \"Position\",\n              marks: \"Marks\",\n              gender: \"Gender\",\n              disability: \"Disability\",\n              in_education: \"In Education\",\n              requested_district: \"Preferences\",\n              district: \"Placed District\",\n              sector: \"Placed Sector\",\n              school_name: \"Placed School\",\n            }}\n            buttonTitle={\"Export Excel\"}\n            buttonColor={\"blue\"}\n          />\n        </div>\n      </div>\n      <div className=\"w-full overflow-x-auto\">\n        {/* TABLE DATA */}\n        <ExcelExport\n          thead={\n            <thead className=\"bg-blue-50 text-sm font-bold\">\n              <tr>\n                <th className=\"px-2 py-2 border border-blue-300\">#</th>\n                <th className=\"px-2 py-2 border border-blue-300\">Names</th>\n                <th className=\"px-2 py-2 border border-blue-300\">\n                  Phone number\n                </th>\n                <th className=\"px-2 py-2 border border-blue-300\">Email</th>\n                <th className=\"px-2 py-2 border border-blue-300\">Position</th>\n                <th className=\"px-2 py-2 border border-blue-300\">Marks</th>\n                <th className=\"px-2 py-2 border border-blue-300\">Gender</th>\n                <th className=\"px-2 py-2 border border-blue-300\">Disability</th>\n                <th className=\"px-2 py-2 border border-blue-300\">\n                  In Education\n                </th>\n                <th className=\"px-2 py-2 border border-blue-300\">\n                  Preferences\n                </th>\n                <th className=\"px-2 py-2 border border-blue-300\">\n                  Placed District\n                </th>\n                <th className=\"px-2 py-2 border border-blue-300\">\n                  Placed Sector\n                </th>\n                <th className=\"px-2 py-2 border border-blue-300\">\n                  Placed School\n                </th>\n              </tr>\n            </thead>\n          }\n          rowFormat={(item: {\n            id: string;\n            names: string;\n            phone_number: string;\n            email: string;\n            position: string;\n            marks: string;\n            gender: string;\n            disability: string;\n            in_education: string;\n            requested_district: string;\n            district: string;\n            sector: string;\n            school_name: string;\n          }): JSX.Element => {\n            return (\n              <tr\n                key={item.id}\n                className={`${\n                  parseInt(item.id) % 2 === 0 ? \"bg-gray-100\" : \"\"\n                } hover:bg-blue-100 hover:text-blue-700 group`}\n              >\n                <td className=\"px-2 py-2 border border-gray-300 group-hover:border-blue-400\">\n                  {item.id}\n                </td>\n                <td className=\"px-2 py-2 border border-gray-300 group-hover:border-blue-400\">\n                  <div className=\"w-48\">{item.names}</div>\n                </td>\n                <td className=\"px-2 py-2 border border-gray-300 group-hover:border-blue-400\">\n                  <div className=\"w-24\">{item.phone_number}</div>\n                </td>\n                <td className=\"px-2 py-2 border border-gray-300 group-hover:border-blue-400\">\n                  {item.email}\n                </td>\n                <td className=\"px-2 py-2 border border-gray-300 group-hover:border-blue-400\">\n                  {item.position})\n                </td>\n                <td className=\"px-2 py-2 border border-gray-300 group-hover:border-blue-400\">\n                  {item.marks}\n                </td>\n                <td className=\"px-2 py-2 border border-gray-300 group-hover:border-blue-400\">\n                  {item.gender}\n                </td>\n                <td className=\"px-2 py-2 border border-gray-300 group-hover:border-blue-400\">\n                  {item.disability}\n                </td>\n                <td className=\"px-2 py-2 border border-gray-300 group-hover:border-blue-400\">\n                  {item.in_education}\n                </td>\n                <td className=\"px-2 py-2 border border-gray-300 group-hover:border-blue-400\">\n                  <div className=\"w-48\">{item.requested_district}</div>\n                </td>\n                <td className=\"px-2 py-2 border border-gray-300 group-hover:border-blue-400\">\n                  {item.district}\n                </td>\n                <td className=\"px-2 py-2 border border-gray-300 group-hover:border-blue-400\">\n                  {item.sector}\n                </td>\n                <td className=\"px-2 py-2 border border-gray-300 group-hover:border-blue-400\">\n                  <div className=\"truncate\">{item.school_name}</div>\n                </td>\n              </tr>\n            );\n          }}\n          data={data}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport class PlacementReport extends Component<\n  PlacementReportProps,\n  PlacementReportState\n> {\n  constructor(props: PlacementReportProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      searchValue: \"\",\n    };\n  }\n  render() {\n    if (this.props.selectedDistrict === null) {\n      if (this.props.view_all === true && this.props.placementReport === null) {\n        return (\n          <div className=\"bg-white rounded p-4 flex flex-col items-center justify-center gap-3\">\n            <div>\n              <MdInfoOutline className=\"text-7xl\" />\n            </div>\n\n            <div className=\"text-center text-xl font-light\">\n              No report found, please click the button to reload data\n            </div>\n            <div className=\"mt-4 flex flex-row items-center justify-center gap-3 w-full\">\n              {this.props.selectedPosition.position_code === null ? (\n                \"Position not selected!\"\n              ) : (\n                <div\n                  onClick={() =>\n                    this.props.GetPlacementReport(\n                      this.props.selectedPosition.position_code!,\n                      \"\"\n                    )\n                  } //Replace here\n                  className=\"btn bg-blue-500 text-white cursor-pointer hover:bg-blue-700\"\n                >\n                  Load position report\n                </div>\n              )}\n            </div>\n          </div>\n        );\n      }\n      if (this.props.view_all === false) {\n        return (\n          <div className=\"bg-white rounded p-4 flex flex-col items-center justify-center gap-3\">\n            <div>\n              <MdInfoOutline className=\"text-7xl\" />\n            </div>\n\n            <div className=\"text-center text-xl font-light\">\n              No district select, please you are required to choose district\n            </div>\n            <div className=\"mt-4 flex flex-row items-center justify-center gap-3 w-full\">\n              <div\n                onClick={() => this.props.chooseDistrict()}\n                className=\"btn bg-blue-100 text-blue-600 cursor-pointer hover:bg-blue-700 hover:text-white\"\n              >\n                Choose a district\n              </div>\n              {this.props.selectedPosition.position_code !== null && (\n                <div\n                  onClick={() =>\n                    this.props.GetPlacementReport(\n                      this.props.selectedPosition.position_code!,\n                      \"\"\n                    )\n                  }\n                  className=\"btn bg-blue-500 text-white cursor-pointer hover:bg-blue-700\"\n                >\n                  Report by position\n                </div>\n              )}\n            </div>\n          </div>\n        );\n      }\n    }\n    if (this.props.placementReport === null) {\n      return (\n        <div className=\"bg-white rounded p-4 pt-10 mt-5\">\n          <Loading />\n          <div className=\"ml-4 -mt-5 text-xl font-light\">\n            Loading, please wait...\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"bg-white p-3\">\n        <div className=\"flex flex-row items-center gap-4 justify-between\">\n          <div className=\"\">\n            <div className=\"flex flex-row items-center gap-2 text-black\">\n              <div>\n                <MdAssignmentTurnedIn className=\"text-5xl animate__animated animate__zoomIn\" />\n              </div>\n              <div>\n                <div className=\"text-2xl font-bold flex flex-row items-center gap-3\">\n                  <span>Placement report</span>\n                  <div className=\"rounded-full bg-blue-600 text-white font-extrabold text-xl px-2\">\n                    {commaFy(this.props.placementReport.length)} teachers\n                  </div>\n                </div>\n                <div className=\"text-sm font-light text-black\">\n                  This the placement report, it is generated on the district\n                  level. choose a district where you want the report\n                </div>\n                <div className=\"flex flex-row items-center gap-2 mt-1\">\n                  <div className=\"bg-blue-100 rounded-full px-2 text-sm text-blue-800\">\n                    Position: {this.props.selectedPosition.position_title}\n                  </div>\n                  {this.props.selectedDistrict !== null && (\n                    <div className=\"bg-blue-100 rounded-full px-2 text-sm text-blue-800\">\n                      District: {this.props.selectedDistrict?.district_name}\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n          <div>\n            <div className=\"font-normal text-sm\">\n              Position: {this.props.selectedPosition.position_title}\n            </div>\n            <div className=\"font-normal text-sm\">\n              District: {this.props.selectedDistrict?.district_name}\n            </div>\n            <div\n              className=\"px-2 py-1 text-blue-700 border-2 border-blue-600 rounded bg-blue-100 hover:bg-blue-600 hover:text-white w-max cursor-pointer\"\n              onClick={() => this.props.chooseDistrict()}\n            >\n              {this.props.selectedDistrict === null\n                ? \"Choose\"\n                : `${this.props.selectedDistrict.district_name} - Change`}{\" \"}\n              district\n            </div>\n          </div>\n        </div>\n        {/* table data */}\n        {\n          <ExportExcelReport\n            placementReport={this.props.placementReport}\n            GetDistrictName={this.props.GetDistrictName}\n            selectedDistrict={this.props.selectedDistrict}\n            selectedPosition={this.props.selectedPosition}\n            searchValue={this.state.searchValue}\n            editSearchValue={(value: string) => {\n              this.setState({ searchValue: value });\n            }}\n          />\n        }\n      </div>\n    );\n  }\n}\n\nexport default PlacementReport;\n","import React, { Component } from \"react\";\nimport { PositionAPI } from \"../../../interfaces\";\nimport { search } from \"../../../utils/functions\";\n\ninterface PositionsProps {\n  positions: PositionAPI[];\n  selectPosition: (position: PositionAPI) => void;\n  selected_position_code: string;\n}\ninterface PositionsState {\n  loading: boolean;\n  searchValue: string;\n}\n\nexport class Positions extends Component<PositionsProps, PositionsState> {\n  constructor(props: PositionsProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      searchValue: \"\",\n    };\n  }\n  render() {\n    return (\n      <div className=\"-mt-5\">\n        <div className=\"flex flex-col\">\n          <span>Search by position name</span>\n          <input\n            type=\"text\"\n            value={this.state.searchValue}\n            onChange={(e) => {\n              this.setState({ searchValue: e.target.value });\n            }}\n            className=\"px-3 py-2 rounded border-2 border-blue-600 w-full\"\n          />\n        </div>\n        <div>\n          <table className=\"w-full text-left mt-2\">\n            <thead className=\"bg-blue-50\">\n              <tr>\n                <th className=\"px-3 py-2\">#</th>\n                <th className=\"px-3 py-2\">Code</th>\n                <th className=\"px-3 py-2\">Name</th>\n                <th className=\"px-3 py-2\"></th>\n              </tr>\n            </thead>\n            <tbody>\n              {search(this.props.positions, this.state.searchValue).length ===\n              0 ? (\n                <tr>\n                  <td\n                    colSpan={4}\n                    className=\"text-xl font-light text-center py-5\"\n                  >\n                    No result found!\n                  </td>\n                </tr>\n              ) : (\n                (\n                  search(\n                    this.props.positions,\n                    this.state.searchValue\n                  ) as PositionAPI[]\n                ).map((item, i) => (\n                  <tr\n                    key={i + 1}\n                    onClick={() => this.props.selectPosition(item)}\n                    className={`${\n                      this.props.selected_position_code === item.position_code\n                        ? \"bg-blue-200 font-bold text-blue-700\"\n                        : i % 2 !== 0\n                        ? \"bg-gray-100\"\n                        : \"bg-white\"\n                    } group hover:text-blue-800 hover:bg-blue-100 cursor-pointer`}\n                  >\n                    <td className=\"px-3 py-2\">{i + 1}</td>\n                    <td className=\"px-3 py-2\">{item.position_code}</td>\n                    <td className=\"px-3 py-2\">{item.position_title}</td>\n                    <td className=\"flex flex-row items-center justify-end py-2 px-1\">\n                      {this.props.selected_position_code !==\n                        item.position_code && (\n                        <div className=\"rounded px-2 py-1 text-base font-light bg-blue-100 text-black group-hover:bg-blue-600 group-hover:text-white cursor-pointer\">\n                          Choose\n                        </div>\n                      )}\n                    </td>\n                  </tr>\n                ))\n              )}\n              <tr></tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Positions;\n","import React, { Component } from \"react\";\nimport { MdCheckCircleOutline } from \"react-icons/md\";\nimport { commaFy, DATE, search } from \"../../utils/functions\";\nimport ExcelExport from \"../ExcelExport/ExcelExport\";\nimport ExportCSV from \"../ExcelExport/ExportCSV\";\nimport { AlgorithmResponse, AlgorithmResponsePlaced } from \"./RunPlacement\";\n\ninterface ResultPreviewProps {\n  GetDistrictName: (district_code: string) => string;\n  algorithmResponse: AlgorithmResponse | null;\n  selected_district_code: string;\n}\ninterface ResultPreviewState {\n  loading: boolean;\n  searchValue: string;\n}\n\ninterface ExportExcelReportProps {\n  placementReport: AlgorithmResponse;\n  GetDistrictName: (district_code: string) => string;\n  searchValue: string;\n  editSearchValue: (value: string) => void;\n  selected_district_code: string;\n}\n\nconst ExportExcelReport = (props: ExportExcelReportProps): JSX.Element => {\n  const data = (\n    search(\n      props.placementReport.placedCandidates.filter(\n        (itm) =>\n          props.selected_district_code === \"\" ||\n          itm.district_code === props.selected_district_code\n      ),\n      props.searchValue\n    ) as AlgorithmResponsePlaced[]\n  ).map((item: AlgorithmResponsePlaced, i: number) => ({\n    id: (i + 1).toString(),\n    names: `${item.fname} ${item.lname}`,\n    phone_number: item.phone_number,\n    email: item.email,\n    position: `${item.position_name}(${item.position_code})`,\n    marks: `${item.marks}`,\n    gender: item.gender,\n    disability: item.disability === true ? \"Yes\" : \"No\",\n    in_education: item.in_education === true ? \"Yes\" : \"No\",\n    requested_district: `${\n      item.requested_district.values.length === 0\n        ? \"All districts\"\n        : item.requested_district.values.map(\n            (val) =>\n              ` ${props.GetDistrictName(val.toString())}${\n                item.requested_district.values.length > 0 &&\n                item.requested_district.values[\n                  item.requested_district.values.length - 1\n                ] === val\n                  ? item.requested_district.strict === false\n                    ? \" and other districts\"\n                    : \"\"\n                  : \"\"\n              }`\n          )\n    }`,\n    district: props.GetDistrictName(item.district_code.toString()),\n    sector: item.sector,\n    school_name: item.school_name,\n  }));\n\n  const wscols = [\n    { wch: Math.max(...data.map((item) => item.id.length)) },\n    { wch: Math.max(...data.map((item) => item.names.length)) },\n    { wch: Math.max(...data.map((item) => item.phone_number.length)) },\n    { wch: Math.max(...data.map((item) => item.email.length)) },\n    { wch: Math.max(...data.map((item) => item.position.length)) },\n    { wch: Math.max(...data.map((item) => item.marks.length)) },\n    { wch: Math.max(...data.map((item) => item.gender.length)) },\n    { wch: Math.max(...data.map((item) => item.disability.length)) },\n    { wch: Math.max(...data.map((item) => item.in_education.length)) },\n    { wch: Math.max(...data.map((item) => item.requested_district.length)) },\n    { wch: Math.max(...data.map((item) => item.district.length)) },\n    { wch: Math.max(...data.map((item) => item.sector.length)) },\n    { wch: Math.max(...data.map((item) => item.school_name.length)) },\n  ];\n\n  const headers = [\n    { label: \"#\", key: \"id\" },\n    { label: \"Names\", key: \"Names\" },\n    { label: \"Phone number\", key: \"Phone_number\" },\n    { label: \"Email\", key: \"Email\" },\n    { label: \"Position\", key: \"Position\" },\n    { label: \"Marks\", key: \"Marks\" },\n    { label: \"Gender\", key: \"Gender\" },\n    { label: \"Disability\", key: \"Disability\" },\n    { label: \"In Education\", key: \"In_Education\" },\n    { label: \"Preferences\", key: \"Preferences\" },\n    { label: \"Placed District\", key: \"Placed_District\" },\n    { label: \"Placed Sector\", key: \"Placed_Sector\" },\n    { label: \"Placed School\", key: \"Placed_School\" },\n  ];\n\n  return (\n    <div>\n      {/* Filter */}\n      <div className=\"mt-2 flex flex-row items-center gap-2 w-full\">\n        <div className=\"flex flex-row items-center gap-2 text-green-600\">\n          <div>\n            <MdCheckCircleOutline className=\"text-6xl\" />\n          </div>\n          <div className=\"flex flex-col w-36\">\n            <span className=\"text-base font-light\">Total placed</span>\n            <span className=\"text-2xl font-extrabold\">\n              {commaFy(\n                props.placementReport.placedCandidates.filter(\n                  (itm) =>\n                    props.selected_district_code === \"\" ||\n                    itm.district_code === props.selected_district_code\n                ).length\n              )}\n            </span>\n          </div>\n        </div>\n        <input\n          placeholder=\"Search by teacher name or school name\"\n          type=\"text\"\n          value={props.searchValue}\n          onChange={(e) => props.editSearchValue(e.target.value)}\n          className=\"px-3 py-2 rounded border border-gray-400 w-full\"\n        />\n        {/* {\n          <select className=\"px-3 py-2 rounded border border-gray-400\">\n            <option value=\"\">Choose district</option>\n          </select>\n        } */}\n        <div>\n          <ExportCSV\n            csvData={data}\n            fileName={`${\n              props.selected_district_code !== \"\"\n                ? props.GetDistrictName(props.selected_district_code) +\n                  \" district - \"\n                : \"\"\n            }${props.placementReport.placedCandidates[0].position_name} (${\n              props.placementReport.placedCandidates[0].position_code\n            }) - TRS Placement Report preview on ${DATE(\n              new Date().toString()\n            )}`}\n            wscols={wscols}\n            headers={[\n              \"id\",\n              \"names\",\n              \"phone_number\",\n              \"email\",\n              \"position\",\n              \"marks\",\n              \"gender\",\n              \"disability\",\n              \"in_education\",\n              \"requested_district\",\n              \"district\",\n              \"sector\",\n              \"school_name\",\n            ]}\n            headerFormat={{\n              id: \"#\",\n              names: \"Names\",\n              phone_number: \"Phone number\",\n              email: \"Email\",\n              position: \"Position\",\n              marks: \"Marks\",\n              gender: \"Gender\",\n              disability: \"Disability\",\n              in_education: \"In Education\",\n              requested_district: \"Preferences\",\n              district: \"Placed District\",\n              sector: \"Placed Sector\",\n              school_name: \"Placed School\",\n            }}\n            buttonTitle={\"Export Excel\"}\n            buttonColor={\"blue\"}\n          />\n        </div>\n      </div>\n      <div className=\"w-full overflow-x-auto\">\n        {/* TABLE DATA */}\n        <ExcelExport\n          thead={\n            <thead className=\"bg-blue-50 text-sm font-bold\">\n              <tr>\n                <th className=\"px-2 py-2 border border-blue-300\">#</th>\n                <th className=\"px-2 py-2 border border-blue-300\">Names</th>\n                <th className=\"px-2 py-2 border border-blue-300\">\n                  Phone number\n                </th>\n                <th className=\"px-2 py-2 border border-blue-300\">Email</th>\n                <th className=\"px-2 py-2 border border-blue-300\">Position</th>\n                <th className=\"px-2 py-2 border border-blue-300\">Marks</th>\n                <th className=\"px-2 py-2 border border-blue-300\">Gender</th>\n                <th className=\"px-2 py-2 border border-blue-300\">Disability</th>\n                <th className=\"px-2 py-2 border border-blue-300\">\n                  In Education\n                </th>\n                <th className=\"px-2 py-2 border border-blue-300\">\n                  Preferences\n                </th>\n                <th className=\"px-2 py-2 border border-blue-300\">\n                  Placed District\n                </th>\n                <th className=\"px-2 py-2 border border-blue-300\">\n                  Placed Sector\n                </th>\n                <th className=\"px-2 py-2 border border-blue-300\">\n                  Placed School\n                </th>\n              </tr>\n            </thead>\n          }\n          rowFormat={(item: {\n            id: string;\n            names: string;\n            phone_number: string;\n            email: string;\n            position: string;\n            marks: string;\n            gender: string;\n            disability: string;\n            in_education: string;\n            requested_district: string;\n            district: string;\n            sector: string;\n            school_name: string;\n          }): JSX.Element => {\n            return (\n              <tr\n                key={item.id}\n                className={`${\n                  parseInt(item.id) % 2 === 0 ? \"bg-gray-100\" : \"\"\n                } hover:bg-blue-100 hover:text-blue-700 group`}\n              >\n                <td className=\"px-2 py-2 border border-gray-300 group-hover:border-blue-400\">\n                  {item.id}\n                </td>\n                <td className=\"px-2 py-2 border border-gray-300 group-hover:border-blue-400\">\n                  <div className=\"w-48\">{item.names}</div>\n                </td>\n                <td className=\"px-2 py-2 border border-gray-300 group-hover:border-blue-400\">\n                  <div className=\"w-24\">{item.phone_number}</div>\n                </td>\n                <td className=\"px-2 py-2 border border-gray-300 group-hover:border-blue-400\">\n                  {item.email}\n                </td>\n                <td className=\"px-2 py-2 border border-gray-300 group-hover:border-blue-400\">\n                  {item.position})\n                </td>\n                <td className=\"px-2 py-2 border border-gray-300 group-hover:border-blue-400\">\n                  {item.marks}\n                </td>\n                <td className=\"px-2 py-2 border border-gray-300 group-hover:border-blue-400\">\n                  {item.gender}\n                </td>\n                <td className=\"px-2 py-2 border border-gray-300 group-hover:border-blue-400\">\n                  {item.disability}\n                </td>\n                <td className=\"px-2 py-2 border border-gray-300 group-hover:border-blue-400\">\n                  {item.in_education}\n                </td>\n                <td className=\"px-2 py-2 border border-gray-300 group-hover:border-blue-400\">\n                  <div className=\"w-48\">{item.requested_district}</div>\n                </td>\n                <td className=\"px-2 py-2 border border-gray-300 group-hover:border-blue-400\">\n                  {item.district}\n                </td>\n                <td className=\"px-2 py-2 border border-gray-300 group-hover:border-blue-400\">\n                  {item.sector}\n                </td>\n                <td className=\"px-2 py-2 border border-gray-300 group-hover:border-blue-400\">\n                  <div className=\"truncate\">{item.school_name}</div>\n                </td>\n              </tr>\n            );\n          }}\n          data={data}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport class ResultPreview extends Component<\n  ResultPreviewProps,\n  ResultPreviewState\n> {\n  constructor(props: ResultPreviewProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      searchValue: \"\",\n    };\n  }\n  render() {\n    return (\n      <div>\n        {this.props.algorithmResponse !== null && (\n          <ExportExcelReport\n            placementReport={this.props.algorithmResponse}\n            GetDistrictName={this.props.GetDistrictName}\n            searchValue={this.state.searchValue}\n            editSearchValue={(search_value: string) =>\n              this.setState({ searchValue: search_value })\n            }\n            selected_district_code={this.props.selected_district_code}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","export default __webpack_public_path__ + \"static/media/robot2.5558616e.gif\";","export default __webpack_public_path__ + \"static/media/robotic-automation.08eebb59.png\";","export default __webpack_public_path__ + \"static/media/robot1.676fe5fb.gif\";","import axios from \"axios\";\nimport React, { Component, Fragment } from \"react\";\nimport { FaPlayCircle, FaTimesCircle } from \"react-icons/fa\";\nimport { FiLoader } from \"react-icons/fi\";\nimport { GiVintageRobot } from \"react-icons/gi\";\nimport {\n  MdChangeCircle,\n  MdCheckCircle,\n  MdIceSkating,\n  MdList,\n  MdOutlineChangeCircle,\n  MdOutlineKeyboardBackspace,\n  MdOutlineRestartAlt,\n} from \"react-icons/md\";\nimport { DistrictPostsRequests } from \"../../containers/PlacementAlgorithm/PlacementAlgorithm\";\nimport { PositionAPI } from \"../../interfaces\";\nimport { API } from \"../../utils/api\";\nimport { commaFy, errorToText } from \"../../utils/functions\";\nimport Alert, { AlertInterface } from \"../Alert/Alert\";\nimport Modal, { ModalSize, Themes } from \"../Modal/Modal\";\nimport { ResultPreview } from \"./ResultPreview\";\nimport ROBOT1 from \"../../assets/robot/robot2.gif\";\nimport ROBOT_INFO from \"../../assets/robot/robotic-automation.png\";\nimport ROBOT2 from \"../../assets/robot/robot1.gif\";\nimport { BsArrowRight } from \"react-icons/bs\";\n\ninterface RunPlacementProps {\n  postRequests: DistrictPostsRequests[];\n  GetDistrictName: (district_code: string) => string;\n  selected_position: PositionAPI;\n  GetDistrictsPostsRequests: (position_code: string) => void;\n  cancel: () => void;\n}\n\nexport interface AlgorithmResponsePlaced {\n  disability: boolean;\n  district: string;\n  district_code: string;\n  email: string;\n  fname: string;\n  gender: string;\n  in_education: boolean;\n  lname: string;\n  marks: number;\n  phone_number: string;\n  position_code: string;\n  position_name: string;\n  request_id: string;\n  requested_district: {\n    strict: boolean;\n    values: string[];\n  };\n  school_code: string;\n  school_name: string;\n  sector: string;\n  sector_code: string;\n  session_id: string;\n  user_id: string;\n  _id: string;\n}\n\nexport interface AlgorithmResponse {\n  GetSchoolRequestsByDIstrict: {\n    academic_year_id: string;\n    district: string;\n    district_code: string;\n    placed_teachers: number;\n    position_code: string;\n    position_name: string;\n    requested_teacher: string;\n    school_code: string;\n    school_name: string;\n    sector: string;\n    sector_code: string;\n    status: string;\n    _id: string;\n  }[];\n  placedCandidates: AlgorithmResponsePlaced[];\n}\n\ninterface RunPlacementState {\n  loading: boolean;\n  success: string;\n  error: string;\n  algorithmResponse: AlgorithmResponse | null;\n  view_algorithm_response: boolean;\n  count: number;\n  count_district: number;\n  selected_district: string;\n}\n\nexport class RunPlacement extends Component<\n  RunPlacementProps,\n  RunPlacementState\n> {\n  constructor(props: RunPlacementProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      error: \"\",\n      success: \"\",\n      algorithmResponse: null,\n      view_algorithm_response: false,\n      count: 0,\n      count_district: 0,\n      selected_district: \"\",\n    };\n  }\n  getTotalRequests = () => {\n    let total = 0;\n    for (const item of this.props.postRequests) {\n      total = total + item.totalRequestedTeacher;\n    }\n    return total;\n  };\n  getTotalPlaced = (district_code: string): number => {\n    let total = 0;\n    if (\n      this.state.algorithmResponse !== null &&\n      this.state.algorithmResponse.placedCandidates.length > 0\n    ) {\n      for (const item of this.state.algorithmResponse.placedCandidates) {\n        if (item.district_code.toString() === district_code.toString()) {\n          total = total + 1;\n        }\n      }\n    }\n    return total;\n  };\n\n  RunAlgorithm = async () => {\n    if (\n      window.confirm(\n        \"Are you sure do you want to place teachers for this position? Remember that all candidates will be placed, there is no way to undo the action!\"\n      ) === true &&\n      this.props.selected_position.position_code !== null\n    ) {\n      this.setState({\n        loading: true,\n        error: \"\",\n        success: \"\",\n        count: 0,\n        count_district: 0,\n      });\n      //   General counter\n      setInterval(() => {\n        this.setState({ count: this.state.count + 1 });\n      }, 10);\n      //   District counter\n      setInterval(() => {\n        this.setState({ count_district: this.state.count_district + 1 });\n      }, 300);\n      try {\n        const res = await axios.post<AlgorithmResponse>(\n          `${API.PLACEMENT}/schoolrequest/doplacements`,\n          {\n            position_code: this.props.selected_position.position_code,\n            district_code: \"55\",\n          }\n        );\n        console.log(\"Success : \", res);\n        if (res) {\n          this.setState({\n            success: \"Great job, teachers are placed successfully!\",\n            loading: false,\n            view_algorithm_response: true,\n            algorithmResponse: res.data,\n            selected_district: \"\",\n          });\n          //   this.props.selected_position.position_code &&\n          //     this.props.GetDistrictsPostsRequests(\n          //       this.props.selected_position.position_code\n          //     );\n          //   this.props.cancel();\n        }\n      } catch (error: any) {\n        console.log(\"err: \", { ...error });\n        this.setState({ loading: false, error: errorToText(error) });\n      }\n    }\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <div className=\"bg-gray-700 h-screen overflow-y-auto\">\n          <div className=\"bg-blue-800 rounded-b-3xl p-6\">\n            <div className=\"flex flex-row items-center w-full justify-between gap-4\">\n              <div className=\"flex flex-row items-center w-full gap-4\">\n                <div>\n                  <div className=\"bg-blue-600 rounded-xl p-3\">\n                    <GiVintageRobot\n                      className={`text-8xl text-white ${\n                        this.state.loading === true\n                          ? \"animate__animated animate__zoomIn animate__infinite\"\n                          : \"animate__animated animate__tada animate__slow animate__infinite\"\n                      }`}\n                    />\n                  </div>\n                </div>\n                <div className=\"flex flex-col w-full\">\n                  <div className=\"text-3xl font-extrabold text-white\">\n                    TRS PLACEMENT ALGORITHM\n                  </div>\n                  <div className=\"flex flex-row items-center gap-2 mt-5\">\n                    <div className=\"flex flex-col pr-10 bg-blue-600 rounded-lg px-3 py-1\">\n                      <div className=\"text-sm text-blue-200\">\n                        Selected position\n                      </div>\n                      <div className=\"text-lg font-extrabold text-white -mt-1\">\n                        {this.props.selected_position.position_title}\n                      </div>\n                    </div>\n                    <div className=\"flex flex-col bg-blue-600 rounded-lg px-3 py-1\">\n                      <div className=\"text-xs text-blue-100\">\n                        Total waiting list\n                      </div>\n                      <div className=\"text-2xl font-extrabold text-blue-100 -mt-1\">\n                        {commaFy(\n                          23903 -\n                            (this.state.algorithmResponse === null\n                              ? 0\n                              : this.state.algorithmResponse.placedCandidates\n                                  .length)\n                        )}\n                      </div>\n                    </div>\n                    <div className=\"flex flex-col bg-blue-600 rounded-lg px-3 py-1\">\n                      <div className=\"text-xs text-blue-100\">Total vacants</div>\n                      <div className=\"text-2xl font-extrabold text-white -mt-1\">\n                        {commaFy(\n                          this.getTotalRequests() -\n                            (this.state.algorithmResponse === null\n                              ? 0\n                              : this.state.algorithmResponse.placedCandidates\n                                  .length)\n                        )}\n                      </div>\n                    </div>\n                    {this.state.algorithmResponse !== null && (\n                      <div className=\"flex flex-col bg-green-600 rounded-lg px-3 py-1\">\n                        <div className=\"text-xs text-blue-100\">\n                          Total placed\n                        </div>\n                        <div className=\"text-2xl font-extrabold text-white -mt-1\">\n                          {commaFy(\n                            this.state.algorithmResponse.placedCandidates.length\n                          )}\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"grid grid-cols-12 w-full\">\n            <div className=\"col-span-5 px-3 pb-3\">\n              <div className=\"mt-2 mb-2 flex flex-row items-center justify-between gap-3 w-full\">\n                <span className=\"text-white text-lg font-light\">\n                  Districts list\n                </span>\n                <div>\n                  <div className=\"rounded-lg bg-blue-600 text-white w-max px-2\">\n                    Requests: {commaFy(this.getTotalRequests())}\n                  </div>\n                </div>\n              </div>\n              <div\n                className=\"flex flex-col overflow-y-auto rounded-lg border border-gray-500 p-1\"\n                style={{ height: \"550px\" }}\n              >\n                {this.props.postRequests.length === 0 ? (\n                  <div className=\"bg-yellow-700 text-white rounded-md px-3 py-2 font-bold\">\n                    No districts found!\n                  </div>\n                ) : (\n                  this.props.postRequests.map((item, i) => (\n                    <div\n                      className={`flex flex-row items-center justify-between gap-4 group text-white mb-2 bg-gray-600 hover:bg-blue-500 rounded-lg pr-2 pb-1 cursor-pointer`}\n                      key={i + 1}\n                      onClick={() => {\n                        this.getTotalPlaced(item._id) > 0 &&\n                          this.setState({\n                            selected_district: item._id,\n                            view_algorithm_response: true,\n                          });\n                      }}\n                    >\n                      <div className=\"flex flex-row items-center gap-2\">\n                        <div>\n                          <div className=\"h-10 w-10 rounded-full bg-gray-600 flex items-center justify-center\">\n                            {this.state.loading === true ? (\n                              <FiLoader className={`text-2xl animate-spin`} />\n                            ) : (\n                              <MdOutlineChangeCircle className=\"text-3xl animate-pulse\" />\n                            )}\n                          </div>\n                        </div>\n                        <div className=\"flex flex-col\">\n                          <span className=\"font-extrabold text-lg\">\n                            {this.props.GetDistrictName(item._id)}\n                          </span>\n                          <span className=\"text-sm\">\n                            Total requests: {item.totalRequestedTeacher}\n                          </span>\n                        </div>\n                      </div>\n                      <div\n                        className={`text-sm ${\n                          this.state.loading === true\n                            ? \"text-green-200 font-light\"\n                            : \"font-bold\"\n                        }`}\n                      >\n                        {this.state.loading === true ? \"\" : \"Placed:\"}{\" \"}\n                        {this.state.loading === true\n                          ? \"Receiving...\"\n                          : this.state.algorithmResponse !== null\n                          ? this.getTotalPlaced(item._id)\n                          : item.totalPlacedTeachers}\n                      </div>\n                    </div>\n                  ))\n                )}\n              </div>\n            </div>\n            <div className=\"col-span-7 bg-gray-600 my-3 rounded-l-lg\">\n              <div className=\"h-full w-full flex flex-col items-center justify-center gap-3\">\n                {this.state.loading === true ? (\n                  <div className=\"flex flex-col items-center justify-center gap-0 -mt-10\">\n                    <FiLoader className=\"text-9xl animate-spin text-yellow-400\" />\n                    <div className=\"flex flex-row items-center justify-between gap2 w-full -mt-5\">\n                      <img\n                        src={ROBOT1}\n                        alt=\"\"\n                        className=\"w-1/2 -mt-40 animate__animated animate__fadeIn\"\n                      />\n                      <img\n                        src={ROBOT2}\n                        alt=\"\"\n                        className=\"w-1/2 -mt-40 animate__animated animate__fadeIn\"\n                      />\n                    </div>\n                    <div className=\"flex flex-row items-center gap-2 font-extrabold text-3xl text-green-400 bg-gray-700 rounded-md px-2 py-2 pl-4 -mt-10\">\n                      <span className=\"animate-pulse\">Processing: </span>\n                      <div className=\"bg-green-600 text-white px-2 rounded-md\">\n                        {commaFy(this.state.count)}\n                      </div>\n                    </div>\n                    <div className=\"text-center text-lg font-light text-white animate-pulse\">\n                      Placing teacher to schools...\n                    </div>\n                  </div>\n                ) : this.state.error !== \"\" ? (\n                  <div\n                    onClick={() => this.setState({ error: \"\", success: \"\" })}\n                    className=\"w-full px-3 flex flex-col items-center justify-center\"\n                  >\n                    <div className=\"bg-yellow-100 rounded-xl p-5 flex flex-col items-center justify-center animate__animated animate__zoomIn cursor-pointer\">\n                      <div>\n                        <FaTimesCircle className=\"text-8xl text-yellow-800\" />\n                      </div>\n                      <div className=\"text-center font-bold text-lg\">\n                        {this.state.error}\n                      </div>\n                    </div>\n                    <div\n                      onClick={() => this.props.cancel()}\n                      className=\"btn bg-gray-500 text-white rounded font-extrabold flex flex-row items-center gap-2 cursor-pointer hover:bg-blue-700 w-max my-2\"\n                    >\n                      <div>\n                        <MdOutlineKeyboardBackspace className=\"text-2xl\" />\n                      </div>\n                      <span>Go Back</span>\n                    </div>\n                  </div>\n                ) : this.state.success !== \"\" ? (\n                  <div className=\"w-full px-3 flex flex-col items-center justify-center\">\n                    <div\n                      onClick={() => this.setState({ error: \"\", success: \"\" })}\n                      className=\"bg-green-100 rounded-xl p-5 flex flex-col items-center justify-center animate__animated animate__zoomIn\"\n                    >\n                      <div className=\"w-full flex flex-row items-center justify-center gap-2\">\n                        <MdCheckCircle className=\"text-8xl text-green-800 animate__animated animate__heartBeat\" />\n                        {this.state.algorithmResponse !== null && (\n                          <div className=\"text-6xl font-extrabold text-green-800\">\n                            {commaFy(\n                              this.state.algorithmResponse.placedCandidates\n                                .length\n                            )}\n                          </div>\n                        )}\n                      </div>\n                      <div className=\"text-center font-bold text-lg\">\n                        {this.state.success}\n                      </div>\n                    </div>\n                    <div\n                      onClick={() => this.setState({ success: \"\", error: \"\" })}\n                      className=\"btn bg-gray-500 text-white rounded font-extrabold flex flex-row items-center gap-2 cursor-pointer hover:bg-blue-700 my-2 w-max\"\n                    >\n                      <span>Done, Continue</span>\n                      <div>\n                        <BsArrowRight className=\"text-2xl\" />\n                      </div>\n                    </div>\n                  </div>\n                ) : (\n                  <>\n                    <div className=\"grid grid-cols-12\">\n                      <img\n                        src={ROBOT_INFO}\n                        alt=\"\"\n                        className=\"col-span-7 animate__animated animate__fadeIn\"\n                      />\n                      <div className=\"col-span-5 flex flex-col gap-3 justify-center\">\n                        {this.state.algorithmResponse !== null && <div></div>}\n                        {this.props.postRequests.length === 0 ? (\n                          <div>\n                            <div className=\"bg-yellow-200 rounded-xl p-8 mr-4 font-bold text-lg\">\n                              No posts requests(Vacants) found!\n                            </div>\n                          </div>\n                        ) : (\n                          <div\n                            onClick={() => this.RunAlgorithm()}\n                            className=\"btn bg-green-600 text-white rounded font-extrabold flex flex-row items-center gap-2 cursor-pointer hover:bg-green-700 w-max\"\n                          >\n                            <div>\n                              {this.state.algorithmResponse !== null ? (\n                                <MdOutlineRestartAlt className=\"text-2xl\" />\n                              ) : (\n                                <FaPlayCircle className=\"text-2xl\" />\n                              )}\n                            </div>\n                            <span>\n                              {this.state.algorithmResponse !== null\n                                ? \"Restart\"\n                                : \"Start\"}{\" \"}\n                              placement\n                            </span>\n                          </div>\n                        )}\n\n                        {this.state.algorithmResponse !== null && (\n                          <div\n                            onClick={() =>\n                              this.setState({\n                                view_algorithm_response: true,\n                                selected_district: \"\",\n                              })\n                            }\n                            className=\"btn bg-gray-500 text-white rounded font-extrabold flex flex-row items-center gap-2 cursor-pointer hover:bg-blue-700 my-2 w-max\"\n                          >\n                            <div>\n                              <MdList className=\"text-2xl\" />\n                            </div>\n                            <span>\n                              View placement (\n                              {commaFy(\n                                this.state.algorithmResponse.placedCandidates\n                                  .length\n                              )}\n                              )\n                            </span>\n                          </div>\n                        )}\n                        <div\n                          onClick={() => this.props.cancel()}\n                          className=\"btn bg-gray-500 text-white rounded font-extrabold flex flex-row items-center gap-2 cursor-pointer hover:bg-blue-700 w-max\"\n                        >\n                          <div>\n                            <MdOutlineKeyboardBackspace className=\"text-2xl\" />\n                          </div>\n                          <span>Close window</span>\n                        </div>\n                      </div>\n                    </div>\n                  </>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n        {this.state.view_algorithm_response === true && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={() =>\n              this.setState({\n                view_algorithm_response: false,\n                selected_district: \"\",\n              })\n            }\n            backDropClose={false}\n            widthSizeClass={ModalSize.maxWidth}\n            displayClose={true}\n            padding={{\n              title: true,\n              body: true,\n            }}\n            title={\n              <div>\n                <div className=\"text-3xl font-extrabold\">Placement results</div>\n                <div className=\"flex flex-row items-center gap-2\">\n                  <div className=\"px-2 rounded bg-blue-600 text-white w-max\">\n                    {this.props.selected_position.position_title} (\n                    {this.props.selected_position.position_code})\n                  </div>\n                  {this.state.selected_district !== \"\" && (\n                    <div className=\"px-2 rounded bg-green-600 text-white w-max\">\n                      {this.props.GetDistrictName(this.state.selected_district)}{\" \"}\n                      district\n                    </div>\n                  )}\n                </div>\n              </div>\n            }\n          >\n            <div className=\"-mt-3\">\n              <ResultPreview\n                GetDistrictName={this.props.GetDistrictName}\n                algorithmResponse={this.state.algorithmResponse}\n                selected_district_code={this.state.selected_district}\n              />\n            </div>\n          </Modal>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nexport default RunPlacement;\n","import React, { Component, Fragment } from \"react\";\nimport { FaPlayCircle } from \"react-icons/fa\";\nimport { MdUpload } from \"react-icons/md\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport RunPlacement from \"../../../components/RunPlacement/RunPlacement\";\nimport UploadPostsRequests from \"../../../components/UploadPostsRequests/UploadPostsRequests\";\nimport { PositionAPI } from \"../../../interfaces\";\nimport { commaFy } from \"../../../utils/functions\";\nimport { DistrictPostsRequests } from \"../PlacementAlgorithm\";\n\ninterface PostsRequestsProps {\n  postRequests: DistrictPostsRequests[];\n  selected_position: PositionAPI;\n  GetDistrictsPostsRequests: (position_code: string) => void;\n  GetDistrictName: (district_code: string) => string;\n}\ninterface PostsRequestsState {\n  searchValue: string;\n  loading: boolean;\n  runAlgorithm: boolean;\n  uploadPostsRequests: boolean;\n}\nexport class PostsRequests extends Component<\n  PostsRequestsProps,\n  PostsRequestsState\n> {\n  constructor(props: PostsRequestsProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      searchValue: \"\",\n      runAlgorithm: false,\n      uploadPostsRequests: false,\n    };\n  }\n  render() {\n    return (\n      <Fragment>\n        <div className=\"p-0 border border-white text-left bg-white\">\n          <div className=\"my-3 mx-3 flex flex-row items-center gap-2 w-full\">\n            <input\n              type=\"text\"\n              placeholder=\"Search by district name\"\n              className=\"px-3 py-2 rounded border border-gray-400 w-1/2\"\n            />\n            <div\n              onClick={() => this.setState({ runAlgorithm: true })}\n              className=\"flex flex-row items-center justify-center gap-2 rounded px-3 py-2 pl-2 bg-blue-600 text-white hover:bg-blue-800 truncate cursor-pointer\"\n            >\n              <div>\n                <FaPlayCircle className=\"text-2xl\" />\n              </div>\n              <span>Run placement algorithm</span>\n            </div>\n          </div>\n          <table className=\"w-full\">\n            <thead>\n              <tr className=\"bg-blue-50\">\n                <th className=\"px-3 py-2\">#</th>\n                <th className=\"px-3 py-2\">District code</th>\n                <th className=\"px-3 py-2\">District name</th>\n                <th className=\"px-3 py-2\">Total requests</th>\n                <th className=\"px-3 py-2\">Total placed</th>\n                <th className=\"px-3 py-2\"></th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.props.postRequests.length === 0 ? (\n                <tr>\n                  <td\n                    colSpan={6}\n                    className=\"py-6 text-center text-2xl font-extralight\"\n                  >\n                    No result found!\n                  </td>\n                </tr>\n              ) : (\n                this.props.postRequests.map((item, i) => (\n                  <tr className={`${i % 2 !== 0 ? \"bg-gray-100\" : \"bg-white\"}`}>\n                    <td className=\"px-3 py-1\">{i + 1}</td>\n                    <td className=\"px-3 py-1\">{item._id}</td>\n                    <td className=\"px-3 py-1\">\n                      {this.props.GetDistrictName(item._id)}\n                    </td>\n                    <td className=\"px-3 py-1\">\n                      {commaFy(item.totalRequestedTeacher)}\n                    </td>\n                    <td className=\"px-3 py-1\">\n                      {commaFy(item.totalPlacedTeachers)}\n                    </td>\n                    <td className=\"px-1 py-1 flex flex-row items-center justify-end\">\n                      <div className=\"bg-blue-100 px-2 py-1 text-center w-max\">\n                        Action\n                      </div>\n                    </td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n        {this.state.runAlgorithm === true && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={() => {\n              this.setState({ runAlgorithm: false });\n            }}\n            backDropClose={true}\n            widthSizeClass={ModalSize.maxWidth}\n            displayClose={false}\n            padding={{\n              title: undefined,\n              body: undefined,\n              footer: undefined,\n            }}\n          >\n            <div>\n              <RunPlacement\n                postRequests={this.props.postRequests}\n                GetDistrictName={this.props.GetDistrictName}\n                selected_position={this.props.selected_position}\n                GetDistrictsPostsRequests={this.props.GetDistrictsPostsRequests}\n                cancel={() => {\n                  this.setState({ runAlgorithm: false });\n                }}\n              />\n            </div>\n          </Modal>\n        )}\n      </Fragment>\n    );\n  }\n}\n","import axios from \"axios\";\nimport React, { Component, Fragment } from \"react\";\nimport { BiErrorAlt } from \"react-icons/bi\";\nimport {\n  MdChangeCircle,\n  MdCheckCircle,\n  MdInfoOutline,\n  MdSelectAll,\n  MdUpload,\n  MdWarning,\n} from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  applicationPeriodsStoreInterface,\n  Auth,\n  positionsStoreInterface,\n  FC_getLocations,\n  LocationAPI,\n} from \"../../actions\";\nimport { FC_GetPositionsByInstitution } from \"../../actions/settings\";\nimport Loading from \"../../components/Loading/Loading\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport UploadPostsRequests from \"../../components/UploadPostsRequests/UploadPostsRequests\";\nimport { PositionAPI } from \"../../interfaces\";\nimport { StoreState } from \"../../reducers\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/functions\";\nimport Districts from \"./Districts/Districts\";\nimport PlacementReport from \"./PlacementReport/PlacementReport\";\nimport { Positions } from \"./Positions/Positions\";\nimport { PostsRequests } from \"./PostsRequests/PostsRequests\";\n\nexport interface PlacementReportInterface {\n  _id: string;\n  requested_district: {\n    values: number[];\n    strict: boolean;\n  };\n  status: number;\n  request_id: string;\n  district_code: number;\n  district: string;\n  sector_code: string;\n  sector: string;\n  school_code: string;\n  school_name: string;\n  position_code: string;\n  position_name: string;\n  user_id: string;\n  email: string;\n  phone_number: string;\n  fname: string;\n  lname: string;\n  gender: string;\n  session_id: string;\n  marks: number;\n  in_education: boolean;\n  disability: boolean;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface SchoolPostsRequests {\n  _id: string;\n  district_code: string;\n  district: string;\n  sector_code: string;\n  sector: string;\n  school_code: string;\n  school_name: string;\n  position_code: string;\n  position_name: string;\n  requested_teacher: number;\n  placed_teachers: number;\n  academic_year_id: string;\n}\n\nexport interface DistrictPostsRequests {\n  _id: string;\n  totalRequestedTeacher: number;\n  totalPlacedTeachers: number;\n}\n\ninterface PlacementAlgorithmProps {\n  auth: Auth;\n  periods: applicationPeriodsStoreInterface;\n  FC_GetPositionsByInstitution: (\n    institution_id: string,\n    callback: (status: boolean, msg: string, data?: PositionAPI[]) => void\n  ) => void;\n}\ninterface PlacementAlgorithmState {\n  loading: boolean;\n  documentType: \"PostRequests\" | \"PlacementReport\" | \"GeneralReport\";\n  posts_requests: DistrictPostsRequests[] | null;\n  error: string;\n  success: string;\n  selectedPosition: PositionAPI | null;\n  choosePosition: boolean;\n  placementReport: PlacementReportInterface[] | null;\n  districts: LocationAPI | null;\n  selected_district_code: string;\n  select_district_modal: boolean;\n  positions: PositionAPI[] | null;\n  view_all: boolean;\n  uploadPostsRequests: boolean;\n}\n\nclass _PlacementAlgorithm extends Component<\n  PlacementAlgorithmProps,\n  PlacementAlgorithmState\n> {\n  constructor(props: PlacementAlgorithmProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      documentType: \"PlacementReport\",\n      posts_requests: null,\n      error: \"\",\n      success: \"\",\n      selectedPosition: null,\n      choosePosition: false,\n      placementReport: null,\n      districts: null,\n      selected_district_code: \"\",\n      select_district_modal: false,\n      positions: null,\n      view_all: false,\n      uploadPostsRequests: false,\n    };\n  }\n\n  GetDistrictName = (district_code: string): string => {\n    let district = this.state.districts?.districts.find(\n      (itm) => itm.district_code === district_code\n    );\n    if (district === undefined) {\n      return \"\";\n    } else {\n      return district.district_name;\n    }\n  };\n\n  GetDistrictsPostsRequests = async (position_code: string) => {\n    this.setState({ loading: true });\n    try {\n      const res = await axios.get<DistrictPostsRequests[]>(\n        `${API.PLACEMENT}/schoolrequest/district/position/summary/${position_code}`\n      );\n      if (res) {\n        console.log(\"Res: \", res.data);\n        this.setState({\n          loading: false,\n          posts_requests: res.data,\n          error: \"\",\n          success: \"\",\n        });\n      }\n    } catch (error: any) {\n      this.setState({ error: errorToText(error), loading: false });\n      console.log(\"Error: \", { ...error });\n    }\n  };\n\n  GetDistrictPlacementReport = async (\n    position_code: string,\n    district_code: string\n  ) => {\n    if (district_code !== \"\") {\n      this.setState({ loading: true });\n      try {\n        const res = await axios.get<PlacementReportInterface[]>(\n          `${API.PLACEMENT}/placedcandidate/district/position/${district_code}/${position_code}`\n        );\n        if (res) {\n          console.log(\"Res: \", res.data);\n          this.setState({\n            loading: false,\n            placementReport: res.data,\n            error: \"\",\n            success: \"\",\n          });\n        }\n      } catch (error: any) {\n        this.setState({ error: errorToText(error), loading: false });\n        console.log(\"Error: \", { ...error });\n      }\n    }\n  };\n\n  GetPositionPlacementReport = async (position_code: string) => {\n    if (position_code !== \"\") {\n      this.setState({ loading: true });\n      try {\n        const res = await axios.get<PlacementReportInterface[]>(\n          `${API.PLACEMENT}/placedcandidate/position/${position_code}`\n        );\n        if (res) {\n          console.log(\"Res: \", res.data);\n          this.setState({\n            loading: false,\n            placementReport: res.data,\n            error: \"\",\n            success: \"\",\n          });\n        }\n      } catch (error: any) {\n        this.setState({ error: errorToText(error), loading: false });\n        console.log(\"Error: \", { ...error });\n      }\n    }\n  };\n\n  componentDidMount = () => {\n    // Load districts\n    if (this.state.districts === null) {\n      this.setState({ loading: true });\n      FC_getLocations(\n        (error: boolean, locations: LocationAPI | null, msg: string) => {\n          if (locations !== null) {\n            this.setState({\n              districts: locations,\n              loading: false,\n              error: \"\",\n            });\n          } else {\n            if (error === false) {\n              this.setState({ error: msg, loading: false, districts: null });\n            }\n          }\n        }\n      );\n    }\n    // Load positions\n    if (\n      this.state.positions === null &&\n      this.props.auth.education_institution_id !== null\n    ) {\n      this.setState({ loading: true });\n      this.props.FC_GetPositionsByInstitution(\n        this.props.auth.education_institution_id,\n        (status: boolean, msg: string, data?: PositionAPI[]) => {\n          this.setState({ loading: status });\n          if (status === false && data !== undefined) {\n            this.setState({ positions: data, loading: false });\n          }\n          if (status === false && msg !== \"\") {\n            this.setState({ error: msg, loading: false });\n          }\n        }\n      );\n    }\n  };\n\n  render() {\n    if (this.state.loading === true) {\n      return (\n        <div className=\"bg-white rounded p-4 pt-10 mt-5\">\n          <Loading />\n          <div className=\"ml-4 -mt-5 text-xl font-light\">\n            Loading, please wait...\n          </div>\n        </div>\n      );\n    }\n    return (\n      <Fragment>\n        {this.state.selectedPosition === null &&\n        this.state.uploadPostsRequests === false ? (\n          <div className=\"bg-white rounded p-4 mt-5 flex flex-col items-center justify-center gap-3\">\n            <div>\n              <MdInfoOutline className=\"text-7xl\" />\n            </div>\n\n            <div className=\"text-center text-xl font-light\">\n              No position select, please you are required to choose position\n            </div>\n            <div className=\"mt-4 flex flex-row items-center justify-center gap-3 w-full\">\n              <div\n                onClick={() => this.setState({ uploadPostsRequests: true })}\n                className=\"btn bg-green-600 text-white cursor-pointer hover:bg-green-700\"\n              >\n                Upload posts requests\n              </div>\n              <div\n                onClick={() => this.setState({ choosePosition: true })}\n                className=\"btn bg-blue-500 text-white cursor-pointer hover:bg-blue-700\"\n              >\n                Choose a position\n              </div>\n            </div>\n          </div>\n        ) : this.state.uploadPostsRequests === true &&\n          this.props.auth.application_session !== null ? (\n          <div className=\"bg-white rounded-md m-3 animate__animated animate__zoomIn\">\n            <UploadPostsRequests\n              closeWindow={() => this.setState({ uploadPostsRequests: false })}\n              session={this.props.auth.application_session}\n            />\n          </div>\n        ) : (\n          <div className=\"pr-2 -ml-2 lg:ml-0\">\n            <div className=\"flex flex-row items-baseline justify-between w-full mt-3\">\n              <div className=\"flex flex-col\">\n                <div className=\"font-extrabold text-3xl\">\n                  Candidate Placements\n                </div>\n                <div className=\"text-base flex flex-row items-center bg-white mt-3 rounded-t-md overflow-hidden\">\n                  <div\n                    onClick={() => {\n                      if (this.state.documentType !== \"PostRequests\") {\n                        if (\n                          this.state.posts_requests === null &&\n                          this.state.selectedPosition !== null\n                        ) {\n                          // Request\n                          this.GetDistrictsPostsRequests(\n                            this.state.selectedPosition.position_code!\n                          );\n                        }\n                        this.setState({ documentType: \"PostRequests\" });\n                      }\n                    }}\n                    className={`border-b-4 ${\n                      this.state.documentType === \"PostRequests\"\n                        ? \"border-blue-600 font-bold text-blue-600 cursor-not-allowed\"\n                        : \"border-white cursor-pointer hover:border-blue-500 hover:text-blue-600\"\n                    } text-center w-max px-4 py-2 pt-3`}\n                  >\n                    Posts Requests\n                  </div>\n                  <div\n                    onClick={() => {\n                      if (this.state.documentType !== \"PlacementReport\") {\n                        this.setState({ documentType: \"PlacementReport\" });\n                        if (\n                          this.state.placementReport === null &&\n                          this.state.selectedPosition !== null &&\n                          this.state.selectedPosition.position_code !== null\n                        ) {\n                          if (this.state.view_all === false) {\n                            this.GetDistrictPlacementReport(\n                              this.state.selectedPosition.position_code!,\n                              this.state.selected_district_code\n                            );\n                          } else {\n                            this.GetPositionPlacementReport(\n                              this.state.selectedPosition.position_code!\n                            );\n                          }\n                        }\n                      }\n                    }}\n                    className={`border-b-4 ${\n                      this.state.documentType === \"PlacementReport\"\n                        ? \"border-blue-600 font-bold text-blue-600 cursor-not-allowed\"\n                        : \"border-white cursor-pointer hover:border-blue-500 hover:text-blue-600\"\n                    } text-center w-max px-4 py-2 pt-3`}\n                  >\n                    Placement Report\n                  </div>\n                  {/* <div\n                    onClick={() => {\n                      if (this.state.documentType !== \"GeneralReport\") {\n                        this.setState({ documentType: \"GeneralReport\" });\n                      }\n                    }}\n                    className={`border-b-4 ${\n                      this.state.documentType === \"GeneralReport\"\n                        ? \"border-blue-600 font-bold text-blue-600 cursor-not-allowed\"\n                        : \"border-white cursor-pointer hover:border-blue-500 hover:text-blue-600\"\n                    } text-center w-max px-4 py-2 pt-3`}\n                  >\n                    General Report\n                  </div> */}\n                  <div\n                    onClick={() => this.setState({ uploadPostsRequests: true })}\n                    className=\"flex flex-row items-center justify-center gap-2 rounded px-3 py-2 pl-2 bg-green-600 text-white hover:bg-green-800 truncate cursor-pointer mx-1\"\n                  >\n                    <div>\n                      <MdUpload className=\"text-2xl\" />\n                    </div>\n                    <span>Upload posts requests</span>\n                  </div>\n                </div>\n              </div>\n              <div className=\"flex flex-row items-center gap-2\">\n                {this.state.view_all === false ? (\n                  <div\n                    onClick={() => {\n                      if (\n                        this.state.selectedPosition !== null &&\n                        this.state.selectedPosition.position_code !== null\n                      ) {\n                        this.setState({\n                          view_all: true,\n                          selected_district_code: \"\",\n                        });\n                        this.GetPositionPlacementReport(\n                          this.state.selectedPosition.position_code\n                        );\n                      }\n                    }}\n                    className={`px-3 py-2 flex flex-row items-center gap-2 \n                      bg-blue-500 animate__animated animate__zoomIn\n                  } rounded-md cursor-pointer hover:bg-blue-700 text-white h-full`}\n                  >\n                    <div>\n                      <MdSelectAll className=\"text-3xl\" />\n                    </div>\n                    <span>View all</span>\n                  </div>\n                ) : (\n                  <div\n                    onClick={() => {\n                      if (\n                        this.state.selectedPosition !== null &&\n                        this.state.selectedPosition.position_code !== null\n                      ) {\n                        this.setState({\n                          placementReport: null,\n                          view_all: false,\n                          selected_district_code: \"\",\n                        });\n                      }\n                    }}\n                    className={`px-3 py-2 flex flex-row items-center gap-2 \n                    bg-gray-500 hover:bg-gray-600 animate__animated animate__zoomIn\n                } rounded-md cursor-pointer hover:bg-blue-700 text-white h-full`}\n                  >\n                    <div>\n                      <MdSelectAll className=\"text-3xl\" />\n                    </div>\n                    <span>Hide all</span>\n                  </div>\n                )}\n                <div\n                  onClick={() => this.setState({ choosePosition: true })}\n                  className=\"bg-blue-100 text-blue-800 px-3 pr-2 py-1 rounded border-2 border-white hover:border-blue-600 flex flex-row items-center gap-3 cursor-pointer group\"\n                >\n                  <div className=\"flex flex-col\">\n                    <div className=\"font-light text-lg\">Selected position</div>\n                    <div className=\"text-light font-extrabold -mt-1\">\n                      {this.state.selectedPosition?.position_title}\n                    </div>\n                  </div>\n                  <div>\n                    <MdChangeCircle className={`text-4xl`} />\n                  </div>\n                </div>\n              </div>\n            </div>\n            {this.state.error !== \"\" && (\n              <div className=\"flex flex-row items-center gap-3 rounded px-3 py-2 w-full cursor-pointer my-2 bg-white border border-red-600\">\n                <div>\n                  <BiErrorAlt className=\"text-3xl text-red-600\" />\n                </div>\n                <div className=\"flex flex-col\">\n                  <span className=\"font-bold text-lg text-red-600\">\n                    {this.state.error}\n                  </span>\n                </div>\n              </div>\n            )}\n            {this.state.success !== \"\" && (\n              <div className=\"flex flex-row items-center gap-3 rounded-lg px-3 py-2 w-full cursor-pointer my-2 bg-white border border-green-600\">\n                <div>\n                  <MdCheckCircle className=\"text-3xl text-green-600\" />\n                </div>\n                <div className=\"flex flex-col\">\n                  <span className=\"font-bold text-lg text-green-600\">\n                    {this.state.success}\n                  </span>\n                </div>\n              </div>\n            )}\n            {this.state.documentType === \"PostRequests\" &&\n              this.state.selectedPosition !== null &&\n              this.state.posts_requests !== null && (\n                <PostsRequests\n                  postRequests={this.state.posts_requests}\n                  GetDistrictName={this.GetDistrictName}\n                  selected_position={this.state.selectedPosition}\n                  GetDistrictsPostsRequests={this.GetDistrictsPostsRequests}\n                />\n              )}\n            {this.state.documentType === \"PlacementReport\" &&\n              this.state.selectedPosition !== null && (\n                <PlacementReport\n                  selectedDistrict={\n                    this.state.districts === null\n                      ? null\n                      : this.state.districts.districts.find(\n                          (itm) =>\n                            itm.district_code ===\n                            this.state.selected_district_code\n                        ) === undefined\n                      ? null\n                      : this.state.districts.districts.find(\n                          (itm) =>\n                            itm.district_code ===\n                            this.state.selected_district_code\n                        )!\n                  }\n                  placementReport={this.state.placementReport}\n                  selectedPosition={this.state.selectedPosition}\n                  chooseDistrict={() =>\n                    this.setState({ select_district_modal: true })\n                  }\n                  GetPlacementReport={(\n                    position_code: string,\n                    district_code: string\n                  ) => {\n                    if (this.state.view_all === false && district_code !== \"\") {\n                      this.GetDistrictPlacementReport(\n                        position_code,\n                        district_code\n                      );\n                    } else {\n                      this.GetPositionPlacementReport(position_code);\n                      this.setState({ view_all: true });\n                    }\n                  }}\n                  GetDistrictName={this.GetDistrictName}\n                  view_all={this.state.view_all}\n                />\n              )}\n          </div>\n        )}\n        {this.state.choosePosition === true && this.state.positions !== null && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={() => {\n              this.setState({ choosePosition: false });\n            }}\n            backDropClose={true}\n            widthSizeClass={ModalSize.large}\n            displayClose={true}\n            padding={{\n              title: true,\n              body: true,\n            }}\n            title={<div className=\"text-2xl font-bold\">Choose position</div>}\n          >\n            <Positions\n              selectPosition={(position: PositionAPI) => {\n                if (position.position_code !== null) {\n                  this.state.documentType === \"PostRequests\" &&\n                    this.GetDistrictsPostsRequests(position.position_code);\n                  if (this.state.view_all === true) {\n                    this.state.documentType === \"PlacementReport\" &&\n                      this.state.selected_district_code !== \"\" &&\n                      this.GetDistrictPlacementReport(\n                        position.position_code,\n                        this.state.selected_district_code\n                      );\n                    this.setState({\n                      view_all: false,\n                      selected_district_code: \"\",\n                    });\n                  } else {\n                    if (\n                      this.state.documentType === \"PlacementReport\" &&\n                      this.state.selected_district_code !== \"\"\n                    ) {\n                      this.setState({\n                        view_all: true,\n                        selected_district_code: \"\",\n                      });\n                      this.GetPositionPlacementReport(position.position_code);\n                    }\n                  }\n                }\n                position.position_code !== null &&\n                  this.setState({\n                    selectedPosition: position,\n                    choosePosition: false,\n                  });\n              }}\n              positions={this.state.positions}\n              selected_position_code={\n                this.state.selectedPosition === null\n                  ? \"\"\n                  : this.state.selectedPosition.position_code!\n              }\n            />\n          </Modal>\n        )}\n        {this.state.select_district_modal === true && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={() => this.setState({ select_district_modal: false })}\n            backDropClose={true}\n            widthSizeClass={ModalSize.medium}\n            displayClose={true}\n            padding={{\n              title: true,\n              body: true,\n            }}\n            title={<div className=\"text-2xl\">Filter by district</div>}\n          >\n            {this.state.districts === null ? (\n              <div>Loading...</div>\n            ) : (\n              this.state.selectedPosition !== null &&\n              this.state.selectedPosition.position_code !== null && (\n                <div className=\"-mt-5\">\n                  <Districts\n                    districts={this.state.districts}\n                    selected_district_code={this.state.selected_district_code}\n                    selectDistrict={(district_code: string) => {\n                      this.setState({\n                        selected_district_code: district_code,\n                        select_district_modal: false,\n                        view_all: false,\n                      });\n                      this.GetDistrictPlacementReport(\n                        this.state.selectedPosition!.position_code!,\n                        district_code\n                      );\n                    }}\n                  />\n                </div>\n              )\n            )}\n          </Modal>\n        )}\n      </Fragment>\n    );\n  }\n}\nconst mapStateToProps = ({\n  auth,\n  periods,\n}: StoreState): {\n  auth: Auth;\n  periods: applicationPeriodsStoreInterface;\n} => {\n  return {\n    auth: auth,\n    periods: periods,\n  };\n};\n\nexport const PlacementAlgorithm = connect(mapStateToProps, {\n  FC_GetPositionsByInstitution,\n})(_PlacementAlgorithm);\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AccessTaskInterface,\n  PermissionInterface,\n  SystemSettingsInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PositionAPI } from \"../interfaces/position\";\n\nconst url = `${API.AUTH}/auth/user/access`;\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// SYSTEM SETTINGS  ==============\nexport interface GetSystemSettingsAction {\n  type: ActionTypes.GET_SYSTEM_SETTINGS;\n  payload: SystemSettingsInterface[];\n}\n\nexport interface DisableSystemSettingsAction {\n  type: ActionTypes.DISABLE_SYSTEM_SETTINGS;\n  payload: {\n    system_setting_id: string;\n    status: \"enabled\" | \"disabled\";\n  };\n}\n\n// ROLE TASKS ACCESS SETTINGS ===================================\nexport interface GetTaskAccessAction {\n  type: ActionTypes.GET_TASK_ACCESS;\n  payload: AccessTaskInterface[];\n}\n\n// POSITIONS SETTINGS ===================================\nexport interface PositionCreateInterface {\n  position_id?: string;\n  position_title: string;\n  position_code: string;\n  description: string;\n  school_level_id: string;\n  subcategory_id: string;\n  education_institute_id: string;\n  courses: string[];\n  requirements: {\n    user_detail_category_id: string;\n    user_detail_subcategory_id: string;\n    position_requirement: {\n      category_subcategory_data_id: string;\n      required: boolean;\n    }[];\n    required: boolean;\n  }[];\n}\nexport interface GetPositionsAction {\n  type: ActionTypes.GET_POSTIONS;\n  payload: PositionAPI[];\n}\n\nexport interface CreatePositionsAction {\n  type: ActionTypes.CREATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface UpdatePositionsAction {\n  type: ActionTypes.UPDATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface DeletePositionSettingAction {\n  type: ActionTypes.DELETE_POSITION;\n  payload: string;\n}\n\nexport interface PublishPositionAction {\n  type: ActionTypes.PUBLISH_POSITION;\n  payload: {\n    position_id: string;\n    status: boolean;\n  };\n}\n\nexport type SystemActionType =\n  | GetSystemSettingsAction\n  | DisableSystemSettingsAction\n  | GetTaskAccessAction\n  | GetPositionsAction\n  | CreatePositionsAction\n  | UpdatePositionsAction\n  | DeletePositionSettingAction\n  | PublishPositionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSystemSettings = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<SystemSettingsInterface[]>(\n        `${API.AUTH}/system/setting`\n      );\n      console.log(\"=================getSystemSettings===================\");\n      console.log(res);\n      console.log(\"=================getSystemSettings===================\");\n      dispatch<GetSystemSettingsAction>({\n        type: ActionTypes.GET_SYSTEM_SETTINGS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const disableSystemSetting = (data: {\n  system_setting_id: string;\n  status: \"enabled\" | \"disabled\";\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableSystemSettingsAction>({\n      type: ActionTypes.DISABLE_SYSTEM_SETTINGS,\n      payload: data,\n    });\n  };\n};\n\n// ============================ tasks access =======================\n\nexport const GetTaskAccess = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<\n        {\n          id: string;\n          title: string;\n          key: string;\n          permitted: PermissionInterface;\n        }[]\n      >(`${url}/roleaccess`);\n      let response: AccessTaskInterface[] = res.data.map((data) => ({\n        id: data.id,\n        task: data.title,\n        key: data.key,\n        permitted: data.permitted,\n      }));\n      dispatch<GetTaskAccessAction>({\n        type: ActionTypes.GET_TASK_ACCESS,\n        payload: response,\n      });\n      callback(false, \"\", response);\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// ============================ positions =======================\n\nexport const getPositions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(`${API.APPLICATION}/position`);\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createPosition = (data: PositionCreateInterface) => {\n  console.log({ createPosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreatePositionsAction>({\n      type: ActionTypes.CREATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const updatePosition = (data: PositionCreateInterface) => {\n  console.log({ updatePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdatePositionsAction>({\n      type: ActionTypes.UPDATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const deletePosition = (data: string) => {\n  console.log({ deletePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<DeletePositionSettingAction>({\n      type: ActionTypes.DELETE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const publishPosition = (data: {\n  position_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<PublishPositionAction>({\n      type: ActionTypes.PUBLISH_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_GetPositionsByInstitution = (\n  institution_id: string,\n  callback: (status: boolean, msg: string, data?: PositionAPI[]) => void\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(\n        `${API.APPLICATION}/position/instituteposition/${institution_id}`\n      );\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n"],"sourceRoot":""}
{"version":3,"sources":["containers/ApplicationsDashboard/ApplicationHistory/ApplicationHistory.tsx","containers/ApplicationsDashboard/ExamDetails/ExamDetails.tsx","containers/ApplicationsDashboard/ExamStatus/PreparedExams.tsx","containers/ApplicationsDashboard/ExamStatus/ActiveExams.tsx","containers/ApplicationsDashboard/ExamStatus/ExamsDone.tsx","containers/ApplicationsDashboard/Exams.tsx","components/CandidatePlacementCheck/CandidatePlacementCheck.tsx","containers/ApplicationsDashboard/ApplicationsDashboard.tsx","components/Navigation/SideNavigation.tsx"],"names":["ApplicationHistory","props","className","undefined","applicationHistory","length","map","item","i","DATE","date","comment","ApplicationStatesDescription","find","itm","key","application_status","caption","ExamDetails","setLoading","status","setState","loading","componentDidMount","locationsData","Locations_list","loadAllLocationsData","loadApplicationPeriods","state","this","candidateExam","selected_exam_id","selected_exam_details","doing_exam","to","examDetails","locationDetails","Loading","type","LoadingType","dark","onClick","setSelectedCandidateExam","exam_date","start_time","duration","discription","dangerouslySetInnerHTML","__html","termes","center_id","province_name","district_name","center_name","room_number","proctoring_type","Component","PreparedExams","checkProctoringType","selectedExams","check","course_id","NotPreparedExamsFilter","selectedPosition","courses","filter","user_exams_done","ex","course","findExam","PreparedExamsFilter","AllPendingExams","totalPending","loadingExams","course_name","validateExamDate","end_time","ExamTimeStatus","Online","Expired","loadingExamsDone","Waiting","changeLocation","user_status","UserExamStatus","Editing","selectedApplicationDetails","ApplicationStates","Shortlisted","setSelectedCourse","appointmentDetailsModal","periods","selected_period","is_active","id","positions","selected_position","position_id","setSelectedPosition","setDoingExam","InitializeExamDetails","application_session","_id","district_id","room_id","setLoadingExams","Initiated","total_marks","toFixed","ActiveExams","ActiveExamsFilter","exam_start_time","exam_end_time","Paused","Done","Removed","x","selectedCourse","centersModal","setMaxExamModal","ExamsDone","viewMarksDetailsFn","Exam","examTest","user_exams_temp","period","courseSelected","viewMarksDetails","rules","exam_id","exam_paper","ExamsDoneFilter","_PostExams","renderExam","user_id","exam","examStatus","loadExam","redirect","setClaim","claim","closeModal","updateLocationFunction","exams","selected_application","updateLocation","setLoadingExamsDone","showTotalMarks","position","test","numberOfIncomplete","count","findLocation","course_code","location","rooms","room_type","RoomType","Virtual","Physical","courseId","current_temp","testDone","findCourse","pendingCourses","InitializationFn","loadExamsDone","auth","user","loadCourses","doExam","exam_answers","claiming","myClaims","getMyClaims","msg","data","alert","displayResults","selectedLocation","applicationHistoryState","selectedExamDetails","CandidateAnswersDetails","showAnswers","applicationPeriods","setSelectedLocationData","ChooseExamCenter","positionCourses","addLocation","changeProctoring","selectedEducationCategory","education_institute_id","parseFloat","findTotalMarks","title","Rejected","CheckIfExamDone","isClaimAllowed","deleteApplication","ClaimFormComponent","setFormState","claim_type","PlansTypeKeys","APPLICATION","file_id","PostExams","connect","prepareExam","schoolLevels","loadExamsList","setSelectedPeriod","CandidatePlacementCheck","_ApplicationsDashboard","filteredApplications","applications","Status","searchPeriod","appl","searchPeriodSel","session_plan","ap","closeApplicationDetails","displayDetailsModal","setDisplayDetailsModal","applicationStatuses","application","output","push","maxExamModal","LoadApplications","a","loadingErr","number_of_incomplete","response","candidateApplications","candidate_applications","axios","get","API","res","AddUserApplication","console","log","Incomplete","application_id","incrementIncomplete","LoadCandidateApplications","applicationError","post","noRoomsApplication","PushPopupAlert","description","theme","PopupAlertTheme","success","errors","field","newArr","removeLocation","message","danger","changeLoadingState","window","confirm","delete","RemoveUserApplication","warning","setShowFilterStatus","showPeriodFilter","loadAllPositions","apply","currentStep","ApplicationStepsTypes","Step3","initiateApplication","Step1","doTestStatus","applicationDetails","selectedApplicationStatus","viewSchools","FC_Access","UserAccessList","MY_APPLICATION","view","position_title","session_plan_name","Pass","checkApplication","SelectUserApplication","Exams","changeLocationError","application_history","SideNavigation","positions_list","RTB_SHOW_STATUS_APPLY","active","education_category_title","LoadingV2","NoResult","NoResultThemes","Dark","value","component","createdAt","Modal","backDrop","Themes","default","close","backDropClose","widthSizeClass","ModalSize","extraLarge","displayClose","padding","body","ApplicationPeriods","te","institution","ApplicationsDashboard","system","_SideNavigation","PageHasSubNav","componentWillUnmount","isAuthenticated","navActive","navigation","children","React","NavToogle","MainItem","icon","MdBrightness1","IconDefined"],"mappings":"+ZAqCeA,EA7BY,SAACC,GAC1B,OACE,sBAAKC,UAAU,qEAAf,UAEE,oBAAIA,UAAU,gBACd,qBAAKA,UAAU,2CAAf,cAC8BC,IAA7BF,EAAMG,oBACLH,EAAMG,mBAAmBC,OAAS,GAClCJ,EAAMG,mBAAmBE,KAAI,SAACC,EAAMC,GAAP,aAC3B,sBAAiBN,UAAU,oEAA3B,UACE,sBAAKA,UAAU,yDAAf,UACE,sBAAMA,UAAU,gBAAhB,mBACA,sBAAMA,UAAU,YAAhB,SAA6BO,YAAKF,EAAKG,KAAM,mBAE/C,sBAAKR,UAAU,yDAAf,UACE,sBAAMA,UAAU,gBAAhB,qBACA,sBAAMA,UAAU,YAAhB,SAA6BK,EAAKI,aAEpC,sBAAKT,UAAU,yDAAf,UACE,sBAAMA,UAAU,gBAAhB,iCACA,sBAAMA,UAAU,YAAhB,mBAA6BU,IAA6BC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAQR,EAAKS,6BAAvF,aAA6B,EAA+EC,eAXtGT,EAAI,Y,QCsOTU,E,kDAvNb,WAAYjB,GAA0B,IAAD,8BACnC,cAAMA,IAMRkB,WAAa,SAACC,GACZ,EAAKC,SAAS,CAAEC,QAASF,KARU,EAUrCG,kBAAoB,WAE4B,OAA5C,EAAKtB,MAAMuB,cAAcC,gBAC0B,IAAnD,EAAKxB,MAAMuB,cAAcC,eAAepB,QAExC,EAAKJ,MAAMyB,qBAAqB,EAAKP,YAGvC,EAAKlB,MAAM0B,uBAAuB,EAAKR,aAfvC,EAAKS,MAAQ,CACXN,SAAS,GAJwB,E,0CAqBrC,WAAU,IAAD,WACP,OACgD,OAA9CO,KAAK5B,MAAM6B,cAAcC,kBAC0B,OAAnDF,KAAK5B,MAAM6B,cAAcE,wBACe,IAAxCH,KAAK5B,MAAM6B,cAAcG,WAElB,cAAC,IAAD,CAAUC,GAAG,aAES,OAA3BL,KAAK5B,MAAMkC,YAEX,qBAAKjC,UAAU,mHAAf,yCAK+BC,IAA/B0B,KAAK5B,MAAMmC,gBAEX,qBAAKlC,UAAU,mHAAf,6CAMF,+BAC0B,IAAvB2B,KAAKD,MAAMN,QACV,qBAAKpB,UAAU,gCAAf,SACE,cAACmC,EAAA,EAAD,CAASC,KAAMC,IAAYC,SAG7B,gCACE,sBAAKtC,UAAU,0CAAf,UACE,sBAAKA,UAAU,mHAAf,UACE,sBAAKA,UAAU,mCAAf,UACE,cAAC,IAAD,CAAQA,UAAU,2BADpB,sBAIA,wBACEuC,QAAS,WAEP,EAAKxC,MAAMkC,aACT,EAAKlC,MAAMyC,yBACT,EAAKzC,MAAMkC,cAGjBG,KAAK,SACLpC,UAAS,cACuC,OAA9C2B,KAAK5B,MAAM6B,cAAcC,iBACrB,oCACA,gCAHG,wCATX,SAeiD,OAA9CF,KAAK5B,MAAM6B,cAAcC,iBACtB,iBACA,kBAGR,sBAAK7B,UAAU,4BAAf,UACE,qBAAKA,UAAU,aAAf,SACE,sBAAKA,UAAU,0CAAf,UACE,sBAAMA,UAAU,+BAAhB,wBAGA,sBAAMA,UAAU,0BAAhB,SACGO,YAAKoB,KAAK5B,MAAMkC,YAAYQ,UAAW,qBAI9C,qBAAKzC,UAAU,aAAf,SACE,sBAAKA,UAAU,0CAAf,UACE,sBAAMA,UAAU,+BAAhB,8BAGA,sBAAMA,UAAU,0BAAhB,SACG2B,KAAK5B,MAAMkC,YAAYS,kBAI9B,qBAAK1C,UAAU,aAAf,SACE,sBAAKA,UAAU,0CAAf,UACE,sBAAMA,UAAU,+BAAhB,4BAGA,uBAAMA,UAAU,0BAAhB,UACG2B,KAAK5B,MAAMkC,YAAYU,SAAW,GADrC,SAC+C,IAC5ChB,KAAK5B,MAAMkC,YAAYU,SAAW,GAAK,GACtC,gCAAMhB,KAAK5B,MAAMkC,YAAYU,SAAW,GAAxC,mBAKR,qBAAK3C,UAAU,aAAf,SACE,sBAAKA,UAAU,0BAAf,UACE,sBAAMA,UAAU,+BAAhB,+BAGA,sBAAMA,UAAU,0DAAhB,SACG2B,KAAK5B,MAAMkC,YAAYW,mBAI9B,qBAAK5C,UAAU,aAAf,SACE,sBAAKA,UAAU,0BAAf,UACE,sBAAMA,UAAU,+BAAhB,2CAGA,qBACEA,UAAU,kCACV6C,wBAAyB,CACvBC,OAAQnB,KAAK5B,MAAMkC,YAAYc,qBAO3C,sBAAK/C,UAAU,0CAAf,UACE,qBAAKA,UAAU,mHAAf,SACE,sBAAKA,UAAU,mCAAf,UACE,cAAC,IAAD,CAAcA,UAAU,2BAD1B,4BAKF,sBAAKA,UAAU,iCAAf,UACE,qBAAKA,UAAU,aAAf,SACE,sBAAKA,UAAU,8CAAf,UACE,sBAAMA,UAAU,+BAAhB,uBAGA,sBAAMA,UAAU,0BAAhB,SACG2B,KAAK5B,MAAMuB,cAAcC,iBAAzB,UACCI,KAAK5B,MAAMuB,cAAcC,eAAeZ,MACtC,SAACC,GAAD,YACiCX,IAA/B,EAAKF,MAAMmC,iBACXtB,EAAIoC,YACF,EAAKjD,MAAMmC,gBAAgBc,oBALlC,aACC,EAKGC,sBAIX,qBAAKjD,UAAU,aAAf,SACE,sBAAKA,UAAU,8CAAf,UACE,sBAAMA,UAAU,+BAAhB,uBAGA,sBAAMA,UAAU,0BAAhB,SACG2B,KAAK5B,MAAMuB,cAAcC,iBAAzB,UACCI,KAAK5B,MAAMuB,cAAcC,eAAeZ,MACtC,SAACC,GAAD,YACiCX,IAA/B,EAAKF,MAAMmC,iBACXtB,EAAIoC,YACF,EAAKjD,MAAMmC,gBAAgBc,oBALlC,aACC,EAKGE,sBAIX,qBAAKlD,UAAU,aAAf,SACE,sBAAKA,UAAU,8CAAf,UACE,uBAAMA,UAAU,+BAAhB,oBACU,OAEV,sBAAMA,UAAU,0BAAhB,SACG2B,KAAK5B,MAAMmC,gBAAgBiB,mBAIlC,qBAAKnD,UAAU,aAAf,SACE,sBAAKA,UAAU,8CAAf,UACE,uBAAMA,UAAU,+BAAhB,yBACe,OAEf,sBAAMA,UAAU,0BAAhB,SACG2B,KAAK5B,MAAMmC,gBAAgBkB,mBAIlC,qBAAKpD,UAAU,aAAf,SACE,sBAAKA,UAAU,8CAAf,UACE,sBAAMA,UAAU,+BAAhB,6BAGA,sBAAMA,UAAU,0BAAhB,SACG2B,KAAK5B,MAAMmC,gBAAgBmB,sC,GA3MxBC,a,kCCkeXC,G,OA3cf,4MAIEC,oBAAsB,SAACnD,GACrB,GAAiC,OAA7B,EAAKN,MAAM0D,cAAwB,CACrC,IAAIC,EAAQ,EAAK3D,MAAM0D,cAAc9C,MACnC,SAACC,GAAD,OAASA,EAAI+C,YAActD,EAAKsD,aAElC,QAAc1D,IAAVyD,EACF,OAAOA,EAAML,gBAGjB,MAAO,IAbX,4CAeE,WAAU,IAAD,OACHO,EAAyBjC,KAAK5B,MAAM8D,iBAAiBC,QAAQC,QAC/D,SAACnD,GAAD,OAGe,IAFb,EAAKb,MAAM6B,cAAcoC,gBAAgBD,QACvC,SAACE,GAAD,OAAQA,EAAGC,SAAWtD,EAAI+C,aAC1BxD,QAAuD,OAAvC,EAAKJ,MAAMoE,SAASvD,EAAI+C,cAE1CS,EAAsBzC,KAAK5B,MAAM8D,iBAAiBC,QAAQC,QAC5D,SAACnD,GAAD,OAGe,IAFb,EAAKb,MAAM6B,cAAcoC,gBAAgBD,QACvC,SAACE,GAAD,OAAQA,EAAGC,SAAWtD,EAAI+C,aAC1BxD,QAAuD,OAAvC,EAAKJ,MAAMoE,SAASvD,EAAI+C,cAE1CU,EAAe,sBAAOD,GAAP,YAA+BR,IAC9CU,EACFV,EAAuBzD,OAASiE,EAAoBjE,OACtD,OACE,qBAAKH,UAAU,qBAAf,SACE,sBAAKA,UAAU,gCAAf,UACE,sBAAKA,UAAU,+DAAf,UACE,sBAAMA,UAAU,aAAhB,2BACA,sBAAMA,UAAU,sFAAhB,SACmC,OAAhC2B,KAAK5B,MAAM8D,kBACmB,OAA7BlC,KAAK5B,MAAM0D,gBACiB,IAA5B9B,KAAK5B,MAAMwE,cACXD,OAGN,qBAAKtE,UAAU,sBAAf,SACmC,OAAhC2B,KAAK5B,MAAM8D,kBACiB,OAA7BlC,KAAK5B,MAAM0D,gBACiB,IAA5B9B,KAAK5B,MAAMwE,aACT,cAACpC,EAAA,EAAD,IAC6B,IAA3BkC,EAAgBlE,OAClB,sBAAKH,UAAU,kFAAf,UACE,qBAAKA,UAAU,mDAAf,SACE,cAAC,IAAD,MAEF,qBAAKA,UAAU,gBAAf,gCAGFqE,EAAgBjE,KAAI,SAACC,EAAMC,GAAP,+BAClB,qBAEEN,UAAS,0CAFX,SAIE,sBAAKA,UAAU,6BAAf,UAEE,sBAAKA,UAAU,0EAAf,UACE,qBAAKA,UAAU,mCAAf,SACE,qBACEA,UAAS,wFADX,SAG2C,OAAxC,EAAKD,MAAMoE,SAAS9D,EAAKsD,WACxB,cAAC,IAAD,CAAU3D,UAAU,2BAEpB,cAAC,IAAD,CAA2BA,UAAU,+BAI3C,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAS,mCAAd,SACGK,EAAKmE,cAER,sBAAKxE,UAAU,iDAAf,UACE,uBAAMA,UAAU,wBAAhB,uBACa,OAE4B,OAAxC,EAAKD,MAAMoE,SAAS9D,EAAKsD,WACxB,sBAAK3D,UAAU,mCAAf,UACGyE,YACC,EAAK1E,MAAMoE,SAAS9D,EAAKsD,WAAYlB,UACrC,EAAK1C,MAAMoE,SAAS9D,EAAKsD,WAAYjB,WACrC,EAAK3C,MAAMoE,SAAS9D,EAAKsD,WAAYe,YACjCC,IAAeC,OACnB,sBAAM5E,UAAU,wDAAhB,SACGyE,YACC,EAAK1E,MAAMoE,SAAS9D,EAAKsD,WACtBlB,UACH,EAAK1C,MAAMoE,SAAS9D,EAAKsD,WACtBjB,WACH,EAAK3C,MAAMoE,SAAS9D,EAAKsD,WACtBe,YAGLD,YACA,EAAK1E,MAAMoE,SAAS9D,EAAKsD,WACtBlB,UACH,EAAK1C,MAAMoE,SAAS9D,EAAKsD,WACtBjB,WACH,EAAK3C,MAAMoE,SAAS9D,EAAKsD,WAAYe,YACjCC,IAAeE,QACrB,sBAAM7E,UAAU,mCAAhB,SACGyE,YACC,EAAK1E,MAAMoE,SAAS9D,EAAKsD,WACtBlB,UACH,EAAK1C,MAAMoE,SAAS9D,EAAKsD,WACtBjB,WACH,EAAK3C,MAAMoE,SAAS9D,EAAKsD,WACtBe,YAIP,sBAAM1E,UAAU,SAAhB,SACGyE,YACC,EAAK1E,MAAMoE,SAAS9D,EAAKsD,WACtBlB,UACH,EAAK1C,MAAMoE,SAAS9D,EAAKsD,WACtBjB,WACH,EAAK3C,MAAMoE,SAAS9D,EAAKsD,WACtBe,YAIT,sBAAM1E,UAAU,kCAAhB,SACGO,YACC,EAAKR,MAAMoE,SAAS9D,EAAKsD,WACtBlB,UACH,gBAGJ,sBACEzC,UAAS,qEADX,SAII,EAAKD,MAAMoE,SAAS9D,EAAKsD,WACtBjB,gBAKT,sBAAM1C,UAAU,wBAAhB,8CAQR,qBAAKA,UAAU,mFAAf,SACgC,OAA7B,EAAKD,MAAM0D,cACV,QAGMxD,IAFJ,EAAKF,MAAM0D,cAAc9C,MACzB,SAACC,GAAD,OAASA,EAAI+C,YAActD,EAAKsD,aAElC,qCACE,sBAAK3D,UAAU,iDAAf,UACE,uBAAMA,UAAU,wBAAhB,6BACmB,OAEnB,sBAAMA,UAAU,+DAAhB,SACG,EAAKwD,oBAAoBnD,QAG9B,sBAAKL,UAAU,iDAAf,UAIE,uBAAMA,UAAS,kCAAf,oBACU,IACsB,OAA7B,EAAKD,MAAM0D,cACV,QAGMxD,IAFJ,EAAKF,MAAM0D,cAAc9C,MACzB,SAACC,GAAD,OAASA,EAAI+C,YAActD,EAAKsD,aADhC,UAGF,EAAK5D,MAAM0D,cAAc9C,MACvB,SAACC,GAAD,OAASA,EAAI+C,YAActD,EAAKsD,oBAJhC,aAGF,EAEGR,YAEH,sBAAMnD,UAAU,iBAAhB,qCAKJ,uBAAMA,UAAS,kCAAf,kBACQ,IACwB,OAA7B,EAAKD,MAAM0D,cACV,QAGMxD,IAFJ,EAAKF,MAAM0D,cAAc9C,MACzB,SAACC,GAAD,OAASA,EAAI+C,YAActD,EAAKsD,aAIf,KAFnB,YAAK5D,MAAM0D,cAAc9C,MACvB,SAACC,GAAD,OAASA,EAAI+C,YAActD,EAAKsD,oBADlC,eAEGP,aACD,sBAAMpD,UAAU,4DAAhB,oEAKA,uBAAMA,UAAU,8CAAhB,gBACM,IADN,UAGI,EAAKD,MAAM0D,cAAc9C,MACvB,SAACC,GAAD,OACEA,EAAI+C,YAActD,EAAKsD,oBAL/B,aAGI,EAGGP,eAKT,sBAAMpD,UAAU,iBAAhB,2CAQR,sBAAKA,UAAU,iDAAf,UACE,cAAC,IAAD,CAAoBA,UAAU,4BAC9B,sBAAMA,UAAU,iCAAhB,uCAON,sBAAKA,UAAU,0FAAf,UACgC,OAA7B,EAAKD,MAAM0D,cACV,QAGMxD,IAFJ,EAAKF,MAAM0D,cAAc9C,MACzB,SAACC,GAAD,OAASA,EAAI+C,YAActD,EAAKsD,aAElC,sBAAK3D,UAAU,gEAAf,WAC+B,IAA5B,EAAKD,MAAMwE,eACoB,IAAhC,EAAKxE,MAAM+E,iBACT,qBAAK9E,UAAU,gEAAf,+BAMMC,IAFJ,EAAKF,MAAM6B,cAAcoC,gBAAgBrD,MACzC,SAACC,GAAD,OAASA,EAAIsD,SAAW7D,EAAKsD,cAEW,OAAxC,EAAK5D,MAAMoE,SAAS9D,EAAKsD,YACzBc,YACE,EAAK1E,MAAMoE,SAAS9D,EAAKsD,WAAYlB,UACrC,EAAK1C,MAAMoE,SAAS9D,EAAKsD,WAAYjB,WACrC,EAAK3C,MAAMoE,SAAS9D,EAAKsD,WAAYe,YACjCC,IAAeI,SACmB,OAAxC,EAAKhF,MAAMoE,SAAS9D,EAAKsD,aACzB,8BACE,qBACEpB,QAAS,kBACP,EAAKxC,MAAMiF,eAAe3E,IAE5BL,UAAU,6JAJZ,gCAWuB,IAA5B,EAAKD,MAAMwE,eACoB,IAAhC,EAAKxE,MAAM+E,iBACT,qBAAK9E,UAAU,gEAAf,yBAIwC,OAAxC,EAAKD,MAAMoE,SAAS9D,EAAKsD,iBAEvB1D,KADF,YAAKF,MAAMoE,SAAS9D,EAAKsD,kBAAzB,eAAqCO,UAErC,YAAKnE,MAAM6B,cAAcoC,gBAAgBrD,MACvC,SAACC,GAAD,OAASA,EAAIsD,SAAW7D,EAAKsD,oBAD/B,eAEGsB,eAAgBC,IAAeC,SAClCV,YACE,EAAK1E,MAAMoE,SAAS9D,EAAKsD,WAAYlB,UACrC,EAAK1C,MAAMoE,SAAS9D,EAAKsD,WAAYjB,WACrC,EAAK3C,MAAMoE,SAAS9D,EAAKsD,WAAYe,YACjCC,IAAeC,QACrB,EAAK7E,MAAMqF,2BACRtE,qBACDuE,IAAkBC,aAClB,qBACE/C,QAAS,WACP,EAAKxC,MAAMmE,OAAOJ,SAChB,EAAK/D,MAAMwF,kBACT,EAAKxF,MAAMmE,OAAOJ,QAAQnD,MACxB,SAACC,GAAD,OACEA,EAAI+C,YAActD,EAAKsD,cAI7B,OADF,EAAK5D,MAAMoE,SAAS9D,EAAKsD,YAEvB,EAAKxC,SAAS,CACZqE,wBAAyB,CACvBtE,QAAQ,EACRb,KAAM,EAAKN,MAAMoE,SACf9D,EAAKsD,eAKf3D,UAAU,wHApBZ,sBA0ByB,IAA5B,EAAKD,MAAMwE,eACoB,IAAhC,EAAKxE,MAAM+E,iBACT,qBAAK9E,UAAU,gEAAf,yBAIuC,OAAvC,EAAKD,MAAM0F,QAAQC,kBAEjB,IADF,EAAK3F,MAAM0F,QAAQC,gBAAgBC,WAEK,OAAxC,EAAK5F,MAAMoE,SAAS9D,EAAKsD,iBAEvB1D,KADF,YAAKF,MAAMoE,SAAS9D,EAAKsD,kBAAzB,eAAqCiC,KAErCnB,YACE,EAAK1E,MAAMoE,SAAS9D,EAAKsD,WAAYlB,UACrC,EAAK1C,MAAMoE,SAAS9D,EAAKsD,WAAYjB,WACrC,EAAK3C,MAAMoE,SAAS9D,EAAKsD,WAAYe,YACjCC,IAAeC,QACrB,EAAK7E,MAAMqF,2BACRtE,qBACDuE,IAAkBC,aAClB,qBACE/C,QAAS,WAC6B,OAAhC,EAAKxC,MAAM8D,mBAGT,OADF,EAAK9D,MAAM8F,UAAUC,mBAErB,EAAK/F,MAAM8F,UAAUC,kBAClBC,cACD,EAAKhG,MAAM8D,iBAAiBkC,aAE9B,EAAKhG,MAAMiG,oBACT,EAAKjG,MAAM8D,kBAGc,OAA7B,EAAK9D,MAAM0D,eACT,EAAK1D,MAAMmE,OAAOJ,SAClB,EAAK/D,MAAMwF,kBACT,EAAKxF,MAAMmE,OAAOJ,QAAQnD,MACxB,SAACC,GAAD,OACEA,EAAI+C,YAActD,EAAKsD,cAGF,OAA7B,EAAK5D,MAAM0D,eAEP,OADF,EAAK1D,MAAMoE,SAAS9D,EAAKsD,YAEzB,EAAK5D,MAAMyC,yBACT,EAAKzC,MAAMoE,SAAS9D,EAAKsD,YAE7B,EAAK5D,MAAMkG,cAAa,GACxB,EAAKlG,MAAM0D,eACT,EAAK1D,MAAMmG,sBACT,EAAKnG,MAAMqF,2BACRe,oBAAoBC,IACvB/F,EAAKsD,UACL,EAAK5D,MAAM0D,cAAc9C,MACvB,SAACC,GAAD,OACEA,EAAI+C,YAActD,EAAKsD,aACxB0C,YACH,EAAKtG,MAAM0D,cAAc9C,MACvB,SAACC,GAAD,OACEA,EAAI+C,YAActD,EAAKsD,aACxBX,UACH,EAAKjD,MAAM0D,cAAc9C,MACvB,SAACC,GAAD,OACEA,EAAI+C,YAActD,EAAKsD,aACxB2C,QACH,EAAKvG,MAAM8D,kBACX,EACA,EAAK9D,MAAMwG,mBAInBvG,UAAS,sBACP,YAAKD,MAAM6B,cAAcoC,gBAAgBrD,MACvC,SAACC,GAAD,OAASA,EAAIsD,SAAW7D,EAAKsD,oBAD/B,eAEGsB,eAAgBC,IAAeC,QAC9B,kDACA,qDALG,uEApDX,UA4DG,YAAKpF,MAAM6B,cAAcoC,gBAAgBrD,MACxC,SAACC,GAAD,OAASA,EAAIsD,SAAW7D,EAAKsD,oBAD9B,eAEEsB,eAAgBC,IAAeC,QAC9B,aACA,iBAIT,EAAKpF,MAAMqF,2BACTtE,qBACDuE,IAAkBmB,WAClB,qBAAKxG,UAAU,iEAAf,yCAMJ,qBAAKA,UAAU,gEAAf,cAGQC,IAFL,EAAKF,MAAM6B,cAAcoC,gBAAgBrD,MACxC,SAACC,GAAD,OAASA,EAAIsD,SAAW7D,EAAKsD,cAE7B,qBACEpB,QAAS,kBAAM,EAAKxC,MAAMiF,eAAe3E,IACzCL,UAAU,yIAFZ,iCAWAC,IAFL,EAAKF,MAAM6B,cAAcoC,gBAAgBrD,MACxC,SAACC,GAAD,OAASA,EAAIsD,SAAW7D,EAAKsD,eAE7B,YAAK5D,MAAM6B,cAAcoC,gBAAgBrD,MACvC,SAACC,GAAD,OAASA,EAAIsD,SAAW7D,EAAKsD,oBAD/B,eAEGsB,eAAgBC,IAAeC,SAChC,qBAAKnF,UAAU,mCAAf,SACE,qBACEA,UAAS,iEADX,SAGE,sBAAKA,UAAU,sBAAf,UACE,sBAAMA,UAAU,UAAhB,mBACA,uBAAMA,UAAU,0BAAhB,oBACG,EAAKD,MAAM6B,cAAcoC,gBACvBrD,MACC,SAACC,GAAD,OAASA,EAAIsD,SAAW7D,EAAKsD,oBAHnC,aACG,EAIG8C,YAAYC,QAAQ,GAL1B,qBAzXTpG,EAAI,iBA1D3B,GAAmCgD,c,SCmapBqD,EAnaf,4JACE,WAAU,IAAD,OAcHC,EAbsBjF,KAAK5B,MAAM8D,iBAAiBC,QAAQC,QAC5D,SAACnD,GAAD,OACyC,OAAvC,EAAKb,MAAMoE,SAASvD,EAAI+C,YACxB,EAAK5D,MAAM6B,cAAcoC,gBAAgBD,QACvC,SAACE,GAAD,OACEA,EAAGC,SAAWtD,EAAI+C,WAClBc,YACER,EAAGxB,UACHwB,EAAG4C,gBACH5C,EAAG6C,iBACCnC,IAAeC,UACvBzE,OAAS,KAE6B4D,QAC1C,SAACL,GAAD,oBAGQzD,IAFN,EAAKF,MAAM6B,cAAcoC,gBAAgBD,QACvC,SAACnD,GAAD,OAASA,EAAIsD,SAAWR,EAAMC,gBAE/B,YAAK5D,MAAM6B,cAAcoC,gBAAgBrD,MACxC,SAACC,GAAD,OAASA,EAAIsD,SAAWR,EAAMC,oBAD/B,eAEEsB,eAAgBC,IAAeC,UAChC,YAAKpF,MAAM6B,cAAcoC,gBAAgBrD,MACvC,SAACC,GAAD,OAASA,EAAIsD,SAAWR,EAAMC,oBADhC,eAEGsB,eAAgBC,IAAe6B,WAExC,OACE,mCACGH,EAAkBzG,OAAS,EAC1B,qBAAKH,UAAU,qBAAf,SACE,sBAAKA,UAAU,gCAAf,UACE,sBAAKA,UAAU,+DAAf,UACE,sBAAMA,UAAU,aAAhB,yBACA,sBAAMA,UAAU,uFAAhB,SACmC,OAAhC2B,KAAK5B,MAAM8D,kBACmB,OAA7BlC,KAAK5B,MAAM0D,gBACiB,IAA5B9B,KAAK5B,MAAMwE,cACXqC,EAAkBzG,YAGxB,qBAAKH,UAAU,sBAAf,SACmC,OAAhC2B,KAAK5B,MAAM8D,kBACiB,OAA7BlC,KAAK5B,MAAM0D,gBACiB,IAA5B9B,KAAK5B,MAAMwE,aACT,cAACpC,EAAA,EAAD,IAC+B,IAA7ByE,EAAkBzG,OACpB,sBAAKH,UAAU,kFAAf,UACE,qBAAKA,UAAU,mDAAf,SACE,cAAC,IAAD,MAEF,qBAAKA,UAAU,gBAAf,gCAGF4G,EAAkBxG,KAAI,SAACC,EAAMC,GAAP,mCACpB,qBAEEN,UAAS,+EAFX,SAIE,sBAAKA,UAAU,6BAAf,UAEE,sBAAKA,UAAU,0EAAf,eAGQC,IAFL,EAAKF,MAAM6B,cAAcoC,gBAAgBrD,MACxC,SAACC,GAAD,OAASA,EAAIsD,SAAW7D,EAAKsD,eAE7B,YAAK5D,MAAM6B,cAAcoC,gBAAgBrD,MACvC,SAACC,GAAD,OAASA,EAAIsD,SAAW7D,EAAKsD,oBAD/B,eAEGsB,eAAgBC,IAAeC,SAChC,qBAAKnF,UAAU,mCAAf,SACE,qBACEA,UAAS,kEADX,SAGE,cAAC,IAAD,CAAqBA,UAAU,sBAMjCC,IAFL,EAAKF,MAAM6B,cAAcoC,gBAAgBrD,MACxC,SAACC,GAAD,OAASA,EAAIsD,SAAW7D,EAAKsD,eAE7B,YAAK5D,MAAM6B,cAAcoC,gBAAgBrD,MACvC,SAACC,GAAD,OAASA,EAAIsD,SAAW7D,EAAKsD,oBAD/B,eAEGsB,eAAgBC,IAAe8B,MAChC,qBAAKhH,UAAU,mCAAf,SACE,qBACEA,UAAS,iEADX,SAGE,cAAC,IAAD,CAAeA,UAAU,sBAM3BC,IAFL,EAAKF,MAAM6B,cAAcoC,gBAAgBrD,MACxC,SAACC,GAAD,OAASA,EAAIsD,SAAW7D,EAAKsD,eAE7B,YAAK5D,MAAM6B,cAAcoC,gBAAgBrD,MACvC,SAACC,GAAD,OAASA,EAAIsD,SAAW7D,EAAKsD,oBAD/B,eAEGsB,eAAgBC,IAAe+B,SAChC,qBAAKjH,UAAU,mCAAf,SACE,qBACEA,UAAS,mEADX,SAGE,cAAC,IAAD,CAAeA,UAAU,sBAM3BC,IAFL,EAAKF,MAAM6B,cAAcoC,gBAAgBrD,MACxC,SAACC,GAAD,OAASA,EAAIsD,SAAW7D,EAAKsD,eAE7B,YAAK5D,MAAM6B,cAAcoC,gBAAgBrD,MACvC,SAACC,GAAD,OAASA,EAAIsD,SAAW7D,EAAKsD,oBAD/B,eAEGsB,eAAgBC,IAAe6B,QAChC,qBAAK/G,UAAU,mCAAf,SACE,qBACEA,UAAS,kEADX,SAGE,cAAC,KAAD,CAAqBA,UAAU,sBAMjCC,IAFL,EAAKF,MAAM6B,cAAcoC,gBAAgBrD,MACxC,SAACC,GAAD,OAASA,EAAIsD,SAAW7D,EAAKsD,cAEW,OAAxC,EAAK5D,MAAMoE,SAAS9D,EAAKsD,iBAEvB1D,KADF,YAAKF,MAAMoE,SAAS9D,EAAKsD,kBAAzB,eAAqCiC,KAEnC,qBAAK5F,UAAU,mCAAf,SACE,qBACEA,UAAS,8EADX,SAGE,cAAC,IAAD,CAAqBA,UAAU,sBAMjCC,IAFL,EAAKF,MAAM6B,cAAcoC,gBAAgBrD,MACxC,SAACC,GAAD,OAASA,EAAIsD,SAAW7D,EAAKsD,eAEY,OAAxC,EAAK5D,MAAMoE,SAAS9D,EAAKsD,iBAEtB1D,KADF,YAAKF,MAAMoE,SAAS9D,EAAKsD,kBAAzB,eAAqCiC,MAErC,qBAAK5F,UAAU,mCAAf,SACE,qBACEA,UAAS,wFADX,SAGE,cAAC,IAAD,CAA2BA,UAAU,iBAI7C,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAS,mCAAd,SACGK,EAAKmE,cAER,sBAAKxE,UAAU,iDAAf,UACE,uBAAMA,UAAU,wBAAhB,uBACa,OAEb,sBAAKA,UAAU,mCAAf,UACE,sBAAMA,UAAU,mCAAhB,SACGO,YACC,EAAKR,MAAMoE,SAAS9D,EAAKsD,WACtBlB,UACH,gBAGJ,sBACEzC,UAAS,sEADX,SAII,EAAKD,MAAMoE,SAAS9D,EAAKsD,WACtBjB,aAGP,sBACE1C,UAAS,+EADX,mBAII,EAAKD,MAAM6B,cAAcoC,gBAAgBrD,MACvC,SAACuG,GAAD,OAAOA,EAAEhD,SAAW7D,EAAKsD,oBAL/B,aAII,EAEGsB,0BAQf,qBAAKjF,UAAU,mFAAf,SACgC,OAA7B,EAAKD,MAAM0D,cACV,QAGMxD,IAFJ,EAAKF,MAAM0D,cAAc9C,MACzB,SAACC,GAAD,OAASA,EAAI+C,YAActD,EAAKsD,aAElC,qCACE,sBAAK3D,UAAU,iDAAf,UACE,uBAAMA,UAAU,wBAAhB,6BACmB,OAEnB,sBAAMA,UAAU,+DAAhB,SACgC,OAA7B,EAAKD,MAAM0D,cACR,QAIMxD,IAHN,EAAKF,MAAM0D,cAAc9C,MACvB,SAACC,GAAD,OACEA,EAAI+C,YAActD,EAAKsD,eAF3B,UAIA,EAAK5D,MAAM0D,cAAc9C,MACvB,SAACC,GAAD,OACEA,EAAI+C,YAActD,EAAKsD,oBAN3B,aAIA,EAGGN,sBAGX,sBAAKrD,UAAU,iDAAf,UAIE,uBACEA,UAAS,kCADX,oBAGU,IACsB,OAA7B,EAAKD,MAAM0D,cACV,QAGMxD,IAFJ,EAAKF,MAAM0D,cAAc9C,MACzB,SAACC,GAAD,OAASA,EAAI+C,YAActD,EAAKsD,aADhC,UAGF,EAAK5D,MAAM0D,cAAc9C,MACvB,SAACC,GAAD,OAASA,EAAI+C,YAActD,EAAKsD,oBAJhC,aAGF,EAEGR,YAEH,sBAAMnD,UAAU,iBAAhB,qCAKJ,uBACEA,UAAS,kCADX,kBAGQ,IACwB,OAA7B,EAAKD,MAAM0D,cACV,QAGMxD,IAFJ,EAAKF,MAAM0D,cAAc9C,MACzB,SAACC,GAAD,OAASA,EAAI+C,YAActD,EAAKsD,aAIf,KAFnB,YAAK5D,MAAM0D,cAAc9C,MACvB,SAACC,GAAD,OAASA,EAAI+C,YAActD,EAAKsD,oBADlC,eAEGP,aACD,sBAAMpD,UAAU,4DAAhB,oEAKA,uBAAMA,UAAU,8CAAhB,gBACM,IADN,UAGI,EAAKD,MAAM0D,cAAc9C,MACvB,SAACC,GAAD,OACEA,EAAI+C,YAActD,EAAKsD,oBAL/B,aAGI,EAGGP,eAKT,sBAAMpD,UAAU,iBAAhB,2CAQR,sBAAKA,UAAU,iDAAf,UACE,cAAC,IAAD,CAAoBA,UAAU,4BAC9B,sBAAMA,UAAU,iCAAhB,uCAON,qBAAKA,UAAU,0FAAf,SACgC,OAA7B,EAAKD,MAAM0D,cACV,QAGMxD,IAFJ,EAAKF,MAAM0D,cAAc9C,MACzB,SAACC,GAAD,OAASA,EAAI+C,YAActD,EAAKsD,aAElC,sBAAK3D,UAAU,gEAAf,WAC+B,IAA5B,EAAKD,MAAMwE,eACoB,IAAhC,EAAKxE,MAAM+E,iBACT,qBAAK9E,UAAU,gEAAf,8BAMMC,IAFN,EAAKF,MAAM6B,cAAcoC,gBAAgBrD,MACvC,SAACC,GAAD,OAASA,EAAIsD,SAAW7D,EAAKsD,cAE7B,qBACEpB,QAAS,WACP,EAAKpB,SAAS,CACZgG,eAAgB9G,EAChB+G,cAAc,IAEhB,EAAKrH,MAAMsH,iBAAgB,IAE7BrH,UAAU,6JARZ,8BAcyB,IAA5B,EAAKD,MAAMwE,eACoB,IAAhC,EAAKxE,MAAM+E,iBACT,qBAAK9E,UAAU,gEAAf,yBAIuC,OAAvC,EAAKD,MAAM0F,QAAQC,kBAEjB,IADF,EAAK3F,MAAM0F,QAAQC,gBAAgBC,WAEK,OAAxC,EAAK5F,MAAMoE,SAAS9D,EAAKsD,iBAEvB1D,KADF,YAAKF,MAAMoE,SAAS9D,EAAKsD,kBAAzB,eAAqCiC,KAErC,EAAK7F,MAAMqF,2BACRtE,qBACDuE,IAAkBC,aAClB,qBACE/C,QAAS,WAE2B,OAAhC,EAAKxC,MAAM8D,mBAIgB,OADzB,EAAK9D,MAAM8F,UACRC,mBACH,EAAK/F,MAAM8F,UAAUC,kBAClBC,cACD,EAAKhG,MAAM8D,iBACRkC,aAEL,EAAKhG,MAAMiG,oBACT,EAAKjG,MAAM8D,kBAGc,OAA7B,EAAK9D,MAAM0D,eACT,EAAK1D,MAAMmE,OAAOJ,SAClB,EAAK/D,MAAMwF,kBACT,EAAKxF,MAAMmE,OAAOJ,QAAQnD,MACxB,SAACC,GAAD,OACEA,EAAI+C,YAActD,EAAKsD,cAGF,OAA7B,EAAK5D,MAAM0D,eAGH,OAFN,EAAK1D,MAAMoE,SACT9D,EAAKsD,YAEP,EAAK5D,MAAMyC,yBACT,EAAKzC,MAAMoE,SAAS9D,EAAKsD,YAE7B,EAAK5D,MAAMkG,cAAa,GACxB,EAAKlG,MAAM0D,eACT,EAAK1D,MAAMmG,sBACT,EAAKnG,MACFqF,2BACAe,oBAAoBC,IACvB/F,EAAKsD,UACL,EAAK5D,MAAM0D,cAAc9C,MACvB,SAACC,GAAD,OACEA,EAAI+C,YAActD,EAAKsD,aACxB0C,YACH,EAAKtG,MAAM0D,cAAc9C,MACvB,SAACC,GAAD,OACEA,EAAI+C,YAActD,EAAKsD,aACxBX,UACH,EAAKjD,MAAM0D,cAAc9C,MACvB,SAACC,GAAD,OACEA,EAAI+C,YAActD,EAAKsD,aACxB2C,QACH,EAAKvG,MAAM8D,kBACX,EACA,EAAK9D,MAAMwG,mBAInBvG,UAAS,mIAzDX,6BAiEN,qBAAKA,UAAU,gEAAf,cAGQC,IAFL,EAAKF,MAAM6B,cAAcoC,gBAAgBrD,MACxC,SAACC,GAAD,OAASA,EAAIsD,SAAW7D,EAAKsD,cAE7B,qBACEpB,QAAS,kBACP,EAAKpB,SAAS,CACZgG,eAAgB9G,EAChB+G,cAAc,KAGlBpH,UAAU,yIAPZ,kCA7ULM,EAAI,aAoWrB,8BA5ZV,GAAiCgD,aCoYlBgE,EA/Yf,kDACE,WAAYvH,GAAwB,IAAD,8BACjC,cAAMA,IAQRwH,mBAAqB,SAACC,GACpB,IAAMC,EAAW,EAAK1H,MAAM6B,cAAc8F,gBAAgB/G,MACxD,SAACC,GAAD,OAASA,EAAIsD,SAAWsD,EAAKtD,QAAUtD,EAAI+G,SAAWH,EAAKG,UAE7D,QAAiB1H,IAAbwH,EAAwB,CAC1B,IAAIG,EAAiB,EAAK7H,MAAM8D,iBAAiBC,QAAQnD,MACvD,SAACC,GAAD,OAASA,EAAI+C,YAAc8D,EAASvD,eAEfjE,IAAnB2H,GACF,EAAK7H,MAAM8H,iBAAiB,CAC1B3D,OAAQuD,EAASvD,OACjBM,YAAaoD,EAAepD,YAC5B5B,YAAa6E,EAAS7E,YACtBG,OAAQ0E,EAAS1E,OACjB+E,MAAOL,EAASK,MAChBH,OAAQH,EAAKG,OACblF,UAAW+E,EAAK/E,UAChBsF,QAASP,EAAKQ,eAvBpB,EAAKtG,MAAQ,CACXN,SAAS,EACTgG,cAAc,EACdD,eAAgB,MANe,EADrC,0CAgCE,WAAU,IAAD,OACHc,EAAkBtG,KAAK5B,MAAM8D,iBAAiBC,QAAQC,QACxD,SAACnD,GAAD,OACyC,OAAvC,EAAKb,MAAMoE,SAASvD,EAAI+C,YACxB,EAAK5D,MAAM6B,cAAcoC,gBAAgBD,QACvC,SAACE,GAAD,OACEA,EAAGC,SAAWtD,EAAI+C,YACjBM,EAAGgB,cAAgBC,IAAe8B,MACjC/C,EAAGgB,cAAgBC,IAAe+B,SAClCxC,YACER,EAAGxB,UACHwB,EAAG4C,gBACH5C,EAAG6C,iBACCnC,IAAeE,YACzB1E,OAAS,KAGf,OACE,qBAAKH,UAAU,qBAAf,SACE,sBAAKA,UAAU,gCAAf,UACE,sBAAKA,UAAU,+DAAf,UACE,sBAAMA,UAAU,aAAhB,6BACA,sBAAMA,UAAU,sFAAhB,SACmC,OAAhC2B,KAAK5B,MAAM8D,kBACmB,OAA7BlC,KAAK5B,MAAM0D,gBACiB,IAA5B9B,KAAK5B,MAAMwE,cACX0D,EAAgB9H,YAGtB,qBAAKH,UAAU,sBAAf,SACmC,OAAhC2B,KAAK5B,MAAM8D,kBACiB,OAA7BlC,KAAK5B,MAAM0D,gBACiB,IAA5B9B,KAAK5B,MAAMwE,aACT,cAACpC,EAAA,EAAD,IAC6B,IAA3B8F,EAAgB9H,OAClB,sBAAKH,UAAU,kFAAf,UACE,qBAAKA,UAAU,mDAAf,SACE,cAAC,IAAD,MAEF,qBAAKA,UAAU,gBAAf,gCAGFiI,EAAgB7H,KAAI,SAACC,EAAMC,GAAP,uCAClB,qBAAiBN,UAAS,mCAA1B,SACE,sBAAKA,UAAU,6BAAf,UAEE,sBAAKA,UAAU,0EAAf,eAGQC,IAFL,EAAKF,MAAM6B,cAAcoC,gBAAgBrD,MACxC,SAACC,GAAD,OAASA,EAAIsD,SAAW7D,EAAKsD,eAE7B,YAAK5D,MAAM6B,cAAcoC,gBAAgBrD,MACvC,SAACC,GAAD,OAASA,EAAIsD,SAAW7D,EAAKsD,oBAD/B,eAEGsB,eAAgBC,IAAeC,SAChC,qBAAKnF,UAAU,mCAAf,SACE,qBACEA,UAAS,iEADX,SAGE,cAAC,IAAD,CAAqBA,UAAU,sBAMjCC,IAFL,EAAKF,MAAM6B,cAAcoC,gBAAgBrD,MACxC,SAACC,GAAD,OAASA,EAAIsD,SAAW7D,EAAKsD,eAE7B,YAAK5D,MAAM6B,cAAcoC,gBAAgBrD,MACvC,SAACC,GAAD,OAASA,EAAIsD,SAAW7D,EAAKsD,oBAD/B,eAEGsB,eAAgBC,IAAe8B,MAChC,qBAAKhH,UAAU,mCAAf,SACE,qBACEA,UAAS,iEADX,SAGE,cAAC,IAAD,CAAeA,UAAU,sBAM3BC,IAFL,EAAKF,MAAM6B,cAAcoC,gBAAgBrD,MACxC,SAACC,GAAD,OAASA,EAAIsD,SAAW7D,EAAKsD,eAE7B,YAAK5D,MAAM6B,cAAcoC,gBAAgBrD,MACvC,SAACC,GAAD,OAASA,EAAIsD,SAAW7D,EAAKsD,oBAD/B,eAEGsB,eAAgBC,IAAe+B,SAChC,qBAAKjH,UAAU,mCAAf,SACE,qBACEA,UAAS,iEADX,SAGE,cAAC,IAAD,CAAeA,UAAU,sBAM3BC,IAFL,EAAKF,MAAM6B,cAAcoC,gBAAgBrD,MACxC,SAACC,GAAD,OAASA,EAAIsD,SAAW7D,EAAKsD,eAE7B,YAAK5D,MAAM6B,cAAcoC,gBAAgBrD,MACvC,SAACC,GAAD,OAASA,EAAIsD,SAAW7D,EAAKsD,oBAD/B,eAEGsB,eAAgBC,IAAe6B,QAChC,qBAAK/G,UAAU,mCAAf,SACE,qBACEA,UAAS,iEADX,SAGE,cAAC,KAAD,CAAqBA,UAAU,sBAMjCC,IAFL,EAAKF,MAAM6B,cAAcoC,gBAAgBrD,MACxC,SAACC,GAAD,OAASA,EAAIsD,SAAW7D,EAAKsD,cAEW,OAAxC,EAAK5D,MAAMoE,SAAS9D,EAAKsD,iBAEvB1D,KADF,YAAKF,MAAMoE,SAAS9D,EAAKsD,kBAAzB,eAAqCiC,KAEnC,qBAAK5F,UAAU,mCAAf,SACE,qBACEA,UAAS,8EADX,SAGE,cAAC,IAAD,CAAqBA,UAAU,sBAMjCC,IAFL,EAAKF,MAAM6B,cAAcoC,gBAAgBrD,MACxC,SAACC,GAAD,OAASA,EAAIsD,SAAW7D,EAAKsD,eAEY,OAAxC,EAAK5D,MAAMoE,SAAS9D,EAAKsD,iBAEtB1D,KADF,YAAKF,MAAMoE,SAAS9D,EAAKsD,kBAAzB,eAAqCiC,MAErC,qBAAK5F,UAAU,mCAAf,SACE,qBACEA,UAAS,wFADX,SAGE,cAAC,IAAD,CAA2BA,UAAU,iBAI7C,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAS,mCAAd,SACGK,EAAKmE,cAER,sBAAKxE,UAAU,iDAAf,UACE,uBAAMA,UAAU,wBAAhB,uBACa,OAEb,sBAAKA,UAAU,mCAAf,UACE,sBAAMA,UAAU,kCAAhB,SACGO,YACC,EAAKR,MAAMoE,SAAS9D,EAAKsD,WAAYlB,UACrC,gBAGJ,sBACEzC,UAAS,qEADX,SAGG,EAAKD,MAAMoE,SAAS9D,EAAKsD,WAAYjB,aAExC,sBACE1C,UAAS,+EADX,cAKQC,IAFL,EAAKF,MAAM6B,cAAcoC,gBAAgBrD,MACxC,SAACuG,GAAD,OAAOA,EAAEhD,SAAW7D,EAAKsD,aAEvBc,YACE,EAAK1E,MAAM6B,cAAcoC,gBAAgBrD,MACvC,SAACuG,GAAD,OAAOA,EAAEhD,SAAW7D,EAAKsD,aACxBlB,UACH,EAAK1C,MAAM6B,cAAcoC,gBAAgBrD,MACvC,SAACuG,GAAD,OAAOA,EAAEhD,SAAW7D,EAAKsD,aACxBkD,gBACH,EAAK9G,MAAM6B,cAAcoC,gBAAgBrD,MACvC,SAACuG,GAAD,OAAOA,EAAEhD,SAAW7D,EAAKsD,aACxBmD,iBACCnC,IAAeE,UACpB,YAAK9E,MAAM6B,cAAcoC,gBAAgBrD,MACxC,SAACuG,GAAD,OAAOA,EAAEhD,SAAW7D,EAAKsD,oBAD1B,eAEEsB,eAAgBC,IAAeC,UAE9B,YAAKpF,MAAM6B,cAAcoC,gBAAgBrD,MACvC,SAACuG,GAAD,OAAOA,EAAEhD,SAAW7D,EAAKsD,oBAD3B,eAEGsB,eAAgBC,IAAe6B,OAjBtC,UAmBE,EAAKhH,MAAM6B,cAAcoC,gBAAgBrD,MACvC,SAACuG,GAAD,OAAOA,EAAEhD,SAAW7D,EAAKsD,oBApB7B,aAmBE,EAEGsB,YAHH,SAIF,iBAOd,qBAAKjF,UAAU,mFAAf,SACgC,OAA7B,EAAKD,MAAM0D,cACV,QAGMxD,IAFJ,EAAKF,MAAM0D,cAAc9C,MACzB,SAACC,GAAD,OAASA,EAAI+C,YAActD,EAAKsD,aAElC,qCACE,sBAAK3D,UAAU,iDAAf,UACE,uBAAMA,UAAU,wBAAhB,6BACmB,OAEnB,sBAAMA,UAAU,+DAAhB,SACgC,OAA7B,EAAKD,MAAM0D,cACR,QAGMxD,IAFN,EAAKF,MAAM0D,cAAc9C,MACvB,SAACC,GAAD,OAASA,EAAI+C,YAActD,EAAKsD,eADlC,UAGA,EAAK5D,MAAM0D,cAAc9C,MACvB,SAACC,GAAD,OAASA,EAAI+C,YAActD,EAAKsD,oBAJlC,aAGA,EAEGN,sBAGX,sBAAKrD,UAAU,iDAAf,UAIE,uBAAMA,UAAS,kCAAf,oBACU,IACsB,OAA7B,EAAKD,MAAM0D,cACV,QAGMxD,IAFJ,EAAKF,MAAM0D,cAAc9C,MACzB,SAACC,GAAD,OAASA,EAAI+C,YAActD,EAAKsD,aADhC,UAGF,EAAK5D,MAAM0D,cAAc9C,MACvB,SAACC,GAAD,OAASA,EAAI+C,YAActD,EAAKsD,oBAJhC,aAGF,EAEGR,YAEH,sBAAMnD,UAAU,iBAAhB,qCAKJ,uBAAMA,UAAS,kCAAf,kBACQ,IACwB,OAA7B,EAAKD,MAAM0D,cACV,QAGMxD,IAFJ,EAAKF,MAAM0D,cAAc9C,MACzB,SAACC,GAAD,OAASA,EAAI+C,YAActD,EAAKsD,aAIf,KAFnB,YAAK5D,MAAM0D,cAAc9C,MACvB,SAACC,GAAD,OAASA,EAAI+C,YAActD,EAAKsD,oBADlC,eAEGP,aACD,sBAAMpD,UAAU,4DAAhB,oEAKA,uBAAMA,UAAU,8CAAhB,gBACM,IADN,UAGI,EAAKD,MAAM0D,cAAc9C,MACvB,SAACC,GAAD,OACEA,EAAI+C,YAActD,EAAKsD,oBAL/B,aAGI,EAGGP,eAKT,sBAAMpD,UAAU,iBAAhB,2CAQR,sBAAKA,UAAU,iDAAf,UACE,cAAC,IAAD,CAAoBA,UAAU,4BAC9B,sBAAMA,UAAU,iCAAhB,uCAON,sBAAKA,UAAU,qFAAf,UACgC,OAA7B,EAAKD,MAAM0D,cACV,QAGMxD,IAFJ,EAAKF,MAAM0D,cAAc9C,MACzB,SAACC,GAAD,OAASA,EAAI+C,YAActD,EAAKsD,aAElC,qBAAK3D,UAAU,gEAAf,UAC+B,IAA5B,EAAKD,MAAMwE,eACoB,IAAhC,EAAKxE,MAAM+E,iBACT,qBAAK9E,UAAU,gEAAf,8BAMMC,IAFN,EAAKF,MAAM6B,cAAcoC,gBAAgBrD,MACvC,SAACC,GAAD,OAASA,EAAIsD,SAAW7D,EAAKsD,cAE7B,qBACEpB,QAAS,WACP,EAAKpB,SAAS,CACZgG,eAAgB9G,EAChB+G,cAAc,IAEhB,EAAKrH,MAAMsH,iBAAgB,IAE7BrH,UAAU,6JARZ,+BAgBN,qBAAKA,UAAU,gEAAf,cAGQC,IAFL,EAAKF,MAAM6B,cAAcoC,gBAAgBrD,MACxC,SAACC,GAAD,OAASA,EAAIsD,SAAW7D,EAAKsD,cAE7B,qBACEpB,QAAS,kBACP,EAAKpB,SAAS,CACZgG,eAAgB9G,EAChB+G,cAAc,KAGlBpH,UAAU,yIAPZ,iCAgBAC,IAFL,EAAKF,MAAM6B,cAAcoC,gBAAgBrD,MACxC,SAACC,GAAD,OAASA,EAAIsD,SAAW7D,EAAKsD,cAK7B,qBAAK3D,UAAU,sDAAf,SACE,sBACEA,UAAS,iEADX,UAGE,sBAAKA,UAAU,sBAAf,UACE,sBAAMA,UAAU,UAAhB,mBACA,uBAAMA,UAAU,0BAAhB,oBACG,EAAKD,MAAM6B,cAAcoC,gBACvBrD,MAAK,SAACC,GAAD,OAASA,EAAIsD,SAAW7D,EAAKsD,oBAFvC,aACG,EAEG8C,YAAYC,QAAQ,GAH1B,UAOF,qBACEnE,QAAS,kBACP,EAAKgF,mBACH,EAAKxH,MAAM6B,cAAcoC,gBAAgBrD,MACvC,SAACC,GAAD,OAASA,EAAIsD,SAAW7D,EAAKsD,eAInC3D,UAAU,qFARZ,iCAzSFM,EAAI,iBA3E9B,GAA+BgD,a,kDCsGzB4E,E,kDACJ,WAAYnI,GAAwB,IAAD,8BACjC,cAAMA,IAyBRoI,WAAa,SAACC,EAAiBC,GAC7BA,EAAKnH,OAASoH,IAAWnD,QACzB,EAAKpF,MAAMwI,SAASH,EAASC,GAC7B,EAAKlH,SAAS,CAAEqH,UAAU,KA7BO,EAgCnCC,SAAW,SAACvH,GACV,EAAKC,SAAS,CAAEuH,MAAOxH,KAjCU,EAoCnCyH,WAAa,WACX,EAAKxH,SAAS,CAAEiG,cAAc,IAC9B,EAAKrH,MAAMsH,iBAAgB,IAtCM,EAyCnCuB,uBAAyB,SAACC,GACgB,OAApC,EAAK9I,MAAM+I,sBACb,EAAK/I,MAAMgJ,eAAe,EAAKhJ,MAAM+I,qBAAsBD,IA3C5B,EA+CnC5H,WAAa,SAACC,GACZ,EAAKC,SAAS,CAAEC,QAASF,KAhDQ,EAkDnCqF,gBAAkB,SAACrF,GACjB,EAAKC,SAAS,CAAEoD,aAAcrD,KAnDG,EAqDnC8H,oBAAsB,SAAC9H,GACrB,EAAKC,SAAS,CAAE2D,iBAAkB5D,KAtDD,EAyDnC+H,eAAiB,SAACC,GAAoC,IAAD,gBAClCA,EAASpF,SADyB,yBAC1CzD,EAD0C,QAE7C8I,EAAO,EAAKpJ,MAAM6B,cAAcoC,gBAAgBrD,MAClD,SAACC,GAAD,OAASA,EAAIsD,SAAW7D,EAAKsD,aAE/B,QAAa1D,IAATkJ,IAEAA,EAAKlE,cAAgBC,IAAe6B,QACpCoC,EAAKlE,cAAgBC,IAAeC,SAEpC,MAAM,CAAN,GAAO,IATb,2BAAmC,CAAC,IAAD,yCADgB,8BAcnD,OAAO,GAvE0B,EA0EnCiE,mBAAqB,SACnBP,EACA/E,GAQA,IAAIuF,EAAgB,EADjB,WAEM/I,GAGS,IADduI,EAAM9E,QAAO,SAAC1D,GAAD,OAAUA,EAAKsD,YAAcG,EAAQxD,GAAGqD,aAClDxD,SAEHkJ,GAAgB,IALpB,IAAK,IAAI/I,KAAKwD,EAAU,EAAfxD,GAQT,OAAO+I,GA7F0B,EAgGnCC,aAAe,SACb3F,EACAa,EACA+E,EACAC,EACAzB,GAEA,OAAO,EAAKa,uBAAuB,CACjC,CACEjF,UAAWA,EACXN,qBAEEpD,IADAuJ,EAASC,MAAM9I,MAAK,SAACC,GAAD,OAASA,EAAI8I,YAAcC,IAASC,WAEpDD,IAASC,QACTD,IAASE,SACf7G,UAAWwG,EAASxG,UACpBqD,YAAamD,EAASnD,gBAhHO,EAqHnClC,SAAW,SAAC2F,GACV,GAAiD,OAA7C,EAAK/J,MAAM6B,cAAc8F,gBAA0B,CACrD,IAAIqC,EAAe,EAAKhK,MAAM6B,cAAc8F,gBAAgB/G,MAC1D,SAACC,GAAD,OAASA,EAAIsD,SAAW4F,KAEtBE,EAAW,EAAKjK,MAAM6B,cAAcoC,gBAAgBrD,MACtD,SAACC,GAAD,OAASA,EAAIsD,SAAW4F,KAE1B,QACmB7J,IAAjB8J,SACc9J,IAAb+J,GACCA,EAAS/E,cAAgBC,IAAeC,SACxC6E,EAAS/E,cAAgBC,IAAe6B,QACxCiD,EAAS/E,cAAgBC,IAAe8B,MACxCgD,EAAS/E,cAAgBC,IAAe+B,SAE1C,OAAO8C,EAGX,OAAO,MAxI0B,EA2InCE,WAAa,SAACtG,GACZ,GAAiC,OAA7B,EAAK5D,MAAM0D,cAAwB,CACrC,IAAIyD,EACF,EAAKnH,MAAM0D,cAAc9C,MACvB,SAACC,GAAD,OACE,EAAKc,MAAM8D,yBAA2B5E,EAAI+C,YAAcA,KAE9D,QAAU1D,IAANiH,GAAyB,OAANA,EACrB,OAAOA,EAGX,OAAO,MAtJ0B,EAyJnCgD,eAAiB,WACf,IADqB,EACjBb,EAAQ,EADS,cAEF,EAAKtJ,MAAM8D,iBAAiBC,SAF1B,yBAEZI,EAFY,QAG8B,OAA7C,EAAKnE,MAAM6B,cAAc8F,uBAKVzH,IAHF,EAAKF,MAAM6B,cAAcoC,gBAAgBrD,MACtD,SAACC,GAAD,OAASA,EAAIsD,SAAWA,EAAOP,eAG/B0F,GAAgB,KAPtB,2BAAyD,IAFpC,8BAarB,OAAOA,GAtK0B,EAyKnCrE,eAAiB,SAAC3E,GAChB,EAAKc,SAAS,CAAEgG,eAAgB9G,EAAM+G,cAAc,IACpD,EAAKrH,MAAMsH,iBAAgB,IA3KM,EA8KnC8C,iBAAmB,WACjB,GACyC,OAAvC,EAAKpK,MAAM0F,QAAQC,iBACa,OAAhC,EAAK3F,MAAM8D,iBACX,CACA,EAAK9D,MAAMqK,cACT,EAAKrK,MAAM0F,QAAQC,gBAAgBU,IACnC,EAAKrG,MAAMsK,KAAKC,KAAKlC,QACrB,EAAKY,qBAJP,oBAOmB,EAAKjJ,MAAM8D,iBAAiBC,SAP/C,yBAOSI,EAPT,QAWE,QAAiBjE,IAHF,EAAKF,MAAM6B,cAAc8F,gBAAgB/G,MACtD,SAACC,GAAD,OAASA,EAAIsD,SAAWA,EAAOP,aAEL,CAAC,IAAD,EACtBX,EAAS,UAAG,EAAKjD,MAAM0D,qBAAd,aAAG,EAA0B9C,MACxC,SAACC,GAAD,OAASA,EAAI+C,YAAcO,EAAOP,aAEpC,QAAkB1D,IAAd+C,EAEF,OADA,EAAKjD,MAAMwF,kBAAkBrB,GACvB,CAAN,EAAO,EAAKnE,MAAMmG,sBAChB,EAAKnG,MAAM0F,QAAQC,gBAAgBU,IACnClC,EAAOP,UACPX,EAAUqD,YACVrD,EAAUA,UACVA,EAAUsD,QACV,EAAKvG,MAAM8D,kBACX,EACA,EAAK0C,oBAlBb,2BAAwD,CAAC,IAAD,yCAPxD,iCAlL+B,EAoNnClF,kBAAoB,WAClB,EAAKtB,MAAM0B,uBAAuB,EAAKR,YAEP,OAA9B,EAAKlB,MAAMmE,OAAOJ,SACmB,IAArC,EAAK/D,MAAMmE,OAAOJ,QAAQ3D,QAE1B,EAAKJ,MAAMwK,YAAY,EAAKtJ,YAE9B,EAAKkJ,mBACD,EAAKpK,MAAMyK,OAAOC,cAChB,EAAK1K,MAAMyK,OAAOC,aAAavJ,SAAWoH,IAAWnD,SACvD,EAAKhE,SAAS,CAAEqH,UAAU,IAIK,OAAjC,EAAKzI,MAAM2K,SAASC,UACmB,OAAvC,EAAK5K,MAAM0F,QAAQC,iBAEnB,EAAK3F,MAAM6K,YACT,EAAK7K,MAAMsK,KAAKC,KAAKlC,QACrB,EAAKrI,MAAM0F,QAAQC,gBAAgBU,KACnC,SAAClF,EAAiB2J,EAAaC,GAC7B,EAAK3J,SAAS,CAAEC,QAASF,IACb,KAAR2J,GACFE,MAAMF,OAzOd,EAAKnJ,MAAQ,CACX8D,wBAAyB,CACvBtE,QAAQ,EACRb,KAAM,MAERmI,UAAU,EACVwC,gBAAgB,EAChBhG,eAAgB,CACd9D,QAAQ,EACRsI,SAAU,MAEZpC,cAAc,EACdD,eAAgB,KAChB8D,iBAAkB,KAClBC,yBAAyB,EACzB9J,SAAS,EACTmD,cAAc,EACdO,kBAAkB,EAClB4D,OAAO,EACPyC,oBAAqB,MAtBU,E,0CAmPnC,WAAU,IAAD,eACP,OACgD,OAA9CxJ,KAAK5B,MAAM6B,cAAcC,kBAC0B,OAAnDF,KAAK5B,MAAM6B,cAAcE,wBACgB,IAAxCH,KAAK5B,MAAM6B,cAAcG,aACE,IAA1BJ,KAAK5B,MAAMgC,eAKW,IAAxBJ,KAAKD,MAAM8G,WAC8B,IAAxC7G,KAAK5B,MAAM6B,cAAcG,aACE,IAA1BJ,KAAK5B,MAAMgC,aAKU,IAAvBJ,KAAK5B,MAAMqB,UACiB,IAA5BO,KAAKD,MAAM6C,eACqB,IAAhC5C,KAAKD,MAAMoD,iBAGT,sBAAK9E,UAAU,4DAAf,UACE,sBAAMA,UAAU,qBAAhB,qCACA,cAACmC,EAAA,EAAD,OAI8B,OAA7BR,KAAK5B,MAAM0D,cAChB,mBAEA,cAAC,WAAD,UACsC,OAAnC9B,KAAKD,MAAMyJ,oBACV,mCACE,sBAAKnL,UAAU,oGAAf,UACE,qBAAKA,UAAU,8EAAf,SACE,qBAAKA,UAAU,uBAAf,SACE,sBAAKA,UAAU,+DAAf,UACE,sBAAMA,UAAU,kCAAhB,kCAGA,qBAAKA,UAAU,0JAAf,SACE,cAAC,IAAD,CACEA,UAAU,yCACVuC,QAAS,WACP,EAAKpB,SAAS,CACZgK,oBAAqB,mBAQnC,cAACC,EAAA,EAAD,CACErD,QAASpG,KAAKD,MAAMyJ,oBACpBE,aAAa,UAI6B,IAA9C1J,KAAKD,MAAM8D,wBAAwBtE,QACO,OAA5CS,KAAKD,MAAM8D,wBAAwBnF,KACnC,mCACE,sBAAKL,UAAU,oGAAf,UACE,qBAAKA,UAAU,8EAAf,SACE,sBAAKA,UAAU,+DAAf,UACE,uBAAMA,UAAU,kCAAhB,kBACQ,IACuC,OAA5C2B,KAAKD,MAAM8D,wBAAwBnF,MAClC,6CAEIsB,KAAKsI,WACHtI,KAAKD,MAAM8D,wBAAwBnF,KAAM6D,eAH/C,aAEI,EAEGM,iBAKX,qBAAKxE,UAAU,0JAAf,SACE,cAAC,IAAD,CACEA,UAAU,yCACVuC,QAAS,kBACP,EAAKpB,SAAS,CACZqE,wBAAyB,CACvBtE,QAAQ,EACRb,KAAM,MAER2K,gBAAgB,cAQ5B,OADCrJ,KAAKwC,SAASxC,KAAKD,MAAM8D,wBAAwBnF,KAAK6D,QAErD,qBAAKlE,UAAU,mHAAf,gDAGE2B,KAAK5B,MAAM0F,QAAQ6F,qBAKJ,KAJhB,UAAA3J,KAAK5B,MAAM0F,QAAQ6F,mBAAmB3K,MACrC,SAACC,GAAD,OACE,EAAKc,MAAM8D,wBAAwBnF,MACnCO,EAAIwF,MAAQ,EAAK1E,MAAM8D,wBAAwBnF,KAAKsH,iBAHvD,eAIEhC,iBAKgB1F,KAJjB,UAAA0B,KAAK5B,MAAM0F,QAAQ6F,mBAAmB3K,MACpC,SAACC,GAAD,OACE,EAAKc,MAAM8D,wBAAwBnF,MACnCO,EAAIwF,MAAQ,EAAK1E,MAAM8D,wBAAwBnF,KAAKsH,iBAHxD,eAIGhC,WAaL,cAAC,EAAD,CACEzD,gBAAiBP,KAAK5B,MAAM0D,cAAc9C,MACxC,SAACC,GAAD,OACE,EAAKc,MAAM8D,wBAAwBnF,MACnCO,EAAI+C,YACF,EAAKjC,MAAM8D,wBAAwBnF,KAAK6D,UAE9CjC,YAAaN,KAAKwC,SAChBxC,KAAKD,MAAM8D,wBAAwBnF,KAAK6D,QAE1C5C,cAAeK,KAAK5B,MAAMuB,cAC1BE,qBAAsBG,KAAK5B,MAAMyB,qBACjC+J,wBAAyB5J,KAAK5B,MAAMwL,wBACpC9F,QAAS9D,KAAK5B,MAAM0F,QACpBhE,uBAAwBE,KAAK5B,MAAM0B,uBACnCG,cAAeD,KAAK5B,MAAM6B,cAC1BY,yBAA0Bb,KAAK5B,MAAMyC,2BA5BvC,sBAAKxC,UAAU,8IAAf,UACE,kEACA,qBACEuC,QAAS,kBACP,EAAKxC,MAAM0B,uBAAuB,EAAKR,aAEzCjB,UAAU,wFAJZ,6BA+BsB,IAA5B2B,KAAKD,MAAM0F,cACiB,OAA9BzF,KAAKD,MAAMyF,eACX,sBAAKnH,UAAU,oGAAf,UACE,qBAAKA,UAAU,8EAAf,SACE,qBAAKA,UAAU,uBAAf,SACE,sBAAKA,UAAU,+DAAf,UACE,sBAAMA,UAAU,kCAAhB,kCAGA,qBAAKA,UAAU,0JAAf,SACE,cAAC,IAAD,CACEA,UAAU,yCACVuC,QAAS,WACP,EAAKpB,SAAS,CACZiG,cAAc,EACdD,eAAgB,mBAQ9B,cAACqE,EAAA,EAAD,CACEC,gBAAiB9J,KAAKD,MAAMyF,eAC5BuE,YAAa/J,KAAK2H,aAClBX,WAAYhH,KAAKgH,WACjBgD,kBAAkB,EAClBC,0BACEjK,KAAK5B,MAAM8D,iBAAiBgI,6BAIO,IAAvClK,KAAKD,MAAMwJ,6BACqBjL,IAAlC0B,KAAK5B,MAAMG,mBACT,qBAAKF,UAAU,iDAAf,2CAIA,sBAAKA,UAAU,6GAAf,UACE,qBAAKA,UAAU,yEAAf,SACE,sBAAKA,UAAU,+DAAf,UACE,sBAAMA,UAAU,kCAAhB,iCAGA,qBAAKA,UAAU,0JAAf,SACE,cAAC,IAAD,CACEA,UAAU,yCACVuC,QAAS,kBACP,EAAKpB,SAAS,CAAE+J,yBAAyB,cAMnD,cAAC,EAAD,CACEhL,mBAAoByB,KAAK5B,MAAMG,wBAKrC,sBAAKF,UAAU,GAAf,UACE,sBAAKA,UAAU,eAAf,UACE,sBAAKA,UAAU,yEAAf,UACE,sBAAKA,UAAU,qDAAf,UACE,uBAAMA,UAAU,gEAAhB,oBACU,IACR,sBAAMA,UAAU,yCAAhB,SACG2B,KAAK5B,MAAMqF,6BAAX,UACC1E,IAA6BC,MAC3B,SAACC,GAAD,OACE,EAAKb,MAAMqF,4BACXxE,EAAIC,MACF,EAAKd,MAAMqF,2BACRtE,6BANV,aACC,EAMGC,cAGT,sBACEwB,QAAS,kBACP,EAAKpB,SAAS,CAAE+J,yBAAyB,KAE3ClL,UAAU,kLAJZ,UAME,cAAC,IAAD,CAAWA,UAAU,YACrB,kEAGJ,sBACEA,UAAS,eACP2B,KAAKuI,iBAAmB,EAAI,cAAgB,cADrC,kFADX,UAKE,qBAAKlK,UAAU,+CAAf,SACE,qBAAKA,UAAU,6BAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,sBAAMA,UAAU,qEAAhB,mBAGA,sBAAMA,UAAU,qEAAhB,SACG2B,KAAK5B,MAAM0D,cAActD,gBAKjCwB,KAAKuI,iBAAmB,GACvB,qBAAKlK,UAAU,+CAAf,SACE,qBAAKA,UAAU,6BAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,sBAAMA,UAAU,qEAAhB,qBAGA,sBAAMA,UAAU,qEAAhB,SACmC,OAAhC2B,KAAK5B,MAAM8D,kBACVlC,KAAKuI,0BAMjB,qBAAKlK,UAAU,+CAAf,SACE,qBAAKA,UAAU,6BAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,sBAAMA,UAAU,qEAAhB,0BAIA,IADC2B,KAAKsH,eAAetH,KAAK5B,MAAM8D,kBAG9B,uBAAM7D,UAAU,qEAAhB,UACG8L,WACCC,YACEpK,KAAK5B,MAAM8D,iBAAiBC,QAC5BnC,KAAK5B,MAAM6B,cAAcoC,kBAEzB,GAEE8H,WACEC,YACEpK,KAAK5B,MAAM8D,iBAAiBC,QAC5BnC,KAAK5B,MAAM6B,cAAcoC,kBAEzBrC,KAAK5B,MAAM8D,iBAAiBC,QAAQ3D,QACxCuG,QAAQ,GACV,EAfN,OAmBA,qBACEsF,MAAM,oEACNhM,UAAU,yDAFZ,iCAYZ,sBAAKA,UAAU,yGAAf,UACG2B,KAAK5B,MAAMqF,4BACZzD,KAAK5B,MAAMqF,2BAA2BtE,qBACpCuE,IAAkB4G,SAClB,sBAAKjM,UAAU,2CAAf,UACE,cAAC,IAAD,CAAmBA,UAAU,aAC7B,mDAGF,+BAC+B,IAA5B2B,KAAKD,MAAM6C,eACoB,IAAhC5C,KAAKD,MAAMoD,mBAIL,IAHNoH,YACEvK,KAAK5B,MAAM8D,iBAAiBC,QAC5BnC,KAAK5B,MAAM6B,cAAcoC,kBAE3BrC,KAAK5B,MAAM0F,QAAQC,iBACnB/D,KAAK5B,MAAM+I,sBACXnH,KAAK5B,MAAM2K,SAASC,WAKd,IAJNwB,YACExK,KAAK5B,MAAM2K,SAASC,SACpBhJ,KAAK5B,MAAM0F,QAAQC,gBAAgBU,IACnCzE,KAAK5B,MAAM+I,sBAEX,sBACEvG,QAAS,kBAAM,EAAKkG,UAAU,EAAK/G,MAAMgH,QACzC1I,UAAU,wKAFZ,UAIE,cAAC,IAAD,CAAiBA,UAAU,aAC3B,sBAAMA,UAAU,UAAhB,0BAEiC,OAAjC2B,KAAK5B,MAAM2K,SAASC,SACtB,6CAEAhJ,KAAK5B,MAAM2K,SAASC,SAASxK,OAAS,GACpC,sBACEoC,QAAS,kBAAM,EAAKkG,UAAU,EAAK/G,MAAMgH,QACzC1I,UAAU,+FAFZ,UAIE,cAAC,IAAD,CAAiBA,UAAU,aAC3B,sBAAMA,UAAU,UAAhB,UACwB,IAArB2B,KAAKD,MAAMgH,MACR,eACA,6BAOa,IAA5B/G,KAAKD,MAAM6C,eACsB,IAAhC5C,KAAKD,MAAMoD,mBAIL,IAHNoH,YACEvK,KAAK5B,MAAM8D,iBAAiBC,QAC5BnC,KAAK5B,MAAM6B,cAAcoC,kBAEzB,sBACEzB,QAAS,kBACP,EAAKxC,MAAM+I,sBACX,EAAK/I,MAAMqM,kBACT,EAAKrM,MAAM+I,uBAGf9I,UAAU,iHAPZ,UASE,cAAC,IAAD,CAAWA,UAAU,aACrB,sBAAMA,UAAU,UAAhB,uCAIc,IAArB2B,KAAKD,MAAMgH,OAC0B,OAApC/G,KAAK5B,MAAM+I,sBACT,qBAAK9I,UAAU,gCAAf,SACE,cAACqM,EAAA,EAAD,CACEC,aAAc3K,KAAK8G,SACnB8D,WAAYC,IAAcC,YAC1BC,QAAS/K,KAAK5B,MAAM+I,4BAK7BnH,KAAK5B,MAAMqF,4BACVzD,KAAK5B,MAAMqF,2BAA2BtE,qBACpCuE,IAAkB4G,UAClB,qCACE,cAAC,EAAD,CACEpI,iBAAkBlC,KAAK5B,MAAM8D,iBAC7BJ,cAAe9B,KAAK5B,MAAM0D,cAC1BU,SAAUxC,KAAKwC,SACfI,aAAc5C,KAAKD,MAAM6C,aACzBO,iBAAkBnD,KAAKD,MAAMoD,iBAC7BuC,gBAAiB1F,KAAK5B,MAAMsH,gBAC5BnD,OAAQvC,KAAK5B,MAAMmE,OACnBqB,kBAAmB5D,KAAK5B,MAAMwF,kBAC9B3D,cAAeD,KAAK5B,MAAM6B,cAC1BiE,UAAWlE,KAAK5B,MAAM8F,UACtBJ,QAAS9D,KAAK5B,MAAM0F,QACpBO,oBAAqBrE,KAAK5B,MAAMiG,oBAChCxD,yBACEb,KAAK5B,MAAMyC,yBAEb4C,2BACEzD,KAAK5B,MAAMqF,2BAEba,aAActE,KAAK5B,MAAMkG,aACzBC,sBAAuBvE,KAAK5B,MAAMmG,sBAClCK,gBAAiB5E,KAAK4E,kBAExB,cAAC,EAAD,CACE1C,iBAAkBlC,KAAK5B,MAAM8D,iBAC7BJ,cAAe9B,KAAK5B,MAAM0D,cAC1BU,SAAUxC,KAAKwC,SACfI,aAAc5C,KAAKD,MAAM6C,aACzBO,iBAAkBnD,KAAKD,MAAMoD,iBAC7BuC,gBAAiB1F,KAAK5B,MAAMsH,gBAC5BnD,OAAQvC,KAAK5B,MAAMmE,OACnBqB,kBAAmB5D,KAAK5B,MAAMwF,kBAC9B3D,cAAeD,KAAK5B,MAAM6B,cAC1BiE,UAAWlE,KAAK5B,MAAM8F,UACtBJ,QAAS9D,KAAK5B,MAAM0F,QACpBO,oBAAqBrE,KAAK5B,MAAMiG,oBAChCxD,yBACEb,KAAK5B,MAAMyC,yBAEbwC,eAAgBrD,KAAKqD,eACrBI,2BACEzD,KAAK5B,MAAMqF,2BAEba,aAActE,KAAK5B,MAAMkG,aACzBC,sBAAuBvE,KAAK5B,MAAMmG,sBAClCK,gBAAiB5E,KAAK4E,kBAExB,cAAC,EAAD,CACE1C,iBAAkBlC,KAAK5B,MAAM8D,iBAC7BJ,cAAe9B,KAAK5B,MAAM0D,cAC1BU,SAAUxC,KAAKwC,SACfI,aAAc5C,KAAKD,MAAM6C,aACzBO,iBAAkBnD,KAAKD,MAAMoD,iBAC7BuC,gBAAiB1F,KAAK5B,MAAMsH,gBAC5BnD,OAAQvC,KAAK5B,MAAMmE,OACnBqB,kBAAmB5D,KAAK5B,MAAMwF,kBAC9B3D,cAAeD,KAAK5B,MAAM6B,cAC1BiE,UAAWlE,KAAK5B,MAAM8F,UACtBJ,QAAS9D,KAAK5B,MAAM0F,QACpBO,oBAAqBrE,KAAK5B,MAAMiG,oBAChCxD,yBACEb,KAAK5B,MAAMyC,yBAEbqF,iBAAkB,SAChBsD,GAEA,EAAKhK,SAAS,CACZgK,oBAAqBA,eAhchC,cAAC,IAAD,CAAUnJ,GAAG,iB,GA3PDsB,aA6vBVqJ,EAhBGC,aArCM,SAAC,GAuBvB,MAAO,CACLvC,KAFC,EArBHA,KAwBEG,OAHC,EApBHA,OAwBEqC,YAJC,EAnBHA,YAwBEvL,cALC,EAlBHA,cAwBEmE,QANC,EAjBHA,QAwBE7D,cAPC,EAhBHA,cAwBEsC,OARC,EAfHA,OAwBE2B,UATC,EAdHA,UAwBE6E,SAVC,EAbHA,SAwBEoC,aAXC,EAZHA,gBA2ByC,CACzCvE,cACAwE,mBACAvL,0BACA+J,6BACA9J,4BACAe,8BACA+H,iBACAhF,uBACAW,2BACA8G,uBACAhH,yBACAoE,mBACAQ,iBAbgBgC,CAcf1E,G,+FCj0BY+E,GApBf,kDAIE,WAAYlN,GAAsC,IAAD,8BAC/C,cAAMA,IAMRkB,WAAa,SAACS,GACZ,EAAKP,SAAS,CAAEC,QAASM,KALzB,EAAKA,MAAQ,CACXN,SAAS,GAJoC,EAJnD,0CAeE,WACE,OAAO,gEAhBX,GAA6CkC,aCiFvC4J,G,kDAIJ,WAAYnN,GAAoC,IAAD,8BAC7C,cAAMA,IAsBRkB,WAAa,SAACS,GACZ,EAAKP,SAAS,CAAEC,QAASM,KAxBoB,EA2B/CyL,qBAAuB,SACrBC,EACAC,EACAC,GACI,IAAD,IACCC,EACEC,EACa,OAAjBF,QAA0CrN,IAAjBqN,EAAzB,UACI,EAAKvN,MAAM+M,aAAalB,iCAD5B,iBACI,EAAmD6B,oBADvD,aACI,EAAiErH,IACjEkH,EAAalH,IAiBnB,OAfEmH,OADsBtN,IAApBuN,EACKJ,EAAarJ,QAClB,SAACnD,GAAD,OAASA,EAAIuF,oBAAoBC,MAAQoH,KAGpCJ,EAETG,EACwD,OAAtD,EAAKxN,MAAM+M,aAAalB,0BACpB2B,EACAA,EAAKxJ,QACH,SAAC2J,GAAD,aACEA,EAAGxE,SAAS2C,uBAAuBA,0BAAnC,UACA,EAAK9L,MAAM+M,aAAalB,iCADxB,aACA,EACIC,2BAEC,OAAXwB,EACKE,EAEAA,EAAKxJ,QAAO,SAAC1D,GAAD,OAAUA,EAAKS,qBAAuBuM,MAxDd,EA4D/CM,wBAA0B,WACxB,EAAKxM,SAAS,CAAE2H,qBAAsB,OACtC,EAAK3H,SAAS,CAAE0C,iBAAkB,KAAMiF,qBAAsB,OAC9D,EAAK3H,SAAS,CAAEsC,cAAe,OAC/B,EAAKtC,SAAS,CAAEyM,qBAAqB,KAhEQ,EAmE/CC,uBAAyB,SAAC3M,GACxB,EAAKC,SAAS,CAAEyM,oBAAqB1M,KApEQ,EAuE/C4M,oBAAsB,SACpBC,GAEA,IAAIC,EACF,GAFgE,WAGzD1N,GACP0N,EAAOC,KAAK,CACVjC,MAAOtL,IAA6BJ,GAAGS,QACvCsI,MAAO0E,EAAYhK,QACjB,SAACnD,GAAD,OACEA,EAAIE,qBAAuBJ,IAA6BJ,GAAGO,OAC7DV,OACFe,OAAQR,IAA6BJ,GAAGO,OAP5C,IAAK,IAAIP,KAAKI,IAA+B,EAApCJ,GAUT,OAAO0N,GAtFsC,EAyF/C3G,gBAAkB,SAACnG,GACjB,EAAKC,SAAS,CAAE+M,aAAchN,KA1Fe,EA6F/CiN,iBA7F+C,sBA6F5B,0CAAAC,EAAA,yDACjB,EAAKjN,SAAS,CAAEkN,WAAY,KAC5B,EAAKlN,SAAS,CAAEmN,qBAAsB,KAClC,EAAKvO,MAAMsK,KAAKC,KAAKlC,QAHR,oBAITtC,EAAoB,EAAKpE,MAAMmC,iBACrC,EAAK1C,SAAS,CAAEiM,aAAc,OAC9B,EAAKjM,SAAS,CAAE0C,iBAAkB,OAClC,EAAK1C,SAAS,CAAEsC,cAAe,OAC3B8K,EAAwC,KAEkB,OAA5D,EAAKxO,MAAMyO,sBAAsBC,yBACjC,EAAK1O,MAAMsK,KAAKC,KAXH,2CAcOoE,IAAMC,IAAN,UACbC,IAAInC,YADS,uBACiB,EAAK1M,MAAMsK,KAAKC,KAAKlC,UAf7C,QAkBX,GAAmB,OAJbyG,EAdK,QAkBH3N,OAEN,GADAqN,EAAWM,EAAI/D,KACS,IAApB+D,EAAI/D,KAAK3K,OACXoO,EAAW,OACN,CAAC,EAAD,YACmBA,GADnB,IACL,2BAASR,EAAyB,QAChC,EAAKhO,MAAM+O,mBAAmBf,GAF3B,oCAMPQ,EAAW,GA5BF,kDA+BXA,EAAW,GACXQ,QAAQC,IAAI,aAAZ,sBAhCW,gCAmCbT,EAAW,EAAKxO,MAAMyO,sBAAsBC,uBAnC/B,QAsCf,GADA,EAAKtN,SAAS,CAAEiM,aAAcmB,IACb,OAAbA,EACF,GAAIA,EAASpO,OAAS,EAEpB,IAASG,KAFe,EAAD,SAEdA,GACP,IAAIwD,EAAUyK,EAASjO,GAAG4I,SAASpF,QAC/B+E,EAAQ0F,EAASjO,GAAGuI,MAEtB0F,EAASjO,GAAG4I,SAASnD,eAArB,OACAD,QADA,IACAA,OADA,EACAA,EAAmBC,eAEnB,EAAK5E,SAAS,CAAE0C,iBAAkB0K,EAASjO,GAAG4I,WAC9C,EAAK/H,SAAS,CAAEsC,cAAeoF,KAVZ,eAwBZ3B,GAGS,IADd2B,EAAM9E,QAAO,SAACnD,GAAD,OAASA,EAAI+C,YAAcG,EAAQoD,GAAGvD,aAChDxD,QACHoO,EAASjO,GAAGQ,qBAAuBuE,IAAkB4J,aAErD,EAAK9N,SAAS,CACZ2H,qBAAsByF,EAASjO,GAAG4O,iBAEpC,EAAK/N,SAAS,CACZ0C,iBAAkB0K,EAASjO,GAAG4I,SAC9BJ,qBAAsByF,EAASjO,GAAG4O,iBAEpC,EAAK/N,SAAS,CAAEsC,cAAe8K,EAASjO,GAAGuI,QAC3C,EAAK1H,SAAS,CAAEyM,qBAAqB,IACrC,EAAKuB,wBAfT,IAAK,IAAIjI,KAAKpD,EAAU,EAAfoD,IAtBGqH,EAAW,EAAhBjO,QA0CT,EAAKP,MAAMqP,0BACT,EAAKrP,MAAMsK,KAAKC,KAAKlC,QACrB,EAAKnH,YArFI,0DA7F4B,EAyL/C8H,eAzL+C,uCAyL9B,WACfmG,EACArG,GAFe,iBAAAuF,EAAA,sDAIf,EAAKjN,SAAS,CAAEC,SAAS,IACzB,EAAKD,SAAS,CAAEkO,iBAAkB,OAClCN,QAAQC,IAAIE,GANG,IAAAd,EAAA,iBAON9N,GAPM,uBAAA8N,EAAA,sEASXW,QAAQC,IAAI,SAAU,CACpBE,eAAgBA,EAChBrG,MAAOA,EAAMvI,KAXJ,SAaOoO,IAAMY,KAAN,UAAcV,IAAInC,YAAlB,uBAAoD,CACpEyC,eAAgBA,EAChBrG,MAAOA,EAAMvI,KAfJ,OAiBQ,OAJbuO,EAbK,QAiBH3N,QAAoD,OAAlC,EAAKQ,MAAM6N,oBACnC,EAAKpO,SAAS,CACZoO,mBAAkB,UAAE,EAAK7N,MAAM6N,0BAAb,aAAE,EAA+BxL,QACjD,SAACnD,GAAD,OAASA,EAAI+C,YAAckF,EAAMvI,GAAGqD,eAIvB,MAAfkL,EAAI3N,SACN,EAAKnB,MAAMqP,0BACT,EAAKrP,MAAMsK,KAAKC,KAAKlC,QACrB,EAAKnH,YAEP,EAAKkN,mBACL,EAAKhN,SAAS,CAAEyM,qBAAqB,IACrC,EAAKzM,SAAS,CAAE0C,iBAAkB,KAAMiF,qBAAsB,OAC9D,EAAK3H,SAAS,CAAEsC,cAAe,OAC/B,EAAK1D,MAAMyP,eAAe,CACxBxD,MAAM,gCACNyD,YACE,oGACFC,MAAOC,IAAgBC,WArChB,uBAyCX,GAzCW,yBAyCP,KAAMrB,UACJ,KAAMA,SAASzD,KACjB,QAAmC7K,IAA/B,KAAMsO,SAASzD,KAAK+E,QACtB,GAAI,KAAMtB,SAASzD,KAAK+E,OAAO1P,OAAS,EAAG,CACzC,GAAI,EAAKuB,MAAM6N,yBAE+BtP,IAAxC,KAAMsO,SAASzD,KAAK+E,OAAO,GAAGC,YAMjB7P,KALf8P,EAAM,UAAG,EAAKrO,MAAM6N,0BAAd,aAAG,EAA+BxL,QACtC,SAACnD,GAAD,OACEA,EAAI+C,YACJ,KAAM4K,SAASzD,KAAK+E,OAAO,GAAGC,MAAMnM,cAGtC,IAASrD,KAAKyP,EACZ,EAAKhQ,MAAMiQ,eAAeD,EAAOzP,GAAGqD,WAK5C,EAAKxC,SAAS,CACZkO,iBAAkB,KAAMd,SAASzD,KAAK+E,OAAO,GAAGI,UAElD,EAAKlQ,MAAMyP,eAAe,CACxBxD,MAAO,KAAMuC,SAASzD,KAAK+E,OAAO,GAAGI,QACrCP,MAAOC,IAAgBO,eAI3B,EAAKnQ,MAAMyP,eAAe,CACxBxD,MAAO,yCACP0D,MAAOC,IAAgBO,SAEzB,EAAK/O,SAAS,CACZkO,iBAAkB,2CAK1BN,QAAQC,IAAI,iBAAZ,sBA/EW,+DAAAZ,EAAA,KAODvF,GAPC,qDAONvI,EAPM,6BAONA,GAPM,sCAkFX,EAAKoB,MAAMmC,kBACb,EAAK1C,SAAS,CAAE0C,iBAAkB,EAAKnC,MAAMmC,mBAE/C,EAAK1C,SAAS,CAAE2H,qBAAsBoG,IACtC,EAAK/N,SAAS,CAAEC,SAAS,IAtFV,4CAzL8B,0DAkR/C+N,oBAAsB,WACpB,EAAKhO,SAAS,CACZmN,qBAAsB,EAAK5M,MAAM4M,qBAAuB,KApRb,EAwR/C6B,mBAAqB,SAACzO,GACpB,EAAKP,SAAS,CAAEC,QAASM,KAzRoB,EA4R/C0K,kBA5R+C,uCA4R3B,WAAOxG,GAAP,SAAAwI,EAAA,0DAEhBgC,OAAOC,QAAQ,0DACfzK,EAHgB,wBAKhB,EAAKuK,oBAAmB,GALR,kBAORzB,IAAM4B,OAAN,UAAgB1B,IAAInC,YAApB,kBAAyC7G,IAPjC,OAQd,EAAK7F,MAAMwQ,sBAAsB3K,GACjC,EAAKuI,mBACL,EAAKpO,MAAMyP,eAAe,CACxBxD,MAAM,oCACN0D,MAAOC,IAAgBC,UAEzB,EAAKzO,SAAS,CAAEsC,cAAe,OAdjB,kDAgBd,EAAK1D,MAAMyP,eAAe,CACxBxD,MAAM,gCACN0D,MAAOC,IAAgBa,UAlBX,QAqBhB,EAAKL,oBAAmB,GArBR,0DA5R2B,wDAqT/CM,oBAAsB,SAACvP,GACrB,EAAKC,SAAS,CAAEuP,iBAAkBxP,KAtTW,EAyT/C+E,aAAe,SAAC/E,GACd,EAAKC,SAAS,CAAEY,WAAYb,KA1TiB,EA6T/CG,kBAAoB,WAClB,EAAKtB,MAAM0B,uBAAuB,EAAK0O,oBACvC,EAAKhC,mBACL,EAAKpO,MAAM4Q,iBAAiB,EAAKR,yBAEElQ,IAAjC,EAAKF,MAAMgO,YAAY6C,OACvB,EAAK7Q,MAAMgO,YAAY6C,MAAMC,cAAgBC,IAAsBC,OAEnE,EAAKhR,MAAMiR,oBAAoB,CAC7B5I,QAAS,EAAKrI,MAAMsK,KAAKC,KAAKlC,QAC9BvE,iBAAkB,KAClBgN,YAAaC,IAAsBG,MACnCpL,UAAW,KACXqL,aAAc,CACZhQ,QAAQ,GAEV+J,iBAAkB,MA1UtB,EAAKvJ,MAAQ,CACXmC,iBAAkB,KAClBJ,cAAe,KACf2J,aAAc,KACdtE,qBAAsB,KACtByG,mBAAoB,KACpBnO,SAAS,EACTiO,iBAAkB,KAClBf,qBAAsB,EACtB6C,oBAAoB,EACpBC,0BAA2B,KAC3BV,kBAAkB,EAClBxC,cAAc,EACdG,WAAY,GACZT,qBAAqB,EACrByD,YAAa,KACbtP,YAAY,GAnB+B,E,0CA2V/C,WAAU,IAAD,eACP,OAAKuP,YAAU3P,KAAK5B,MAAMsK,KAAMkH,KAAeC,gBAAgBC,MAIf,OAA9C9P,KAAK5B,MAAM6B,cAAcC,kBAC0B,OAAnDF,KAAK5B,MAAM6B,cAAcE,wBACgB,IAAxCH,KAAK5B,MAAM6B,cAAcG,aACE,IAA1BJ,KAAKD,MAAMK,eAKbJ,KAAK5B,MAAMyK,OAAOC,eACuB,IAAxC9I,KAAK5B,MAAM6B,cAAcG,aACE,IAA1BJ,KAAKD,MAAMK,YAGXJ,KAAK5B,MAAMyK,OAAOC,aAAavJ,SAAWoH,IAAWnD,SACrDxD,KAAK5B,MAAMyK,OAAOC,aAAavJ,SAAWoH,IAAWvB,QAMvD,eAAC,WAAD,WACmC,OAAhCpF,KAAKD,MAAMmC,kBACiB,OAA7BlC,KAAKD,MAAM+B,gBACwB,IAAnC9B,KAAKD,MAAMkM,oBACT,sBAAK5N,UAAU,qHAAf,UACE,sBAAKA,UAAU,kGAAf,UACE,sBAAKA,UAAU,6BAAf,UACE,8BACE,qBAAKA,UAAU,uGAAf,SACE,cAAC,KAAD,CACEA,UAAU,sBACVuC,QAAS,kBAAM,EAAKoL,iCAI1B,sBAAK3N,UAAU,uBAAf,UACE,sBAAMA,UAAU,+BAAhB,SACG2B,KAAKD,MAAMmC,iBAAiB6N,iBAE/B,uBAAM1R,UAAU,yCAAhB,UACG2B,KAAK5B,MAAMyO,sBAAsBC,wBACA,OAAhC9M,KAAKD,MAAMmC,mBADZ,UAEClC,KAAK5B,MAAMyO,sBAAsBC,uBAAuB9N,MACtD,SAACC,GAAD,OACEA,EAAIsO,iBAAmB,EAAKxN,MAAMoH,+BAJvC,aAEC,EAGG3C,oBAAoBwL,mBAAmB,IAN9C,IAOI,IAEA,OADDhQ,KAAK5B,MAAMyO,sBAAsBC,wBAEA,OAAhC9M,KAAKD,MAAMmC,mBAFZ,UAGClC,KAAK5B,MAAMyO,sBAAsBC,uBAAuB9N,MACtD,SAACC,GAAD,OACEA,EAAIsO,iBAAmB,EAAKxN,MAAMoH,+BALvC,aAGC,EAGG3C,oBAAoBwB,iBAK7B,OADDhG,KAAK5B,MAAMyO,sBAAsBC,6BAO5BxO,IALN0B,KAAK5B,MAAMyO,sBAAsBC,uBAAuB9N,MACtD,SAACC,GAAD,OACEA,EAAIsO,iBAAmB,EAAKxN,MAAMoH,uBACjClI,EAAIE,qBAAuBuE,IAAkBC,aAC5C1E,EAAIE,qBAAuBuE,IAAkBuM,SAEjD,qBACE5F,MAAM,iDACNhM,UAAU,eACVuC,QAAS,WACP,GAEgC,OAD9B,EAAKxC,MAAMyO,sBACRC,uBACH,CACA,IAAIoD,EACF,EAAK9R,MAAMyO,sBAAsBC,uBAAuB9N,MACtD,SAACC,GAAD,OACEA,EAAIsO,iBACJ,EAAKxN,MAAMoH,6BAEQ7I,IAArB4R,GACF,EAAK9R,MAAM+R,sBAAsBD,KAfzC,SAoBE,cAAC,IAAD,CACE7P,GAAG,sBACHhC,UAAU,gGAFZ,yBAQF,qBACEgM,MAAM,yDACNhM,UAAU,iFAFZ,0BASJ,qBAAKA,UAAU,gBACf,cAAC+R,EAAD,CACEtO,cAAe9B,KAAKD,MAAM+B,cAC1BI,iBAAkBlC,KAAKD,MAAMmC,iBAC7BiF,qBAAsBnH,KAAKD,MAAMoH,qBACjCC,eAAgBpH,KAAKoH,eACrBiJ,oBAAqBrQ,KAAKD,MAAM2N,iBAChCjO,QAASO,KAAKD,MAAMN,QACpB+N,oBAAqBxN,KAAKwN,oBAC1BjP,mBAEI,OADFyB,KAAK5B,MAAMyO,sBAAsBC,wBACS,OAAhC9M,KAAKD,MAAMmC,iBADrB,UAEIlC,KAAK5B,MAAMyO,sBAAsBC,uBAAuB9N,MACtD,SAACC,GAAD,aACEA,EAAIsI,SAASnD,eAAb,UACA,EAAKrE,MAAMmC,wBADX,aACA,EAA6BkC,uBALrC,aAEI,EAIGkM,yBACHhS,EAENmM,kBAAmBzK,KAAKyK,kBACxBhH,2BACEzD,KAAK5B,MAAMyO,sBAAsBC,wBACjC9M,KAAK5B,MAAMyO,sBAAsBC,uBAAuB9N,MACtD,SAACC,GAAD,OACEA,EAAIsO,iBAAmB,EAAKxN,MAAMoH,wBAGxCzB,gBAAiB1F,KAAK0F,gBACtBwG,uBAAwBlM,KAAKkM,uBAC7B9L,WAAYJ,KAAKD,MAAMK,WACvBkE,aAActE,KAAKsE,kBAIvB,qCACE,eAACiM,EAAA,EAAD,WAC2C,OAAxCvQ,KAAK5B,MAAM8F,UAAUsM,eACpB,sBAAKnS,UAAU,+HAAf,UACE,cAAC,IAAD,CAAkBA,UAAU,wBAD9B,qBAIE2B,KAAK5B,MAAM8F,UAAUsM,eAAehS,OAAS,GAC/CwB,KAAK5B,MAAM0F,QAAQ6F,oBAGN,IAFb3J,KAAK5B,MAAM0F,QAAQ6F,mBAAmBvH,QACpC,SAACnD,GAAD,OAA2B,IAAlBA,EAAI+E,aACbxF,OACF,cAAC,IAAD,CAAM6B,GAAG,SAAT,SACE,sBAAKhC,UAAU,yGAAf,UACE,cAAC,IAAD,CAAOA,UAAU,wBADnB,cAKF,qBAAKA,UAAU,4HAAf,2BAMF,sBACEuC,QAAS,kBACP,EAAKpB,SAAS,CAAEiQ,0BAA2B,QAE7CpR,UAAS,yBACkC,OAAzC2B,KAAKD,MAAM0P,0BACP,4GACA,qEAHG,iEAJX,UAUE,cAAC,IAAD,CAAUpR,UAAU,YACpB,8CAGE,OADC2B,KAAK5B,MAAMyO,sBAAsBC,uBAE9B,EACA9M,KAAK5B,MAAMyO,sBAAsBC,uBAAuB1K,QACtD,SAACnD,GAAD,aACEA,EAAIuF,oBAAoBC,OAAxB,UACA,EAAKrG,MAAM0F,QAAQC,uBADnB,aACA,EAAoCU,QACtCjG,OATR,UAaF,qBAAKH,UAAU,OAAf,SACI2B,KAAK5B,MAAMyO,sBAAsBC,wBAK3B,OAJN9M,KAAKwL,qBACHxL,KAAK5B,MAAMyO,sBAAsBC,uBACjC,KACA9M,KAAK5B,MAAM0F,QAAQC,mBAEsB,IAA7C/D,KAAK5B,MAAMyO,sBAAsBpN,QAC/B,cAACe,EAAA,EAAD,IACER,KAAK5B,MAAMyO,sBAAsBC,yBACT,IAA1B2D,IACAzQ,KAAKmM,oBACHnM,KAAKwL,qBACHxL,KAAK5B,MAAMyO,sBAAsBC,uBACjC,KACA9M,KAAK5B,MAAM0F,QAAQC,kBAIvB,GAAGtF,KACD,SACEQ,EAKAN,GANF,OAQEM,EAAIyI,MAAQ,GACV,cAAC,WAAD,UACE,qBACE9G,QAAS,kBACP,EAAKpB,SAAS,CACZiQ,0BAA2BxQ,EAAIM,UAHrC,SAOE,cAAC,IAAD,CACE8K,MAAOpL,EAAIoL,MACX3C,MAAOzI,EAAIyI,MACXgJ,OACE,EAAK3Q,MAAM0P,4BACXxQ,EAAIM,YAbGN,EAAIoL,eAyB/B,sBAAKhM,UAAU,qBAAf,UACE,qBAAKA,UAAU,yCAAf,SACE,qBAAKA,UAAU,gBAAf,SACE,sBAAKA,UAAU,4DAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,uBAAMA,UAAU,2DAAhB,4BACkB,IAChB,uBAAMA,UAAU,YAAhB,cAEG2B,KAAK5B,MAAMyO,sBACTC,wBACH9M,KAAKwL,qBACHxL,KAAK5B,MAAMyO,sBACRC,uBACH9M,KAAKD,MAAM0P,0BACXzP,KAAK5B,MAAM0F,QAAQC,iBAEjB/D,KAAKwL,qBACHxL,KAAK5B,MAAMyO,sBACRC,uBACH9M,KAAKD,MAAM0P,0BACXzP,KAAK5B,MAAM0F,QAAQC,iBACnBvF,OACF,EAhBN,UAoBF,sBAAKH,UAAU,yFAAf,UACE,qBAAKA,UAAU,wDAAf,mBAEI2B,KAAK5B,MAAM+M,aAAalB,iCAF5B,aAEI,EACI0G,2BAGR,cAAC,IAAD,CAAgBtS,UAAU,SAC1B,cAAC,IAAD,CAAiBA,UAAU,aAR7B,mBAQ2D,IACzD,sBACEuC,QAAS,kBACP,EAAKpB,SAAS,CAAEuP,kBAAkB,KAEpC1Q,UAAS,eACgC,OAAvC2B,KAAK5B,MAAM0F,QAAQC,gBACf,2FACA,kEAHG,0FAJX,SAU0C,OAAvC/D,KAAK5B,MAAM0F,QAAQC,gBAClB,qCACE,cAAC,IAAD,CAAkB1F,UAAU,SAE1B2B,KAAK5B,MAAM0F,QAAQC,gBAChBiM,qBAIP,wBAKR,8BACE,qBACEpP,QAAS,kBACP,EAAKpB,SAAS,CAAEuP,kBAAkB,KAEpC1Q,UAAU,kJAJZ,SAM0C,OAAvC2B,KAAK5B,MAAM0F,QAAQC,gBAChB,gBACA,2BAMa,KAA1B/D,KAAKD,MAAM2M,YACV,qBAAKrO,UAAU,+EAAf,SACG2B,KAAKD,MAAM2M,aAGhB,qBAAKrO,UAAU,OAAf,SACE,qBAAKA,UAAU,0BAAf,SACE,qBAAKA,UAAU,cAAf,SACE,sBAAKA,UAAS,2CAAd,UACE,qBAAKA,UAAU,sCAAf,SAC2C,OAAxC2B,KAAK5B,MAAM8F,UAAUsM,eACpB,sBAAKnS,UAAU,2HAAf,UACE,cAAC,IAAD,CAAkBA,UAAU,wBAAyB,IADvD,oBAIE2B,KAAK5B,MAAM8F,UAAUsM,eAAehS,OAAS,EAC/C,cAAC,IAAD,CAAM6B,GAAG,SAAT,SACE,sBAAKhC,UAAU,wHAAf,UACE,cAAC,IAAD,CAAOA,UAAU,wBADnB,2BAMF,sBAAKA,UAAU,2HAAf,UACE,cAAC,IAAD,CAAkBA,UAAU,wBAAyB,IADvD,qBAO0B,OAD7B2B,KAAK5B,MAAMyO,sBACTC,yBAC0C,IAA7C9M,KAAK5B,MAAMyO,sBAAsBpN,QAC/B,cAACmR,EAAA,EAAD,CAAWnQ,KAAMC,IAAYC,OAMhB,IALXX,KAAKwL,qBACLxL,KAAK5B,MAAMyO,sBACRC,uBACH9M,KAAKD,MAAM0P,0BACXzP,KAAK5B,MAAM0F,QAAQC,iBACnBvF,OACF,qBAAKH,UAAU,GAAf,SACE,cAACwS,GAAA,EAAD,CACE9C,MAAO+C,KAAeC,KACtBC,MAAM,yBACNC,UACE,qBAAK5S,UAAU,wBAAf,SAC2C,OAAxC2B,KAAK5B,MAAM8F,UAAUsM,gBACpBxQ,KAAK5B,MAAM8F,UAAUsM,eAAehS,OAClC,GACFwB,KAAK5B,MAAM0F,QAAQ6F,oBAGN,IAFb3J,KAAK5B,MAAM0F,QAAQ6F,mBAAmBvH,QACpC,SAACnD,GAAD,OAA2B,IAAlBA,EAAI+E,aACbxF,QACA,cAAC,IAAD,CAAM6B,GAAG,SAAT,SACE,qBAAKhC,UAAU,+FAAf,0DAUd2B,KAAKwL,qBACHxL,KAAK5B,MAAMyO,sBACRC,uBACH9M,KAAKD,MAAM0P,0BACXzP,KAAK5B,MAAM0F,QAAQC,iBACnBtF,KAAI,SAACC,EAAMC,GAAP,mCACJ,qBAEEiC,QAAS,WACP,EAAKpB,SAAS,CACZ0C,iBAAkBxD,EAAK6I,SACvBJ,qBAAsBzI,EAAK6O,iBAE7B,EAAK/N,SAAS,CAAEsC,cAAepD,EAAKwI,QACpC,EAAK1H,SAAS,CAAEyM,qBAAqB,KAEvC5N,UAAS,wGAEb,YAAK0B,MAAMmC,wBAAX,eAA6BkC,eAC7B1F,EAAK6I,SAASnD,YACV,kCACA1F,EAAKS,qBACLuE,IAAkBmB,UAClB,mDACAnG,EAAKS,qBACLuE,IAAkB4G,SAClB,wBACA5L,EAAKS,qBACLuE,IAAkBC,YAClB,iDACAjF,EAAKS,qBAAuBuE,IAAkBuM,KAC9C,mDACA,qDAhBS,sEAVX,SA6BE,sBACE5R,UAAS,iEACP,YAAK0B,MAAMmC,wBAAX,eAA6BkC,eAC7B1F,EAAK6I,SAASnD,YACV,wBACA,YALR,UAQE,qBAAK/F,UAAU,8CAAf,SACGK,EAAKS,qBACNuE,IAAkBmB,UAChB,cAAC,IAAD,CAAoBxG,UAAU,qDAC5BK,EAAKS,qBACPuE,IAAkB4G,SAClB,cAAC,IAAD,CAAajM,UAAU,qDACrBK,EAAKS,qBACPuE,IAAkBC,YAClB,cAAC,IAAD,CAAoBtF,UAAU,qDAC5BK,EAAKS,qBACPuE,IAAkBuM,KAClB,cAAC,IAAD,CAAoB5R,UAAU,sDAC5BK,EAAKS,qBACPuE,IAAkB4J,WAClB,cAAC,IAAD,CAAoBjP,UAAU,uDAE9B,cAAC,IAAD,CAAaA,UAAU,uDAG3B,sBAAKA,UAAU,aAAf,UACE,sBACEA,UAAS,qDAEfK,EAAKS,qBACLuE,IAAkBmB,UACdnG,EAAKS,qBACLuE,IAAkB4G,SAChB,0CACA5L,EAAKS,qBACLuE,IAAkBC,YAClB,0CACAjF,EAAKS,qBACLuE,IAAkBuM,KAClB,2CACAvR,EAAKS,qBACLuE,IAAkB4J,WAClB,4CACA,0CACF,2CAlBA,SAqBG5O,EAAK6I,SAASwI,iBAEjB,qBAAK1R,UAAU,sCAAf,SACE,sBAAKA,UAAU,sBAAf,UACE,8BACE,sBAAKA,UAAU,uDAAf,UACE,sBACEA,UAAS,UACPK,EAAKS,qBACLuE,IAAkB4G,SACd,kBACA,gBAJG,oBASV5L,EAAKS,qBACNuE,IAAkBmB,UAChB,sBACExG,UAAS,qBACP,YAAK0B,MAAMmC,wBAAX,eACIkC,eACJ1F,EAAK6I,SAASnD,YACV,gEACA,mCALG,cADX,mBAUIrF,IAA6BC,MAC3B,SAACC,GAAD,OACEA,EAAIC,MACJR,EAAKS,6BAbb,aAUI,EAIGC,UAGLV,EAAKS,qBACPuE,IAAkB4G,SAClB,sBACEjM,UAAS,qBACP,YAAK0B,MAAMmC,wBAAX,eACIkC,eACJ1F,EAAK6I,SAASnD,YACV,sEACA,wCALG,cADX,mBAUIrF,IAA6BC,MAC3B,SAACC,GAAD,OACEA,EAAIC,MACJR,EAAKS,6BAbb,aAUI,EAIGC,UAGLV,EAAKS,qBACPuE,IAAkBC,YAClB,sBACEtF,UAAS,qBACP,YAAK0B,MAAMmC,wBAAX,eACIkC,eACJ1F,EAAK6I,SAASnD,YACV,gEACA,oCALG,cADX,mBAUIrF,IAA6BC,MAC3B,SAACC,GAAD,OACEA,EAAIC,MACJR,EAAKS,6BAbb,aAUI,EAIGC,UAGLV,EAAKS,qBACPuE,IAAkBuM,KAClB,sBACE5R,UAAS,qBACP,YAAK0B,MAAMmC,wBAAX,eACIkC,eACJ1F,EAAK6I,SAASnD,YACV,mEACA,sCALG,cADX,mBAUIrF,IAA6BC,MAC3B,SAACC,GAAD,OACEA,EAAIC,MACJR,EAAKS,6BAbb,aAUI,EAIGC,UAIP,sBACEf,UAAS,qBACP,YAAK0B,MAAMmC,wBAAX,eACIkC,eACJ1F,EAAK6I,SAASnD,YACV,sEACA,wCALG,cADX,mBAUIrF,IAA6BC,MAC3B,SAACC,GAAD,OACEA,EAAIC,MACJR,EAAKS,6BAbb,aAUI,EAIGC,eAMb,sBAAKf,UAAU,gBAAf,UACE,sBACEA,UAAS,UACPK,EAAKS,qBACLuE,IAAkBmB,WACdnG,EAAKS,qBACLuE,IAAkB4G,WAEhB5L,EAAKS,mBACLuE,IAAkBC,aAFlB,iBAKF,mBAKR,uBACEtF,UAAS,UACPK,EAAKS,qBACLuE,IAAkBmB,WACdnG,EAAKS,qBACLuE,IAAkB4G,WAEhB5L,EAAKS,mBACLuE,IAAkBC,aAFlB,iBAKF,aAVG,cADX,UAcGjF,EAAK8F,qBACJ9F,EAAK8F,oBACFwL,kBAAmB,IAhB1B,IAiBI,IACDtR,EAAK8F,qBACJ9F,EAAK8F,oBAAoBwB,UAE7B,sBAAK3H,UAAU,sBAAf,UACE,sBACEA,UAAS,UACPK,EAAKS,qBACLuE,IAAkBmB,WACdnG,EAAKS,qBACLuE,IAAkB4G,WAEhB5L,EAAKS,mBACLuE,IAAkBC,aAFlB,iBAKF,iBAXR,mBAgBA,sBACEtF,UAAS,UACPK,EAAKS,qBACLuE,IAAkBmB,WACdnG,EAAKS,qBACLuE,IAAkB4G,WAEhB5L,EAAKS,mBACLuE,IAAkBC,aAFlB,iBAKF,aAVG,cADX,SAcG/E,YAAKF,EAAKwS,UAAW,8BAOlC,qBAAK7S,UAAU,6DAAf,SAEE,sBAAKA,UAAU,sDAAf,UAIGK,EAAKS,qBACJuE,IAAkBC,aAClB,qBACEtF,UAAU,eACVgM,MAAM,iDACNzJ,QAAS,WACP,EAAKxC,MAAM+R,sBAAsBzR,IAJrC,SAOE,cAAC,IAAD,CAAM2B,GAAG,sBAAT,SACE,qBAAKhC,UAAU,sGAAf,SACE,6DAKPK,EAAKS,qBACNuE,IAAkB4G,SAChB,qBAAKjM,UAAU,0JAAf,gCAIA,qBAAKA,UAAU,sGAAf,8BAvSHM,EAAI,sBAyTI,IAAhCqB,KAAKD,MAAMgP,kBACV,cAACoC,EAAA,EAAD,CACE9G,MAAO,qBAAKhM,UAAU,WAAf,6BACP+S,UAAU,EACVrD,MAAOsD,IAAOC,QACdC,MAAO,kBAAM,EAAK/R,SAAS,CAAEuP,kBAAkB,KAC/CyC,eAAe,EACfC,eAAgBC,IAAUC,WAC1BC,cAAc,EACdC,QAAS,CAAExH,OAAO,EAAMyH,MAAM,GARhC,SAUE,cAACC,GAAA,EAAD,CACEpI,mBAC4C,OAA1C3J,KAAK5B,MAAM0F,QAAQ6F,oBACmC,OAAtD3J,KAAK5B,MAAM+M,aAAalB,0BACpBjK,KAAK5B,MAAM0F,QAAQ6F,mBAAmBvH,QACpC,SAAC4P,GAAD,OAEI,OADF,EAAK5T,MAAM+M,aAAalB,2BAExB+H,EAAGC,cACD,EAAK7T,MAAM+M,aAAalB,0BACrBC,0BAETlK,KAAK5B,MAAM0F,QAAQ6F,mBAEzB0B,kBAAmBrL,KAAK5B,MAAMiN,kBAC9B0D,iBAAkB/O,KAAK8O,wBAID,OAA3B9O,KAAKD,MAAM2P,aACV,cAACyB,EAAA,EAAD,CACE9G,MACE,sBAAKhM,UAAU,gBAAf,UACE,sBAAMA,UAAU,wCAAhB,SACG2B,KAAKD,MAAM2P,YAAYnI,SAASwI,iBAEnC,sBAAM1R,UAAU,YAAhB,uCAGJ+S,UAAU,EACVrD,MAAOsD,IAAOC,QACdC,MAAO,kBAAM,EAAK/R,SAAS,CAAEkQ,YAAa,QAC1C8B,eAAe,EACfC,eAAgBC,IAAUC,WAC1BC,cAAc,EACdC,QAAS,CAAExH,OAAO,EAAMyH,MAAM,GAfhC,SAiBE,cAAC,GAAD,CACEvK,SAAUvH,KAAKD,MAAM2P,YACrB/G,KAAM3I,KAAK5B,MAAMsK,KAAKC,YAruBvB,cAAC,IAAD,CAAUtI,GAAG,aARb,cAAC,IAAD,CAAUA,GAAG,U,GAjWWsB,aA4nCxBuQ,GAAwBjH,aArCb,SAAC,GAuBvB,MAAO,CACLvC,KAFC,EArBHA,KAwBE0D,YAHC,EApBHA,YAwBEtI,QAJC,EAnBHA,QAwBEqO,OALC,EAlBHA,OAwBEjO,UANC,EAjBHA,UAwBE2I,sBAPC,EAhBHA,sBAwBE5M,cARC,EAfHA,cAwBEsC,OATC,EAdHA,OAwBEsG,OAVC,EAbHA,OAwBEsC,aAXC,EAZHA,gBA2B4D,CAC5DkE,yBACAhB,oBACAvO,4BACAuL,uBACAwC,oBACAmB,sBACAW,cACAlC,+BACAlJ,2BACAkE,mBACApE,yBACAT,uBACA/C,8BACAsM,uBACAyB,2BACAuB,4BAhBmClF,CAiBlCM,K,uLCjwCG6G,E,kDACJ,WAAYhU,GAAkB,IAAD,8BAC3B,cAAMA,IAORsB,kBAAoB,kBAAM,EAAKtB,MAAMiU,eAAc,IARtB,EAS7BC,qBAAuB,kBAAM,EAAKlU,MAAMiU,eAAc,IANpD,EAAKtS,MAAQ,CACXN,SAAS,GAJgB,E,0CAW7B,WAGE,IAAwB,IAFAO,KAAK5B,MAAMsK,KAAK6J,gBAGtC,OAAO,KAGT,IAAMC,EAAYxS,KAAK5B,MAAM+T,OAAOM,WACpC,OACE,qBACEpU,UAAS,2DACO,IAAdmU,EAAqB,sBAAwB,uBADtC,kGADX,SAKGxS,KAAK5B,MAAMsU,e,GA1BUC,IAAMhR,WAuCvB4O,EAAiBtF,aAPN,SAAC,GAIvB,MAAO,CAAEvC,KADuC,EAFhDA,KAGqByJ,OAD2B,EADhDA,UAKqD,CACrDS,eACAP,oBAF4BpH,CAG3BmH,GAwCUS,EAA2C,SAAC,GAKpC,IAAD,IAJlBxI,aAIkB,MAJV,GAIU,MAHlByI,YAGkB,MAHXC,IAGW,MAFlBrC,cAEkB,aADlBhJ,aACkB,MADV,EACU,EACZsL,EAAcF,EACpB,OACE,0BACEzU,UAAS,WACI,IAAXqS,EACI,mCACA,4BAHG,+HADX,UAOE,0BAASrS,UAAU,SAAnB,UACE,cAAC2U,EAAD,CAAa3U,UAAU,8BACvB,+BAAOgM,OAGR3C,EAAQ,EACP,sBAAMrJ,UAAU,0DAAhB,SACGqJ,IAED","file":"static/js/15.50581720.chunk.js","sourcesContent":["import React from 'react'\nimport { applicationHistory, ApplicationStatesDescription } from '../../../interfaces/application'\nimport { DATE } from '../../../utils/functions'\n\ninterface ApplicationHistoryProps {\n  applicationHistory: applicationHistory[];\n}\n\nconst ApplicationHistory = (props: ApplicationHistoryProps) => {\n  return (\n    <div className=\"flex flex-col justify-between items-start gap-1 bg-white px-3 py-2\">\n      {/* <span className=\"text-sm text-blue-800 font-bold\">Application status history</span> */}\n      <hr className=\"bg-blue-600\" />\n      <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-3\">\n      {props.applicationHistory !== undefined &&\n        props.applicationHistory.length > 0 && \n        props.applicationHistory.map((item, i) => (\n          <div key={i + 1} className=\"col-span-1 flex flex-col border border-blue-500 rounded px-3 py-2\">\n            <div className=\"flex flex-row gap-2 justify-start items-center text-xs\">\n              <span className=\"text-gray-500\">Date:</span>\n              <span className=\"font-bold\">{DATE(item.date, \"DD/MM/YYYY\")}</span>\n            </div>\n            <div className=\"flex flex-row gap-2 justify-start items-center text-xs\">\n              <span className=\"text-gray-500\">Action:</span>\n              <span className=\"font-bold\">{item.comment}</span>\n            </div>\n            <div className=\"flex flex-row gap-2 justify-start items-center text-xs\">\n              <span className=\"text-gray-500\">Application status:</span>\n              <span className=\"font-bold\">{ApplicationStatesDescription.find(itm => itm.key === item.application_status)?.caption}</span>\n            </div>\n          </div>\n        ))}\n      </div> \n    </div>\n  )\n}\n\nexport default ApplicationHistory\n","import React, { Component } from \"react\";\nimport { MdInfo, MdLocationOn } from \"react-icons/md\";\nimport { Redirect } from \"react-router-dom\";\nimport { applicationPeriodsStoreInterface } from \"../../../actions/application_periods\";\nimport {\n  candidateExamStoreInterface,\n  InitialExamDetails,\n} from \"../../../actions/candidate_exam\";\nimport { LocationsDataStoreInterface } from \"../../../actions/locations_data\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { LoadingType } from \"../../../components/Loading/LoadingV2\";\nimport { applicationExamAPI } from \"../../../interfaces/application\";\nimport { DATE } from \"../../../utils/functions\";\nimport { LocationTableInterface } from \"../../Application/ExamCenter/ChooseExamCenter\";\n\ninterface ExamDetailsProps {\n  locationDetails: applicationExamAPI | undefined;\n  examDetails: InitialExamDetails | null;\n  locationsData: LocationsDataStoreInterface;\n  loadAllLocationsData: (callback: (loading: boolean) => void) => void;\n  setSelectedLocationData: (locationData: LocationTableInterface) => void;\n  periods: applicationPeriodsStoreInterface;\n  loadApplicationPeriods: (callback: (loading: boolean) => void) => void;\n  candidateExam: candidateExamStoreInterface;\n  setSelectedCandidateExam: (selected_exam: InitialExamDetails | null) => void;\n  // selectedCourse: course;\n}\ninterface ExamDetailsState {\n  loading: boolean;\n}\n\nclass ExamDetails extends Component<ExamDetailsProps, ExamDetailsState> {\n  constructor(props: ExamDetailsProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  };\n  componentDidMount = () => {\n    if (\n      this.props.locationsData.Locations_list === null ||\n      this.props.locationsData.Locations_list.length === 0\n    ) {\n      this.props.loadAllLocationsData(this.setLoading);\n    }\n    // if (this.props.periods.applicationPeriods === null || this.props.periods.applicationPeriods.length === 0 || this.props.periods.selected_period === null) {\n    this.props.loadApplicationPeriods(this.setLoading);\n    // }\n  };\n  render() {\n    if (\n      this.props.candidateExam.selected_exam_id !== null &&\n      this.props.candidateExam.selected_exam_details !== null &&\n      this.props.candidateExam.doing_exam === true\n    ) {\n      return <Redirect to=\"/do-exam\" />;\n    }\n    if (this.props.examDetails === null) {\n      return (\n        <div className=\"bg-yellow-50 text-yellow-800 font-bold rounded px-2 py-4 text-center text-3xl border border-yellow-600 mx-4 my-4\">\n          No Exam details found!\n        </div>\n      );\n    }\n    if (this.props.locationDetails === undefined) {\n      return (\n        <div className=\"bg-yellow-50 text-yellow-800 font-bold rounded px-2 py-4 text-center text-3xl border border-yellow-600 mx-4 my-4\">\n          No exam location details found!\n        </div>\n      );\n    }\n    return (\n      <div>\n        {this.state.loading === true ? (\n          <div className=\"px-4 py-4 rounded bg-gray-100\">\n            <Loading type={LoadingType.dark} />\n          </div>\n        ) : (\n          <div>\n            <div className=\"bg-gray-100 rounded mx-2 mb-2 px-2 py-2\">\n              <div className=\"font-bold text-xl text-blue-600 mb-4 flex flex-row items-center justify-between gap-2 bg-white py-2 px-2 rounded\">\n                <div className=\"flex flex-row items-center gap-2\">\n                  <MdInfo className=\"text-4xl text-blue-600\" />\n                  Exam information\n                </div>\n                <button\n                  onClick={() => {\n                    // this.props.setSelectedCourse(this.props.selectedCourse);\n                    this.props.examDetails &&\n                      this.props.setSelectedCandidateExam(\n                        this.props.examDetails\n                      );\n                  }}\n                  type=\"button\"\n                  className={`btn ${\n                    this.props.candidateExam.selected_exam_id !== null\n                      ? \"bg-yellow-700 hover:bg-yellow-900\"\n                      : \"bg-blue-600 hover:bg-blue-700\"\n                  } text-white cursor-pointer text-base`}\n                >\n                  {this.props.candidateExam.selected_exam_id !== null\n                    ? \"Return to Exam\"\n                    : \"Start Exam\"}\n                </button>\n              </div>\n              <div className=\"grid md:grid-cols-3 gap-4\">\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col pl-2 border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Exam date:\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {DATE(this.props.examDetails.exam_date, \"DD/MM/YYYY\")}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col pl-2 border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Exam start time:\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {this.props.examDetails.start_time}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col pl-2 border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Exam duration:\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {this.props.examDetails.duration / 60} hours{\" \"}\n                      {this.props.examDetails.duration % 60 > 0 && (\n                        <div>{this.props.examDetails.duration % 60} mins</div>\n                      )}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-3\">\n                  <div className=\"flex flex-col px-2 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Exam description:\n                    </span>\n                    <span className=\"text-gray-700 font-bold px-2 py-2 rounded bg-white mt-2\">\n                      {this.props.examDetails.discription}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-3\">\n                  <div className=\"flex flex-col px-2 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Terms and conditions / Rules:\n                    </span>\n                    <div\n                      className=\"px-2 py-2 rounded bg-white mt-2\"\n                      dangerouslySetInnerHTML={{\n                        __html: this.props.examDetails.termes,\n                      }}\n                    ></div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"bg-gray-100 rounded mx-2 mb-2 px-2 py-2\">\n              <div className=\"font-bold text-xl text-blue-600 mb-4 flex flex-row items-center justify-between gap-2 bg-white py-2 px-2 rounded\">\n                <div className=\"flex flex-row items-center gap-2\">\n                  <MdLocationOn className=\"text-4xl text-blue-600\" />\n                  Examination location\n                </div>\n              </div>\n              <div className=\"grid md:grid-cols-3 gap-4 px-2\">\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col border-b border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Province:\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {this.props.locationsData.Locations_list &&\n                        this.props.locationsData.Locations_list.find(\n                          (itm) =>\n                            this.props.locationDetails !== undefined &&\n                            itm.center_id ===\n                              this.props.locationDetails.center_id\n                        )?.province_name}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col border-b border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      District:\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {this.props.locationsData.Locations_list &&\n                        this.props.locationsData.Locations_list.find(\n                          (itm) =>\n                            this.props.locationDetails !== undefined &&\n                            itm.center_id ===\n                              this.props.locationDetails.center_id\n                        )?.district_name}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col border-b border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Center:{\" \"}\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {this.props.locationDetails.center_name}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col border-b border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Room number:{\" \"}\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {this.props.locationDetails.room_number}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col border-b border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Proctoring type\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {this.props.locationDetails.proctoring_type}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ExamDetails;\n","import React, { Component } from \"react\";\nimport { CgCheckO } from \"react-icons/cg\";\nimport { IoMdInformationCircleOutline } from \"react-icons/io\";\nimport { RiCheckboxBlankCircleFill, RiErrorWarningLine } from \"react-icons/ri\";\nimport { applicationPeriodsStoreInterface } from \"../../../actions/application_periods\";\nimport {\n  candidateExamStoreInterface,\n  InitialExamDetails,\n} from \"../../../actions/candidate_exam\";\nimport { courseStoreInterface } from \"../../../actions/course\";\nimport { positionsStoreInterface } from \"../../../actions/positions\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport {\n  applicationExamAPI,\n  ApplicationStates,\n  GetApplicationsAPI,\n} from \"../../../interfaces/application\";\nimport { course } from \"../../../interfaces/course\";\nimport { UserExamStatus } from \"../../../interfaces/exam\";\nimport { PositionAPI, PositionAPICourse } from \"../../../interfaces/position\";\nimport { DATE } from \"../../../utils/functions\";\nimport { ExamTimeStatus, validateExamDate } from \"../../../utils/question_bank\";\n\ninterface PreparedExamsProps {\n  selectedPosition: PositionAPI;\n  selectedExams: applicationExamAPI[] | null;\n  findExam: (courseId: string) => InitialExamDetails | null;\n  loadingExams: boolean;\n  loadingExamsDone: boolean;\n  setMaxExamModal: (status: boolean) => void;\n  course: courseStoreInterface;\n  setSelectedCourse: (course: course | null) => void;\n  candidateExam: candidateExamStoreInterface;\n  positions: positionsStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n  setSelectedPosition: (position: PositionAPI) => void;\n  setSelectedCandidateExam: (selected_exam: InitialExamDetails | null) => void;\n  changeLocation: (item: PositionAPICourse) => void;\n  selectedApplicationDetails: GetApplicationsAPI;\n  setDoingExam: (status: boolean) => void;\n  InitializeExamDetails: (\n    periodId: string,\n    courseId: string,\n    district_id: string,\n    center_id: string,\n    room_id: string,\n    position: PositionAPI,\n    start_exam: boolean,\n    callback: (loading: boolean) => void\n  ) => void;\n  setLoadingExams: (status: boolean) => void;\n}\ninterface PreparedExamsState {}\n\nexport class PreparedExams extends Component<\n  PreparedExamsProps,\n  PreparedExamsState\n> {\n  checkProctoringType = (item: PositionAPICourse) => {\n    if (this.props.selectedExams !== null) {\n      let check = this.props.selectedExams.find(\n        (itm) => itm.course_id === item.course_id\n      );\n      if (check !== undefined) {\n        return check.proctoring_type;\n      }\n    }\n    return \"\";\n  };\n  render() {\n    let NotPreparedExamsFilter = this.props.selectedPosition.courses.filter(\n      (itm) =>\n        this.props.candidateExam.user_exams_done.filter(\n          (ex) => ex.course === itm.course_id\n        ).length === 0 && this.props.findExam(itm.course_id) === null\n    );\n    let PreparedExamsFilter = this.props.selectedPosition.courses.filter(\n      (itm) =>\n        this.props.candidateExam.user_exams_done.filter(\n          (ex) => ex.course === itm.course_id\n        ).length === 0 && this.props.findExam(itm.course_id) !== null\n    );\n    let AllPendingExams = [...PreparedExamsFilter, ...NotPreparedExamsFilter];\n    let totalPending =\n      NotPreparedExamsFilter.length + PreparedExamsFilter.length;\n    return (\n      <div className=\"bg-white px-2 py-2\">\n        <div className=\"bg-gray-100 rounded px-2 py-2\">\n          <div className=\"flex flex-row items-center justify-between text-xl mb-3 mx-2\">\n            <span className=\"font-bold \">Waiting exams</span>\n            <span className=\"font-bold bg-white text-blue-600 rounded-full px-2 text-base border border-blue-200\">\n              {this.props.selectedPosition !== null &&\n                this.props.selectedExams !== null &&\n                this.props.loadingExams === false &&\n                totalPending}\n            </span>\n          </div>\n          <div className=\"flex flex-col gap-2\">\n            {this.props.selectedPosition === null ||\n            this.props.selectedExams === null ||\n            this.props.loadingExams === true ? (\n              <Loading />\n            ) : AllPendingExams.length === 0 ? (\n              <div className=\"border border-gray-200 text-gray-400 font-bold rounded-md px-3 py-3 text-center\">\n                <div className=\"flex justify-center items-center w-full text-4xl\">\n                  <IoMdInformationCircleOutline />\n                </div>\n                <div className=\"text-gray-500\">No exams found!</div>\n              </div>\n            ) : (\n              AllPendingExams.map((item, i) => (\n                <div\n                  key={i + 1}\n                  className={`px-3 py-2 rounded group bg-white border`}\n                >\n                  <div className=\"grid md:grid-cols-12 gap-2\">\n                    {/* First col */}\n                    <div className=\"col-span-12 md:col-span-6 lg:col-span-4 flex fex-row items-center gap-3\">\n                      <div className=\"flex flex-row gap-2 items-center\">\n                        <div\n                          className={`text-gray-300 group-hover:text-white flex flex-row items-center gap-2 text-right ml-2`}\n                        >\n                          {this.props.findExam(item.course_id) !== null ? (\n                            <CgCheckO className=\"text-4xl text-blue-600\" />\n                          ) : (\n                            <RiCheckboxBlankCircleFill className=\"text-4xl text-blue-100\" />\n                          )}\n                        </div>\n                      </div>\n                      <div className=\"flex flex-col\">\n                        <div className={`font-bold text-gray-600 truncate`}>\n                          {item.course_name}\n                        </div>\n                        <div className=\"flex flex-row justify-start items-center gap-2\">\n                          <span className=\"text-gray-500 text-xs\">\n                            Exam date:{\" \"}\n                          </span>\n                          {this.props.findExam(item.course_id) !== null ? (\n                            <div className=\"flex flex-row items-center gap-2\">\n                              {validateExamDate(\n                                this.props.findExam(item.course_id)!.exam_date,\n                                this.props.findExam(item.course_id)!.start_time,\n                                this.props.findExam(item.course_id)!.end_time\n                              ) === ExamTimeStatus.Online ? (\n                                <span className=\"bg-blue-100 text-blue-600 font-bold px-2 rounded-full\">\n                                  {validateExamDate(\n                                    this.props.findExam(item.course_id)!\n                                      .exam_date,\n                                    this.props.findExam(item.course_id)!\n                                      .start_time,\n                                    this.props.findExam(item.course_id)!\n                                      .end_time\n                                  )}\n                                </span>\n                              ) : validateExamDate(\n                                  this.props.findExam(item.course_id)!\n                                    .exam_date,\n                                  this.props.findExam(item.course_id)!\n                                    .start_time,\n                                  this.props.findExam(item.course_id)!.end_time\n                                ) === ExamTimeStatus.Expired ? (\n                                <span className=\"italic text-yellow-700 underline\">\n                                  {validateExamDate(\n                                    this.props.findExam(item.course_id)!\n                                      .exam_date,\n                                    this.props.findExam(item.course_id)!\n                                      .start_time,\n                                    this.props.findExam(item.course_id)!\n                                      .end_time\n                                  )}\n                                </span>\n                              ) : (\n                                <span className=\"italic\">\n                                  {validateExamDate(\n                                    this.props.findExam(item.course_id)!\n                                      .exam_date,\n                                    this.props.findExam(item.course_id)!\n                                      .start_time,\n                                    this.props.findExam(item.course_id)!\n                                      .end_time\n                                  )}\n                                </span>\n                              )}\n                              <span className=\"font-bold text-blue-600 text-sm\">\n                                {DATE(\n                                  this.props.findExam(item.course_id)!\n                                    .exam_date,\n                                  \"DD/MM/YYYY\"\n                                )}\n                              </span>\n                              <span\n                                className={`bg-blue-100 text-blue-600 font-bold px-2 py-1 rounded-full text-sm`}\n                              >\n                                {\n                                  this.props.findExam(item.course_id)!\n                                    .start_time\n                                }\n                              </span>\n                            </div>\n                          ) : (\n                            <span className=\"text-gray-500 text-sm\">\n                              Waiting for preparation\n                            </span>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                    {/* Second col */}\n                    <div className=\"col-span-12 md:col-span-6 lg:col-span-4 flex flex-col items-start justify-center\">\n                      {this.props.selectedExams === null ? (\n                        \"\"\n                      ) : this.props.selectedExams.find(\n                          (itm) => itm.course_id === item.course_id\n                        ) !== undefined ? (\n                        <>\n                          <div className=\"flex flex-row justify-start items-center gap-2\">\n                            <span className=\"text-gray-500 text-xs\">\n                              Proctoring type:{\" \"}\n                            </span>\n                            <span className=\"text-black font-bold text-sm bg-yellow-200 rounded-full px-2\">\n                              {this.checkProctoringType(item)}\n                            </span>\n                          </div>\n                          <div className=\"flex flex-col justify-center items-start gap-2\">\n                            {/* <span className=\"text-gray-500 text-xs\">\n                              Exam location:{\" \"}\n                            </span> */}\n                            <span className={`text-gray-700 font-bold text-sm`}>\n                              Center:{\" \"}\n                              {this.props.selectedExams === null ? (\n                                \"\"\n                              ) : this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                ) !== undefined ? (\n                                this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                )?.center_name\n                              ) : (\n                                <span className=\"italic text-xs\">\n                                  No location selected\n                                </span>\n                              )}\n                            </span>\n                            <span className={`text-gray-700 font-bold text-sm`}>\n                              Room:{\" \"}\n                              {this.props.selectedExams === null ? (\n                                \"\"\n                              ) : this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                ) !== undefined ? (\n                                this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                )?.room_number === 0 ? (\n                                  <span className=\"bg-yellow-100 text-yellow-700 font-bold px-2 py-1 rounded\">\n                                    Waiting room, you are advised to choose\n                                    another center\n                                  </span>\n                                ) : (\n                                  <span className=\"text-blue-600 bg-blue-100 px-2 py-1 rounded\">\n                                    No:{\" \"}\n                                    {\n                                      this.props.selectedExams.find(\n                                        (itm) =>\n                                          itm.course_id === item.course_id\n                                      )?.room_number\n                                    }\n                                  </span>\n                                )\n                              ) : (\n                                <span className=\"italic text-xs\">\n                                  No location selected\n                                </span>\n                              )}\n                            </span>\n                          </div>\n                        </>\n                      ) : (\n                        <div className=\"flex flex-row gap-2 items-center justify-start\">\n                          <RiErrorWarningLine className=\"text-xl text-yellow-700\" />\n                          <span className=\"text-yellow-700 italic text-sm\">\n                            No location selected\n                          </span>\n                        </div>\n                      )}\n                    </div>\n                    {/* Third col */}\n                    <div className=\"col-span-12 md:col-span-12 lg:col-span-4 flex items-center justify-start lg:justify-end\">\n                      {this.props.selectedExams === null ? (\n                        \"\"\n                      ) : this.props.selectedExams.find(\n                          (itm) => itm.course_id === item.course_id\n                        ) !== undefined ? (\n                        <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                          {this.props.loadingExams === true ||\n                          this.props.loadingExamsDone === true ? (\n                            <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">\n                              Checking...\n                            </div>\n                          ) : (\n                            ((this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            ) === undefined &&\n                              this.props.findExam(item.course_id) !== null &&\n                              validateExamDate(\n                                this.props.findExam(item.course_id)!.exam_date,\n                                this.props.findExam(item.course_id)!.start_time,\n                                this.props.findExam(item.course_id)!.end_time\n                              ) === ExamTimeStatus.Waiting) ||\n                              this.props.findExam(item.course_id) === null) && (\n                              <div>\n                                <div\n                                  onClick={() =>\n                                    this.props.changeLocation(item)\n                                  }\n                                  className=\"btn text-blue-600 border border-white cursor-pointer group-hover:bg-blue-600 hover:bg-blue-800 group-hover:text-white bg-blue-100 text-sm w-40 text-center\"\n                                >\n                                  Change location\n                                </div>\n                              </div>\n                            )\n                          )}\n                          {this.props.loadingExams === true ||\n                          this.props.loadingExamsDone === true ? (\n                            <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">\n                              Checking...\n                            </div>\n                          ) : (\n                            this.props.findExam(item.course_id) !== null &&\n                            this.props.findExam(item.course_id)?.course !==\n                              undefined &&\n                            this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            )?.user_status !== UserExamStatus.Editing &&\n                            validateExamDate(\n                              this.props.findExam(item.course_id)!.exam_date,\n                              this.props.findExam(item.course_id)!.start_time,\n                              this.props.findExam(item.course_id)!.end_time\n                            ) === ExamTimeStatus.Online &&\n                            this.props.selectedApplicationDetails\n                              .application_status ===\n                              ApplicationStates.Shortlisted && (\n                              <div\n                                onClick={() => {\n                                  this.props.course.courses &&\n                                    this.props.setSelectedCourse(\n                                      this.props.course.courses.find(\n                                        (itm) =>\n                                          itm.course_id === item.course_id\n                                      )!\n                                    );\n                                  this.props.findExam(item.course_id) !==\n                                    null &&\n                                    this.setState({\n                                      appointmentDetailsModal: {\n                                        status: true,\n                                        item: this.props.findExam(\n                                          item.course_id\n                                        ),\n                                      },\n                                    });\n                                }}\n                                className=\"hidden btn border border-blue-500 text-blue-600 cursor-pointer hover:bg-blue-600 hover:text-white text-sm text-center\"\n                              >\n                                Details\n                              </div>\n                            )\n                          )}\n                          {this.props.loadingExams === true ||\n                          this.props.loadingExamsDone === true ? (\n                            <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">\n                              Checking...\n                            </div>\n                          ) : (\n                            this.props.periods.selected_period !== null &&\n                            this.props.periods.selected_period.is_active ===\n                              true &&\n                            this.props.findExam(item.course_id) !== null &&\n                            this.props.findExam(item.course_id)?.id !==\n                              undefined &&\n                            validateExamDate(\n                              this.props.findExam(item.course_id)!.exam_date,\n                              this.props.findExam(item.course_id)!.start_time,\n                              this.props.findExam(item.course_id)!.end_time\n                            ) === ExamTimeStatus.Online &&\n                            this.props.selectedApplicationDetails\n                              .application_status ===\n                              ApplicationStates.Shortlisted && (\n                              <div\n                                onClick={() => {\n                                  if (this.props.selectedPosition !== null) {\n                                    if (\n                                      this.props.positions.selected_position ===\n                                        null ||\n                                      this.props.positions.selected_position\n                                        .position_id !==\n                                        this.props.selectedPosition.position_id\n                                    ) {\n                                      this.props.setSelectedPosition(\n                                        this.props.selectedPosition\n                                      );\n                                    }\n                                    this.props.selectedExams !== null &&\n                                      this.props.course.courses &&\n                                      this.props.setSelectedCourse(\n                                        this.props.course.courses.find(\n                                          (itm) =>\n                                            itm.course_id === item.course_id\n                                        )!\n                                      );\n                                    this.props.selectedExams !== null &&\n                                      this.props.findExam(item.course_id) !==\n                                        null &&\n                                      this.props.setSelectedCandidateExam(\n                                        this.props.findExam(item.course_id)\n                                      );\n                                    this.props.setDoingExam(true);\n                                    this.props.selectedExams &&\n                                      this.props.InitializeExamDetails(\n                                        this.props.selectedApplicationDetails\n                                          .application_session._id,\n                                        item.course_id,\n                                        this.props.selectedExams.find(\n                                          (itm) =>\n                                            itm.course_id === item.course_id\n                                        )!.district_id,\n                                        this.props.selectedExams.find(\n                                          (itm) =>\n                                            itm.course_id === item.course_id\n                                        )!.center_id,\n                                        this.props.selectedExams.find(\n                                          (itm) =>\n                                            itm.course_id === item.course_id\n                                        )!.room_id,\n                                        this.props.selectedPosition,\n                                        true,\n                                        this.props.setLoadingExams\n                                      );\n                                  }\n                                }}\n                                className={`btn border ${\n                                  this.props.candidateExam.user_exams_done.find(\n                                    (itm) => itm.course === item.course_id\n                                  )?.user_status !== UserExamStatus.Editing\n                                    ? \"border-blue-500 bg-blue-600 hover:text-blue-600\"\n                                    : \"border-green-500 bg-green-600 hover:text-green-600\"\n                                } text-white cursor-pointer hover:bg-white text-sm w-max text-center`}\n                              >\n                                {this.props.candidateExam.user_exams_done.find(\n                                  (itm) => itm.course === item.course_id\n                                )?.user_status !== UserExamStatus.Editing\n                                  ? \"Start exam\"\n                                  : \"Back to Exam\"}\n                              </div>\n                            )\n                          )}\n                          {this.props.selectedApplicationDetails\n                            .application_status ===\n                            ApplicationStates.Initiated && (\n                            <div className=\"font-semibold text-yellow-800 bg-yellow-50 py-2 px-4 text-base\">\n                              Waiting for shortlisting\n                            </div>\n                          )}\n                        </div>\n                      ) : (\n                        <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) === undefined && (\n                            <div\n                              onClick={() => this.props.changeLocation(item)}\n                              className=\"btn cursor-pointer bg-yellow-700 hover:bg-yellow-50 border border-yellow-700 hover:text-yellow-700 text-white text-sm w-36 text-center\"\n                            >\n                              Add location\n                            </div>\n                          )}\n                        </div>\n                      )}\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) !== undefined &&\n                        this.props.candidateExam.user_exams_done.find(\n                          (itm) => itm.course === item.course_id\n                        )?.user_status !== UserExamStatus.Editing && (\n                          <div className=\"flex flex-row gap-2 items-center\">\n                            <div\n                              className={`text-blue-600 flex flex-row items-center gap-2 text-right ml-2`}\n                            >\n                              <div className=\"flex flex-col gap-0\">\n                                <span className=\"text-sm\">Marks</span>\n                                <span className=\"text-lg font-bold -mt-1\">\n                                  {this.props.candidateExam.user_exams_done\n                                    .find(\n                                      (itm) => itm.course === item.course_id\n                                    )\n                                    ?.total_marks.toFixed(2)}\n                                  %\n                                </span>\n                              </div>\n                            </div>\n                          </div>\n                        )}\n                    </div>\n                  </div>\n                </div>\n              ))\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PreparedExams;\n","import React, { Component } from \"react\";\nimport { HiInformationCircle } from \"react-icons/hi\";\nimport { IoMdInformationCircleOutline } from \"react-icons/io\";\nimport { MdCheckCircle, MdPauseCircleFilled } from \"react-icons/md\";\nimport { RiCheckboxBlankCircleFill, RiErrorWarningLine } from \"react-icons/ri\";\nimport { applicationPeriodsStoreInterface } from \"../../../actions/application_periods\";\nimport {\n  candidateExamStoreInterface,\n  InitialExamDetails,\n} from \"../../../actions/candidate_exam\";\nimport { courseStoreInterface } from \"../../../actions/course\";\nimport { positionsStoreInterface } from \"../../../actions/positions\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport {\n  applicationExamAPI,\n  ApplicationStates,\n  GetApplicationsAPI,\n} from \"../../../interfaces/application\";\nimport { course } from \"../../../interfaces/course\";\nimport { UserExamStatus } from \"../../../interfaces/exam\";\nimport { PositionAPI } from \"../../../interfaces/position\";\nimport { DATE } from \"../../../utils/functions\";\nimport { ExamTimeStatus, validateExamDate } from \"../../../utils/question_bank\";\n\ninterface ActiveExamsProps {\n  selectedPosition: PositionAPI;\n  selectedExams: applicationExamAPI[] | null;\n  findExam: (courseId: string) => InitialExamDetails | null;\n  loadingExams: boolean;\n  loadingExamsDone: boolean;\n  setMaxExamModal: (status: boolean) => void;\n  course: courseStoreInterface;\n  setSelectedCourse: (course: course | null) => void;\n  candidateExam: candidateExamStoreInterface;\n  positions: positionsStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n  setSelectedPosition: (position: PositionAPI) => void;\n  setSelectedCandidateExam: (selected_exam: InitialExamDetails | null) => void;\n  selectedApplicationDetails: GetApplicationsAPI;\n  setDoingExam: (status: boolean) => void;\n  InitializeExamDetails: (\n    periodId: string,\n    courseId: string,\n    district_id: string,\n    center_id: string,\n    room_id: string,\n    position: PositionAPI,\n    start_exam: boolean,\n    callback: (loading: boolean) => void\n  ) => void;\n  setLoadingExams: (status: boolean) => void;\n}\ninterface ActiveExamsState {}\n\nexport class ActiveExams extends Component<ActiveExamsProps, ActiveExamsState> {\n  render() {\n    let ExamsDoneFilterTemp = this.props.selectedPosition.courses.filter(\n      (itm) =>\n        this.props.findExam(itm.course_id) !== null &&\n        this.props.candidateExam.user_exams_done.filter(\n          (ex) =>\n            ex.course === itm.course_id &&\n            validateExamDate(\n              ex.exam_date,\n              ex.exam_start_time,\n              ex.exam_end_time\n            ) === ExamTimeStatus.Online\n        ).length > 0\n    );\n    let ActiveExamsFilter = ExamsDoneFilterTemp.filter(\n      (check) =>\n        this.props.candidateExam.user_exams_done.filter(\n          (itm) => itm.course === check.course_id\n        ) !== undefined &&\n        (this.props.candidateExam.user_exams_done.find(\n          (itm) => itm.course === check.course_id\n        )?.user_status === UserExamStatus.Editing ||\n          this.props.candidateExam.user_exams_done.find(\n            (itm) => itm.course === check.course_id\n          )?.user_status === UserExamStatus.Paused)\n    );\n    return (\n      <>\n        {ActiveExamsFilter.length > 0 ? (\n          <div className=\"bg-white px-2 py-2\">\n            <div className=\"bg-gray-100 rounded px-2 py-2\">\n              <div className=\"flex flex-row items-center justify-between text-xl mb-3 mx-2\">\n                <span className=\"font-bold \">Active exam</span>\n                <span className=\"font-bold bg-white text-green-600 rounded-full px-2 text-base border border-gray-200\">\n                  {this.props.selectedPosition !== null &&\n                    this.props.selectedExams !== null &&\n                    this.props.loadingExams === false &&\n                    ActiveExamsFilter.length}\n                </span>\n              </div>\n              <div className=\"flex flex-col gap-2\">\n                {this.props.selectedPosition === null ||\n                this.props.selectedExams === null ||\n                this.props.loadingExams === true ? (\n                  <Loading />\n                ) : ActiveExamsFilter.length === 0 ? (\n                  <div className=\"border border-gray-200 text-gray-400 font-bold rounded-md px-3 py-3 text-center\">\n                    <div className=\"flex justify-center items-center w-full text-4xl\">\n                      <IoMdInformationCircleOutline />\n                    </div>\n                    <div className=\"text-gray-500\">No exams found!</div>\n                  </div>\n                ) : (\n                  ActiveExamsFilter.map((item, i) => (\n                    <div\n                      key={i + 1}\n                      className={`px-3 py-2 rounded group bg-white border-2 border-green-600 hover:bg-green-50`}\n                    >\n                      <div className=\"grid md:grid-cols-12 gap-2\">\n                        {/* First col */}\n                        <div className=\"col-span-12 md:col-span-6 lg:col-span-4 flex fex-row items-center gap-3\">\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) !== undefined &&\n                            this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            )?.user_status === UserExamStatus.Editing && (\n                              <div className=\"flex flex-row gap-2 items-center\">\n                                <div\n                                  className={`text-green-600 flex flex-row items-center gap-2 text-right ml-2`}\n                                >\n                                  <HiInformationCircle className=\"text-4xl\" />\n                                </div>\n                              </div>\n                            )}\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) !== undefined &&\n                            this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            )?.user_status === UserExamStatus.Done && (\n                              <div className=\"flex flex-row gap-2 items-center\">\n                                <div\n                                  className={`text-blue-600 flex flex-row items-center gap-2 text-right ml-2`}\n                                >\n                                  <MdCheckCircle className=\"text-4xl\" />\n                                </div>\n                              </div>\n                            )}\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) !== undefined &&\n                            this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            )?.user_status === UserExamStatus.Removed && (\n                              <div className=\"flex flex-row gap-2 items-center\">\n                                <div\n                                  className={`text-yellow-800 flex flex-row items-center gap-2 text-right ml-2`}\n                                >\n                                  <MdCheckCircle className=\"text-4xl\" />\n                                </div>\n                              </div>\n                            )}\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) !== undefined &&\n                            this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            )?.user_status === UserExamStatus.Paused && (\n                              <div className=\"flex flex-row gap-2 items-center\">\n                                <div\n                                  className={`text-green-500 flex flex-row items-center gap-2 text-right ml-2`}\n                                >\n                                  <MdPauseCircleFilled className=\"text-4xl\" />\n                                </div>\n                              </div>\n                            )}\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) === undefined &&\n                            this.props.findExam(item.course_id) !== null &&\n                            this.props.findExam(item.course_id)?.id !==\n                              undefined && (\n                              <div className=\"flex flex-row gap-2 items-center\">\n                                <div\n                                  className={`text-blue-600 flex flex-row items-center gap-2 text-right ml-2 animate-ping`}\n                                >\n                                  <HiInformationCircle className=\"text-4xl\" />\n                                </div>\n                              </div>\n                            )}\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) === undefined &&\n                            (this.props.findExam(item.course_id) === null ||\n                              this.props.findExam(item.course_id)?.id ===\n                                undefined) && (\n                              <div className=\"flex flex-row gap-2 items-center\">\n                                <div\n                                  className={`text-gray-300 group-hover:text-white flex flex-row items-center gap-2 text-right ml-2`}\n                                >\n                                  <RiCheckboxBlankCircleFill className=\"text-4xl\" />\n                                </div>\n                              </div>\n                            )}\n                          <div className=\"flex flex-col\">\n                            <div className={`font-bold text-gray-600 truncate`}>\n                              {item.course_name}\n                            </div>\n                            <div className=\"flex flex-row justify-start items-center gap-2\">\n                              <span className=\"text-gray-500 text-xs\">\n                                Exam date:{\" \"}\n                              </span>\n                              <div className=\"flex flex-row items-center gap-2\">\n                                <span className=\"font-bold text-green-600 text-sm\">\n                                  {DATE(\n                                    this.props.findExam(item.course_id)!\n                                      .exam_date,\n                                    \"DD/MM/YYYY\"\n                                  )}\n                                </span>\n                                <span\n                                  className={`bg-gray-100 text-green-600 font-bold px-2 py-1 rounded-full text-sm`}\n                                >\n                                  {\n                                    this.props.findExam(item.course_id)!\n                                      .start_time\n                                  }\n                                </span>\n                                <span\n                                  className={`bg-gray-100 text-gray-800 font-bold px-2 py-1 rounded-full text-sm underline`}\n                                >\n                                  {\n                                    this.props.candidateExam.user_exams_done.find(\n                                      (x) => x.course === item.course_id\n                                    )?.user_status\n                                  }\n                                </span>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        {/* Second col */}\n                        <div className=\"col-span-12 md:col-span-6 lg:col-span-4 flex flex-col items-start justify-center\">\n                          {this.props.selectedExams === null ? (\n                            \"\"\n                          ) : this.props.selectedExams.find(\n                              (itm) => itm.course_id === item.course_id\n                            ) !== undefined ? (\n                            <>\n                              <div className=\"flex flex-row justify-start items-center gap-2\">\n                                <span className=\"text-gray-500 text-xs\">\n                                  Proctoring type:{\" \"}\n                                </span>\n                                <span className=\"text-black font-bold text-sm bg-yellow-200 rounded-full px-2\">\n                                  {this.props.selectedExams === null\n                                    ? \"\"\n                                    : this.props.selectedExams.find(\n                                        (itm) =>\n                                          itm.course_id === item.course_id\n                                      ) !== undefined &&\n                                      this.props.selectedExams.find(\n                                        (itm) =>\n                                          itm.course_id === item.course_id\n                                      )?.proctoring_type}\n                                </span>\n                              </div>\n                              <div className=\"flex flex-col justify-center items-start gap-2\">\n                                {/* <span className=\"text-gray-500 text-xs\">\n                                  Exam location:{\" \"}\n                                </span> */}\n                                <span\n                                  className={`text-gray-700 font-bold text-sm`}\n                                >\n                                  Center:{\" \"}\n                                  {this.props.selectedExams === null ? (\n                                    \"\"\n                                  ) : this.props.selectedExams.find(\n                                      (itm) => itm.course_id === item.course_id\n                                    ) !== undefined ? (\n                                    this.props.selectedExams.find(\n                                      (itm) => itm.course_id === item.course_id\n                                    )?.center_name\n                                  ) : (\n                                    <span className=\"italic text-xs\">\n                                      No location selected\n                                    </span>\n                                  )}\n                                </span>\n                                <span\n                                  className={`text-gray-700 font-bold text-sm`}\n                                >\n                                  Room:{\" \"}\n                                  {this.props.selectedExams === null ? (\n                                    \"\"\n                                  ) : this.props.selectedExams.find(\n                                      (itm) => itm.course_id === item.course_id\n                                    ) !== undefined ? (\n                                    this.props.selectedExams.find(\n                                      (itm) => itm.course_id === item.course_id\n                                    )?.room_number === 0 ? (\n                                      <span className=\"bg-yellow-100 text-yellow-700 font-bold px-2 py-1 rounded\">\n                                        Waiting room, you are advised to choose\n                                        another center\n                                      </span>\n                                    ) : (\n                                      <span className=\"text-blue-600 bg-blue-100 px-2 py-1 rounded\">\n                                        No:{\" \"}\n                                        {\n                                          this.props.selectedExams.find(\n                                            (itm) =>\n                                              itm.course_id === item.course_id\n                                          )?.room_number\n                                        }\n                                      </span>\n                                    )\n                                  ) : (\n                                    <span className=\"italic text-xs\">\n                                      No location selected\n                                    </span>\n                                  )}\n                                </span>\n                              </div>\n                            </>\n                          ) : (\n                            <div className=\"flex flex-row gap-2 items-center justify-start\">\n                              <RiErrorWarningLine className=\"text-xl text-yellow-700\" />\n                              <span className=\"text-yellow-700 italic text-sm\">\n                                No location selected\n                              </span>\n                            </div>\n                          )}\n                        </div>\n                        {/* Third col */}\n                        <div className=\"col-span-12 md:col-span-12 lg:col-span-4 flex items-center justify-start lg:justify-end\">\n                          {this.props.selectedExams === null ? (\n                            \"\"\n                          ) : this.props.selectedExams.find(\n                              (itm) => itm.course_id === item.course_id\n                            ) !== undefined ? (\n                            <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                              {this.props.loadingExams === true ||\n                              this.props.loadingExamsDone === true ? (\n                                <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">\n                                  Checking...\n                                </div>\n                              ) : (\n                                this.props.candidateExam.user_exams_done.find(\n                                  (itm) => itm.course === item.course_id\n                                ) === undefined && (\n                                  <div\n                                    onClick={() => {\n                                      this.setState({\n                                        selectedCourse: item,\n                                        centersModal: true,\n                                      });\n                                      this.props.setMaxExamModal(true);\n                                    }}\n                                    className=\"btn text-blue-600 border border-white cursor-pointer group-hover:bg-blue-600 hover:bg-blue-800 group-hover:text-white bg-blue-100 text-sm w-40 text-center\"\n                                  >\n                                    Change location\n                                  </div>\n                                )\n                              )}\n                              {this.props.loadingExams === true ||\n                              this.props.loadingExamsDone === true ? (\n                                <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">\n                                  Checking...\n                                </div>\n                              ) : (\n                                this.props.periods.selected_period !== null &&\n                                this.props.periods.selected_period.is_active ===\n                                  true &&\n                                this.props.findExam(item.course_id) !== null &&\n                                this.props.findExam(item.course_id)?.id !==\n                                  undefined &&\n                                this.props.selectedApplicationDetails\n                                  .application_status ===\n                                  ApplicationStates.Shortlisted && (\n                                  <div\n                                    onClick={() => {\n                                      if (\n                                        this.props.selectedPosition !== null\n                                      ) {\n                                        if (\n                                          this.props.positions\n                                            .selected_position === null ||\n                                          this.props.positions.selected_position\n                                            .position_id !==\n                                            this.props.selectedPosition\n                                              .position_id\n                                        ) {\n                                          this.props.setSelectedPosition(\n                                            this.props.selectedPosition\n                                          );\n                                        }\n                                        this.props.selectedExams !== null &&\n                                          this.props.course.courses &&\n                                          this.props.setSelectedCourse(\n                                            this.props.course.courses.find(\n                                              (itm) =>\n                                                itm.course_id === item.course_id\n                                            )!\n                                          );\n                                        this.props.selectedExams !== null &&\n                                          this.props.findExam(\n                                            item.course_id\n                                          ) !== null &&\n                                          this.props.setSelectedCandidateExam(\n                                            this.props.findExam(item.course_id)\n                                          );\n                                        this.props.setDoingExam(true);\n                                        this.props.selectedExams &&\n                                          this.props.InitializeExamDetails(\n                                            this.props\n                                              .selectedApplicationDetails\n                                              .application_session._id,\n                                            item.course_id,\n                                            this.props.selectedExams.find(\n                                              (itm) =>\n                                                itm.course_id === item.course_id\n                                            )!.district_id,\n                                            this.props.selectedExams.find(\n                                              (itm) =>\n                                                itm.course_id === item.course_id\n                                            )!.center_id,\n                                            this.props.selectedExams.find(\n                                              (itm) =>\n                                                itm.course_id === item.course_id\n                                            )!.room_id,\n                                            this.props.selectedPosition,\n                                            true,\n                                            this.props.setLoadingExams\n                                          );\n                                      }\n                                    }}\n                                    className={`btn border border-green-500 bg-green-600 hover:text-green-600 text-white cursor-pointer hover:bg-white text-sm w-max text-center`}\n                                  >\n                                    Back to exam\n                                  </div>\n                                )\n                              )}\n                            </div>\n                          ) : (\n                            <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                              {this.props.candidateExam.user_exams_done.find(\n                                (itm) => itm.course === item.course_id\n                              ) === undefined && (\n                                <div\n                                  onClick={() =>\n                                    this.setState({\n                                      selectedCourse: item,\n                                      centersModal: true,\n                                    })\n                                  }\n                                  className=\"btn cursor-pointer bg-yellow-700 hover:bg-yellow-50 border border-yellow-700 hover:text-yellow-700 text-white text-sm w-36 text-center\"\n                                >\n                                  Add location\n                                </div>\n                              )}\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  ))\n                )}\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div></div>\n        )}\n      </>\n    );\n  }\n}\n\nexport default ActiveExams;\n","import React, { Component } from \"react\";\nimport { HiInformationCircle } from \"react-icons/hi\";\nimport { IoMdInformationCircleOutline } from \"react-icons/io\";\nimport { MdCheckCircle, MdPauseCircleFilled } from \"react-icons/md\";\nimport { RiCheckboxBlankCircleFill, RiErrorWarningLine } from \"react-icons/ri\";\nimport { applicationPeriodsStoreInterface } from \"../../../actions/application_periods\";\nimport {\n  candidateExamStoreInterface,\n  InitialExamDetails,\n} from \"../../../actions/candidate_exam\";\nimport { courseStoreInterface } from \"../../../actions/course\";\nimport { positionsStoreInterface } from \"../../../actions/positions\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { applicationExamAPI } from \"../../../interfaces/application\";\nimport { course } from \"../../../interfaces/course\";\nimport { ExamAnswerSheetDone, UserExamStatus } from \"../../../interfaces/exam\";\nimport { PositionAPI, PositionAPICourse } from \"../../../interfaces/position\";\nimport { DATE } from \"../../../utils/functions\";\nimport { ExamTimeStatus, validateExamDate } from \"../../../utils/question_bank\";\nimport { ExamDoneDetailsAnswers } from \"../../CandidateExams/CandidateExams\";\n\ninterface ExamsDoneProps {\n  selectedPosition: PositionAPI;\n  selectedExams: applicationExamAPI[] | null;\n  findExam: (courseId: string) => InitialExamDetails | null;\n  loadingExams: boolean;\n  loadingExamsDone: boolean;\n  setMaxExamModal: (status: boolean) => void;\n  course: courseStoreInterface;\n  setSelectedCourse: (course: course | null) => void;\n  candidateExam: candidateExamStoreInterface;\n  positions: positionsStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n  setSelectedPosition: (position: PositionAPI) => void;\n  setSelectedCandidateExam: (selected_exam: InitialExamDetails | null) => void;\n  viewMarksDetails: (selectedExamDetails: ExamDoneDetailsAnswers) => void;\n}\ninterface ExamsDoneState {\n  loading: boolean;\n  selectedCourse: PositionAPICourse | null;\n  centersModal: boolean;\n}\n\nexport class ExamsDone extends Component<ExamsDoneProps, ExamsDoneState> {\n  constructor(props: ExamsDoneProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      centersModal: false,\n      selectedCourse: null,\n    };\n  }\n  viewMarksDetailsFn = (Exam: ExamAnswerSheetDone) => {\n    const examTest = this.props.candidateExam.user_exams_temp.find(\n      (itm) => itm.course === Exam.course && itm.period === Exam.period\n    );\n    if (examTest !== undefined) {\n      let courseSelected = this.props.selectedPosition.courses.find(\n        (itm) => itm.course_id === examTest.course\n      );\n      if (courseSelected !== undefined) {\n        this.props.viewMarksDetails({\n          course: examTest.course,\n          course_name: courseSelected.course_name,\n          discription: examTest.discription,\n          termes: examTest.termes,\n          rules: examTest.rules,\n          period: Exam.period,\n          exam_date: Exam.exam_date,\n          exam_id: Exam.exam_paper,\n        });\n      }\n    }\n  };\n  render() {\n    let ExamsDoneFilter = this.props.selectedPosition.courses.filter(\n      (itm) =>\n        this.props.findExam(itm.course_id) !== null &&\n        this.props.candidateExam.user_exams_done.filter(\n          (ex) =>\n            ex.course === itm.course_id &&\n            (ex.user_status === UserExamStatus.Done ||\n              ex.user_status === UserExamStatus.Removed ||\n              validateExamDate(\n                ex.exam_date,\n                ex.exam_start_time,\n                ex.exam_end_time\n              ) === ExamTimeStatus.Expired)\n        ).length > 0\n    );\n    // console.log(\"Done ex: \", ExamsDoneFilter);\n    return (\n      <div className=\"bg-white px-2 py-2\">\n        <div className=\"bg-gray-100 rounded px-2 py-2\">\n          <div className=\"flex flex-row items-center justify-between text-xl mb-3 mx-2\">\n            <span className=\"font-bold \">Completed exams</span>\n            <span className=\"font-bold bg-white text-gray-600 rounded-full px-2 text-base border border-gray-200\">\n              {this.props.selectedPosition !== null &&\n                this.props.selectedExams !== null &&\n                this.props.loadingExams === false &&\n                ExamsDoneFilter.length}\n            </span>\n          </div>\n          <div className=\"flex flex-col gap-2\">\n            {this.props.selectedPosition === null ||\n            this.props.selectedExams === null ||\n            this.props.loadingExams === true ? (\n              <Loading />\n            ) : ExamsDoneFilter.length === 0 ? (\n              <div className=\"border border-gray-200 text-gray-400 font-bold rounded-md px-3 py-3 text-center\">\n                <div className=\"flex justify-center items-center w-full text-4xl\">\n                  <IoMdInformationCircleOutline />\n                </div>\n                <div className=\"text-gray-500\">No exams found!</div>\n              </div>\n            ) : (\n              ExamsDoneFilter.map((item, i) => (\n                <div key={i + 1} className={`px-3 py-2 rounded group bg-white`}>\n                  <div className=\"grid md:grid-cols-12 gap-2\">\n                    {/* First col */}\n                    <div className=\"col-span-12 md:col-span-6 lg:col-span-4 flex fex-row items-center gap-3\">\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) !== undefined &&\n                        this.props.candidateExam.user_exams_done.find(\n                          (itm) => itm.course === item.course_id\n                        )?.user_status === UserExamStatus.Editing && (\n                          <div className=\"flex flex-row gap-2 items-center\">\n                            <div\n                              className={`text-gray-300 flex flex-row items-center gap-2 text-right ml-2`}\n                            >\n                              <HiInformationCircle className=\"text-4xl\" />\n                            </div>\n                          </div>\n                        )}\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) !== undefined &&\n                        this.props.candidateExam.user_exams_done.find(\n                          (itm) => itm.course === item.course_id\n                        )?.user_status === UserExamStatus.Done && (\n                          <div className=\"flex flex-row gap-2 items-center\">\n                            <div\n                              className={`text-blue-600 flex flex-row items-center gap-2 text-right ml-2`}\n                            >\n                              <MdCheckCircle className=\"text-4xl\" />\n                            </div>\n                          </div>\n                        )}\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) !== undefined &&\n                        this.props.candidateExam.user_exams_done.find(\n                          (itm) => itm.course === item.course_id\n                        )?.user_status === UserExamStatus.Removed && (\n                          <div className=\"flex flex-row gap-2 items-center\">\n                            <div\n                              className={`text-gray-300 flex flex-row items-center gap-2 text-right ml-2`}\n                            >\n                              <MdCheckCircle className=\"text-4xl\" />\n                            </div>\n                          </div>\n                        )}\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) !== undefined &&\n                        this.props.candidateExam.user_exams_done.find(\n                          (itm) => itm.course === item.course_id\n                        )?.user_status === UserExamStatus.Paused && (\n                          <div className=\"flex flex-row gap-2 items-center\">\n                            <div\n                              className={`text-gray-300 flex flex-row items-center gap-2 text-right ml-2`}\n                            >\n                              <MdPauseCircleFilled className=\"text-4xl\" />\n                            </div>\n                          </div>\n                        )}\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) === undefined &&\n                        this.props.findExam(item.course_id) !== null &&\n                        this.props.findExam(item.course_id)?.id !==\n                          undefined && (\n                          <div className=\"flex flex-row gap-2 items-center\">\n                            <div\n                              className={`text-blue-600 flex flex-row items-center gap-2 text-right ml-2 animate-ping`}\n                            >\n                              <HiInformationCircle className=\"text-4xl\" />\n                            </div>\n                          </div>\n                        )}\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) === undefined &&\n                        (this.props.findExam(item.course_id) === null ||\n                          this.props.findExam(item.course_id)?.id ===\n                            undefined) && (\n                          <div className=\"flex flex-row gap-2 items-center\">\n                            <div\n                              className={`text-gray-300 group-hover:text-white flex flex-row items-center gap-2 text-right ml-2`}\n                            >\n                              <RiCheckboxBlankCircleFill className=\"text-4xl\" />\n                            </div>\n                          </div>\n                        )}\n                      <div className=\"flex flex-col\">\n                        <div className={`font-bold text-gray-600 truncate`}>\n                          {item.course_name}\n                        </div>\n                        <div className=\"flex flex-row justify-start items-center gap-2\">\n                          <span className=\"text-gray-500 text-xs\">\n                            Exam date:{\" \"}\n                          </span>\n                          <div className=\"flex flex-row items-center gap-2\">\n                            <span className=\"font-bold text-gray-800 text-sm\">\n                              {DATE(\n                                this.props.findExam(item.course_id)!.exam_date,\n                                \"DD/MM/YYYY\"\n                              )}\n                            </span>\n                            <span\n                              className={`bg-gray-100 text-gray-800 font-bold px-2 py-1 rounded-full text-sm`}\n                            >\n                              {this.props.findExam(item.course_id)!.start_time}\n                            </span>\n                            <span\n                              className={`bg-gray-100 text-gray-800 font-bold px-2 py-1 rounded-full text-sm underline`}\n                            >\n                              {this.props.candidateExam.user_exams_done.find(\n                                (x) => x.course === item.course_id\n                              ) !== undefined\n                                ? validateExamDate(\n                                    this.props.candidateExam.user_exams_done.find(\n                                      (x) => x.course === item.course_id\n                                    )!.exam_date,\n                                    this.props.candidateExam.user_exams_done.find(\n                                      (x) => x.course === item.course_id\n                                    )!.exam_start_time,\n                                    this.props.candidateExam.user_exams_done.find(\n                                      (x) => x.course === item.course_id\n                                    )!.exam_end_time\n                                  ) === ExamTimeStatus.Expired &&\n                                  (this.props.candidateExam.user_exams_done.find(\n                                    (x) => x.course === item.course_id\n                                  )?.user_status === UserExamStatus.Editing\n                                    ? \"Not submitted\"\n                                    : this.props.candidateExam.user_exams_done.find(\n                                        (x) => x.course === item.course_id\n                                      )?.user_status === UserExamStatus.Paused)\n                                  ? \"Paused\"\n                                  : this.props.candidateExam.user_exams_done.find(\n                                      (x) => x.course === item.course_id\n                                    )?.user_status\n                                : \"\"}\n                            </span>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    {/* Second col */}\n                    <div className=\"col-span-12 md:col-span-6 lg:col-span-4 flex flex-col items-start justify-center\">\n                      {this.props.selectedExams === null ? (\n                        \"\"\n                      ) : this.props.selectedExams.find(\n                          (itm) => itm.course_id === item.course_id\n                        ) !== undefined ? (\n                        <>\n                          <div className=\"flex flex-row justify-start items-center gap-2\">\n                            <span className=\"text-gray-500 text-xs\">\n                              Proctoring type:{\" \"}\n                            </span>\n                            <span className=\"text-black font-bold text-sm bg-yellow-200 rounded-full px-2\">\n                              {this.props.selectedExams === null\n                                ? \"\"\n                                : this.props.selectedExams.find(\n                                    (itm) => itm.course_id === item.course_id\n                                  ) !== undefined &&\n                                  this.props.selectedExams.find(\n                                    (itm) => itm.course_id === item.course_id\n                                  )?.proctoring_type}\n                            </span>\n                          </div>\n                          <div className=\"flex flex-col justify-center items-start gap-2\">\n                            {/* <span className=\"text-gray-500 text-xs\">\n                              Exam location:{\" \"}\n                            </span> */}\n                            <span className={`text-gray-700 font-bold text-sm`}>\n                              Center:{\" \"}\n                              {this.props.selectedExams === null ? (\n                                \"\"\n                              ) : this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                ) !== undefined ? (\n                                this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                )?.center_name\n                              ) : (\n                                <span className=\"italic text-xs\">\n                                  No location selected\n                                </span>\n                              )}\n                            </span>\n                            <span className={`text-gray-700 font-bold text-sm`}>\n                              Room:{\" \"}\n                              {this.props.selectedExams === null ? (\n                                \"\"\n                              ) : this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                ) !== undefined ? (\n                                this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                )?.room_number === 0 ? (\n                                  <span className=\"bg-yellow-100 text-yellow-700 font-bold px-2 py-1 rounded\">\n                                    Waiting room, you are advised to choose\n                                    another center\n                                  </span>\n                                ) : (\n                                  <span className=\"text-blue-600 bg-blue-100 px-2 py-1 rounded\">\n                                    No:{\" \"}\n                                    {\n                                      this.props.selectedExams.find(\n                                        (itm) =>\n                                          itm.course_id === item.course_id\n                                      )?.room_number\n                                    }\n                                  </span>\n                                )\n                              ) : (\n                                <span className=\"italic text-xs\">\n                                  No location selected\n                                </span>\n                              )}\n                            </span>\n                          </div>\n                        </>\n                      ) : (\n                        <div className=\"flex flex-row gap-2 items-center justify-start\">\n                          <RiErrorWarningLine className=\"text-xl text-yellow-700\" />\n                          <span className=\"text-yellow-700 italic text-sm\">\n                            No location selected\n                          </span>\n                        </div>\n                      )}\n                    </div>\n                    {/* Third col */}\n                    <div className=\"col-span-12 md:col-span-12 lg:col-span-4 items-center justify-start lg:justify-end\">\n                      {this.props.selectedExams === null ? (\n                        \"\"\n                      ) : this.props.selectedExams.find(\n                          (itm) => itm.course_id === item.course_id\n                        ) !== undefined ? (\n                        <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                          {this.props.loadingExams === true ||\n                          this.props.loadingExamsDone === true ? (\n                            <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">\n                              Checking...\n                            </div>\n                          ) : (\n                            this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            ) === undefined && (\n                              <div\n                                onClick={() => {\n                                  this.setState({\n                                    selectedCourse: item,\n                                    centersModal: true,\n                                  });\n                                  this.props.setMaxExamModal(true);\n                                }}\n                                className=\"btn text-blue-600 border border-white cursor-pointer group-hover:bg-blue-600 hover:bg-blue-800 group-hover:text-white bg-blue-100 text-sm w-40 text-center\"\n                              >\n                                Change location\n                              </div>\n                            )\n                          )}\n                        </div>\n                      ) : (\n                        <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) === undefined && (\n                            <div\n                              onClick={() =>\n                                this.setState({\n                                  selectedCourse: item,\n                                  centersModal: true,\n                                })\n                              }\n                              className=\"btn cursor-pointer bg-yellow-700 hover:bg-yellow-50 border border-yellow-700 hover:text-yellow-700 text-white text-sm w-36 text-center\"\n                            >\n                              Add location\n                            </div>\n                          )}\n                        </div>\n                      )}\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) !== undefined && (\n                        // this.props.candidateExam.user_exams_done.find(\n                        //   (itm) => itm.course === item.course_id\n                        // )?.user_status !== UserExamStatus.Editing &&\n                        <div className=\"flex flex-row gap-2 items-center justify-end h-full\">\n                          <div\n                            className={`text-blue-600 flex flex-row items-center gap-2 text-right ml-2`}\n                          >\n                            <div className=\"flex flex-col gap-0\">\n                              <span className=\"text-sm\">Marks</span>\n                              <span className=\"text-lg font-bold -mt-1\">\n                                {this.props.candidateExam.user_exams_done\n                                  .find((itm) => itm.course === item.course_id)\n                                  ?.total_marks.toFixed(2)}\n                                %\n                              </span>\n                            </div>\n                            <div\n                              onClick={() =>\n                                this.viewMarksDetailsFn(\n                                  this.props.candidateExam.user_exams_done.find(\n                                    (itm) => itm.course === item.course_id\n                                  )!\n                                )\n                              }\n                              className=\"btn bg-blue-100 hover:bg-blue-200 cursor-pointer text-blue-700 hover:text-blue-900\"\n                            >\n                              Details\n                            </div>\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              ))\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ExamsDone;\n","import React, { Component } from \"react\";\n\nimport { Fragment } from \"react\";\nimport { MdClose, MdHistory } from \"react-icons/md\";\nimport { Redirect } from \"react-router-dom\";\nimport ChooseExamCenter, {\n  LocationTableInterface,\n} from \"../Application/ExamCenter/ChooseExamCenter\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadExam,\n  examDataInterface,\n  PrepareExamsStoreInterface,\n  loadExamsList,\n  LocationsDataStoreInterface,\n  loadAllLocationsData,\n  setSelectedLocationData,\n  applicationPeriodsStoreInterface,\n  loadApplicationPeriods,\n  candidateExamStoreInterface,\n  setSelectedCandidateExam,\n  courseStoreInterface,\n  loadCourses,\n  setSelectedCourse,\n  InitializeExamDetails,\n  InitialExamDetails,\n  setSelectedPeriod,\n  setSelectedPosition,\n  positionsStoreInterface,\n  loadExamsDone,\n  schoolLevelsStoreInterface,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport Loading from \"../../components/Loading/Loading\";\nimport {\n  ExamInterface,\n  examStatus,\n  UserExamStatus,\n} from \"../../interfaces/exam\";\nimport {\n  CandidateClaimInterface,\n  course,\n  PlansTypeKeys,\n  PositionAPI,\n  PositionAPICourse,\n} from \"../../interfaces/index\";\nimport {\n  applicationExamAPI,\n  applicationHistory,\n  ApplicationPeriodGet,\n  ApplicationStates,\n  ApplicationStatesDescription,\n  GetApplicationsAPI,\n} from \"../../interfaces/application\";\nimport { sentExamInterface } from \"../Application/ExamCenter/ExamCenter\";\nimport { BsFileEarmarkText } from \"react-icons/bs\";\nimport { IoMdTrash } from \"react-icons/io\";\nimport ApplicationHistory from \"./ApplicationHistory/ApplicationHistory\";\nimport ExamDetails from \"./ExamDetails/ExamDetails\";\nimport { CheckIfExamDone, findTotalMarks } from \"../../utils/question_bank\";\nimport PreparedExams from \"./ExamStatus/PreparedExams\";\nimport ActiveExams from \"./ExamStatus/ActiveExams\";\nimport ExamsDone from \"./ExamStatus/ExamsDone\";\nimport { IoHandLeftSharp } from \"react-icons/io5\";\nimport { isClaimAllowed } from \"../Claimings/Candidate/ClaimForm\";\nimport ClaimFormComponent from \"../../components/ClaimForm/ClaimFormComponent\";\nimport { ClaimingReducerType } from \"../../reducers/claiming\";\nimport { getMyClaims } from \"../../actions/claiming\";\nimport { ExamDoneDetailsAnswers } from \"../CandidateExams/CandidateExams\";\nimport CandidateAnswersDetails from \"../../components/AnswersDetails/CandidateAnswersDetails\";\nimport { RoomType } from \"../../interfaces/location\";\n\ninterface PostExamsProps {\n  doExam: examDataInterface;\n  auth: Auth;\n  loadExam: (user_id: string, exam: ExamInterface) => void;\n  selectedPosition: PositionAPI;\n  selectedExams: applicationExamAPI[] | null;\n  selected_application: string | null;\n  updateLocation: (application_id: string, exams: sentExamInterface[]) => void;\n  changeLocationError: string | null;\n  loading: boolean;\n  incrementIncomplete: () => void;\n  applicationHistory: applicationHistory[] | undefined;\n  deleteApplication: (id: string) => void;\n  selectedApplicationDetails: GetApplicationsAPI | null;\n  locationsData: LocationsDataStoreInterface;\n  loadAllLocationsData: (callback: (loading: boolean) => void) => void;\n  setSelectedLocationData: (locationData: LocationTableInterface) => void;\n  periods: applicationPeriodsStoreInterface;\n  loadApplicationPeriods: (callback: (loading: boolean) => void) => void;\n  candidateExam: candidateExamStoreInterface;\n  setSelectedCandidateExam: (selected_exam: InitialExamDetails | null) => void;\n  course: courseStoreInterface;\n  loadCourses: (callback: (loading: boolean) => void) => void;\n  setSelectedCourse: (course: course | null) => void;\n  InitializeExamDetails: (\n    periodId: string,\n    courseId: string,\n    district_id: string,\n    center_id: string,\n    room_id: string,\n    position: PositionAPI,\n    start_exam: boolean,\n    callback: (loading: boolean) => void\n  ) => void;\n  setSelectedPeriod: (period: ApplicationPeriodGet) => void;\n  positions: positionsStoreInterface;\n  setSelectedPosition: (position: PositionAPI) => void;\n  loadExamsDone: (\n    periodId: string,\n    userId: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  setMaxExamModal: (status: boolean) => void;\n  setDisplayDetailsModal: (status: boolean) => void;\n  claiming: ClaimingReducerType;\n  getMyClaims: Function;\n  setDoingExam: (status: boolean) => void;\n  doing_exam: boolean;\n  schoolLevels: schoolLevelsStoreInterface;\n}\ninterface PostExamsState {\n  appointmentDetailsModal: {\n    status: boolean;\n    item: InitialExamDetails | null;\n  };\n  redirect: boolean;\n  displayResults: boolean;\n  changeLocation: {\n    status: boolean;\n    location: ExamInterface | null;\n  };\n  centersModal: boolean;\n  selectedCourse: course | null;\n  selectedLocation: applicationExamAPI | null;\n  applicationHistoryState: boolean;\n  loading: boolean;\n  loadingExams: boolean;\n  loadingExamsDone: boolean;\n  claim: boolean;\n  selectedExamDetails: ExamDoneDetailsAnswers | null;\n}\n\nclass _PostExams extends Component<PostExamsProps, PostExamsState> {\n  constructor(props: PostExamsProps) {\n    super(props);\n\n    this.state = {\n      appointmentDetailsModal: {\n        status: false,\n        item: null,\n      },\n      redirect: false,\n      displayResults: false,\n      changeLocation: {\n        status: false,\n        location: null,\n      },\n      centersModal: false,\n      selectedCourse: null,\n      selectedLocation: null,\n      applicationHistoryState: false,\n      loading: false,\n      loadingExams: false,\n      loadingExamsDone: true,\n      claim: false,\n      selectedExamDetails: null,\n    };\n  }\n\n  renderExam = (user_id: string, exam: ExamInterface) => {\n    exam.status = examStatus.Editing;\n    this.props.loadExam(user_id, exam);\n    this.setState({ redirect: true });\n  };\n\n  setClaim = (status: boolean) => {\n    this.setState({ claim: status });\n  };\n\n  closeModal = () => {\n    this.setState({ centersModal: false });\n    this.props.setMaxExamModal(false);\n  };\n\n  updateLocationFunction = (exams: sentExamInterface[]) => {\n    if (this.props.selected_application !== null) {\n      this.props.updateLocation(this.props.selected_application, exams);\n    }\n  };\n\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  };\n  setLoadingExams = (status: boolean) => {\n    this.setState({ loadingExams: status });\n  };\n  setLoadingExamsDone = (status: boolean) => {\n    this.setState({ loadingExamsDone: status });\n  };\n\n  showTotalMarks = (position: PositionAPI): boolean => {\n    for (let item of position.courses) {\n      let test = this.props.candidateExam.user_exams_done.find(\n        (itm) => itm.course === item.course_id\n      );\n      if (test !== undefined) {\n        if (\n          test.user_status === UserExamStatus.Paused ||\n          test.user_status === UserExamStatus.Editing\n        ) {\n          return false;\n        }\n      }\n    }\n    return true;\n  };\n\n  numberOfIncomplete = (\n    exams: sentExamInterface[],\n    courses: {\n      course_name: string;\n      course_code: string;\n      description: string;\n      school_levels: string[];\n      course_id: string;\n    }[]\n  ) => {\n    let count: number = 0;\n    for (let i in courses) {\n      if (\n        exams.filter((item) => item.course_id === courses[i].course_id)\n          .length === 0\n      ) {\n        count = count + 1;\n      }\n    }\n    return count;\n  };\n\n  findLocation = (\n    course_id: string,\n    course_name: string,\n    course_code: string,\n    location: LocationTableInterface,\n    exam_id: string\n  ) => {\n    return this.updateLocationFunction([\n      {\n        course_id: course_id,\n        proctoring_type:\n          location.rooms.find((itm) => itm.room_type === RoomType.Virtual) !==\n          undefined\n            ? RoomType.Virtual\n            : RoomType.Physical,\n        center_id: location.center_id,\n        district_id: location.district_id,\n      },\n    ]);\n  };\n\n  findExam = (courseId: string) => {\n    if (this.props.candidateExam.user_exams_temp !== null) {\n      let current_temp = this.props.candidateExam.user_exams_temp.find(\n        (itm) => itm.course === courseId\n      );\n      let testDone = this.props.candidateExam.user_exams_done.find(\n        (itm) => itm.course === courseId\n      );\n      if (\n        current_temp !== undefined &&\n        (testDone === undefined ||\n          testDone.user_status === UserExamStatus.Editing ||\n          testDone.user_status === UserExamStatus.Paused ||\n          testDone.user_status === UserExamStatus.Done ||\n          testDone.user_status === UserExamStatus.Removed)\n      ) {\n        return current_temp;\n      }\n    }\n    return null;\n  };\n\n  findCourse = (course_id: string): applicationExamAPI | null => {\n    if (this.props.selectedExams !== null) {\n      let x: applicationExamAPI | null | undefined =\n        this.props.selectedExams.find(\n          (itm) =>\n            this.state.appointmentDetailsModal && itm.course_id === course_id\n        );\n      if (x !== undefined && x !== null) {\n        return x;\n      }\n    }\n    return null;\n  };\n\n  pendingCourses = () => {\n    let count = 0;\n    for (let course of this.props.selectedPosition.courses) {\n      if (this.props.candidateExam.user_exams_temp !== null) {\n        // let current_temp = this.props.candidateExam.user_exams_temp.find(itm => itm.course === course.course_id);\n        let testDone = this.props.candidateExam.user_exams_done.find(\n          (itm) => itm.course === course.course_id\n        );\n        if (testDone === undefined) {\n          count = count + 1;\n        }\n      }\n    }\n    return count;\n  };\n\n  changeLocation = (item: PositionAPICourse) => {\n    this.setState({ selectedCourse: item, centersModal: true });\n    this.props.setMaxExamModal(true);\n  };\n\n  InitializationFn = () => {\n    if (\n      this.props.periods.selected_period !== null &&\n      this.props.selectedPosition !== null\n    ) {\n      this.props.loadExamsDone(\n        this.props.periods.selected_period._id,\n        this.props.auth.user.user_id,\n        this.setLoadingExamsDone\n      );\n      // if (this.state.loadingExamsDone === false) {\n      for (let course of this.props.selectedPosition.courses) {\n        let testDone = this.props.candidateExam.user_exams_temp.find(\n          (itm) => itm.course === course.course_id\n        );\n        if (testDone === undefined) {\n          let center_id = this.props.selectedExams?.find(\n            (itm) => itm.course_id === course.course_id\n          );\n          if (center_id !== undefined) {\n            this.props.setSelectedCourse(course);\n            return this.props.InitializeExamDetails(\n              this.props.periods.selected_period._id,\n              course.course_id,\n              center_id.district_id,\n              center_id.center_id,\n              center_id.room_id,\n              this.props.selectedPosition,\n              false,\n              this.setLoadingExams\n            );\n          }\n        }\n      }\n      // }\n    }\n  };\n\n  componentDidMount = () => {\n    this.props.loadApplicationPeriods(this.setLoading);\n    if (\n      this.props.course.courses === null ||\n      this.props.course.courses.length === 0\n    ) {\n      this.props.loadCourses(this.setLoading);\n    }\n    this.InitializationFn();\n    if (this.props.doExam.exam_answers) {\n      if (this.props.doExam.exam_answers.status === examStatus.Editing) {\n        this.setState({ redirect: true });\n      }\n    }\n    if (\n      this.props.claiming.myClaims === null &&\n      this.props.periods.selected_period !== null\n    ) {\n      this.props.getMyClaims(\n        this.props.auth.user.user_id,\n        this.props.periods.selected_period._id,\n        (status: boolean, msg: string, data?: CandidateClaimInterface[]) => {\n          this.setState({ loading: status });\n          if (msg !== \"\") {\n            alert(msg);\n          }\n        }\n      );\n    }\n  };\n\n  render() {\n    if (\n      this.props.candidateExam.selected_exam_id !== null &&\n      this.props.candidateExam.selected_exam_details !== null &&\n      (this.props.candidateExam.doing_exam === true ||\n        this.props.doing_exam === true)\n    ) {\n      return <Redirect to=\"/do-exam\" />;\n    }\n    if (\n      this.state.redirect === true &&\n      (this.props.candidateExam.doing_exam === true ||\n        this.props.doing_exam === true)\n    ) {\n      return <Redirect to=\"/do-exam\" />;\n    }\n    if (\n      this.props.loading === true ||\n      this.state.loadingExams === true ||\n      this.state.loadingExamsDone === true\n    ) {\n      return (\n        <div className=\"bg-white border my-4 mx-4 rounded px-4 py-4 flex flex-col\">\n          <span className=\"mx-4 animate-pulse\">Loading, Please wait...</span>\n          <Loading />\n        </div>\n      );\n    }\n    return this.props.selectedExams === null ? (\n      \"No result found!\"\n    ) : (\n      <Fragment>\n        {this.state.selectedExamDetails !== null ? (\n          <>\n            <div className=\"animate__animated animate__fadeInUp animate__faster mt-2 mx-2 rounded-t-md border border-blue-300\">\n              <div className=\"flex flex-row gap-4 items-center justify-between bg-blue-100 py-2 px-2 mb-2\">\n                <div className=\"flex flex-col w-full\">\n                  <div className=\"flex flex-row gap-2 items-center justify-between w-full pl-2\">\n                    <span className=\"font-bold text-xl text-gray-800\">\n                      Exam answers details\n                    </span>\n                    <div className=\"bg-white hover:text-yellow-700 hover:bg-white rounded-full p-1 h-10 w-10 border-2 border-white hover:border-yellow-600 flex items-center justify-center\">\n                      <MdClose\n                        className=\"cursor-pointer font-extrabold text-3xl\"\n                        onClick={() => {\n                          this.setState({\n                            selectedExamDetails: null,\n                          });\n                        }}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <CandidateAnswersDetails\n                exam_id={this.state.selectedExamDetails}\n                showAnswers={false}\n              />\n            </div>\n          </>\n        ) : this.state.appointmentDetailsModal.status === true &&\n          this.state.appointmentDetailsModal.item !== null ? (\n          <>\n            <div className=\"animate__animated animate__fadeInUp animate__faster mt-2 mx-2 rounded-t-md border border-blue-300\">\n              <div className=\"flex flex-row gap-4 items-center justify-between bg-blue-100 py-2 px-2 mb-2\">\n                <div className=\"flex flex-row gap-2 items-center justify-between w-full pl-2\">\n                  <span className=\"font-bold text-xl text-gray-800\">\n                    Exam:{\" \"}\n                    {this.state.appointmentDetailsModal.item !== null && (\n                      <>\n                        {\n                          this.findCourse(\n                            this.state.appointmentDetailsModal.item!.course\n                          )?.course_name\n                        }\n                      </>\n                    )}\n                  </span>\n                  <div className=\"bg-white hover:text-yellow-700 hover:bg-white rounded-full p-1 h-10 w-10 border-2 border-white hover:border-yellow-600 flex items-center justify-center\">\n                    <MdClose\n                      className=\"cursor-pointer font-extrabold text-3xl\"\n                      onClick={() =>\n                        this.setState({\n                          appointmentDetailsModal: {\n                            status: false,\n                            item: null,\n                          },\n                          displayResults: false,\n                        })\n                      }\n                    />\n                  </div>\n                </div>\n              </div>\n              {this.findExam(this.state.appointmentDetailsModal.item.course) ===\n              null ? (\n                <div className=\"text-yellow-700 font-bold text-center text-3xl bg-yellow-50 border border-yellow-200 rounded px-4 py-4 mx-4 my-4\">\n                  No exam found for selected course\n                </div>\n              ) : this.props.periods.applicationPeriods &&\n                (this.props.periods.applicationPeriods.find(\n                  (itm) =>\n                    this.state.appointmentDetailsModal.item &&\n                    itm._id === this.state.appointmentDetailsModal.item.period\n                )?.is_active === false ||\n                  this.props.periods.applicationPeriods.find(\n                    (itm) =>\n                      this.state.appointmentDetailsModal.item &&\n                      itm._id === this.state.appointmentDetailsModal.item.period\n                  )?.is_active === undefined) ? (\n                <div className=\"text-yellow-700 font-bold text-center text-3xl bg-yellow-50 border border-yellow-200 rounded px-4 py-4 mx-4 my-4 flex flex-col items-center\">\n                  <div>No exam for the selected period</div>\n                  <div\n                    onClick={() =>\n                      this.props.loadApplicationPeriods(this.setLoading)\n                    }\n                    className=\"btn bg-white text-gray-700 w-max text-base border border-gray-700 mt-4 cursor-pointer\"\n                  >\n                    Reload\n                  </div>\n                </div>\n              ) : (\n                <ExamDetails\n                  locationDetails={this.props.selectedExams.find(\n                    (itm) =>\n                      this.state.appointmentDetailsModal.item &&\n                      itm.course_id ===\n                        this.state.appointmentDetailsModal.item.course\n                  )}\n                  examDetails={this.findExam(\n                    this.state.appointmentDetailsModal.item.course\n                  )}\n                  locationsData={this.props.locationsData}\n                  loadAllLocationsData={this.props.loadAllLocationsData}\n                  setSelectedLocationData={this.props.setSelectedLocationData}\n                  periods={this.props.periods}\n                  loadApplicationPeriods={this.props.loadApplicationPeriods}\n                  candidateExam={this.props.candidateExam}\n                  setSelectedCandidateExam={this.props.setSelectedCandidateExam}\n                />\n              )}\n            </div>\n          </>\n        ) : this.state.centersModal === true &&\n          this.state.selectedCourse !== null ? (\n          <div className=\"animate__animated animate__fadeInUp animate__faster mt-2 mx-2 rounded-t-md border border-blue-300\">\n            <div className=\"flex flex-row gap-4 items-center justify-between bg-blue-100 py-2 px-2 mb-2\">\n              <div className=\"flex flex-col w-full\">\n                <div className=\"flex flex-row gap-2 items-center justify-between w-full pl-2\">\n                  <span className=\"font-bold text-xl text-gray-800\">\n                    Change exam location\n                  </span>\n                  <div className=\"bg-white hover:text-yellow-700 hover:bg-white rounded-full p-1 h-10 w-10 border-2 border-white hover:border-yellow-600 flex items-center justify-center\">\n                    <MdClose\n                      className=\"cursor-pointer font-extrabold text-3xl\"\n                      onClick={() => {\n                        this.setState({\n                          centersModal: false,\n                          selectedCourse: null,\n                        });\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <ChooseExamCenter\n              positionCourses={this.state.selectedCourse}\n              addLocation={this.findLocation}\n              closeModal={this.closeModal}\n              changeProctoring={false}\n              selectedEducationCategory={\n                this.props.selectedPosition.education_institute_id\n              }\n            />\n          </div>\n        ) : this.state.applicationHistoryState === true ? (\n          this.props.applicationHistory === undefined ? (\n            <div className=\"text-yellow-700 font-bold text-2xl text-center\">\n              No application history found!\n            </div>\n          ) : (\n            <div className=\"animate__animated animate__fadeInUp animate__faster bg-white mt-2 mx-2 rounded-t-md border border-blue-300\">\n              <div className=\"flex flex-row gap-4 items-center justify-between bg-blue-100 py-2 px-2\">\n                <div className=\"flex flex-row gap-2 items-center justify-between w-full pl-2\">\n                  <span className=\"font-bold text-xl text-gray-800\">\n                    Application history\n                  </span>\n                  <div className=\"bg-white hover:text-yellow-700 hover:bg-white rounded-full p-1 h-10 w-10 border-2 border-white hover:border-yellow-600 flex items-center justify-center\">\n                    <MdClose\n                      className=\"cursor-pointer font-extrabold text-3xl\"\n                      onClick={() =>\n                        this.setState({ applicationHistoryState: false })\n                      }\n                    />\n                  </div>\n                </div>\n              </div>\n              <ApplicationHistory\n                applicationHistory={this.props.applicationHistory}\n              />\n            </div>\n          )\n        ) : (\n          <div className=\"\">\n            <div className=\"px-2 md:py-2\">\n              <div className=\"flex flex-col md:flex-row justify-between items-center md:items-center\">\n                <div className=\"flex flex-row items-center gap-3 mb-3 pt-4 lg:pt-0\">\n                  <span className=\"bg-blue-50  text-gray-600 font-base rounded-md px-3 py-1 mt-0\">\n                    Status:{\" \"}\n                    <span className=\"font-extrabold text-blue-700 underline\">\n                      {this.props.selectedApplicationDetails &&\n                        ApplicationStatesDescription.find(\n                          (itm) =>\n                            this.props.selectedApplicationDetails &&\n                            itm.key ===\n                              this.props.selectedApplicationDetails\n                                .application_status\n                        )?.caption}\n                    </span>\n                  </span>\n                  <div\n                    onClick={() =>\n                      this.setState({ applicationHistoryState: true })\n                    }\n                    className=\"btn bg-gray-100 text-gray-600 border border-gray-300 text-sm flex flex-row items-center gap-2 cursor-pointer hover:border-blue-500 hover:bg-blue-50 hover:text-blue-600 md:mt-0\"\n                  >\n                    <MdHistory className=\"text-xl\" />\n                    <span>View application history</span>\n                  </div>\n                </div>\n                <div\n                  className={`grid ${\n                    this.pendingCourses() > 0 ? \"grid-cols-3\" : \"grid-cols-2\"\n                  } gap-4 w-full md:w-max bg-gray-100 md:bg-white p-2 md:p-0 rounded mb-2 md:mb-0`}\n                >\n                  <div className=\"col-span-1 flex justify-start md:justify-end\">\n                    <div className=\"flex flex-row items-center\">\n                      <div className=\"flex flex-col\">\n                        <span className=\"text-xs md:text-md text-gray-500 font-bold text-left md:text-right\">\n                          Total\n                        </span>\n                        <span className=\"text-xl md:text-xl font-bold text-gray-700 text-left md:text-right\">\n                          {this.props.selectedExams.length}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  {this.pendingCourses() > 0 && (\n                    <div className=\"col-span-1 flex justify-start md:justify-end\">\n                      <div className=\"flex flex-row items-center\">\n                        <div className=\"flex flex-col\">\n                          <span className=\"text-xs md:text-md text-gray-500 font-bold text-left md:text-right\">\n                            Pending\n                          </span>\n                          <span className=\"text-xl md:text-xl font-bold text-gray-700 text-left md:text-right\">\n                            {this.props.selectedPosition !== null &&\n                              this.pendingCourses()}\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                  <div className=\"col-span-1 flex justify-start md:justify-end\">\n                    <div className=\"flex flex-row items-center\">\n                      <div className=\"flex flex-col\">\n                        <span className=\"text-xs md:text-md text-gray-500 font-bold text-left md:text-right\">\n                          Total marks\n                        </span>\n                        {this.showTotalMarks(this.props.selectedPosition) ===\n                        true ? (\n                          // this.state.loadingExams === true || this.state.loadingExamsDone === true ? <span>Wait...</span> :\n                          <span className=\"text-xl md:text-xl font-bold text-gray-700 text-left md:text-right\">\n                            {parseFloat(\n                              findTotalMarks(\n                                this.props.selectedPosition.courses,\n                                this.props.candidateExam.user_exams_done\n                              )\n                            ) > 0\n                              ? (\n                                  parseFloat(\n                                    findTotalMarks(\n                                      this.props.selectedPosition.courses,\n                                      this.props.candidateExam.user_exams_done\n                                    )\n                                  ) / this.props.selectedPosition.courses.length\n                                ).toFixed(2)\n                              : 0}\n                            %\n                          </span>\n                        ) : (\n                          <div\n                            title=\"You can not view marks because one of your exams is not completed\"\n                            className=\"py-1 text-center bg-yellow-100 rounded w-max px-4 my-1\"\n                          >\n                            Hidden\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"font-bold flex flex-col md:flex-row items-start md:items-center justify-start md:justify-between gap-2\">\n                {this.props.selectedApplicationDetails &&\n                this.props.selectedApplicationDetails.application_status !==\n                  ApplicationStates.Rejected ? (\n                  <div className=\"text-xl flex flex-row items-center gap-2\">\n                    <BsFileEarmarkText className=\"text-2xl\" />\n                    <span>Exams list: </span>\n                  </div>\n                ) : (\n                  <div>\n                    {this.state.loadingExams === false &&\n                    this.state.loadingExamsDone === false &&\n                    CheckIfExamDone(\n                      this.props.selectedPosition.courses,\n                      this.props.candidateExam.user_exams_done\n                    ) === false &&\n                    this.props.periods.selected_period &&\n                    this.props.selected_application &&\n                    this.props.claiming.myClaims &&\n                    isClaimAllowed(\n                      this.props.claiming.myClaims,\n                      this.props.periods.selected_period._id,\n                      this.props.selected_application\n                    ) === true ? (\n                      <div\n                        onClick={() => this.setClaim(!this.state.claim)}\n                        className=\"btn flex flex-row gap-2 items-center text-green-700 bg-green-50 cursor-pointer hover:bg-green-100 hover:text-green-900 border border-green-600 hover:border-green-800\"\n                      >\n                        <IoHandLeftSharp className=\"text-xl \" />\n                        <span className=\"text-sm\">Claim now</span>\n                      </div>\n                    ) : this.props.claiming.myClaims === null ? (\n                      <div>Loading...</div>\n                    ) : (\n                      this.props.claiming.myClaims.length > 0 && (\n                        <div\n                          onClick={() => this.setClaim(!this.state.claim)}\n                          className=\"btn flex flex-row gap-2 items-center text-white bg-blue-600 cursor-pointer hover:bg-blue-800\"\n                        >\n                          <IoHandLeftSharp className=\"text-xl \" />\n                          <span className=\"text-sm\">\n                            {this.state.claim === true\n                              ? \"Hide details\"\n                              : \"View claim details\"}\n                          </span>\n                        </div>\n                      )\n                    )}\n                  </div>\n                )}\n                {this.state.loadingExams === false &&\n                  this.state.loadingExamsDone === false &&\n                  CheckIfExamDone(\n                    this.props.selectedPosition.courses,\n                    this.props.candidateExam.user_exams_done\n                  ) === false && (\n                    <div\n                      onClick={() =>\n                        this.props.selected_application &&\n                        this.props.deleteApplication(\n                          this.props.selected_application\n                        )\n                      }\n                      className=\"btn flex flex-row gap-2 items-center text-red-700 bg-red-50 cursor-pointer hover:bg-red-100 hover:text-red-900\"\n                    >\n                      <IoMdTrash className=\"text-xl \" />\n                      <span className=\"text-sm\">Remove application</span>\n                    </div>\n                  )}\n              </div>\n              {this.state.claim === true &&\n                this.props.selected_application !== null && (\n                  <div className=\"bg-gray-100 mt-4 pt-2 rounded\">\n                    <ClaimFormComponent\n                      setFormState={this.setClaim}\n                      claim_type={PlansTypeKeys.APPLICATION}\n                      file_id={this.props.selected_application}\n                    />\n                  </div>\n                )}\n            </div>\n            {this.props.selectedApplicationDetails &&\n              this.props.selectedApplicationDetails.application_status !==\n                ApplicationStates.Rejected && (\n                <>\n                  <ActiveExams\n                    selectedPosition={this.props.selectedPosition}\n                    selectedExams={this.props.selectedExams}\n                    findExam={this.findExam}\n                    loadingExams={this.state.loadingExams}\n                    loadingExamsDone={this.state.loadingExamsDone}\n                    setMaxExamModal={this.props.setMaxExamModal}\n                    course={this.props.course}\n                    setSelectedCourse={this.props.setSelectedCourse}\n                    candidateExam={this.props.candidateExam}\n                    positions={this.props.positions}\n                    periods={this.props.periods}\n                    setSelectedPosition={this.props.setSelectedPosition}\n                    setSelectedCandidateExam={\n                      this.props.setSelectedCandidateExam\n                    }\n                    selectedApplicationDetails={\n                      this.props.selectedApplicationDetails\n                    }\n                    setDoingExam={this.props.setDoingExam}\n                    InitializeExamDetails={this.props.InitializeExamDetails}\n                    setLoadingExams={this.setLoadingExams}\n                  />\n                  <PreparedExams\n                    selectedPosition={this.props.selectedPosition}\n                    selectedExams={this.props.selectedExams}\n                    findExam={this.findExam}\n                    loadingExams={this.state.loadingExams}\n                    loadingExamsDone={this.state.loadingExamsDone}\n                    setMaxExamModal={this.props.setMaxExamModal}\n                    course={this.props.course}\n                    setSelectedCourse={this.props.setSelectedCourse}\n                    candidateExam={this.props.candidateExam}\n                    positions={this.props.positions}\n                    periods={this.props.periods}\n                    setSelectedPosition={this.props.setSelectedPosition}\n                    setSelectedCandidateExam={\n                      this.props.setSelectedCandidateExam\n                    }\n                    changeLocation={this.changeLocation}\n                    selectedApplicationDetails={\n                      this.props.selectedApplicationDetails\n                    }\n                    setDoingExam={this.props.setDoingExam}\n                    InitializeExamDetails={this.props.InitializeExamDetails}\n                    setLoadingExams={this.setLoadingExams}\n                  />\n                  <ExamsDone\n                    selectedPosition={this.props.selectedPosition}\n                    selectedExams={this.props.selectedExams}\n                    findExam={this.findExam}\n                    loadingExams={this.state.loadingExams}\n                    loadingExamsDone={this.state.loadingExamsDone}\n                    setMaxExamModal={this.props.setMaxExamModal}\n                    course={this.props.course}\n                    setSelectedCourse={this.props.setSelectedCourse}\n                    candidateExam={this.props.candidateExam}\n                    positions={this.props.positions}\n                    periods={this.props.periods}\n                    setSelectedPosition={this.props.setSelectedPosition}\n                    setSelectedCandidateExam={\n                      this.props.setSelectedCandidateExam\n                    }\n                    viewMarksDetails={(\n                      selectedExamDetails: ExamDoneDetailsAnswers\n                    ) => {\n                      this.setState({\n                        selectedExamDetails: selectedExamDetails,\n                      });\n                    }}\n                  />\n                </>\n              )}\n          </div>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  doExam,\n  prepareExam,\n  locationsData,\n  periods,\n  candidateExam,\n  course,\n  positions,\n  claiming,\n  schoolLevels,\n}: StoreState): {\n  auth: Auth;\n  doExam: examDataInterface;\n  prepareExam: PrepareExamsStoreInterface;\n  locationsData: LocationsDataStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n  candidateExam: candidateExamStoreInterface;\n  course: courseStoreInterface;\n  positions: positionsStoreInterface;\n  claiming: ClaimingReducerType;\n  schoolLevels: schoolLevelsStoreInterface;\n} => {\n  return {\n    auth: auth,\n    doExam: doExam,\n    prepareExam: prepareExam,\n    locationsData: locationsData,\n    periods: periods,\n    candidateExam: candidateExam,\n    course: course,\n    positions: positions,\n    claiming: claiming,\n    schoolLevels,\n  };\n};\n\nconst PostExams = connect(mapStateToProps, {\n  loadExam,\n  loadExamsList,\n  loadAllLocationsData,\n  setSelectedLocationData,\n  loadApplicationPeriods,\n  setSelectedCandidateExam,\n  loadCourses,\n  setSelectedCourse,\n  InitializeExamDetails,\n  setSelectedPeriod,\n  setSelectedPosition,\n  loadExamsDone,\n  getMyClaims,\n})(_PostExams);\n\nexport default PostExams;\n","import React, { Component } from \"react\";\nimport { GetApplicationsAPI } from \"../../interfaces/application\";\nimport { CandidateInterface } from \"../../interfaces/candidatesInterfaces\";\nimport { PlacedCandidateStatus } from \"../../interfaces/marks_publication\";\nimport { UserInfoInterface } from \"../../shared/interfaces\";\n\ninterface CandidatePlacementCheckProps {\n  position: GetApplicationsAPI;\n  user: CandidateInterface;\n}\ninterface CandidatePlacementCheckState {\n  loading: boolean;\n}\ninterface SchoolItemPlacement {\n  _id: string;\n  school_name: string;\n  school_code: string;\n  province_id: string;\n  province_code: string;\n  district_id: {\n    _id: string;\n    district_name: string;\n  };\n  district_code: string;\n  sector_code: string;\n  sector_id: string;\n  school_status: string;\n  status: number;\n  createdAt: string;\n  updatedAt: string;\n}\nexport interface SchoolPlacementInterface {\n  n_id: string;\n  phone_number: string;\n  email: string;\n  user_info: UserInfoInterface;\n  placed: {\n    _id: string;\n    comment: string;\n    status: PlacedCandidateStatus;\n    waiting_list_id: string;\n    user_id: string;\n    school_id: string;\n    district_id: string;\n    position_id: string;\n    request_id: string;\n    createdAt: string;\n    updatedAt: string;\n    school: SchoolItemPlacement;\n    __v: number;\n  };\n}\n\n// interface CandidatePlacementSchool {}\n\nexport class CandidatePlacementCheck extends Component<\n  CandidatePlacementCheckProps,\n  CandidatePlacementCheckState\n> {\n  constructor(props: CandidatePlacementCheckProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n  setLoading = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  render() {\n    return <div>Candidate Placement check</div>;\n  }\n}\n\nexport default CandidatePlacementCheck;\n","import React, { Component, Fragment } from \"react\";\nimport { MdAdd } from \"react-icons/md\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  initiateApplication,\n  removeLocation,\n  loadApplicationPeriods,\n  applicationPeriodsStoreInterface,\n  setSelectedPeriod,\n  System,\n  PushPopupAlert,\n  positionsStoreInterface,\n  loadAllPositions,\n  FC_Access,\n  CandidateApplicationsStoreInterface,\n  LoadCandidateApplications,\n  candidateExamStoreInterface,\n  InitializeExamDetails,\n  loadExamsDone,\n  setSelectedPosition,\n  setSelectedCourse,\n  courseStoreInterface,\n  setSelectedCandidateExam,\n  examDataInterface,\n  AddUserApplication,\n  RemoveUserApplication,\n  SelectUserApplication,\n  InitialExamDetails,\n  schoolLevelsStoreInterface,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport {\n  applicationStoreInterface,\n  initialApplicationInterface,\n} from \"../../actions/application\";\nimport { ApplicationStepsTypes } from \"../Application/ApplicationSteps/ApplicationSteps\";\nimport {\n  applicationExamAPI,\n  ApplicationPeriodGet,\n  ApplicationStates,\n  ApplicationStatesDescription,\n  GetApplicationsAPI,\n  NoRoomsInterface,\n} from \"../../interfaces/application\";\nimport Exams from \"./Exams\";\nimport { course, PositionAPI } from \"../../interfaces/index\";\nimport axios from \"axios\";\nimport { API, RTB_SHOW_STATUS_APPLY } from \"../../utils/api\";\nimport { sentExamInterface } from \"../Application/ExamCenter/ExamCenter\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { AiOutlineFilter } from \"react-icons/ai\";\nimport { IoBriefcase, IoBriefcaseOutline } from \"react-icons/io5\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport {\n  SideNavigation,\n  MainItem,\n} from \"../../components/Navigation/SideNavigation\";\nimport { BsCaretRightFill, BsChevronRight } from \"react-icons/bs\";\nimport LoadingV2, { LoadingType } from \"../../components/Loading/LoadingV2\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { RiFileForbidLine } from \"react-icons/ri\";\nimport { IoMdList } from \"react-icons/io\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport ApplicationPeriods from \"../../components/ApplicationPeriods/ApplicationPeriods\";\nimport { DATE } from \"../../utils/functions\";\nimport { UserAccessList } from \"../../utils/auth_access\";\nimport { BiArrowBack } from \"react-icons/bi\";\nimport { examStatus } from \"../../interfaces/exam\";\nimport CandidatePlacementCheck from \"../../components/CandidatePlacementCheck/CandidatePlacementCheck\";\n\ninterface ApplicationsDashboardState {\n  selectedPosition: PositionAPI | null;\n  selectedExams: applicationExamAPI[] | null;\n  applications: GetApplicationsAPI[] | [] | null;\n  selected_application: string | null;\n  noRoomsApplication: NoRoomsInterface[] | null | [];\n  loading: boolean;\n  applicationError: string | null;\n  number_of_incomplete: number;\n  applicationDetails: boolean;\n  selectedApplicationStatus: ApplicationStates | null;\n  showPeriodFilter: boolean;\n  maxExamModal: boolean;\n  loadingErr: string;\n  displayDetailsModal: boolean;\n  viewSchools: GetApplicationsAPI | null;\n  doing_exam: boolean;\n}\ninterface ApplicationsDashboardProps {\n  auth: Auth;\n  application: applicationStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n  initiateApplication: (initial: initialApplicationInterface) => void;\n  removeLocation: (course_id: string) => void;\n  loadApplicationPeriods: (callback: (loading: boolean) => void) => void;\n  setSelectedPeriod: (period: ApplicationPeriodGet) => void;\n  system: System;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  positions: positionsStoreInterface;\n  loadAllPositions: (callback: (loading: boolean) => void) => void;\n  FC_Access: Function;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  LoadCandidateApplications: (\n    user_id: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  InitializeExamDetails: (\n    periodId: string,\n    courseId: string,\n    district_id: string,\n    center_id: string,\n    room_id: string,\n    position: PositionAPI,\n    start_exam: boolean,\n    callback: (loading: boolean) => void\n  ) => void;\n  loadExamsDone: (\n    periodId: string,\n    userId: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  candidateExam: candidateExamStoreInterface;\n  setSelectedPosition: (position: PositionAPI) => void;\n  course: courseStoreInterface;\n  setSelectedCourse: (course: course | null) => void;\n  setSelectedCandidateExam: (selected_exam: InitialExamDetails | null) => void;\n  doExam: examDataInterface;\n  AddUserApplication: (application: GetApplicationsAPI) => void;\n  RemoveUserApplication: (application_id: string) => void;\n  SelectUserApplication: (application: GetApplicationsAPI | null) => void;\n  schoolLevels: schoolLevelsStoreInterface;\n}\n\nclass _ApplicationsDashboard extends Component<\n  ApplicationsDashboardProps,\n  ApplicationsDashboardState\n> {\n  constructor(props: ApplicationsDashboardProps) {\n    super(props);\n\n    this.state = {\n      selectedPosition: null,\n      selectedExams: null,\n      applications: null,\n      selected_application: null,\n      noRoomsApplication: null,\n      loading: false,\n      applicationError: null,\n      number_of_incomplete: 0,\n      applicationDetails: false,\n      selectedApplicationStatus: null,\n      showPeriodFilter: false,\n      maxExamModal: false,\n      loadingErr: \"\",\n      displayDetailsModal: false,\n      viewSchools: null,\n      doing_exam: false,\n    };\n  }\n\n  setLoading = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  filteredApplications = (\n    applications: GetApplicationsAPI[],\n    Status: ApplicationStates | null,\n    searchPeriod?: ApplicationPeriodGet | null\n  ) => {\n    let appl: GetApplicationsAPI[];\n    const searchPeriodSel =\n      searchPeriod === null || searchPeriod === undefined\n        ? this.props.schoolLevels.selectedEducationCategory?.session_plan?._id\n        : searchPeriod._id;\n    if (searchPeriodSel !== undefined) {\n      appl = applications.filter(\n        (itm) => itm.application_session._id === searchPeriodSel\n      );\n    } else {\n      appl = applications;\n    }\n    appl =\n      this.props.schoolLevels.selectedEducationCategory === null\n        ? appl\n        : appl.filter(\n            (ap) =>\n              ap.position.education_institute_id.education_institute_id ===\n              this.props.schoolLevels.selectedEducationCategory\n                ?.education_institute_id\n          );\n    if (Status === null) {\n      return appl;\n    } else {\n      return appl.filter((item) => item.application_status === Status);\n    }\n  };\n\n  closeApplicationDetails = () => {\n    this.setState({ selected_application: null });\n    this.setState({ selectedPosition: null, selected_application: null });\n    this.setState({ selectedExams: null });\n    this.setState({ displayDetailsModal: false });\n  };\n\n  setDisplayDetailsModal = (status: boolean) => {\n    this.setState({ displayDetailsModal: status });\n  };\n\n  applicationStatuses = (\n    application: GetApplicationsAPI[]\n  ): { title: string; count: number; status: ApplicationStates }[] => {\n    let output: { title: string; count: number; status: ApplicationStates }[] =\n      [];\n    for (let i in ApplicationStatesDescription) {\n      output.push({\n        title: ApplicationStatesDescription[i].caption,\n        count: application.filter(\n          (itm) =>\n            itm.application_status === ApplicationStatesDescription[i].key\n        ).length,\n        status: ApplicationStatesDescription[i].key,\n      });\n    }\n    return output;\n  };\n\n  setMaxExamModal = (status: boolean) => {\n    this.setState({ maxExamModal: status });\n  };\n\n  LoadApplications = async () => {\n    this.setState({ loadingErr: \"\" });\n    this.setState({ number_of_incomplete: 0 });\n    if (this.props.auth.user.user_id) {\n      const selected_position = this.state.selectedPosition;\n      this.setState({ applications: null });\n      this.setState({ selectedPosition: null });\n      this.setState({ selectedExams: null });\n      let response: GetApplicationsAPI[] | null = null;\n      if (\n        this.props.candidateApplications.candidate_applications === null &&\n        this.props.auth.user\n      ) {\n        try {\n          const res = await axios.get<GetApplicationsAPI[]>(\n            `${API.APPLICATION}/apply/user/${this.props.auth.user.user_id}`\n          );\n          // console.log(\"Applications list: \", res.data);\n          if (res.status === 200) {\n            response = res.data;\n            if (res.data.length === 0) {\n              response = [];\n            } else {\n              for (let application of response) {\n                this.props.AddUserApplication(application);\n              }\n            }\n          } else {\n            response = [];\n          }\n        } catch (error: any) {\n          response = [];\n          console.log(\"Appl Err: \", { ...error });\n        }\n      } else {\n        response = this.props.candidateApplications.candidate_applications;\n      }\n      this.setState({ applications: response });\n      if (response !== null) {\n        if (response.length > 0) {\n          // let done = false;\n          for (let i in response) {\n            let courses = response[i].position.courses;\n            let exams = response[i].exams;\n            if (\n              response[i].position.position_id ===\n              selected_position?.position_id\n            ) {\n              this.setState({ selectedPosition: response[i].position });\n              this.setState({ selectedExams: exams });\n            }\n            // Load Exams done:: need to be improved\n            // InitializeExamsDone(\n            //   this.props.periods.selected_period,\n            //   response[i].position,\n            //   this.props.candidateExam,\n            //   this.props.loadExamsDone,\n            //   this.props.auth.user.user_id,\n            //   this.setLoading,\n            //   response[i].exams,\n            //   this.props.InitializeExamDetails,\n            //   this.setLoading\n            // );\n            for (let x in courses) {\n              if (\n                exams.filter((itm) => itm.course_id === courses[x].course_id)\n                  .length === 0 &&\n                response[i].application_status === ApplicationStates.Incomplete\n              ) {\n                this.setState({\n                  selected_application: response[i].application_id,\n                });\n                this.setState({\n                  selectedPosition: response[i].position,\n                  selected_application: response[i].application_id,\n                });\n                this.setState({ selectedExams: response[i].exams });\n                this.setState({ displayDetailsModal: true });\n                this.incrementIncomplete();\n              }\n            }\n          }\n        } else {\n          this.props.LoadCandidateApplications(\n            this.props.auth.user.user_id,\n            this.setLoading\n          );\n        }\n      }\n    }\n  };\n\n  updateLocation = async (\n    application_id: string,\n    exams: sentExamInterface[]\n  ) => {\n    this.setState({ loading: true });\n    this.setState({ applicationError: null });\n    console.log(application_id);\n    for (let i in exams) {\n      try {\n        console.log(\"Sent: \", {\n          application_id: application_id,\n          exams: exams[i],\n        });\n        const res = await axios.post(`${API.APPLICATION}/apply/updatemissed`, {\n          application_id: application_id,\n          exams: exams[i],\n        });\n        if (res.status === 200 && this.state.noRoomsApplication !== null) {\n          this.setState({\n            noRoomsApplication: this.state.noRoomsApplication?.filter(\n              (itm) => itm.course_id !== exams[i].course_id\n            ),\n          });\n        }\n        if (res.status === 200) {\n          this.props.LoadCandidateApplications(\n            this.props.auth.user.user_id,\n            this.setLoading\n          );\n          this.LoadApplications();\n          this.setState({ displayDetailsModal: false });\n          this.setState({ selectedPosition: null, selected_application: null });\n          this.setState({ selectedExams: null });\n          this.props.PushPopupAlert({\n            title: `Location updated successfully`,\n            description:\n              \"Location has updated successfully! You can continue to update before starting of the examination!\",\n            theme: PopupAlertTheme.success,\n          });\n        }\n      } catch (error: any) {\n        if (error.response) {\n          if (error.response.data) {\n            if (error.response.data.errors !== undefined) {\n              if (error.response.data.errors.length > 0) {\n                if (this.state.noRoomsApplication) {\n                  let newArr: sentExamInterface[];\n                  if (error.response.data.errors[0].field !== undefined) {\n                    newArr = this.state.noRoomsApplication?.filter(\n                      (itm) =>\n                        itm.course_id ===\n                        error.response.data.errors[0].field.course_id\n                    );\n                    if (newArr !== undefined) {\n                      for (let i in newArr) {\n                        this.props.removeLocation(newArr[i].course_id);\n                      }\n                    }\n                  }\n                }\n                this.setState({\n                  applicationError: error.response.data.errors[0].message,\n                });\n                this.props.PushPopupAlert({\n                  title: error.response.data.errors[0].message,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n            } else {\n              this.props.PushPopupAlert({\n                title: \"Something went wrong! Please try again\",\n                theme: PopupAlertTheme.danger,\n              });\n              this.setState({\n                applicationError: \"Something went wrong! Please try again\",\n              });\n            }\n          }\n        }\n        console.log(\"Change error: \", { ...error });\n      }\n    }\n    if (this.state.selectedPosition) {\n      this.setState({ selectedPosition: this.state.selectedPosition });\n    }\n    this.setState({ selected_application: application_id });\n    this.setState({ loading: false });\n  };\n\n  incrementIncomplete = () => {\n    this.setState({\n      number_of_incomplete: this.state.number_of_incomplete + 1,\n    });\n  };\n\n  changeLoadingState = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  deleteApplication = async (id: string) => {\n    if (\n      window.confirm(\"Are you sure do you want to delete this application?\") &&\n      id\n    ) {\n      this.changeLoadingState(true);\n      try {\n        await axios.delete(`${API.APPLICATION}/apply/${id}`);\n        this.props.RemoveUserApplication(id);\n        this.LoadApplications();\n        this.props.PushPopupAlert({\n          title: `Application deleted successfully!`,\n          theme: PopupAlertTheme.success,\n        });\n        this.setState({ selectedExams: null });\n      } catch (error: any) {\n        this.props.PushPopupAlert({\n          title: `Failed to delete application!`,\n          theme: PopupAlertTheme.warning,\n        });\n      }\n      this.changeLoadingState(false);\n    }\n  };\n\n  setShowFilterStatus = (status: boolean) => {\n    this.setState({ showPeriodFilter: status });\n  };\n\n  setDoingExam = (status: boolean) => {\n    this.setState({ doing_exam: status });\n  };\n\n  componentDidMount = () => {\n    this.props.loadApplicationPeriods(this.changeLoadingState);\n    this.LoadApplications();\n    this.props.loadAllPositions(this.changeLoadingState);\n    if (\n      this.props.application.apply === undefined ||\n      this.props.application.apply.currentStep === ApplicationStepsTypes.Step3\n    ) {\n      this.props.initiateApplication({\n        user_id: this.props.auth.user.user_id,\n        selectedPosition: null,\n        currentStep: ApplicationStepsTypes.Step1,\n        positions: null,\n        doTestStatus: {\n          status: false,\n        },\n        selectedLocation: [],\n      });\n    }\n    // if (this.props.candidateApplications.candidate_applications !== null) {\n    //   if (this.props.candidateApplications.candidate_applications.length > 0) {\n    //     if (this.state.selectedPosition === null) {\n    //       this.setState({ selectedPosition: this.props.candidateApplications.candidate_applications[0].position, selected_application: this.props.candidateApplications.candidate_applications[0].application_id })\n    //     }\n    //     if (this.state.selectedExams === null) {\n    //       this.setState({ selectedExams: this.props.candidateApplications.candidate_applications[0].exams })\n    //     }\n    //   }\n    // }\n  };\n  render() {\n    if (!FC_Access(this.props.auth, UserAccessList.MY_APPLICATION).view) {\n      return <Redirect to=\"/\" />;\n    }\n    if (\n      this.props.candidateExam.selected_exam_id !== null &&\n      this.props.candidateExam.selected_exam_details !== null &&\n      (this.props.candidateExam.doing_exam === true ||\n        this.state.doing_exam === true)\n    ) {\n      return <Redirect to=\"/do-exam\" />;\n    }\n    if (\n      this.props.doExam.exam_answers &&\n      (this.props.candidateExam.doing_exam === true ||\n        this.state.doing_exam === true)\n    ) {\n      if (\n        this.props.doExam.exam_answers.status === examStatus.Editing ||\n        this.props.doExam.exam_answers.status === examStatus.Paused\n      ) {\n        return <Redirect to=\"/do-exam\" />;\n      }\n    }\n    return (\n      <Fragment>\n        {this.state.selectedPosition !== null &&\n        this.state.selectedExams !== null &&\n        this.state.displayDetailsModal === true ? (\n          <div className=\"border-t border-gray-200 my-2 pb-2 bg-white rounded animate__animated animate__fadeInUp animate__faster -ml-2 mr-1\">\n            <div className=\"flex flex-col md:flex-row gap-4 items-center md:justify-between bg-blue-600 rounded-t py-2 px-2\">\n              <div className=\"flex flex-row gap-4 w-full\">\n                <div>\n                  <div className=\"h-12 w-12 rounded-full bg-blue-500 hover:bg-blue-700 cursor-pointer flex items-center justify-center\">\n                    <BiArrowBack\n                      className=\"text-3xl text-white\"\n                      onClick={() => this.closeApplicationDetails()}\n                    />\n                  </div>\n                </div>\n                <div className=\"flex flex-col w-full\">\n                  <span className=\"font-bold text-xl text-white\">\n                    {this.state.selectedPosition.position_title}\n                  </span>\n                  <span className=\"text-sm text-gray-100 font-normal pl-1\">\n                    {this.props.candidateApplications.candidate_applications &&\n                      this.state.selectedPosition !== null &&\n                      this.props.candidateApplications.candidate_applications.find(\n                        (itm) =>\n                          itm.application_id === this.state.selected_application\n                      )?.application_session.session_plan_name}{\" \"}\n                    -{\" \"}\n                    {this.props.candidateApplications.candidate_applications !==\n                      null &&\n                      this.state.selectedPosition !== null &&\n                      this.props.candidateApplications.candidate_applications.find(\n                        (itm) =>\n                          itm.application_id === this.state.selected_application\n                      )?.application_session.period}\n                  </span>\n                </div>\n              </div>\n              {this.props.candidateApplications.candidate_applications !==\n                null &&\n              this.props.candidateApplications.candidate_applications.find(\n                (itm) =>\n                  itm.application_id === this.state.selected_application &&\n                  (itm.application_status === ApplicationStates.Shortlisted ||\n                    itm.application_status === ApplicationStates.Pass)\n              ) !== undefined ? (\n                <div\n                  title=\"Choose the Province, Choose the District, etc.\"\n                  className=\"mb-3 md:mb-0\"\n                  onClick={() => {\n                    if (\n                      this.props.candidateApplications\n                        .candidate_applications !== null\n                    ) {\n                      let checkApplication =\n                        this.props.candidateApplications.candidate_applications.find(\n                          (itm) =>\n                            itm.application_id ===\n                            this.state.selected_application\n                        );\n                      if (checkApplication !== undefined) {\n                        this.props.SelectUserApplication(checkApplication);\n                      }\n                    }\n                  }}\n                >\n                  <Link\n                    to=\"/placement-contract\"\n                    className=\"bg-blue-500 px-4 py-3 font-bold rounded-md border-2 border-white text-white hover:bg-blue-800\"\n                  >\n                    Placement\n                  </Link>\n                </div>\n              ) : (\n                <div\n                  title=\"Wait for being shortlisted to fill placement agreement\"\n                  className=\"bg-blue-500 text-blue-300 rounded px-3 py-2 cursor-not-allowed hidden md:block\"\n                >\n                  Placement\n                </div>\n              )}\n            </div>\n            {/* Check application */}\n            <div className=\"bg-gray-100\"></div>\n            <Exams\n              selectedExams={this.state.selectedExams}\n              selectedPosition={this.state.selectedPosition}\n              selected_application={this.state.selected_application}\n              updateLocation={this.updateLocation}\n              changeLocationError={this.state.applicationError}\n              loading={this.state.loading}\n              incrementIncomplete={this.incrementIncomplete}\n              applicationHistory={\n                this.props.candidateApplications.candidate_applications !==\n                  null && this.state.selectedPosition !== null\n                  ? this.props.candidateApplications.candidate_applications.find(\n                      (itm) =>\n                        itm.position.position_id ===\n                        this.state.selectedPosition?.position_id\n                    )?.application_history\n                  : undefined\n              }\n              deleteApplication={this.deleteApplication}\n              selectedApplicationDetails={\n                this.props.candidateApplications.candidate_applications &&\n                this.props.candidateApplications.candidate_applications.find(\n                  (itm) =>\n                    itm.application_id === this.state.selected_application\n                )!\n              }\n              setMaxExamModal={this.setMaxExamModal}\n              setDisplayDetailsModal={this.setDisplayDetailsModal}\n              doing_exam={this.state.doing_exam}\n              setDoingExam={this.setDoingExam}\n            />\n          </div>\n        ) : (\n          <>\n            <SideNavigation>\n              {this.props.positions.positions_list === null ? (\n                <div className=\"btn bg-gray-500 text-white mb-4 w-full flex flex-row items-center gap-3 cursor-not-allowed animate__animated animate__zoomIn\">\n                  <RiFileForbidLine className=\"text-2xl text-white\" /> Please\n                  wait...\n                </div>\n              ) : this.props.positions.positions_list.length > 0 &&\n                this.props.periods.applicationPeriods &&\n                this.props.periods.applicationPeriods.filter(\n                  (itm) => itm.is_active === true\n                ).length !== 0 ? (\n                <Link to=\"/apply\">\n                  <div className=\"btn btn-blue text-white mb-4 w-full flex flex-row items-center gap-3 animate__animated animate__zoomIn\">\n                    <MdAdd className=\"text-2xl text-white\" /> Apply\n                  </div>\n                </Link>\n              ) : (\n                <div className=\"btn bg-gray-200 cursor-not-allowed text-gray-500 mb-4 w-full flex flex-row items-center animate__animated animate__zoomIn\">\n                  No vacancies!\n                </div>\n              )}\n              {/* <div className=\"mb-6\"></div> */}\n              {/* <Search data={[1, 2, 3]} /> */}\n              <div\n                onClick={() =>\n                  this.setState({ selectedApplicationStatus: null })\n                }\n                className={`cursor-pointer ${\n                  this.state.selectedApplicationStatus !== null\n                    ? \"text-gray-600 hover:text-blue-600 border border-gray-200 hover:border-blue-600 hover:bg-blue-100 bg-white\"\n                    : \"text-blue-600 border border-blue-600 hover:bg-blue-100 bg-blue-100\"\n                } flex flex-row items-center gap-2 px-2 py-1 rounded font-bold`}\n              >\n                <IoMdList className=\"text-xl\" />\n                <span>\n                  View all (\n                  {this.props.candidateApplications.candidate_applications ===\n                  null\n                    ? 0\n                    : this.props.candidateApplications.candidate_applications.filter(\n                        (itm) =>\n                          itm.application_session._id ===\n                          this.props.periods.selected_period?._id\n                      ).length}\n                  )\n                </span>\n              </div>\n              <div className=\"pt-1\">\n                {(this.props.candidateApplications.candidate_applications &&\n                  this.filteredApplications(\n                    this.props.candidateApplications.candidate_applications,\n                    null,\n                    this.props.periods.selected_period\n                  ) === null) ||\n                this.props.candidateApplications.loading === true ? (\n                  <Loading />\n                ) : this.props.candidateApplications.candidate_applications &&\n                  RTB_SHOW_STATUS_APPLY === true ? (\n                  this.applicationStatuses(\n                    this.filteredApplications(\n                      this.props.candidateApplications.candidate_applications,\n                      null,\n                      this.props.periods.selected_period\n                    )\n                  )\n                ) : (\n                  [].map(\n                    (\n                      itm: {\n                        title: string;\n                        count: number;\n                        status: ApplicationStates;\n                      },\n                      i: number\n                    ) =>\n                      itm.count > 0 && (\n                        <Fragment key={itm.title}>\n                          <div\n                            onClick={() =>\n                              this.setState({\n                                selectedApplicationStatus: itm.status,\n                              })\n                            }\n                          >\n                            <MainItem\n                              title={itm.title}\n                              count={itm.count}\n                              active={\n                                this.state.selectedApplicationStatus ===\n                                itm.status\n                                  ? true\n                                  : false\n                              }\n                            />\n                          </div>\n                        </Fragment>\n                      )\n                  )\n                )}\n              </div>\n            </SideNavigation>\n            <div className=\"px-2 -ml-2 lg:ml-0\">\n              <div className=\"mt-2 rounded px-2 md:px-0 py-3 md:py-3\">\n                <div className=\"flex flex-col\">\n                  <div className=\"flex flex-col md:flex-row justify-between md:items-center\">\n                    <div className=\"flex flex-col\">\n                      <span className=\"text-blue-600 text-2xl md:text-2xl lg:text-3xl font-bold\">\n                        My Applications{\" \"}\n                        <span className=\"md:hidden\">\n                          (\n                          {this.props.candidateApplications\n                            .candidate_applications &&\n                          this.filteredApplications(\n                            this.props.candidateApplications\n                              .candidate_applications,\n                            this.state.selectedApplicationStatus,\n                            this.props.periods.selected_period\n                          )\n                            ? this.filteredApplications(\n                                this.props.candidateApplications\n                                  .candidate_applications,\n                                this.state.selectedApplicationStatus,\n                                this.props.periods.selected_period\n                              ).length\n                            : 0}\n                          )\n                        </span>\n                      </span>\n                      <div className=\"text-gray-700 font-bold text-xs md:text-sm lg:text-md flex flex-row gap-1 items-center\">\n                        <div className=\"text-blue-600 underline text-base font-extrabold mr-1\">\n                          {\n                            this.props.schoolLevels.selectedEducationCategory\n                              ?.education_category_title\n                          }\n                        </div>\n                        <BsChevronRight className=\"mr-1\" />\n                        <AiOutlineFilter className=\"text-2xl\" /> Selected period{\" \"}\n                        <span\n                          onClick={() =>\n                            this.setState({ showPeriodFilter: true })\n                          }\n                          className={`px-2 ${\n                            this.props.periods.selected_period !== null\n                              ? \"text-blue-600 hover:bg-blue-100 border-2 border-gray-200 hover:border-blue-600 underline\"\n                              : \"bg-white text-gray-600 hover:bg-gray-100 border border-gray-300\"\n                          }  rounded-full py-1 flex flex-row justify-center items-center font-bold cursor-pointer`}\n                        >\n                          {this.props.periods.selected_period !== null ? (\n                            <>\n                              <BsCaretRightFill className=\"mr-3\" />\n                              {\n                                this.props.periods.selected_period\n                                  .session_plan_name\n                              }\n                            </>\n                          ) : (\n                            \"Choose period\"\n                          )}\n                        </span>\n                      </div>\n                    </div>\n                    <div>\n                      <div\n                        onClick={() =>\n                          this.setState({ showPeriodFilter: true })\n                        }\n                        className=\"bg-white border border-white hover:border-blue-600 text-blue-600 font-bold items-center btn w-max cursor-pointer hover:bg-blue-100 my-2 md:my-0\"\n                      >\n                        {this.props.periods.selected_period === null\n                          ? \"Choose period\"\n                          : \"Change period\"}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              {this.state.loadingErr !== \"\" && (\n                <div className=\"bg-yellow-100 text-yellow-700 font-extrabold text-2xl mx-4 px-3 py-3 rounded\">\n                  {this.state.loadingErr}\n                </div>\n              )}\n              <div className=\"mb-2\">\n                <div className=\"grid grid-cols-12 gap-3\">\n                  <div className=\"col-span-12\">\n                    <div className={`grid md:grid-cols-1 lg:grid-cols-1 gap-2`}>\n                      <div className=\"-my-2 md:hidden lg:hidden xl:hidden\">\n                        {this.props.positions.positions_list === null ? (\n                          <div className=\"btn bg-gray-500 text-white mb-4 w-full flex flex-row items-center gap-3 animate__animated animate__zoomIn justify-center\">\n                            <RiFileForbidLine className=\"text-2xl text-white\" />{\" \"}\n                            Please wait...\n                          </div>\n                        ) : this.props.positions.positions_list.length > 0 ? (\n                          <Link to=\"/apply\">\n                            <div className=\"btn btn-blue text-white mb-4 w-full flex flex-row items-center gap-3 animate__animated animate__zoomIn justify-center\">\n                              <MdAdd className=\"text-2xl text-white\" /> Create\n                              application\n                            </div>\n                          </Link>\n                        ) : (\n                          <div className=\"btn bg-gray-400 text-white mb-4 w-full flex flex-row items-center gap-3 animate__animated animate__zoomIn justify-center\">\n                            <RiFileForbidLine className=\"text-2xl text-white\" />{\" \"}\n                            No vacancies!\n                          </div>\n                        )}\n                      </div>\n                      {this.props.candidateApplications\n                        .candidate_applications === null ||\n                      this.props.candidateApplications.loading === true ? (\n                        <LoadingV2 type={LoadingType.dark} />\n                      ) : this.filteredApplications(\n                          this.props.candidateApplications\n                            .candidate_applications,\n                          this.state.selectedApplicationStatus,\n                          this.props.periods.selected_period\n                        ).length === 0 ? (\n                        <div className=\"\">\n                          <NoResult\n                            theme={NoResultThemes.Dark}\n                            value=\"No Applications found!\"\n                            component={\n                              <div className=\"-my-2 hidden md:block\">\n                                {this.props.positions.positions_list !== null &&\n                                  this.props.positions.positions_list.length >\n                                    0 &&\n                                  this.props.periods.applicationPeriods &&\n                                  this.props.periods.applicationPeriods.filter(\n                                    (itm) => itm.is_active === true\n                                  ).length !== 0 && (\n                                    <Link to=\"/apply\">\n                                      <div className=\"text-blue-600 font-bold underline mb-2 hover:text-blue-800 animate__animated animate__zoomIn\">\n                                        Click here to create new application\n                                      </div>\n                                    </Link>\n                                  )}\n                              </div>\n                            }\n                          />\n                        </div>\n                      ) : (\n                        this.filteredApplications(\n                          this.props.candidateApplications\n                            .candidate_applications,\n                          this.state.selectedApplicationStatus,\n                          this.props.periods.selected_period\n                        ).map((item, i) => (\n                          <div\n                            key={i + 1}\n                            onClick={() => {\n                              this.setState({\n                                selectedPosition: item.position,\n                                selected_application: item.application_id,\n                              });\n                              this.setState({ selectedExams: item.exams });\n                              this.setState({ displayDetailsModal: true });\n                            }}\n                            className={`bg-white rounded-md animate__animated animate__fadeIn animate__faster\n                      ${\n                        this.state.selectedPosition?.position_id ===\n                        item.position.position_id\n                          ? \"border-2 border-blue-600 shadow\"\n                          : item.application_status ===\n                            ApplicationStates.Initiated\n                          ? \"border-gray-200 bg-gray-50 hover:border-gray-600\"\n                          : item.application_status ===\n                            ApplicationStates.Rejected\n                          ? \"bg-white border-white\"\n                          : item.application_status ===\n                            ApplicationStates.Shortlisted\n                          ? \"border-gray-200 bg-white hover:border-blue-600\"\n                          : item.application_status === ApplicationStates.Pass\n                          ? \"border-green-700 bg-white hover:border-green-900\"\n                          : \"bg-white border-yellow-600 hover:border-yellow-500\"\n                      } flex flex-col cursor-pointer font-normal hover:font-bold border-2`}\n                          >\n                            <div\n                              className={`grid md:grid-cols-12 group px-3 py-3 rounded-md gap-2 ${\n                                this.state.selectedPosition?.position_id ===\n                                item.position.position_id\n                                  ? \"bg-gray-100 rounded-t\"\n                                  : \"bg-white\"\n                              }`}\n                            >\n                              <div className=\"col-span-1 flex items-center justify-center\">\n                                {item.application_status ===\n                                ApplicationStates.Initiated ? (\n                                  <IoBriefcaseOutline className=\"text-5xl text-gray-400 group-hover:text-blue-600\" />\n                                ) : item.application_status ===\n                                  ApplicationStates.Rejected ? (\n                                  <IoBriefcase className=\"text-5xl text-gray-400 group-hover:text-gray-700\" />\n                                ) : item.application_status ===\n                                  ApplicationStates.Shortlisted ? (\n                                  <IoBriefcaseOutline className=\"text-5xl text-gray-400 group-hover:text-blue-600\" />\n                                ) : item.application_status ===\n                                  ApplicationStates.Pass ? (\n                                  <IoBriefcaseOutline className=\"text-5xl text-gray-400 group-hover:text-green-800\" />\n                                ) : item.application_status ===\n                                  ApplicationStates.Incomplete ? (\n                                  <IoBriefcaseOutline className=\"text-5xl text-gray-400 group-hover:text-yellow-800\" />\n                                ) : (\n                                  <IoBriefcase className=\"text-5xl text-gray-400 group-hover:text-blue-600\" />\n                                )}\n                              </div>\n                              <div className=\"col-span-7\">\n                                <span\n                                  className={`font-extrabold \n                          ${\n                            item.application_status !==\n                            ApplicationStates.Initiated\n                              ? item.application_status ===\n                                ApplicationStates.Rejected\n                                ? \"text-gray-900 group-hover:text-gray-900\"\n                                : item.application_status ===\n                                  ApplicationStates.Shortlisted\n                                ? \"text-gray-900 group-hover:text-blue-600\"\n                                : item.application_status ===\n                                  ApplicationStates.Pass\n                                ? \"text-gray-900 group-hover:text-green-800\"\n                                : item.application_status ===\n                                  ApplicationStates.Incomplete\n                                ? \"text-gray-900 group-hover:text-yellow-800\"\n                                : \"text-gray-900 group-hover:text-blue-600\"\n                              : \"text-gray-900 group-hover:text-blue-600\"\n                          }`}\n                                >\n                                  {item.position.position_title}\n                                </span>\n                                <div className=\"flex flex-col text-xs text-gray-600\">\n                                  <div className=\"flex flex-row gap-2\">\n                                    <div>\n                                      <div className=\"flex flex-col float-left text-sm md:justify-end pt-2\">\n                                        <span\n                                          className={`${\n                                            item.application_status ===\n                                            ApplicationStates.Rejected\n                                              ? \"text-yellow-700\"\n                                              : \"text-gray-500\"\n                                          } md:text-right`}\n                                        >\n                                          {/* Status */}\n                                        </span>\n                                        {item.application_status ===\n                                        ApplicationStates.Initiated ? (\n                                          <span\n                                            className={`font-bold ${\n                                              this.state.selectedPosition\n                                                ?.position_id ===\n                                              item.position.position_id\n                                                ? \"bg-gray-600 text-gray-100 border border-gray-500 rounded-full\"\n                                                : \"bg-gray-50 text-gray-800 rounded\"\n                                            } px-3 py-1`}\n                                          >\n                                            {\n                                              ApplicationStatesDescription.find(\n                                                (itm) =>\n                                                  itm.key ===\n                                                  item.application_status\n                                              )?.caption\n                                            }\n                                          </span>\n                                        ) : item.application_status ===\n                                          ApplicationStates.Rejected ? (\n                                          <span\n                                            className={`font-bold ${\n                                              this.state.selectedPosition\n                                                ?.position_id ===\n                                              item.position.position_id\n                                                ? \"bg-yellow-900 text-yellow-100 border border-yellow-700 rounded-full\"\n                                                : \"bg-yellow-100 text-yellow-900 rounded\"\n                                            } px-3 py-1`}\n                                          >\n                                            {\n                                              ApplicationStatesDescription.find(\n                                                (itm) =>\n                                                  itm.key ===\n                                                  item.application_status\n                                              )?.caption\n                                            }\n                                          </span>\n                                        ) : item.application_status ===\n                                          ApplicationStates.Shortlisted ? (\n                                          <span\n                                            className={`font-bold ${\n                                              this.state.selectedPosition\n                                                ?.position_id ===\n                                              item.position.position_id\n                                                ? \"bg-blue-900 text-blue-100 border border-blue-700 rounded-full\"\n                                                : \"bg-blue-100 text-blue-900 rounded\"\n                                            } px-3 py-1`}\n                                          >\n                                            {\n                                              ApplicationStatesDescription.find(\n                                                (itm) =>\n                                                  itm.key ===\n                                                  item.application_status\n                                              )?.caption\n                                            }\n                                          </span>\n                                        ) : item.application_status ===\n                                          ApplicationStates.Pass ? (\n                                          <span\n                                            className={`font-bold ${\n                                              this.state.selectedPosition\n                                                ?.position_id ===\n                                              item.position.position_id\n                                                ? \"bg-green-900 text-green-100 border border-green-700 rounded-full\"\n                                                : \"bg-green-100 text-green-900 rounded\"\n                                            } px-3 py-1`}\n                                          >\n                                            {\n                                              ApplicationStatesDescription.find(\n                                                (itm) =>\n                                                  itm.key ===\n                                                  item.application_status\n                                              )?.caption\n                                            }\n                                          </span>\n                                        ) : (\n                                          <span\n                                            className={`font-bold ${\n                                              this.state.selectedPosition\n                                                ?.position_id ===\n                                              item.position.position_id\n                                                ? \"bg-yellow-600 text-yellow-100 border border-yellow-500 rounded-full\"\n                                                : \"bg-yellow-100 text-yellow-700 rounded\"\n                                            } px-3 py-1`}\n                                          >\n                                            {\n                                              ApplicationStatesDescription.find(\n                                                (itm) =>\n                                                  itm.key ===\n                                                  item.application_status\n                                              )?.caption\n                                            }\n                                          </span>\n                                        )}\n                                      </div>\n                                    </div>\n                                    <div className=\"flex flex-col\">\n                                      <span\n                                        className={`${\n                                          item.application_status !==\n                                          ApplicationStates.Initiated\n                                            ? item.application_status ===\n                                              ApplicationStates.Rejected\n                                              ? \"text-gray-500\"\n                                              : item.application_status ===\n                                                ApplicationStates.Shortlisted\n                                              ? \"text-gray-500\"\n                                              : \"text-gray-500\"\n                                            : \"text-gray-500\"\n                                        }`}\n                                      >\n                                        {/* Application period: */}\n                                      </span>\n                                      <span\n                                        className={`${\n                                          item.application_status !==\n                                          ApplicationStates.Initiated\n                                            ? item.application_status ===\n                                              ApplicationStates.Rejected\n                                              ? \"text-gray-800\"\n                                              : item.application_status ===\n                                                ApplicationStates.Shortlisted\n                                              ? \"text-gray-800\"\n                                              : \"text-gray-800\"\n                                            : \"text-black\"\n                                        } font-bold`}\n                                      >\n                                        {item.application_session &&\n                                          item.application_session\n                                            .session_plan_name}{\" \"}\n                                        -{\" \"}\n                                        {item.application_session &&\n                                          item.application_session.period}\n                                      </span>\n                                      <div className=\"flex flex-row gap-2\">\n                                        <span\n                                          className={`${\n                                            item.application_status !==\n                                            ApplicationStates.Initiated\n                                              ? item.application_status ===\n                                                ApplicationStates.Rejected\n                                                ? \"text-gray-500\"\n                                                : item.application_status ===\n                                                  ApplicationStates.Shortlisted\n                                                ? \"text-gray-500\"\n                                                : \"text-gray-500\"\n                                              : \"text-gray-500\"\n                                          }`}\n                                        >\n                                          Date:\n                                        </span>\n                                        <span\n                                          className={`${\n                                            item.application_status !==\n                                            ApplicationStates.Initiated\n                                              ? item.application_status ===\n                                                ApplicationStates.Rejected\n                                                ? \"text-gray-800\"\n                                                : item.application_status ===\n                                                  ApplicationStates.Shortlisted\n                                                ? \"text-gray-800\"\n                                                : \"text-gray-800\"\n                                              : \"text-black\"\n                                          } font-bold`}\n                                        >\n                                          {DATE(item.createdAt, \"DD/MM/YYYY\")}\n                                        </span>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                              <div className=\"col-span-12 md:col-span-4 flex md:justify-end items-center\">\n                                {/* Action */}\n                                <div className=\"flex flex-row items-center justify-end gap-2 w-full\">\n                                  {/* <div className=\"btn bg-gray-100 text-gray-600\">\n                                    Details\n                                  </div> */}\n                                  {item.application_status ===\n                                    ApplicationStates.Shortlisted && (\n                                    <div\n                                      className=\"mt-2 md:mt-0\"\n                                      title=\"Choose the Province, Choose the District, etc.\"\n                                      onClick={() => {\n                                        this.props.SelectUserApplication(item);\n                                      }}\n                                    >\n                                      <Link to=\"/placement-contract\">\n                                        <div className=\"rounded px-2 py-1 font-bold bg-blue-50 text-blue-600 group-hover:bg-blue-600 group-hover:text-white\">\n                                          <span>Placement agreement</span>\n                                        </div>\n                                      </Link>\n                                    </div>\n                                  )}\n                                  {item.application_status ===\n                                  ApplicationStates.Rejected ? (\n                                    <div className=\"rounded border border-blue-500 px-2 py-1 bg-blue-100 group-hover:bg-blue-600 text-blue-600 group-hover:text-white cursor-pointer mt-2 md:mt-0 font-bold\">\n                                      Rejection Claiming\n                                    </div>\n                                  ) : (\n                                    <div className=\"rounded px-2 py-2 bg-gray-100 hover:bg-gray-200 text-gray-600 cursor-pointer mt-2 md:mt-0 font-bold\">\n                                      Details\n                                    </div>\n                                  )}\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        ))\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </>\n        )}\n\n        {this.state.showPeriodFilter === true && (\n          <Modal\n            title={<div className=\"text-2xl\">Choose a period</div>}\n            backDrop={true}\n            theme={Themes.default}\n            close={() => this.setState({ showPeriodFilter: false })}\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{ title: true, body: false }}\n          >\n            <ApplicationPeriods\n              applicationPeriods={\n                this.props.periods.applicationPeriods !== null &&\n                this.props.schoolLevels.selectedEducationCategory !== null\n                  ? this.props.periods.applicationPeriods.filter(\n                      (te) =>\n                        this.props.schoolLevels.selectedEducationCategory !==\n                          null &&\n                        te.institution ===\n                          this.props.schoolLevels.selectedEducationCategory\n                            .education_institute_id\n                    )\n                  : this.props.periods.applicationPeriods\n              }\n              setSelectedPeriod={this.props.setSelectedPeriod}\n              showPeriodFilter={this.setShowFilterStatus}\n            />\n          </Modal>\n        )}\n        {this.state.viewSchools !== null && (\n          <Modal\n            title={\n              <div className=\"flex flex-col\">\n                <span className=\"text-4xl font-extrabold text-blue-600\">\n                  {this.state.viewSchools.position.position_title}\n                </span>\n                <span className=\"text-base\">View placement schools</span>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() => this.setState({ viewSchools: null })}\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{ title: true, body: false }}\n          >\n            <CandidatePlacementCheck\n              position={this.state.viewSchools}\n              user={this.props.auth.user}\n            />\n          </Modal>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  application,\n  periods,\n  system,\n  positions,\n  candidateApplications,\n  candidateExam,\n  course,\n  doExam,\n  schoolLevels,\n}: StoreState): {\n  auth: Auth;\n  application: applicationStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n  system: System;\n  positions: positionsStoreInterface;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  candidateExam: candidateExamStoreInterface;\n  course: courseStoreInterface;\n  doExam: examDataInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n} => {\n  return {\n    auth: auth,\n    application: application,\n    periods,\n    system: system,\n    positions: positions,\n    candidateApplications: candidateApplications,\n    candidateExam: candidateExam,\n    course: course,\n    doExam: doExam,\n    schoolLevels: schoolLevels,\n  };\n};\n\nexport const ApplicationsDashboard = connect(mapStateToProps, {\n  initiateApplication,\n  removeLocation,\n  loadApplicationPeriods,\n  setSelectedPeriod,\n  PushPopupAlert,\n  loadAllPositions,\n  FC_Access,\n  LoadCandidateApplications,\n  InitializeExamDetails,\n  loadExamsDone,\n  setSelectedPosition,\n  setSelectedCourse,\n  setSelectedCandidateExam,\n  AddUserApplication,\n  RemoveUserApplication,\n  SelectUserApplication,\n})(_ApplicationsDashboard);\n","import React, { FC, ReactElement, ReactNode } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, System } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { NavToogle, PageHasSubNav } from \"../../actions\";\nimport { MdBrightness1, MdSearch } from \"react-icons/md\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  system: System;\n  PageHasSubNav: Function;\n  NavToogle: Function;\n  children: ReactNode;\n}\n//\ninterface AppState {\n  loading: boolean;\n}\n\nclass _SideNavigation extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount = () => this.props.PageHasSubNav(true);\n  componentWillUnmount = () => this.props.PageHasSubNav(false);\n\n  render() {\n    const isAuthenticated = this.props.auth.isAuthenticated;\n\n    if (isAuthenticated === false) {\n      return null;\n    }\n\n    const navActive = this.props.system.navigation;\n    return (\n      <div\n        className={`fixed w-48 p-1 pr-2 pl-6 text-gray-700 bg-white ${\n          navActive === true ? \"lg:left-16  left-16\" : \" -left-72 lg:left-16\"\n        }  top-0 bottom-0 pt-20 z-30 shadow-lg  transition-all duration-500 ease-in-out overflow-y-auto`}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n}: StoreState): { auth: Auth; system: System } => {\n  return { auth: auth, system: system };\n};\n\nexport const SideNavigation = connect(mapStateToProps, {\n  NavToogle,\n  PageHasSubNav,\n})(_SideNavigation);\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SearchComponentInterface = {\n  data: any[];\n};\n\nexport const Search: FC<SearchComponentInterface> = ({\n  data,\n}): ReactElement => {\n  return (\n    <div className=\"m-1 rounded-md shadow-md border border-blue-400 bg-white p-1 flex \">\n      <label htmlFor=\"search-text\" className=\"inline-block text-2xl\">\n        <MdSearch className=\"inline-block text-blue-400\" />\n      </label>\n      <input\n        type=\"search\"\n        className=\"outline-none bg-transparent flex-1 pl-1\"\n        placeholder=\"Search\"\n        id=\"search-text\"\n      />\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype MainItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const MainItem: FC<MainItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n  return (\n    <section\n      className={`${\n        active === true\n          ? \"bg-blue-500 text-white font-bold\"\n          : \"bg-blue-100 text-blue-800\"\n      } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex cursor-pointer items-center`}\n    >\n      <section className=\"flex-1\">\n        <IconDefined className=\"inline-block mr-1 text-xs\" />\n        <span>{title}</span>\n      </section>\n\n      {count > 0 ? (\n        <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n          {count}\n        </span>\n      ) : null}\n    </section>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemContainerComponentInterface = {\n  children: ReactNode;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const SubItemContainer: FC<SubItemContainerComponentInterface> = ({\n  children,\n}): ReactElement => {\n  return (\n    <div className=\"ml-3 overflow-y-auto border-l-2 border-blue-200 -mt-1 pt-2 mb-2 pl-1 cursor-pointer\">\n      {children}\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n * @important Remenber to use these components inside the <SubItemContainer>...</SubItemContainer>\n */\nexport const SubItem: FC<SubItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n\n  return (\n    <div\n      className={`animate__animated animate__zoomIn animate__faster ${\n        active === true ? \"bg-blue-500 text-white font-bold\" : \" text-blue-800\"\n      } text-blue-800 bg-blue-200 rounded-md px-1 mb-1 flex items-center py-1 font-bold`}\n    >\n      <IconDefined\n        className={`inline-block mr-0.1 text-xs ${\n          active === true ? \"text-white\" : \"\"\n        }`}\n      />\n      <span\n        className={`inline-block pl-1 ${active === true ? \"text-white\" : \"\"}`}\n      >\n        {title}\n      </span>\n      {count >= 1 ? (\n        <span\n          className={`text-sm fint-bold ${active === true ? \"text-white\" : \"\"}`}\n        >\n          {count}\n        </span>\n      ) : null}\n    </div>\n  );\n};\n"],"sourceRoot":""}
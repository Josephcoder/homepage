{"version":3,"sources":["containers/AdminDashboard/ClaimDashboard/AllClaimChart.tsx","containers/AdminDashboard/ClaimDashboard/ClaimDashBoardTitle.tsx","containers/AdminDashboard/ClaimDashboard/ClaimDashboard.tsx","utils/ExportToExcel.tsx","utils/mineduc.png","components/DownloadPDF/rest.tsx","containers/SessionSettings/ChooseSession.tsx","containers/AdminDashboard/ChartComponents/VBarChart.tsx","containers/AdminDashboard/DashboardLabelItem.tsx","containers/AdminDashboard/ExamDashboard/ExamDashboardLabels.tsx","containers/AdminDashboard/ChartComponents/PieChart.tsx","containers/Admin/Claiming/ClaimingReport.tsx"],"names":["AllClaimChart","props","FC_GetAllClaimChartData","acceptedArray","rejectedArray","activeArray","labelArray","typeKey","ClaimTypes","type","push","count","accepted","rejected","pending","replace","active","labels","className","VBarChart","categoriesLabel","dataLabels","yaxisText","tooltipText","series","name","data","colors","defaultBar","borderRadius","horizontal","columnWidth","endingShape","stacked","React","memo","ClaimDashBoardTitle","reportTitle","education_categories","length","allEducation","loading","loadingApplications","loadingEducation","periodChanged","thisEducation","onClick","setThisEducation","map","education","index","education_institute_id","education_category_title","value","thisPeriod","disabled","onChange","e","setThisPeriod","target","onPeriodChange","application_sessions","session","item","_id","session_plan_name","_ClaimDashboard","setLoadingInstitutes","setState","loadingInstitutes","setLoading","setLoadingSession","loadingSession","setPeriodChanged","setLoadingPosition","loadingPosition","setLoadingApplications","setLoadingClaims","loadingClaims","setLoadingDocuments","loadingDocuments","setLoadingClarifications","loadingClarifications","setLoadingFields","loadingFields","setThisLabel","thisLabel","componentDidMount","schoolLevels","loadEducationCategories","GetAllSessionPlans","status","msg","PushPopupAlert","title","theme","PopupAlertTheme","danger","thisSession","find","is_active","state","isEmptyOrSpaces","documentReducer","documentCategory","getDocumentCategory","documentSubCategory","getDocumentSubCategory","documentFields","getDocumentFields","systemPositions","auth","education_institution_id","FC_GetPositionsByInstitution","console","log","period_id","getAllClaims","getAllApplications","getClaimInstitute","thisClaim","type_key","PlansTypeKeys","DOCUMENT_VALIDATION","APPLICATION","claiming","allApplications","thisApplication","claiming_on_id","thisPosition","position_id","position","displayClaimTitle","result","user","details","filter","validation_status","adminDisplayClaimTitle","position_title","claims","output","all","decision","ClaimDecisionStatus","ACCEPTED","REJECTED","Object","values","forEach","PlansKey","capitalizeFirstLetter","reportClaimType","itm","claim_type","FC_ClaimData","allClaims","arrayNew","n","key","prototype","hasOwnProperty","call","keyClaim","element","dataArray","claim_id","names","user_info","fname","lname","gender","sex","national_id","n_id","phone","phone_number","email","claim_level","level","education_category","claim_session","date","DATE","createdAt","decision_taken_status","claim_title","getClaimDataByTitle","allData","this","NoSession","toLocaleLowerCase","ExamDashboardLabels","icon","FaBookOpen","iconColor","labelsOnRow","PieChart","options","legend","show","horizontalAlign","fontSize","itemMargin","vertical","plotOptions","pie","donut","color","offsetY","fontFamily","formatter","val","total","label","w","globals","seriesTotals","reduce","a","b","width","Component","ClaimDashboard","connect","system_settings","sessionPlan","document","allSessionPlans","GetClaimingTypes","setSelectedClaimType","ExportToExcel","fileData","fileName","btnName","showIcon","apiData","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","exportToCSV","require","addFooters","doc","pageCount","internal","getNumberOfPages","setFont","setFontSize","i","setPage","text","String","pageSize","align","generatePDF","reportSettings","table","callBack","orientation","lMargin","jsPDF","setTextColor","addImage","Logo","undefined","getWidth","institute","lines","splitTextToSize","subject","pdfInMM","y","subjectTitle","getTextWidth","addPage","period","autoTable","html","startY","margin","cellPadding","rowHeight","bodyStyles","valign","columnStyles","cellWidth","tableWidth","finalY","lastAutoTable","doneBy","Date","toString","save","returnPromise","then","isPlansActive","plans","today","activePlans","plan","startDate","start_date","endDate","end_date","getTime","type_status","SessionPlanTypeStatus","OPEN","ChooseSession","searched","useState","selectedPlan","setSelectedPlan","search","setSearch","placeholder","allSession","chooseAll","currentSelected","setSelectSession","searchData","type_title","chart","events","dataPointSelection","event","chartContext","config","labelClicked","dataPointIndex","FC_LoadSelected","seriesIndex","bar","enabled","xaxis","rotate","categories","tickPlacement","yaxis","fill","opacity","tooltip","grid","padding","left","right","noData","verticalAlign","setOptions","useEffect","chartClicked","zoom","autoScaleYaxis","height","chartHeight","DashboardLabelItem","FaUsers","countOver","IconDefined","toAnyDigit","displayNumbers","numCols","children","childrenPosition","ClaimTypesEnum","application","EXAMINATION","exam","MARKS_PUBLICATION","marks_publication","PLACEMENT_TRANSFER","placement","defaultReportContent","claimReportContentKeyInterface","ClaimingReport","thisLevel","setThisLevel","downloading","setDownloading","claimToPrint","setClaimToPrint","sortProperty","setSortProperty","isSorted","setIsSorted","sortOrder","setSortOrder","searchInput","setSearchInput","generateReportModal","setGenerateReportModal","setReportTitle","reportContent","setReportContent","selectAll","setSelectAll","formError","setFormError","selectPeriod","setSelectPeriod","claimTypes","objList","setSort","thisProperty","updateClaimToPrint","thisType","whichClaimType","institute_id","isChangeAllowed","FC_FilterClaims","claimType","claimLevel","capitalizeFirstWord","selectedType","selectedClaimType","currentType","levels","ClaimLevels","reportType","querySelectorAll","getElementById","footer","warning","FC_GeneratePDF","id","cols","colSpan","sortThisArray","product","flag","prop","toLowerCase","indexOf","backDrop","Themes","default","close","backDropClose","widthSizeClass","ModalSize","medium","displayClose","findIndex","newArray","isSelectAllNeeded","updateReportContent","currentState","resetReportContent","extraLarge"],"mappings":"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","file":"static/js/27.b64bb27f.chunk.js","sourcesContent":["import React from \"react\";\nimport VBarChart from \"../ChartComponents/VBarChart\";\n\ntype AllClaimChartProps = {\n  ClaimTypes: {\n    title: string;\n    count: {\n      all: number;\n      accepted: number;\n      rejected: number;\n      pending: number;\n    };\n    type: string | \"all\";\n  }[];\n};\n\nconst AllClaimChart: React.FC<AllClaimChartProps> = (props) => {\n  const FC_GetAllClaimChartData = (): {\n    accepted: number[];\n    rejected: number[];\n    active: number[];\n    labels: string[];\n  } => {\n    let acceptedArray: number[] = [],\n      rejectedArray: number[] = [],\n      activeArray: number[] = [],\n      labelArray: string[] = [];\n\n    for (const typeKey in props.ClaimTypes) {\n      if (props.ClaimTypes[typeKey].type !== \"all\") {\n        acceptedArray.push(props.ClaimTypes[typeKey].count.accepted);\n        rejectedArray.push(props.ClaimTypes[typeKey].count.rejected);\n        activeArray.push(props.ClaimTypes[typeKey].count.pending);\n        labelArray.push(props.ClaimTypes[typeKey].type.replace(/_/g, \" \"));\n      }\n    }\n    return {\n      accepted: acceptedArray,\n      rejected: rejectedArray,\n      active: activeArray,\n      labels: labelArray,\n    };\n  };\n\n  return (\n    <section className=\"my-3 max-w-full bg-white\">\n      <div className=\"flex items-center justify-between px-3\">\n        <span className=\"text-gray-600 font-semibold text-xl py-4 px-0\">\n          Claim chart on country level\n        </span>\n      </div>\n      <div className=\"mb-4 pb-2 px-3\">\n        <VBarChart\n          labels={FC_GetAllClaimChartData().labels}\n          categoriesLabel={FC_GetAllClaimChartData().labels}\n          dataLabels={false}\n          yaxisText=\"(Applicants)\"\n          tooltipText=\"Claims\"\n          series={[\n            {\n              name: \"Pending Claim\",\n              data: FC_GetAllClaimChartData().active,\n            },\n            {\n              name: \"Accepted Claim\",\n              data: FC_GetAllClaimChartData().accepted,\n            },\n            {\n              name: \"Rejected Claim\",\n              data: FC_GetAllClaimChartData().rejected,\n            },\n          ]}\n          colors={[\"#4b5563\", \"#469769\", \"#d97724\"]}\n          defaultBar={{\n            borderRadius: 4,\n            horizontal: false,\n            columnWidth: \"95%\",\n            endingShape: \"rounded\",\n          }}\n          stacked={true}\n        />\n      </div>\n    </section>\n  );\n};\n\nexport default React.memo(AllClaimChart);\n","import React from \"react\";\nimport { AiFillDashboard } from \"react-icons/ai\";\nimport { MdBrightness1 } from \"react-icons/md\";\nimport { SessionPlanInterface } from \"../../../interfaces\";\nimport { education_category } from \"../../../interfaces/education_category\";\n\ntype ClaimDashBoardTitleProps = {\n  reportTitle: string;\n  education_categories: education_category[] | null;\n  loading: boolean;\n  loadingApplications: boolean;\n  loadingEducation: boolean;\n  thisEducation: education_category | null;\n  allEducation: boolean;\n  periodChanged: boolean;\n  setThisEducation: (value: education_category | null) => void;\n  thisPeriod: string;\n  setThisPeriod: (value: string) => void;\n  application_sessions: SessionPlanInterface[];\n  onPeriodChange: (period_id: string) => void;\n};\n\nconst ClaimDashBoardTitle: React.FC<ClaimDashBoardTitleProps> = (props) => {\n  return (\n    <div className=\"mt-3 rounded flex flex-col md:flex-row md:justify-between items-start\">\n      <div className=\"flex flex-row items-center gap-3 mb-2\">\n        <AiFillDashboard className=\"text-6xl text-blue-600 hidden md:block\" />\n        <div className=\"flex flex-col\">\n          <span className=\"text-blue-600 text-3xl font-bold\">\n            {props.reportTitle}\n          </span>\n        </div>\n      </div>\n\n      {/* FILTER SECTION PERIOD && EDUCATION */}\n      <section className=\"w-full md:w-auto my-2 md:my-0\">\n        {/* EDUCATION CATEGORY sections */}\n        <section>\n          {props.education_categories && props.education_categories.length > 0 && (\n            <div className=\"flex items-start md:items-center justify-start md:justify-end gap-2\">\n              {props.allEducation && (\n                <div\n                  className={`w-auto ${\n                    props.loading ||\n                    props.loadingApplications ||\n                    props.loadingEducation ||\n                    props.periodChanged\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } ${\n                    props.thisEducation === null\n                      ? \"bg-blue-500 text-white font-bold\"\n                      : \"bg-gray-100 text-blue-800\"\n                  } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex items-center animate__animated animate__zoomIn`}\n                  onClick={() =>\n                    !props.loading &&\n                    !props.loadingEducation &&\n                    props.setThisEducation(null)\n                  }\n                >\n                  <section className=\"flex-1\">\n                    <MdBrightness1 className=\"inline-block mr-1 text-xs\" />\n                    <span>All</span>\n                  </section>\n                </div>\n              )}\n              {props.education_categories.map((education, index) => (\n                <div\n                  key={education.education_institute_id + index}\n                  className={`w-auto ${\n                    props.loading ||\n                    props.loadingApplications ||\n                    props.loadingEducation\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } ${\n                    props.thisEducation &&\n                    education.education_institute_id ===\n                      props.thisEducation.education_institute_id\n                      ? \"bg-blue-500 text-white font-bold\"\n                      : \"bg-gray-100 text-blue-800\"\n                  } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex items-center animate__animated animate__zoomIn`}\n                  onClick={() =>\n                    !props.loading &&\n                    !props.loadingApplications &&\n                    !props.loadingEducation &&\n                    props.setThisEducation(education)\n                  }\n                >\n                  <div className=\"flex-1\">\n                    <MdBrightness1 className=\"inline-block mr-1 text-xs\" />\n                    <span>{education.education_category_title}</span>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </section>\n        {/* end EDUCATION CATEGORY sections */}\n        <div>\n          <select\n            className={`bg-white text-gray-600 border border-gray-400 rounded p-2 focus:outline-none ${\n              props.loadingApplications && \"cursor-wait\"\n            }`}\n            value={props.thisPeriod}\n            disabled={\n              props.loading ||\n              props.loadingApplications ||\n              props.loadingEducation ||\n              props.periodChanged\n            }\n            onChange={(e) => {\n              props.setThisPeriod(e.target.value);\n              props.onPeriodChange(e.target.value);\n            }}\n          >\n            {props.application_sessions.map((session, item) => (\n              <option key={session._id + item} value={session._id}>\n                {session.session_plan_name}\n              </option>\n            ))}\n          </select>\n        </div>\n      </section>\n      {/* END FILTER SECTION PERIOD && EDUCATION */}\n    </div>\n  );\n};\n\nexport default React.memo(ClaimDashBoardTitle);\n","import React, { Component } from \"react\";\nimport { FaBookOpen } from \"react-icons/fa\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  schoolLevelsStoreInterface,\n  getAllClaims,\n  GetClaimingTypes,\n  getAllApplications,\n  loadEducationCategories,\n  setSelectedClaimType,\n  PushPopupAlert,\n} from \"../../../actions\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport { FC_GetPositionsByInstitution } from \"../../../actions/settings\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport {\n  SessionPlanInterface,\n  PositionAPI,\n  education_category,\n  PlansTypeKeys,\n  CandidateClaimInterface,\n  ClaimToPrintInterface,\n  ClaimDecisionStatus,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { DATE } from \"../../../utils/functions\";\nimport { reportClaimType } from \"../../Admin/Claiming/ClaimingReport\";\nimport { adminDisplayClaimTitle } from \"../../Claimings/Admin\";\nimport NoSession from \"../../SessionSettings/NoSession\";\nimport PieChart from \"../ChartComponents/PieChart\";\nimport ExamDashboardLabels from \"../ExamDashboard/ExamDashboardLabels\";\nimport AllClaimChart from \"./AllClaimChart\";\nimport ClaimDashBoardTitle from \"./ClaimDashBoardTitle\";\n\ninterface WaitingListDashboardProps {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  systemPositions: PositionAPI[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  setSelectedClaimType: Function;\n  FC_GetPositionsByInstitution: Function;\n  getAllClaims: Function;\n  GetClaimingTypes: Function;\n  getAllApplications: Function;\n  GetAllSessionPlans: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface WaitingListDashboardStates {\n  thisPeriod: string;\n  loading: boolean;\n  loadingSession: boolean;\n  periodChanged: boolean;\n  loadingPosition: boolean;\n  loadingApplications: boolean;\n  loadingClaims: boolean;\n  loadingDocuments: boolean;\n  loadingInstitutes: boolean;\n  loadingClarifications: boolean;\n  loadingFields: boolean;\n  thisEducation: education_category | null;\n  thisLabel: PlansTypeKeys | \"all\";\n}\nclass _ClaimDashboard extends Component<\n  WaitingListDashboardProps,\n  WaitingListDashboardStates\n> {\n  constructor(props: WaitingListDashboardProps) {\n    super(props);\n\n    this.state = {\n      thisPeriod: \"\",\n      loading: true,\n      loadingSession: true,\n      periodChanged: false,\n      loadingPosition: true,\n      loadingApplications: true,\n      loadingClaims: true,\n      loadingDocuments: true,\n      loadingInstitutes: true,\n      loadingClarifications: true,\n      loadingFields: true,\n      thisEducation: null,\n      thisLabel: \"all\",\n    };\n  }\n\n  setLoadingInstitutes = (value: boolean) => {\n    this.setState({ loadingInstitutes: value });\n  };\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingSession = (value: boolean) => {\n    this.setState({ loadingSession: value });\n  };\n\n  setPeriodChanged = (value: boolean) => {\n    this.setState({ periodChanged: value });\n  };\n\n  setLoadingPosition = (value: boolean) => {\n    this.setState({ loadingPosition: value });\n  };\n\n  setLoadingApplications = (value: boolean) => {\n    this.setState({ loadingApplications: value });\n  };\n\n  setLoadingClaims = (value: boolean) => {\n    this.setState({ loadingClaims: value });\n  };\n  setLoadingDocuments = (value: boolean) => {\n    this.setState({ loadingDocuments: value });\n  };\n\n  setLoadingClarifications = (value: boolean) => {\n    this.setState({ loadingClarifications: value });\n  };\n\n  setLoadingFields = (value: boolean) => {\n    this.setState({ loadingFields: value });\n  };\n\n  setThisEducation = (value: education_category | null) => {\n    this.setState({ thisEducation: value });\n  };\n\n  setThisLabel = (value: PlansTypeKeys | \"all\") => {\n    this.setState({ thisLabel: value });\n  };\n\n  setThisPeriod = (value: string) => {\n    this.setState({ thisPeriod: value });\n  };\n\n  componentDidMount = () => {\n    // LOADING EDUCATION CATEGORY =================================\n    if (\n      this.props.schoolLevels.education_categories === null ||\n      this.props.schoolLevels.education_categories.length === 0\n    ) {\n      this.props.loadEducationCategories(this.setLoadingInstitutes);\n    } else {\n      this.setLoadingInstitutes(false);\n    }\n    // END LOADING EDUCATION CATEGORY =================================\n\n    // LOADING APPLICATION SESSION ====================================\n    if (\n      this.props.application_sessions === null ||\n      this.props.application_sessions.length === 0\n    ) {\n      this.props.GetAllSessionPlans(\n        (status: boolean, msg: string, data?: SessionPlanInterface[]) => {\n          if (!status) {\n            this.setLoadingSession(false);\n            this.setLoading(false);\n            if (msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data && data.length > 0) {\n              let thisSession = data.find((item) => item.is_active === true);\n              this.setThisPeriod(\n                thisSession ? thisSession._id : data[data.length - 1]._id\n              );\n              this.onPeriodChange(\n                thisSession ? thisSession._id : data[data.length - 1]._id\n              );\n            }\n          }\n        }\n      );\n    } else if (this.state.loadingSession) {\n      this.setLoading(false);\n      this.setLoadingSession(false);\n    }\n\n    // SETTING ACTIVE SESSION ==========================\n    if (\n      isEmptyOrSpaces(this.state.thisPeriod) &&\n      !this.state.loadingSession &&\n      this.props.application_sessions &&\n      this.props.application_sessions.length > 0\n    ) {\n      let thisSession = this.props.application_sessions.find(\n        (item) => item.is_active === true\n      );\n      this.setThisPeriod(\n        thisSession\n          ? thisSession._id\n          : this.props.application_sessions[\n              this.props.application_sessions.length - 1\n            ]._id\n      );\n      this.onPeriodChange(\n        thisSession\n          ? thisSession._id\n          : this.props.application_sessions[\n              this.props.application_sessions.length - 1\n            ]._id\n      );\n    }\n\n    // LOADING DOCUMENT CATEGORIES ==========================\n    if (\n      !this.props.documentReducer.documentCategory &&\n      this.state.loadingDocuments\n    ) {\n      this.props.getDocumentCategory();\n      this.setLoadingDocuments(false);\n    } else if (this.state.loadingDocuments) {\n      this.setLoadingDocuments(false);\n    }\n    // LOADING DOCUMENT CLARIFICATIONS ==========================\n    if (\n      !this.props.documentReducer.documentSubCategory &&\n      this.state.loadingClarifications\n    ) {\n      this.props.getDocumentSubCategory();\n      this.setLoadingClarifications(false);\n    } else if (this.state.loadingClarifications) {\n      this.setLoadingClarifications(false);\n    }\n    // LOADING DOCUMENT FIELDS ==========================\n    if (\n      !this.props.documentReducer.documentFields &&\n      this.state.loadingFields\n    ) {\n      this.props.getDocumentFields();\n      this.setLoadingFields(false);\n    } else if (this.state.loadingFields) {\n      this.setLoadingFields(false);\n    }\n\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n\n    // LOADING POSITIONS ==============================================\n    if (\n      this.props.systemPositions === null &&\n      this.props.auth.education_institution_id\n    ) {\n      this.props.FC_GetPositionsByInstitution(\n        this.props.auth.education_institution_id,\n        (status: boolean, msg: string) => {\n          this.setLoadingPosition(status);\n          console.log({ status: status, msg: msg });\n          if (msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    } else if (this.state.loadingPosition) {\n      this.setLoadingPosition(false);\n    }\n  };\n\n  onPeriodChange = (period_id: string) => {\n    this.setPeriodChanged(true);\n    this.props.getAllClaims(2, period_id, (status: boolean, msg: string) => {\n      !status && this.setPeriodChanged(false);\n      if (status === false && msg.length) {\n        this.props.PushPopupAlert({\n          title: msg,\n          theme: PopupAlertTheme.danger,\n        });\n      }\n    });\n\n    this.props.getAllApplications(period_id, (status: boolean, msg: string) => {\n      !status && this.setLoadingApplications(status);\n      if (status === false && msg.length) {\n        this.props.PushPopupAlert({\n          title: msg,\n          theme: PopupAlertTheme.danger,\n        });\n      }\n    });\n  };\n\n  getClaimInstitute = (thisClaim: CandidateClaimInterface): string | null => {\n    if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      return null;\n    }\n    if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n      if (this.props.claiming.allApplications) {\n        let thisApplication = this.props.claiming.allApplications.find(\n          (item) => item._id === thisClaim.claiming_on_id\n        );\n        if (\n          thisApplication &&\n          this.props.claiming.allApplications &&\n          this.props.systemPositions\n        ) {\n          // return thisApplication.\n          let thisPosition = this.props.systemPositions.find(\n            (item) => item.position_id === thisApplication!.position\n          );\n          if (thisPosition) {\n            return thisPosition.education_institute_id.education_institute_id;\n          }\n        }\n      }\n    }\n\n    return null;\n  };\n\n  displayClaimTitle = (thisClaim: CandidateClaimInterface): string => {\n    let result: string = thisClaim.claiming_on_id;\n    if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      result =\n        thisClaim.user.details.filter(\n          (item) => item.validation_status !== \"waiting\"\n        ).length > 0\n          ? adminDisplayClaimTitle(\n              this.props.documentReducer,\n              thisClaim.user.details.filter(\n                (item) => item.validation_status !== \"waiting\"\n              ),\n              thisClaim\n            )\n          : \"Document not found\";\n    }\n    if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n      if (this.props.claiming.allApplications) {\n        let thisApplication = this.props.claiming.allApplications.find(\n          (item) => item._id === thisClaim.claiming_on_id\n        );\n        if (\n          thisApplication &&\n          this.props.claiming.allApplications &&\n          this.props.systemPositions\n        ) {\n          let thisPosition = this.props.systemPositions.find(\n            (item) => item.position_id === thisApplication!.position\n          );\n          if (thisPosition) {\n            result = thisPosition.position_title;\n          } else {\n            result = \"Application not found\";\n          }\n        }\n      }\n    }\n\n    return result;\n  };\n\n  ClaimTypes = (\n    claims: ClaimToPrintInterface[]\n  ): {\n    title: string;\n    count: {\n      all: number;\n      accepted: number;\n      rejected: number;\n      pending: number;\n    };\n    type: PlansTypeKeys | \"all\";\n  }[] => {\n    let output: {\n      title: string;\n      count: {\n        all: number;\n        accepted: number;\n        rejected: number;\n        pending: number;\n      };\n      type: PlansTypeKeys | \"all\";\n    }[] = [\n      {\n        title: \"All claim types\",\n        count: {\n          all: claims.length,\n          accepted: claims.filter(\n            (item) => item.decision === ClaimDecisionStatus.ACCEPTED\n          ).length,\n          rejected: claims.filter(\n            (item) => item.decision === ClaimDecisionStatus.REJECTED\n          ).length,\n          pending: claims.filter((item) => item.decision === \"PENDING\").length,\n        },\n        type: \"all\",\n      },\n    ];\n\n    Object.values(PlansTypeKeys).forEach((PlansKey) => {\n      output.push({\n        title: capitalizeFirstLetter(reportClaimType(PlansKey)),\n        count: {\n          all: claims.filter((itm) => itm.claim_type === PlansKey).length,\n          accepted: claims.filter(\n            (itm) =>\n              itm.claim_type === PlansKey &&\n              itm.decision === ClaimDecisionStatus.ACCEPTED\n          ).length,\n          rejected: claims.filter(\n            (itm) =>\n              itm.claim_type === PlansKey &&\n              itm.decision === ClaimDecisionStatus.REJECTED\n          ).length,\n          pending: claims.filter(\n            (itm) => itm.claim_type === PlansKey && itm.decision === \"PENDING\"\n          ).length,\n        },\n        type: PlansKey,\n      });\n    });\n    return output;\n  };\n\n  FC_ClaimData = (\n    allClaims: CandidateClaimInterface[] | null\n  ): ClaimToPrintInterface[] => {\n    if (allClaims === null || allClaims.length <= 0) return [];\n    let arrayNew: ClaimToPrintInterface[] = [];\n    let n: number = 1;\n    // LOOP IN ALL CLAIM ONE BY ONE ###########################\n    for (const key in allClaims) {\n      if (Object.prototype.hasOwnProperty.call(allClaims, key)) {\n        // LOOP IN ALL CLAIM OF ONE FILE ONE BY ONE ===========================\n        for (const keyClaim in allClaims[key].claims) {\n          if (\n            Object.prototype.hasOwnProperty.call(\n              allClaims[key].claims,\n              keyClaim\n            )\n          ) {\n            const element = allClaims[key].claims[keyClaim];\n            let dataArray: ClaimToPrintInterface = {\n              claim_id: n,\n              names:\n                allClaims[key].user.user_info.fname +\n                \" \" +\n                allClaims[key].user.user_info.lname,\n              gender: allClaims[key].user.user_info.sex ? \"Male\" : \"Female\",\n              national_id: allClaims[key].user.n_id,\n              phone: allClaims[key].user.phone_number,\n              email: allClaims[key].user.email,\n              claim_type: allClaims[key].type_key,\n              claim_level: element.level,\n              education_category: this.getClaimInstitute(allClaims[key]),\n              claim_session: this.state.thisPeriod,\n              date: DATE(element.createdAt),\n              decision: element.decision_taken_status\n                ? element.decision_taken_status\n                : \"PENDING\",\n              claim_title: this.displayClaimTitle(allClaims[key]),\n            };\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n      }\n    }\n    return arrayNew;\n  };\n\n  getClaimDataByTitle = (\n    allData: {\n      title: string;\n      count: {\n        all: number;\n        accepted: number;\n        rejected: number;\n        pending: number;\n      };\n      type: PlansTypeKeys | \"all\";\n    }[]\n  ):\n    | {\n        title: string;\n        count: {\n          all: number;\n          accepted: number;\n          rejected: number;\n          pending: number;\n        };\n        type: PlansTypeKeys | \"all\";\n      }\n    | undefined => {\n    return allData.find((item) => item.type === this.state.thisLabel);\n  };\n\n  render() {\n    if (\n      this.props.application_sessions &&\n      this.props.application_sessions.length === 0\n    ) {\n      return <NoSession />;\n    }\n\n    if (\n      this.state.loading ||\n      this.props.application_sessions === null ||\n      this.props.claiming.allClaims === null\n    ) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {/* HEADER TITLE */}\n        <ClaimDashBoardTitle\n          education_categories={this.props.schoolLevels.education_categories}\n          loading={this.state.loading}\n          loadingApplications={this.state.loadingApplications}\n          loadingEducation={this.state.loadingInstitutes}\n          thisEducation={this.state.thisEducation}\n          setThisEducation={this.setThisEducation}\n          thisPeriod={this.state.thisPeriod}\n          setThisPeriod={this.setThisPeriod}\n          application_sessions={this.props.application_sessions}\n          reportTitle={\"Claim Dashboard\"}\n          allEducation={true}\n          periodChanged={this.state.periodChanged}\n          onPeriodChange={this.onPeriodChange}\n        />\n        {/* END HEADER TITLE */}\n\n        {/* ===================================================================================== */}\n\n        {/* CLAIM ALL STATUS LABELS ======================================= */}\n        <section className=\"my-2\">\n          <div className=\"text-2xl font-semibold text-gray-600\">\n            Claim type:\n            <select\n              className={`bg-white text-gray-600 border-2 border-blue-600 rounded-lg px-2 py-1 focus:outline-none`}\n              value={this.state.thisLabel}\n              onChange={(e) =>\n                this.setThisLabel(e.target.value as PlansTypeKeys | \"all\")\n              }\n            >\n              {this.ClaimTypes(\n                this.FC_ClaimData(this.props.claiming.allClaims)!\n              ).map((item, index: number) => (\n                <option key={item.type + index} value={item.type}>\n                  {capitalizeFirstLetter(item.title.toLocaleLowerCase())}\n                </option>\n              ))}\n            </select>\n          </div>\n          {this.getClaimDataByTitle(\n            this.ClaimTypes(this.FC_ClaimData(this.props.claiming.allClaims)!)\n          ) && (\n            <ExamDashboardLabels\n              dataLabels={[\n                {\n                  title: \"Total claim\",\n                  icon: FaBookOpen,\n                  iconColor: \"blue\",\n                  count: this.getClaimDataByTitle(\n                    this.ClaimTypes(\n                      this.FC_ClaimData(this.props.claiming.allClaims)!\n                    )\n                  )!.count.all,\n                },\n                {\n                  title: \"Accepted Claim\",\n                  icon: FaBookOpen,\n                  iconColor: \"green\",\n                  count: this.getClaimDataByTitle(\n                    this.ClaimTypes(\n                      this.FC_ClaimData(this.props.claiming.allClaims)!\n                    )\n                  )!.count.accepted,\n                },\n                {\n                  title: \"Rejected Claim\",\n                  icon: FaBookOpen,\n                  iconColor: \"yellow\",\n                  count: this.getClaimDataByTitle(\n                    this.ClaimTypes(\n                      this.FC_ClaimData(this.props.claiming.allClaims)!\n                    )\n                  )!.count.rejected,\n                },\n                {\n                  title: \"Pending Claim\",\n                  icon: FaBookOpen,\n                  iconColor: \"gray\",\n                  count: this.getClaimDataByTitle(\n                    this.ClaimTypes(\n                      this.FC_ClaimData(this.props.claiming.allClaims)!\n                    )\n                  )!.count.pending,\n                },\n              ]}\n              labelsOnRow={5}\n            >\n              <div className=\"flex justify-center\">\n                <PieChart\n                  options={{\n                    labels: [\"Accepted\", \"Rejected\", \"Pending\"],\n                    legend: {\n                      show: false,\n                      position: \"bottom\",\n                      horizontalAlign: \"center\",\n                      fontSize: \"16px\",\n                      itemMargin: {\n                        horizontal: 3,\n                        vertical: 0,\n                      },\n                    },\n                    plotOptions: {\n                      pie: {\n                        donut: {\n                          labels: {\n                            show: true,\n                            name: {\n                              show: true,\n                              fontSize: \"16px\",\n                              //   fontFamily: \"Rubik\",\n                              color: \"#2564eb\",\n                              offsetY: -10,\n                            },\n                            value: {\n                              show: true,\n                              fontSize: \"20px\",\n                              fontFamily: \"Helvetica, Arial, sans-serif\",\n                              color: \"#2564eb\",\n                              offsetY: 10,\n                              formatter: function (val) {\n                                return val;\n                              },\n                            },\n                            total: {\n                              show: true,\n                              label: \"Total\",\n                              color: \"#2564eb\",\n                              formatter: function (w) {\n                                return w.globals.seriesTotals.reduce(\n                                  (a: number, b: number) => {\n                                    return a + b;\n                                  },\n                                  0\n                                );\n                              },\n                            },\n                          },\n                        },\n                      },\n                    },\n                    colors: [\"#469769\", \"#d97724\", \"#4b5563\"],\n                  }}\n                  series={[\n                    this.getClaimDataByTitle(\n                      this.ClaimTypes(\n                        this.FC_ClaimData(this.props.claiming.allClaims)!\n                      )\n                    )!.count.accepted,\n                    this.getClaimDataByTitle(\n                      this.ClaimTypes(\n                        this.FC_ClaimData(this.props.claiming.allClaims)!\n                      )\n                    )!.count.rejected,\n                    this.getClaimDataByTitle(\n                      this.ClaimTypes(\n                        this.FC_ClaimData(this.props.claiming.allClaims)!\n                      )\n                    )!.count.pending,\n                  ]}\n                  width={210}\n                />\n              </div>\n            </ExamDashboardLabels>\n          )}\n        </section>\n        {/* CLAIM STATUS ON COUNTRY LEVEL LABELS ======================================= */}\n\n        {/* ===================================================================================== */}\n\n        {/* EXAM PERFORMANCE ON COUNTRY CHART ======================================= */}\n        <AllClaimChart\n          ClaimTypes={this.ClaimTypes(\n            this.FC_ClaimData(this.props.claiming.allClaims)\n          )}\n        />\n        {/* END EXAM PERFORMANCE ON COUNTRY CHART ======================================= */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system_settings,\n  sessionPlan,\n  claiming,\n  document,\n  schoolLevels,\n}: StoreState): {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  systemPositions: PositionAPI[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n} => {\n  return {\n    auth: auth,\n    application_sessions: sessionPlan.allSessionPlans,\n    systemPositions: system_settings.systemPositions,\n    claiming,\n    documentReducer: document,\n    schoolLevels,\n  };\n};\n\nexport const ClaimDashboard = connect(mapStateToProps, {\n  getAllClaims,\n  GetClaimingTypes,\n  getAllApplications,\n  GetAllSessionPlans,\n  loadEducationCategories,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  setSelectedClaimType,\n  FC_GetPositionsByInstitution,\n  PushPopupAlert,\n})(_ClaimDashboard);\n","import React from \"react\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport { RiFileExcel2Fill } from \"react-icons/ri\";\n\ninterface ExportToExcelProps {\n  fileData: any[];\n  fileName: string;\n  btnName?: string;\n  className?: string;\n  showIcon?: boolean;\n}\n\nconst ExportToExcel: React.FC<ExportToExcelProps> = ({\n  fileData,\n  fileName,\n  btnName = \"Excel\",\n  className = \"flex items-center gap-1 px-4 py-1 rounded text-green-700 bg-white border hover:text-white hover:bg-green-700 border-green-700 font-bold\",\n  showIcon = true,\n}) => {\n  const fileType =\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n  const fileExtension = \".xlsx\";\n\n  const exportToCSV = (apiData: any[], fileName: string) => {\n    const ws = XLSX.utils.json_to_sheet(apiData);\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n    const data = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n\n  return (\n    <button\n      onClick={(e) => exportToCSV(fileData, fileName)}\n      className={className}\n    >\n      {showIcon && <RiFileExcel2Fill />}\n      {btnName}\n    </button>\n  );\n};\n\nexport default ExportToExcel;\n","export default __webpack_public_path__ + \"static/media/mineduc.11a9ae1c.png\";","import jsPDF from \"jspdf\";\nimport { DATE } from \"../../utils/functions\";\nimport Logo from \"../../utils/mineduc.png\";\nrequire(\"jspdf-autotable\");\n\nexport const addFooters = (doc: any) => {\n  const pageCount = doc.internal.getNumberOfPages();\n\n  doc.setFont(\"helvetica\", \"italic\");\n  doc.setFontSize(8);\n  for (var i = 1; i <= pageCount; i++) {\n    doc.setPage(i);\n    doc.text(\n      \"Page \" + String(i) + \" of \" + String(pageCount),\n      doc.internal.pageSize.width / 2,\n      297,\n      {\n        align: \"center\",\n      }\n    );\n  }\n};\n\nexport type reportSettingsInterface = {\n  doneBy: string;\n  title: string;\n  subjectTitle: string;\n  subject: string;\n  institute: string;\n  period: string;\n  footer: string;\n  orientation?: \"p\" | \"l\";\n};\n\nexport const generatePDF = async (\n  reportSettings: reportSettingsInterface,\n  table: HTMLElement,\n  callBack: (status: boolean) => void\n) => {\n  callBack(true);\n  const orientation: \"p\" | \"l\" = reportSettings.orientation\n    ? reportSettings.orientation\n    : \"p\";\n  var lMargin: number = 20; //left margin in mm\n  var rMargin: number = 20; //right margin in mm\n  var pdfInMM: number = 185; // width of A4 in mm\n\n  //   var doc = new jsPDF(\"p\", \"mm\", \"a4\");\n  var doc: any = new jsPDF(orientation, \"mm\", \"a4\");\n\n  doc.setTextColor(95, 95, 95);\n  doc.setFontSize(28);\n  // doc.text(\n  //   this.props.reportTitle,\n  //   doc.internal.pageSize.getWidth() / 2,\n  //   30,\n  //   undefined,\n  //   \"center\"\n  // );\n  doc.addImage(Logo, \"png\", 20, 20, 10, 10);\n  doc.text(\"MINEDUC\", 32, 28.5, undefined, \"left\");\n  //   doc.setTextColor(19, 90, 152);\n  doc.setFontSize(26);\n  doc.text(\n    reportSettings.title,\n    doc.internal.pageSize.getWidth() / 2,\n    42.7,\n    undefined,\n    \"center\"\n  );\n\n  doc.setFontSize(20);\n  doc.text(\n    reportSettings.institute,\n    doc.internal.pageSize.getWidth() / 2,\n    53.7,\n    undefined,\n    \"center\"\n  );\n\n  var lines;\n  lines = doc.splitTextToSize(\n    reportSettings.subject,\n    pdfInMM - lMargin - rMargin\n  );\n  // if (reportSettings.position) {\n  // } else if (reportSettings.subject) {\n  //   lines = doc.splitTextToSize(\n  //     reportSettings.subject,\n  //     pdfInMM - lMargin - rMargin\n  //   );\n  // }\n\n  //   doc.setTextColor(0, 123, 255);\n  doc.setFontSize(16);\n  //   doc.text(lines, doc.internal.pageSize.getWidth() / 2, 45, {\n  //     maxWidth: 85,\n  //     align: \"center\",\n  //   });\n\n  var y = 63,\n    width;\n  doc.setTextColor(95, 95, 95);\n  doc.text(`${reportSettings.subjectTitle}: `, lMargin, y);\n  width = doc.getTextWidth(`${reportSettings.subjectTitle}: `);\n  // if (reportSettings.position) {\n  // } else if (reportSettings.position) {\n  //   doc.text(`Subject: `, lMargin, y);\n  //   width = doc.getTextWidth(\"Subject: \");\n  // }\n  // doc.setFontType(\"bold\");\n  doc.setTextColor(38, 38, 38);\n  for (var i = 0; i < lines.length; i++) {\n    if (y > 280) {\n      y = 10;\n      doc.addPage();\n    }\n    // doc.text(15, y, lines[i]);\n    doc.text(lines[i], lMargin + width, y);\n    y = y + 7;\n  }\n  doc.setTextColor(95, 95, 95);\n  doc.text(\"Period: \", lMargin, y + 3);\n  width = doc.getTextWidth(\"Period: \");\n  doc.setTextColor(38, 38, 38);\n  doc.text(reportSettings.period, lMargin + width, y + 3);\n\n  doc.autoTable({\n    html: table,\n    startY: 85,\n    margin: { horizontal: 20 },\n    cellPadding: 3, // Horizontal cell padding\n    // fontSize: 12,\n    rowHeight: 20,\n    // styles: { overflow: \"linebreak\" },\n    bodyStyles: { valign: \"top\" },\n    columnStyles: { email: { cellWidth: \"wrap\" } },\n    theme: \"striped\",\n    tableWidth: true,\n  });\n\n  doc.setFontSize(12);\n  let finalY = doc.lastAutoTable.finalY; // The y position on the page\n  doc.text(`Reported by: ${reportSettings.doneBy}`, lMargin, finalY + 15);\n  doc.text(\n    \"Report downloaded on \" + DATE(new Date().toString()),\n    lMargin,\n    finalY + 23\n  );\n\n  addFooters(doc);\n  await doc\n    .save(\n      `${\n        reportSettings.title +\n        \": \" +\n        reportSettings.subject +\n        \": \" +\n        reportSettings.period\n      }.pdf`,\n      { returnPromise: true }\n    )\n    .then(callBack(false));\n};\n","import React, { useState } from \"react\";\nimport {\n  MdCheckCircle,\n  MdRadioButtonUnchecked,\n  MdSearch,\n} from \"react-icons/md\";\nimport Loading from \"../../components/Loading/Loading\";\nimport {\n  PlansInterface,\n  SessionPlanInterface,\n  SessionPlanTypeStatus,\n} from \"../../interfaces\";\nimport { DATE } from \"../../utils/functions\";\nimport searchData from \"../../utils/search\";\n\nexport const isPlansActive = (plans: PlansInterface[]): PlansInterface[] => {\n  let today = new Date();\n  let activePlans: PlansInterface[] = [];\n  for (let plan of plans) {\n    let startDate = new Date(plan.start_date);\n    let endDate = new Date(plan.end_date);\n    if (\n      startDate.getTime() <= today.getTime() &&\n      endDate.getTime() >= today.getTime() &&\n      plan.type_status === SessionPlanTypeStatus.OPEN\n    ) {\n      activePlans = [...activePlans, plan];\n    }\n  }\n  return activePlans;\n};\n\ninterface ChooseSessionProps {\n  allSession: SessionPlanInterface[] | null;\n  setSelectSession: (period: SessionPlanInterface | \"all\") => void;\n  currentSelected: SessionPlanInterface | \"all\";\n  chooseAll: boolean;\n}\n\nconst ChooseSession = (props: ChooseSessionProps) => {\n  const [selectedPlan, setSelectedPlan] = useState<SessionPlanInterface | null>(\n    null\n  );\n  const [search, setSearch] = useState<string>(\"\");\n  const getSearch = (\n    period: SessionPlanInterface[],\n    searched: string\n  ): SessionPlanInterface[] => {\n    return searchData(period, searched) as SessionPlanInterface[];\n  };\n\n  return (\n    <div className=\"\">\n      <div className=\"px-3\">\n        <input\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n            setSearch(e.target.value)\n          }\n          type=\"text\"\n          className=\"py-3 px-4 w-full rounded border border-gray-400 mb-3\"\n          placeholder=\"Search by year, name\"\n          disabled={props.allSession === null || props.allSession.length === 0}\n        />\n      </div>\n\n      <div className=\"bg-gray-100 px-3 pt-3 pb-2 rounded-b\">\n        {props.allSession === null ? (\n          <Loading />\n        ) : props.allSession.length === 0 ? (\n          <div className=\"flex flex-col text-gray-400 items-center justify-center mb-2 bg-white py-4\">\n            <MdSearch className=\"text-6xl\" />\n            <div className=\"flex flex-col items-center justify-center\">\n              <span>No session found!</span>\n            </div>\n          </div>\n        ) : (\n          <section>\n            {props.chooseAll && (\n              <div\n                className={`rounded border ${\n                  props.currentSelected === \"all\"\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2 flex flex-col md:flex-row items-start md:items-center md:justify-between`}\n              >\n                <div className=\"flex flex-row items-center gap-3\">\n                  {props.currentSelected === \"all\" ? (\n                    <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                  ) : (\n                    <MdRadioButtonUnchecked\n                      className={`text-gray-300 text-4xl`}\n                    />\n                  )}\n                  <div className=\"flex flex-col\">\n                    <div className={`text-gray-600 font-bold`}>All session</div>\n                  </div>\n                </div>\n                <div\n                  onClick={() => {\n                    props.setSelectSession(\"all\");\n                  }}\n                  className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                >\n                  Select\n                </div>\n              </div>\n            )}\n            {getSearch(props.allSession, search).map((item, i) => (\n              <div\n                key={i + 1}\n                className={`rounded border ${\n                  props.currentSelected !== \"all\" &&\n                  props.currentSelected._id === item._id\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2`}\n              >\n                <div className=\"flex flex-col md:flex-row items-start md:items-center md:justify-between \">\n                  <div className=\"flex flex-row items-center gap-3\">\n                    {props.currentSelected !== \"all\" &&\n                    props.currentSelected._id === item._id ? (\n                      <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                    ) : (\n                      <MdRadioButtonUnchecked\n                        className={`text-gray-300 text-4xl`}\n                      />\n                    )}\n                    <div className=\"flex flex-col\">\n                      <div\n                        className={`${\n                          props.currentSelected !== \"all\" &&\n                          props.currentSelected._id === item._id\n                            ? \"text-blue-600\"\n                            : \"text-gray-600\"\n                        } font-bold`}\n                      >\n                        {item.session_plan_name}\n                      </div>\n                      <div className=\"text-sm text-gray-500\">\n                        <span>Status: </span>\n                        <span\n                          className={`${\n                            item.is_active === true\n                              ? \"text-gray-900 font-bold underline\"\n                              : \"text-gray-500 italic\"\n                          }`}\n                        >\n                          {item.is_active === true ? \"Active\" : \"Expired\"}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"flex flex-row items-center gap-2\">\n                    {(selectedPlan === null ||\n                      selectedPlan._id !== item._id) && (\n                      <div\n                        onClick={() => setSelectedPlan(item)}\n                        className=\"bg-gray-50 group-hover:bg-blue-100 font-semibold text-gray-400 group-hover:text-blue-600 rounded px-3 py-2 cursor-pointer\"\n                      >\n                        Details\n                      </div>\n                    )}\n                    <div\n                      onClick={() => {\n                        props.setSelectSession(item);\n                      }}\n                      className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                    >\n                      Select\n                    </div>\n                    {selectedPlan !== null && selectedPlan._id === item._id && (\n                      <div\n                        onClick={() => setSelectedPlan(null)}\n                        className=\"bg-red-100 group-hover:bg-red-200 font-semibold text-red-600 group-hover:text-red-800 rounded px-3 py-2 cursor-pointer\"\n                      >\n                        Close\n                      </div>\n                    )}\n                  </div>\n                </div>\n                {selectedPlan !== null && selectedPlan._id === item._id && (\n                  <div className=\"bg-white rounded border border-blue-50 mt-2 animate__animated animate__fadeIn\">\n                    <table className=\"w-full\">\n                      <thead className=\"bg-blue-50\">\n                        <tr className=\"text-left\">\n                          <th className=\"px-3 py-3\">#</th>\n                          <th>Plan</th>\n                          <th>Start date</th>\n                          <th>Ending date</th>\n                          <th>Status</th>\n                        </tr>\n                      </thead>\n                      <tbody className=\"text-sm\">\n                        {selectedPlan !== null &&\n                          selectedPlan._id === item._id &&\n                          selectedPlan.plans.length > 0 &&\n                          item.plans.map((plan, i) => (\n                            <tr\n                              key={i + 1}\n                              className={`${\n                                isPlansActive(item.plans).find(\n                                  (itm) => itm.type_key === plan.type_key\n                                ) !== undefined\n                                  ? \"bg-blue-100 text-blue-600 font-bold\"\n                                  : \"\"\n                              } text-left border-b border-blue-50`}\n                            >\n                              <td className=\"px-3 py-1\">{i + 1}</td>\n                              <td>{plan.type_title}</td>\n                              <td>{DATE(plan.start_date, \"DD/MM/YYYY\")}</td>\n                              <td>{DATE(plan.end_date, \"DD/MM/YYYY\")}</td>\n                              <td>{plan.type_status}</td>\n                            </tr>\n                          ))}\n                      </tbody>\n                    </table>\n                  </div>\n                )}\n              </div>\n            ))}\n          </section>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(ChooseSession);\n","import { ApexOptions } from \"apexcharts\";\nimport React, { useEffect, useState } from \"react\";\nimport Chart from \"react-apexcharts\";\n\ntype VBarCharPropstInterface = {\n  labels: string[];\n  categoriesLabel: any;\n  bar?: {\n    borderRadius: number;\n    horizontal: boolean;\n    columnWidth: string;\n    endingShape: string;\n  };\n  dataLabels: boolean;\n  yaxisText: string;\n  tooltipText: string;\n  series: {\n    name: string;\n    data: number[];\n  }[];\n  defaultBar?: {\n    borderRadius: number;\n    horizontal: boolean;\n    columnWidth: string;\n    endingShape: string;\n  };\n  colors?: any[];\n  title?: {\n    text: string;\n    align: string;\n    margin: number;\n    offestY: number;\n    style: {\n      fontSize: string;\n    };\n  };\n  stacked?: boolean;\n  FC_LoadSelected?: (labelIndex: number, seriesIndex: number) => void;\n  chartHeight?: number;\n};\n\nconst defaultBar = {\n  borderRadius: 4,\n  horizontal: false,\n  columnWidth: \"95%\",\n  endingShape: \"rounded\",\n};\n\nconst VBarChart: React.FC<VBarCharPropstInterface> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [options, setOptions] = useState<ApexOptions>({\n    chart: {\n      events: {\n        dataPointSelection: (event, chartContext, config) => {\n          console.log({\n            labelClicked: config.w.config.labels[config.dataPointIndex],\n            // seriesClicked: config.w.config.series[config.dataPointIndex],\n          });\n          if (props.FC_LoadSelected) {\n            props.FC_LoadSelected(config.dataPointIndex, config.seriesIndex);\n          }\n          // console.log(config.seriesIndex);\n          // console.log(config.dataPointIndex);\n        },\n      },\n      stacked: props.stacked ? props.stacked : false,\n    },\n    plotOptions: {\n      bar: props.defaultBar ? props.defaultBar : defaultBar,\n    },\n    labels: props.labels,\n    dataLabels: {\n      enabled: true,\n    },\n    xaxis: {\n      labels: {\n        rotate: -45,\n      },\n      categories: props.categoriesLabel,\n      tickPlacement: \"on\",\n    },\n    yaxis: {\n      title: {\n        text: props.yaxisText,\n      },\n    },\n    fill: {\n      opacity: 1,\n    },\n    tooltip: {\n      y: {\n        formatter: function (val: number) {\n          return val + \" \" + props.tooltipText;\n        },\n      },\n    },\n    grid: {\n      padding: {\n        left: 30, // or whatever value that works\n        right: 30, // or whatever value that works\n      },\n    },\n    noData: {\n      text: \"No data found\",\n      align: \"center\",\n      verticalAlign: \"middle\",\n    },\n  });\n\n  useEffect(() => {\n    if (props.colors && props.colors.length > 0 && loading) {\n      setOptions({\n        chart: {\n          stacked: props.stacked ? props.stacked : false,\n          events: {\n            dataPointSelection: (event, chartContext, config) => {\n              console.log({\n                chartClicked: config.w.config.labels[config.dataPointIndex],\n              });\n              if (props.FC_LoadSelected) {\n                props.FC_LoadSelected(\n                  config.dataPointIndex,\n                  config.seriesIndex\n                );\n              }\n            },\n          },\n          zoom: {\n            enabled: true,\n            autoScaleYaxis: true,\n          },\n        },\n        plotOptions: {\n          bar: props.defaultBar ? props.defaultBar : defaultBar,\n        },\n        labels: props.labels,\n        dataLabels: {\n          enabled: true,\n        },\n        xaxis: {\n          labels: {\n            rotate: -45,\n          },\n          categories: props.categoriesLabel,\n          tickPlacement: \"on\",\n        },\n        yaxis: {\n          title: {\n            text: props.yaxisText,\n          },\n        },\n        fill: {\n          opacity: 1,\n        },\n        tooltip: {\n          y: {\n            formatter: function (val: number) {\n              return val + \" \" + props.tooltipText;\n            },\n          },\n        },\n        grid: {\n          padding: {\n            left: 30, // or whatever value that works\n            right: 30, // or whatever value that works\n          },\n        },\n        noData: {\n          text: \"No data found\",\n          align: \"center\",\n          verticalAlign: \"middle\",\n        },\n        colors: props.colors,\n      });\n    } else if (loading) {\n      setOptions({\n        chart: {\n          stacked: props.stacked ? props.stacked : false,\n          events: {\n            dataPointSelection: (event, chartContext, config) => {\n              console.log({\n                labelClicked: config.w.config.labels[config.dataPointIndex],\n                // seriesClicked: config.w.config.series[config.dataPointIndex],\n              });\n              if (props.FC_LoadSelected) {\n                props.FC_LoadSelected(\n                  config.dataPointIndex,\n                  config.seriesIndex\n                );\n              }\n              // console.log(config.seriesIndex);\n              // console.log(config.dataPointIndex);\n            },\n          },\n          zoom: {\n            enabled: true,\n            autoScaleYaxis: true,\n          },\n        },\n        plotOptions: {\n          bar: props.defaultBar ? props.defaultBar : defaultBar,\n        },\n        labels: props.labels,\n        dataLabels: {\n          enabled: true,\n        },\n        xaxis: {\n          labels: {\n            rotate: -45,\n          },\n          categories: props.categoriesLabel,\n          tickPlacement: \"on\",\n        },\n        yaxis: {\n          title: {\n            text: props.yaxisText,\n          },\n        },\n        fill: {\n          opacity: 1,\n        },\n        tooltip: {\n          y: {\n            formatter: function (val: number) {\n              return val + \" \" + props.tooltipText;\n            },\n          },\n        },\n        grid: {\n          padding: {\n            left: 30, // or whatever value that works\n            right: 30, // or whatever value that works\n          },\n        },\n        noData: {\n          text: \"No data found\",\n          align: \"center\",\n          verticalAlign: \"middle\",\n        },\n      });\n    }\n    setLoading(false);\n  }, [loading, options, props]);\n\n  if (loading) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading Data...\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"w-full\">\n      <Chart\n        options={options}\n        series={props.series}\n        type=\"bar\"\n        width=\"100%\"\n        height={props.chartHeight ? props.chartHeight : undefined}\n      />\n    </div>\n  );\n};\n\nexport default React.memo(VBarChart);\n","import React, { FC } from \"react\";\nimport { IconType } from \"react-icons\";\nimport { FaUsers } from \"react-icons/fa\";\nimport { toAnyDigit } from \"../../shared/dataTest\";\nimport { displayNumbers } from \"../../utils/functions\";\n\nexport type DashboardLabelItemInterface = {\n  // TITLE: Application or Exam or Shortlisted ....\n  title: string;\n  // ICON: FaExpand ....\n  icon: IconType;\n  // ICON COLOR: blue, indigo, gray ....\n  iconColor: string;\n  // COUNT: 0,1,2,3,5,23,563 ....\n  count: number;\n  // COUNT: 0,1,2,3,5,23,563 ....\n  countOver?: number;\n};\n\nconst DashboardLabelItem: FC<DashboardLabelItemInterface> = (\n  props = {\n    title: \"\",\n    icon: FaUsers,\n    iconColor: \"indigo\",\n    count: 0,\n    countOver: undefined,\n  }\n) => {\n  const IconDefined = props.icon;\n  return (\n    <div className=\"flex items-center px-6 py-4 bg-white w-full rounded-md space-x-2 mb-2 lg:mb-0 shadow-md\">\n      <div\n        className={`p-3 rounded-full bg-${props.iconColor}-200 bg-opacity-75`}\n      >\n        <IconDefined className={`h-8 w-8 text-${props.iconColor}-600`} />\n      </div>\n      <div>\n        <h1 className=\"text-3xl font-semibold text-gray-700\">\n          {props.count < 1000\n            ? toAnyDigit(props.count)\n            : displayNumbers(props.count)}{\" \"}\n          {props.countOver && \"/ \" + toAnyDigit(props.countOver)}\n        </h1>\n        <span className=\"text-gray-500 text-lg\">{props.title}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(DashboardLabelItem);\n","import React from \"react\";\nimport DashboardLabelItem, {\n  DashboardLabelItemInterface,\n} from \"../DashboardLabelItem\";\n\ntype DashboardLabelProps = {\n  dataLabels: DashboardLabelItemInterface[];\n  labelsOnRow?: number;\n  childrenPosition?: \"START\" | \"END\";\n  children?: JSX.Element;\n};\n\nconst ExamDashboardLabels: React.FC<DashboardLabelProps> = (props) => {\n  const numCols: number = props.labelsOnRow\n    ? props.labelsOnRow > 4\n      ? props.labelsOnRow\n      : 4\n    : 4;\n  return (\n    <div\n      className={`grid 2xl:grid-cols-${numCols} xl:grid-cols-${\n        numCols - 1\n      } lg:grid-cols-${numCols - 2} md:grid-cols-${\n        numCols - 3\n      } sm:grid-cols-2 grid-cols-1 gap-4 items-center mx-auto`}\n    >\n      {props.children &&\n        ((props.childrenPosition && props.childrenPosition === \"START\") ||\n          !props.childrenPosition) &&\n        props.children}\n      {props.dataLabels.map((item, index) => (\n        <section key={index + item.title}>\n          <DashboardLabelItem\n            title={item.title}\n            icon={item.icon}\n            iconColor={item.iconColor}\n            count={item.count}\n          />\n        </section>\n      ))}\n      {props.children &&\n        props.childrenPosition &&\n        props.childrenPosition === \"END\" &&\n        props.children}\n    </div>\n  );\n};\n\nexport default React.memo(ExamDashboardLabels);\n","import React from \"react\";\nimport Chart from \"react-apexcharts\";\n\ntype chartType = {\n  options: {\n    labels: string[];\n    legend?: ApexLegend;\n    plotOptions?: ApexPlotOptions;\n    colors?: any[];\n  };\n  series: number[];\n  width?: number;\n};\n\nconst PieChart: React.FC<chartType> = (props) => {\n  return (\n    <div className=\"donut\">\n      <Chart\n        options={props.options}\n        series={props.series}\n        type=\"donut\"\n        width={`${props.width ? props.width : \"380\"}`}\n      />\n    </div>\n  );\n};\n\nexport default React.memo(PieChart);\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { BiExport, BiSort } from \"react-icons/bi\";\nimport { FiEdit } from \"react-icons/fi\";\nimport { ImFilesEmpty } from \"react-icons/im\";\nimport {\n  MdCheckBox,\n  MdCheckBoxOutlineBlank,\n  MdHistory,\n  MdRadioButtonChecked,\n  MdRadioButtonUnchecked,\n} from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadEducationCategories,\n  PushPopupAlert,\n  schoolLevelsStoreInterface,\n} from \"../../../actions\";\nimport {\n  getAllClaims,\n  getAllApplications,\n  setSelectedClaimType,\n  GetClaimingTypes,\n} from \"../../../actions/claiming\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport {\n  generatePDF,\n  reportSettingsInterface,\n} from \"../../../components/DownloadPDF/rest\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport {\n  SideNavigation,\n  MainItem,\n} from \"../../../components/Navigation/SideNavigation\";\nimport {\n  CandidateClaimInterface,\n  claimReportContentInterface,\n  claimReportContentKeyInterface,\n  ClaimToPrintInterface,\n} from \"../../../interfaces/claimings\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport ExportToExcel from \"../../../utils/ExportToExcel\";\nimport { DATE, sortThisArray } from \"../../../utils/functions\";\nimport { ClaimTypesEnum, whichClaimType } from \"../../Claimings/Candidate\";\nimport TableLoading from \"../../../components/Loading/TableLoading\";\nimport {\n  education_category,\n  PlansTypeKeys,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport {\n  capitalizeFirstLetter,\n  capitalizeFirstWord,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport ChooseSession from \"../../SessionSettings/ChooseSession\";\nimport NoSession from \"../../SessionSettings/NoSession\";\n\nexport const reportClaimType = (\n  type: PlansTypeKeys | \"all\"\n): ClaimTypesEnum | \"all\" => {\n  let result: ClaimTypesEnum | \"all\" = \"all\";\n  switch (type) {\n    case PlansTypeKeys.APPLICATION:\n      result = ClaimTypesEnum.application;\n      break;\n    case PlansTypeKeys.DOCUMENT_VALIDATION:\n      result = ClaimTypesEnum.document;\n      break;\n    case PlansTypeKeys.EXAMINATION:\n      result = ClaimTypesEnum.exam;\n      break;\n    case PlansTypeKeys.MARKS_PUBLICATION:\n      result = ClaimTypesEnum.marks_publication;\n      break;\n    case PlansTypeKeys.PLACEMENT_TRANSFER:\n      result = ClaimTypesEnum.placement;\n      break;\n    default:\n      result = \"all\";\n      break;\n  }\n\n  return result;\n};\n\nconst searchData = (\n  objList: ClaimToPrintInterface[],\n  text: string\n): ClaimToPrintInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (\n        prop === \"names\" ||\n        prop === \"gender\" ||\n        prop === \"national_id\" ||\n        prop === \"phone\" ||\n        prop === \"email\" ||\n        prop === \"claim_title\" ||\n        prop === \"claim_type\" ||\n        prop === \"claim_level\" ||\n        prop === \"education_category\" ||\n        prop === \"claim_session\" ||\n        prop === \"date\" ||\n        prop === \"decision\"\n      ) {\n        if (product[prop]) {\n          flag =\n            product[prop]!.toString()\n              .toLowerCase()\n              .indexOf(text.toLowerCase()) > -1;\n        }\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n};\n\nconst defaultReportContent: claimReportContentInterface[] = [\n  {\n    key: claimReportContentKeyInterface.names,\n    title: \"Applicant Names\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.national_id,\n    title: \"National ID\",\n    status: true,\n  },\n  { key: claimReportContentKeyInterface.gender, title: \"Gender\", status: true },\n  { key: claimReportContentKeyInterface.phone, title: \"Phone\", status: true },\n  {\n    key: claimReportContentKeyInterface.claim_session,\n    title: \"Claim Session\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.education_category,\n    title: \"Education Institute\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.date,\n    title: \"Claim Date\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.decision,\n    title: \"Decision\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.claim_title,\n    title: \"Claim Title\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.claim_type,\n    title: \"Claim Type\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.claim_level,\n    title: \"Claim Level\",\n    status: true,\n  },\n];\n\ntype AppProps = {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  // systemPositions: PositionAPI[] | null;\n  // courses: course[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  // loadCourses: Function;\n  // getAllAnswers: Function;\n  setSelectedClaimType: Function;\n  // getPositions: Function;\n  getAllClaims: Function;\n  GetClaimingTypes: Function;\n  // getAllApplications: Function;\n  GetAllSessionPlans: Function;\n  // getDocumentCategory: Function;\n  // getDocumentSubCategory: Function;\n  // getDocumentFields: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\nconst _ClaimingReport: React.FC<AppProps> = (props) => {\n  const [thisPeriod, setThisPeriod] = useState<SessionPlanInterface | null>(\n    null\n  );\n  const [thisLevel, setThisLevel] = useState<number | \"all\">(\"all\");\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingSession, setLoadingSession] = useState<boolean>(true);\n  const [periodChanged, setPeriodChanged] = useState<boolean>(false);\n  const [loadingClaims, setLoadingClaims] = useState<boolean>(true);\n  const [loadingInstitutes, setLoadingInstitutes] = useState<boolean>(true);\n  const [downloading, setDownloading] = useState<boolean>(false);\n  const [claimToPrint, setClaimToPrint] = useState<\n    ClaimToPrintInterface[] | null\n  >();\n\n  const [sortProperty, setSortProperty] = useState<string>(\"\");\n  const [isSorted, setIsSorted] = useState<boolean>(false);\n  const [sortOrder, setSortOrder] = useState<\"ASC\" | \"DESC\">(\"ASC\");\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const [generateReportModal, setGenerateReportModal] = useState<{\n    reportType: \"EXCEL\" | \"PDF\";\n    status: boolean;\n  } | null>(null);\n  const [reportTitle, setReportTitle] = useState<string>(\"\");\n  const [reportContent, setReportContent] =\n    useState<claimReportContentInterface[]>(defaultReportContent);\n  const [selectAll, setSelectAll] = useState<boolean>(true);\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [selectPeriod, setSelectPeriod] = useState<boolean>(false);\n  const [thisEducation, setThisEducation] = useState<\n    education_category | \"all\"\n  >(\"all\");\n\n  useEffect(() => {\n    // LOADING EDUCATION CATEGORY =================================\n    if (\n      props.schoolLevels.education_categories === null ||\n      props.schoolLevels.education_categories.length === 0\n    ) {\n      props.loadEducationCategories(setLoadingInstitutes);\n    } else {\n      setLoadingInstitutes(false);\n    }\n    // END LOADING EDUCATION CATEGORY =================================\n    // LOADING CLAIM TYPES ========================================\n    if (props.claiming.claimTypes === null) {\n      props.GetClaimingTypes((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n    // END LOADING CLAIM TYPES ========================================\n    // LOADING APPLICATION SESSION ====================================\n    if (props.application_sessions === null) {\n      props.GetAllSessionPlans((status: boolean, msg: string) => {\n        if (!status) {\n          setLoadingSession(false);\n          setLoading(false);\n          if (msg.length) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    } else if (loadingSession) {\n      setLoading(false);\n      setLoadingSession(false);\n    }\n\n    // SETTING ACTIVE SESSION ==========================\n    if (\n      thisPeriod === null &&\n      !loadingSession &&\n      props.application_sessions &&\n      props.application_sessions.length > 0\n    ) {\n      let thisSession = props.application_sessions.find(\n        (item) => item.is_active === true\n      );\n      setThisPeriod(thisSession ? thisSession : props.application_sessions[0]);\n      // if (props.claiming.allAnswer === null) {\n      //   props.getAllAnswers(\n      //     thisSession\n      //       ? thisSession._id\n      //       : props.application_sessions[0]._id,\n      //     (status: boolean, msg: string) => {\n      //       setLoading(status);\n      //       if (!status && msg.length) {\n      //         props.PushPopupAlert({\n      //           title: msg,\n      //           theme: PopupAlertTheme.danger,\n      //         });\n      //       }\n      //     }\n      //   );\n      // }\n    }\n\n    // LOADING DOCUMENT CATEGORIES ==========================\n    // if (!props.documentReducer.documentCategory && loadingDocuments) {\n    //   props.getDocumentCategory();\n    //   setLoadingDocuments(false);\n    // } else if (loadingDocuments) {\n    //   setLoadingDocuments(false);\n    // }\n    // LOADING DOCUMENT CLARIFICATIONS ==========================\n    // if (!props.documentReducer.documentSubCategory && loadingClarifications) {\n    //   props.getDocumentSubCategory();\n    //   setLoadingClarifications(false);\n    // } else if (loadingClarifications) {\n    //   setLoadingClarifications(false);\n    // }\n    // LOADING DOCUMENT FIELDS ==========================\n    // if (!props.documentReducer.documentFields && loadingFields) {\n    //   props.getDocumentFields();\n    //   setLoadingFields(false);\n    // } else if (loadingFields) {\n    //   setLoadingFields(false);\n    // }\n\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (props.claiming.allClaims === null && thisPeriod !== null) {\n      props.getAllClaims(2, thisPeriod._id, (status: boolean, msg: string) => {\n        !status && setLoadingClaims(status);\n        if (status === false && msg.length) {\n          props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    } else if (thisPeriod && loadingClaims) {\n      setLoadingClaims(false);\n    }\n\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    // if (props.claiming.allApplications === null && thisPeriod !== null) {\n    //   props.getAllApplications(\n    //     thisPeriod._id,\n    //     (status: boolean, msg: string) => {\n    //       !status && setLoadingApplications(status);\n    //       if (status === false && msg.length) {\n    //         props.PushPopupAlert({\n    //           title: msg,\n    //           theme: PopupAlertTheme.danger,\n    //         });\n    //       }\n    //     }\n    //   );\n    // } else if (thisPeriod && loadingApplications) {\n    //   setLoadingApplications(false);\n    // }\n\n    // if (props.systemPositions === null) {\n    //   props.getPositions((status: boolean, msg: string) => {\n    //     setLoadingPosition(status);\n    //     console.log({ status: status, msg: msg });\n    //     if (msg.length) {\n    //       props.PushPopupAlert({\n    //         title: msg,\n    //         theme: PopupAlertTheme.danger,\n    //       });\n    //     }\n    //   });\n    // } else if (loadingPosition) {\n    //   setLoadingPosition(false);\n    // }\n\n    // LOADING COURSE ====================================\n    // if (\n    //   props.courses === null ||\n    //   (props.courses.length === 0 && loadingCourses)\n    // ) {\n    //   props.loadCourses(setLoadingCourses);\n    // } else if (loadingCourses) {\n    //   setLoadingCourses(false);\n    // }\n  }, [loadingClaims, loadingSession, props, thisPeriod]);\n\n  if (loading === true) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading Data...\n      </div>\n    );\n  }\n\n  if (props.application_sessions && props.application_sessions.length === 0) {\n    return <NoSession />;\n  }\n\n  // const displayClaimTitle = (thisClaim: CandidateClaimInterface): string => {\n  //   let result: string = thisClaim.claiming_on_id;\n  //   if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n  //     result =\n  //       thisClaim.user.details.filter(\n  //         (item) => item.validation_status !== \"waiting\"\n  //       ).length > 0\n  //         ? adminDisplayClaimTitle(\n  //             props.documentReducer,\n  //             thisClaim.user.details.filter(\n  //               (item) => item.validation_status !== \"waiting\"\n  //             ),\n  //             thisClaim\n  //           )\n  //         : \"Document not found\";\n  //   }\n  //   if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n  //     if (props.claiming.allApplications) {\n  //       let thisApplication = props.claiming.allApplications.find(\n  //         (item) => item._id === thisClaim.claiming_on_id\n  //       );\n  //       if (\n  //         thisApplication &&\n  //         props.claiming.allApplications &&\n  //         props.systemPositions\n  //       ) {\n  //         let thisPosition = props.systemPositions.find(\n  //           (item) => item.position_id === thisApplication!.position\n  //         );\n  //         if (thisPosition) {\n  //           result = thisPosition.position_title;\n  //         } else {\n  //           result = \"Application not found\";\n  //         }\n  //       }\n  //     }\n  //   }\n\n  //   if (\n  //     thisClaim.type_key === PlansTypeKeys.EXAMINATION &&\n  //     props.courses &&\n  //     props.claiming.allAnswer\n  //   ) {\n  //     let thisAnswer = getCourseIdBySheetId(\n  //       props.claiming.allAnswer,\n  //       thisClaim.claiming_on_id\n  //     );\n  //     if (thisAnswer && getCourseById(props.courses, thisAnswer.course)) {\n  //       result =\n  //         \"Exam of \" +\n  //         getCourseById(props.courses, thisAnswer.course)!.course_name;\n  //     } else {\n  //       result = \"Unknown exam\";\n  //     }\n  //   }\n\n  //   return result;\n  // };\n\n  // const getClaimInstitute = (\n  //   thisClaim: CandidateClaimInterface\n  // ): string | null => {\n  //   if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n  //     return null;\n  //   }\n  //   // if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n  //   //   if (props.claiming.allApplications) {\n  //   //     let thisApplication = props.claiming.allApplications.find(\n  //   //       (item) => item._id === thisClaim.claiming_on_id\n  //   //     );\n  //   //     if (\n  //   //       thisApplication &&\n  //   //       props.claiming.allApplications &&\n  //   //       props.systemPositions\n  //   //     ) {\n  //   //       // return thisApplication.\n  //   //       let thisPosition = props.systemPositions.find(\n  //   //         (item) => item.position_id === thisApplication!.position\n  //   //       );\n  //   //       if (thisPosition) {\n  //   //         return thisPosition.education_institute_id.education_institute_id;\n  //   //       }\n  //   //     }\n  //   //   }\n  //   // }\n\n  //   return null;\n  // };\n\n  const onPeriodChange = (period_id: string) => {\n    setPeriodChanged(true);\n    props.getAllClaims(2, period_id, (status: boolean, msg: string) => {\n      !status && setPeriodChanged(false);\n      if (status === false && msg.length) {\n        props.PushPopupAlert({\n          title: msg,\n          theme: PopupAlertTheme.danger,\n        });\n      }\n    });\n  };\n\n  const isClaimTypeActive = (\n    selectedType: PlansTypeKeys | \"all\",\n    currentType: PlansTypeKeys | \"all\"\n  ): boolean => {\n    if (currentType === \"all\" && selectedType === \"all\") {\n      return true;\n    } else if (currentType !== \"all\" && selectedType !== \"all\") {\n      if (currentType === selectedType) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  const setSort = (thisProperty: string) => {\n    if (sortProperty === thisProperty && sortOrder === \"ASC\") {\n      setSortOrder(\"DESC\");\n    } else {\n      setSortOrder(\"ASC\");\n    }\n    setSortProperty(thisProperty);\n    setIsSorted(true);\n  };\n\n  const ClaimTypes = (\n    claims: ClaimToPrintInterface[]\n  ): {\n    title: string;\n    count: number;\n    type: PlansTypeKeys | \"all\";\n  }[] => {\n    let output: {\n      title: string;\n      count: number;\n      type: PlansTypeKeys | \"all\";\n    }[] = [{ title: \"All types\", count: claims.length, type: \"all\" }];\n\n    Object.values(PlansTypeKeys).forEach((PlansKey) => {\n      if (PlansKey !== PlansTypeKeys.MARKS_PUBLICATION) {\n        output.push({\n          title: capitalizeFirstLetter(reportClaimType(PlansKey)),\n          count:\n            claims.length > 0\n              ? claims.filter(\n                  (itm) => itm.claim_type === reportClaimType(PlansKey)\n                ).length\n              : 0,\n          type: PlansKey,\n        });\n      }\n    });\n\n    return output;\n  };\n\n  const ClaimLevels = (\n    claims: ClaimToPrintInterface[]\n  ): {\n    title: string;\n    count: number;\n    level: number | \"all\";\n  }[] => {\n    let output: {\n        title: string;\n        count: number;\n        level: number | \"all\";\n      }[] = [{ title: \"All levels\", count: claims.length, level: \"all\" }],\n      levels: number[] = [1, 2];\n    for (let i in levels) {\n      output.push({\n        title: \"Level \" + levels[i],\n        count: claims.filter((itm) => itm.claim_level === levels[i]).length,\n        level: levels[i],\n      });\n    }\n    return output;\n  };\n\n  const updateReportContent = (key: claimReportContentKeyInterface) => {\n    let index: number = reportContent.findIndex((item) => item.key === key);\n    let newArray: claimReportContentInterface[] = reportContent;\n    newArray[index].status = !newArray[index].status;\n    setReportContent(newArray);\n    let isSelectAllNeeded = newArray.find((item) => item.status === false);\n    if (isSelectAllNeeded) {\n      setSelectAll(false);\n    } else {\n      setSelectAll(true);\n    }\n\n    // UPDATE APPLICATION LIST FOR UPDATE ==============================\n    updateClaimToPrint();\n  };\n\n  const updateClaimToPrint = () => {\n    // UPDATE REPORT TITLE ========================\n    if (thisPeriod) {\n      let title = \"Claim Report \" + thisPeriod.session_plan_name;\n      // if (thisLevel!==\"all\") {\n      //   title = \"Claim Report - Level \"+thisLevel + thisPeriod.session_plan_name;\n      // }\n      setReportTitle(title);\n    }\n    // UPDATE CONTENT =============================\n    if (props.claiming.allClaims && props.claiming.claimTypes) {\n      let arrayNew: ClaimToPrintInterface[] = [];\n      let n: number = 1;\n      for (const key in props.claiming.allClaims) {\n        if (\n          Object.prototype.hasOwnProperty.call(props.claiming.allClaims, key)\n        ) {\n          for (const keyClaim in props.claiming.allClaims[key].claims) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                props.claiming.allClaims[key].claims,\n                keyClaim\n              )\n            ) {\n              const element = props.claiming.allClaims[key].claims[keyClaim];\n              const thisType = whichClaimType(props.claiming.allClaims[key]);\n              let dataArray: ClaimToPrintInterface = {\n                claim_id: n,\n                names:\n                  props.claiming.allClaims[key].user.user_info.fname +\n                  \" \" +\n                  props.claiming.allClaims[key].user.user_info.lname,\n                gender: props.claiming.allClaims[key].user.user_info.sex\n                  ? \"Male\"\n                  : \"Female\",\n                national_id: props.claiming.allClaims[key].user.n_id!,\n                phone: props.claiming.allClaims[key].user.phone_number,\n                email: props.claiming.allClaims[key].user.email,\n                claim_type: thisType ? thisType : \"\",\n                claim_level: element.level,\n                education_category: \"\",\n                claim_session: thisPeriod ? thisPeriod.session_plan_name : \"\",\n                date: DATE(element.createdAt),\n                decision: element.decision_taken_status\n                  ? element.decision_taken_status\n                  : \"PENDING\",\n                claim_title: props.claiming.allClaims[key].title,\n              };\n              for (const key in reportContent) {\n                if (Object.prototype.hasOwnProperty.call(reportContent, key)) {\n                  if (!reportContent[key].status) {\n                    delete dataArray[reportContent[key].key];\n                  }\n                }\n              }\n              arrayNew.push(dataArray);\n              n++;\n            }\n          }\n        }\n      }\n      setClaimToPrint(arrayNew);\n      arrayNew = [];\n      n = 1;\n    }\n  };\n\n  const FC_ClaimData = (\n    allClaims: CandidateClaimInterface[] | null\n  ): ClaimToPrintInterface[] | null => {\n    if (allClaims === null) return null;\n    let arrayNew: ClaimToPrintInterface[] = [];\n    let n: number = 1;\n    // LOOP IN ALL CLAIM ONE BY ONE ###########################\n    for (const key in allClaims) {\n      if (Object.prototype.hasOwnProperty.call(allClaims, key)) {\n        // LOOP IN ALL CLAIM OF ONE FILE ONE BY ONE ===========================\n        for (const keyClaim in allClaims[key].claims) {\n          if (\n            Object.prototype.hasOwnProperty.call(\n              allClaims[key].claims,\n              keyClaim\n            )\n          ) {\n            const element = allClaims[key].claims[keyClaim];\n            const thisType = whichClaimType(allClaims[key]);\n            let dataArray: ClaimToPrintInterface = {\n              claim_id: n,\n              names:\n                allClaims[key].user.user_info.fname +\n                \" \" +\n                allClaims[key].user.user_info.lname,\n              gender: allClaims[key].user.user_info.sex ? \"Male\" : \"Female\",\n              national_id: allClaims[key].user.n_id!,\n              phone: allClaims[key].user.phone_number,\n              email: allClaims[key].user.email,\n              claim_type: thisType ? thisType : \"\",\n              claim_level: element.level,\n              education_category:\n                allClaims[key].institute_id &&\n                !isEmptyOrSpaces(allClaims[key].institute_id)\n                  ? allClaims[key].institute_id\n                  : null,\n              claim_session: thisPeriod ? thisPeriod.session_plan_name : \"\",\n              date: DATE(element.createdAt),\n              decision: element.decision_taken_status\n                ? element.decision_taken_status\n                : \"PENDING\",\n              claim_title: allClaims[key].title\n                ? allClaims[key].title\n                : \"Undefined\",\n            };\n            // for (const key in reportContent) {\n            //   if (Object.prototype.hasOwnProperty.call(reportContent, key)) {\n            //     if (!reportContent[key].status) {\n            //       delete dataArray[reportContent[key].key];\n            //     }\n            //   }\n            // }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n      }\n    }\n    return arrayNew;\n  };\n\n  const resetReportContent = (currentState: boolean) => {\n    let newArray: claimReportContentInterface[] = reportContent;\n    for (const key in newArray) {\n      if (isChangeAllowed(newArray[key].key)) {\n        newArray[key].status = !currentState;\n      }\n    }\n\n    setReportContent(newArray);\n    setSelectAll(!currentState);\n    updateClaimToPrint();\n  };\n\n  const isChangeAllowed = (key: claimReportContentKeyInterface): boolean => {\n    if (\n      key === claimReportContentKeyInterface.names ||\n      key === claimReportContentKeyInterface.decision ||\n      key === claimReportContentKeyInterface.claim_session ||\n      key === claimReportContentKeyInterface.claim_type ||\n      key === claimReportContentKeyInterface.date\n    ) {\n      return false;\n    }\n    return true;\n  };\n\n  const FC_GeneratePDF = () => {\n    if (!document.querySelectorAll(\"#report_content tbody tr\").length) {\n      props.PushPopupAlert({\n        title: `Can't generate Report of empty Data`,\n        theme: PopupAlertTheme.warning,\n      });\n      return;\n    }\n\n    if (thisPeriod) {\n      const table: HTMLElement | null =\n        document.getElementById(\"report_content\");\n      const reportSettings: reportSettingsInterface = {\n        doneBy: props.auth.user.fname + \" \" + props.auth.user.lname,\n        title: \"Claim Report\",\n        subjectTitle: \"Claim type\",\n        subject:\n          props.claiming.selectedClaimType === \"all\"\n            ? \"All Types\"\n            : props.claiming.selectedClaimType,\n        period: thisPeriod.session_plan_name,\n        footer: \"Online Recruitment\",\n        institute:\n          thisEducation === \"all\"\n            ? \"All institute\"\n            : thisEducation.education_category_title,\n      };\n      table && generatePDF(reportSettings, table, setDownloading);\n    }\n  };\n\n  const FC_FilterClaims = (\n    allClaims: ClaimToPrintInterface[],\n    claimType: PlansTypeKeys | \"all\",\n    claimLevel: number | \"all\",\n    institute: education_category | \"all\"\n  ): ClaimToPrintInterface[] => {\n    let result: ClaimToPrintInterface[] = allClaims;\n    if (claimType !== \"all\") {\n      result = result.filter((item) => item.claim_type === claimType);\n    }\n    if (claimLevel !== \"all\") {\n      result = result.filter((item) => item.claim_level === claimLevel);\n    }\n\n    if (institute !== \"all\") {\n      result = result.filter(\n        (item) =>\n          item.education_category === null ||\n          item.education_category === institute.education_institute_id\n      );\n    }\n\n    return result;\n  };\n\n  return (\n    <Fragment>\n      <SideNavigation>\n        <div className=\"flex flex-col mb-4\">\n          <span className=\"text-sm text-gray-600 mb-2\">\n            Education categories:\n          </span>\n          {props.schoolLevels.education_categories === null ||\n          loadingInstitutes ? (\n            <Loading />\n          ) : props.schoolLevels.education_categories.length === 0 ? (\n            <span>No result found</span>\n          ) : (\n            <Fragment>\n              <div\n                onClick={() => setThisEducation(\"all\")}\n                className={`border rounded px-2 py-2 mb-2 cursor-pointer ${\n                  thisEducation === \"all\"\n                    ? \"bg-blue-600 text-white hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                    : \"hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                } font-bold flex flex-row items-center gap-2`}\n              >\n                {thisEducation === \"all\" ? (\n                  <MdRadioButtonChecked />\n                ) : (\n                  <MdRadioButtonUnchecked />\n                )}\n                <span>All</span>\n              </div>\n              {props.schoolLevels.education_categories.map((item, i) => (\n                <div\n                  onClick={() => setThisEducation(item)}\n                  key={i + 1}\n                  className={`border rounded px-2 py-2 mb-2 cursor-pointer ${\n                    thisEducation !== \"all\" &&\n                    thisEducation.education_institute_id ===\n                      item.education_institute_id\n                      ? \"bg-blue-600 text-white hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                      : \"hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                  } font-bold flex flex-row items-center gap-2`}\n                >\n                  {thisEducation !== \"all\" &&\n                  thisEducation.education_institute_id ===\n                    item.education_institute_id ? (\n                    <MdRadioButtonChecked />\n                  ) : (\n                    <MdRadioButtonUnchecked />\n                  )}\n                  <span>{item.education_category_title}</span>\n                </div>\n              ))}\n            </Fragment>\n          )}\n        </div>\n        <div className=\"\">\n          <div className=\"text-gray-600 text-sm mb-2\">Selected period:</div>\n          <div\n            onClick={() => setSelectPeriod(true)}\n            className=\"font-bold bg-blue-50 border border-blue-200 rounded py-2 cursor-pointer text-xs px-2 hover:underline  text-blue-600  mb-4 w-full flex flex-row items-center animate__animated animate__zoomIn\"\n          >\n            {thisPeriod !== null\n              ? `${capitalizeFirstWord(thisPeriod.session_plan_name)} - ${\n                  thisPeriod.period\n                }`\n              : \"Filter by period\"}\n            <FiEdit className=\"text-3xl text-blue-600\" />\n          </div>\n        </div>\n        <div className=\"pt-1\">\n          <div className=\"text-sm text-gray-700 pb-2 pt-2\">Claim types:</div>\n          {props.claiming.claimTypes === null ||\n          FC_ClaimData(props.claiming.allClaims) === null ? (\n            <Loading />\n          ) : (\n            ClaimTypes(FC_ClaimData(props.claiming.allClaims)!).map(\n              (item, index: number) => (\n                <div\n                  onClick={() =>\n                    props.setSelectedClaimType(reportClaimType(item.type))\n                  }\n                  key={item.title + index}\n                >\n                  <MainItem\n                    title={item.title}\n                    count={item.count}\n                    active={isClaimTypeActive(\n                      props.claiming.selectedClaimType,\n                      item.type\n                    )}\n                  />\n                </div>\n              )\n            )\n          )}\n        </div>\n        <div className=\"pt-1\">\n          <div className=\"text-sm text-gray-700 pb-2 pt-2\">Claim level:</div>\n          {props.claiming.claimTypes === null ||\n          FC_ClaimData(props.claiming.allClaims) === null ? (\n            <Loading />\n          ) : (\n            ClaimLevels(FC_ClaimData(props.claiming.allClaims)!).map(\n              (item, index: number) => (\n                <div\n                  onClick={() => setThisLevel(item.level)}\n                  key={item.title + index}\n                >\n                  <MainItem\n                    title={item.title}\n                    count={item.count}\n                    active={item.level === thisLevel}\n                  />\n                </div>\n              )\n            )\n          )}\n        </div>\n      </SideNavigation>\n      <section>\n        {/* REPORT TITLE ============================================ */}\n        <div className=\"grid md:grid-cols-12\">\n          <div className=\"col-span-8\">\n            <div className=\"mt-4 mx-4 flex flex-col gap-1\">\n              <span className=\"text-3xl font-bold text-gray-700\">\n                Claim report\n              </span>\n            </div>\n          </div>\n          <div className=\"col-span-4\">\n            <div className=\"float-right mt-2\">\n              {props.claiming.allClaims && props.claiming.allClaims.length > 0 && (\n                <div className=\"flex flex-row items-center justify-end font-bold mb-2\">\n                  <BiExport className=\"text-2xl text-gray-500\" />\n                  <span className=\"text-gray-500\">Export as</span>\n                  <button\n                    className=\"px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200\"\n                    disabled={loading}\n                    onClick={() => {\n                      updateClaimToPrint();\n                      setGenerateReportModal({\n                        reportType: \"EXCEL\",\n                        status: true,\n                      });\n                    }}\n                  >\n                    EXCEL\n                  </button>\n                  <button\n                    className={`px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200 ${\n                      downloading && \"cursor-wait\"\n                    }`}\n                    onClick={() => FC_GeneratePDF()}\n                    disabled={loading || downloading}\n                  >\n                    PDF\n                  </button>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n        {/* END REPORT TITLE ============================================ */}\n        <div className=\"bg-white my-4\">\n          <div className=\"w-full px-2 py-2\">\n            <input\n              onChange={(e) => setSearchInput(e.target.value)}\n              type=\"text\"\n              value={searchInput}\n              placeholder=\"Search...\"\n              className=\"w-full bg-gray-100 py-2 px-3 rounded focus:border-gray-800\"\n              disabled={\n                props.claiming.allClaims === null ||\n                props.claiming.claimTypes === null ||\n                FC_ClaimData(props.claiming.allClaims) === null ||\n                periodChanged\n              }\n            />\n          </div>\n          <table className=\"w-full shadow\" id=\"report_content\">\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n              <tr>\n                <td className=\"px-2 py-2\">#</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"names\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Applicant names <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">National ID</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"gender\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Gender <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">Phone</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"claim_title\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Claim Title <BiSort />\n                  </div>\n                </td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"claim_type\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Claim Type <BiSort />\n                  </div>\n                </td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"claim_level\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Claim Level <BiSort />\n                  </div>\n                </td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"decision\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Status <BiSort />\n                  </div>\n                </td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"date\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Date <BiSort />\n                  </div>\n                </td>\n              </tr>\n            </thead>\n            <tbody>\n              {props.claiming.allClaims === null ||\n              props.claiming.claimTypes === null ||\n              periodChanged ? (\n                <TableLoading cols={10} />\n              ) : FC_ClaimData(props.claiming.allClaims) === null ? (\n                <TableLoading cols={10} />\n              ) : FC_FilterClaims(\n                  FC_ClaimData(props.claiming.allClaims)!,\n                  props.claiming.selectedClaimType,\n                  thisLevel,\n                  thisEducation\n                ).length === 0 ? (\n                <tr>\n                  <td colSpan={10} className=\"px-2 py-2\">\n                    <div className=\"flex flex-col text-gray-400 items-center justify-center bg-gray-100 rounded py-10\">\n                      <ImFilesEmpty className=\"text-8xl text-gray-400 mb-2 animate__animated animate__shakeX\" />\n                      <span className=\"text-sm font-bold\">\n                        No result found! Please try to search again\n                      </span>\n                      <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n                        <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                          <li\n                            onClick={() => setSelectPeriod(true)}\n                            className=\"underline text-gray-500 cursor-pointer\"\n                          >\n                            Filter by period\n                          </li>\n                          <li className=\"text-gray-400 italic\">or</li>\n                          <li className=\"text-gray-500\">\n                            Filter by Claim type\n                          </li>\n                          <li className=\"text-gray-400 italic\">or</li>\n                          <li className=\"text-gray-500\">\n                            Filter by Claim Level\n                          </li>\n                        </ul>\n                      </div>\n                    </div>\n                  </td>\n                </tr>\n              ) : (\n                sortThisArray(\n                  isSorted,\n                  searchData(\n                    FC_FilterClaims(\n                      FC_ClaimData(props.claiming.allClaims)!,\n                      props.claiming.selectedClaimType,\n                      thisLevel,\n                      thisEducation\n                    ),\n                    searchInput\n                  ),\n                  sortProperty,\n                  sortOrder\n                ).map((item: ClaimToPrintInterface, i) => (\n                  <tr\n                    key={i + 1}\n                    className={`${\n                      i % 2 !== 0 ? \"bg-gray-100\" : \"bg-white\"\n                    } text-gray-600 hover:bg-blue-100 hover:text-blue-700 border-b border-gray-300 hover:border-blue-500 text-sm`}\n                  >\n                    <td className=\"px-2 py-2\">{i + 1}</td>\n                    <td className=\"px-2 py-2\">{item.names}</td>\n                    <td className=\"px-2 py-2\">{item.national_id}</td>\n                    <td className=\"px-2 py-2\">{item.gender}</td>\n                    <td className=\"px-2 py-2\">{item.phone}</td>\n                    <td className=\"px-2 py-2\">{item.claim_title}</td>\n                    <td className=\"px-2 py-2\">{item.claim_type}</td>\n                    <td className=\"px-2 py-2\">{\"Level \" + item.claim_level}</td>\n                    <td className=\"px-2 py-2\">\n                      {item.decision}\n                      {/* {capitalizeFirstLetter(item.decision)} */}\n                    </td>\n                    <td className=\"px-2 py-2\">{item.date}</td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </section>\n      {/* GENERATE DYNAMIC REPORT CONTENT MODAL */}\n      {generateReportModal !== null && generateReportModal.status === true && (\n        <Modal\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              {/* <IoBriefcase className=\"text-5xl text-gray-500\" /> */}\n              <div className=\"flex flex-col\">\n                <span className=\"font-bold text-2xl text-gray-500\">\n                  Generating Report contents\n                </span>\n                <span className=\"text-sm text-blue-600 font-normal\">\n                  Generating {generateReportModal.reportType} Report\n                </span>\n              </div>\n            </div>\n          }\n          backDrop={true}\n          theme={Themes.default}\n          close={() => setGenerateReportModal(null)}\n          backDropClose={false}\n          widthSizeClass={ModalSize.medium}\n          displayClose={true}\n          padding={{ title: true }}\n        >\n          <div className=\"px-6\">\n            <div className=\"my-2 text-base text-gray-700 sm:text-lg\">\n              <div className=\"flex flex-col\">\n                <label>Title</label>\n                <input\n                  type=\"text\"\n                  className={`text-left input-white w-20 inline-block ${\n                    formError && formError.element === \"report_title\"\n                      ? \"border-red-500\"\n                      : \"border-gray-500\"\n                  } border-2`}\n                  placeholder=\"Sub Category Title\"\n                  value={reportTitle}\n                  onChange={(e) => {\n                    setFormError(null);\n                    setReportTitle(e.target.value);\n                  }}\n                  disabled={loading}\n                />\n                {formError && formError.element === \"report_title\" && (\n                  <span className=\"text-red-500\">{formError.msg}</span>\n                )}\n              </div>\n              <div className=\"flex flex-col mt-2\">\n                <label>Report content</label>\n                <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                  {reportContent.map((item, index) => (\n                    <div\n                      key={index}\n                      className={`flex items-center gap-1 ${\n                        isChangeAllowed(item.key)\n                          ? \"cursor-pointer\"\n                          : \"cursor-not-allowed\"\n                      }`}\n                      onClick={() =>\n                        isChangeAllowed(item.key) &&\n                        updateReportContent(item.key)\n                      }\n                      title={\n                        !isChangeAllowed(item.key)\n                          ? \"Required for every report!\"\n                          : \"\"\n                      }\n                    >\n                      {item.status ? (\n                        <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                      ) : (\n                        <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                      )}\n                      <span>{item.title}</span>\n                    </div>\n                  ))}\n                </div>\n                {formError && formError.element === \"report_content\" && (\n                  <span className=\"text-red-500\">{formError.msg}</span>\n                )}\n              </div>\n            </div>\n            <div className=\"flex justify-between mb-2 mt-4\">\n              <div\n                className={`flex items-center gap-1 cursor-pointer`}\n                onClick={() => resetReportContent(selectAll)}\n              >\n                {selectAll ? (\n                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                ) : (\n                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                )}\n                <span>Select all</span>\n              </div>\n\n              {claimToPrint && !loading && (\n                <ExportToExcel\n                  fileData={claimToPrint}\n                  fileName={reportTitle}\n                  btnName=\"Generate\"\n                />\n              )}\n            </div>\n          </div>\n        </Modal>\n      )}\n      {/* END GENERATE DYNAMIC REPORT CONTENT MODAL */}\n      {selectPeriod && (\n        <Modal\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              <MdHistory className=\"text-5xl text-blue-600\" />\n              <span className=\"flex flex-col\">Choose a period</span>\n            </div>\n          }\n          backDrop={true}\n          theme={Themes.default}\n          close={() => thisPeriod !== null && setSelectPeriod(false)}\n          backDropClose={true}\n          widthSizeClass={ModalSize.extraLarge}\n          displayClose={true}\n          padding={{ title: true }}\n        >\n          <ChooseSession\n            allSession={props.application_sessions}\n            setSelectSession={(value: SessionPlanInterface | \"all\") => {\n              value !== \"all\" && setThisPeriod(value);\n              value !== \"all\" && onPeriodChange(value._id);\n              value !== \"all\" && setSelectPeriod(false);\n            }}\n            chooseAll={false}\n            currentSelected={thisPeriod ? thisPeriod : \"all\"}\n          />\n        </Modal>\n      )}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  sessionPlan,\n  claiming,\n  document,\n  schoolLevels,\n}: StoreState): {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n} => {\n  return {\n    auth: auth,\n    application_sessions: sessionPlan.allSessionPlans,\n    claiming,\n    documentReducer: document,\n    schoolLevels,\n  };\n};\n\nexport const ClaimingReport = connect(mapStateToProps, {\n  getAllClaims,\n  GetClaimingTypes,\n  getAllApplications,\n  GetAllSessionPlans,\n  loadEducationCategories,\n  setSelectedClaimType,\n  PushPopupAlert,\n})(_ClaimingReport);\n"],"sourceRoot":""}
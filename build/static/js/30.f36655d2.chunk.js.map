{"version":3,"sources":["containers/Admin/Applications/ApplicationDetails.tsx","containers/Admin/Applications/Applications.tsx","components/Navigation/SideNavigation.tsx","actions/settings.ts","utils/ExportToExcel.tsx","utils/mineduc.png","components/DownloadPDF/rest.tsx","containers/SessionSettings/ChooseSession.tsx"],"names":["tabs","reportContentKeyInterface","ApplicationDetails","props","tabStatusClass","status","state","loading","tab","profile","selectedPosition","this","positions","find","itm","position_id","selectedApplication","position","className","onClick","setState","fname","lname","n_id","sex","phone_number","email","residence","district_name","application_session","session_plan_name","period","Date","createdAt","toString","application_status","contract","district","values","length","map","item","i","strict","getDistrictName","undefined","PositionDetails","positionDetails","cancel","apply","auth","showRegister","hideTools","Component","React","memo","ignoreThisApplicationStatus","ApplicationStates","Failed","Pass","defaultReportContent","key","Names","title","NationalID","Gender","Phone","Session","Institution","Decision","Position","Preferences","_Applications","setLoadingState","loadAllApplications","callback","a","axios","get","API","APPLICATION","_id","res","applicationListData","data","console","log","error","error_found","FD_GetSessions","institution_id","FC_GetAllSessionByInstitution","msg","selected_period","active_period","is_active","selectPeriod","defaultSelectedPeriod","FC_OnInstitutionChanged","FC_GetPositionsByInstitution","PushPopupAlert","theme","PopupAlertTheme","danger","selectPosition","errorMsg","sessionData","isEmptyOrSpaces","warning","activeSession","GetDistrictName","district_code","districts","AdminApplicationStatuses","application","output","count","includes","ApplicationStatesReport","push","caption","filter","filteredApplications","applications","Status","education_category","appl","education_institute_id","setDownloading","downloading","updateApplicationToPrint","selected_position","reportTitle","position_title","arrayNew","n","Object","prototype","hasOwnProperty","call","element","dataArray","No","Email","education_category_title","Residence","val","reportContent","selectedApplicationStatus","applicationsToPrint","updateReportContent","index","findIndex","newArray","selectAll","generateThisPDF","document","querySelectorAll","table","getElementById","reportSettings","doneBy","user","subjectTitle","subject","footer","institute","selectedEducationCategory","orientation","generatePDF","isChangeAllowed","resetReportContent","currentState","setSort","thisProperty","sortProperty","sortOrder","isSorted","applicationDetailsModal","generateReportModal","searchInput","searchPositionInput","formError","FC_getLocations","locations","alert","errorToText","FC_HasInstitute","education_institution_id","schoolLevels","education_categories","loadEducationCategories","prevProps","prevState","SideNavigation","Loading","capitalizeFirstWord","active","disabled","reportType","onChange","e","target","value","type","placeholder","id","colSpan","sortThisArray","searchData","selected_application","capitalizeFirstLetter","DATE","Modal","backDrop","Themes","default","close","backDropClose","widthSizeClass","ModalSize","extraLarge","displayClose","padding","ChooseSession","allSession","sessionPlan","allSessionPlans","setSelectSession","errorMessage","chooseAll","currentSelected","LoadingV2","LoadingType","dark","to","style","fontStyle","school_level_id","school_level_name","medium","ExportToExcel","fileData","fileName","btnName","Applications","connect","system_settings","systemPositions","_SideNavigation","componentDidMount","PageHasSubNav","componentWillUnmount","isAuthenticated","navActive","system","navigation","children","NavToogle","MainItem","icon","MdBrightness1","IconDefined","url","AUTH","getSystemSettings","dispatch","setAxiosToken","ActionTypes","GET_SYSTEM_SETTINGS","payload","code_error","disableSystemSetting","DISABLE_SYSTEM_SETTINGS","GetTaskAccess","response","task","permitted","GET_TASK_ACCESS","getPositions","GET_POSTIONS","deletePosition","DELETE_POSITION","publishPosition","PUBLISH_POSITION","showIcon","apiData","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","exportToCSV","require","addFooters","doc","pageCount","internal","getNumberOfPages","setFont","setFontSize","setPage","text","String","pageSize","width","align","callBack","lMargin","jsPDF","setTextColor","addImage","Logo","getWidth","lines","splitTextToSize","pdfInMM","y","getTextWidth","addPage","autoTable","html","startY","margin","horizontal","cellPadding","rowHeight","bodyStyles","valign","columnStyles","cellWidth","tableWidth","finalY","lastAutoTable","save","returnPromise","then","searched","useState","selectedPlan","setSelectedPlan","search","setSearch"],"mappings":"wUAaKA,E,8TAAAA,K,kBAAAA,E,qBAAAA,M,SC2DOC,ED3CNC,E,kDAIJ,WAAYC,GAAiC,IAAD,8BAC1C,cAAMA,IAORC,eAAiB,SAACC,GAChB,OAAkB,IAAXA,EACH,+LACA,iMARJ,EAAKC,MAAQ,CACXC,SAAS,EACTC,IAAKR,EAAKS,SAL8B,E,0CAa5C,WAAU,IAAD,OACDC,EAAmBC,KAAKR,MAAMS,UAAUC,MAC5C,SAACC,GAAD,OACEA,EAAIC,cAAgB,EAAKZ,MAAMa,oBAAoBC,SAASF,eAGhE,OACE,sBAAKG,UAAU,qBAAf,UAEE,sBAAKA,UAAU,+BAAf,UACE,sBACEC,QAAS,kBAAM,EAAKC,SAAS,CAAEZ,IAAKR,EAAKS,WACzCS,UAAS,UACPP,KAAKL,MAAME,MAAQR,EAAKS,QACpBE,KAAKP,gBAAe,GACpBO,KAAKP,gBAAe,IAL5B,UAQE,cAAC,IAAD,CAAiBc,UAAU,aAR7B,yBAWA,sBACEC,QAAS,kBAAM,EAAKC,SAAS,CAAEZ,IAAKR,EAAKiB,YACzCC,UAAS,UACPP,KAAKL,MAAME,MAAQR,EAAKiB,SACpBN,KAAKP,gBAAe,GACpBO,KAAKP,gBAAe,IAL5B,UAQE,cAAC,IAAD,CAAYc,UAAU,aARxB,yBAaF,qBAAKA,UAAU,gCAAf,SACGP,KAAKL,MAAME,MAAQR,EAAKS,QACvB,sBAAKS,UAAU,uBAAf,UACE,sBAAKA,UAAU,aAAf,UACE,qBAAKA,UAAU,0BAAf,iCAYA,sBAAKA,UAAU,oDAAf,UACE,sBAAMA,UAAU,gBAAhB,0BACA,sBAAMA,UAAU,YAAhB,SACGP,KAAKR,MAAMa,oBAAoBK,WAGpC,sBAAKH,UAAU,oDAAf,UACE,sBAAMA,UAAU,gBAAhB,yBACA,sBAAMA,UAAU,YAAhB,SACGP,KAAKR,MAAMa,oBAAoBM,WAGpC,sBAAKJ,UAAU,oDAAf,UACE,sBAAMA,UAAU,gBAAhB,2BACA,sBAAMA,UAAU,YAAhB,SACGP,KAAKR,MAAMa,oBAAoBO,UAGpC,sBAAKL,UAAU,oDAAf,UACE,sBAAMA,UAAU,gBAAhB,sBACA,sBAAMA,UAAU,YAAhB,SACGP,KAAKR,MAAMa,oBAAoBQ,SAGpC,sBAAKN,UAAU,oDAAf,UACE,sBAAMA,UAAU,gBAAhB,4BACA,sBAAMA,UAAU,YAAhB,SACGP,KAAKR,MAAMa,oBAAoBS,kBAGpC,sBAAKP,UAAU,oDAAf,UACE,sBAAMA,UAAU,gBAAhB,qBACA,sBAAMA,UAAU,YAAhB,SACGP,KAAKR,MAAMa,oBAAoBU,WAGpC,sBAAKR,UAAU,oDAAf,UACE,sBAAMA,UAAU,gBAAhB,iCACA,sBAAMA,UAAU,YAAhB,SACGP,KAAKR,MAAMa,oBAAoBW,UAAUC,sBAKhD,sBAAKV,UAAU,aAAf,UACE,qBAAKA,UAAU,+BAAf,iCAGA,sBAAKA,UAAU,oEAAf,UACE,sBAAMA,UAAU,gBAAhB,iCACA,uBAAMA,UAAU,sBAAhB,UAEIP,KAAKR,MAAMa,oBAAoBa,oBAC5BC,kBAHP,IAKInB,KAAKR,MAAMa,oBAAoBa,oBAAoBE,OALvD,UASF,sBAAKb,UAAU,yEAAf,UACE,sBAAMA,UAAU,gBAAhB,8BACA,sBAAMA,UAAU,YAAhB,SACG,IAAIc,KACHrB,KAAKR,MAAMa,oBAAoBiB,WAC/BC,gBAGN,sBAAKhB,UAAU,yEAAf,UACE,sBAAMA,UAAU,gBAAhB,gCACA,sBAAMA,UAAU,sBAAhB,SACGP,KAAKR,MAAMa,oBAAoBmB,2BAItC,qBAAKjB,UAAU,cAAf,SACE,sBAAKA,UAAU,0EAAf,UACE,qBAAKA,UAAU,gCAAf,mCAGA,sBAAKA,UAAU,0BAAf,UAC+C,OAA5CP,KAAKR,MAAMa,oBAAoBoB,SAC9B,qBAAKlB,UAAU,oEAAf,mCAIc,IADZP,KAAKR,MAAMa,oBAAoBoB,SAASC,SAASC,OAChDC,OACH,qBAAKrB,UAAU,sEAAf,2BAIAP,KAAKR,MAAMa,oBAAoBoB,SAASC,SAASC,OAAOE,KACtD,SAACC,EAAMC,GAAP,OACE,sBACExB,UAAS,UAEL,OADF,EAAKf,MAAMa,oBAAoBoB,WAGjB,IADd,EAAKjC,MAAMa,oBAAoBoB,SAASC,SACrCM,OACC,aACA,aANG,qCADX,UAWE,8BACE,qBAAKzB,UAAU,+EAAf,SACGwB,EAAI,MAGT,8BAAM,EAAKvC,MAAMyC,gBAAgBH,OAP5BC,EAAI,MAY4B,OAA5C/B,KAAKR,MAAMa,oBAAoBoB,WAEhB,IADdzB,KAAKR,MAAMa,oBAAoBoB,SAASC,SACrCM,QACD,qBAAKzB,UAAU,aAAf,SACE,qBAAKA,UAAU,uEAAf,mDAUO2B,IAArBnC,GACE,cAACoC,EAAA,EAAD,CACEC,gBAAiBrC,EACjBsC,OAAQ,aACRC,MAAO,aACPC,KAAMvC,KAAKR,MAAM+C,KACjBC,aAAc,SAAC9C,KACf+C,WAAW,a,GAzMMC,aAmNlBC,MAAMC,KAAKrD,G,SC9KbsD,EAAmD,CAC9DC,IAAkBC,OAClBD,IAAkBE,O,SAIR1D,K,QAAAA,E,cAAAA,E,gBAAAA,E,wBAAAA,E,cAAAA,E,cAAAA,E,sBAAAA,E,kBAAAA,E,0BAAAA,E,YAAAA,E,oBAAAA,E,oBAAAA,E,2BAAAA,M,KAsBZ,IAAM2D,EAAiD,CACrD,CACEC,IAAK5D,EAA0B6D,MAC/BC,MAAO,kBACP1D,QAAQ,GAEV,CACEwD,IAAK5D,EAA0B+D,WAC/BD,MAAO,cACP1D,QAAQ,GAEV,CAAEwD,IAAK5D,EAA0BgE,OAAQF,MAAO,SAAU1D,QAAQ,GAClE,CAAEwD,IAAK5D,EAA0BiE,MAAOH,MAAO,QAAS1D,QAAQ,GAChE,CACEwD,IAAK5D,EAA0BkE,QAC/BJ,MAAO,qBACP1D,QAAQ,GAEV,CACEwD,IAAK5D,EAA0BmE,YAC/BL,MAAO,sBACP1D,QAAQ,GAEV,CACEwD,IAAK5D,EAA0B+B,KAC/B+B,MAAO,mBACP1D,QAAQ,GAEV,CAAEwD,IAAK5D,EAA0BoE,SAAUN,MAAO,WAAY1D,QAAQ,GACtE,CACEwD,IAAK5D,EAA0BqE,SAC/BP,MAAO,iBACP1D,QAAQ,GAEV,CACEwD,IAAK5D,EAA0BsE,YAC/BR,MAAO,cACP1D,QAAQ,IAoDNmE,E,kDAIJ,WAAYrE,GAAkC,IAAD,8BAC3C,cAAMA,IA6BRsE,gBAAkB,SAACnE,GACjB,EAAKc,SAAS,CAAEb,QAASD,KA/BkB,EAkC7CoE,oBAlC6C,uCAkCvB,WACpBzD,EACAc,EACA4C,GAHoB,eAAAC,EAAA,yDAKH,OAAb3D,GAAgC,OAAXc,EALL,wBAMlB4C,GAAS,EAAM,IANG,kBAQEE,IAAMC,IAAN,UACbC,IAAIC,YADS,kBACY/D,EAASF,YADrB,YACoCgB,EAAOkD,MAT7C,OAQVC,EARU,OAWhB,EAAK9D,SAAS,CAAE+D,oBAAqBD,EAAIE,OACzCC,QAAQC,IAAI,wBAAyBJ,GACrCP,GAAS,EAAO,IAbA,kDAehBU,QAAQE,MAAM,CAAEC,YAAY,EAAD,KAfX,0DAlCuB,4DAuD7CC,eAAiB,SAACC,GAChB,EAAKvF,MAAMwF,8BACTD,GACA,SAACrF,EAAiBuF,EAAaR,GAE7B,GADA,EAAKX,gBAAgBpE,IAChBA,GACC+E,GAAQA,EAAK7C,OAAS,GACW,OAA/B,EAAKjC,MAAMuF,gBAA0B,CACvC,IAAIC,EAAgBV,EAAKvE,MAAK,SAAC4B,GAAD,OAAUA,EAAKsD,aACzCD,GACF,EAAK1E,SAAS,CAAEyE,gBAAiBC,IACjC,EAAK1E,SAAS,CACZ4E,cAAc,EACdC,sBAAuBH,KAEhBV,EAAK7C,OAAS,GACvBuD,EAAgBV,EAAKA,EAAK7C,OAAS,GACnC,EAAKnB,SAAS,CAAEyE,gBAAiBC,IACjC,EAAK1E,SAAS,CACZ4E,cAAc,EACdC,sBAAuBH,KAGzB,EAAK1E,SAAS,CAAE4E,cAAc,SA9EC,EAuF7CE,wBAA0B,SAACR,GAEzB,EAAKvF,MAAMgG,6BACTT,GACA,SAACrF,EAAiBuF,GAChB,EAAKnB,gBAAgBpE,GACrBgF,QAAQC,IAAI,CAAEjF,OAAQA,EAAQuF,IAAKA,IAC/BA,EAAIrD,OACN,EAAKpC,MAAMiG,eAAe,CACxBrC,MAAO6B,EACPS,MAAOC,IAAgBC,UAEL,IAAXlG,GACT,EAAKe,SAAS,CAAEoF,gBAAgB,OAMtC,EAAKrG,MAAMwF,8BACTD,GACA,SACErF,EACAoG,EACAC,GAGA,GADA,EAAKjC,gBAAgBpE,IAChBA,IACEsG,YAAgBF,IACnB,EAAKtG,MAAMiG,eAAe,CACxBrC,MAAO0C,EACPJ,MAAOC,IAAgBM,UAIvBF,GAAeA,EAAYnE,OAAS,GAAG,CACzC,IAAIsE,EAAgBH,EAAY7F,MAAK,SAAC4B,GAAD,OAAUA,EAAKsD,aAChDc,EACF,EAAKzF,SAAS,CAAEyE,gBAAiBgB,IAKjC,EAAKzF,SAAS,CAAE4E,cAAc,SAlIG,EA0I7Cc,gBAAkB,SAACC,GAAmC,IAAD,EAC/C1E,EAAQ,UAAG,EAAK/B,MAAM0G,iBAAd,aAAG,EAAsBA,UAAUnG,MAC7C,SAACC,GAAD,OAASA,EAAIiG,cAAc7E,aAAe6E,EAAc7E,cAE1D,YAAiBW,IAAbR,EACK,GAEAA,EAAST,eAjJyB,EAwN7CqF,yBAA2B,SACzBC,GAEA,IAAIC,EAIE,CAAC,CAAEpD,MAAO,MAAOqD,MAAOF,EAAY3E,OAAQlC,OAAQ,QALgB,WAMjEqC,GAEJc,EAA4B6D,SAASC,IAAwB5E,GAAGmB,MAEjEsD,EAAOI,KAAK,CACVxD,MAAOuD,IAAwB5E,GAAG8E,QAClCJ,MAAOF,EAAYO,QACjB,SAAC3G,GAAD,OAASA,EAAIqB,qBAAuBmF,IAAwB5E,GAAGmB,OAC/DtB,OACFlC,OAAQiH,IAAwB5E,GAAGmB,OATzC,IAAK,IAAInB,KAAK4E,IAA0B,EAA/B5E,GAgBT,OAAOyE,GAhPoC,EAmP7CO,qBAAuB,SACrBC,EACAC,EACAC,GAEA,IAAIC,EAAuCH,EAQ3C,MAP2B,QAAvBE,GAAiD,OAAjBF,IAClCG,EAAOH,EAAaF,QAClB,SAAC3G,GAAD,OACEA,EAAIG,SAAS8G,uBAAuBA,yBACpCF,EAAmBE,2BAGV,OAAXH,GAA8B,QAAXA,GAGR,OAATE,EAFGA,EAKEA,EAAKL,QAAO,SAAChF,GAAD,OAAUA,EAAKN,qBAAuByF,MAtQlB,EA2Q7CI,eAAiB,SAAC3H,GAChB,EAAKe,SAAS,CAAE6G,YAAa5H,KA5Qc,EA+Q7C6H,yBAA2B,WAKzB,GAJI,EAAK5H,MAAM6H,mBACb,EAAK/G,SAAS,CACZgH,YAAa,EAAK9H,MAAM6H,kBAAkBE,iBAE1C,EAAK/H,MAAM6E,oBAAqB,CAClC,IAAImD,EAAgD,GAChDC,EAAY,EAChB,IAAK,IAAM1E,KAAO,EAAKvD,MAAM6E,oBAC3B,GACEqD,OAAOC,UAAUC,eAAeC,KAC9B,EAAKrI,MAAM6E,oBACXtB,GAEF,CAAC,IAAD,EACM+E,EAAU,EAAKtI,MAAM6E,oBAAoBtB,GAC3CgF,EAA+C,CACjDC,GAAIP,EACJzE,MAAO8E,EAAQvH,MAAQ,IAAMuH,EAAQtH,MACrC0C,WAAY4E,EAAQrH,KACpB0C,OAAwB,MAAhB2E,EAAQpH,IAAc,OAAS,SACvC8C,SAAUsE,EAAQ3H,SAASoH,eAC3BnE,MAAO0E,EAAQnH,aACfsH,MAAOH,EAAQlH,MACf0C,YACEwE,EAAQ3H,SAAS8G,uBAAuBiB,yBAC1C7E,QAASyE,EAAQ/G,oBAAoBC,kBACrCmH,UAAWL,EAAQjH,UAAUC,cAC7B2C,YAAY,GAAD,OACY,OAArBqE,EAAQxG,SACJ,GAC6C,KAA7C,UAAAwG,EAAQxG,SAASC,SAASC,cAA1B,eAAkCC,QAClC,gBACAqG,EAAQxG,SAASC,SAASC,OAAOE,KAAI,SAAC0G,GACpC,MAAM,GAAN,OAAU,EAAKpC,gBAAgBoC,QAN5B,OASY,OAArBN,EAAQxG,WAC6B,IAArCwG,EAAQxG,SAASC,SAASM,QAC1BiG,EAAQxG,SAASC,SAASC,OAAOC,OAAS,EACtC,wBACA,IAENP,KAAM,IAAIA,KAAK4G,EAAQ3G,WAAWC,WAClCmC,SAAUuE,EAAQzG,oBAGpB,IAAK,IAAM0B,KAAO,EAAKvD,MAAM6I,cAEzBX,OAAOC,UAAUC,eAAeC,KAC9B,EAAKrI,MAAM6I,cACXtF,KAGG,EAAKvD,MAAM6I,cAActF,GAAKxD,eAC1BwI,EAAU,EAAKvI,MAAM6I,cAActF,GAAKA,MAIrDyE,EAASf,KAAKsB,GACdN,IAIuC,OAAzC,EAAKjI,MAAM8I,2BAC8B,QAAzC,EAAK9I,MAAM8I,4BAEXd,EAAWA,EAASb,QAClB,SAAChF,GAAD,OAAUA,EAAK4B,WAAa,EAAK/D,MAAM8I,8BAE3C,EAAKhI,SAAS,CAAEiI,oBAAqBf,IACrCA,EAAW,GACXC,EAAI,IAvVqC,EA4V7Ce,oBAAsB,SAACzF,GACrB,IAAI0F,EAAgB,EAAKjJ,MAAM6I,cAAcK,WAC3C,SAAC/G,GAAD,OAAUA,EAAKoB,MAAQA,KAErB4F,EAAqC,EAAKnJ,MAAM6I,cACpDM,EAASF,GAAOlJ,QAAUoJ,EAASF,GAAOlJ,OAC1C,EAAKe,SAAS,CAAE+H,cAAeM,IACPA,EAAS5I,MAAK,SAAC4B,GAAD,OAA0B,IAAhBA,EAAKpC,UAEnD,EAAKe,SAAS,CAAEsI,WAAW,IAE3B,EAAKtI,SAAS,CAAEsI,WAAW,IAI7B,EAAKxB,4BA3WsC,EA8W7CyB,gBAAkB,WAChB,IAAKC,SAASC,iBAAiB,4BAA4BtH,OAKzD,OAJA,EAAKpC,MAAMiG,eAAe,CACxBrC,MAAM,sCACNsC,MAAOC,IAAgBM,WAElB,EAGT,GAAI,EAAKtG,MAAM6H,mBAAqB,EAAK7H,MAAMuF,gBAAiB,CAC9D,IAAMiE,EACJF,SAASG,eAAe,kBACpBC,EAA0C,CAC9CC,OAAQ,EAAK9J,MAAM+C,KAAKgH,KAAK7I,MAAQ,IAAM,EAAKlB,MAAM+C,KAAKgH,KAAK5I,MAChEyC,MAAO,sBACPoG,aAAc,WACdC,QAAS,EAAK9J,MAAM6H,kBAAkBE,eACtCtG,OAAQ,EAAKzB,MAAMuF,gBAAgB/D,kBACnCuI,OAAQ,qBACRC,UAC2C,QAAzC,EAAKhK,MAAMiK,0BACP,gBACA,EAAKjK,MAAMiK,0BAA0BvB,yBAC3CwB,YAAa,KAEfnF,QAAQC,IAAI,wCACZD,QAAQC,IAAI,CAAEwE,UACdzE,QAAQC,IAAI,wCACZwE,GAASW,YAAYT,EAAgBF,EAAO,EAAK9B,kBA1YR,EA8Y7C0C,gBAAkB,SAAC7G,GACjB,OACEA,IAAQ5D,EAA0B6D,OAClCD,IAAQ5D,EAA0BoE,UAClCR,IAAQ5D,EAA0BkE,SAlZO,EAyZ7CwG,mBAAqB,SAACC,GACpB,IAAInB,EAAqC,EAAKnJ,MAAM6I,cACpD,IAAK,IAAMtF,KAAO4F,EACZ,EAAKiB,gBAAgBjB,EAAS5F,GAAKA,OACrC4F,EAAS5F,GAAKxD,QAAUuK,GAI5B,EAAKxJ,SAAS,CACZ+H,cAAeM,EACfC,WAAYkB,IAGd,EAAK1C,4BAtasC,EAya7C2C,QAAU,SAACC,GAEP,EAAKxK,MAAMyK,eAAiBD,GACH,QAAzB,EAAKxK,MAAM0K,UAEX,EAAK5J,SAAS,CACZ2J,aAAcD,EACdG,UAAU,EACVD,UAAW,SAGb,EAAK5J,SAAS,CACZ2J,aAAcD,EACdG,UAAU,EACVD,UAAW,SApbf,EAAK1K,MAAQ,CACXC,SAAS,EACT0F,sBAAuB,KACvBsE,0BAA2B,MAC3BnB,0BAA2B,MAC3BjE,oBAAqB,KACrBqB,gBAAgB,EAChBR,cAAc,EACdkF,wBAAyB,KACzBC,oBAAqB,KACrBC,YAAa,GACbC,oBAAqB,GACrBjD,YAAa,qBACbsB,WAAW,EACXL,oBAAqB,KACrBiC,UAAW,KACXnC,cAAevF,EACfmH,aAAc,GACdE,UAAU,EACVD,UAAW,MACXnF,gBAAiB,KACjBoC,aAAa,EACbE,kBAAmB,KACnBnB,UAAW,MA1B8B,E,qDAqJ7C,WAAqB,IAAD,OAEW,OAAzBrG,KAAKL,MAAM0G,YACbrG,KAAKS,SAAS,CAAEb,SAAS,IACzBgL,cACE,SAAChG,EAAgBiG,EAA+B5F,GAC5B,OAAd4F,EACF,EAAKpK,SAAS,CACZ4F,UAAWwE,EACXjL,SAAS,KAGG,IAAVgF,IACFkG,MAAMC,YAAYnG,IAClB,EAAKnE,SAAS,CAAEb,SAAS,EAAOyG,UAAW,aAMa,IAA9D2E,YAAgBhL,KAAKR,MAAM+C,KAAK0I,0BAClCjL,KAAKuF,wBAAwBvF,KAAKR,MAAM+C,KAAK0I,0BAGM,OAAjDjL,KAAKR,MAAM0L,aAAaC,sBACxBnL,KAAKR,MAAM0L,aAAaC,qBAAqBvJ,OAE7C5B,KAAKR,MAAM4L,yBACT,SAAC1L,EAAiB+E,GAChB,EAAKX,gBAAgBpE,IAChBA,GAAU+E,GAAQA,EAAK7C,OAAS,IACnC,EAAKnB,SAAS,CAAEmJ,0BAA2BnF,EAAK,MAG9C,IADAuG,YAAgB,EAAKxL,MAAM+C,KAAK0I,0BAGhC,EAAK1F,wBAAwBd,EAAK,GAAG2C,wBAErC,EAAK7B,wBACH,EAAK/F,MAAM+C,KAAK0I,8BAMhBjL,KAAKR,MAAM0L,aAAatB,4BAClC5J,KAAKS,SAAS,CACZmJ,0BACE5J,KAAKR,MAAM0L,aAAaC,qBAAqB,KAEjDnL,KAAKuF,wBACHvF,KAAKR,MAAM0L,aAAaC,qBAAqB,GAAG/D,2B,gCAMxD,SACEiE,EACAC,GAEIA,EAAU1L,UAAYI,KAAKL,MAAMC,SAEnCI,KAAKuH,6B,oBAwOT,WAAU,IAAD,OACP,OACE,qCACE,eAACgE,EAAA,EAAD,YAEI,IADDP,YAAgBhL,KAAKR,MAAM+C,KAAK0I,2BAE/B,sBAAK1K,UAAU,qBAAf,UACE,sBAAMA,UAAU,6BAAhB,mCAGkD,OAAjDP,KAAKR,MAAM0L,aAAaC,qBACvB,cAACK,EAAA,EAAD,IAC0D,IAAxDxL,KAAKR,MAAM0L,aAAaC,qBAAqBvJ,OAC/C,mDAEA,kCAkBG5B,KAAKR,MAAM0L,aAAaC,qBAAqBtJ,KAC5C,SAACC,EAAMC,GAAP,OACE,sBACEvB,QAAS,WACP,EAAKC,SAAS,CAAEmJ,0BAA2B9H,IAC3C,EAAKyD,wBACHzD,EAAKsF,yBAIT7G,UAAS,uDACkC,QAAzC,EAAKZ,MAAMiK,2BACX,EAAKjK,MAAMiK,0BACRxC,yBACDtF,EAAKsF,uBACH,qFACA,8DANG,+CARX,UAiB4C,QAAzC,EAAKzH,MAAMiK,2BACZ,EAAKjK,MAAMiK,0BACRxC,yBACDtF,EAAKsF,uBACL,cAAC,KAAD,IAEA,cAAC,KAAD,IAEF,+BAAOtF,EAAKuG,6BAlBPtG,EAAI,WA0BvB,sBAAKxB,UAAU,GAAf,UACE,qBAAKA,UAAU,6BAAf,8BACA,sBACEC,QAAS,kBAAM,EAAKC,SAAS,CAAE4E,cAAc,KAC7C9E,UAAU,gMAFZ,UAIkC,OAA/BP,KAAKL,MAAMuF,gBACRuG,YACEzL,KAAKL,MAAMuF,gBAAgB/D,mBAE7B,mBACJ,cAAC,IAAD,CAAQZ,UAAU,iCAIrBP,KAAKL,MAAM6H,mBACV,sBAAKjH,UAAU,OAAf,UACE,qBAAKA,UAAU,kCAAf,mCAGoC,OAAnCP,KAAKL,MAAM6E,qBACa,OAAzBxE,KAAKL,MAAM0G,UACT,cAACmF,EAAA,EAAD,IAEAxL,KAAKsG,yBACHtG,KAAKL,MAAM6E,qBACX3C,KACA,SACE1B,EAKA4B,GANF,OASE,aADA,CACC,WAAD,UACE,qBACEvB,QAAS,kBACP,EAAKC,SAAS,CACZgI,0BAA2BtI,EAAIT,UAHrC,SAOE,cAAC,IAAD,CACE0D,MAAOjD,EAAIiD,MACXqD,MAAOtG,EAAIsG,MACXiF,OACE,EAAK/L,MAAM8I,4BAA8BtI,EAAIT,YAZtCS,EAAIiD,gBA2B/B,oCAEE,sBAAK7C,UAAU,uBAAf,UACE,qBAAKA,UAAU,aAAf,SACE,sBAAKA,UAAU,gCAAf,UACE,sBAAMA,UAAU,kCAAhB,iCAGA,sBACEC,QAAS,kBAAM,EAAKC,SAAS,CAAEoF,gBAAgB,KAC/CtF,UAAU,gCAFZ,UAIE,sBAAMA,UAAU,wBAAhB,uBACA,sBAAMA,UAAU,4DAAhB,SACoC,OAAjCP,KAAKL,MAAM6H,kBACRxH,KAAKL,MAAM6H,kBAAkBE,eAC7B,kDAKZ,qBAAKnH,UAAU,aAAf,SACE,sBAAKA,UAAU,mBAAf,UACGP,KAAKL,MAAM+I,qBACV1I,KAAKL,MAAM+I,oBAAoB9G,OAAS,GACtC,sBAAKrB,UAAU,wDAAf,UACE,cAAC,IAAD,CAAUA,UAAU,2BACpB,sBAAMA,UAAU,gBAAhB,uBAEA,wBACEA,UAAS,gHACPP,KAAKL,MAAM2H,aAAe,eAE5BqE,SAAU3L,KAAKL,MAAMC,SAAWI,KAAKL,MAAM2H,YAC3C9G,QAAS,kBACP,EAAKC,SAAS,CACZ+J,oBAAqB,CACnBoB,WAAY,QACZlM,QAAQ,MAThB,mBAiBA,wBACEa,UAAU,wGACVC,QAAS,kBAAM,EAAKwI,mBACpB2C,SAAU3L,KAAKL,MAAMC,QAHvB,oBASN,sBACEY,QAAS,kBAAM,EAAKC,SAAS,CAAEoF,gBAAgB,KAC/CtF,UAAU,gJAFZ,UAIE,cAAC,IAAD,CAAaA,UAAU,YAJzB,gCAWN,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,uBACEsL,SAAU,SAACC,GAAD,OAAO,EAAKrL,SAAS,CAAEgK,YAAaqB,EAAEC,OAAOC,SACvDC,KAAK,OACLD,MAAOhM,KAAKL,MAAM8K,YAClByB,YAAY,YACZ3L,UAAU,2CAGd,qBAAKA,UAAU,yBAAf,SACE,wBAAOA,UAAU,gBAAgB4L,GAAG,iBAApC,UACE,uBAAO5L,UAAU,sEAAjB,SACE,+BACE,oBAAIA,UAAU,YAAd,eACA,oBACEA,UAAU,2BACVC,QAAS,kBAAM,EAAK0J,QAAQ,UAF9B,SAIE,sBAAK3J,UAAU,0BAAf,6BACkB,cAAC,IAAD,SAGpB,oBAAIA,UAAU,YAAd,yBACA,oBAAIA,UAAU,YAAd,oBACA,oBAAIA,UAAU,YAAd,mBACA,oBAAIA,UAAU,YAAd,sBACA,oBAAIA,UAAU,YAAd,2BACA,oBACEA,UAAU,2BACVC,QAAS,kBAAM,EAAK0J,QAAQ,uBAF9B,SAIE,sBAAK3J,UAAU,0BAAf,oBACS,cAAC,IAAD,SAGX,oBAAIA,UAAU,2BAAd,SACE,qBAAKA,UAAU,0BAAf,2BAEF,oBAAIA,UAAU,YAAd,uBAGJ,gCACoC,OAAjCP,KAAKL,MAAM6H,kBACV,6BACE,oBAAI4E,QAAS,GAAI7L,UAAU,YAA3B,SACE,sBAAKA,UAAU,oFAAf,UACE,cAAC,IAAD,CAAcA,UAAU,kEACxB,sBAAMA,UAAU,oBAAhB,sEAIA,qBAAKA,UAAU,wDAAf,SACE,oBAAIA,UAAU,2DAAd,SACE,oBACEC,QAAS,kBACP,EAAKC,SAAS,CAAEoF,gBAAgB,KAElCtF,UAAU,yCAJZ,wCAa2B,OAAnCP,KAAKL,MAAM6E,qBAKP,OAJNxE,KAAK+G,qBACH/G,KAAKL,MAAM6E,oBACXxE,KAAKL,MAAM8I,0BACXzI,KAAKL,MAAMiK,2BAEb,6BACE,oBAAIwC,QAAS,GAAI7L,UAAU,YAA3B,SACE,cAACiL,EAAA,EAAD,QAOU,IAJZxL,KAAK+G,qBACL/G,KAAKL,MAAM6E,oBACXxE,KAAKL,MAAM8I,0BACXzI,KAAKL,MAAMiK,2BACVhI,OACH,6BACE,oBAAIwK,QAAS,GAAI7L,UAAU,YAA3B,SACE,sBAAKA,UAAU,oFAAf,UACE,cAAC,IAAD,CAAcA,UAAU,kEACxB,sBAAMA,UAAU,oBAAhB,yDAGA,qBAAKA,UAAU,wDAAf,SACE,qBAAIA,UAAU,2DAAd,UACE,oBACEC,QAAS,kBACP,EAAKC,SAAS,CAAE4E,cAAc,KAEhC9E,UAAU,yCAJZ,8BAQA,oBAAIA,UAAU,uBAAd,gBACA,oBACEC,QAAS,kBACP,EAAKC,SAAS,CAAEoF,gBAAgB,KAElCtF,UAAU,yCAJZ,4CAcV8L,YACErM,KAAKL,MAAM2K,SACXgC,YACEtM,KAAK+G,qBACH/G,KAAKL,MAAM6E,oBACXxE,KAAKL,MAAM8I,0BACXzI,KAAKL,MAAMiK,2BAEb5J,KAAKL,MAAM8K,aAEbzK,KAAKL,MAAMyK,aACXpK,KAAKL,MAAM0K,WACXxI,KAAI,SAACC,EAA6BC,GAA9B,aACJ,qBACEvB,QAAS,kBACP,EAAKC,SAAS,CACZ8J,wBAAyB,CACvBgC,qBAAsBzK,EACtBpC,QAAQ,MAKda,UAAS,UACPwB,EAAI,IAAM,EAAI,cAAgB,WADvB,8HAVX,UAcE,oBAAIxB,UAAU,YAAd,SAA2BwB,EAAI,IAC/B,qBAAIxB,UAAU,YAAd,UACGuB,EAAKpB,MADR,IACgBoB,EAAKnB,SAErB,oBAAIJ,UAAU,YAAd,SAA2BuB,EAAKlB,OAChC,oBAAIL,UAAU,YAAd,SACgB,MAAbuB,EAAKjB,IAAc,OAAS,WAE/B,oBAAIN,UAAU,YAAd,SAA2BuB,EAAKhB,eAChC,oBAAIP,UAAU,YAAd,SACGuB,EAAKxB,SAASoH,iBAEjB,oBAAInH,UAAU,YAAd,SACGuB,EAAKd,UAAUC,gBAElB,oBAAIV,UAAU,YAAd,SACGiM,YAAsB1K,EAAKN,sBAE9B,qBAAIjB,UAAU,YAAd,UACqB,OAAlBuB,EAAKL,SACF,GAC0C,KAA1C,UAAAK,EAAKL,SAASC,SAASC,cAAvB,eAA+BC,QAC/B,gBACAE,EAAKL,SAASC,SAASC,OAAOE,KAAI,SAAC0G,GACjC,MAAM,GAAN,OAAU,EAAKpC,gBAAgBoC,IAA/B,OACoB,OAAlBzG,EAAKL,UACLK,EAAKL,SAASC,SAASC,OAAOC,OAAS,GACvCE,EAAKL,SAASC,SAASC,OACrBG,EAAKL,SAASC,SAASC,OAAOC,OAAS,KACnC2G,EACF,KACA,OAGO,OAAlBzG,EAAKL,WAC4B,IAAlCK,EAAKL,SAASC,SAASM,QACvBF,EAAKL,SAASC,SAASC,OAAOC,OAAS,EACnC,wBACA,MAEN,oBAAIrB,UAAU,YAAd,SAA2BkM,YAAK3K,EAAKR,eA7ChCS,EAAI,qBAwDO,IAA9B/B,KAAKL,MAAMkG,iBACiB,IAA5B7F,KAAKL,MAAM0F,eACX,cAACqH,EAAA,EAAD,CACEtJ,MACE,sBAAK7C,UAAU,mCAAf,WAC+B,IAA5BP,KAAKL,MAAM0F,aACV,cAAC,IAAD,CAAW9E,UAAU,2BAErB,cAAC,IAAD,CAAUA,UAAU,2BAEtB,qBAAKA,UAAU,gBAAf,SACE,sBAAMA,UAAU,kCAAhB,UAC+B,IAA5BP,KAAKL,MAAM0F,aACR,kBACA,8BAKZsH,UAAU,EACVjH,MAAOkH,IAAOC,QACdC,MAAO,kBACL,EAAKrM,SAAS,CACZoF,gBAAgB,EAChBR,cAAc,EACdqF,oBAAqB,MAGzBqC,eAAe,EACfC,eAAgBC,IAAUC,WAC1BC,cAAc,EACdC,QAAS,CAAEhK,OAAO,GA7BpB,SA+BE,qBAAK7C,UAAU,YAAf,UAC+B,IAA5BP,KAAKL,MAAM0F,aACV,cAACgI,EAAA,EAAD,CACEC,WAAYtN,KAAKR,MAAM+N,YAAYC,gBACnCC,iBAAkB,SAACzB,GACH,QAAVA,IACF,EAAKvL,SAAS,CAAEyE,gBAAiB8G,IACjC,EAAKjI,oBACH,EAAKpE,MAAM6H,kBACXwE,GACA,SAACtM,EAAiBgO,GAChB,EAAK5J,gBAAgBpE,GAChBsG,YAAgB0H,IACnB,EAAKlO,MAAMiG,eAAe,CACxBrC,MAAOsK,EACPhI,MAAOC,IAAgBM,aAK/B,EAAKxF,SAAS,CACZ4E,cAAc,EACdb,oBAAqB,SAI3BmJ,WAAW,EACXC,gBACE5N,KAAKL,MAAMuF,gBACPlF,KAAKL,MAAMuF,gBACX,SAGwB,IAA9BlF,KAAKL,MAAMkG,gBACY,OAAzB7F,KAAKR,MAAMS,UACX,cAAC4N,EAAA,EAAD,CAAW5B,KAAM6B,IAAYC,OACM,IAAjC/N,KAAKR,MAAMS,UAAW2B,OACxB,sBAAKrB,UAAU,0DAAf,UACE,cAAC,KAAD,CAAUA,UAAU,aACpB,sBAAKA,UAAU,4CAAf,UACE,uEACA,cAAC,IAAD,CACEyN,GAAG,IACHzN,UAAU,6DAFZ,2BASJ,qCACE,sBAAKA,UAAU,gBAAf,UACE,sBAAMA,UAAU,kCAAhB,qCAGA,uBACEsL,SAAU,SAACC,GAAD,OACR,EAAKrL,SAAS,CAAEiK,oBAAqBoB,EAAEC,OAAOC,SAEhDC,KAAK,OACL1L,UAAU,qCACV2L,YAAY,kBAGfI,YACCtM,KAAKR,MAAMS,UACXD,KAAKL,MAAM+K,qBACX7I,KAAI,SAACC,EAAMoB,GAAP,OACJ,qBAEE1C,QAAS,WAAO,IAAD,EACb,EAAKC,SAAS,CAAE+G,kBAAmB1F,IACnC,EAAKiC,oBACHjC,EACA,EAAKnC,MAAMuF,gBACP,EAAKvF,MAAMuF,gBACX,EAAKvF,MAAM2F,uBACf,SAAC5F,EAAiBgO,GAChB,EAAK5J,gBAAgBpE,GAChBsG,YAAgB0H,IACnB,EAAKlO,MAAMiG,eAAe,CACxBrC,MAAOsK,EACPhI,MAAOC,IAAgBM,aAK/B,EAAKxF,SAAS,CACZoF,gBAAgB,EAChB6E,oBAAqB,GACrBlG,oBAAqB,KACrBiD,aACE,YAAK9H,MAAM6H,yBAAX,eAA8BE,gBAC9B,2BACA,EAAK/H,MAAMuF,gBACP,EAAKvF,MAAMuF,gBAAiB/D,kBAC5B,EAAKxB,MAAM2F,sBACX,EAAK3F,MAAM2F,sBACRnE,kBACH,MAGVZ,UAAU,iHAlCZ,SAoCE,sBAAKA,UAAU,uBAAf,UACE,qBAAKA,UAAU,6BAAf,SACE,sBAAKA,UAAU,mCAAf,UACE,8BACE,cAAC,IAAD,CAAgBA,UAAU,yCAE5B,sBAAKA,UAAU,gBAAf,UACE,sBAAMA,UAAU,6CAAhB,SACGuB,EAAK4F,iBAER,uBAAMnH,UAAU,+BAAhB,0BACgB,IACd,sBACEA,UAAU,2BACV0N,MAAO,CAAEC,UAAW,UAFtB,SAIGpM,EAAKqM,gBAAgBC,uBAG1B,sBAAM7N,UAAU,2EAAhB,SAEIuB,EAAKsF,uBACFiB,mCAMb,qBAAK9H,UAAU,4CAAf,SACE,qBAAKA,UAAU,uCAAf,SACE,qBAAKA,UAAU,yCAAf,4BAjED2C,EAAM,aAiFe,OAAvClD,KAAKL,MAAM4K,0BACoC,IAA9CvK,KAAKL,MAAM4K,wBAAwB7K,QACjC,cAACgN,EAAA,EAAD,CACEtJ,MACE,qBAAK7C,UAAU,mCAAf,SAEE,sBAAKA,UAAU,gBAAf,UACE,uBAAMA,UAAU,wCAAhB,UAEIP,KAAKL,MAAM4K,wBAAwBgC,qBAChC7L,MACH,IAEAV,KAAKL,MAAM4K,wBAAwBgC,qBAChC5L,SAGP,sBAAKJ,UAAU,0EAAf,sBACY,IAERP,KAAKL,MAAM4K,wBAAwBgC,qBAChCjM,SAASoH,uBAMtBiF,UAAU,EACVjH,MAAOkH,IAAOC,QACdC,MAAO,kBAAM,EAAKrM,SAAS,CAAE8J,wBAAyB,QACtDwC,eAAe,EACfC,eAAgBC,IAAUC,WAC1BC,cAAc,EACdC,QAAS,CAAEhK,OAAO,GA/BpB,SAiC4B,OAAzBpD,KAAKR,MAAMS,UACV,sBAEA,cAAC,EAAD,CACEI,oBACEL,KAAKL,MAAM4K,wBAAwBgC,qBAErChK,KAAMvC,KAAKR,MAAM+C,KACjBtC,UAAWD,KAAKR,MAAMS,UACtBgC,gBAAiBjC,KAAKmG,oBAQI,OAAnCnG,KAAKL,MAAM6K,sBACgC,IAA1CxK,KAAKL,MAAM6K,oBAAoB9K,QAC7B,cAACgN,EAAA,EAAD,CACEtJ,MACE,qBAAK7C,UAAU,mCAAf,SAEE,sBAAKA,UAAU,gBAAf,UACE,sBAAMA,UAAU,mCAAhB,wCAGA,uBAAMA,UAAU,oCAAhB,wBACcP,KAAKL,MAAM6K,oBAAoBoB,WAAY,IADzD,iBAONe,UAAU,EACVjH,MAAOkH,IAAOC,QACdC,MAAO,kBAAM,EAAKrM,SAAS,CAAE+J,oBAAqB,QAClDuC,eAAe,EACfC,eAAgBC,IAAUoB,OAC1BlB,cAAc,EACdC,QAAS,CAAEhK,OAAO,GArBpB,SAuBE,sBAAK7C,UAAU,OAAf,UACE,sBAAKA,UAAU,0CAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,0CACA,uBACE0L,KAAK,OACL1L,UAAS,kDACPP,KAAKL,MAAMgL,WACsB,iBAAjC3K,KAAKL,MAAMgL,UAAU1C,QACjB,iBACA,kBAJG,aAMTiE,YAAY,qBACZF,MAAOhM,KAAKL,MAAM8H,YAClBoE,SAAU,SAACC,GACT,EAAKrL,SAAS,CACZkK,UAAW,KACXlD,YAAaqE,EAAEC,OAAOC,SAG1BL,SAAU3L,KAAKL,MAAMC,UAEtBI,KAAKL,MAAMgL,WACuB,iBAAjC3K,KAAKL,MAAMgL,UAAU1C,SACnB,sBAAM1H,UAAU,eAAhB,SACGP,KAAKL,MAAMgL,UAAU1F,SAI9B,sBAAK1E,UAAU,qBAAf,UACE,mDACA,qBAAKA,UAAU,0DAAf,SACGP,KAAKL,MAAM6I,cAAc3G,KAAI,SAACC,EAAM8G,GAAP,OAC5B,sBAEErI,UAAS,kCACP,EAAKwJ,gBAAgBjI,EAAKoB,KACtB,iBACA,sBAEN1C,QAAS,kBACP,EAAKuJ,gBAAgBjI,EAAKoB,MAC1B,EAAKyF,oBAAoB7G,EAAKoB,MAEhCE,MACG,EAAK2G,gBAAgBjI,EAAKoB,KAEvB,GADA,6BAbR,UAiBGpB,EAAKpC,OACJ,cAAC,IAAD,CAAYa,UAAU,0BAEtB,cAAC,IAAD,CAAwBA,UAAU,YAEpC,+BAAOuB,EAAKsB,UArBPwF,QAyBV5I,KAAKL,MAAMgL,WACuB,mBAAjC3K,KAAKL,MAAMgL,UAAU1C,SACnB,sBAAM1H,UAAU,eAAhB,SACGP,KAAKL,MAAMgL,UAAU1F,YAKhC,sBAAK1E,UAAU,iCAAf,UACE,sBACEA,UAAS,yCACTC,QAAS,kBACP,EAAKwJ,mBAAmB,EAAKrK,MAAMoJ,YAHvC,UAMG/I,KAAKL,MAAMoJ,UACV,cAAC,IAAD,CAAYxI,UAAU,0BAEtB,cAAC,IAAD,CAAwBA,UAAU,YAEpC,iDAGDP,KAAKL,MAAM+I,sBAAwB1I,KAAKL,MAAMC,SAC7C,cAAC0O,EAAA,EAAD,CACEC,SAAUvO,KAAKL,MAAM+I,oBACrB8F,SAAUxO,KAAKL,MAAM8H,YACrBgH,QAAQ,4B,GAhqCF/L,aA+rCfgM,EAAeC,aAlBJ,SAAC,GAUnB,IATJpM,EASG,EATHA,KACAqM,EAQG,EARHA,gBACArB,EAOG,EAPHA,YACArC,EAMG,EANHA,aAOA,MAAO,CACL3I,KAAMA,EACNtC,UAAW2O,EAAgBC,gBAC3BtB,cACArC,aAAcA,KAGmC,CACnDlG,kCACAQ,iCACA4F,6BACA3F,qBAJ0BkJ,CAKzB9K,I,uLCv2CGiL,E,kDACJ,WAAYtP,GAAkB,IAAD,8BAC3B,cAAMA,IAORuP,kBAAoB,kBAAM,EAAKvP,MAAMwP,eAAc,IARtB,EAS7BC,qBAAuB,kBAAM,EAAKzP,MAAMwP,eAAc,IANpD,EAAKrP,MAAQ,CACXC,SAAS,GAJgB,E,0CAW7B,WAGE,IAAwB,IAFAI,KAAKR,MAAM+C,KAAK2M,gBAGtC,OAAO,KAGT,IAAMC,EAAYnP,KAAKR,MAAM4P,OAAOC,WACpC,OACE,qBACE9O,UAAS,2DACO,IAAd4O,EAAqB,sBAAwB,uBADtC,kGADX,SAKGnP,KAAKR,MAAM8P,e,GA1BU3M,IAAMD,WAuCvB6I,EAAiBoD,aAPN,SAAC,GAIvB,MAAO,CAAEpM,KADuC,EAFhDA,KAGqB6M,OAD2B,EADhDA,UAKqD,CACrDG,eACAP,oBAF4BL,CAG3BG,GAwCUU,EAA2C,SAAC,GAKpC,IAAD,IAJlBpM,aAIkB,MAJV,GAIU,MAHlBqM,YAGkB,MAHXC,IAGW,MAFlBhE,cAEkB,aADlBjF,aACkB,MADV,EACU,EACZkJ,EAAcF,EACpB,OACE,0BACElP,UAAS,WACI,IAAXmL,EACI,mCACA,4BAHG,+HADX,UAOE,0BAASnL,UAAU,SAAnB,UACE,cAACoP,EAAD,CAAapP,UAAU,8BACvB,+BAAO6C,OAGRqD,EAAQ,EACP,sBAAMlG,UAAU,0DAAhB,SACGkG,IAED,U,yVCjHJmJ,EAAG,UAAMxL,IAAIyL,KAAV,qBAwFIC,EAAoB,SAAC9L,GAChC,8CAAO,WAAO+L,GAAP,eAAA9L,EAAA,6DACLD,GAAS,EAAM,IADV,SAGHgM,cAHG,SAIe9L,IAAMC,IAAN,UACbC,IAAIyL,KADS,oBAJf,OAIGtL,EAJH,OAOHG,QAAQC,IAAI,yDACZD,QAAQC,IAAIJ,GACZG,QAAQC,IAAI,yDACZoL,EAAkC,CAChC9D,KAAMgE,IAAYC,oBAClBC,QAAS5L,EAAIE,OAEfT,GAAS,EAAO,IAdb,kDAgBHU,QAAQC,IAAI,CAAEyL,WAAW,EAAD,KACxBpM,GAAS,EAAO+G,YAAY,EAAD,KAjBxB,0DAAP,uDAsBWsF,EAAuB,SAAC5L,GAInC,8CAAO,WAAOsL,GAAP,SAAA9L,EAAA,sDACL8L,EAAsC,CACpC9D,KAAMgE,IAAYK,wBAClBH,QAAS1L,IAHN,2CAAP,uDAUW8L,EAAgB,SAACvM,GAC5B,8CAAO,WAAO+L,GAAP,iBAAA9L,EAAA,6DACLD,GAAS,EAAM,IADV,SAGHgM,cAHG,SAIe9L,IAAMC,IAAN,UAObyL,EAPa,gBAJf,OAIGrL,EAJH,OAYCiM,EAAkCjM,EAAIE,KAAK5C,KAAI,SAAC4C,GAAD,MAAW,CAC5D0H,GAAI1H,EAAK0H,GACTsE,KAAMhM,EAAKrB,MACXF,IAAKuB,EAAKvB,IACVwN,UAAWjM,EAAKiM,cAElBX,EAA8B,CAC5B9D,KAAMgE,IAAYU,gBAClBR,QAASK,IAEXxM,GAAS,EAAO,GAAIwM,GAtBjB,kDAwBH9L,QAAQC,IAAI,CAAEyL,WAAW,EAAD,KACxBpM,GAAS,EAAO+G,YAAY,EAAD,KAzBxB,0DAAP,uDAgCW6F,EAAe,SAAC5M,GAC3B,8CAAO,WAAO+L,GAAP,eAAA9L,EAAA,6DACLD,GAAS,EAAM,IADV,SAGHgM,cAHG,SAIe9L,IAAMC,IAAN,UAA4BC,IAAIC,YAAhC,cAJf,OAIGE,EAJH,OAKHwL,EAA6B,CAC3B9D,KAAMgE,IAAYY,aAClBV,QAAS5L,EAAIE,OAEfT,GAAS,EAAO,IATb,kDAWHU,QAAQC,IAAI,CAAEyL,WAAW,EAAD,KACxBpM,GAAS,EAAO+G,YAAY,EAAD,KAZxB,0DAAP,uDAqCW+F,EAAiB,SAACrM,GAE7B,OADAC,QAAQC,IAAI,CAAEmM,eAAgBrM,IAC9B,uCAAO,WAAOsL,GAAP,SAAA9L,EAAA,sDACL8L,EAAsC,CACpC9D,KAAMgE,IAAYc,gBAClBZ,QAAS1L,IAHN,2CAAP,uDAQWuM,EAAkB,SAACvM,GAI9B,8CAAO,WAAOsL,GAAP,SAAA9L,EAAA,sDACL8L,EAAgC,CAC9B9D,KAAMgE,IAAYgB,iBAClBd,QAAS1L,IAHN,2CAAP,uDAQWe,EAA+B,SAC1CT,EACAf,GAEA,8CAAO,WAAO+L,GAAP,eAAA9L,EAAA,6DACLD,GAAS,EAAM,IADV,SAGHgM,cAHG,SAIe9L,IAAMC,IAAN,UACbC,IAAIC,YADS,uCACiCU,IALhD,OAIGR,EAJH,OAOHwL,EAA6B,CAC3B9D,KAAMgE,IAAYY,aAClBV,QAAS5L,EAAIE,OAEfT,GAAS,EAAO,GAAIO,EAAIE,MAXrB,kDAaHC,QAAQC,IAAI,CAAEyL,WAAW,EAAD,KACxBpM,GAAS,EAAO+G,YAAY,EAAD,KAdxB,0DAAP,wD,iCC3OF,0CA2CeuD,IA9BqC,SAAC,GAM9C,IALLC,EAKI,EALJA,SACAC,EAII,EAJJA,SAII,IAHJC,eAGI,MAHM,QAGN,MAFJlO,iBAEI,MAFQ,0IAER,MADJ2Q,gBACI,SAaJ,OACE,yBACE1Q,QAAS,SAACsL,GAAD,OAVO,SAACqF,EAAgB3C,GACnC,IACM4C,EAAK,CAAEC,OAAQ,CAAE5M,KADZ6M,QAAWC,cAAcJ,IACDK,WAAY,CAAC,SAC1CC,EAAcH,QAAWF,EAAI,CAAEM,SAAU,OAAQzF,KAAM,UACvDxH,EAAO,IAAIkN,KAAK,CAACF,GAAc,CAAExF,KAPvC,oFAQA2F,SAAiBnN,EAAM+J,EAPH,SAYFqD,CAAYtD,EAAUC,IACtCjO,UAAWA,EAFb,UAIG2Q,GAAY,cAAC,IAAD,IACZzC,O,+GCtCQ,MAA0B,oCCGzCqD,EAAQ,KAED,IAAMC,EAAa,SAACC,GACzB,IAAMC,EAAYD,EAAIE,SAASC,mBAE/BH,EAAII,QAAQ,YAAa,UACzBJ,EAAIK,YAAY,GAChB,IAAK,IAAItQ,EAAI,EAAGA,GAAKkQ,EAAWlQ,IAC9BiQ,EAAIM,QAAQvQ,GACZiQ,EAAIO,KACF,QAAUC,OAAOzQ,GAAK,OAASyQ,OAAOP,GACtCD,EAAIE,SAASO,SAASC,MAAQ,EAC9B,IACA,CACEC,MAAO,YAiBF7I,EAAW,uCAAG,WACzBT,EACAF,EACAyJ,GAHyB,6BAAA3O,EAAA,sDA8EzB,IAzEA2O,GAAS,GACH/I,EAAyBR,EAAeQ,YAC1CR,EAAeQ,YACf,IACAgJ,EAAkB,GACA,GACA,KAGlBb,EAAW,IAAIc,UAAMjJ,EAAa,KAAM,OAExCkJ,aAAa,GAAI,GAAI,IACzBf,EAAIK,YAAY,IAQhBL,EAAIgB,SAASC,EAAM,MAAO,GAAI,GAAI,GAAI,IACtCjB,EAAIO,KAAK,UAAW,GAAI,UAAMrQ,EAAW,QAEzC8P,EAAIK,YAAY,IAChBL,EAAIO,KACFlJ,EAAejG,MACf4O,EAAIE,SAASO,SAASS,WAAa,EACnC,UACAhR,EACA,UAGF8P,EAAIK,YAAY,IAChBL,EAAIO,KACFlJ,EAAeM,UACfqI,EAAIE,SAASO,SAASS,WAAa,EACnC,UACAhR,EACA,UAIFiR,EAAQnB,EAAIoB,gBACV/J,EAAeI,QACf4J,KAWFrB,EAAIK,YAAY,IAMZiB,EAAI,GAERtB,EAAIe,aAAa,GAAI,GAAI,IACzBf,EAAIO,KAAJ,UAAYlJ,EAAeG,aAA3B,MAA6CqJ,EAASS,GACtDZ,EAAQV,EAAIuB,aAAJ,UAAoBlK,EAAeG,aAAnC,OAORwI,EAAIe,aAAa,GAAI,GAAI,IAChBhR,EAAI,EAAGA,EAAIoR,EAAMvR,OAAQG,IAC5BuR,EAAI,MACNA,EAAI,GACJtB,EAAIwB,WAGNxB,EAAIO,KAAKY,EAAMpR,GAAI8Q,EAAUH,EAAOY,GACpCA,GAAQ,EArFe,OAuFzBtB,EAAIe,aAAa,GAAI,GAAI,IACzBf,EAAIO,KAAK,WAAYM,EAASS,EAAI,GAClCZ,EAAQV,EAAIuB,aAAa,YACzBvB,EAAIe,aAAa,GAAI,GAAI,IACzBf,EAAIO,KAAKlJ,EAAejI,OAAQyR,EAAUH,EAAOY,EAAI,GAErDtB,EAAIyB,UAAU,CACZC,KAAMvK,EACNwK,OAAQ,GACRC,OAAQ,CAAEC,WAAY,IACtBC,YAAa,EAEbC,UAAW,GAEXC,WAAY,CAAEC,OAAQ,OACtBC,aAAc,CAAEnT,MAAO,CAAEoT,UAAW,SACpCzO,MAAO,UACP0O,YAAY,IAGdpC,EAAIK,YAAY,IACZgC,EAASrC,EAAIsC,cAAcD,OAC/BrC,EAAIO,KAAJ,uBAAyBlJ,EAAeC,QAAUuJ,EAASwB,EAAS,IACpErC,EAAIO,KACF,wBAA0B9F,aAAK,IAAIpL,MAAOE,YAC1CsR,EACAwB,EAAS,IAGXtC,EAAWC,GApHc,UAqHnBA,EACHuC,KADG,UAGAlL,EAAejG,MACf,KACAiG,EAAeI,QACf,KACAJ,EAAejI,OAPf,QASF,CAAEoT,eAAe,IAElBC,KAAK7B,GAAS,IAhIQ,4CAAH,2D,iHCKlBvF,EAAgB,SAAC7N,GACrB,IAKE4B,EACAsT,EANF,EAAwCC,mBACtC,MADF,mBAAOC,EAAP,KAAqBC,EAArB,KAGA,EAA4BF,mBAAiB,IAA7C,mBAAOG,EAAP,KAAeC,EAAf,KAQA,OACE,sBAAKxU,UAAU,GAAf,UACE,qBAAKA,UAAU,OAAf,SACE,uBACEsL,SAAU,SAACC,GAAD,OACRiJ,EAAUjJ,EAAEC,OAAOC,QAErBC,KAAK,OACL1L,UAAU,uDACV2L,YAAY,uBACZP,SAA+B,OAArBnM,EAAM8N,YAAmD,IAA5B9N,EAAM8N,WAAW1L,WAI5D,qBAAKrB,UAAU,uCAAf,SACwB,OAArBf,EAAM8N,WACL,cAAC,IAAD,IAC8B,IAA5B9N,EAAM8N,WAAW1L,OACnB,sBAAKrB,UAAU,6EAAf,UACE,cAAC,KAAD,CAAUA,UAAU,aACpB,qBAAKA,UAAU,4CAAf,SACE,0DAIJ,oCACGf,EAAMmO,WACL,sBACEpN,UAAS,yBACmB,QAA1Bf,EAAMoO,gBACF,6BACA,yBAHG,wHADX,UAOE,sBAAKrN,UAAU,mCAAf,UAC6B,QAA1Bf,EAAMoO,gBACL,cAAC,IAAD,CAAerN,UAAS,2BAExB,cAAC,KAAD,CACEA,UAAS,2BAGb,qBAAKA,UAAU,gBAAf,SACE,qBAAKA,UAAS,0BAAd,8BAGJ,qBACEC,QAAS,WACPhB,EAAMiO,iBAAiB,QAEzBlN,UAAU,yHAJZ,wBApDZa,EA8DmB5B,EAAM8N,WA7DzBoH,EA6DqCI,EA3D9BxI,YAAWlL,EAAQsT,IA2DmB7S,KAAI,SAACC,EAAMC,GAAP,OACvC,qBAEExB,UAAS,yBACmB,QAA1Bf,EAAMoO,iBACNpO,EAAMoO,gBAAgBtJ,MAAQxC,EAAKwC,IAC/B,6BACA,yBAJG,+CAFX,SASE,sBAAK/D,UAAU,4EAAf,UACE,sBAAKA,UAAU,mCAAf,UAC6B,QAA1Bf,EAAMoO,iBACPpO,EAAMoO,gBAAgBtJ,MAAQxC,EAAKwC,IACjC,cAAC,IAAD,CAAe/D,UAAS,2BAExB,cAAC,KAAD,CACEA,UAAS,2BAGb,sBAAKA,UAAU,gBAAf,UACE,qBACEA,UAAS,UACmB,QAA1Bf,EAAMoO,iBACNpO,EAAMoO,gBAAgBtJ,MAAQxC,EAAKwC,IAC/B,gBACA,gBAJG,cADX,SAQGxC,EAAKX,oBAER,sBAAKZ,UAAU,wBAAf,UACE,4CACA,sBACEA,UAAS,WACY,IAAnBuB,EAAKsD,UACD,oCACA,wBAJR,UAOsB,IAAnBtD,EAAKsD,UAAqB,SAAW,qBAK9C,sBAAK7E,UAAU,mCAAf,WACqB,OAAjBqU,GACAA,EAAatQ,MAAQxC,EAAKwC,MAC1B,qBACE9D,QAAS,kBAAMqU,EAAgB/S,IAC/BvB,UAAU,4HAFZ,qBAOF,qBACEC,QAAS,WACPhB,EAAMiO,iBAAiB3L,IAEzBvB,UAAU,yHAJZ,oBAQkB,OAAjBqU,GAAyBA,EAAatQ,MAAQxC,EAAKwC,KAClD,qBACE9D,QAAS,kBAAMqU,EAAgB,OAC/BtU,UAAU,yHAFZ,0BA9DDwB,EAAI,eAsHVY,QAAMC,KAAKyK,I","file":"static/js/30.f36655d2.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { FaRegUserCircle, FaSuitcase } from \"react-icons/fa\";\nimport { GrStatusInfo } from \"react-icons/gr\";\nimport {\n  AdminApplicationsList,\n  ApplicationStatesDescription,\n} from \"../../../interfaces/application\";\nimport noImage from \"../../../assets/profile.png\";\nimport DisplayCompetence from \"../../Positions/DisplayCompetence\";\nimport PositionDetails from \"../../CandidateApplication/ApplicationComponents/PositionDetails\";\nimport { Auth } from \"../../../actions\";\nimport { PositionAPI } from \"../../../interfaces\";\n\nenum tabs {\n  profile = \"profile\",\n  position = \"position\",\n}\ninterface ApplicationDetailsProps {\n  selectedApplication: AdminApplicationsList;\n  auth: Auth;\n  positions: PositionAPI[];\n  getDistrictName: (district_code: string) => string;\n}\n\ninterface ApplicationDetailsState {\n  loading: boolean;\n  tab: tabs;\n}\n\nclass ApplicationDetails extends Component<\n  ApplicationDetailsProps,\n  ApplicationDetailsState\n> {\n  constructor(props: ApplicationDetailsProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      tab: tabs.profile,\n    };\n  }\n  tabStatusClass = (status: boolean) => {\n    return status === true\n      ? \"col-span-6 bg-white py-2 px-3 cursor-pointer text-lg bg-blue-600 text-white rounded-md font-bold flex flex-row items-center justify-start bg-blue-50 gap-3 animate__animated animate__fadeIn\"\n      : \"col-span-6 bg-white bg-blue-50 hover:bg-blue-100 py-2 px-3 cursor-pointer text-lg border-b-4 border-blue-200 text-gray-600 hover:text-blue-700 flex flex-row items-center justify-start gap-3\";\n  };\n  render() {\n    const selectedPosition = this.props.positions.find(\n      (itm) =>\n        itm.position_id === this.props.selectedApplication.position.position_id\n    );\n\n    return (\n      <div className=\"px-2 py-2 border-t\">\n        {/* Tabs */}\n        <div className=\"rounded grid md:grid-cols-12\">\n          <div\n            onClick={() => this.setState({ tab: tabs.profile })}\n            className={`${\n              this.state.tab === tabs.profile\n                ? this.tabStatusClass(true)\n                : this.tabStatusClass(false)\n            }`}\n          >\n            <FaRegUserCircle className=\"text-3xl\" />\n            Application details\n          </div>\n          <div\n            onClick={() => this.setState({ tab: tabs.position })}\n            className={`${\n              this.state.tab === tabs.position\n                ? this.tabStatusClass(true)\n                : this.tabStatusClass(false)\n            }`}\n          >\n            <FaSuitcase className=\"text-3xl\" />\n            Position details\n          </div>\n        </div>\n        {/* Tab contents */}\n        <div className=\"border rounded px-4 py-4 mt-3\">\n          {this.state.tab === tabs.profile ? (\n            <div className=\"grid md:grid-cols-12\">\n              <div className=\"col-span-6\">\n                <div className=\"text-2xl font-bold mb-6\">\n                  General information\n                </div>\n                {/* <div className=\"\">\n                  <div className=\"px-2 py-2\">\n                    <img\n                      src={noImage}\n                      alt=\"\"\n                      className=\"h-28 w-28 rounded-full mb-2\"\n                    />\n                  </div>\n                </div> */}\n                <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                  <span className=\"text-gray-500\">First name: </span>\n                  <span className=\"font-bold\">\n                    {this.props.selectedApplication.fname}\n                  </span>\n                </div>\n                <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                  <span className=\"text-gray-500\">Last name: </span>\n                  <span className=\"font-bold\">\n                    {this.props.selectedApplication.lname}\n                  </span>\n                </div>\n                <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                  <span className=\"text-gray-500\">National ID: </span>\n                  <span className=\"font-bold\">\n                    {this.props.selectedApplication.n_id}\n                  </span>\n                </div>\n                <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                  <span className=\"text-gray-500\">Gender: </span>\n                  <span className=\"font-bold\">\n                    {this.props.selectedApplication.sex}\n                  </span>\n                </div>\n                <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                  <span className=\"text-gray-500\">Phone number: </span>\n                  <span className=\"font-bold\">\n                    {this.props.selectedApplication.phone_number}\n                  </span>\n                </div>\n                <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                  <span className=\"text-gray-500\">Email: </span>\n                  <span className=\"font-bold\">\n                    {this.props.selectedApplication.email}\n                  </span>\n                </div>\n                <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                  <span className=\"text-gray-500\">Resident district: </span>\n                  <span className=\"font-bold\">\n                    {this.props.selectedApplication.residence.district_name}\n                  </span>\n                </div>\n              </div>\n              {/* Application details */}\n              <div className=\"col-span-6\">\n                <div className=\"mb-4 font-extrabold text-2xl\">\n                  Application details\n                </div>\n                <div className=\"flex flex-col w-full rounded-md bg-gray-100 hover:bg-blue-100 p-3\">\n                  <span className=\"text-gray-500\">Application session</span>\n                  <span className=\"font-bold uppercase\">\n                    {\n                      this.props.selectedApplication.application_session\n                        .session_plan_name\n                    }\n                    ({this.props.selectedApplication.application_session.period}\n                    )\n                  </span>\n                </div>\n                <div className=\"flex flex-col w-full rounded-md bg-gray-100 hover:bg-blue-100 p-3 mt-2\">\n                  <span className=\"text-gray-500\">Application date</span>\n                  <span className=\"font-bold\">\n                    {new Date(\n                      this.props.selectedApplication.createdAt\n                    ).toString()}\n                  </span>\n                </div>\n                <div className=\"flex flex-col w-full rounded-md bg-gray-100 hover:bg-blue-100 p-3 mt-2\">\n                  <span className=\"text-gray-500\">Application status</span>\n                  <span className=\"font-bold uppercase\">\n                    {this.props.selectedApplication.application_status}\n                  </span>\n                </div>\n              </div>\n              <div className=\"col-span-12\">\n                <div className=\"flex flex-col w-full mt-2 gap-3 border-2 border-blue-600 rounded-md p-4\">\n                  <div className=\"text-2xl font-extrabold -mt-2\">\n                    Placement Preferences\n                  </div>\n                  <div className=\"grid grid-cols-12 gap-3\">\n                    {this.props.selectedApplication.contract === null ? (\n                      <div className=\"col-span-12 bg-red-100 px-3 py-2 text-left w-full text-yellow-700\">\n                        No preferences found!\n                      </div>\n                    ) : this.props.selectedApplication.contract.district.values\n                        .length === 0 ? (\n                      <div className=\"col-span-12 bg-green-100 text-green-800 font-bold px-3 py-2 rounded\">\n                        All districts\n                      </div>\n                    ) : (\n                      this.props.selectedApplication.contract.district.values.map(\n                        (item, i) => (\n                          <div\n                            className={`${\n                              this.props.selectedApplication.contract !==\n                                null &&\n                              this.props.selectedApplication.contract.district\n                                .strict === false\n                                ? \"col-span-4\"\n                                : \"col-span-6\"\n                            } flex flex-row items-center gap-2`}\n                            key={i + 1}\n                          >\n                            <div>\n                              <div className=\"h-8 w-8 rounded-full bg-blue-600 text-white flex items-center justify-center\">\n                                {i + 1}\n                              </div>\n                            </div>\n                            <div>{this.props.getDistrictName(item)}</div>\n                          </div>\n                        )\n                      )\n                    )}\n                    {this.props.selectedApplication.contract !== null &&\n                      this.props.selectedApplication.contract.district\n                        .strict === false && (\n                        <div className=\"col-span-4\">\n                          <div className=\"bg-yellow-100 text-yellow-900 rounded-full px-2 w-max mt-1 font-bold\">\n                            And other districts\n                          </div>\n                        </div>\n                      )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          ) : (\n            selectedPosition !== undefined && (\n              <PositionDetails\n                positionDetails={selectedPosition}\n                cancel={() => {}}\n                apply={() => {}}\n                auth={this.props.auth}\n                showRegister={(status: boolean) => {}}\n                hideTools={true}\n              />\n            )\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default React.memo(ApplicationDetails);\n","import axios from \"axios\";\nimport React, { Component, Fragment } from \"react\";\nimport { BiExport, BiFilterAlt, BiSort } from \"react-icons/bi\";\nimport { FiEdit } from \"react-icons/fi\";\nimport { ImFilesEmpty } from \"react-icons/im\";\nimport {\n  MdCheckBox,\n  MdCheckBoxOutlineBlank,\n  MdHistory,\n  MdRadioButtonChecked,\n  MdRadioButtonUnchecked,\n  MdSearch,\n} from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport searchData from \"../../../utils/search\";\nimport {\n  Auth,\n  schoolLevelsStoreInterface,\n  loadEducationCategories,\n  PushPopupAlert,\n  LocationAPI,\n  FC_getLocations,\n} from \"../../../actions\";\nimport { FC_GetAllSessionByInstitution } from \"../../../actions/session\";\nimport { FC_GetPositionsByInstitution } from \"../../../actions/settings\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport {\n  reportSettingsInterface,\n  generatePDF,\n} from \"../../../components/DownloadPDF/rest\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport {\n  SideNavigation,\n  MainItem,\n} from \"../../../components/Navigation/SideNavigation\";\nimport {\n  education_category,\n  PositionAPI,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport {\n  ApplicationStates,\n  AdminApplicationsList,\n  ApplicationStatesReport,\n} from \"../../../interfaces/application\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { SessionPlanReducerInterface } from \"../../../reducers/session\";\nimport {\n  capitalizeFirstLetter,\n  capitalizeFirstWord,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { AdminApplicationsToPrintInterface } from \"../../../shared/interfaces\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { DATE, FC_HasInstitute, sortThisArray } from \"../../../utils/functions\";\nimport { IoIosBriefcase } from \"react-icons/io\";\nimport { IoFilter } from \"react-icons/io5\";\nimport { Link } from \"react-router-dom\";\nimport LoadingV2, { LoadingType } from \"../../../components/Loading/LoadingV2\";\nimport Modal, { Themes, ModalSize } from \"../../../components/Modal/Modal\";\nimport ChooseSession from \"../../SessionSettings/ChooseSession\";\nimport ApplicationDetails from \"./ApplicationDetails\";\nimport ExportToExcel from \"../../../utils/ExportToExcel\";\n\nexport const ignoreThisApplicationStatus: ApplicationStates[] = [\n  ApplicationStates.Failed,\n  ApplicationStates.Pass,\n  // ApplicationStates.Rejected,\n];\n\nexport enum reportContentKeyInterface {\n  \"No\" = \"No\",\n  \"Names\" = \"Names\",\n  \"Gender\" = \"Gender\",\n  \"NationalID\" = \"NationalID\",\n  \"Email\" = \"Email\",\n  \"Phone\" = \"Phone\",\n  \"Residence\" = \"Residence\",\n  \"Session\" = \"Session\",\n  \"Institution\" = \"Institution\",\n  \"Date\" = \"Date\",\n  \"Decision\" = \"Decision\",\n  \"Position\" = \"Position\",\n  \"Preferences\" = \"Preferences\",\n}\n\nexport interface reportContentInterface {\n  key: reportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n\nconst defaultReportContent: reportContentInterface[] = [\n  {\n    key: reportContentKeyInterface.Names,\n    title: \"Applicant Names\",\n    status: true,\n  },\n  {\n    key: reportContentKeyInterface.NationalID,\n    title: \"National ID\",\n    status: true,\n  },\n  { key: reportContentKeyInterface.Gender, title: \"Gender\", status: true },\n  { key: reportContentKeyInterface.Phone, title: \"Phone\", status: true },\n  {\n    key: reportContentKeyInterface.Session,\n    title: \"Application Period\",\n    status: true,\n  },\n  {\n    key: reportContentKeyInterface.Institution,\n    title: \"Education Institute\",\n    status: true,\n  },\n  {\n    key: reportContentKeyInterface.Date,\n    title: \"Application Date\",\n    status: true,\n  },\n  { key: reportContentKeyInterface.Decision, title: \"Decision\", status: true },\n  {\n    key: reportContentKeyInterface.Position,\n    title: \"Position Title\",\n    status: true,\n  },\n  {\n    key: reportContentKeyInterface.Preferences,\n    title: \"Preferences\",\n    status: true,\n  },\n];\n\ninterface loadAllApplicationsProps {\n  auth: Auth;\n  positions: PositionAPI[] | null;\n  sessionPlan: SessionPlanReducerInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n\n  FC_GetAllSessionByInstitution: Function;\n\n  FC_GetPositionsByInstitution: Function;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface loadAllApplicationsState {\n  loading: boolean;\n  selectedEducationCategory: education_category | \"all\";\n  defaultSelectedPeriod: SessionPlanInterface | null;\n  applicationListData: AdminApplicationsList[] | null;\n  selectedApplicationStatus: ApplicationStates | \"ALL\" | null;\n  selected_period: SessionPlanInterface | null;\n  selectPosition: boolean;\n  selectPeriod: boolean;\n  applicationDetailsModal: {\n    selected_application: AdminApplicationsList;\n    status: boolean;\n  } | null;\n  generateReportModal: {\n    reportType: \"EXCEL\" | \"PDF\";\n    status: boolean;\n  } | null;\n  searchInput: string | \"\";\n  searchPositionInput: string | \"\";\n  applicationsToPrint: AdminApplicationsToPrintInterface[] | null;\n  reportTitle: string;\n  reportContent: reportContentInterface[];\n  selectAll: boolean;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  sortProperty: string;\n  isSorted: boolean;\n  sortOrder: \"ASC\" | \"DESC\";\n  downloading: boolean;\n  selected_position: PositionAPI | null;\n  districts: LocationAPI | null;\n}\n\nclass _Applications extends Component<\n  loadAllApplicationsProps,\n  loadAllApplicationsState\n> {\n  constructor(props: loadAllApplicationsProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      defaultSelectedPeriod: null,\n      selectedEducationCategory: \"all\",\n      selectedApplicationStatus: \"ALL\",\n      applicationListData: null,\n      selectPosition: false,\n      selectPeriod: false,\n      applicationDetailsModal: null,\n      generateReportModal: null,\n      searchInput: \"\",\n      searchPositionInput: \"\",\n      reportTitle: \"Application Report\",\n      selectAll: true,\n      applicationsToPrint: null,\n      formError: null,\n      reportContent: defaultReportContent,\n      sortProperty: \"\",\n      isSorted: false,\n      sortOrder: \"ASC\",\n      selected_period: null,\n      downloading: false,\n      selected_position: null,\n      districts: null,\n    };\n  }\n\n  setLoadingState = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  loadAllApplications = async (\n    position: PositionAPI | null,\n    period: SessionPlanInterface | null,\n    callback: (loading: boolean, msg: string) => void\n  ) => {\n    if (position !== null && period !== null) {\n      callback(true, \"\");\n      try {\n        const res = await axios.get<AdminApplicationsList[]>(\n          `${API.APPLICATION}/apply/${position.position_id}/${period._id}`\n        );\n        this.setState({ applicationListData: res.data });\n        console.log(\"applicationListData: \", res);\n        callback(false, \"\");\n      } catch (error: any) {\n        console.error({ error_found: error });\n        // callback(false, errorToText(error));\n      }\n    }\n  };\n\n  FD_GetSessions = (institution_id: string) => {\n    this.props.FC_GetAllSessionByInstitution(\n      institution_id,\n      (status: boolean, msg: string, data?: SessionPlanInterface[]) => {\n        this.setLoadingState(status);\n        if (!status) {\n          if (data && data.length > 0) {\n            if (this.state.selected_period === null) {\n              let active_period = data.find((item) => item.is_active);\n              if (active_period) {\n                this.setState({ selected_period: active_period });\n                this.setState({\n                  selectPeriod: false,\n                  defaultSelectedPeriod: active_period,\n                });\n              } else if (data.length > 0) {\n                active_period = data[data.length - 1];\n                this.setState({ selected_period: active_period });\n                this.setState({\n                  selectPeriod: false,\n                  defaultSelectedPeriod: active_period,\n                });\n              } else {\n                this.setState({ selectPeriod: true });\n              }\n            }\n          }\n        }\n      }\n    );\n  };\n\n  FC_OnInstitutionChanged = (institution_id: string) => {\n    // LOAD POSITIONS BY INSTITUTION =================\n    this.props.FC_GetPositionsByInstitution(\n      institution_id,\n      (status: boolean, msg: string) => {\n        this.setLoadingState(status);\n        console.log({ status: status, msg: msg });\n        if (msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        } else if (status === false) {\n          this.setState({ selectPosition: true });\n        }\n      }\n    );\n\n    // LOAD SESSION BY INSTITUTION =================\n    this.props.FC_GetAllSessionByInstitution(\n      institution_id,\n      (\n        status: boolean,\n        errorMsg: string,\n        sessionData: SessionPlanInterface[]\n      ) => {\n        this.setLoadingState(status);\n        if (!status) {\n          if (!isEmptyOrSpaces(errorMsg)) {\n            this.props.PushPopupAlert({\n              title: errorMsg,\n              theme: PopupAlertTheme.warning,\n            });\n          }\n\n          if (sessionData && sessionData.length > 0) {\n            let activeSession = sessionData.find((item) => item.is_active);\n            if (activeSession) {\n              this.setState({ selected_period: activeSession });\n              // if (this.state.reportMainData === null) {\n              //   this.loadReportMainData(activeSession);\n              // }\n            } else {\n              this.setState({ selectPeriod: true });\n            }\n          }\n        }\n      }\n    );\n  };\n\n  GetDistrictName = (district_code: string): string => {\n    let district = this.state.districts?.districts.find(\n      (itm) => itm.district_code.toString() === district_code.toString()\n    );\n    if (district === undefined) {\n      return \"\";\n    } else {\n      return district.district_name;\n    }\n  };\n\n  componentDidMount() {\n    // Get location\n    if (this.state.districts === null) {\n      this.setState({ loading: true });\n      FC_getLocations(\n        (error: boolean, locations: LocationAPI | null, msg: string) => {\n          if (locations !== null) {\n            this.setState({\n              districts: locations,\n              loading: false,\n            });\n          } else {\n            if (error === false) {\n              alert(errorToText(error));\n              this.setState({ loading: false, districts: null });\n            }\n          }\n        }\n      );\n    }\n    if (FC_HasInstitute(this.props.auth.education_institution_id) === true) {\n      this.FC_OnInstitutionChanged(this.props.auth.education_institution_id!);\n    } else {\n      if (\n        this.props.schoolLevels.education_categories === null ||\n        this.props.schoolLevels.education_categories.length\n      ) {\n        this.props.loadEducationCategories(\n          (status: boolean, data?: education_category[]) => {\n            this.setLoadingState(status);\n            if (!status && data && data.length > 0) {\n              this.setState({ selectedEducationCategory: data[0] });\n              if (\n                FC_HasInstitute(this.props.auth.education_institution_id) ===\n                false\n              ) {\n                this.FC_OnInstitutionChanged(data[0].education_institute_id);\n              } else {\n                this.FC_OnInstitutionChanged(\n                  this.props.auth.education_institution_id!\n                );\n              }\n            }\n          }\n        );\n      } else if (!this.props.schoolLevels.selectedEducationCategory) {\n        this.setState({\n          selectedEducationCategory:\n            this.props.schoolLevels.education_categories[0],\n        });\n        this.FC_OnInstitutionChanged(\n          this.props.schoolLevels.education_categories[0].education_institute_id\n        );\n      }\n    }\n  }\n\n  componentDidUpdate(\n    prevProps: loadAllApplicationsProps,\n    prevState: loadAllApplicationsState\n  ) {\n    if (prevState.loading !== this.state.loading) {\n      // UPDATE APPLICATION LIST FOR UPDATE ==============================\n      this.updateApplicationToPrint();\n    }\n  }\n\n  AdminApplicationStatuses = (\n    application: AdminApplicationsList[]\n  ): { title: string; count: number; status: ApplicationStates | \"ALL\" }[] => {\n    let output: {\n      title: string;\n      count: number;\n      status: ApplicationStates | \"ALL\";\n    }[] = [{ title: \"All\", count: application.length, status: \"ALL\" }];\n    for (let i in ApplicationStatesReport) {\n      if (\n        !ignoreThisApplicationStatus.includes(ApplicationStatesReport[i].key)\n      ) {\n        output.push({\n          title: ApplicationStatesReport[i].caption,\n          count: application.filter(\n            (itm) => itm.application_status === ApplicationStatesReport[i].key\n          ).length,\n          status: ApplicationStatesReport[i].key,\n        });\n      }\n    }\n    // console.log(\"=================AdminApplicationStatuses===================\");\n    // console.log({ output, application });\n    // console.log(\"=================AdminApplicationStatuses===================\");\n    return output;\n  };\n\n  filteredApplications = (\n    applications: AdminApplicationsList[] | null,\n    Status: ApplicationStates | \"ALL\" | null,\n    education_category: education_category | \"all\"\n  ) => {\n    let appl: AdminApplicationsList[] | null = applications;\n    if (education_category !== \"all\" && applications !== null) {\n      appl = applications.filter(\n        (itm) =>\n          itm.position.education_institute_id.education_institute_id ===\n          education_category.education_institute_id\n      );\n    }\n    if (Status === null || Status === \"ALL\") {\n      return appl;\n    } else {\n      if (appl === null) {\n        return appl;\n      } else {\n        return appl.filter((item) => item.application_status === Status);\n      }\n    }\n  };\n\n  setDownloading = (status: boolean) => {\n    this.setState({ downloading: status });\n  };\n\n  updateApplicationToPrint = () => {\n    if (this.state.selected_position)\n      this.setState({\n        reportTitle: this.state.selected_position.position_title,\n      });\n    if (this.state.applicationListData) {\n      let arrayNew: AdminApplicationsToPrintInterface[] = [];\n      let n: number = 1;\n      for (const key in this.state.applicationListData) {\n        if (\n          Object.prototype.hasOwnProperty.call(\n            this.state.applicationListData,\n            key\n          )\n        ) {\n          const element = this.state.applicationListData[key];\n          let dataArray: AdminApplicationsToPrintInterface = {\n            No: n,\n            Names: element.fname + \" \" + element.lname,\n            NationalID: element.n_id,\n            Gender: element.sex === \"M\" ? \"Male\" : \"Female\",\n            Position: element.position.position_title,\n            Phone: element.phone_number,\n            Email: element.email,\n            Institution:\n              element.position.education_institute_id.education_category_title,\n            Session: element.application_session.session_plan_name,\n            Residence: element.residence.district_name,\n            Preferences: `${\n              element.contract === null\n                ? \"\"\n                : element.contract.district.values?.length === 0\n                ? \"All districts\"\n                : element.contract.district.values.map((val) => {\n                    return `${this.GetDistrictName(val)}`;\n                  })\n            }${\n              element.contract !== null &&\n              element.contract.district.strict === false &&\n              element.contract.district.values.length > 0\n                ? \", and other districts\"\n                : \"\"\n            }`,\n            Date: new Date(element.createdAt).toString(),\n            Decision: element.application_status,\n          };\n\n          for (const key in this.state.reportContent) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                this.state.reportContent,\n                key\n              )\n            ) {\n              if (!this.state.reportContent[key].status) {\n                delete dataArray[this.state.reportContent[key].key];\n              }\n            }\n          }\n          arrayNew.push(dataArray);\n          n++;\n        }\n      }\n      if (\n        this.state.selectedApplicationStatus !== null &&\n        this.state.selectedApplicationStatus !== \"ALL\"\n      )\n        arrayNew = arrayNew.filter(\n          (item) => item.Decision === this.state.selectedApplicationStatus\n        );\n      this.setState({ applicationsToPrint: arrayNew });\n      arrayNew = [];\n      n = 1;\n      // this.props.applicationsToPrint=;\n    }\n  };\n\n  updateReportContent = (key: reportContentKeyInterface) => {\n    let index: number = this.state.reportContent.findIndex(\n      (item) => item.key === key\n    );\n    let newArray: reportContentInterface[] = this.state.reportContent;\n    newArray[index].status = !newArray[index].status;\n    this.setState({ reportContent: newArray });\n    let isSelectAllNeeded = newArray.find((item) => item.status === false);\n    if (isSelectAllNeeded) {\n      this.setState({ selectAll: false });\n    } else {\n      this.setState({ selectAll: true });\n    }\n\n    // UPDATE APPLICATION LIST FOR UPDATE ==============================\n    this.updateApplicationToPrint();\n  };\n\n  generateThisPDF = () => {\n    if (!document.querySelectorAll(\"#report_content tbody tr\").length) {\n      this.props.PushPopupAlert({\n        title: `Can't generate Report of empty Data`,\n        theme: PopupAlertTheme.warning,\n      });\n      return false;\n    }\n\n    if (this.state.selected_position && this.state.selected_period) {\n      const table: HTMLElement | null =\n        document.getElementById(\"report_content\");\n      const reportSettings: reportSettingsInterface = {\n        doneBy: this.props.auth.user.fname + \" \" + this.props.auth.user.lname,\n        title: \"Applications Report\",\n        subjectTitle: \"Position\",\n        subject: this.state.selected_position.position_title,\n        period: this.state.selected_period.session_plan_name,\n        footer: \"Online Recruitment\",\n        institute:\n          this.state.selectedEducationCategory === \"all\"\n            ? \"All institute\"\n            : this.state.selectedEducationCategory.education_category_title,\n        orientation: \"l\",\n      };\n      console.log(\"====================================\");\n      console.log({ table });\n      console.log(\"====================================\");\n      table && generatePDF(reportSettings, table, this.setDownloading);\n    }\n  };\n\n  isChangeAllowed = (key: reportContentKeyInterface): boolean => {\n    if (\n      key === reportContentKeyInterface.Names ||\n      key === reportContentKeyInterface.Decision ||\n      key === reportContentKeyInterface.Session\n    ) {\n      return false;\n    }\n    return true;\n  };\n\n  resetReportContent = (currentState: boolean) => {\n    let newArray: reportContentInterface[] = this.state.reportContent;\n    for (const key in newArray) {\n      if (this.isChangeAllowed(newArray[key].key)) {\n        newArray[key].status = !currentState;\n      }\n    }\n\n    this.setState({\n      reportContent: newArray,\n      selectAll: !currentState,\n    });\n\n    this.updateApplicationToPrint();\n  };\n\n  setSort = (thisProperty: string) => {\n    if (\n      this.state.sortProperty === thisProperty &&\n      this.state.sortOrder === \"ASC\"\n    ) {\n      this.setState({\n        sortProperty: thisProperty,\n        isSorted: true,\n        sortOrder: \"DESC\",\n      });\n    } else {\n      this.setState({\n        sortProperty: thisProperty,\n        isSorted: true,\n        sortOrder: \"ASC\",\n      });\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <SideNavigation>\n          {FC_HasInstitute(this.props.auth.education_institution_id) ===\n            false && (\n            <div className=\"flex flex-col mb-4\">\n              <span className=\"text-sm text-gray-600 mb-2\">\n                Education categories:\n              </span>\n              {this.props.schoolLevels.education_categories === null ? (\n                <Loading />\n              ) : this.props.schoolLevels.education_categories.length === 0 ? (\n                <span>No result found</span>\n              ) : (\n                <section>\n                  {/* <div\n                    onClick={() => {\n                      this.setState({ selectedEducationCategory: \"all\" });\n                    }}\n                    className={`border rounded px-2 py-2 mb-2 cursor-pointer ${\n                      this.state.selectedEducationCategory === \"all\"\n                        ? \"bg-blue-600 text-white hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                        : \"hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                    } font-bold flex flex-row items-center gap-2`}\n                  >\n                    {this.state.selectedEducationCategory === \"all\" ? (\n                      <MdRadioButtonChecked />\n                    ) : (\n                      <MdRadioButtonUnchecked />\n                    )}\n                    <span>ALL</span>\n                  </div> */}\n                  {this.props.schoolLevels.education_categories.map(\n                    (item, i) => (\n                      <div\n                        onClick={() => {\n                          this.setState({ selectedEducationCategory: item });\n                          this.FC_OnInstitutionChanged(\n                            item.education_institute_id\n                          );\n                        }}\n                        key={i + 1}\n                        className={`border rounded px-2 py-2 mb-2 cursor-pointer ${\n                          this.state.selectedEducationCategory !== \"all\" &&\n                          this.state.selectedEducationCategory\n                            .education_institute_id ===\n                            item.education_institute_id\n                            ? \"bg-blue-600 text-white hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                            : \"hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                        } font-bold flex flex-row items-center gap-2`}\n                      >\n                        {this.state.selectedEducationCategory !== \"all\" &&\n                        this.state.selectedEducationCategory\n                          .education_institute_id ===\n                          item.education_institute_id ? (\n                          <MdRadioButtonChecked />\n                        ) : (\n                          <MdRadioButtonUnchecked />\n                        )}\n                        <span>{item.education_category_title}</span>\n                      </div>\n                    )\n                  )}\n                </section>\n              )}\n            </div>\n          )}\n          <div className=\"\">\n            <div className=\"text-gray-600 text-sm mb-2\">Selected period:</div>\n            <div\n              onClick={() => this.setState({ selectPeriod: true })}\n              className=\"font-bold bg-blue-50 border border-blue-200 rounded py-2 cursor-pointer text-xs px-2 hover:underline  text-blue-600  mb-4 w-full flex flex-row items-center animate__animated animate__zoomIn\"\n            >\n              {this.state.selected_period !== null\n                ? capitalizeFirstWord(\n                    this.state.selected_period.session_plan_name\n                  )\n                : \"Filter by period\"}\n              <FiEdit className=\"text-3xl text-blue-600\" />\n            </div>\n          </div>\n          {/* <Search data={[1, 2, 3]} /> */}\n          {this.state.selected_position && (\n            <div className=\"pt-1\">\n              <div className=\"text-sm text-gray-700 pb-2 pt-2\">\n                Application statuses:\n              </div>\n              {this.state.applicationListData === null ||\n              this.state.districts === null ? (\n                <Loading />\n              ) : (\n                this.AdminApplicationStatuses(\n                  this.state.applicationListData\n                ).map(\n                  (\n                    itm: {\n                      title: string;\n                      count: number;\n                      status: ApplicationStates | \"ALL\";\n                    },\n                    i: number\n                  ) => (\n                    // itm.count > 0 &&\n                    <Fragment key={itm.title}>\n                      <div\n                        onClick={() =>\n                          this.setState({\n                            selectedApplicationStatus: itm.status,\n                          })\n                        }\n                      >\n                        <MainItem\n                          title={itm.title}\n                          count={itm.count}\n                          active={\n                            this.state.selectedApplicationStatus === itm.status\n                              ? true\n                              : false\n                          }\n                        />\n                      </div>\n                    </Fragment>\n                  )\n                )\n              )}\n            </div>\n          )}\n        </SideNavigation>\n\n        {/* content goes here ====================== */}\n        <section>\n          {/* REPORT TITLE ========================================= */}\n          <div className=\"grid md:grid-cols-12\">\n            <div className=\"col-span-8\">\n              <div className=\"mt-4 mx-4 flex flex-col gap-1\">\n                <span className=\"text-xl font-bold text-gray-700\">\n                  Applications Report\n                </span>\n                <div\n                  onClick={() => this.setState({ selectPosition: true })}\n                  className=\"flex flex-row gap-2 items-end\"\n                >\n                  <span className=\"text-gray-500 text-xl\">Position:</span>\n                  <span className=\"text-blue-600 font-bold underline cursor-pointer text-3xl\">\n                    {this.state.selected_position !== null\n                      ? this.state.selected_position.position_title\n                      : \"No position selected, Click to select\"}\n                  </span>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-span-4\">\n              <div className=\"float-right mt-2\">\n                {this.state.applicationsToPrint &&\n                  this.state.applicationsToPrint.length > 0 && (\n                    <div className=\"flex flex-row items-center justify-end font-bold mb-2\">\n                      <BiExport className=\"text-2xl text-gray-500\" />\n                      <span className=\"text-gray-500\">Export as</span>\n                      {/* EXCEL BUTTON ================= */}\n                      <button\n                        className={`px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200 ${\n                          this.state.downloading && \"cursor-wait\"\n                        }`}\n                        disabled={this.state.loading || this.state.downloading}\n                        onClick={() =>\n                          this.setState({\n                            generateReportModal: {\n                              reportType: \"EXCEL\",\n                              status: true,\n                            },\n                          })\n                        }\n                      >\n                        EXCEL\n                      </button>\n                      {/* PDF BUTTON ================= */}\n                      <button\n                        className=\"px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200\"\n                        onClick={() => this.generateThisPDF()}\n                        disabled={this.state.loading}\n                      >\n                        PDF\n                      </button>\n                    </div>\n                  )}\n                <div\n                  onClick={() => this.setState({ selectPosition: true })}\n                  className=\"btn bg-blue-50 border border-blue-300 text-blue-600 cursor-pointer hover:bg-blue-100 flex flex-row items-center justify-center gap-2 text-sm \"\n                >\n                  <BiFilterAlt className=\"text-xl\" />\n                  Filter by position\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* END REPORT TITLE ========================================= */}\n          <div className=\"bg-white my-4\">\n            <div className=\"w-full px-2 py-2\">\n              <input\n                onChange={(e) => this.setState({ searchInput: e.target.value })}\n                type=\"text\"\n                value={this.state.searchInput}\n                placeholder=\"Search...\"\n                className=\"w-full bg-gray-100 py-2 px-3 rounded\"\n              />\n            </div>\n            <div className=\"w-full overflow-x-auto\">\n              <table className=\"w-full shadow\" id=\"report_content\">\n                <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                  <tr>\n                    <td className=\"px-2 py-2\">#</td>\n                    <td\n                      className=\"px-2 py-2 cursor-pointer\"\n                      onClick={() => this.setSort(\"fname\")}\n                    >\n                      <div className=\"flex items-center gap-1\">\n                        Applicant names <BiSort />\n                      </div>\n                    </td>\n                    <td className=\"px-2 py-2\">National ID</td>\n                    <td className=\"px-2 py-2\">Gender</td>\n                    <td className=\"px-2 py-2\">Phone</td>\n                    <td className=\"px-2 py-2\">Position</td>\n                    <td className=\"px-2 py-2\">Res. District</td>\n                    <td\n                      className=\"px-2 py-2 cursor-pointer\"\n                      onClick={() => this.setSort(\"application_status\")}\n                    >\n                      <div className=\"flex items-center gap-1\">\n                        Status <BiSort />\n                      </div>\n                    </td>\n                    <td className=\"px-2 py-2 cursor-pointer\">\n                      <div className=\"flex items-center gap-1\">Preferences</div>\n                    </td>\n                    <td className=\"px-2 py-2\">Date</td>\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.state.selected_position === null ? (\n                    <tr>\n                      <td colSpan={10} className=\"px-2 py-2\">\n                        <div className=\"flex flex-col text-gray-400 items-center justify-center bg-gray-100 rounded py-10\">\n                          <ImFilesEmpty className=\"text-8xl text-gray-400 mb-2 animate__animated animate__shakeX\" />\n                          <span className=\"text-sm font-bold\">\n                            No position selected! Please select position to get\n                            data\n                          </span>\n                          <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n                            <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                              <li\n                                onClick={() =>\n                                  this.setState({ selectPosition: true })\n                                }\n                                className=\"underline text-blue-600 cursor-pointer\"\n                              >\n                                Choose position\n                              </li>\n                            </ul>\n                          </div>\n                        </div>\n                      </td>\n                    </tr>\n                  ) : this.state.applicationListData === null ||\n                    this.filteredApplications(\n                      this.state.applicationListData,\n                      this.state.selectedApplicationStatus,\n                      this.state.selectedEducationCategory\n                    ) === null ? (\n                    <tr>\n                      <td colSpan={10} className=\"px-2 py-2\">\n                        <Loading />\n                      </td>\n                    </tr>\n                  ) : this.filteredApplications(\n                      this.state.applicationListData,\n                      this.state.selectedApplicationStatus,\n                      this.state.selectedEducationCategory\n                    )!.length === 0 ? (\n                    <tr>\n                      <td colSpan={10} className=\"px-2 py-2\">\n                        <div className=\"flex flex-col text-gray-400 items-center justify-center bg-gray-100 rounded py-10\">\n                          <ImFilesEmpty className=\"text-8xl text-gray-400 mb-2 animate__animated animate__shakeX\" />\n                          <span className=\"text-sm font-bold\">\n                            No result found! Please try to search again\n                          </span>\n                          <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n                            <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                              <li\n                                onClick={() =>\n                                  this.setState({ selectPeriod: true })\n                                }\n                                className=\"underline text-gray-500 cursor-pointer\"\n                              >\n                                Filter by period\n                              </li>\n                              <li className=\"text-gray-400 italic\">or</li>\n                              <li\n                                onClick={() =>\n                                  this.setState({ selectPosition: true })\n                                }\n                                className=\"underline text-blue-600 cursor-pointer\"\n                              >\n                                Filter by position\n                              </li>\n                            </ul>\n                          </div>\n                        </div>\n                      </td>\n                    </tr>\n                  ) : (\n                    sortThisArray(\n                      this.state.isSorted,\n                      searchData(\n                        this.filteredApplications(\n                          this.state.applicationListData,\n                          this.state.selectedApplicationStatus,\n                          this.state.selectedEducationCategory\n                        )!,\n                        this.state.searchInput\n                      ),\n                      this.state.sortProperty,\n                      this.state.sortOrder\n                    ).map((item: AdminApplicationsList, i: number) => (\n                      <tr\n                        onClick={() =>\n                          this.setState({\n                            applicationDetailsModal: {\n                              selected_application: item,\n                              status: true,\n                            },\n                          })\n                        }\n                        key={i + 1}\n                        className={`${\n                          i % 2 !== 0 ? \"bg-gray-100\" : \"bg-white\"\n                        } text-gray-600 hover:bg-blue-100 hover:text-blue-700 cursor-pointer border-b border-gray-300 hover:border-blue-500 text-sm`}\n                      >\n                        <td className=\"px-2 py-2\">{i + 1}</td>\n                        <td className=\"px-2 py-2\">\n                          {item.fname} {item.lname}\n                        </td>\n                        <td className=\"px-2 py-2\">{item.n_id}</td>\n                        <td className=\"px-2 py-2\">\n                          {item.sex === \"M\" ? \"Male\" : \"Female\"}\n                        </td>\n                        <td className=\"px-2 py-2\">{item.phone_number}</td>\n                        <td className=\"px-2 py-2\">\n                          {item.position.position_title}\n                        </td>\n                        <td className=\"px-2 py-2\">\n                          {item.residence.district_name}\n                        </td>\n                        <td className=\"px-2 py-2\">\n                          {capitalizeFirstLetter(item.application_status)}\n                        </td>\n                        <td className=\"px-2 py-2\">\n                          {item.contract === null\n                            ? \"\"\n                            : item.contract.district.values?.length === 0\n                            ? \"All districts\"\n                            : item.contract.district.values.map((val) => {\n                                return `${this.GetDistrictName(val)}${\n                                  item.contract !== null &&\n                                  item.contract.district.values.length > 0 &&\n                                  item.contract.district.values[\n                                    item.contract.district.values.length - 1\n                                  ] !== val\n                                    ? \", \"\n                                    : \"\"\n                                }`;\n                              })}\n                          {item.contract !== null &&\n                          item.contract.district.strict === false &&\n                          item.contract.district.values.length > 0\n                            ? \", and other districts\"\n                            : \"\"}\n                        </td>\n                        <td className=\"px-2 py-2\">{DATE(item.createdAt)}</td>\n                      </tr>\n                    ))\n                  )}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </section>\n\n        {/* PERIOD && POSITION CONTENT MODAL */}\n        {(this.state.selectPosition === true ||\n          this.state.selectPeriod === true) && (\n          <Modal\n            title={\n              <div className=\"flex flex-row gap-4 items-center\">\n                {this.state.selectPeriod === true ? (\n                  <MdHistory className=\"text-5xl text-blue-600\" />\n                ) : (\n                  <IoFilter className=\"text-5xl text-blue-600\" />\n                )}\n                <div className=\"flex flex-col\">\n                  <span className=\"font-bold text-xl text-blue-600\">\n                    {this.state.selectPeriod === true\n                      ? \"Choose a period\"\n                      : \"Filter by a position\"}\n                  </span>\n                </div>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() =>\n              this.setState({\n                selectPosition: false,\n                selectPeriod: false,\n                searchPositionInput: \"\",\n              })\n            }\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{ title: true }}\n          >\n            <div className=\"px-2 pb-2\">\n              {this.state.selectPeriod === true ? (\n                <ChooseSession\n                  allSession={this.props.sessionPlan.allSessionPlans}\n                  setSelectSession={(value: SessionPlanInterface | \"all\") => {\n                    if (value !== \"all\") {\n                      this.setState({ selected_period: value });\n                      this.loadAllApplications(\n                        this.state.selected_position,\n                        value,\n                        (status: boolean, errorMessage: string) => {\n                          this.setLoadingState(status);\n                          if (!isEmptyOrSpaces(errorMessage)) {\n                            this.props.PushPopupAlert({\n                              title: errorMessage,\n                              theme: PopupAlertTheme.warning,\n                            });\n                          }\n                        }\n                      );\n                      this.setState({\n                        selectPeriod: false,\n                        applicationListData: null,\n                      });\n                    }\n                  }}\n                  chooseAll={false}\n                  currentSelected={\n                    this.state.selected_period\n                      ? this.state.selected_period\n                      : \"all\"\n                  }\n                />\n              ) : this.state.selectPosition === true &&\n                this.props.positions === null ? (\n                <LoadingV2 type={LoadingType.dark} />\n              ) : this.props.positions!.length === 0 ? (\n                <div className=\"flex flex-col text-gray-400 items-center justify-center\">\n                  <MdSearch className=\"text-6xl\" />\n                  <div className=\"flex flex-col items-center justify-center\">\n                    <span>No positions found! Please go back!</span>\n                    <Link\n                      to=\"/\"\n                      className=\"btn bg-yellow-100 text-yellow-700 my-4 hover:bg-yellow-200\"\n                    >\n                      Go back\n                    </Link>\n                  </div>\n                </div>\n              ) : (\n                <>\n                  <div className=\"flex flex-col\">\n                    <span className=\"text-gray-600 text-xs font-bold\">\n                      Filter by position name\n                    </span>\n                    <input\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                        this.setState({ searchPositionInput: e.target.value })\n                      }\n                      type=\"text\"\n                      className=\"mb-4 bg-gray-100 px-3 py-2 rounded\"\n                      placeholder=\"Keyword...\"\n                    />\n                  </div>\n                  {searchData(\n                    this.props.positions!,\n                    this.state.searchPositionInput\n                  ).map((item, key) => (\n                    <div\n                      key={key + 1}\n                      onClick={() => {\n                        this.setState({ selected_position: item });\n                        this.loadAllApplications(\n                          item,\n                          this.state.selected_period\n                            ? this.state.selected_period\n                            : this.state.defaultSelectedPeriod,\n                          (status: boolean, errorMessage: string) => {\n                            this.setLoadingState(status);\n                            if (!isEmptyOrSpaces(errorMessage)) {\n                              this.props.PushPopupAlert({\n                                title: errorMessage,\n                                theme: PopupAlertTheme.warning,\n                              });\n                            }\n                          }\n                        );\n                        this.setState({\n                          selectPosition: false,\n                          searchPositionInput: \"\",\n                          applicationListData: null,\n                          reportTitle:\n                            this.state.selected_position?.position_title +\n                            \" - Application Report - \" +\n                            this.state.selected_period\n                              ? this.state.selected_period!.session_plan_name\n                              : this.state.defaultSelectedPeriod\n                              ? this.state.defaultSelectedPeriod!\n                                  .session_plan_name\n                              : \"\",\n                        });\n                      }}\n                      className=\"bg-white cursor-pointer rounded  px-3 py-2 border border-gray-200 hover:border-blue-500 hover:bg-blue-100 mb-2\"\n                    >\n                      <div className=\"grid lg:grid-cols-12\">\n                        <div className=\"col-span-12 lg:col-span-10\">\n                          <div className=\"flex flex-row items-center gap-3\">\n                            <div>\n                              <IoIosBriefcase className=\"text-4xl md:text-5xl text-blue-600\" />\n                            </div>\n                            <div className=\"flex flex-col\">\n                              <span className=\"text-xs lg:text-sm font-bold text-gray-700\">\n                                {item.position_title}\n                              </span>\n                              <span className=\"text-xs text-gray-500 italic\">\n                                School level:{\" \"}\n                                <span\n                                  className=\"text-gray-800 font-light\"\n                                  style={{ fontStyle: \"normal\" }}\n                                >\n                                  {item.school_level_id.school_level_name}\n                                </span>\n                              </span>\n                              <span className=\"text-xs font-bold text-blue-600 bg-blue-100 w-max px-3 py-1 rounded-full\">\n                                {\n                                  item.education_institute_id\n                                    .education_category_title\n                                }\n                              </span>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-span-12 lg:col-span-2 hidden lg:block\">\n                          <div className=\"h-full flex items-center justify-end\">\n                            <div className=\"btn bg-blue-600 text-white float-right\">\n                              Choose\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </>\n              )}\n            </div>\n          </Modal>\n        )}\n        {/* END PERIOD && POSITION CONTENT MODAL */}\n\n        {/* APPLICATION DETAIL CONTENT MODAL */}\n        {this.state.applicationDetailsModal !== null &&\n          this.state.applicationDetailsModal.status === true && (\n            <Modal\n              title={\n                <div className=\"flex flex-row gap-4 items-center\">\n                  {/* <IoBriefcase className=\"text-5xl text-gray-500\" /> */}\n                  <div className=\"flex flex-col\">\n                    <span className=\"font-extrabold text-2xl text-blue-700\">\n                      {\n                        this.state.applicationDetailsModal.selected_application\n                          .fname\n                      }{\" \"}\n                      {\n                        this.state.applicationDetailsModal.selected_application\n                          .lname\n                      }\n                    </span>\n                    <div className=\"rounded-full text-base border border-blue-600 px-3 py-1 w-max font-bold\">\n                      Position:{\" \"}\n                      {\n                        this.state.applicationDetailsModal.selected_application\n                          .position.position_title\n                      }\n                    </div>\n                  </div>\n                </div>\n              }\n              backDrop={true}\n              theme={Themes.default}\n              close={() => this.setState({ applicationDetailsModal: null })}\n              backDropClose={true}\n              widthSizeClass={ModalSize.extraLarge}\n              displayClose={true}\n              padding={{ title: true }}\n            >\n              {this.props.positions === null ? (\n                \"No positions found!\"\n              ) : (\n                <ApplicationDetails\n                  selectedApplication={\n                    this.state.applicationDetailsModal.selected_application\n                  }\n                  auth={this.props.auth}\n                  positions={this.props.positions}\n                  getDistrictName={this.GetDistrictName}\n                />\n              )}\n            </Modal>\n          )}\n        {/* END APPLICATION DETAIL CONTENT MODAL */}\n\n        {/* GENERATE DYNAMIC REPORT CONTENT MODAL */}\n        {this.state.generateReportModal !== null &&\n          this.state.generateReportModal.status === true && (\n            <Modal\n              title={\n                <div className=\"flex flex-row gap-4 items-center\">\n                  {/* <IoBriefcase className=\"text-5xl text-gray-500\" /> */}\n                  <div className=\"flex flex-col\">\n                    <span className=\"font-bold text-2xl text-gray-500\">\n                      Generating Report contents\n                    </span>\n                    <span className=\"text-sm text-blue-600 font-normal\">\n                      Generating {this.state.generateReportModal.reportType}{\" \"}\n                      Report\n                    </span>\n                  </div>\n                </div>\n              }\n              backDrop={true}\n              theme={Themes.default}\n              close={() => this.setState({ generateReportModal: null })}\n              backDropClose={false}\n              widthSizeClass={ModalSize.medium}\n              displayClose={true}\n              padding={{ title: true }}\n            >\n              <div className=\"px-6\">\n                <div className=\"my-2 text-base text-gray-700 sm:text-lg\">\n                  <div className=\"flex flex-col\">\n                    <label>Title</label>\n                    <input\n                      type=\"text\"\n                      className={`text-left input-white w-20 inline-block ${\n                        this.state.formError &&\n                        this.state.formError.element === \"report_title\"\n                          ? \"border-red-500\"\n                          : \"border-gray-500\"\n                      } border-2`}\n                      placeholder=\"Sub Category Title\"\n                      value={this.state.reportTitle}\n                      onChange={(e) => {\n                        this.setState({\n                          formError: null,\n                          reportTitle: e.target.value,\n                        });\n                      }}\n                      disabled={this.state.loading}\n                    />\n                    {this.state.formError &&\n                      this.state.formError.element === \"report_title\" && (\n                        <span className=\"text-red-500\">\n                          {this.state.formError.msg}\n                        </span>\n                      )}\n                  </div>\n                  <div className=\"flex flex-col mt-2\">\n                    <label>Report content</label>\n                    <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                      {this.state.reportContent.map((item, index) => (\n                        <div\n                          key={index}\n                          className={`flex items-center gap-1 ${\n                            this.isChangeAllowed(item.key)\n                              ? \"cursor-pointer\"\n                              : \"cursor-not-allowed\"\n                          }`}\n                          onClick={() =>\n                            this.isChangeAllowed(item.key) &&\n                            this.updateReportContent(item.key)\n                          }\n                          title={\n                            !this.isChangeAllowed(item.key)\n                              ? \"Required for every report!\"\n                              : \"\"\n                          }\n                        >\n                          {item.status ? (\n                            <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                          ) : (\n                            <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                          )}\n                          <span>{item.title}</span>\n                        </div>\n                      ))}\n                    </div>\n                    {this.state.formError &&\n                      this.state.formError.element === \"report_content\" && (\n                        <span className=\"text-red-500\">\n                          {this.state.formError.msg}\n                        </span>\n                      )}\n                  </div>\n                </div>\n                <div className=\"flex justify-between mb-2 mt-4\">\n                  <div\n                    className={`flex items-center gap-1 cursor-pointer`}\n                    onClick={() =>\n                      this.resetReportContent(this.state.selectAll)\n                    }\n                  >\n                    {this.state.selectAll ? (\n                      <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                    ) : (\n                      <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                    )}\n                    <span>Select all</span>\n                  </div>\n\n                  {this.state.applicationsToPrint && !this.state.loading && (\n                    <ExportToExcel\n                      fileData={this.state.applicationsToPrint}\n                      fileName={this.state.reportTitle}\n                      btnName=\"Generate\"\n                    />\n                  )}\n                </div>\n              </div>\n            </Modal>\n          )}\n        {/* END GENERATE DYNAMIC REPORT CONTENT MODAL */}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system_settings,\n  sessionPlan,\n  schoolLevels,\n}: StoreState): {\n  auth: Auth;\n  positions: PositionAPI[] | null;\n  sessionPlan: SessionPlanReducerInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n} => {\n  return {\n    auth: auth,\n    positions: system_settings.systemPositions,\n    sessionPlan,\n    schoolLevels: schoolLevels,\n  };\n};\nexport const Applications = connect(mapStateToProps, {\n  FC_GetAllSessionByInstitution,\n  FC_GetPositionsByInstitution,\n  loadEducationCategories,\n  PushPopupAlert,\n})(_Applications);\n","import React, { FC, ReactElement, ReactNode } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, System } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { NavToogle, PageHasSubNav } from \"../../actions\";\nimport { MdBrightness1, MdSearch } from \"react-icons/md\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  system: System;\n  PageHasSubNav: Function;\n  NavToogle: Function;\n  children: ReactNode;\n}\n//\ninterface AppState {\n  loading: boolean;\n}\n\nclass _SideNavigation extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount = () => this.props.PageHasSubNav(true);\n  componentWillUnmount = () => this.props.PageHasSubNav(false);\n\n  render() {\n    const isAuthenticated = this.props.auth.isAuthenticated;\n\n    if (isAuthenticated === false) {\n      return null;\n    }\n\n    const navActive = this.props.system.navigation;\n    return (\n      <div\n        className={`fixed w-48 p-1 pr-2 pl-6 text-gray-700 bg-white ${\n          navActive === true ? \"lg:left-16  left-16\" : \" -left-72 lg:left-16\"\n        }  top-0 bottom-0 pt-20 z-30 shadow-lg  transition-all duration-500 ease-in-out overflow-y-auto`}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n}: StoreState): { auth: Auth; system: System } => {\n  return { auth: auth, system: system };\n};\n\nexport const SideNavigation = connect(mapStateToProps, {\n  NavToogle,\n  PageHasSubNav,\n})(_SideNavigation);\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SearchComponentInterface = {\n  data: any[];\n};\n\nexport const Search: FC<SearchComponentInterface> = ({\n  data,\n}): ReactElement => {\n  return (\n    <div className=\"m-1 rounded-md shadow-md border border-blue-400 bg-white p-1 flex \">\n      <label htmlFor=\"search-text\" className=\"inline-block text-2xl\">\n        <MdSearch className=\"inline-block text-blue-400\" />\n      </label>\n      <input\n        type=\"search\"\n        className=\"outline-none bg-transparent flex-1 pl-1\"\n        placeholder=\"Search\"\n        id=\"search-text\"\n      />\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype MainItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const MainItem: FC<MainItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n  return (\n    <section\n      className={`${\n        active === true\n          ? \"bg-blue-500 text-white font-bold\"\n          : \"bg-blue-100 text-blue-800\"\n      } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex cursor-pointer items-center`}\n    >\n      <section className=\"flex-1\">\n        <IconDefined className=\"inline-block mr-1 text-xs\" />\n        <span>{title}</span>\n      </section>\n\n      {count > 0 ? (\n        <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n          {count}\n        </span>\n      ) : null}\n    </section>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemContainerComponentInterface = {\n  children: ReactNode;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const SubItemContainer: FC<SubItemContainerComponentInterface> = ({\n  children,\n}): ReactElement => {\n  return (\n    <div className=\"ml-3 overflow-y-auto border-l-2 border-blue-200 -mt-1 pt-2 mb-2 pl-1 cursor-pointer\">\n      {children}\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n * @important Remenber to use these components inside the <SubItemContainer>...</SubItemContainer>\n */\nexport const SubItem: FC<SubItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n\n  return (\n    <div\n      className={`animate__animated animate__zoomIn animate__faster ${\n        active === true ? \"bg-blue-500 text-white font-bold\" : \" text-blue-800\"\n      } text-blue-800 bg-blue-200 rounded-md px-1 mb-1 flex items-center py-1 font-bold`}\n    >\n      <IconDefined\n        className={`inline-block mr-0.1 text-xs ${\n          active === true ? \"text-white\" : \"\"\n        }`}\n      />\n      <span\n        className={`inline-block pl-1 ${active === true ? \"text-white\" : \"\"}`}\n      >\n        {title}\n      </span>\n      {count >= 1 ? (\n        <span\n          className={`text-sm fint-bold ${active === true ? \"text-white\" : \"\"}`}\n        >\n          {count}\n        </span>\n      ) : null}\n    </div>\n  );\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AccessTaskInterface,\n  PermissionInterface,\n  SystemSettingsInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PositionAPI } from \"../interfaces/position\";\n\nconst url = `${API.AUTH}/auth/user/access`;\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// SYSTEM SETTINGS  ==============\nexport interface GetSystemSettingsAction {\n  type: ActionTypes.GET_SYSTEM_SETTINGS;\n  payload: SystemSettingsInterface[];\n}\n\nexport interface DisableSystemSettingsAction {\n  type: ActionTypes.DISABLE_SYSTEM_SETTINGS;\n  payload: {\n    system_setting_id: string;\n    status: \"enabled\" | \"disabled\";\n  };\n}\n\n// ROLE TASKS ACCESS SETTINGS ===================================\nexport interface GetTaskAccessAction {\n  type: ActionTypes.GET_TASK_ACCESS;\n  payload: AccessTaskInterface[];\n}\n\n// POSITIONS SETTINGS ===================================\nexport interface PositionCreateInterface {\n  position_id?: string;\n  position_title: string;\n  position_code: string;\n  description: string;\n  school_level_id: string;\n  subcategory_id: string;\n  education_institute_id: string;\n  courses: string[];\n  requirements: {\n    user_detail_category_id: string;\n    user_detail_subcategory_id: string;\n    position_requirement: {\n      category_subcategory_data_id: string;\n      required: boolean;\n    }[];\n    required: boolean;\n  }[];\n}\nexport interface GetPositionsAction {\n  type: ActionTypes.GET_POSTIONS;\n  payload: PositionAPI[];\n}\n\nexport interface CreatePositionsAction {\n  type: ActionTypes.CREATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface UpdatePositionsAction {\n  type: ActionTypes.UPDATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface DeletePositionSettingAction {\n  type: ActionTypes.DELETE_POSITION;\n  payload: string;\n}\n\nexport interface PublishPositionAction {\n  type: ActionTypes.PUBLISH_POSITION;\n  payload: {\n    position_id: string;\n    status: boolean;\n  };\n}\n\nexport type SystemActionType =\n  | GetSystemSettingsAction\n  | DisableSystemSettingsAction\n  | GetTaskAccessAction\n  | GetPositionsAction\n  | CreatePositionsAction\n  | UpdatePositionsAction\n  | DeletePositionSettingAction\n  | PublishPositionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSystemSettings = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<SystemSettingsInterface[]>(\n        `${API.AUTH}/system/setting`\n      );\n      console.log(\"=================getSystemSettings===================\");\n      console.log(res);\n      console.log(\"=================getSystemSettings===================\");\n      dispatch<GetSystemSettingsAction>({\n        type: ActionTypes.GET_SYSTEM_SETTINGS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const disableSystemSetting = (data: {\n  system_setting_id: string;\n  status: \"enabled\" | \"disabled\";\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableSystemSettingsAction>({\n      type: ActionTypes.DISABLE_SYSTEM_SETTINGS,\n      payload: data,\n    });\n  };\n};\n\n// ============================ tasks access =======================\n\nexport const GetTaskAccess = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<\n        {\n          id: string;\n          title: string;\n          key: string;\n          permitted: PermissionInterface;\n        }[]\n      >(`${url}/roleaccess`);\n      let response: AccessTaskInterface[] = res.data.map((data) => ({\n        id: data.id,\n        task: data.title,\n        key: data.key,\n        permitted: data.permitted,\n      }));\n      dispatch<GetTaskAccessAction>({\n        type: ActionTypes.GET_TASK_ACCESS,\n        payload: response,\n      });\n      callback(false, \"\", response);\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// ============================ positions =======================\n\nexport const getPositions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(`${API.APPLICATION}/position`);\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createPosition = (data: PositionCreateInterface) => {\n  console.log({ createPosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreatePositionsAction>({\n      type: ActionTypes.CREATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const updatePosition = (data: PositionCreateInterface) => {\n  console.log({ updatePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdatePositionsAction>({\n      type: ActionTypes.UPDATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const deletePosition = (data: string) => {\n  console.log({ deletePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<DeletePositionSettingAction>({\n      type: ActionTypes.DELETE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const publishPosition = (data: {\n  position_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<PublishPositionAction>({\n      type: ActionTypes.PUBLISH_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_GetPositionsByInstitution = (\n  institution_id: string,\n  callback: (status: boolean, msg: string, data?: PositionAPI[]) => void\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(\n        `${API.APPLICATION}/position/instituteposition/${institution_id}`\n      );\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n","import React from \"react\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport { RiFileExcel2Fill } from \"react-icons/ri\";\n\ninterface ExportToExcelProps {\n  fileData: any[];\n  fileName: string;\n  btnName?: string;\n  className?: string;\n  showIcon?: boolean;\n}\n\nconst ExportToExcel: React.FC<ExportToExcelProps> = ({\n  fileData,\n  fileName,\n  btnName = \"Excel\",\n  className = \"flex items-center gap-1 px-4 py-1 rounded text-green-700 bg-white border hover:text-white hover:bg-green-700 border-green-700 font-bold\",\n  showIcon = true,\n}) => {\n  const fileType =\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n  const fileExtension = \".xlsx\";\n\n  const exportToCSV = (apiData: any[], fileName: string) => {\n    const ws = XLSX.utils.json_to_sheet(apiData);\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n    const data = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n\n  return (\n    <button\n      onClick={(e) => exportToCSV(fileData, fileName)}\n      className={className}\n    >\n      {showIcon && <RiFileExcel2Fill />}\n      {btnName}\n    </button>\n  );\n};\n\nexport default ExportToExcel;\n","export default __webpack_public_path__ + \"static/media/mineduc.11a9ae1c.png\";","import jsPDF from \"jspdf\";\nimport { DATE } from \"../../utils/functions\";\nimport Logo from \"../../utils/mineduc.png\";\nrequire(\"jspdf-autotable\");\n\nexport const addFooters = (doc: any) => {\n  const pageCount = doc.internal.getNumberOfPages();\n\n  doc.setFont(\"helvetica\", \"italic\");\n  doc.setFontSize(8);\n  for (var i = 1; i <= pageCount; i++) {\n    doc.setPage(i);\n    doc.text(\n      \"Page \" + String(i) + \" of \" + String(pageCount),\n      doc.internal.pageSize.width / 2,\n      297,\n      {\n        align: \"center\",\n      }\n    );\n  }\n};\n\nexport type reportSettingsInterface = {\n  doneBy: string;\n  title: string;\n  subjectTitle: string;\n  subject: string;\n  institute: string;\n  period: string;\n  footer: string;\n  orientation?: \"p\" | \"l\";\n};\n\nexport const generatePDF = async (\n  reportSettings: reportSettingsInterface,\n  table: HTMLElement,\n  callBack: (status: boolean) => void\n) => {\n  callBack(true);\n  const orientation: \"p\" | \"l\" = reportSettings.orientation\n    ? reportSettings.orientation\n    : \"p\";\n  var lMargin: number = 20; //left margin in mm\n  var rMargin: number = 20; //right margin in mm\n  var pdfInMM: number = 185; // width of A4 in mm\n\n  //   var doc = new jsPDF(\"p\", \"mm\", \"a4\");\n  var doc: any = new jsPDF(orientation, \"mm\", \"a4\");\n\n  doc.setTextColor(95, 95, 95);\n  doc.setFontSize(28);\n  // doc.text(\n  //   this.props.reportTitle,\n  //   doc.internal.pageSize.getWidth() / 2,\n  //   30,\n  //   undefined,\n  //   \"center\"\n  // );\n  doc.addImage(Logo, \"png\", 20, 20, 10, 10);\n  doc.text(\"MINEDUC\", 32, 28.5, undefined, \"left\");\n  //   doc.setTextColor(19, 90, 152);\n  doc.setFontSize(26);\n  doc.text(\n    reportSettings.title,\n    doc.internal.pageSize.getWidth() / 2,\n    42.7,\n    undefined,\n    \"center\"\n  );\n\n  doc.setFontSize(20);\n  doc.text(\n    reportSettings.institute,\n    doc.internal.pageSize.getWidth() / 2,\n    53.7,\n    undefined,\n    \"center\"\n  );\n\n  var lines;\n  lines = doc.splitTextToSize(\n    reportSettings.subject,\n    pdfInMM - lMargin - rMargin\n  );\n  // if (reportSettings.position) {\n  // } else if (reportSettings.subject) {\n  //   lines = doc.splitTextToSize(\n  //     reportSettings.subject,\n  //     pdfInMM - lMargin - rMargin\n  //   );\n  // }\n\n  //   doc.setTextColor(0, 123, 255);\n  doc.setFontSize(16);\n  //   doc.text(lines, doc.internal.pageSize.getWidth() / 2, 45, {\n  //     maxWidth: 85,\n  //     align: \"center\",\n  //   });\n\n  var y = 63,\n    width;\n  doc.setTextColor(95, 95, 95);\n  doc.text(`${reportSettings.subjectTitle}: `, lMargin, y);\n  width = doc.getTextWidth(`${reportSettings.subjectTitle}: `);\n  // if (reportSettings.position) {\n  // } else if (reportSettings.position) {\n  //   doc.text(`Subject: `, lMargin, y);\n  //   width = doc.getTextWidth(\"Subject: \");\n  // }\n  // doc.setFontType(\"bold\");\n  doc.setTextColor(38, 38, 38);\n  for (var i = 0; i < lines.length; i++) {\n    if (y > 280) {\n      y = 10;\n      doc.addPage();\n    }\n    // doc.text(15, y, lines[i]);\n    doc.text(lines[i], lMargin + width, y);\n    y = y + 7;\n  }\n  doc.setTextColor(95, 95, 95);\n  doc.text(\"Period: \", lMargin, y + 3);\n  width = doc.getTextWidth(\"Period: \");\n  doc.setTextColor(38, 38, 38);\n  doc.text(reportSettings.period, lMargin + width, y + 3);\n\n  doc.autoTable({\n    html: table,\n    startY: 85,\n    margin: { horizontal: 20 },\n    cellPadding: 3, // Horizontal cell padding\n    // fontSize: 12,\n    rowHeight: 20,\n    // styles: { overflow: \"linebreak\" },\n    bodyStyles: { valign: \"top\" },\n    columnStyles: { email: { cellWidth: \"wrap\" } },\n    theme: \"striped\",\n    tableWidth: true,\n  });\n\n  doc.setFontSize(12);\n  let finalY = doc.lastAutoTable.finalY; // The y position on the page\n  doc.text(`Reported by: ${reportSettings.doneBy}`, lMargin, finalY + 15);\n  doc.text(\n    \"Report downloaded on \" + DATE(new Date().toString()),\n    lMargin,\n    finalY + 23\n  );\n\n  addFooters(doc);\n  await doc\n    .save(\n      `${\n        reportSettings.title +\n        \": \" +\n        reportSettings.subject +\n        \": \" +\n        reportSettings.period\n      }.pdf`,\n      { returnPromise: true }\n    )\n    .then(callBack(false));\n};\n","import React, { useState } from \"react\";\nimport {\n  MdCheckCircle,\n  MdRadioButtonUnchecked,\n  MdSearch,\n} from \"react-icons/md\";\nimport Loading from \"../../components/Loading/Loading\";\nimport {\n  PlansInterface,\n  SessionPlanInterface,\n  SessionPlanTypeStatus,\n} from \"../../interfaces\";\nimport { DATE } from \"../../utils/functions\";\nimport searchData from \"../../utils/search\";\n\nexport const isPlansActive = (plans: PlansInterface[]): PlansInterface[] => {\n  let today = new Date();\n  let activePlans: PlansInterface[] = [];\n  for (let plan of plans) {\n    let startDate = new Date(plan.start_date);\n    let endDate = new Date(plan.end_date);\n    if (\n      startDate.getTime() <= today.getTime() &&\n      endDate.getTime() >= today.getTime() &&\n      plan.type_status === SessionPlanTypeStatus.OPEN\n    ) {\n      activePlans = [...activePlans, plan];\n    }\n  }\n  return activePlans;\n};\n\ninterface ChooseSessionProps {\n  allSession: SessionPlanInterface[] | null;\n  setSelectSession: (period: SessionPlanInterface | \"all\") => void;\n  currentSelected: SessionPlanInterface | \"all\";\n  chooseAll: boolean;\n}\n\nconst ChooseSession = (props: ChooseSessionProps) => {\n  const [selectedPlan, setSelectedPlan] = useState<SessionPlanInterface | null>(\n    null\n  );\n  const [search, setSearch] = useState<string>(\"\");\n  const getSearch = (\n    period: SessionPlanInterface[],\n    searched: string\n  ): SessionPlanInterface[] => {\n    return searchData(period, searched) as SessionPlanInterface[];\n  };\n\n  return (\n    <div className=\"\">\n      <div className=\"px-3\">\n        <input\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n            setSearch(e.target.value)\n          }\n          type=\"text\"\n          className=\"py-3 px-4 w-full rounded border border-gray-400 mb-3\"\n          placeholder=\"Search by year, name\"\n          disabled={props.allSession === null || props.allSession.length === 0}\n        />\n      </div>\n\n      <div className=\"bg-gray-100 px-3 pt-3 pb-2 rounded-b\">\n        {props.allSession === null ? (\n          <Loading />\n        ) : props.allSession.length === 0 ? (\n          <div className=\"flex flex-col text-gray-400 items-center justify-center mb-2 bg-white py-4\">\n            <MdSearch className=\"text-6xl\" />\n            <div className=\"flex flex-col items-center justify-center\">\n              <span>No session found!</span>\n            </div>\n          </div>\n        ) : (\n          <section>\n            {props.chooseAll && (\n              <div\n                className={`rounded border ${\n                  props.currentSelected === \"all\"\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2 flex flex-col md:flex-row items-start md:items-center md:justify-between`}\n              >\n                <div className=\"flex flex-row items-center gap-3\">\n                  {props.currentSelected === \"all\" ? (\n                    <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                  ) : (\n                    <MdRadioButtonUnchecked\n                      className={`text-gray-300 text-4xl`}\n                    />\n                  )}\n                  <div className=\"flex flex-col\">\n                    <div className={`text-gray-600 font-bold`}>All session</div>\n                  </div>\n                </div>\n                <div\n                  onClick={() => {\n                    props.setSelectSession(\"all\");\n                  }}\n                  className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                >\n                  Select\n                </div>\n              </div>\n            )}\n            {getSearch(props.allSession, search).map((item, i) => (\n              <div\n                key={i + 1}\n                className={`rounded border ${\n                  props.currentSelected !== \"all\" &&\n                  props.currentSelected._id === item._id\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2`}\n              >\n                <div className=\"flex flex-col md:flex-row items-start md:items-center md:justify-between \">\n                  <div className=\"flex flex-row items-center gap-3\">\n                    {props.currentSelected !== \"all\" &&\n                    props.currentSelected._id === item._id ? (\n                      <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                    ) : (\n                      <MdRadioButtonUnchecked\n                        className={`text-gray-300 text-4xl`}\n                      />\n                    )}\n                    <div className=\"flex flex-col\">\n                      <div\n                        className={`${\n                          props.currentSelected !== \"all\" &&\n                          props.currentSelected._id === item._id\n                            ? \"text-blue-600\"\n                            : \"text-gray-600\"\n                        } font-bold`}\n                      >\n                        {item.session_plan_name}\n                      </div>\n                      <div className=\"text-sm text-gray-500\">\n                        <span>Status: </span>\n                        <span\n                          className={`${\n                            item.is_active === true\n                              ? \"text-gray-900 font-bold underline\"\n                              : \"text-gray-500 italic\"\n                          }`}\n                        >\n                          {item.is_active === true ? \"Active\" : \"Expired\"}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"flex flex-row items-center gap-2\">\n                    {(selectedPlan === null ||\n                      selectedPlan._id !== item._id) && (\n                      <div\n                        onClick={() => setSelectedPlan(item)}\n                        className=\"bg-gray-50 group-hover:bg-blue-100 font-semibold text-gray-400 group-hover:text-blue-600 rounded px-3 py-2 cursor-pointer\"\n                      >\n                        Details\n                      </div>\n                    )}\n                    <div\n                      onClick={() => {\n                        props.setSelectSession(item);\n                      }}\n                      className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                    >\n                      Select\n                    </div>\n                    {selectedPlan !== null && selectedPlan._id === item._id && (\n                      <div\n                        onClick={() => setSelectedPlan(null)}\n                        className=\"bg-red-100 group-hover:bg-red-200 font-semibold text-red-600 group-hover:text-red-800 rounded px-3 py-2 cursor-pointer\"\n                      >\n                        Close\n                      </div>\n                    )}\n                  </div>\n                </div>\n                {/* {selectedPlan !== null && selectedPlan._id === item._id && (\n                  <div className=\"bg-white rounded border border-blue-50 mt-2 animate__animated animate__fadeIn\">\n                    <table className=\"w-full\">\n                      <thead className=\"bg-blue-50\">\n                        <tr className=\"text-left\">\n                          <th className=\"px-3 py-3\">#</th>\n                          <th>Plan</th>\n                          <th>Start date</th>\n                          <th>Ending date</th>\n                          <th>Status</th>\n                        </tr>\n                      </thead>\n                      <tbody className=\"text-sm\">\n                        {selectedPlan !== null &&\n                          selectedPlan._id === item._id &&\n                          selectedPlan.plans.length > 0 &&\n                          item.plans.map((plan, i) => (\n                            <tr\n                              key={i + 1}\n                              className={`${\n                                isPlansActive(item.plans).find(\n                                  (itm) => itm.type_key === plan.type_key\n                                ) !== undefined\n                                  ? \"bg-blue-100 text-blue-600 font-bold\"\n                                  : \"\"\n                              } text-left border-b border-blue-50`}\n                            >\n                              <td className=\"px-3 py-1\">{i + 1}</td>\n                              <td>{plan.type_title}</td>\n                              <td>{DATE(plan.start_date, \"DD/MM/YYYY\")}</td>\n                              <td>{DATE(plan.end_date, \"DD/MM/YYYY\")}</td>\n                              <td>{plan.type_status}</td>\n                            </tr>\n                          ))}\n                      </tbody>\n                    </table>\n                  </div>\n                )} */}\n              </div>\n            ))}\n          </section>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(ChooseSession);\n"],"sourceRoot":""}
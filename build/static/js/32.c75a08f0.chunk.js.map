{"version":3,"sources":["containers/Admin/AttendanceReport/AttendanceCandidates.tsx","containers/Admin/AttendanceReport/AttendanceReport.tsx","components/Navigation/SideNavigation.tsx","components/Loading/TableLoading.tsx","utils/ExportToExcel.tsx","containers/SessionSettings/ChooseSession.tsx"],"names":["AttendanceCandidates","className","this","props","children","id","candidatesList","candidates","map","item","index","n_id","user_info","fname","lname","sex","phone_number","email","seat_number","user_id","Component","_AttendanceReport","FD_GetSessions","institution_id","FC_GetAllSessionByInstitution","status","msg","data","setState","loading","length","state","selected_period","active_period","find","is_active","selectPeriod","loadExamsListByPeriod","_id","value","FC_OnInstitutionChanged","FC_LoadAttendance","exam_id","a","loadAttendance","axios","get","API","PROCTORING","res","attendanceList","console","log","error","errorToText","FC_AllGroupToExcel","result","forEach","attendance","push","sheetName","group_id","FC_OneGroupToExcel","candidate","invigilator","invigilator_email","candidate_nid","candidate_sex","candidate_phone","candidate_seat_number","selectedEducationCategory","generateReportModal","searchInput","downloading","selectExam","searchExamInput","selected_exam","reportTitle","selected_attendance_group","thisExam","undefined","FC_HasInstitute","auth","education_institution_id","schoolLevels","education_categories","loadEducationCategories","education_institute_id","courses","loadCourses","DATA_SelectedGroup","DATA_PrintGroup","DATA_PrintAllGroup","SideNavigation","Loading","i","onClick","education_category_title","capitalizeFirstWord","session_plan_name","course_name","ExportToExcel","fileData","fileName","btnName","TableLoading","cols","colSpan","NoResult","theme","NoResultThemes","Dark","component","isExpired","exam","Modal","title","backDrop","Themes","default","close","backDropClose","widthSizeClass","ModalSize","extraLarge","displayClose","padding","ChooseSession","allSession","sessionPlan","allSessionPlans","setSelectSession","chooseAll","currentSelected","examsList","to","onChange","e","target","type","placeholder","searchData","key","courseItem","course_id","course","style","fontStyle","DATE","exam_date","LoadingV2","LoadingType","dark","AttendanceReport","connect","prepareExam","PushPopupAlert","_SideNavigation","componentDidMount","PageHasSubNav","componentWillUnmount","isAuthenticated","navActive","system","navigation","React","NavToogle","MainItem","icon","MdBrightness1","active","count","IconDefined","displayCols","colsArray","element","Math","random","FN_IsDataForMultiple","Array","isArray","showIcon","fileType","fileExtension","excelData","workbook","XLSX","book_new","dataItem","worksheet","json_to_sheet","book_append_sheet","excelBuffer","bookType","Blob","FileSaver","Sheets","SheetNames","exportToCSV","period","searched","useState","selectedPlan","setSelectedPlan","search","setSearch","disabled","memo"],"mappings":"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","file":"static/js/32.c75a08f0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { AttendanceListType } from \"./AttendanceReport\";\n\ntype AppProps = {\n  candidatesList: AttendanceListType;\n};\n\nexport class AttendanceCandidates extends Component<AppProps> {\n  render() {\n    return (\n      <>\n        <div className=\"flex items-center justify-between gap-3 mb-1\">\n          <span className=\"text-lg font-semibold text-blue-600\">\n            Candidates list\n          </span>\n\n          {this.props.children}\n        </div>\n        <table className=\"w-full bg-white shadow p-5\" id=\"session_content\">\n          <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n            <tr>\n              <td className=\"p-2\">#</td>\n              <td className=\"p-2\">National ID</td>\n              <td className=\"p-2\">Names</td>\n              <td className=\"p-2\">Sex</td>\n              <td className=\"p-2\">Phone</td>\n              <td className=\"p-2\">Email</td>\n              <td className=\"p-2\">Seat number</td>\n            </tr>\n          </thead>\n          <tbody>\n            {/* WHILE DATA FOUND ====================== */}\n            {this.props.candidatesList.candidates.map((item, index) => (\n              <tr\n                key={index + item.user_id}\n                className={`border-b border-gray-200 hover:bg-gray-100`}\n              >\n                <td className=\"p-2 text-left whitespace-nowrap\">{index + 1}</td>\n                <td className=\"p-2 text-left\">{item.n_id}</td>\n                <td className=\"p-2 text-left\">\n                  {item.user_info.fname + \" \" + item.user_info.lname}\n                </td>\n                <td className=\"p-2 text-left\">{item.user_info.sex}</td>\n                <td className=\"p-2 text-left\">{item.phone_number}</td>\n                <td className=\"p-2 text-left\">{item.email}</td>\n                <td className=\"p-2 text-left\">{item.seat_number}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </>\n    );\n  }\n}\n\nexport default AttendanceCandidates;\n","import axios from \"axios\";\nimport React, { Component, Fragment } from \"react\";\nimport { BiExport } from \"react-icons/bi\";\nimport { FiEdit } from \"react-icons/fi\";\nimport { IoIosBriefcase } from \"react-icons/io\";\nimport { IoFilter } from \"react-icons/io5\";\nimport {\n  MdExpandLess,\n  MdExpandMore,\n  MdHistory,\n  MdRadioButtonChecked,\n  MdRadioButtonUnchecked,\n  MdSearch,\n} from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Auth,\n  schoolLevelsStoreInterface,\n  loadEducationCategories,\n  PushPopupAlert,\n  loadExamsListByPeriod,\n  loadCourses,\n} from \"../../../actions\";\nimport { FC_GetAllSessionByInstitution } from \"../../../actions/session\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport LoadingV2, { LoadingType } from \"../../../components/Loading/LoadingV2\";\nimport Modal, { Themes, ModalSize } from \"../../../components/Modal/Modal\";\nimport { SideNavigation } from \"../../../components/Navigation/SideNavigation\";\nimport { education_category, SessionPlanInterface } from \"../../../interfaces\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport { StoreState } from \"../../../reducers\";\nimport { SessionPlanReducerInterface } from \"../../../reducers/session\";\nimport { capitalizeFirstWord } from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport ExportToExcel, {\n  FileMultipleDataType,\n} from \"../../../utils/ExportToExcel\";\nimport { DATE, errorToText, FC_HasInstitute } from \"../../../utils/functions\";\nimport ChooseSession from \"../../SessionSettings/ChooseSession\";\nimport searchData from \"../../../utils/search\";\nimport TableLoading from \"../../../components/Loading/TableLoading\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport AttendanceCandidates from \"./AttendanceCandidates\";\nimport { course } from \"../../../interfaces\";\n\nexport type AttendanceListType = {\n  _id: string;\n  candidates: {\n    user_id: string;\n    n_id: string;\n    phone_number: string;\n    email: string;\n    user_info: {\n      fname: string;\n      lname: string;\n      sex: string;\n    };\n    seat_number: number;\n  }[];\n  isExpired: boolean;\n  code: string;\n  group_id: string;\n  room_id: number;\n  course_id: string;\n  exam_id: string;\n  exam: {\n    course_id: string;\n    course_name: string;\n    course_code: string;\n    _id: string;\n    course: string;\n    exam_date?: string;\n    start_time?: string;\n    end_time?: string;\n    duration?: number;\n  };\n  invigilator: {\n    fname: string;\n    lname: string;\n    phone: string;\n    email: string;\n    nid: string;\n  };\n  created_by: string;\n  created_at: string;\n};\n\ntype AppProps = {\n  auth: Auth;\n  sessionPlan: SessionPlanReducerInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n  FC_GetAllSessionByInstitution: Function;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  loadExamsListByPeriod: (\n    period_id: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  examsList: ExamItemResponse[] | null;\n  loadCourses: (callback: (loading: boolean) => void) => void;\n  courses: course[] | null;\n};\n\ntype AppStates = {\n  loading: boolean;\n  selectedEducationCategory: education_category | \"all\";\n  selected_period: SessionPlanInterface | null;\n  selectPeriod: boolean;\n  generateReportModal: {\n    reportType: \"EXCEL\" | \"PDF\";\n    status: boolean;\n  } | null;\n  searchInput: string;\n  downloading: boolean;\n  selectExam: boolean;\n  searchExamInput: string;\n  selected_exam: ExamItemResponse | null;\n  attendanceList: AttendanceListType[];\n  loadAttendance: boolean;\n  reportTitle: string;\n  selected_attendance_group: string;\n  thisExam: course | undefined;\n};\n\nexport class _AttendanceReport extends Component<AppProps, AppStates> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      selectedEducationCategory: \"all\",\n      selectPeriod: false,\n      selected_period: null,\n      generateReportModal: null,\n      searchInput: \"\",\n      downloading: false,\n      selectExam: true,\n      searchExamInput: \"\",\n      selected_exam: null,\n      attendanceList: [],\n      loadAttendance: true,\n      reportTitle: \"\",\n      selected_attendance_group: \"\",\n      thisExam: undefined,\n    };\n  }\n\n  FD_GetSessions = (institution_id: string) => {\n    this.props.FC_GetAllSessionByInstitution(\n      institution_id,\n      (status: boolean, msg: string, data?: SessionPlanInterface[]) => {\n        this.setState({ loading: status });\n        if (!status) {\n          if (data && data.length > 0) {\n            if (this.state.selected_period === null) {\n              let active_period = data.find((item) => item.is_active);\n              if (active_period) {\n                this.setState({\n                  selectPeriod: false,\n                  selected_period: active_period,\n                });\n                this.props.loadExamsListByPeriod(\n                  active_period._id,\n                  (value: boolean) => this.setState({ loading: value })\n                );\n              } else if (data.length > 0) {\n                active_period = data[data.length - 1];\n                this.setState({\n                  selectPeriod: false,\n                  selected_period: active_period,\n                });\n                this.props.loadExamsListByPeriod(\n                  active_period._id,\n                  (value: boolean) => this.setState({ loading: value })\n                );\n              } else {\n                this.setState({ selectPeriod: true });\n              }\n            }\n          }\n        }\n      }\n    );\n  };\n\n  FC_OnInstitutionChanged = (institution_id: string) => {\n    // LOAD POSITIONS BY INSTITUTION =================\n    // this.props.FC_GetPositionsByInstitution(\n    //   institution_id,\n    //   (status: boolean, msg: string) => {\n    //     this.setLoadingState(status);\n    //     console.log({ status: status, msg: msg });\n    //     if (msg.length) {\n    //       this.props.PushPopupAlert({\n    //         title: msg,\n    //         theme: PopupAlertTheme.danger,\n    //       });\n    //     } else if (status === false) {\n    //       this.setState({ selectExam: true });\n    //     }\n    //   }\n    // );\n\n    // LOAD SESSION BY INSTITUTION =================\n    this.FD_GetSessions(institution_id);\n  };\n\n  componentDidMount() {\n    if (FC_HasInstitute(this.props.auth.education_institution_id) === true) {\n      this.FC_OnInstitutionChanged(this.props.auth.education_institution_id!);\n    } else {\n      if (\n        this.props.schoolLevels.education_categories === null ||\n        this.props.schoolLevels.education_categories.length\n      ) {\n        this.props.loadEducationCategories(\n          (status: boolean, data?: education_category[]) => {\n            this.setState({ loading: status });\n            if (!status && data && data.length > 0) {\n              this.setState({ selectedEducationCategory: data[0] });\n              if (\n                FC_HasInstitute(this.props.auth.education_institution_id) ===\n                false\n              ) {\n                this.FC_OnInstitutionChanged(data[0].education_institute_id);\n              } else {\n                this.FC_OnInstitutionChanged(\n                  this.props.auth.education_institution_id!\n                );\n              }\n            }\n          }\n        );\n      } else if (!this.props.schoolLevels.selectedEducationCategory) {\n        this.setState({\n          selectedEducationCategory:\n            this.props.schoolLevels.education_categories[0],\n        });\n        this.FC_OnInstitutionChanged(\n          this.props.schoolLevels.education_categories[0].education_institute_id\n        );\n      }\n    }\n    if (this.props.courses === null || this.props.courses.length === 0) {\n      this.props.loadCourses((value: boolean) =>\n        this.setState({ loading: value })\n      );\n    }\n  }\n\n  FC_LoadAttendance = async (exam_id: string) => {\n    this.setState({ loadAttendance: true });\n    try {\n      const res = await axios.get<AttendanceListType[]>(\n        `${API.PROCTORING}/attandaceingroup/exam/${exam_id}`\n      );\n      this.setState({ attendanceList: res.data, loadAttendance: false });\n      console.log(\"FC_LoadAttendanceData: \", res);\n    } catch (error: any) {\n      console.error({ error: errorToText(error) });\n    }\n  };\n\n  FC_AllGroupToExcel = (data: AttendanceListType[]): FileMultipleDataType[] => {\n    let result: FileMultipleDataType[] = [];\n\n    data.forEach((attendance) => {\n      result.push({\n        sheetName: attendance.group_id,\n        data: this.FC_OneGroupToExcel(attendance),\n      });\n    });\n\n    return result;\n  };\n\n  FC_OneGroupToExcel = (data: AttendanceListType): any[] => {\n    let result: any[] = [];\n    data.candidates.forEach((candidate) => {\n      result.push({\n        invigilator: data.invigilator.fname + \" \" + data.invigilator.lname,\n        invigilator_email: data.invigilator.email,\n        candidate_nid: candidate.n_id,\n        candidate: candidate.user_info.fname + \" \" + candidate.user_info.lname,\n        candidate_sex: candidate.user_info.sex,\n        candidate_phone: candidate.phone_number,\n        candidate_seat_number: candidate.seat_number,\n      });\n    });\n\n    return result;\n  };\n\n  render() {\n    const DATA_SelectedGroup = this.state.attendanceList.find(\n      (item) => item._id === this.state.selected_attendance_group\n    );\n\n    const DATA_PrintGroup = DATA_SelectedGroup\n      ? this.FC_OneGroupToExcel(DATA_SelectedGroup)\n      : [];\n    const DATA_PrintAllGroup = this.FC_AllGroupToExcel(\n      this.state.attendanceList\n    );\n\n    return (\n      <div>\n        <SideNavigation>\n          {/* SELECT EDUCATION CATEGORY IF USER NOT HAS INSTITUTION */}\n          {FC_HasInstitute(this.props.auth.education_institution_id) ===\n            false && (\n            <div className=\"flex flex-col mb-4\">\n              <span className=\"text-sm text-gray-600 mb-2 font-medium\">\n                Education categories:\n              </span>\n              {this.props.schoolLevels.education_categories === null ? (\n                <Loading />\n              ) : this.props.schoolLevels.education_categories.length === 0 ? (\n                <span>No result found</span>\n              ) : (\n                <section>\n                  {this.props.schoolLevels.education_categories.map(\n                    (item, i) => (\n                      <div\n                        onClick={() => {\n                          this.setState({ selectedEducationCategory: item });\n                          this.FC_OnInstitutionChanged(\n                            item.education_institute_id\n                          );\n                        }}\n                        key={i + 1}\n                        className={`border rounded px-2 py-2 mb-2 cursor-pointer ${\n                          this.state.selectedEducationCategory !== \"all\" &&\n                          this.state.selectedEducationCategory\n                            .education_institute_id ===\n                            item.education_institute_id\n                            ? \"bg-blue-600 text-white hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                            : \"hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                        } font-bold flex flex-row items-center gap-2`}\n                      >\n                        {this.state.selectedEducationCategory !== \"all\" &&\n                        this.state.selectedEducationCategory\n                          .education_institute_id ===\n                          item.education_institute_id ? (\n                          <MdRadioButtonChecked />\n                        ) : (\n                          <MdRadioButtonUnchecked />\n                        )}\n                        <span>{item.education_category_title}</span>\n                      </div>\n                    )\n                  )}\n                </section>\n              )}\n            </div>\n          )}\n          {/* SELECT PERIOD */}\n          <div className=\"\">\n            <div className=\"text-gray-600 text-sm mb-2\">Selected period:</div>\n            <div\n              onClick={() => this.setState({ selectPeriod: true })}\n              className=\"font-bold bg-blue-50 border border-blue-200 rounded py-2 cursor-pointer text-xs px-2 hover:underline  text-blue-600  mb-4 w-full flex flex-row items-center animate__animated animate__zoomIn\"\n            >\n              {this.state.selected_period !== null\n                ? capitalizeFirstWord(\n                    this.state.selected_period.session_plan_name\n                  )\n                : \"Filter by period\"}\n              <FiEdit className=\"text-3xl text-blue-600\" />\n            </div>\n          </div>\n        </SideNavigation>\n\n        {/* REPORT TITLE ========================================= */}\n        <div className=\"flex md:items-center flex-col md:flex-row md:justify-between gap-1 mx-1 md:mx-4 mt-4\">\n          <div className=\"flex flex-col gap-1\">\n            <span className=\"text-xl font-bold text-gray-700\">\n              Attendance Report\n            </span>\n            <div\n              onClick={() => this.setState({ selectExam: true })}\n              className=\"flex flex-row gap-2 items-end\"\n            >\n              <span className=\"text-gray-500 text-xl\">Exam:</span>\n              <span className=\"text-blue-600 font-bold underline cursor-pointer text-2xl flex-wrap\">\n                {this.state.thisExam\n                  ? this.state.thisExam.course_name\n                  : \"No exam has been selected, Click to select\"}\n              </span>\n            </div>\n          </div>\n          <div className=\"w-max\">\n            {DATA_PrintAllGroup.length > 0 && (\n              <div className=\"flex flex-row items-center justify-end font-bold mb-2\">\n                <BiExport className=\"text-2xl text-gray-500\" />\n                <span className=\"text-gray-500 mr-1\">Export as</span>\n                {/* EXCEL BUTTON ================= */}\n                <ExportToExcel\n                  fileData={DATA_PrintAllGroup}\n                  fileName={\n                    this.state.thisExam\n                      ? this.state.thisExam.course_name + \" - attendance\"\n                      : \"Unknown exam title - attendance\"\n                  }\n                  btnName=\"Excel File\"\n                />\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* lis of all attendance for selected exam */}\n        <div>\n          <table className=\"w-full shadow bg-white my-4\">\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n              <tr>\n                <td className=\"px-2 py-2\">#</td>\n                <td className=\"px-2 py-2\">Group</td>\n                <td className=\"px-2 py-2\">Invigilator</td>\n                <td className=\"px-2 py-2\">Status</td>\n                <td className=\"px-2 py-2\"></td>\n              </tr>\n            </thead>\n            <tbody>\n              {/* WHILE STILL LOADING ====================== */}\n              {this.state.loadAttendance === true && <TableLoading cols={5} />}\n              {/* WHILE NO DATA FOUND ====================== */}\n              {!this.state.loadAttendance &&\n                this.state.attendanceList.length <= 0 && (\n                  <tr>\n                    <td colSpan={5} className=\"px-2 py-2\">\n                      <NoResult\n                        theme={NoResultThemes.Dark}\n                        value={\"No session plan found!\"}\n                        component={\n                          <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n                            <ul className=\"text-base py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                              <li\n                                onClick={() =>\n                                  this.setState({ selectExam: true })\n                                }\n                                className=\"underline text-blue-600 cursor-pointer\"\n                              >\n                                Choose another exam!\n                              </li>\n                            </ul>\n                          </div>\n                        }\n                      />\n                    </td>\n                  </tr>\n                )}\n              {/* WHILE NO DATA FOUND ====================== */}\n              {!this.state.loadAttendance &&\n                this.state.attendanceList.length > 0 &&\n                this.state.attendanceList.map((item, index) => (\n                  <Fragment key={index + item._id}>\n                    <tr\n                      className={`border-b border-gray-200 hover:bg-gray-100 group cursor-pointer ${\n                        DATA_SelectedGroup &&\n                        DATA_SelectedGroup._id === item._id &&\n                        \"border-blue-600 bg-blue-200\"\n                      }`}\n                      onClick={() => {\n                        this.state.loadAttendance === false &&\n                          this.setState({\n                            selected_attendance_group: item._id,\n                          });\n                      }}\n                    >\n                      <td className=\"px-2 py-1 text-left whitespace-nowrap\">\n                        {index + 1}\n                      </td>\n                      <td className=\"px-2 py-1 text-left font-medium text-lg\">\n                        {item.group_id}\n                      </td>\n                      <td className=\"px-2 py-1 text-left\">\n                        <span className=\"text-lg\">\n                          {item.invigilator.fname +\n                            \" \" +\n                            item.invigilator.lname}\n                        </span>\n                      </td>\n                      <td className=\"px-2 py-1 font-semibold\">\n                        {item.isExpired ? (\n                          <span className={`text-green-700`}>Active</span>\n                        ) : (\n                          <span className={`text-red-700`}>Expired</span>\n                        )}\n                      </td>\n                      <td\n                        className=\"px-5 text-center\"\n                        colSpan={\n                          DATA_SelectedGroup &&\n                          DATA_SelectedGroup._id !== item._id\n                            ? 2\n                            : 0\n                        }\n                      >\n                        <div className=\"flex flex-row items-center gap-2 justify-end\">\n                          <div\n                            onClick={() => {\n                              this.state.loadAttendance &&\n                                this.setState({\n                                  selected_attendance_group: item._id,\n                                });\n                            }}\n                            className={`bg-gray-50 group-hover:bg-blue-200 rounded-full px-1 py-1 ${\n                              this.state.loadAttendance\n                                ? \"cursor-not-allowed\"\n                                : \"cursor-pointer\"\n                            }`}\n                          >\n                            {DATA_SelectedGroup &&\n                            DATA_SelectedGroup._id === item._id ? (\n                              <MdExpandLess className=\"text-3xl text-gray-700\" />\n                            ) : (\n                              <MdExpandMore className=\"text-3xl text-gray-700\" />\n                            )}\n                          </div>\n                        </div>\n                      </td>\n                    </tr>\n                    {DATA_SelectedGroup && DATA_SelectedGroup._id === item._id && (\n                      <tr className=\"bg-gray-200\">\n                        <td colSpan={5} className=\"px-3 py-2\">\n                          <AttendanceCandidates\n                            candidatesList={DATA_SelectedGroup}\n                          >\n                            {DATA_PrintGroup.length > 0 && (\n                              <ExportToExcel\n                                fileData={DATA_PrintGroup}\n                                fileName={\n                                  DATA_SelectedGroup.exam.course_name +\n                                  \"-\" +\n                                  DATA_SelectedGroup.group_id\n                                }\n                                btnName=\"Download Group\"\n                              />\n                            )}\n                          </AttendanceCandidates>\n                        </td>\n                      </tr>\n                    )}\n                  </Fragment>\n                ))}\n            </tbody>\n          </table>\n        </div>\n        {/* #END - lis of all attendance for selected exam */}\n\n        {/* PERIOD && POSITION CONTENT MODAL */}\n        {(this.state.selectExam === true ||\n          this.state.selectPeriod === true) && (\n          <Modal\n            title={\n              <div className=\"flex flex-row gap-4 items-center\">\n                {this.state.selectPeriod === true ? (\n                  <MdHistory className=\"text-5xl text-blue-600\" />\n                ) : (\n                  <IoFilter className=\"text-5xl text-blue-600\" />\n                )}\n                <div className=\"flex flex-col\">\n                  <span className=\"font-bold text-xl text-blue-600\">\n                    {this.state.selectPeriod === true\n                      ? \"Choose a period\"\n                      : \"Filter by a exam title\"}\n                  </span>\n                </div>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() =>\n              this.setState({\n                selectExam: false,\n                selectPeriod: false,\n                searchExamInput: \"\",\n              })\n            }\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{ title: true }}\n          >\n            <div className=\"px-2 pb-2\">\n              {this.state.selectPeriod === true ? (\n                <ChooseSession\n                  allSession={this.props.sessionPlan.allSessionPlans}\n                  setSelectSession={(value: SessionPlanInterface | \"all\") => {\n                    if (value !== \"all\") {\n                      this.setState({\n                        selected_period: value,\n                        selectPeriod: false,\n                      });\n                      this.props.loadExamsListByPeriod(\n                        value._id,\n                        (value: boolean) => this.setState({ loading: value })\n                      );\n                    }\n                  }}\n                  chooseAll={false}\n                  currentSelected={\n                    this.state.selected_period\n                      ? this.state.selected_period\n                      : \"all\"\n                  }\n                />\n              ) : this.state.selectExam === true &&\n                (this.props.examsList === null ||\n                  this.props.courses === null) ? (\n                <LoadingV2 type={LoadingType.dark} />\n              ) : this.props.examsList!.length === 0 ? (\n                <div className=\"flex flex-col text-gray-400 items-center justify-center\">\n                  <MdSearch className=\"text-6xl\" />\n                  <div className=\"flex flex-col items-center justify-center\">\n                    <span>No exams found! Please go back!</span>\n                    <Link\n                      to=\"/\"\n                      className=\"btn bg-yellow-100 text-yellow-700 my-4 hover:bg-yellow-200\"\n                    >\n                      Go back\n                    </Link>\n                  </div>\n                </div>\n              ) : (\n                <>\n                  <div className=\"flex flex-col\">\n                    <span className=\"text-gray-600 text-xs font-bold\">\n                      Filter by exam title\n                    </span>\n                    <input\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                        this.setState({ searchExamInput: e.target.value })\n                      }\n                      type=\"text\"\n                      className=\"mb-4 bg-gray-100 px-3 py-2 rounded\"\n                      placeholder=\"Keyword...\"\n                    />\n                  </div>\n                  {searchData(\n                    this.props.examsList!,\n                    this.state.searchExamInput\n                  ).map((item: ExamItemResponse, key) => {\n                    const thisExam = this.props.courses?.find(\n                      (courseItem) => courseItem.course_id === item.course\n                    );\n                    return (\n                      <div\n                        key={key + 1}\n                        onClick={() => {\n                          this.setState({ selected_exam: item });\n                          this.FC_LoadAttendance(item.id);\n                          this.setState({\n                            selectExam: false,\n                            searchExamInput: \"\",\n                            reportTitle: item.course,\n                            thisExam,\n                          });\n                        }}\n                        className=\"bg-white cursor-pointer rounded  px-3 py-2 border border-gray-200 hover:border-blue-500 hover:bg-blue-100 mb-2\"\n                      >\n                        <div className=\"grid lg:grid-cols-12\">\n                          <div className=\"col-span-12 lg:col-span-10\">\n                            <div className=\"flex flex-row items-center gap-3\">\n                              <div>\n                                <IoIosBriefcase className=\"text-4xl md:text-5xl text-blue-600\" />\n                              </div>\n                              <div className=\"flex flex-col\">\n                                <span className=\"text-xs lg:text-sm font-bold text-gray-700\">\n                                  {thisExam\n                                    ? thisExam.course_name\n                                    : \"Unknown exam\"}\n                                </span>\n                                <span className=\"text-xs text-gray-500 italic\">\n                                  Date of exam:{\" \"}\n                                  <span\n                                    className=\"text-gray-800 font-light\"\n                                    style={{ fontStyle: \"normal\" }}\n                                  >\n                                    {DATE(item.exam_date)}\n                                  </span>\n                                </span>\n                              </div>\n                            </div>\n                          </div>\n                          <div className=\"col-span-12 lg:col-span-2 hidden lg:block\">\n                            <div className=\"h-full flex items-center justify-end\">\n                              <div className=\"btn bg-blue-600 text-white float-right\">\n                                Choose\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </>\n              )}\n            </div>\n          </Modal>\n        )}\n        {/* END PERIOD && POSITION CONTENT MODAL */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  sessionPlan,\n  schoolLevels,\n  prepareExam,\n  course,\n}: StoreState): {\n  auth: Auth;\n  sessionPlan: SessionPlanReducerInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n  examsList: ExamItemResponse[] | null;\n  courses: course[] | null;\n} => {\n  return {\n    auth: auth,\n    sessionPlan,\n    schoolLevels: schoolLevels,\n    examsList: prepareExam.examsList,\n    courses: course.courses,\n  };\n};\n\nexport const AttendanceReport = connect(mapStateToProps, {\n  FC_GetAllSessionByInstitution,\n  loadEducationCategories,\n  PushPopupAlert,\n  loadExamsListByPeriod,\n  loadCourses,\n})(_AttendanceReport);\n","import React, { FC, ReactElement, ReactNode } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, System } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { NavToogle, PageHasSubNav } from \"../../actions\";\nimport { MdBrightness1, MdSearch } from \"react-icons/md\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  system: System;\n  PageHasSubNav: Function;\n  NavToogle: Function;\n  children: ReactNode;\n}\n//\ninterface AppState {\n  loading: boolean;\n}\n\nclass _SideNavigation extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount = () => this.props.PageHasSubNav(true);\n  componentWillUnmount = () => this.props.PageHasSubNav(false);\n\n  render() {\n    const isAuthenticated = this.props.auth.isAuthenticated;\n\n    if (isAuthenticated === false) {\n      return null;\n    }\n\n    const navActive = this.props.system.navigation;\n    return (\n      <div\n        className={`fixed w-48 p-1 pr-2 pl-6 text-gray-700 bg-white ${\n          navActive === true ? \"lg:left-16  left-16\" : \" -left-72 lg:left-16\"\n        }  top-0 bottom-0 pt-20 z-30 shadow-lg  transition-all duration-500 ease-in-out overflow-y-auto`}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n}: StoreState): { auth: Auth; system: System } => {\n  return { auth: auth, system: system };\n};\n\nexport const SideNavigation = connect(mapStateToProps, {\n  NavToogle,\n  PageHasSubNav,\n})(_SideNavigation);\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SearchComponentInterface = {\n  data: any[];\n};\n\nexport const Search: FC<SearchComponentInterface> = ({\n  data,\n}): ReactElement => {\n  return (\n    <div className=\"m-1 rounded-md shadow-md border border-blue-400 bg-white p-1 flex \">\n      <label htmlFor=\"search-text\" className=\"inline-block text-2xl\">\n        <MdSearch className=\"inline-block text-blue-400\" />\n      </label>\n      <input\n        type=\"search\"\n        className=\"outline-none bg-transparent flex-1 pl-1\"\n        placeholder=\"Search\"\n        id=\"search-text\"\n      />\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype MainItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const MainItem: FC<MainItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n  return (\n    <section\n      className={`${\n        active === true\n          ? \"bg-blue-500 text-white font-bold\"\n          : \"bg-blue-100 text-blue-800\"\n      } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex cursor-pointer items-center`}\n    >\n      <section className=\"flex-1\">\n        <IconDefined className=\"inline-block mr-1 text-xs\" />\n        <span>{title}</span>\n      </section>\n\n      {count > 0 ? (\n        <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n          {count}\n        </span>\n      ) : null}\n    </section>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemContainerComponentInterface = {\n  children: ReactNode;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const SubItemContainer: FC<SubItemContainerComponentInterface> = ({\n  children,\n}): ReactElement => {\n  return (\n    <div className=\"ml-3 overflow-y-auto border-l-2 border-blue-200 -mt-1 pt-2 mb-2 pl-1 cursor-pointer\">\n      {children}\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n * @important Remenber to use these components inside the <SubItemContainer>...</SubItemContainer>\n */\nexport const SubItem: FC<SubItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n\n  return (\n    <div\n      className={`animate__animated animate__zoomIn animate__faster ${\n        active === true ? \"bg-blue-500 text-white font-bold\" : \" text-blue-800\"\n      } text-blue-800 bg-blue-200 rounded-md px-1 mb-1 flex items-center py-1 font-bold`}\n    >\n      <IconDefined\n        className={`inline-block mr-0.1 text-xs ${\n          active === true ? \"text-white\" : \"\"\n        }`}\n      />\n      <span\n        className={`inline-block pl-1 ${active === true ? \"text-white\" : \"\"}`}\n      >\n        {title}\n      </span>\n      {count >= 1 ? (\n        <span\n          className={`text-sm fint-bold ${active === true ? \"text-white\" : \"\"}`}\n        >\n          {count}\n        </span>\n      ) : null}\n    </div>\n  );\n};\n","import React from \"react\";\n\ntype TableLoadingProps = {\n  cols: number;\n};\nconst TableLoading: React.FC<TableLoadingProps> = (props) => {\n  const displayCols = (): JSX.Element[] => {\n    let colsArray: number[] = [];\n    for (let index = 0; index < props.cols; index++) {\n      colsArray.push(index);\n    }\n    let result = colsArray.map((element) => {\n      return (\n        <td className=\"p-3 text-center whitespace-nowrap\" key={element}>\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      );\n    });\n\n    return result;\n  };\n  return (\n    <>\n      <tr className=\"border-b border-gray-200\" key={Math.random()}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={Math.random()}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={Math.random()}>\n        {displayCols()}\n      </tr>\n    </>\n  );\n};\n\nexport default TableLoading;\n","import React from \"react\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport { RiFileExcel2Fill } from \"react-icons/ri\";\n\n// type any[] is for single sheet file\n// type { sheetName: string; data: any[] }[] is for multiple sheets file\nexport type FileMultipleDataType = { sheetName: string; data: any[] };\nexport type FileDataType = any[] | FileMultipleDataType[];\n\ninterface ExportToExcelProps {\n  fileData: FileDataType;\n  fileName: string;\n  btnName?: string;\n  className?: string;\n  showIcon?: boolean;\n}\n\nconst ExportToExcel: React.FC<ExportToExcelProps> = ({\n  fileData,\n  fileName,\n  btnName = \"Excel\",\n  className = \"flex items-center gap-1 px-4 py-1 rounded text-green-700 bg-white border hover:text-white hover:bg-green-700 border-green-700 font-bold\",\n  showIcon = true,\n}) => {\n  const fileType =\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n  const fileExtension = \".xlsx\";\n\n  const exportToCSV = (excelData: FileDataType, fileName: string) => {\n    if (FN_IsDataForMultiple(excelData)) {\n      const workbook = XLSX.utils.book_new();\n      excelData.forEach((dataItem: { sheetName: string; data: any[] }) => {\n        const worksheet = XLSX.utils.json_to_sheet(dataItem.data);\n        XLSX.utils.book_append_sheet(workbook, worksheet, dataItem.sheetName);\n      });\n\n      const excelBuffer = XLSX.write(workbook, {\n        bookType: \"xlsx\",\n        type: \"array\",\n      });\n      const data = new Blob([excelBuffer], { type: fileType });\n      FileSaver.saveAs(data, fileName + fileExtension);\n    } else {\n      const worksheet = XLSX.utils.json_to_sheet(excelData);\n      const workbook = { Sheets: { data: worksheet }, SheetNames: [\"data\"] };\n      const excelBuffer = XLSX.write(workbook, {\n        bookType: \"xlsx\",\n        type: \"array\",\n      });\n      const data = new Blob([excelBuffer], { type: fileType });\n      FileSaver.saveAs(data, fileName + fileExtension);\n    }\n  };\n\n  return (\n    <button\n      onClick={(e) => exportToCSV(fileData, fileName)}\n      className={className}\n    >\n      {showIcon && <RiFileExcel2Fill />}\n      {btnName}\n    </button>\n  );\n};\n\n// THIS FUNCTION WILL LOOP THROUGH THE ARRAY GIVEN TO CHECK WEEVER\n// THE DATA TYPE IS VALID FOR MULTIPLE SHEET\nconst FN_IsDataForMultiple = (\n  data: { sheetName: string; data: any[] }[]\n): boolean => {\n  let i = 0;\n  while (i < data.length) {\n    if (\n      data[i].sheetName === undefined ||\n      typeof data[i].sheetName !== \"string\" ||\n      data[i].data === undefined ||\n      Array.isArray(data[i].data) === false\n    )\n      return false;\n    i++;\n  }\n  return true;\n};\n\nexport default ExportToExcel;\n","import React, { useState } from \"react\";\nimport {\n  MdCheckCircle,\n  MdRadioButtonUnchecked,\n  MdSearch,\n} from \"react-icons/md\";\nimport Loading from \"../../components/Loading/Loading\";\nimport {\n  PlansInterface,\n  SessionPlanInterface,\n  SessionPlanTypeStatus,\n} from \"../../interfaces\";\nimport { DATE } from \"../../utils/functions\";\nimport searchData from \"../../utils/search\";\n\nexport const isPlansActive = (plans: PlansInterface[]): PlansInterface[] => {\n  let today = new Date();\n  let activePlans: PlansInterface[] = [];\n  for (let plan of plans) {\n    let startDate = new Date(plan.start_date);\n    let endDate = new Date(plan.end_date);\n    if (\n      startDate.getTime() <= today.getTime() &&\n      endDate.getTime() >= today.getTime() &&\n      plan.type_status === SessionPlanTypeStatus.OPEN\n    ) {\n      activePlans = [...activePlans, plan];\n    }\n  }\n  return activePlans;\n};\n\ninterface ChooseSessionProps {\n  allSession: SessionPlanInterface[] | null;\n  setSelectSession: (period: SessionPlanInterface | \"all\") => void;\n  currentSelected: SessionPlanInterface | \"all\";\n  chooseAll: boolean;\n}\n\nconst ChooseSession = (props: ChooseSessionProps) => {\n  const [selectedPlan, setSelectedPlan] = useState<SessionPlanInterface | null>(\n    null\n  );\n  const [search, setSearch] = useState<string>(\"\");\n  const getSearch = (\n    period: SessionPlanInterface[],\n    searched: string\n  ): SessionPlanInterface[] => {\n    return searchData(period, searched) as SessionPlanInterface[];\n  };\n\n  return (\n    <div className=\"\">\n      <div className=\"px-3\">\n        <input\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n            setSearch(e.target.value)\n          }\n          type=\"text\"\n          className=\"py-3 px-4 w-full rounded border border-gray-400 mb-3\"\n          placeholder=\"Search by year, name\"\n          disabled={props.allSession === null || props.allSession.length === 0}\n        />\n      </div>\n\n      <div className=\"bg-gray-100 px-3 pt-3 pb-2 rounded-b\">\n        {props.allSession === null ? (\n          <Loading />\n        ) : props.allSession.length === 0 ? (\n          <div className=\"flex flex-col text-gray-400 items-center justify-center mb-2 bg-white py-4\">\n            <MdSearch className=\"text-6xl\" />\n            <div className=\"flex flex-col items-center justify-center\">\n              <span>No session found!</span>\n            </div>\n          </div>\n        ) : (\n          <section>\n            {props.chooseAll && (\n              <div\n                className={`rounded border ${\n                  props.currentSelected === \"all\"\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2 flex flex-col md:flex-row items-start md:items-center md:justify-between`}\n              >\n                <div className=\"flex flex-row items-center gap-3\">\n                  {props.currentSelected === \"all\" ? (\n                    <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                  ) : (\n                    <MdRadioButtonUnchecked\n                      className={`text-gray-300 text-4xl`}\n                    />\n                  )}\n                  <div className=\"flex flex-col\">\n                    <div className={`text-gray-600 font-bold`}>All session</div>\n                  </div>\n                </div>\n                <div\n                  onClick={() => {\n                    props.setSelectSession(\"all\");\n                  }}\n                  className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                >\n                  Select\n                </div>\n              </div>\n            )}\n            {getSearch(props.allSession, search).map((item, i) => (\n              <div\n                key={i + 1}\n                className={`rounded border ${\n                  props.currentSelected !== \"all\" &&\n                  props.currentSelected._id === item._id\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2`}\n              >\n                <div className=\"flex flex-col md:flex-row items-start md:items-center md:justify-between \">\n                  <div className=\"flex flex-row items-center gap-3\">\n                    {props.currentSelected !== \"all\" &&\n                    props.currentSelected._id === item._id ? (\n                      <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                    ) : (\n                      <MdRadioButtonUnchecked\n                        className={`text-gray-300 text-4xl`}\n                      />\n                    )}\n                    <div className=\"flex flex-col\">\n                      <div\n                        className={`${\n                          props.currentSelected !== \"all\" &&\n                          props.currentSelected._id === item._id\n                            ? \"text-blue-600\"\n                            : \"text-gray-600\"\n                        } font-bold`}\n                      >\n                        {item.session_plan_name}\n                      </div>\n                      <div className=\"text-sm text-gray-500\">\n                        <span>Status: </span>\n                        <span\n                          className={`${\n                            item.is_active === true\n                              ? \"text-gray-900 font-bold underline\"\n                              : \"text-gray-500 italic\"\n                          }`}\n                        >\n                          {item.is_active === true ? \"Active\" : \"Expired\"}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"flex flex-row items-center gap-2\">\n                    {(selectedPlan === null ||\n                      selectedPlan._id !== item._id) && (\n                      <div\n                        onClick={() => setSelectedPlan(item)}\n                        className=\"bg-gray-50 group-hover:bg-blue-100 font-semibold text-gray-400 group-hover:text-blue-600 rounded px-3 py-2 cursor-pointer\"\n                      >\n                        Details\n                      </div>\n                    )}\n                    <div\n                      onClick={() => {\n                        props.setSelectSession(item);\n                      }}\n                      className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                    >\n                      Select\n                    </div>\n                    {selectedPlan !== null && selectedPlan._id === item._id && (\n                      <div\n                        onClick={() => setSelectedPlan(null)}\n                        className=\"bg-red-100 group-hover:bg-red-200 font-semibold text-red-600 group-hover:text-red-800 rounded px-3 py-2 cursor-pointer\"\n                      >\n                        Close\n                      </div>\n                    )}\n                  </div>\n                </div>\n                {/* {selectedPlan !== null && selectedPlan._id === item._id && (\n                  <div className=\"bg-white rounded border border-blue-50 mt-2 animate__animated animate__fadeIn\">\n                    <table className=\"w-full\">\n                      <thead className=\"bg-blue-50\">\n                        <tr className=\"text-left\">\n                          <th className=\"px-3 py-3\">#</th>\n                          <th>Plan</th>\n                          <th>Start date</th>\n                          <th>Ending date</th>\n                          <th>Status</th>\n                        </tr>\n                      </thead>\n                      <tbody className=\"text-sm\">\n                        {selectedPlan !== null &&\n                          selectedPlan._id === item._id &&\n                          selectedPlan.plans.length > 0 &&\n                          item.plans.map((plan, i) => (\n                            <tr\n                              key={i + 1}\n                              className={`${\n                                isPlansActive(item.plans).find(\n                                  (itm) => itm.type_key === plan.type_key\n                                ) !== undefined\n                                  ? \"bg-blue-100 text-blue-600 font-bold\"\n                                  : \"\"\n                              } text-left border-b border-blue-50`}\n                            >\n                              <td className=\"px-3 py-1\">{i + 1}</td>\n                              <td>{plan.type_title}</td>\n                              <td>{DATE(plan.start_date, \"DD/MM/YYYY\")}</td>\n                              <td>{DATE(plan.end_date, \"DD/MM/YYYY\")}</td>\n                              <td>{plan.type_status}</td>\n                            </tr>\n                          ))}\n                      </tbody>\n                    </table>\n                  </div>\n                )} */}\n              </div>\n            ))}\n          </section>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(ChooseSession);\n"],"sourceRoot":""}
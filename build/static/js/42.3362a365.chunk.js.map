{"version":3,"sources":["components/Table/Table.tsx","actions/users.ts","actions/location.ts","containers/UserManagement/UserAccess.tsx","containers/UserManagement/UserList.tsx","shared/blank_profile.png","containers/UserManagement/RoleList.tsx","containers/UserManagement/UserRole.tsx","containers/Locations/ViewDistricts.tsx","containers/Locations/ViewProvince.tsx","containers/Locations/ViewSectors.tsx","containers/Locations/Locations.tsx"],"names":["Table","props","table","tr","tableId","length","result","characters","charactersLength","i","charAt","Math","floor","random","FC_makeID","useState","totalItems","setTotalItems","totalPages","setTotalPages","currentPage","setCurrentPage","pages","setPages","pageSize","setPageSize","startIndex","setStartIndex","endIndex","setEndIndex","useEffect","pagination","tablePagination","document","getElementById","getElementsByTagName","ceil","min","_pages","Array","from","keys","map","style","display","className","tableSize","search","searchBG","type","placeholder","onChange","e","data","filterType","filter","td","rows","cols","toLowerCase","columns","textContent","innerText","indexOf","filterTable","target","value","disabled","loading","Number","tableClass","rounded","id","hideColumns","thColor","column","index","padding","alignText","isSortAllowed","onClick","switching","x","y","shouldSwitch","colIndex","dir","switchcount","innerHTML","parentNode","insertBefore","sortThisColumn","columnTitle","aria-label","page","pageIndex","documentValidationStatus","fetchUserAccess","dispatch","a","setAxiosToken","axios","get","API","AUTH","res","console","log","users_response","ActionTypes","FETCH_USERS_ACCESS","payload","users","error","user_error","blockUserToSystem","BLOCK_USER_TO_SYSTEM","unBlockUserToSystem","UNBLOCK_USER_TO_SYSTEM","assignRoleToUserAccess","ASSIGN_ROLE_TO_USER","customizeUserAccess","CUSTOMIZE_USER_ACCESS","resetUserAccess","RESET_USER_ACCESS","verifyAllDocument","VERIFY_ALL_DOCUMENT","getAllRoom","callback","APPLICATION","GET_ALL_ROOM","errorToText","FC_CreateProvince","CREATE_PROVINCE","FC_UpdateProvince","UPDATE_PROVINCE","FC_DeleteProvince","DELETE_PROVINCE","FC_CreateDistrict","CREATE_DISTRICT","FC_UpdateDistrict","UPDATE_DISTRICT","FC_DeleteDistrict","DELETE_DISTRICT","FC_CreateSector","CREATE_SECTOR","FC_UpdateSector","UPDATE_SECTOR","FC_DeleteSector","DELETE_SECTOR","FC_CreateCenter","CREATE_CENTER","FC_UpdateCenter","UPDATE_CENTER","FC_DeleteCenter","DELETE_CENTER","FC_CreateRoom","CREATE_ROOM","FC_UpdateRoom","UPDATE_ROOM","FC_DeleteRoom","delete_room","DELETE_ROOM","UserAccess","connect","userInfo","setFeedBack","setUserAccess","feedBack","userAccess","currentAccess","setCurrentAccess","setLoadind","loadindRequest","setLoadindRequest","createPermission","setCreatePermission","viewPermission","setViewPermission","updatePermission","setUpdatePermission","deletePermission","setDeletePermission","overrideUserAccess","default_access","custome_access","overideAccess","key","Object","prototype","hasOwnProperty","call","findCustom","find","custom","push","access","entries","handleCustomization","preventDefault","message","task","findIndex","permitted","create","view","update","delete","user_id","custome_user_access_id","patch","post","customize_access","onSubmit","checked","ModalState","RoleList","searchInput","setSearchInput","roleList","setChooseRole","role","handleSelectRole","system_user_role_id","capitalizeFirstLetter","UserRole","setRoleId","setState","roleId","setSelectedRole","selectedRole","setProvinceId","provinceId","setDistrictId","districtId","setCenterId","centerId","setRoomId","roomId","setLoadingForm","loadingForm","setSchoolId","schoolId","setLoading","setInstituteId","instituteId","setFormError","formError","setLoadingRequest","loadingRequest","chooseRole","setDefaultState","LOAD_province","LOAD_district","district_required","roomList","distinctDistrict","item","_id","district_id","province_id","room_required","LocationsInArray","room_id","center_id","school_required","schoolList","LOAD_school","school_id","componentDidMount","state","vvvvv","role_id","TYPE","element","tableData","colSpan","assignRoleToUser","window","confirm","msg","isEmptyOrSpaces","education_institution_required","formData","status","education_institution_id","setChangeRole","PushPopupAlert","title","theme","PopupAlertTheme","success","role_error","danger","location","ids","districts","keyDistrict","includes","distinctCenter","rooms","forEach","distinctRoom","this","Loading","schoolLevels","education_categories","institute","education_institute_id","education_category_title","province","province_name","undefined","district","district_name","school","school_name","center","center_name","room","room_name","Component","LocationData","locationTemp","p","d","centers","c","r","room_number","toString","capacity","occupied","userTypes","loadingUser","setLoadingUser","manageUser","setManageUser","changeRole","manageUserId","setManageUserId","loadingRequestType","setLoadingRequestType","setSchoolList","setRoomList","roomTable","setRoomTables","loadSchools","loadRooms","blockUser","actionType","restUserAccess","resetedAccess","user","reseting_user_access","user_info","fname","lname","email","sex","getRoleById","src","photo","profile","alt","getInstituteById","NoResult","NoResultThemes","Dark","n_id","phone_number","is_active","districtName","setDistrictName","districtCode","setDistrictCode","setError","handleSubmit","actionTypes","thisProvince","province_code","district_code","sectors","setActionTypes","thisDistrict","setThisDistrict","doc_category_error","component","Modal","backDrop","Themes","default","close","displayClose","backDropClose","widthSizeClass","ModalSize","medium","body","footer","provinceTitle","setProvinceTitle","provinceCode","setProvinceCode","updated","setThisProvince","province_error","locations","sectorName","setSectorName","sectorCode","setSectorCode","sector_name","sector_code","sector_id","thisSector","setThisSector","sector_error","handleDelete","sectorId","district_error","sector","Locations","roomLocation","ViewDistricts"],"mappings":"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","file":"static/js/42.3362a365.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport { MdNavigateBefore, MdNavigateNext, MdSearch } from \"react-icons/md\";\n\nconst FC_makeID = (length: number = 5): string => {\n  let result: string = \"\";\n  let characters: string =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  let charactersLength = characters.length;\n  for (let i: number = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\nexport const sortThisColumn = (\n  tableId: string,\n  colIndex: number = 0,\n  dir: \"asc\" | \"desc\" = \"asc\"\n) => {\n  var table,\n    rows,\n    switching,\n    i,\n    x,\n    y,\n    shouldSwitch,\n    switchcount = 0;\n  table = document.getElementById(tableId) as HTMLTableElement;\n  switching = true;\n  /* Make a loop that will continue until\n  no switching has been done: */\n  if (table) {\n    while (switching) {\n      //start by saying: no switching is done:\n      switching = false;\n      rows = table.rows;\n      /*Loop through all table rows (except the\n    first, which contains table headers):*/\n      for (i = 1; i < rows.length - 1; i++) {\n        //start by saying there should be no switching:\n        shouldSwitch = false;\n        /*Get the two elements you want to compare,\n      one from current row and one from the next:*/\n        x = rows[i].getElementsByTagName(\"TD\")[colIndex];\n        y = rows[i + 1].getElementsByTagName(\"TD\")[colIndex];\n        /*check if the two rows should switch place,\n      based on the direction, asc or desc:*/\n        if (dir === \"asc\" && x && y) {\n          if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        } else if (dir === \"desc\" && x && y) {\n          if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        }\n      }\n      if (shouldSwitch && rows[i].parentNode) {\n        /*If a switch has been marked, make the switch\n      and mark that a switch has been done:*/\n        rows[i].parentNode!.insertBefore(rows[i + 1], rows[i]);\n        switching = true;\n        //Each time a switch is done, increase this count by 1:\n        switchcount++;\n      } else {\n        /*If no switching has been done AND the direction is \"asc\",\n      set the direction to \"desc\" and run the while loop again.*/\n        if (switchcount === 0 && dir === \"asc\") {\n          dir = \"desc\";\n          switching = true;\n        }\n      }\n      // if (i === 0) continue;\n      // rows.cells[i].style.backgroundColor = \"blue\";\n    }\n  }\n};\n\nexport interface TableColumnsInterface {\n  columnTitle: JSX.Element | string;\n  alignText: string;\n  padding?: string;\n  isSortAllowed?: boolean;\n}\n\ninterface TableProps {\n  columns: TableColumnsInterface[];\n  rows: Function;\n  hideColumns?: boolean;\n  pagination?: boolean;\n  search?: boolean;\n  tableSize?: string;\n  tableClass?: string;\n  tableId?: string;\n  rounded?: boolean;\n  searchBG?: string;\n  thColor?: string;\n  loading?: boolean;\n}\n\nconst Table: React.FC<TableProps> = (props) => {\n  const startPage = 1;\n  const tableId =\n    !props.tableId || props.tableId === \"myTable\" ? FC_makeID() : props.tableId;\n  let table: HTMLElement, tr: HTMLCollectionOf<HTMLTableRowElement>;\n  const [totalItems, setTotalItems] = useState<number>(0);\n  const [totalPages, setTotalPages] = useState<number>(1);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [pages, setPages] = useState<number[]>();\n  const [pageSize, setPageSize] = useState<number>(10);\n  const [startIndex, setStartIndex] = useState<number>(0);\n  const [endIndex, setEndIndex] = useState<number>(0);\n\n  useEffect(() => {\n    props.pagination && tablePagination();\n  });\n\n  const filterTable = (\n    data: string,\n    filterType?: \"default\" | \"field\"\n  ): void => {\n    var filter, tr, td, rows: number, cols: number, txtValue;\n    if (filterType === \"field\" && data === \"all\") data = \"\";\n    filter = data.toLowerCase();\n    table = document.getElementById(tableId!)!;\n    tr = table.getElementsByTagName(\"tr\");\n    for (rows = 0; rows < tr.length; rows++) {\n      for (cols = 0; cols < props.columns.length; cols++) {\n        td = tr[rows].getElementsByTagName(\"td\")[cols];\n        if (td) {\n          txtValue = td.textContent || td.innerText;\n          if (txtValue.toLowerCase().indexOf(filter) > -1) {\n            tr[rows].style.display = \"\";\n            break;\n          } else {\n            tr[rows].style.display = \"none\";\n          }\n        }\n      }\n    }\n  };\n\n  const tablePagination = (): void => {\n    table = document.getElementById(tableId)!;\n    tr = table.getElementsByTagName(\"tr\");\n    setTotalItems(tr.length);\n    setTotalPages(Math.ceil(totalItems / pageSize));\n\n    // calculate start and end item indexes on the current page\n    setStartIndex((currentPage - 1) * pageSize);\n    setEndIndex(Math.min(startIndex + pageSize - 1, totalItems - 1));\n\n    /**\n     * TODO!\n     * There is a problem with this condition\n     */\n    let _pages = Array.from(Array(totalPages + 1 - startPage).keys()).map(\n      (i) => startPage + i\n    );\n    if (!pages || _pages.length !== pages.length) {\n      setPages(_pages);\n    }\n\n    for (let i: number = 0; i < tr.length; i++) {\n      if (i >= startIndex && i <= endIndex) {\n        tr[i].style.display = \"\";\n      } else {\n        tr[i].style.display = \"none\";\n      }\n    }\n  };\n\n  return (\n    <div className={`${props.tableSize} overflow-x-auto`}>\n      {/* search box  */}\n      {props.search && (\n        <div className={`${props.searchBG} w-full mb-2`}>\n          {props.search && (\n            <div className=\"bg-white rounded flex items-center w-full p-2 border-2 border-gray-500\">\n              <MdSearch className=\"h-5 w-5 fill-current text-gray-400\" />\n              <input\n                type=\"search\"\n                placeholder=\"search\"\n                onChange={(e) => filterTable(e.target.value)}\n                className=\"w-full h-6 pl-4 text-sm outline-none focus:outline-none bg-white\"\n                disabled={props.loading}\n              />\n\n              {props.pagination && (\n                <div className=\"select\">\n                  <select\n                    className=\"text-base outline-none focus:outline-none bg-white\"\n                    onChange={(e) => setPageSize(Number(e.target.value))}\n                    disabled={props.loading}\n                  >\n                    <option value=\"10\">10</option>\n                    <option value=\"25\">25</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                  </select>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n      <div className=\"overflow-x-auto w-full\">\n        <table\n          className={\n            props.tableClass\n              ? props.tableClass\n              : `w-full shadow ${\n                  props.rounded && \"sm:rounded-lg\"\n                } table-auto order-table`\n          }\n          id={tableId}\n        >\n          {!props.hideColumns && (\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-base\">\n              <tr\n                className={`text-left tracking-wide bg-${props.thColor}-100 border-b-2 border-${props.thColor}-500 text-${props.thColor}-600`}\n              >\n                {props.columns.map((column, index) => (\n                  <th\n                    key={index}\n                    className={`${column.padding} text-${\n                      column.alignText\n                    } px-3 py-2 ${column.isSortAllowed && \"cursor-pointer\"}`}\n                    onClick={() =>\n                      column.isSortAllowed && sortThisColumn(tableId, index)\n                    }\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      {column.columnTitle}\n                      {column.isSortAllowed && <BiSort />}\n                    </div>\n                  </th>\n                ))}\n              </tr>\n            </thead>\n          )}\n          <tbody id=\"table-data\" className=\"bg-white text-black text-base\">\n            {props.rows()}\n          </tbody>\n        </table>\n        {props.pagination && (\n          <div className=\"sm:flex-1 sm:flex sm:items-center sm:justify-between mt-4 work-sans\">\n            <div>\n              <span className=\"text-xs xs:text-sm text-gray-900\">\n                Showing 1 to {pageSize} of {totalItems - 1} Entries\n              </span>\n            </div>\n            <div>\n              <nav className=\"inline-flex shadow-sm\">\n                <div>\n                  <button\n                    type=\"button\"\n                    className={`inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 text-sm font-medium text-gray-500 ${\n                      currentPage !== 1 && \"bg-white\"\n                    }`}\n                    aria-label=\"Previous\"\n                    disabled={currentPage === 1 || props.loading}\n                    onClick={() => setCurrentPage(currentPage - 1)}\n                  >\n                    <MdNavigateBefore className=\"h-5 w-5\" />\n                  </button>\n                </div>\n                <div>\n                  {pages &&\n                    pages.map((page, pageIndex) => (\n                      <button\n                        key={pageIndex}\n                        className={`-ml-px inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium text-gray-700 ${\n                          page !== currentPage\n                            ? \"bg-white\"\n                            : \"bg-gray-100 cursor-default\"\n                        }`}\n                        disabled={page === currentPage || props.loading}\n                        onClick={() => setCurrentPage(page)}\n                      >\n                        {page}\n                      </button>\n                    ))}\n                </div>\n                <div>\n                  <button\n                    type=\"button\"\n                    className={`inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 text-sm leading-5 font-medium text-gray-500 ${\n                      currentPage !== totalPages && \"bg-white\"\n                    }`}\n                    aria-label=\"Next\"\n                    disabled={currentPage === totalPages || props.loading}\n                    onClick={() => setCurrentPage(currentPage + 1)}\n                  >\n                    <MdNavigateNext className=\"h-5 w-5\" />\n                  </button>\n                </div>\n              </nav>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Table;\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AssignRoleToUserActionInterface,\n  CustomeAccessInterface,\n  UserInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\ninterface FetchUsersAction {\n  type: ActionTypes.FETCH_USERS_ACCESS;\n  payload: UserInterface[];\n}\n\ninterface BlockUserToSystem {\n  type: ActionTypes.BLOCK_USER_TO_SYSTEM | ActionTypes.UNBLOCK_USER_TO_SYSTEM;\n  payload: string;\n}\n\ninterface AssignRoleToUserAction {\n  type: ActionTypes.ASSIGN_ROLE_TO_USER;\n  payload: AssignRoleToUserActionInterface;\n}\n\ninterface CustomizeUserAccessAction {\n  type: ActionTypes.CUSTOMIZE_USER_ACCESS;\n  payload: CustomeAccessInterface;\n}\n\ninterface ResetUserAccessAction {\n  type: ActionTypes.RESET_USER_ACCESS;\n  payload: string;\n}\n\ntype fetchUserAccessInterface = {\n  users: UserInterface[];\n  next: {\n    page: number;\n    limit: number;\n  } | null;\n  previous: {\n    page: number;\n    limit: number;\n  } | null;\n  total_users: number;\n};\n\nexport enum documentValidationStatus {\n  waiting = \"waiting\",\n  approved = \"approved\",\n  rejected = \"rejected\",\n}\n\nexport interface VerifyDocumentInterface {\n  user_id: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date?: string;\n  };\n  in_education: boolean;\n  disability: boolean;\n}\n\ninterface VerifyAllDocumentAction {\n  type: ActionTypes.VERIFY_ALL_DOCUMENT;\n  payload: VerifyDocumentInterface;\n}\n\nexport type AccessUserActionType =\n  | FetchUsersAction\n  | BlockUserToSystem\n  | AssignRoleToUserAction\n  | CustomizeUserAccessAction\n  | ResetUserAccessAction\n  | VerifyAllDocumentAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const fetchUserAccess = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<fetchUserAccessInterface>(\n        `${API.AUTH}/users?page=1&limit=500`\n      );\n      console.log({ users_response: res });\n      dispatch<FetchUsersAction>({\n        type: ActionTypes.FETCH_USERS_ACCESS,\n        payload: res.data.users,\n      });\n    } catch (error) {\n      console.error({ user_error: error });\n    }\n  };\n};\n\nexport const blockUserToSystem = (data: string) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<BlockUserToSystem>({\n      type: ActionTypes.BLOCK_USER_TO_SYSTEM,\n      payload: data,\n    });\n  };\n};\n\nexport const unBlockUserToSystem = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<BlockUserToSystem>({\n      type: ActionTypes.UNBLOCK_USER_TO_SYSTEM,\n      payload: data,\n    });\n  };\n};\n\nexport const assignRoleToUserAccess = (\n  data: AssignRoleToUserActionInterface\n) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<AssignRoleToUserAction>({\n      type: ActionTypes.ASSIGN_ROLE_TO_USER,\n      payload: data,\n      // payload: response.data,\n    });\n  };\n};\n\nexport const customizeUserAccess = (data: CustomeAccessInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CustomizeUserAccessAction>({\n      type: ActionTypes.CUSTOMIZE_USER_ACCESS,\n      payload: data,\n    });\n  };\n};\n\nexport const resetUserAccess = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<ResetUserAccessAction>({\n      type: ActionTypes.RESET_USER_ACCESS,\n      payload: data,\n    });\n  };\n};\n\nexport const verifyAllDocument = (data: VerifyDocumentInterface) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<VerifyAllDocumentAction>({\n      type: ActionTypes.VERIFY_ALL_DOCUMENT,\n      payload: data,\n    });\n  };\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { API } from \"../utils/api\";\nimport {\n  CentersInterface,\n  DistrictInterface,\n  RoomLocationInterface,\n  RoomsInterface,\n  SectorInterface,\n} from \"../shared/interfaces\";\nimport { errorToText } from \"../utils/errors\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\nexport interface getAllRoomActions {\n  type: ActionTypes.GET_ALL_ROOM;\n  payload: RoomLocationInterface[];\n}\n\nexport interface createProvinceActions {\n  type: ActionTypes.CREATE_PROVINCE;\n  payload: RoomLocationInterface;\n}\n\nexport interface updateProvinceActions {\n  type: ActionTypes.UPDATE_PROVINCE;\n  payload: {\n    province_id: string;\n    province_name: string;\n    provice_code: number;\n  };\n}\n\nexport interface deleteProvinceActions {\n  type: ActionTypes.DELETE_PROVINCE;\n  payload: string;\n}\n\n// ============ DISTRICT =================\nexport interface createDistrictActions {\n  type: ActionTypes.CREATE_DISTRICT;\n  payload: { province_id: string; data: DistrictInterface };\n}\n\nexport interface updateDistrictActions {\n  type: ActionTypes.UPDATE_DISTRICT;\n  payload: {\n    province_id: string;\n    district_id: string;\n    district_name: string;\n    district_code: number;\n  };\n}\n\nexport interface deleteDistrictActions {\n  type: ActionTypes.DELETE_DISTRICT;\n  payload: { province_id: string; district_id: string };\n}\n\n// ============ SECTOR =================\nexport interface createSectorActions {\n  type: ActionTypes.CREATE_SECTOR;\n  payload: {\n    province_id: string;\n    district_id: string;\n    data: SectorInterface;\n  };\n}\n\nexport interface updateSectorActions {\n  type: ActionTypes.UPDATE_SECTOR;\n  payload: {\n    province_id: string;\n    district_id: string;\n    sector_id: string;\n    sector_name: string;\n    sector_code: number;\n  };\n}\n\nexport interface deleteSectorActions {\n  type: ActionTypes.DELETE_SECTOR;\n  payload: { province_id: string; district_id: string; sector_id: string };\n}\n\n// ============ CENTERS =================\nexport interface createCenterActions {\n  type: ActionTypes.CREATE_CENTER;\n  payload: {\n    province_id: string;\n    district_id: string;\n    data: CentersInterface;\n  };\n}\n\nexport interface updateCenterActions {\n  type: ActionTypes.UPDATE_CENTER;\n  payload: {\n    province_id: string;\n    district_id: string;\n    examination_center_id: string;\n    center_name: string;\n  };\n}\n\nexport interface deleteCenterActions {\n  type: ActionTypes.DELETE_CENTER;\n  payload: { province_id: string; district_id: string; center_id: string };\n}\n\n// ============ ROOMS =================\nexport interface createRoomActions {\n  type: ActionTypes.CREATE_ROOM;\n  payload: {\n    province_id: string;\n    district_id: string;\n    center_id: string;\n    data: RoomsInterface;\n  };\n}\n\nexport interface updateRoomActions {\n  type: ActionTypes.UPDATE_ROOM;\n  payload: {\n    province_id: string;\n    district_id: string;\n    center_id: string;\n    room_id: string;\n    room_number: number;\n    capacity: number;\n  };\n}\n\nexport interface deleteRoomActions {\n  type: ActionTypes.DELETE_ROOM;\n  payload: {\n    province_id: string;\n    district_id: string;\n    center_id: string;\n    room_id: string;\n  };\n}\n\nexport type RoomActionType =\n  | getAllRoomActions\n  | createProvinceActions\n  | updateProvinceActions\n  | deleteProvinceActions\n  | createDistrictActions\n  | updateDistrictActions\n  | deleteDistrictActions\n  | createSectorActions\n  | updateSectorActions\n  | deleteSectorActions\n  | createCenterActions\n  | updateCenterActions\n  | deleteCenterActions\n  | createRoomActions\n  | updateRoomActions\n  | deleteRoomActions;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getAllRoom = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<RoomLocationInterface[]>(\n        `${API.APPLICATION}/roomlocation`\n      );\n      dispatch<getAllRoomActions>({\n        type: ActionTypes.GET_ALL_ROOM,\n        payload: res.data,\n      });\n      console.log(\"====================================\");\n      console.log({ res: res.data });\n      console.log(\"====================================\");\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.error(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const FC_CreateProvince = (data: RoomLocationInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<createProvinceActions>({\n      type: ActionTypes.CREATE_PROVINCE,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateProvince = (data: {\n  province_id: string;\n  province_name: string;\n  provice_code: number;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<updateProvinceActions>({\n      type: ActionTypes.UPDATE_PROVINCE,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteProvince = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteProvinceActions>({\n      type: ActionTypes.DELETE_PROVINCE,\n      payload: data,\n    });\n  };\n};\n\n// DISTRICT =================\nexport const FC_CreateDistrict = (data: {\n  province_id: string;\n  data: DistrictInterface;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<createDistrictActions>({\n      type: ActionTypes.CREATE_DISTRICT,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateDistrict = (data: {\n  province_id: string;\n  district_id: string;\n  district_name: string;\n  district_code: number;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<updateDistrictActions>({\n      type: ActionTypes.UPDATE_DISTRICT,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteDistrict = (data: {\n  province_id: string;\n  district_id: string;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteDistrictActions>({\n      type: ActionTypes.DELETE_DISTRICT,\n      payload: data,\n    });\n  };\n};\n\n// SECTOR =================\nexport const FC_CreateSector = (data: {\n  province_id: string;\n  district_id: string;\n  data: SectorInterface;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<createSectorActions>({\n      type: ActionTypes.CREATE_SECTOR,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateSector = (data: {\n  province_id: string;\n  district_id: string;\n  sector_id: string;\n  sector_name: string;\n  sector_code: number;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<updateSectorActions>({\n      type: ActionTypes.UPDATE_SECTOR,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteSector = (data: {\n  province_id: string;\n  district_id: string;\n  sector_id: string;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteSectorActions>({\n      type: ActionTypes.DELETE_SECTOR,\n      payload: data,\n    });\n  };\n};\n\n// CENTERS =================\nexport const FC_CreateCenter = (data: {\n  province_id: string;\n  district_id: string;\n  data: CentersInterface;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<createCenterActions>({\n      type: ActionTypes.CREATE_CENTER,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateCenter = (data: {\n  province_id: string;\n  district_id: string;\n  examination_center_id: string;\n  center_name: string;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<updateCenterActions>({\n      type: ActionTypes.UPDATE_CENTER,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteCenter = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteCenterActions>({\n      type: ActionTypes.DELETE_CENTER,\n      payload: data,\n    });\n  };\n};\n\n// ROOM =================\nexport const FC_CreateRoom = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n  data: RoomsInterface;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<createRoomActions>({\n      type: ActionTypes.CREATE_ROOM,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateRoom = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n  room_id: string;\n  room_number: number;\n  capacity: number;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<updateRoomActions>({\n      type: ActionTypes.UPDATE_ROOM,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteRoom = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n  room_id: string;\n}) => {\n  console.log({ delete_room: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteRoomActions>({\n      type: ActionTypes.DELETE_ROOM,\n      payload: data,\n    });\n  };\n};\n","import axios from \"axios\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { BiRightArrowAlt } from \"react-icons/bi\";\nimport {\n  MdDelete,\n  MdEdit,\n  MdHighlightOff,\n  MdRemoveRedEye,\n  MdSettings,\n} from \"react-icons/md\";\nimport { SiAddthis } from \"react-icons/si\";\nimport { TiInputChecked } from \"react-icons/ti\";\nimport { connect } from \"react-redux\";\nimport { customizeUserAccess } from \"../../actions/users\";\nimport Table from \"../../components/Table/Table\";\nimport {\n  AccessTaskInterface,\n  CustomeAccessInterface,\n  UserInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\n\ninterface AppProps {\n  userInfo: UserInterface;\n  manageUserId: string;\n  customizeUserAccess: Function;\n  setFeedBack: React.Dispatch<\n    React.SetStateAction<{\n      type: \"success\" | \"danger\" | \"warning\" | \"\";\n      message: string;\n    }>\n  >;\n  feedBack: {\n    type: \"success\" | \"danger\" | \"warning\" | \"\";\n    message: string;\n  };\n  setUserAccess: React.Dispatch<\n    React.SetStateAction<AccessTaskInterface[] | null>\n  >;\n  userAccess: AccessTaskInterface[] | null;\n  setCurrentAccess: React.Dispatch<\n    React.SetStateAction<AccessTaskInterface | null>\n  >;\n  currentAccess: AccessTaskInterface | null;\n}\n\nconst _UserAccess: React.FC<AppProps> = ({\n  userInfo,\n  customizeUserAccess,\n  setFeedBack,\n  feedBack,\n  setUserAccess,\n  userAccess,\n  currentAccess,\n  setCurrentAccess,\n}) => {\n  const [loading, setLoadind] = useState<boolean>(true);\n  const [loadindRequest, setLoadindRequest] = useState<boolean>(false);\n  // const [currentAccess, setCurrentAccess] =\n  //   useState<AccessTaskInterface | null>();\n  // const [userAccess, setUserAccess] = useState<AccessTaskInterface[] | null>();\n  const [createPermission, setCreatePermission] = useState<boolean>(false);\n  const [viewPermission, setViewPermission] = useState<boolean>(false);\n  const [updatePermission, setUpdatePermission] = useState<boolean>(false);\n  const [deletePermission, setDeletePermission] = useState<boolean>(false);\n\n  const overrideUserAccess = (\n    default_access: AccessTaskInterface[],\n    custome_access: AccessTaskInterface[]\n  ) => {\n    if (default_access && custome_access && custome_access.length > 0) {\n      let overideAccess: AccessTaskInterface[] = [];\n      // for (const [key, access] of Object.entries(default_access)) {\n      //   const findCustom = custome_access.find(\n      //     (custom) => custom.id === access.id\n      //   );\n      //   if (findCustom) {\n      //     overideAccess.push(findCustom);\n      //   } else {\n      //     overideAccess.push(access);\n      //   }\n      // }\n      for (const key in default_access) {\n        if (Object.prototype.hasOwnProperty.call(default_access, key)) {\n          const findCustom = custome_access.find(\n            (custom) => custom.id === default_access[key].id\n          );\n          if (findCustom) {\n            overideAccess.push(findCustom);\n          } else {\n            overideAccess.push(default_access[key]);\n          }\n        }\n      }\n      setUserAccess(overideAccess);\n    }\n  };\n\n  useEffect(() => {\n    const overrideUserAccess = (\n      default_access: AccessTaskInterface[],\n      custome_access: AccessTaskInterface[]\n    ) => {\n      if (default_access && custome_access && custome_access.length > 0) {\n        let overideAccess: AccessTaskInterface[] = [];\n        for (const [key, access] of Object.entries(default_access)) {\n          const findCustom = custome_access.find(\n            (custom) => custom.id === access.id\n          );\n          if (findCustom) {\n            overideAccess.push(findCustom);\n          } else {\n            overideAccess.push(access);\n          }\n          console.log(key);\n        }\n        setUserAccess(overideAccess);\n      }\n    };\n\n    if (userInfo && userInfo.custome_access) {\n      userInfo.default_access &&\n        overrideUserAccess(\n          userInfo.default_access.access,\n          userInfo.custome_access.access\n        );\n    }\n  }, [userInfo, setUserAccess]);\n\n  useEffect(() => {\n    if (userInfo && !userInfo.custome_access) {\n      userInfo.default_access && setUserAccess(userInfo.default_access.access);\n    }\n    setLoadind(false);\n  }, [userInfo, setUserAccess]);\n\n  const tableData = (): JSX.Element[] => {\n    if (!userAccess)\n      return [\n        <tr key={46}>\n          <td>No data</td>\n        </tr>,\n      ];\n    return userAccess.map((access: AccessTaskInterface, i) => (\n      <tr\n        key={i + access.id}\n        className={`text-left border-b border-gray-200 cursor-pointer hover:bg-gray-100 ${\n          currentAccess &&\n          currentAccess.id === access.id &&\n          \"bg-gray-200 border my-3 hover:bg-gray-100\"\n        }`}\n        onClick={() =>\n          currentAccess && currentAccess.id === access.id\n            ? (setCurrentAccess(null),\n              setCreatePermission(false),\n              setViewPermission(false),\n              setUpdatePermission(false),\n              setDeletePermission(false))\n            : (setCurrentAccess(access),\n              setCreatePermission(access.permitted.create),\n              setViewPermission(access.permitted.view),\n              setUpdatePermission(access.permitted.update),\n              setDeletePermission(access.permitted.delete))\n        }\n      >\n        <td className=\"px-2 py-1\">\n          <label className=\"inline-flex items-center\">\n            {/* <input\n              type=\"radio\"\n              name=\"taskAccess\"\n              value={access.id}\n              className=\"form-radio h-4 w-4 text-gray-600\"\n              onChange={() => {\n                currentAccess\n                  ? this.setState({ currentAccess: null })\n                  : this.setState({ currentAccess: access });\n              }}\n              checked={currentAccess ? true : false}\n            /> */}\n            <span className=\"text-gray-900 capitalize text-xl font-normal cursor-pointer\">\n              {access.task}\n            </span>\n          </label>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.create ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.create ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.create ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.view ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.view ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.view ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.update ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.update ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.update ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.delete ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.delete ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.delete ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n      </tr>\n    ));\n  };\n\n  const handleCustomization = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setLoadindRequest(true);\n    setFeedBack({\n      type: \"\",\n      message: \"\",\n    });\n    let task: [] | CustomeAccessInterface | null = null;\n    task = userInfo.custome_access;\n    let index = -1;\n\n    try {\n      if (task && currentAccess) {\n        index = task.access.findIndex(\n          (access) => access.id === currentAccess.id\n        );\n        if (index >= 0) {\n          task.access[index].permitted.create = createPermission;\n          task.access[index].permitted.view = viewPermission;\n          task.access[index].permitted.update = updatePermission;\n          task.access[index].permitted.delete = deletePermission;\n        } else {\n          task.access.push({\n            id: currentAccess.id,\n            task: currentAccess.task,\n            key: currentAccess.key,\n            permitted: {\n              create: createPermission,\n              view: viewPermission,\n              update: updatePermission,\n              delete: deletePermission,\n            },\n          });\n        }\n      } else if (currentAccess) {\n        task = {\n          access: [\n            {\n              id: currentAccess.id,\n              task: currentAccess.task,\n              key: currentAccess.key,\n              permitted: {\n                create: createPermission,\n                view: viewPermission,\n                update: updatePermission,\n                delete: deletePermission,\n              },\n            },\n          ],\n          user_id: userInfo.user_id,\n          custome_user_access_id: \"\",\n        };\n      }\n\n      if (task) {\n        let res;\n        if (userInfo.custome_access !== null) {\n          res = await axios.patch<{ data: CustomeAccessInterface }>(\n            `${API.AUTH}/custaccess`,\n            {\n              access: task.access,\n              user_id: userInfo.user_id,\n            }\n          );\n        } else {\n          res = await axios.post<{ data: CustomeAccessInterface }>(\n            `${API.AUTH}/custaccess`,\n            {\n              access: task.access,\n              user_id: userInfo.user_id,\n            }\n          );\n        }\n\n        if (res) {\n          task.custome_user_access_id = res.data.data.custome_user_access_id;\n          console.log({ task });\n          console.log(res.data.data);\n\n          customizeUserAccess(task);\n          task &&\n            userInfo.default_access &&\n            overrideUserAccess(userInfo.default_access.access, task.access);\n          setFeedBack({\n            type: \"success\",\n            message: `Reseting User Access complete successfully`,\n          });\n\n          task = null;\n          setCurrentAccess(null);\n          setCreatePermission(false);\n          setViewPermission(false);\n          setUpdatePermission(false);\n          setDeletePermission(false);\n        }\n      }\n    } catch (error) {\n      console.error({ customize_access: error });\n      setFeedBack({\n        type: \"danger\",\n        message: errorToText(error),\n      });\n    }\n    setLoadindRequest(false);\n  };\n\n  if (loading === true || userInfo === null) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading User Access...\n      </div>\n    );\n  }\n\n  if (loading) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading...\n      </div>\n    );\n  }\n\n  return (\n    <Fragment>\n      <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4 mx-1 my-2\">\n        <div\n          className={`col-span-1 md:col-span-3 bg-white w-full overflow-x-auto border rounded text-center p-2 ${\n            currentAccess ? \"hidden md:block\" : \"\"\n          }`}\n        >\n          <span className=\"text-gray-600 mt-2 font-semibold text-2xl\">\n            Settings\n          </span>\n          {!loading && (\n            <div className=\"overflow-x-auto w-full\">\n              <Table\n                columns={[\n                  {\n                    columnTitle: \"Access Name\",\n                    alignText: \"left\",\n                    padding: \"p-3\",\n                  },\n                  { columnTitle: \"Create\", alignText: \"left\" },\n                  { columnTitle: \"View\", alignText: \"left\" },\n                  { columnTitle: \"Update\", alignText: \"left\" },\n                  { columnTitle: \"Delete\", alignText: \"left\" },\n                ]}\n                rows={tableData}\n                pagination={false}\n                search={true}\n                searchBG=\"bg-gray-50\"\n                thColor=\"gray\"\n              />\n            </div>\n          )}\n        </div>\n        <div className={`col-span-1 md:col-span-2`}>\n          {!currentAccess ? (\n            <div className=\"w-full hidden md:flex flex-col items-center text-gray-600 gap-1 py-3\">\n              <MdSettings className=\"w-20 h-20\" />\n              <span className=\"text-8 md:text-12\">\n                Choose Access to Customize\n              </span>\n            </div>\n          ) : (\n            <div className={``}>\n              <h1 className=\"text-2xl md:text-3xl font-semibold text-center my-2 text-gray-900\">\n                Customize User Access\n              </h1>\n              <div className=\"flex justify-center mb-3\">\n                <h2 className=\"text-2xl font-semibold text-center text-gray-600 flex flex-row items-center\">\n                  <BiRightArrowAlt className=\"w-7 h-7\" />\n                  {currentAccess.task}\n                </h2>\n              </div>\n\n              <div className=\"flex flex-col px-2 md:px-1\">\n                <form\n                  className=\"flex flex-col items-center\"\n                  onSubmit={(e) => handleCustomization(e)}\n                >\n                  <div className=\"inline-flex gap-2 items-center\">\n                    <SiAddthis className=\"w-7 h-7 text-gray-600\" />\n                    <div className=\"flex flex-col\">\n                      <h3 className=\"font-semibold text-xl\">Create</h3>\n                      <span className=\"text-gray-600 text-sm md:pr-1\">\n                        This permission gives the user the ability to create\n                      </span>\n                    </div>\n                    <input\n                      type=\"checkbox\"\n                      className=\"form-checkbox h-7 w-7 text-teal-600\"\n                      onChange={() => setCreatePermission(!createPermission)}\n                      checked={createPermission}\n                      disabled={loadindRequest}\n                    />\n                  </div>\n                  <div className=\"inline-flex gap-2 items-center\">\n                    <MdRemoveRedEye className=\"w-7 h-7 text-gray-600\" />\n                    <div className=\"flex flex-col\">\n                      <h3 className=\"font-semibold text-xl\">View</h3>\n                      <span className=\"text-gray-600 text-sm md:pr-4\">\n                        This permission gives the user the ability to view\n                      </span>\n                    </div>\n                    <input\n                      type=\"checkbox\"\n                      className=\"form-checkbox h-7 w-7 text-teal-600\"\n                      onChange={() => setViewPermission(!viewPermission)}\n                      checked={viewPermission}\n                      disabled={loadindRequest}\n                    />\n                  </div>\n                  <div className=\"inline-flex gap-2 items-center\">\n                    <MdEdit className=\"w-7 h-7 text-gray-600\" />\n                    <div className=\"flex flex-col\">\n                      <h3 className=\"font-semibold text-xl\">Update</h3>\n                      <span className=\"text-gray-600 text-sm\">\n                        This permission gives the user the ability to update\n                      </span>\n                    </div>\n                    <input\n                      type=\"checkbox\"\n                      className=\"form-checkbox h-7 w-7 text-teal-600\"\n                      onChange={() => setUpdatePermission(!updatePermission)}\n                      checked={updatePermission}\n                      disabled={loadindRequest}\n                    />\n                  </div>\n                  <div className=\"inline-flex gap-2 items-center\">\n                    <MdDelete className=\"w-7 h-7 text-gray-600\" />\n                    <div className=\"flex flex-col\">\n                      <h3 className=\"font-semibold text-xl\">Delete</h3>\n                      <span className=\"text-gray-600 text-sm md:pr-1\">\n                        This permission gives the user the ability to delete\n                      </span>\n                    </div>\n                    <input\n                      type=\"checkbox\"\n                      className=\"form-checkbox h-7 w-7 text-teal-600\"\n                      onChange={() => setDeletePermission(!deletePermission)}\n                      checked={deletePermission}\n                      disabled={loadindRequest}\n                    />\n                  </div>\n\n                  <div className=\"flex items-center justify-center w-full py-3 gap-2\">\n                    {/* <button className=\"btn btn-secondary bg-red-600\">Back</button> */}\n                    <button\n                      className=\"btn bg-gray-500 hover:bg-gray-700 focus:outline-none text-white\"\n                      disabled={loadindRequest}\n                      onClick={() => {\n                        setCurrentAccess(null);\n                        setCreatePermission(false);\n                        setViewPermission(false);\n                        setUpdatePermission(false);\n                        setDeletePermission(false);\n                      }}\n                    >\n                      Cancel\n                    </button>\n                    <button className=\"btn btn-blue\" disabled={loadindRequest}>\n                      {!loadindRequest ? \"Save Change\" : \"Processing..\"}\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport const UserAccess = connect(null, {\n  customizeUserAccess,\n})(_UserAccess);\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { MdErrorOutline, MdClose, MdLock, MdLocationOn } from \"react-icons/md\";\nimport Table from \"../../components/Table/Table\";\n\nimport {\n  capitalizeFirstLetter,\n  getInstituteById,\n  getRoleById,\n} from \"../../shared/dataTest\";\nimport { connect } from \"react-redux\";\nimport {\n  AccessTaskInterface,\n  DistrictInterface,\n  LocationRoomTableInterface,\n  RoomLocationInterface,\n  SchoolsInterface,\n  SystemUserRoleInterface,\n  UserInterface,\n} from \"../../shared/interfaces\";\nimport profile from \"../../shared/blank_profile.png\"; // with im\nimport { UserAccess } from \"./UserAccess\";\nimport UserRole from \"./UserRole\";\nimport {\n  blockUserToSystem,\n  unBlockUserToSystem,\n  resetUserAccess,\n} from \"../../actions/users\";\nimport { errorToText } from \"../../utils/errors\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { StoreState } from \"../../reducers\";\nimport { schoolLevelsStoreInterface } from \"../../actions\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\n\nexport enum ModalState {\n  View_User = \"View User Info\",\n  Add_Access = \"Add Access To User\",\n  Update_Access = \"Update User Access\",\n  Close_Modal = \"Close Modal\",\n}\n\ninterface AppProps {\n  users: UserInterface[];\n  roleList: SystemUserRoleInterface[];\n  userTypes: \"all\" | \"active\" | \"blocked\";\n  district: DistrictInterface[];\n  loadingUser: boolean;\n  schoolLevels: schoolLevelsStoreInterface;\n  setLoadingUser: React.Dispatch<React.SetStateAction<boolean>>;\n  manageUser: UserInterface | null;\n  setManageUser: React.Dispatch<React.SetStateAction<UserInterface | null>>;\n  changeRole: boolean;\n  setChangeRole: React.Dispatch<React.SetStateAction<boolean>>;\n  feedBack: {\n    type: \"success\" | \"danger\" | \"warning\" | \"\";\n    message: string;\n  };\n  setFeedBack: React.Dispatch<\n    React.SetStateAction<{\n      type: \"success\" | \"danger\" | \"warning\" | \"\";\n      message: string;\n    }>\n  >;\n  blockUserToSystem: Function;\n  unBlockUserToSystem: Function;\n  resetUserAccess: Function;\n}\n\n// Tobe replaced with Emmy's function\nexport const LocationsInArray = (\n  LocationData: RoomLocationInterface[]\n): LocationRoomTableInterface[] | [] => {\n  let locationTemp: LocationRoomTableInterface[] = [];\n  for (let p in LocationData) {\n    let districts = LocationData[p].districts;\n    for (let d in districts) {\n      let centers = districts[d].centers;\n      for (let c in centers) {\n        let rooms = centers[c].rooms;\n        for (let r in rooms) {\n          locationTemp.push({\n            province_id: LocationData[p]._id,\n            province_name: LocationData[p].province_name,\n            district_id: districts[d]._id,\n            district_name: districts[d].district_name,\n            center_id: centers[c]._id,\n            center_name: centers[c].center_name,\n            room_id: rooms[r]._id,\n            room_name: rooms[r].room_number.toString(),\n            capacity: rooms[r].capacity,\n            occupied: rooms[r].occupied,\n          });\n        }\n      }\n    }\n  }\n  return locationTemp;\n};\n\nconst UserList: React.FC<AppProps> = ({\n  users,\n  roleList,\n  userTypes,\n  district,\n  loadingUser,\n  schoolLevels,\n  setLoadingUser,\n  blockUserToSystem,\n  unBlockUserToSystem,\n  manageUser,\n  setManageUser,\n  changeRole,\n  setChangeRole,\n  feedBack,\n  setFeedBack,\n  resetUserAccess,\n}) => {\n  // const [manageUser, setManageUser] = useState<UserInterface | null>();\n  const [manageUserId, setManageUserId] = useState<string>(\"\");\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n  const [loadingRequestType, setLoadingRequestType] = useState<\n    \"RESET\" | \"STATUS\" | \"CHANGE_ROLE\" | null\n  >(null);\n  const [schoolList, setSchoolList] = useState<SchoolsInterface[] | null>(null);\n  const [roomList, setRoomList] = useState<RoomLocationInterface[] | null>(\n    null\n  );\n  const [roomTable, setRoomTables] = useState<\n    LocationRoomTableInterface[] | null\n  >(null);\n  const [userAccess, setUserAccess] = useState<AccessTaskInterface[] | null>(\n    null\n  );\n  const [currentAccess, setCurrentAccess] =\n    useState<AccessTaskInterface | null>(null);\n\n  useEffect(() => {\n    const loadSchools = async () => {\n      setFeedBack({ type: \"\", message: \"\" });\n      setLoadingUser(true);\n      try {\n        const res = await axios.get<SchoolsInterface[]>(\n          `${API.APPLICATION}/schools`\n        );\n        setSchoolList(res.data);\n        setLoadingUser(false);\n      } catch (error) {\n        setFeedBack({ type: \"danger\", message: errorToText(error) });\n      }\n    };\n    const loadRooms = async () => {\n      setFeedBack({ type: \"\", message: \"\" });\n      setLoadingUser(true);\n\n      try {\n        const res = await axios.get<RoomLocationInterface[]>(\n          `${API.APPLICATION}/roomlocation`\n        );\n        setRoomList(res.data);\n        setRoomTables(LocationsInArray(res.data));\n        setLoadingUser(false);\n      } catch (error) {\n        setFeedBack({ type: \"danger\", message: errorToText(error) });\n      }\n    };\n\n    loadSchools();\n    loadRooms();\n  }, [setFeedBack, setLoadingUser]);\n\n  const tableData = (): JSX.Element[] => {\n    if (loadingUser === true) {\n      return [\n        <tr key={1} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={8}>\n            <Loading />\n          </td>\n        </tr>,\n      ];\n    }\n\n    let data: UserInterface[] = users;\n    if (data.length <= 0) {\n      return [\n        <tr key={1} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={8}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    return data.map((user: UserInterface, index: number) => (\n      <tr\n        key={index}\n        className=\"border-b border-gray-200 hover:bg-gray-100 group cursor-pointer\"\n        onClick={() => {\n          setManageUser(user);\n          setManageUserId(user.user_id);\n        }}\n      >\n        <td className=\"p-3 text-left whitespace-nowrap\">{index + 1}</td>\n        <td className=\"p-3 text-left\">\n          <span>\n            {user.user_info &&\n              user.user_info.fname + \" \" + user.user_info.lname}\n          </span>\n        </td>\n        <td className=\"p-3 text-left\">{user.email}</td>\n        {/* <td className=\"p-3 text-left\">{user.phone_number}</td> */}\n        <td className=\"p-3 text-left\">\n          {user.user_info && user.user_info.sex === \"M\" ? \"Male\" : \"Female\"}\n        </td>\n        <td className=\"p-3 text-left text-blue-700 text-base font-medium\">\n          {user.default_access &&\n            user.default_access.system_user_role_id &&\n            user.default_access.system_user_role_id && (\n              <span\n                className={`px-2 py-1 font-semibold rounded text-blue-700 bg-blue-100 dark:bg-blue-700 dark:text-blue-100`}\n              >\n                {getRoleById(roleList, user.default_access.system_user_role_id)\n                  ?.role &&\n                  capitalizeFirstLetter(\n                    getRoleById(\n                      roleList,\n                      user.default_access.system_user_role_id\n                    )?.role\n                  )}\n              </span>\n            )}\n        </td>\n        {/* {userTypes === \"all\" && (\n          <td>\n            {user.is_active ? (\n              <span className={`px-2 py-1 font-semibold text-green-700`}>\n                Active\n              </span>\n            ) : (\n              <span className={`px-2 py-1 font-semibold text-red-700`}>\n                Blocked\n              </span>\n            )}\n          </td>\n        )} */}\n        <td className=\"px-3 text-center\">\n          <button\n            className=\"btn bg-gray-200 group-hover:bg-blue-700 group-hover:text-white focus:outline-none\"\n            title=\"Manage User Access\"\n            onClick={() => {\n              setManageUser(user);\n              setManageUserId(user.user_id);\n            }}\n          >\n            Manage\n          </button>\n        </td>\n      </tr>\n    ));\n  };\n\n  const blockUser = (\n    user_id: string,\n    actionType: \"block\" | \"un-block\" = \"block\"\n  ): void => {\n    setFeedBack({\n      type: \"\",\n      message: \"\",\n    });\n    if (!user_id) {\n      setFeedBack({\n        type: \"warning\",\n        message: \"User Access is required doesn't exist\",\n      });\n    }\n\n    setLoadingRequest(true);\n\n    if (!window.confirm(`Are sure you want to ${actionType} this user?`)) {\n      return setLoadingRequest(false);\n    }\n    actionType === \"block\"\n      ? blockUserToSystem(user_id)\n      : unBlockUserToSystem(user_id);\n\n    setFeedBack({\n      type: \"success\",\n      message: `User has been ${\n        actionType === \"block\" ? \"block\" : \"unblock\"\n      }ed!`,\n    });\n\n    setLoadingRequest(false);\n    user_id = \"\";\n  };\n\n  const restUserAccess = async (user_id: string) => {\n    setFeedBack({\n      type: \"\",\n      message: \"\",\n    });\n    if (!user_id) {\n      setFeedBack({\n        type: \"warning\",\n        message: \"User Access is required doesn't exist\",\n      });\n    }\n\n    if (!window.confirm(`Are sure you want to reset to default access?`)) {\n      return setLoadingRequest(false);\n    }\n\n    setLoadingRequest(true);\n    setLoadingRequestType(\"RESET\");\n\n    try {\n      const res = await axios.delete(`${API.AUTH}/custaccess/user/${user_id}`);\n      res && resetUserAccess(user_id);\n      let resetedAccess: UserInterface = users.filter(\n        (user) => user.user_id === user_id\n      )[0];\n      resetedAccess.default_access &&\n        setUserAccess(resetedAccess.default_access.access);\n      setFeedBack({\n        type: \"success\",\n        message: `Reseting User Access complete successfully`,\n      });\n      setCurrentAccess(null);\n    } catch (error) {\n      console.error({ reseting_user_access: error });\n      setFeedBack({\n        type: \"danger\",\n        message: errorToText(error),\n      });\n    }\n\n    setLoadingRequest(false);\n    setLoadingRequestType(null);\n    user_id = \"\";\n  };\n\n  const distinctDistrict = (\n    location: RoomLocationInterface[],\n    province_id?: string\n  ): DistrictInterface[] => {\n    let ids: string[] = [],\n      result: DistrictInterface[] = [];\n\n    if (province_id) {\n      result = location.find((item) => item._id === province_id)\n        ? location.find((item) => item._id === province_id)!.districts\n          ? location.find((item) => item._id === province_id)!.districts\n          : []\n        : [];\n    } else {\n      for (const key in location) {\n        if (Object.prototype.hasOwnProperty.call(location, key)) {\n          for (const keyDistrict in location[key].districts) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                location[key].districts,\n                keyDistrict\n              )\n            ) {\n              if (!ids.includes(location[key].districts[keyDistrict]._id)) {\n                ids.push(location[key].districts[keyDistrict]._id);\n                result.push(location[key].districts[keyDistrict]);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return result;\n  };\n\n  return (\n    <Fragment>\n      {feedBack && feedBack.type !== \"\" && (\n        <div\n          className={`alert-${feedBack.type} flex flex-row items-center relative`}\n        >\n          <span className=\"absolute top-0 bottom-0 right-0 px-4 py-3\">\n            <MdClose\n              className=\"h-5 w-5 text-gray-700 hover:font-bold\"\n              title=\"Close\"\n              onClick={() => setFeedBack({ type: \"\", message: \"\" })}\n            />\n          </span>\n          <MdErrorOutline className=\"h-10 w-10\" />\n          <div className=\"alert-content ml-4\">\n            <div className=\"alert-title font-semibold text-lg\">\n              {feedBack.type === \"success\" ? \"Success\" : \"Error\"}\n            </div>\n            <div className=\"alert-description text-sm\">{feedBack.message}</div>\n          </div>\n        </div>\n      )}\n      {!manageUser && (\n        <div className=\"grid md:grid-cols-5 gap-2 mb-5\">\n          <div className={`md:col-span-5 rounded`}>\n            <div className=\"my-2 flex sm:flex-row flex-col justify-between\">\n              <div className=\"flex flex-col md:flex-row gap-1 items-center mx-1.5\">\n                {/* <span className=\"text-lg\">All User</span>\n              <MdChevronRight className=\"w-7 h-7\" />\n              <span className=\"text-lg underline\">All User</span> */}\n              </div>\n              {/* will be used later */}\n              {/* <div className=\"flex flex-row items-center gap-1\">\n              <button className=\"btn flex items-center p-1 bg-red-700 hover:bg-red-800 text-gray-100\">\n                <AiFillFilePdf className=\"h-6 w-6\" />\n                <p className=\" text-lg font-medium ml-2 \">PDF</p>\n              </button>\n\n              <button className=\"btn flex items-center p-1 bg-green-700 hover:bg-green-800 text-gray-100\">\n                <RiFileExcel2Fill className=\"w-6 h-6\" />\n                <div>\n                  <p className=\" text-lg font-medium ml-2 \">EXCEL</p>\n                </div>\n              </button>\n            </div> */}\n            </div>\n            {users && (\n              <Table\n                columns={[\n                  { columnTitle: \"#\", alignText: \"left\", padding: \"p-3\" },\n                  { columnTitle: \"Names\", alignText: \"left\", padding: \"p-3\" },\n                  { columnTitle: \"Email\", alignText: \"left\", padding: \"p-3\" },\n                  { columnTitle: \"Gender\", alignText: \"left\", padding: \"p-3\" },\n                  { columnTitle: \"Role\", alignText: \"left\", padding: \"p-3\" },\n                  // { columnTitle: \"Status\", alignText: \"left\", padding: \"p-3\" },\n                  { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n                ]}\n                rows={tableData}\n                pagination={true}\n                search={true}\n                thColor=\"gray\"\n                loading={loadingUser}\n              />\n            )}\n          </div>\n        </div>\n      )}\n\n      {manageUser && (\n        <div className=\"bg-gray-100 h-100\">\n          {feedBack && feedBack.type !== \"\" && (\n            <div\n              className={`alert-${feedBack.type} flex flex-row items-center relative mb-4`}\n            >\n              <span className=\"absolute top-0 bottom-0 right-0 px-4 py-3\">\n                <MdClose\n                  className=\"h-5 w-5 text-gray-700 hover:font-bold\"\n                  title=\"Close\"\n                  onClick={() => setFeedBack({ type: \"\", message: \"\" })}\n                />\n              </span>\n              <MdErrorOutline className=\"h-10 w-10\" />\n              <div className=\"alert-content ml-4\">\n                <div className=\"alert-title font-semibold text-lg\">\n                  {feedBack.type === \"success\" ? \"Success\" : \"Error\"}\n                </div>\n                <div className=\"alert-description text-sm\">\n                  {feedBack.message}\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* header */}\n          <div className=\"bg-white border-b border-t px-4 py-2 flex flex-col md:flex-row items-center gap-x-14\">\n            {users.find((user) => user.user_id === manageUserId) ? (\n              <div\n                key={\n                  users.find((user) => user.user_id === manageUserId)!.user_id\n                }\n                className=\"flex flex-col md:flex-row md:items-start items-center w-full gap-3\"\n              >\n                <img\n                  src={\n                    users.find((user) => user.user_id === manageUserId)!\n                      .user_info.photo !== \"pic\"\n                      ? users.find((user) => user.user_id === manageUserId)!\n                          .user_info.photo\n                      : profile\n                  }\n                  alt=\"\"\n                  className=\"rounded-full w-32 h-32\"\n                />\n                <div className=\"flex flex-col gap-1 items-start w-full\">\n                  <span className=\"text-2xl font-semibold\">\n                    {users.find((user) => user.user_id === manageUserId)!\n                      .user_info.fname +\n                      \" \" +\n                      users.find((user) => user.user_id === manageUserId)!\n                        .user_info.lname}\n                  </span>\n                  <div className=\"flex items-center\">\n                    <MdLock className=\"w-5 h-5\" />\n                    <span className=\"text-lg font-medium\">\n                      {users.find((user) => user.user_id === manageUserId)!\n                        .default_access &&\n                        getRoleById(\n                          roleList,\n                          users.find((user) => user.user_id === manageUserId)!\n                            .default_access!.system_user_role_id\n                        ).role}\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-gray-500\">Level:</span>\n                    <span className=\"text-base font-medium\">\n                      {users.find((user) => user.user_id === manageUserId)!\n                        .default_access &&\n                      getRoleById(\n                        roleList,\n                        users.find((user) => user.user_id === manageUserId)!\n                          .default_access!.system_user_role_id\n                      ).district_required\n                        ? \"District\"\n                        : users.find((user) => user.user_id === manageUserId)!\n                            .default_access &&\n                          getRoleById(\n                            roleList,\n                            users.find((user) => user.user_id === manageUserId)!\n                              .default_access!.system_user_role_id\n                          ).school_required\n                        ? \"School\"\n                        : users.find((user) => user.user_id === manageUserId)!\n                            .default_access &&\n                          getRoleById(\n                            roleList,\n                            users.find((user) => user.user_id === manageUserId)!\n                              .default_access!.system_user_role_id\n                          ).room_required\n                        ? \"Room\"\n                        : users.find((user) => user.user_id === manageUserId)!\n                            .default_access &&\n                          getRoleById(\n                            roleList,\n                            users.find((user) => user.user_id === manageUserId)!\n                              .default_access!.system_user_role_id\n                          ).education_institution_required\n                        ? \"Institute\"\n                        : \"-\"}\n                    </span>\n                  </div>\n                  {users.find((user) => user.user_id === manageUserId)!\n                    .default_access &&\n                  getRoleById(\n                    roleList,\n                    users.find((user) => user.user_id === manageUserId)!\n                      .default_access!.system_user_role_id\n                  ).education_institution_required ? (\n                    <div className=\"flex items-center gap-1\">\n                      <span className=\"text-gray-500\">Institute:</span>\n                      <span className=\"text-base font-medium\">\n                        {users.find((user) => user.user_id === manageUserId)!\n                          .default_access &&\n                        schoolLevels.education_categories &&\n                        getInstituteById(\n                          schoolLevels.education_categories,\n                          users.find((user) => user.user_id === manageUserId)!\n                            .default_access!.education_institution_id\n                        )\n                          ? getInstituteById(\n                              schoolLevels.education_categories,\n                              users.find(\n                                (user) => user.user_id === manageUserId\n                              )!.default_access!.education_institution_id\n                            )!.education_category_title\n                          : \"Unknown Institute\"}\n                      </span>\n                    </div>\n                  ) : users.find((user) => user.user_id === manageUserId)!\n                      .default_access &&\n                    getRoleById(\n                      roleList,\n                      users.find((user) => user.user_id === manageUserId)!\n                        .default_access!.system_user_role_id\n                    ).district_required ? (\n                    <div className=\"flex items-center gap-1\">\n                      <span className=\"text-gray-500\">District:</span>\n                      <span className=\"text-base font-medium\">\n                        {users.find((user) => user.user_id === manageUserId)!\n                          .default_access &&\n                          roomList &&\n                          distinctDistrict(roomList).find(\n                            (item) =>\n                              item._id ===\n                              users.find(\n                                (user) => user.user_id === manageUserId\n                              )!.default_access!.district_id\n                          ) &&\n                          distinctDistrict(roomList).find(\n                            (item) =>\n                              item._id ===\n                              users.find(\n                                (user) => user.user_id === manageUserId\n                              )!.default_access!.district_id\n                          )!.district_name}\n                      </span>\n                    </div>\n                  ) : users.find((user) => user.user_id === manageUserId)!\n                      .default_access &&\n                    getRoleById(\n                      roleList,\n                      users.find((user) => user.user_id === manageUserId)!\n                        .default_access!.system_user_role_id\n                    ).school_required ? (\n                    <div className=\"flex items-center gap-1\">\n                      <span className=\"text-gray-500\">School:</span>\n                      <span className=\"text-base font-medium\">\n                        {schoolList &&\n                        schoolList.find(\n                          (school) =>\n                            school._id ===\n                            users.find((user) => user.user_id === manageUserId)!\n                              .default_access?.school_id\n                        )\n                          ? schoolList.find(\n                              (school) =>\n                                school._id ===\n                                users.find(\n                                  (user) => user.user_id === manageUserId\n                                )!.default_access?.school_id\n                            )!.school_name\n                          : \"Unknown school\"}\n                      </span>\n                    </div>\n                  ) : (\n                    users.find((user) => user.user_id === manageUserId)!\n                      .default_access &&\n                    getRoleById(\n                      roleList,\n                      users.find((user) => user.user_id === manageUserId)!\n                        .default_access!.system_user_role_id\n                    ).room_required && (\n                      <div className=\"flex items-center gap-1\">\n                        {/* <span className=\"text-gray-500\">Room:</span> */}\n                        <MdLocationOn className=\"text-gray-500\" />\n                        {roomTable && (\n                          <span className=\"text-base font-medium\">\n                            {roomTable.find(\n                              (room) =>\n                                room.room_id ===\n                                users.find(\n                                  (user) => user.user_id === manageUserId\n                                )!.default_access?.room_id\n                            )?.district_name +\n                              \" - \" +\n                              roomTable.find(\n                                (room) =>\n                                  room.room_id ===\n                                  users.find(\n                                    (user) => user.user_id === manageUserId\n                                  )!.default_access?.room_id\n                              )?.center_name +\n                              \" - Room \" +\n                              roomTable.find(\n                                (room) =>\n                                  room.room_id ===\n                                  users.find(\n                                    (user) => user.user_id === manageUserId\n                                  )!.default_access?.room_id\n                              )?.room_name}\n                          </span>\n                        )}\n                      </div>\n                    )\n                  )}\n                </div>\n              </div>\n            ) : (\n              <NoResult\n                theme={NoResultThemes.Dark}\n                value={\"User info not found\"}\n              />\n            )}\n            {users.find((user) => user.user_id === manageUserId) && (\n              <div\n                key={\n                  users.find((user) => user.user_id === manageUserId)!.user_id\n                }\n                className=\"flex flex-col w-full\"\n              >\n                <div className=\"flex items-center gap-1\">\n                  <span className=\"text-gray-500\">NID:</span>\n                  <span className=\"text-base font-medium\">\n                    {users.find((user) => user.user_id === manageUserId)!.n_id}\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-1\">\n                  <span className=\"text-gray-500\">Email:</span>\n                  <span className=\"text-base font-medium\">\n                    {users.find((user) => user.user_id === manageUserId)!.email}\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-1\">\n                  <span className=\"text-gray-500\">Phone:</span>\n                  <span className=\"text-base font-medium\">\n                    {\n                      users.find((user) => user.user_id === manageUserId)!\n                        .phone_number\n                    }\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-1\">\n                  <span className=\"text-gray-500\">Status:</span>\n                  <span className=\"text-base font-medium\">\n                    {users.find((user) => user.user_id === manageUserId)!\n                      .is_active === false\n                      ? \"Blocked\"\n                      : \"Active\"}\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-1\">\n                  {users.find((user) => user.user_id === manageUserId)!\n                    .custome_access && (\n                    <button\n                      className={`px-2 py-1 font-semibold text-gray-50 inline-flex items-center rounded ${\n                        loadingRequestType && loadingRequestType === \"RESET\"\n                          ? \"cursor-wait bg-gray-400\"\n                          : \"bg-gray-600\"\n                      }`}\n                      onClick={() =>\n                        restUserAccess(\n                          users.find((user) => user.user_id === manageUserId)!\n                            .user_id\n                        )\n                      }\n                      disabled={loadingRequest}\n                    >\n                      <MdLock className=\"w-4 h-4 fill-current\" />\n                      <span>\n                        {loadingRequestType && loadingRequestType === \"RESET\"\n                          ? \"Reseting...\"\n                          : \"Reset Access\"}\n                      </span>\n                    </button>\n                  )}\n                  {!changeRole && (\n                    <button\n                      className=\"bg-yellow-300 hover:bg-yellow-400 px-2 py-1 font-semibold text-black inline-flex items-center rounded\"\n                      onClick={() => setChangeRole(true)}\n                    >\n                      <MdLock className=\"w-4 h-4 fill-current\" />\n                      <span>Change Role</span>\n                    </button>\n                  )}\n                  {users.find((user) => user.user_id === manageUserId)!\n                    .is_active ? (\n                    <button\n                      className={`px-2 py-1 font-semibold hidden text-gray-100 inline-flex items-center rounded ${\n                        loadingRequestType && loadingRequestType === \"STATUS\"\n                          ? \"cursor-wait bg-red-500\"\n                          : \"bg-red-700\"\n                      }`}\n                      onClick={() =>\n                        !loadingRequest &&\n                        manageUser &&\n                        blockUser(\n                          users.find((user) => user.user_id === manageUserId)!\n                            .user_id\n                        )\n                      }\n                      disabled={loadingRequest}\n                    >\n                      <MdLock className=\"w-4 h-4 fill-current\" />\n                      <span>\n                        {loadingRequestType && loadingRequestType === \"RESET\"\n                          ? \"Loading...\"\n                          : \"Activate\"}\n                      </span>\n                    </button>\n                  ) : (\n                    <button\n                      className={`px-2 py-1 font-semibold hidden text-gray-100 inline-flex items-center rounded ${\n                        loadingRequestType && loadingRequestType === \"STATUS\"\n                          ? \"cursor-wait bg-yellow-500\"\n                          : \"bg-yellow-700\"\n                      }`}\n                      onClick={() =>\n                        !loadingRequest &&\n                        manageUser &&\n                        blockUser(\n                          users.find((user) => user.user_id === manageUserId)!\n                            .user_id\n                        )\n                      }\n                      disabled={loadingRequest}\n                    >\n                      <MdLock className=\"w-4 h-4 fill-current\" />\n                      <span>\n                        {loadingRequestType && loadingRequestType === \"RESET\"\n                          ? \"Loading...\"\n                          : \"Re-Activate\"}\n                      </span>\n                    </button>\n                  )}\n                </div>\n              </div>\n            )}\n          </div>\n          {/* end header */}\n\n          {/* content */}\n          {manageUser && changeRole ? (\n            <UserRole\n              userInfo={manageUser}\n              roleList={roleList}\n              district={district}\n              setFeedBack={setFeedBack}\n              schoolList={schoolList}\n              roomList={roomList}\n              setChangeRole={setChangeRole}\n            />\n          ) : (\n            <UserAccess\n              userInfo={\n                users.filter((user) => user.user_id === manageUserId)[0]\n              }\n              manageUserId={manageUserId}\n              feedBack={feedBack}\n              setFeedBack={setFeedBack}\n              setUserAccess={setUserAccess}\n              userAccess={userAccess}\n              setCurrentAccess={setCurrentAccess}\n              currentAccess={currentAccess}\n            />\n          )}\n          {/* end content */}\n        </div>\n      )}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  schoolLevels,\n}: StoreState): { schoolLevels: schoolLevelsStoreInterface } => {\n  return { schoolLevels };\n};\n\nexport default connect(mapStateToProps, {\n  blockUserToSystem,\n  unBlockUserToSystem,\n  resetUserAccess,\n})(UserList);\n","export default __webpack_public_path__ + \"static/media/blank_profile.c3f94521.png\";","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { capitalizeFirstLetter } from \"../../shared/dataTest\";\nimport { SystemUserRoleInterface } from \"../../shared/interfaces\";\nimport search from \"../../utils/search\";\n\n// const searchRole = (\n//   objList: SystemUserRoleInterface[],\n//   text: string\n// ): SystemUserRoleInterface[] => {\n//   return objList.filter(\n//     (product) => product.role.toLocaleLowerCase() === text.toLocaleLowerCase()\n//   );\n// };\n\ntype RoleListProps = {\n  setChooseRole: (value: boolean) => void;\n  roleList: SystemUserRoleInterface[];\n  handleSelectRole: (role_id: string, TYPE?: \"SELECT\" | \"DEFAULT\") => void;\n  loadindRequest: boolean;\n};\n\nconst RoleList: React.FC<RoleListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section className=\"border-2 rounded border-gray-400\">\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            search(props.roleList, searchInput).length > 0 ? false : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseRole(false);\n          }}\n        >\n          Close\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}\n\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {search(props.roleList, searchInput).length > 0 ? (\n          search(props.roleList, searchInput).map((role, index) => (\n            <section key={index + role.role}>\n              <div className=\"group flex items-center justify-between my-1 hover:bg-gray-100\">\n                <div\n                  className=\"p-1 w-full mr-2 cursor-pointer\"\n                  onClick={() => {\n                    props.setChooseRole(false);\n                    !props.loadindRequest &&\n                      props.handleSelectRole(role.system_user_role_id);\n                  }}\n                >\n                  <p className=\"text-sm font-medium text-black\">\n                    {capitalizeFirstLetter(role.role)}\n                  </p>\n                </div>\n                <button\n                  type=\"button\"\n                  className=\"bg-blue-200 group-hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                >\n                  Choose\n                </button>\n              </div>\n            </section>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No role available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default RoleList;\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { MdHighlightOff } from \"react-icons/md\";\nimport { TiInputChecked } from \"react-icons/ti\";\nimport { connect } from \"react-redux\";\nimport { schoolLevelsStoreInterface, PushPopupAlert } from \"../../actions\";\nimport { assignRoleToUserAccess } from \"../../actions/users\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport Loading from \"../../components/Loading/Loading\";\nimport Table from \"../../components/Table/Table\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport {\n  UserInterface,\n  SystemUserRoleInterface,\n  DistrictInterface,\n  SchoolsInterface,\n  RoomLocationInterface,\n  AssignRoleToUserActionInterface,\n  LocationRoomTableInterface,\n  RoleToUserInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport RoleList from \"./RoleList\";\nimport { LocationsInArray } from \"./UserList\";\n\ninterface AppProps {\n  userInfo: UserInterface;\n  roleList: SystemUserRoleInterface[];\n  district: DistrictInterface[];\n  setFeedBack: React.Dispatch<\n    React.SetStateAction<{\n      type: \"success\" | \"danger\" | \"warning\" | \"\";\n      message: string;\n    }>\n  >;\n  assignRoleToUserAccess: Function;\n  schoolList: SchoolsInterface[] | null;\n  roomList: RoomLocationInterface[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  setChangeRole: React.Dispatch<React.SetStateAction<boolean>>;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface AppState {\n  loading: boolean;\n  loadingForm: boolean;\n  loadingRequest: boolean;\n  roleId: string;\n  provinceId: string;\n  districtId: string;\n  schoolId: string;\n  roomId: string;\n  instituteId: string;\n  centerId: string;\n  selectedRole: SystemUserRoleInterface | null;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  chooseRole: boolean;\n}\n\nclass UserRole extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingForm: true,\n      loadingRequest: false,\n      roleId: \"\",\n      provinceId: \"\",\n      districtId: \"\",\n      schoolId: \"\",\n      roomId: \"\",\n      instituteId: \"\",\n      centerId: \"\",\n      selectedRole: null,\n      formError: null,\n      chooseRole: false,\n    };\n  }\n\n  setRoleId = (value: string) => {\n    this.setState({ roleId: value });\n  };\n\n  setSelectedRole = (value: SystemUserRoleInterface | null) => {\n    this.setState({ selectedRole: value });\n  };\n\n  setProvinceId = (value: string) => {\n    this.setState({ provinceId: value });\n  };\n\n  setDistrictId = (value: string) => {\n    this.setState({ districtId: value });\n  };\n\n  setCenterId = (value: string) => {\n    this.setState({ centerId: value });\n  };\n\n  setRoomId = (value: string) => {\n    this.setState({ roomId: value });\n  };\n\n  setLoadingForm = (value: boolean) => {\n    this.setState({ loadingForm: value });\n  };\n\n  setSchoolId = (value: string) => {\n    this.setState({ schoolId: value });\n  };\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setInstituteId = (value: string) => {\n    this.setState({ instituteId: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n  setChooseRole = (value: boolean) => {\n    this.setState({ chooseRole: value });\n  };\n  // setLoadingForm = (value: boolean) => {\n  //   this.setState({ loadingForm: value });\n  // };\n\n  setDefaultState = (\n    default_access: RoleToUserInterface,\n    role: SystemUserRoleInterface\n  ) => {\n    // SET DEFAULT PROVINCE && DISTRICT ID =======================\n    let LOAD_province: LocationRoomTableInterface | undefined;\n    let LOAD_district: DistrictInterface | undefined;\n    if (role.district_required && this.props.roomList) {\n      LOAD_district = this.distinctDistrict(this.props.roomList).find(\n        (item) => item._id === default_access!.district_id\n      );\n      LOAD_district && this.setProvinceId(LOAD_district.province_id);\n      LOAD_district && this.setDistrictId(default_access!.district_id);\n      this.setLoadingForm(false);\n    } else if (role.room_required && this.props.roomList) {\n      // SET DEFAULT PROVINCE && DISTRICT && ROOM ID =======================\n\n      LOAD_province = LocationsInArray(this.props.roomList).find(\n        (item) => item.room_id === default_access!.room_id\n      );\n      LOAD_province && this.setProvinceId(LOAD_province.province_id);\n      LOAD_province && this.setDistrictId(LOAD_province.district_id);\n      LOAD_province && this.setCenterId(LOAD_province.center_id);\n      this.setRoomId(default_access.room_id);\n      this.setLoadingForm(false);\n    } else if (\n      role.school_required &&\n      this.props.roomList &&\n      this.props.schoolList\n    ) {\n      // SET DEFAULT PROVINCE && DISTRICT && SCHOOL ID =======================\n      let LOAD_school: SchoolsInterface | undefined =\n        this.props.schoolList.find(\n          (item) => item._id === default_access!.school_id\n        );\n      if (LOAD_school) {\n        LOAD_province = LocationsInArray(this.props.roomList).find(\n          (item) => item.district_id === LOAD_school?.district_id\n        );\n        LOAD_province && this.setProvinceId(LOAD_province.province_id);\n        LOAD_province && this.setDistrictId(LOAD_province.district_id);\n        this.setSchoolId(default_access.school_id);\n        this.setLoadingForm(false);\n      } else {\n        this.setLoadingForm(false);\n      }\n    } else {\n      this.setLoadingForm(false);\n    }\n  };\n\n  componentDidMount = () => {\n    if (this.props.roleList.length) {\n      if (this.props.userInfo.default_access && this.state.loadingForm) {\n        // SET DEFAULT ROLE ID =======================\n        if (!this.state.roleId.length) {\n          let result = this.props.roleList.find(\n            (role) =>\n              role.system_user_role_id ===\n              this.props.userInfo.default_access!.system_user_role_id\n          );\n          if (result) {\n            this.setRoleId(\n              this.props.userInfo.default_access.system_user_role_id\n            );\n            this.setSelectedRole(result);\n            this.setDefaultState(this.props.userInfo.default_access, result);\n          }\n        }\n\n        console.log(\"====================================\");\n        console.log({ vvvvv: this.props.userInfo.default_access });\n        console.log(\"====================================\");\n      }\n\n      if (this.state.selectedRole && this.props.userInfo.default_access) {\n        this.setDefaultState(\n          this.props.userInfo.default_access,\n          this.state.selectedRole\n        );\n      }\n\n      this.setLoading(false);\n    }\n  };\n\n  handleSelectRole = (\n    role_id: string,\n    TYPE: \"SELECT\" | \"DEFAULT\" = \"SELECT\"\n  ) => {\n    if (this.props.roleList) {\n      let result = this.props.roleList.find(\n        (role) => role.system_user_role_id === role_id\n      );\n      if (result) {\n        this.setRoleId(role_id);\n        this.setSelectedRole(result);\n        this.state.formError &&\n          this.state.formError.element === \"role_id\" &&\n          this.setFormError(null);\n\n        if (TYPE === \"SELECT\") {\n          this.setProvinceId(\"\");\n          this.setDistrictId(\"\");\n          this.setSchoolId(\"\");\n          this.setCenterId(\"\");\n          this.setRoomId(\"\");\n          this.setInstituteId(\"\");\n        }\n      }\n    }\n  };\n\n  tableData = (): JSX.Element[] => {\n    if (\n      this.state.roleId.length > 0 &&\n      this.state.selectedRole === null &&\n      this.props.roleList\n    ) {\n      this.handleSelectRole(this.state.roleId, \"DEFAULT\");\n    }\n    if (this.state.selectedRole) {\n      return this.state.selectedRole.access.map((access, i) => (\n        <tr\n          key={i + access.id}\n          className={`text-left border-b border-gray-200 hover:bg-gray-100`}\n        >\n          <td className=\"px-2 py-1\">\n            <label className=\"inline-flex items-center\">\n              <span className=\"text-gray-900 capitalize text-xl font-normal cursor-pointer\">\n                {access.task}\n              </span>\n            </label>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.create ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.create ? (\n                <TiInputChecked />\n              ) : (\n                <MdHighlightOff />\n              )}\n              {access.permitted.create ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.view ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.view ? <TiInputChecked /> : <MdHighlightOff />}\n              {access.permitted.view ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.update ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.update ? (\n                <TiInputChecked />\n              ) : (\n                <MdHighlightOff />\n              )}\n              {access.permitted.update ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.delete ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.delete ? (\n                <TiInputChecked />\n              ) : (\n                <MdHighlightOff />\n              )}\n              {access.permitted.delete ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n        </tr>\n      ));\n    }\n    const optionB = [\n      <tr key=\"55re\">\n        <td colSpan={5} className=\"text-center px-2 py-2\">\n          No Default Access Available on this Role.\n        </td>\n      </tr>,\n    ];\n    return optionB;\n  };\n\n  assignRoleToUser = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!window.confirm(`Are sure you want to change user role?`)) {\n      return false;\n    }\n    if (!this.state.selectedRole) {\n      return this.setFormError({\n        element: \"role_id\",\n        msg: \"User role is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.room_required === true &&\n      isEmptyOrSpaces(this.state.provinceId)\n    ) {\n      return this.setFormError({\n        element: \"province_id\",\n        msg: \"Province is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.education_institution_required === true &&\n      isEmptyOrSpaces(this.state.instituteId)\n    ) {\n      return this.setFormError({\n        element: \"institute_id\",\n        msg: \"Institute is required on this role!\",\n      });\n    }\n\n    if (\n      (this.state.selectedRole.room_required === true ||\n        this.state.selectedRole.district_required === true) &&\n      isEmptyOrSpaces(this.state.districtId)\n    ) {\n      return this.setFormError({\n        element: \"district_id\",\n        msg: \"District is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.school_required === true &&\n      isEmptyOrSpaces(this.state.schoolId)\n    ) {\n      return this.setFormError({\n        element: \"school_id\",\n        msg: \"School is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.room_required === true &&\n      isEmptyOrSpaces(this.state.centerId)\n    ) {\n      return this.setFormError({\n        element: \"center_id\",\n        msg: \"Center is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.room_required === true &&\n      isEmptyOrSpaces(this.state.roomId)\n    ) {\n      return this.setFormError({\n        element: \"room_id\",\n        msg: \"Room is required!\",\n      });\n    }\n    this.setLoadingRequest(true);\n    let formData: AssignRoleToUserActionInterface = {\n      user_id: this.props.userInfo.user_id,\n      data: {\n        system_user_role_id: this.state.roleId,\n        status: 1,\n        role: this.state.selectedRole.role,\n        access: this.state.selectedRole.access,\n        school_id: this.state.selectedRole.school_required\n          ? this.state.schoolId\n          : \"\",\n        district_id: this.state.selectedRole.district_required\n          ? this.state.districtId\n          : \"\",\n        room_id: this.state.selectedRole.room_required ? this.state.roomId : \"\",\n        education_institution_id: this.state.selectedRole\n          .education_institution_required\n          ? this.state.instituteId\n          : \"\",\n      },\n    };\n\n    try {\n      const res = await axios.post(`${API.AUTH}/addroletouser`, {\n        user_id: this.props.userInfo.user_id,\n        system_user_role_id: this.state.roleId,\n        status: 1,\n        role: this.state.selectedRole.role,\n        access: true,\n        school_id:\n          this.state.selectedRole.school_required === true\n            ? this.state.schoolId\n            : \"\",\n        district_id:\n          this.state.selectedRole.district_required === true\n            ? this.state.districtId\n            : \"\",\n        room_id:\n          this.state.selectedRole.room_required === true\n            ? this.state.roomId\n            : \"\",\n        education_institution_id: this.state.selectedRole\n          .education_institution_required\n          ? this.state.instituteId\n          : \"\",\n      });\n      if (res) {\n        console.log(\"====================================\");\n        console.log({ assignRoleToUser: res });\n        console.log(\"====================================\");\n        this.props.assignRoleToUserAccess(formData);\n        this.setLoadingRequest(false);\n        this.props.setChangeRole(false);\n        this.props.PushPopupAlert({\n          title: \"Assigning Role to User completed successfully\",\n          theme: PopupAlertTheme.success,\n        });\n      }\n    } catch (error) {\n      console.log({ role_error: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  distinctDistrict = (\n    location: RoomLocationInterface[],\n    province_id?: string\n  ): DistrictInterface[] => {\n    let ids: string[] = [],\n      result: DistrictInterface[] = [];\n\n    if (province_id) {\n      result = location.find((item) => item._id === province_id)\n        ? location.find((item) => item._id === province_id)!.districts\n          ? location.find((item) => item._id === province_id)!.districts\n          : []\n        : [];\n    } else {\n      for (const key in location) {\n        if (Object.prototype.hasOwnProperty.call(location, key)) {\n          for (const keyDistrict in location[key].districts) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                location[key].districts,\n                keyDistrict\n              )\n            ) {\n              if (!ids.includes(location[key].districts[keyDistrict]._id)) {\n                ids.push(location[key].districts[keyDistrict]._id);\n                result.push(location[key].districts[keyDistrict]);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return result;\n  };\n\n  distinctCenter = (\n    rooms: RoomLocationInterface[],\n    district_id: string\n  ): LocationRoomTableInterface[] => {\n    let ids: string[] = [],\n      result: LocationRoomTableInterface[] = [];\n\n    LocationsInArray(rooms).forEach((element) => {\n      if (\n        !ids.includes(element.center_id) &&\n        element.district_id === district_id\n      ) {\n        ids.push(element.center_id);\n        result.push(element);\n      }\n    });\n    return result;\n  };\n\n  distinctRoom = (\n    rooms: RoomLocationInterface[],\n    center_id: string\n  ): LocationRoomTableInterface[] => {\n    let ids: string[] = [],\n      result: LocationRoomTableInterface[] = [];\n\n    LocationsInArray(rooms).forEach((element) => {\n      if (!ids.includes(element.room_id) && element.center_id === center_id) {\n        ids.push(element.room_id);\n        result.push(element);\n      }\n    });\n    return result;\n  };\n\n  render() {\n    if (\n      this.state.loading === true ||\n      this.state.loadingForm ||\n      this.props.userInfo.default_access === null ||\n      this.state.roleId.length === 0 ||\n      this.state.selectedRole === null\n    ) {\n      return (\n        <div className=\"text-center py-7 font-bold text-3xl text-gray-400 animate-pulse\">\n          Loading...\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 py-2 md:py-4 px-2 md:px-0\">\n        {/* left panel */}\n        <div className=\"col-span-1 bg-white w-full overflow-x-auto border rounded\">\n          <div className=\"px-6 md:px-12 py-5 bg-white mx-auto rounded-2xl w-100\">\n            <h3 className=\"font-semibold text-2xl text-gray-800 mb-4\">\n              Change User Role\n            </h3>\n            {this.state.loadingForm ? (\n              <Loading />\n            ) : (\n              <form onSubmit={(e) => this.assignRoleToUser(e)}>\n                <div className=\"space-y-5\">\n                  <div className=\"space-y-2\">\n                    <label className=\"text-sm font-medium text-gray-700 tracking-wide\">\n                      User Role\n                    </label>\n\n                    {!this.state.chooseRole && (\n                      <div\n                        className={`w-full text-base bg-white text-grey-darker cursor-pointer border-2 px-4 py-3 rounded focus:outline-none focus:bg-gray-100 ${\n                          this.state.formError &&\n                          this.state.formError.element === \"role_id\"\n                            ? \"border-red-500\"\n                            : \"border-gray-400\"\n                        }`}\n                        onClick={() => {\n                          !this.state.loadingRequest &&\n                            this.setChooseRole(true);\n                          !this.state.loadingRequest && this.setFormError(null);\n                        }}\n                      >\n                        {this.state.selectedRole\n                          ? this.state.selectedRole.role\n                          : \"Select role\"}\n                      </div>\n                    )}\n\n                    {this.state.chooseRole && (\n                      <RoleList\n                        setChooseRole={this.setChooseRole}\n                        handleSelectRole={this.handleSelectRole}\n                        roleList={this.props.roleList}\n                        loadindRequest={this.state.loadingRequest}\n                      />\n                    )}\n\n                    {this.state.formError &&\n                      this.state.formError.element === \"role_id\" && (\n                        <span className=\"text-red-500\">\n                          {this.state.formError.msg}\n                        </span>\n                      )}\n                  </div>\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.education_institution_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Institute\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"institute_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setInstituteId(e.target.value);\n                            this.setProvinceId(\"\");\n                            this.setDistrictId(\"\");\n                            this.setSchoolId(\"\");\n                            this.setCenterId(\"\");\n                            this.setRoomId(\"\");\n                            this.state.formError &&\n                              this.state.formError.element === \"institute_id\" &&\n                              this.setFormError(null);\n                          }}\n                          disabled={this.state.loadingRequest}\n                          value={this.state.instituteId}\n                        >\n                          <option value=\"\">Select institute</option>\n                          {this.props.schoolLevels.education_categories &&\n                          this.props.schoolLevels.education_categories.length >\n                            0 ? (\n                            this.props.schoolLevels.education_categories.map(\n                              (institute) => (\n                                <option\n                                  value={institute.education_institute_id}\n                                  key={institute.education_institute_id}\n                                >\n                                  {institute.education_category_title}\n                                </option>\n                              )\n                            )\n                          ) : (\n                            <option value=\"\" disabled>\n                              No institute available\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"institute_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.room_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Province\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"province_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setProvinceId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"province_id\" &&\n                              this.setFormError(null);\n                            this.setDistrictId(\"\");\n                            this.setSchoolId(\"\");\n                            this.setCenterId(\"\");\n                            this.setRoomId(\"\");\n                          }}\n                          value={this.state.provinceId}\n                          disabled={this.state.loadingRequest}\n                        >\n                          <option value=\"\">Select province</option>\n                          {this.props.roomList &&\n                            this.props.roomList.map((province) => (\n                              <option key={province._id} value={province._id}>\n                                {province.province_name}\n                              </option>\n                            ))}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"province_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n                  {this.state.selectedRole &&\n                    (this.state.selectedRole.district_required ||\n                      this.state.selectedRole.room_required) && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          District\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"district_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setDistrictId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"district_id\" &&\n                              this.setFormError(null);\n                            this.setSchoolId(\"\");\n                            this.setCenterId(\"\");\n                            this.setRoomId(\"\");\n                          }}\n                          value={this.state.districtId}\n                          disabled={this.state.loadingRequest}\n                        >\n                          <option value=\"\">Select district</option>\n                          {this.props.roomList &&\n                          this.distinctDistrict(\n                            this.props.roomList,\n                            !isEmptyOrSpaces(this.state.provinceId)\n                              ? this.state.provinceId\n                              : undefined\n                          ).length > 0 ? (\n                            this.distinctDistrict(\n                              this.props.roomList,\n                              !isEmptyOrSpaces(this.state.provinceId)\n                                ? this.state.provinceId\n                                : undefined\n                            ).map((district) => (\n                              <option key={district._id} value={district._id}>\n                                {district.district_name}\n                              </option>\n                            ))\n                          ) : (\n                            <option value=\"\" disabled>\n                              No district found\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"district_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.school_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          School\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"school_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setSchoolId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"school_id\" &&\n                              this.setFormError(null);\n                            this.setCenterId(\"\");\n                            this.setRoomId(\"\");\n                          }}\n                          disabled={this.state.loadingRequest}\n                          value={this.state.schoolId}\n                        >\n                          <option value=\"\">Selected school</option>\n                          {this.props.schoolList &&\n                            this.props.schoolList.map((school) => (\n                              <option value={school._id} key={school._id}>\n                                {school.school_name}\n                              </option>\n                            ))}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"school_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.room_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Center\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"center_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setCenterId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"center_id\" &&\n                              this.setFormError(null);\n                            this.setRoomId(\"\");\n                          }}\n                          disabled={this.state.loadingRequest}\n                          value={this.state.centerId}\n                        >\n                          <option value=\"\">Select center</option>\n                          {this.state.districtId &&\n                          this.state.districtId.length > 0 &&\n                          this.props.roomList &&\n                          this.distinctCenter(\n                            this.props.roomList,\n                            this.state.districtId\n                          ).length > 0 ? (\n                            this.distinctCenter(\n                              this.props.roomList,\n                              this.state.districtId\n                            ).map((center, index) => (\n                              <option\n                                value={center.center_id}\n                                key={center.center_id + index}\n                              >\n                                {center.center_name}\n                              </option>\n                            ))\n                          ) : (\n                            <option value=\"\" disabled>\n                              No center found\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"center_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.room_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Room\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"room_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setRoomId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"room_id\" &&\n                              this.setFormError(null);\n                          }}\n                          disabled={this.state.loadingRequest}\n                          value={this.state.roomId}\n                        >\n                          <option value=\"\">Select room</option>\n                          {!isEmptyOrSpaces(this.state.centerId) &&\n                          this.props.roomList &&\n                          this.distinctRoom(\n                            this.props.roomList,\n                            this.state.centerId\n                          ).length > 0 ? (\n                            this.distinctRoom(\n                              this.props.roomList,\n                              this.state.centerId\n                            ).map((room, index) => (\n                              <option\n                                value={room.room_id}\n                                key={room.room_id + index}\n                                className={`${\n                                  room.room_name === \"0\" ? \"hidden\" : \"block\"\n                                }`}\n                              >\n                                {room.room_name}\n                              </option>\n                            ))\n                          ) : (\n                            <option value=\"\" disabled>\n                              No room found\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"room_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  <div className=\"flex justify-between 2xl:justify-start gap-2\">\n                    <button\n                      className=\"btn bg-gray-500 text-gray-50 focus:outline-none\"\n                      onClick={() => {\n                        this.props.setChangeRole(false);\n                        this.setFormError(null);\n                        this.setProvinceId(\"\");\n                        this.setDistrictId(\"\");\n                        this.setSchoolId(\"\");\n                        this.setCenterId(\"\");\n                        this.setRoomId(\"\");\n                      }}\n                      disabled={this.state.loadingRequest}\n                    >\n                      Back\n                    </button>\n                    <button\n                      className=\"btn btn-blue focus:outline-none\"\n                      // onClick={() => assignRoleToUser()}\n                      disabled={this.state.loadingRequest}\n                    >\n                      {this.state.loadingRequest ? \"Loading...\" : \"Save Change\"}\n                    </button>\n                  </div>\n                </div>\n              </form>\n            )}\n          </div>\n        </div>\n        {/* end left panel */}\n\n        {/* ------------------------------------------------------------ */}\n\n        {/* right panel */}\n        <div className=\"cols-span-1 md:col-span-2 bg-white w-full border rounded text-center p-2 hidden md:block\">\n          <div className=\"my-4\">\n            <span className=\"text-gray-600 font-semibold text-2xl\">\n              {this.state.selectedRole?.role}'s Default Access\n            </span>\n          </div>\n          {!this.state.loading && (\n            <div className=\"overflow-x-auto w-full\">\n              <Table\n                columns={[\n                  {\n                    columnTitle: \"Access Name\",\n                    alignText: \"left\",\n                    padding: \"p-3\",\n                  },\n                  { columnTitle: \"Create\", alignText: \"left\" },\n                  { columnTitle: \"View\", alignText: \"left\" },\n                  { columnTitle: \"Update\", alignText: \"left\" },\n                  { columnTitle: \"Delete\", alignText: \"left\" },\n                ]}\n                rows={this.tableData}\n                pagination={false}\n                search={false}\n                searchBG=\"bg-gray-50\"\n                thColor=\"gray\"\n                tableId=\"defaultAccess\"\n              />\n            </div>\n          )}\n        </div>\n        {/* end right panel */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  schoolLevels,\n}: StoreState): {\n  schoolLevels: schoolLevelsStoreInterface;\n} => {\n  return { schoolLevels };\n};\n\nexport default connect(mapStateToProps, {\n  assignRoleToUserAccess,\n  PushPopupAlert,\n})(UserRole);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  FC_CreateDistrict,\n  FC_DeleteDistrict,\n  FC_UpdateDistrict,\n} from \"../../actions/location\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport {\n  DistrictInterface,\n  RoomLocationInterface,\n} from \"../../shared/interfaces\";\nimport { PushPopupAlert } from \"../../actions/system\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { errorToText } from \"../../utils/errors\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\n\ninterface AppProps {\n  thisProvince: RoomLocationInterface;\n  thisDistrict: DistrictInterface | null;\n  loadingRequest: boolean;\n  actionTypes:\n    | \"CREATE_PROVINCE\"\n    | \"UPDATE_PROVINCE\"\n    | \"CREATE_DISTRICT\"\n    | \"UPDATE_DISTRICT\"\n    | \"CREATE_SECTOR\"\n    | \"UPDATE_SECTOR\"\n    | null;\n  setLoadingRequest: React.Dispatch<React.SetStateAction<boolean>>;\n  setThisDistrict: React.Dispatch<\n    React.SetStateAction<DistrictInterface | null>\n  >;\n  setActionTypes: React.Dispatch<\n    React.SetStateAction<\n      | \"CREATE_PROVINCE\"\n      | \"UPDATE_PROVINCE\"\n      | \"CREATE_DISTRICT\"\n      | \"UPDATE_DISTRICT\"\n      | \"CREATE_SECTOR\"\n      | \"UPDATE_SECTOR\"\n      | null\n    >\n  >;\n  FC_CreateDistrict: Function;\n  FC_UpdateDistrict: Function;\n  FC_DeleteDistrict: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\nconst ViewDistrict: React.FC<AppProps> = (props) => {\n  const [districtName, setDistrictName] = useState<string>(\"\");\n  const [districtCode, setDistrictCode] = useState<number>(0);\n  const [error, setError] = useState<{ element: string; msg: string } | null>(\n    null\n  );\n\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(districtName)) {\n      return setError({\n        element: \"district_name\",\n        msg: \"District name is required\",\n      });\n    }\n\n    if (districtCode <= 0) {\n      return setError({\n        element: \"district_code\",\n        msg: \"Invalid district code, code must be greater than 0\",\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      let res;\n      if (props.actionTypes === \"CREATE_DISTRICT\") {\n        res = await axios.post<{ data: DistrictInterface }>(\n          `${API.APPLICATION}/district`,\n          {\n            province_id: props.thisProvince._id,\n            province_code: props.thisProvince.province_code,\n            district_name: districtName,\n            district_code: districtCode,\n            centers: [],\n          }\n        );\n        if (res.data) {\n          console.log({\n            province_id: props.thisProvince._id,\n            data: res.data.data,\n            res,\n          });\n          props.FC_CreateDistrict({\n            province_id: props.thisProvince._id,\n            data: {\n              centers: res.data.data.centers,\n              sectors: res.data.data.sectors,\n              province_code: res.data.data.province_code,\n              province_id: res.data.data.province_id,\n              district_code: res.data.data.district_code,\n              district_name: res.data.data.district_name,\n              district_id: res.data.data._id,\n            },\n          });\n          props.PushPopupAlert({\n            title: \"New district created successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setDistrictName(\"\");\n          setDistrictCode(0);\n        }\n      } else if (\n        props.thisDistrict &&\n        props.actionTypes === \"UPDATE_DISTRICT\"\n      ) {\n        const centers: string[] = props.thisDistrict.centers.map(\n          (center) => center._id\n        );\n        res = await axios.patch<{ data: DistrictInterface }>(\n          `${API.APPLICATION}/district`,\n          {\n            district_id: props.thisDistrict._id,\n            province_code: props.thisProvince.province_code,\n            district_name: districtName,\n            district_code: districtCode,\n            centers,\n          }\n        );\n        if (res.data) {\n          props.FC_UpdateDistrict({\n            province_id: props.thisProvince._id,\n            district_id: props.thisDistrict._id,\n            district_name: districtName,\n          });\n          props.PushPopupAlert({\n            title: \"District updated successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setDistrictName(\"\");\n          props.setThisDistrict(null);\n        }\n      }\n    } catch (error) {\n      console.log({ doc_category_error: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      props.setLoadingRequest(false);\n    }\n  };\n\n  // const handleDelete = async (districtId: string) => {\n  //   try {\n  //     const res = await axios.delete<DistrictInterface>(\n  //       `${API.APPLICATION}/district/${districtId}`\n  //     );\n\n  //     if (res.data) {\n  //       props.FC_DeleteDistrict({\n  //         province_id: props.thisProvince._id,\n  //         district_id: districtId,\n  //       });\n  //       props.PushPopupAlert({\n  //         title: \"District deleted successfully\",\n  //         theme: PopupAlertTheme.success,\n  //       });\n  //       props.setLoadingRequest(false);\n  //       props.setActionTypes(null);\n  //     }\n  //   } catch (error) {\n  //     console.log({ district_error: error });\n  //     props.PushPopupAlert({\n  //       title: errorToText(error),\n  //       theme: PopupAlertTheme.danger,\n  //     });\n  //     props.setLoadingRequest(false);\n  //   }\n  // };\n\n  return (\n    <div className={`w-full p-2`}>\n      {props.thisProvince.districts.length > 0 ? (\n        <div className=\"rounded border border-gray-100 shadow-sm animate__animated animate__fadeIn\">\n          <table className=\"w-full z-0\">\n            <thead className=\"bg-gray-50\">\n              <tr className=\"text-left\">\n                <th className=\"px-3 py-3\">#</th>\n                <th>District name</th>\n                <th>District code</th>\n                <th>Sectors</th>\n                {/* <th>Status</th> */}\n              </tr>\n            </thead>\n            <tbody className=\"text-base\">\n              {props.thisProvince.districts.map((district, index) => (\n                <tr\n                  key={index + district._id}\n                  className={`text-left border-b border-gray-50`}\n                >\n                  <td className=\"px-3 py-1\">{index + 1}</td>\n                  <td>{district.district_name}</td>\n                  <td>{district.district_code}</td>\n                  <td>\n                    {district.sectors && district.sectors.length > 0\n                      ? district.sectors.length + \" Sector(s)\"\n                      : \"\"}\n                  </td>\n                  {/* <td>\n                    <div className=\"flex items-center gap-2\">\n                      <button\n                        title={\n                          props.thisDistrict &&\n                          props.thisDistrict._id === district._id\n                            ? \"Close Centers\"\n                            : \"View Centers\"\n                        }\n                        className={`${\n                          props.thisDistrict &&\n                          props.thisDistrict._id === district._id\n                            ? \"bg-gray-500 hover:bg-gray-600\"\n                            : \"bg-gray-400 hover:bg-gray-500\"\n                        } p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none`}\n                        onClick={() =>\n                          !props.thisDistrict ||\n                          props.thisDistrict._id !== district._id\n                            ? props.setThisDistrict(district)\n                            : props.setThisDistrict(null)\n                        }\n                      >\n                        {props.thisDistrict &&\n                        props.thisDistrict._id === district._id ? (\n                          <IoMdEyeOff className=\"text-white w-4 h-4\" />\n                        ) : (\n                          <IoMdEye className=\"text-white w-4 h-4\" />\n                        )}\n                      </button>\n                      <button\n                        title=\"Update district\"\n                        className=\"bg-blue-500 hover:bg-blue-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                        onClick={() => {\n                          props.setThisDistrict(district);\n                          setDistrictName(district.district_name);\n                          setDistrictCode(district.district_code);\n                          props.setActionTypes(\"UPDATE_DISTRICT\");\n                        }}\n                        disabled={\n                          props.loadingRequest || props.actionTypes !== null\n                        }\n                      >\n                        <MdCreate className=\"text-white w-4 h-4\" />\n                      </button>\n                      <button\n                        title=\"Delete Sub-Category\"\n                        className=\"bg-red-500 hover:bg-red-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                        onClick={() => handleDelete(district._id)}\n                        disabled={props.loadingRequest}\n                      >\n                        <MdClear className=\"text-white w-4 h-4\" />\n                      </button>\n                    </div>\n                  </td> */}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        <NoResult\n          theme={NoResultThemes.Dark}\n          value={\"No district found!\"}\n          component={\n            <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n              <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                <li\n                  onClick={() => props.setActionTypes(\"CREATE_DISTRICT\")}\n                  className=\"underline text-gray-500 cursor-pointer\"\n                >\n                  Add district\n                </li>\n              </ul>\n            </div>\n          }\n        />\n      )}\n\n      {/* modal for creating new categories or sub category */}\n      {props.actionTypes &&\n        (props.actionTypes === \"CREATE_DISTRICT\" ||\n          props.actionTypes === \"UPDATE_DISTRICT\") && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={(): void => {\n              props.setActionTypes(null);\n              setDistrictName(\"\");\n              setDistrictCode(10);\n              setError(null);\n            }}\n            displayClose={false}\n            backDropClose={false}\n            title={\n              <div className=\"flex items-center space-x-5\">\n                <div className=\"block pl-2 font-semibold text-xl self-start text-gray-700\">\n                  {/* <p className=\"text-base text-gray-500 font-medium\">\n                    You are{\" \"}\n                    {actionType === \"CREATE_SUB\" || \"CREATE_CAT\"\n                      ? \"creating\"\n                      : \"updating\"}\n                  </p> */}\n                  <h2 className=\"uppercase text-back\">\n                    {props.actionTypes === \"CREATE_DISTRICT\"\n                      ? \"CREATING NEW DISTRICT\"\n                      : props.actionTypes === \"UPDATE_DISTRICT\" &&\n                        \"UPDATING EXISTING DISTRICT\"}\n                  </h2>\n                </div>\n              </div>\n            }\n            widthSizeClass={ModalSize.medium}\n            padding={{ title: true, body: false, footer: false }}\n          >\n            <div className=\"mx-5 mb-4\">\n              <div className=\"py-2 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n                <div className=\"flex flex-col\">\n                  <label>District name</label>\n                  <input\n                    type=\"text\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"district_name\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"district_name\" &&\n                        setError(null);\n                      setDistrictName(e.target.value);\n                    }}\n                    value={districtName}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"district_name\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n                <div className=\"flex flex-col\">\n                  <label>District code</label>\n                  <input\n                    type=\"number\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"district_code\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"district_code\" &&\n                        setError(null);\n                      setDistrictCode(Number(e.target.value));\n                    }}\n                    value={districtCode}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"district_code\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n              </div>\n              <div className=\"pt-4 flex justify-between\">\n                <button\n                  onClick={() => {\n                    props.setActionTypes(null);\n                    setDistrictName(\"\");\n                    setDistrictCode(10);\n                    setError(null);\n                  }}\n                  className={`btn bg-gray-400 text-white hover:bg-gray-600`}\n                  type=\"button\"\n                  disabled={props.loadingRequest}\n                >\n                  Exit\n                </button>\n                <button\n                  className=\"btn bg-primary text-white hover:bg-blue-600\"\n                  type=\"button\"\n                  onClick={() => handleSubmit()}\n                  disabled={props.loadingRequest}\n                >\n                  {props.loadingRequest ? \"Loading...\" : \"Save\"}\n                </button>\n              </div>\n            </div>\n          </Modal>\n        )}\n      {/* end modal for creating new categories or sub category */}\n    </div>\n  );\n};\n\nexport default connect(null, {\n  FC_CreateDistrict,\n  FC_UpdateDistrict,\n  FC_DeleteDistrict,\n  PushPopupAlert,\n})(ViewDistrict);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { IoMdEye, IoMdEyeOff } from \"react-icons/io\";\nimport {\n  FC_CreateProvince,\n  FC_DeleteProvince,\n  FC_UpdateProvince,\n} from \"../../actions/location\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport {\n  DistrictInterface,\n  RoomLocationInterface,\n} from \"../../shared/interfaces\";\nimport { PushPopupAlert } from \"../../actions/system\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { errorToText } from \"../../utils/errors\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\n\ninterface AppProps {\n  thisProvince: RoomLocationInterface | null;\n  thisDistrict: DistrictInterface | null;\n  loadingRequest: boolean;\n  locations: RoomLocationInterface[];\n  actionTypes:\n    | \"CREATE_PROVINCE\"\n    | \"UPDATE_PROVINCE\"\n    | \"CREATE_DISTRICT\"\n    | \"UPDATE_DISTRICT\"\n    | \"CREATE_SECTOR\"\n    | \"UPDATE_SECTOR\"\n    | null;\n  setLoadingRequest: React.Dispatch<React.SetStateAction<boolean>>;\n  setThisProvince: React.Dispatch<\n    React.SetStateAction<RoomLocationInterface | null>\n  >;\n  setActionTypes: React.Dispatch<\n    React.SetStateAction<\n      | \"CREATE_PROVINCE\"\n      | \"UPDATE_PROVINCE\"\n      | \"CREATE_DISTRICT\"\n      | \"UPDATE_DISTRICT\"\n      | \"CREATE_SECTOR\"\n      | \"UPDATE_SECTOR\"\n      | null\n    >\n  >;\n  FC_CreateProvince: Function;\n  FC_UpdateProvince: Function;\n  FC_DeleteProvince: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\nconst ViewProvince: React.FC<AppProps> = (props) => {\n  const [provinceTitle, setProvinceTitle] = useState<string>(\"\");\n  const [provinceCode, setProvinceCode] = useState<number>(0);\n  const [error, setError] = useState<{ element: string; msg: string } | null>(\n    null\n  );\n\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(provinceTitle)) {\n      return setError({\n        element: \"province_title\",\n        msg: \"Title of Province is required\",\n      });\n    }\n\n    if (provinceCode <= 0) {\n      return setError({\n        element: \"province_code\",\n        msg: \"Code of Province is required\",\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      let res;\n      if (props.actionTypes === \"CREATE_PROVINCE\") {\n        res = await axios.post<{ data: RoomLocationInterface }>(\n          `${API.APPLICATION}/province`,\n          {\n            province_name: provinceTitle,\n            province_code: provinceCode,\n            districts: [],\n          }\n        );\n\n        if (res.data) {\n          props.FC_CreateProvince(res.data.data);\n          props.PushPopupAlert({\n            title: \"New Province created successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setProvinceTitle(\"\");\n        }\n      } else if (\n        props.thisProvince &&\n        props.actionTypes === \"UPDATE_PROVINCE\"\n      ) {\n        const districts: string[] = props.thisProvince.districts.map(\n          (district) => district._id\n        );\n        res = await axios.patch<{ updated: RoomLocationInterface }>(\n          `${API.APPLICATION}/province`,\n          {\n            province_id: props.thisProvince._id,\n            province_name: provinceTitle,\n            province_code: provinceCode,\n            districts,\n          }\n        );\n        if (res.data) {\n          console.log({ res: res.data.updated });\n          props.FC_UpdateProvince(res.data.updated);\n          props.PushPopupAlert({\n            title: \"Province updated successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setProvinceTitle(\"\");\n          props.setThisProvince(null);\n        }\n      }\n    } catch (error) {\n      console.error({ province_error: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      props.setLoadingRequest(false);\n    }\n  };\n\n  // const handleDelete = async (provinceId: string) => {\n  //   try {\n  //     const res = await axios.delete<RoomLocationInterface>(\n  //       `${API.APPLICATION}/province/${provinceId}`\n  //     );\n\n  //     if (res.data) {\n  //       console.log({ res });\n  //       props.FC_DeleteProvince(provinceId);\n  //       props.PushPopupAlert({\n  //         title: \"Province deleted successfully\",\n  //         theme: PopupAlertTheme.success,\n  //       });\n  //       props.setLoadingRequest(false);\n  //       props.setActionTypes(null);\n  //     }\n  //   } catch (error) {\n  //     console.log({ province_error: error });\n  //     props.PushPopupAlert({\n  //       title: errorToText(error),\n  //       theme: PopupAlertTheme.danger,\n  //     });\n  //     props.setLoadingRequest(false);\n  //   }\n  // };\n\n  return (\n    <div className={`w-full p-2`}>\n      {props.locations.length > 0 ? (\n        props.locations.map((province, index) => (\n          <div\n            key={index + province._id}\n            className=\"flex justify-between items-center p-2 mb-3 rounded border border-gray-100 shadow\"\n          >\n            <div className=\"flex items-center\">\n              <div className=\"ml-2\">\n                <div className=\"text-xl font-semibold text-gray-600\">\n                  {province.province_name}\n                </div>\n                <div className=\"text-sm font-light text-gray-500\">\n                  {province.districts.length > 0\n                    ? province.districts.length + \"District(s)\"\n                    : null}\n                </div>\n              </div>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <button\n                title={\n                  props.thisProvince &&\n                  props.thisProvince._id === province._id &&\n                  props.actionTypes !== \"UPDATE_PROVINCE\"\n                    ? \"Close Districts\"\n                    : \"View Districts\"\n                }\n                className={`${\n                  props.thisProvince &&\n                  props.thisProvince._id === province._id &&\n                  props.actionTypes !== \"UPDATE_PROVINCE\"\n                    ? \"bg-gray-500 hover:bg-gray-600\"\n                    : \"bg-gray-400 hover:bg-gray-500\"\n                } p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none`}\n                onClick={() => {\n                  !props.thisProvince || props.thisProvince._id !== province._id\n                    ? props.setThisProvince(province)\n                    : props.setThisProvince(null);\n                  setProvinceTitle(\"\");\n                  props.setActionTypes(null);\n                }}\n              >\n                {props.thisProvince &&\n                props.thisProvince._id === province._id &&\n                props.actionTypes !== \"UPDATE_PROVINCE\" ? (\n                  <IoMdEyeOff className=\"text-white w-4 h-4\" />\n                ) : (\n                  <IoMdEye className=\"text-white w-4 h-4\" />\n                )}\n              </button>\n              {/* <button\n                title=\"Update Province\"\n                className=\"bg-blue-500 hover:bg-blue-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                onClick={() => {\n                  props.setThisProvince(province);\n                  setProvinceTitle(province.province_name);\n                  setProvinceCode(province.province_code);\n                  props.setActionTypes(\"UPDATE_PROVINCE\");\n                }}\n                disabled={props.loadingRequest || props.actionTypes !== null}\n              >\n                <MdCreate className=\"text-white w-4 h-4\" />\n              </button>\n              <button\n                title=\"Delete Sub-Category\"\n                className=\"bg-red-500 hover:bg-red-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                onClick={() => handleDelete(province._id)}\n                disabled={props.loadingRequest || props.actionTypes !== null}\n              >\n                <MdClear className=\"text-white w-4 h-4\" />\n              </button> */}\n            </div>\n          </div>\n        ))\n      ) : (\n        <NoResult\n          theme={NoResultThemes.Dark}\n          value=\"No province found!\"\n          component={\n            <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n              <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                <li\n                  onClick={() => props.setActionTypes(\"CREATE_PROVINCE\")}\n                  className=\"underline text-gray-500 cursor-pointer\"\n                >\n                  Add province\n                </li>\n              </ul>\n            </div>\n          }\n        />\n      )}\n\n      {/* modal for creating new categories or sub category */}\n      {props.actionTypes &&\n        (props.actionTypes === \"CREATE_PROVINCE\" ||\n          props.actionTypes === \"UPDATE_PROVINCE\") && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={(): void => {\n              props.setActionTypes(null);\n              setProvinceTitle(\"\");\n              setProvinceCode(0);\n              setError(null);\n            }}\n            displayClose={false}\n            backDropClose={false}\n            title={\n              <div className=\"flex items-center space-x-5\">\n                <div className=\"block pl-2 font-semibold text-xl self-start text-gray-700\">\n                  <h2 className=\"uppercase text-back\">\n                    {props.actionTypes === \"CREATE_PROVINCE\"\n                      ? \"CREATING NEW PROVINCE\"\n                      : props.actionTypes === \"UPDATE_PROVINCE\" &&\n                        \"UPDATING EXISTING PROVINCE\"}\n                  </h2>\n                </div>\n              </div>\n            }\n            widthSizeClass={ModalSize.medium}\n            padding={{ title: true, body: false, footer: false }}\n          >\n            <div className=\"mx-5 mb-4\">\n              <div className=\"py-2 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n                <div className=\"flex flex-col\">\n                  <label>Province name</label>\n                  <input\n                    type=\"text\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"province_title\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"province_title\" &&\n                        setError(null);\n                      setProvinceTitle(e.target.value);\n                    }}\n                    value={provinceTitle}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"province_title\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n                <div className=\"flex flex-col\">\n                  <label>Province code {props.loadingRequest && \"TRUE\"}</label>\n                  <input\n                    type=\"number\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"province_code\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"province_code\" &&\n                        setError(null);\n                      setProvinceCode(Number(e.target.value));\n                    }}\n                    value={provinceCode}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"province_code\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n              </div>\n              <div className=\"pt-4 flex justify-between\">\n                <button\n                  onClick={() => {\n                    props.setActionTypes(null);\n                    setProvinceTitle(\"\");\n                    setProvinceCode(0);\n                    setError(null);\n                  }}\n                  className={`btn bg-gray-400 text-white hover:bg-gray-600`}\n                  type=\"button\"\n                  disabled={props.loadingRequest}\n                >\n                  Exit\n                </button>\n                <button\n                  className=\"btn bg-primary text-white hover:bg-blue-600\"\n                  type=\"button\"\n                  onClick={() => handleSubmit()}\n                  disabled={props.loadingRequest}\n                >\n                  {props.loadingRequest ? \"Loading...\" : \"Save\"}\n                </button>\n              </div>\n            </div>\n          </Modal>\n        )}\n      {/* end modal for creating new categories or sub category */}\n    </div>\n  );\n};\n\nexport default connect(null, {\n  FC_CreateProvince,\n  FC_UpdateProvince,\n  FC_DeleteProvince,\n  PushPopupAlert,\n})(ViewProvince);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { MdClear, MdCreate } from \"react-icons/md\";\nimport {\n  FC_CreateSector,\n  FC_DeleteSector,\n  FC_UpdateSector,\n} from \"../../actions/location\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport { DistrictInterface, SectorInterface } from \"../../shared/interfaces\";\nimport { PushPopupAlert } from \"../../actions/system\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { errorToText } from \"../../utils/errors\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\n\ninterface AppProps {\n  thisDistrict: DistrictInterface;\n  thisSector: SectorInterface | null;\n  loadingRequest: boolean;\n  actionTypes:\n    | \"CREATE_PROVINCE\"\n    | \"UPDATE_PROVINCE\"\n    | \"CREATE_DISTRICT\"\n    | \"UPDATE_DISTRICT\"\n    | \"CREATE_SECTOR\"\n    | \"UPDATE_SECTOR\"\n    | null;\n  setLoadingRequest: React.Dispatch<React.SetStateAction<boolean>>;\n  setThisSector: React.Dispatch<React.SetStateAction<SectorInterface | null>>;\n  setActionTypes: React.Dispatch<\n    React.SetStateAction<\n      | \"CREATE_PROVINCE\"\n      | \"UPDATE_PROVINCE\"\n      | \"CREATE_DISTRICT\"\n      | \"UPDATE_DISTRICT\"\n      | \"CREATE_SECTOR\"\n      | \"UPDATE_SECTOR\"\n      | null\n    >\n  >;\n  FC_CreateSector: Function;\n  FC_UpdateSector: Function;\n  FC_DeleteSector: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\nconst ViewSectors: React.FC<AppProps> = (props) => {\n  const [sectorName, setSectorName] = useState<string>(\"\");\n  const [sectorCode, setSectorCode] = useState<number>(0);\n  const [error, setError] = useState<{ element: string; msg: string } | null>(\n    null\n  );\n\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(sectorName)) {\n      return setError({\n        element: \"sector_name\",\n        msg: \"Sector name is required\",\n      });\n    }\n\n    if (sectorCode <= 0) {\n      return setError({\n        element: \"sector_code\",\n        msg: \"Invalid sector code, must be \",\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      let res;\n      if (props.actionTypes === \"CREATE_SECTOR\") {\n        res = await axios.post<{ data: SectorInterface }>(\n          `${API.APPLICATION}/sector`,\n          {\n            district_id: props.thisDistrict._id,\n            district_code: props.thisDistrict.district_code,\n            sector_name: sectorName,\n            sector_code: sectorCode,\n          }\n        );\n        if (res.data) {\n          console.log({\n            district_id: props.thisDistrict._id,\n            data: res.data.data,\n            res,\n          });\n          props.FC_CreateSector({\n            province_id: props.thisDistrict.province_id,\n            district_id: props.thisDistrict._id,\n            data: {\n              district_id: res.data.data.district_id,\n              district_code: res.data.data.district_code,\n              sector_name: res.data.data.sector_name,\n              sector_code: res.data.data.sector_code,\n              sector_id: res.data.data.sector_id,\n            },\n          });\n          props.PushPopupAlert({\n            title: \"New sector created successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setSectorName(\"\");\n        }\n      } else if (props.thisSector && props.actionTypes === \"UPDATE_SECTOR\") {\n        res = await axios.patch<{ data: DistrictInterface }>(\n          `${API.APPLICATION}/sector`,\n          {\n            district_id: props.thisSector.district_id,\n            district_code: props.thisDistrict.district_code,\n            sector_id: props.thisSector.sector_id,\n            sector_name: sectorName,\n            sector_code: sectorCode,\n          }\n        );\n        if (res.data) {\n          props.FC_UpdateSector({\n            province_id: props.thisDistrict.province_id,\n            district_id: props.thisSector.district_id,\n            sector_id: props.thisSector.sector_id,\n            sector_name: sectorName,\n            sector_code: sectorCode,\n          });\n          props.PushPopupAlert({\n            title: \"Sector updated successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setSectorName(\"\");\n          props.setThisSector(null);\n        }\n      }\n    } catch (error) {\n      console.log({ sector_error: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      props.setLoadingRequest(false);\n    }\n  };\n\n  const handleDelete = async (sectorId: string) => {\n    try {\n      const res = await axios.delete<SectorInterface>(\n        `${API.APPLICATION}/sector/${sectorId}`\n      );\n\n      if (res.data) {\n        props.FC_DeleteSector({\n          province_id: props.thisDistrict.province_id,\n          district_id: props.thisDistrict._id,\n          sector_id: sectorId,\n        });\n        props.PushPopupAlert({\n          title: \"Sector deleted successfully\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setLoadingRequest(false);\n        props.setActionTypes(null);\n      }\n    } catch (error) {\n      console.log({ district_error: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      props.setLoadingRequest(false);\n    }\n  };\n\n  return (\n    <div className={`w-full p-2`}>\n      {props.thisDistrict.sectors && props.thisDistrict.sectors.length > 0 ? (\n        <div className=\"rounded border border-gray-100 shadow-sm animate__animated animate__fadeIn\">\n          <table className=\"w-full z-0\">\n            <thead className=\"bg-gray-50\">\n              <tr className=\"text-left\">\n                <th className=\"px-3 py-3\">#</th>\n                <th>Sector name</th>\n                <th>Sector code</th>\n                <th>Status</th>\n              </tr>\n            </thead>\n            <tbody className=\"text-sm\">\n              {props.thisDistrict.sectors.map((sector, index) => (\n                <tr\n                  key={index + sector.district_id}\n                  className={`text-left border-b border-gray-50`}\n                >\n                  <td className=\"px-3 py-1\">{index + 1}</td>\n                  <td>{sector.sector_name}</td>\n                  <td>{sector.sector_name}</td>\n                  <td>\n                    <div className=\"flex items-center gap-2\">\n                      <button\n                        title=\"Update sector\"\n                        className=\"bg-blue-500 hover:bg-blue-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                        onClick={() => {\n                          props.setThisSector(sector);\n                          setSectorName(sector.sector_name);\n                          setSectorCode(sector.sector_code);\n                          props.setActionTypes(\"UPDATE_SECTOR\");\n                        }}\n                        disabled={\n                          props.loadingRequest || props.actionTypes !== null\n                        }\n                      >\n                        <MdCreate className=\"text-white w-4 h-4\" />\n                      </button>\n                      <button\n                        title=\"Delete sector\"\n                        className=\"bg-red-500 hover:bg-red-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                        onClick={() => handleDelete(sector.sector_id)}\n                        disabled={props.loadingRequest}\n                      >\n                        <MdClear className=\"text-white w-4 h-4\" />\n                      </button>\n                    </div>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        <NoResult\n          theme={NoResultThemes.Dark}\n          value={\"No sector found!\"}\n          component={\n            <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n              <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                <li\n                  onClick={() => props.setActionTypes(\"CREATE_SECTOR\")}\n                  className=\"underline text-gray-500 cursor-pointer\"\n                >\n                  Add sector\n                </li>\n              </ul>\n            </div>\n          }\n        />\n      )}\n\n      {/* modal for creating new categories or sub category */}\n      {props.actionTypes &&\n        (props.actionTypes === \"CREATE_SECTOR\" ||\n          props.actionTypes === \"UPDATE_SECTOR\") && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={(): void => {\n              props.setActionTypes(null);\n              setSectorName(\"\");\n              setSectorCode(0);\n              setError(null);\n            }}\n            displayClose={false}\n            backDropClose={false}\n            title={\n              <div className=\"flex items-center space-x-5\">\n                <div className=\"block pl-2 font-semibold text-xl self-start text-gray-700\">\n                  {/* <p className=\"text-base text-gray-500 font-medium\">\n                    You are{\" \"}\n                    {actionType === \"CREATE_SUB\" || \"CREATE_CAT\"\n                      ? \"creating\"\n                      : \"updating\"}\n                  </p> */}\n                  <h2 className=\"uppercase text-back\">\n                    {props.actionTypes === \"CREATE_SECTOR\"\n                      ? \"CREATING NEW SECTOR\"\n                      : props.actionTypes === \"UPDATE_SECTOR\" &&\n                        \"UPDATING EXISTING SECTOR\"}\n                  </h2>\n                </div>\n              </div>\n            }\n            widthSizeClass={ModalSize.medium}\n            padding={{ title: true, body: false, footer: false }}\n          >\n            <div className=\"w-full px-5 mb-5\">\n              <div className=\"py-3 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n                <div className=\"flex flex-col\">\n                  <label>Sector name</label>\n                  <input\n                    type=\"text\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"sector_name\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"sector_name\" &&\n                        setError(null);\n                      setSectorName(e.target.value);\n                    }}\n                    value={sectorName}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"sector_name\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n                <div className=\"flex flex-col\">\n                  <label>Sector code</label>\n                  <input\n                    type=\"number\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"sector_code\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"sector_code\" &&\n                        setError(null);\n                      setSectorCode(Number(e.target.value));\n                    }}\n                    value={sectorCode}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"sector_code\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n              </div>\n              <div className=\"pt-4 flex justify-between\">\n                <button\n                  onClick={() => {\n                    props.setActionTypes(null);\n                    setSectorName(\"\");\n                    setSectorCode(0);\n                    setError(null);\n                  }}\n                  className={`btn bg-gray-400 text-white hover:bg-gray-600`}\n                  type=\"button\"\n                  disabled={props.loadingRequest}\n                >\n                  Exit\n                </button>\n                <button\n                  className=\"btn bg-primary text-white hover:bg-blue-600\"\n                  type=\"button\"\n                  onClick={() => handleSubmit()}\n                  disabled={props.loadingRequest}\n                >\n                  {props.loadingRequest ? \"Loading...\" : \"Save\"}\n                </button>\n              </div>\n            </div>\n          </Modal>\n        )}\n      {/* end modal for creating new categories or sub category */}\n    </div>\n  );\n};\n\nexport default connect(null, {\n  FC_CreateSector,\n  FC_UpdateSector,\n  FC_DeleteSector,\n  PushPopupAlert,\n})(ViewSectors);\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { AiOutlineFilter } from \"react-icons/ai\";\nimport { BsCaretRightFill } from \"react-icons/bs\";\nimport { connect } from \"react-redux\";\nimport { getAllRoom } from \"../../actions/location\";\nimport { StoreState } from \"../../reducers\";\nimport {\n  DistrictInterface,\n  LocationRoomTableInterface,\n  RoomLocationInterface,\n  SectorInterface,\n} from \"../../shared/interfaces\";\nimport { LocationsInArray } from \"../UserManagement/UserList\";\nimport ViewDistricts from \"./ViewDistricts\";\nimport ViewProvince from \"./ViewProvince\";\nimport ViewSectors from \"./ViewSectors\";\n\nexport const distinctDistrict = (\n  rooms: RoomLocationInterface[],\n  province_id?: string\n): LocationRoomTableInterface[] => {\n  let ids: string[] = [],\n    result: LocationRoomTableInterface[] = [];\n\n  LocationsInArray(rooms).forEach((element) => {\n    if (!ids.includes(element.district_id)) {\n      if (province_id && element.province_id === province_id) {\n        ids.push(element.district_id);\n        result.push(element);\n      } else if (province_id === undefined) {\n        ids.push(element.district_id);\n        result.push(element);\n      }\n    }\n  });\n\n  return result;\n};\n\nexport const distinctCenter = (\n  rooms: RoomLocationInterface[],\n  district_id: string\n): LocationRoomTableInterface[] => {\n  let ids: string[] = [],\n    result: LocationRoomTableInterface[] = [];\n\n  LocationsInArray(rooms).forEach((element) => {\n    if (\n      !ids.includes(element.center_id) &&\n      element.district_id === district_id\n    ) {\n      ids.push(element.center_id);\n      result.push(element);\n    }\n  });\n  return result;\n};\n\nexport const distinctRoom = (\n  rooms: RoomLocationInterface[],\n  center_id: string\n): LocationRoomTableInterface[] => {\n  let ids: string[] = [],\n    result: LocationRoomTableInterface[] = [];\n\n  LocationsInArray(rooms).forEach((element) => {\n    if (!ids.includes(element.room_id) && element.center_id === center_id) {\n      ids.push(element.room_id);\n      result.push(element);\n    }\n  });\n  return result;\n};\n\ninterface AppProps {\n  locations: RoomLocationInterface[];\n  getAllRoom: Function;\n}\n\nconst _Locations: React.FC<AppProps> = (props) => {\n  const [actionTypes, setActionTypes] = useState<\n    | \"CREATE_PROVINCE\"\n    | \"UPDATE_PROVINCE\"\n    | \"CREATE_DISTRICT\"\n    | \"UPDATE_DISTRICT\"\n    | \"CREATE_SECTOR\"\n    | \"UPDATE_SECTOR\"\n    | null\n  >(null);\n  const [thisProvince, setThisProvince] =\n    useState<RoomLocationInterface | null>(null);\n  const [thisDistrict, setThisDistrict] = useState<DistrictInterface | null>(\n    null\n  );\n  const [thisSector, setThisSector] = useState<SectorInterface | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (!props.locations.length && loading) {\n      props.getAllRoom((status: boolean, msg: string) => {\n        setLoading(status);\n        if (!status && msg.length > 0) {\n          console.log(msg);\n        }\n      });\n    } else if (loading) {\n      setLoading(false);\n    }\n  }, [loading, props]);\n\n  if (loading === true) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading locations...\n      </div>\n    );\n  }\n\n  const displayTitle = () => {\n    if (\n      (!thisSector ||\n        (thisSector &&\n          (actionTypes === \"CREATE_SECTOR\" ||\n            actionTypes === \"UPDATE_SECTOR\"))) &&\n      thisDistrict &&\n      actionTypes !== \"CREATE_DISTRICT\" &&\n      actionTypes !== \"UPDATE_DISTRICT\"\n    ) {\n      return (\n        <div className=\"flex items-center gap-1\">\n          <span\n            className=\"cursor-pointer uppercase text-xl font-semibold text-gray-800\"\n            onClick={() => {\n              setThisProvince(null);\n            }}\n          >\n            province\n          </span>\n          <span>/</span>\n          <span\n            className=\"cursor-pointer uppercase text-xl font-semibold text-gray-800\"\n            onClick={() => {\n              setThisDistrict(null);\n            }}\n          >\n            district\n          </span>\n          <span>/</span>\n          <span className=\"text-xl text-gray-800\">\n            {thisDistrict.district_name}\n          </span>\n        </div>\n      );\n    } else if (\n      (!thisDistrict ||\n        (thisDistrict &&\n          (actionTypes === \"CREATE_DISTRICT\" ||\n            actionTypes === \"UPDATE_DISTRICT\"))) &&\n      thisProvince\n    ) {\n      return (\n        <div className=\"flex items-center gap-2\">\n          <span\n            className=\"cursor-pointer uppercase text-xl font-semibold text-gray-800\"\n            onClick={() => {\n              setThisProvince(null);\n            }}\n          >\n            province\n          </span>\n          <span>/</span>\n          <span className=\"text-xl text-gray-800\">\n            {thisProvince.province_name}\n          </span>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"flex items-center gap-1\">\n        <span className=\"uppercase text-xl font-semibold text-gray-800\">\n          province\n        </span>\n        <span>/</span>\n      </div>\n    );\n  };\n\n  return (\n    <Fragment>\n      <div className=\"w-full my-5\">\n        {/* header title */}\n        <div className=\"flex justify-between p-2 gap-1\">\n          <div className=\"flex flex-col\">\n            <span className=\"text-blue-600 text-2xl md:text-2xl lg:text-3xl font-bold\">\n              Locations Management\n            </span>\n\n            <div className=\"flex flex-row items-center md:gap-3 gap-2 mt-1\">\n              <AiOutlineFilter className=\"text-xl\" />\n              <div className=\"flex flex-row items-center gap-1\">\n                {thisProvince && (\n                  <span className=\"text-gray-700 text-base font-bold\">\n                    {thisProvince.province_name}\n                  </span>\n                )}\n                {thisDistrict && (\n                  <div className=\"flex flex-row items-center gap-1\">\n                    <BsCaretRightFill />\n                    <span className=\"text-blue-600 text-base font-bold underline\">\n                      {thisDistrict.district_name} district\n                    </span>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n        {/* end header title */}\n\n        <div className=\"w-full bg-white\">\n          <div className=\"border-b px-2 py-3 flex justify-between\">\n            {displayTitle()}\n\n            {/* CREATE NEW PROVINCE =====================================*/}\n            {/* {(!thisProvince ||\n              (thisProvince &&\n                (actionTypes === \"CREATE_PROVINCE\" ||\n                  actionTypes === \"UPDATE_PROVINCE\"))) && (\n              <button\n                type=\"button\"\n                className={`btn hover:bg-blue-500 mb-1 border-2 border-blue-500 bg-white\n        hover:text-white rounded-md flex items-center font-bold text-gray-700 focus:outline-none gap-1 ${\n          loadingRequest && \"cursor-wait\"\n        } ${actionTypes !== null && \"cursor-not-allowed\"}`}\n                onClick={() => setActionTypes(\"CREATE_PROVINCE\")}\n                disabled={actionTypes !== null || loadingRequest}\n              >\n                <MdAdd className=\"inline-block mr-1 text-xl font-bold\" />\n                New Province\n              </button>\n            )} */}\n            {/* CREATE NEW DISTRICT =====================================*/}\n            {/* {(!thisDistrict ||\n              (thisDistrict &&\n                (actionTypes === \"CREATE_DISTRICT\" ||\n                  actionTypes === \"UPDATE_DISTRICT\"))) &&\n              thisProvince && (\n                <button\n                  type=\"button\"\n                  className={`btn hover:bg-blue-500 mb-1 border-2 border-blue-500 bg-white\n        hover:text-white rounded-md flex items-center font-bold text-gray-700 focus:outline-none gap-1 ${\n          loadingRequest && \"cursor-wait\"\n        } ${actionTypes !== null && \"cursor-not-allowed\"}`}\n                  onClick={() => setActionTypes(\"CREATE_DISTRICT\")}\n                  disabled={actionTypes !== null || loadingRequest}\n                >\n                  <MdAdd className=\"inline-block mr-1 text-xl font-bold\" />\n                  New District\n                </button>\n              )} */}\n\n            {/* CREATE NEW SECTOR =====================================*/}\n            {/* {(!thisSector ||\n              (thisSector &&\n                (actionTypes === \"CREATE_SECTOR\" ||\n                  actionTypes === \"UPDATE_SECTOR\"))) &&\n              thisDistrict &&\n              actionTypes !== \"CREATE_DISTRICT\" &&\n              actionTypes !== \"UPDATE_DISTRICT\" && (\n                <button\n                  type=\"button\"\n                  className={`btn hover:bg-blue-500 mb-1 border-2 border-blue-500 bg-white\n        hover:text-white rounded-md flex items-center font-bold text-gray-700 focus:outline-none gap-1 ${\n          loadingRequest && \"cursor-wait\"\n        } ${actionTypes !== null && \"cursor-not-allowed\"}`}\n                  onClick={() => setActionTypes(\"CREATE_SECTOR\")}\n                  disabled={actionTypes !== null || loadingRequest}\n                >\n                  <MdAdd className=\"inline-block mr-1 text-xl font-bold\" />\n                  New Sector\n                </button>\n              )} */}\n          </div>\n\n          {(!thisProvince ||\n            (thisProvince &&\n              (actionTypes === \"CREATE_PROVINCE\" ||\n                actionTypes === \"UPDATE_PROVINCE\"))) && (\n            <ViewProvince\n              thisProvince={thisProvince}\n              thisDistrict={thisDistrict}\n              loadingRequest={loadingRequest}\n              locations={props.locations}\n              actionTypes={actionTypes}\n              setLoadingRequest={setLoadingRequest}\n              setThisProvince={setThisProvince}\n              setActionTypes={setActionTypes}\n            />\n          )}\n\n          {(!thisDistrict ||\n            (thisDistrict &&\n              (actionTypes === \"CREATE_DISTRICT\" ||\n                actionTypes === \"UPDATE_DISTRICT\"))) &&\n            thisProvince && (\n              <ViewDistricts\n                thisDistrict={thisDistrict}\n                loadingRequest={loadingRequest}\n                actionTypes={actionTypes}\n                setLoadingRequest={setLoadingRequest}\n                setActionTypes={setActionTypes}\n                thisProvince={thisProvince}\n                setThisDistrict={setThisDistrict}\n              />\n            )}\n\n          {(!thisSector ||\n            (thisSector &&\n              (actionTypes === \"CREATE_SECTOR\" ||\n                actionTypes === \"UPDATE_SECTOR\"))) &&\n            thisDistrict &&\n            actionTypes !== \"CREATE_DISTRICT\" &&\n            actionTypes !== \"UPDATE_DISTRICT\" && (\n              <ViewSectors\n                thisDistrict={thisDistrict}\n                thisSector={thisSector}\n                loadingRequest={loadingRequest}\n                actionTypes={actionTypes}\n                setLoadingRequest={setLoadingRequest}\n                setThisSector={setThisSector}\n                setActionTypes={setActionTypes}\n              />\n            )}\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  locations,\n}: StoreState): {\n  locations: RoomLocationInterface[];\n} => {\n  return { locations: locations.roomLocation };\n};\n\nexport const Locations = connect(mapStateToProps, {\n  getAllRoom,\n})(_Locations);\n"],"sourceRoot":""}
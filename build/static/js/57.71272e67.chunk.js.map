{"version":3,"sources":["components/ClaimReportTools/ClaimEvaluationHistory.tsx","components/ClaimReportTools/ClaimReportAnalytic.tsx","containers/Claimings/Admin/ClaimReport.tsx"],"names":["ClaimEvaluationHistory","props","GetEvaluationHistory","a","setState","loading","axios","post","API","CLAIMING","claim_level","period_id","res","data","evaluators","console","log","componentDidMount","state","this","className","Loading","length","colSpan","sort","b","evaluated","map","item","i","name","email","Component","ClaimReportAnalytic","setLoading","status","id","options","chart","width","type","labels","general_main_data","completedClaimCounts","evaluatedClaimCounts","pendingClaimCounts","deletedClaimCounts","responsive","breakpoint","legend","position","series","selected_claim_type","general_summary","pending","validated","theme","mode","palette","monochrome","enabled","color","shadeTo","shadeIntensity","height","plotOptions","bar","borderRadius","horizontal","barHeight","dataLabels","xaxis","categories","summary_details","position_title","total","_ClaimReport","GetClaims","level","session_id","GetSummaryFilter","response","test","find","itm","undefined","filter","push","ClaimStatus","PENDING","EVALUATED","GetSummary","res_data","type_key","title","claims","selected_level","claim_status","GetSummaryCounts","getMainSummary","schoolLevels","selectedEducationCategory","education_categories","education_institute_id","auth","education_institution_id","setSelectedEducationCategory","session_plan","_id","selected_institution","error","success","PlansTypeKeys","APPLICATION","view_type","showInstitutes","onClick","education_category_title","description","capitalizeFirstLetter","toString","onChange","e","selected_type","target","value","DOCUMENT_VALIDATION","EXAMINATION","parseInt","displayNumbers","institution","ClaimReport","connect","system","positions","loadAllPositionsByInstitute"],"mappings":"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","file":"static/js/57.71272e67.chunk.js","sourcesContent":["import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { API } from \"../../utils/api\";\nimport Loading from \"../Loading/Loading\";\n\ninterface ClaimEvaluationHistoryProps {\n  claim_level: number;\n}\ninterface ClaimEvaluationHistoryState {\n  loading: boolean;\n  evaluators: EvaluatorInterface[] | null;\n}\n\ninterface EvaluatorInterface {\n  email: string;\n  evaluated: number;\n  name: string;\n}\n\nclass ClaimEvaluationHistory extends Component<\n  ClaimEvaluationHistoryProps,\n  ClaimEvaluationHistoryState\n> {\n  constructor(props: ClaimEvaluationHistoryProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      evaluators: null,\n    };\n  }\n  GetEvaluationHistory = async () => {\n    this.setState({\n      loading: true,\n    });\n    try {\n      const res = await axios.post<EvaluatorInterface[]>(\n        `${API.CLAIMING}/user/evaluator/${this.props.claim_level}`,\n        {\n          period_id: \"62a5ea76b038313901018796\",\n        }\n      );\n      if (res.data) {\n        this.setState({\n          evaluators: res.data,\n          loading: false,\n        });\n      }\n    } catch (error: any) {\n      this.setState({ loading: false });\n      console.log(\"Result: \", { ...error });\n    }\n  };\n  componentDidMount = () => {\n    this.GetEvaluationHistory();\n  };\n  render() {\n    if (this.state.loading === true || this.state.evaluators === null) {\n      return (\n        <div className=\"bg-white rounded p-5 mt-5\">\n          <Loading />\n          <div className=\"-mt-5 ml-5\">Loading data, please wait...</div>\n        </div>\n      );\n    }\n    return (\n      <div>\n        <div>\n          <table className=\"w-full\">\n            <thead className=\"bg-blue-100\">\n              <tr>\n                <th className=\"px-3 py-2 text-center\">#</th>\n                <th className=\"px-3 py-2 text-left\">Names</th>\n                <th className=\"px-3 py-2 text-left\">Email</th>\n                <th className=\"px-3 py-2 text-center\">Counts</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.evaluators.length === 0 ? (\n                <tr>\n                  <td\n                    colSpan={4}\n                    className=\"bg-gray-200 p-5 text-center font-light text-3xl\"\n                  >\n                    No result found!\n                  </td>\n                </tr>\n              ) : (\n                this.state.evaluators\n                  .sort((a, b) =>\n                    a.evaluated < b.evaluated\n                      ? 1\n                      : b.evaluated < a.evaluated\n                      ? -1\n                      : 0\n                  )\n                  .map((item, i) => (\n                    <tr\n                      key={i + 1}\n                      className={`${i % 2 !== 0 ? \"bg-gray-100\" : \"\"}`}\n                    >\n                      <td className=\"px-3 py-1 text-center\">{i + 1}</td>\n                      <td className=\"px-3 py-1 text-left\">{item.name}</td>\n                      <td className=\"px-3 py-1 text-left\">{item.email}</td>\n                      <td className=\"px-3 py-1 text-center\">\n                        {item.evaluated}\n                      </td>\n                    </tr>\n                  ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ClaimEvaluationHistory;\n","import { ApexOptions } from \"apexcharts\";\nimport axios from \"axios\";\nimport React, { Component } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { GetGeneralSummaryInterface } from \"../../containers/Claimings/Admin/ClaimReport\";\nimport { education_category, PlansTypeKeys } from \"../../interfaces\";\nimport { API } from \"../../utils/api\";\nimport Loading from \"../Loading/Loading\";\n\ninterface GeneralSummaryPie {\n  series: number[];\n  options: ApexOptions;\n}\n\ninterface ClaimReportAnalyticProps {\n  general_summary: {\n    pending: number;\n    validated: number;\n    total: number;\n  };\n  summary_details: {\n    position_title: string;\n    total: number;\n    pending: number;\n    validated: number;\n  }[];\n  claim_level: number;\n  institution: education_category;\n  general_main_data: GetGeneralSummaryInterface;\n  selected_claim_type: PlansTypeKeys;\n}\n\ninterface ClaimReportAnalyticState {\n  loading: boolean;\n}\n\nexport class ClaimReportAnalytic extends Component<\n  ClaimReportAnalyticProps,\n  ClaimReportAnalyticState\n> {\n  constructor(props: ClaimReportAnalyticProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n    };\n  }\n  setLoading = (status: boolean) => this.setState({ loading: status });\n  render() {\n    return (\n      <div className=\"animate__animated animate__fadeIn\">\n        <div className=\"flex flex-row items-center gap-4 h-64\">\n          <div className=\"bg-gray-100 rounded p-4 border border-blue-600 h-full\">\n            <div>\n              <div className=\"font-extrabold text-xl\">General summary</div>\n            </div>\n            <div id=\"chart\">\n              <ReactApexChart\n                options={{\n                  chart: {\n                    width: 380,\n                    type: \"donut\",\n                  },\n                  labels: [\n                    `Total Completed claims (${this.props.general_main_data.completedClaimCounts})`,\n                    `Total evaluated claims (${this.props.general_main_data.evaluatedClaimCounts})`,\n                    `Total pending claims (${this.props.general_main_data.pendingClaimCounts})`,\n                    `Total Canceled claims (${this.props.general_main_data.deletedClaimCounts})`,\n                  ],\n                  responsive: [\n                    {\n                      breakpoint: 480,\n                      options: {\n                        chart: {\n                          width: 200,\n                        },\n                        legend: {\n                          position: \"bottom\",\n                        },\n                      },\n                    },\n                  ],\n                }}\n                series={[\n                  this.props.general_main_data.completedClaimCounts,\n                  this.props.general_main_data.evaluatedClaimCounts,\n                  this.props.general_main_data.pendingClaimCounts,\n                  this.props.general_main_data.deletedClaimCounts,\n                ]}\n                type=\"donut\"\n                width={400}\n              />\n            </div>\n          </div>\n          <div className=\"bg-gray-100 rounded p-4 border border-blue-600 h-full\">\n            <div>\n              <div className=\"font-extrabold text-xl\">\n                {this.props.selected_claim_type}\n              </div>\n              <div className=\"font-extrabold text-sm text-blue-600\">\n                Claim level:{\" \"}\n                {this.props.claim_level === 1\n                  ? \"Level one\"\n                  : \"Public Service Commission\"}\n              </div>\n            </div>\n            <div id=\"chart\">\n              <ReactApexChart\n                options={{\n                  chart: {\n                    width: 380,\n                    type: \"pie\",\n                  },\n                  labels: [\n                    `Total pending claims (${this.props.general_summary.pending})`,\n                    `Total evaluated claims (${this.props.general_summary.validated})`,\n                  ],\n                  responsive: [\n                    {\n                      breakpoint: 480,\n                      options: {\n                        chart: {\n                          width: 200,\n                        },\n                        legend: {\n                          position: \"bottom\",\n                        },\n                      },\n                    },\n                  ],\n                }}\n                series={[\n                  this.props.general_summary.pending,\n                  this.props.general_summary.validated,\n                ]}\n                type=\"pie\"\n                width={400}\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"animate__animated animate__fadeIn rounded border border-blue-600 pt-3 pr-2 mt-4\">\n          <div id=\"chart\" className=\"h-auto\">\n            <ReactApexChart\n              options={{\n                theme: {\n                  mode: \"light\",\n                  palette: \"palette1\",\n                  monochrome: {\n                    enabled: false,\n                    color: \"#255aee\",\n                    shadeTo: \"light\",\n                    shadeIntensity: 0.65,\n                  },\n                },\n                chart: {\n                  type: \"bar\",\n                  height: \"auto\",\n                },\n                plotOptions: {\n                  bar: {\n                    borderRadius: 2,\n                    horizontal: true,\n                    barHeight: \"100px\",\n                  },\n                },\n                dataLabels: {\n                  enabled: true,\n                },\n                xaxis: {\n                  categories: this.props.summary_details.map(\n                    (item) => item.position_title\n                  ),\n                },\n              }}\n              series={[\n                {\n                  name: \"Total claims\",\n                  data: this.props.summary_details.map((item) => item.total),\n                },\n                {\n                  name: \"Pending claims\",\n                  data: this.props.summary_details.map((item) => item.pending),\n                },\n                {\n                  name: \"Validated claims\",\n                  data: this.props.summary_details.map(\n                    (item) => item.validated\n                  ),\n                },\n              ]}\n              type=\"bar\"\n              height={this.props.summary_details.length > 60 ? 5000 : 3000}\n            />\n          </div>\n          {console.log(\"Length: \", this.props.summary_details.length)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ClaimReportAnalytic;\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { CgArrowRightO } from \"react-icons/cg\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  positionsStoreInterface,\n  schoolLevelsStoreInterface,\n  System,\n  setSelectedEducationCategory,\n  loadAllPositionsByInstitute,\n} from \"../../../actions\";\nimport ClaimEvaluationHistory from \"../../../components/ClaimReportTools/ClaimEvaluationHistory\";\nimport ClaimReportAnalytic from \"../../../components/ClaimReportTools/ClaimReportAnalytic\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport {\n  ClaimStatus,\n  education_category,\n  PlansTypeKeys,\n} from \"../../../interfaces\";\nimport { StoreState } from \"../../../reducers\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { displayNumbers } from \"../../../utils/functions\";\n\nexport interface GetGeneralSummaryInterface {\n  allClaimCounts: number;\n  completedClaimCounts: number;\n  deletedClaimCounts: number;\n  evaluatedClaimCounts: number;\n  pendingClaimCounts: number;\n}\n\ninterface GetClaimsReportInterface {\n  _id: string;\n  previous: {\n    evaluater: {\n      email: string;\n      name: string;\n    };\n    reason: string;\n    status: string;\n  };\n  title: string;\n  last_claim_status: ClaimStatus;\n  claiming_on_id: string;\n  type_key: PlansTypeKeys;\n  default_claim_resaons: string;\n  user: string;\n  period_id: string;\n  claim_level: number;\n  claims: [\n    {\n      claim_status: ClaimStatus;\n      _id: string;\n      level: number;\n      reason: string;\n      date_created: string;\n      createdAt: string;\n      updatedAt: string;\n    }\n  ];\n  createdAt: string;\n  updatedAt: string;\n  __v: 0;\n}\n\ninterface PositionSummaryInterface {\n  position_title: string;\n  total: number;\n  status: ClaimStatus;\n}\n\ninterface ClaimReportProps {\n  auth: Auth;\n  system: System;\n  positions: positionsStoreInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n  setSelectedEducationCategory: (data: education_category) => void;\n  loadAllPositionsByInstitute: (\n    institution_id: string,\n    callback: (loading: boolean) => void\n  ) => void;\n}\ninterface ClaimReportState {\n  error: string;\n  success: string;\n  loading: boolean;\n  data: GetClaimsReportInterface[] | null;\n  selected_level: number;\n  selected_claim_type: PlansTypeKeys;\n  view_type: \"Table\" | \"Analytical\" | \"History\";\n  general_main_data: GetGeneralSummaryInterface | null;\n}\n\nclass _ClaimReport extends Component<ClaimReportProps, ClaimReportState> {\n  constructor(props: ClaimReportProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      error: \"\",\n      success: \"\",\n      data: null,\n      selected_level: this.props.auth.education_institution_id === \"\" ? 2 : 1,\n      selected_claim_type: PlansTypeKeys.APPLICATION,\n      view_type: \"Table\",\n      general_main_data: null,\n    };\n  }\n  setLoading = (status: boolean) => this.setState({ loading: status });\n  GetClaims = async (level: number, session_id: string) => {\n    this.setLoading(true);\n    try {\n      const res = await axios.post<GetClaimsReportInterface[]>(\n        `${API.CLAIMING}/user/level/${level}`,\n        {\n          period_id: session_id,\n        }\n      );\n      if (res.data) {\n        this.setState({\n          data: res.data,\n        });\n      }\n      console.log(\"Response: \", res.data);\n      this.setLoading(false);\n    } catch (error: any) {\n      console.log(\"Error: \", { ...error });\n      this.setLoading(false);\n    }\n  };\n\n  GetSummaryFilter = (data: PositionSummaryInterface[]) => {\n    let response: {\n      position_title: string;\n      total: number;\n      pending: number;\n      validated: number;\n    }[] = [];\n    for (const item of data) {\n      const test = response.find(\n        (itm) => itm.position_title === item.position_title\n      );\n      if (test !== undefined) {\n        response = response.filter(\n          (itm) => itm.position_title !== test.position_title\n        );\n        response.push({\n          position_title: test.position_title,\n          total: test.total + 1,\n          pending:\n            item.status === ClaimStatus.PENDING\n              ? test.pending + 1\n              : test.pending,\n          validated:\n            item.status === ClaimStatus.EVALUATED\n              ? test.validated + 1\n              : test.validated,\n        });\n      } else {\n        response.push({\n          position_title: item.position_title,\n          total: item.total,\n          pending: item.status === ClaimStatus.PENDING ? 1 : 0,\n          validated: item.status === ClaimStatus.EVALUATED ? 1 : 0,\n        });\n      }\n    }\n    return response;\n  };\n\n  GetSummary = (\n    data: GetClaimsReportInterface[]\n  ): {\n    position_title: string;\n    total: number;\n    pending: number;\n    validated: number;\n  }[] => {\n    let response: PositionSummaryInterface[] = [];\n    const res_data = data.filter(\n      (itm) => itm.type_key === this.state.selected_claim_type\n    );\n    for (const item of res_data) {\n      response.push({\n        position_title: item.title,\n        total: 1,\n        status: item.claims.filter(\n          (itm) => itm.level === this.state.selected_level\n        )[0].claim_status,\n      });\n    }\n    return this.GetSummaryFilter(response).sort((a, b) =>\n      a.pending < b.pending ? 1 : b.pending < a.pending ? -1 : 0\n    );\n  };\n\n  GetSummaryCounts = (\n    data: {\n      position_title: string;\n      total: number;\n      pending: number;\n      validated: number;\n    }[]\n  ): {\n    pending: number;\n    validated: number;\n    total: number;\n  } => {\n    let res: {\n      pending: number;\n      validated: number;\n      total: number;\n    } = {\n      pending: 0,\n      validated: 0,\n      total: 0,\n    };\n    let pending: number = 0;\n    let validated: number = 0;\n    let total: number = 0;\n    for (const item of data) {\n      pending = pending + item.pending;\n      validated = validated + item.validated;\n      total = total + item.total;\n    }\n    res = {\n      pending: pending,\n      validated: validated,\n      total: total,\n    };\n    return res;\n  };\n\n  componentDidMount = () => {\n    if (this.state.general_main_data === null) {\n      this.getMainSummary(this.state.selected_level);\n    }\n    if (this.props.schoolLevels.selectedEducationCategory === null) {\n      if (this.props.schoolLevels.education_categories !== null) {\n        const test = this.props.schoolLevels.education_categories.find(\n          (itm) =>\n            itm.education_institute_id ===\n            this.props.auth.education_institution_id\n        );\n        if (test !== undefined) {\n          this.props.setSelectedEducationCategory(test);\n          if (test.session_plan !== null) {\n            this.GetClaims(this.state.selected_level, test.session_plan._id);\n          }\n        }\n      }\n    } else {\n      if (\n        this.props.schoolLevels.selectedEducationCategory.session_plan !== null\n      ) {\n        this.GetClaims(\n          this.state.selected_level,\n          this.props.schoolLevels.selectedEducationCategory.session_plan._id\n        );\n      }\n    }\n  };\n\n  getMainSummary = async (claim_level: number) => {\n    const selected_institution =\n      this.props.auth.education_institution_id === \"\" &&\n      this.props.schoolLevels.selectedEducationCategory !== null\n        ? this.props.schoolLevels.selectedEducationCategory\n        : this.props.schoolLevels.education_categories?.find(\n            (itm) =>\n              itm.education_institute_id ===\n              this.props.auth.education_institution_id\n          );\n    console.log(\"Checked: \", selected_institution);\n    if (\n      selected_institution?.session_plan !== null &&\n      selected_institution?.session_plan !== undefined\n    ) {\n      this.setLoading(true);\n      try {\n        const res = await axios.post<GetGeneralSummaryInterface>(\n          `${API.CLAIMING}/user/count/${claim_level}`,\n          {\n            period_id: selected_institution.session_plan._id,\n          }\n        );\n        this.setState({ loading: false, general_main_data: res.data });\n        console.log(\"Res: \", res.data);\n      } catch (error: any) {\n        this.setState({ loading: false });\n        console.log(\"Err: \", { ...error });\n      }\n    }\n  };\n\n  render() {\n    const selected_institution =\n      this.props.schoolLevels.selectedEducationCategory !== null\n        ? this.props.schoolLevels.selectedEducationCategory\n        : this.props.schoolLevels.education_categories?.find(\n            (itm) =>\n              itm.education_institute_id ===\n              this.props.auth.education_institution_id\n          );\n    if (selected_institution === undefined) {\n      return this.props.auth.education_institution_id !== \"\" ? (\n        <div>\n          <div className=\"rounded-xl border-2 border-gray-600 flex flex-col items-center justify-center p-7 text-center w-full mt-5 bg-white\">\n            <span className=\"font-extrabold text-3xl text-gray-600\">\n              Your institute is not yet defined\n            </span>\n            <span>\n              If you have an institute assigned to you, please refresh your page\n              or wait a moment... your page...\n              {/* You are not allowed to view shortlisting report because you have\n              no access for this report. please contact your administrator */}\n            </span>\n          </div>\n        </div>\n      ) : (\n        this.props.schoolLevels.showInstitutes === false &&\n          this.props.schoolLevels.selectedEducationCategory === null && (\n            <div className=\"bg-white rounded mt-2 p-4\">\n              <div className=\"flex flex-col items-center justify-center w-full gap-2\">\n                <div className=\"text-3xl font-light mb-4\">\n                  Please choose institution\n                </div>\n                <div className=\"flex flex-row items-center justify-center gap-4 w-full\">\n                  {this.props.schoolLevels.education_categories === null ? (\n                    <Loading />\n                  ) : (\n                    this.props.schoolLevels.education_categories.map(\n                      (item, i) => (\n                        <div\n                          key={i + 1}\n                          title=\"Click to choose the institution\"\n                          className=\"bg-blue-100 hover:bg-blue-200 rounded-lg flex flex-col items-center justify-center p-3 py-5 w-full cursor-pointer group\"\n                          onClick={() => {\n                            this.props.setSelectedEducationCategory(item);\n                            item.session_plan !== null &&\n                              this.GetClaims(\n                                this.state.selected_level,\n                                item.session_plan._id\n                              );\n                            if (this.state.general_main_data === null) {\n                              this.getMainSummary(this.state.selected_level);\n                            }\n                          }}\n                        >\n                          <div className=\"uppercase text-4xl font-extrabold text-blue-600 group-hover:text-blue-700\">\n                            {item.education_category_title}\n                          </div>\n                          <div className=\"group-hover:text-blue-600\">\n                            {item.description}\n                          </div>\n                          <div className=\"mt-2\">\n                            <CgArrowRightO className=\"text-3xl text-blue-300 group-hover:text-blue-600\" />\n                          </div>\n                        </div>\n                      )\n                    )\n                  )}\n                </div>\n              </div>\n            </div>\n          )\n      );\n    }\n    if (\n      this.state.loading === true ||\n      this.props.schoolLevels.education_categories === null ||\n      this.state.data === null ||\n      this.state.general_main_data === null\n    ) {\n      return (\n        <div className=\"bg-white rounded p-5 mt-5\">\n          <Loading />\n          <div className=\"-mt-5 ml-5\">Loading report, please wait...</div>\n        </div>\n      );\n    }\n    if (this.state.error !== \"\") {\n      <div onClick={() => this.setState({ error: \"\" })}>\n        <div className=\"cursor-pointer rounded-xl border-2 border-yellow-600 flex flex-col items-center justify-center p-7 text-center w-full mt-5 bg-yellow-100\">\n          <span className=\"font-extrabold text-3xl text-yellow-800\">\n            Error occurred!\n          </span>\n          <span>{this.state.error}</span>\n        </div>\n      </div>;\n    }\n    return (\n      <div>\n        <div className=\"mt-4 bg-white rounded\">\n          <div className=\"p-4 flex flex-row items-center gap-3 justify-between\">\n            <div>\n              <div className=\"text-3xl font-extrabold\">\n                Claiming report (\n                <span className=\"text-blue-600 lowercase\">\n                  {capitalizeFirstLetter(\n                    this.state.selected_claim_type.toString()\n                  )}\n                </span>\n                )\n              </div>\n              <div className=\"flex flex-row items-center gap-2 ml-2\">\n                <div className=\"flex flex-col\">\n                  <span className=\"text-sm font-bold\">Choose claim type</span>\n                  <select\n                    onChange={(e) => {\n                      this.setState({ loading: true });\n                      const selected_type = e.target.value as PlansTypeKeys;\n                      this.setState({\n                        selected_claim_type: selected_type,\n                      });\n                      this.setState({ loading: false });\n                    }}\n                    value={this.state.selected_claim_type}\n                    className=\"px-3 py-2 rounded border border-gray-500\"\n                  >\n                    <option value={PlansTypeKeys.APPLICATION}>\n                      Applications\n                    </option>\n                    <option value={PlansTypeKeys.DOCUMENT_VALIDATION}>\n                      Document validation\n                    </option>\n                    <option value={PlansTypeKeys.EXAMINATION}>\n                      Examinations\n                    </option>\n                  </select>\n                </div>\n                <div className=\"flex flex-col\">\n                  <span className=\"text-sm font-bold\">Choose claim level</span>\n                  <select\n                    value={this.state.selected_level}\n                    onChange={(e) => {\n                      if (selected_institution.session_plan !== null) {\n                        const selected_level = parseInt(e.target.value);\n                        this.setState({\n                          selected_level: selected_level,\n                        });\n                        this.setLoading(true);\n                        this.GetClaims(\n                          selected_level,\n                          selected_institution.session_plan._id\n                        );\n                      }\n                    }}\n                    className=\"px-3 py-2 rounded border border-gray-500\"\n                  >\n                    <option value={1}>Level 1</option>\n                    <option value={2}>Public Service Commission Level</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\"flex flex-row items-center gap-3\">\n              <div className=\"flex flex-col rounded bg-blue-100 p-2 text-right animate__animated animate__zoomIn\">\n                <span className=\"text-3xl font-extrabold\">\n                  {displayNumbers(\n                    this.GetSummaryCounts(this.GetSummary(this.state.data))\n                      .total\n                  )}\n                </span>\n                <span className=\"font-normal text-sm text-blue-900\">\n                  Total claims\n                </span>\n              </div>\n              <div className=\"flex flex-col rounded bg-blue-100 p-2 text-right animate__animated animate__zoomIn\">\n                <span className=\"text-3xl font-extrabold\">\n                  {displayNumbers(\n                    this.GetSummaryCounts(this.GetSummary(this.state.data))\n                      .pending\n                  )}\n                </span>\n                <span className=\"font-normal text-sm text-blue-900\">\n                  Waiting claims\n                </span>\n              </div>\n              <div className=\"flex flex-col rounded bg-green-100 p-2 text-right animate__animated animate__zoomIn\">\n                <span className=\"text-3xl font-extrabold text-green-900\">\n                  {displayNumbers(\n                    this.GetSummaryCounts(this.GetSummary(this.state.data))\n                      .validated\n                  )}\n                </span>\n                <span className=\"font-normal text-sm text-green-900\">\n                  Validated claims\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"border-t border-gray-400 p-4\">\n            <div className=\"flex flex-row items-center rounded mb-3\">\n              <div\n                onClick={() => this.setState({ view_type: \"Table\" })}\n                className={`px-3 py-2 ${\n                  this.state.view_type === \"Table\"\n                    ? \"bg-white font-bold text-blue-800 border-b-4 border-blue-600 rounded-t-md animate__animated animate__fadeIn\"\n                    : \"bg-white font-light  border-b-4 border-gray-200 hover:bg-blue-100 hover:text-blue-800 hover:border-blue-600\"\n                } cursor-pointer`}\n              >\n                Table view\n              </div>\n              <div\n                onClick={() => this.setState({ view_type: \"Analytical\" })}\n                className={`px-3 py-2 ${\n                  this.state.view_type === \"Analytical\"\n                    ? \"bg-white font-bold text-blue-800 border-b-4 border-blue-600 rounded-t-md animate__animated animate__fadeIn\"\n                    : \"bg-white font-light  border-b-4 border-gray-200 hover:bg-blue-100 hover:text-blue-800 hover:border-blue-600\"\n                } cursor-pointer`}\n              >\n                Analytical view\n              </div>\n              <div\n                onClick={() => this.setState({ view_type: \"History\" })}\n                className={`px-3 py-2 ${\n                  this.state.view_type === \"History\"\n                    ? \"bg-white font-bold text-blue-800 border-b-4 border-blue-600 rounded-t-md animate__animated animate__fadeIn\"\n                    : \"bg-white font-light  border-b-4 border-gray-200 hover:bg-blue-100 hover:text-blue-800 hover:border-blue-600\"\n                } cursor-pointer`}\n              >\n                Evaluation History\n              </div>\n            </div>\n            {this.state.view_type === \"Table\" ? (\n              <table className=\"w-full animate__animated animate__fadeIn\">\n                <thead className=\"bg-blue-100 \">\n                  <tr className=\"\">\n                    <th className=\"px-3 py-1 text-center\">#</th>\n                    <th className=\"px-3 py-1 text-left\">Position</th>\n                    <th className=\"px-3 py-1 text-center\">Total claims</th>\n                    <th className=\"px-3 py-1 text-center\">Waiting claims</th>\n                    <th className=\"px-3 py-1 text-center\">Validated claims</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.GetSummary(this.state.data).length === 0 ? (\n                    <tr>\n                      <td\n                        colSpan={5}\n                        className=\"text-center p-3 text-3xl font-light bg-gray-100 border border-gray-500 rounded\"\n                      >\n                        No result found!\n                      </td>\n                    </tr>\n                  ) : (\n                    this.GetSummary(this.state.data).map((item, i) => (\n                      <tr\n                        key={i + 1}\n                        className={`${\n                          i % 2 !== 0 ? \"bg-gray-100\" : \"bg-white\"\n                        } ${\n                          item.total === item.validated\n                            ? \"text-green-900 font-light\"\n                            : item.validated === 0\n                            ? \"text-yellow-900 font-bold\"\n                            : \"text-black font-light\"\n                        }`}\n                      >\n                        <td className=\"px-3 py-1 text-center\">{i + 1}</td>\n                        <td className=\"px-3 py-1 text-left\">\n                          {item.position_title}\n                        </td>\n                        <td className=\"px-3 py-1 text-center\">\n                          {displayNumbers(item.total)}\n                        </td>\n                        <td className=\"px-3 py-1 text-center\">\n                          {displayNumbers(item.pending)}\n                        </td>\n                        <td className=\"px-3 py-1 text-center\">\n                          {displayNumbers(item.validated)}\n                        </td>\n                      </tr>\n                    ))\n                  )}\n                </tbody>\n              </table>\n            ) : this.state.view_type === \"Analytical\" ? (\n              <ClaimReportAnalytic\n                general_summary={this.GetSummaryCounts(\n                  this.GetSummary(this.state.data)\n                )}\n                summary_details={this.GetSummary(this.state.data)}\n                claim_level={this.state.selected_level}\n                institution={selected_institution}\n                general_main_data={this.state.general_main_data}\n                selected_claim_type={this.state.selected_claim_type}\n              />\n            ) : (\n              <ClaimEvaluationHistory claim_level={this.state.selected_level} />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n  positions,\n  schoolLevels,\n}: StoreState): {\n  auth: Auth;\n  system: System;\n  positions: positionsStoreInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n} => {\n  return {\n    auth: auth,\n    system: system,\n    positions: positions,\n    schoolLevels,\n  };\n};\n\nexport const ClaimReport = connect(mapStateToProps, {\n  setSelectedEducationCategory,\n  loadAllPositionsByInstitute,\n})(_ClaimReport);\n"],"sourceRoot":""}
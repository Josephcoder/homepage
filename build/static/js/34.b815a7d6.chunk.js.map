{"version":3,"sources":["containers/SessionSettings/NoSession.tsx","actions/settings.ts","components/Loading/TableLoading.tsx","shared/interfaces.tsx","interfaces/document_validation.tsx","containers/Claimings/Admin/AdminClaimExamView.tsx","containers/Claimings/Admin/ClaimFileView.tsx","containers/Claimings/Admin/AdminClaimAppView.tsx","containers/Claimings/Admin/AdminClaimDocView.tsx","containers/Claimings/Admin/index.tsx"],"names":["NoSession","title","description","content","undefined","className","React","memo","url","API","AUTH","getSystemSettings","callback","dispatch","a","setAxiosToken","axios","get","res","console","log","type","ActionTypes","GET_SYSTEM_SETTINGS","payload","data","code_error","errorToText","disableSystemSetting","DISABLE_SYSTEM_SETTINGS","GetTaskAccess","response","map","id","task","key","permitted","GET_TASK_ACCESS","getPositions","APPLICATION","GET_POSTIONS","deletePosition","DELETE_POSITION","publishPosition","PUBLISH_POSITION","FC_GetPositionsByInstitution","institution_id","TableLoading","props","displayCols","colsArray","index","cols","push","element","Math","random","RoomType","PostRequestStatusInterface","DocumentAttributesInterface","DocValidationStatusInterface","SESSION_PLAN_KEYS","DOCUMENT_VALIDATION","EXAMINATION","MARKS_PUBLICATION","PLACEMENT_TRANSFER","GetDocTitle","documentCategories","doc","DocCategory","DocSubCategory","DocField","DocTitle","sub_category_id","length","documentSubCategory","find","c","user_detail_subcategory_id","category_id","documentCategory","user_detail_category_id","category_subcategory_data","documentFields","thisDocField","_id","category","sub_category","field","main","DocumentInArray","docCategories","DocumentsData","dataType","documentsTemp","details","d","candidate_detail","files","validation_status","user_id","n_id","fname","user_info","lname","phone_number","district","email","main_doc_title","start_year","end_year","school","details_email","names","details_phone_number","company","year","doc_id","validated_by","doc_history_status","get_in_date","approved","exams","isDocumentValidationOpen","plans","checkSession","item","type_key","today","moment","startData","start_date","endData","end_date","diff","type_status","SESSION_PLAN_STATUS","OPEN","getDocByDocId","userList","user","countDocumentByStatus","userDocs","docStatus","filter","countFileByCandidateId","filterType","filterValue","filterStatus","result","viewTabs","FooterInitial","comment","onClick","close","ClaimFileView","setSetFullscreen","value","setState","isFullscreen","handleFullScreen","state","fullScreen","failedToLoadFile","loadingImage","actionTaken","this","isFileImage","getFileType","src","AUTH_FILES","alt","onLoad","onError","onDoubleClick","ViewPDF","file_url","class_name","frame_title","setLoadingFile","e","setLoadingError","zoomInOut","setDocId","Component","connect","auth","evaluateClaim","reAssessApplication","PushPopupAlert","position_id","useState","loadingRequest","setLoadingRequest","setActionTaken","formError","setFormError","responseMsg","setResponseMsg","viewThisDocument","setViewThisDocument","handleVerify","msg","isEmptyOrSpaces","subClaim","thisClaim","claims","level","claim_level","api_body","sub_claim_id","evaluation_comment","evaluated_by","decision_taken_status","evaluator_name","evaluator_email","put","CLAIMING","evaluate_claim_res","ClaimDecisionStatus","ACCEPTED","overrideDecision","theme","PopupAlertTheme","success","error","danger","getReasonById","reason_id","claimReasons","patch","claiming_on_id","application_status","ApplicationStates","Shortlisted","application_id","DATA_ThisPosition","thisApplication","position","systemPositions","DATA_Documents","commet","date","FC_DocumentInArray","Data_ThisDocument","Modal","backDrop","Themes","default","backDropClose","widthSizeClass","ModalSize","maxWidth","displayClose","padding","body","footer","FC_GetBase64Img","photo","sex","position_title","PositionDetails","positionDetails","cancel","apply","showRegister","hideTools","NoResult","NoResultThemes","Dark","colSpan","capitalizeFirstLetter","previous","status","Rejected","DATE","createdAt","dangerouslySetInnerHTML","__html","reason","override_by","claim","default_claim_resaons","showDate","isClaimEvaluated","REJECTED","toLocaleLowerCase","last_claim_status","ClaimStatus","PENDING","DELETED","placeholder","rows","style","resize","onChange","target","disabled","window","confirm","verifyDocument","FC_DocValidation","APPROVED","in_education","disability","expiration_date","api_redux","post","USER","FC_shortListing","candidate_id","setViewImage","viewImage","adminDisplayClaimTitle","thisDoc","questionTypes","loadQuestionTypes","loading","setLoading","marks","setMarks","profile","selectedTab","setSelectedTab","useEffect","Loading","handleMarksAddition","DO_EXAM","answer_sheet_id","Object","values","i","exam","AnswersDetails","showAnswers","exam_id","claimShowAnswer","thisExamSheet","thisExam","course_name","allAnswers","exam_location","questions","user_answers","period","course","exam_paper","user_status","used_duration","total_marks","number_of_question_answered","exam_total_marks","exam_start_time","exam_end_time","exam_date","updatedAt","gender","Number","candidateDocuments","PlansTypeKeys","AdminClaimGetDocTitle","getApplicationById","allApplications","thisPosition","application","Index","setLoadingData","loadingData","setPeriodChanged","periodChanged","setThisPeriod","thisPeriod","setViewClaim","viewClaim","setClaimId","claimId","setClaimType","claimType","setCandidateId","candidateId","setDefaultSession","sessions","thisSession","is_active","loadsAllClaims","setSearchClaim","searchClaim","claiming","allClaims","getAllClaims","loadsApplications","getAllApplications","loadsController","file_id","loadsAlAnswers","answersheet_id","allAnswer","getAllAnswers","componentDidMount","application_sessions","GetAllSessionPlans","documentReducer","getDocumentCategory","getDocumentSubCategory","getDocumentFields","getClaimReasons","courses","loadCourses","displayClaimTitle","thisDocs","thisAnswer","getCourseIdBySheetId","getCourseById","onPeriodChange","period_id","getLastClaimDate","claimsLength","DATA_TITLES","DAT_ClaimByStatus","itm","FindClaimsNumber","filterByStatus","selected_title","show_titles_filter","search_title","claimTypes","DATA_ClaimByType","filterClaimsByClaimType","selectedClaimType","DATA_BY_TITLE","SideNavigation","AdminFilterByType","loadingClaims","ClaimHeaderTitle","headerTitle","loadingSession","setLoadingSession","searchData","Light","institute_id","n_eduction","sector","province","whichClaimType","whichClaimStatus","classes","getClaimById","ClaimTypesInterface","DOCUMENT","extraLarge","toString","AdminClaim","system_settings","sessionPlan","document","allSessionPlans"],"mappings":"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","file":"static/js/34.b815a7d6.chunk.js","sourcesContent":["import React from \"react\";\nimport { IoWarning } from \"react-icons/io5\";\n// import { MdInfoOutline } from \"react-icons/md\";\nimport { NavLink } from \"react-router-dom\";\n\ntype NoSessionProps = {\n  title?: string;\n  description?: string;\n  content?: any;\n};\n\nconst NoSession: React.FC<NoSessionProps> = ({\n  title = \"No session available\",\n  description = \"Please Wait for the system to publish the sessions or contact the administrator\",\n  content = undefined,\n}) => {\n  return (\n    <div className=\"w-full my-5\">\n      <section className=\"py-10 flex flex-col items-center rounded border border-gray-300 bg-white text-2xl font-medium text-yellow-800 animate__animated animate__pulse\">\n        <div className=\"flex flex-col items-center\">\n          <IoWarning className=\"w-32 h-32\" />\n          {description}\n        </div>\n        {content && content}\n        {false && (\n          <div className=\"text-center group text-sm -mb-3 mt-5\">\n            <NavLink\n              to=\"/apps-page\"\n              className=\"border border-rounded-md bg-gray-100 text-gray-900 rounded border-gray-100 group-hover:bg-gray-50 group-hover:border-gray-400 px-2 py-1\"\n            >\n              Back to App\n            </NavLink>\n          </div>\n        )}\n      </section>\n    </div>\n  );\n};\n\nexport default React.memo(NoSession);\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AccessTaskInterface,\n  PermissionInterface,\n  SystemSettingsInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PositionAPI } from \"../interfaces/position\";\n\nconst url = `${API.AUTH}/auth/user/access`;\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// SYSTEM SETTINGS  ==============\nexport interface GetSystemSettingsAction {\n  type: ActionTypes.GET_SYSTEM_SETTINGS;\n  payload: SystemSettingsInterface[];\n}\n\nexport interface DisableSystemSettingsAction {\n  type: ActionTypes.DISABLE_SYSTEM_SETTINGS;\n  payload: {\n    system_setting_id: string;\n    status: \"enabled\" | \"disabled\";\n  };\n}\n\n// ROLE TASKS ACCESS SETTINGS ===================================\nexport interface GetTaskAccessAction {\n  type: ActionTypes.GET_TASK_ACCESS;\n  payload: AccessTaskInterface[];\n}\n\n// POSITIONS SETTINGS ===================================\nexport interface PositionCreateInterface {\n  position_id?: string;\n  position_title: string;\n  position_code: string;\n  description: string;\n  school_level_id: string;\n  subcategory_id: string;\n  education_institute_id: string;\n  courses: string[];\n  requirements: {\n    user_detail_category_id: string;\n    user_detail_subcategory_id: string;\n    position_requirement: {\n      category_subcategory_data_id: string;\n      required: boolean;\n    }[];\n    required: boolean;\n  }[];\n}\nexport interface GetPositionsAction {\n  type: ActionTypes.GET_POSTIONS;\n  payload: PositionAPI[];\n}\n\nexport interface CreatePositionsAction {\n  type: ActionTypes.CREATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface UpdatePositionsAction {\n  type: ActionTypes.UPDATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface DeletePositionSettingAction {\n  type: ActionTypes.DELETE_POSITION;\n  payload: string;\n}\n\nexport interface PublishPositionAction {\n  type: ActionTypes.PUBLISH_POSITION;\n  payload: {\n    position_id: string;\n    status: boolean;\n  };\n}\n\nexport type SystemActionType =\n  | GetSystemSettingsAction\n  | DisableSystemSettingsAction\n  | GetTaskAccessAction\n  | GetPositionsAction\n  | CreatePositionsAction\n  | UpdatePositionsAction\n  | DeletePositionSettingAction\n  | PublishPositionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSystemSettings = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<SystemSettingsInterface[]>(\n        `${API.AUTH}/system/setting`\n      );\n      console.log(\"=================getSystemSettings===================\");\n      console.log(res);\n      console.log(\"=================getSystemSettings===================\");\n      dispatch<GetSystemSettingsAction>({\n        type: ActionTypes.GET_SYSTEM_SETTINGS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const disableSystemSetting = (data: {\n  system_setting_id: string;\n  status: \"enabled\" | \"disabled\";\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableSystemSettingsAction>({\n      type: ActionTypes.DISABLE_SYSTEM_SETTINGS,\n      payload: data,\n    });\n  };\n};\n\n// ============================ tasks access =======================\n\nexport const GetTaskAccess = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<\n        {\n          id: string;\n          title: string;\n          key: string;\n          permitted: PermissionInterface;\n        }[]\n      >(`${url}/roleaccess`);\n      let response: AccessTaskInterface[] = res.data.map((data) => ({\n        id: data.id,\n        task: data.title,\n        key: data.key,\n        permitted: data.permitted,\n      }));\n      dispatch<GetTaskAccessAction>({\n        type: ActionTypes.GET_TASK_ACCESS,\n        payload: response,\n      });\n      callback(false, \"\", response);\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// ============================ positions =======================\n\nexport const getPositions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(`${API.APPLICATION}/position`);\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createPosition = (data: PositionCreateInterface) => {\n  console.log({ createPosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreatePositionsAction>({\n      type: ActionTypes.CREATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const updatePosition = (data: PositionCreateInterface) => {\n  console.log({ updatePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdatePositionsAction>({\n      type: ActionTypes.UPDATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const deletePosition = (data: string) => {\n  console.log({ deletePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<DeletePositionSettingAction>({\n      type: ActionTypes.DELETE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const publishPosition = (data: {\n  position_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<PublishPositionAction>({\n      type: ActionTypes.PUBLISH_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_GetPositionsByInstitution = (\n  institution_id: string,\n  callback: (status: boolean, msg: string, data?: PositionAPI[]) => void\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(\n        `${API.APPLICATION}/position/instituteposition/${institution_id}`\n      );\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n","import React from \"react\";\n\ntype TableLoadingProps = {\n  cols: number;\n};\nconst TableLoading: React.FC<TableLoadingProps> = (props) => {\n  const displayCols = (): JSX.Element[] => {\n    let colsArray: number[] = [];\n    for (let index = 0; index < props.cols; index++) {\n      colsArray.push(index);\n    }\n    let result = colsArray.map((element) => {\n      return (\n        <td className=\"p-3 text-center whitespace-nowrap\" key={element}>\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      );\n    });\n\n    return result;\n  };\n  return (\n    <>\n      <tr className=\"border-b border-gray-200\" key={Math.random()}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={Math.random()}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={Math.random()}>\n        {displayCols()}\n      </tr>\n    </>\n  );\n};\n\nexport default TableLoading;\n","import { SessionPlanInterface } from \"../interfaces\";\nimport {\n  ApplicationStates,\n  SESSION_PLAN_KEYS,\n} from \"../interfaces/application\";\n\nexport interface SystemSettingsInterface {\n  system_setting_id: string;\n  name: string;\n  key: string;\n  status: \"enabled\" | \"disabled\";\n}\n\nexport interface ApplicationSessionInterface {\n  is_active: boolean;\n  application_session_name: string;\n  period: string;\n  application_start_date: string;\n  application_end_date: string;\n  createdAt: string;\n  updatedAt: string;\n  application_session_id: string;\n}\n\nexport interface UserInfoInterface {\n  document_type?: string;\n  issue_number?: string;\n  date_of_issue?: string;\n  date_of_expiry?: string;\n  place_of_issue?: string;\n  application_number?: string;\n  fname: string;\n  lname: string;\n  sex: \"M\" | \"F\";\n  father_names: string;\n  mother_names: string;\n  date_of_birth: string;\n  place_of_birth?: string;\n  country_of_birth: string;\n  village_id: string;\n  village: string;\n  cell: string;\n  sector: string;\n  district: string;\n  province: string;\n  photo?: string;\n  civil_status?: string;\n  spouse?: any;\n  status?: string;\n}\n\nexport interface MySchoolInterface {\n  _id: string;\n  school_name: string;\n  school_code: string;\n  province_id: string;\n  province_code: string;\n  district_id: {\n    _id: string;\n    district_name: string;\n  };\n  district_code: string;\n  sector_code: string;\n  sector_id: string;\n  school_status: string;\n  status: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface UserInterface {\n  user_id: string;\n  _id?: string;\n  n_id?: string;\n  phone_number: string;\n  email: string;\n  password?: string;\n  user_info: UserInfoInterface;\n  details: UserDocumentsInterface[];\n  user_photo?: string;\n  default_access: RoleToUserInterface | null;\n  custome_access: CustomeAccessInterface | null;\n  is_active: boolean;\n  disability: boolean;\n  in_education: boolean;\n  residence?: {\n    province_id: string;\n    province_name: string;\n    district_id: string;\n    district_name: string;\n    sector_id: string;\n    sector_name: string;\n  };\n  education_institution_id?: string;\n  education_institution_name?: string;\n}\n\nexport interface CandidateDetailsInterface_old {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: string;\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  } | null;\n  doc_history_status: string;\n  get_in_date: string;\n  approved?: string;\n}\n\nexport interface CandidateDetailsInterface {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: string;\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  } | null;\n  doc_history_status: string;\n  get_in_date: string;\n  approved?: string;\n}\n\nexport interface DocInterface {\n  category_subcategory_data: string;\n  school: string;\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  approved: string;\n  doc_id: string;\n  validated_by: null;\n  validation_status: string;\n  doc_history_status: string;\n  get_in_date: string;\n  date_modefied: string;\n}\n\nexport interface CandidateRoleToUserInterface {\n  key: string;\n  status: number;\n  access: boolean;\n  assigned_date: string;\n}\n\nexport interface CandidatesInterface_old {\n  user_id: string;\n  n_id: string;\n  fname: string;\n  lname: string;\n  phone_number: string;\n  district: string;\n  email: string;\n  details: CandidateDetailsInterface[];\n}\n\nexport interface ApplicationExamsInterface {\n  course_id: string;\n  proctoring_type: string;\n  center_id: string;\n  room_id: string;\n}\n\nexport interface CandidatesInterface {\n  _id: string;\n  n_id: string;\n  email: string;\n  phone_number: string;\n  in_education: boolean;\n  disability: boolean;\n  residence: {\n    province_id: string;\n    province_name: string;\n    district_id: string;\n    district_name: string;\n    sector_id: string;\n    sector_name: string;\n  };\n  details: CandidateDetailsInterface[];\n  exams: ApplicationExamsInterface[];\n  user_info: {\n    document_type: string;\n    issue_number: string;\n    date_of_issue: string;\n    date_of_expiry: string;\n    place_of_issue: string;\n    application_number: string;\n    fname: string;\n    lname: string;\n    father_names: string;\n    mother_names: string;\n    sex: string;\n    date_of_birth: string;\n    place_of_birth: string;\n    country_of_birth: string;\n    village_id: string;\n    village: string;\n    cell: string;\n    sector: string;\n    district: string;\n    province: string;\n    civil_status: string;\n    spouse: null;\n    status: string;\n    photo: string;\n  };\n}\n\nexport interface CustomeAccessInterface {\n  access: AccessTaskInterface[];\n  user_id: string;\n  custome_user_access_id: string;\n}\n\nexport interface UserDocumentsInterface {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: { title: string; school_id: string | null };\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  approved: \"waiting\" | \"approved\" | \"rejected\";\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    commet: string;\n    comment?: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  };\n}\n\nexport interface SystemUserRoleInterface {\n  system_user_role_id: string;\n  role: string;\n  status: boolean;\n  access: AccessTaskInterface[];\n  district_required?: boolean;\n  school_required?: boolean;\n  room_required?: boolean;\n  education_institution_required?: boolean;\n  school_id: string;\n  district_id: string;\n}\n\nexport interface CustomeUserAccessInterface {\n  user_id: string;\n  access?: [\n    {\n      id: string;\n      task: string;\n      key: string;\n      permitted: {\n        create: boolean;\n        delete: boolean;\n        update: boolean;\n        view: boolean;\n      };\n    }\n  ];\n}\n\nexport interface PermissionInterface {\n  create: boolean;\n  view: boolean;\n  update: boolean;\n  delete: boolean;\n}\n\nexport interface AccessTaskInterface {\n  id: string;\n  task: string;\n  key: string;\n  permitted: PermissionInterface;\n}\n\nexport interface RoleToUserInterface {\n  system_user_role_id: string;\n  role: string;\n  access: AccessTaskInterface[];\n  status?: number;\n  active?: boolean;\n  school_id: string;\n  district_id: string;\n  room_id: string;\n  education_institution_id: string;\n  assigned_date?: string;\n}\n\nexport enum RoomType {\n  Physical = \"Physical\",\n  Virtual = \"Virtual\",\n  Default = \"Default\",\n}\n\nexport interface RoomsInterface {\n  occupied: number;\n  isUsed: boolean;\n  room_type: RoomType;\n  room_number: number;\n  capacity: number;\n  _id: string;\n}\n\nexport interface CentersInterface {\n  rooms: RoomsInterface[];\n  isUsed: boolean;\n  _id: string;\n  center_name: string;\n  center_code: number;\n  district_id: string;\n  education_institute_id: string;\n}\n\nexport interface SectorInterface {\n  district_code: number;\n  district_id: string;\n  sector_name: string;\n  sector_code: number;\n  sector_id: string;\n}\n\nexport interface AllDistrictInterface {\n  sectors: string[];\n  centers: string[];\n  district_name: string;\n  district_code: string;\n  province_code: string;\n  province_id: string;\n  status: number;\n  createdAt: string;\n  updatedAt: string;\n  district_id: string;\n}\nexport interface DistrictInterface {\n  centers: CentersInterface[];\n  sectors: SectorInterface[];\n  province_code: number;\n  province_id: string;\n  district_name: string;\n  district_code: number;\n  _id: string;\n}\n\nexport interface RoomLocationInterface {\n  districts: DistrictInterface[];\n  province_name: string;\n  province_code: number;\n  _id: string;\n}\n\nexport interface AssignRoleToUserActionInterface {\n  user_id: string;\n  data: RoleToUserInterface;\n}\n\nexport interface AssignRoleToUserActionInterface {\n  user_id: string;\n  data: RoleToUserInterface;\n}\n\nexport enum PostRequestStatusInterface {\n  INITIATED = \"initiated\",\n  CONFIRMED = \"confirmed\",\n  RECEIVED = \"received\",\n}\n\nexport interface PostSchoolInterface_old {\n  post_at_school_id: string;\n  school_id: string;\n  position_id: string;\n  district_id: string;\n  needed_posts: number;\n  confirmed_posts?: number;\n  occupied_posts?: number;\n  requested_by: string;\n  confirmed_by?: string;\n  received_posts?: number;\n  request_date: Date;\n  approval_date?: Date;\n  post_at_school_status: PostRequestStatusInterface;\n}\n\nexport interface PostSchoolInterface {\n  _id: string;\n  school_id: string;\n  position_id: string;\n  district_id: string;\n  needed_posts: number;\n  male_number: number;\n  female_number: number;\n  description: string;\n  confirmed_posts?: number;\n  occupied_posts?: number;\n  requested_by: string;\n  confirmed_by?: string;\n  received_posts?: number;\n  request_date: Date;\n  approval_date?: Date;\n  requested_post_status: PostRequestStatusInterface;\n  school: {\n    _id: string;\n    school_name: string;\n    school_code: string;\n    province_id: string;\n    province_code: string;\n    district_id: {\n      _id: string;\n      district_name: string;\n    };\n    district_code: string;\n    sector_code: string;\n    sector_id: string;\n    school_status: string;\n    status: number;\n    createdAt: string;\n    updatedAt: string;\n  };\n  post_request_session_id: string;\n}\n\nexport interface SchoolInfoInterface {\n  school_id: string;\n  school_title: string;\n  district_id: string;\n  number_of_females?: number;\n  number_of_males?: number;\n}\n\nexport interface SchoolsInterface {\n  _id: string;\n  status: boolean;\n  school_name: string;\n  school_code: number;\n  province_id: string;\n  province_code: number;\n  district_id: string;\n  district_code: number;\n  sector_id: string;\n  sector_code: number;\n  education_category_id: string;\n}\n\nexport interface MySchoolInterface {\n  _id: string;\n  school_name: string;\n  school_code: string;\n  province_id: string;\n  province_code: string;\n  district_id: {\n    _id: string;\n    district_name: string;\n  };\n  district_code: string;\n  sector_code: string;\n  sector_id: string;\n  school_status: string;\n  status: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface SchoolLevelInterface {\n  school_level_id: string;\n  school_level_name: string;\n  description: string;\n  education_institute: string[];\n  courses: [];\n}\n\nexport interface CourseInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n}\n\nexport interface EducationInstituteInterface {\n  education_category_title: string;\n  school_levels: [];\n  description: string;\n  education_institute_id: string;\n}\n\nexport interface PositionRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface PositionInterface {\n  courses: CourseInterface[];\n  position_title: string;\n  description: string;\n  school_level_id: SchoolLevelInterface;\n  education_institute_id: EducationInstituteInterface;\n  requirements: PositionRequirementInterface[];\n  position_id: string;\n}\n\nexport enum DocumentAttributesInterface {\n  \"Title\" = \"title\",\n  \"Description\" = \"description\",\n  \"Files\" = \"files\",\n  \"email\" = \"email\",\n  \"names\" = \"names\",\n  \"phone_number\" = \"phone_number\",\n  \"position\" = \"position\",\n  \"relation\" = \"relation\",\n  \"src\" = \"src\",\n  \"year\" = \"year\",\n  \"company\" = \"company\",\n  \"category_subcategory_data\" = \"category_subcategory_data\",\n  \"others\" = \"others\",\n  \"start_year\" = \"start_year\",\n  \"end_year\" = \"end_year\",\n  \"School\" = \"School\",\n  \"expiration_date\" = \"expiration_date\",\n}\n\nexport enum DocValidationStatusInterface {\n  APPROVED = \"approved\",\n  REJECTED = \"rejected\",\n}\n\nexport interface DocumentCategoryInterface {\n  user_detail_category_id: string;\n  title: string;\n  description: string;\n  fields: DocumentAttributesInterface[];\n}\n\nexport interface DocumentSubCategoryInterface {\n  category_id: string;\n  title: string;\n  description: string;\n  user_detail_subcategory_id: string;\n}\n\nexport interface DocumentFieldsInterface {\n  _id: string;\n  category_id: string;\n  subcategory_id: string | null;\n  title: string;\n  description: string;\n  others: [];\n}\n\nexport interface ApplicationAssessmentInterface {\n  application_id: string;\n  user_id: string;\n  application_session: SessionPlanInterface;\n  application_status: string;\n  n_id: string;\n  email: string;\n  user_info: {\n    fname: string;\n    lname: string;\n    sex: string;\n  };\n  phone_number: string;\n  position: PositionApplicationInterface;\n  details: CandidateDetailsInterface[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface AdminApplicationsToPrintInterface {\n  application_id: number;\n  names: string;\n  gender?: string;\n  national_id?: string;\n  phone?: string;\n  email?: string;\n  position: string;\n  education_category?: string;\n  application_session?: string;\n  district?: string;\n  date?: string;\n  decision?: ApplicationStates;\n}\n\nexport interface PositionApplicationInterface {\n  courses: string[];\n  position_title: string;\n  description: string;\n  school_level_id: string;\n  education_institute_id: string;\n  requirements: PositionRequirementInterface[];\n  position_id: string;\n}\n\nexport interface PositionRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface ApplicationRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface PeriodInterface {\n  is_active: string;\n  application_session_name: string;\n  period: string;\n  application_start_date: string;\n  application_end_date: string;\n  createdAt: string;\n  updatedAt: string;\n  application_session_id: string;\n}\n\nexport interface LocationRoomTableInterface {\n  province_id: string;\n  province_name: string;\n  district_id: string;\n  district_name: string;\n  center_id: string;\n  center_name: string;\n  room_id: string;\n  room_name: string;\n  capacity: number;\n  occupied: number;\n}\n\nexport interface LocationSectorTableInterface {\n  province_id: string;\n  province_name: string;\n  province_code: number;\n  district_id: string;\n  district_name: string;\n  district_code: number;\n  sector_id: string;\n  sector_name: string;\n  sector_code: number;\n}\n\nexport interface PositionRequirementsFieldInterface {\n  category_id: string;\n  category_name: string;\n  sub_category_id: string;\n  sub_category_name: string;\n  field_id: string;\n  field_name: string;\n  sub_category_required: boolean;\n  required: boolean;\n  isAnyField: boolean;\n}\n\nexport interface PositionRequirementsQualificationInterface {\n  category_id: string;\n  category_name: string;\n  sub_category_id: string;\n  sub_category_name: string;\n  fields: DocumentFieldsInterface[];\n  required: boolean;\n}\n\nexport interface ApplicationPeriodInterface {\n  _id: string;\n  application_status: ApplicationStates;\n  userInfo: {\n    n_id: string;\n    phone_number: string;\n    email: string;\n    user_info: {\n      document_type: string;\n      issue_number: string;\n      date_of_issue: string;\n      date_of_expiry: string;\n      place_of_issue: string;\n      application_number: string;\n      fname: string;\n      lname: string;\n      father_names: string;\n      mother_names: string;\n      sex: string;\n      date_of_birth: string;\n      place_of_birth: string;\n      country_of_birth: string;\n      village_id: string;\n      village: string;\n      cell: string;\n      sector: string;\n      district: string;\n      province: string;\n      civil_status: string;\n      spouse: null;\n      status: string;\n      photo: string;\n    };\n  };\n  user_id: string;\n  position: string;\n  application_session: string;\n  exams: ApplicationExamsInterface[];\n}\n\nexport const getDocCategoryById = (\n  subDocs: DocumentCategoryInterface[],\n  docId: string\n): DocumentCategoryInterface => {\n  return subDocs.filter((doc) => doc.user_detail_category_id === docId)[0];\n};\n\nexport const getSubDocCategoryById = (\n  subDocs: DocumentSubCategoryInterface[],\n  docId: string\n): DocumentSubCategoryInterface => {\n  return subDocs.filter((doc) => doc.user_detail_subcategory_id === docId)[0];\n};\n\nexport const SESSION_PLAN_TYPES: {\n  type_id: number;\n  type_title: string;\n  type_key: SESSION_PLAN_KEYS;\n}[] = [\n  {\n    type_id: 1,\n    type_title: \"Application\",\n    type_key: SESSION_PLAN_KEYS.APPLICATION,\n  },\n  {\n    type_id: 2,\n    type_title: \"Document Validation\",\n    type_key: SESSION_PLAN_KEYS.DOCUMENT_VALIDATION,\n  },\n  {\n    type_id: 3,\n    type_title: \"Examination\",\n    type_key: SESSION_PLAN_KEYS.EXAMINATION,\n  },\n  {\n    type_id: 4,\n    type_title: \"Marks Publication\",\n    type_key: SESSION_PLAN_KEYS.MARKS_PUBLICATION,\n  },\n  {\n    type_id: 5,\n    type_title: \"Placement and Transfer\",\n    type_key: SESSION_PLAN_KEYS.PLACEMENT_TRANSFER,\n  },\n];\n","import moment from \"moment\";\nimport { ApplicationSession } from \"../actions/auth\";\nimport { DocumentReducerInterface } from \"../reducers/document\";\nimport { isEmptyOrSpaces } from \"../shared/dataTest\";\nimport {\n  ApplicationExamsInterface,\n  CandidatesInterface,\n  CandidateDetailsInterface,\n  LocationRoomTableInterface,\n  UserDocumentsInterface,\n} from \"../shared/interfaces\";\nimport { SESSION_PLAN_KEYS, SESSION_PLAN_STATUS } from \"./application\";\n\nexport const GetDocTitle = (\n  documentCategories: DocumentReducerInterface,\n  doc: CandidateDetailsInterface | UserDocumentsInterface\n): { category: string; sub_category: string; field: string; main: string } => {\n  let DocCategory: string = \"\",\n    DocSubCategory: string = \"\",\n    DocField: string = \"\",\n    DocTitle: string = \"\";\n  if (\n    doc.sub_category_id &&\n    doc.sub_category_id.length > 0 &&\n    documentCategories.documentSubCategory\n  ) {\n    DocTitle = documentCategories.documentSubCategory.find(\n      (c) => c.user_detail_subcategory_id === doc.sub_category_id\n    )\n      ? documentCategories.documentSubCategory.find(\n          (c) => c.user_detail_subcategory_id === doc.sub_category_id\n        )!.title\n      : \"Unknown qualification\";\n    DocSubCategory = DocTitle;\n  } else if (\n    doc.category_id.length > 0 &&\n    documentCategories.documentCategory\n  ) {\n    DocTitle = documentCategories.documentCategory.find(\n      (c) => c.user_detail_category_id === doc.category_id\n    )\n      ? documentCategories.documentCategory.find(\n          (c) => c.user_detail_category_id === doc.category_id\n        )!.title\n      : \"Unknown category\";\n    DocCategory = DocTitle;\n  }\n  if (\n    doc.category_subcategory_data.length > 0 &&\n    documentCategories.documentFields\n  ) {\n    let thisDocField = documentCategories.documentFields.find(\n      (c) => c._id === doc.category_subcategory_data\n    );\n    DocField = thisDocField ? thisDocField.title : \"Unknown filed\";\n    DocTitle += \" in \" + DocField;\n  }\n\n  return {\n    category: DocCategory,\n    sub_category: DocSubCategory,\n    field: DocField,\n    main: DocTitle,\n  };\n};\nexport interface TableCandidatesInterface {\n  // DATA FROM MAIN PROPERTY\n  user_id: string;\n  n_id: string;\n  fname: string;\n  lname: string;\n  phone_number: string;\n  district: string;\n  email: string;\n\n  // NEW DATA GENERATED BAISED ON DETAILS PROPERTY\n  main_doc_title: string;\n  // DATA FROM DETAILS PROPERTY\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: string;\n  details_email: string;\n  names: string;\n  details_phone_number: string;\n  company: string;\n  year: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  } | null;\n  doc_history_status: string;\n  get_in_date: string;\n  approved?: string;\n  // DATA FROM EXAMS PROPERTY\n  exams: ApplicationExamsInterface[];\n}\n\n// Tobe replaced with Emmy's function\nexport const DocumentInArray = (\n  docCategories: DocumentReducerInterface,\n  DocumentsData: CandidatesInterface[],\n  dataType: \"all\" | \"default\" = \"default\"\n): TableCandidatesInterface[] | [] => {\n  let documentsTemp: TableCandidatesInterface[] = [];\n  for (let c in DocumentsData) {\n    let details = DocumentsData[c].details;\n    for (let d in details) {\n      let candidate_detail: CandidateDetailsInterface =\n        DocumentsData[c].details[d];\n      if (\n        candidate_detail.files !== null &&\n        candidate_detail.files.length > 0 &&\n        dataType === \"default\" &&\n        candidate_detail.validation_status === \"waiting\"\n      ) {\n        documentsTemp.push({\n          // DATA FROM MAIN PROPERTY\n          user_id: DocumentsData[c]._id,\n          n_id: DocumentsData[c].n_id,\n          fname: DocumentsData[c].user_info.fname,\n          lname: DocumentsData[c].user_info.lname,\n          phone_number: DocumentsData[c].phone_number,\n          district: DocumentsData[c].user_info.district,\n          email: DocumentsData[c].email,\n          // NEW DATA GENERATED BAISED ON DETAILS PROPERTY\n          // main_doc_title: GetDocTitle(\n          //   documentCategories,\n          //   candidate_detail\n          // ).main,\n          main_doc_title: GetDocTitle(docCategories, candidate_detail).main,\n          // DATA FROM DETAILS PROPERTY\n          category_id: candidate_detail.category_id,\n          sub_category_id: candidate_detail.sub_category_id,\n          category_subcategory_data: candidate_detail.category_subcategory_data,\n          title: candidate_detail.title,\n          description: candidate_detail.description,\n          files: candidate_detail.files,\n          start_year: candidate_detail.start_year,\n          end_year: candidate_detail.end_year,\n          school: candidate_detail.school,\n          details_email: candidate_detail.email,\n          names: candidate_detail.names,\n          details_phone_number: candidate_detail.phone_number,\n          company: candidate_detail.company,\n          year: candidate_detail.year,\n          doc_id: candidate_detail.doc_id,\n          validation_status: candidate_detail.validation_status,\n          validated_by: candidate_detail.validated_by,\n          doc_history_status: candidate_detail.doc_history_status,\n          get_in_date: candidate_detail.get_in_date,\n          approved: candidate_detail.approved,\n          // DATA FROM EXAMS PROPERTY\n          exams: DocumentsData[c].exams,\n        });\n      } else if (\n        candidate_detail.files !== null &&\n        candidate_detail.files.length > 0 &&\n        dataType === \"all\"\n      ) {\n        documentsTemp.push({\n          // DATA FROM MAIN PROPERTY\n          user_id: DocumentsData[c]._id,\n          names:\n            DocumentsData[c].user_info.fname +\n            \" \" +\n            DocumentsData[c].user_info.lname,\n          n_id: DocumentsData[c].n_id,\n          fname: DocumentsData[c].user_info.fname,\n          lname: DocumentsData[c].user_info.lname,\n          phone_number: DocumentsData[c].phone_number,\n          district: DocumentsData[c].user_info.district,\n          email: DocumentsData[c].email,\n          main_doc_title: GetDocTitle(docCategories, candidate_detail).main,\n          // DATA FROM DETAILS PROPERTY\n          category_id: candidate_detail.category_id,\n          sub_category_id: candidate_detail.sub_category_id,\n          category_subcategory_data: candidate_detail.category_subcategory_data,\n          title: candidate_detail.title,\n          description: candidate_detail.description,\n          files: candidate_detail.files,\n          start_year: candidate_detail.start_year,\n          end_year: candidate_detail.end_year,\n          school: candidate_detail.school,\n          details_email: candidate_detail.email,\n          // names: candidate_detail.names,\n          details_phone_number: candidate_detail.phone_number,\n          company: candidate_detail.company,\n          year: candidate_detail.year,\n          doc_id: candidate_detail.doc_id,\n          validation_status: candidate_detail.validation_status,\n          validated_by: candidate_detail.validated_by,\n          doc_history_status: candidate_detail.doc_history_status,\n          get_in_date: candidate_detail.get_in_date,\n          approved: candidate_detail.approved,\n          // DATA FROM EXAMS PROPERTY\n          exams: DocumentsData[c].exams,\n        });\n      }\n    }\n  }\n  return documentsTemp;\n};\n\nexport const isDocumentValidationOpen = (\n  data: ApplicationSession | null\n): boolean => {\n  if (data && data.plans) {\n    let checkSession = data.plans.find(\n      (item) => item.type_key === SESSION_PLAN_KEYS.DOCUMENT_VALIDATION\n    );\n    if (checkSession) {\n      let today = moment(),\n        startData = moment(checkSession.start_date),\n        endData = moment(checkSession.end_date);\n      if (\n        startData.diff(today, \"days\") <= 0 &&\n        endData.diff(today, \"days\") >= 0 &&\n        checkSession.type_status === SESSION_PLAN_STATUS.OPEN\n      ) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nexport const FC_documentFilterByDistrict = (\n  candidatesInInstitute: CandidatesInterface[] | null,\n  roomTables: LocationRoomTableInterface[],\n  filterValue: string\n): CandidatesInterface[] => {\n  let centersIdInDistrict: string[] = [];\n  let districtData: LocationRoomTableInterface[] =\n      filterValue === \"all\"\n        ? roomTables\n        : roomTables.filter((d) => d.district_id === filterValue),\n    l: number = districtData.length,\n    i: number;\n\n  // GETTING ALL CENTERS IN SELECTED DISTRICT ================================\n  for (i = 0; i < l; i++) {\n    if (centersIdInDistrict.includes(districtData[i].center_id)) continue;\n    centersIdInDistrict.push(districtData[i].center_id);\n  }\n  // END GETTING CENTERS IN SELECTED DISTRICT ===================================\n\n  // GETTING LIST OF CANDIDATES IN DISTRICT =========================\n  let data: CandidatesInterface[] = [];\n\n  // GET ALL CANDIDATE(WITH DIPLICATION BCAUSE OF APPLICATIONS) WITH DETAILS PROPERTIES =====================================\n  let list_details: CandidatesInterface[] = candidatesInInstitute\n    ? candidatesInInstitute.filter((candidate) => candidate.details.length > 0)\n    : [];\n\n  // GET ALL CANDIDATE(WITH DIPLICATION BCAUSE OF APPLICATIONS) WITH FILES IN DETAILS PROPERTIES =====================================\n  let list_files: CandidatesInterface[] = list_details.filter((candidate) =>\n    candidate.details.filter((item) => item.files !== \"\")\n  );\n\n  // GET ALL CANDIDATE(REMOVE DIPLICATION CAUSED BY APPLICATIONS) WITH DETAILS PROPERTIES =====================================\n  let mailList: string[] = [];\n  let list_distinct: CandidatesInterface[] = [];\n  for (let i = 0; i < list_files.length; i++) {\n    if (mailList.includes(list_files[i].email)) continue;\n    mailList.push(list_files[i].email);\n    list_distinct.push(list_files[i]);\n  }\n\n  let result = data; // restaring list\n  for (let i = 0; i < list_distinct.length; i++) {\n    for (let j = 0; j < list_distinct[i].exams.length; j++) {\n      if (centersIdInDistrict.includes(list_distinct[i].exams[j].center_id)) {\n        data.push(list_distinct[i]);\n        // action = false;\n      }\n      // ======================================\n      let dataMailList: string[] = [];\n      let _data: CandidatesInterface[] = [];\n      for (let i = 0; i < data.length; i++) {\n        if (dataMailList.includes(data[i].email)) continue;\n        dataMailList.push(data[i].email);\n        _data.push(data[i]);\n      }\n      result = _data;\n      // ======================================\n    }\n  }\n  return result;\n};\n\nexport const FC_documentFilterByCenter = (\n  generalResult: CandidatesInterface[],\n  filterValue: string\n): CandidatesInterface[] => {\n  if (filterValue === \"all\") return generalResult;\n  // GETTING LIST OF CANDIDATES IN DISTRICT =========================\n  let data: CandidatesInterface[] = [];\n\n  let result = generalResult; // restaring list\n  for (let i = 0; i < result.length; i++) {\n    for (let j = 0; j < result[i].exams.length; j++) {\n      if (result[i].exams[j].center_id === filterValue) {\n        data.push(result[i]);\n        // action = false;\n\n        // ======================================\n        let mailList: string[] = [];\n        let _data: CandidatesInterface[] = [];\n        for (let i = 0; i < data.length; i++) {\n          if (mailList.includes(data[i].email)) continue;\n          mailList.push(data[i].email);\n          _data.push(data[i]);\n        }\n        data = _data;\n        // ======================================\n      }\n    }\n  }\n\n  return (result = data);\n};\n\nexport const FC_documentFilterByRoom = (\n  generalResult: CandidatesInterface[],\n  filterValue: string\n): CandidatesInterface[] => {\n  if (filterValue === \"all\") return generalResult;\n  // GETTING LIST OF CANDIDATES IN DISTRICT =========================\n  let data: CandidatesInterface[] = [];\n  console.log({ generalResult });\n\n  let result = generalResult; // restaring list\n  for (let i = 0; i < result.length; i++) {\n    for (let j = 0; j < result[i].exams.length; j++) {\n      if (result[i].exams[j].room_id === filterValue) {\n        data.push(result[i]);\n        // action = false;\n\n        // ======================================\n        let mailList: string[] = [];\n        let _data: CandidatesInterface[] = [];\n        for (let i = 0; i < data.length; i++) {\n          if (mailList.includes(data[i].email)) continue;\n          mailList.push(data[i].email);\n          _data.push(data[i]);\n        }\n        data = _data;\n        // ======================================\n      }\n    }\n  }\n\n  return (result = data);\n};\n\nexport const getDocByDocId = (\n  userList: CandidatesInterface[],\n  user_id: string,\n  doc_id: string\n): {\n  user: CandidatesInterface | undefined;\n  doc: CandidateDetailsInterface | undefined;\n} => {\n  let user: CandidatesInterface | undefined = userList.find(\n    (user) => user._id === user_id\n  );\n  let doc: CandidateDetailsInterface | undefined;\n  if (user) {\n    doc = user.details.find((doc) => doc.doc_id === doc_id);\n  }\n\n  return { user, doc };\n};\n\nexport const countDocumentByStatus = (\n  userDocs: CandidateDetailsInterface[],\n  docStatus: \"waiting\" | \"approved\" | \"rejected\"\n): number => {\n  let result: CandidateDetailsInterface[] = userDocs;\n  result = userDocs.filter(\n    (details) => details.validation_status === docStatus && details.files\n  );\n  return result.length;\n};\n\nexport const getDocumentFileByIndex = (\n  documentList: TableCandidatesInterface[],\n  thisIndex: number,\n  setViewDoc: (state: boolean) => void,\n  setDocumentId: (state: string) => void,\n  setCandidateId: (state: string) => void,\n  setDocument_index: (state: number | null) => void,\n  setLoadingImage: (state: boolean) => void\n) => {\n  let n: number = 0,\n    found: boolean;\n  if (documentList.length <= 0) {\n    setViewDoc(false);\n    setDocumentId(\"\");\n    setCandidateId(\"\");\n    setDocument_index(null);\n    setLoadingImage(false);\n    return false;\n  } else if (documentList.length - 1 < thisIndex) {\n    n = 0;\n    found = false;\n    while (!found && documentList.length - 1 >= n) {\n      if (\n        documentList[n] !== undefined &&\n        !isEmptyOrSpaces(documentList[n].files) &&\n        !found\n      ) {\n        setViewDoc(true);\n        setDocumentId(documentList[n].doc_id);\n        setCandidateId(documentList[n].user_id);\n        setDocument_index(n);\n        setLoadingImage(true);\n        found = true;\n      }\n      n++;\n    }\n    if (found) {\n      return true;\n    } else {\n      setViewDoc(false);\n      setDocumentId(\"\");\n      setCandidateId(\"\");\n      setDocument_index(null);\n      setLoadingImage(false);\n      return true;\n    }\n  } else {\n    // result = documentList[thisIndex];\n    if (\n      documentList[thisIndex] !== undefined &&\n      !isEmptyOrSpaces(documentList[thisIndex].files)\n    ) {\n      setViewDoc(true);\n      setDocumentId(documentList[thisIndex].doc_id);\n      setCandidateId(documentList[thisIndex].user_id);\n      setDocument_index(thisIndex);\n      setLoadingImage(true);\n      return true;\n    } else {\n      n = 0;\n      found = false;\n      while (!found && documentList.length - 1 >= n) {\n        if (\n          documentList[n] !== undefined &&\n          !isEmptyOrSpaces(documentList[n].files) &&\n          !found\n        ) {\n          setViewDoc(true);\n          setDocumentId(documentList[n].doc_id);\n          setCandidateId(documentList[n].user_id);\n          setDocument_index(n);\n          setLoadingImage(true);\n          found = true;\n        }\n        n++;\n      }\n      if (found) {\n        return true;\n      } else {\n        setViewDoc(false);\n        setDocumentId(\"\");\n        setCandidateId(\"\");\n        setDocument_index(null);\n        setLoadingImage(false);\n        return true;\n      }\n    }\n  }\n};\n\nexport const getCandidateFileByIndex = (\n  thisCandidate: CandidatesInterface,\n  thisIndex: number,\n  setViewDoc: (state: boolean) => void,\n  setDocumentId: (state: string) => void,\n  setCandidateId: (state: string) => void,\n  setDocument_index: (state: number | null) => void,\n  setLoadingImage: (state: boolean) => void\n) => {\n  if (thisCandidate.details.length <= 0) {\n    setViewDoc(false);\n    setDocumentId(\"\");\n    setCandidateId(\"\");\n    setDocument_index(null);\n    setLoadingImage(false);\n    return false;\n  } else {\n    let filesList = thisCandidate.details.filter(\n      (details) => details.validation_status === \"waiting\" && details.files\n    );\n    if (filesList.length <= 0) {\n      setViewDoc(false);\n      setDocumentId(\"\");\n      setCandidateId(\"\");\n      setDocument_index(null);\n      setLoadingImage(false);\n      return false;\n    } else if (filesList.length - 1 < thisIndex) {\n      setViewDoc(true);\n      setDocumentId(filesList[0].doc_id);\n      setCandidateId(thisCandidate._id);\n      setDocument_index(0);\n      setLoadingImage(true);\n      return true;\n    } else {\n      setViewDoc(true);\n      setDocumentId(filesList[thisIndex].doc_id);\n      setCandidateId(thisCandidate._id);\n      setDocument_index(thisIndex);\n      setLoadingImage(true);\n      return true;\n    }\n  }\n};\n\nexport const countFileByCandidateId = (\n  userDocs: CandidateDetailsInterface[],\n  filterType: \"docCategory\" | \"docSubCategory\" | \"docStatus\",\n  filterValue: string,\n  filterStatus: \"waiting\" | \"approved\" | \"rejected\" = \"waiting\"\n): number => {\n  let result: CandidateDetailsInterface[] = userDocs;\n  if (filterType === \"docCategory\") {\n    result = userDocs.filter(\n      (details) =>\n        details.category_id === filterValue &&\n        details.files &&\n        details.files.length > 0 &&\n        details.validation_status === filterStatus\n    );\n  } else if (filterType === \"docSubCategory\") {\n    result = userDocs.filter(\n      (details) =>\n        details.sub_category_id === filterValue &&\n        details.files &&\n        details.files.length > 0 &&\n        details.validation_status === filterStatus\n    );\n  }\n  return result.length;\n};\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdCancel, MdInfoOutline } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadQuestionTypes,\n  PushPopupAlert,\n  questionTypesStoreInterface,\n} from \"../../../actions\";\nimport { evaluateClaim } from \"../../../actions/claiming\";\nimport { AnswersDetails } from \"../../../components/AnswersDetails/AnswersDetails\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimExamResultsDetails,\n  claimReasonInterface,\n  ClaimStatus,\n  ClaimTypesInterfaceAPI,\n  course,\n} from \"../../../interfaces\";\nimport { ExamAnswerSheetDone } from \"../../../interfaces/exam\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { showDate } from \"../../../utils/functions\";\nimport { claimShowAnswer } from \"../Candidate/ExaminationFormView\";\nimport { isClaimEvaluated } from \"../ClaimDocView\";\nimport { claimResponseBody } from \"./AdminClaimDocView\";\n\nenum viewTabs {\n  profile = \"Applicant Profile\",\n  exam = \"Exam Details\",\n}\n\ntype AdminClaimExamViewProps = {\n  thisExamSheet: ClaimExamResultsDetails;\n  thisExam: course;\n  thisClaim: CandidateClaimInterface;\n  claimTypes: ClaimTypesInterfaceAPI[];\n  claimReasons: claimReasonInterface[] | null;\n\n  // REDUX ==================\n  auth: Auth;\n  questionTypes: questionTypesStoreInterface;\n  evaluateClaim: Function;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  PushPopupAlert: Function;\n};\n\nconst AdminClaimExamView: React.FC<AdminClaimExamViewProps> = (props) => {\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n  const [loading, setLoading] = useState(true);\n  const [actionTaken, setActionTaken] = useState<ClaimDecisionStatus | null>(\n    null\n  );\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [responseMsg, setResponseMsg] = useState<string>(\"\");\n  const [marks, setMarks] = useState<number>(0);\n  const [selectedTab, setSelectedTab] = useState<viewTabs>(viewTabs.profile);\n\n  useEffect(() => {\n    if (\n      props.questionTypes.questionTypes === null ||\n      (props.questionTypes.questionTypes.length === 0 && loading)\n    ) {\n      props.loadQuestionTypes(setLoading);\n    } else if (loading) {\n      setLoading(false);\n    }\n  }, [loading, props]);\n\n  if (loading || props.questionTypes.questionTypes === null) {\n    return <Loading />;\n  }\n\n  const handleVerify = async () => {\n    if (!actionTaken) {\n      setFormError({\n        element: \"action\",\n        msg: \"Action is required!\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    if (\n      actionTaken === ClaimDecisionStatus.ACCEPTED &&\n      (marks <= 0 || marks > 100)\n    ) {\n      setFormError({\n        element: \"marks\",\n        msg: \"Invalid marks, marks must be between 1 and 10\",\n      });\n\n      return setLoadingRequest(false);\n    }\n\n    if (isEmptyOrSpaces(responseMsg)) {\n      setFormError({\n        element: \"comment\",\n        msg: \"Reason of rejection is required\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    let subClaim = props.thisClaim.claims.find(\n      (item) => item.level === props.thisClaim.claim_level\n    );\n\n    if (subClaim) {\n      setLoadingRequest(true);\n      const api_body: claimResponseBody = {\n        sub_claim_id: subClaim._id,\n        evaluation_comment: responseMsg,\n        evaluated_by: props.auth.user.user_id,\n        decision_taken_status: actionTaken,\n        evaluator_name: props.auth.user.fname + \" \" + props.auth.user.lname,\n        evaluator_email: props.auth.user.email,\n      };\n\n      try {\n        const res = await axios.put<CandidateClaimInterface>(\n          `${API.CLAIMING}/user/evaluate/${props.thisClaim._id}`,\n          api_body\n        );\n        if (res) {\n          console.log({ evaluate_claim_res: res });\n          props.evaluateClaim(res.data);\n          // REVALIDATED DOCUMENT IF IT IS APPROVED =========================\n          if (actionTaken === ClaimDecisionStatus.ACCEPTED) {\n            await handleMarksAddition();\n          }\n          props.PushPopupAlert({\n            title: `Claim responded successfully!`,\n            theme: PopupAlertTheme.success,\n          });\n          // setDocumentId(\"null\");\n          setResponseMsg(\"\");\n          setActionTaken(null);\n        }\n      } catch (error) {\n        console.error(error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      setLoadingRequest(false);\n    }\n  };\n\n  const handleMarksAddition = async () => {\n    try {\n      await axios.put(`${API.DO_EXAM}/answersheet/user/marks/update`, {\n        answer_sheet_id: props.thisClaim.claiming_on_id,\n        marks: marks,\n      });\n    } catch (error) {\n      console.error(error);\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  // const getAnswersByQuestion = (question_id: string): ClaimGetUserAnswers[] => {\n  //   return props.thisExamSheet.user_answers.filter(\n  //     (item) => item.question === question_id\n  //   );\n  // };\n\n  const claimCandidateAnswers = (): ExamAnswerSheetDone[] => {\n    let result: ExamAnswerSheetDone[] = [\n      {\n        exam_location: props.thisExamSheet.exam_location,\n        questions: props.thisExamSheet.questions,\n        user_answers: props.thisExamSheet.user_answers,\n        user: props.thisExamSheet.user,\n        period: props.thisExamSheet.period,\n        course: props.thisExamSheet.course,\n        exam_paper: props.thisExamSheet.exam_paper,\n        user_status: props.thisExamSheet.user_status,\n        used_duration: props.thisExamSheet.used_duration,\n        total_marks: props.thisExamSheet.total_marks,\n        number_of_question_answered:\n          props.thisExamSheet.number_of_question_answered,\n        // start_time: string,\n        // end_time: string,\n        exam_total_marks: props.thisExamSheet.exam_total_marks,\n        exam_start_time: props.thisExamSheet.exam_start_time,\n        exam_end_time: props.thisExamSheet.exam_end_time,\n        exam_date: props.thisExamSheet.exam_date,\n        status: props.thisExamSheet.status,\n        createdAt: props.thisExamSheet.createdAt,\n        updatedAt: props.thisExamSheet.updatedAt,\n        disability: false,\n        gender: \"\",\n        in_education: false,\n        position: \"\",\n        answer_sheet_id: props.thisExamSheet.answer_sheet_id,\n      },\n    ];\n    // props.thisExamSheet\n\n    return result;\n  };\n\n  return (\n    <section className=\"\">\n      {/* #################### VIEW TABS ################################## */}\n      <div className=\"flex flex-row items-center mx-4\">\n        {Object.values(viewTabs).map((item, i) => (\n          <div\n            key={i}\n            onClick={() => setSelectedTab(item)}\n            className={`animate__animated ${\n              selectedTab === item\n                ? \"bg-blue-100 border-blue-600 text-blue-600 animate__zoomIn\"\n                : \"bg-white border-white text-gray-600\"\n            } hover:bg-blue-100 px-4 py-2 cursor-pointer font-bold border-b-4 hover:border-blue-600 hover:text-blue-600 rounded-t mt-1 mr-1`}\n          >\n            {item}\n          </div>\n        ))}\n      </div>\n      {/* #################### END VIEW TABS ################################## */}\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          {/* DISPLAY POSITION ==================================================== */}\n          {selectedTab === viewTabs.exam && (\n            <section className=\"w-full my-1 animate__animated animate__fadeIn rounded\">\n              <div className=\"bg-white w-full rounded p-2 mb-2\">\n                <AnswersDetails\n                  showAnswers={true}\n                  exam_id={claimShowAnswer(\n                    props.thisExamSheet,\n                    props.thisExam.course_name\n                  )}\n                  allAnswers={claimCandidateAnswers()}\n                  user_id={props.thisExamSheet.user}\n                />\n              </div>\n            </section>\n          )}\n          {/* END DISPLAY POSITION ==================================================== */}\n          {/* -------------------------------------------------------------------------------- */}\n          {/* DISPLAY PROFILE ==================================================== */}\n          {selectedTab === viewTabs.profile && (\n            <section className=\"w-full my-2 animate__animated animate__fadeIn rounded\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center gap-2\">\n                  <span className={`italic text-gray-600`}>Names:</span>\n                  <span className=\"text-gray-800 font-bold text-xl\">\n                    {props.thisClaim.user.user_info.fname +\n                      \" \" +\n                      props.thisClaim.user.user_info.lname}\n                  </span>\n                </div>\n              </div>\n            </section>\n          )}\n          {/* END DISPLAY PROFILE ==================================================== */}\n          {selectedTab === viewTabs.profile && (\n            <div className=\"\">\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Email:</span>\n                <span className=\"text-gray-800 font-bold text-lg\">\n                  {props.thisClaim.user.email}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Phone:</span>\n                <span className=\"text-gray-800 font-bold text-lg\">\n                  {props.thisClaim.user.phone_number}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Gender:</span>\n                <span className=\"text-gray-800 font-bold text-lg\">\n                  {props.thisClaim.user.user_info.sex === \"M\"\n                    ? \"Male\"\n                    : \"Female\"}\n                </span>\n              </div>\n            </div>\n          )}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVEL 1 DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section\n              className=\"flex flex-col px-2 pt-3\"\n              key={index + claim._id}\n            >\n              <div className=\"text-gray-700 italic font-bold\">\n                Claim Comment (level {index + 1})\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2 mt-1 border rounded px-2 py-1 bg-gray-50\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-600 text-xs\">\n                  {showDate(claim.createdAt)}\n                  {/* {showDate(claim.createdAt) +\n                    \" at \" +\n                    moment.unix(claim.date_created).format(\"MM/DD/YYYY\")} */}\n                </span>\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-700 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    {/* <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div> */}\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n            </section>\n          ))}\n        {/* END CLAIM LEVEL 1 DETAILS ==================================================== */}\n      </div>\n\n      {/* FOOTER INITIAL ========================================== */}\n      {!actionTaken && (\n        <section className=\"flex items-center justify-between bg-gray-50 rounded mt-3\">\n          {/* SHOWING STATUS ===================================== */}\n          <div className=\"mx-4 my-4\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n          </div>\n\n          {props.thisClaim.last_claim_status === ClaimStatus.PENDING && (\n            <div className=\"flex items-center gap-2 px-2\">\n              <button\n                className={`px-4 py-2 font-semibold text-red-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-red-700 hover:bg-red-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.REJECTED);\n                }}\n              >\n                <MdCancel className=\"w-5 h-5\" />\n                <span>Reject</span>\n              </button>\n              <button\n                className={`px-4 py-2 font-semibold text-blue-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-blue-700 hover:bg-blue-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.ACCEPTED);\n                }}\n              >\n                <FaRegCheckCircle className=\"w-5 h-5\" />\n                <span>Accept</span>\n              </button>\n            </div>\n          )}\n        </section>\n      )}\n      {/* END FOOTER INITIAL ========================================== */}\n\n      {/* ======================================================== */}\n      {/* FOOTER RESPONSE ========================================== */}\n      {actionTaken && (\n        <section className=\"my-5 overflow-x-auto\">\n          <div className=\"italic text-gray-700 text-base my-1 mx-2\">\n            Selected decision:{\" \"}\n            <span\n              className={`font-semibold text-lg ${\n                actionTaken === ClaimDecisionStatus.ACCEPTED\n                  ? \"text-blue-700\"\n                  : \"text-yellow-800\"\n              }`}\n            >\n              {actionTaken === ClaimDecisionStatus.ACCEPTED\n                ? \"Approved\"\n                : \"Rejected\"}\n            </span>\n          </div>\n          {/* right part */}\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full space-y-1\">\n              {actionTaken === ClaimDecisionStatus.ACCEPTED && (\n                <div className=\"flex items-center justify-end w-full gap-2\">\n                  <span className=\"font-semibold\">Addition marks</span>\n                  <div className=\"px-2\">\n                    <input\n                      placeholder={`Addition marks`}\n                      className={`border border-${\n                        formError && formError.element === \"marks\"\n                          ? \"red\"\n                          : \"gray\"\n                      }-400 rounded px-3 py-1 w-auto focus:outline-none`}\n                      value={marks}\n                      onChange={(e) => {\n                        setMarks(Number(e.target.value));\n                        setFormError(null);\n                      }}\n                      disabled={loadingRequest}\n                    />\n                    {formError && formError.element === \"marks\" && (\n                      <p className=\"text-red-800\">{formError.msg}</p>\n                    )}\n                  </div>\n                </div>\n              )}\n              <div className=\"w-full px-2\">\n                <textarea\n                  placeholder={`Reason of your decision...`}\n                  cols={50}\n                  rows={actionTaken === ClaimDecisionStatus.ACCEPTED ? 2 : 3}\n                  className={`border border-${\n                    formError && formError.element === \"comment\"\n                      ? \"red\"\n                      : \"gray\"\n                  }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                  style={{ resize: \"none\" }}\n                  value={responseMsg}\n                  onChange={(e) => {\n                    setResponseMsg(e.target.value);\n                    setFormError(null);\n                  }}\n                  disabled={loadingRequest}\n                ></textarea>\n                {formError && formError.element === \"comment\" && (\n                  <p className=\"text-red-800\">{formError.msg}</p>\n                )}\n              </div>\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  setResponseMsg(\"\");\n                  setActionTaken(null);\n                  setFormError(null);\n                }}\n                disabled={loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={loadingRequest}\n                onClick={() =>\n                  window.confirm(\n                    `Are you sure you want to ${\n                      actionTaken === ClaimDecisionStatus.ACCEPTED\n                        ? \"approve\"\n                        : \"rejected\"\n                    } this document?`\n                  ) && handleVerify()\n                }\n              >\n                {loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n          {/* end right part */}\n        </section>\n      )}\n      {/* END FOOTER RESPONSE ========================================== */}\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  questionTypes,\n}: StoreState): {\n  auth: Auth;\n  questionTypes: questionTypesStoreInterface;\n} => {\n  return {\n    auth,\n    questionTypes,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    loadQuestionTypes,\n    evaluateClaim,\n    PushPopupAlert,\n  })(AdminClaimExamView)\n);\n","import React from \"react\";\nimport { AiOutlineFullscreen } from \"react-icons/ai\";\nimport { BiZoomIn, BiZoomOut } from \"react-icons/bi\";\nimport { CgImage } from \"react-icons/cg\";\nimport { ImFolderOpen } from \"react-icons/im\";\nimport { MdClose } from \"react-icons/md\";\nimport ViewPDF from \"../../../components/ViewPDF/ViewPDF\";\nimport { TableCandidatesInterface } from \"../../../interfaces/document_validation\";\nimport { API } from \"../../../utils/api\";\nimport {\n  fullScreen,\n  getFileType,\n  isFileImage,\n  zoomInOut,\n} from \"../../../utils/functions\";\nimport NoSession from \"../../SessionSettings/NoSession\";\n\ninterface FooterInitialPropInterface {\n  doc: TableCandidatesInterface;\n  setDocId: (data: string) => void;\n  close: (value: string) => void;\n}\n\nconst FooterInitial: React.FC<FooterInitialPropInterface> = (\n  props\n): JSX.Element => {\n  return (\n    <div className=\"w-full flex md:flex-col flex-col justify-between items-start gap-2\">\n      {/* left part */}\n      <div className=\"flex items-center gap-4 w-full\">\n        {/* doc title & status */}\n        <section className=\"p-3 w-full\">\n          {/* --------------------------------- */}\n          <div className=\"flex items-center gap-2 border-b-2 my-2 py-1\">\n            <ImFolderOpen className=\"text-blue-600 text-xl\" />\n            <h2 className=\"uppercase tracking-wide text-xl font-semibold text-gray-700\">\n              Document Decision Re-Override\n            </h2>\n          </div>\n          <div className=\"flex flex-row items-start justify-left gap-2 mb-2\">\n            <span className=\"text-gray-500 italic mt-1\">Doc Title: </span>\n            <span className=\"font-bold text-2xl\">\n              {props.doc.main_doc_title}\n            </span>\n          </div>\n          <div className=\"flex flex-row items-center justify-left gap-2 mb-2\">\n            <span className=\"text-gray-500 italic\">Names: </span>\n            <span className=\"font-medium text-lg\">\n              {props.doc.fname + \" \" + props.doc.lname}\n            </span>\n          </div>\n          <section className=\"animate__animated animate__fadeIn\">\n            <div className=\"flex flex-row items-center justify-left gap-2 mb-2\">\n              <span className=\"text-gray-500 italic\">National ID: </span>\n              <span className=\"font-medium text-lg\">{props.doc.n_id}</span>\n            </div>\n            <div className=\"flex flex-row items-center justify-left gap-2 mb-2\">\n              <span className=\"text-gray-500 italic\">Phone: </span>\n              <span className=\"font-medium text-lg\">\n                {props.doc.phone_number}\n              </span>\n            </div>\n            <div className=\"flex flex-row items-center justify-left gap-2 mb-2\">\n              <span className=\"text-gray-500 italic\">Email: </span>\n              <span className=\"font-medium text-lg\">{props.doc.email}</span>\n            </div>\n            {/* status */}\n            <div className=\"flex items-center gap-1\">\n              <span className=\"text-gray-500 italic\">Status:</span>\n              <span\n                className={`text-${\n                  props.doc.validation_status === \"waiting\"\n                    ? \"yellow\"\n                    : props.doc.validation_status === \"approved\"\n                    ? \"blue\"\n                    : \"red\"\n                }-700 font-medium text-lg`}\n              >\n                {props.doc.validation_status === \"waiting\"\n                  ? \"Pending\"\n                  : props.doc.validation_status === \"approved\"\n                  ? \"Approved\"\n                  : \"Rejected\"}\n              </span>\n            </div>\n            {/* end status */}\n\n            {/* comment */}\n            {props.doc.validated_by && (\n              <div className=\"w-full\">\n                <span className=\"text-gray-500 italic\">Reason:</span>\n                <p className={`text-gray-700 font-medium text-base`}>\n                  {props.doc.validated_by?.comment}\n                </p>\n              </div>\n            )}\n            {/* end comment */}\n          </section>\n\n          <div className=\"my-5 flex justify-end\">\n            <button\n              className=\"bg-gray-700 px-4 py-2 rounded font-semibold text-white inline-flex items-center space-x-2 focus:outline-none\"\n              onClick={() => props.close(\"\")}\n            >\n              <MdClose className=\"w-5 h-5\" />\n              <span>Close</span>\n            </button>\n          </div>\n        </section>\n        {/* end doc title & status */}\n      </div>\n      {/* end left part */}\n    </div>\n  );\n};\n\ninterface AppProps {\n  doc: TableCandidatesInterface;\n  setDocId: (data: string) => void;\n  close: (value: string) => void;\n}\n\ninterface AppStates {\n  isFullscreen: boolean;\n  failedToLoadFile: boolean;\n  loadingImage: boolean;\n  actionTaken: null | \"approval\" | \"rejection\";\n}\n\nclass ClaimFileView extends React.Component<AppProps, AppStates> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      isFullscreen: false,\n      failedToLoadFile: false,\n      loadingImage: true,\n      actionTaken: null,\n    };\n  }\n\n  setSetFullscreen = (value: boolean) => {\n    this.setState({ isFullscreen: value });\n  };\n\n  handleFullScreen = () => {\n    if (this.state.isFullscreen) {\n      // alert(\"closing\");\n      fullScreen(\"doc-img\", \"CLOSE\");\n      this.setSetFullscreen(false);\n    } else {\n      // alert(\"opening\");\n      this.setSetFullscreen(true);\n      fullScreen(\"doc-img\", \"OPEN\");\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"bg-gray-50 h-full md:h-screen grid grid-cols-1 md:grid-cols-3\">\n        {/* image content */}\n        {this.props.doc.files.length > 0 && this.state.loadingImage && (\n          <div className=\"col-span-2 max-h-full md:max-h-screen overflow-y-auto relative group\">\n            <div className=\"relative\">\n              {this.state.failedToLoadFile === false ? (\n                <div className=\"w-full mx-auto mt-5 px-4\">\n                  <div className=\"animate-pulse flex space-x-4\">\n                    <div className=\"flex-1 space-y-4 py-4\">\n                      <div className=\"bg-gray-300 rounded h-72 flex items-center justify-center\">\n                        <h1 className=\"text-5xl text-gray-500 font-bold\">\n                          Loading{\" \"}\n                          {isFileImage(getFileType(this.props.doc.files))\n                            ? \"image\"\n                            : \"pdf\"}\n                          ...\n                        </h1>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ) : (\n                <div className=\"px-3\">\n                  <NoSession\n                    title=\"Error\"\n                    description={\n                      isFileImage(getFileType(this.props.doc.files))\n                        ? \"Failed to load image\"\n                        : \"Failed to load pdf\"\n                    }\n                  />\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n        <div\n          className={`col-span-2 h-auto md:max-h-screen overflow-y-auto relative bg-gray-200 group ${\n            this.state.loadingImage && \"hidden\"\n          }`}\n        >\n          {/* DISPLAY IMAGE OF PDF =================================== */}\n          {this.props.doc.files.length > 0 ? (\n            isFileImage(getFileType(this.props.doc.files)) ? (\n              <div className=\"relative\">\n                <img\n                  src={API.AUTH_FILES + this.props.doc.files}\n                  alt=\"\"\n                  className={`w-full md:w-auto h-auto md:max-h-screen mx-auto ${\n                    this.state.loadingImage && \"hidden\"\n                  }`}\n                  id=\"doc-img\"\n                  onLoad={() => this.setState({ loadingImage: false })}\n                  onError={() => this.setState({ failedToLoadFile: true })}\n                  onDoubleClick={() => this.handleFullScreen()}\n                />\n              </div>\n            ) : (\n              <ViewPDF\n                file_url={API.AUTH_FILES + this.props.doc.files}\n                class_name={`w-full h-screen md:max-h-screen mx-auto ${\n                  this.state.loadingImage && \"hidden\"\n                }`}\n                frame_title={\"application PDF file view\"}\n                setLoadingFile={(e: boolean) =>\n                  this.setState({ loadingImage: e })\n                }\n                setLoadingError={(e: boolean) =>\n                  this.setState({ failedToLoadFile: e })\n                }\n              />\n            )\n          ) : (\n            <div className=\"text-center text-red-400 py-8 animate__animated animate__fadeIn\">\n              <CgImage className=\"mx-auto w-40 h-40\" />\n              <span className=\"font-semibold text-4xl\">No Files Provided</span>\n            </div>\n          )}\n          {/* END DISPLAY IMAGE OF PDF =================================== */}\n\n          {/* ------------------------------------------------------------ */}\n\n          {/* FILE VIEW CONTROLLERS =================================== */}\n          <div\n            className={`flex items-center justify-between absolute top-0 ${\n              isFileImage(getFileType(this.props.doc.files))\n                ? \"w-full\"\n                : \"w-max\"\n            } px-2 py-2`}\n          >\n            {this.props.doc.files.length > 0 &&\n              isFileImage(getFileType(this.props.doc.files)) && (\n                <div className=\"flex items-center gap-2 opacity-0 group-hover:opacity-100\">\n                  <button\n                    className=\"flex items-center bg-gray-100 justify-center h-10 w-10 rounded-full shadow-md opacity-4 cursor-pointer hover:bg-blue-50\"\n                    onClick={() => zoomInOut(\"doc-img\", \"IN\")}\n                  >\n                    <BiZoomIn className=\"h-6 w-6 text-gray-500\" />\n                  </button>\n                  <button\n                    className=\"flex items-center bg-gray-100 justify-center h-10 w-10 rounded-full shadow-md opacity-4 cursor-pointer hover:bg-blue-50\"\n                    onClick={() => zoomInOut(\"doc-img\", \"OUT\")}\n                  >\n                    <BiZoomOut className=\"h-6 w-6 text-gray-500\" />\n                  </button>\n                  <div\n                    className=\"flex items-center bg-gray-100 justify-center h-10 w-10 rounded-full shadow-md opacity-4 cursor-pointer hover:bg-blue-50\"\n                    onClick={() => fullScreen(\"doc-img\", \"OPEN\")}\n                  >\n                    <AiOutlineFullscreen className=\"h-6 w-6 text-gray-500\" />\n                  </div>\n                </div>\n              )}\n          </div>\n          {/* END FILE VIEW CONTROLLERS =================================== */}\n        </div>\n\n        {/* footer */}\n        <div>\n          {this.props.doc.files && (\n            <FooterInitial\n              doc={this.props.doc}\n              setDocId={this.props.setDocId}\n              close={this.props.close}\n            />\n          )}\n        </div>\n        {/* end footer */}\n      </div>\n    );\n  }\n}\n\nexport default ClaimFileView;\n","import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport {\n  MdArrowBack,\n  MdCancel,\n  MdInfoOutline,\n  MdTurnedIn,\n} from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert, reAssessApplication } from \"../../../actions\";\nimport { evaluateClaim } from \"../../../actions/claiming\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  allClaimApplicationInterface,\n  CandidateClaimInterface,\n  ClaimCandidateDetailInterface,\n  ClaimDecisionStatus,\n  claimReasonInterface,\n  ClaimStatus,\n  ClaimTypesInterfaceAPI,\n  PositionAPI,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { DATE, FC_GetBase64Img, showDate } from \"../../../utils/functions\";\nimport { PositionRequirementTableInterface } from \"../../Positions/ViewPosition\";\nimport ViewDocRequirements from \"../../Positions/ViewDocRequirements\";\nimport { isClaimEvaluated } from \"../ClaimDocView\";\nimport { claimResponseBody } from \"./AdminClaimDocView\";\nimport DisplayCompetence from \"../../Positions/DisplayCompetence\";\nimport PositionDetails from \"../../CandidateApplication/ApplicationComponents/PositionDetails\";\nimport {\n  GetDocTitle,\n  TableCandidatesInterface,\n} from \"../../../interfaces/document_validation\";\nimport { UserDocumentsInterface } from \"../../../shared/interfaces\";\nimport { IoDocumentOutline } from \"react-icons/io5\";\nimport ClaimFileView from \"./ClaimFileView\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\n\nexport const FC_AdminApplicationPositionDistinctCategory = (\n  thisPosition: PositionAPI,\n  documentCategories: DocumentReducerInterface\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n  let requirements = thisPosition.requirements;\n  // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n  for (let req in requirements) {\n    let thisRequirements = requirements[req];\n    // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisCategory = documentCategories.documentCategory\n      ? documentCategories.documentCategory.find(\n          (item) =>\n            item.user_detail_category_id ===\n            thisRequirements.category.user_detail_category_id\n        ) && {\n          title: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.title,\n          user_detail_category_id: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.user_detail_category_id,\n        }\n      : {\n          title: \"\",\n          user_detail_category_id:\n            thisRequirements.category.user_detail_category_id,\n        };\n    // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisSubCategory = documentCategories.documentSubCategory\n      ? documentCategories.documentSubCategory.find(\n          (item) =>\n            item.user_detail_subcategory_id ===\n            thisRequirements.subcategory.user_detail_subcategory_id\n        )\n        ? {\n            title: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.title,\n            user_detail_subcategory_id:\n              documentCategories.documentSubCategory.find(\n                (item) =>\n                  item.user_detail_subcategory_id ===\n                  thisRequirements.subcategory.user_detail_subcategory_id\n              )!.user_detail_subcategory_id,\n            category_id: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.category_id,\n          }\n        : {\n            title: \"\",\n            user_detail_subcategory_id:\n              thisRequirements.subcategory.user_detail_subcategory_id,\n            category_id: \"\",\n          }\n      : {\n          title: \"\",\n          user_detail_subcategory_id:\n            thisRequirements.subcategory.user_detail_subcategory_id,\n          category_id: \"\",\n        };\n    // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n    if (thisCategory) {\n      for (let field in thisRequirements.position_requirement) {\n        // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n        let thisField = documentCategories.documentFields\n          ? documentCategories.documentFields.find(\n              (item) =>\n                item._id === thisRequirements.position_requirement[field]._id\n            )\n            ? {\n                title: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!.title,\n                _id: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n            : {\n                title: \"\",\n                _id: thisRequirements.position_requirement[field]._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n          : {\n              title: \"\",\n              _id: thisRequirements.position_requirement[field]._id,\n              required: thisRequirements.position_requirement[field].required,\n            };\n        // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n        PositionsTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: thisField.title,\n          field_id: thisField._id,\n          required: thisField.required,\n        });\n      }\n\n      // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n      ) {\n        DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n        DistinctCategoriesTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: \"\",\n          subcategory_title: \"\",\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n\n      // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctSubCategoriesIds.includes(\n          thisSubCategory.user_detail_subcategory_id\n        )\n      ) {\n        DistinctSubCategoriesIds.push(\n          thisSubCategory.user_detail_subcategory_id\n        );\n        DistinctSubCategoriesTemp.push({\n          category_id: thisSubCategory.category_id,\n          category_title: \"\",\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n    }\n  }\n  // DistinctCategoriesIds.;\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\ntype AdminClaimAppViewProps = {\n  thisApplication: allClaimApplicationInterface;\n  thisPosition: PositionAPI;\n  documentCategories: DocumentReducerInterface;\n  thisClaim: CandidateClaimInterface;\n  claimTypes: ClaimTypesInterfaceAPI[];\n  systemPositions: PositionAPI[];\n  claimReasons: claimReasonInterface[] | null;\n  close: () => void;\n\n  // REDUX ==================\n  auth: Auth;\n  reAssessApplication: Function;\n  evaluateClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst AdminClaimAppView: React.FC<AdminClaimAppViewProps> = (props) => {\n  const [viewPosition, setViewPosition] = useState<boolean>(true);\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n  const [actionTaken, setActionTaken] = useState<ClaimDecisionStatus | null>(\n    null\n  );\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [responseMsg, setResponseMsg] = useState<string>(\"\");\n  const [viewThisDocument, setViewThisDocument] = useState<string>(\"\");\n\n  const handleVerify = async () => {\n    if (!actionTaken) {\n      setFormError({\n        element: \"action\",\n        msg: \"Action is required!\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    if (isEmptyOrSpaces(responseMsg)) {\n      setFormError({\n        element: \"comment\",\n        msg: \"Reason of rejection is required\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    let subClaim = props.thisClaim.claims.find(\n      (item) => item.level === props.thisClaim.claim_level\n    );\n\n    if (subClaim) {\n      setLoadingRequest(true);\n      const api_body: claimResponseBody = {\n        sub_claim_id: subClaim._id,\n        evaluation_comment: responseMsg,\n        evaluated_by: props.auth.user.user_id,\n        decision_taken_status: actionTaken,\n        evaluator_name: props.auth.user.fname + \" \" + props.auth.user.lname,\n        evaluator_email: props.auth.user.email,\n      };\n\n      console.log(\"=================claimResponseBody===================\");\n      console.log({ subClaim, api_body });\n      console.log(\"=================claimResponseBody===================\");\n\n      try {\n        const res = await axios.put<CandidateClaimInterface>(\n          `${API.CLAIMING}/user/evaluate/${props.thisClaim._id}`,\n          api_body\n        );\n        if (res) {\n          console.log(\"====================================\");\n          console.log({ evaluate_claim_res: res });\n          console.log(\"====================================\");\n          props.evaluateClaim(res.data);\n          // REVALIDATED DOCUMENT IF IT IS APPROVED =========================\n          if (actionTaken === ClaimDecisionStatus.ACCEPTED) {\n            await overrideDecision();\n          }\n          props.PushPopupAlert({\n            title: `Claim responded successfully!`,\n            theme: PopupAlertTheme.success,\n          });\n          // setDocumentId(\"null\");\n          setResponseMsg(\"\");\n          setActionTaken(null);\n          props.close();\n        }\n      } catch (error) {\n        console.error(error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      setLoadingRequest(false);\n    }\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  const overrideDecision = async () => {\n    try {\n      const res = await axios.patch(\n        `${API.APPLICATION}/apply/tolerateappl/${props.thisClaim.claiming_on_id}`,\n        {\n          user_id: props.auth.user.user_id,\n          email: props.thisClaim.user.email,\n          phone_number: props.thisClaim.user.phone_number,\n          comment: responseMsg,\n          application_status: ApplicationStates.Shortlisted,\n        }\n      );\n\n      res.data &&\n        props.reAssessApplication({\n          application_id: props.thisClaim.claiming_on_id,\n          application_status: ApplicationStates.Shortlisted,\n        });\n    } catch (error) {\n      console.error({ code_error: error });\n      PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      // errorToText(error);\n    }\n    setLoadingRequest(false);\n  };\n\n  const getPositionById = (position_id: string): PositionAPI | undefined => {\n    let result = props.systemPositions.find(\n      (item) => item.position_id === position_id\n    );\n\n    return result;\n  };\n\n  const FC_DocumentInArray = (\n    docCategories: DocumentReducerInterface,\n    DocumentsData: ClaimCandidateDetailInterface\n  ): TableCandidatesInterface[] | [] => {\n    let documentsTemp: TableCandidatesInterface[] = [];\n    let details = DocumentsData.details;\n    for (let d in details) {\n      let candidate_detail: UserDocumentsInterface = DocumentsData.details[d];\n      if (\n        candidate_detail.files !== null &&\n        !isEmptyOrSpaces(candidate_detail.files)\n      ) {\n        documentsTemp.push({\n          // DATA FROM MAIN PROPERTY\n          user_id: DocumentsData._id,\n          n_id: DocumentsData.n_id ? DocumentsData.n_id : \"\",\n          fname: DocumentsData.user_info.fname,\n          lname: DocumentsData.user_info.lname,\n          phone_number: DocumentsData.phone_number,\n          district: DocumentsData.user_info.district,\n          email: DocumentsData.email,\n          // NEW DATA GENERATED BAISED ON DETAILS PROPERTY\n          main_doc_title: GetDocTitle(docCategories, candidate_detail).main,\n          // DATA FROM DETAILS PROPERTY\n          category_id: candidate_detail.category_id,\n          sub_category_id: candidate_detail.sub_category_id,\n          category_subcategory_data: candidate_detail.category_subcategory_data,\n          title: candidate_detail.title,\n          description: candidate_detail.description,\n          files: candidate_detail.files,\n          start_year: candidate_detail.start_year,\n          end_year: candidate_detail.end_year,\n          school: candidate_detail.school.title,\n          details_email: candidate_detail.email,\n          names: candidate_detail.names,\n          details_phone_number: candidate_detail.phone_number,\n          company: candidate_detail.company,\n          year: candidate_detail.year,\n          doc_id: candidate_detail.doc_id,\n          validation_status: candidate_detail.validation_status,\n          validated_by: candidate_detail.validated_by\n            ? {\n                user_id: candidate_detail.validated_by.user_id,\n                comment: candidate_detail.validated_by.comment\n                  ? candidate_detail.validated_by.comment\n                  : candidate_detail.validated_by.commet,\n                validation_status:\n                  candidate_detail.validated_by.validation_status,\n                date: candidate_detail.validated_by.date,\n              }\n            : null,\n          doc_history_status: \"\",\n          get_in_date: \"\",\n          approved: candidate_detail.approved,\n          // DATA FROM EXAMS PROPERTY\n          exams: [],\n        });\n      }\n    }\n    return documentsTemp;\n  };\n\n  const DATA_ThisPosition = getPositionById(props.thisApplication.position);\n\n  const DATA_Documents = FC_DocumentInArray(\n    props.documentCategories,\n    props.thisClaim.user\n  );\n\n  const Data_ThisDocument = DATA_Documents\n    ? DATA_Documents.find((item) => item.doc_id === viewThisDocument)\n    : undefined;\n\n  if (Data_ThisDocument) {\n    return (\n      <Modal\n        backDrop={true}\n        theme={Themes.default}\n        close={() => setViewThisDocument(\"\")}\n        backDropClose={true}\n        widthSizeClass={ModalSize.maxWidth}\n        displayClose={false}\n        padding={{\n          title: undefined,\n          body: undefined,\n          footer: undefined,\n        }}\n      >\n        <ClaimFileView\n          doc={Data_ThisDocument}\n          setDocId={(value: string) => setViewThisDocument(value)}\n          close={setViewThisDocument}\n        />\n      </Modal>\n    );\n  }\n\n  return (\n    <section>\n      <div className=\"w-full py-1 divide-y-2 space-y-4\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          {/* DISPLAY PROFILE ==================================================== */}\n          <div className=\"flex items-start mb-4 -mt-2 pb-3 px-4 bg-white\">\n            <div className=\"w-auto\">\n              <img\n                src={FC_GetBase64Img(props.thisClaim.user.user_info.photo)}\n                className=\"w-auto object-center object-cover h-32 rounded-lg\"\n                alt=\"\"\n              />\n            </div>\n            <section className=\"w-full\">\n              <div className=\"flex items-center\">\n                <div className=\"flex items-center gap-2 px-3\">\n                  <span className={`italic text-gray-600`}>Applicant:</span>\n                  <span className=\"text-gray-800 font-bold text-xl\">\n                    {props.thisClaim.user.user_info.fname +\n                      \" \" +\n                      props.thisClaim.user.user_info.lname}\n                  </span>\n                </div>\n                {false && (\n                  <button\n                    type=\"button\"\n                    className=\"bg-gray-200 hover:bg-gray-300 text-gray-700 group-hover:text-gray-800 py-1 px-2 mr-1 rounded text-sm\"\n                    onClick={() => setViewPosition(!viewPosition)}\n                  >\n                    {viewPosition ? \"Hide\" : \"More\"}\n                  </button>\n                )}\n              </div>\n              <div className=\"flex items-center gap-2 px-3\">\n                <span className={`italic text-gray-600`}>NID:</span>\n                <span className=\"text-gray-800 font-bold text-xl\">\n                  {props.thisClaim.user.n_id}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2 px-3\">\n                <span className={`italic text-gray-600`}>Sex:</span>\n                <span className=\"text-gray-800 font-bold text-xl\">\n                  {props.thisClaim.user.user_info.sex}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2 px-3\">\n                <span className={`italic text-gray-600`}>Phone:</span>\n                <span className=\"text-gray-800 font-bold text-xl\">\n                  {props.thisClaim.user.phone_number}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2 px-3\">\n                <span className={`italic text-gray-600`}>Email:</span>\n                <span className=\"text-gray-800 font-bold text-xl\">\n                  {props.thisClaim.user.email}\n                </span>\n              </div>\n            </section>\n          </div>\n          {/* DISPLAY POSITION ==================================================== */}\n          <section className=\"w-full mb-4 bg-white px-4 py-2 rounded\">\n            <h2 className=\"mx-4 text-blue-800 font-bold text-3xl\">\n              {DATA_ThisPosition\n                ? DATA_ThisPosition!.position_title\n                : \"Position not found\"}\n            </h2>\n            {DATA_ThisPosition ? (\n              <PositionDetails\n                positionDetails={DATA_ThisPosition}\n                cancel={() => {}}\n                apply={() => {}}\n                auth={props.auth}\n                showRegister={() => {}}\n                hideTools={true}\n              />\n            ) : (\n              <NoResult\n                theme={NoResultThemes.Dark}\n                value={\"Position not found!\"}\n              />\n            )}\n          </section>\n          {/* END DISPLAY POSITION ==================================================== */}\n\n          {/* -------------------------------------------------------------------------------- */}\n\n          {/* DISPLAY DOCUMENTS ==================================================== */}\n          <section className=\"bg-white rounded w-full px-4 py-2 my-3\">\n            <div className=\"\">\n              <div className=\"font-light text-4xl\">User documents</div>\n              <div>List of all documents</div>\n            </div>\n\n            <table className=\"w-full rounded shadow\">\n              {DATA_Documents !== null && DATA_Documents.length !== 0 && (\n                <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                  <tr>\n                    <td className=\"px-2 py-2\">#</td>\n                    <td className=\"px-2 py-2\">User Document</td>\n                    <td className=\"px-2 py-2\">Status</td>\n                    <td className=\"px-2 py-2\"></td>\n                  </tr>\n                </thead>\n              )}\n              <tbody>\n                {DATA_Documents && DATA_Documents.length === 0 && (\n                  <tr className=\"border-b border-gray-200\">\n                    <td colSpan={4}>\n                      <div className=\"m-3 flex items-center justify-center p-4 rounded bg-gray-100 text-center text-2xl font-light\">\n                        No documents found for this user!\n                      </div>\n                    </td>\n                  </tr>\n                )}\n                {DATA_Documents &&\n                  DATA_Documents.length > 0 &&\n                  DATA_Documents.map((doc, index) => (\n                    <tr\n                      key={doc.doc_id + index + Math.random()}\n                      className=\"border-b border-gray-200 cursor-pointer group hover:bg-gray-100\"\n                      onClick={() => setViewThisDocument(doc.doc_id)}\n                    >\n                      <td className=\"p-3 text-left whitespace-nowrap\">\n                        {index + 1}\n                      </td>\n                      <td className=\"py-3 px-3 text-left font-medium text-lg\">\n                        {doc.main_doc_title}\n                      </td>\n                      <td className=\"py-3 px-2 text-left\">\n                        <span\n                          className={`text-sm font-medium py-1 px-2 rounded align-middle ${\n                            doc.validation_status === \"approved\"\n                              ? \"bg-green-100 text-green-800\"\n                              : doc.validation_status === \"waiting\"\n                              ? \"bg-gray-200 text-black\"\n                              : \"bg-red-100 text-red-800\"\n                          }`}\n                        >\n                          {capitalizeFirstLetter(doc.validation_status)}\n                        </span>\n                      </td>\n                      <td className=\"text-right\">\n                        <button\n                          className=\"bg-blue-100 group-hover:bg-blue-600 text-blue-700 group-hover:text-white font-bold py-1 px-1 inline-flex rounded focus:outline-none\"\n                          title=\"View documents\"\n                        >\n                          <IoDocumentOutline className=\"w-5 h-5\" />\n                          View doc\n                        </button>\n                      </td>\n                    </tr>\n                  ))}\n              </tbody>\n            </table>\n          </section>\n          {/* END DISPLAY DOCUMENTS ==================================================== */}\n\n          <section className=\"px-4 py-2 bg-white rounded\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Status:</span>\n              <span\n                className={`font-bold ${\n                  props.thisClaim.previous\n                    ? props.thisClaim.previous.status ===\n                      ApplicationStates.Rejected\n                    : props.thisApplication.application_status ===\n                      ApplicationStates.Rejected\n                    ? \"text-yellow-900\"\n                    : \"text-blue-600\"\n                } rounded px-3 py-1`}\n              >\n                {props.thisClaim.previous\n                  ? capitalizeFirstLetter(props.thisClaim.previous.status)\n                  : capitalizeFirstLetter(\n                      props.thisApplication.application_status\n                    )}\n              </span>\n            </div>\n            {/* <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Evaluated by:</span>\n              <span className=\"font-semibold\">\n                {props.thisClaim.previous.evaluater.name}\n              </span>\n            </div> */}\n            {false && (\n              <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                <span className={`italic`}>Session:</span>\n                <span className=\"font-bold text-gray-900 py-1\">\n                  {props.thisApplication.application_session}\n                </span>\n              </div>\n            )}\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Date:</span>\n              <span className=\"font-bold text-gray-900 py-1\">\n                {DATE(props.thisApplication.createdAt)}\n              </span>\n            </div>\n            <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Reason:</span>\n              <span\n                className=\"font-normal\"\n                dangerouslySetInnerHTML={{\n                  __html: props.thisClaim.previous\n                    ? props.thisClaim.previous.reason\n                    : props.thisApplication.override_by.comment,\n                }}\n              ></span>\n            </div>\n          </section>\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVEL 1 DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section\n              className=\"flex flex-col px-4 pt-2 pb-3 rounded bg-white\"\n              key={index + claim._id}\n            >\n              <div className=\"text-gray-700 italic font-bold\">\n                Claim Comment (level {index + 1})\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2 mt-1 border rounded px-4 py-1 bg-gray-50\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-600 text-xs\">\n                  {showDate(claim.createdAt)}\n                  {/* {showDate(claim.createdAt) +\n                    \" at \" +\n                    moment.unix(claim.date_created).format(\"MM/DD/YYYY\")} */}\n                </span>\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-700 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    {/* <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div> */}\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span\n                        className=\"font-normal\"\n                        dangerouslySetInnerHTML={{\n                          __html: claim.evaluation_comment,\n                        }}\n                      ></span>\n                    </div>\n                  </div>\n                </section>\n              )}\n            </section>\n          ))}\n        {/* END CLAIM LEVEL 1 DETAILS ==================================================== */}\n      </div>\n\n      {/* FOOTER INITIAL ========================================== */}\n      {!actionTaken && (\n        <section className=\"flex items-center justify-between bg-gray-50 rounded mt-3\">\n          {/* SHOWING STATUS ===================================== */}\n          <div className=\"mx-4 my-4\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n          </div>\n\n          {props.thisClaim.last_claim_status === ClaimStatus.PENDING && (\n            <div className=\"flex items-center gap-2 px-2\">\n              <button\n                className={`px-4 py-2 font-semibold text-gray-900 rounded inline-flex items-center space-x-2 focus:outline-none bg-gray-100 hover:bg-gray-300`}\n                onClick={() => {\n                  props.close();\n                }}\n              >\n                <MdArrowBack className=\"w-5 h-5\" />\n                <span>Back to list</span>\n              </button>\n              <button\n                className={`px-4 py-2 font-semibold text-red-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-red-700 hover:bg-red-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.REJECTED);\n                }}\n              >\n                <MdCancel className=\"w-5 h-5\" />\n                <span>Reject</span>\n              </button>\n              <button\n                className={`px-4 py-2 font-semibold text-blue-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-blue-700 hover:bg-blue-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.ACCEPTED);\n                }}\n              >\n                <FaRegCheckCircle className=\"w-5 h-5\" />\n                <span>Accept</span>\n              </button>\n            </div>\n          )}\n        </section>\n      )}\n      {/* END FOOTER INITIAL ========================================== */}\n\n      {/* ======================================================== */}\n      {/* FOOTER RESPONSE ========================================== */}\n      {actionTaken && (\n        <section className=\"my-5 overflow-x-auto\">\n          <div className=\"italic text-gray-700 text-base my-1 mx-2\">\n            Selected decision:{\" \"}\n            <span\n              className={`font-semibold text-lg ${\n                actionTaken === ClaimDecisionStatus.ACCEPTED\n                  ? \"text-blue-700\"\n                  : \"text-yellow-800\"\n              }`}\n            >\n              {actionTaken === ClaimDecisionStatus.ACCEPTED\n                ? \"Approved\"\n                : \"Rejected\"}\n            </span>\n          </div>\n          {/* right part */}\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your decision...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  formError && formError.element === \"comment\" ? \"red\" : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={responseMsg}\n                onChange={(e) => {\n                  setResponseMsg(e.target.value);\n                  setFormError(null);\n                }}\n                disabled={loadingRequest}\n              ></textarea>\n              {formError && formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  setResponseMsg(\"\");\n                  setActionTaken(null);\n                  setFormError(null);\n                }}\n                disabled={loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={loadingRequest}\n                onClick={() =>\n                  window.confirm(\n                    `Are you sure you want to ${\n                      actionTaken === ClaimDecisionStatus.ACCEPTED\n                        ? \"approve\"\n                        : \"rejected\"\n                    } this document?`\n                  ) && handleVerify()\n                }\n              >\n                {loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n          {/* end right part */}\n        </section>\n      )}\n      {/* END FOOTER RESPONSE ========================================== */}\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n}: StoreState): {\n  auth: Auth;\n} => {\n  return {\n    auth: auth,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    evaluateClaim,\n    reAssessApplication,\n    PushPopupAlert,\n  })(AdminClaimAppView)\n);\n","import React from \"react\";\nimport axios from \"axios\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdCancel, MdInfoOutline } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { adminDisplayClaimTitle } from \".\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport { evaluateClaim } from \"../../../actions/claiming\";\nimport { verifyDocument } from \"../../../actions/document\";\nimport { VerifyDocumentInterface } from \"../../../actions/users\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  claimReasonInterface,\n  ClaimStatus,\n  ClaimTypesInterfaceAPI,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport {\n  DocValidationStatusInterface,\n  UserDocumentsInterface,\n} from \"../../../shared/interfaces\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { getFileType, isFileImage, showDate } from \"../../../utils/functions\";\nimport { isClaimEvaluated } from \"../ClaimDocView\";\nimport ViewPDF from \"../../../components/ViewPDF/ViewPDF\";\n\nexport type claimResponseBody = {\n  sub_claim_id: string;\n  evaluation_comment: string;\n  evaluated_by: string;\n  evaluator_name: string;\n  evaluator_email: string;\n  decision_taken_status: ClaimDecisionStatus;\n};\n\ntype AdminClaimDocViewProps = {\n  thisDoc: UserDocumentsInterface;\n  documentCategories: DocumentReducerInterface;\n  thisClaim: CandidateClaimInterface;\n  claimReasons: claimReasonInterface[] | null;\n  candidateId: string;\n  claimTypes: ClaimTypesInterfaceAPI[];\n  viewImage: boolean;\n  setViewImage: (value: boolean) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  actionTaken: ClaimDecisionStatus | null;\n  setActionTaken: (value: ClaimDecisionStatus | null) => void;\n  responseMsg: string;\n  setResponseMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX ==================\n  auth: Auth;\n  verifyDocument: Function;\n  evaluateClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst AdminClaimDocView: React.FC<AdminClaimDocViewProps> = (props) => {\n  const handleVerify = async () => {\n    if (!props.actionTaken) {\n      props.setFormError({\n        element: \"action\",\n        msg: \"Action is required!\",\n      });\n      return props.setLoadingRequest(false);\n    }\n\n    if (isEmptyOrSpaces(props.responseMsg)) {\n      props.setFormError({\n        element: \"comment\",\n        msg: \"Reason of rejection is required\",\n      });\n      return props.setLoadingRequest(false);\n    }\n\n    let subClaim = props.thisClaim.claims.find(\n      (item) => item.level === props.thisClaim.claim_level\n    );\n\n    if (subClaim) {\n      props.setLoadingRequest(true);\n      const api_body: claimResponseBody = {\n        sub_claim_id: subClaim._id,\n        evaluation_comment: props.responseMsg,\n        evaluated_by: props.auth.user.user_id,\n        decision_taken_status: props.actionTaken,\n        evaluator_name: props.auth.user.fname + \" \" + props.auth.user.lname,\n        evaluator_email: props.auth.user.email,\n      };\n\n      try {\n        const res = await axios.put<CandidateClaimInterface>(\n          `${API.CLAIMING}/user/evaluate/${props.thisClaim._id}`,\n          api_body\n        );\n        if (res) {\n          console.log({ evaluate_claim_res: res });\n          props.evaluateClaim(res.data);\n          // REVALIDATED DOCUMENT IF IT IS APPROVED =========================\n          if (props.actionTaken === ClaimDecisionStatus.ACCEPTED) {\n            await FC_DocValidation();\n          }\n          props.PushPopupAlert({\n            title: `Claim responded successfully!`,\n            theme: PopupAlertTheme.success,\n          });\n          // setDocumentId(\"null\");\n          props.setResponseMsg(\"\");\n          props.setActionTaken(null);\n        }\n      } catch (error) {\n        console.error(error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      props.setLoadingRequest(false);\n    }\n  };\n\n  const FC_DocValidation = async () => {\n    const api_body: VerifyDocumentInterface = {\n      user_id: props.thisClaim.user._id,\n      doc_id: props.thisClaim.claiming_on_id,\n      validation_status:\n        props.actionTaken === ClaimDecisionStatus.ACCEPTED\n          ? DocValidationStatusInterface.APPROVED\n          : DocValidationStatusInterface.REJECTED,\n      validated_by: {\n        user_id: props.auth.user.user_id,\n        comment: props.responseMsg,\n        validation_status:\n          props.actionTaken === ClaimDecisionStatus.ACCEPTED\n            ? DocValidationStatusInterface.APPROVED\n            : DocValidationStatusInterface.REJECTED,\n      },\n      in_education: false,\n      disability: false,\n      expiration_date: \"this.state.expiration_date\",\n    };\n    const api_redux: VerifyDocumentInterface = {\n      user_id: props.thisClaim.user._id,\n      doc_id: props.thisClaim.claiming_on_id,\n      validation_status:\n        props.actionTaken === ClaimDecisionStatus.ACCEPTED\n          ? DocValidationStatusInterface.APPROVED\n          : DocValidationStatusInterface.REJECTED,\n      validated_by: {\n        user_id: props.auth.user.user_id,\n        comment: props.responseMsg,\n        validation_status:\n          props.actionTaken === ClaimDecisionStatus.ACCEPTED\n            ? DocValidationStatusInterface.APPROVED\n            : DocValidationStatusInterface.REJECTED,\n        date: \"\",\n      },\n      in_education: false,\n      disability: false,\n      expiration_date: \"this.state.expiration_date\",\n    };\n\n    try {\n      const res = await axios.post<VerifyDocumentInterface>(\n        `${API.USER}/docs/validateuserdoc`,\n        api_body\n      );\n      if (res) {\n        props.verifyDocument(api_redux);\n        await FC_shortListing(props.thisClaim.user._id);\n        // setDocumentId(\"null\");\n      }\n    } catch (error) {\n      console.error(error);\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  const FC_shortListing = async (candidate_id: string) => {\n    try {\n      const res = await axios.patch(\n        `${API.APPLICATION}/apply/doccheckshortlist/${candidate_id}`,\n        {\n          email: props.thisClaim.user.email,\n          phone_number: props.thisClaim.user.phone_number,\n        }\n      );\n      console.log({ res });\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2\">\n              <span className={`italic text-gray-600`}>Names:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.thisClaim.user.user_info.fname +\n                  \" \" +\n                  props.thisClaim.user.user_info.lname}\n              </span>\n            </div>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewImage(!props.viewImage)}\n            >\n              {props.viewImage ? \"Hide\" : \"View\"}\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <span className={`italic text-gray-600`}>Title:</span>\n            <span className=\"text-gray-800 font-bold text-2xl\">\n              {/* {ClaimGetDocTitle(props.documentCategories, props.thisDoc).main} */}\n              {props.thisClaim.user.details.filter(\n                (item) => item.validation_status !== \"waiting\"\n              ).length > 0\n                ? adminDisplayClaimTitle(\n                    props.documentCategories,\n                    props.thisClaim.user.details.filter(\n                      (item) => item.validation_status !== \"waiting\"\n                    ),\n                    props.thisClaim\n                  )\n                : \"-\"}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span className=\"font-bold text-yellow-900 rounded px-3 py-1\">\n              {props.thisClaim.previous\n                ? capitalizeFirstLetter(props.thisClaim.previous.status)\n                : capitalizeFirstLetter(props.thisDoc.validation_status)}\n            </span>\n          </div>\n          {/* <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {props.thisClaim.previous.evaluater.name}\n            </span>\n          </div> */}\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisClaim.previous\n                ? props.thisClaim.previous.reason\n                : props.thisDoc.validated_by.commet}\n            </span>\n          </div>\n\n          {/* DISPLAY IMAGE ==================================================== */}\n          {props.viewImage && (\n            <div className=\"w-full my-1 animate__animated animate__fadeIn\">\n              {isFileImage(getFileType(props.thisDoc.files)) ? (\n                <img\n                  src={API.AUTH_FILES + props.thisDoc.files}\n                  alt=\"Applicant document\"\n                  className={`w-full md:w-auto h-auto md:max-h-screen mx-auto`}\n                  id=\"doc-img\"\n                />\n              ) : (\n                <ViewPDF\n                  file_url={API.AUTH_FILES + props.thisDoc.files}\n                  class_name={`w-full h-screen md:max-h-screen mx-auto`}\n                  frame_title={\"application PDF file view\"}\n                />\n              )}\n            </div>\n          )}\n          {/* END DISPLAY IMAGE ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVEL 1 DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section\n              className=\"flex flex-col px-2 pt-3\"\n              key={index + claim._id}\n            >\n              <div className=\"text-gray-700 italic font-bold\">\n                Claim Comment (level {index + 1})\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2 mt-1 border rounded px-4 py-1 bg-gray-50\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt)}\n                </span>\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-700 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    {/* <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div> */}\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n            </section>\n          ))}\n        {/* END CLAIM LEVEL 1 DETAILS ==================================================== */}\n      </div>\n\n      {/* FOOTER INITIAL ========================================== */}\n      {!props.actionTaken && (\n        <section className=\"flex items-center justify-between bg-gray-50 rounded mt-3\">\n          {/* SHOWING STATUS ===================================== */}\n          <div className=\"mx-4\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n          </div>\n\n          {props.thisClaim.last_claim_status === ClaimStatus.PENDING && (\n            <div className=\"flex items-center gap-2 px-2\">\n              <button\n                className={`px-4 py-2 font-semibold text-red-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-red-700 hover:bg-red-800`}\n                onClick={() => {\n                  props.setActionTaken(ClaimDecisionStatus.REJECTED);\n                }}\n              >\n                <MdCancel className=\"w-5 h-5\" />\n                <span>Reject</span>\n              </button>\n              <button\n                className={`px-4 py-2 font-semibold text-blue-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-blue-700 hover:bg-blue-800`}\n                onClick={() => {\n                  props.setActionTaken(ClaimDecisionStatus.ACCEPTED);\n                }}\n              >\n                <FaRegCheckCircle className=\"w-5 h-5\" />\n                <span>Accept</span>\n              </button>\n            </div>\n          )}\n        </section>\n      )}\n      {/* END FOOTER INITIAL ========================================== */}\n\n      {/* ======================================================== */}\n      {/* FOOTER RESPONSE ========================================== */}\n      {props.actionTaken && (\n        <section className=\"my-5 overflow-x-auto\">\n          <div className=\"italic text-gray-700 text-base my-1 mx-2\">\n            Selected decision:{\" \"}\n            <span\n              className={`font-semibold text-lg ${\n                props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                  ? \"text-blue-700\"\n                  : \"text-yellow-800\"\n              }`}\n            >\n              {props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                ? \"Approved\"\n                : \"Rejected\"}\n            </span>\n          </div>\n          {/* right part */}\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your decision...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.responseMsg}\n                onChange={(e) => {\n                  props.setResponseMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setResponseMsg(\"\");\n                  props.setActionTaken(null);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() =>\n                  window.confirm(\n                    `Are you sure you want to ${\n                      props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                        ? \"approve\"\n                        : \"rejected\"\n                    } this document?`\n                  ) && handleVerify()\n                }\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n          {/* end right part */}\n        </section>\n      )}\n      {/* END FOOTER RESPONSE ========================================== */}\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n}: StoreState): {\n  auth: Auth;\n} => {\n  return {\n    auth: auth,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    evaluateClaim,\n    verifyDocument,\n    PushPopupAlert,\n  })(AdminClaimDocView)\n);\n","import React, { Component, Fragment } from \"react\";\nimport { MdArrowBack, MdArrowRight, MdInfoOutline } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Auth, loadCourses, PushPopupAlert } from \"../../../actions\";\nimport {\n  getAllClaims,\n  getAllApplications,\n  getClaimReasons,\n  getAllAnswers,\n  FC_GetAllClaims,\n} from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport { getPositions } from \"../../../actions/settings\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport TableLoading from \"../../../components/Loading/TableLoading\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport { SideNavigation } from \"../../../components/Navigation/SideNavigation\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  SessionPlanInterface,\n  PositionAPI,\n  allClaimApplicationInterface,\n  CandidateClaimInterface,\n  PlansTypeKeys,\n  ClaimDecisionStatus,\n  ClaimTypesInterface,\n  course,\n  ClaimStatus,\n  CandidateClaimTableInterface,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { UserDocumentsInterface } from \"../../../shared/interfaces\";\nimport { DATE } from \"../../../utils/functions\";\nimport { getClaimById, whichClaimStatus, whichClaimType } from \"../Candidate\";\nimport { getCourseById, getCourseIdBySheetId } from \"../Candidate/FormExamList\";\nimport ClaimHeaderTitle from \"../ClaimHeaderTitle\";\nimport AdminClaimAppView from \"./AdminClaimAppView\";\nimport AdminClaimDocView from \"./AdminClaimDocView\";\nimport AdminClaimExamView from \"./AdminClaimExamView\";\nimport AdminFilterByType, {\n  filterClaimsByClaimType,\n} from \"./AdminFilterByType\";\nimport searchData from \"../../../utils/search\";\n\n// export const getUserDocuments = (\n//   userList: UserInterface[],\n//   user_id: String\n// ): { user: UserInterface; document: UserDocumentsInterface[] } | null => {\n//   const thisUser = userList.find((item) => item.user_id === user_id);\n//   if (thisUser) {\n//     const thisDoc = thisUser.details.filter(\n//       (item) => item.validation_status !== \"waiting\"\n//     );\n//     return { user: thisUser, document: thisDoc };\n//   }\n//   return null;\n// };\n\nexport const adminDisplayClaimTitle = (\n  documentCategories: DocumentReducerInterface,\n  candidateDocuments: UserDocumentsInterface[],\n  thisClaim: CandidateClaimInterface\n): string => {\n  let result: string = \"\";\n\n  // CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n  if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n    let thisDoc = candidateDocuments.find(\n      (item) => item.doc_id === thisClaim.claiming_on_id\n    );\n    result = thisDoc\n      ? AdminClaimGetDocTitle(documentCategories, thisDoc).main\n      : \"Document not found\";\n  }\n  // END CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n\n  return result;\n};\n\nexport const AdminClaimGetDocTitle = (\n  documentCategories: DocumentReducerInterface,\n  doc: UserDocumentsInterface\n): { category: string; sub_category: string; field: string; main: string } => {\n  let DocCategory: string = \"\",\n    DocSubCategory: string = \"\",\n    DocField: string = \"\",\n    DocTitle: string = \"\";\n  if (\n    doc.sub_category_id &&\n    doc.sub_category_id.length > 0 &&\n    documentCategories.documentSubCategory\n  ) {\n    DocTitle = documentCategories.documentSubCategory.filter(\n      (c) => c.user_detail_subcategory_id === doc.sub_category_id\n    )[0].title;\n    DocSubCategory = DocTitle;\n  } else if (\n    doc.category_id.length > 0 &&\n    documentCategories.documentCategory\n  ) {\n    DocTitle = documentCategories.documentCategory.filter(\n      (c) => c.user_detail_category_id === doc.category_id\n    )[0].title;\n    DocCategory = DocTitle;\n  }\n  if (\n    doc.category_subcategory_data.length > 0 &&\n    documentCategories.documentFields\n  ) {\n    DocField = documentCategories.documentFields.filter(\n      (c) => c._id === doc.category_subcategory_data\n    )[0].title;\n    DocTitle += \" in \" + DocField;\n  }\n\n  return {\n    category: DocCategory,\n    sub_category: DocSubCategory,\n    field: DocField,\n    main: DocTitle,\n  };\n};\n\nexport const getApplicationById = (\n  allApplications: allClaimApplicationInterface[] | null,\n  systemPositions: PositionAPI[] | null,\n  application_id: String\n): {\n  application: allClaimApplicationInterface;\n  position: PositionAPI;\n} | null => {\n  if (allApplications) {\n    let thisApplication = allApplications.find(\n      (item) => item._id === application_id\n    );\n    if (thisApplication && systemPositions) {\n      let thisPosition = systemPositions.find(\n        (item) => item.position_id === thisApplication!.position\n      );\n      if (thisPosition) {\n        return { application: thisApplication, position: thisPosition };\n      }\n    }\n  }\n  return null;\n};\n\ntype AppProps = {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  systemPositions: PositionAPI[] | null;\n  courses: course[] | null;\n  loadCourses: Function;\n  getPositions: Function;\n  getClaimReasons: Function;\n  getAllApplications: Function;\n  getAllClaims: Function;\n  getAllAnswers: Function;\n  GetAllSessionPlans: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  verifyAllDocument: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype AppState = {\n  loading: boolean;\n  loadingData: boolean;\n  thisPeriod: SessionPlanInterface | null;\n  viewClaim: boolean;\n  periodChanged: boolean;\n  claimId: string | null;\n  claimType: string | null;\n  candidateId: string | null;\n  searchClaim: string;\n\n  // FOR FORM ================\n  viewImage: boolean;\n  loadingRequest: boolean;\n  actionTaken: ClaimDecisionStatus | null;\n  responseMsg: string;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  filterByStatus: \"all\" | ClaimStatus;\n  selected_title: string;\n  show_titles_filter: boolean;\n  search_title: string;\n};\n\nclass Index extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingData: false,\n      thisPeriod: null,\n      viewClaim: false,\n      periodChanged: false,\n      claimId: null,\n      claimType: null,\n      candidateId: null,\n      searchClaim: \"\",\n      filterByStatus: ClaimStatus.PENDING,\n\n      // FOR FORM ================\n      viewImage: true,\n      loadingRequest: false,\n      actionTaken: null,\n      responseMsg: \"\",\n      formError: null,\n      selected_title: \"\",\n      show_titles_filter: false,\n      search_title: \"\",\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingData = (value: boolean) => {\n    this.setState({ loadingData: value });\n  };\n\n  setPeriodChanged = (value: boolean) => {\n    this.setState({ periodChanged: value });\n  };\n\n  setThisPeriod = (value: SessionPlanInterface | null) => {\n    this.setState({ thisPeriod: value });\n  };\n\n  setViewClaim = (value: boolean) => {\n    this.setState({ viewClaim: value });\n  };\n\n  // ------------------------------\n  setClaimId = (value: string | null) => {\n    this.setState({ claimId: value });\n  };\n  setClaimType = (value: string | null) => {\n    this.setState({ claimType: value });\n  };\n  setCandidateId = (value: string | null) => {\n    this.setState({ candidateId: value });\n  };\n  setViewImage = (value: boolean) => {\n    this.setState({ viewImage: value });\n  };\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n\n  setActionTaken = (value: ClaimDecisionStatus | null) => {\n    this.setState({ actionTaken: value });\n  };\n\n  setResponseMsg = (value: string) => {\n    this.setState({ responseMsg: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n\n  setDefaultSession = (sessions: SessionPlanInterface[]) => {\n    // SETTING ACTIVE SESSION ==========================\n    if (this.state.thisPeriod === null) {\n      let thisSession = sessions.find((item) => item.is_active === true);\n      this.setThisPeriod(thisSession ? thisSession : sessions[0]);\n      this.loadsAllClaims(thisSession ? thisSession : sessions[0]);\n    }\n  };\n\n  setSearchClaim = (value: string) => {\n    this.setState({ searchClaim: value });\n  };\n\n  loadsAllClaims = (thisSession: SessionPlanInterface) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (this.props.claiming.allClaims === null) {\n      this.props.getAllClaims(\n        2,\n        thisSession._id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    }\n  };\n\n  loadsApplications = (application_id: string) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (\n      !this.props.claiming.allApplications.find(\n        (item) => item._id === application_id\n      )\n    ) {\n      this.props.getAllApplications(\n        application_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    }\n  };\n\n  loadsController = (file_id: string, claimType: PlansTypeKeys) => {\n    if (claimType === PlansTypeKeys.APPLICATION)\n      this.loadsApplications(file_id);\n    if (claimType === PlansTypeKeys.EXAMINATION) this.loadsAlAnswers(file_id);\n  };\n\n  loadsAlAnswers = (answersheet_id: string) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (\n      !this.props.claiming.allAnswer.find(\n        (item) => item.answer_sheet_id === answersheet_id\n      )\n    ) {\n      this.props.getAllAnswers(\n        answersheet_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    }\n  };\n\n  componentDidMount = () => {\n    // FC_GetAllClaims();\n\n    // LOADING APPLICATION SESSION ====================================\n    if (this.props.application_sessions === null) {\n      this.props.GetAllSessionPlans(\n        (status: boolean, msg: string, data?: SessionPlanInterface[]) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data && data.length > 0) {\n              this.setDefaultSession(data);\n            }\n          }\n        }\n      );\n    } else if (this.props.application_sessions.length > 0) {\n      this.setDefaultSession(this.props.application_sessions);\n    }\n\n    // LOADING DOCUMENT CATEGORIES ==========================\n    if (!this.props.documentReducer.documentCategory) {\n      this.props.getDocumentCategory();\n      this.setLoading(false);\n    }\n\n    // LOADING DOCUMENT CLARIFICATIONS ==========================\n    if (!this.props.documentReducer.documentSubCategory) {\n      this.props.getDocumentSubCategory();\n      this.setLoading(false);\n    }\n\n    // LOADING DOCUMENT FIELDS ==========================\n    if (!this.props.documentReducer.documentFields) {\n      this.props.getDocumentFields();\n      this.setLoading(false);\n    }\n\n    if (this.props.systemPositions === null) {\n      this.props.getPositions((status: boolean, msg: string) => {\n        this.setLoading(status);\n        console.log({ status: status, msg: msg });\n        if (msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n\n    if (this.props.claiming.claimReasons === null) {\n      this.props.getClaimReasons((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (!status) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n\n    if (\n      this.props.courses === null ||\n      (this.props.courses.length === 0 && this.state.loading)\n    ) {\n      this.props.loadCourses(this.setLoading);\n      this.setLoading(false);\n    } else {\n      this.setLoading(false);\n    }\n  };\n\n  displayClaimTitle = (\n    thisClaim: CandidateClaimInterface\n  ): string | JSX.Element => {\n    let result: string = thisClaim.claiming_on_id;\n    if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      let thisDocs = thisClaim.user.details.filter(\n        (item) => item.validation_status !== \"waiting\"\n      );\n      result =\n        thisDocs.length > 0\n          ? adminDisplayClaimTitle(\n              this.props.documentReducer,\n              thisDocs,\n              thisClaim\n            )\n          : \"Document not found\";\n    }\n    if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n      if (this.props.claiming.allApplications) {\n        let thisApplication = this.props.claiming.allApplications.find(\n          (item) => item._id === thisClaim.claiming_on_id\n        );\n        if (\n          thisApplication &&\n          this.props.claiming.allApplications &&\n          this.props.systemPositions\n        ) {\n          let thisPosition = this.props.systemPositions.find(\n            (item) => item.position_id === thisApplication!.position\n          );\n          if (thisPosition) {\n            result = thisPosition.position_title;\n          } else {\n            result = \"Application not found\";\n          }\n        }\n      }\n    }\n\n    if (\n      thisClaim.type_key === PlansTypeKeys.EXAMINATION &&\n      this.props.courses &&\n      this.props.claiming.allAnswer\n    ) {\n      let thisAnswer = getCourseIdBySheetId(\n        this.props.claiming.allAnswer,\n        thisClaim.claiming_on_id\n      );\n      if (thisAnswer && getCourseById(this.props.courses, thisAnswer.course)) {\n        result =\n          \"Exam of \" +\n          getCourseById(this.props.courses, thisAnswer.course)!.course_name;\n      } else {\n        result = \"Unknown exam\";\n      }\n    }\n\n    return result;\n  };\n\n  onPeriodChange = (period_id: string) => {\n    this.setPeriodChanged(true);\n    this.props.getAllClaims(2, period_id, (status: boolean, msg: string) => {\n      !status && this.setPeriodChanged(false);\n      this.setLoadingData(status);\n      if (status === false && msg.length) {\n        this.props.PushPopupAlert({\n          title: msg,\n          theme: PopupAlertTheme.danger,\n        });\n      }\n    });\n  };\n\n  getLastClaimDate = (claim: CandidateClaimInterface): string => {\n    let result: string = DATE(claim.createdAt);\n    const claimsLength: number = claim.claims.length;\n    result = DATE(claim.claims[claimsLength - 1].createdAt);\n    return result;\n  };\n\n  DATA_TITLES = (DAT_ClaimByStatus: CandidateClaimInterface[]): string[] => {\n    let response: string[] = [];\n    for (const item of DAT_ClaimByStatus) {\n      if (response.find((itm) => itm === item.title) === undefined) {\n        response.push(item.title);\n      }\n    }\n    return response;\n  };\n\n  FindClaimsNumber = (\n    title: string,\n    DAT_ClaimByStatus: CandidateClaimInterface[]\n  ): number => {\n    let count = DAT_ClaimByStatus.filter((itm) => itm.title === title).length;\n    return count;\n  };\n\n  render() {\n    if (this.props.application_sessions === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    if (this.props.application_sessions.length === 0) {\n      return (\n        <div className=\"bg-yellow-100 rounded flex flex-col items-center justify-center p-6 my-8 text-yellow-900 border border-yellow-900\">\n          <MdInfoOutline className=\"text-6xl md:text-9xl\" />\n          <div className=\"text-center flex flex-col\">\n            <span className=\"text-2xl md:text-4xl font-extrabold\">\n              No active session\n            </span>\n            <span className=\"text-lg\">\n              Please Wait for the system to publish the sessions or contact the\n              administrator\n            </span>\n          </div>\n        </div>\n      );\n    }\n\n    if (this.props.claiming.allClaims === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    console.log(\"=================viewClaim===================\");\n    console.log({\n      allClaims: this.props.claiming.allClaims,\n      viewClaim: this.state.viewClaim,\n      candidateId: this.state.candidateId,\n      claimId: this.state.claimId,\n      // getClaimById: getClaimById(\n      //   this.props.claiming.allClaims,\n      //   this.state.claimId\n      // ),\n      claimTypes: this.props.claiming.claimTypes,\n    });\n    console.log(\"==================viewClaim==================\");\n\n    const DATA_ClaimByType = filterClaimsByClaimType(\n      this.props.claiming.allClaims,\n      this.props.claiming.selectedClaimType\n    );\n\n    const DAT_ClaimByStatus =\n      this.state.filterByStatus !== \"all\"\n        ? DATA_ClaimByType.filter(\n            (item) => item.last_claim_status === this.state.filterByStatus\n          )\n        : DATA_ClaimByType;\n    const DATA_BY_TITLE = DAT_ClaimByStatus.filter(\n      (itm) =>\n        itm.title === this.state.selected_title ||\n        this.state.selected_title === \"\"\n    );\n    return (\n      <Fragment>\n        <div>\n          {/* SIDE NAVIGATION */}\n          {!this.state.viewClaim && (\n            <SideNavigation>\n              {/* FILTER SECTION */}\n              <AdminFilterByType loadingClaims={this.state.loadingData} />\n              {/* END FILTER SECTION */}\n            </SideNavigation>\n          )}\n          {/* END SIDE NAVIGATION */}\n\n          {/* 00000000000000000000000000000000000 */}\n\n          {/* CLAIM TITLE ===================================== */}\n          {!this.state.viewClaim && (\n            <ClaimHeaderTitle\n              headerTitle={`${\n                this.props.claiming.selectedClaimType === \"all\"\n                  ? \"All\"\n                  : this.props.claiming.selectedClaimType ===\n                    PlansTypeKeys.DOCUMENT_VALIDATION\n                  ? \"Documents\"\n                  : this.props.claiming.selectedClaimType ===\n                    PlansTypeKeys.APPLICATION\n                  ? \"Applications\"\n                  : this.props.claiming.selectedClaimType ===\n                    PlansTypeKeys.EXAMINATION\n                  ? \"Exam\"\n                  : this.props.claiming.selectedClaimType ===\n                    PlansTypeKeys.MARKS_PUBLICATION\n                  ? \"Marks publication\"\n                  : this.props.claiming.selectedClaimType ===\n                    PlansTypeKeys.PLACEMENT_TRANSFER\n                  ? \"Placements\"\n                  : \"\"\n              } Claiming`}\n              loading={this.state.loadingData}\n              loadingSession={this.state.loading}\n              thisPeriod={this.state.thisPeriod}\n              setThisPeriod={this.setThisPeriod}\n              setLoadingSession={this.setLoadingData}\n              application_sessions={this.props.application_sessions}\n              onPeriodChange={this.onPeriodChange}\n              periodChanged={this.state.periodChanged}\n            />\n          )}\n          {/* END CLAIM TITLE ===================================== */}\n\n          {/* 00000000000000000000000000000000000 */}\n\n          {/* CLAIM CONTENT LIST ===================================== */}\n          {!this.state.viewClaim && (\n            <section className=\"bg-white w-full p-1\">\n              {/* FILTER FORM =================================== */}\n              <section className=\"flex flex-col sm:flex-row items-center gap-2 w-full my-2\">\n                <div className=\"w-full\">\n                  <input\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                      this.setSearchClaim(e.target.value)\n                    }\n                    type=\"text\"\n                    className=\"input-white h-10 text-sm border-2 border-gray-400 focus:border-gray-500 w-full\"\n                    placeholder={`Search claim by title or type`}\n                    value={this.state.searchClaim}\n                    disabled={\n                      filterClaimsByClaimType(\n                        this.props.claiming.allClaims,\n                        this.props.claiming.selectedClaimType\n                      ).length > 0\n                        ? false\n                        : true\n                    }\n                  />\n                </div>\n                <div className=\"w-full\">\n                  <select\n                    className=\"input-white h-10 text-sm border-2 border-gray-400 focus:border-gray-500 w-full\"\n                    placeholder={`Filter by status`}\n                    onChange={(e: React.ChangeEvent<HTMLSelectElement>) =>\n                      this.setState({\n                        filterByStatus: e.target.value as \"all\" | ClaimStatus,\n                      })\n                    }\n                    value={this.state.filterByStatus}\n                  >\n                    <option value=\"\" disabled>\n                      Filter by status\n                    </option>\n                    <option value=\"all\">All Status</option>\n                    <option value=\"PENDING\">Pending</option>\n                    <option value=\"EVALUATED\">Evaluated</option>\n                  </select>\n                </div>\n                <div\n                  onClick={() => this.setState({ show_titles_filter: true })}\n                  className=\"w-full border-2 border-gray-400 rounded px-3 py-2 text-sm cursor-pointer cursor-pointer hover:bg-blue-100 hover:border-blue-600\"\n                >\n                  <span>\n                    {this.state.selected_title === \"\"\n                      ? \"Filter by claim type\"\n                      : this.state.selected_title}\n                  </span>\n                </div>\n              </section>\n              {/* END FILTER FORM =================================== */}\n              <div className=\"w-full overflow-x-auto\">\n                <table className=\"w-full shadow\" id=\"report_content\">\n                  <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                    <tr>\n                      <td className=\"px-2 py-2\">#</td>\n                      <td className=\"px-2 py-2\">Applicant names</td>\n                      <td className=\"px-2 py-2\">Claim title</td>\n                      <td className=\"px-2 py-2\">Claim date</td>\n                      {this.props.claiming.selectedClaimType === \"all\" && (\n                        <td className=\"px-2 py-2\">Claim type</td>\n                      )}\n                      <td className=\"px-2 py-2\">Claim level</td>\n                      <td className=\"px-2 py-2\">Claim status</td>\n                      <td className=\"px-2 py-2\"></td>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {!this.props.claiming.allClaims ||\n                    !this.props.claiming.claimTypes ||\n                    !this.props.systemPositions ||\n                    this.state.loadingData ? (\n                      <TableLoading\n                        cols={\n                          this.props.claiming.selectedClaimType === \"all\"\n                            ? 8\n                            : 7\n                        }\n                      />\n                    ) : searchData(DATA_BY_TITLE, this.state.searchClaim)\n                        .length <= 0 ? (\n                      <tr\n                        className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                        key={Math.random()}\n                      >\n                        <td className=\"px-3 py-1\" colSpan={8}>\n                          <NoResult\n                            theme={NoResultThemes.Light}\n                            value={\"No claim found!\"}\n                          />\n                        </td>\n                      </tr>\n                    ) : (\n                      (\n                        searchData(\n                          DATA_BY_TITLE.map((item) => ({\n                            claiming_on_id: item.claiming_on_id,\n                            type_key: item.type_key,\n                            period_id: item.period_id,\n                            last_claim_status: item.last_claim_status,\n                            default_claim_resaons: item.default_claim_resaons,\n                            claim_level: item.claim_level,\n                            claims: item.claims,\n                            createdAt: item.createdAt,\n                            updatedAt: item.updatedAt,\n                            _id: item._id,\n                            id: item.id,\n                            previous: item.previous,\n                            title: item.title,\n                            user: item.user,\n                            institute_id: item.institute_id,\n                            user_id: item.user._id,\n                            n_eduction: item.user.n_eduction,\n                            disability: item.user.disability,\n                            n_id: item.user.n_id,\n                            phone_number: item.user.phone_number,\n                            email: item.user.email,\n                            fname: item.user.user_info.fname,\n                            lname: item.user.user_info.lname,\n                            sex: item.user.user_info.sex,\n                            photo: item.user.user_info.photo,\n                            sector: item.user.user_info.sector,\n                            district: item.user.user_info.district,\n                            province: item.user.user_info.province,\n                          })),\n                          this.state.searchClaim\n                        ) as CandidateClaimTableInterface[]\n                      ).map((claim: CandidateClaimTableInterface, index) => (\n                        <tr\n                          className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                          key={index + claim._id}\n                          onClick={() => {\n                            this.setViewClaim(true);\n                            this.setClaimId(claim._id);\n                            this.setCandidateId(claim.user._id);\n                            this.setClaimType(\n                              whichClaimType(claim)\n                                ? whichClaimType(claim)!\n                                : null\n                            );\n                            this.loadsController(\n                              claim.claiming_on_id,\n                              claim.type_key\n                            );\n                          }}\n                        >\n                          <td className=\"px-3 py-1\">{index + 1}</td>\n                          <td className=\"px-3 py-1 whitespace-nowrap\">\n                            {claim.fname + \" \" + claim.lname}\n                          </td>\n                          <td className=\"px-3 py-1 whitespace-nowrap\">\n                            {claim.title}\n                          </td>\n                          <td className=\"px-3 py-1 whitespace-nowrap\">\n                            {this.getLastClaimDate(claim)}\n                          </td>\n                          {this.props.claiming.selectedClaimType === \"all\" && (\n                            <td className=\"px-3 py-1 whitespace-nowrap\">\n                              {whichClaimType(claim)\n                                ? capitalizeFirstLetter(whichClaimType(claim)!)\n                                : \"-\"}\n                            </td>\n                          )}\n                          <td className=\"px-3 py-1 whitespace-nowrap italic\">\n                            Level {claim.claim_level}\n                          </td>\n                          <td className=\"px-3 py-1 whitespace-nowrap\">\n                            <span\n                              className={`inline-block rounded-full duration-300 text-xs font-semibold px-3 py-1 ${\n                                whichClaimStatus(claim).classes\n                              }`}\n                            >\n                              {whichClaimStatus(claim).status}\n                            </span>\n                          </td>\n                          <td className=\"px-3 py-1 text-center whitespace-nowrap\">\n                            <button className=\"btn bg-blue-500 text-white group-hover:bg-blue-600\">\n                              View\n                            </button>\n                          </td>\n                        </tr>\n                      ))\n                    )}\n                  </tbody>\n                </table>\n              </div>\n            </section>\n          )}\n          {/* END CLAIM CONTENT LIST ===================================== */}\n\n          {/* 00000000000000000000000000000000000 */}\n\n          {/* view claim */}\n          {this.state.viewClaim &&\n            this.state.candidateId &&\n            this.props.claiming.allClaims &&\n            this.state.claimId &&\n            getClaimById(this.props.claiming.allClaims, this.state.claimId) &&\n            this.props.claiming.claimTypes && (\n              <section className=\"bg-white w-full my-4\">\n                {/* VIEW CLAIM HEADER =============================== */}\n                <section className=\"flex items-center gap-2 py-2 border-b\">\n                  <button\n                    className={`ml-3 bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n                      this.state.loadingRequest\n                        ? \"cursor-not-allowed\"\n                        : \"cursor-pointer\"\n                    } animate__animated animate__fadeIn`}\n                    disabled={this.state.loadingRequest}\n                    onClick={() => {\n                      this.setViewClaim(false);\n                      this.setViewImage(true);\n                      this.setLoadingRequest(false);\n                      this.setActionTaken(null);\n                      this.setResponseMsg(\"\");\n                      this.setFormError(null);\n                    }}\n                  >\n                    <MdArrowBack className=\"w-7 h-7\" />\n                  </button>\n                  <div className={`text-gray-600 font-extrabold text-2xl px-2`}>\n                    Viewing claim\n                  </div>\n                </section>\n                {/* END VIEW CLAIM HEADER =============================== */}\n\n                {this.state.loading && (\n                  <div className=\"my-4\">\n                    <Loading />\n                  </div>\n                )}\n\n                {!this.state.loading && (\n                  <section className=\"bg-gray-200\">\n                    {/* FOR DOCUMENT ========================== */}\n                    {this.state.claimType &&\n                      this.state.claimType.toLocaleLowerCase() ===\n                        ClaimTypesInterface.DOCUMENT.toLocaleLowerCase() && (\n                        <div>\n                          {getClaimById(\n                            this.props.claiming.allClaims!,\n                            this.state.claimId!\n                          )!.user.details.find(\n                            (item) =>\n                              item.doc_id ===\n                              getClaimById(\n                                this.props.claiming.allClaims!,\n                                this.state.claimId!\n                              )!.claiming_on_id\n                          ) ? (\n                            <AdminClaimDocView\n                              thisDoc={\n                                getClaimById(\n                                  this.props.claiming.allClaims!,\n                                  this.state.claimId!\n                                )!.user.details.find(\n                                  (item) =>\n                                    item.doc_id ===\n                                    getClaimById(\n                                      this.props.claiming.allClaims!,\n                                      this.state.claimId!\n                                    )!.claiming_on_id\n                                )!\n                              }\n                              documentCategories={this.props.documentReducer}\n                              thisClaim={\n                                getClaimById(\n                                  this.props.claiming.allClaims,\n                                  this.state.claimId\n                                )!\n                              }\n                              claimTypes={this.props.claiming.claimTypes}\n                              viewImage={this.state.viewImage}\n                              setViewImage={this.setViewImage}\n                              loadingRequest={this.state.loadingRequest}\n                              setLoadingRequest={this.setLoadingRequest}\n                              actionTaken={this.state.actionTaken}\n                              setActionTaken={this.setActionTaken}\n                              responseMsg={this.state.responseMsg}\n                              setResponseMsg={this.setResponseMsg}\n                              formError={this.state.formError}\n                              setFormError={this.setFormError}\n                              candidateId={this.state.candidateId}\n                              claimReasons={this.props.claiming.claimReasons}\n                            />\n                          ) : (\n                            <NoResult\n                              theme={NoResultThemes.Dark}\n                              value={\"Document not found\"}\n                            />\n                          )}\n                        </div>\n                      )}\n\n                    {/* FOR APPLICATION ========================== */}\n                    {this.state.claimType &&\n                      this.state.claimType.toLocaleLowerCase() ===\n                        ClaimTypesInterface.APPLICATION.toLocaleLowerCase() && (\n                        <div>\n                          {getApplicationById(\n                            this.props.claiming.allApplications,\n                            this.props.systemPositions,\n                            getClaimById(\n                              this.props.claiming.allClaims,\n                              this.state.claimId\n                            )!.claiming_on_id\n                          ) ? (\n                            this.props.systemPositions && (\n                              <AdminClaimAppView\n                                thisApplication={\n                                  getApplicationById(\n                                    this.props.claiming.allApplications,\n                                    this.props.systemPositions,\n                                    getClaimById(\n                                      this.props.claiming.allClaims,\n                                      this.state.claimId\n                                    )!.claiming_on_id\n                                  )!.application\n                                }\n                                thisPosition={\n                                  getApplicationById(\n                                    this.props.claiming.allApplications,\n                                    this.props.systemPositions,\n                                    getClaimById(\n                                      this.props.claiming.allClaims,\n                                      this.state.claimId\n                                    )!.claiming_on_id\n                                  )!.position\n                                }\n                                documentCategories={this.props.documentReducer}\n                                thisClaim={\n                                  getClaimById(\n                                    this.props.claiming.allClaims,\n                                    this.state.claimId\n                                  )!\n                                }\n                                claimTypes={this.props.claiming.claimTypes}\n                                systemPositions={this.props.systemPositions}\n                                claimReasons={this.props.claiming.claimReasons}\n                                close={() => {\n                                  this.setViewClaim(false);\n                                  this.setViewImage(true);\n                                  this.setLoadingRequest(false);\n                                  this.setActionTaken(null);\n                                  this.setResponseMsg(\"\");\n                                  this.setFormError(null);\n                                }}\n                              />\n                            )\n                          ) : (\n                            <NoResult\n                              theme={NoResultThemes.Dark}\n                              value={\"Application not found\"}\n                            />\n                          )}\n                        </div>\n                      )}\n\n                    {/* FOR EXAMINATION ========================== */}\n                    {this.state.claimType &&\n                      this.state.claimType.toLocaleLowerCase() ===\n                        ClaimTypesInterface.EXAMINATION.toLocaleLowerCase() && (\n                        <div>\n                          {this.props.claiming.allAnswer &&\n                          this.props.courses &&\n                          getCourseIdBySheetId(\n                            this.props.claiming.allAnswer,\n                            getClaimById(\n                              this.props.claiming.allClaims,\n                              this.state.claimId\n                            )!.claiming_on_id\n                          ) &&\n                          getCourseById(\n                            this.props.courses,\n                            getCourseIdBySheetId(\n                              this.props.claiming.allAnswer,\n                              getClaimById(\n                                this.props.claiming.allClaims,\n                                this.state.claimId\n                              )!.claiming_on_id\n                            )!.course\n                          ) ? (\n                            <AdminClaimExamView\n                              thisExamSheet={\n                                getCourseIdBySheetId(\n                                  this.props.claiming.allAnswer,\n                                  getClaimById(\n                                    this.props.claiming.allClaims,\n                                    this.state.claimId\n                                  )!.claiming_on_id\n                                )!\n                              }\n                              thisExam={\n                                getCourseById(\n                                  this.props.courses,\n                                  getCourseIdBySheetId(\n                                    this.props.claiming.allAnswer,\n                                    getClaimById(\n                                      this.props.claiming.allClaims,\n                                      this.state.claimId\n                                    )!.claiming_on_id\n                                  )!.course\n                                )!\n                              }\n                              thisClaim={\n                                getClaimById(\n                                  this.props.claiming.allClaims,\n                                  this.state.claimId\n                                )!\n                              }\n                              claimTypes={this.props.claiming.claimTypes}\n                              claimReasons={this.props.claiming.claimReasons}\n                            />\n                          ) : (\n                            <NoResult\n                              theme={NoResultThemes.Dark}\n                              value={\"Exam not found\"}\n                            />\n                          )}\n                        </div>\n                      )}\n                  </section>\n                )}\n              </section>\n            )}\n          {/* end view claim */}\n        </div>\n        {/* Filter by titles */}\n        {this.state.show_titles_filter === true && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={() => this.setState({ show_titles_filter: false })}\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{\n              title: true,\n              body: false,\n              footer: undefined,\n            }}\n            title={<div>Filter by claiming type</div>}\n          >\n            <div className=\"min-h-screen\">\n              <div className=\"flex flex-row items-center w-full py-3 bg-gray-100 px-3 gap-2\">\n                <div\n                  onClick={() =>\n                    this.setState({\n                      selected_title: \"\",\n                      show_titles_filter: false,\n                    })\n                  }\n                  className=\"bg-blue-100 font-bold text-center hover:bg-blue-600 text-blue-600 hover:text-white rounded px-3 py-2 cursor-pointer w-24\"\n                >\n                  View all\n                </div>\n                <div className=\"w-full\">\n                  <input\n                    placeholder=\"Search by keywords...\"\n                    value={this.state.search_title}\n                    onChange={(e) =>\n                      this.setState({ search_title: e.target.value })\n                    }\n                    className=\"input-white h-10 text-sm border-2 bg-white border-gray-400 focus:border-gray-500 w-full\"\n                  />\n                </div>\n              </div>\n              <div className=\"p-4\">\n                {(\n                  searchData(\n                    this.DATA_TITLES(DAT_ClaimByStatus).map((title) => ({\n                      title: title,\n                    })),\n                    this.state.search_title.toString()\n                  ) as { title: string }[]\n                ).map((item, i) => (\n                  <div\n                    onClick={() =>\n                      this.setState({\n                        selected_title: item.title,\n                        show_titles_filter: false,\n                      })\n                    }\n                    className={`border rounded group p-1 mb-1 ${\n                      this.state.selected_title === item.title\n                        ? \"mb-1 border-blue-600 bg-blue-100\"\n                        : \"border-gray-200 hover:border-blue-600 hover:bg-blue-100\"\n                    } cursor-pointer`}\n                  >\n                    <div className=\"flex flex-row items-center justify-between gap-2\">\n                      <div className=\"flex flex-row items-center gap-2\">\n                        <div>\n                          <div\n                            className={`flex items-center justify-center p-1 rounded-full border-4 ${\n                              this.state.selected_title === item.title\n                                ? \"bg-blue-200 text-blue-700 border-blue-600\"\n                                : \"border-gray-200 bg-gray-100 group-hover:bg-blue-200 group-hover:text-blue-700 group-hover:border-blue-600\"\n                            } h-10 w-10 font-bold`}\n                          >\n                            {i + 1}\n                          </div>\n                        </div>\n                        <div\n                          className={`${\n                            this.state.selected_title === item.title\n                              ? \"text-blue-700\"\n                              : \"text-gray-500\"\n                          } group-hover:text-blue-600 font-bold`}\n                        >\n                          {item.title}\n                        </div>\n                      </div>\n                      <div className=\"font-bold\">\n                        ({this.FindClaimsNumber(item.title, DAT_ClaimByStatus)})\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </Modal>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system_settings,\n  sessionPlan,\n  claiming,\n  document,\n  course,\n}: StoreState): {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  systemPositions: PositionAPI[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  courses: course[] | null;\n} => {\n  return {\n    auth: auth,\n    application_sessions: sessionPlan.allSessionPlans,\n    systemPositions: system_settings.systemPositions,\n    claiming,\n    documentReducer: document,\n    courses: course.courses,\n  };\n};\n\nexport const AdminClaim = connect(mapStateToProps, {\n  getAllClaims,\n  loadCourses,\n  getAllAnswers,\n  getClaimReasons,\n  getAllApplications,\n  GetAllSessionPlans,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  getPositions,\n  PushPopupAlert,\n})(Index);\n"],"sourceRoot":""}
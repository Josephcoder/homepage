{"version":3,"sources":["containers/AdminDashboard/ValidationDashboard/ValidationDashboard.tsx"],"names":["_ValidationDashboard","props","getValidationData","selectedEducationCategory","a","setState","loading","success","error","axios","get","API","APPLICATION","res","status","data","filter","itm","_id","sort","b","count","map","total_documents","state","total_documents_validated","console","log","alert","errorToText","componentDidMount","schoolLevels","searchData","this","className","education_category_title","description","showInstitutes","education_categories","item","i","title","onClick","setSelectedEducationCategory","displayNumbers","user_info","fname","lname","to","length","colSpan","onChange","e","target","value","search","sex","phone_number","email","Component","ValidationDashboard","connect","auth","setShowInstitutes","loadEducationCategories","loadSchoolLevels"],"mappings":"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","file":"static/js/53.becf2dff.chunk.js","sourcesContent":["import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { AiOutlineCheckCircle } from \"react-icons/ai\";\nimport { BsAward } from \"react-icons/bs\";\nimport { CgArrowRightO } from \"react-icons/cg\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Auth,\n  schoolLevelsStoreInterface,\n  setSelectedEducationCategory,\n  setShowInstitutes,\n  loadEducationCategories,\n  loadSchoolLevels,\n} from \"../../../actions\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { education_category } from \"../../../interfaces\";\nimport { StoreState } from \"../../../reducers\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { displayNumbers, search } from \"../../../utils/functions\";\n\nexport interface UserDocValidationItemInterface {\n  _id: string;\n  n_id: string;\n  phone_number: string;\n  email: string;\n  user_info: {\n    fname: string;\n    lname: string;\n    sex: string;\n  };\n}\n\nexport interface UserDocValidationInterface {\n  _id: string | null;\n  count: number;\n  user_info: UserDocValidationItemInterface | null;\n}\n\ninterface ValidationDashboardProps {\n  auth: Auth;\n  schoolLevels: schoolLevelsStoreInterface;\n  setSelectedEducationCategory: (data: education_category) => void;\n  setShowInstitutes: (status: boolean) => void;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  loadSchoolLevels: (callback: (loading: boolean) => void) => void;\n}\ninterface ValidationDashboardState {\n  loading: boolean;\n  success: string;\n  error: string;\n  data: UserDocValidationInterface[] | null;\n  total_documents: number;\n  total_documents_validated: number;\n  searchData: string;\n}\n\nclass _ValidationDashboard extends Component<\n  ValidationDashboardProps,\n  ValidationDashboardState\n> {\n  constructor(props: ValidationDashboardProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      success: \"\",\n      error: \"\",\n      data: null,\n      total_documents: 0,\n      total_documents_validated: 0,\n      searchData: \"\",\n    };\n  }\n\n  getValidationData = async (selectedEducationCategory: education_category) => {\n    this.setState({ loading: true, success: \"\", error: \"\" });\n    try {\n      const res = await axios.get<UserDocValidationInterface[]>(\n        `${API.APPLICATION}/counter/validator`\n      );\n      if (res.status === 200) {\n        this.setState({\n          data: res.data\n            .filter((itm) => itm._id !== null)\n            .sort((a, b) =>\n              a.count < b.count ? 1 : b.count < a.count ? -1 : 0\n            ),\n          loading: false,\n        });\n        res.data.map((itm) =>\n          this.setState({\n            total_documents: this.state.total_documents + itm.count,\n          })\n        );\n        res.data\n          .filter((itm) => itm._id !== null)\n          .map((itm) =>\n            this.setState({\n              total_documents_validated:\n                this.state.total_documents_validated + itm.count,\n            })\n          );\n      }\n    } catch (error: any) {\n      this.setState({ data: [], loading: false });\n      console.log(\"Error: \", { ...error });\n      alert(\"Err:\" + errorToText(error));\n    }\n  };\n\n  componentDidMount = () => {\n    if (\n      this.state.data === null &&\n      this.props.schoolLevels.selectedEducationCategory !== null\n    ) {\n      this.getValidationData(this.props.schoolLevels.selectedEducationCategory);\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        {this.props.schoolLevels.selectedEducationCategory !== null && (\n          <div className=\"bg-white rounded mt-2\">\n            <div className=\"border-b border-blue-300 p-3 flex flex-row items-center gap-2 justify-between w-full\">\n              <div>\n                <div className=\"text-3xl font-light\">\n                  Documents validation Dashboard\n                </div>\n                <div className=\"text-lg font-bold text-blue-600 flex flex-row items-center gap-3 cursor-pointer hover:underline\">\n                  <span className=\"uppercase\">\n                    {\n                      this.props.schoolLevels.selectedEducationCategory\n                        .education_category_title\n                    }\n                  </span>\n                  -\n                  <span>\n                    {\n                      this.props.schoolLevels.selectedEducationCategory\n                        .description\n                    }\n                  </span>\n                </div>\n              </div>\n              <div></div>\n            </div>\n          </div>\n        )}\n        {this.props.schoolLevels.showInstitutes === false &&\n          this.props.schoolLevels.selectedEducationCategory === null && (\n            <div className=\"bg-white rounded mt-2 p-4\">\n              <div className=\"flex flex-col items-center justify-center w-full gap-2\">\n                <div className=\"text-3xl font-light mb-4\">\n                  Please choose institution\n                </div>\n                <div className=\"flex flex-row items-center justify-center gap-4 w-full\">\n                  {this.props.schoolLevels.education_categories === null ? (\n                    <Loading />\n                  ) : (\n                    this.props.schoolLevels.education_categories.map(\n                      (item, i) => (\n                        <div\n                          key={i + 1}\n                          title=\"Click to choose the institution\"\n                          className=\"bg-blue-100 hover:bg-blue-200 rounded-lg flex flex-col items-center justify-center p-3 py-5 w-full cursor-pointer group\"\n                          onClick={() => {\n                            this.props.setSelectedEducationCategory(item);\n                            this.getValidationData(item);\n                          }}\n                        >\n                          <div className=\"uppercase text-4xl font-extrabold text-blue-600 group-hover:text-blue-700\">\n                            {item.education_category_title}\n                          </div>\n                          <div className=\"group-hover:text-blue-600\">\n                            {item.description}\n                          </div>\n                          <div className=\"mt-2\">\n                            <CgArrowRightO className=\"text-3xl text-blue-300 group-hover:text-blue-600\" />\n                          </div>\n                        </div>\n                      )\n                    )\n                  )}\n                </div>\n              </div>\n            </div>\n          )}\n        {/* Graphs */}\n        {this.state.data !== null && (\n          <div className=\"bg-white rounded p-2\">\n            <div className=\"grid grid-cols-6 gap-3\">\n              <div className=\"cols-span-1\">\n                <div className=\"bg-blue-100 rounded-md p-3\">\n                  <div className=\"text-blue-600\">Total documents</div>\n                  <div className=\"font-extrabold text-3xl\">\n                    {displayNumbers(this.state.total_documents)}\n                  </div>\n                </div>\n              </div>\n              <div className=\"cols-span-1\">\n                <div className=\"bg-blue-100 rounded-md p-3\">\n                  <div className=\"text-blue-600\">Validated documents</div>\n                  <div className=\"font-extrabold text-3xl\">\n                    {displayNumbers(this.state.total_documents_validated)}\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-span-3\">\n                <div className=\"flex flex-row items-center gap-2\">\n                  <div>\n                    <BsAward className=\"text-7xl text-blue-200\" />\n                  </div>\n                  <div>\n                    <div className=\"text-gray-500\">Highest evaluator</div>\n                    <div className=\"font-extrabold text-xl\">\n                      {this.state.data[0].user_info?.user_info.fname}{\" \"}\n                      {this.state.data[0].user_info?.user_info.lname}\n                    </div>\n                    <div className=\"font-extrabold text-xl text-blue-600 border border-blue-600 rounded-md w-max px-2\">\n                      {displayNumbers(this.state.data[0].count)}\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-span-1\">\n                <Link\n                  to=\"/document-validation\"\n                  className=\"flex items-center gap-3 btn bg-blue-100 text-black cursor-pointer text-base\"\n                >\n                  <div>\n                    <AiOutlineCheckCircle className=\"text-4xl\" />\n                  </div>\n                  <span>Continue evaluation</span>\n                </Link>\n              </div>\n            </div>\n          </div>\n        )}\n        {(this.state.data === null || this.state.loading === true) &&\n        this.props.schoolLevels.selectedEducationCategory !== null ? (\n          <div className=\"bg-white p-2 rounded\">\n            <Loading />\n          </div>\n        ) : this.state.data !== null && this.state.data.length === 0 ? (\n          <div className=\"bg-white p-3 text-center text-3xl font-light\">\n            No data found!\n          </div>\n        ) : (\n          <div className=\"bg-white mt-2 rounded p-1\">\n            <table className=\"w-full\">\n              <thead>\n                <tr className=\"bg-blue-50 border-b border-blue-300 text-left\">\n                  <th className=\"py-1 px-2\">#</th>\n                  <th className=\"py-1 px-2\">Evaluator</th>\n                  <th className=\"py-1 px-2\">Gender</th>\n                  <th className=\"py-1 px-2\">Phone number</th>\n                  <th className=\"py-1 px-2\">Email</th>\n                  <th className=\"py-1 px-2\">Evaluated docs</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td colSpan={6}>\n                    <input\n                      onChange={(e) =>\n                        this.setState({ searchData: e.target.value })\n                      }\n                      value={this.state.searchData}\n                      className=\"border border-gray-400 w-full px-3 py-2 rounded my-2\"\n                    />\n                  </td>\n                </tr>\n                {this.state.data !== null &&\n                  (\n                    search(\n                      this.state.data,\n                      this.state.searchData\n                    ) as UserDocValidationInterface[]\n                  ).map((item, i) => (\n                    <tr key={i + 1} className=\"border-b hover:bg-blue-50\">\n                      <td className=\"py-1 px-2\">{i + 1}</td>\n                      <td className=\"py-1 px-2\">\n                        {item.user_info?.user_info.fname}{\" \"}\n                        {item.user_info?.user_info.lname}\n                      </td>\n                      <td className=\"py-1 px-2\">\n                        {item.user_info?.user_info.sex}\n                      </td>\n                      <td className=\"py-1 px-2\">\n                        {item.user_info?.phone_number}\n                      </td>\n                      <td className=\"py-1 px-2\">{item.user_info?.email}</td>\n                      <td className=\"py-1 px-2\">\n                        {displayNumbers(item.count)}\n                      </td>\n                    </tr>\n                  ))}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  schoolLevels,\n}: StoreState): { auth: Auth; schoolLevels: schoolLevelsStoreInterface } => {\n  return { auth: auth, schoolLevels: schoolLevels };\n};\n\nexport const ValidationDashboard = connect(mapStateToProps, {\n  setSelectedEducationCategory,\n  setShowInstitutes,\n  loadEducationCategories,\n  loadSchoolLevels,\n})(_ValidationDashboard);\n"],"sourceRoot":""}
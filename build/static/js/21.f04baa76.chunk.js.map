{"version":3,"sources":["shared/dataTest.tsx","components/Table/Table.tsx","components/Navigation/SideNavigation.tsx","actions/session.ts","actions/document.ts","actions/settings.ts","containers/SessionSettings/NoSession.tsx","containers/Claimings/Candidate/ChooseReason.tsx","containers/Claimings/Candidate/FormPlacementList.tsx","containers/Claimings/Candidate/ClaimForm.tsx","containers/DoExam/QuestionDetails/ConvertingAnswers.ts","shared/interfaces.tsx","containers/AdminDashboard/ChartComponents/VBarChart.tsx","containers/Claimings/ClaimDocView.tsx","utils/ExportToExcel.tsx","components/Loading/TableLoading.tsx","utils/mineduc.png","components/DownloadPDF/rest.tsx","containers/SessionSettings/ChooseSession.tsx","containers/Positions/ViewRequirements.tsx","components/AnswersDetails/AnswersDetails.tsx","containers/Claimings/Candidate/FormExamList.tsx","containers/AdminDashboard/ChartComponents/PieChart.tsx","containers/Claimings/Candidate/ApplicationFormView.tsx","containers/Claimings/Candidate/ExaminationFormView.tsx","containers/AdminDashboard/DashboardLabelItem.tsx","containers/AdminDashboard/ExamDashboard/ExamDashboardLabels.tsx","containers/SessionSettings/SessionDetails.tsx","containers/Claimings/Admin/AdminFilterByType.tsx","containers/Claimings/ClaimHeaderTitle.tsx","containers/DoExam/DoExamTitle/FindAnswer.tsx","containers/Claimings/Candidate/DocFormView.tsx","containers/Claimings/Candidate/FormApplicationList.tsx","containers/Claimings/Candidate/FormDocumentList.tsx","containers/Claimings/Candidate/index.tsx","containers/Claimings/ClaimApplView.tsx","containers/Claimings/ClaimExamView.tsx","containers/Claimings/ClaimPlacementView.tsx","containers/Claimings/Candidate/FilterByType.tsx","containers/Claimings/Admin/AdminClaimAppView.tsx","containers/Claimings/Admin/AdminClaimExamView.tsx","containers/Claimings/Admin/AdminClaimDocView.tsx","containers/Claimings/Admin/index.tsx","containers/Admin/Claiming/ClaimingReport.tsx","containers/AdminDashboard/ClaimDashboard/AllClaimChart.tsx","containers/AdminDashboard/ClaimDashboard/ClaimDashBoardTitle.tsx","containers/AdminDashboard/ClaimDashboard/ClaimDashboard.tsx"],"names":["data_school","school_id","school_title","district_id","number_of_females","number_of_males","isEmptyOrSpaces","str","match","getRoleById","roles","roleId","filter","role","system_user_role_id","getInstituteById","institutes","instituteId","find","item","education_institute_id","getPositionById","positions","position_id","console","log","data","position","toTwoDigit","value","dec","Math","floor","slice","toString","substr","toAnyDigit","padding","zeroes","Array","join","capitalizeFirstLetter","charAt","toUpperCase","Table","props","table","tr","tableId","length","result","characters","charactersLength","i","random","FC_makeID","useState","totalItems","setTotalItems","totalPages","setTotalPages","currentPage","setCurrentPage","pages","setPages","pageSize","setPageSize","startIndex","setStartIndex","endIndex","setEndIndex","useEffect","pagination","tablePagination","document","getElementById","getElementsByTagName","ceil","min","_pages","from","keys","map","style","display","className","tableSize","search","searchBG","type","placeholder","onChange","e","filterType","td","rows","cols","toLowerCase","columns","textContent","innerText","indexOf","filterTable","target","disabled","loading","Number","tableClass","rounded","id","hideColumns","thColor","column","index","alignText","isSortAllowed","onClick","switching","x","y","shouldSwitch","colIndex","dir","switchcount","innerHTML","parentNode","insertBefore","sortThisColumn","columnTitle","aria-label","page","pageIndex","_SideNavigation","componentDidMount","PageHasSubNav","componentWillUnmount","state","this","auth","isAuthenticated","navActive","system","navigation","children","React","Component","SideNavigation","connect","NavToogle","MainItem","title","icon","MdBrightness1","active","count","IconDefined","GetPlansTypes","callback","dispatch","a","setAxiosToken","axios","get","API","CLAIMING","res","GET_PLANS_TYPES","plan_types","status","ActionTypes","payload","error","errorToText","setSelectedPlanType","thisType","SELECT_PLAN_TYPE","getActiveSessionPlan","GET_ACTIVE_SESSION_PLANS","session_plan","undefined","is_active","GetAllSessionPlans","GET_ALL_SESSION_PLANS","session_data","createSessionPlan","CREATE_SESSION_PLAN","updateSessionPlan","UPDATE_SESSION_PLAN","sessionActivation","SESSION_ACTIVATION","deleteSessionPlan","DELETE_SESSION_PLAN","getDocumentCategory","AUTH","docCategory","GET_DOCUMENT_CATEGORY","createDocumentCategory","CREATE_DOCUMENT_CATEGORY","updateDocumentCategory","UPDATE_DOCUMENT_CATEGORY","deleteDocumentCategory","DELETE_DOCUMENT_CATEGORY","getDocumentSubCategory","docSubCategory","GET_DOCUMENT_SUB_CATEGORY","doc_SUB_category_error","createDocumentSubCategory","CREATE_DOCUMENT_SUB_CATEGORY","updateDocumentSubCategory","UPDATE_DOCUMENT_SUB_CATEGORY","deleteDocumentSubCategory","DELETE_DOCUMENT_SUB_CATEGORY","getDocumentFields","docFields","GET_DOCUMENT_FIELDS","createDocumentFields","CREATE_DOCUMENT_FIELDS","updateDocumentFields","reducer","UPDATE_DOCUMENT_FIELDS","deleteDocumentFields","DELETE_DOCUMENT_FIELDS","getCandidatesInInstitute","educatin_type_id","session_id","APPLICATION","newArray","element","GET_CANDIDATE_IN_INSTITUTE","verifyDocument","action_verify","VERIFY_DOCUMENT","getSystemSettings","GET_SYSTEM_SETTINGS","code_error","disableSystemSetting","DISABLE_SYSTEM_SETTINGS","GetTaskAccess","response","task","key","permitted","GET_TASK_ACCESS","getPositions","GET_POSTIONS","deletePosition","DELETE_POSITION","publishPosition","PUBLISH_POSITION","NoSession","ChooseReason","setSearchInput","setState","searchInput","setChooseClaimReason","allClaimReasons","claimReason","setClaimReason","reason","myPlacement","isClaimAllowed","myClaims","activeSession","session_plan_id","placed","_id","setChooseClaimFile","setViewThisFile","setClaimFileId","school","school_name","ClaimGetDocTitle","documentCategories","doc","DocCategory","DocSubCategory","DocField","DocTitle","sub_category_id","documentSubCategory","c","user_detail_subcategory_id","category_id","documentCategory","user_detail_category_id","category_subcategory_data","category_subcategory_Data_id","documentFields","category","sub_category","field","main","allClaim","period_id","claimOnId","claiming_on_id","ClaimForm","isDocumentIdValid","documents","doc_id","validated_by","validation_status","msg","alert","PopupAlertTheme","info","claiming","success","warning","isApplicationIdValid","applications","app_id","app","application_id","application_status","ApplicationStates","Rejected","setLoading","setLoadingForm","loadingForm","setFormError","formError","setAlertError","alertError","claimFileId","viewThisFile","chooseClaimFile","chooseClaimReason","setClaimComment","claimComment","isClaimTypeOpen","thisSession","PlansTypeKeys","plans","type_key","isPlanActive","DOCUMENT_VALIDATION","PLACEMENT_TRANSFER","isClaimBtnValid","file_id","claim_type","PushPopupAlert","theme","setFormState","thisClaimType","thisClaimTypeId","formType","displayClaimType","claimType","EXAMINATION","MARKS_PUBLICATION","isClaimsAllowed","thisPeriod","getMyClaims","user","user_id","danger","loadExamAnswers","activeSessionPlan","getMyAnswers","sessionPlan","_isClaimsAllowed","documentReducer","candidateApplications","getMyRejectedApplications","_isApplicationIdValid","candidateDocuments","getMyRejectedDocuments","_isDocumentIdValid","claimReasons","getClaimReasons","getMyPlacement","courses","loadCourses","getDocumentById","getApplicationById","getExamById","exams","answer_sheet_id","getValidation","thisId","old_reason","old_status","old_evaluated_by","comment","override_by","cleanToClose","loadUserById","handleSubmit","preventDefault","toLocaleLowerCase","old_evaluator_email","old_evaluator_name","evaluator_email","evaluator_name","email","user_info","fname","lname","default_claim_resaons","post","createClaim","selectClaimType","thisClaim","generateChooseFileTitle","allowedClaims","formState","Modal","backDrop","Themes","default","close","displayClose","backDropClose","widthSizeClass","ModalSize","extraLarge","medium","body","footer","onSubmit","Object","values","replace","position_title","myAnswer","getCourseIdBySheetId","getCourseById","course","course_name","FormDocumentList","FormApplicationList","FormExamList","candidateAnswers","resize","DocFormView","thisDoc","ApplicationFormView","thisApplication","ExaminationFormView","thisAnswerSheet","GetClaimingTypes","toMultipleChoice","answers","answer","toTrueFalse","toMatching","toSimpleCalculated","toShortAnswer","toNumerical","toCalculatedMultipleChoice","PostRequestStatusInterface","DocumentAttributesInterface","DocValidationStatusInterface","SESSION_PLAN_KEYS","defaultBar","borderRadius","horizontal","columnWidth","endingShape","VBarChart","chart","events","dataPointSelection","event","chartContext","config","labelClicked","w","labels","dataPointIndex","FC_LoadSelected","seriesIndex","stacked","plotOptions","bar","dataLabels","enabled","xaxis","rotate","categories","categoriesLabel","tickPlacement","yaxis","text","yaxisText","fill","opacity","tooltip","formatter","val","tooltipText","grid","left","right","noData","align","verticalAlign","options","setOptions","colors","chartClicked","zoom","autoScaleYaxis","series","width","height","chartHeight","isReclaimAllowed","claim_level","_thisClaim","claims","level","decision_taken_status","ClaimDecisionStatus","REJECTED","isClaimEvaluated","claim_status","ClaimStatus","EVALUATED","createReClaim","reClaimingMsg","setLoadingRequest","put","setReClaimingMsg","setReClaiming","setViewImage","viewImage","previous","evaluater","name","src","AUTH_FILES","files","alt","claim","showDate","createdAt","timestampToDate","date_created","timeFR","evaluation_comment","reClaiming","last_claim_status","PENDING","DELETED","loadingRequest","ExportToExcel","fileData","fileName","btnName","showIcon","apiData","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","exportToCSV","TableLoading","displayCols","colsArray","push","require","addFooters","pageCount","internal","getNumberOfPages","setFont","setFontSize","setPage","String","generatePDF","reportSettings","callBack","orientation","lMargin","jsPDF","setTextColor","addImage","Logo","getWidth","institute","lines","splitTextToSize","subject","pdfInMM","subjectTitle","getTextWidth","addPage","period","autoTable","html","startY","margin","cellPadding","rowHeight","bodyStyles","valign","columnStyles","cellWidth","tableWidth","finalY","lastAutoTable","doneBy","DATE","Date","save","returnPromise","then","isPlansActive","today","activePlans","plan","startDate","start_date","endDate","end_date","getTime","type_status","SessionPlanTypeStatus","OPEN","ChooseSession","searched","selectedPlan","setSelectedPlan","setSearch","allSession","chooseAll","currentSelected","setSelectSession","searchData","session_plan_name","itm","type_title","ViewRequirements","requirements","colSpan","subcategory_title","field_id","field_title","subcategory_required","required","_AnswersDetails","setLoadingStatus","loadingStatus","questionTypes","loadQuestionTypes","exam_id","check","candidateExam","user_exams_done","exam_date","allAnswers","loadExamsDone","exam_paper","requestUserAnswers","userAnswersTotalMarks","user_answers","total","user_marks","user_exam_details","dangerouslySetInnerHTML","__html","discription","termes","questions","question_id","question","test","language","description","selectedLanguage","chapters","customNumber","marks","answersList","showCorrectAnswer","showAnswers","toFixed","total_marks","exam_total_marks","AnswersDetails","FC_GetProfileDetails","LoadCandidateApplications","setSelectedCandidateExam","setSelectedCourse","setSelectedPosition","InitializeExamDetails","AddUserApplication","loadApplicationPeriods","getFailedExam","allData","allCourses","forEach","course_id","sheet_id","PieChart","FC_ApplicationPositionDistinctCategory","thisPosition","PositionsTemp","DistinctCategoriesTemp","DistinctCategoriesIds","DistinctSubCategoriesTemp","DistinctSubCategoriesIds","req","thisRequirements","thisCategory","thisSubCategory","thisField","position_requirement","category_subcategory_data_id","category_title","subcategory_id","includes","school_level_id","school_level_name","education_category_title","course_code","NoResultThemes","Dark","claimShowAnswer","rules","right_click_enabled","copy_enabled","paste_enabled","stop_candidate_when_comeback","allow_to_leave_browser","DashboardLabelItem","FaUsers","iconColor","countOver","ExamDashboardLabels","numCols","labelsOnRow","childrenPosition","isActivationAllowed","thisPlans","getPlanTypeByKey","allPlanTypes","viewThisSession","thisPlan","planEndDate","planStartDate","CLOSED","SessionDetails","handlePlanActivation","session","newState","window","confirm","newData","updatedAt","prototype","hasOwnProperty","call","type_id","allowed_claim_level","history","setViewThisSession","filterClaimsByClaimType","claimList","setSelectedClaimType","getAllClaims","loadingClaimTypes","setLoadingClaimTypes","claimTypes","countClaims","allClaims","Fragment","loadingClaims","selectedClaimType","ClaimHeaderTitle","isLoading","loadingSession","periodChanged","headerTitle","sessions","application_sessions","selectPeriod","setThisPeriod","setLoadingSession","onPeriodChange","FindAnswer","UserAnswersSel","findQuestionType","questionTypeElementsType","MultipleChoice","userAnswer","SingleMultiple","userAnswerSingle","CalculatedMultipleChoice","userAnswer1","Matching","userAnswerMatch","TrueFalse","userAnswerTureFalse","Numeric","userAnswerNumerical","SimpleCalculate","userAnswerSimpleCalculate","ShortAnswer","userAnswerShortAnswer","getRejectedApplicants","applicationData","objList","product","flag","prop","DocumentTitleData","documentData","documentTemp","company","end_year","names","phone_number","start_year","year","doc_title","getRejectedDocuments","rejected","ClaimTypesEnum","setViewPosition","viewPosition","NoResult","thisExam","thisExamSheet","userDetails","district_name","loadingRejectedApplications","setLoadingRejectedApplications","loadingRejectedDocuments","setLoadingRejectedDocuments","COMPLETED","document_id","whichClaimType","application","exam","marks_publication","placement","whichClaimStatus","classes","getClaimById","claim_id","displayDocClaimTitle","displayClaimTitle","allCourse","thisAnswer","Index","setViewClaim","viewClaim","setPeriodChanged","setClaimForm","claimForm","setClaimId","claimId","loadClaims","setSession","isDeleteAllowed","thisCLaim","Light","ClaimApplView","ClaimExamView","CandidateClaim","allSessionPlans","viewTabs","FC_AdminApplicationPositionDistinctCategory","subcategory","evaluateClaim","reAssessApplication","actionTaken","setActionTaken","responseMsg","setResponseMsg","profile","selectedTab","setSelectedTab","handleVerify","subClaim","api_body","sub_claim_id","evaluated_by","evaluate_claim_res","ACCEPTED","overrideDecision","getReasonById","reason_id","patch","Shortlisted","systemPositions","FC_DocValidation","APPROVED","in_education","disability","api_redux","date","FC_shortListing","candidate_id","details","adminDisplayClaimTitle","commet","setMarks","Loading","handleMarksAddition","DO_EXAM","exam_location","user_status","used_duration","number_of_question_answered","exam_start_time","exam_end_time","gender","sex","AdminClaimGetDocTitle","allApplications","setLoadingData","loadingData","setClaimType","setCandidateId","candidateId","setDefaultSession","loadsAllClaims","loadsApplications","loadsAlAnswers","getAllApplications","allAnswer","getAllAnswers","thisDocs","AdminFilterByType","ClaimTypesInterface","DOCUMENT","AdminClaim","system_settings","reportClaimType","defaultReportContent","claimReportContentKeyInterface","national_id","phone","claim_session","education_category","decision","claim_title","ClaimingReport","schoolLevels","loadEducationCategories","thisLevel","setThisLevel","loadingPosition","setLoadingPosition","loadingApplications","setLoadingApplications","setLoadingClaims","loadingCourses","setLoadingCourses","loadingDocuments","setLoadingDocuments","loadingInstitutes","setLoadingInstitutes","loadingClarifications","setLoadingClarifications","loadingFields","setLoadingFields","downloading","setDownloading","claimToPrint","setClaimToPrint","sortProperty","setSortProperty","isSorted","setIsSorted","sortOrder","setSortOrder","generateReportModal","setGenerateReportModal","reportTitle","setReportTitle","reportContent","setReportContent","selectAll","setSelectAll","setSelectPeriod","thisEducation","setThisEducation","education_categories","getClaimInstitute","setSort","thisProperty","updateClaimToPrint","arrayNew","n","keyClaim","dataArray","n_id","FC_ClaimData","isChangeAllowed","FC_FilterClaims","claimLevel","output","PlansKey","ClaimTypes","selectedType","currentType","levels","ClaimLevels","reportType","querySelectorAll","FC_GeneratePDF","sortThisArray","findIndex","isSelectAllNeeded","updateReportContent","currentState","resetReportContent","AllClaimChart","FC_GetAllClaimChartData","acceptedArray","rejectedArray","activeArray","labelArray","typeKey","accepted","pending","ClaimDashBoardTitle","allEducation","loadingEducation","education","_ClaimDashboard","setThisLabel","thisLabel","all","getClaimDataByTitle","FaBookOpen","legend","show","horizontalAlign","fontSize","itemMargin","vertical","pie","donut","color","offsetY","fontFamily","label","globals","seriesTotals","reduce","b","ClaimDashboard"],"mappings":"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","file":"static/js/21.f04baa76.chunk.js","sourcesContent":["import { NumberFormat } from \"xlsx\";\nimport { education_category } from \"../interfaces\";\nimport { PositionAPI } from \"../interfaces/position\";\nimport {\n  AccessTaskInterface,\n  CustomeAccessInterface,\n  PositionInterface,\n  PostSchoolInterface,\n  RoleToUserInterface,\n  SchoolInfoInterface,\n  SchoolLevelInterface,\n  SystemUserRoleInterface,\n} from \"./interfaces\";\n\nexport const data_tasks: AccessTaskInterface[] = [\n  {\n    id: \"11233242\",\n    task: \"Do Exam\",\n    key: \"do_exam\",\n    permitted: {\n      create: false,\n      view: false,\n      update: false,\n      delete: false,\n    },\n  },\n  {\n    id: \"1123382242\",\n    task: \"Do Application\",\n    key: \"do_application\",\n    permitted: {\n      create: false,\n      view: false,\n      update: false,\n      delete: false,\n    },\n  },\n];\n\nexport const data_school: SchoolInfoInterface[] = [\n  {\n    school_id: \"32762426329\",\n    school_title: \"G.S. De Gitega\",\n    district_id: \"234242\",\n    number_of_females: 10,\n    number_of_males: 12,\n  },\n  {\n    school_id: \"32762426329\",\n    school_title: \"G.S. De Gitega\",\n    district_id: \"7322342684\",\n  },\n  {\n    school_id: \"32762426329\",\n    school_title: \"Rucee De Kigali\",\n    district_id: \"234242\",\n    number_of_females: 10,\n    number_of_males: 12,\n  },\n  {\n    school_id: \"32762426329\",\n    school_title: \"G.S. De Gitega\",\n    district_id: \"73232432684\",\n    number_of_females: 10,\n    number_of_males: 12,\n  },\n];\n\nexport const data_school_level: SchoolLevelInterface[] = [\n  {\n    school_level_id: \"324234r2ee432\",\n    school_level_name: \"Ordinary Level\",\n    description: \"Ordinary Level description\",\n    education_institute: [\"6100449ceabcc3b4623752e2\"],\n    courses: [],\n  },\n  {\n    school_level_name: \"A level\",\n    description: \"A level description\",\n    education_institute: [\n      \"6100592f646ddb0771e8fc50\",\n      \"61005941646ddb0771e8fc51\",\n    ],\n    courses: [],\n    school_level_id: \"61005974646ddb0771e8fc52\",\n  },\n  {\n    school_level_name: \"O level\",\n    description: \"O level description\",\n    education_institute: [\"6100592f646ddb0771e8fc50\"],\n    courses: [],\n    school_level_id: \"61005989646ddb0771e8fc53\",\n  },\n  {\n    school_level_name: \"Primary\",\n    description: \"Primary description\",\n    education_institute: [\"6100592f646ddb0771e8fc50\"],\n    courses: [],\n    school_level_id: \"61005999646ddb0771e8fc54\",\n  },\n  {\n    school_level_name: \"Ordinary Level\",\n    description: \"Ordinary Level description\",\n    education_institute: [\"610045218bdc25b50cc8bcbc\"],\n    courses: [],\n    school_level_id: \"61065114ea5d9b48e9677606\",\n  },\n];\n\nexport const data_position: PositionInterface[] = [\n  {\n    courses: [\n      {\n        course_name: \"Physics\",\n        course_code: \"P21\",\n        description: \"description of P21\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"610252c47d84ba2313cf6148\",\n      },\n      {\n        course_name: \"Mathematics\",\n        course_code: \"m211\",\n        description: \"description of m211\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"610252fd7d84ba2313cf6149\",\n      },\n    ],\n    position_title: \"Teaching mathematics\",\n    description: \"Teaching mathematics\",\n    school_level_id: {\n      school_level_name: \"A level\",\n      description: \"A level description\",\n      education_institute: [\n        \"6100592f646ddb0771e8fc50\",\n        \"61005941646ddb0771e8fc51\",\n      ],\n      courses: [],\n      school_level_id: \"61005974646ddb0771e8fc52\",\n    },\n    education_institute_id: {\n      education_category_title: \"REB\",\n      school_levels: [],\n      description: \"REB\",\n      education_institute_id: \"6100592f646ddb0771e8fc50\",\n    },\n    requirements: [\n      {\n        user_detail_category_id: \"60fc4868f485d8dd91ed321e\",\n        title: \"Education\",\n        user_required_docs: [\n          {\n            user_detail_subcategory_id: \"60fc48dbf485d8dd91ed321f\",\n            title: \"A1\",\n          },\n        ],\n      },\n    ],\n    position_id: \"610254047d84ba2313cf614a\",\n  },\n  {\n    courses: [\n      {\n        course_name: \"Physics\",\n        course_code: \"P21\",\n        description: \"description of P21\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"610252c47d84ba2313cf6148\",\n      },\n      {\n        course_name: \"English\",\n        course_code: \"e213\",\n        description: \"description of e213\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"6102e72675cc702bbd1582e3\",\n      },\n    ],\n    position_title: \"Teaching Physics\",\n    description: \"Teaching Physics\",\n    school_level_id: {\n      school_level_name: \"A level\",\n      description: \"A level description\",\n      education_institute: [\n        \"6100592f646ddb0771e8fc50\",\n        \"61005941646ddb0771e8fc51\",\n      ],\n      courses: [],\n      school_level_id: \"61005974646ddb0771e8fc52\",\n    },\n    education_institute_id: {\n      education_category_title: \"REB\",\n      school_levels: [],\n      description: \"REB\",\n      education_institute_id: \"6100592f646ddb0771e8fc50\",\n    },\n    requirements: [\n      {\n        user_detail_category_id: \"60fc4868f485d8dd91ed321e\",\n        title: \"Education\",\n        user_required_docs: [\n          {\n            user_detail_subcategory_id: \"60fc48dbf485d8dd91ed321f\",\n            title: \"A1\",\n          },\n        ],\n      },\n      {\n        user_detail_category_id: \"60fc47dff485d8dd91ed3219\",\n        title: \"Language\",\n        user_required_docs: [\n          {\n            user_detail_subcategory_id: \"6102e7ec248f742b674c67ad\",\n            title: \"English\",\n          },\n        ],\n      },\n    ],\n    position_id: \"6102ea2975cc702bbd1582e5\",\n  },\n  {\n    courses: [\n      {\n        course_name: \"Biology\",\n        course_code: \"b213\",\n        description: \"description of b213\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"6103a37975cc702bbd1582e6\",\n      },\n      {\n        course_name: \"English\",\n        course_code: \"e213\",\n        description: \"description of e213\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"6102e72675cc702bbd1582e3\",\n      },\n    ],\n    position_title: \"Teaching Biology\",\n    description: \"Teaching Biology\",\n    school_level_id: {\n      school_level_name: \"A level\",\n      description: \"A level description\",\n      education_institute: [\n        \"6100592f646ddb0771e8fc50\",\n        \"61005941646ddb0771e8fc51\",\n      ],\n      courses: [],\n      school_level_id: \"61005974646ddb0771e8fc52\",\n    },\n    education_institute_id: {\n      education_category_title: \"REB\",\n      school_levels: [],\n      description: \"REB\",\n      education_institute_id: \"6100592f646ddb0771e8fc50\",\n    },\n    requirements: [\n      {\n        user_detail_category_id: \"60fc4868f485d8dd91ed321e\",\n        title: \"A0\",\n        user_required_docs: [\n          {\n            user_detail_subcategory_id: \"60fc48eff485d8dd91ed3221\",\n            title: \"A0\",\n          },\n        ],\n      },\n      {\n        user_detail_category_id: \"60fc47dff485d8dd91ed3219\",\n        title: \"Language\",\n        user_required_docs: [\n          {\n            user_detail_subcategory_id: \"6102e7ec248f742b674c67ad\",\n            title: \"English\",\n          },\n          {\n            user_detail_subcategory_id: \"6102e84c248f742b674c67af\",\n            title: \"Ikinyarwanda\",\n          },\n        ],\n      },\n    ],\n    position_id: \"6103a54075cc702bbd1582e8\",\n  },\n  {\n    courses: [\n      {\n        course_name: \"Biology\",\n        course_code: \"b213\",\n        description: \"description of b213\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"6103a37975cc702bbd1582e6\",\n      },\n      {\n        course_name: \"English\",\n        course_code: \"e213\",\n        description: \"description of e213\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"6102e72675cc702bbd1582e3\",\n      },\n    ],\n    position_title: \"Teaching basic Biology\",\n    description: \"Teaching basic Biology\",\n    school_level_id: {\n      school_level_name: \"O level\",\n      description: \"O level description\",\n      education_institute: [\"6100592f646ddb0771e8fc50\"],\n      courses: [],\n      school_level_id: \"61005989646ddb0771e8fc53\",\n    },\n    education_institute_id: {\n      education_category_title: \"REB\",\n      school_levels: [],\n      description: \"REB\",\n      education_institute_id: \"6100592f646ddb0771e8fc50\",\n    },\n    requirements: [\n      {\n        user_detail_category_id: \"60fc4868f485d8dd91ed321e\",\n        title: \"Education\",\n        user_required_docs: [\n          {\n            user_detail_subcategory_id: \"60fc48dbf485d8dd91ed321f\",\n            title: \"A1\",\n          },\n        ],\n      },\n      {\n        user_detail_category_id: \"60fc47dff485d8dd91ed3219\",\n        title: \"Language\",\n        user_required_docs: [\n          {\n            user_detail_subcategory_id: \"6102e7ec248f742b674c67ad\",\n            title: \"English\",\n          },\n          {\n            user_detail_subcategory_id: \"6102e84c248f742b674c67af\",\n            title: \"Ikinyarwanda\",\n          },\n        ],\n      },\n    ],\n    position_id: \"6103a6ca75cc702bbd1582e9\",\n  },\n  {\n    courses: [\n      {\n        course_name: \"Biology\",\n        course_code: \"b213\",\n        description: \"description of b213\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"6103a37975cc702bbd1582e6\",\n      },\n      {\n        course_name: \"English\",\n        course_code: \"e213\",\n        description: \"description of e213\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"6102e72675cc702bbd1582e3\",\n      },\n    ],\n    position_title: \"Teaching basic Biology\",\n    description: \"Teaching basic Biology\",\n    school_level_id: {\n      school_level_name: \"O level\",\n      description: \"O level description\",\n      education_institute: [\"6100592f646ddb0771e8fc50\"],\n      courses: [],\n      school_level_id: \"61005989646ddb0771e8fc53\",\n    },\n    education_institute_id: {\n      education_category_title: \"WDA\",\n      school_levels: [],\n      description: \"WDA\",\n      education_institute_id: \"61005941646ddb0771e8fc51\",\n    },\n    requirements: [\n      {\n        user_detail_category_id: \"60fc4868f485d8dd91ed321e\",\n        title: \"Education\",\n        user_required_docs: [\n          {\n            user_detail_subcategory_id: \"60fc48dbf485d8dd91ed321f\",\n            title: \"A1\",\n          },\n        ],\n      },\n      {\n        user_detail_category_id: \"60fc47dff485d8dd91ed3219\",\n        title: \"Language\",\n        user_required_docs: [\n          {\n            user_detail_subcategory_id: \"6102e7ec248f742b674c67ad\",\n            title: \"English\",\n          },\n          {\n            user_detail_subcategory_id: \"6102e84c248f742b674c67af\",\n            title: \"Ikinyarwanda\",\n          },\n        ],\n      },\n    ],\n    position_id: \"6103a78475cc702bbd1582ea\",\n  },\n  {\n    courses: [\n      {\n        course_name: \"Biology\",\n        course_code: \"b213\",\n        description: \"description of b213\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"6103a37975cc702bbd1582e6\",\n      },\n      {\n        course_name: \"English\",\n        course_code: \"e213\",\n        description: \"description of e213\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"6102e72675cc702bbd1582e3\",\n      },\n    ],\n    position_title: \"Teaching basic physics\",\n    description: \"Teaching basic physics\",\n    school_level_id: {\n      school_level_name: \"A level\",\n      description: \"A level description\",\n      education_institute: [\n        \"6100592f646ddb0771e8fc50\",\n        \"61005941646ddb0771e8fc51\",\n      ],\n      courses: [],\n      school_level_id: \"61005974646ddb0771e8fc52\",\n    },\n    education_institute_id: {\n      education_category_title: \"WDA\",\n      school_levels: [],\n      description: \"WDA\",\n      education_institute_id: \"61005941646ddb0771e8fc51\",\n    },\n    requirements: [\n      {\n        user_detail_category_id: \"60fc4868f485d8dd91ed321e\",\n        title: \"Education\",\n        user_required_docs: [\n          {\n            user_detail_subcategory_id: \"60fc48dbf485d8dd91ed321f\",\n            title: \"A1\",\n          },\n        ],\n      },\n      {\n        user_detail_category_id: \"60fc47dff485d8dd91ed3219\",\n        title: \"Language\",\n        user_required_docs: [\n          {\n            user_detail_subcategory_id: \"6102e7ec248f742b674c67ad\",\n            title: \"English\",\n          },\n          {\n            user_detail_subcategory_id: \"6102e84c248f742b674c67af\",\n            title: \"Ikinyarwanda\",\n          },\n        ],\n      },\n    ],\n    position_id: \"6103a7ec75cc702bbd1582eb\",\n  },\n];\n\nexport const data_posts_school: PostSchoolInterface[] = [];\n\nexport const isEmptyOrSpaces = (str: string): boolean => {\n  return str === null || str.match(/^ *$/) !== null;\n};\n\nexport const getUserTitle = (\n  accessRoles: SystemUserRoleInterface[],\n  roleId: string\n): string => {\n  const result = accessRoles.find((e) => e.system_user_role_id === roleId);\n  return result ? result.role : \"\";\n};\n\nexport const getRoleById = (\n  roles: SystemUserRoleInterface[],\n  roleId: string\n): SystemUserRoleInterface => {\n  return roles.filter((role) => role.system_user_role_id === roleId)[0];\n};\n\nexport const getInstituteById = (\n  institutes: education_category[],\n  instituteId: string\n): education_category | undefined => {\n  return institutes.find((item) => item.education_institute_id === instituteId);\n};\n\nexport const getPositionById_old = (\n  positions: PositionAPI[],\n  position_id: string\n): PositionAPI => {\n  console.log({\n    positions,\n    position_id,\n    data: positions.filter(\n      (position) => position.position_id === position_id\n    )[0],\n  });\n  return positions.filter(\n    (position) => position.position_id === position_id\n  )[0];\n};\n\nexport const getPositionById = (\n  positions: PositionAPI[],\n  position_id: string\n): PositionAPI | undefined => {\n  console.log({\n    positions,\n    position_id,\n    data: positions.filter(\n      (position) => position.position_id === position_id\n    )[0],\n  });\n  return positions.find((position) => position.position_id === position_id);\n};\n\nexport const getSchoolById = (\n  schools: SchoolInfoInterface[],\n  school_id: string\n): SchoolInfoInterface => {\n  return schools.filter((school) => school.school_id === school_id)[0];\n};\n\nexport const getPostById = (\n  posts: PostSchoolInterface[],\n  post_id: string\n): PostSchoolInterface => {\n  return posts.filter((post) => post.school_id === post_id)[0];\n};\n\nexport const getPostsBySchoolId = (\n  posts: PostSchoolInterface[],\n  school_id: string\n): PostSchoolInterface[] => {\n  return posts.filter((post) => post.school_id === school_id);\n};\n\nexport const getPostsByIds = (\n  posts: PostSchoolInterface[],\n  school_id: string,\n  position_id: string\n): PostSchoolInterface[] => {\n  return posts.filter(\n    (post) => post.school_id === school_id && post.position_id === position_id\n  );\n};\n\nexport const displayDate = (dateToDisplay: Date): string => {\n  return new Intl.DateTimeFormat(\"en-GB\", {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"2-digit\",\n  }).format(dateToDisplay);\n};\n\nexport const userAccess = (\n  defaultAccess: RoleToUserInterface,\n  customAccess: CustomeAccessInterface\n): RoleToUserInterface => {\n  // const data = defaultAccess.access.map((default,index,customAccess)=>{\n  //   let data_custom = customAccess\n  //   if\n  // })\n  // return customAccess.filter((custom) => custom.id === accecc_id)[0];\n  return defaultAccess;\n};\n\n// export const groupBy = (list: [], keyGetter: Function) => {\n//   const map = new Map();\n//   list.forEach((item) => {\n//     const key = keyGetter(item);\n//     const collection = map.get(key);\n//     if (!collection) {\n//       map.set(key, [item]);\n//     } else {\n//       collection.push(item);\n//     }\n//   });\n//   return map;\n// };\n\nexport const toTwoDigit = (value: number): string => {\n  var dec = value - Math.floor(value);\n  value = value - dec;\n  return (\"0\" + value).slice(-2) + dec.toString().substr(1);\n};\n\nexport const toAnyDigit = (\n  value: NumberFormat,\n  padding: number = 3\n): string => {\n  var zeroes = new Array(padding + 1).join(\"0\");\n  return (zeroes + value).slice(-padding);\n};\n\nexport const choosenSchool = \"611fce914ce2093472232f5f\";\nexport const choosenDistrict = \"610bd1f3334bb2405fa5061e\";\n\nexport const capitalizeFirstLetter = (value: string): string => {\n  return value.charAt(0).toUpperCase() + value.slice(1);\n};\n\nexport const isDateExpiried = (paramDate: string) => {\n  const thisDate = new Date(paramDate);\n  const today = new Date();\n  if (thisDate.getTime() < today.getTime()) {\n    return true;\n  }\n\n  return false;\n};\n\nexport const exportData = [\n  {\n    userId: 1,\n    id: 1,\n    title:\n      \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\n    body: \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\",\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: \"qui est esse\",\n    body: \"est rerum tempore vitae\\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\\nqui aperiam non debitis possimus qui neque nisi nulla\",\n  },\n  {\n    userId: 1,\n    id: 3,\n    title: \"ea molestias quasi exercitationem repellat qui ipsa sit aut\",\n    body: \"et iusto sed quo iure\\nvoluptatem occaecati omnis eligendi aut ad\\nvoluptatem doloribus vel accusantium quis pariatur\\nmolestiae porro eius odio et labore et velit aut\",\n  },\n  {\n    userId: 1,\n    id: 4,\n    title: \"eum et est occaecati\",\n    body: \"ullam et saepe reiciendis voluptatem adipisci\\nsit amet autem assumenda provident rerum culpa\\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\\nquis sunt voluptatem rerum illo velit\",\n  },\n  {\n    userId: 1,\n    id: 5,\n    title: \"nesciunt quas odio\",\n    body: \"repudiandae veniam quaerat sunt sed\\nalias aut fugiat sit autem sed est\\nvoluptatem omnis possimus esse voluptatibus quis\\nest aut tenetur dolor neque\",\n  },\n  {\n    userId: 1,\n    id: 6,\n    title: \"dolorem eum magni eos aperiam quia\",\n    body: \"ut aspernatur corporis harum nihil quis provident sequi\\nmollitia nobis aliquid molestiae\\nperspiciatis et ea nemo ab reprehenderit accusantium quas\\nvoluptate dolores velit et doloremque molestiae\",\n  },\n  {\n    userId: 1,\n    id: 7,\n    title: \"magnam facilis autem\",\n    body: \"dolore placeat quibusdam ea quo vitae\\nmagni quis enim qui quis quo nemo aut saepe\\nquidem repellat excepturi ut quia\\nsunt ut sequi eos ea sed quas\",\n  },\n  {\n    userId: 1,\n    id: 8,\n    title: \"dolorem dolore est ipsam\",\n    body: \"dignissimos aperiam dolorem qui eum\\nfacilis quibusdam animi sint suscipit qui sint possimus cum\\nquaerat magni maiores excepturi\\nipsam ut commodi dolor voluptatum modi aut vitae\",\n  },\n  {\n    userId: 1,\n    id: 9,\n    title: \"nesciunt iure omnis dolorem tempora et accusantium\",\n    body: \"consectetur animi nesciunt iure dolore\\nenim quia ad\\nveniam autem ut quam aut nobis\\net est aut quod aut provident voluptas autem voluptas\",\n  },\n  {\n    userId: 1,\n    id: 10,\n    title: \"optio molestias id quia eum\",\n    body: \"quo et expedita modi cum officia vel magni\\ndoloribus qui repudiandae\\nvero nisi sit\\nquos veniam quod sed accusamus veritatis error\",\n  },\n  {\n    userId: 2,\n    id: 11,\n    title: \"et ea vero quia laudantium autem\",\n    body: \"delectus reiciendis molestiae occaecati non minima eveniet qui voluptatibus\\naccusamus in eum beatae sit\\nvel qui neque voluptates ut commodi qui incidunt\\nut animi commodi\",\n  },\n  {\n    userId: 2,\n    id: 12,\n    title: \"in quibusdam tempore odit est dolorem\",\n    body: \"itaque id aut magnam\\npraesentium quia et ea odit et ea voluptas et\\nsapiente quia nihil amet occaecati quia id voluptatem\\nincidunt ea est distinctio odio\",\n  },\n  {\n    userId: 2,\n    id: 13,\n    title: \"dolorum ut in voluptas mollitia et saepe quo animi\",\n    body: \"aut dicta possimus sint mollitia voluptas commodi quo doloremque\\niste corrupti reiciendis voluptatem eius rerum\\nsit cumque quod eligendi laborum minima\\nperferendis recusandae assumenda consectetur porro architecto ipsum ipsam\",\n  },\n  {\n    userId: 2,\n    id: 14,\n    title: \"voluptatem eligendi optio\",\n    body: \"fuga et accusamus dolorum perferendis illo voluptas\\nnon doloremque neque facere\\nad qui dolorum molestiae beatae\\nsed aut voluptas totam sit illum\",\n  },\n  {\n    userId: 2,\n    id: 15,\n    title: \"eveniet quod temporibus\",\n    body: \"reprehenderit quos placeat\\nvelit minima officia dolores impedit repudiandae molestiae nam\\nvoluptas recusandae quis delectus\\nofficiis harum fugiat vitae\",\n  },\n  {\n    userId: 2,\n    id: 16,\n    title:\n      \"sint suscipit perspiciatis velit dolorum rerum ipsa laboriosam odio\",\n    body: \"suscipit nam nisi quo aperiam aut\\nasperiores eos fugit maiores voluptatibus quia\\nvoluptatem quis ullam qui in alias quia est\\nconsequatur magni mollitia accusamus ea nisi voluptate dicta\",\n  },\n  {\n    userId: 2,\n    id: 17,\n    title: \"fugit voluptas sed molestias voluptatem provident\",\n    body: \"eos voluptas et aut odit natus earum\\naspernatur fuga molestiae ullam\\ndeserunt ratione qui eos\\nqui nihil ratione nemo velit ut aut id quo\",\n  },\n  {\n    userId: 2,\n    id: 18,\n    title: \"voluptate et itaque vero tempora molestiae\",\n    body: \"eveniet quo quis\\nlaborum totam consequatur non dolor\\nut et est repudiandae\\nest voluptatem vel debitis et magnam\",\n  },\n  {\n    userId: 2,\n    id: 19,\n    title: \"adipisci placeat illum aut reiciendis qui\",\n    body: \"illum quis cupiditate provident sit magnam\\nea sed aut omnis\\nveniam maiores ullam consequatur atque\\nadipisci quo iste expedita sit quos voluptas\",\n  },\n  {\n    userId: 2,\n    id: 20,\n    title: \"doloribus ad provident suscipit at\",\n    body: \"qui consequuntur ducimus possimus quisquam amet similique\\nsuscipit porro ipsam amet\\neos veritatis officiis exercitationem vel fugit aut necessitatibus totam\\nomnis rerum consequatur expedita quidem cumque explicabo\",\n  },\n  {\n    userId: 3,\n    id: 21,\n    title: \"asperiores ea ipsam voluptatibus modi minima quia sint\",\n    body: \"repellat aliquid praesentium dolorem quo\\nsed totam minus non itaque\\nnihil labore molestiae sunt dolor eveniet hic recusandae veniam\\ntempora et tenetur expedita sunt\",\n  },\n  {\n    userId: 3,\n    id: 22,\n    title: \"dolor sint quo a velit explicabo quia nam\",\n    body: \"eos qui et ipsum ipsam suscipit aut\\nsed omnis non odio\\nexpedita earum mollitia molestiae aut atque rem suscipit\\nnam impedit esse\",\n  },\n  {\n    userId: 3,\n    id: 23,\n    title: \"maxime id vitae nihil numquam\",\n    body: \"veritatis unde neque eligendi\\nquae quod architecto quo neque vitae\\nest illo sit tempora doloremque fugit quod\\net et vel beatae sequi ullam sed tenetur perspiciatis\",\n  },\n  {\n    userId: 3,\n    id: 24,\n    title: \"autem hic labore sunt dolores incidunt\",\n    body: \"enim et ex nulla\\nomnis voluptas quia qui\\nvoluptatem consequatur numquam aliquam sunt\\ntotam recusandae id dignissimos aut sed asperiores deserunt\",\n  },\n  {\n    userId: 3,\n    id: 25,\n    title: \"rem alias distinctio quo quis\",\n    body: \"ullam consequatur ut\\nomnis quis sit vel consequuntur\\nipsa eligendi ipsum molestiae et omnis error nostrum\\nmolestiae illo tempore quia et distinctio\",\n  },\n  {\n    userId: 3,\n    id: 26,\n    title: \"est et quae odit qui non\",\n    body: \"similique esse doloribus nihil accusamus\\nomnis dolorem fuga consequuntur reprehenderit fugit recusandae temporibus\\nperspiciatis cum ut laudantium\\nomnis aut molestiae vel vero\",\n  },\n  {\n    userId: 3,\n    id: 27,\n    title: \"quasi id et eos tenetur aut quo autem\",\n    body: \"eum sed dolores ipsam sint possimus debitis occaecati\\ndebitis qui qui et\\nut placeat enim earum aut odit facilis\\nconsequatur suscipit necessitatibus rerum sed inventore temporibus consequatur\",\n  },\n  {\n    userId: 3,\n    id: 28,\n    title: \"delectus ullam et corporis nulla voluptas sequi\",\n    body: \"non et quaerat ex quae ad maiores\\nmaiores recusandae totam aut blanditiis mollitia quas illo\\nut voluptatibus voluptatem\\nsimilique nostrum eum\",\n  },\n  {\n    userId: 3,\n    id: 29,\n    title: \"iusto eius quod necessitatibus culpa ea\",\n    body: \"odit magnam ut saepe sed non qui\\ntempora atque nihil\\naccusamus illum doloribus illo dolor\\neligendi repudiandae odit magni similique sed cum maiores\",\n  },\n  {\n    userId: 3,\n    id: 30,\n    title: \"a quo magni similique perferendis\",\n    body: \"alias dolor cumque\\nimpedit blanditiis non eveniet odio maxime\\nblanditiis amet eius quis tempora quia autem rem\\na provident perspiciatis quia\",\n  },\n  {\n    userId: 4,\n    id: 31,\n    title: \"ullam ut quidem id aut vel consequuntur\",\n    body: \"debitis eius sed quibusdam non quis consectetur vitae\\nimpedit ut qui consequatur sed aut in\\nquidem sit nostrum et maiores adipisci atque\\nquaerat voluptatem adipisci repudiandae\",\n  },\n  {\n    userId: 4,\n    id: 32,\n    title: \"doloremque illum aliquid sunt\",\n    body: \"deserunt eos nobis asperiores et hic\\nest debitis repellat molestiae optio\\nnihil ratione ut eos beatae quibusdam distinctio maiores\\nearum voluptates et aut adipisci ea maiores voluptas maxime\",\n  },\n  {\n    userId: 4,\n    id: 33,\n    title: \"qui explicabo molestiae dolorem\",\n    body: \"rerum ut et numquam laborum odit est sit\\nid qui sint in\\nquasi tenetur tempore aperiam et quaerat qui in\\nrerum officiis sequi cumque quod\",\n  },\n  {\n    userId: 4,\n    id: 34,\n    title: \"magnam ut rerum iure\",\n    body: \"ea velit perferendis earum ut voluptatem voluptate itaque iusto\\ntotam pariatur in\\nnemo voluptatem voluptatem autem magni tempora minima in\\nest distinctio qui assumenda accusamus dignissimos officia nesciunt nobis\",\n  },\n  {\n    userId: 4,\n    id: 35,\n    title: \"id nihil consequatur molestias animi provident\",\n    body: \"nisi error delectus possimus ut eligendi vitae\\nplaceat eos harum cupiditate facilis reprehenderit voluptatem beatae\\nmodi ducimus quo illum voluptas eligendi\\net nobis quia fugit\",\n  },\n  {\n    userId: 4,\n    id: 36,\n    title: \"fuga nam accusamus voluptas reiciendis itaque\",\n    body: \"ad mollitia et omnis minus architecto odit\\nvoluptas doloremque maxime aut non ipsa qui alias veniam\\nblanditiis culpa aut quia nihil cumque facere et occaecati\\nqui aspernatur quia eaque ut aperiam inventore\",\n  },\n  {\n    userId: 4,\n    id: 37,\n    title: \"provident vel ut sit ratione est\",\n    body: \"debitis et eaque non officia sed nesciunt pariatur vel\\nvoluptatem iste vero et ea\\nnumquam aut expedita ipsum nulla in\\nvoluptates omnis consequatur aut enim officiis in quam qui\",\n  },\n  {\n    userId: 4,\n    id: 38,\n    title: \"explicabo et eos deleniti nostrum ab id repellendus\",\n    body: \"animi esse sit aut sit nesciunt assumenda eum voluptas\\nquia voluptatibus provident quia necessitatibus ea\\nrerum repudiandae quia voluptatem delectus fugit aut id quia\\nratione optio eos iusto veniam iure\",\n  },\n  {\n    userId: 4,\n    id: 39,\n    title: \"eos dolorem iste accusantium est eaque quam\",\n    body: \"corporis rerum ducimus vel eum accusantium\\nmaxime aspernatur a porro possimus iste omnis\\nest in deleniti asperiores fuga aut\\nvoluptas sapiente vel dolore minus voluptatem incidunt ex\",\n  },\n  {\n    userId: 4,\n    id: 40,\n    title: \"enim quo cumque\",\n    body: \"ut voluptatum aliquid illo tenetur nemo sequi quo facilis\\nipsum rem optio mollitia quas\\nvoluptatem eum voluptas qui\\nunde omnis voluptatem iure quasi maxime voluptas nam\",\n  },\n  {\n    userId: 5,\n    id: 41,\n    title: \"non est facere\",\n    body: \"molestias id nostrum\\nexcepturi molestiae dolore omnis repellendus quaerat saepe\\nconsectetur iste quaerat tenetur asperiores accusamus ex ut\\nnam quidem est ducimus sunt debitis saepe\",\n  },\n  {\n    userId: 5,\n    id: 42,\n    title:\n      \"commodi ullam sint et excepturi error explicabo praesentium voluptas\",\n    body: \"odio fugit voluptatum ducimus earum autem est incidunt voluptatem\\nodit reiciendis aliquam sunt sequi nulla dolorem\\nnon facere repellendus voluptates quia\\nratione harum vitae ut\",\n  },\n  {\n    userId: 5,\n    id: 43,\n    title:\n      \"eligendi iste nostrum consequuntur adipisci praesentium sit beatae perferendis\",\n    body: \"similique fugit est\\nillum et dolorum harum et voluptate eaque quidem\\nexercitationem quos nam commodi possimus cum odio nihil nulla\\ndolorum exercitationem magnam ex et a et distinctio debitis\",\n  },\n  {\n    userId: 5,\n    id: 44,\n    title: \"optio dolor molestias sit\",\n    body: \"temporibus est consectetur dolore\\net libero debitis vel velit laboriosam quia\\nipsum quibusdam qui itaque fuga rem aut\\nea et iure quam sed maxime ut distinctio quae\",\n  },\n  {\n    userId: 5,\n    id: 45,\n    title: \"ut numquam possimus omnis eius suscipit laudantium iure\",\n    body: \"est natus reiciendis nihil possimus aut provident\\nex et dolor\\nrepellat pariatur est\\nnobis rerum repellendus dolorem autem\",\n  },\n  {\n    userId: 5,\n    id: 46,\n    title: \"aut quo modi neque nostrum ducimus\",\n    body: \"voluptatem quisquam iste\\nvoluptatibus natus officiis facilis dolorem\\nquis quas ipsam\\nvel et voluptatum in aliquid\",\n  },\n  {\n    userId: 5,\n    id: 47,\n    title: \"quibusdam cumque rem aut deserunt\",\n    body: \"voluptatem assumenda ut qui ut cupiditate aut impedit veniam\\noccaecati nemo illum voluptatem laudantium\\nmolestiae beatae rerum ea iure soluta nostrum\\neligendi et voluptate\",\n  },\n  {\n    userId: 5,\n    id: 48,\n    title: \"ut voluptatem illum ea doloribus itaque eos\",\n    body: \"voluptates quo voluptatem facilis iure occaecati\\nvel assumenda rerum officia et\\nillum perspiciatis ab deleniti\\nlaudantium repellat ad ut et autem reprehenderit\",\n  },\n  {\n    userId: 5,\n    id: 49,\n    title: \"laborum non sunt aut ut assumenda perspiciatis voluptas\",\n    body: \"inventore ab sint\\nnatus fugit id nulla sequi architecto nihil quaerat\\neos tenetur in in eum veritatis non\\nquibusdam officiis aspernatur cumque aut commodi aut\",\n  },\n  {\n    userId: 5,\n    id: 50,\n    title:\n      \"repellendus qui recusandae incidunt voluptates tenetur qui omnis exercitationem\",\n    body: \"error suscipit maxime adipisci consequuntur recusandae\\nvoluptas eligendi et est et voluptates\\nquia distinctio ab amet quaerat molestiae et vitae\\nadipisci impedit sequi nesciunt quis consectetur\",\n  },\n  {\n    userId: 6,\n    id: 51,\n    title: \"soluta aliquam aperiam consequatur illo quis voluptas\",\n    body: \"sunt dolores aut doloribus\\ndolore doloribus voluptates tempora et\\ndoloremque et quo\\ncum asperiores sit consectetur dolorem\",\n  },\n  {\n    userId: 6,\n    id: 52,\n    title: \"qui enim et consequuntur quia animi quis voluptate quibusdam\",\n    body: \"iusto est quibusdam fuga quas quaerat molestias\\na enim ut sit accusamus enim\\ntemporibus iusto accusantium provident architecto\\nsoluta esse reprehenderit qui laborum\",\n  },\n  {\n    userId: 6,\n    id: 53,\n    title: \"ut quo aut ducimus alias\",\n    body: \"minima harum praesentium eum rerum illo dolore\\nquasi exercitationem rerum nam\\nporro quis neque quo\\nconsequatur minus dolor quidem veritatis sunt non explicabo similique\",\n  },\n  {\n    userId: 6,\n    id: 54,\n    title: \"sit asperiores ipsam eveniet odio non quia\",\n    body: \"totam corporis dignissimos\\nvitae dolorem ut occaecati accusamus\\nex velit deserunt\\net exercitationem vero incidunt corrupti mollitia\",\n  },\n  {\n    userId: 6,\n    id: 55,\n    title: \"sit vel voluptatem et non libero\",\n    body: \"debitis excepturi ea perferendis harum libero optio\\neos accusamus cum fuga ut sapiente repudiandae\\net ut incidunt omnis molestiae\\nnihil ut eum odit\",\n  },\n  {\n    userId: 6,\n    id: 56,\n    title: \"qui et at rerum necessitatibus\",\n    body: \"aut est omnis dolores\\nneque rerum quod ea rerum velit pariatur beatae excepturi\\net provident voluptas corrupti\\ncorporis harum reprehenderit dolores eligendi\",\n  },\n  {\n    userId: 6,\n    id: 57,\n    title: \"sed ab est est\",\n    body: \"at pariatur consequuntur earum quidem\\nquo est laudantium soluta voluptatem\\nqui ullam et est\\net cum voluptas voluptatum repellat est\",\n  },\n  {\n    userId: 6,\n    id: 58,\n    title: \"voluptatum itaque dolores nisi et quasi\",\n    body: \"veniam voluptatum quae adipisci id\\net id quia eos ad et dolorem\\naliquam quo nisi sunt eos impedit error\\nad similique veniam\",\n  },\n  {\n    userId: 6,\n    id: 59,\n    title: \"qui commodi dolor at maiores et quis id accusantium\",\n    body: \"perspiciatis et quam ea autem temporibus non voluptatibus qui\\nbeatae a earum officia nesciunt dolores suscipit voluptas et\\nanimi doloribus cum rerum quas et magni\\net hic ut ut commodi expedita sunt\",\n  },\n  {\n    userId: 6,\n    id: 60,\n    title:\n      \"consequatur placeat omnis quisquam quia reprehenderit fugit veritatis facere\",\n    body: \"asperiores sunt ab assumenda cumque modi velit\\nqui esse omnis\\nvoluptate et fuga perferendis voluptas\\nillo ratione amet aut et omnis\",\n  },\n  {\n    userId: 7,\n    id: 61,\n    title: \"voluptatem doloribus consectetur est ut ducimus\",\n    body: \"ab nemo optio odio\\ndelectus tenetur corporis similique nobis repellendus rerum omnis facilis\\nvero blanditiis debitis in nesciunt doloribus dicta dolores\\nmagnam minus velit\",\n  },\n  {\n    userId: 7,\n    id: 62,\n    title: \"beatae enim quia vel\",\n    body: \"enim aspernatur illo distinctio quae praesentium\\nbeatae alias amet delectus qui voluptate distinctio\\nodit sint accusantium autem omnis\\nquo molestiae omnis ea eveniet optio\",\n  },\n  {\n    userId: 7,\n    id: 63,\n    title:\n      \"voluptas blanditiis repellendus animi ducimus error sapiente et suscipit\",\n    body: \"enim adipisci aspernatur nemo\\nnumquam omnis facere dolorem dolor ex quis temporibus incidunt\\nab delectus culpa quo reprehenderit blanditiis asperiores\\naccusantium ut quam in voluptatibus voluptas ipsam dicta\",\n  },\n  {\n    userId: 7,\n    id: 64,\n    title: \"et fugit quas eum in in aperiam quod\",\n    body: \"id velit blanditiis\\neum ea voluptatem\\nmolestiae sint occaecati est eos perspiciatis\\nincidunt a error provident eaque aut aut qui\",\n  },\n  {\n    userId: 7,\n    id: 65,\n    title: \"consequatur id enim sunt et et\",\n    body: \"voluptatibus ex esse\\nsint explicabo est aliquid cumque adipisci fuga repellat labore\\nmolestiae corrupti ex saepe at asperiores et perferendis\\nnatus id esse incidunt pariatur\",\n  },\n  {\n    userId: 7,\n    id: 66,\n    title: \"repudiandae ea animi iusto\",\n    body: \"officia veritatis tenetur vero qui itaque\\nsint non ratione\\nsed et ut asperiores iusto eos molestiae nostrum\\nveritatis quibusdam et nemo iusto saepe\",\n  },\n  {\n    userId: 7,\n    id: 67,\n    title: \"aliquid eos sed fuga est maxime repellendus\",\n    body: \"reprehenderit id nostrum\\nvoluptas doloremque pariatur sint et accusantium quia quod aspernatur\\net fugiat amet\\nnon sapiente et consequatur necessitatibus molestiae\",\n  },\n  {\n    userId: 7,\n    id: 68,\n    title: \"odio quis facere architecto reiciendis optio\",\n    body: \"magnam molestiae perferendis quisquam\\nqui cum reiciendis\\nquaerat animi amet hic inventore\\nea quia deleniti quidem saepe porro velit\",\n  },\n  {\n    userId: 7,\n    id: 69,\n    title: \"fugiat quod pariatur odit minima\",\n    body: \"officiis error culpa consequatur modi asperiores et\\ndolorum assumenda voluptas et vel qui aut vel rerum\\nvoluptatum quisquam perspiciatis quia rerum consequatur totam quas\\nsequi commodi repudiandae asperiores et saepe a\",\n  },\n  {\n    userId: 7,\n    id: 70,\n    title: \"voluptatem laborum magni\",\n    body: \"sunt repellendus quae\\nest asperiores aut deleniti esse accusamus repellendus quia aut\\nquia dolorem unde\\neum tempora esse dolore\",\n  },\n  {\n    userId: 8,\n    id: 71,\n    title: \"et iusto veniam et illum aut fuga\",\n    body: \"occaecati a doloribus\\niste saepe consectetur placeat eum voluptate dolorem et\\nqui quo quia voluptas\\nrerum ut id enim velit est perferendis\",\n  },\n  {\n    userId: 8,\n    id: 72,\n    title: \"sint hic doloribus consequatur eos non id\",\n    body: \"quam occaecati qui deleniti consectetur\\nconsequatur aut facere quas exercitationem aliquam hic voluptas\\nneque id sunt ut aut accusamus\\nsunt consectetur expedita inventore velit\",\n  },\n  {\n    userId: 8,\n    id: 73,\n    title: \"consequuntur deleniti eos quia temporibus ab aliquid at\",\n    body: \"voluptatem cumque tenetur consequatur expedita ipsum nemo quia explicabo\\naut eum minima consequatur\\ntempore cumque quae est et\\net in consequuntur voluptatem voluptates aut\",\n  },\n  {\n    userId: 8,\n    id: 74,\n    title: \"enim unde ratione doloribus quas enim ut sit sapiente\",\n    body: \"odit qui et et necessitatibus sint veniam\\nmollitia amet doloremque molestiae commodi similique magnam et quam\\nblanditiis est itaque\\nquo et tenetur ratione occaecati molestiae tempora\",\n  },\n  {\n    userId: 8,\n    id: 75,\n    title: \"dignissimos eum dolor ut enim et delectus in\",\n    body: \"commodi non non omnis et voluptas sit\\nautem aut nobis magnam et sapiente voluptatem\\net laborum repellat qui delectus facilis temporibus\\nrerum amet et nemo voluptate expedita adipisci error dolorem\",\n  },\n  {\n    userId: 8,\n    id: 76,\n    title: \"doloremque officiis ad et non perferendis\",\n    body: \"ut animi facere\\ntotam iusto tempore\\nmolestiae eum aut et dolorem aperiam\\nquaerat recusandae totam odio\",\n  },\n  {\n    userId: 8,\n    id: 77,\n    title: \"necessitatibus quasi exercitationem odio\",\n    body: \"modi ut in nulla repudiandae dolorum nostrum eos\\naut consequatur omnis\\nut incidunt est omnis iste et quam\\nvoluptates sapiente aliquam asperiores nobis amet corrupti repudiandae provident\",\n  },\n  {\n    userId: 8,\n    id: 78,\n    title: \"quam voluptatibus rerum veritatis\",\n    body: \"nobis facilis odit tempore cupiditate quia\\nassumenda doloribus rerum qui ea\\nillum et qui totam\\naut veniam repellendus\",\n  },\n  {\n    userId: 8,\n    id: 79,\n    title: \"pariatur consequatur quia magnam autem omnis non amet\",\n    body: \"libero accusantium et et facere incidunt sit dolorem\\nnon excepturi qui quia sed laudantium\\nquisquam molestiae ducimus est\\nofficiis esse molestiae iste et quos\",\n  },\n  {\n    userId: 8,\n    id: 80,\n    title: \"labore in ex et explicabo corporis aut quas\",\n    body: \"ex quod dolorem ea eum iure qui provident amet\\nquia qui facere excepturi et repudiandae\\nasperiores molestias provident\\nminus incidunt vero fugit rerum sint sunt excepturi provident\",\n  },\n  {\n    userId: 9,\n    id: 81,\n    title: \"tempora rem veritatis voluptas quo dolores vero\",\n    body: \"facere qui nesciunt est voluptatum voluptatem nisi\\nsequi eligendi necessitatibus ea at rerum itaque\\nharum non ratione velit laboriosam quis consequuntur\\nex officiis minima doloremque voluptas ut aut\",\n  },\n  {\n    userId: 9,\n    id: 82,\n    title: \"laudantium voluptate suscipit sunt enim enim\",\n    body: \"ut libero sit aut totam inventore sunt\\nporro sint qui sunt molestiae\\nconsequatur cupiditate qui iste ducimus adipisci\\ndolor enim assumenda soluta laboriosam amet iste delectus hic\",\n  },\n  {\n    userId: 9,\n    id: 83,\n    title: \"odit et voluptates doloribus alias odio et\",\n    body: \"est molestiae facilis quis tempora numquam nihil qui\\nvoluptate sapiente consequatur est qui\\nnecessitatibus autem aut ipsa aperiam modi dolore numquam\\nreprehenderit eius rem quibusdam\",\n  },\n  {\n    userId: 9,\n    id: 84,\n    title:\n      \"optio ipsam molestias necessitatibus occaecati facilis veritatis dolores aut\",\n    body: \"sint molestiae magni a et quos\\neaque et quasi\\nut rerum debitis similique veniam\\nrecusandae dignissimos dolor incidunt consequatur odio\",\n  },\n  {\n    userId: 9,\n    id: 85,\n    title: \"dolore veritatis porro provident adipisci blanditiis et sunt\",\n    body: \"similique sed nisi voluptas iusto omnis\\nmollitia et quo\\nassumenda suscipit officia magnam sint sed tempora\\nenim provident pariatur praesentium atque animi amet ratione\",\n  },\n  {\n    userId: 9,\n    id: 86,\n    title: \"placeat quia et porro iste\",\n    body: \"quasi excepturi consequatur iste autem temporibus sed molestiae beatae\\net quaerat et esse ut\\nvoluptatem occaecati et vel explicabo autem\\nasperiores pariatur deserunt optio\",\n  },\n  {\n    userId: 9,\n    id: 87,\n    title: \"nostrum quis quasi placeat\",\n    body: \"eos et molestiae\\nnesciunt ut a\\ndolores perspiciatis repellendus repellat aliquid\\nmagnam sint rem ipsum est\",\n  },\n  {\n    userId: 9,\n    id: 88,\n    title: \"sapiente omnis fugit eos\",\n    body: \"consequatur omnis est praesentium\\nducimus non iste\\nneque hic deserunt\\nvoluptatibus veniam cum et rerum sed\",\n  },\n  {\n    userId: 9,\n    id: 89,\n    title: \"sint soluta et vel magnam aut ut sed qui\",\n    body: \"repellat aut aperiam totam temporibus autem et\\narchitecto magnam ut\\nconsequatur qui cupiditate rerum quia soluta dignissimos nihil iure\\ntempore quas est\",\n  },\n  {\n    userId: 9,\n    id: 90,\n    title: \"ad iusto omnis odit dolor voluptatibus\",\n    body: \"minus omnis soluta quia\\nqui sed adipisci voluptates illum ipsam voluptatem\\neligendi officia ut in\\neos soluta similique molestias praesentium blanditiis\",\n  },\n  {\n    userId: 10,\n    id: 91,\n    title: \"aut amet sed\",\n    body: \"libero voluptate eveniet aperiam sed\\nsunt placeat suscipit molestias\\nsimilique fugit nam natus\\nexpedita consequatur consequatur dolores quia eos et placeat\",\n  },\n  {\n    userId: 10,\n    id: 92,\n    title: \"ratione ex tenetur perferendis\",\n    body: \"aut et excepturi dicta laudantium sint rerum nihil\\nlaudantium et at\\na neque minima officia et similique libero et\\ncommodi voluptate qui\",\n  },\n  {\n    userId: 10,\n    id: 93,\n    title: \"beatae soluta recusandae\",\n    body: \"dolorem quibusdam ducimus consequuntur dicta aut quo laboriosam\\nvoluptatem quis enim recusandae ut sed sunt\\nnostrum est odit totam\\nsit error sed sunt eveniet provident qui nulla\",\n  },\n  {\n    userId: 10,\n    id: 94,\n    title: \"qui qui voluptates illo iste minima\",\n    body: \"aspernatur expedita soluta quo ab ut similique\\nexpedita dolores amet\\nsed temporibus distinctio magnam saepe deleniti\\nomnis facilis nam ipsum natus sint similique omnis\",\n  },\n  {\n    userId: 10,\n    id: 95,\n    title: \"id minus libero illum nam ad officiis\",\n    body: \"earum voluptatem facere provident blanditiis velit laboriosam\\npariatur accusamus odio saepe\\ncumque dolor qui a dicta ab doloribus consequatur omnis\\ncorporis cupiditate eaque assumenda ad nesciunt\",\n  },\n  {\n    userId: 10,\n    id: 96,\n    title: \"quaerat velit veniam amet cupiditate aut numquam ut sequi\",\n    body: \"in non odio excepturi sint eum\\nlabore voluptates vitae quia qui et\\ninventore itaque rerum\\nveniam non exercitationem delectus aut\",\n  },\n  {\n    userId: 10,\n    id: 97,\n    title: \"quas fugiat ut perspiciatis vero provident\",\n    body: \"eum non blanditiis soluta porro quibusdam voluptas\\nvel voluptatem qui placeat dolores qui velit aut\\nvel inventore aut cumque culpa explicabo aliquid at\\nperspiciatis est et voluptatem dignissimos dolor itaque sit nam\",\n  },\n  {\n    userId: 10,\n    id: 98,\n    title: \"laboriosam dolor voluptates\",\n    body: \"doloremque ex facilis sit sint culpa\\nsoluta assumenda eligendi non ut eius\\nsequi ducimus vel quasi\\nveritatis est dolores\",\n  },\n  {\n    userId: 10,\n    id: 99,\n    title: \"temporibus sit alias delectus eligendi possimus magni\",\n    body: \"quo deleniti praesentium dicta non quod\\naut est molestias\\nmolestias et officia quis nihil\\nitaque dolorem quia\",\n  },\n  {\n    userId: 10,\n    id: 100,\n    title: \"at nam consequatur ea labore ea harum\",\n    body: \"cupiditate quo est a modi nesciunt soluta\\nipsa voluptas error itaque dicta in\\nautem qui minus magnam et distinctio eum\\naccusamus ratione error aut\",\n  },\n];\n","import React, { useEffect, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport { MdNavigateBefore, MdNavigateNext, MdSearch } from \"react-icons/md\";\n\nconst FC_makeID = (length: number = 5): string => {\n  let result: string = \"\";\n  let characters: string =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  let charactersLength = characters.length;\n  for (let i: number = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\nexport const sortThisColumn = (\n  tableId: string,\n  colIndex: number = 0,\n  dir: \"asc\" | \"desc\" = \"asc\"\n) => {\n  var table,\n    rows,\n    switching,\n    i,\n    x,\n    y,\n    shouldSwitch,\n    switchcount = 0;\n  table = document.getElementById(tableId) as HTMLTableElement;\n  switching = true;\n  /* Make a loop that will continue until\n  no switching has been done: */\n  if (table) {\n    while (switching) {\n      //start by saying: no switching is done:\n      switching = false;\n      rows = table.rows;\n      /*Loop through all table rows (except the\n    first, which contains table headers):*/\n      for (i = 1; i < rows.length - 1; i++) {\n        //start by saying there should be no switching:\n        shouldSwitch = false;\n        /*Get the two elements you want to compare,\n      one from current row and one from the next:*/\n        x = rows[i].getElementsByTagName(\"TD\")[colIndex];\n        y = rows[i + 1].getElementsByTagName(\"TD\")[colIndex];\n        /*check if the two rows should switch place,\n      based on the direction, asc or desc:*/\n        if (dir === \"asc\" && x && y) {\n          if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        } else if (dir === \"desc\" && x && y) {\n          if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        }\n      }\n      if (shouldSwitch && rows[i].parentNode) {\n        /*If a switch has been marked, make the switch\n      and mark that a switch has been done:*/\n        rows[i].parentNode!.insertBefore(rows[i + 1], rows[i]);\n        switching = true;\n        //Each time a switch is done, increase this count by 1:\n        switchcount++;\n      } else {\n        /*If no switching has been done AND the direction is \"asc\",\n      set the direction to \"desc\" and run the while loop again.*/\n        if (switchcount === 0 && dir === \"asc\") {\n          dir = \"desc\";\n          switching = true;\n        }\n      }\n      // if (i === 0) continue;\n      // rows.cells[i].style.backgroundColor = \"blue\";\n    }\n  }\n};\n\nexport interface TableColumnsInterface {\n  columnTitle: JSX.Element | string;\n  alignText: string;\n  padding?: string;\n  isSortAllowed?: boolean;\n}\n\ninterface TableProps {\n  columns: TableColumnsInterface[];\n  rows: Function;\n  hideColumns?: boolean;\n  pagination?: boolean;\n  search?: boolean;\n  tableSize?: string;\n  tableClass?: string;\n  tableId?: string;\n  rounded?: boolean;\n  searchBG?: string;\n  thColor?: string;\n  loading?: boolean;\n}\n\nconst Table: React.FC<TableProps> = (props) => {\n  const startPage = 1;\n  const tableId =\n    !props.tableId || props.tableId === \"myTable\" ? FC_makeID() : props.tableId;\n  let table: HTMLElement, tr: HTMLCollectionOf<HTMLTableRowElement>;\n  const [totalItems, setTotalItems] = useState<number>(0);\n  const [totalPages, setTotalPages] = useState<number>(1);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [pages, setPages] = useState<number[]>();\n  const [pageSize, setPageSize] = useState<number>(10);\n  const [startIndex, setStartIndex] = useState<number>(0);\n  const [endIndex, setEndIndex] = useState<number>(0);\n\n  useEffect(() => {\n    props.pagination && tablePagination();\n  });\n\n  const filterTable = (\n    data: string,\n    filterType?: \"default\" | \"field\"\n  ): void => {\n    var filter, tr, td, rows: number, cols: number, txtValue;\n    if (filterType === \"field\" && data === \"all\") data = \"\";\n    filter = data.toLowerCase();\n    table = document.getElementById(tableId!)!;\n    tr = table.getElementsByTagName(\"tr\");\n    for (rows = 0; rows < tr.length; rows++) {\n      for (cols = 0; cols < props.columns.length; cols++) {\n        td = tr[rows].getElementsByTagName(\"td\")[cols];\n        if (td) {\n          txtValue = td.textContent || td.innerText;\n          if (txtValue.toLowerCase().indexOf(filter) > -1) {\n            tr[rows].style.display = \"\";\n            break;\n          } else {\n            tr[rows].style.display = \"none\";\n          }\n        }\n      }\n    }\n  };\n\n  const tablePagination = (): void => {\n    table = document.getElementById(tableId)!;\n    tr = table.getElementsByTagName(\"tr\");\n    setTotalItems(tr.length);\n    setTotalPages(Math.ceil(totalItems / pageSize));\n\n    // calculate start and end item indexes on the current page\n    setStartIndex((currentPage - 1) * pageSize);\n    setEndIndex(Math.min(startIndex + pageSize - 1, totalItems - 1));\n\n    /**\n     * TODO!\n     * There is a problem with this condition\n     */\n    let _pages = Array.from(Array(totalPages + 1 - startPage).keys()).map(\n      (i) => startPage + i\n    );\n    if (!pages || _pages.length !== pages.length) {\n      setPages(_pages);\n    }\n\n    for (let i: number = 0; i < tr.length; i++) {\n      if (i >= startIndex && i <= endIndex) {\n        tr[i].style.display = \"\";\n      } else {\n        tr[i].style.display = \"none\";\n      }\n    }\n  };\n\n  return (\n    <div className={`${props.tableSize} overflow-x-auto`}>\n      {/* search box  */}\n      {props.search && (\n        <div className={`${props.searchBG} w-full mb-2`}>\n          {props.search && (\n            <div className=\"bg-white rounded flex items-center w-full p-2 border-2 border-gray-500\">\n              <MdSearch className=\"h-5 w-5 fill-current text-gray-400\" />\n              <input\n                type=\"search\"\n                placeholder=\"search\"\n                onChange={(e) => filterTable(e.target.value)}\n                className=\"w-full h-6 pl-4 text-sm outline-none focus:outline-none bg-white\"\n                disabled={props.loading}\n              />\n\n              {props.pagination && (\n                <div className=\"select\">\n                  <select\n                    className=\"text-base outline-none focus:outline-none bg-white\"\n                    onChange={(e) => setPageSize(Number(e.target.value))}\n                    disabled={props.loading}\n                  >\n                    <option value=\"10\">10</option>\n                    <option value=\"25\">25</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                  </select>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n      <div className=\"overflow-x-auto w-full\">\n        <table\n          className={\n            props.tableClass\n              ? props.tableClass\n              : `w-full shadow ${\n                  props.rounded && \"sm:rounded-lg\"\n                } table-auto order-table`\n          }\n          id={tableId}\n        >\n          {!props.hideColumns && (\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-base\">\n              <tr\n                className={`text-left tracking-wide bg-${props.thColor}-100 border-b-2 border-${props.thColor}-500 text-${props.thColor}-600`}\n              >\n                {props.columns.map((column, index) => (\n                  <th\n                    key={index}\n                    className={`${column.padding} text-${\n                      column.alignText\n                    } px-3 py-2 ${column.isSortAllowed && \"cursor-pointer\"}`}\n                    onClick={() =>\n                      column.isSortAllowed && sortThisColumn(tableId, index)\n                    }\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      {column.columnTitle}\n                      {column.isSortAllowed && <BiSort />}\n                    </div>\n                  </th>\n                ))}\n              </tr>\n            </thead>\n          )}\n          <tbody id=\"table-data\" className=\"bg-white text-black text-base\">\n            {props.rows()}\n          </tbody>\n        </table>\n        {props.pagination && (\n          <div className=\"sm:flex-1 sm:flex sm:items-center sm:justify-between mt-4 work-sans\">\n            <div>\n              <span className=\"text-xs xs:text-sm text-gray-900\">\n                Showing 1 to {pageSize} of {totalItems - 1} Entries\n              </span>\n            </div>\n            <div>\n              <nav className=\"inline-flex shadow-sm\">\n                <div>\n                  <button\n                    type=\"button\"\n                    className={`inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 text-sm font-medium text-gray-500 ${\n                      currentPage !== 1 && \"bg-white\"\n                    }`}\n                    aria-label=\"Previous\"\n                    disabled={currentPage === 1 || props.loading}\n                    onClick={() => setCurrentPage(currentPage - 1)}\n                  >\n                    <MdNavigateBefore className=\"h-5 w-5\" />\n                  </button>\n                </div>\n                <div>\n                  {pages &&\n                    pages.map((page, pageIndex) => (\n                      <button\n                        key={pageIndex}\n                        className={`-ml-px inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium text-gray-700 ${\n                          page !== currentPage\n                            ? \"bg-white\"\n                            : \"bg-gray-100 cursor-default\"\n                        }`}\n                        disabled={page === currentPage || props.loading}\n                        onClick={() => setCurrentPage(page)}\n                      >\n                        {page}\n                      </button>\n                    ))}\n                </div>\n                <div>\n                  <button\n                    type=\"button\"\n                    className={`inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 text-sm leading-5 font-medium text-gray-500 ${\n                      currentPage !== totalPages && \"bg-white\"\n                    }`}\n                    aria-label=\"Next\"\n                    disabled={currentPage === totalPages || props.loading}\n                    onClick={() => setCurrentPage(currentPage + 1)}\n                  >\n                    <MdNavigateNext className=\"h-5 w-5\" />\n                  </button>\n                </div>\n              </nav>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Table;\n","import React, { FC, ReactElement, ReactNode } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, System } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { NavToogle, PageHasSubNav } from \"../../actions\";\nimport { MdBrightness1, MdSearch } from \"react-icons/md\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  system: System;\n  PageHasSubNav: Function;\n  NavToogle: Function;\n  children: ReactNode;\n}\n//\ninterface AppState {\n  loading: boolean;\n}\n\nclass _SideNavigation extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount = () => this.props.PageHasSubNav(true);\n  componentWillUnmount = () => this.props.PageHasSubNav(false);\n\n  render() {\n    const isAuthenticated = this.props.auth.isAuthenticated;\n\n    if (isAuthenticated === false) {\n      return null;\n    }\n\n    const navActive = this.props.system.navigation;\n    return (\n      <div\n        className={`fixed w-48 p-1 pr-2 pl-6 text-gray-700 bg-white ${\n          navActive === true ? \"lg:left-16  left-16\" : \" -left-72 lg:left-16\"\n        }  top-0 bottom-0 pt-20 z-30 shadow-lg  transition-all duration-500 ease-in-out overflow-y-auto`}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n}: StoreState): { auth: Auth; system: System } => {\n  return { auth: auth, system: system };\n};\n\nexport const SideNavigation = connect(mapStateToProps, {\n  NavToogle,\n  PageHasSubNav,\n})(_SideNavigation);\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SearchComponentInterface = {\n  data: any[];\n};\n\nexport const Search: FC<SearchComponentInterface> = ({\n  data,\n}): ReactElement => {\n  return (\n    <div className=\"m-1 rounded-md shadow-md border border-blue-400 bg-white p-1 flex \">\n      <label htmlFor=\"search-text\" className=\"inline-block text-2xl\">\n        <MdSearch className=\"inline-block text-blue-400\" />\n      </label>\n      <input\n        type=\"search\"\n        className=\"outline-none bg-transparent flex-1 pl-1\"\n        placeholder=\"Search\"\n        id=\"search-text\"\n      />\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype MainItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const MainItem: FC<MainItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n  return (\n    <section\n      className={`${\n        active === true\n          ? \"bg-blue-500 text-white font-bold\"\n          : \"bg-blue-100 text-blue-800\"\n      } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex cursor-pointer items-center`}\n    >\n      <section className=\"flex-1\">\n        <IconDefined className=\"inline-block mr-1 text-xs\" />\n        <span>{title}</span>\n      </section>\n\n      {count > 0 ? (\n        <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n          {count}\n        </span>\n      ) : null}\n    </section>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemContainerComponentInterface = {\n  children: ReactNode;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const SubItemContainer: FC<SubItemContainerComponentInterface> = ({\n  children,\n}): ReactElement => {\n  return (\n    <div className=\"ml-3 overflow-y-auto border-l-2 border-blue-200 -mt-1 pt-2 mb-2 pl-1 cursor-pointer\">\n      {children}\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n * @important Remenber to use these components inside the <SubItemContainer>...</SubItemContainer>\n */\nexport const SubItem: FC<SubItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n\n  return (\n    <div\n      className={`animate__animated animate__zoomIn animate__faster ${\n        active === true ? \"bg-blue-500 text-white font-bold\" : \" text-blue-800\"\n      } text-blue-800 bg-blue-200 rounded-md px-1 mb-1 flex items-center py-1 font-bold`}\n    >\n      <IconDefined\n        className={`inline-block mr-0.1 text-xs ${\n          active === true ? \"text-white\" : \"\"\n        }`}\n      />\n      <span\n        className={`inline-block pl-1 ${active === true ? \"text-white\" : \"\"}`}\n      >\n        {title}\n      </span>\n      {count >= 1 ? (\n        <span\n          className={`text-sm fint-bold ${active === true ? \"text-white\" : \"\"}`}\n        >\n          {count}\n        </span>\n      ) : null}\n    </div>\n  );\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PlansTypeInterface, SessionPlanInterface } from \"../interfaces\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// GET ACTIVE PLAN TYPES\nexport interface GetPlansTypesAction {\n  type: ActionTypes.GET_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// GET INACTIVE PLAN TYPES\nexport interface GetDeletedPlansTypesAction {\n  type: ActionTypes.GET_DELETED_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// CREATE PLAN TYPE\nexport interface CreatePlansTypeAction {\n  type: ActionTypes.CREATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// UPDATE PLAN TYPE\nexport interface UpdatePlansTypeAction {\n  type: ActionTypes.UPDATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// DELETE PLAN TYPE\nexport interface DeletePlansTypeAction {\n  type: ActionTypes.DELETE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// SET PLAN TYPE =====================================\nexport interface setSelectedPlanTypeActions {\n  type: ActionTypes.SELECT_PLAN_TYPE;\n  payload: PlansTypeInterface | \"all\";\n}\n\n// GET ALL SESSION PLAN\nexport interface GetAllSessionPlansAction {\n  type: ActionTypes.GET_ALL_SESSION_PLANS;\n  payload: SessionPlanInterface[];\n}\n\n// GET ACTIVE SESSION PLAN\nexport interface GetActiveSessionPlanAction {\n  type: ActionTypes.GET_ACTIVE_SESSION_PLANS;\n  payload: SessionPlanInterface | \"none\";\n}\n\n// CREATE SESSION PLAN\nexport interface CreateSessionPlansAction {\n  type: ActionTypes.CREATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// UPDATE SESSION PLAN\nexport interface UpdateSessionPlansAction {\n  type: ActionTypes.UPDATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// ACTIVATE SESSION PLAN\nexport interface ActivateSessionPlansAction {\n  type: ActionTypes.SESSION_ACTIVATION;\n  payload: SessionPlanInterface;\n}\n\n// DELETE SESSION PLAN\nexport interface DeleteSessionPlanAction {\n  type: ActionTypes.DELETE_SESSION_PLAN;\n  payload: string;\n}\n\nexport type SessionActionType =\n  | GetPlansTypesAction\n  | GetDeletedPlansTypesAction\n  | CreatePlansTypeAction\n  | UpdatePlansTypeAction\n  | DeletePlansTypeAction\n  | GetAllSessionPlansAction\n  | GetActiveSessionPlanAction\n  | CreateSessionPlansAction\n  | UpdateSessionPlansAction\n  | ActivateSessionPlansAction\n  | DeleteSessionPlanAction\n  | setSelectedPlanTypeActions;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type`\n      );\n      console.log({ GET_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetPlansTypesAction>({\n        type: ActionTypes.GET_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetDeletedPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type/deleted`\n      );\n      console.log({ GET_DELETED_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetDeletedPlansTypesAction>({\n        type: ActionTypes.GET_DELETED_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE PLAN TYPE\nexport const createPlanType = (\n  data: PlansTypeInterface\n): CreatePlansTypeAction => {\n  return {\n    type: ActionTypes.CREATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// UPDATE PLAN TYPE\nexport const updatePlanType = (\n  data: PlansTypeInterface\n): UpdatePlansTypeAction => {\n  return {\n    type: ActionTypes.UPDATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// DELETE PLAN TYPE\nexport const deletePlanType = (\n  data: PlansTypeInterface\n): DeletePlansTypeAction => {\n  return {\n    type: ActionTypes.DELETE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// SELECT PLAN TYPES ==========================\nexport const setSelectedPlanType = (\n  thisType: PlansTypeInterface | \"all\"\n): setSelectedPlanTypeActions => {\n  console.log({ thisType });\n  return {\n    type: ActionTypes.SELECT_PLAN_TYPE,\n    payload: thisType,\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const getActiveSessionPlan = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface>(\n        `${API.CLAIMING}/session/active/`\n      );\n      console.log({ GET_ACTIVE_SESSION_PLANS: res.data });\n      let session_plan: SessionPlanInterface | undefined = undefined;\n      // if (res.status === 200) {\n      //   // setApplications(res.data);\n      // }\n      if (res.data && res.data.is_active !== undefined) {\n        session_plan = res.data;\n      }\n      console.log({ session_plan: res.data });\n\n      dispatch<GetActiveSessionPlanAction>({\n        type: ActionTypes.GET_ACTIVE_SESSION_PLANS,\n        payload: session_plan ? session_plan : \"none\",\n      });\n      callback(false, \"\", session_plan ? session_plan : \"none\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ALL PLAN TYPES ==========================\nexport const GetAllSessionPlans = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface[]>(\n        `${API.CLAIMING}/session/`\n      );\n      console.log({ GET_ALL_SESSION_PLANS: res.data });\n      let session_data: SessionPlanInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          session_data = res.data;\n        }\n      }\n      dispatch<GetAllSessionPlansAction>({\n        type: ActionTypes.GET_ALL_SESSION_PLANS,\n        payload: session_data,\n      });\n      callback(false, \"\", session_data);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE SESSION PLAN\nexport const createSessionPlan = (\n  data: SessionPlanInterface\n): CreateSessionPlansAction => {\n  return {\n    type: ActionTypes.CREATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// UPDATE SESSION PLAN\nexport const updateSessionPlan = (\n  data: SessionPlanInterface\n): UpdateSessionPlansAction => {\n  return {\n    type: ActionTypes.UPDATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// ACTIVATE SESSION PLAN\nexport const sessionActivation = (\n  data: SessionPlanInterface\n): ActivateSessionPlansAction => {\n  return {\n    type: ActionTypes.SESSION_ACTIVATION,\n    payload: data,\n  };\n};\n\n// DELETE SESSION PLAN\nexport const deleteSessionPlan = (data: string): DeleteSessionPlanAction => {\n  return {\n    type: ActionTypes.DELETE_SESSION_PLAN,\n    payload: data,\n  };\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  CandidatesInterface,\n  DocumentCategoryInterface,\n  DocumentFieldsInterface,\n  DocumentSubCategoryInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { VerifyDocumentInterface } from \"./users\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// CATEGORY\nexport interface GetDocumentCategoryAction {\n  type: ActionTypes.GET_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface[];\n}\n\nexport interface CreateDocumentCategoryAction {\n  type: ActionTypes.CREATE_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface;\n}\n\nexport interface UpdateDocumentCategoryAction {\n  type: ActionTypes.UPDATE_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface;\n}\n\nexport interface DeleteDocumentCategoryAction {\n  type: ActionTypes.DELETE_DOCUMENT_CATEGORY;\n  payload: string;\n}\n\n// SUB CATEGORY\nexport interface GetDocumentSubCategoryAction {\n  type: ActionTypes.GET_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface[];\n}\n\nexport interface CreateDocumentSubCategoryAction {\n  type: ActionTypes.CREATE_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface;\n}\n\nexport interface UpdateDocumentSubCategoryAction {\n  type: ActionTypes.UPDATE_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface;\n}\n\nexport interface DeleteDocumentSubCategoryAction {\n  type: ActionTypes.DELETE_DOCUMENT_SUB_CATEGORY;\n  payload: string;\n}\n\n// FIELDS\nexport interface GetDocumentFieldsAction {\n  type: ActionTypes.GET_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface[];\n}\n\nexport interface CreateDocumentFieldsAction {\n  type: ActionTypes.CREATE_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface;\n}\n\nexport interface UpdateDocumentFieldsAction {\n  type: ActionTypes.UPDATE_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface;\n}\n\nexport interface DeleteDocumentFieldsAction {\n  type: ActionTypes.DELETE_DOCUMENT_FIELDS;\n  payload: string;\n}\n\n// DOCUMENT CHECKING\nexport interface GetCandidatesInInstituteAtion {\n  type: ActionTypes.GET_CANDIDATE_IN_INSTITUTE;\n  payload: CandidatesInterface[];\n}\n\nexport interface VerifyDocumentAction {\n  type: ActionTypes.VERIFY_DOCUMENT;\n  payload: VerifyDocumentInterface;\n}\n\nexport type DocumentCategoryActionType =\n  | GetDocumentCategoryAction\n  | CreateDocumentCategoryAction\n  | UpdateDocumentCategoryAction\n  | DeleteDocumentCategoryAction\n  | GetDocumentSubCategoryAction\n  | CreateDocumentSubCategoryAction\n  | UpdateDocumentSubCategoryAction\n  | DeleteDocumentSubCategoryAction\n  | GetDocumentFieldsAction\n  | CreateDocumentFieldsAction\n  | UpdateDocumentFieldsAction\n  | DeleteDocumentFieldsAction\n  | GetCandidatesInInstituteAtion\n  | VerifyDocumentAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// CATEGORY\n\nexport const getDocumentCategory = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get(`${API.AUTH}/detailcategory`);\n      console.log({ docCategory: res });\n      dispatch<GetDocumentCategoryAction>({\n        type: ActionTypes.GET_DOCUMENT_CATEGORY,\n        payload: res.data,\n      });\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n    }\n  };\n};\n\nexport const createDocumentCategory = (data: DocumentCategoryInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentCategoryAction>({\n      type: ActionTypes.CREATE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentCategory = (data: DocumentCategoryInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentCategoryAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentCategory = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentCategoryAction>({\n      type: ActionTypes.DELETE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\n// SUB CATEGORY\nexport const getDocumentSubCategory = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<DocumentSubCategoryInterface[]>(\n        `${API.AUTH}/detailsubcategory`\n      );\n      console.log({ docSubCategory: res });\n      dispatch<GetDocumentSubCategoryAction>({\n        type: ActionTypes.GET_DOCUMENT_SUB_CATEGORY,\n        payload: res.data,\n        // payload: response.data,\n      });\n    } catch (error) {\n      console.log({ doc_SUB_category_error: error });\n    }\n  };\n};\n\nexport const createDocumentSubCategory = (\n  data: DocumentSubCategoryInterface\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentSubCategoryAction>({\n      type: ActionTypes.CREATE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentSubCategory = (\n  data: DocumentSubCategoryInterface\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentSubCategoryAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentSubCategory = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentSubCategoryAction>({\n      type: ActionTypes.DELETE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\n// FIELDS\nexport const getDocumentFields = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<DocumentFieldsInterface[]>(\n        `${API.AUTH}/categorysubcatedata`\n      );\n      console.log({ docFields: res });\n      dispatch<GetDocumentFieldsAction>({\n        type: ActionTypes.GET_DOCUMENT_FIELDS,\n        payload: res.data,\n        // payload: response.data,\n      });\n    } catch (error) {\n      console.log({ doc_SUB_category_error: error });\n    }\n  };\n};\n\nexport const createDocumentFields = (data: DocumentFieldsInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentFieldsAction>({\n      type: ActionTypes.CREATE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentFields = (data: DocumentFieldsInterface) => {\n  console.log({ reducer: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentFieldsAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentFields = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentFieldsAction>({\n      type: ActionTypes.DELETE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\n// CANDIDATE IN EDUCATION CATEGORY\nexport const getCandidatesInInstitute = (\n  educatin_type_id: string,\n  session_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\", null);\n    try {\n      setAxiosToken();\n      const res = await axios.get<CandidatesInterface[]>(\n        `${API.APPLICATION}/educationtypeuserdocs/${educatin_type_id}/${session_id}`\n      );\n      const newArray: CandidatesInterface[] = res.data.filter((element) => {\n        return element !== null && element !== undefined;\n      });\n      console.log(\"====================================\");\n      console.log({ getCandidatesInInstitute: res, newArray });\n      console.log(\"====================================\");\n      dispatch<GetCandidatesInInstituteAtion>({\n        type: ActionTypes.GET_CANDIDATE_IN_INSTITUTE,\n        payload: newArray,\n        // payload: response.data,\n      });\n      callback(false, \"\", newArray);\n    } catch (error) {\n      console.log({ getCandidatesInInstitute: error });\n      callback(false, errorToText(error), null);\n    }\n  };\n};\n\nexport const verifyDocument = (data: VerifyDocumentInterface) => {\n  console.log({ action_verify: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<VerifyDocumentAction>({\n      type: ActionTypes.VERIFY_DOCUMENT,\n      payload: data,\n    });\n  };\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AccessTaskInterface,\n  PermissionInterface,\n  SystemSettingsInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PositionAPI } from \"../interfaces/position\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// SYSTEM SETTINGS  ==============\nexport interface GetSystemSettingsAction {\n  type: ActionTypes.GET_SYSTEM_SETTINGS;\n  payload: SystemSettingsInterface[];\n}\n\nexport interface DisableSystemSettingsAction {\n  type: ActionTypes.DISABLE_SYSTEM_SETTINGS;\n  payload: {\n    system_setting_id: string;\n    status: \"enabled\" | \"disabled\";\n  };\n}\n\n// ROLE TASKS ACCESS SETTINGS ===================================\nexport interface GetTaskAccessAction {\n  type: ActionTypes.GET_TASK_ACCESS;\n  payload: AccessTaskInterface[];\n}\n\n// POSITIONS SETTINGS ===================================\nexport interface PositionCreateInterface {\n  position_id?: string;\n  position_title: string;\n  description: string;\n  school_level_id: string;\n  education_institute_id: string;\n  courses: string[];\n  requirements: {\n    user_detail_category_id: string;\n    user_detail_subcategory_id: string;\n    position_requirement: {\n      category_subcategory_data_id: string;\n      required: boolean;\n    }[];\n    required: boolean;\n  }[];\n}\nexport interface GetPositionsAction {\n  type: ActionTypes.GET_POSTIONS;\n  payload: PositionAPI[];\n}\n\nexport interface CreatePositionsAction {\n  type: ActionTypes.CREATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface UpdatePositionsAction {\n  type: ActionTypes.UPDATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface DeletePositionSettingAction {\n  type: ActionTypes.DELETE_POSITION;\n  payload: string;\n}\n\nexport interface PublishPositionAction {\n  type: ActionTypes.PUBLISH_POSITION;\n  payload: {\n    position_id: string;\n    status: boolean;\n  };\n}\n\nexport type SystemActionType =\n  | GetSystemSettingsAction\n  | DisableSystemSettingsAction\n  | GetTaskAccessAction\n  | GetPositionsAction\n  | CreatePositionsAction\n  | UpdatePositionsAction\n  | DeletePositionSettingAction\n  | PublishPositionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSystemSettings = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<SystemSettingsInterface[]>(\n        `${API.AUTH}/settings`\n      );\n      dispatch<GetSystemSettingsAction>({\n        type: ActionTypes.GET_SYSTEM_SETTINGS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const disableSystemSetting = (data: {\n  system_setting_id: string;\n  status: \"enabled\" | \"disabled\";\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableSystemSettingsAction>({\n      type: ActionTypes.DISABLE_SYSTEM_SETTINGS,\n      payload: data,\n    });\n  };\n};\n\n// ============================ tasks access =======================\n\nexport const GetTaskAccess = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<\n        {\n          id: string;\n          title: string;\n          key: string;\n          permitted: PermissionInterface;\n        }[]\n      >(`${API.AUTH}/allroleaccess`);\n      let response: AccessTaskInterface[] = res.data.map((data) => ({\n        id: data.id,\n        task: data.title,\n        key: data.key,\n        permitted: data.permitted,\n      }));\n      dispatch<GetTaskAccessAction>({\n        type: ActionTypes.GET_TASK_ACCESS,\n        payload: response,\n      });\n      callback(false, \"\", response);\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// ============================ positions =======================\n\nexport const getPositions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(`${API.APPLICATION}/position`);\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createPosition = (data: PositionCreateInterface) => {\n  console.log({ createPosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreatePositionsAction>({\n      type: ActionTypes.CREATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const updatePosition = (data: PositionCreateInterface) => {\n  console.log({ updatePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdatePositionsAction>({\n      type: ActionTypes.UPDATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const deletePosition = (data: string) => {\n  console.log({ deletePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<DeletePositionSettingAction>({\n      type: ActionTypes.DELETE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const publishPosition = (data: {\n  position_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<PublishPositionAction>({\n      type: ActionTypes.PUBLISH_POSITION,\n      payload: data,\n    });\n  };\n};\n","import React from \"react\";\nimport { MdInfoOutline } from \"react-icons/md\";\n\nconst NoSession = () => {\n  return (\n    <div className=\"my-5\">\n      <div className=\"bg-yellow-100 rounded flex flex-col items-center justify-center p-6 my-8 text-yellow-900 border border-yellow-900\">\n        <MdInfoOutline className=\"text-6xl md:text-9xl\" />\n        <div className=\"text-center flex flex-col\">\n          <span className=\"text-2xl md:text-4xl font-extrabold\">\n            No session available\n          </span>\n          <span className=\"text-lg\">\n            Please Wait for the system to publish the sessions or contact the\n            administrator\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NoSession;\n","import React, { Component } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { claimReasonInterface } from \"../../../interfaces\";\nimport search from \"../../../utils/search\";\n\nexport const claimReasonsData = [\n  { key: 1, reason: \"Not placed (Sinahawe umwanya)\" },\n  {\n    key: 2,\n    reason:\n      \"Not placed with higher marks (Sinahawe umwanya kandi hari abo ndusha twakoze bimwe bawuhawe)\",\n  },\n  {\n    key: 3,\n    reason:\n      \"Want to change district of placement (Nifuza guhindurirwa akarere nahawemo umwanya)\",\n  },\n  {\n    key: 4,\n    reason: \"Rejected offer by mistake (Nibeshye nanga umwanya nahawe)\",\n  },\n  {\n    key: 0,\n    reason: \"None of the above (nta na kimwe muri ibyo byavuzwe haruguru)\",\n  },\n];\n\ntype ChooseReasonProps = {\n  claimReason: claimReasonInterface | null;\n  setClaimReason: (value: claimReasonInterface | null) => void;\n  setChooseClaimReason: (value: boolean) => void;\n  allClaimReasons: claimReasonInterface[];\n};\n\ntype ChooseReasonState = {\n  searchInput: string;\n};\n\nclass ChooseReason extends Component<ChooseReasonProps, ChooseReasonState> {\n  constructor(props: ChooseReasonProps) {\n    super(props);\n\n    this.state = {\n      searchInput: \"\",\n    };\n  }\n\n  setSearchInput = (value: string) => {\n    this.setState({ searchInput: value });\n  };\n\n  render() {\n    return (\n      <div>\n        {/* SEARCH PART */}\n        <div className=\"flex items-center w-full my-1\">\n          <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n          <input\n            type=\"text\"\n            placeholder=\"Search\"\n            className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n            onChange={(e) => this.setSearchInput(e.target.value)}\n            value={this.state.searchInput}\n          />\n          <button\n            className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n            type=\"button\"\n            onClick={() => this.props.setChooseClaimReason(false)}\n          >\n            Cancel\n          </button>\n        </div>\n        {/* END SEARCH PART ///////////////// */}\n\n        <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n          {search(this.props.allClaimReasons, this.state.searchInput).map(\n            (item: claimReasonInterface, index) => (\n              <section key={index.toString() + item.id}>\n                <div\n                  className={`my-1 py-1 w-full px-2 hover:bg-gray-100 cursor-pointer ${\n                    this.props.claimReason &&\n                    this.props.claimReason.id === item.id &&\n                    \"border-l-2 border-blue-600\"\n                  }`}\n                  onClick={() => {\n                    this.props.setChooseClaimReason(false);\n                    this.props.setClaimReason(item);\n                  }}\n                >\n                  <p className=\"text-base text-black\">{item.reason}</p>\n                </div>\n              </section>\n            )\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ChooseReason;\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  course,\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimExamResultsDetails,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { candidatePlacementInterface } from \"../../../interfaces/placement\";\nimport { isClaimAllowed } from \"./ClaimForm\";\n\nexport const getCourseById = (courses: course[], course_id: string) => {\n  return courses.find((item) => item.course_id === course_id);\n};\n\nexport const getCourseIdBySheetId = (\n  allData: ClaimExamResultsDetails[],\n  sheet_id: string\n) => {\n  return allData.find((item) => item.answer_sheet_id === sheet_id);\n};\n\nexport const searchApplication = (\n  objList: claimApplicationsInterface[],\n  text: any\n): claimApplicationsInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (prop === \"position\") {\n        flag =\n          product.position.position_title\n            .toString()\n            .toLowerCase()\n            .indexOf(text.toLowerCase()) > -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n  // return objList.filter((product) =>\n  //   product.position.position_title.includes(text)\n  // );\n};\n\ntype FormPlacementListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  viewThisFile: string;\n  myPlacement: candidatePlacementInterface | null;\n  myClaims: CandidateClaimInterface[];\n  activeSession: SessionPlanInterface;\n\n  // REDUX //////////////////////\n};\n\nconst FormPlacementList: React.FC<FormPlacementListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            props.myPlacement === null ||\n            isClaimAllowed(\n              props.myClaims,\n              props.activeSession.session_plan_id,\n              props.myPlacement.placed._id\n            )\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Cancel\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}{\" \"}\n      {/* searchData(props.candidateAnswers, searchInput) */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {props.myPlacement ? (\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            props.myPlacement.placed._id\n          ) && (\n            <div className=\"group flex items-center justify-between my-1 hover:bg-gray-100\">\n              <div\n                className=\"p-1 w-full mr-2 cursor-pointer\"\n                onClick={() => {\n                  props.setChooseClaimFile(false);\n                  props.setClaimFileId(props.myPlacement!.placed._id);\n                }}\n              >\n                <p className=\"text-base font-medium text-black\">\n                  Placed on {props.myPlacement.placed.school.school_name}\n                </p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                onClick={() => {\n                  props.setViewThisFile(props.myPlacement!.placed._id);\n                }}\n              >\n                View\n              </button>\n            </div>\n          )\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No placement to claim on!\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\n// const mapStateToProps = ({\n//   course,\n// }: StoreState): {\n//   courses: course[] | null;\n// } => {\n//   return {\n//     courses: course.courses,\n//   };\n// };\nexport default connect(null, {})(FormPlacementList);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, loadCourses, PushPopupAlert } from \"../../../actions\";\nimport {\n  createClaim,\n  DocumentClaimUser,\n  GetClaimingTypes,\n  getClaimReasons,\n  getMyAnswers,\n  getMyClaims,\n  getMyPlacement,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n} from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { getActiveSessionPlan } from \"../../../actions/session\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimExamResultsDetails,\n  claimReasonInterface,\n  course,\n  PlansInterface,\n  PlansTypeKeys,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { candidatePlacementInterface } from \"../../../interfaces/placement\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { SessionPlanReducerInterface } from \"../../../reducers/session\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { API } from \"../../../utils/api\";\nimport { setAxiosToken } from \"../../../utils/AxiosToken\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { isPlanActive } from \"../../SessionSettings/SessionDetails\";\nimport ApplicationFormView from \"./ApplicationFormView\";\nimport ChooseReason from \"./ChooseReason\";\nimport DocFormView from \"./DocFormView\";\nimport ExaminationFormView from \"./ExaminationFormView\";\nimport FormApplicationList from \"./FormApplicationList\";\nimport FormDocumentList from \"./FormDocumentList\";\nimport FormExamList, {\n  getCourseById,\n  getCourseIdBySheetId,\n} from \"./FormExamList\";\nimport FormPlacementList from \"./FormPlacementList\";\n\nexport const ClaimGetDocTitle = (\n  documentCategories: DocumentReducerInterface,\n  doc: DocumentClaimUser\n): { category: string; sub_category: string; field: string; main: string } => {\n  let DocCategory: string = \"\",\n    DocSubCategory: string = \"\",\n    DocField: string = \"\",\n    DocTitle: string = \"\";\n  if (\n    doc.sub_category_id.length > 0 &&\n    documentCategories.documentSubCategory\n  ) {\n    DocTitle = documentCategories.documentSubCategory.filter(\n      (c) => c.user_detail_subcategory_id === doc.sub_category_id\n    )[0].title;\n    DocSubCategory = DocTitle;\n  } else if (\n    doc.category_id.length > 0 &&\n    documentCategories.documentCategory\n  ) {\n    DocTitle = documentCategories.documentCategory.filter(\n      (c) => c.user_detail_category_id === doc.category_id\n    )[0].title;\n    DocCategory = DocTitle;\n  }\n  if (\n    doc.category_subcategory_data &&\n    doc.category_subcategory_data.category_subcategory_Data_id.length > 0 &&\n    documentCategories.documentFields\n  ) {\n    console.log({ doc });\n    DocField = documentCategories.documentFields.filter(\n      (c) =>\n        c._id === doc.category_subcategory_data?.category_subcategory_Data_id\n    )[0].title;\n    DocTitle += \" in \" + DocField;\n  }\n\n  return {\n    category: DocCategory,\n    sub_category: DocSubCategory,\n    field: DocField,\n    main: DocTitle,\n  };\n};\n\nexport const isClaimAllowed = (\n  allClaim: CandidateClaimInterface[],\n  period_id: string,\n  claimOnId: string\n): boolean => {\n  if (\n    allClaim.find(\n      (item) =>\n        item.period_id === period_id && item.claiming_on_id === claimOnId\n    )\n  ) {\n    return false;\n  }\n  return true;\n};\n\ntype ClaimFormProps = {\n  // FOR SHORTCUT BUTTONS CALL\n  claim_type?: PlansTypeKeys;\n  file_id?: string;\n  // REQUIRED PROPS\n  formState: boolean;\n  setFormState: (value: boolean, response?: boolean) => void;\n  auth: Auth;\n  sessionPlan: SessionPlanReducerInterface;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  courses: course[] | null;\n  loadCourses: Function;\n  getMyAnswers: Function;\n  getMyPlacement: Function;\n  getClaimReasons: Function;\n  getActiveSessionPlan: Function;\n  createClaim: Function;\n  GetClaimingTypes: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  getMyRejectedApplications: Function;\n  getMyRejectedDocuments: Function;\n  getMyClaims: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype ClaimFormState = {\n  loading: boolean;\n  loadingForm: boolean;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  thisClaimType: PlansTypeKeys | null;\n  thisClaimTypeId: string;\n  claimComment: string;\n  claimFileId: string;\n  chooseClaimFile: boolean;\n  chooseClaimReason: boolean;\n  claimReason: claimReasonInterface | null;\n  myPlacement: candidatePlacementInterface | null;\n  viewThisFile: string;\n  formType: \"DEFAULT\" | \"PROPS\";\n  alertError: string | null;\n  activeSession: SessionPlanInterface | null;\n};\n\nclass ClaimForm extends Component<ClaimFormProps, ClaimFormState> {\n  constructor(props: ClaimFormProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingForm: false,\n      formError: null,\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      claimFileId: \"\",\n      chooseClaimFile: false,\n      viewThisFile: \"\",\n      formType: \"DEFAULT\",\n      alertError: null,\n      activeSession: null,\n      myPlacement: this.props.claiming.myPlacement,\n      chooseClaimReason: false,\n      claimReason: null,\n    };\n  }\n\n  isDocumentIdValid = (\n    documents: DocumentClaimUser[],\n    doc_id: string\n  ): {\n    status: boolean;\n    msg: string;\n    alert: PopupAlertTheme;\n  } => {\n    let doc = documents.find((item) => item.doc_id === doc_id);\n    if (doc) {\n      // CHECK IF DOCUMENT HAS REJECTED STATUS\n      if (doc.validated_by.validation_status !== \"rejected\") {\n        return {\n          status: false,\n          msg: \"Only rejected document are allowed for claim\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n      // CHECK IF DOCUMENT HAS ALREADY CLAIMED ON\n      if (\n        this.props.claiming.myClaims &&\n        this.state.activeSession &&\n        isClaimAllowed(\n          this.props.claiming.myClaims,\n          this.state.activeSession.session_plan_id,\n          doc_id\n        )\n      ) {\n        return {\n          status: false,\n          msg: \"This document already in claiming list!\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n      return { status: true, msg: \"\", alert: PopupAlertTheme.success };\n    } else {\n      return {\n        status: false,\n        msg: \"Invalid document id\",\n        alert: PopupAlertTheme.warning,\n      };\n    }\n    // return {\n    //   status: false,\n    //   msg: \"No Documents, please try again\",\n    //   alert: PopupAlertTheme.info,\n    // };\n  };\n\n  isApplicationIdValid = (\n    applications: claimApplicationsInterface[],\n    app_id: string\n  ): {\n    status: boolean;\n    msg: string;\n    alert: PopupAlertTheme;\n  } => {\n    let app = applications.find((item) => item.application_id === app_id);\n    console.log(\"====================================\");\n    console.log({ app, app_id });\n    console.log(\"====================================\");\n    if (app) {\n      // CHECK IF DOCUMENT HAS REJECTED STATUS\n      if (app.application_status !== ApplicationStates.Rejected) {\n        return {\n          status: false,\n          msg: \"Only rejected application are allowed for claim\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n      // CHECK IF DOCUMENT HAS ALREADY CLAIMED ON\n      if (\n        this.props.claiming.myClaims &&\n        this.state.activeSession &&\n        isClaimAllowed(\n          this.props.claiming.myClaims,\n          this.state.activeSession.session_plan_id,\n          app.application_id\n        )\n      ) {\n        return {\n          status: false,\n          msg: \"This application already in claiming list!\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n      return { status: true, msg: \"\", alert: PopupAlertTheme.info };\n    } else {\n      return {\n        status: false,\n        msg: \"Invalid application id\",\n        alert: PopupAlertTheme.warning,\n      };\n    }\n    // return {\n    //   status: false,\n    //   msg: \"No Application, please try again!\",\n    //   alert: PopupAlertTheme.info,\n    // };\n  };\n\n  setLoading = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  setLoadingForm = (state: boolean) => {\n    this.setState({ loadingForm: state });\n  };\n\n  setFormError = (\n    data: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: data });\n  };\n\n  setAlertError = (data: string | null) => {\n    this.setState({ alertError: data });\n  };\n\n  setClaimFileId = (data: string) => {\n    this.setState({ claimFileId: data });\n  };\n\n  setViewThisFile = (data: string) => {\n    this.setState({ viewThisFile: data });\n  };\n\n  setChooseClaimFile = (data: boolean) => {\n    this.setState({ chooseClaimFile: data });\n  };\n\n  setChooseClaimReason = (data: boolean) => {\n    this.setState({ chooseClaimReason: data });\n  };\n\n  setClaimReason = (value: claimReasonInterface | null) => {\n    this.setState({ claimReason: value });\n  };\n\n  setClaimComment = (data: string) => {\n    this.setState({ claimComment: data });\n  };\n\n  isClaimTypeOpen = (\n    thisSession: SessionPlanInterface,\n    thisType: PlansTypeKeys\n  ): boolean => {\n    let data: PlansInterface | undefined;\n    if (thisType === PlansTypeKeys.APPLICATION) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.APPLICATION\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    } else if (thisType === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.DOCUMENT_VALIDATION\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    } else if (thisType === PlansTypeKeys.PLACEMENT_TRANSFER) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.PLACEMENT_TRANSFER\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  isClaimBtnValid = (thisSession: SessionPlanInterface) => {\n    if (this.props.file_id || this.props.claim_type) {\n      // CHECK IF CLAIM TYPE && CLAIM FILE PROPS ARE PASSED PROPS\n      if (!this.props.claim_type) {\n        this.props.PushPopupAlert({\n          title: \"Claim type is required!\",\n          theme: PopupAlertTheme.warning,\n        });\n        this.props.setFormState(false);\n        this.setState({\n          claimFileId: \"\",\n          thisClaimType: null,\n          thisClaimTypeId: \"\",\n          claimComment: \"\",\n          chooseClaimFile: false,\n          formType: \"DEFAULT\",\n          viewThisFile: \"\",\n          formError: null,\n        });\n      } else if (!this.props.file_id) {\n        this.props.PushPopupAlert({\n          title: \"Claim file is required!\",\n          theme: PopupAlertTheme.warning,\n        });\n        this.props.setFormState(false);\n        this.setState({\n          claimFileId: \"\",\n          thisClaimType: null,\n          thisClaimTypeId: \"\",\n          claimComment: \"\",\n          chooseClaimFile: false,\n          formType: \"DEFAULT\",\n          viewThisFile: \"\",\n          formError: null,\n        });\n      } else if (!this.isClaimTypeOpen(thisSession, this.props.claim_type)) {\n        // IF CLAIM TYPE && CLAIM FILE PROPS ARE PASSED PROPS\n        // CHECK IF CLAIM TYPE IS OPEN ================\n        this.props.PushPopupAlert({\n          title: \"Claim type is closed!\",\n          theme: PopupAlertTheme.warning,\n        });\n        this.props.setFormState(false);\n        this.setState({\n          claimFileId: \"\",\n          thisClaimType: null,\n          thisClaimTypeId: \"\",\n          claimComment: \"\",\n          chooseClaimFile: false,\n          formType: \"DEFAULT\",\n          viewThisFile: \"\",\n          formError: null,\n        });\n      }\n    }\n  };\n\n  displayClaimType = (claimType: PlansTypeKeys): string => {\n    let result: string = \"\";\n    switch (claimType) {\n      case PlansTypeKeys.APPLICATION:\n        result = \"application\";\n        break;\n      case PlansTypeKeys.DOCUMENT_VALIDATION:\n        result = \"document\";\n        break;\n      case PlansTypeKeys.EXAMINATION:\n        result = \"exam\";\n        break;\n      case PlansTypeKeys.MARKS_PUBLICATION:\n        result = \"marks publication\";\n        break;\n      case PlansTypeKeys.PLACEMENT_TRANSFER:\n        result = \"placement\";\n        break;\n      default:\n        result = \"\";\n        break;\n    }\n\n    return result;\n  };\n\n  isClaimsAllowed = (\n    thisPeriod: SessionPlanInterface\n  ): {\n    status: boolean;\n    msg: string;\n    alert: PopupAlertTheme;\n  } => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (\n      this.props.claiming.myClaims === null &&\n      this.props.file_id &&\n      this.props.claim_type\n    ) {\n      this.props.getMyClaims(\n        this.props.auth.user.user_id,\n        thisPeriod.session_plan_id,\n        (status: boolean, msg: string, data?: CandidateClaimInterface[]) => {\n          // !status && setLoadingClaims(status);\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          if (data) {\n            let claim = data.find(\n              (item) =>\n                item.claiming_on_id === this.props.file_id &&\n                item.period_id === thisPeriod.session_plan_id\n            );\n            if (claim) {\n              return {\n                status: false,\n                msg: `You have already claimed on this ${this.displayClaimType(\n                  this.props.claim_type!\n                )}`,\n                alert: PopupAlertTheme.info,\n              };\n            }\n          }\n        }\n      );\n    } else if (\n      this.props.claiming.myClaims &&\n      this.props.file_id &&\n      this.props.claim_type\n    ) {\n      let claim = this.props.claiming.myClaims.find(\n        (item) =>\n          item.claiming_on_id === this.props.file_id &&\n          item.period_id === thisPeriod.session_plan_id\n      );\n      if (claim) {\n        return {\n          status: false,\n          msg: `You have already claimed on this ${this.displayClaimType(\n            this.props.claim_type!\n          )}`,\n          alert: PopupAlertTheme.info,\n        };\n      }\n    }\n\n    return {\n      status: true,\n      msg: \"\",\n      alert: PopupAlertTheme.success,\n    };\n  };\n\n  loadExamAnswers = (\n    activeSessionPlan: SessionPlanInterface,\n    user_id: string\n  ) => {\n    this.props.getMyAnswers(\n      activeSessionPlan.session_plan_id,\n      user_id,\n      (status: boolean, msg: string, data: SessionPlanInterface | \"none\") => {\n        this.setLoading(status);\n        if (!status && msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n        if (data) {\n          console.log(\"====================================\");\n          console.log({ loadExamAnswers: data });\n          console.log(\"====================================\");\n        }\n      }\n    );\n  };\n\n  componentDidMount = () => {\n    if (\n      this.props.sessionPlan.activeSessionPlan === null ||\n      this.props.sessionPlan.activeSessionPlan === \"none\"\n    ) {\n      this.props.getActiveSessionPlan(\n        (status: boolean, msg: string, data: SessionPlanInterface | \"none\") => {\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          if (data && data === \"none\") {\n            this.props.PushPopupAlert({\n              title: \"No session active session\",\n              theme: PopupAlertTheme.danger,\n            });\n            this.props.setFormState(false);\n            this.setState({\n              claimFileId: \"\",\n              thisClaimType: null,\n              thisClaimTypeId: \"\",\n              claimComment: \"\",\n              chooseClaimFile: false,\n              formType: \"DEFAULT\",\n              viewThisFile: \"\",\n              formError: null,\n            });\n          } else if (data) {\n            let _isClaimsAllowed = this.isClaimsAllowed(data);\n            if (!_isClaimsAllowed.status) {\n              this.props.PushPopupAlert({\n                title: _isClaimsAllowed.msg,\n                theme: _isClaimsAllowed.alert,\n              });\n              this.props.setFormState(false);\n            }\n            this.setState({ activeSession: data });\n            this.loadExamAnswers(data, this.props.auth.user.user_id);\n            this.isClaimBtnValid(data);\n          }\n        }\n      );\n    } else {\n      this.setState({\n        activeSession: this.props.sessionPlan.activeSessionPlan,\n      });\n      this.isClaimBtnValid(this.props.sessionPlan.activeSessionPlan);\n      let _isClaimsAllowed = this.isClaimsAllowed(\n        this.props.sessionPlan.activeSessionPlan\n      );\n      if (!_isClaimsAllowed.status) {\n        this.props.PushPopupAlert({\n          title: _isClaimsAllowed.msg,\n          theme: _isClaimsAllowed.alert,\n        });\n        this.props.setFormState(false);\n      }\n      this.loadExamAnswers(\n        this.props.sessionPlan.activeSessionPlan,\n        this.props.auth.user.user_id\n      );\n      this.setLoading(false);\n    }\n\n    if (this.props.documentReducer.documentCategory === null) {\n      this.props.getDocumentCategory();\n    }\n    if (this.props.documentReducer.documentSubCategory === null) {\n      this.props.getDocumentSubCategory();\n    }\n    if (this.props.documentReducer.documentFields === null) {\n      this.props.getDocumentFields();\n    }\n\n    if (this.props.claiming.candidateApplications === null) {\n      this.props.getMyRejectedApplications(\n        this.props.auth.user.user_id,\n        (status: boolean, msg: string, data?: claimApplicationsInterface[]) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data) {\n              // PROPS VALIDATION PROCESS ###############\n              if (\n                this.props.claim_type &&\n                this.props.file_id &&\n                this.state.formType === \"DEFAULT\"\n              ) {\n                if (this.props.claim_type === PlansTypeKeys.APPLICATION) {\n                  let _isApplicationIdValid = this.isApplicationIdValid(\n                    data,\n                    this.props.file_id\n                  );\n                  if (!_isApplicationIdValid.status) {\n                    this.props.PushPopupAlert({\n                      title: _isApplicationIdValid.msg,\n                      theme: _isApplicationIdValid.alert,\n                    });\n                    this.props.setFormState(false);\n                  } else {\n                    this.setState({\n                      thisClaimType: this.props.claim_type,\n                      claimFileId: this.props.file_id,\n                      formType: \"PROPS\",\n                    });\n                  }\n                }\n              }\n            }\n          }\n        }\n      );\n    }\n\n    if (this.props.claiming.candidateDocuments === null) {\n      this.props.getMyRejectedDocuments(\n        (status: boolean, msg: string, data?: DocumentClaimUser[]) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data) {\n              // PROPS VALIDATION PROCESS ###############\n              if (\n                this.props.claim_type &&\n                this.props.file_id &&\n                this.state.formType === \"DEFAULT\"\n              ) {\n                if (\n                  this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION\n                ) {\n                  let _isDocumentIdValid = this.isDocumentIdValid(\n                    data,\n                    this.props.file_id\n                  );\n                  if (!_isDocumentIdValid.status) {\n                    this.props.PushPopupAlert({\n                      title: _isDocumentIdValid.msg,\n                      theme: _isDocumentIdValid.alert,\n                    });\n                    // setAlertError(_isDocumentIdValid.msg);\n                    this.props.setFormState(false);\n                  } else {\n                    this.setState({\n                      thisClaimType: this.props.claim_type,\n                      claimFileId: this.props.file_id,\n                      formType: \"PROPS\",\n                    });\n                  }\n                }\n              }\n            }\n          }\n        }\n      );\n    }\n\n    if (this.props.claiming.claimReasons === null) {\n      this.props.getClaimReasons((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (!status) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n\n    if (this.props.claiming.myPlacement === null) {\n      this.props.getMyPlacement(\n        this.props.auth.user.user_id,\n        (\n          status: boolean,\n          msg: string,\n          data?: candidatePlacementInterface | null\n        ) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          }\n          if (data) {\n            this.setState({ myPlacement: data });\n          }\n        }\n      );\n    }\n\n    // PROPS VALIDATION PROCESS ###############\n    if (\n      this.props.claim_type &&\n      this.props.file_id &&\n      this.state.formType === \"DEFAULT\"\n    ) {\n      this.setState({ thisClaimType: this.props.claim_type });\n      if (\n        this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION &&\n        this.props.claiming.candidateDocuments\n      ) {\n        let _isDocumentIdValid = this.isDocumentIdValid(\n          this.props.claiming.candidateDocuments,\n          this.props.file_id\n        );\n        if (!_isDocumentIdValid.status) {\n          this.props.PushPopupAlert({\n            title: _isDocumentIdValid.msg,\n            theme: _isDocumentIdValid.alert,\n          });\n          // setAlertError(_isDocumentIdValid.msg);\n          this.props.setFormState(false);\n        } else {\n          this.setState({\n            thisClaimType: this.props.claim_type,\n            claimFileId: this.props.file_id,\n            formType: \"PROPS\",\n          });\n        }\n      }\n      if (\n        this.props.claim_type === PlansTypeKeys.APPLICATION &&\n        this.props.claiming.candidateApplications\n      ) {\n        let _isApplicationIdValid = this.isApplicationIdValid(\n          this.props.claiming.candidateApplications,\n          this.props.file_id\n        );\n        if (!_isApplicationIdValid.status) {\n          this.props.PushPopupAlert({\n            title: _isApplicationIdValid.msg,\n            theme: _isApplicationIdValid.alert,\n          });\n          this.props.setFormState(false);\n        } else {\n          this.setState({\n            thisClaimType: this.props.claim_type,\n            claimFileId: this.props.file_id,\n            formType: \"PROPS\",\n          });\n        }\n      }\n    }\n\n    if (\n      this.props.courses === null ||\n      (this.props.courses.length === 0 && this.state.loading)\n    ) {\n      this.props.loadCourses(this.setLoading);\n      this.setLoading(false);\n    } else {\n      this.setLoading(false);\n    }\n  };\n\n  getDocumentById = (\n    documents: DocumentClaimUser[],\n    doc_id: string\n  ): DocumentClaimUser => {\n    return documents.filter((item) => item.doc_id === doc_id)[0];\n  };\n\n  getApplicationById = (\n    applications: claimApplicationsInterface[],\n    application_id: string\n  ): claimApplicationsInterface => {\n    return applications.filter(\n      (item) => item.application_id === application_id\n    )[0];\n  };\n\n  getExamById = (\n    exams: ClaimExamResultsDetails[],\n    answer_sheet_id: string\n  ): ClaimExamResultsDetails | undefined => {\n    return exams.find((item) => item.answer_sheet_id === answer_sheet_id);\n  };\n\n  getValidation = (\n    thisId: string\n  ): {\n    old_reason: string;\n    old_status: string;\n    old_evaluated_by: string;\n  } => {\n    let result: {\n      old_reason: string;\n      old_status: string;\n      old_evaluated_by: string;\n    } = { old_reason: \"\", old_status: \"\", old_evaluated_by: \"\" };\n\n    if (\n      this.state.thisClaimType === PlansTypeKeys.DOCUMENT_VALIDATION &&\n      this.props.claiming.candidateDocuments\n    ) {\n      result = {\n        old_reason: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.comment,\n        old_status: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.validation_status,\n        old_evaluated_by: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.user_id,\n      };\n    } else if (\n      this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n      this.props.claiming.candidateApplications\n    ) {\n      result = {\n        old_reason: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.comment,\n        old_status: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.application_status,\n        old_evaluated_by: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.user_id,\n      };\n    }\n\n    return result;\n  };\n\n  cleanToClose = (response?: boolean) => {\n    if (this.state.formType === \"PROPS\" && response) {\n      this.props.setFormState(false, response);\n    } else {\n      this.props.setFormState(false);\n    }\n    this.setState({\n      claimFileId: \"\",\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      chooseClaimFile: false,\n      formType: \"DEFAULT\",\n      viewThisFile: \"\",\n      formError: null,\n    });\n  };\n\n  loadUserById = async (user_id: string, callback: Function) => {\n    if (isEmptyOrSpaces(user_id)) {\n      return this.props.PushPopupAlert({\n        title: \"No user id provided\",\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    try {\n      setAxiosToken();\n      const res = await axios.get<UserInterface>(\n        `${API.AUTH}/users/${user_id}`\n      );\n      console.log(\"====================================\");\n      console.log({ loadUserById: res });\n      console.log(\"====================================\");\n      if (res) {\n        callback(res.data);\n      }\n    } catch (error) {\n      console.error({ error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!this.state.thisClaimType) {\n      return this.setFormError({\n        element: \"claim_type\",\n        msg: \"Claim type is required!\",\n      });\n    }\n    if (isEmptyOrSpaces(this.state.claimFileId)) {\n      return this.setFormError({\n        element: \"claim_file\",\n        msg: `Please select ${this.state.thisClaimType.toLocaleLowerCase()} you are claiming on!`,\n      });\n    }\n\n    if (!this.state.claimReason) {\n      return this.setFormError({\n        element: \"claim_reason\",\n        msg: `Please select the reason of your claim!`,\n      });\n    }\n\n    if (isEmptyOrSpaces(this.state.claimComment)) {\n      return this.setFormError({\n        element: \"claim_comment\",\n        msg: `Claim comment is required!`,\n      });\n    }\n\n    if (!this.state.activeSession) {\n      return this.setAlertError(`No active claiming session is available!`);\n    }\n\n    this.setLoadingForm(true);\n    let old_evaluator_email: string = \"info@system.com\";\n    let old_evaluator_name: string = \"System\";\n    let evaluator_email: string = \"\";\n    let evaluator_name: string = \"\";\n\n    if (this.state.thisClaimType !== PlansTypeKeys.EXAMINATION) {\n      await this.loadUserById(\n        this.getValidation(this.state.claimFileId).old_evaluated_by,\n        (data: UserInterface) => {\n          old_evaluator_email = data.email;\n          old_evaluator_name =\n            data.user_info.fname + \" \" + data.user_info.lname;\n        }\n      );\n    }\n\n    try {\n      console.log(\"====================================\");\n      console.log({\n        claiming_on_id: this.state.claimFileId,\n        type_key: this.state.thisClaimType,\n        user: this.props.auth.user.user_id,\n        period_id: this.state.activeSession.session_plan_id,\n        default_claim_resaons: this.state.claimReason.id,\n        reason: this.state.claimComment,\n        old_reason:\n          this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n          this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n            ? \"System\"\n            : this.getValidation(this.state.claimFileId).old_reason,\n        old_status:\n          this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n          this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n            ? \"Failed\"\n            : this.getValidation(this.state.claimFileId).old_status,\n        old_evaluated_by:\n          this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n          this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n            ? \"\"\n            : this.getValidation(this.state.claimFileId).old_evaluated_by,\n        old_evaluator_email,\n        old_evaluator_name,\n        evaluator_email,\n        evaluator_name,\n      });\n      console.log(\"====================================\");\n\n      setAxiosToken();\n      const res = await axios.post<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/create`,\n        {\n          claiming_on_id: this.state.claimFileId,\n          type_key: this.state.thisClaimType,\n          user: this.props.auth.user.user_id,\n          period_id: this.state.activeSession.session_plan_id,\n          default_claim_resaons: this.state.claimReason.id,\n          reason: this.state.claimComment,\n          old_reason:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"System\"\n              : this.getValidation(this.state.claimFileId).old_reason,\n          old_status:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"Failed\"\n              : this.getValidation(this.state.claimFileId).old_status,\n          old_evaluated_by:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"\"\n              : this.getValidation(this.state.claimFileId).old_evaluated_by,\n          old_evaluator_email,\n          old_evaluator_name,\n          evaluator_email,\n          evaluator_name,\n        }\n      );\n      console.log({ createClaim: res.data });\n      if (res.status === 201 || res.status === 200) {\n        this.props.createClaim(res.data);\n        this.props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        this.cleanToClose(true);\n      }\n    } catch (error) {\n      console.error({ error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.setLoadingForm(false);\n  };\n\n  selectClaimType = (thisClaim: string) => {\n    this.setState({\n      thisClaimType: isEmptyOrSpaces(thisClaim)\n        ? null\n        : (thisClaim as PlansTypeKeys),\n    });\n  };\n\n  generateChooseFileTitle = (thisClaimType: PlansTypeKeys | null): string => {\n    let result: string = \"\";\n\n    switch (thisClaimType) {\n      case PlansTypeKeys.APPLICATION:\n        result = `Select application you are claiming on?`;\n        break;\n      case PlansTypeKeys.DOCUMENT_VALIDATION:\n        result = `Select document you are claiming on?`;\n        break;\n      case PlansTypeKeys.EXAMINATION:\n        result = `Select exam you are claiming on?`;\n        break;\n      case PlansTypeKeys.MARKS_PUBLICATION:\n        result = `Select marks publication you are claiming on?`;\n        break;\n      case PlansTypeKeys.PLACEMENT_TRANSFER:\n        result = `Select placement you are claiming on?`;\n        break;\n      default:\n        result = \"Select file you are claiming on?\";\n        break;\n    }\n\n    return result;\n  };\n\n  allowedClaims = (): PlansTypeKeys[] => {\n    let result: PlansTypeKeys[] = [];\n    // Object.values(PlansTypeKeys);\n    if (PlansTypeKeys.APPLICATION) {\n    }\n\n    return result;\n  };\n\n  render() {\n    if (\n      this.state.loading ||\n      this.state.activeSession === null ||\n      (this.props.claiming.myClaims === null &&\n        this.props.file_id &&\n        this.props.claim_type)\n    ) {\n      return null;\n    }\n\n    return (\n      <div className=\"pb-3\">\n        {this.props.formState && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={(): void => {\n              !this.state.loadingForm &&\n                this.state.viewThisFile.length <= 0 &&\n                this.cleanToClose();\n              !this.state.loadingForm &&\n                this.state.viewThisFile.length > 0 &&\n                this.setViewThisFile(\"\");\n            }}\n            displayClose={true}\n            backDropClose={false}\n            title={\n              <div className=\"text-gray-900 font-bold text-xl md:ml-1\">\n                {this.state.viewThisFile.length <= 0 && \"Claiming form\"}\n                {this.state.viewThisFile.length > 0 &&\n                  this.state.thisClaimType ===\n                    PlansTypeKeys.DOCUMENT_VALIDATION &&\n                  \"Viewing document\"}\n                {this.state.viewThisFile.length > 0 &&\n                  this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n                  \"Viewing application\"}\n              </div>\n            }\n            widthSizeClass={\n              this.state.viewThisFile.length > 0\n                ? ModalSize.extraLarge\n                : ModalSize.medium\n            }\n            padding={{ title: true, body: false, footer: false }}\n          >\n            {/* CLAIM FORM ============================================== */}\n            {this.state.viewThisFile.length <= 0 && (\n              <form onSubmit={(e) => this.handleSubmit(e)}>\n                <div className=\"px-6 pb-3\">\n                  {this.state.alertError && (\n                    <div\n                      className=\"alert-warning cursor-pointer\"\n                      onClick={() => this.setAlertError(null)}\n                    >\n                      {this.state.alertError}\n                    </div>\n                  )}\n                  <div className=\"text-base text-gray-700 sm:text-lg\">\n                    {/* SELECT CLAIM TYPE ============================================== */}\n                    <div className=\"flex flex-col mb-2\">\n                      <label>Claim type</label>\n                      <select\n                        className={`rounded px-2 py-2 w-full bg-white focus:outline-none ${\n                          this.state.formType === \"PROPS\" &&\n                          \"cursor-not-allowed\"\n                        } ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_type\"\n                            ? \"border-red-500\"\n                            : \"border-gray-500\"\n                        } border-2`}\n                        onChange={(e: React.ChangeEvent<HTMLSelectElement>) => {\n                          this.selectClaimType(e.target.value);\n                          this.setClaimFileId(\"\");\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_type\" &&\n                            this.setFormError(null);\n                        }}\n                        value={\n                          this.state.thisClaimType\n                            ? this.state.thisClaimType\n                            : \"\"\n                        }\n                        disabled={\n                          this.state.loadingForm ||\n                          this.state.formType === \"PROPS\"\n                        }\n                      >\n                        <option value=\"\">Choose claim type</option>\n                        {Object.values(PlansTypeKeys).map((item, index) => (\n                          <option\n                            value={item}\n                            key={index + item}\n                            className={`${\n                              item === PlansTypeKeys.MARKS_PUBLICATION ||\n                              item === PlansTypeKeys.PLACEMENT_TRANSFER\n                                ? \"hidden\"\n                                : \"block\"\n                            }`}\n                          >\n                            {capitalizeFirstLetter(\n                              item.toLocaleLowerCase().replace(/_/g, \" \")\n                            )}\n                          </option>\n                        ))}\n                      </select>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_type\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END SELECT CLAIM TYPE ============================================== */}\n\n                    {/* SELECT FILE TO CLAIM ON ============================================== */}\n                    <div className=\"flex flex-col mb-2\">\n                      <label>\n                        {this.generateChooseFileTitle(this.state.thisClaimType)}\n                      </label>\n                      <div\n                        className={`text-left bg-white border-2 ${\n                          this.state.formType !== \"PROPS\"\n                            ? \"border-gray-700\"\n                            : \"border-gray-400 text-gray-500\"\n                        } rounded w-full ${\n                          this.state.chooseClaimFile ? \"h-64\" : \"h-10\"\n                        } ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_file\"\n                            ? \"border-red-500\"\n                            : \"\"\n                        } border-2 ${\n                          this.state.thisClaimType &&\n                          !this.state.chooseClaimFile &&\n                          this.state.formType !== \"PROPS\"\n                            ? \"cursor-pointer\"\n                            : !this.state.chooseClaimFile &&\n                              \"cursor-not-allowed\"\n                        }`}\n                        title={\n                          !this.state.thisClaimType\n                            ? \"Choose claim type first!\"\n                            : \"\"\n                        }\n                        onClick={() => {\n                          this.state.formType === \"DEFAULT\" &&\n                            this.state.thisClaimType &&\n                            !this.state.chooseClaimFile &&\n                            this.setChooseClaimFile(true);\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_file\" &&\n                            this.setFormError(null);\n                        }}\n                      >\n                        {/* DISPLAYING FILTERED SELECTING FILE ============================ */}\n                        {this.state.claimFileId.length > 0 &&\n                        !this.state.chooseClaimFile ? (\n                          <p className=\"my-1 mx-2\">\n                            {this.state.thisClaimType ===\n                              PlansTypeKeys.DOCUMENT_VALIDATION &&\n                              this.props.claiming.candidateDocuments &&\n                              ClaimGetDocTitle(\n                                this.props.documentReducer,\n                                this.getDocumentById(\n                                  this.props.claiming.candidateDocuments,\n                                  this.state.claimFileId\n                                )\n                              ).main}\n                            {this.state.thisClaimType ===\n                              PlansTypeKeys.APPLICATION &&\n                              this.props.claiming.candidateApplications &&\n                              this.getApplicationById(\n                                this.props.claiming.candidateApplications,\n                                this.state.claimFileId\n                              ).position.position_title}\n                            {this.state.thisClaimType ===\n                              PlansTypeKeys.EXAMINATION &&\n                              this.props.courses &&\n                              this.props.claiming.myAnswer &&\n                              getCourseIdBySheetId(\n                                this.props.claiming.myAnswer,\n                                this.state.claimFileId\n                              ) &&\n                              getCourseById(\n                                this.props.courses,\n                                getCourseIdBySheetId(\n                                  this.props.claiming.myAnswer,\n                                  this.state.claimFileId\n                                )!.course\n                              ) &&\n                              getCourseById(\n                                this.props.courses,\n                                getCourseIdBySheetId(\n                                  this.props.claiming.myAnswer,\n                                  this.state.claimFileId\n                                )!.course\n                              )!.course_name}\n\n                            {this.state.thisClaimType ===\n                              PlansTypeKeys.PLACEMENT_TRANSFER &&\n                              this.state.myPlacement &&\n                              !isEmptyOrSpaces(this.state.claimFileId) &&\n                              \"Placed on \" +\n                                this.state.myPlacement.placed.school\n                                  .school_name}\n                          </p>\n                        ) : (\n                          !this.state.chooseClaimFile && (\n                            <p className=\"my-1 mx-2\">\n                              Select Claim{\" \"}\n                              {this.state.thisClaimType &&\n                                this.state.thisClaimType\n                                  .toLocaleLowerCase()\n                                  .replace(/_/g, \" \")}\n                            </p>\n                          )\n                        )}\n                        {/* END DISPLAYING FILTERED SELECTING FILE ============================ */}\n\n                        {/* LISTING OF REJECTED DOCUMENTS ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.DOCUMENT_VALIDATION &&\n                          this.props.claiming.candidateDocuments &&\n                          this.props.claiming.myClaims &&\n                          this.props.sessionPlan.activeSessionPlan &&\n                          this.props.sessionPlan.activeSessionPlan !==\n                            \"none\" && (\n                            <FormDocumentList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              viewThisFile={this.state.viewThisFile}\n                              candidateDocuments={\n                                this.props.claiming.candidateDocuments\n                              }\n                              documentCategories={this.props.documentReducer}\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.sessionPlan.activeSessionPlan\n                              }\n                            />\n                          )}\n                        {/* END LISTING OF REJECTED DOCUMENTS ============================ */}\n                        {/* ---------------------------------------------------------- */}\n                        {/* LISTING OF REJECTED APPLICATION ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.APPLICATION &&\n                          this.props.claiming.candidateApplications &&\n                          this.props.claiming.myClaims &&\n                          this.props.sessionPlan.activeSessionPlan &&\n                          this.props.sessionPlan.activeSessionPlan !==\n                            \"none\" && (\n                            <FormApplicationList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              viewThisFile={this.state.viewThisFile}\n                              candidateApplications={\n                                this.props.claiming.candidateApplications\n                              }\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.sessionPlan.activeSessionPlan\n                              }\n                            />\n                          )}\n                        {/* END LISTING OF REJECTED APPLICATION ============================ */}\n                        {/* ---------------------------------------------------------- */}\n                        {/* LISTING OF FAILED EXAM ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.EXAMINATION &&\n                          this.props.claiming.myAnswer &&\n                          this.props.claiming.myClaims &&\n                          this.props.sessionPlan.activeSessionPlan &&\n                          this.props.sessionPlan.activeSessionPlan !==\n                            \"none\" && (\n                            <FormExamList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              viewThisFile={this.state.viewThisFile}\n                              candidateAnswers={this.props.claiming.myAnswer}\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.sessionPlan.activeSessionPlan\n                              }\n                            />\n                          )}\n                        {/* END LISTING OF FAILED EXAM ============================ */}\n                        {/* ---------------------------------------------------------- */}\n                        {/* PENDING PLACMENT ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.PLACEMENT_TRANSFER &&\n                          this.props.claiming.myClaims &&\n                          this.props.sessionPlan.activeSessionPlan &&\n                          this.props.sessionPlan.activeSessionPlan !==\n                            \"none\" && (\n                            <FormPlacementList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              viewThisFile={this.state.viewThisFile}\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.sessionPlan.activeSessionPlan\n                              }\n                              myPlacement={this.state.myPlacement}\n                            />\n                          )}\n                        {/* END LISTING OF FAILED EXAM ============================ */}\n                      </div>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_file\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END SELECT FILE TO CLAIM ON ============================================== */}\n\n                    {/* CLAIM REASONS ========================================== */}\n                    <div className=\"flex flex-col mb-2\">\n                      <label>Choose reason of your claim</label>\n                      <div\n                        className={`text-left bg-white border-2 border-gray-700 rounded w-full ${\n                          this.state.chooseClaimReason ? \"h-64\" : \"h-auto\"\n                        } ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_reason\"\n                            ? \"border-red-500\"\n                            : \"\"\n                        } border-2 ${\n                          this.props.claiming.claimReasons === null\n                            ? \"cursor-wait\"\n                            : \"cursor-pointer\"\n                        }`}\n                        title=\"Choose the reason for your claim!\"\n                        onClick={() => {\n                          !this.state.chooseClaimReason &&\n                            this.setState({ chooseClaimReason: true });\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_reason\" &&\n                            this.setFormError(null);\n                        }}\n                      >\n                        {/* DISPLAYING SELECTED REASON ============================ */}\n                        {this.state.claimReason &&\n                        !this.state.chooseClaimReason ? (\n                          <p className=\"my-1 mx-2\">\n                            {this.state.claimReason.reason}\n                          </p>\n                        ) : (\n                          !this.state.chooseClaimReason && (\n                            <p className=\"my-1 mx-2\">Select reason</p>\n                          )\n                        )}\n                        {/* END DISPLAYING SELECTED REASON ============================ */}\n\n                        {/* LISTING OF CLAIM REASONS ============================ */}\n                        {this.state.chooseClaimReason &&\n                          this.props.claiming.claimReasons && (\n                            <ChooseReason\n                              setChooseClaimReason={this.setChooseClaimReason}\n                              setClaimReason={this.setClaimReason}\n                              claimReason={this.state.claimReason}\n                              allClaimReasons={this.props.claiming.claimReasons}\n                            />\n                          )}\n                        {/* END LISTING OF CLAIM REASONS ============================ */}\n                      </div>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_reason\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END CLAIM REASONS ========================================== */}\n\n                    {/* CLAIM COMMENT ============================================== */}\n                    <div className=\"flex flex-col\">\n                      <label>Comment</label>\n                      <textarea\n                        className={`text-left input-white w-20 inline-block ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_comment\"\n                            ? \"border-red-500\"\n                            : \"border-gray-500\"\n                        } border-2`}\n                        placeholder={`Claim comment`}\n                        style={{ resize: \"none\" }}\n                        value={this.state.claimComment}\n                        onChange={(e) => {\n                          this.setClaimComment(e.target.value);\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_comment\" &&\n                            this.setFormError(null);\n                        }}\n                        rows={3}\n                        disabled={this.state.loadingForm}\n                      ></textarea>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_comment\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END CLAIM COMMENT ============================================== */}\n                  </div>\n\n                  <div className=\"pt-3 flex justify-between\">\n                    <button\n                      onClick={() => this.cleanToClose()}\n                      className={`btn bg-gray-400 text-white hover:bg-gray-600 focus:outline-none ${\n                        this.state.loadingForm && \"cursor-not-allowed\"\n                      }`}\n                      type=\"button\"\n                      disabled={this.state.loadingForm}\n                    >\n                      Exit\n                    </button>\n                    <button\n                      className={`btn bg-primary text-white hover:bg-blue-600 focus:outline-none ${\n                        this.state.loadingForm && \"cursor-wait\"\n                      }`}\n                      type=\"submit\"\n                      disabled={this.state.loadingForm}\n                    >\n                      {this.state.loadingForm ? \"Loading...\" : \"Claim\"}\n                    </button>\n                  </div>\n                </div>\n              </form>\n            )}\n            {/* END CLAIM FORM ============================================== */}\n\n            {/* CLAIM DOCUMENT VIEW ============================================== */}\n            {this.state.viewThisFile.length > 0 &&\n              this.props.claiming.candidateDocuments &&\n              this.state.thisClaimType ===\n                PlansTypeKeys.DOCUMENT_VALIDATION && (\n                <DocFormView\n                  thisDoc={this.getDocumentById(\n                    this.props.claiming.candidateDocuments,\n                    this.state.viewThisFile\n                  )}\n                  setViewThisFile={this.setViewThisFile}\n                  documentCategories={this.props.documentReducer}\n                  setChooseClaimFile={this.setChooseClaimFile}\n                  setClaimFileId={this.setClaimFileId}\n                />\n              )}\n            {/* END CLAIM DOCUMENT VIEW ============================================== */}\n            {/* ------------------------------------------------------------------------- */}\n            {/* CLAIM APPLICATION VIEW ============================================== */}\n            {this.state.viewThisFile.length > 0 &&\n              this.props.claiming.candidateApplications &&\n              this.state.thisClaimType === PlansTypeKeys.APPLICATION && (\n                <ApplicationFormView\n                  thisApplication={this.getApplicationById(\n                    this.props.claiming.candidateApplications,\n                    this.state.viewThisFile\n                  )}\n                  documentCategories={this.props.documentReducer}\n                  setChooseClaimFile={this.setChooseClaimFile}\n                  setClaimFileId={this.setClaimFileId}\n                  setViewThisFile={this.setViewThisFile}\n                />\n              )}\n            {/* END CLAIM APPLICATION VIEW ============================================== */}\n            {/* ------------------------------------------------------------------------- */}\n            {/* CLAIM EXAMINATION VIEW ============================================== */}\n            {this.state.viewThisFile.length > 0 &&\n              this.props.claiming.myAnswer &&\n              this.state.thisClaimType === PlansTypeKeys.EXAMINATION &&\n              this.getExamById(\n                this.props.claiming.myAnswer,\n                this.state.viewThisFile\n              ) && (\n                <ExaminationFormView\n                  thisAnswerSheet={\n                    this.getExamById(\n                      this.props.claiming.myAnswer,\n                      this.state.viewThisFile\n                    )!\n                  }\n                  setChooseClaimFile={this.setChooseClaimFile}\n                  setClaimFileId={this.setClaimFileId}\n                  setViewThisFile={this.setViewThisFile}\n                  // thisAnswerSheet={undefined}\n                  // setViewThisFile={undefined}\n                  // setChooseClaimFile={undefined}\n                  // setClaimFileId={undefined}\n                />\n              )}\n            {/* END CLAIM EXAMINATION VIEW ============================================== */}\n          </Modal>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  document,\n  claiming,\n  sessionPlan,\n  course,\n}: StoreState): {\n  auth: Auth;\n  sessionPlan: SessionPlanReducerInterface;\n  documentReducer: DocumentReducerInterface;\n  claiming: ClaimingReducerType;\n  courses: course[] | null;\n} => {\n  return {\n    auth: auth,\n    sessionPlan,\n    documentReducer: document,\n    claiming,\n    courses: course.courses,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getActiveSessionPlan,\n  loadCourses,\n  getMyClaims,\n  getClaimReasons,\n  getMyAnswers,\n  getMyPlacement,\n  createClaim,\n  GetClaimingTypes,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  PushPopupAlert,\n})(ClaimForm);\n","import { CalculatedMultipleChoiceQuestionAnswerInterface, MatchingQuestionAnswerInterface, MultipleChoiceQuestionAnswerInterface, NumericalQuestionAnswerInterface, ShortAnswerQuestionAnswerInterface, SimpleCalculatedQuestionAnswerInterface, TrueFalseQuestionAnswerInterface } from \"../../../interfaces/question\";\n\nexport const toMultipleChoice = (answers: any[]): MultipleChoiceQuestionAnswerInterface[] => {\n  let res: MultipleChoiceQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [...res, {\n      id: answer.id,\n      value: answer.value,\n      status: answer.status,\n    }]\n  }\n  return res;\n}\n\nexport const toTrueFalse = (answers: any[]): TrueFalseQuestionAnswerInterface[] => {\n  let res: TrueFalseQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [...res, {\n      id: answer.id,\n      value: answer.value,\n      status: answer.status,\n    }]\n  }\n  return res;\n}\n\nexport const toMatching = (answers: any[]): MatchingQuestionAnswerInterface[] => {\n  let res: MatchingQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [...res, {\n      id: answer.id,\n      value: answer.value,\n      status: answer.status,\n    }]\n  }\n  return res;\n}\n\nexport const toSimpleCalculated = (answers: any[]): SimpleCalculatedQuestionAnswerInterface[] => {\n  let res: SimpleCalculatedQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [...res, {\n      id: answer.id,\n      value: answer.value,\n      status: answer.status,\n    }]\n  }\n  return res;\n}\n\nexport const toShortAnswer = (answers: any[]): ShortAnswerQuestionAnswerInterface[] => {\n  let res: ShortAnswerQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [...res, {\n      id: answer.id,\n      value: answer.value,\n      status: answer.status,\n    }]\n  }\n  return res;\n}\n\nexport const toNumerical = (answers: any[]): NumericalQuestionAnswerInterface[] => {\n  let res: NumericalQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [...res, {\n      id: answer.id,\n      value: answer.value,\n      status: answer.status,\n    }]\n  }\n  return res;\n}\n\nexport const toCalculatedMultipleChoice = (answers: any[]): CalculatedMultipleChoiceQuestionAnswerInterface[] => {\n  let res: CalculatedMultipleChoiceQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [...res, {\n      id: answer.id,\n      value: answer.value,\n      status: answer.status,\n    }]\n  }\n  return res;\n}","import {\n  ApplicationStates,\n  SESSION_PLAN_KEYS,\n} from \"../interfaces/application\";\n\nexport interface SystemSettingsInterface {\n  system_setting_id: string;\n  name: string;\n  key: string;\n  status: \"enabled\" | \"disabled\";\n}\n\nexport interface ApplicationSessionInterface {\n  is_active: boolean;\n  application_session_name: string;\n  period: string;\n  application_start_date: string;\n  application_end_date: string;\n  createdAt: string;\n  updatedAt: string;\n  application_session_id: string;\n}\n\nexport interface UserInfoInterface {\n  document_type?: string;\n  issue_number?: string;\n  date_of_issue?: string;\n  date_of_expiry?: string;\n  place_of_issue?: string;\n  application_number?: string;\n  fname: string;\n  lname: string;\n  sex: \"M\" | \"F\";\n  father_names: string;\n  mother_names: string;\n  date_of_birth: string;\n  place_of_birth?: string;\n  country_of_birth: string;\n  village_id: string;\n  village: string;\n  cell: string;\n  sector: string;\n  district: string;\n  province: string;\n  photo?: string;\n  civil_status?: string;\n  spouse?: any;\n  status?: string;\n}\n\nexport interface UserInterface {\n  user_id: string;\n  _id?: string;\n  n_id?: string;\n  phone_number: string;\n  email: string;\n  password?: string;\n  user_info: UserInfoInterface;\n  details: UserDocumentsInterface[];\n  user_photo?: string;\n  default_access: RoleToUserInterface | null;\n  custome_access: CustomeAccessInterface | null;\n  is_active: boolean;\n}\n\nexport interface CandidateDetailsInterface_old {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: string;\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  } | null;\n  doc_history_status: string;\n  get_in_date: string;\n  approved?: string;\n}\n\nexport interface CandidateDetailsInterface {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: string;\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  } | null;\n  doc_history_status: string;\n  get_in_date: string;\n  approved?: string;\n}\n\nexport interface DocInterface {\n  category_subcategory_data: string;\n  school: string;\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  approved: string;\n  doc_id: string;\n  validated_by: null;\n  validation_status: string;\n  doc_history_status: string;\n  get_in_date: string;\n  date_modefied: string;\n}\n\nexport interface CandidateRoleToUserInterface {\n  key: string;\n  status: number;\n  access: boolean;\n  assigned_date: string;\n}\n\nexport interface CandidatesInterface_old {\n  user_id: string;\n  n_id: string;\n  fname: string;\n  lname: string;\n  phone_number: string;\n  district: string;\n  email: string;\n  details: CandidateDetailsInterface[];\n}\n\nexport interface ApplicationExamsInterface {\n  course_id: string;\n  proctoring_type: string;\n  center_id: string;\n  room_id: string;\n}\n\nexport interface CandidatesInterface {\n  user_id: string;\n  n_id: string;\n  fname: string;\n  lname: string;\n  phone_number: string;\n  district: string;\n  email: string;\n  in_education?: boolean;\n  disability?: boolean;\n  residence: {\n    province_id: string;\n    province_name: string;\n    district_id: string;\n    district_name: string;\n    sector_id: string;\n    sector_name: string;\n  };\n  details: CandidateDetailsInterface[];\n  exams: ApplicationExamsInterface[];\n}\n\nexport interface CustomeAccessInterface {\n  access: AccessTaskInterface[];\n  user_id: string;\n  custome_user_access_id: string;\n}\n\nexport interface UserDocumentsInterface {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: { title: string; school_id: string | null };\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  approved: \"waiting\" | \"approved\" | \"rejected\";\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    commet: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  };\n}\n\nexport interface SystemUserRoleInterface {\n  system_user_role_id: string;\n  role: string;\n  status: boolean;\n  access: AccessTaskInterface[];\n  district_required?: boolean;\n  school_required?: boolean;\n  room_required?: boolean;\n  education_institution_required?: boolean;\n  school_id: string;\n  district_id: string;\n}\n\nexport interface CustomeUserAccessInterface {\n  user_id: string;\n  access?: [\n    {\n      id: string;\n      task: string;\n      key: string;\n      permitted: {\n        create: boolean;\n        delete: boolean;\n        update: boolean;\n        view: boolean;\n      };\n    }\n  ];\n}\n\nexport interface PermissionInterface {\n  create: boolean;\n  view: boolean;\n  update: boolean;\n  delete: boolean;\n}\n\nexport interface AccessTaskInterface {\n  id: string;\n  task: string;\n  key: string;\n  permitted: PermissionInterface;\n}\n\nexport interface RoleToUserInterface {\n  system_user_role_id: string;\n  role: string;\n  access: AccessTaskInterface[];\n  status?: number;\n  school_id: string;\n  district_id: string;\n  room_id: string;\n  education_institution_id: string;\n}\n\nexport interface RoomsInterface {\n  occupied: number;\n  isUsed: boolean;\n  room_type: string;\n  room_number: number;\n  capacity: number;\n  _id: string;\n}\n\nexport interface CentersInterface {\n  rooms: RoomsInterface[];\n  isUsed: boolean;\n  _id: string;\n  center_name: string;\n  center_code: number;\n  district_id: string;\n}\n\nexport interface SectorInterface {\n  district_code: number;\n  district_id: string;\n  sector_name: string;\n  sector_code: number;\n  sector_id: string;\n}\n\nexport interface DistrictInterface {\n  centers: CentersInterface[];\n  sectors: SectorInterface[];\n  province_code: number;\n  province_id: string;\n  district_name: string;\n  district_code: number;\n  _id: string;\n}\n\nexport interface RoomLocationInterface {\n  districts: DistrictInterface[];\n  province_name: string;\n  province_code: number;\n  _id: string;\n}\n\nexport interface AssignRoleToUserActionInterface {\n  user_id: string;\n  data: RoleToUserInterface;\n}\n\nexport interface AssignRoleToUserActionInterface {\n  user_id: string;\n  data: RoleToUserInterface;\n}\n\nexport enum PostRequestStatusInterface {\n  INITIATED = \"initiated\",\n  CONFIRMED = \"confirmed\",\n  RECEIVED = \"received\",\n}\n\nexport interface PostSchoolInterface_old {\n  post_at_school_id: string;\n  school_id: string;\n  position_id: string;\n  district_id: string;\n  needed_posts: number;\n  confirmed_posts?: number;\n  occupied_posts?: number;\n  requested_by: string;\n  confirmed_by?: string;\n  received_posts?: number;\n  request_date: Date;\n  approval_date?: Date;\n  post_at_school_status: PostRequestStatusInterface;\n}\n\nexport interface PostSchoolInterface {\n  requested_post_id: string;\n  school_id: string;\n  position_id: string;\n  district_id: string;\n  needed_posts: number;\n  male_number: number;\n  female_number: number;\n  description: string;\n  confirmed_posts?: number;\n  occupied_posts?: number;\n  requested_by: string;\n  confirmed_by?: string;\n  received_posts?: number;\n  request_date: Date;\n  approval_date?: Date;\n  requested_post_status: PostRequestStatusInterface;\n  school: {\n    _id: string;\n    school_name: string;\n    school_code: string;\n    province_id: string;\n    province_code: string;\n    district_id: {\n      _id: string;\n      district_name: string;\n    };\n    district_code: string;\n    sector_code: string;\n    sector_id: string;\n    school_status: string;\n    status: number;\n    createdAt: string;\n    updatedAt: string;\n  };\n}\n\nexport interface SchoolInfoInterface {\n  school_id: string;\n  school_title: string;\n  district_id: string;\n  number_of_females?: number;\n  number_of_males?: number;\n}\n\nexport interface SchoolsInterface {\n  _id: string;\n  status: boolean;\n  school_name: string;\n  school_code: number;\n  province_id: string;\n  province_code: number;\n  district_id: string;\n  district_code: number;\n  sector_id: string;\n  sector_code: number;\n  education_category_id: string;\n}\n\nexport interface MySchoolInterface {\n  _id: string;\n  school_name: string;\n  school_code: string;\n  province_id: string;\n  province_code: string;\n  district_id: {\n    _id: string;\n    district_name: string;\n  };\n  district_code: string;\n  sector_code: string;\n  sector_id: string;\n  school_status: string;\n  status: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface SchoolLevelInterface {\n  school_level_id: string;\n  school_level_name: string;\n  description: string;\n  education_institute: string[];\n  courses: [];\n}\n\nexport interface CourseInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n}\n\nexport interface EducationInstituteInterface {\n  education_category_title: string;\n  school_levels: [];\n  description: string;\n  education_institute_id: string;\n}\n\nexport interface PositionRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface PositionInterface {\n  courses: CourseInterface[];\n  position_title: string;\n  description: string;\n  school_level_id: SchoolLevelInterface;\n  education_institute_id: EducationInstituteInterface;\n  requirements: PositionRequirementInterface[];\n  position_id: string;\n}\n\nexport enum DocumentAttributesInterface {\n  \"Title\" = \"title\",\n  \"Description\" = \"description\",\n  \"Files\" = \"files\",\n  \"email\" = \"email\",\n  \"names\" = \"names\",\n  \"phone_number\" = \"phone_number\",\n  \"position\" = \"position\",\n  \"relation\" = \"relation\",\n  \"src\" = \"src\",\n  \"year\" = \"year\",\n  \"company\" = \"company\",\n  \"category_subcategory_data\" = \"category_subcategory_data\",\n  \"others\" = \"others\",\n  \"start_year\" = \"start_year\",\n  \"end_year\" = \"end_year\",\n  \"School\" = \"School\",\n}\n\nexport enum DocValidationStatusInterface {\n  APPROVED = \"approved\",\n  REJECTED = \"rejected\",\n}\n\nexport interface DocumentCategoryInterface {\n  user_detail_category_id: string;\n  title: string;\n  description: string;\n  fields: DocumentAttributesInterface[];\n}\n\nexport interface DocumentSubCategoryInterface {\n  category_id: string;\n  title: string;\n  description: string;\n  user_detail_subcategory_id: string;\n}\n\nexport interface DocumentFieldsInterface {\n  _id: string;\n  category_id: string;\n  subcategory_id: string | null;\n  title: string;\n  description: string;\n  others: [];\n}\n\nexport interface ApplicationAssessmentInterface {\n  application_id: string;\n  user_id: string;\n  application_session: string;\n  application_status: string;\n  n_id: string;\n  phone_number: string;\n  email: string;\n  fname: string;\n  lname: string;\n  sex: \"M\" | \"F\";\n  district: string;\n  position: PositionApplicationInterface;\n  details: CandidateDetailsInterface[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface AdminApplicationsToPrintInterface {\n  application_id: number;\n  names: string;\n  gender?: string;\n  national_id?: string;\n  phone?: string;\n  email?: string;\n  position: string;\n  education_category?: string;\n  application_session?: string;\n  district?: string;\n  date?: string;\n  decision?: ApplicationStates;\n}\n\nexport interface PositionApplicationInterface {\n  courses: string[];\n  position_title: string;\n  description: string;\n  school_level_id: string;\n  education_institute_id: string;\n  requirements: PositionRequirementInterface[];\n  position_id: string;\n}\n\nexport interface PositionRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface ApplicationRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface PeriodInterface {\n  is_active: string;\n  application_session_name: string;\n  period: string;\n  application_start_date: string;\n  application_end_date: string;\n  createdAt: string;\n  updatedAt: string;\n  application_session_id: string;\n}\n\nexport interface LocationRoomTableInterface {\n  province_id: string;\n  province_name: string;\n  district_id: string;\n  district_name: string;\n  center_id: string;\n  center_name: string;\n  room_id: string;\n  room_name: string;\n  capacity: number;\n  occupied: number;\n}\n\nexport interface LocationSectorTableInterface {\n  province_id: string;\n  province_name: string;\n  province_code: number;\n  district_id: string;\n  district_name: string;\n  district_code: number;\n  sector_id: string;\n  sector_name: string;\n  sector_code: number;\n}\n\nexport interface PositionRequirementsFieldInterface {\n  category_id: string;\n  category_name: string;\n  sub_category_id: string;\n  sub_category_name: string;\n  field_id: string;\n  field_name: string;\n  sub_category_required: boolean;\n  required: boolean;\n  isAnyField: boolean;\n}\n\nexport interface PositionRequirementsQualificationInterface {\n  category_id: string;\n  category_name: string;\n  sub_category_id: string;\n  sub_category_name: string;\n  fields: DocumentFieldsInterface[];\n  required: boolean;\n}\n\nexport interface ApplicationPeriodInterface {\n  _id: string;\n  application_status: ApplicationStates;\n  userInfo: {\n    n_id: string;\n    phone_number: string;\n    email: string;\n    user_info: {\n      document_type: string;\n      issue_number: string;\n      date_of_issue: string;\n      date_of_expiry: string;\n      place_of_issue: string;\n      application_number: string;\n      fname: string;\n      lname: string;\n      father_names: string;\n      mother_names: string;\n      sex: string;\n      date_of_birth: string;\n      place_of_birth: string;\n      country_of_birth: string;\n      village_id: string;\n      village: string;\n      cell: string;\n      sector: string;\n      district: string;\n      province: string;\n      civil_status: string;\n      spouse: null;\n      status: string;\n      photo: string;\n    };\n  };\n  user_id: string;\n  position: string;\n  application_session: string;\n  exams: ApplicationExamsInterface[];\n}\n\nexport const getDocCategoryById = (\n  subDocs: DocumentCategoryInterface[],\n  docId: string\n): DocumentCategoryInterface => {\n  return subDocs.filter((doc) => doc.user_detail_category_id === docId)[0];\n};\n\nexport const getSubDocCategoryById = (\n  subDocs: DocumentSubCategoryInterface[],\n  docId: string\n): DocumentSubCategoryInterface => {\n  return subDocs.filter((doc) => doc.user_detail_subcategory_id === docId)[0];\n};\n\nexport const SESSION_PLAN_TYPES: {\n  type_id: number;\n  type_title: string;\n  type_key: SESSION_PLAN_KEYS;\n}[] = [\n  {\n    type_id: 1,\n    type_title: \"Application\",\n    type_key: SESSION_PLAN_KEYS.APPLICATION,\n  },\n  {\n    type_id: 2,\n    type_title: \"Document Validation\",\n    type_key: SESSION_PLAN_KEYS.DOCUMENT_VALIDATION,\n  },\n  {\n    type_id: 3,\n    type_title: \"Examination\",\n    type_key: SESSION_PLAN_KEYS.EXAMINATION,\n  },\n  {\n    type_id: 4,\n    type_title: \"Marks Publication\",\n    type_key: SESSION_PLAN_KEYS.MARKS_PUBLICATION,\n  },\n  {\n    type_id: 5,\n    type_title: \"Placement and Transfer\",\n    type_key: SESSION_PLAN_KEYS.PLACEMENT_TRANSFER,\n  },\n];\n","import { ApexOptions } from \"apexcharts\";\nimport React, { useEffect, useState } from \"react\";\nimport Chart from \"react-apexcharts\";\n\ntype VBarCharPropstInterface = {\n  labels: string[];\n  categoriesLabel: any;\n  bar?: {\n    borderRadius: number;\n    horizontal: boolean;\n    columnWidth: string;\n    endingShape: string;\n  };\n  dataLabels: boolean;\n  yaxisText: string;\n  tooltipText: string;\n  series: {\n    name: string;\n    data: number[];\n  }[];\n  defaultBar?: {\n    borderRadius: number;\n    horizontal: boolean;\n    columnWidth: string;\n    endingShape: string;\n  };\n  colors?: any[];\n  title?: {\n    text: string;\n    align: string;\n    margin: number;\n    offestY: number;\n    style: {\n      fontSize: string;\n    };\n  };\n  stacked?: boolean;\n  FC_LoadSelected?: (labelIndex: number, seriesIndex: number) => void;\n  chartHeight?: number;\n};\n\nconst defaultBar = {\n  borderRadius: 4,\n  horizontal: false,\n  columnWidth: \"95%\",\n  endingShape: \"rounded\",\n};\n\nconst VBarChart: React.FC<VBarCharPropstInterface> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [options, setOptions] = useState<ApexOptions>({\n    chart: {\n      events: {\n        dataPointSelection: (event, chartContext, config) => {\n          console.log({\n            labelClicked: config.w.config.labels[config.dataPointIndex],\n            // seriesClicked: config.w.config.series[config.dataPointIndex],\n          });\n          if (props.FC_LoadSelected) {\n            props.FC_LoadSelected(config.dataPointIndex, config.seriesIndex);\n          }\n          // console.log(config.seriesIndex);\n          // console.log(config.dataPointIndex);\n        },\n      },\n      stacked: props.stacked ? props.stacked : false,\n    },\n    plotOptions: {\n      bar: props.defaultBar ? props.defaultBar : defaultBar,\n    },\n    labels: props.labels,\n    dataLabels: {\n      enabled: true,\n    },\n    xaxis: {\n      labels: {\n        rotate: -45,\n      },\n      categories: props.categoriesLabel,\n      tickPlacement: \"on\",\n    },\n    yaxis: {\n      title: {\n        text: props.yaxisText,\n      },\n    },\n    fill: {\n      opacity: 1,\n    },\n    tooltip: {\n      y: {\n        formatter: function (val: number) {\n          return val + \" \" + props.tooltipText;\n        },\n      },\n    },\n    grid: {\n      padding: {\n        left: 30, // or whatever value that works\n        right: 30, // or whatever value that works\n      },\n    },\n    noData: {\n      text: \"No data found\",\n      align: \"center\",\n      verticalAlign: \"middle\",\n    },\n  });\n\n  useEffect(() => {\n    if (props.colors && props.colors.length > 0 && loading) {\n      setOptions({\n        chart: {\n          stacked: props.stacked ? props.stacked : false,\n          events: {\n            dataPointSelection: (event, chartContext, config) => {\n              console.log({\n                chartClicked: config.w.config.labels[config.dataPointIndex],\n              });\n              if (props.FC_LoadSelected) {\n                props.FC_LoadSelected(\n                  config.dataPointIndex,\n                  config.seriesIndex\n                );\n              }\n            },\n          },\n          zoom: {\n            enabled: true,\n            autoScaleYaxis: true,\n          },\n        },\n        plotOptions: {\n          bar: props.defaultBar ? props.defaultBar : defaultBar,\n        },\n        labels: props.labels,\n        dataLabels: {\n          enabled: true,\n        },\n        xaxis: {\n          labels: {\n            rotate: -45,\n          },\n          categories: props.categoriesLabel,\n          tickPlacement: \"on\",\n        },\n        yaxis: {\n          title: {\n            text: props.yaxisText,\n          },\n        },\n        fill: {\n          opacity: 1,\n        },\n        tooltip: {\n          y: {\n            formatter: function (val: number) {\n              return val + \" \" + props.tooltipText;\n            },\n          },\n        },\n        grid: {\n          padding: {\n            left: 30, // or whatever value that works\n            right: 30, // or whatever value that works\n          },\n        },\n        noData: {\n          text: \"No data found\",\n          align: \"center\",\n          verticalAlign: \"middle\",\n        },\n        colors: props.colors,\n      });\n    } else if (loading) {\n      setOptions({\n        chart: {\n          stacked: props.stacked ? props.stacked : false,\n          events: {\n            dataPointSelection: (event, chartContext, config) => {\n              console.log({\n                labelClicked: config.w.config.labels[config.dataPointIndex],\n                // seriesClicked: config.w.config.series[config.dataPointIndex],\n              });\n              if (props.FC_LoadSelected) {\n                props.FC_LoadSelected(\n                  config.dataPointIndex,\n                  config.seriesIndex\n                );\n              }\n              // console.log(config.seriesIndex);\n              // console.log(config.dataPointIndex);\n            },\n          },\n          zoom: {\n            enabled: true,\n            autoScaleYaxis: true,\n          },\n        },\n        plotOptions: {\n          bar: props.defaultBar ? props.defaultBar : defaultBar,\n        },\n        labels: props.labels,\n        dataLabels: {\n          enabled: true,\n        },\n        xaxis: {\n          labels: {\n            rotate: -45,\n          },\n          categories: props.categoriesLabel,\n          tickPlacement: \"on\",\n        },\n        yaxis: {\n          title: {\n            text: props.yaxisText,\n          },\n        },\n        fill: {\n          opacity: 1,\n        },\n        tooltip: {\n          y: {\n            formatter: function (val: number) {\n              return val + \" \" + props.tooltipText;\n            },\n          },\n        },\n        grid: {\n          padding: {\n            left: 30, // or whatever value that works\n            right: 30, // or whatever value that works\n          },\n        },\n        noData: {\n          text: \"No data found\",\n          align: \"center\",\n          verticalAlign: \"middle\",\n        },\n      });\n    }\n    setLoading(false);\n  }, [loading, options, props]);\n\n  if (loading) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading Data...\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"w-full\">\n      <Chart\n        options={options}\n        series={props.series}\n        type=\"bar\"\n        width=\"100%\"\n        height={props.chartHeight ? props.chartHeight : undefined}\n      />\n    </div>\n  );\n};\n\nexport default VBarChart;\n","import axios from \"axios\";\nimport React from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { createReClaim, DocumentClaimUser } from \"../../actions/claiming\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimStatus,\n} from \"../../interfaces\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { DocumentReducerInterface } from \"../../reducers/document\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { errorToText, showDate, timestampToDate } from \"../../utils/functions\";\nimport { ClaimGetDocTitle } from \"./Candidate/ClaimForm\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nexport const isClaimEvaluated = (\n  thisClaim: CandidateClaimInterface,\n  level: number\n): boolean => {\n  const _thisClaim = thisClaim.claims.find(\n    (item) =>\n      item.level === level && item.claim_status === ClaimStatus.EVALUATED\n  );\n  if (_thisClaim) {\n    return true;\n  }\n  return false;\n};\n\ntype ClaimDocViewProps = {\n  thisDoc: DocumentClaimUser;\n  // setViewThisFile: (value: string) => void;\n  documentCategories: DocumentReducerInterface;\n  thisClaim: CandidateClaimInterface;\n  viewImage: boolean;\n  setViewImage: (value: boolean) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  reClaiming: boolean;\n  setReClaiming: (value: boolean) => void;\n  reClaimingMsg: string;\n  setReClaimingMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX DATA =====================\n  createReClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst ClaimDocView: React.FC<ClaimDocViewProps> = (props) => {\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim sent successful\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim._id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Title:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {ClaimGetDocTitle(props.documentCategories, props.thisDoc).main}\n              </span>\n            </div>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewImage(!props.viewImage)}\n            >\n              {props.viewImage ? \"Hide\" : \"View\"}\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisDoc.validation_status === \"rejected\"\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } rounded px-3 py-1`}\n            >\n              {capitalizeFirstLetter(props.thisDoc.validation_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {props.thisClaim.previous.evaluater.name}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisDoc.validated_by.comment}\n            </span>\n          </div>\n\n          {/* DISPLAY IMAGE ==================================================== */}\n          {props.viewImage && (\n            <div className=\"w-full my-1 animate__animated animate__fadeIn\">\n              <img\n                src={`${API.AUTH_FILES}/${props.thisDoc.files}`}\n                alt=\"doc file\"\n                className={`w-full animate__animated animate__fadeIn`}\n              />\n            </div>\n          )}\n          {/* END DISPLAY IMAGE ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt) +\n                    \" at \" +\n                    timestampToDate(claim.date_created).timeFR}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-center justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <button\n                className=\"btn btn-blue\"\n                onClick={() => props.setReClaiming(true)}\n                disabled={props.loadingRequest}\n              >\n                Reclaim\n              </button>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your reclaim...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nexport default connect(null, {\n  createReClaim,\n  PushPopupAlert,\n})(ClaimDocView);\n","import React from \"react\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport { RiFileExcel2Fill } from \"react-icons/ri\";\n\ninterface ExportToExcelProps {\n  fileData: any[];\n  fileName: string;\n  btnName?: string;\n  className?: string;\n  showIcon?: boolean;\n}\n\nconst ExportToExcel: React.FC<ExportToExcelProps> = ({\n  fileData,\n  fileName,\n  btnName = \"Excel\",\n  className = \"flex items-center gap-1 px-4 py-1 rounded text-green-700 bg-white border hover:text-white hover:bg-green-700 border-green-700 font-bold\",\n  showIcon = true,\n}) => {\n  const fileType =\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n  const fileExtension = \".xlsx\";\n\n  const exportToCSV = (apiData: any[], fileName: string) => {\n    const ws = XLSX.utils.json_to_sheet(apiData);\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n    const data = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n\n  return (\n    <button\n      onClick={(e) => exportToCSV(fileData, fileName)}\n      className={className}\n    >\n      {showIcon && <RiFileExcel2Fill />}\n      {btnName}\n    </button>\n  );\n};\n\nexport default ExportToExcel;\n","import React from \"react\";\n\ntype TableLoadingProps = {\n  cols: number;\n};\nconst TableLoading: React.FC<TableLoadingProps> = (props) => {\n  const displayCols = (): JSX.Element[] => {\n    let colsArray: number[] = [];\n    for (let index = 0; index < props.cols; index++) {\n      colsArray.push(index);\n    }\n    let result = colsArray.map((element) => {\n      return (\n        <td className=\"p-3 text-center whitespace-nowrap\" key={element}>\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      );\n    });\n\n    return result;\n  };\n  return (\n    <>\n      <tr className=\"border-b border-gray-200\" key={228}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={22648}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={229768}>\n        {displayCols()}\n      </tr>\n    </>\n  );\n};\n\nexport default TableLoading;\n","export default __webpack_public_path__ + \"static/media/mineduc.11a9ae1c.png\";","import jsPDF from \"jspdf\";\nimport { DATE } from \"../../utils/functions\";\nimport Logo from \"../../utils/mineduc.png\";\nrequire(\"jspdf-autotable\");\n\nexport const addFooters = (doc: any) => {\n  const pageCount = doc.internal.getNumberOfPages();\n\n  doc.setFont(\"helvetica\", \"italic\");\n  doc.setFontSize(8);\n  for (var i = 1; i <= pageCount; i++) {\n    doc.setPage(i);\n    doc.text(\n      \"Page \" + String(i) + \" of \" + String(pageCount),\n      doc.internal.pageSize.width / 2,\n      297,\n      {\n        align: \"center\",\n      }\n    );\n  }\n};\n\nexport type reportSettingsInterface = {\n  doneBy: string;\n  title: string;\n  subjectTitle: string;\n  subject: string;\n  institute: string;\n  period: string;\n  footer: string;\n  orientation?: \"p\" | \"l\";\n};\n\nexport const generatePDF = async (\n  reportSettings: reportSettingsInterface,\n  table: HTMLElement,\n  callBack: (status: boolean) => void\n) => {\n  callBack(true);\n  const orientation: \"p\" | \"l\" = reportSettings.orientation\n    ? reportSettings.orientation\n    : \"p\";\n  var lMargin: number = 20; //left margin in mm\n  var rMargin: number = 20; //right margin in mm\n  var pdfInMM: number = 185; // width of A4 in mm\n\n  //   var doc = new jsPDF(\"p\", \"mm\", \"a4\");\n  var doc: any = new jsPDF(orientation, \"mm\", \"a4\");\n\n  doc.setTextColor(95, 95, 95);\n  doc.setFontSize(28);\n  // doc.text(\n  //   this.props.reportTitle,\n  //   doc.internal.pageSize.getWidth() / 2,\n  //   30,\n  //   undefined,\n  //   \"center\"\n  // );\n  doc.addImage(Logo, \"png\", 20, 20, 10, 10);\n  doc.text(\"MINEDUC\", 32, 28.5, undefined, \"left\");\n  //   doc.setTextColor(19, 90, 152);\n  doc.setFontSize(26);\n  doc.text(\n    reportSettings.title,\n    doc.internal.pageSize.getWidth() / 2,\n    42.7,\n    undefined,\n    \"center\"\n  );\n\n  doc.setFontSize(20);\n  doc.text(\n    reportSettings.institute,\n    doc.internal.pageSize.getWidth() / 2,\n    53.7,\n    undefined,\n    \"center\"\n  );\n\n  var lines;\n  lines = doc.splitTextToSize(\n    reportSettings.subject,\n    pdfInMM - lMargin - rMargin\n  );\n  // if (reportSettings.position) {\n  // } else if (reportSettings.subject) {\n  //   lines = doc.splitTextToSize(\n  //     reportSettings.subject,\n  //     pdfInMM - lMargin - rMargin\n  //   );\n  // }\n\n  //   doc.setTextColor(0, 123, 255);\n  doc.setFontSize(16);\n  //   doc.text(lines, doc.internal.pageSize.getWidth() / 2, 45, {\n  //     maxWidth: 85,\n  //     align: \"center\",\n  //   });\n\n  var y = 63,\n    width;\n  doc.setTextColor(95, 95, 95);\n  doc.text(`${reportSettings.subjectTitle}: `, lMargin, y);\n  width = doc.getTextWidth(`${reportSettings.subjectTitle}: `);\n  // if (reportSettings.position) {\n  // } else if (reportSettings.position) {\n  //   doc.text(`Subject: `, lMargin, y);\n  //   width = doc.getTextWidth(\"Subject: \");\n  // }\n  // doc.setFontType(\"bold\");\n  doc.setTextColor(38, 38, 38);\n  for (var i = 0; i < lines.length; i++) {\n    if (y > 280) {\n      y = 10;\n      doc.addPage();\n    }\n    // doc.text(15, y, lines[i]);\n    doc.text(lines[i], lMargin + width, y);\n    y = y + 7;\n  }\n  doc.setTextColor(95, 95, 95);\n  doc.text(\"Period: \", lMargin, y + 3);\n  width = doc.getTextWidth(\"Period: \");\n  doc.setTextColor(38, 38, 38);\n  doc.text(reportSettings.period, lMargin + width, y + 3);\n\n  doc.autoTable({\n    html: table,\n    startY: 85,\n    margin: { horizontal: 20 },\n    cellPadding: 3, // Horizontal cell padding\n    // fontSize: 12,\n    rowHeight: 20,\n    // styles: { overflow: \"linebreak\" },\n    bodyStyles: { valign: \"top\" },\n    columnStyles: { email: { cellWidth: \"wrap\" } },\n    theme: \"striped\",\n    tableWidth: true,\n  });\n\n  doc.setFontSize(12);\n  let finalY = doc.lastAutoTable.finalY; // The y position on the page\n  doc.text(`Reported by: ${reportSettings.doneBy}`, lMargin, finalY + 15);\n  doc.text(\n    \"Report downloaded on \" + DATE(new Date().toString()),\n    lMargin,\n    finalY + 23\n  );\n\n  addFooters(doc);\n  await doc\n    .save(\n      `${\n        reportSettings.title +\n        \": \" +\n        reportSettings.subject +\n        \": \" +\n        reportSettings.period\n      }.pdf`,\n      { returnPromise: true }\n    )\n    .then(callBack(false));\n};\n","import React, { useState } from \"react\";\nimport {\n  MdCheckCircle,\n  MdRadioButtonUnchecked,\n  MdSearch,\n} from \"react-icons/md\";\nimport Loading from \"../../components/Loading/Loading\";\nimport {\n  PlansInterface,\n  SessionPlanInterface,\n  SessionPlanTypeStatus,\n} from \"../../interfaces\";\nimport { DATE } from \"../../utils/functions\";\nimport searchData from \"../../utils/search\";\n\nexport const isPlansActive = (plans: PlansInterface[]): PlansInterface[] => {\n  let today = new Date();\n  let activePlans: PlansInterface[] = [];\n  for (let plan of plans) {\n    let startDate = new Date(plan.start_date);\n    let endDate = new Date(plan.end_date);\n    if (\n      startDate.getTime() <= today.getTime() &&\n      endDate.getTime() >= today.getTime() &&\n      plan.type_status === SessionPlanTypeStatus.OPEN\n    ) {\n      activePlans = [...activePlans, plan];\n    }\n  }\n  return activePlans;\n};\n\ninterface ChooseSessionProps {\n  allSession: SessionPlanInterface[] | null;\n  setSelectSession: (period: SessionPlanInterface | \"all\") => void;\n  currentSelected: SessionPlanInterface | \"all\";\n  chooseAll: boolean;\n}\n\nconst ChooseSession = (props: ChooseSessionProps) => {\n  const [selectedPlan, setSelectedPlan] = useState<SessionPlanInterface | null>(\n    null\n  );\n  const [search, setSearch] = useState<string>(\"\");\n  const getSearch = (\n    period: SessionPlanInterface[],\n    searched: string\n  ): SessionPlanInterface[] => {\n    return searchData(period, searched) as SessionPlanInterface[];\n  };\n\n  return (\n    <div className=\"\">\n      <div className=\"px-3\">\n        <input\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n            setSearch(e.target.value)\n          }\n          type=\"text\"\n          className=\"py-3 px-4 w-full rounded border border-gray-400 mb-3\"\n          placeholder=\"Search by year, name\"\n          disabled={props.allSession === null || props.allSession.length === 0}\n        />\n      </div>\n\n      <div className=\"bg-gray-100 px-3 pt-3 pb-2 rounded-b\">\n        {props.allSession === null ? (\n          <Loading />\n        ) : props.allSession.length === 0 ? (\n          <div className=\"flex flex-col text-gray-400 items-center justify-center mb-2 bg-white py-4\">\n            <MdSearch className=\"text-6xl\" />\n            <div className=\"flex flex-col items-center justify-center\">\n              <span>No session found!</span>\n            </div>\n          </div>\n        ) : (\n          <section>\n            {props.chooseAll && (\n              <div\n                className={`rounded border ${\n                  props.currentSelected === \"all\"\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2 flex flex-col md:flex-row items-start md:items-center md:justify-between`}\n              >\n                <div className=\"flex flex-row items-center gap-3\">\n                  {props.currentSelected === \"all\" ? (\n                    <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                  ) : (\n                    <MdRadioButtonUnchecked\n                      className={`text-gray-300 text-4xl`}\n                    />\n                  )}\n                  <div className=\"flex flex-col\">\n                    <div className={`text-gray-600 font-bold`}>All session</div>\n                  </div>\n                </div>\n                <div\n                  onClick={() => {\n                    props.setSelectSession(\"all\");\n                  }}\n                  className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                >\n                  Select\n                </div>\n              </div>\n            )}\n            {getSearch(props.allSession, search).map((item, i) => (\n              <div\n                key={i + 1}\n                className={`rounded border ${\n                  props.currentSelected !== \"all\" &&\n                  props.currentSelected.session_plan_id === item.session_plan_id\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2`}\n              >\n                <div className=\"flex flex-col md:flex-row items-start md:items-center md:justify-between \">\n                  <div className=\"flex flex-row items-center gap-3\">\n                    {props.currentSelected !== \"all\" &&\n                    props.currentSelected.session_plan_id ===\n                      item.session_plan_id ? (\n                      <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                    ) : (\n                      <MdRadioButtonUnchecked\n                        className={`text-gray-300 text-4xl`}\n                      />\n                    )}\n                    <div className=\"flex flex-col\">\n                      <div\n                        className={`${\n                          props.currentSelected !== \"all\" &&\n                          props.currentSelected.session_plan_id ===\n                            item.session_plan_id\n                            ? \"text-blue-600\"\n                            : \"text-gray-600\"\n                        } font-bold`}\n                      >\n                        {item.session_plan_name}\n                      </div>\n                      <div className=\"text-sm text-gray-500\">\n                        <span>Status: </span>\n                        <span\n                          className={`${\n                            item.is_active === true\n                              ? \"text-gray-900 font-bold underline\"\n                              : \"text-gray-500 italic\"\n                          }`}\n                        >\n                          {item.is_active === true ? \"Active\" : \"Expired\"}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"flex flex-row items-center gap-2\">\n                    {(selectedPlan === null ||\n                      selectedPlan.session_plan_id !==\n                        item.session_plan_id) && (\n                      <div\n                        onClick={() => setSelectedPlan(item)}\n                        className=\"bg-gray-50 group-hover:bg-blue-100 font-semibold text-gray-400 group-hover:text-blue-600 rounded px-3 py-2 cursor-pointer\"\n                      >\n                        Details\n                      </div>\n                    )}\n                    <div\n                      onClick={() => {\n                        props.setSelectSession(item);\n                      }}\n                      className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                    >\n                      Select\n                    </div>\n                    {selectedPlan !== null &&\n                      selectedPlan.session_plan_id === item.session_plan_id && (\n                        <div\n                          onClick={() => setSelectedPlan(null)}\n                          className=\"bg-red-100 group-hover:bg-red-200 font-semibold text-red-600 group-hover:text-red-800 rounded px-3 py-2 cursor-pointer\"\n                        >\n                          Close\n                        </div>\n                      )}\n                  </div>\n                </div>\n                {selectedPlan !== null &&\n                  selectedPlan.session_plan_id === item.session_plan_id && (\n                    <div className=\"bg-white rounded border border-blue-50 mt-2 animate__animated animate__fadeIn\">\n                      <table className=\"w-full\">\n                        <thead className=\"bg-blue-50\">\n                          <tr className=\"text-left\">\n                            <th className=\"px-3 py-3\">#</th>\n                            <th>Plan</th>\n                            <th>Start date</th>\n                            <th>Ending date</th>\n                            <th>Status</th>\n                          </tr>\n                        </thead>\n                        <tbody className=\"text-sm\">\n                          {selectedPlan !== null &&\n                            selectedPlan.session_plan_id ===\n                              item.session_plan_id &&\n                            selectedPlan.plans.length > 0 &&\n                            item.plans.map((plan, i) => (\n                              <tr\n                                key={i + 1}\n                                className={`${\n                                  isPlansActive(item.plans).find(\n                                    (itm) => itm.type_key === plan.type_key\n                                  ) !== undefined\n                                    ? \"bg-blue-100 text-blue-600 font-bold\"\n                                    : \"\"\n                                } text-left border-b border-blue-50`}\n                              >\n                                <td className=\"px-3 py-1\">{i + 1}</td>\n                                <td>{plan.type_title}</td>\n                                <td>{DATE(plan.start_date, \"DD/MM/YYYY\")}</td>\n                                <td>{DATE(plan.end_date, \"DD/MM/YYYY\")}</td>\n                                <td>{plan.type_status}</td>\n                              </tr>\n                            ))}\n                        </tbody>\n                      </table>\n                    </div>\n                  )}\n              </div>\n            ))}\n          </section>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ChooseSession;\n","import React from \"react\";\nimport Table from \"../../components/Table/Table\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { PositionRequirementTableInterface } from \"./ViewPosition\";\n\ninterface RequirementProps {\n  requirements: PositionRequirementTableInterface[];\n}\n\nconst ViewRequirements: React.FC<RequirementProps> = (props) => {\n  const tableData = (): JSX.Element[] => {\n    let data: PositionRequirementTableInterface[] = props.requirements;\n    // let data: PositionSubcategoryData[] =\n    //   props.position_requirement.position_requirement;\n    if (data.length === 0) {\n      return [\n        <tr key={153} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={3}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    return data.map((item, index) => (\n      <tr\n        key={index + item.field_id}\n        className=\"border-b border-gray-200 hover:bg-gray-100\"\n      >\n        <td className=\"p-3 text-left whitespace-nowrap\">{index + 1}</td>\n        <td className=\"p-3 text-left\">\n          <span>{item.subcategory_title}</span>\n        </td>\n        <td className=\"p-3 text-left\">\n          <span>\n            {isEmptyOrSpaces(item.field_id) ? \"Any document\" : item.field_title}\n          </span>\n        </td>\n        <td className=\"p-3 text-left text-lg italic\">\n          {isEmptyOrSpaces(item.field_id) ? (\n            item.subcategory_required ? (\n              <span className=\"text-yellow-800\">Required</span>\n            ) : (\n              \"Optional\"\n            )\n          ) : item.required ? (\n            <span className=\"text-yellow-800\">Required</span>\n          ) : (\n            \"Optional\"\n          )}\n        </td>\n      </tr>\n    ));\n  };\n\n  return (\n    <div>\n      <Table\n        columns={[\n          { columnTitle: \"#\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Qualification\", alignText: \"left\", padding: \"p-3\" },\n          // {\n          //   columnTitle: \"Qualification Status\",\n          //   alignText: \"left\",\n          //   padding: \"p-3\",\n          // },\n          { columnTitle: \"Document\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Status\", alignText: \"left\", padding: \"p-3\" },\n          // { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n        ]}\n        rows={tableData}\n        pagination={false}\n        search={false}\n        thColor=\"gray\"\n      />\n    </div>\n  );\n};\n\nexport default ViewRequirements;\n","import React, { Component } from \"react\";\nimport FindAnswer from \"../../containers/DoExam/DoExamTitle/FindAnswer\";\nimport { ExamAnswerSheetDone } from \"../../interfaces/exam\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  CandidateApplicationsStoreInterface,\n  candidateExamStoreInterface,\n  FC_GetProfileDetails,\n  LoadCandidateApplications,\n  setSelectedCandidateExam,\n  setSelectedCourse,\n  setSelectedPosition,\n  InitializeExamDetails,\n  loadExamsDone,\n  AddUserApplication,\n  loadApplicationPeriods,\n  requestUserAnswers,\n  loadQuestionTypes,\n  questionTypesStoreInterface,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { DATE } from \"../../utils/functions\";\nimport { AiOutlineFileText } from \"react-icons/ai\";\nimport { ExamDoneDetailsAnswers } from \"../../containers/CandidateExams/CandidateExams\";\nimport Loading from \"../Loading/Loading\";\n\ninterface AnswersDetailsProps {\n  exam_id: ExamDoneDetailsAnswers;\n  showAnswers: boolean;\n  allAnswers?: ExamAnswerSheetDone[];\n  user_id?: string;\n  questionTypes: questionTypesStoreInterface;\n  requestUserAnswers: (\n    exam_id: string,\n    user_id: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  FC_GetProfileDetails: Function;\n  auth: Auth;\n  candidateExam: candidateExamStoreInterface;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  loadExamsDone: (\n    periodId: string,\n    userId: string,\n    callback: (loading: boolean) => void\n  ) => void;\n}\ninterface AnswersDetailsState {\n  loading: boolean;\n  loadingStatus: boolean;\n}\n\nexport class _AnswersDetails extends Component<\n  AnswersDetailsProps,\n  AnswersDetailsState\n> {\n  constructor(props: AnswersDetailsProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      loadingStatus: false,\n    };\n  }\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  };\n  setLoadingStatus = (status: boolean) => {\n    this.setState({ loadingStatus: status });\n  };\n  componentDidMount = () => {\n    if (\n      this.props.questionTypes.questionTypes === null ||\n      this.props.questionTypes.questionTypes.length === 0\n    ) {\n      this.props.loadQuestionTypes(this.setLoading);\n    }\n    if (this.props.exam_id) {\n      let check = this.props.candidateExam.user_exams_done.find(\n        (itm) =>\n          itm.course === this.props.exam_id.course &&\n          itm.period === this.props.exam_id.period &&\n          DATE(itm.exam_date) === DATE(this.props.exam_id.exam_date)\n      );\n      // Check if user exams loaded\n      if (\n        (this.props.candidateExam.user_exams_done.length === 0 ||\n          check === undefined) &&\n        this.props.allAnswers === undefined\n      ) {\n        this.props.loadExamsDone(\n          this.props.exam_id.period,\n          this.props.auth.user.user_id,\n          this.setLoadingStatus\n        );\n      }\n      if (check !== undefined) {\n        if (\n          this.props.candidateExam.user_exams_done.find(\n            (item) => item.exam_paper === check?.exam_paper\n          ) === undefined\n        ) {\n          this.props.requestUserAnswers(\n            check.exam_paper,\n            this.props.user_id === undefined\n              ? this.props.auth.user.user_id\n              : this.props.user_id,\n            this.setLoading\n          );\n        }\n      }\n    }\n  };\n  userAnswersTotalMarks = (user_answers: ExamAnswerSheetDone) => {\n    let total: number = 0;\n    for (let item of user_answers.user_answers) {\n      total += item.user_marks;\n    }\n    return total;\n  };\n  render() {\n    let user_exam_details: ExamAnswerSheetDone | undefined =\n      this.props.allAnswers === undefined\n        ? this.props.candidateExam.user_exams_done.find(\n            (itm) =>\n              itm.course === this.props.exam_id.course &&\n              itm.period === this.props.exam_id.period &&\n              DATE(itm.exam_date) === DATE(this.props.exam_id.exam_date)\n          )\n        : this.props.allAnswers.find(\n            (itm) =>\n              itm.course === this.props.exam_id.course &&\n              itm.period === this.props.exam_id.period &&\n              DATE(itm.exam_date) === DATE(this.props.exam_id.exam_date)\n          );\n    if (this.state.loading === true || this.state.loadingStatus === true) {\n      return (\n        <div className=\"my-6 rounded bg-white p-3\">\n          <Loading />\n        </div>\n      );\n    }\n    if (user_exam_details === undefined) {\n      return (\n        <div className=\"my-6 rounded bg-white p-3\">\n          <span className=\"text-4xl font-bold\">Exam details not found!</span>\n        </div>\n      );\n    }\n    return (\n      <div className=\"p-2 bg-gray-100\">\n        <div className=\"mb-5 -mt-5\">\n          {user_exam_details !== undefined && (\n            <div className=\"mt-5\">\n              <div className=\"px-3 mb-2 flex flex-row items-center gap-3\">\n                <div>\n                  <AiOutlineFileText className=\"text-5xl text-gray-500\" />\n                </div>\n                <div\n                  className=\"text-2xl font-extrabold\"\n                  dangerouslySetInnerHTML={{\n                    __html: \"Exam for \" + this.props.exam_id.course_name,\n                  }}\n                ></div>\n              </div>\n              <div className=\" p-3 bg-white rounded-t mb-0 border-b\">\n                <div className=\"text-sm text-gray-500 font-bold\">\n                  Exam date:\n                </div>\n                <div\n                  className=\"text-base font-bold\"\n                  dangerouslySetInnerHTML={{\n                    __html: DATE(this.props.exam_id.exam_date),\n                  }}\n                ></div>\n              </div>\n              <div className=\" p-3 bg-white mb-0 border-b\">\n                <div className=\"text-sm text-gray-500 font-bold\">\n                  Exam description:\n                </div>\n                <div\n                  className=\"text-base font-bold\"\n                  dangerouslySetInnerHTML={{\n                    __html: this.props.exam_id.discription,\n                  }}\n                ></div>\n              </div>\n              <div className=\" p-3 bg-white rounded-b mb-0\">\n                <div className=\"text-sm text-gray-500 font-bold\">\n                  Exam terms and conditions:\n                </div>\n                <div\n                  className=\"text-base font-bold\"\n                  dangerouslySetInnerHTML={{\n                    __html: this.props.exam_id.termes,\n                  }}\n                ></div>\n              </div>\n            </div>\n          )}\n        </div>\n        <div className=\"text-2xl font-extrabold text-blue-600 px-2 mb-3\">\n          Exam answers & marks\n        </div>\n        {user_exam_details === undefined\n          ? \"Not Found\"\n          : user_exam_details.user_answers.map((item, i) => (\n              <div\n                key={i + 1}\n                className=\"bg-white hover:bg-white border border-white hover:border-blue-400 px-2 py-2 rounded  animate__animated animate__fadeIn animate__fast group mb-2\"\n              >\n                <div className=\"grid md:grid-cols-11 w-full\">\n                  <div className=\"col-span-12 flex flex-row items-center gap-3\">\n                    <div\n                      key={i + 1}\n                      className=\"w-6 h-6 p-2 rounded-full bg-gray-600 flex justify-center items-center font-bold text-lg text-white cursor-pointer\"\n                    >\n                      {i + 1}\n                    </div>\n                    {user_exam_details &&\n                      user_exam_details.questions.find(\n                        (itm) => itm.question_id === item.question\n                      ) !== undefined && (\n                        <div className=\"text-sm w-full\">\n                          <div\n                            className=\"font-bold text-gray-700 text-base\"\n                            dangerouslySetInnerHTML={{\n                              __html: user_exam_details.questions\n                                .find(\n                                  (itm) => itm.question_id === item.question\n                                )!\n                                .question.find(\n                                  (test) => test.language === item.language\n                                )!.description,\n                            }}\n                          ></div>\n                          <div className=\"text-blue-700 font-bold text-sm w-full\">\n                            Answer:&nbsp;{\" \"}\n                            {this.props.questionTypes.questionTypes !== null &&\n                              user_exam_details.user_answers.find(\n                                (itm) => itm.question === item.question\n                              ) && (\n                                <div className=\"mb-2\">\n                                  <FindAnswer\n                                    selectedLanguage={item.language}\n                                    question={{\n                                      question_id: item.question,\n                                      course: user_exam_details.questions.find(\n                                        (itm) =>\n                                          itm.question_id === item.question\n                                      )!.course,\n                                      question:\n                                        user_exam_details.questions.find(\n                                          (itm) =>\n                                            itm.question_id === item.question\n                                        )!.question,\n                                      type: user_exam_details.questions.find(\n                                        (itm) =>\n                                          itm.question_id === item.question\n                                      )!.type,\n                                      chapters:\n                                        user_exam_details.questions.find(\n                                          (itm) =>\n                                            itm.question_id === item.question\n                                        )!.chapters,\n                                      customNumber:\n                                        user_exam_details.questions.find(\n                                          (itm) =>\n                                            itm.question_id === item.question\n                                        )!.customNumber,\n                                      marks: user_exam_details.questions.find(\n                                        (itm) =>\n                                          itm.question_id === item.question\n                                      )!.marks,\n                                      answer: user_exam_details.questions.find(\n                                        (itm) =>\n                                          itm.question_id === item.question\n                                      )!.answer,\n                                    }}\n                                    answersList={[\n                                      {\n                                        question_id: item.question,\n                                        status: true,\n                                        answer:\n                                          user_exam_details.user_answers.find(\n                                            (itm) =>\n                                              itm.question === item.question\n                                          )!.answer,\n                                      },\n                                    ]}\n                                    questionTypes={\n                                      this.props.questionTypes.questionTypes\n                                    }\n                                    showCorrectAnswer={this.props.showAnswers}\n                                    onClick={() => {}}\n                                  />\n                                </div>\n                              )}\n                          </div>\n                        </div>\n                      )}\n                  </div>\n                </div>\n                <div className=\"col-span-1 flex items-center justify-between\">\n                  <div></div>\n\n                  <div className=\"w-max flex flex-col items-end justify-center bg-blue-50 rounded-md px-3 py-1 group-hover:bg-blue-100\">\n                    <div className=\"text-sm font-semibold text-gray-700\">\n                      Marks\n                    </div>\n                    <div className=\"text-sm font-extrabold text-gray-900 -mt-1\">\n                      <span className=\"text-blue-500\">\n                        {item.user_marks.toFixed(2)}\n                      </span>{\" \"}\n                      /{\" \"}\n                      {user_exam_details &&\n                        user_exam_details.questions.find(\n                          (itm) => itm.question_id === item.question\n                        )?.marks}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n        <div className=\"flex flex-row items-center justify-between gap-3 mb-10\">\n          <div className=\"bg-blue-100 p-3 pr-3 text-blue-700 flex flex-col items-start justify-center rounded-lg border-2 border-white\">\n            <span className=\"text-gray-700\">Total marks percentage</span>\n            <span className=\"text-3xl font-extrabold\">\n              {user_exam_details && user_exam_details.total_marks.toFixed(2)}%\n            </span>\n          </div>\n          <div>\n            <div className=\"bg-white rounded-lg p-3\">\n              <div className=\"text-gray-500 font-bold text-base text-right\">\n                Exam total marks\n              </div>\n              {user_exam_details !== undefined && (\n                <div className=\"font-extrabold text-3xl text-gray-900 text-right\">\n                  {this.userAnswersTotalMarks(user_exam_details).toFixed(2)} /{\" \"}\n                  {user_exam_details.exam_total_marks}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  candidateExam,\n  candidateApplications,\n  questionTypes,\n}: StoreState): {\n  auth: Auth;\n  candidateExam: candidateExamStoreInterface;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  questionTypes: questionTypesStoreInterface;\n} => {\n  return {\n    auth: auth,\n    candidateExam: candidateExam,\n    candidateApplications: candidateApplications,\n    questionTypes: questionTypes,\n  };\n};\n\nexport const AnswersDetails = connect(mapStateToProps, {\n  FC_GetProfileDetails,\n  LoadCandidateApplications,\n  setSelectedCandidateExam,\n  setSelectedCourse,\n  setSelectedPosition,\n  InitializeExamDetails,\n  loadExamsDone,\n  AddUserApplication,\n  loadApplicationPeriods,\n  requestUserAnswers,\n  loadQuestionTypes,\n})(_AnswersDetails);\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  course,\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimExamResultsDetails,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { StoreState } from \"../../../reducers\";\nimport { search } from \"../../../utils/functions\";\nimport { isClaimAllowed } from \"./ClaimForm\";\n\nconst getFailedExam = (\n  allData: ClaimExamResultsDetails[],\n  allCourses: course[]\n): ClaimExamResultsDetails[] => {\n  let result: ClaimExamResultsDetails[] = [];\n  allData.forEach((element) => {\n    if (element.total_marks < 100) {\n      let data = element;\n      data.course_name = getCourseById(allCourses, element.course)\n        ? getCourseById(allCourses, element.course)!.course_name\n        : \"Unknown exam\";\n      result.push(data);\n    }\n  });\n\n  return result;\n};\n\nexport const getCourseById = (courses: course[], course_id: string) => {\n  return courses.find((item) => item.course_id === course_id);\n};\n\nexport const getCourseIdBySheetId = (\n  allData: ClaimExamResultsDetails[],\n  sheet_id: string\n) => {\n  return allData.find((item) => item.answer_sheet_id === sheet_id);\n};\n\nexport const searchApplication = (\n  objList: claimApplicationsInterface[],\n  text: any\n): claimApplicationsInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (prop === \"position\") {\n        flag =\n          product.position.position_title\n            .toString()\n            .toLowerCase()\n            .indexOf(text.toLowerCase()) > -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n  // return objList.filter((product) =>\n  //   product.position.position_title.includes(text)\n  // );\n};\n\ntype FormExamListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  viewThisFile: string;\n  candidateAnswers: ClaimExamResultsDetails[];\n  myClaims: CandidateClaimInterface[];\n  activeSession: SessionPlanInterface;\n\n  // REDUX //////////////////////\n  courses: course[] | null;\n};\n\nconst FormExamList: React.FC<FormExamListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            !props.courses ||\n            getFailedExam(props.candidateAnswers, props.courses).filter(\n              (item) =>\n                isClaimAllowed(\n                  props.myClaims,\n                  props.activeSession.session_plan_id,\n                  item.answer_sheet_id\n                )\n            ).length > 0\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Cancel\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}{\" \"}\n      {/* searchData(props.candidateAnswers, searchInput) */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {props.courses &&\n        getFailedExam(props.candidateAnswers, props.courses).filter((item) =>\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            item.answer_sheet_id\n          )\n        ).length > 0 ? (\n          search(\n            getFailedExam(props.candidateAnswers, props.courses).filter(\n              (item) =>\n                isClaimAllowed(\n                  props.myClaims,\n                  props.activeSession.session_plan_id,\n                  item.answer_sheet_id\n                )\n            ),\n            searchInput\n          ).map((item: ClaimExamResultsDetails, index: number) => (\n            <div\n              className=\"group flex items-center justify-between my-1 hover:bg-gray-100\"\n              key={index + item.answer_sheet_id}\n            >\n              <div\n                className=\"p-1 w-full mr-2 cursor-pointer\"\n                onClick={() => {\n                  props.setChooseClaimFile(false);\n                  props.setClaimFileId(item.answer_sheet_id);\n                }}\n              >\n                <p className=\"text-base font-medium text-black\">\n                  {item.course_name}\n                </p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                onClick={() => {\n                  props.setViewThisFile(item.answer_sheet_id);\n                }}\n              >\n                View\n              </button>\n            </div>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No failed exam available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  course,\n}: StoreState): {\n  courses: course[] | null;\n} => {\n  return {\n    courses: course.courses,\n  };\n};\nexport default connect(mapStateToProps, {})(FormExamList);\n","import React from \"react\";\nimport Chart from \"react-apexcharts\";\n\ntype chartType = {\n  options: {\n    labels: string[];\n    legend?: ApexLegend;\n    plotOptions?: ApexPlotOptions;\n    colors?: any[];\n  };\n  series: number[];\n  width?: number;\n};\n\nconst PieChart: React.FC<chartType> = (props) => {\n  return (\n    <div className=\"donut\">\n      <Chart\n        options={props.options}\n        series={props.series}\n        type=\"donut\"\n        width={`${props.width ? props.width : \"380\"}`}\n      />\n    </div>\n  );\n};\n\nexport default PieChart;\n","import React from \"react\";\nimport { MdTurnedIn } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../../actions\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  claimApplicationsInterface,\n  claimApplicationsPositionInterface,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { DATE } from \"../../../utils/functions\";\nimport { PositionRequirementTableInterface } from \"../../Positions/ViewPosition\";\nimport ViewRequirements from \"../../Positions/ViewRequirements\";\n\nexport const FC_ApplicationPositionDistinctCategory = (\n  thisPosition: claimApplicationsPositionInterface,\n  documentCategories: DocumentReducerInterface\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n  let requirements = thisPosition.requirements;\n  // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n  for (let req in requirements) {\n    let thisRequirements = requirements[req];\n    // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisCategory = documentCategories.documentCategory\n      ? documentCategories.documentCategory.find(\n          (item) =>\n            item.user_detail_category_id ===\n            thisRequirements.user_detail_category_id\n        ) && {\n          title: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.user_detail_category_id\n          )!.title,\n          user_detail_category_id: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.user_detail_category_id\n          )!.user_detail_category_id,\n        }\n      : {\n          title: \"\",\n          user_detail_category_id: thisRequirements.user_detail_category_id,\n        };\n    // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisSubCategory = documentCategories.documentSubCategory\n      ? documentCategories.documentSubCategory.find(\n          (item) =>\n            item.user_detail_subcategory_id ===\n            thisRequirements.user_detail_subcategory_id\n        )\n        ? {\n            title: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.user_detail_subcategory_id\n            )!.title,\n            user_detail_subcategory_id:\n              documentCategories.documentSubCategory.find(\n                (item) =>\n                  item.user_detail_subcategory_id ===\n                  thisRequirements.user_detail_subcategory_id\n              )!.user_detail_subcategory_id,\n            category_id: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.user_detail_subcategory_id\n            )!.category_id,\n          }\n        : {\n            title: \"\",\n            user_detail_subcategory_id:\n              thisRequirements.user_detail_subcategory_id,\n            category_id: \"\",\n          }\n      : {\n          title: \"\",\n          user_detail_subcategory_id:\n            thisRequirements.user_detail_subcategory_id,\n          category_id: \"\",\n        };\n    // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n    if (thisCategory) {\n      for (let field in thisRequirements.position_requirement) {\n        // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n        let thisField = documentCategories.documentFields\n          ? documentCategories.documentFields.find(\n              (item) =>\n                item._id ===\n                thisRequirements.position_requirement[field]\n                  .category_subcategory_data_id\n            )\n            ? {\n                title: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]\n                      .category_subcategory_data_id\n                )!.title,\n                _id: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]\n                      .category_subcategory_data_id\n                )!._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n            : {\n                title: \"\",\n                _id: thisRequirements.user_detail_subcategory_id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n          : {\n              title: \"\",\n              _id: thisRequirements.user_detail_subcategory_id,\n              required: thisRequirements.position_requirement[field].required,\n            };\n        // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n        PositionsTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: thisField.title,\n          field_id: thisField._id,\n          required: thisField.required,\n        });\n      }\n\n      // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n      ) {\n        DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n        DistinctCategoriesTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: \"\",\n          subcategory_title: \"\",\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n\n      // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctSubCategoriesIds.includes(\n          thisSubCategory.user_detail_subcategory_id\n        )\n      ) {\n        DistinctSubCategoriesIds.push(\n          thisSubCategory.user_detail_subcategory_id\n        );\n        DistinctSubCategoriesTemp.push({\n          category_id: thisSubCategory.category_id,\n          category_title: \"\",\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n    }\n  }\n  // DistinctCategoriesIds.;\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\nexport const showEvaluator = (\n  userList: UserInterface[],\n  user_id: string\n): string => {\n  let result: string = \"\";\n  if (user_id === \"system\") {\n    result = \"System\";\n  } else {\n    // let user = getUserDocuments(userList, user_id);\n    // let user = undefined;\n    // if (user) {\n    //   result = user.user.user_info.fname + \" \" + user.user.user_info.lname;\n    // }\n  }\n  return result;\n};\n\ntype ApplicationFormViewProps = {\n  thisApplication: claimApplicationsInterface;\n  setViewThisFile: (value: string) => void;\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  documentCategories: DocumentReducerInterface;\n  PushPopupAlert: Function;\n};\n\nconst ApplicationFormView: React.FC<ApplicationFormViewProps> = (props) => {\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          {/* APPLICATION TITLE ========== */}\n          <section className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              {props.thisApplication.position.position_title}\n            </span>\n            <button\n              type=\"button\"\n              className=\"btn btn-blue\"\n              onClick={() => {\n                props.setChooseClaimFile(false);\n                props.setClaimFileId(props.thisApplication.application_id);\n                props.setViewThisFile(\"\");\n              }}\n            >\n              Choose\n            </button>\n          </section>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisApplication.createdAt)}\n            </span>\n          </div>\n          {false && (\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Session:</span>\n              <span className=\"font-bold text-gray-900 py-1\">\n                {\n                  props.thisApplication.application_session\n                    .application_session_name\n                }\n              </span>\n            </div>\n          )}\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisApplication.application_status ===\n                ApplicationStates.Rejected\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } py-1`}\n            >\n              {capitalizeFirstLetter(props.thisApplication.application_status)}\n            </span>\n          </div>\n          {/* <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {props.thisApplication.}\n            </span>\n          </div> */}\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-semibold text-gray-900\">\n              {props.thisApplication.override_by.comment}\n            </span>\n          </div>\n        </div>\n        <div className=\"bg-white w-full rounded p-2 mb-2\">\n          <div className=\"text-gray-800 text-2xl font-bold my-2\">\n            Position Details\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Desc:</span>\n            <span className=\"font-semibold\">\n              {props.thisApplication.position.description}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>School level:</span>\n            <span className=\"font-semibold\">\n              {props.thisApplication.position.school_level_id.school_level_name}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Institute:</span>\n            <span className=\"font-semibold\">\n              {\n                props.thisApplication.position.education_institute_id\n                  .education_category_title\n              }\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Courses:</span>\n            <span className=\"flex items-center gap-2\">\n              {props.thisApplication.position.courses.map((item, index) => (\n                <div\n                  key={index + item.course_id}\n                  className=\"flex items-center gap-1\"\n                >\n                  <span className=\"font-semibold\">{item.course_name}</span>\n                  <span className=\"text-gray-600\">({item.course_code})</span>\n                  {index !==\n                    props.thisApplication.position.courses.length - 1 && \",\"}\n                </div>\n              ))}\n            </span>\n          </div>\n\n          <div className=\"text-gray-800 text-2xl font-bold my-2\">\n            Position Requirements\n          </div>\n          {props.thisApplication.position.requirements.length > 0 ? (\n            FC_ApplicationPositionDistinctCategory(\n              props.thisApplication.position,\n              props.documentCategories\n            ).DistinctCategoriesTemp.map((item, index) => (\n              <div\n                className=\"bg-gray-100props.thisApplication.position rounded p-2\"\n                key={index + item.category_id}\n              >\n                <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                  <MdTurnedIn />\n                  <span>{item.category_title}</span>\n                </div>\n                <div className=\"border bg-white mt-1\">\n                  <ViewRequirements\n                    requirements={FC_ApplicationPositionDistinctCategory(\n                      props.thisApplication.position,\n                      props.documentCategories\n                    ).PositionsTemp.filter(\n                      (req) => req.category_id === item.category_id\n                    )}\n                  />\n                </div>\n              </div>\n            ))\n          ) : (\n            <NoResult\n              theme={NoResultThemes.Dark}\n              value={\"No requirements\"}\n            ></NoResult>\n          )}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default connect(null, { PushPopupAlert })(ApplicationFormView);\n","import React from \"react\";\nimport { AnswersDetails } from \"../../../components/AnswersDetails/AnswersDetails\";\nimport {\n  claimApplicationsPositionInterface,\n  ClaimExamResultsDetails,\n} from \"../../../interfaces\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { DATE } from \"../../../utils/functions\";\nimport { ExamDoneDetailsAnswers } from \"../../CandidateExams/CandidateExams\";\nimport { PositionRequirementTableInterface } from \"../../Positions/ViewPosition\";\n\nexport const FC_ApplicationPositionDistinctCategory = (\n  thisPosition: claimApplicationsPositionInterface,\n  documentCategories: DocumentReducerInterface\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n  let requirements = thisPosition.requirements;\n  // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n  for (let req in requirements) {\n    let thisRequirements = requirements[req];\n    // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisCategory = documentCategories.documentCategory\n      ? documentCategories.documentCategory.find(\n          (item) =>\n            item.user_detail_category_id ===\n            thisRequirements.user_detail_category_id\n        ) && {\n          title: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.user_detail_category_id\n          )!.title,\n          user_detail_category_id: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.user_detail_category_id\n          )!.user_detail_category_id,\n        }\n      : {\n          title: \"\",\n          user_detail_category_id: thisRequirements.user_detail_category_id,\n        };\n    // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisSubCategory = documentCategories.documentSubCategory\n      ? documentCategories.documentSubCategory.find(\n          (item) =>\n            item.user_detail_subcategory_id ===\n            thisRequirements.user_detail_subcategory_id\n        )\n        ? {\n            title: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.user_detail_subcategory_id\n            )!.title,\n            user_detail_subcategory_id:\n              documentCategories.documentSubCategory.find(\n                (item) =>\n                  item.user_detail_subcategory_id ===\n                  thisRequirements.user_detail_subcategory_id\n              )!.user_detail_subcategory_id,\n            category_id: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.user_detail_subcategory_id\n            )!.category_id,\n          }\n        : {\n            title: \"\",\n            user_detail_subcategory_id:\n              thisRequirements.user_detail_subcategory_id,\n            category_id: \"\",\n          }\n      : {\n          title: \"\",\n          user_detail_subcategory_id:\n            thisRequirements.user_detail_subcategory_id,\n          category_id: \"\",\n        };\n    // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n    if (thisCategory) {\n      for (let field in thisRequirements.position_requirement) {\n        // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n        let thisField = documentCategories.documentFields\n          ? documentCategories.documentFields.find(\n              (item) =>\n                item._id ===\n                thisRequirements.position_requirement[field]\n                  .category_subcategory_data_id\n            )\n            ? {\n                title: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]\n                      .category_subcategory_data_id\n                )!.title,\n                _id: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]\n                      .category_subcategory_data_id\n                )!._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n            : {\n                title: \"\",\n                _id: thisRequirements.user_detail_subcategory_id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n          : {\n              title: \"\",\n              _id: thisRequirements.user_detail_subcategory_id,\n              required: thisRequirements.position_requirement[field].required,\n            };\n        // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n        PositionsTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: thisField.title,\n          field_id: thisField._id,\n          required: thisField.required,\n        });\n      }\n\n      // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n      ) {\n        DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n        DistinctCategoriesTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: \"\",\n          subcategory_title: \"\",\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n\n      // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctSubCategoriesIds.includes(\n          thisSubCategory.user_detail_subcategory_id\n        )\n      ) {\n        DistinctSubCategoriesIds.push(\n          thisSubCategory.user_detail_subcategory_id\n        );\n        DistinctSubCategoriesTemp.push({\n          category_id: thisSubCategory.category_id,\n          category_title: \"\",\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n    }\n  }\n  // DistinctCategoriesIds.;\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\nexport const showEvaluator = (\n  userList: UserInterface[],\n  user_id: string\n): string => {\n  let result: string = \"\";\n  if (user_id === \"system\") {\n    result = \"System\";\n  } else {\n    // let user = getUserDocuments(userList, user_id);\n    // let user = undefined;\n    // if (user) {\n    //   result = user.user.user_info.fname + \" \" + user.user.user_info.lname;\n    // }\n  }\n  return result;\n};\n\nexport const claimShowAnswer = (\n  answer: ClaimExamResultsDetails\n): ExamDoneDetailsAnswers => {\n  let result: ExamDoneDetailsAnswers = {\n    course: answer.course,\n    course_name: answer.course_name,\n    discription: answer.discription,\n    termes: answer.termes,\n    rules: {\n      right_click_enabled: false,\n      copy_enabled: false,\n      paste_enabled: false,\n      stop_candidate_when_comeback: false,\n      allow_to_leave_browser: false,\n    },\n    period: answer.period,\n    exam_date: answer.exam_date,\n  };\n  return result;\n};\n\ntype ExaminationFormViewProps = {\n  thisAnswerSheet: ClaimExamResultsDetails;\n  setViewThisFile: (value: string) => void;\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n};\n\nconst ExaminationFormView: React.FC<ExaminationFormViewProps> = (props) => {\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          {/* APPLICATION TITLE ========== */}\n          <section className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              {props.thisAnswerSheet.course_name}\n            </span>\n            <button\n              type=\"button\"\n              className=\"btn btn-blue\"\n              onClick={() => {\n                props.setChooseClaimFile(false);\n                props.setClaimFileId(props.thisAnswerSheet.answer_sheet_id);\n                props.setViewThisFile(\"\");\n              }}\n            >\n              Choose\n            </button>\n          </section>\n\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisAnswerSheet.createdAt)}\n            </span>\n          </div>\n        </div>\n        {/* QUESTIONS ----------------------------- */}\n        <AnswersDetails\n          showAnswers={false}\n          exam_id={claimShowAnswer(props.thisAnswerSheet)}\n        />\n        {/* END QUESTIONS ----------------------------- */}\n      </div>\n    </section>\n  );\n};\n\nexport default ExaminationFormView;\n","import React, { FC } from \"react\";\nimport { IconType } from \"react-icons\";\nimport { FaUsers } from \"react-icons/fa\";\nimport { toAnyDigit } from \"../../shared/dataTest\";\n\nexport type DashboardLabelItemInterface = {\n  // TITLE: Application or Exam or Shortlisted ....\n  title: string;\n  // ICON: FaExpand ....\n  icon: IconType;\n  // ICON COLOR: blue, indigo, gray ....\n  iconColor: string;\n  // COUNT: 0,1,2,3,5,23,563 ....\n  count: number;\n  // COUNT: 0,1,2,3,5,23,563 ....\n  countOver?: number;\n};\n\nconst DashboardLabelItem: FC<DashboardLabelItemInterface> = (\n  props = {\n    title: \"\",\n    icon: FaUsers,\n    iconColor: \"indigo\",\n    count: 0,\n    countOver: undefined,\n  }\n) => {\n  const IconDefined = props.icon;\n  return (\n    <div className=\"flex items-center px-6 py-4 bg-white w-full rounded-md space-x-2 mb-2 lg:mb-0 shadow-md\">\n      <div\n        className={`p-3 rounded-full bg-${props.iconColor}-200 bg-opacity-75`}\n      >\n        <IconDefined className={`h-8 w-8 text-${props.iconColor}-600`} />\n      </div>\n      <div>\n        <h1 className=\"text-3xl font-semibold text-gray-700\">\n          {toAnyDigit(props.count)}{\" \"}\n          {props.countOver && \"/ \" + toAnyDigit(props.countOver)}\n        </h1>\n        <span className=\"text-gray-500 text-lg\">{props.title}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default DashboardLabelItem;\n","import React from \"react\";\nimport DashboardLabelItem, {\n  DashboardLabelItemInterface,\n} from \"../DashboardLabelItem\";\n\ntype DashboardLabelProps = {\n  dataLabels: DashboardLabelItemInterface[];\n  labelsOnRow?: number;\n  childrenPosition?: \"START\" | \"END\";\n  children?: JSX.Element;\n};\n\nconst ExamDashboardLabels: React.FC<DashboardLabelProps> = (props) => {\n  const numCols: number = props.labelsOnRow\n    ? props.labelsOnRow > 4\n      ? props.labelsOnRow\n      : 4\n    : 4;\n  return (\n    <div\n      className={`grid 2xl:grid-cols-${numCols} xl:grid-cols-${\n        numCols - 1\n      } lg:grid-cols-${numCols - 2} md:grid-cols-${\n        numCols - 3\n      } sm:grid-cols-2 grid-cols-1 gap-4 items-center mx-auto`}\n    >\n      {props.children &&\n        ((props.childrenPosition && props.childrenPosition === \"START\") ||\n          !props.childrenPosition) &&\n        props.children}\n      {props.dataLabels.map((item, index) => (\n        <section key={index + item.title}>\n          <DashboardLabelItem\n            title={item.title}\n            icon={item.icon}\n            iconColor={item.iconColor}\n            count={item.count}\n          />\n        </section>\n      ))}\n      {props.children &&\n        props.childrenPosition &&\n        props.childrenPosition === \"END\" &&\n        props.children}\n    </div>\n  );\n};\n\nexport default ExamDashboardLabels;\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { VscLoading } from \"react-icons/vsc\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { updateSessionPlan } from \"../../actions/session\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport {\n  allPlanTypes,\n  PlansInterface,\n  PlansTypeInterface,\n  PlansTypeKeys,\n  SessionPlanInterface,\n  SessionPlanTypeStatus,\n} from \"../../interfaces\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { capitalizeFirstLetter } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { DATE, errorToText } from \"../../utils/functions\";\n\nexport const isActivationAllowed = (thisPlans: PlansInterface): boolean => {\n  let today: Date = new Date(),\n    end_date = new Date(thisPlans.end_date);\n  if (end_date.getTime() >= today.getTime()) {\n    return true;\n  }\n  return false;\n};\n\nexport const getPlanTypeByKey = (\n  type_key: PlansTypeKeys\n): PlansTypeInterface | undefined => {\n  return allPlanTypes.find((item) => item.type_key === type_key);\n};\n\nexport const isPlanActive = (\n  viewThisSession: SessionPlanInterface,\n  thisPlan: PlansInterface\n): \"OPEN\" | \"CLOSED\" | \"WAITING\" => {\n  if (viewThisSession.is_active) {\n    let today = new Date(),\n      planEndDate = new Date(thisPlan.end_date),\n      planStartDate = new Date(thisPlan.start_date);\n    if (\n      planEndDate.getTime() >= today.getTime() &&\n      planStartDate.getTime() <= today.getTime() &&\n      thisPlan.type_status !== SessionPlanTypeStatus.CLOSED\n    ) {\n      return \"OPEN\";\n    } else if (\n      planStartDate.getTime() > today.getTime() &&\n      thisPlan.type_status !== SessionPlanTypeStatus.CLOSED\n    ) {\n      return \"WAITING\";\n    }\n  }\n  return \"CLOSED\";\n};\n\ntype SessionDetailsProps = {\n  viewThisSession: SessionPlanInterface;\n  setViewThisSession: (data: SessionPlanInterface) => void;\n\n  // REDUX ----------------\n  updateSessionPlan: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype SessionDetailsState = {\n  loadingRequest: string;\n};\n\nexport class SessionDetails extends Component<\n  SessionDetailsProps,\n  SessionDetailsState\n> {\n  constructor(props: SessionDetailsProps) {\n    super(props);\n\n    this.state = {\n      loadingRequest: \"\",\n    };\n  }\n\n  handlePlanActivation = async (\n    session: SessionPlanInterface,\n    thisPlan: PlansInterface\n  ) => {\n    const newState: \"open\" | \"close\" = session.is_active ? \"close\" : \"open\";\n\n    if (!window.confirm(`Are you sure you want to ${newState} this plan?`)) {\n      return true;\n    }\n\n    if (!isActivationAllowed(thisPlan)) {\n      this.props.PushPopupAlert({\n        title: `Opening/Closing plan which has been expired is not allowed!`,\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    let newData: SessionPlanInterface = {\n      session_plan_name: session.session_plan_name,\n      period: session.period,\n      is_active: session.is_active,\n      plans: [],\n      createdAt: session.createdAt,\n      updatedAt: session.updatedAt,\n      session_plan_id: session.session_plan_id,\n    };\n    for (const key in session.plans) {\n      if (Object.prototype.hasOwnProperty.call(session.plans, key)) {\n        const element = session.plans[key];\n        if (thisPlan.type_key === element.type_key) {\n          if (thisPlan.type_status === SessionPlanTypeStatus.OPEN) {\n            newData.plans.push({\n              type_id: thisPlan.type_id,\n              type_title: thisPlan.type_title,\n              type_key: thisPlan.type_key,\n              type_status: SessionPlanTypeStatus.CLOSED,\n              start_date: thisPlan.start_date,\n              end_date: thisPlan.end_date,\n              allowed_claim_level: thisPlan.allowed_claim_level,\n              _id: thisPlan._id,\n              history: thisPlan.history,\n            });\n          } else {\n            newData.plans.push({\n              type_id: thisPlan.type_id,\n              type_title: thisPlan.type_title,\n              type_key: thisPlan.type_key,\n              type_status: SessionPlanTypeStatus.OPEN,\n              start_date: thisPlan.start_date,\n              end_date: thisPlan.end_date,\n              allowed_claim_level: thisPlan.allowed_claim_level,\n              _id: thisPlan._id,\n              history: thisPlan.history,\n            });\n          }\n        } else {\n          newData.plans.push(element);\n        }\n      }\n    }\n\n    console.log(\"====================================\");\n    console.log({ newData });\n    console.log(\"====================================\");\n\n    this.setState({ loadingRequest: thisPlan.type_key });\n    try {\n      const res = await axios.put<SessionPlanInterface>(\n        `${API.CLAIMING}/session/${session.session_plan_id}`,\n        newData\n      );\n      this.props.updateSessionPlan(res.data);\n      this.props.setViewThisSession(res.data);\n      this.props.PushPopupAlert({\n        title: `Session ${newState}d successfully`,\n        theme: PopupAlertTheme.info,\n      });\n      this.setState({ loadingRequest: \"\" });\n      console.log(\"updateSessionPlan: \", res);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.warning,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <table className=\"w-full bg-white shadow p-5\" id=\"session_content\">\n        <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n          <tr>\n            <td className=\"p-2\">#</td>\n            <td className=\"p-2\">Plan Type</td>\n            <td className=\"p-2\">Start Date</td>\n            <td className=\"p-2\">End date</td>\n            {this.props.viewThisSession.is_active && (\n              <td className=\"p-2\" colSpan={2}>\n                Status\n              </td>\n            )}\n          </tr>\n        </thead>\n        <tbody>\n          {/* WHILE DATA FOUND ====================== */}\n          {this.props.viewThisSession.plans.map((item, index) => (\n            <tr\n              key={index + item._id}\n              className={`border-b border-gray-200 hover:bg-gray-100`}\n            >\n              <td className=\"p-2 text-left whitespace-nowrap\">{index + 1}</td>\n              <td className=\"p-2 text-left\">\n                <span className=\"text-lg\">\n                  {getPlanTypeByKey(item.type_key) &&\n                    capitalizeFirstLetter(\n                      getPlanTypeByKey(item.type_key)!.type_title\n                    )}\n                </span>\n              </td>\n              <td className=\"p-2 text-left\">{DATE(item.start_date)}</td>\n              <td className=\"p-2 text-left\">{DATE(item.end_date)}</td>\n              {this.props.viewThisSession.is_active && (\n                <td>\n                  {isPlanActive(this.props.viewThisSession, item) === \"OPEN\" ? (\n                    <span className={`px-2 py-1 font-semibold text-green-700`}>\n                      Open\n                    </span>\n                  ) : isPlanActive(this.props.viewThisSession, item) ===\n                    \"WAITING\" ? (\n                    <span className={`px-2 py-1 font-semibold text-gray-700`}>\n                      Waiting\n                    </span>\n                  ) : (\n                    <span className={`px-2 py-1 font-semibold text-red-700`}>\n                      Closed\n                    </span>\n                  )}\n                </td>\n              )}\n              {this.props.viewThisSession.is_active && (\n                <td>\n                  {isActivationAllowed(item) && (\n                    <div className=\"flex items-center justify-center gap-1\">\n                      <div\n                        className={`relative ${\n                          this.state.loadingRequest.length > 0\n                            ? \"cursor-not-allowed\"\n                            : \"cursor-pointer\"\n                        }`}\n                        title={\n                          item.type_status === SessionPlanTypeStatus.OPEN\n                            ? \"Deactivating session\"\n                            : \"Activating session\"\n                        }\n                        onClick={() =>\n                          this.state.loadingRequest.length <= 0 &&\n                          this.handlePlanActivation(\n                            this.props.viewThisSession,\n                            item\n                          )\n                        }\n                      >\n                        <span className=\"block w-14 h-8 bg-gray-100 rounded-full shadow-inner\"></span>\n                        <span\n                          className={`absolute block w-6 h-6 mt-1 ml-1 rounded-full shadow inset-y-0 left-0 focus-within:shadow-outline transition-transform duration-500 ease-in-out ${\n                            item.type_status === SessionPlanTypeStatus.CLOSED\n                              ? \"bg-red-500\"\n                              : \"bg-green-500 transform translate-x-full\"\n                          }`}\n                        ></span>\n                      </div>\n                      {this.state.loadingRequest === item.type_key && (\n                        <VscLoading className=\"animate__animated animate__rotateIn animate__infinite\" />\n                      )}\n                    </div>\n                  )}\n                </td>\n              )}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nexport default connect(null, {\n  updateSessionPlan,\n  PushPopupAlert,\n})(SessionDetails);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport {\n  getAllClaims,\n  GetClaimingTypes,\n  setSelectedClaimType,\n} from \"../../../actions/claiming\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport { MainItem } from \"../../../components/Navigation/SideNavigation\";\nimport {\n  CandidateClaimInterface,\n  ClaimStatus,\n  PlansTypeKeys,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\n\nexport const filterClaimsByClaimType = (\n  claimList: CandidateClaimInterface[],\n  claimType: PlansTypeKeys | \"all\"\n): CandidateClaimInterface[] => {\n  if (claimType === \"all\") {\n    return claimList;\n  }\n\n  return claimList.filter((item) => item.type_key === claimType);\n};\n\ntype AdminFilterByTypeProps = {\n  loadingClaims: boolean;\n  FC_CountByType?: Function;\n\n  // REDUX PROPS =======================================\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  GetClaimingTypes: Function;\n  setSelectedClaimType: Function;\n  getAllClaims: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\nconst AdminFilterByType: React.FC<AdminFilterByTypeProps> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingClaimTypes, setLoadingClaimTypes] = useState<boolean>(true);\n\n  useEffect(() => {\n    if (props.claiming.claimTypes === null) {\n      props.GetClaimingTypes((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          setLoadingClaimTypes(false);\n          setLoading(false);\n        }\n      });\n    } else if (loadingClaimTypes) {\n      setLoadingClaimTypes(false);\n      setLoading(false);\n    }\n  }, [loadingClaimTypes, props]);\n\n  const countClaims = (\n    claiming: ClaimingReducerType,\n    thisType: PlansTypeKeys | \"all\"\n  ): number => {\n    let result: number = 0;\n\n    if (claiming.allClaims && thisType === \"all\") {\n      result = claiming.allClaims.filter(\n        (item) => item.last_claim_status === ClaimStatus.PENDING\n      ).length;\n    }\n    if (claiming.allClaims && thisType !== \"all\") {\n      result = claiming.allClaims.filter(\n        (item) =>\n          item.type_key === thisType &&\n          item.last_claim_status === ClaimStatus.PENDING\n      ).length;\n    }\n\n    return result;\n  };\n\n  return (\n    <React.Fragment>\n      <span className=\"mt-2 text-sm\">Filter by claim type</span>\n      {/* WHILE LOADING DATA ================================== */}\n      {(loading || props.loadingClaims) && (\n        <section className=\"space-y-2\">\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </section>\n      )}\n      {/* END WHILE LOADING DATA ================================== */}\n\n      {/* AFTER LOADING DATA ================================== */}\n      {!loading && !props.loadingClaims && props.claiming.claimTypes && (\n        <section>\n          {/* ALL ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(\"ALL\");\n              props.setSelectedClaimType(\"all\");\n            }}\n          >\n            <MainItem\n              title=\"All\"\n              active={props.claiming.selectedClaimType === \"all\"}\n              count={countClaims(props.claiming, \"all\")}\n            />\n          </div>\n          {/* APPLICATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(ClaimTypesInterface.DOCUMENT);\n              props.setSelectedClaimType(PlansTypeKeys.APPLICATION);\n            }}\n          >\n            <MainItem\n              title={\"Application\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.APPLICATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.APPLICATION)}\n            />\n          </div>\n          {/* DOCUMENT ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.DOCUMENT_VALIDATION);\n            }}\n          >\n            <MainItem\n              title={\"Document\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION\n              }\n              count={countClaims(\n                props.claiming,\n                PlansTypeKeys.DOCUMENT_VALIDATION\n              )}\n            />\n          </div>\n          {/* EXAMINATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.EXAMINATION);\n            }}\n          >\n            <MainItem\n              title={\"Exam\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.EXAMINATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.EXAMINATION)}\n            />\n          </div>\n          {false && (\n            <div\n              className=\"mt-2\"\n              onClick={() => {\n                props.setSelectedClaimType(PlansTypeKeys.PLACEMENT_TRANSFER);\n              }}\n            >\n              <MainItem\n                title={\"Placement\"}\n                active={\n                  props.claiming.selectedClaimType !== \"all\" &&\n                  props.claiming.selectedClaimType ===\n                    PlansTypeKeys.PLACEMENT_TRANSFER\n                }\n                count={countClaims(\n                  props.claiming,\n                  PlansTypeKeys.PLACEMENT_TRANSFER\n                )}\n              />\n            </div>\n          )}\n        </section>\n      )}\n      {/* END AFTER LOADING DATA ================================== */}\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  claiming,\n}: StoreState): { auth: Auth; claiming: ClaimingReducerType } => {\n  return { auth, claiming };\n};\n\nexport default connect(mapStateToProps, {\n  GetClaimingTypes,\n  setSelectedClaimType,\n  getAllClaims,\n  PushPopupAlert,\n})(AdminFilterByType);\n","import React from \"react\";\nimport { AiFillDashboard } from \"react-icons/ai\";\nimport { SessionPlanInterface } from \"../../interfaces\";\n\ntype ClaimHeaderTitleProps = {\n  headerTitle: string;\n  loading: boolean;\n  loadingSession: boolean;\n  periodChanged: boolean;\n  thisPeriod: SessionPlanInterface | null;\n  setThisPeriod: (state: SessionPlanInterface | null) => void;\n  setLoadingSession: (state: boolean) => void;\n  application_sessions: SessionPlanInterface[];\n  onPeriodChange: (period_id: string) => void;\n};\n\nconst selectPeriod = (\n  sessions: SessionPlanInterface[],\n  period_id: string,\n  setThisPeriod: (state: SessionPlanInterface | null) => void\n) => {\n  setThisPeriod(\n    sessions.filter((item) => item.session_plan_id === period_id)[0]\n  );\n};\n\nconst ClaimHeaderTitle: React.FC<ClaimHeaderTitleProps> = (props) => {\n  const isLoading = (): boolean => {\n    if (props.loading || props.loadingSession || props.periodChanged) {\n      return true;\n    }\n    return false;\n  };\n\n  return (\n    <div className=\"mt-3 rounded flex flex-col md:flex-row md:justify-between items-start\">\n      <div className=\"flex flex-row items-center gap-3 mb-2\">\n        <AiFillDashboard className=\"text-6xl text-blue-600 hidden md:block\" />\n        <div className=\"flex flex-col\">\n          <span className=\"text-blue-600 text-3xl font-bold\">\n            {props.headerTitle}\n          </span>\n        </div>\n      </div>\n\n      {/* FILTER SECTION PERIOD && EDUCATION */}\n      <section className=\"w-full md:w-auto my-2 md:my-0\">\n        <div>\n          <select\n            className={`bg-white text-gray-600 border border-gray-400 rounded p-2 focus:outline-none ${\n              isLoading() ? \"cursor-wait\" : \"cursor-default\"\n            }`}\n            value={props.thisPeriod ? props.thisPeriod.session_plan_id : \"\"}\n            disabled={isLoading()}\n            onChange={(e) => {\n              selectPeriod(\n                props.application_sessions,\n                e.target.value,\n                props.setThisPeriod\n              );\n              props.setLoadingSession(true);\n              props.onPeriodChange(e.target.value);\n            }}\n          >\n            {props.application_sessions.map((session, item) => (\n              <option\n                key={session.session_plan_id + item}\n                value={session.session_plan_id}\n              >\n                {session.session_plan_name}\n              </option>\n            ))}\n          </select>\n        </div>\n      </section>\n      {/* END FILTER SECTION PERIOD && EDUCATION */}\n    </div>\n  );\n};\n\nexport default ClaimHeaderTitle;\n","import React from \"react\";\nimport {\n  BsCheckSquareFill,\n  BsCheckCircleFill,\n  BsArrowRightSquareFill,\n  BsArrowRightCircleFill,\n} from \"react-icons/bs\";\nimport { QuestionAnswersStore } from \"../../../actions\";\nimport {\n  CalculatedMultipleChoiceQuestionAnswerInterface,\n  MatchingQuestionAnswerInterface,\n  MultipleChoiceQuestionAnswerInterface,\n  QuestionInterface,\n  questionType,\n  questionTypeElementsType,\n  TrueFalseQuestionAnswerInterface,\n  NumericalQuestionAnswerInterface,\n  ShortAnswerQuestionAnswerInterface,\n  SimpleCalculatedQuestionAnswerInterface,\n  QuestionLanguage,\n  LanguageInterface,\n} from \"../../../interfaces\";\nimport {\n  toCalculatedMultipleChoice,\n  toMatching,\n  toMultipleChoice,\n  toNumerical,\n  toShortAnswer,\n  toSimpleCalculated,\n  toTrueFalse,\n} from \"../QuestionDetails/ConvertingAnswers\";\nimport { findQuestionType } from \"../utils/utils\";\n\ninterface FindAnswerProps {\n  question: QuestionInterface;\n  answersList: QuestionAnswersStore[];\n  selectedLanguage: QuestionLanguage | LanguageInterface;\n  questionTypes: questionType[];\n  showCorrectAnswer: boolean;\n  onClick: () => void;\n}\n\nconst FindAnswer = (props: FindAnswerProps) => {\n  const answer = props.answersList.find(\n    (item) => item.question_id === props.question.question_id\n  );\n  const UserAnswersSel = props.question.question.find(\n    (itm) => itm.language === props.selectedLanguage\n  );\n  if (answer === undefined || UserAnswersSel === undefined) {\n    return (\n      <div className=\"text-yellow-600 font-extrabold text-2xl text-center\">\n        No answer found!\n      </div>\n    );\n  } else {\n    switch (findQuestionType(props.question.type, props.questionTypes)) {\n      case questionTypeElementsType.MultipleChoice:\n        const userAnswer: MultipleChoiceQuestionAnswerInterface[] =\n          toMultipleChoice(answer.answer);\n        return (\n          <div className=\"w-full\">\n            {userAnswer\n              .filter((itm) => itm.status === true)\n              .map((item, i) => (\n                <div\n                  key={i + 1}\n                  onClick={props.onClick}\n                  className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                >\n                  <div className=\"text-xl text-blue-600\">\n                    <BsCheckSquareFill />\n                  </div>\n                  <div dangerouslySetInnerHTML={{ __html: item.value }}></div>\n                </div>\n              ))}\n            {/* Correct answers */}\n            {props.showCorrectAnswer === true && (\n              <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n                <div className=\"font-extrabold text-lg\">Correct answer</div>\n                <div>\n                  {UserAnswersSel.answer\n                    .filter((itm) => itm.status === true)\n                    .map((item, i) => (\n                      <div\n                        key={i + 1}\n                        onClick={props.onClick}\n                        className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                      >\n                        <div className=\"text-xl text-blue-600\">\n                          <BsCheckSquareFill />\n                        </div>\n                        <div\n                          dangerouslySetInnerHTML={{ __html: item.value }}\n                        ></div>\n                      </div>\n                    ))}\n                </div>\n              </div>\n            )}\n          </div>\n        );\n      case questionTypeElementsType.SingleMultiple:\n        const userAnswerSingle: MultipleChoiceQuestionAnswerInterface[] =\n          toMultipleChoice(answer.answer);\n        return (\n          <div className=\"w-full\">\n            {userAnswerSingle\n              .filter((itm) => itm.status === true)\n              .map((item, i) => (\n                <div\n                  key={i + 1}\n                  onClick={props.onClick}\n                  className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                >\n                  <div className=\"text-xl text-blue-600\">\n                    <BsCheckCircleFill />\n                  </div>\n                  <div dangerouslySetInnerHTML={{ __html: item.value }}></div>\n                </div>\n              ))}\n            {/* Correct answers */}\n            {props.showCorrectAnswer === true && (\n              <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n                <div className=\"font-extrabold text-lg\">Correct answer</div>\n                <div>\n                  {UserAnswersSel.answer\n                    .filter((itm) => itm.status === true)\n                    .map((item, i) => (\n                      <div\n                        key={i + 1}\n                        onClick={props.onClick}\n                        className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                      >\n                        <div className=\"text-xl text-blue-600\">\n                          <BsCheckCircleFill />\n                        </div>\n                        <div\n                          dangerouslySetInnerHTML={{ __html: item.value }}\n                        ></div>\n                      </div>\n                    ))}\n                </div>\n              </div>\n            )}\n          </div>\n        );\n\n      case questionTypeElementsType.CalculatedMultipleChoice:\n        const userAnswer1: CalculatedMultipleChoiceQuestionAnswerInterface[] =\n          toCalculatedMultipleChoice(answer.answer);\n        return (\n          <div className=\"w-full\">\n            {userAnswer1\n              .filter((itm) => itm.status === true)\n              .map((item, i) => (\n                <div\n                  key={i + 1}\n                  onClick={props.onClick}\n                  className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                >\n                  <div className=\"text-xl text-blue-600\">\n                    <BsCheckSquareFill />\n                  </div>\n                  <div className=\"text-base font-normal text-gray-500\">\n                    {item.value.length > 1 ? (\n                      <>\n                        Between{\" \"}\n                        <span className=\"underline text-gray-600 font-extrabold\">\n                          {item.value[0]}\n                        </span>{\" \"}\n                        and{\" \"}\n                        <span className=\"underline text-gray-600 font-extrabold\">\n                          {item.value[1]}\n                        </span>\n                      </>\n                    ) : (\n                      <span className=\"text-gray-700\">\n                        {item.value[0].toString()}\n                      </span>\n                    )}\n                  </div>\n                </div>\n              ))}\n            {/* Correct answers */}\n            {props.showCorrectAnswer === true && (\n              <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n                <div className=\"font-extrabold text-lg\">Correct answer</div>\n                <div>\n                  {UserAnswersSel.answer\n                    .filter((itm) => itm.status === true)\n                    .map((item, i) => (\n                      <div\n                        key={i + 1}\n                        onClick={props.onClick}\n                        className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 mb-1 py-3 font-bold\"\n                      >\n                        <div className=\"text-xl text-blue-600\">\n                          <BsCheckSquareFill />\n                        </div>\n                        <div className=\"text-base font-normal text-gray-500\">\n                          {item.value.length > 1 ? (\n                            <>\n                              Between{\" \"}\n                              <span className=\"underline text-blue-600 font-extrabold\">\n                                {item.value[0]}\n                              </span>{\" \"}\n                              and{\" \"}\n                              <span className=\"underline text-blue-600 font-extrabold\">\n                                {item.value[1]}\n                              </span>\n                            </>\n                          ) : (\n                            <span className=\"text-blue-600\">\n                              {item.value[0].toString()}\n                            </span>\n                          )}\n                        </div>\n                      </div>\n                    ))}\n                </div>\n              </div>\n            )}\n          </div>\n        );\n\n      case questionTypeElementsType.Matching:\n        const userAnswerMatch: MatchingQuestionAnswerInterface[] = toMatching(\n          answer.answer\n        );\n        return (\n          <div className=\"w-full\">\n            {userAnswerMatch.map((item, i) => (\n              <div\n                key={i + 1}\n                onClick={props.onClick}\n                className=\"bg-gray-100 rounded cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 font-bold border border-blue-300\"\n              >\n                <div className=\"text-xl text-blue-600 font-bold p-3 pr-1 md:pr-3\">\n                  <div className=\"h-8 w-8 p-3 bg-blue-100 rounded-full flex items-center justify-center\">\n                    {i + 1}\n                  </div>\n                </div>\n                <div className=\"flex flex-col lg:flex-row items-center gap-3 w-full h-full truncate\">\n                  <div\n                    className=\"w-full mt-3 lg:mb-0\"\n                    dangerouslySetInnerHTML={{ __html: item.value }}\n                  ></div>\n                  <div className=\"flex flex-row items-center gap-3 w-full mb-3 lg:mb-0\">\n                    <div className=\"text-3xl text-gray-500 group-hover:text-blue-600\">\n                      <BsArrowRightSquareFill />\n                    </div>\n                    <div\n                      className=\"w-full mr-2\"\n                      dangerouslySetInnerHTML={{ __html: item.status }}\n                    ></div>\n                  </div>\n                </div>\n              </div>\n            ))}\n            {/* Correct answers */}\n            {props.showCorrectAnswer === true && (\n              <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n                <div className=\"font-extrabold text-lg\">Correct answer</div>\n                <div>\n                  {UserAnswersSel.answer.map((item, i) => (\n                    <div\n                      key={i + 1}\n                      onClick={props.onClick}\n                      className=\"bg-blue-50 rounded cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 font-bold border border-blue-300\"\n                    >\n                      <div className=\"text-xl text-blue-600 font-bold p-3 pr-1 md:pr-3\">\n                        <div className=\"h-8 w-8 p-3 bg-blue-100 rounded-full flex items-center justify-center\">\n                          {i + 1}\n                        </div>\n                      </div>\n                      <div className=\"flex flex-col lg:flex-row items-center gap-3 w-full h-full truncate\">\n                        <div\n                          className=\"w-full mt-3 lg:mb-0\"\n                          dangerouslySetInnerHTML={{ __html: item.value }}\n                        ></div>\n                        <div className=\"flex flex-row items-center gap-3 w-full mb-3 lg:mb-0\">\n                          <div className=\"text-3xl text-gray-500 group-hover:text-blue-600\">\n                            <BsArrowRightSquareFill />\n                          </div>\n                          <div\n                            className=\"w-full mr-2\"\n                            dangerouslySetInnerHTML={{ __html: item.status }}\n                          ></div>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n        );\n      case questionTypeElementsType.TrueFalse:\n        const userAnswerTureFalse: TrueFalseQuestionAnswerInterface[] =\n          toTrueFalse(answer.answer);\n        return (\n          <div className=\"w-full\">\n            {userAnswerTureFalse\n              .filter((itm) => itm.status === true)\n              .map((item, i) => (\n                <div\n                  key={i + 1}\n                  onClick={props.onClick}\n                  className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                >\n                  <div className=\"text-xl\">\n                    <BsArrowRightCircleFill />\n                  </div>\n                  <div dangerouslySetInnerHTML={{ __html: item.value }}></div>\n                </div>\n              ))}\n            {/* Correct answers */}\n            {props.showCorrectAnswer === true && (\n              <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n                <div className=\"font-extrabold text-lg\">Correct answer</div>\n                <div>\n                  {UserAnswersSel.answer\n                    .filter((itm) => itm.status === true)\n                    .map((item, i) => (\n                      <div\n                        key={i + 1}\n                        onClick={props.onClick}\n                        className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-blue-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                      >\n                        <div className=\"text-xl\">\n                          <BsArrowRightCircleFill />\n                        </div>\n                        <div\n                          dangerouslySetInnerHTML={{ __html: item.value }}\n                        ></div>\n                      </div>\n                    ))}\n                </div>\n              </div>\n            )}\n          </div>\n        );\n      case questionTypeElementsType.Numeric:\n        const userAnswerNumerical: NumericalQuestionAnswerInterface[] =\n          toNumerical(answer.answer);\n        return (\n          <div className=\"w-full\">\n            {userAnswerNumerical.map((item, i) => (\n              <div\n                key={i + 1}\n                onClick={props.onClick}\n                className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n              >\n                <div className=\"text-xl\">\n                  <BsArrowRightCircleFill />\n                </div>\n                <div className=\"text-gray-600 text-base font-normal\">\n                  {item.value.length > 1 ? (\n                    <>\n                      Between{\" \"}\n                      <span className=\"underline text-gray-600 font-extrabold\">\n                        {item.value[0]}\n                      </span>{\" \"}\n                      and{\" \"}\n                      <span className=\"underline text-gray-600 font-extrabold\">\n                        {item.value[1]}\n                      </span>\n                    </>\n                  ) : (\n                    item.value.length > 0 && (\n                      <span className=\"text-gray-700\">\n                        {item.value[0].toString()}\n                      </span>\n                    )\n                  )}\n                </div>\n              </div>\n            ))}\n            {/* Correct answers */}\n            {props.showCorrectAnswer === true && (\n              <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n                <div className=\"font-extrabold text-lg\">Correct answer</div>\n                <div>\n                  {UserAnswersSel.answer.map((item, i) => (\n                    <div\n                      key={i + 1}\n                      onClick={props.onClick}\n                      className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-blue-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                    >\n                      <div className=\"text-xl\">\n                        <BsArrowRightCircleFill />\n                      </div>\n                      <div className=\"text-gray-600 text-base font-normal\">\n                        {item.value.length > 1 ? (\n                          <>\n                            Between{\" \"}\n                            <span className=\"underline text-blue-600 font-extrabold\">\n                              {item.value[0] - item.value[1]}\n                            </span>{\" \"}\n                            and{\" \"}\n                            <span className=\"underline text-blue-600 font-extrabold\">\n                              {item.value[0] + item.value[1]}\n                            </span>\n                          </>\n                        ) : (\n                          item.value.length > 0 && (\n                            <span className=\"text-blue-700\">\n                              {item.value[0].toString()}\n                            </span>\n                          )\n                        )}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n        );\n      case questionTypeElementsType.SimpleCalculate:\n        const userAnswerSimpleCalculate: SimpleCalculatedQuestionAnswerInterface[] =\n          toSimpleCalculated(answer.answer);\n        return (\n          <div className=\"w-full\">\n            {userAnswerSimpleCalculate.map((item, i) => (\n              <div\n                key={i + 1}\n                onClick={props.onClick}\n                className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n              >\n                <div className=\"text-xl\">\n                  <BsArrowRightCircleFill />\n                </div>\n                <div className=\"text-gray-600 text-base font-normal\">\n                  {item.value.length > 1 ? (\n                    <>\n                      Between{\" \"}\n                      <span className=\"underline text-gray-600 font-extrabold\">\n                        {item.value[0]}\n                      </span>{\" \"}\n                      and{\" \"}\n                      <span className=\"underline text-gray-600 font-extrabold\">\n                        {item.value[1]}\n                      </span>\n                    </>\n                  ) : (\n                    item.value.length > 0 && (\n                      <span className=\"text-gray-700\">\n                        {item.value[0].toString()}\n                      </span>\n                    )\n                  )}\n                </div>\n              </div>\n            ))}\n            {/* Correct answers */}\n            {props.showCorrectAnswer === true && (\n              <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n                <div className=\"font-extrabold text-lg\">Correct answer</div>\n                <div>\n                  {UserAnswersSel.answer.map((item, i) => (\n                    <div\n                      key={i + 1}\n                      onClick={props.onClick}\n                      className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-blue-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                    >\n                      <div className=\"text-xl\">\n                        <BsArrowRightCircleFill />\n                      </div>\n                      <div className=\"text-gray-600 text-base font-normal\">\n                        {item.value.length > 1 ? (\n                          <>\n                            Between{\" \"}\n                            <span className=\"underline text-blue-600 font-extrabold\">\n                              {item.value[0]}\n                            </span>{\" \"}\n                            and{\" \"}\n                            <span className=\"underline text-blue-600 font-extrabold\">\n                              {item.value[1]}\n                            </span>\n                          </>\n                        ) : (\n                          item.value.length > 0 && (\n                            <span className=\"text-blue-700\">\n                              {item.value[0].toString()}\n                            </span>\n                          )\n                        )}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n        );\n      case questionTypeElementsType.ShortAnswer:\n        const userAnswerShortAnswer: ShortAnswerQuestionAnswerInterface[] =\n          toShortAnswer(answer.answer);\n        return (\n          <div className=\"w-full\">\n            {userAnswerShortAnswer.map((item, i) => (\n              <div\n                key={i + 1}\n                onClick={props.onClick}\n                className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n              >\n                <div className=\"text-xl\">\n                  <BsArrowRightCircleFill />\n                </div>\n                <div\n                  dangerouslySetInnerHTML={{\n                    __html: item.value,\n                  }}\n                ></div>\n              </div>\n            ))}\n            {/* Correct answers */}\n            {props.showCorrectAnswer === true && (\n              <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n                <div className=\"font-extrabold text-lg\">Correct answer</div>\n                <div>\n                  {UserAnswersSel.answer.map((item, i) => (\n                    <div\n                      key={i + 1}\n                      onClick={props.onClick}\n                      className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-blue-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                    >\n                      <div className=\"text-xl\">\n                        <BsArrowRightCircleFill />\n                      </div>\n                      <div\n                        dangerouslySetInnerHTML={{\n                          __html: item.value,\n                        }}\n                      ></div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n        );\n      default:\n        return <div className=\"text-blue-600 font-extrabold\">Answer added</div>;\n    }\n  }\n};\n\nexport default FindAnswer;\n","import React from \"react\";\nimport { DocumentClaimUser } from \"../../../actions/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { ClaimGetDocTitle } from \"./ClaimForm\";\n\ntype DocFormViewProps = {\n  thisDoc: DocumentClaimUser;\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  documentCategories: DocumentReducerInterface;\n};\n\nconst DocFormView: React.FC<DocFormViewProps> = (props) => {\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-xl\">\n              {ClaimGetDocTitle(props.documentCategories, props.thisDoc).main}\n            </span>\n            <button\n              type=\"button\"\n              className=\"btn btn-blue\"\n              onClick={() => {\n                props.setChooseClaimFile(false);\n                props.setClaimFileId(props.thisDoc.doc_id);\n                props.setViewThisFile(\"\");\n              }}\n            >\n              Choose\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span className=\"font-bold text-yellow-900 rounded px-3 py-1\">\n              {capitalizeFirstLetter(props.thisDoc.validation_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              ################\n              {/* {loadingUsers ? (\n                <div className=\"w-24 h-3 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n              ) : getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                ) ? (\n                getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                )!.user.user_info.fname +\n                \" \" +\n                getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                )!.user.user_info.lname\n              ) : (\n                \"-\"\n              )} */}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisDoc.validated_by.comment}\n            </span>\n          </div>\n          <div className=\"w-full my-1\">\n            <img\n              src={`${API.AUTH_FILES}/${props.thisDoc.files}`}\n              alt=\"doc file\"\n              className={`w-full`}\n            />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default DocFormView;\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { isClaimAllowed } from \"./ClaimForm\";\n\nconst getRejectedApplicants = (\n  applicationData: claimApplicationsInterface[]\n): claimApplicationsInterface[] => {\n  return applicationData.filter(\n    (item) => item.application_status === ApplicationStates.Rejected\n  );\n};\n\nexport const searchApplication = (\n  objList: claimApplicationsInterface[],\n  text: any\n): claimApplicationsInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (prop === \"position\") {\n        flag =\n          product.position.position_title\n            .toString()\n            .toLowerCase()\n            .indexOf(text.toLowerCase()) > -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n  // return objList.filter((product) =>\n  //   product.position.position_title.includes(text)\n  // );\n};\n\ntype FormApplicationListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  viewThisFile: string;\n  candidateApplications: claimApplicationsInterface[];\n  myClaims: CandidateClaimInterface[];\n  activeSession: SessionPlanInterface;\n};\n\nconst FormApplicationList: React.FC<FormApplicationListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            getRejectedApplicants(props.candidateApplications).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.application_id\n              )\n            ).length > 0\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Cancel\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}{\" \"}\n      {/* searchData(props.candidateApplications, searchInput) */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {getRejectedApplicants(props.candidateApplications).filter((item) =>\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            item.application_id\n          )\n        ).length > 0 ? (\n          searchApplication(\n            getRejectedApplicants(props.candidateApplications).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.application_id\n              )\n            ),\n            searchInput\n          ).map((item, index) => (\n            <div\n              className=\"group flex items-center justify-between my-1 hover:bg-gray-100\"\n              key={index + item.application_id}\n            >\n              <div\n                className=\"p-1 w-full mr-2 cursor-pointer\"\n                onClick={() => {\n                  props.setChooseClaimFile(false);\n                  props.setClaimFileId(item.application_id);\n                }}\n              >\n                <p className=\"text-base font-medium text-black\">\n                  {item.position.position_title}\n                </p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                onClick={() => {\n                  props.setViewThisFile(item.application_id);\n                }}\n              >\n                View\n              </button>\n            </div>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No Rejected document available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default FormApplicationList;\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { ClaimGetDocTitle, isClaimAllowed } from \"./ClaimForm\";\nimport { DocumentClaimUser } from \"../../../actions/claiming\";\nimport { CategorySubcategoryData } from \"../../../interfaces/candidatesInterfaces\";\nimport {\n  CandidateClaimInterface,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\n\nexport interface DocumentTitleInterface {\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  school: {\n    school_name: string;\n    _id: string;\n    status: boolean;\n    education_category_id?: {\n      education_category_title: string;\n      _id: string;\n    };\n    district_id?: {\n      district_name: string;\n      _id: string;\n    };\n  } | null;\n  school_id: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  validation_status: string;\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: string;\n    date: string;\n  };\n  doc_id: string;\n  doc_title: string;\n  category_subcategory_data: CategorySubcategoryData | null;\n}\n\nexport const DocumentTitleData = (\n  documentData: DocumentClaimUser[],\n  documentCategories: DocumentReducerInterface\n): DocumentTitleInterface[] | [] => {\n  let documentTemp: DocumentTitleInterface[] = [];\n  for (let i in documentData) {\n    documentTemp.push({\n      category_id: documentData[i].category_id,\n      company: documentData[i].company,\n      description: documentData[i].description,\n      email: documentData[i].email,\n      end_year: documentData[i].end_year,\n      files: documentData[i].files,\n      names: documentData[i].names,\n      phone_number: documentData[i].phone_number,\n      school: documentData[i].school,\n      school_id: documentData[i].school_id,\n      start_year: documentData[i].start_year,\n      sub_category_id: documentData[i].sub_category_id,\n      title: documentData[i].title,\n      year: documentData[i].year,\n      validation_status: documentData[i].validation_status,\n      validated_by: documentData[i].validated_by,\n      doc_id: documentData[i].doc_id,\n      doc_title: ClaimGetDocTitle(documentCategories, documentData[i]).main,\n      category_subcategory_data: documentData[i].category_subcategory_data,\n    });\n  }\n  return documentTemp;\n};\n\nconst getRejectedDocuments = (\n  documentData: DocumentClaimUser[]\n): DocumentClaimUser[] => {\n  console.log({\n    rejected: documentData.filter(\n      (item) => item.validation_status === \"rejected\"\n    ),\n  });\n  return documentData.filter((item) => item.validation_status === \"rejected\");\n};\n\nexport const searchDocuments = (\n  objList: DocumentTitleInterface[],\n  text: any\n): DocumentTitleInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter(\n    (product) =>\n      product.doc_title.toString().toLowerCase().indexOf(text.toLowerCase()) >\n      -1\n  );\n};\n\ntype FormDocumentListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  viewThisFile: string;\n  candidateDocuments: DocumentClaimUser[];\n  documentCategories: DocumentReducerInterface;\n  myClaims: CandidateClaimInterface[];\n  activeSession: SessionPlanInterface;\n};\n\nconst FormDocumentList: React.FC<FormDocumentListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            DocumentTitleData(\n              getRejectedDocuments(props.candidateDocuments),\n              props.documentCategories\n            ).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.doc_id\n              )\n            ).length > 0\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Cancel\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {props.candidateDocuments.filter((item) =>\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            item.doc_id\n          )\n        ).length > 0 ? (\n          searchDocuments(\n            DocumentTitleData(\n              getRejectedDocuments(props.candidateDocuments),\n              props.documentCategories\n            ).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.doc_id\n              )\n            ),\n            searchInput\n          ).map((doc, index) => (\n            <section key={index + doc.doc_id}>\n              <div className=\"group flex items-center justify-between my-1 hover:bg-gray-100\">\n                <div\n                  className=\"p-1 w-full mr-2 cursor-pointer\"\n                  onClick={() => {\n                    props.setChooseClaimFile(false);\n                    props.setClaimFileId(doc.doc_id);\n                  }}\n                >\n                  <p className=\"text-base font-medium text-black\">\n                    {ClaimGetDocTitle(props.documentCategories, doc).main}\n                  </p>\n                </div>\n                <button\n                  type=\"button\"\n                  className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                  onClick={() => {\n                    props.viewThisFile === doc.doc_id\n                      ? props.setViewThisFile(\"\")\n                      : props.setViewThisFile(doc.doc_id);\n                  }}\n                >\n                  {props.viewThisFile === doc.doc_id ? \"Close\" : \"View\"}\n                </button>\n              </div>\n            </section>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No Rejected document available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default FormDocumentList;\n","import React, { Component } from \"react\";\nimport { MdAdd, MdArrowBack, MdDelete, MdInfoOutline } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Auth, loadCourses, PushPopupAlert } from \"../../../actions\";\nimport {\n  DocumentClaimUser,\n  getMyAnswers,\n  getMyClaims,\n  getMyPlacement,\n} from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport { SideNavigation } from \"../../../components/Navigation/SideNavigation\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimStatus,\n  PlansTypeKeys,\n  SessionPlanInterface,\n  course,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { filterClaimsByClaimType } from \"../Admin/AdminFilterByType\";\nimport ClaimApplView from \"../ClaimApplView\";\nimport ClaimDocView, { isClaimEvaluated } from \"../ClaimDocView\";\nimport ClaimExamView from \"../ClaimExamView\";\nimport ClaimHeaderTitle from \"../ClaimHeaderTitle\";\nimport ClaimPlacementView from \"../ClaimPlacementView\";\nimport ClaimForm, { ClaimGetDocTitle } from \"./ClaimForm\";\nimport FilterByType from \"./FilterByType\";\nimport { getCourseById, getCourseIdBySheetId } from \"./FormExamList\";\n\nexport enum ClaimTypesEnum {\n  application = \"application\",\n  document = \"document\",\n  exam = \"exam\",\n  marks_publication = \"marks publication\",\n  placement = \"placement\",\n}\n\nexport const getDocumentById = (\n  candidateDocuments: DocumentClaimUser[],\n  document_id: string\n): DocumentClaimUser | null => {\n  let result: DocumentClaimUser | undefined = candidateDocuments.find(\n    (item) => item.doc_id === document_id\n  );\n  return result ? result : null;\n};\n\nexport const whichClaimType = (\n  thisClaim: CandidateClaimInterface\n): ClaimTypesEnum | undefined => {\n  if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n    return ClaimTypesEnum.application;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n    return ClaimTypesEnum.document;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.EXAMINATION) {\n    return ClaimTypesEnum.exam;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.MARKS_PUBLICATION) {\n    return ClaimTypesEnum.marks_publication;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.PLACEMENT_TRANSFER) {\n    return ClaimTypesEnum.placement;\n  }\n};\n\nexport const whichClaimStatus = (\n  thisClaim: CandidateClaimInterface\n): {\n  classes: string;\n  status: string;\n} => {\n  let classes: string, status: string;\n  switch (thisClaim.last_claim_status) {\n    case ClaimStatus.COMPLETED:\n      classes = \"text-blue-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.COMPLETED.toLocaleLowerCase());\n      break;\n    case ClaimStatus.EVALUATED:\n      classes = \"text-green-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.EVALUATED.toLocaleLowerCase());\n      break;\n\n    case ClaimStatus.DELETED:\n      classes = \"text-red-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.DELETED.toLocaleLowerCase());\n      break;\n\n    default:\n      classes = \"text-yellow-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.PENDING.toLocaleLowerCase());\n      break;\n  }\n\n  return { classes, status };\n};\n\nexport const getClaimById = (\n  claimList: CandidateClaimInterface[],\n  claim_id: string\n): CandidateClaimInterface | null => {\n  let result: CandidateClaimInterface | undefined = claimList.find(\n    (item) => item._id === claim_id\n  );\n  return result ? result : null;\n};\n\nexport const getApplicationById = (\n  candidateApplications: claimApplicationsInterface[],\n  application_id: string\n): claimApplicationsInterface | null => {\n  let result: claimApplicationsInterface | undefined =\n    candidateApplications.find(\n      (item) => item.application_id === application_id\n    );\n  return result ? result : null;\n};\n\nexport const displayDocClaimTitle = (\n  documentCategories: DocumentReducerInterface,\n  candidateDocuments: DocumentClaimUser[],\n  thisClaim: CandidateClaimInterface\n): string => {\n  let result: string = \"\";\n\n  // CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n  if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n    let thisDoc = getDocumentById(candidateDocuments, thisClaim.claiming_on_id);\n    result = thisDoc\n      ? ClaimGetDocTitle(documentCategories, thisDoc).main\n      : \"Document not found\";\n  }\n  // END CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n  return result;\n};\n\nexport const displayClaimTitle = (\n  claiming: ClaimingReducerType,\n  documentReducer: DocumentReducerInterface,\n  allCourse: course[] | null,\n  thisClaim: CandidateClaimInterface\n): string => {\n  let result: string = thisClaim.claiming_on_id;\n\n  if (\n    thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION &&\n    claiming.candidateDocuments\n  ) {\n    result = displayDocClaimTitle(\n      documentReducer,\n      claiming.candidateDocuments,\n      thisClaim\n    );\n  }\n  if (\n    thisClaim.type_key === PlansTypeKeys.APPLICATION &&\n    claiming.candidateApplications\n  ) {\n    let thisApplication = getApplicationById(\n      claiming.candidateApplications,\n      thisClaim.claiming_on_id\n    );\n    if (thisApplication) {\n      result = thisApplication.position.position_title;\n    } else {\n      result = \"Application not found\";\n    }\n  }\n\n  if (\n    thisClaim.type_key === PlansTypeKeys.EXAMINATION &&\n    allCourse &&\n    claiming.myAnswer\n  ) {\n    let thisAnswer = getCourseIdBySheetId(\n      claiming.myAnswer,\n      thisClaim.claiming_on_id\n    );\n    if (thisAnswer && getCourseById(allCourse, thisAnswer.course)) {\n      result = getCourseById(allCourse, thisAnswer.course)!.course_name;\n    } else {\n      result = \"Exam not found\";\n    }\n  }\n\n  if (thisClaim.type_key === PlansTypeKeys.PLACEMENT_TRANSFER) {\n    result = claiming.myPlacement\n      ? \"Placed on \" + claiming.myPlacement.placed.school.school_name\n      : \"Placement not found\";\n  }\n\n  return result;\n};\n\n// -------------------------------------------------------------------------\n\ntype AppProps = {\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  application_sessions: SessionPlanInterface[] | null;\n  courses: course[] | null;\n  documentReducer: DocumentReducerInterface;\n  getMyPlacement: Function;\n  getMyClaims: Function;\n  loadCourses: Function;\n  getMyAnswers: Function;\n  GetAllSessionPlans: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype AppState = {\n  loading: boolean;\n  loadingSession: boolean;\n  thisPeriod: SessionPlanInterface | null;\n  periodChanged: boolean;\n  viewClaim: boolean;\n  claimId: string | null;\n  claimForm: boolean;\n\n  // FOR FORM ================\n  viewImage: boolean;\n  loadingRequest: boolean;\n  reClaiming: boolean;\n  reClaimingMsg: string;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n};\n\nclass Index extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingSession: true,\n      thisPeriod: null,\n      periodChanged: false,\n      viewClaim: false,\n      claimId: null,\n      claimForm: false,\n\n      // FOR FORM ================\n      viewImage: false,\n      loadingRequest: false,\n      reClaiming: false,\n      reClaimingMsg: \"\",\n      formError: null,\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingSession = (value: boolean) => {\n    this.setState({ loadingSession: value });\n  };\n\n  setViewClaim = (value: boolean) => {\n    this.setState({ viewClaim: value });\n  };\n\n  setPeriodChanged = (value: boolean) => {\n    this.setState({ periodChanged: value });\n  };\n\n  setClaimForm = (value: boolean) => {\n    this.setState({ claimForm: value });\n  };\n\n  setViewImage = (value: boolean) => {\n    this.setState({ viewImage: value });\n  };\n\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n\n  setReClaiming = (value: boolean) => {\n    this.setState({ reClaiming: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n\n  setReClaimingMsg = (value: string) => {\n    this.setState({ reClaimingMsg: value });\n  };\n\n  setClaimId = (value: string | null) => {\n    this.setState({ claimId: value });\n  };\n\n  setThisPeriod = (value: SessionPlanInterface | null) => {\n    this.setState({ thisPeriod: value });\n  };\n\n  loadClaims = (thisPeriod: SessionPlanInterface) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (this.props.claiming.myClaims === null && thisPeriod !== null) {\n      this.props.getMyClaims(\n        this.props.auth.user.user_id,\n        thisPeriod.session_plan_id,\n        (status: boolean, msg: string) => {\n          !status && this.setLoading(status);\n          if (status === false && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    } else if (thisPeriod && this.state.loading) {\n      this.setLoading(false);\n    }\n  };\n\n  setSession = (sessions: SessionPlanInterface[]) => {\n    // SETTING ACTIVE SESSION ==========================\n    if (this.state.thisPeriod === null && sessions.length > 0) {\n      let thisSession = sessions.find((item) => item.is_active === true);\n      this.setThisPeriod(thisSession ? thisSession : sessions[0]);\n      this.loadClaims(thisSession ? thisSession : sessions[0]);\n      this.loadExamAnswers(\n        thisSession ? thisSession : sessions[0],\n        this.props.auth.user.user_id\n      );\n    }\n  };\n\n  loadExamAnswers = (\n    activeSessionPlan: SessionPlanInterface,\n    user_id: string\n  ) => {\n    this.props.getMyAnswers(\n      activeSessionPlan.session_plan_id,\n      user_id,\n      (status: boolean, msg: string, data: SessionPlanInterface | \"none\") => {\n        this.setLoading(status);\n        if (!status && msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n        if (data) {\n          console.log(\"====================================\");\n          console.log({ loadExamAnswers: data });\n          console.log(\"====================================\");\n        }\n      }\n    );\n  };\n\n  componentDidMount = () => {\n    if (\n      this.props.courses === null ||\n      (this.props.courses.length === 0 && this.state.loading)\n    ) {\n      this.props.loadCourses(this.setLoading);\n      this.setLoading(false);\n    } else {\n      this.setLoading(false);\n    }\n\n    // LOADING APPLICATION SESSION ====================================\n    if (this.props.application_sessions === null) {\n      this.props.GetAllSessionPlans(\n        (status: boolean, msg: string, data?: SessionPlanInterface[]) => {\n          if (!status) {\n            this.setLoadingSession(false);\n            if (msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data && data.length > 0) {\n              // SETTING ACTIVE SESSION ==========================\n              if (this.state.thisPeriod === null) {\n                this.setSession(data);\n              }\n            }\n          }\n        }\n      );\n    } else {\n      this.setSession(this.props.application_sessions);\n      this.setLoadingSession(false);\n    }\n\n    if (!this.props.documentReducer.documentCategory) {\n      this.props.getDocumentCategory();\n      this.setLoading(false);\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n    if (!this.props.documentReducer.documentSubCategory && this.state.loading) {\n      this.props.getDocumentSubCategory();\n      this.setLoading(false);\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n\n    if (!this.props.documentReducer.documentFields && this.state.loading) {\n      this.props.getDocumentFields();\n      this.setLoading(false);\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n\n    if (this.props.claiming.myPlacement === null) {\n      this.props.getMyPlacement(\n        this.props.auth.user.user_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          }\n        }\n      );\n    }\n  };\n\n  isDeleteAllowed = (thisCLaim: CandidateClaimInterface): boolean => {\n    if (!isClaimEvaluated(thisCLaim, 1)) {\n      return true;\n    }\n    return false;\n  };\n\n  onPeriodChange = (period_id: string) => {\n    this.setPeriodChanged(true);\n    this.props.getMyClaims(\n      this.props.auth.user.user_id,\n      period_id,\n      (status: boolean, msg: string) => {\n        this.setLoadingRequest(status);\n        !status && this.setPeriodChanged(false);\n        if (status === false && msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      }\n    );\n  };\n\n  render() {\n    if (this.props.application_sessions === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    if (this.props.application_sessions.length === 0) {\n      return (\n        <div className=\"bg-yellow-100 rounded flex flex-col items-center justify-center p-6 my-8 text-yellow-900 border border-yellow-900\">\n          <MdInfoOutline className=\"text-6xl md:text-9xl\" />\n          <div className=\"text-center flex flex-col\">\n            <span className=\"text-2xl md:text-4xl font-extrabold\">\n              No active session\n            </span>\n            <span className=\"text-lg\">\n              Please Wait for the system to publish the sessions or contact the\n              administrator\n            </span>\n          </div>\n        </div>\n      );\n    }\n\n    if (this.props.claiming.myClaims === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {/* SIDE NAVIGATION */}\n        {!this.state.viewClaim && (\n          <SideNavigation>\n            <button\n              className=\"btn mb-3 border-2 border-blue-500 hover:bg-blue-500 hover:text-white flex items-center flex-1 font-bold w-full focus:outline-none\"\n              onClick={() => this.setClaimForm(true)}\n              disabled={\n                this.state.viewClaim ||\n                this.state.loading ||\n                this.state.loadingRequest\n              }\n            >\n              <MdAdd className=\"inline-block mr-1 text-xl font-bold\" />\n              <span>Claiming</span>\n            </button>\n\n            {/* FILTER SECTION */}\n            <FilterByType loadingClaims={this.state.loadingRequest} />\n            {/* END FILTER SECTION */}\n          </SideNavigation>\n        )}\n        {/* END SIDE NAVIGATION */}\n\n        {/* ------------------------------------------------------------------- */}\n\n        {/* CLAIM TITLE ===================================== */}\n        {!this.state.viewClaim && (\n          <ClaimHeaderTitle\n            headerTitle={`${\n              this.props.claiming.selectedClaimType === \"all\"\n                ? \"All\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION\n                ? \"Documents\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.APPLICATION\n                ? \"Applications\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.EXAMINATION\n                ? \"Exam\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.MARKS_PUBLICATION\n                ? \"Marks publication\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.PLACEMENT_TRANSFER\n                ? \"Placements\"\n                : \"\"\n            } Claiming`}\n            loading={this.state.loading}\n            loadingSession={this.state.loadingSession}\n            thisPeriod={this.state.thisPeriod}\n            setThisPeriod={this.setThisPeriod}\n            setLoadingSession={this.setLoadingSession}\n            application_sessions={this.props.application_sessions}\n            onPeriodChange={this.onPeriodChange}\n            periodChanged={this.state.periodChanged}\n          />\n        )}\n        {/* END CLAIM TITLE ===================================== */}\n\n        {/* ----------------------------------------------------------------------- */}\n\n        {!this.state.viewClaim && (\n          <section className=\"bg-white w-full p-1\">\n            <table className=\"w-full shadow\" id=\"report_content\">\n              <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                <tr>\n                  <td className=\"px-2 py-2\">#</td>\n                  <td className=\"px-2 py-2\">Claim title</td>\n                  {this.props.claiming.selectedClaimType === \"all\" && (\n                    <td className=\"px-2 py-2\">Claim type</td>\n                  )}\n                  <td className=\"px-2 py-2\">Claim status</td>\n                  <td className=\"px-2 py-2\"></td>\n                </tr>\n              </thead>\n              <tbody>\n                {filterClaimsByClaimType(\n                  this.props.claiming.myClaims,\n                  this.props.claiming.selectedClaimType\n                ).length <= 0 ? (\n                  <tr\n                    className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                    key=\"key3201\"\n                  >\n                    <td className=\"px-3 py-1\" colSpan={4}>\n                      <NoResult\n                        theme={NoResultThemes.Light}\n                        value={\"No claim found!\"}\n                      />\n                    </td>\n                  </tr>\n                ) : (\n                  filterClaimsByClaimType(\n                    this.props.claiming.myClaims,\n                    this.props.claiming.selectedClaimType\n                  ).map((claim, index) => (\n                    <tr\n                      className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                      key={index + claim._id}\n                      onClick={() => {\n                        this.setViewClaim(true);\n                        this.setClaimId(claim._id);\n                      }}\n                    >\n                      <td className=\"px-3 py-1 whitespace-nowrap\">\n                        {index + 1}\n                      </td>\n                      <td className=\"px-3 py-1 whitespace-nowrap\">\n                        {displayClaimTitle(\n                          this.props.claiming,\n                          this.props.documentReducer,\n                          this.props.courses,\n                          claim\n                        )}\n                      </td>\n                      {this.props.claiming.selectedClaimType === \"all\" && (\n                        <td className=\"px-3 py-1 whitespace-nowrap\">\n                          {whichClaimType(claim)\n                            ? capitalizeFirstLetter(whichClaimType(claim)!)\n                            : \"-\"}\n                        </td>\n                      )}\n                      <td className=\"px-3 py-1 whitespace-nowrap\">\n                        <span\n                          className={`inline-block rounded-full duration-300 text-xs font-semibold px-3 py-1 ${\n                            whichClaimStatus(claim).classes\n                          }`}\n                        >\n                          {whichClaimStatus(claim).status}\n                        </span>\n                      </td>\n                      <td className=\"px-3 py-1 text-center whitespace-nowrap\">\n                        <button className=\"btn bg-blue-500 text-white group-hover:bg-blue-600\">\n                          View\n                        </button>\n                      </td>\n                    </tr>\n                  ))\n                )}\n              </tbody>\n            </table>\n          </section>\n        )}\n\n        {/* ----------------------------------------------------------------------- */}\n\n        {this.state.viewClaim &&\n          this.props.claiming.myClaims &&\n          this.state.claimId &&\n          getClaimById(this.props.claiming.myClaims, this.state.claimId) && (\n            <section className=\"bg-white w-full p-1 my-4\">\n              {/* VIEW CLAIM HEADER =============================== */}\n              <section className=\"flex items-center gap-2 py-2 border-b\">\n                <button\n                  className={`ml-3 bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n                    this.state.loadingRequest\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } animate__animated animate__fadeIn`}\n                  disabled={this.state.loadingRequest}\n                  onClick={() => {\n                    this.setViewClaim(false);\n                    this.setViewImage(false);\n                    this.setLoadingRequest(false);\n                    this.setFormError(null);\n                    this.setReClaiming(false);\n                    this.setReClaimingMsg(\"\");\n                  }}\n                >\n                  <MdArrowBack className=\"w-7 h-7\" />\n                </button>\n                {this.isDeleteAllowed(\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!\n                ) && (\n                  <button\n                    className={`bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n                      this.state.loadingRequest\n                        ? \"cursor-not-allowed\"\n                        : \"cursor-pointer\"\n                    } animate__animated animate__fadeIn hidden`}\n                    disabled={this.state.loadingRequest}\n                    // onClick={() => {\n                    //   this.handleDelete();\n                    // }}\n                  >\n                    <MdDelete className=\"w-7 h-7\" />\n                  </button>\n                )}\n              </section>\n              {/* END VIEW CLAIM HEADER =============================== */}\n\n              <section className=\"my-2\">\n                {/* VIEWING CLAIM OF A DOCUMENT ===================== */}\n                {getClaimById(this.props.claiming.myClaims, this.state.claimId)!\n                  .type_key === PlansTypeKeys.DOCUMENT_VALIDATION &&\n                this.props.claiming.candidateDocuments &&\n                getDocumentById(\n                  this.props.claiming.candidateDocuments,\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.claiming_on_id\n                ) ? (\n                  <ClaimDocView\n                    thisDoc={\n                      getDocumentById(\n                        this.props.claiming.candidateDocuments,\n                        getClaimById(\n                          this.props.claiming.myClaims,\n                          this.state.claimId\n                        )!.claiming_on_id\n                      )!\n                    }\n                    documentCategories={this.props.documentReducer}\n                    thisClaim={\n                      getClaimById(\n                        this.props.claiming.myClaims,\n                        this.state.claimId\n                      )!\n                    }\n                    viewImage={this.state.viewImage}\n                    setViewImage={this.setViewImage}\n                    loadingRequest={this.state.loadingRequest}\n                    setLoadingRequest={this.setLoadingRequest}\n                    reClaiming={this.state.reClaiming}\n                    setReClaiming={this.setReClaiming}\n                    reClaimingMsg={this.state.reClaimingMsg}\n                    setReClaimingMsg={this.setReClaimingMsg}\n                    formError={this.state.formError}\n                    setFormError={this.setFormError}\n                  />\n                ) : (\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.type_key === PlansTypeKeys.DOCUMENT_VALIDATION && (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"Document not found\"}\n                    />\n                  )\n                )}\n                {/* END VIEWING CLAIM OF A DOCUMENT ===================== */}\n\n                {/* ############################################################### */}\n\n                {/* VIEWING CLAIM OF AN APPLICATION ===================== */}\n                {getClaimById(this.props.claiming.myClaims, this.state.claimId)!\n                  .type_key === PlansTypeKeys.APPLICATION &&\n                this.props.claiming.candidateApplications &&\n                getApplicationById(\n                  this.props.claiming.candidateApplications,\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.claiming_on_id\n                ) ? (\n                  <ClaimApplView\n                    thisApplication={\n                      getApplicationById(\n                        this.props.claiming.candidateApplications,\n                        getClaimById(\n                          this.props.claiming.myClaims,\n                          this.state.claimId\n                        )!.claiming_on_id\n                      )!\n                    }\n                    documentCategories={this.props.documentReducer}\n                    thisClaim={\n                      getClaimById(\n                        this.props.claiming.myClaims,\n                        this.state.claimId\n                      )!\n                    }\n                    viewPosition={this.state.viewImage}\n                    setViewPosition={this.setViewImage}\n                    loadingRequest={this.state.loadingRequest}\n                    setLoadingRequest={this.setLoadingRequest}\n                    reClaiming={this.state.reClaiming}\n                    setReClaiming={this.setReClaiming}\n                    reClaimingMsg={this.state.reClaimingMsg}\n                    setReClaimingMsg={this.setReClaimingMsg}\n                    formError={this.state.formError}\n                    setFormError={this.setFormError}\n                  />\n                ) : (\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.type_key === PlansTypeKeys.APPLICATION && (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"Application not found\"}\n                    />\n                  )\n                )}\n                {/* END VIEWING CLAIM OF AN APPLICATION ===================== */}\n\n                {/* VIEWING CLAIM OF AN EXAM ===================== */}\n                {getClaimById(this.props.claiming.myClaims, this.state.claimId)!\n                  .type_key === PlansTypeKeys.EXAMINATION &&\n                this.props.claiming.myAnswer &&\n                this.props.courses &&\n                getCourseIdBySheetId(\n                  this.props.claiming.myAnswer,\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.claiming_on_id\n                ) &&\n                getCourseById(\n                  this.props.courses,\n                  getCourseIdBySheetId(\n                    this.props.claiming.myAnswer,\n                    getClaimById(\n                      this.props.claiming.myClaims,\n                      this.state.claimId\n                    )!.claiming_on_id\n                  )!.course\n                ) ? (\n                  <ClaimExamView\n                    thisExam={\n                      getCourseById(\n                        this.props.courses,\n                        getCourseIdBySheetId(\n                          this.props.claiming.myAnswer,\n                          getClaimById(\n                            this.props.claiming.myClaims,\n                            this.state.claimId\n                          )!.claiming_on_id\n                        )!.course\n                      )!\n                    }\n                    thisClaim={\n                      getClaimById(\n                        this.props.claiming.myClaims,\n                        this.state.claimId\n                      )!\n                    }\n                    viewPosition={this.state.viewImage}\n                    setViewPosition={this.setViewImage}\n                    loadingRequest={this.state.loadingRequest}\n                    setLoadingRequest={this.setLoadingRequest}\n                    reClaiming={this.state.reClaiming}\n                    setReClaiming={this.setReClaiming}\n                    reClaimingMsg={this.state.reClaimingMsg}\n                    setReClaimingMsg={this.setReClaimingMsg}\n                    formError={this.state.formError}\n                    setFormError={this.setFormError}\n                    thisExamSheet={\n                      getCourseIdBySheetId(\n                        this.props.claiming.myAnswer,\n                        getClaimById(\n                          this.props.claiming.myClaims,\n                          this.state.claimId\n                        )!.claiming_on_id\n                      )!\n                    }\n                  />\n                ) : (\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.type_key === PlansTypeKeys.EXAMINATION && (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"Exam not found\"}\n                    />\n                  )\n                )}\n                {/* END VIEWING CLAIM OF AN EXAM ===================== */}\n\n                {/* ----------------------------------------------------------- */}\n                {/* VIEWING CLAIM OF A DOCUMENT ===================== */}\n                {getClaimById(this.props.claiming.myClaims, this.state.claimId)!\n                  .type_key === PlansTypeKeys.PLACEMENT_TRANSFER &&\n                this.props.claiming.myPlacement ? (\n                  <ClaimPlacementView\n                    thisClaim={\n                      getClaimById(\n                        this.props.claiming.myClaims,\n                        this.state.claimId\n                      )!\n                    }\n                    loadingRequest={this.state.loadingRequest}\n                    setLoadingRequest={this.setLoadingRequest}\n                    reClaiming={this.state.reClaiming}\n                    setReClaiming={this.setReClaiming}\n                    reClaimingMsg={this.state.reClaimingMsg}\n                    setReClaimingMsg={this.setReClaimingMsg}\n                    formError={this.state.formError}\n                    setFormError={this.setFormError}\n                    myPlacement={this.props.claiming.myPlacement}\n                  />\n                ) : (\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.type_key === PlansTypeKeys.DOCUMENT_VALIDATION && (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"Document not found\"}\n                    />\n                  )\n                )}\n                {/* END VIEWING CLAIM OF A DOCUMENT ===================== */}\n              </section>\n            </section>\n          )}\n        {/* end view claim */}\n\n        {/* ----------------------------------------------------------------------- */}\n        {/* CLAIM FORM  ################ */}\n        {this.state.claimForm && (\n          <ClaimForm\n            formState={this.state.claimForm}\n            setFormState={this.setClaimForm}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  sessionPlan,\n  claiming,\n  document,\n  course,\n}: StoreState): {\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  application_sessions: SessionPlanInterface[] | null;\n  documentReducer: DocumentReducerInterface;\n  courses: course[] | null;\n} => {\n  return {\n    auth: auth,\n    claiming,\n    application_sessions: sessionPlan.allSessionPlans,\n    documentReducer: document,\n    courses: course.courses,\n  };\n};\n\nexport const CandidateClaim = connect(mapStateToProps, {\n  getMyClaims,\n  GetAllSessionPlans,\n  loadCourses,\n  getMyPlacement,\n  getMyAnswers,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  PushPopupAlert,\n})(Index);\n","import axios from \"axios\";\nimport React from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdTurnedIn } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { createReClaim } from \"../../actions/claiming\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimDecisionStatus,\n  ClaimStatus,\n} from \"../../interfaces\";\nimport { ApplicationStates } from \"../../interfaces/application\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { DocumentReducerInterface } from \"../../reducers/document\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport {\n  DATE,\n  errorToText,\n  showDate,\n  timestampToDate,\n} from \"../../utils/functions\";\nimport ViewRequirements from \"../Positions/ViewRequirements\";\nimport { FC_ApplicationPositionDistinctCategory } from \"./Candidate/ApplicationFormView\";\nimport { isClaimEvaluated } from \"./ClaimDocView\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\ntype ClaimDocViewProps = {\n  thisApplication: claimApplicationsInterface;\n  documentCategories: DocumentReducerInterface;\n  thisClaim: CandidateClaimInterface;\n  viewPosition: boolean;\n  setViewPosition: (value: boolean) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  reClaiming: boolean;\n  setReClaiming: (value: boolean) => void;\n  reClaimingMsg: string;\n  setReClaimingMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX DATA =====================\n  createReClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst ClaimDocView: React.FC<ClaimDocViewProps> = (props) => {\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim is required\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim._id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              {props.thisApplication.position.position_title}\n            </span>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewPosition(!props.viewPosition)}\n            >\n              {props.viewPosition ? \"Hide\" : \"More\"}\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisClaim.previous.status === ApplicationStates.Rejected\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } rounded px-3 py-1`}\n            >\n              {capitalizeFirstLetter(props.thisClaim.previous.status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {props.thisClaim.previous.evaluater.name}\n            </span>\n          </div>\n          {false && (\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Session:</span>\n              <span className=\"font-bold text-gray-900 py-1\">\n                {\n                  props.thisApplication.application_session\n                    .application_session_name\n                }\n              </span>\n            </div>\n          )}\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisApplication.createdAt)}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisClaim.previous.reason}\n            </span>\n          </div>\n\n          {/* DISPLAY POSITION ==================================================== */}\n          {props.viewPosition && (\n            <div className=\"w-full my-1 animate__animated animate__fadeIn rounded\">\n              <div className=\"bg-white w-full\">\n                <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                  Position Details\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Desc:</span>\n                  <span className=\"font-semibold\">\n                    {props.thisApplication.position.description}\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>School level:</span>\n                  <span className=\"font-semibold\">\n                    {\n                      props.thisApplication.position.school_level_id\n                        .school_level_name\n                    }\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Institute:</span>\n                  <span className=\"font-semibold\">\n                    {\n                      props.thisApplication.position.education_institute_id\n                        .education_category_title\n                    }\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Courses:</span>\n                  <span className=\"flex items-center gap-2\">\n                    {props.thisApplication.position.courses.map(\n                      (item, index) => (\n                        <div\n                          key={index + item.course_id}\n                          className=\"flex items-center gap-1\"\n                        >\n                          <span className=\"font-semibold\">\n                            {item.course_name}\n                          </span>\n                          <span className=\"text-gray-600\">\n                            ({item.course_code})\n                          </span>\n                          {index !==\n                            props.thisApplication.position.courses.length - 1 &&\n                            \",\"}\n                        </div>\n                      )\n                    )}\n                  </span>\n                </div>\n\n                <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                  Position Requirements\n                </div>\n                {props.thisApplication.position.requirements.length > 0 ? (\n                  FC_ApplicationPositionDistinctCategory(\n                    props.thisApplication.position,\n                    props.documentCategories\n                  ).DistinctCategoriesTemp.map((item, index) => (\n                    <div\n                      className=\"bg-gray-100props.thisApplication.position rounded p-2\"\n                      key={index + item.category_id}\n                    >\n                      <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                        <MdTurnedIn />\n                        <span>{item.category_title}</span>\n                      </div>\n                      <div className=\"border bg-white mt-1\">\n                        <ViewRequirements\n                          requirements={FC_ApplicationPositionDistinctCategory(\n                            props.thisApplication.position,\n                            props.documentCategories\n                          ).PositionsTemp.filter(\n                            (req) => req.category_id === item.category_id\n                          )}\n                        />\n                      </div>\n                    </div>\n                  ))\n                ) : (\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"No requirements\"}\n                  ></NoResult>\n                )}\n              </div>\n            </div>\n          )}\n          {/* END DISPLAY POSITION ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt) +\n                    \" at \" +\n                    timestampToDate(claim.date_created).timeFR}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-center justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <button\n                className=\"btn btn-blue\"\n                onClick={() => props.setReClaiming(true)}\n                disabled={props.loadingRequest}\n              >\n                Reclaim\n              </button>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your reclaim...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nexport default connect(null, {\n  createReClaim,\n  PushPopupAlert,\n})(ClaimDocView);\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport {\n  loadQuestionTypes,\n  PushPopupAlert,\n  questionTypesStoreInterface,\n} from \"../../actions\";\nimport { createReClaim } from \"../../actions/claiming\";\nimport { AnswersDetails } from \"../../components/AnswersDetails/AnswersDetails\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimExamResultsDetails,\n  ClaimStatus,\n  course,\n} from \"../../interfaces\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { errorToText, showDate, timestampToDate } from \"../../utils/functions\";\nimport { claimShowAnswer } from \"./Candidate/ExaminationFormView\";\nimport { isClaimEvaluated } from \"./ClaimDocView\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\ntype ClaimDocViewProps = {\n  thisExam: course;\n  thisExamSheet: ClaimExamResultsDetails;\n  thisClaim: CandidateClaimInterface;\n  viewPosition: boolean;\n  setViewPosition: (value: boolean) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  reClaiming: boolean;\n  setReClaiming: (value: boolean) => void;\n  reClaimingMsg: string;\n  setReClaimingMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX DATA =====================\n  questionTypes: questionTypesStoreInterface;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  createReClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst ClaimDocView: React.FC<ClaimDocViewProps> = (props) => {\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (\n      props.questionTypes.questionTypes === null ||\n      (props.questionTypes.questionTypes.length === 0 && loading)\n    ) {\n      props.loadQuestionTypes(setLoading);\n    }\n  }, [loading, props]);\n\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim is required\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim._id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              Exam of {props.thisExam.course_name}{\" \"}\n            </span>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewPosition(!props.viewPosition)}\n            >\n              {props.viewPosition ? \"Hide\" : \"More\"}\n            </button>\n          </div>\n\n          {/* DISPLAY EXAM SHEET ==================================================== */}\n          {props.viewPosition && (\n            <div className=\"bg-white w-full rounded p-2 mb-2\">\n              <AnswersDetails\n                showAnswers={false}\n                exam_id={claimShowAnswer(props.thisExamSheet)}\n              />\n            </div>\n          )}\n          {/* END DISPLAY POSITION ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt) +\n                    \" at \" +\n                    timestampToDate(claim.date_created).timeFR}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {loading ? (\n                          <div className=\"w-24 h-3 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n                        ) : (\n                          props.thisClaim.userDetails.user_info.fname +\n                          \" \" +\n                          props.thisClaim.userDetails.user_info.lname\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-center justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <button\n                className=\"btn btn-blue\"\n                onClick={() => props.setReClaiming(true)}\n                disabled={props.loadingRequest}\n              >\n                Reclaim\n              </button>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your reclaim...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  questionTypes,\n}: StoreState): {\n  questionTypes: questionTypesStoreInterface;\n} => {\n  return { questionTypes: questionTypes };\n};\n\nexport default connect(mapStateToProps, {\n  loadQuestionTypes,\n  createReClaim,\n  PushPopupAlert,\n})(ClaimDocView);\n","import axios from \"axios\";\nimport React from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { createReClaim } from \"../../actions/claiming\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimStatus,\n} from \"../../interfaces\";\nimport { candidatePlacementInterface } from \"../../interfaces/placement\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { errorToText, showDate, timestampToDate } from \"../../utils/functions\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nexport const isClaimEvaluated = (\n  thisClaim: CandidateClaimInterface,\n  level: number\n): boolean => {\n  const _thisClaim = thisClaim.claims.find(\n    (item) =>\n      item.level === level && item.claim_status === ClaimStatus.EVALUATED\n  );\n  if (_thisClaim) {\n    return true;\n  }\n  return false;\n};\n\ntype ClaimPlacementViewProps = {\n  myPlacement: candidatePlacementInterface;\n  thisClaim: CandidateClaimInterface;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  reClaiming: boolean;\n  setReClaiming: (value: boolean) => void;\n  reClaimingMsg: string;\n  setReClaimingMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX DATA =====================\n  createReClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst ClaimPlacementView: React.FC<ClaimPlacementViewProps> = (props) => {\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim sent successful\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim._id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>School:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.myPlacement.placed.school.school_name}\n              </span>\n            </div>\n          </div>\n          {/* <div className=\"flex items-center\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Position:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.myPlacement.placed.school.school_name}\n              </span>\n            </div>\n          </div> */}\n          <div className=\"flex items-center\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>District:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.myPlacement.placed.school.district_id.district_name}\n              </span>\n            </div>\n          </div>\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt) +\n                    \" at \" +\n                    timestampToDate(claim.date_created).timeFR}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-center justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <button\n                className=\"btn btn-blue\"\n                onClick={() => props.setReClaiming(true)}\n                disabled={props.loadingRequest}\n              >\n                Reclaim\n              </button>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your reclaim...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nexport default connect(null, {\n  createReClaim,\n  PushPopupAlert,\n})(ClaimPlacementView);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport {\n  GetClaimingTypes,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  setSelectedClaimType,\n} from \"../../../actions/claiming\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport { MainItem } from \"../../../components/Navigation/SideNavigation\";\nimport { ClaimStatus, PlansTypeKeys } from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\n\ntype FilterByTypeProps = {\n  // thisClaimType: ClaimTypesInterface | \"ALL\";\n  // setThisClaimType: React.Dispatch<\n  //   React.SetStateAction<ClaimTypesInterface | \"ALL\">\n  // >;\n  loadingClaims: boolean;\n  FC_CountByType?: Function;\n\n  // REDUX PROPS =======================================\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  GetClaimingTypes: Function;\n  setSelectedClaimType: Function;\n  getMyRejectedApplications: Function;\n  getMyRejectedDocuments: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\nconst FilterByType: React.FC<FilterByTypeProps> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingRejectedApplications, setLoadingRejectedApplications] =\n    useState<boolean>(true);\n  const [loadingRejectedDocuments, setLoadingRejectedDocuments] =\n    useState<boolean>(true);\n  const [loadingClaimTypes, setLoadingClaimTypes] = useState<boolean>(true);\n\n  useEffect(() => {\n    if (props.claiming.candidateApplications === null) {\n      props.getMyRejectedApplications(\n        props.auth.user.user_id,\n        (status: boolean, msg: string) => {\n          if (status === false) {\n            if (msg.length > 0) {\n              props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            setLoadingRejectedApplications(false);\n          }\n        }\n      );\n    } else if (loadingRejectedApplications) {\n      setLoadingRejectedApplications(false);\n    }\n\n    if (props.claiming.candidateDocuments === null) {\n      console.log(\"filterrrrrrrrrrrrrrrrrrrr loadingRejectedDocuments\");\n      props.getMyRejectedDocuments((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          setLoadingRejectedDocuments(false);\n        }\n      });\n    } else if (loadingRejectedDocuments) {\n      setLoadingRejectedDocuments(false);\n    }\n\n    if (props.claiming.claimTypes === null) {\n      props.GetClaimingTypes((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          setLoadingClaimTypes(false);\n        }\n      });\n    } else if (loadingClaimTypes) {\n      setLoadingClaimTypes(false);\n    }\n\n    if (\n      !loadingRejectedApplications &&\n      !loadingRejectedDocuments &&\n      !loadingClaimTypes &&\n      loading\n    ) {\n      setLoading(false);\n    }\n  }, [\n    loading,\n    loadingClaimTypes,\n    loadingRejectedApplications,\n    loadingRejectedDocuments,\n    props,\n  ]);\n\n  const countClaims = (\n    claiming: ClaimingReducerType,\n    thisType: PlansTypeKeys | \"all\"\n  ): number => {\n    let result: number = 0;\n\n    if (claiming.myClaims && thisType === \"all\") {\n      result = claiming.myClaims.filter(\n        (item) =>\n          item.last_claim_status !== ClaimStatus.DELETED &&\n          item.last_claim_status !== ClaimStatus.COMPLETED\n      ).length;\n    }\n    if (claiming.myClaims && thisType !== \"all\") {\n      result = claiming.myClaims.filter(\n        (item) =>\n          item.type_key === thisType &&\n          item.last_claim_status !== ClaimStatus.DELETED &&\n          item.last_claim_status !== ClaimStatus.COMPLETED\n      ).length;\n    }\n\n    return result;\n  };\n\n  return (\n    <React.Fragment>\n      <span className=\"mt-2 text-sm\">Filter by claim type</span>\n      {/* WHILE LOADING DATA ================================== */}\n      {(loading || props.loadingClaims) && (\n        <section className=\"space-y-2\">\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </section>\n      )}\n      {/* END WHILE LOADING DATA ================================== */}\n\n      {/* AFTER LOADING DATA ================================== */}\n      {!loading && !props.loadingClaims && (\n        <section>\n          {/* ALL ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(\"ALL\");\n              props.setSelectedClaimType(\"all\");\n            }}\n          >\n            <MainItem\n              title=\"All\"\n              active={props.claiming.selectedClaimType === \"all\"}\n              count={countClaims(props.claiming, \"all\")}\n            />\n          </div>\n          {/* APPLICATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(ClaimTypesInterface.DOCUMENT);\n              props.setSelectedClaimType(PlansTypeKeys.APPLICATION);\n            }}\n          >\n            <MainItem\n              title={\"Application\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.APPLICATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.APPLICATION)}\n            />\n          </div>\n          {/* DOCUMENT ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.DOCUMENT_VALIDATION);\n            }}\n          >\n            <MainItem\n              title={\"Document\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION\n              }\n              count={countClaims(\n                props.claiming,\n                PlansTypeKeys.DOCUMENT_VALIDATION\n              )}\n            />\n          </div>\n          {/* EXAMINATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.EXAMINATION);\n            }}\n          >\n            <MainItem\n              title={\"Exam\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.EXAMINATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.EXAMINATION)}\n            />\n          </div>\n          {/* PLACEMENT TRANSFER ================================= */}\n          {false && (\n            <div\n              className=\"mt-2\"\n              onClick={() => {\n                props.setSelectedClaimType(PlansTypeKeys.PLACEMENT_TRANSFER);\n              }}\n            >\n              <MainItem\n                title={\"Placement\"}\n                active={\n                  props.claiming.selectedClaimType !== \"all\" &&\n                  props.claiming.selectedClaimType ===\n                    PlansTypeKeys.PLACEMENT_TRANSFER\n                }\n                count={countClaims(\n                  props.claiming,\n                  PlansTypeKeys.PLACEMENT_TRANSFER\n                )}\n              />\n            </div>\n          )}\n          {/* <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setThisClaimType(ClaimTypesInterface.APPLICATION);\n            }}\n          >\n            <MainItem\n              title={capitalizeFirstLetter(ClaimTypesInterface.APPLICATION)}\n              active={props.thisClaimType === ClaimTypesInterface.APPLICATION}\n              count={countClaims(props.claiming).applications}\n            />\n          </div>\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setThisClaimType(ClaimTypesInterface.PLACEMENT);\n            }}\n          >\n            <MainItem\n              title={capitalizeFirstLetter(ClaimTypesInterface.PLACEMENT)}\n              active={props.thisClaimType === ClaimTypesInterface.PLACEMENT}\n              count={countClaims(props.claiming).placement}\n            />\n          </div> */}\n        </section>\n      )}\n      {/* END AFTER LOADING DATA ================================== */}\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  claiming,\n}: StoreState): { auth: Auth; claiming: ClaimingReducerType } => {\n  return { auth, claiming };\n};\n\nexport default connect(mapStateToProps, {\n  GetClaimingTypes,\n  setSelectedClaimType,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  PushPopupAlert,\n})(FilterByType);\n","import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdCancel, MdInfoOutline, MdTurnedIn } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert, reAssessApplication } from \"../../../actions\";\nimport { evaluateClaim } from \"../../../actions/claiming\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  allClaimApplicationInterface,\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  claimReasonInterface,\n  ClaimStatus,\n  ClaimTypesInterfaceAPI,\n  PositionAPI,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { DATE, showDate } from \"../../../utils/functions\";\nimport { PositionRequirementTableInterface } from \"../../Positions/ViewPosition\";\nimport ViewRequirements from \"../../Positions/ViewRequirements\";\nimport { isClaimEvaluated } from \"../ClaimDocView\";\n\nexport const FC_AdminApplicationPositionDistinctCategory = (\n  thisPosition: PositionAPI,\n  documentCategories: DocumentReducerInterface\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n  let requirements = thisPosition.requirements;\n  // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n  for (let req in requirements) {\n    let thisRequirements = requirements[req];\n    // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisCategory = documentCategories.documentCategory\n      ? documentCategories.documentCategory.find(\n          (item) =>\n            item.user_detail_category_id ===\n            thisRequirements.category.user_detail_category_id\n        ) && {\n          title: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.title,\n          user_detail_category_id: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.user_detail_category_id,\n        }\n      : {\n          title: \"\",\n          user_detail_category_id:\n            thisRequirements.category.user_detail_category_id,\n        };\n    // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisSubCategory = documentCategories.documentSubCategory\n      ? documentCategories.documentSubCategory.find(\n          (item) =>\n            item.user_detail_subcategory_id ===\n            thisRequirements.subcategory.user_detail_subcategory_id\n        )\n        ? {\n            title: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.title,\n            user_detail_subcategory_id:\n              documentCategories.documentSubCategory.find(\n                (item) =>\n                  item.user_detail_subcategory_id ===\n                  thisRequirements.subcategory.user_detail_subcategory_id\n              )!.user_detail_subcategory_id,\n            category_id: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.category_id,\n          }\n        : {\n            title: \"\",\n            user_detail_subcategory_id:\n              thisRequirements.subcategory.user_detail_subcategory_id,\n            category_id: \"\",\n          }\n      : {\n          title: \"\",\n          user_detail_subcategory_id:\n            thisRequirements.subcategory.user_detail_subcategory_id,\n          category_id: \"\",\n        };\n    // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n    if (thisCategory) {\n      for (let field in thisRequirements.position_requirement) {\n        // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n        let thisField = documentCategories.documentFields\n          ? documentCategories.documentFields.find(\n              (item) =>\n                item._id === thisRequirements.position_requirement[field]._id\n            )\n            ? {\n                title: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!.title,\n                _id: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n            : {\n                title: \"\",\n                _id: thisRequirements.position_requirement[field]._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n          : {\n              title: \"\",\n              _id: thisRequirements.position_requirement[field]._id,\n              required: thisRequirements.position_requirement[field].required,\n            };\n        // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n        PositionsTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: thisField.title,\n          field_id: thisField._id,\n          required: thisField.required,\n        });\n      }\n\n      // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n      ) {\n        DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n        DistinctCategoriesTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: \"\",\n          subcategory_title: \"\",\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n\n      // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctSubCategoriesIds.includes(\n          thisSubCategory.user_detail_subcategory_id\n        )\n      ) {\n        DistinctSubCategoriesIds.push(\n          thisSubCategory.user_detail_subcategory_id\n        );\n        DistinctSubCategoriesTemp.push({\n          category_id: thisSubCategory.category_id,\n          category_title: \"\",\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n    }\n  }\n  // DistinctCategoriesIds.;\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\nenum viewTabs {\n  profile = \"Applicant Profile\",\n  application = \"Application Details\",\n}\n\ntype AdminClaimAppViewProps = {\n  thisApplication: allClaimApplicationInterface;\n  thisPosition: PositionAPI;\n  documentCategories: DocumentReducerInterface;\n  thisClaim: CandidateClaimInterface;\n  claimTypes: ClaimTypesInterfaceAPI[];\n  systemPositions: PositionAPI[];\n  claimReasons: claimReasonInterface[] | null;\n\n  // REDUX ==================\n  auth: Auth;\n  reAssessApplication: Function;\n  evaluateClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst AdminClaimAppView: React.FC<AdminClaimAppViewProps> = (props) => {\n  const [viewPosition, setViewPosition] = useState<boolean>(true);\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n  const [actionTaken, setActionTaken] = useState<ClaimDecisionStatus | null>(\n    null\n  );\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [responseMsg, setResponseMsg] = useState<string>(\"\");\n  const [selectedTab, setSelectedTab] = useState<viewTabs>(viewTabs.profile);\n\n  const handleVerify = async () => {\n    if (!actionTaken) {\n      setFormError({\n        element: \"action\",\n        msg: \"Action is required!\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    if (isEmptyOrSpaces(responseMsg)) {\n      setFormError({\n        element: \"comment\",\n        msg: \"Reason of rejection is required\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    let subClaim = props.thisClaim.claims.find(\n      (item) => item.level === props.thisClaim.claim_level\n    );\n\n    if (subClaim) {\n      setLoadingRequest(true);\n      const api_body: {\n        sub_claim_id: string;\n        evaluation_comment: string;\n        evaluated_by: string;\n        decision_taken_status: ClaimDecisionStatus;\n      } = {\n        sub_claim_id: subClaim.id,\n        evaluation_comment: responseMsg,\n        evaluated_by: props.auth.user.user_id,\n        decision_taken_status: actionTaken,\n      };\n\n      try {\n        const res = await axios.put<CandidateClaimInterface>(\n          `${API.CLAIMING}/user/evaluate/${props.thisClaim._id}`,\n          api_body\n        );\n        if (res) {\n          console.log({ evaluate_claim_res: res });\n          props.evaluateClaim(res.data);\n          // REVALIDATED DOCUMENT IF IT IS APPROVED =========================\n          if (actionTaken === ClaimDecisionStatus.ACCEPTED) {\n            await overrideDecision();\n          }\n          props.PushPopupAlert({\n            title: `Claim responded successfully!`,\n            theme: PopupAlertTheme.success,\n          });\n          // setDocumentId(\"null\");\n          setResponseMsg(\"\");\n          setActionTaken(null);\n        }\n      } catch (error) {\n        console.error(error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      setLoadingRequest(false);\n    }\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  const overrideDecision = async () => {\n    try {\n      const res = await axios.patch(\n        `${API.APPLICATION}/tolerateappl/${props.thisClaim.claiming_on_id}`,\n        {\n          user_id: props.auth.user.user_id,\n          comment: responseMsg,\n          application_status: ApplicationStates.Shortlisted,\n        }\n      );\n\n      res.data &&\n        props.reAssessApplication({\n          application_id: props.thisClaim.claiming_on_id,\n          application_status: ApplicationStates.Shortlisted,\n        });\n    } catch (error) {\n      console.error({ code_error: error });\n      PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      // errorToText(error);\n    }\n    setLoadingRequest(false);\n  };\n\n  const getPositionById = (position_id: string): PositionAPI | undefined => {\n    let result = props.systemPositions.find(\n      (item) => item.position_id === position_id\n    );\n\n    return result;\n  };\n\n  return (\n    <section className=\"\">\n      {/* #################### VIEW TABS ################################## */}\n      <div className=\"flex flex-row items-center mx-4\">\n        {Object.values(viewTabs).map((item, i) => (\n          <div\n            key={i}\n            onClick={() => setSelectedTab(item)}\n            className={`animate__animated ${\n              selectedTab === item\n                ? \"bg-blue-100 border-blue-600 text-blue-600 animate__zoomIn\"\n                : \"bg-white border-white text-gray-600\"\n            } hover:bg-blue-100 px-4 py-2 cursor-pointer font-bold border-b-4 hover:border-blue-600 hover:text-blue-600 rounded-t mt-1 mr-1`}\n          >\n            {item}\n          </div>\n        ))}\n      </div>\n      {/* #################### END VIEW TABS ################################## */}\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          {/* DISPLAY POSITION ==================================================== */}\n          {selectedTab === viewTabs.application && (\n            <section className=\"w-full my-1 animate__animated animate__fadeIn rounded\">\n              <div className=\"bg-white w-full\">\n                <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                  Position Details\n                </div>\n                <div className=\"flex items-center\">\n                  <div className=\"flex items-center gap-2\">\n                    <span className={`italic text-gray-600`}>Name:</span>\n                    <span className=\"text-gray-800 font-bold text-2xl\">\n                      {getPositionById(props.thisApplication.position)\n                        ? getPositionById(props.thisApplication.position)!\n                            .position_title\n                        : \"Position not found\"}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Desc:</span>\n                  <span className=\"font-semibold\">\n                    {getPositionById(props.thisApplication.position)\n                      ? getPositionById(props.thisApplication.position)!\n                          .description\n                      : \"\"}\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>School level:</span>\n                  <span className=\"font-semibold\">\n                    {getPositionById(props.thisApplication.position)\n                      ? getPositionById(props.thisApplication.position)!\n                          .school_level_id.school_level_name\n                      : \"\"}\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Institute:</span>\n                  <span className=\"font-semibold\">\n                    {getPositionById(props.thisApplication.position)\n                      ? getPositionById(props.thisApplication.position)!\n                          .education_institute_id.education_category_title\n                      : \"\"}\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Courses:</span>\n                  <span className=\"flex items-center gap-2\">\n                    {getPositionById(props.thisApplication.position) ? (\n                      getPositionById(\n                        props.thisApplication.position\n                      )!.courses.map((item, index) => (\n                        <div\n                          key={index + item.course_id}\n                          className=\"flex items-center gap-1\"\n                        >\n                          <span className=\"font-semibold\">\n                            {item.course_name}\n                          </span>\n                          <span className=\"text-gray-600\">\n                            ({item.course_code})\n                          </span>\n                          {index !==\n                            getPositionById(props.thisApplication.position)!\n                              .courses.length -\n                              1 && \",\"}\n                        </div>\n                      ))\n                    ) : (\n                      <NoResult\n                        theme={NoResultThemes.Dark}\n                        value={\"No courses found\"}\n                      />\n                    )}\n                  </span>\n                </div>\n\n                <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                  Position Requirements\n                </div>\n                {getPositionById(props.thisApplication.position) ? (\n                  getPositionById(props.thisApplication.position)!.requirements\n                    .length > 0 ? (\n                    FC_AdminApplicationPositionDistinctCategory(\n                      getPositionById(props.thisApplication.position)!,\n                      props.documentCategories\n                    ).DistinctCategoriesTemp.map((item, index) => (\n                      <div\n                        className=\"bg-gray-100props.thisApplication.position rounded p-2\"\n                        key={index + item.category_id}\n                      >\n                        <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                          <MdTurnedIn />\n                          <span>{item.category_title}</span>\n                        </div>\n                        <div className=\"border bg-white mt-1\">\n                          <ViewRequirements\n                            requirements={FC_AdminApplicationPositionDistinctCategory(\n                              getPositionById(props.thisApplication.position)!,\n                              props.documentCategories\n                            ).PositionsTemp.filter(\n                              (req) => req.category_id === item.category_id\n                            )}\n                          />\n                        </div>\n                      </div>\n                    ))\n                  ) : (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"No requirements\"}\n                    ></NoResult>\n                  )\n                ) : (\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"No requirements\"}\n                  ></NoResult>\n                )}\n              </div>\n            </section>\n          )}\n          {/* END DISPLAY POSITION ==================================================== */}\n          {/* -------------------------------------------------------------------------------- */}\n          {/* DISPLAY PROFILE ==================================================== */}\n          {selectedTab === viewTabs.profile && (\n            <section className=\"w-full my-2 animate__animated animate__fadeIn rounded\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center gap-2\">\n                  <span className={`italic text-gray-600`}>Names:</span>\n                  <span className=\"text-gray-800 font-bold text-xl\">\n                    {props.thisClaim.previous.evaluater.name}\n                  </span>\n                </div>\n                {false && (\n                  <button\n                    type=\"button\"\n                    className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                    onClick={() => setViewPosition(!viewPosition)}\n                  >\n                    {viewPosition ? \"Hide\" : \"More\"}\n                  </button>\n                )}\n              </div>\n            </section>\n          )}\n          {/* END DISPLAY PROFILE ==================================================== */}\n          {selectedTab === viewTabs.profile && (\n            <div className=\"flex items-center\">\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Position name:</span>\n                <span className=\"text-gray-800 font-bold text-2xl\">\n                  {getPositionById(props.thisApplication.position)\n                    ? getPositionById(props.thisApplication.position)!\n                        .position_title\n                    : \"Position not found\"}\n                </span>\n              </div>\n            </div>\n          )}\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisClaim.previous\n                  ? props.thisClaim.previous.status ===\n                    ApplicationStates.Rejected\n                  : props.thisApplication.application_status ===\n                    ApplicationStates.Rejected\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } rounded px-3 py-1`}\n            >\n              {props.thisClaim.previous\n                ? capitalizeFirstLetter(props.thisClaim.previous.status)\n                : capitalizeFirstLetter(\n                    props.thisApplication.application_status\n                  )}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {props.thisClaim.previous.evaluater.name}\n            </span>\n          </div>\n          {false && (\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Session:</span>\n              <span className=\"font-bold text-gray-900 py-1\">\n                {props.thisApplication.application_session}\n              </span>\n            </div>\n          )}\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisApplication.createdAt)}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisClaim.previous\n                ? props.thisClaim.previous.reason\n                : props.thisApplication.override_by.comment}\n            </span>\n          </div>\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVEL 1 DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              <div className=\"text-gray-700 italic font-bold\">\n                Claim Comment (level {index + 1})\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2 mt-1 border rounded px-4 py-1 bg-gray-50\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-600 text-xs\">\n                  {showDate(claim.createdAt)}\n                  {/* {showDate(claim.createdAt) +\n                    \" at \" +\n                    moment.unix(claim.date_created).format(\"MM/DD/YYYY\")} */}\n                </span>\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-700 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n            </section>\n          ))}\n        {/* END CLAIM LEVEL 1 DETAILS ==================================================== */}\n      </div>\n\n      {/* FOOTER INITIAL ========================================== */}\n      {!actionTaken && (\n        <section className=\"flex items-center justify-between\">\n          {/* SHOWING STATUS ===================================== */}\n          <div className=\"mx-4 mb-5 mt-3\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n          </div>\n\n          {props.thisClaim.last_claim_status === ClaimStatus.PENDING && (\n            <div className=\"flex items-center gap-2 px-2\">\n              <button\n                className={`px-4 py-2 font-semibold text-red-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-red-700 hover:bg-red-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.REJECTED);\n                }}\n              >\n                <MdCancel className=\"w-5 h-5\" />\n                <span>Reject</span>\n              </button>\n              <button\n                className={`px-4 py-2 font-semibold text-blue-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-blue-700 hover:bg-blue-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.ACCEPTED);\n                }}\n              >\n                <FaRegCheckCircle className=\"w-5 h-5\" />\n                <span>Accept</span>\n              </button>\n            </div>\n          )}\n        </section>\n      )}\n      {/* END FOOTER INITIAL ========================================== */}\n\n      {/* ======================================================== */}\n      {/* FOOTER RESPONSE ========================================== */}\n      {actionTaken && (\n        <section className=\"my-5 overflow-x-auto\">\n          <div className=\"italic text-gray-700 text-base my-1 mx-2\">\n            Selected decision:{\" \"}\n            <span\n              className={`font-semibold text-lg ${\n                actionTaken === ClaimDecisionStatus.ACCEPTED\n                  ? \"text-blue-700\"\n                  : \"text-yellow-800\"\n              }`}\n            >\n              {actionTaken === ClaimDecisionStatus.ACCEPTED\n                ? \"Approved\"\n                : \"Rejected\"}\n            </span>\n          </div>\n          {/* right part */}\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your decision...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  formError && formError.element === \"comment\" ? \"red\" : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={responseMsg}\n                onChange={(e) => {\n                  setResponseMsg(e.target.value);\n                  setFormError(null);\n                }}\n                disabled={loadingRequest}\n              ></textarea>\n              {formError && formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  setResponseMsg(\"\");\n                  setActionTaken(null);\n                  setFormError(null);\n                }}\n                disabled={loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={loadingRequest}\n                onClick={() =>\n                  window.confirm(\n                    `Are you sure you want to ${\n                      actionTaken === ClaimDecisionStatus.ACCEPTED\n                        ? \"approve\"\n                        : \"rejected\"\n                    } this document?`\n                  ) && handleVerify()\n                }\n              >\n                {loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n          {/* end right part */}\n        </section>\n      )}\n      {/* END FOOTER RESPONSE ========================================== */}\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n}: StoreState): {\n  auth: Auth;\n} => {\n  return {\n    auth: auth,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  evaluateClaim,\n  reAssessApplication,\n  PushPopupAlert,\n})(AdminClaimAppView);\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdCancel, MdInfoOutline } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadQuestionTypes,\n  PushPopupAlert,\n  questionTypesStoreInterface,\n} from \"../../../actions\";\nimport { evaluateClaim } from \"../../../actions/claiming\";\nimport { AnswersDetails } from \"../../../components/AnswersDetails/AnswersDetails\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimExamResultsDetails,\n  claimReasonInterface,\n  ClaimStatus,\n  ClaimTypesInterfaceAPI,\n  course,\n} from \"../../../interfaces\";\nimport { ExamAnswerSheetDone } from \"../../../interfaces/exam\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { showDate } from \"../../../utils/functions\";\nimport { claimShowAnswer } from \"../Candidate/ExaminationFormView\";\nimport { isClaimEvaluated } from \"../ClaimDocView\";\n\nenum viewTabs {\n  profile = \"Applicant Profile\",\n  exam = \"Exam Details\",\n}\n\ntype AdminClaimExamViewProps = {\n  thisExamSheet: ClaimExamResultsDetails;\n  thisExam: course;\n  thisClaim: CandidateClaimInterface;\n  claimTypes: ClaimTypesInterfaceAPI[];\n  claimReasons: claimReasonInterface[] | null;\n\n  // REDUX ==================\n  auth: Auth;\n  questionTypes: questionTypesStoreInterface;\n  evaluateClaim: Function;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  PushPopupAlert: Function;\n};\n\nconst AdminClaimExamView: React.FC<AdminClaimExamViewProps> = (props) => {\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n  const [loading, setLoading] = useState(true);\n  const [actionTaken, setActionTaken] = useState<ClaimDecisionStatus | null>(\n    null\n  );\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [responseMsg, setResponseMsg] = useState<string>(\"\");\n  const [marks, setMarks] = useState<number>(0);\n  const [selectedTab, setSelectedTab] = useState<viewTabs>(viewTabs.profile);\n\n  useEffect(() => {\n    if (\n      props.questionTypes.questionTypes === null ||\n      (props.questionTypes.questionTypes.length === 0 && loading)\n    ) {\n      props.loadQuestionTypes(setLoading);\n    } else if (loading) {\n      setLoading(false);\n    }\n  }, [loading, props]);\n\n  if (loading || props.questionTypes.questionTypes === null) {\n    return <Loading />;\n  }\n\n  const handleVerify = async () => {\n    if (!actionTaken) {\n      setFormError({\n        element: \"action\",\n        msg: \"Action is required!\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    if (\n      actionTaken === ClaimDecisionStatus.ACCEPTED &&\n      (marks <= 0 || marks > 100)\n    ) {\n      setFormError({\n        element: \"marks\",\n        msg: \"Invalid marks, marks must be between 1 and 10\",\n      });\n\n      return setLoadingRequest(false);\n    }\n\n    if (isEmptyOrSpaces(responseMsg)) {\n      setFormError({\n        element: \"comment\",\n        msg: \"Reason of rejection is required\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    let subClaim = props.thisClaim.claims.find(\n      (item) => item.level === props.thisClaim.claim_level\n    );\n\n    if (subClaim) {\n      setLoadingRequest(true);\n      const api_body: {\n        sub_claim_id: string;\n        evaluation_comment: string;\n        evaluated_by: string;\n        evaluator_name: string;\n        evaluator_email: string;\n        decision_taken_status: ClaimDecisionStatus;\n      } = {\n        sub_claim_id: subClaim.id,\n        evaluation_comment: responseMsg,\n        evaluated_by: props.auth.user.user_id,\n        decision_taken_status: actionTaken,\n        evaluator_name: props.auth.user.fname + \" \" + props.auth.user.lname,\n        evaluator_email: props.auth.user.email,\n      };\n\n      try {\n        const res = await axios.put<CandidateClaimInterface>(\n          `${API.CLAIMING}/user/evaluate/${props.thisClaim._id}`,\n          api_body\n        );\n        if (res) {\n          console.log({ evaluate_claim_res: res });\n          props.evaluateClaim(res.data);\n          // REVALIDATED DOCUMENT IF IT IS APPROVED =========================\n          if (actionTaken === ClaimDecisionStatus.ACCEPTED) {\n            await handleMarksAddition();\n          }\n          props.PushPopupAlert({\n            title: `Claim responded successfully!`,\n            theme: PopupAlertTheme.success,\n          });\n          // setDocumentId(\"null\");\n          setResponseMsg(\"\");\n          setActionTaken(null);\n        }\n      } catch (error) {\n        console.error(error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      setLoadingRequest(false);\n    }\n  };\n\n  const handleMarksAddition = async () => {\n    try {\n      await axios.put(`${API.DO_EXAM}/answersheet/user/marks/update`, {\n        answer_sheet_id: props.thisClaim.claiming_on_id,\n        marks: marks,\n      });\n    } catch (error) {\n      console.error(error);\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  // const getAnswersByQuestion = (question_id: string): ClaimGetUserAnswers[] => {\n  //   return props.thisExamSheet.user_answers.filter(\n  //     (item) => item.question === question_id\n  //   );\n  // };\n\n  const claimCandidateAnswers = (): ExamAnswerSheetDone[] => {\n    let result: ExamAnswerSheetDone[] = [\n      {\n        exam_location: props.thisExamSheet.exam_location,\n        questions: props.thisExamSheet.questions,\n        user_answers: props.thisExamSheet.user_answers,\n        user: props.thisExamSheet.user,\n        period: props.thisExamSheet.period,\n        course: props.thisExamSheet.course,\n        exam_paper: props.thisExamSheet.exam_paper,\n        user_status: props.thisExamSheet.user_status,\n        used_duration: props.thisExamSheet.used_duration,\n        total_marks: props.thisExamSheet.total_marks,\n        number_of_question_answered:\n          props.thisExamSheet.number_of_question_answered,\n        // start_time: string,\n        // end_time: string,\n        exam_total_marks: props.thisExamSheet.exam_total_marks,\n        exam_start_time: props.thisExamSheet.exam_start_time,\n        exam_end_time: props.thisExamSheet.exam_end_time,\n        exam_date: props.thisExamSheet.exam_date,\n        status: props.thisExamSheet.status,\n        createdAt: props.thisExamSheet.createdAt,\n        updatedAt: props.thisExamSheet.updatedAt,\n        disability: false,\n        gender: \"\",\n        in_education: false,\n        position: \"\",\n        answer_sheet_id: props.thisExamSheet.answer_sheet_id,\n      },\n    ];\n    // props.thisExamSheet\n\n    return result;\n  };\n\n  return (\n    <section className=\"\">\n      {/* #################### VIEW TABS ################################## */}\n      <div className=\"flex flex-row items-center mx-4\">\n        {Object.values(viewTabs).map((item, i) => (\n          <div\n            key={i}\n            onClick={() => setSelectedTab(item)}\n            className={`animate__animated ${\n              selectedTab === item\n                ? \"bg-blue-100 border-blue-600 text-blue-600 animate__zoomIn\"\n                : \"bg-white border-white text-gray-600\"\n            } hover:bg-blue-100 px-4 py-2 cursor-pointer font-bold border-b-4 hover:border-blue-600 hover:text-blue-600 rounded-t mt-1 mr-1`}\n          >\n            {item}\n          </div>\n        ))}\n      </div>\n      {/* #################### END VIEW TABS ################################## */}\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          {/* DISPLAY POSITION ==================================================== */}\n          {selectedTab === viewTabs.exam && (\n            <section className=\"w-full my-1 animate__animated animate__fadeIn rounded\">\n              <div className=\"bg-white w-full rounded p-2 mb-2\">\n                <AnswersDetails\n                  showAnswers={true}\n                  exam_id={claimShowAnswer(props.thisExamSheet)}\n                  allAnswers={claimCandidateAnswers()}\n                  user_id={props.thisExamSheet.user}\n                />\n              </div>\n            </section>\n          )}\n          {/* END DISPLAY POSITION ==================================================== */}\n          {/* -------------------------------------------------------------------------------- */}\n          {/* DISPLAY PROFILE ==================================================== */}\n          {selectedTab === viewTabs.profile && (\n            <section className=\"w-full my-2 animate__animated animate__fadeIn rounded\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center gap-2\">\n                  <span className={`italic text-gray-600`}>Names:</span>\n                  <span className=\"text-gray-800 font-bold text-xl\">\n                    {props.thisClaim.userDetails.user_info.fname +\n                      \" \" +\n                      props.thisClaim.userDetails.user_info.lname}\n                  </span>\n                </div>\n              </div>\n            </section>\n          )}\n          {/* END DISPLAY PROFILE ==================================================== */}\n          {selectedTab === viewTabs.profile && (\n            <div className=\"\">\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Email:</span>\n                <span className=\"text-gray-800 font-bold text-lg\">\n                  {props.thisClaim.userDetails.email}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Phone:</span>\n                <span className=\"text-gray-800 font-bold text-lg\">\n                  {props.thisClaim.userDetails.phone_number}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Gender:</span>\n                <span className=\"text-gray-800 font-bold text-lg\">\n                  {props.thisClaim.userDetails.user_info.sex === \"M\"\n                    ? \"Male\"\n                    : \"Female\"}\n                </span>\n              </div>\n            </div>\n          )}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVEL 1 DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              <div className=\"text-gray-700 italic font-bold\">\n                Claim Comment (level {index + 1})\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2 mt-1 border rounded px-2 py-1 bg-gray-50\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-600 text-xs\">\n                  {showDate(claim.createdAt)}\n                  {/* {showDate(claim.createdAt) +\n                    \" at \" +\n                    moment.unix(claim.date_created).format(\"MM/DD/YYYY\")} */}\n                </span>\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-700 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n            </section>\n          ))}\n        {/* END CLAIM LEVEL 1 DETAILS ==================================================== */}\n      </div>\n\n      {/* FOOTER INITIAL ========================================== */}\n      {!actionTaken && (\n        <section className=\"flex items-center justify-between\">\n          {/* SHOWING STATUS ===================================== */}\n          <div className=\"mx-4 mb-5 mt-3\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n          </div>\n\n          {props.thisClaim.last_claim_status === ClaimStatus.PENDING && (\n            <div className=\"flex items-center gap-2 px-2\">\n              <button\n                className={`px-4 py-2 font-semibold text-red-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-red-700 hover:bg-red-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.REJECTED);\n                }}\n              >\n                <MdCancel className=\"w-5 h-5\" />\n                <span>Reject</span>\n              </button>\n              <button\n                className={`px-4 py-2 font-semibold text-blue-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-blue-700 hover:bg-blue-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.ACCEPTED);\n                }}\n              >\n                <FaRegCheckCircle className=\"w-5 h-5\" />\n                <span>Accept</span>\n              </button>\n            </div>\n          )}\n        </section>\n      )}\n      {/* END FOOTER INITIAL ========================================== */}\n\n      {/* ======================================================== */}\n      {/* FOOTER RESPONSE ========================================== */}\n      {actionTaken && (\n        <section className=\"my-5 overflow-x-auto\">\n          <div className=\"italic text-gray-700 text-base my-1 mx-2\">\n            Selected decision:{\" \"}\n            <span\n              className={`font-semibold text-lg ${\n                actionTaken === ClaimDecisionStatus.ACCEPTED\n                  ? \"text-blue-700\"\n                  : \"text-yellow-800\"\n              }`}\n            >\n              {actionTaken === ClaimDecisionStatus.ACCEPTED\n                ? \"Approved\"\n                : \"Rejected\"}\n            </span>\n          </div>\n          {/* right part */}\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full space-y-1\">\n              {actionTaken === ClaimDecisionStatus.ACCEPTED && (\n                <div className=\"flex items-center justify-end w-full gap-2\">\n                  <span className=\"font-semibold\">Addition marks</span>\n                  <div className=\"px-2\">\n                    <input\n                      placeholder={`Addition marks`}\n                      className={`border border-${\n                        formError && formError.element === \"marks\"\n                          ? \"red\"\n                          : \"gray\"\n                      }-400 rounded px-3 py-1 w-auto focus:outline-none`}\n                      value={marks}\n                      onChange={(e) => {\n                        setMarks(Number(e.target.value));\n                        setFormError(null);\n                      }}\n                      disabled={loadingRequest}\n                    />\n                    {formError && formError.element === \"marks\" && (\n                      <p className=\"text-red-800\">{formError.msg}</p>\n                    )}\n                  </div>\n                </div>\n              )}\n              <div className=\"w-full px-2\">\n                <textarea\n                  placeholder={`Reason of your decision...`}\n                  cols={50}\n                  rows={actionTaken === ClaimDecisionStatus.ACCEPTED ? 2 : 3}\n                  className={`border border-${\n                    formError && formError.element === \"comment\"\n                      ? \"red\"\n                      : \"gray\"\n                  }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                  style={{ resize: \"none\" }}\n                  value={responseMsg}\n                  onChange={(e) => {\n                    setResponseMsg(e.target.value);\n                    setFormError(null);\n                  }}\n                  disabled={loadingRequest}\n                ></textarea>\n                {formError && formError.element === \"comment\" && (\n                  <p className=\"text-red-800\">{formError.msg}</p>\n                )}\n              </div>\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  setResponseMsg(\"\");\n                  setActionTaken(null);\n                  setFormError(null);\n                }}\n                disabled={loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={loadingRequest}\n                onClick={() =>\n                  window.confirm(\n                    `Are you sure you want to ${\n                      actionTaken === ClaimDecisionStatus.ACCEPTED\n                        ? \"approve\"\n                        : \"rejected\"\n                    } this document?`\n                  ) && handleVerify()\n                }\n              >\n                {loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n          {/* end right part */}\n        </section>\n      )}\n      {/* END FOOTER RESPONSE ========================================== */}\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  questionTypes,\n}: StoreState): {\n  auth: Auth;\n  questionTypes: questionTypesStoreInterface;\n} => {\n  return {\n    auth,\n    questionTypes,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  loadQuestionTypes,\n  evaluateClaim,\n  PushPopupAlert,\n})(AdminClaimExamView);\n","import axios from \"axios\";\nimport React from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdCancel, MdInfoOutline } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { adminDisplayClaimTitle } from \".\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport { evaluateClaim } from \"../../../actions/claiming\";\nimport { verifyDocument } from \"../../../actions/document\";\nimport { VerifyDocumentInterface } from \"../../../actions/users\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  claimReasonInterface,\n  ClaimStatus,\n  ClaimTypesInterfaceAPI,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport {\n  DocValidationStatusInterface,\n  UserDocumentsInterface,\n} from \"../../../shared/interfaces\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { showDate, timestampToDate } from \"../../../utils/functions\";\nimport { isClaimEvaluated } from \"../ClaimDocView\";\n\ntype AdminClaimDocViewProps = {\n  thisDoc: UserDocumentsInterface;\n  documentCategories: DocumentReducerInterface;\n  thisClaim: CandidateClaimInterface;\n  claimReasons: claimReasonInterface[] | null;\n  candidateId: string;\n  claimTypes: ClaimTypesInterfaceAPI[];\n  viewImage: boolean;\n  setViewImage: (value: boolean) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  actionTaken: ClaimDecisionStatus | null;\n  setActionTaken: (value: ClaimDecisionStatus | null) => void;\n  responseMsg: string;\n  setResponseMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX ==================\n  auth: Auth;\n  verifyDocument: Function;\n  evaluateClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst AdminClaimDocView: React.FC<AdminClaimDocViewProps> = (props) => {\n  const handleVerify = async () => {\n    if (!props.actionTaken) {\n      props.setFormError({\n        element: \"action\",\n        msg: \"Action is required!\",\n      });\n      return props.setLoadingRequest(false);\n    }\n\n    if (isEmptyOrSpaces(props.responseMsg)) {\n      props.setFormError({\n        element: \"comment\",\n        msg: \"Reason of rejection is required\",\n      });\n      return props.setLoadingRequest(false);\n    }\n\n    let subClaim = props.thisClaim.claims.find(\n      (item) => item.level === props.thisClaim.claim_level\n    );\n\n    if (subClaim) {\n      props.setLoadingRequest(true);\n      const api_body: {\n        sub_claim_id: string;\n        evaluation_comment: string;\n        evaluated_by: string;\n        evaluator_name: string;\n        evaluator_email: string;\n        decision_taken_status: ClaimDecisionStatus;\n      } = {\n        sub_claim_id: subClaim.id,\n        evaluation_comment: props.responseMsg,\n        evaluated_by: props.auth.user.user_id,\n        decision_taken_status: props.actionTaken,\n        evaluator_name: props.auth.user.fname + \" \" + props.auth.user.lname,\n        evaluator_email: props.auth.user.email,\n      };\n\n      try {\n        const res = await axios.put<CandidateClaimInterface>(\n          `${API.CLAIMING}/user/evaluate/${props.thisClaim._id}`,\n          api_body\n        );\n        if (res) {\n          console.log({ evaluate_claim_res: res });\n          props.evaluateClaim(res.data);\n          // REVALIDATED DOCUMENT IF IT IS APPROVED =========================\n          if (props.actionTaken === ClaimDecisionStatus.ACCEPTED) {\n            await FC_DocValidation();\n          }\n          props.PushPopupAlert({\n            title: `Claim responded successfully!`,\n            theme: PopupAlertTheme.success,\n          });\n          // setDocumentId(\"null\");\n          props.setResponseMsg(\"\");\n          props.setActionTaken(null);\n        }\n      } catch (error) {\n        console.error(error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      props.setLoadingRequest(false);\n    }\n  };\n\n  const FC_DocValidation = async () => {\n    const api_body: VerifyDocumentInterface = {\n      user_id: props.thisClaim.user,\n      doc_id: props.thisClaim.claiming_on_id,\n      validation_status:\n        props.actionTaken === ClaimDecisionStatus.ACCEPTED\n          ? DocValidationStatusInterface.APPROVED\n          : DocValidationStatusInterface.REJECTED,\n      validated_by: {\n        user_id: props.auth.user.user_id,\n        comment: props.responseMsg,\n        validation_status:\n          props.actionTaken === ClaimDecisionStatus.ACCEPTED\n            ? DocValidationStatusInterface.APPROVED\n            : DocValidationStatusInterface.REJECTED,\n      },\n      in_education: false,\n      disability: false,\n    };\n    const api_redux: VerifyDocumentInterface = {\n      user_id: props.thisClaim.user,\n      doc_id: props.thisClaim.claiming_on_id,\n      validation_status:\n        props.actionTaken === ClaimDecisionStatus.ACCEPTED\n          ? DocValidationStatusInterface.APPROVED\n          : DocValidationStatusInterface.REJECTED,\n      validated_by: {\n        user_id: props.auth.user.user_id,\n        comment: props.responseMsg,\n        validation_status:\n          props.actionTaken === ClaimDecisionStatus.ACCEPTED\n            ? DocValidationStatusInterface.APPROVED\n            : DocValidationStatusInterface.REJECTED,\n        date: \"\",\n      },\n      in_education: false,\n      disability: false,\n    };\n\n    try {\n      const res = await axios.post<VerifyDocumentInterface>(\n        `${API.AUTH}/validateuserdoc`,\n        api_body\n      );\n      if (res) {\n        props.verifyDocument(api_redux);\n        await FC_shortListing(props.thisClaim.user);\n        // setDocumentId(\"null\");\n      }\n    } catch (error) {\n      console.error(error);\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  const FC_shortListing = async (candidate_id: string) => {\n    try {\n      const res = await axios.patch(\n        `${API.APPLICATION}/doccheckshortlist/${candidate_id}`\n      );\n      console.log({ res });\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2\">\n              <span className={`italic text-gray-600`}>Names:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.thisClaim.userDetails.user_info.fname +\n                  \" \" +\n                  props.thisClaim.userDetails.user_info.lname}\n              </span>\n            </div>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewImage(!props.viewImage)}\n            >\n              {props.viewImage ? \"Hide\" : \"View\"}\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <span className={`italic text-gray-600`}>Title:</span>\n            <span className=\"text-gray-800 font-bold text-2xl\">\n              {/* {ClaimGetDocTitle(props.documentCategories, props.thisDoc).main} */}\n              {props.thisClaim.userDetails.details.filter(\n                (item) => item.validation_status !== \"waiting\"\n              ).length > 0\n                ? adminDisplayClaimTitle(\n                    props.documentCategories,\n                    props.thisClaim.userDetails.details.filter(\n                      (item) => item.validation_status !== \"waiting\"\n                    ),\n                    props.thisClaim\n                  )\n                : \"-\"}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span className=\"font-bold text-yellow-900 rounded px-3 py-1\">\n              {props.thisClaim.previous\n                ? capitalizeFirstLetter(props.thisClaim.previous.status)\n                : capitalizeFirstLetter(props.thisDoc.validation_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {props.thisClaim.previous.evaluater.name}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisClaim.previous\n                ? props.thisClaim.previous.reason\n                : props.thisDoc.validated_by.commet}\n            </span>\n          </div>\n\n          {/* DISPLAY IMAGE ==================================================== */}\n          {props.viewImage && (\n            <div className=\"w-full my-1 animate__animated animate__fadeIn\">\n              <img\n                src={`${API.AUTH_FILES}/${props.thisDoc.files}`}\n                alt=\"doc file\"\n                className={`w-full animate__animated animate__fadeIn`}\n              />\n            </div>\n          )}\n          {/* END DISPLAY IMAGE ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVEL 1 DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              <div className=\"text-gray-700 italic font-bold\">\n                Claim Comment (level {index + 1})\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2 mt-1 border rounded px-4 py-1 bg-gray-50\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt) +\n                    \" at \" +\n                    timestampToDate(claim.date_created).timeFR}\n                </span>\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-700 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n            </section>\n          ))}\n        {/* END CLAIM LEVEL 1 DETAILS ==================================================== */}\n      </div>\n\n      {/* FOOTER INITIAL ========================================== */}\n      {!props.actionTaken && (\n        <section className=\"flex items-center justify-between\">\n          {/* SHOWING STATUS ===================================== */}\n          <div className=\"mx-4 mb-5 mt-3\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n          </div>\n\n          {props.thisClaim.last_claim_status === ClaimStatus.PENDING && (\n            <div className=\"flex items-center gap-2 px-2\">\n              <button\n                className={`px-4 py-2 font-semibold text-red-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-red-700 hover:bg-red-800`}\n                onClick={() => {\n                  props.setActionTaken(ClaimDecisionStatus.REJECTED);\n                }}\n              >\n                <MdCancel className=\"w-5 h-5\" />\n                <span>Reject</span>\n              </button>\n              <button\n                className={`px-4 py-2 font-semibold text-blue-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-blue-700 hover:bg-blue-800`}\n                onClick={() => {\n                  props.setActionTaken(ClaimDecisionStatus.ACCEPTED);\n                }}\n              >\n                <FaRegCheckCircle className=\"w-5 h-5\" />\n                <span>Accept</span>\n              </button>\n            </div>\n          )}\n        </section>\n      )}\n      {/* END FOOTER INITIAL ========================================== */}\n\n      {/* ======================================================== */}\n      {/* FOOTER RESPONSE ========================================== */}\n      {props.actionTaken && (\n        <section className=\"my-5 overflow-x-auto\">\n          <div className=\"italic text-gray-700 text-base my-1 mx-2\">\n            Selected decision:{\" \"}\n            <span\n              className={`font-semibold text-lg ${\n                props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                  ? \"text-blue-700\"\n                  : \"text-yellow-800\"\n              }`}\n            >\n              {props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                ? \"Approved\"\n                : \"Rejected\"}\n            </span>\n          </div>\n          {/* right part */}\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your decision...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.responseMsg}\n                onChange={(e) => {\n                  props.setResponseMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setResponseMsg(\"\");\n                  props.setActionTaken(null);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() =>\n                  window.confirm(\n                    `Are you sure you want to ${\n                      props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                        ? \"approve\"\n                        : \"rejected\"\n                    } this document?`\n                  ) && handleVerify()\n                }\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n          {/* end right part */}\n        </section>\n      )}\n      {/* END FOOTER RESPONSE ========================================== */}\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n}: StoreState): {\n  auth: Auth;\n} => {\n  return {\n    auth: auth,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  evaluateClaim,\n  verifyDocument,\n  PushPopupAlert,\n})(AdminClaimDocView);\n","import React, { Component } from \"react\";\nimport { MdArrowBack, MdInfoOutline } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Auth, loadCourses, PushPopupAlert } from \"../../../actions\";\nimport {\n  getAllClaims,\n  getAllApplications,\n  getClaimReasons,\n  getAllAnswers,\n} from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport { getPositions } from \"../../../actions/settings\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport TableLoading from \"../../../components/Loading/TableLoading\";\nimport { SideNavigation } from \"../../../components/Navigation/SideNavigation\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  SessionPlanInterface,\n  PositionAPI,\n  allClaimApplicationInterface,\n  CandidateClaimInterface,\n  PlansTypeKeys,\n  ClaimDecisionStatus,\n  ClaimTypesInterface,\n  course,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { UserDocumentsInterface } from \"../../../shared/interfaces\";\nimport { getClaimById, whichClaimStatus, whichClaimType } from \"../Candidate\";\nimport { getCourseById, getCourseIdBySheetId } from \"../Candidate/FormExamList\";\nimport ClaimHeaderTitle from \"../ClaimHeaderTitle\";\nimport AdminClaimAppView from \"./AdminClaimAppView\";\nimport AdminClaimDocView from \"./AdminClaimDocView\";\nimport AdminClaimExamView from \"./AdminClaimExamView\";\nimport AdminFilterByType, {\n  filterClaimsByClaimType,\n} from \"./AdminFilterByType\";\n\n// export const getUserDocuments = (\n//   userList: UserInterface[],\n//   user_id: String\n// ): { user: UserInterface; document: UserDocumentsInterface[] } | null => {\n//   const thisUser = userList.find((item) => item.user_id === user_id);\n//   if (thisUser) {\n//     const thisDoc = thisUser.details.filter(\n//       (item) => item.validation_status !== \"waiting\"\n//     );\n//     return { user: thisUser, document: thisDoc };\n//   }\n//   return null;\n// };\n\nexport const adminDisplayClaimTitle = (\n  documentCategories: DocumentReducerInterface,\n  candidateDocuments: UserDocumentsInterface[],\n  thisClaim: CandidateClaimInterface\n): string => {\n  let result: string = \"\";\n\n  // CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n  if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n    let thisDoc = candidateDocuments.find(\n      (item) => item.doc_id === thisClaim.claiming_on_id\n    );\n    result = thisDoc\n      ? AdminClaimGetDocTitle(documentCategories, thisDoc).main\n      : \"Document not found\";\n  }\n  // END CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n\n  return result;\n};\n\nexport const AdminClaimGetDocTitle = (\n  documentCategories: DocumentReducerInterface,\n  doc: UserDocumentsInterface\n): { category: string; sub_category: string; field: string; main: string } => {\n  let DocCategory: string = \"\",\n    DocSubCategory: string = \"\",\n    DocField: string = \"\",\n    DocTitle: string = \"\";\n  if (\n    doc.sub_category_id &&\n    doc.sub_category_id.length > 0 &&\n    documentCategories.documentSubCategory\n  ) {\n    DocTitle = documentCategories.documentSubCategory.filter(\n      (c) => c.user_detail_subcategory_id === doc.sub_category_id\n    )[0].title;\n    DocSubCategory = DocTitle;\n  } else if (\n    doc.category_id.length > 0 &&\n    documentCategories.documentCategory\n  ) {\n    DocTitle = documentCategories.documentCategory.filter(\n      (c) => c.user_detail_category_id === doc.category_id\n    )[0].title;\n    DocCategory = DocTitle;\n  }\n  if (\n    doc.category_subcategory_data.length > 0 &&\n    documentCategories.documentFields\n  ) {\n    DocField = documentCategories.documentFields.filter(\n      (c) => c._id === doc.category_subcategory_data\n    )[0].title;\n    DocTitle += \" in \" + DocField;\n  }\n\n  return {\n    category: DocCategory,\n    sub_category: DocSubCategory,\n    field: DocField,\n    main: DocTitle,\n  };\n};\n\nexport const getApplicationById = (\n  allApplications: allClaimApplicationInterface[] | null,\n  systemPositions: PositionAPI[] | null,\n  application_id: String\n): {\n  application: allClaimApplicationInterface;\n  position: PositionAPI;\n} | null => {\n  if (allApplications) {\n    let thisApplication = allApplications.find(\n      (item) => item._id === application_id\n    );\n    if (thisApplication && systemPositions) {\n      let thisPosition = systemPositions.find(\n        (item) => item.position_id === thisApplication!.position\n      );\n      if (thisPosition) {\n        return { application: thisApplication, position: thisPosition };\n      }\n    }\n  }\n  return null;\n};\n\ntype AppProps = {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  systemPositions: PositionAPI[] | null;\n  courses: course[] | null;\n  loadCourses: Function;\n  getPositions: Function;\n  getClaimReasons: Function;\n  getAllApplications: Function;\n  getAllClaims: Function;\n  getAllAnswers: Function;\n  GetAllSessionPlans: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  verifyAllDocument: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype AppState = {\n  loading: boolean;\n  loadingData: boolean;\n  thisPeriod: SessionPlanInterface | null;\n  viewClaim: boolean;\n  periodChanged: boolean;\n  claimId: string | null;\n  claimType: string | null;\n  candidateId: string | null;\n\n  // FOR FORM ================\n  viewImage: boolean;\n  loadingRequest: boolean;\n  actionTaken: ClaimDecisionStatus | null;\n  responseMsg: string;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n};\n\nclass Index extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingData: false,\n      thisPeriod: null,\n      viewClaim: false,\n      periodChanged: false,\n      claimId: null,\n      claimType: null,\n      candidateId: null,\n\n      // FOR FORM ================\n      viewImage: false,\n      loadingRequest: false,\n      actionTaken: null,\n      responseMsg: \"\",\n      formError: null,\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingData = (value: boolean) => {\n    this.setState({ loadingData: value });\n  };\n\n  setPeriodChanged = (value: boolean) => {\n    this.setState({ periodChanged: value });\n  };\n\n  setThisPeriod = (value: SessionPlanInterface | null) => {\n    this.setState({ thisPeriod: value });\n  };\n\n  setViewClaim = (value: boolean) => {\n    this.setState({ viewClaim: value });\n  };\n\n  // ------------------------------\n  setClaimId = (value: string | null) => {\n    this.setState({ claimId: value });\n  };\n  setClaimType = (value: string | null) => {\n    this.setState({ claimType: value });\n  };\n  setCandidateId = (value: string | null) => {\n    this.setState({ candidateId: value });\n  };\n  setViewImage = (value: boolean) => {\n    this.setState({ viewImage: value });\n  };\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n\n  setActionTaken = (value: ClaimDecisionStatus | null) => {\n    this.setState({ actionTaken: value });\n  };\n  setResponseMsg = (value: string) => {\n    this.setState({ responseMsg: value });\n  };\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n\n  setDefaultSession = (sessions: SessionPlanInterface[]) => {\n    // SETTING ACTIVE SESSION ==========================\n    if (this.state.thisPeriod === null) {\n      let thisSession = sessions.find((item) => item.is_active === true);\n      this.setThisPeriod(thisSession ? thisSession : sessions[0]);\n      this.loadsAllClaims(thisSession ? thisSession : sessions[0]);\n      this.loadsApplications(thisSession ? thisSession : sessions[0]);\n      this.loadsAlAnswers(thisSession ? thisSession : sessions[0]);\n    }\n  };\n\n  loadsAllClaims = (thisSession: SessionPlanInterface) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (this.props.claiming.allClaims === null) {\n      this.props.getAllClaims(\n        2,\n        thisSession.session_plan_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    }\n  };\n\n  loadsApplications = (thisSession: SessionPlanInterface) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (this.props.claiming.allApplications === null) {\n      this.props.getAllApplications(\n        thisSession.session_plan_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    }\n  };\n\n  loadsAlAnswers = (thisSession: SessionPlanInterface) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (this.props.claiming.allAnswer === null) {\n      this.props.getAllAnswers(\n        thisSession.session_plan_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    }\n  };\n\n  componentDidMount = () => {\n    // LOADING APPLICATION SESSION ====================================\n    if (this.props.application_sessions === null) {\n      this.props.GetAllSessionPlans(\n        (status: boolean, msg: string, data?: SessionPlanInterface[]) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data && data.length > 0) {\n              this.setDefaultSession(data);\n            }\n          }\n        }\n      );\n    } else if (this.props.application_sessions.length > 0) {\n      this.setDefaultSession(this.props.application_sessions);\n    }\n\n    // LOADING DOCUMENT CATEGORIES ==========================\n    if (!this.props.documentReducer.documentCategory) {\n      this.props.getDocumentCategory();\n      this.setLoading(false);\n    }\n\n    // LOADING DOCUMENT CLARIFICATIONS ==========================\n    if (!this.props.documentReducer.documentSubCategory) {\n      this.props.getDocumentSubCategory();\n      this.setLoading(false);\n    }\n\n    // LOADING DOCUMENT FIELDS ==========================\n    if (!this.props.documentReducer.documentFields) {\n      this.props.getDocumentFields();\n      this.setLoading(false);\n    }\n\n    if (this.props.systemPositions === null) {\n      this.props.getPositions((status: boolean, msg: string) => {\n        this.setLoading(status);\n        console.log({ status: status, msg: msg });\n        if (msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n\n    if (this.props.claiming.claimReasons === null) {\n      this.props.getClaimReasons((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (!status) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n\n    if (\n      this.props.courses === null ||\n      (this.props.courses.length === 0 && this.state.loading)\n    ) {\n      this.props.loadCourses(this.setLoading);\n      this.setLoading(false);\n    } else {\n      this.setLoading(false);\n    }\n  };\n\n  displayClaimTitle = (\n    thisClaim: CandidateClaimInterface\n  ): string | JSX.Element => {\n    let result: string = thisClaim.claiming_on_id;\n    if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      let thisDocs = thisClaim.userDetails.details.filter(\n        (item) => item.validation_status !== \"waiting\"\n      );\n      result =\n        thisDocs.length > 0\n          ? adminDisplayClaimTitle(\n              this.props.documentReducer,\n              thisDocs,\n              thisClaim\n            )\n          : \"Document not found\";\n    }\n    if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n      if (this.props.claiming.allApplications) {\n        let thisApplication = this.props.claiming.allApplications.find(\n          (item) => item._id === thisClaim.claiming_on_id\n        );\n        if (\n          thisApplication &&\n          this.props.claiming.allApplications &&\n          this.props.systemPositions\n        ) {\n          let thisPosition = this.props.systemPositions.find(\n            (item) => item.position_id === thisApplication!.position\n          );\n          if (thisPosition) {\n            result = thisPosition.position_title;\n          } else {\n            result = \"Application not found\";\n          }\n        }\n      }\n    }\n\n    if (\n      thisClaim.type_key === PlansTypeKeys.EXAMINATION &&\n      this.props.courses &&\n      this.props.claiming.allAnswer\n    ) {\n      let thisAnswer = getCourseIdBySheetId(\n        this.props.claiming.allAnswer,\n        thisClaim.claiming_on_id\n      );\n      if (thisAnswer && getCourseById(this.props.courses, thisAnswer.course)) {\n        result =\n          \"Exam of \" +\n          getCourseById(this.props.courses, thisAnswer.course)!.course_name;\n      } else {\n        result = \"Unknown exam\";\n      }\n    }\n\n    return result;\n  };\n\n  onPeriodChange = (period_id: string) => {\n    this.setPeriodChanged(true);\n    this.props.getAllClaims(2, period_id, (status: boolean, msg: string) => {\n      !status && this.setPeriodChanged(false);\n      this.setLoadingData(status);\n      if (status === false && msg.length) {\n        this.props.PushPopupAlert({\n          title: msg,\n          theme: PopupAlertTheme.danger,\n        });\n      }\n    });\n  };\n\n  render() {\n    if (this.props.application_sessions === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    if (this.props.application_sessions.length === 0) {\n      return (\n        <div className=\"bg-yellow-100 rounded flex flex-col items-center justify-center p-6 my-8 text-yellow-900 border border-yellow-900\">\n          <MdInfoOutline className=\"text-6xl md:text-9xl\" />\n          <div className=\"text-center flex flex-col\">\n            <span className=\"text-2xl md:text-4xl font-extrabold\">\n              No active session\n            </span>\n            <span className=\"text-lg\">\n              Please Wait for the system to publish the sessions or contact the\n              administrator\n            </span>\n          </div>\n        </div>\n      );\n    }\n\n    if (this.props.claiming.allClaims === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {/* SIDE NAVIGATION */}\n        {!this.state.viewClaim && (\n          <SideNavigation>\n            {/* FILTER SECTION */}\n            <AdminFilterByType loadingClaims={this.state.loadingData} />\n            {/* END FILTER SECTION */}\n          </SideNavigation>\n        )}\n        {/* END SIDE NAVIGATION */}\n\n        {/* 00000000000000000000000000000000000 */}\n\n        {/* CLAIM TITLE ===================================== */}\n        {!this.state.viewClaim && (\n          <ClaimHeaderTitle\n            headerTitle={`${\n              this.props.claiming.selectedClaimType === \"all\"\n                ? \"All\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION\n                ? \"Documents\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.APPLICATION\n                ? \"Applications\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.EXAMINATION\n                ? \"Exam\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.MARKS_PUBLICATION\n                ? \"Marks publication\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.PLACEMENT_TRANSFER\n                ? \"Placements\"\n                : \"\"\n            } Claiming`}\n            loading={this.state.loadingData}\n            loadingSession={this.state.loading}\n            thisPeriod={this.state.thisPeriod}\n            setThisPeriod={this.setThisPeriod}\n            setLoadingSession={this.setLoadingData}\n            application_sessions={this.props.application_sessions}\n            onPeriodChange={this.onPeriodChange}\n            periodChanged={this.state.periodChanged}\n          />\n        )}\n        {/* END CLAIM TITLE ===================================== */}\n\n        {/* 00000000000000000000000000000000000 */}\n\n        {/* CLAIM CONTENT LIST ===================================== */}\n        {!this.state.viewClaim && (\n          <section className=\"bg-white w-full p-1\">\n            <table className=\"w-full shadow\" id=\"report_content\">\n              <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                <tr>\n                  <td className=\"px-2 py-2\">#</td>\n                  <td className=\"px-2 py-2\">Applicant names</td>\n                  <td className=\"px-2 py-2\">Claim title</td>\n                  {this.props.claiming.selectedClaimType === \"all\" && (\n                    <td className=\"px-2 py-2\">Claim type</td>\n                  )}\n                  <td className=\"px-2 py-2\">Claim status</td>\n                  <td className=\"px-2 py-2\"></td>\n                </tr>\n              </thead>\n              <tbody>\n                {!this.props.claiming.allClaims ||\n                !this.props.claiming.claimTypes ||\n                !this.props.claiming.allApplications ||\n                !this.props.systemPositions ||\n                this.state.loadingData ? (\n                  <TableLoading\n                    cols={\n                      this.props.claiming.selectedClaimType === \"all\" ? 6 : 5\n                    }\n                  />\n                ) : filterClaimsByClaimType(\n                    this.props.claiming.allClaims,\n                    this.props.claiming.selectedClaimType\n                  ).length <= 0 ? (\n                  <tr\n                    className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                    key=\"key3201\"\n                  >\n                    <td className=\"px-3 py-1\" colSpan={6}>\n                      <NoResult\n                        theme={NoResultThemes.Light}\n                        value={\"No claim found!\"}\n                      />\n                    </td>\n                  </tr>\n                ) : (\n                  filterClaimsByClaimType(\n                    this.props.claiming.allClaims,\n                    this.props.claiming.selectedClaimType\n                  ).map((claim, index) => (\n                    <tr\n                      className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                      key={index + claim._id}\n                      onClick={() => {\n                        this.setViewClaim(true);\n                        this.setClaimId(claim._id);\n                        this.setCandidateId(claim.user);\n                        this.setClaimType(\n                          whichClaimType(claim) ? whichClaimType(claim)! : null\n                        );\n                      }}\n                    >\n                      <td className=\"px-3 py-1\">{index + 1}</td>\n                      <td className=\"px-3 py-1 whitespace-nowrap\">\n                        {claim.userDetails.user_info.fname +\n                          \" \" +\n                          claim.userDetails.user_info.lname}\n                      </td>\n                      <td className=\"px-3 py-1 whitespace-nowrap\">\n                        {this.displayClaimTitle(claim)}\n                      </td>\n                      {this.props.claiming.selectedClaimType === \"all\" && (\n                        <td className=\"px-3 py-1 whitespace-nowrap\">\n                          {whichClaimType(claim)\n                            ? capitalizeFirstLetter(whichClaimType(claim)!)\n                            : \"-\"}\n                        </td>\n                      )}\n                      <td className=\"px-3 py-1 whitespace-nowrap\">\n                        <span\n                          className={`inline-block rounded-full duration-300 text-xs font-semibold px-3 py-1 ${\n                            whichClaimStatus(claim).classes\n                          }`}\n                        >\n                          {whichClaimStatus(claim).status}\n                        </span>\n                      </td>\n                      <td className=\"px-3 py-1 text-center whitespace-nowrap\">\n                        <button className=\"btn bg-blue-500 text-white group-hover:bg-blue-600\">\n                          View\n                        </button>\n                      </td>\n                    </tr>\n                  ))\n                )}\n              </tbody>\n            </table>\n          </section>\n        )}\n        {/* END CLAIM CONTENT LIST ===================================== */}\n\n        {/* 00000000000000000000000000000000000 */}\n\n        {/* view claim */}\n        {this.state.viewClaim &&\n          this.state.candidateId &&\n          this.props.claiming.allClaims &&\n          this.state.claimId &&\n          getClaimById(this.props.claiming.allClaims, this.state.claimId) &&\n          this.props.claiming.claimTypes && (\n            <section className=\"bg-white w-full p-1 my-4\">\n              {/* VIEW CLAIM HEADER =============================== */}\n              <section className=\"flex items-center gap-2 py-2 border-b\">\n                <button\n                  className={`ml-3 bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n                    this.state.loadingRequest\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } animate__animated animate__fadeIn`}\n                  disabled={this.state.loadingRequest}\n                  onClick={() => {\n                    this.setViewClaim(false);\n                    this.setViewImage(true);\n                    this.setLoadingRequest(false);\n                    this.setActionTaken(null);\n                    this.setResponseMsg(\"\");\n                    this.setFormError(null);\n                  }}\n                >\n                  <MdArrowBack className=\"w-7 h-7\" />\n                </button>\n                <div className={`text-gray-600 font-extrabold text-2xl px-2`}>\n                  Viewing claim\n                </div>\n              </section>\n              {/* END VIEW CLAIM HEADER =============================== */}\n\n              <section className=\"my-2\">\n                {/* FOR DOCUMENT ========================== */}\n                {this.state.claimType &&\n                  this.state.claimType.toLocaleLowerCase() ===\n                    ClaimTypesInterface.DOCUMENT.toLocaleLowerCase() && (\n                    <div>\n                      {getClaimById(\n                        this.props.claiming.allClaims!,\n                        this.state.claimId!\n                      )!.userDetails.details.find(\n                        (item) =>\n                          item.doc_id ===\n                          getClaimById(\n                            this.props.claiming.allClaims!,\n                            this.state.claimId!\n                          )!.claiming_on_id\n                      ) ? (\n                        <AdminClaimDocView\n                          thisDoc={\n                            getClaimById(\n                              this.props.claiming.allClaims!,\n                              this.state.claimId!\n                            )!.userDetails.details.find(\n                              (item) =>\n                                item.doc_id ===\n                                getClaimById(\n                                  this.props.claiming.allClaims!,\n                                  this.state.claimId!\n                                )!.claiming_on_id\n                            )!\n                          }\n                          documentCategories={this.props.documentReducer}\n                          thisClaim={\n                            getClaimById(\n                              this.props.claiming.allClaims,\n                              this.state.claimId\n                            )!\n                          }\n                          claimTypes={this.props.claiming.claimTypes}\n                          viewImage={this.state.viewImage}\n                          setViewImage={this.setViewImage}\n                          loadingRequest={this.state.loadingRequest}\n                          setLoadingRequest={this.setLoadingRequest}\n                          actionTaken={this.state.actionTaken}\n                          setActionTaken={this.setActionTaken}\n                          responseMsg={this.state.responseMsg}\n                          setResponseMsg={this.setResponseMsg}\n                          formError={this.state.formError}\n                          setFormError={this.setFormError}\n                          candidateId={this.state.candidateId}\n                          claimReasons={this.props.claiming.claimReasons}\n                        />\n                      ) : (\n                        <NoResult\n                          theme={NoResultThemes.Dark}\n                          value={\"Document not found\"}\n                        />\n                      )}\n                    </div>\n                  )}\n\n                {/* FOR APPLICATION ========================== */}\n                {this.state.claimType &&\n                  this.state.claimType.toLocaleLowerCase() ===\n                    ClaimTypesInterface.APPLICATION.toLocaleLowerCase() && (\n                    <div>\n                      {getApplicationById(\n                        this.props.claiming.allApplications,\n                        this.props.systemPositions,\n                        getClaimById(\n                          this.props.claiming.allClaims,\n                          this.state.claimId\n                        )!.claiming_on_id\n                      ) ? (\n                        this.props.systemPositions && (\n                          <AdminClaimAppView\n                            thisApplication={\n                              getApplicationById(\n                                this.props.claiming.allApplications,\n                                this.props.systemPositions,\n                                getClaimById(\n                                  this.props.claiming.allClaims,\n                                  this.state.claimId\n                                )!.claiming_on_id\n                              )!.application\n                            }\n                            thisPosition={\n                              getApplicationById(\n                                this.props.claiming.allApplications,\n                                this.props.systemPositions,\n                                getClaimById(\n                                  this.props.claiming.allClaims,\n                                  this.state.claimId\n                                )!.claiming_on_id\n                              )!.position\n                            }\n                            documentCategories={this.props.documentReducer}\n                            thisClaim={\n                              getClaimById(\n                                this.props.claiming.allClaims,\n                                this.state.claimId\n                              )!\n                            }\n                            claimTypes={this.props.claiming.claimTypes}\n                            systemPositions={this.props.systemPositions}\n                            claimReasons={this.props.claiming.claimReasons}\n                          />\n                        )\n                      ) : (\n                        <NoResult\n                          theme={NoResultThemes.Dark}\n                          value={\"Application not found\"}\n                        />\n                      )}\n                    </div>\n                  )}\n\n                {/* FOR EXAMINATION ========================== */}\n                {this.state.claimType &&\n                  this.state.claimType.toLocaleLowerCase() ===\n                    ClaimTypesInterface.EXAMINATION.toLocaleLowerCase() && (\n                    <div>\n                      {this.props.claiming.allAnswer &&\n                      this.props.courses &&\n                      getCourseIdBySheetId(\n                        this.props.claiming.allAnswer,\n                        getClaimById(\n                          this.props.claiming.allClaims,\n                          this.state.claimId\n                        )!.claiming_on_id\n                      ) &&\n                      getCourseById(\n                        this.props.courses,\n                        getCourseIdBySheetId(\n                          this.props.claiming.allAnswer,\n                          getClaimById(\n                            this.props.claiming.allClaims,\n                            this.state.claimId\n                          )!.claiming_on_id\n                        )!.course\n                      ) ? (\n                        <AdminClaimExamView\n                          thisExamSheet={\n                            getCourseIdBySheetId(\n                              this.props.claiming.allAnswer,\n                              getClaimById(\n                                this.props.claiming.allClaims,\n                                this.state.claimId\n                              )!.claiming_on_id\n                            )!\n                          }\n                          thisExam={\n                            getCourseById(\n                              this.props.courses,\n                              getCourseIdBySheetId(\n                                this.props.claiming.allAnswer,\n                                getClaimById(\n                                  this.props.claiming.allClaims,\n                                  this.state.claimId\n                                )!.claiming_on_id\n                              )!.course\n                            )!\n                          }\n                          thisClaim={\n                            getClaimById(\n                              this.props.claiming.allClaims,\n                              this.state.claimId\n                            )!\n                          }\n                          claimTypes={this.props.claiming.claimTypes}\n                          claimReasons={this.props.claiming.claimReasons}\n                        />\n                      ) : (\n                        <NoResult\n                          theme={NoResultThemes.Dark}\n                          value={\"Application not found\"}\n                        />\n                      )}\n                    </div>\n                  )}\n              </section>\n            </section>\n          )}\n        {/* end view claim */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system_settings,\n  sessionPlan,\n  claiming,\n  document,\n  course,\n}: StoreState): {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  systemPositions: PositionAPI[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  courses: course[] | null;\n} => {\n  return {\n    auth: auth,\n    application_sessions: sessionPlan.allSessionPlans,\n    systemPositions: system_settings.systemPositions,\n    claiming,\n    documentReducer: document,\n    courses: course.courses,\n  };\n};\n\nexport const AdminClaim = connect(mapStateToProps, {\n  getAllClaims,\n  loadCourses,\n  getAllAnswers,\n  getClaimReasons,\n  getAllApplications,\n  GetAllSessionPlans,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  getPositions,\n  PushPopupAlert,\n})(Index);\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { BiExport, BiSort } from \"react-icons/bi\";\nimport { FiEdit } from \"react-icons/fi\";\nimport { ImFilesEmpty } from \"react-icons/im\";\nimport {\n  MdCheckBox,\n  MdCheckBoxOutlineBlank,\n  MdHistory,\n  MdRadioButtonChecked,\n  MdRadioButtonUnchecked,\n} from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadCourses,\n  loadEducationCategories,\n  PushPopupAlert,\n  schoolLevelsStoreInterface,\n} from \"../../../actions\";\nimport {\n  getAllClaims,\n  getAllApplications,\n  setSelectedClaimType,\n  GetClaimingTypes,\n  getAllAnswers,\n} from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { getPositions } from \"../../../actions/settings\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport {\n  generatePDF,\n  reportSettingsInterface,\n} from \"../../../components/DownloadPDF/rest\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport {\n  SideNavigation,\n  MainItem,\n} from \"../../../components/Navigation/SideNavigation\";\nimport {\n  CandidateClaimInterface,\n  claimReportContentInterface,\n  claimReportContentKeyInterface,\n  ClaimToPrintInterface,\n} from \"../../../interfaces/claimings\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { PositionAPI } from \"../../../interfaces/position\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport ExportToExcel from \"../../../utils/ExportToExcel\";\nimport { DATE, sortThisArray } from \"../../../utils/functions\";\nimport { adminDisplayClaimTitle } from \"../../Claimings/Admin\";\nimport { ClaimTypesEnum, whichClaimType } from \"../../Claimings/Candidate\";\nimport TableLoading from \"../../../components/Loading/TableLoading\";\nimport {\n  education_category,\n  PlansTypeKeys,\n  SessionPlanInterface,\n  course,\n} from \"../../../interfaces\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport ChooseSession from \"../../SessionSettings/ChooseSession\";\nimport {\n  getCourseIdBySheetId,\n  getCourseById,\n} from \"../../Claimings/Candidate/FormExamList\";\nimport NoSession from \"../../SessionSettings/NoSession\";\n\nexport const reportClaimType = (\n  type: PlansTypeKeys | \"all\"\n): ClaimTypesEnum | \"all\" => {\n  let result: ClaimTypesEnum | \"all\" = \"all\";\n  switch (type) {\n    case PlansTypeKeys.APPLICATION:\n      result = ClaimTypesEnum.application;\n      break;\n    case PlansTypeKeys.DOCUMENT_VALIDATION:\n      result = ClaimTypesEnum.document;\n      break;\n    case PlansTypeKeys.EXAMINATION:\n      result = ClaimTypesEnum.exam;\n      break;\n    case PlansTypeKeys.MARKS_PUBLICATION:\n      result = ClaimTypesEnum.marks_publication;\n      break;\n    case PlansTypeKeys.PLACEMENT_TRANSFER:\n      result = ClaimTypesEnum.placement;\n      break;\n    default:\n      result = \"all\";\n      break;\n  }\n\n  return result;\n};\n\nconst searchData = (\n  objList: ClaimToPrintInterface[],\n  text: string\n): ClaimToPrintInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (\n        prop === \"names\" ||\n        prop === \"gender\" ||\n        prop === \"national_id\" ||\n        prop === \"phone\" ||\n        prop === \"email\" ||\n        prop === \"claim_title\" ||\n        prop === \"claim_type\" ||\n        prop === \"claim_level\" ||\n        prop === \"education_category\" ||\n        prop === \"claim_session\" ||\n        prop === \"date\" ||\n        prop === \"decision\"\n      ) {\n        if (product[prop]) {\n          flag =\n            product[prop]!.toString()\n              .toLowerCase()\n              .indexOf(text.toLowerCase()) > -1;\n        }\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n};\n\nconst defaultReportContent: claimReportContentInterface[] = [\n  {\n    key: claimReportContentKeyInterface.names,\n    title: \"Applicant Names\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.national_id,\n    title: \"National ID\",\n    status: true,\n  },\n  { key: claimReportContentKeyInterface.gender, title: \"Gender\", status: true },\n  { key: claimReportContentKeyInterface.phone, title: \"Phone\", status: true },\n  {\n    key: claimReportContentKeyInterface.claim_session,\n    title: \"Claim Session\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.education_category,\n    title: \"Education Institute\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.date,\n    title: \"Claim Date\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.decision,\n    title: \"Decision\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.claim_title,\n    title: \"Claim Title\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.claim_type,\n    title: \"Claim Type\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.claim_level,\n    title: \"Claim Level\",\n    status: true,\n  },\n];\n\ntype AppProps = {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  systemPositions: PositionAPI[] | null;\n  courses: course[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  loadCourses: Function;\n  getAllAnswers: Function;\n  setSelectedClaimType: Function;\n  getPositions: Function;\n  getAllClaims: Function;\n  GetClaimingTypes: Function;\n  getAllApplications: Function;\n  GetAllSessionPlans: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\nconst _ClaimingReport: React.FC<AppProps> = (props) => {\n  const [thisPeriod, setThisPeriod] = useState<SessionPlanInterface | null>(\n    null\n  );\n  const [thisLevel, setThisLevel] = useState<number | \"all\">(\"all\");\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingSession, setLoadingSession] = useState<boolean>(true);\n  const [periodChanged, setPeriodChanged] = useState<boolean>(false);\n  const [loadingPosition, setLoadingPosition] = useState<boolean>(true);\n  const [loadingApplications, setLoadingApplications] = useState<boolean>(true);\n  const [loadingClaims, setLoadingClaims] = useState<boolean>(true);\n  const [loadingCourses, setLoadingCourses] = useState<boolean>(true);\n  const [loadingDocuments, setLoadingDocuments] = useState<boolean>(true);\n  const [loadingInstitutes, setLoadingInstitutes] = useState<boolean>(true);\n  const [loadingClarifications, setLoadingClarifications] =\n    useState<boolean>(true);\n  const [loadingFields, setLoadingFields] = useState<boolean>(true);\n  const [downloading, setDownloading] = useState<boolean>(false);\n  const [claimToPrint, setClaimToPrint] = useState<\n    ClaimToPrintInterface[] | null\n  >();\n\n  const [sortProperty, setSortProperty] = useState<string>(\"\");\n  const [isSorted, setIsSorted] = useState<boolean>(false);\n  const [sortOrder, setSortOrder] = useState<\"ASC\" | \"DESC\">(\"ASC\");\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const [generateReportModal, setGenerateReportModal] = useState<{\n    reportType: \"EXCEL\" | \"PDF\";\n    status: boolean;\n  } | null>(null);\n  const [reportTitle, setReportTitle] = useState<string>(\"\");\n  const [reportContent, setReportContent] =\n    useState<claimReportContentInterface[]>(defaultReportContent);\n  const [selectAll, setSelectAll] = useState<boolean>(true);\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [selectPeriod, setSelectPeriod] = useState<boolean>(false);\n  const [thisEducation, setThisEducation] = useState<\n    education_category | \"all\"\n  >(\"all\");\n\n  useEffect(() => {\n    // LOADING EDUCATION CATEGORY =================================\n    if (\n      props.schoolLevels.education_categories === null ||\n      props.schoolLevels.education_categories.length === 0\n    ) {\n      props.loadEducationCategories(setLoadingInstitutes);\n    } else {\n      setLoadingInstitutes(false);\n    }\n    // END LOADING EDUCATION CATEGORY =================================\n    // LOADING CLAIM TYPES ========================================\n    if (props.claiming.claimTypes === null) {\n      props.GetClaimingTypes((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n    // END LOADING CLAIM TYPES ========================================\n    // LOADING APPLICATION SESSION ====================================\n    if (props.application_sessions === null) {\n      props.GetAllSessionPlans((status: boolean, msg: string) => {\n        if (!status) {\n          setLoadingSession(false);\n          setLoading(false);\n          if (msg.length) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    } else if (loadingSession) {\n      setLoading(false);\n      setLoadingSession(false);\n    }\n\n    // SETTING ACTIVE SESSION ==========================\n    if (\n      thisPeriod === null &&\n      !loadingSession &&\n      props.application_sessions &&\n      props.application_sessions.length > 0\n    ) {\n      let thisSession = props.application_sessions.find(\n        (item) => item.is_active === true\n      );\n      setThisPeriod(thisSession ? thisSession : props.application_sessions[0]);\n      if (props.claiming.allAnswer === null) {\n        props.getAllAnswers(\n          thisSession\n            ? thisSession.session_plan_id\n            : props.application_sessions[0].session_plan_id,\n          (status: boolean, msg: string) => {\n            setLoading(status);\n            if (!status && msg.length) {\n              props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          }\n        );\n      }\n    }\n\n    // LOADING DOCUMENT CATEGORIES ==========================\n    if (!props.documentReducer.documentCategory && loadingDocuments) {\n      props.getDocumentCategory();\n      setLoadingDocuments(false);\n    } else if (loadingDocuments) {\n      setLoadingDocuments(false);\n    }\n    // LOADING DOCUMENT CLARIFICATIONS ==========================\n    if (!props.documentReducer.documentSubCategory && loadingClarifications) {\n      props.getDocumentSubCategory();\n      setLoadingClarifications(false);\n    } else if (loadingClarifications) {\n      setLoadingClarifications(false);\n    }\n    // LOADING DOCUMENT FIELDS ==========================\n    if (!props.documentReducer.documentFields && loadingFields) {\n      props.getDocumentFields();\n      setLoadingFields(false);\n    } else if (loadingFields) {\n      setLoadingFields(false);\n    }\n\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (props.claiming.allClaims === null && thisPeriod !== null) {\n      props.getAllClaims(\n        2,\n        thisPeriod.session_plan_id,\n        (status: boolean, msg: string) => {\n          !status && setLoadingClaims(status);\n          if (status === false && msg.length) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    } else if (thisPeriod && loadingClaims) {\n      setLoadingClaims(false);\n    }\n\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (props.claiming.allApplications === null && thisPeriod !== null) {\n      props.getAllApplications(\n        thisPeriod.session_plan_id,\n        (status: boolean, msg: string) => {\n          !status && setLoadingApplications(status);\n          if (status === false && msg.length) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    } else if (thisPeriod && loadingApplications) {\n      setLoadingApplications(false);\n    }\n\n    if (props.systemPositions === null) {\n      props.getPositions((status: boolean, msg: string) => {\n        setLoadingPosition(status);\n        console.log({ status: status, msg: msg });\n        if (msg.length) {\n          props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    } else if (loadingPosition) {\n      setLoadingPosition(false);\n    }\n\n    // LOADING COURSE ====================================\n    if (\n      props.courses === null ||\n      (props.courses.length === 0 && loadingCourses)\n    ) {\n      props.loadCourses(setLoadingCourses);\n    } else if (loadingCourses) {\n      setLoadingCourses(false);\n    }\n  }, [\n    loadingApplications,\n    loadingClaims,\n    loadingClarifications,\n    loadingCourses,\n    loadingDocuments,\n    loadingFields,\n    loadingPosition,\n    loadingSession,\n    props,\n    thisPeriod,\n  ]);\n\n  if (\n    loading === true ||\n    props.courses === null ||\n    props.systemPositions === null\n  ) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading Data...\n      </div>\n    );\n  }\n\n  if (props.application_sessions && props.application_sessions.length === 0) {\n    return <NoSession />;\n  }\n\n  const displayClaimTitle = (thisClaim: CandidateClaimInterface): string => {\n    let result: string = thisClaim.claiming_on_id;\n    if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      result =\n        thisClaim.userDetails.details.filter(\n          (item) => item.validation_status !== \"waiting\"\n        ).length > 0\n          ? adminDisplayClaimTitle(\n              props.documentReducer,\n              thisClaim.userDetails.details.filter(\n                (item) => item.validation_status !== \"waiting\"\n              ),\n              thisClaim\n            )\n          : \"Document not found\";\n    }\n    if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n      if (props.claiming.allApplications) {\n        let thisApplication = props.claiming.allApplications.find(\n          (item) => item._id === thisClaim.claiming_on_id\n        );\n        if (\n          thisApplication &&\n          props.claiming.allApplications &&\n          props.systemPositions\n        ) {\n          let thisPosition = props.systemPositions.find(\n            (item) => item.position_id === thisApplication!.position\n          );\n          if (thisPosition) {\n            result = thisPosition.position_title;\n          } else {\n            result = \"Application not found\";\n          }\n        }\n      }\n    }\n\n    if (\n      thisClaim.type_key === PlansTypeKeys.EXAMINATION &&\n      props.courses &&\n      props.claiming.allAnswer\n    ) {\n      let thisAnswer = getCourseIdBySheetId(\n        props.claiming.allAnswer,\n        thisClaim.claiming_on_id\n      );\n      if (thisAnswer && getCourseById(props.courses, thisAnswer.course)) {\n        result =\n          \"Exam of \" +\n          getCourseById(props.courses, thisAnswer.course)!.course_name;\n      } else {\n        result = \"Unknown exam\";\n      }\n    }\n\n    return result;\n  };\n\n  const getClaimInstitute = (\n    thisClaim: CandidateClaimInterface\n  ): string | null => {\n    if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      return null;\n    }\n    if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n      if (props.claiming.allApplications) {\n        let thisApplication = props.claiming.allApplications.find(\n          (item) => item._id === thisClaim.claiming_on_id\n        );\n        if (\n          thisApplication &&\n          props.claiming.allApplications &&\n          props.systemPositions\n        ) {\n          // return thisApplication.\n          let thisPosition = props.systemPositions.find(\n            (item) => item.position_id === thisApplication!.position\n          );\n          if (thisPosition) {\n            return thisPosition.education_institute_id.education_institute_id;\n          }\n        }\n      }\n    }\n\n    return null;\n  };\n\n  const onPeriodChange = (period_id: string) => {\n    setPeriodChanged(true);\n    props.getAllClaims(2, period_id, (status: boolean, msg: string) => {\n      !status && setPeriodChanged(false);\n      if (status === false && msg.length) {\n        props.PushPopupAlert({\n          title: msg,\n          theme: PopupAlertTheme.danger,\n        });\n      }\n    });\n  };\n\n  const isClaimTypeActive = (\n    selectedType: PlansTypeKeys | \"all\",\n    currentType: PlansTypeKeys | \"all\"\n  ): boolean => {\n    if (currentType === \"all\" && selectedType === \"all\") {\n      return true;\n    } else if (currentType !== \"all\" && selectedType !== \"all\") {\n      if (currentType === selectedType) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  const setSort = (thisProperty: string) => {\n    if (sortProperty === thisProperty && sortOrder === \"ASC\") {\n      setSortOrder(\"DESC\");\n    } else {\n      setSortOrder(\"ASC\");\n    }\n    setSortProperty(thisProperty);\n    setIsSorted(true);\n  };\n\n  const ClaimTypes = (\n    claims: ClaimToPrintInterface[]\n  ): {\n    title: string;\n    count: number;\n    type: PlansTypeKeys | \"all\";\n  }[] => {\n    let output: {\n      title: string;\n      count: number;\n      type: PlansTypeKeys | \"all\";\n    }[] = [{ title: \"All types\", count: claims.length, type: \"all\" }];\n\n    Object.values(PlansTypeKeys).forEach((PlansKey) => {\n      if (PlansKey !== PlansTypeKeys.MARKS_PUBLICATION) {\n        output.push({\n          title: capitalizeFirstLetter(reportClaimType(PlansKey)),\n          count:\n            claims.length > 0\n              ? claims.filter(\n                  (itm) => itm.claim_type === reportClaimType(PlansKey)\n                ).length\n              : 0,\n          type: PlansKey,\n        });\n      }\n    });\n\n    return output;\n  };\n\n  const ClaimLevels = (\n    claims: ClaimToPrintInterface[]\n  ): {\n    title: string;\n    count: number;\n    level: number | \"all\";\n  }[] => {\n    let output: {\n        title: string;\n        count: number;\n        level: number | \"all\";\n      }[] = [{ title: \"All levels\", count: claims.length, level: \"all\" }],\n      levels: number[] = [1, 2];\n    for (let i in levels) {\n      output.push({\n        title: \"Level \" + levels[i],\n        count: claims.filter((itm) => itm.claim_level === levels[i]).length,\n        level: levels[i],\n      });\n    }\n    return output;\n  };\n\n  const updateReportContent = (key: claimReportContentKeyInterface) => {\n    let index: number = reportContent.findIndex((item) => item.key === key);\n    let newArray: claimReportContentInterface[] = reportContent;\n    newArray[index].status = !newArray[index].status;\n    setReportContent(newArray);\n    let isSelectAllNeeded = newArray.find((item) => item.status === false);\n    if (isSelectAllNeeded) {\n      setSelectAll(false);\n    } else {\n      setSelectAll(true);\n    }\n\n    // UPDATE APPLICATION LIST FOR UPDATE ==============================\n    updateClaimToPrint();\n  };\n\n  const updateClaimToPrint = () => {\n    // UPDATE REPORT TITLE ========================\n    if (thisPeriod) {\n      let title = \"Claim Report \" + thisPeriod.session_plan_name;\n      // if (thisLevel!==\"all\") {\n      //   title = \"Claim Report - Level \"+thisLevel + thisPeriod.session_plan_name;\n      // }\n      setReportTitle(title);\n    }\n    // UPDATE CONTENT =============================\n    if (props.claiming.allClaims && props.claiming.claimTypes) {\n      let arrayNew: ClaimToPrintInterface[] = [];\n      let n: number = 1;\n      for (const key in props.claiming.allClaims) {\n        if (\n          Object.prototype.hasOwnProperty.call(props.claiming.allClaims, key)\n        ) {\n          for (const keyClaim in props.claiming.allClaims[key].claims) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                props.claiming.allClaims[key].claims,\n                keyClaim\n              )\n            ) {\n              const element = props.claiming.allClaims[key].claims[keyClaim];\n              const thisType = whichClaimType(props.claiming.allClaims[key]);\n              let dataArray: ClaimToPrintInterface = {\n                claim_id: n,\n                names:\n                  props.claiming.allClaims[key].userDetails.user_info.fname +\n                  \" \" +\n                  props.claiming.allClaims[key].userDetails.user_info.lname,\n                gender: props.claiming.allClaims[key].userDetails.user_info.sex\n                  ? \"Male\"\n                  : \"Female\",\n                national_id: props.claiming.allClaims[key].userDetails.n_id!,\n                phone: props.claiming.allClaims[key].userDetails.phone_number,\n                email: props.claiming.allClaims[key].userDetails.email,\n                claim_type: thisType ? thisType : \"\",\n                claim_level: element.level,\n                education_category: \"\",\n                claim_session: thisPeriod ? thisPeriod.session_plan_name : \"\",\n                date: DATE(element.createdAt),\n                decision: element.decision_taken_status\n                  ? element.decision_taken_status\n                  : \"PENDING\",\n                claim_title: displayClaimTitle(props.claiming.allClaims[key]),\n              };\n              for (const key in reportContent) {\n                if (Object.prototype.hasOwnProperty.call(reportContent, key)) {\n                  if (!reportContent[key].status) {\n                    delete dataArray[reportContent[key].key];\n                  }\n                }\n              }\n              arrayNew.push(dataArray);\n              n++;\n            }\n          }\n        }\n      }\n      setClaimToPrint(arrayNew);\n      arrayNew = [];\n      n = 1;\n    }\n  };\n\n  const FC_ClaimData = (\n    allClaims: CandidateClaimInterface[] | null\n  ): ClaimToPrintInterface[] | null => {\n    if (allClaims === null) return null;\n    let arrayNew: ClaimToPrintInterface[] = [];\n    let n: number = 1;\n    // LOOP IN ALL CLAIM ONE BY ONE ###########################\n    for (const key in allClaims) {\n      if (Object.prototype.hasOwnProperty.call(allClaims, key)) {\n        // LOOP IN ALL CLAIM OF ONE FILE ONE BY ONE ===========================\n        for (const keyClaim in allClaims[key].claims) {\n          if (\n            Object.prototype.hasOwnProperty.call(\n              allClaims[key].claims,\n              keyClaim\n            )\n          ) {\n            const element = allClaims[key].claims[keyClaim];\n            const thisType = whichClaimType(allClaims[key]);\n            let dataArray: ClaimToPrintInterface = {\n              claim_id: n,\n              names:\n                allClaims[key].userDetails.user_info.fname +\n                \" \" +\n                allClaims[key].userDetails.user_info.lname,\n              gender: allClaims[key].userDetails.user_info.sex\n                ? \"Male\"\n                : \"Female\",\n              national_id: allClaims[key].userDetails.n_id!,\n              phone: allClaims[key].userDetails.phone_number,\n              email: allClaims[key].userDetails.email,\n              claim_type: thisType ? thisType : \"\",\n              claim_level: element.level,\n              education_category: getClaimInstitute(allClaims[key]),\n              claim_session: thisPeriod ? thisPeriod.session_plan_name : \"\",\n              date: DATE(element.createdAt),\n              decision: element.decision_taken_status\n                ? element.decision_taken_status\n                : \"PENDING\",\n              claim_title: displayClaimTitle(allClaims[key]),\n            };\n            // for (const key in reportContent) {\n            //   if (Object.prototype.hasOwnProperty.call(reportContent, key)) {\n            //     if (!reportContent[key].status) {\n            //       delete dataArray[reportContent[key].key];\n            //     }\n            //   }\n            // }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n      }\n    }\n    return arrayNew;\n  };\n\n  const resetReportContent = (currentState: boolean) => {\n    let newArray: claimReportContentInterface[] = reportContent;\n    for (const key in newArray) {\n      if (isChangeAllowed(newArray[key].key)) {\n        newArray[key].status = !currentState;\n      }\n    }\n\n    setReportContent(newArray);\n    setSelectAll(!currentState);\n    updateClaimToPrint();\n  };\n\n  const isChangeAllowed = (key: claimReportContentKeyInterface): boolean => {\n    if (\n      key === claimReportContentKeyInterface.names ||\n      key === claimReportContentKeyInterface.decision ||\n      key === claimReportContentKeyInterface.claim_session ||\n      key === claimReportContentKeyInterface.claim_type ||\n      key === claimReportContentKeyInterface.date\n    ) {\n      return false;\n    }\n    return true;\n  };\n\n  const FC_GeneratePDF = () => {\n    if (!document.querySelectorAll(\"#report_content tbody tr\").length) {\n      props.PushPopupAlert({\n        title: `Can't generate Report of empty Data`,\n        theme: PopupAlertTheme.warning,\n      });\n      return;\n    }\n\n    if (thisPeriod) {\n      const table: HTMLElement | null =\n        document.getElementById(\"report_content\");\n      const reportSettings: reportSettingsInterface = {\n        doneBy: props.auth.user.fname + \" \" + props.auth.user.lname,\n        title: \"Claim Report\",\n        subjectTitle: \"Claim type\",\n        subject:\n          props.claiming.selectedClaimType === \"all\"\n            ? \"All Types\"\n            : props.claiming.selectedClaimType,\n        period: thisPeriod.session_plan_name,\n        footer: \"Online Recruitment\",\n        institute:\n          thisEducation === \"all\"\n            ? \"All institute\"\n            : thisEducation.education_category_title,\n      };\n      table && generatePDF(reportSettings, table, setDownloading);\n    }\n  };\n\n  const FC_FilterClaims = (\n    allClaims: ClaimToPrintInterface[],\n    claimType: PlansTypeKeys | \"all\",\n    claimLevel: number | \"all\",\n    institute: education_category | \"all\"\n  ): ClaimToPrintInterface[] => {\n    let result: ClaimToPrintInterface[] = allClaims;\n    if (claimType !== \"all\") {\n      result = result.filter((item) => item.claim_type === claimType);\n    }\n    if (claimLevel !== \"all\") {\n      result = result.filter((item) => item.claim_level === claimLevel);\n    }\n\n    if (institute !== \"all\") {\n      result = result.filter(\n        (item) =>\n          item.education_category === null ||\n          item.education_category === institute.education_institute_id\n      );\n    }\n\n    return result;\n  };\n\n  return (\n    <Fragment>\n      <SideNavigation>\n        <div className=\"flex flex-col mb-4\">\n          <span className=\"text-sm text-gray-600 mb-2\">\n            Education categories:\n          </span>\n          {props.schoolLevels.education_categories === null ||\n          loadingInstitutes ? (\n            <Loading />\n          ) : props.schoolLevels.education_categories.length === 0 ? (\n            <span>No result found</span>\n          ) : (\n            <Fragment>\n              <div\n                onClick={() => setThisEducation(\"all\")}\n                className={`border rounded px-2 py-2 mb-2 cursor-pointer ${\n                  thisEducation === \"all\"\n                    ? \"bg-blue-600 text-white hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                    : \"hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                } font-bold flex flex-row items-center gap-2`}\n              >\n                {thisEducation === \"all\" ? (\n                  <MdRadioButtonChecked />\n                ) : (\n                  <MdRadioButtonUnchecked />\n                )}\n                <span>All</span>\n              </div>\n              {props.schoolLevels.education_categories.map((item, i) => (\n                <div\n                  onClick={() => setThisEducation(item)}\n                  key={i + 1}\n                  className={`border rounded px-2 py-2 mb-2 cursor-pointer ${\n                    thisEducation !== \"all\" &&\n                    thisEducation.education_institute_id ===\n                      item.education_institute_id\n                      ? \"bg-blue-600 text-white hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                      : \"hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                  } font-bold flex flex-row items-center gap-2`}\n                >\n                  {thisEducation !== \"all\" &&\n                  thisEducation.education_institute_id ===\n                    item.education_institute_id ? (\n                    <MdRadioButtonChecked />\n                  ) : (\n                    <MdRadioButtonUnchecked />\n                  )}\n                  <span>{item.education_category_title}</span>\n                </div>\n              ))}\n            </Fragment>\n          )}\n        </div>\n        <div className=\"\">\n          <div className=\"text-gray-600 text-sm mb-2\">Selected period:</div>\n          <div\n            onClick={() => setSelectPeriod(true)}\n            className=\"font-bold bg-blue-50 border border-blue-200 rounded py-2 cursor-pointer text-xs px-2 hover:underline  text-blue-600  mb-4 w-full flex flex-row items-center animate__animated animate__zoomIn\"\n          >\n            {thisPeriod !== null\n              ? `${thisPeriod.session_plan_name} - ${thisPeriod.period}`\n              : \"Filter by period\"}\n            <FiEdit className=\"text-3xl text-blue-600\" />\n          </div>\n        </div>\n        <div className=\"pt-1\">\n          <div className=\"text-sm text-gray-700 pb-2 pt-2\">Claim types:</div>\n          {props.claiming.claimTypes === null ||\n          FC_ClaimData(props.claiming.allClaims) === null ? (\n            <Loading />\n          ) : (\n            ClaimTypes(FC_ClaimData(props.claiming.allClaims)!).map(\n              (item, index: number) => (\n                <div\n                  onClick={() =>\n                    props.setSelectedClaimType(reportClaimType(item.type))\n                  }\n                  key={item.title + index}\n                >\n                  <MainItem\n                    title={item.title}\n                    count={item.count}\n                    active={isClaimTypeActive(\n                      props.claiming.selectedClaimType,\n                      item.type\n                    )}\n                  />\n                </div>\n              )\n            )\n          )}\n        </div>\n        <div className=\"pt-1\">\n          <div className=\"text-sm text-gray-700 pb-2 pt-2\">Claim level:</div>\n          {props.claiming.claimTypes === null ||\n          FC_ClaimData(props.claiming.allClaims) === null ? (\n            <Loading />\n          ) : (\n            ClaimLevels(FC_ClaimData(props.claiming.allClaims)!).map(\n              (item, index: number) => (\n                <div\n                  onClick={() => setThisLevel(item.level)}\n                  key={item.title + index}\n                >\n                  <MainItem\n                    title={item.title}\n                    count={item.count}\n                    active={item.level === thisLevel}\n                  />\n                </div>\n              )\n            )\n          )}\n        </div>\n      </SideNavigation>\n      <section>\n        {/* REPORT TITLE ============================================ */}\n        <div className=\"grid md:grid-cols-12\">\n          <div className=\"col-span-8\">\n            <div className=\"mt-4 mx-4 flex flex-col gap-1\">\n              <span className=\"text-3xl font-bold text-gray-700\">\n                Claim report\n              </span>\n            </div>\n          </div>\n          <div className=\"col-span-4\">\n            <div className=\"float-right mt-2\">\n              {props.claiming.allClaims && props.claiming.allClaims.length > 0 && (\n                <div className=\"flex flex-row items-center justify-end font-bold mb-2\">\n                  <BiExport className=\"text-2xl text-gray-500\" />\n                  <span className=\"text-gray-500\">Export as</span>\n                  <button\n                    className=\"px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200\"\n                    disabled={loading}\n                    onClick={() => {\n                      updateClaimToPrint();\n                      setGenerateReportModal({\n                        reportType: \"EXCEL\",\n                        status: true,\n                      });\n                    }}\n                  >\n                    EXCEL\n                  </button>\n                  <button\n                    className={`px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200 ${\n                      downloading && \"cursor-wait\"\n                    }`}\n                    onClick={() => FC_GeneratePDF()}\n                    disabled={loading || downloading}\n                  >\n                    PDF\n                  </button>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n        {/* END REPORT TITLE ============================================ */}\n        <div className=\"bg-white my-4\">\n          <div className=\"w-full px-2 py-2\">\n            <input\n              onChange={(e) => setSearchInput(e.target.value)}\n              type=\"text\"\n              value={searchInput}\n              placeholder=\"Search...\"\n              className=\"w-full bg-gray-100 py-2 px-3 rounded focus:border-gray-800\"\n              disabled={\n                props.claiming.allClaims === null ||\n                props.claiming.claimTypes === null ||\n                FC_ClaimData(props.claiming.allClaims) === null ||\n                periodChanged\n              }\n            />\n          </div>\n          <table className=\"w-full shadow\" id=\"report_content\">\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n              <tr>\n                <td className=\"px-2 py-2\">#</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"names\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Applicant names <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">National ID</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"gender\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Gender <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">Phone</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"claim_title\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Claim Title <BiSort />\n                  </div>\n                </td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"claim_type\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Claim Type <BiSort />\n                  </div>\n                </td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"claim_level\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Claim Level <BiSort />\n                  </div>\n                </td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"decision\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Status <BiSort />\n                  </div>\n                </td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"date\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Date <BiSort />\n                  </div>\n                </td>\n              </tr>\n            </thead>\n            <tbody>\n              {props.claiming.allClaims === null ||\n              props.claiming.claimTypes === null ||\n              periodChanged ? (\n                <TableLoading cols={10} />\n              ) : FC_ClaimData(props.claiming.allClaims) === null ? (\n                <TableLoading cols={10} />\n              ) : FC_FilterClaims(\n                  FC_ClaimData(props.claiming.allClaims)!,\n                  props.claiming.selectedClaimType,\n                  thisLevel,\n                  thisEducation\n                ).length === 0 ? (\n                <tr>\n                  <td colSpan={10} className=\"px-2 py-2\">\n                    <div className=\"flex flex-col text-gray-400 items-center justify-center bg-gray-100 rounded py-10\">\n                      <ImFilesEmpty className=\"text-8xl text-gray-400 mb-2 animate__animated animate__shakeX\" />\n                      <span className=\"text-sm font-bold\">\n                        No result found! Please try to search again\n                      </span>\n                      <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n                        <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                          <li\n                            onClick={() => setSelectPeriod(true)}\n                            className=\"underline text-gray-500 cursor-pointer\"\n                          >\n                            Filter by period\n                          </li>\n                          <li className=\"text-gray-400 italic\">or</li>\n                          <li className=\"text-gray-500\">\n                            Filter by Claim type\n                          </li>\n                          <li className=\"text-gray-400 italic\">or</li>\n                          <li className=\"text-gray-500\">\n                            Filter by Claim Level\n                          </li>\n                        </ul>\n                      </div>\n                    </div>\n                  </td>\n                </tr>\n              ) : (\n                sortThisArray(\n                  isSorted,\n                  searchData(\n                    FC_FilterClaims(\n                      FC_ClaimData(props.claiming.allClaims)!,\n                      props.claiming.selectedClaimType,\n                      thisLevel,\n                      thisEducation\n                    ),\n                    searchInput\n                  ),\n                  sortProperty,\n                  sortOrder\n                ).map((item, i) => (\n                  <tr\n                    key={i + 1}\n                    className={`${\n                      i % 2 !== 0 ? \"bg-gray-100\" : \"bg-white\"\n                    } text-gray-600 hover:bg-blue-100 hover:text-blue-700 border-b border-gray-300 hover:border-blue-500 text-sm`}\n                  >\n                    <td className=\"px-2 py-2\">{i + 1}</td>\n                    <td className=\"px-2 py-2\">{item.names}</td>\n                    <td className=\"px-2 py-2\">{item.national_id}</td>\n                    <td className=\"px-2 py-2\">{item.gender}</td>\n                    <td className=\"px-2 py-2\">{item.phone}</td>\n                    <td className=\"px-2 py-2\">{item.claim_title}</td>\n                    <td className=\"px-2 py-2\">{item.claim_type}</td>\n                    <td className=\"px-2 py-2\">{\"Level \" + item.claim_level}</td>\n                    <td className=\"px-2 py-2\">\n                      {item.decision}\n                      {/* {capitalizeFirstLetter(item.decision)} */}\n                    </td>\n                    <td className=\"px-2 py-2\">{item.date}</td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </section>\n      {/* GENERATE DYNAMIC REPORT CONTENT MODAL */}\n      {generateReportModal !== null && generateReportModal.status === true && (\n        <Modal\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              {/* <IoBriefcase className=\"text-5xl text-gray-500\" /> */}\n              <div className=\"flex flex-col\">\n                <span className=\"font-bold text-2xl text-gray-500\">\n                  Generating Report contents\n                </span>\n                <span className=\"text-sm text-blue-600 font-normal\">\n                  Generating {generateReportModal.reportType} Report\n                </span>\n              </div>\n            </div>\n          }\n          backDrop={true}\n          theme={Themes.default}\n          close={() => setGenerateReportModal(null)}\n          backDropClose={false}\n          widthSizeClass={ModalSize.medium}\n          displayClose={true}\n          padding={{ title: true }}\n        >\n          <div className=\"px-6\">\n            <div className=\"my-2 text-base text-gray-700 sm:text-lg\">\n              <div className=\"flex flex-col\">\n                <label>Title</label>\n                <input\n                  type=\"text\"\n                  className={`text-left input-white w-20 inline-block ${\n                    formError && formError.element === \"report_title\"\n                      ? \"border-red-500\"\n                      : \"border-gray-500\"\n                  } border-2`}\n                  placeholder=\"Sub Category Title\"\n                  value={reportTitle}\n                  onChange={(e) => {\n                    setFormError(null);\n                    setReportTitle(e.target.value);\n                  }}\n                  disabled={loading}\n                />\n                {formError && formError.element === \"report_title\" && (\n                  <span className=\"text-red-500\">{formError.msg}</span>\n                )}\n              </div>\n              <div className=\"flex flex-col mt-2\">\n                <label>Report content</label>\n                <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                  {reportContent.map((item, index) => (\n                    <div\n                      key={index}\n                      className={`flex items-center gap-1 ${\n                        isChangeAllowed(item.key)\n                          ? \"cursor-pointer\"\n                          : \"cursor-not-allowed\"\n                      }`}\n                      onClick={() =>\n                        isChangeAllowed(item.key) &&\n                        updateReportContent(item.key)\n                      }\n                      title={\n                        !isChangeAllowed(item.key)\n                          ? \"Required for every report!\"\n                          : \"\"\n                      }\n                    >\n                      {item.status ? (\n                        <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                      ) : (\n                        <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                      )}\n                      <span>{item.title}</span>\n                    </div>\n                  ))}\n                </div>\n                {formError && formError.element === \"report_content\" && (\n                  <span className=\"text-red-500\">{formError.msg}</span>\n                )}\n              </div>\n            </div>\n            <div className=\"flex justify-between mb-2 mt-4\">\n              <div\n                className={`flex items-center gap-1 cursor-pointer`}\n                onClick={() => resetReportContent(selectAll)}\n              >\n                {selectAll ? (\n                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                ) : (\n                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                )}\n                <span>Select all</span>\n              </div>\n\n              {claimToPrint && !loading && (\n                <ExportToExcel\n                  fileData={claimToPrint}\n                  fileName={reportTitle}\n                  btnName=\"Generate\"\n                />\n              )}\n            </div>\n          </div>\n        </Modal>\n      )}\n      {/* END GENERATE DYNAMIC REPORT CONTENT MODAL */}\n      {selectPeriod && (\n        <Modal\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              <MdHistory className=\"text-5xl text-blue-600\" />\n              <span className=\"flex flex-col\">Choose a period</span>\n            </div>\n          }\n          backDrop={true}\n          theme={Themes.default}\n          close={() => thisPeriod !== null && setSelectPeriod(false)}\n          backDropClose={true}\n          widthSizeClass={ModalSize.extraLarge}\n          displayClose={true}\n          padding={{ title: true }}\n        >\n          <ChooseSession\n            allSession={props.application_sessions}\n            setSelectSession={(value: SessionPlanInterface | \"all\") => {\n              value !== \"all\" && setThisPeriod(value);\n              value !== \"all\" && onPeriodChange(value.session_plan_id);\n              value !== \"all\" && setSelectPeriod(false);\n            }}\n            chooseAll={false}\n            currentSelected={thisPeriod ? thisPeriod : \"all\"}\n          />\n        </Modal>\n      )}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  system_settings,\n  sessionPlan,\n  claiming,\n  document,\n  course,\n  schoolLevels,\n}: StoreState): {\n  auth: Auth;\n  courses: course[] | null;\n  application_sessions: SessionPlanInterface[] | null;\n  systemPositions: PositionAPI[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n} => {\n  return {\n    auth: auth,\n    application_sessions: sessionPlan.allSessionPlans,\n    systemPositions: system_settings.systemPositions,\n    claiming,\n    courses: course.courses,\n    documentReducer: document,\n    schoolLevels,\n  };\n};\n\nexport const ClaimingReport = connect(mapStateToProps, {\n  getAllClaims,\n  getAllAnswers,\n  GetClaimingTypes,\n  loadCourses,\n  getAllApplications,\n  GetAllSessionPlans,\n  loadEducationCategories,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  setSelectedClaimType,\n  getPositions,\n  PushPopupAlert,\n})(_ClaimingReport);\n","import React from \"react\";\nimport VBarChart from \"../ChartComponents/VBarChart\";\n\ntype AllClaimChartProps = {\n  ClaimTypes: {\n    title: string;\n    count: {\n      all: number;\n      accepted: number;\n      rejected: number;\n      pending: number;\n    };\n    type: string | \"all\";\n  }[];\n};\n\nconst AllClaimChart: React.FC<AllClaimChartProps> = (props) => {\n  const FC_GetAllClaimChartData = (): {\n    accepted: number[];\n    rejected: number[];\n    active: number[];\n    labels: string[];\n  } => {\n    let acceptedArray: number[] = [],\n      rejectedArray: number[] = [],\n      activeArray: number[] = [],\n      labelArray: string[] = [];\n\n    for (const typeKey in props.ClaimTypes) {\n      if (props.ClaimTypes[typeKey].type !== \"all\") {\n        acceptedArray.push(props.ClaimTypes[typeKey].count.accepted);\n        rejectedArray.push(props.ClaimTypes[typeKey].count.rejected);\n        activeArray.push(props.ClaimTypes[typeKey].count.pending);\n        labelArray.push(props.ClaimTypes[typeKey].type.replace(/_/g, \" \"));\n      }\n    }\n    return {\n      accepted: acceptedArray,\n      rejected: rejectedArray,\n      active: activeArray,\n      labels: labelArray,\n    };\n  };\n\n  return (\n    <section className=\"my-3 max-w-full bg-white\">\n      <div className=\"flex items-center justify-between px-3\">\n        <span className=\"text-gray-600 font-semibold text-xl py-4 px-0\">\n          Claim chart on country level\n        </span>\n      </div>\n      <div className=\"mb-4 pb-2 px-3\">\n        <VBarChart\n          labels={FC_GetAllClaimChartData().labels}\n          categoriesLabel={FC_GetAllClaimChartData().labels}\n          dataLabels={false}\n          yaxisText=\"(Applicants)\"\n          tooltipText=\"Claims\"\n          series={[\n            {\n              name: \"Pending Claim\",\n              data: FC_GetAllClaimChartData().active,\n            },\n            {\n              name: \"Accepted Claim\",\n              data: FC_GetAllClaimChartData().accepted,\n            },\n            {\n              name: \"Rejected Claim\",\n              data: FC_GetAllClaimChartData().rejected,\n            },\n          ]}\n          colors={[\"#4b5563\", \"#469769\", \"#d97724\"]}\n          defaultBar={{\n            borderRadius: 4,\n            horizontal: false,\n            columnWidth: \"95%\",\n            endingShape: \"rounded\",\n          }}\n          stacked={true}\n        />\n      </div>\n    </section>\n  );\n};\n\nexport default AllClaimChart;\n","import React from \"react\";\nimport { AiFillDashboard } from \"react-icons/ai\";\nimport { MdBrightness1 } from \"react-icons/md\";\nimport { SessionPlanInterface } from \"../../../interfaces\";\nimport { education_category } from \"../../../interfaces/education_category\";\n\ntype ClaimDashBoardTitleProps = {\n  reportTitle: string;\n  education_categories: education_category[] | null;\n  loading: boolean;\n  loadingApplications: boolean;\n  loadingEducation: boolean;\n  thisEducation: education_category | null;\n  allEducation: boolean;\n  periodChanged: boolean;\n  setThisEducation: (value: education_category | null) => void;\n  thisPeriod: string;\n  setThisPeriod: (value: string) => void;\n  application_sessions: SessionPlanInterface[];\n  onPeriodChange: (period_id: string) => void;\n};\n\nconst ClaimDashBoardTitle: React.FC<ClaimDashBoardTitleProps> = (props) => {\n  return (\n    <div className=\"mt-3 rounded flex flex-col md:flex-row md:justify-between items-start\">\n      <div className=\"flex flex-row items-center gap-3 mb-2\">\n        <AiFillDashboard className=\"text-6xl text-blue-600 hidden md:block\" />\n        <div className=\"flex flex-col\">\n          <span className=\"text-blue-600 text-3xl font-bold\">\n            {props.reportTitle}\n          </span>\n        </div>\n      </div>\n\n      {/* FILTER SECTION PERIOD && EDUCATION */}\n      <section className=\"w-full md:w-auto my-2 md:my-0\">\n        {/* EDUCATION CATEGORY sections */}\n        <section>\n          {props.education_categories && props.education_categories.length > 0 && (\n            <div className=\"flex items-start md:items-center justify-start md:justify-end gap-2\">\n              {props.allEducation && (\n                <div\n                  className={`w-auto ${\n                    props.loading ||\n                    props.loadingApplications ||\n                    props.loadingEducation ||\n                    props.periodChanged\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } ${\n                    props.thisEducation === null\n                      ? \"bg-blue-500 text-white font-bold\"\n                      : \"bg-gray-100 text-blue-800\"\n                  } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex items-center animate__animated animate__zoomIn`}\n                  onClick={() =>\n                    !props.loading &&\n                    !props.loadingEducation &&\n                    props.setThisEducation(null)\n                  }\n                >\n                  <section className=\"flex-1\">\n                    <MdBrightness1 className=\"inline-block mr-1 text-xs\" />\n                    <span>All</span>\n                  </section>\n                </div>\n              )}\n              {props.education_categories.map((education, index) => (\n                <div\n                  key={education.education_institute_id + index}\n                  className={`w-auto ${\n                    props.loading ||\n                    props.loadingApplications ||\n                    props.loadingEducation\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } ${\n                    props.thisEducation &&\n                    education.education_institute_id ===\n                      props.thisEducation.education_institute_id\n                      ? \"bg-blue-500 text-white font-bold\"\n                      : \"bg-gray-100 text-blue-800\"\n                  } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex items-center animate__animated animate__zoomIn`}\n                  onClick={() =>\n                    !props.loading &&\n                    !props.loadingApplications &&\n                    !props.loadingEducation &&\n                    props.setThisEducation(education)\n                  }\n                >\n                  <div className=\"flex-1\">\n                    <MdBrightness1 className=\"inline-block mr-1 text-xs\" />\n                    <span>{education.education_category_title}</span>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </section>\n        {/* end EDUCATION CATEGORY sections */}\n        <div>\n          <select\n            className={`bg-white text-gray-600 border border-gray-400 rounded p-2 focus:outline-none ${\n              props.loadingApplications && \"cursor-wait\"\n            }`}\n            value={props.thisPeriod}\n            disabled={\n              props.loading ||\n              props.loadingApplications ||\n              props.loadingEducation ||\n              props.periodChanged\n            }\n            onChange={(e) => {\n              props.setThisPeriod(e.target.value);\n              props.onPeriodChange(e.target.value);\n            }}\n          >\n            {props.application_sessions.map((session, item) => (\n              <option\n                key={session.session_plan_id + item}\n                value={session.session_plan_id}\n              >\n                {session.session_plan_name}\n              </option>\n            ))}\n          </select>\n        </div>\n      </section>\n      {/* END FILTER SECTION PERIOD && EDUCATION */}\n    </div>\n  );\n};\n\nexport default ClaimDashBoardTitle;\n","import React, { Component } from \"react\";\nimport { FaBookOpen } from \"react-icons/fa\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  schoolLevelsStoreInterface,\n  getAllClaims,\n  GetClaimingTypes,\n  getAllApplications,\n  loadEducationCategories,\n  setSelectedClaimType,\n  PushPopupAlert,\n} from \"../../../actions\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport { getPositions } from \"../../../actions/settings\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport {\n  SessionPlanInterface,\n  PositionAPI,\n  education_category,\n  PlansTypeKeys,\n  CandidateClaimInterface,\n  ClaimToPrintInterface,\n  ClaimDecisionStatus,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { DATE } from \"../../../utils/functions\";\nimport { reportClaimType } from \"../../Admin/Claiming/ClaimingReport\";\nimport { adminDisplayClaimTitle } from \"../../Claimings/Admin\";\nimport NoSession from \"../../SessionSettings/NoSession\";\nimport PieChart from \"../ChartComponents/PieChart\";\nimport ExamDashboardLabels from \"../ExamDashboard/ExamDashboardLabels\";\nimport AllClaimChart from \"./AllClaimChart\";\nimport ClaimDashBoardTitle from \"./ClaimDashBoardTitle\";\n\ninterface WaitingListDashboardProps {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  systemPositions: PositionAPI[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  setSelectedClaimType: Function;\n  getPositions: Function;\n  getAllClaims: Function;\n  GetClaimingTypes: Function;\n  getAllApplications: Function;\n  GetAllSessionPlans: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface WaitingListDashboardStates {\n  thisPeriod: string;\n  loading: boolean;\n  loadingSession: boolean;\n  periodChanged: boolean;\n  loadingPosition: boolean;\n  loadingApplications: boolean;\n  loadingClaims: boolean;\n  loadingDocuments: boolean;\n  loadingInstitutes: boolean;\n  loadingClarifications: boolean;\n  loadingFields: boolean;\n  thisEducation: education_category | null;\n  thisLabel: PlansTypeKeys | \"all\";\n}\nclass _ClaimDashboard extends Component<\n  WaitingListDashboardProps,\n  WaitingListDashboardStates\n> {\n  constructor(props: WaitingListDashboardProps) {\n    super(props);\n\n    this.state = {\n      thisPeriod: \"\",\n      loading: true,\n      loadingSession: true,\n      periodChanged: false,\n      loadingPosition: true,\n      loadingApplications: true,\n      loadingClaims: true,\n      loadingDocuments: true,\n      loadingInstitutes: true,\n      loadingClarifications: true,\n      loadingFields: true,\n      thisEducation: null,\n      thisLabel: \"all\",\n    };\n  }\n\n  setLoadingInstitutes = (value: boolean) => {\n    this.setState({ loadingInstitutes: value });\n  };\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingSession = (value: boolean) => {\n    this.setState({ loadingSession: value });\n  };\n\n  setPeriodChanged = (value: boolean) => {\n    this.setState({ periodChanged: value });\n  };\n\n  setLoadingPosition = (value: boolean) => {\n    this.setState({ loadingPosition: value });\n  };\n\n  setLoadingApplications = (value: boolean) => {\n    this.setState({ loadingApplications: value });\n  };\n\n  setLoadingClaims = (value: boolean) => {\n    this.setState({ loadingClaims: value });\n  };\n  setLoadingDocuments = (value: boolean) => {\n    this.setState({ loadingDocuments: value });\n  };\n\n  setLoadingClarifications = (value: boolean) => {\n    this.setState({ loadingClarifications: value });\n  };\n\n  setLoadingFields = (value: boolean) => {\n    this.setState({ loadingFields: value });\n  };\n\n  setThisEducation = (value: education_category | null) => {\n    this.setState({ thisEducation: value });\n  };\n\n  setThisLabel = (value: PlansTypeKeys | \"all\") => {\n    this.setState({ thisLabel: value });\n  };\n\n  setThisPeriod = (value: string) => {\n    this.setState({ thisPeriod: value });\n  };\n\n  componentDidMount = () => {\n    // LOADING EDUCATION CATEGORY =================================\n    if (\n      this.props.schoolLevels.education_categories === null ||\n      this.props.schoolLevels.education_categories.length === 0\n    ) {\n      this.props.loadEducationCategories(this.setLoadingInstitutes);\n    } else {\n      this.setLoadingInstitutes(false);\n    }\n    // END LOADING EDUCATION CATEGORY =================================\n\n    // LOADING APPLICATION SESSION ====================================\n    if (\n      this.props.application_sessions === null ||\n      this.props.application_sessions.length === 0\n    ) {\n      this.props.GetAllSessionPlans(\n        (status: boolean, msg: string, data?: SessionPlanInterface[]) => {\n          if (!status) {\n            this.setLoadingSession(false);\n            this.setLoading(false);\n            if (msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data && data.length > 0) {\n              let thisSession = data.find((item) => item.is_active === true);\n              this.setThisPeriod(\n                thisSession\n                  ? thisSession.session_plan_id\n                  : data[data.length - 1].session_plan_id\n              );\n              this.onPeriodChange(\n                thisSession\n                  ? thisSession.session_plan_id\n                  : data[data.length - 1].session_plan_id\n              );\n            }\n          }\n        }\n      );\n    } else if (this.state.loadingSession) {\n      this.setLoading(false);\n      this.setLoadingSession(false);\n    }\n\n    // SETTING ACTIVE SESSION ==========================\n    if (\n      isEmptyOrSpaces(this.state.thisPeriod) &&\n      !this.state.loadingSession &&\n      this.props.application_sessions &&\n      this.props.application_sessions.length > 0\n    ) {\n      let thisSession = this.props.application_sessions.find(\n        (item) => item.is_active === true\n      );\n      this.setThisPeriod(\n        thisSession\n          ? thisSession.session_plan_id\n          : this.props.application_sessions[\n              this.props.application_sessions.length - 1\n            ].session_plan_id\n      );\n      this.onPeriodChange(\n        thisSession\n          ? thisSession.session_plan_id\n          : this.props.application_sessions[\n              this.props.application_sessions.length - 1\n            ].session_plan_id\n      );\n    }\n\n    // LOADING DOCUMENT CATEGORIES ==========================\n    if (\n      !this.props.documentReducer.documentCategory &&\n      this.state.loadingDocuments\n    ) {\n      this.props.getDocumentCategory();\n      this.setLoadingDocuments(false);\n    } else if (this.state.loadingDocuments) {\n      this.setLoadingDocuments(false);\n    }\n    // LOADING DOCUMENT CLARIFICATIONS ==========================\n    if (\n      !this.props.documentReducer.documentSubCategory &&\n      this.state.loadingClarifications\n    ) {\n      this.props.getDocumentSubCategory();\n      this.setLoadingClarifications(false);\n    } else if (this.state.loadingClarifications) {\n      this.setLoadingClarifications(false);\n    }\n    // LOADING DOCUMENT FIELDS ==========================\n    if (\n      !this.props.documentReducer.documentFields &&\n      this.state.loadingFields\n    ) {\n      this.props.getDocumentFields();\n      this.setLoadingFields(false);\n    } else if (this.state.loadingFields) {\n      this.setLoadingFields(false);\n    }\n\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n\n    // LOADING POSITIONS ==============================================\n    if (this.props.systemPositions === null) {\n      this.props.getPositions((status: boolean, msg: string) => {\n        this.setLoadingPosition(status);\n        console.log({ status: status, msg: msg });\n        if (msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    } else if (this.state.loadingPosition) {\n      this.setLoadingPosition(false);\n    }\n  };\n\n  onPeriodChange = (period_id: string) => {\n    this.setPeriodChanged(true);\n    this.props.getAllClaims(2, period_id, (status: boolean, msg: string) => {\n      !status && this.setPeriodChanged(false);\n      if (status === false && msg.length) {\n        this.props.PushPopupAlert({\n          title: msg,\n          theme: PopupAlertTheme.danger,\n        });\n      }\n    });\n\n    this.props.getAllApplications(period_id, (status: boolean, msg: string) => {\n      !status && this.setLoadingApplications(status);\n      if (status === false && msg.length) {\n        this.props.PushPopupAlert({\n          title: msg,\n          theme: PopupAlertTheme.danger,\n        });\n      }\n    });\n  };\n\n  getClaimInstitute = (thisClaim: CandidateClaimInterface): string | null => {\n    if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      return null;\n    }\n    if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n      if (this.props.claiming.allApplications) {\n        let thisApplication = this.props.claiming.allApplications.find(\n          (item) => item._id === thisClaim.claiming_on_id\n        );\n        if (\n          thisApplication &&\n          this.props.claiming.allApplications &&\n          this.props.systemPositions\n        ) {\n          // return thisApplication.\n          let thisPosition = this.props.systemPositions.find(\n            (item) => item.position_id === thisApplication!.position\n          );\n          if (thisPosition) {\n            return thisPosition.education_institute_id.education_institute_id;\n          }\n        }\n      }\n    }\n\n    return null;\n  };\n\n  displayClaimTitle = (thisClaim: CandidateClaimInterface): string => {\n    let result: string = thisClaim.claiming_on_id;\n    if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      result =\n        thisClaim.userDetails.details.filter(\n          (item) => item.validation_status !== \"waiting\"\n        ).length > 0\n          ? adminDisplayClaimTitle(\n              this.props.documentReducer,\n              thisClaim.userDetails.details.filter(\n                (item) => item.validation_status !== \"waiting\"\n              ),\n              thisClaim\n            )\n          : \"Document not found\";\n    }\n    if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n      if (this.props.claiming.allApplications) {\n        let thisApplication = this.props.claiming.allApplications.find(\n          (item) => item._id === thisClaim.claiming_on_id\n        );\n        if (\n          thisApplication &&\n          this.props.claiming.allApplications &&\n          this.props.systemPositions\n        ) {\n          let thisPosition = this.props.systemPositions.find(\n            (item) => item.position_id === thisApplication!.position\n          );\n          if (thisPosition) {\n            result = thisPosition.position_title;\n          } else {\n            result = \"Application not found\";\n          }\n        }\n      }\n    }\n\n    return result;\n  };\n\n  ClaimTypes = (\n    claims: ClaimToPrintInterface[]\n  ): {\n    title: string;\n    count: {\n      all: number;\n      accepted: number;\n      rejected: number;\n      pending: number;\n    };\n    type: PlansTypeKeys | \"all\";\n  }[] => {\n    let output: {\n      title: string;\n      count: {\n        all: number;\n        accepted: number;\n        rejected: number;\n        pending: number;\n      };\n      type: PlansTypeKeys | \"all\";\n    }[] = [\n      {\n        title: \"All claim types\",\n        count: {\n          all: claims.length,\n          accepted: claims.filter(\n            (item) => item.decision === ClaimDecisionStatus.ACCEPTED\n          ).length,\n          rejected: claims.filter(\n            (item) => item.decision === ClaimDecisionStatus.REJECTED\n          ).length,\n          pending: claims.filter((item) => item.decision === \"PENDING\").length,\n        },\n        type: \"all\",\n      },\n    ];\n\n    Object.values(PlansTypeKeys).forEach((PlansKey) => {\n      output.push({\n        title: capitalizeFirstLetter(reportClaimType(PlansKey)),\n        count: {\n          all: claims.filter((itm) => itm.claim_type === PlansKey).length,\n          accepted: claims.filter(\n            (itm) =>\n              itm.claim_type === PlansKey &&\n              itm.decision === ClaimDecisionStatus.ACCEPTED\n          ).length,\n          rejected: claims.filter(\n            (itm) =>\n              itm.claim_type === PlansKey &&\n              itm.decision === ClaimDecisionStatus.REJECTED\n          ).length,\n          pending: claims.filter(\n            (itm) => itm.claim_type === PlansKey && itm.decision === \"PENDING\"\n          ).length,\n        },\n        type: PlansKey,\n      });\n    });\n    return output;\n  };\n\n  FC_ClaimData = (\n    allClaims: CandidateClaimInterface[] | null\n  ): ClaimToPrintInterface[] => {\n    if (allClaims === null || allClaims.length <= 0) return [];\n    let arrayNew: ClaimToPrintInterface[] = [];\n    let n: number = 1;\n    // LOOP IN ALL CLAIM ONE BY ONE ###########################\n    for (const key in allClaims) {\n      if (Object.prototype.hasOwnProperty.call(allClaims, key)) {\n        // LOOP IN ALL CLAIM OF ONE FILE ONE BY ONE ===========================\n        for (const keyClaim in allClaims[key].claims) {\n          if (\n            Object.prototype.hasOwnProperty.call(\n              allClaims[key].claims,\n              keyClaim\n            )\n          ) {\n            const element = allClaims[key].claims[keyClaim];\n            let dataArray: ClaimToPrintInterface = {\n              claim_id: n,\n              names:\n                allClaims[key].userDetails.user_info.fname +\n                \" \" +\n                allClaims[key].userDetails.user_info.lname,\n              gender: allClaims[key].userDetails.user_info.sex\n                ? \"Male\"\n                : \"Female\",\n              national_id: allClaims[key].userDetails.n_id,\n              phone: allClaims[key].userDetails.phone_number,\n              email: allClaims[key].userDetails.email,\n              claim_type: allClaims[key].type_key,\n              claim_level: element.level,\n              education_category: this.getClaimInstitute(allClaims[key]),\n              claim_session: this.state.thisPeriod,\n              date: DATE(element.createdAt),\n              decision: element.decision_taken_status\n                ? element.decision_taken_status\n                : \"PENDING\",\n              claim_title: this.displayClaimTitle(allClaims[key]),\n            };\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n      }\n    }\n    return arrayNew;\n  };\n\n  getClaimDataByTitle = (\n    allData: {\n      title: string;\n      count: {\n        all: number;\n        accepted: number;\n        rejected: number;\n        pending: number;\n      };\n      type: PlansTypeKeys | \"all\";\n    }[]\n  ):\n    | {\n        title: string;\n        count: {\n          all: number;\n          accepted: number;\n          rejected: number;\n          pending: number;\n        };\n        type: PlansTypeKeys | \"all\";\n      }\n    | undefined => {\n    return allData.find((item) => item.type === this.state.thisLabel);\n  };\n\n  render() {\n    if (\n      this.props.application_sessions &&\n      this.props.application_sessions.length === 0\n    ) {\n      return <NoSession />;\n    }\n\n    if (\n      this.state.loading ||\n      this.props.application_sessions === null ||\n      this.props.claiming.allClaims === null\n    ) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {/* HEADER TITLE */}\n        <ClaimDashBoardTitle\n          education_categories={this.props.schoolLevels.education_categories}\n          loading={this.state.loading}\n          loadingApplications={this.state.loadingApplications}\n          loadingEducation={this.state.loadingInstitutes}\n          thisEducation={this.state.thisEducation}\n          setThisEducation={this.setThisEducation}\n          thisPeriod={this.state.thisPeriod}\n          setThisPeriod={this.setThisPeriod}\n          application_sessions={this.props.application_sessions}\n          reportTitle={\"Claim Dashboard\"}\n          allEducation={true}\n          periodChanged={this.state.periodChanged}\n          onPeriodChange={this.onPeriodChange}\n        />\n        {/* END HEADER TITLE */}\n\n        {/* ===================================================================================== */}\n\n        {/* CLAIM ALL STATUS LABELS ======================================= */}\n        <section className=\"my-2\">\n          <div className=\"text-2xl font-semibold text-gray-600\">\n            Claim type:\n            <select\n              className={`bg-white text-gray-600 border-2 border-blue-600 rounded-lg px-2 py-1 focus:outline-none`}\n              value={this.state.thisLabel}\n              onChange={(e) =>\n                this.setThisLabel(e.target.value as PlansTypeKeys | \"all\")\n              }\n            >\n              {this.ClaimTypes(\n                this.FC_ClaimData(this.props.claiming.allClaims)!\n              ).map((item, index: number) => (\n                <option key={item.type + index} value={item.type}>\n                  {capitalizeFirstLetter(item.title.toLocaleLowerCase())}\n                </option>\n              ))}\n            </select>\n          </div>\n          {this.getClaimDataByTitle(\n            this.ClaimTypes(this.FC_ClaimData(this.props.claiming.allClaims)!)\n          ) && (\n            <ExamDashboardLabels\n              dataLabels={[\n                {\n                  title: \"Total claim\",\n                  icon: FaBookOpen,\n                  iconColor: \"blue\",\n                  count: this.getClaimDataByTitle(\n                    this.ClaimTypes(\n                      this.FC_ClaimData(this.props.claiming.allClaims)!\n                    )\n                  )!.count.all,\n                },\n                {\n                  title: \"Accepted Claim\",\n                  icon: FaBookOpen,\n                  iconColor: \"green\",\n                  count: this.getClaimDataByTitle(\n                    this.ClaimTypes(\n                      this.FC_ClaimData(this.props.claiming.allClaims)!\n                    )\n                  )!.count.accepted,\n                },\n                {\n                  title: \"Rejected Claim\",\n                  icon: FaBookOpen,\n                  iconColor: \"yellow\",\n                  count: this.getClaimDataByTitle(\n                    this.ClaimTypes(\n                      this.FC_ClaimData(this.props.claiming.allClaims)!\n                    )\n                  )!.count.rejected,\n                },\n                {\n                  title: \"Pending Claim\",\n                  icon: FaBookOpen,\n                  iconColor: \"gray\",\n                  count: this.getClaimDataByTitle(\n                    this.ClaimTypes(\n                      this.FC_ClaimData(this.props.claiming.allClaims)!\n                    )\n                  )!.count.pending,\n                },\n              ]}\n              labelsOnRow={5}\n            >\n              <div className=\"flex justify-center\">\n                <PieChart\n                  options={{\n                    labels: [\"Accepted\", \"Rejected\", \"Pending\"],\n                    legend: {\n                      show: false,\n                      position: \"bottom\",\n                      horizontalAlign: \"center\",\n                      fontSize: \"16px\",\n                      itemMargin: {\n                        horizontal: 3,\n                        vertical: 0,\n                      },\n                    },\n                    plotOptions: {\n                      pie: {\n                        donut: {\n                          labels: {\n                            show: true,\n                            name: {\n                              show: true,\n                              fontSize: \"16px\",\n                              //   fontFamily: \"Rubik\",\n                              color: \"#2564eb\",\n                              offsetY: -10,\n                            },\n                            value: {\n                              show: true,\n                              fontSize: \"20px\",\n                              fontFamily: \"Helvetica, Arial, sans-serif\",\n                              color: \"#2564eb\",\n                              offsetY: 10,\n                              formatter: function (val) {\n                                return val;\n                              },\n                            },\n                            total: {\n                              show: true,\n                              label: \"Total\",\n                              color: \"#2564eb\",\n                              formatter: function (w) {\n                                return w.globals.seriesTotals.reduce(\n                                  (a: number, b: number) => {\n                                    return a + b;\n                                  },\n                                  0\n                                );\n                              },\n                            },\n                          },\n                        },\n                      },\n                    },\n                    colors: [\"#469769\", \"#d97724\", \"#4b5563\"],\n                  }}\n                  series={[\n                    this.getClaimDataByTitle(\n                      this.ClaimTypes(\n                        this.FC_ClaimData(this.props.claiming.allClaims)!\n                      )\n                    )!.count.accepted,\n                    this.getClaimDataByTitle(\n                      this.ClaimTypes(\n                        this.FC_ClaimData(this.props.claiming.allClaims)!\n                      )\n                    )!.count.rejected,\n                    this.getClaimDataByTitle(\n                      this.ClaimTypes(\n                        this.FC_ClaimData(this.props.claiming.allClaims)!\n                      )\n                    )!.count.pending,\n                  ]}\n                  width={210}\n                />\n              </div>\n            </ExamDashboardLabels>\n          )}\n        </section>\n        {/* CLAIM STATUS ON COUNTRY LEVEL LABELS ======================================= */}\n\n        {/* ===================================================================================== */}\n\n        {/* EXAM PERFORMANCE ON COUNTRY CHART ======================================= */}\n        <AllClaimChart\n          ClaimTypes={this.ClaimTypes(\n            this.FC_ClaimData(this.props.claiming.allClaims)\n          )}\n        />\n        {/* END EXAM PERFORMANCE ON COUNTRY CHART ======================================= */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system_settings,\n  sessionPlan,\n  claiming,\n  document,\n  schoolLevels,\n}: StoreState): {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  systemPositions: PositionAPI[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n} => {\n  return {\n    auth: auth,\n    application_sessions: sessionPlan.allSessionPlans,\n    systemPositions: system_settings.systemPositions,\n    claiming,\n    documentReducer: document,\n    schoolLevels,\n  };\n};\n\nexport const ClaimDashboard = connect(mapStateToProps, {\n  getAllClaims,\n  GetClaimingTypes,\n  getAllApplications,\n  GetAllSessionPlans,\n  loadEducationCategories,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  setSelectedClaimType,\n  getPositions,\n  PushPopupAlert,\n})(_ClaimDashboard);\n"],"sourceRoot":""}
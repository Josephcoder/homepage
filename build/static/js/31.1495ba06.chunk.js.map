{"version":3,"sources":["containers/SessionSettings/NoSession.tsx","components/Loading/TableLoading.tsx","utils/ExportToExcel.tsx","utils/mineduc.png","components/DownloadPDF/rest.tsx","containers/SessionSettings/ChooseSession.tsx","containers/Admin/Claiming/ClaimingReport.tsx"],"names":["NoSession","className","TableLoading","props","displayCols","colsArray","index","cols","push","map","element","ExportToExcel","fileData","fileName","btnName","showIcon","onClick","e","apiData","wb","Sheets","data","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","type","Blob","FileSaver","exportToCSV","require","addFooters","doc","pageCount","internal","getNumberOfPages","setFont","setFontSize","i","setPage","text","String","pageSize","width","align","generatePDF","reportSettings","table","callBack","a","orientation","lMargin","jsPDF","setTextColor","addImage","Logo","undefined","title","getWidth","institute","lines","splitTextToSize","subject","pdfInMM","y","subjectTitle","getTextWidth","length","addPage","period","autoTable","html","startY","margin","horizontal","cellPadding","rowHeight","bodyStyles","valign","columnStyles","email","cellWidth","theme","tableWidth","finalY","lastAutoTable","doneBy","DATE","Date","toString","save","returnPromise","then","isPlansActive","plans","today","activePlans","plan","startDate","start_date","endDate","end_date","getTime","type_status","SessionPlanTypeStatus","OPEN","ChooseSession","searched","useState","selectedPlan","setSelectedPlan","search","setSearch","onChange","target","value","placeholder","disabled","allSession","chooseAll","currentSelected","setSelectSession","searchData","item","session_plan_id","session_plan_name","is_active","find","itm","type_key","type_title","React","memo","reportClaimType","result","PlansTypeKeys","APPLICATION","ClaimTypesEnum","application","DOCUMENT_VALIDATION","document","EXAMINATION","exam","MARKS_PUBLICATION","marks_publication","PLACEMENT_TRANSFER","placement","defaultReportContent","key","claimReportContentKeyInterface","names","status","national_id","gender","phone","claim_session","education_category","date","decision","claim_title","claim_type","claim_level","ClaimingReport","connect","auth","sessionPlan","claiming","schoolLevels","application_sessions","allSessionPlans","documentReducer","getAllClaims","GetClaimingTypes","getAllApplications","GetAllSessionPlans","loadEducationCategories","setSelectedClaimType","PushPopupAlert","thisPeriod","setThisPeriod","thisLevel","setThisLevel","loading","setLoading","loadingSession","setLoadingSession","periodChanged","setPeriodChanged","loadingClaims","setLoadingClaims","loadingInstitutes","setLoadingInstitutes","downloading","setDownloading","claimToPrint","setClaimToPrint","sortProperty","setSortProperty","isSorted","setIsSorted","sortOrder","setSortOrder","searchInput","setSearchInput","generateReportModal","setGenerateReportModal","reportTitle","setReportTitle","reportContent","setReportContent","selectAll","setSelectAll","formError","setFormError","selectPeriod","setSelectPeriod","thisEducation","setThisEducation","useEffect","education_categories","claimTypes","msg","PopupAlertTheme","danger","thisSession","allClaims","objList","setSort","thisProperty","updateClaimToPrint","arrayNew","n","Object","prototype","hasOwnProperty","call","keyClaim","claims","thisType","whichClaimType","dataArray","claim_id","userDetails","user_info","fname","lname","sex","n_id","phone_number","level","createdAt","decision_taken_status","FC_ClaimData","institute_id","isEmptyOrSpaces","isChangeAllowed","FC_FilterClaims","claimType","claimLevel","filter","education_institute_id","education_category_title","output","count","values","forEach","PlansKey","capitalizeFirstLetter","ClaimTypes","active","selectedType","selectedClaimType","currentType","levels","ClaimLevels","reportType","querySelectorAll","getElementById","user","footer","warning","FC_GeneratePDF","id","colSpan","sortThisArray","product","flag","prop","toLowerCase","indexOf","backDrop","Themes","default","close","backDropClose","widthSizeClass","ModalSize","medium","displayClose","padding","findIndex","newArray","isSelectAllNeeded","updateReportContent","currentState","resetReportContent","extraLarge","period_id"],"mappings":"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","file":"static/js/31.1495ba06.chunk.js","sourcesContent":["import React from \"react\";\nimport { MdInfoOutline } from \"react-icons/md\";\n\nconst NoSession = () => {\n  return (\n    <div className=\"my-5\">\n      <div className=\"bg-yellow-100 rounded flex flex-col items-center justify-center p-6 my-8 text-yellow-900 border border-yellow-900\">\n        <MdInfoOutline className=\"text-6xl md:text-9xl\" />\n        <div className=\"text-center flex flex-col\">\n          <span className=\"text-2xl md:text-4xl font-extrabold\">\n            No session available\n          </span>\n          <span className=\"text-lg\">\n            Please Wait for the system to publish the sessions or contact the\n            administrator\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NoSession;\n","import React from \"react\";\n\ntype TableLoadingProps = {\n  cols: number;\n};\nconst TableLoading: React.FC<TableLoadingProps> = (props) => {\n  const displayCols = (): JSX.Element[] => {\n    let colsArray: number[] = [];\n    for (let index = 0; index < props.cols; index++) {\n      colsArray.push(index);\n    }\n    let result = colsArray.map((element) => {\n      return (\n        <td className=\"p-3 text-center whitespace-nowrap\" key={element}>\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      );\n    });\n\n    return result;\n  };\n  return (\n    <>\n      <tr className=\"border-b border-gray-200\" key={228}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={22648}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={229768}>\n        {displayCols()}\n      </tr>\n    </>\n  );\n};\n\nexport default TableLoading;\n","import React from \"react\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport { RiFileExcel2Fill } from \"react-icons/ri\";\n\ninterface ExportToExcelProps {\n  fileData: any[];\n  fileName: string;\n  btnName?: string;\n  className?: string;\n  showIcon?: boolean;\n}\n\nconst ExportToExcel: React.FC<ExportToExcelProps> = ({\n  fileData,\n  fileName,\n  btnName = \"Excel\",\n  className = \"flex items-center gap-1 px-4 py-1 rounded text-green-700 bg-white border hover:text-white hover:bg-green-700 border-green-700 font-bold\",\n  showIcon = true,\n}) => {\n  const fileType =\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n  const fileExtension = \".xlsx\";\n\n  const exportToCSV = (apiData: any[], fileName: string) => {\n    const ws = XLSX.utils.json_to_sheet(apiData);\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n    const data = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n\n  return (\n    <button\n      onClick={(e) => exportToCSV(fileData, fileName)}\n      className={className}\n    >\n      {showIcon && <RiFileExcel2Fill />}\n      {btnName}\n    </button>\n  );\n};\n\nexport default ExportToExcel;\n","export default __webpack_public_path__ + \"static/media/mineduc.11a9ae1c.png\";","import jsPDF from \"jspdf\";\nimport { DATE } from \"../../utils/functions\";\nimport Logo from \"../../utils/mineduc.png\";\nrequire(\"jspdf-autotable\");\n\nexport const addFooters = (doc: any) => {\n  const pageCount = doc.internal.getNumberOfPages();\n\n  doc.setFont(\"helvetica\", \"italic\");\n  doc.setFontSize(8);\n  for (var i = 1; i <= pageCount; i++) {\n    doc.setPage(i);\n    doc.text(\n      \"Page \" + String(i) + \" of \" + String(pageCount),\n      doc.internal.pageSize.width / 2,\n      297,\n      {\n        align: \"center\",\n      }\n    );\n  }\n};\n\nexport type reportSettingsInterface = {\n  doneBy: string;\n  title: string;\n  subjectTitle: string;\n  subject: string;\n  institute: string;\n  period: string;\n  footer: string;\n  orientation?: \"p\" | \"l\";\n};\n\nexport const generatePDF = async (\n  reportSettings: reportSettingsInterface,\n  table: HTMLElement,\n  callBack: (status: boolean) => void\n) => {\n  callBack(true);\n  const orientation: \"p\" | \"l\" = reportSettings.orientation\n    ? reportSettings.orientation\n    : \"p\";\n  var lMargin: number = 20; //left margin in mm\n  var rMargin: number = 20; //right margin in mm\n  var pdfInMM: number = 185; // width of A4 in mm\n\n  //   var doc = new jsPDF(\"p\", \"mm\", \"a4\");\n  var doc: any = new jsPDF(orientation, \"mm\", \"a4\");\n\n  doc.setTextColor(95, 95, 95);\n  doc.setFontSize(28);\n  // doc.text(\n  //   this.props.reportTitle,\n  //   doc.internal.pageSize.getWidth() / 2,\n  //   30,\n  //   undefined,\n  //   \"center\"\n  // );\n  doc.addImage(Logo, \"png\", 20, 20, 10, 10);\n  doc.text(\"MINEDUC\", 32, 28.5, undefined, \"left\");\n  //   doc.setTextColor(19, 90, 152);\n  doc.setFontSize(26);\n  doc.text(\n    reportSettings.title,\n    doc.internal.pageSize.getWidth() / 2,\n    42.7,\n    undefined,\n    \"center\"\n  );\n\n  doc.setFontSize(20);\n  doc.text(\n    reportSettings.institute,\n    doc.internal.pageSize.getWidth() / 2,\n    53.7,\n    undefined,\n    \"center\"\n  );\n\n  var lines;\n  lines = doc.splitTextToSize(\n    reportSettings.subject,\n    pdfInMM - lMargin - rMargin\n  );\n  // if (reportSettings.position) {\n  // } else if (reportSettings.subject) {\n  //   lines = doc.splitTextToSize(\n  //     reportSettings.subject,\n  //     pdfInMM - lMargin - rMargin\n  //   );\n  // }\n\n  //   doc.setTextColor(0, 123, 255);\n  doc.setFontSize(16);\n  //   doc.text(lines, doc.internal.pageSize.getWidth() / 2, 45, {\n  //     maxWidth: 85,\n  //     align: \"center\",\n  //   });\n\n  var y = 63,\n    width;\n  doc.setTextColor(95, 95, 95);\n  doc.text(`${reportSettings.subjectTitle}: `, lMargin, y);\n  width = doc.getTextWidth(`${reportSettings.subjectTitle}: `);\n  // if (reportSettings.position) {\n  // } else if (reportSettings.position) {\n  //   doc.text(`Subject: `, lMargin, y);\n  //   width = doc.getTextWidth(\"Subject: \");\n  // }\n  // doc.setFontType(\"bold\");\n  doc.setTextColor(38, 38, 38);\n  for (var i = 0; i < lines.length; i++) {\n    if (y > 280) {\n      y = 10;\n      doc.addPage();\n    }\n    // doc.text(15, y, lines[i]);\n    doc.text(lines[i], lMargin + width, y);\n    y = y + 7;\n  }\n  doc.setTextColor(95, 95, 95);\n  doc.text(\"Period: \", lMargin, y + 3);\n  width = doc.getTextWidth(\"Period: \");\n  doc.setTextColor(38, 38, 38);\n  doc.text(reportSettings.period, lMargin + width, y + 3);\n\n  doc.autoTable({\n    html: table,\n    startY: 85,\n    margin: { horizontal: 20 },\n    cellPadding: 3, // Horizontal cell padding\n    // fontSize: 12,\n    rowHeight: 20,\n    // styles: { overflow: \"linebreak\" },\n    bodyStyles: { valign: \"top\" },\n    columnStyles: { email: { cellWidth: \"wrap\" } },\n    theme: \"striped\",\n    tableWidth: true,\n  });\n\n  doc.setFontSize(12);\n  let finalY = doc.lastAutoTable.finalY; // The y position on the page\n  doc.text(`Reported by: ${reportSettings.doneBy}`, lMargin, finalY + 15);\n  doc.text(\n    \"Report downloaded on \" + DATE(new Date().toString()),\n    lMargin,\n    finalY + 23\n  );\n\n  addFooters(doc);\n  await doc\n    .save(\n      `${\n        reportSettings.title +\n        \": \" +\n        reportSettings.subject +\n        \": \" +\n        reportSettings.period\n      }.pdf`,\n      { returnPromise: true }\n    )\n    .then(callBack(false));\n};\n","import React, { useState } from \"react\";\nimport {\n  MdCheckCircle,\n  MdRadioButtonUnchecked,\n  MdSearch,\n} from \"react-icons/md\";\nimport Loading from \"../../components/Loading/Loading\";\nimport {\n  PlansInterface,\n  SessionPlanInterface,\n  SessionPlanTypeStatus,\n} from \"../../interfaces\";\nimport { DATE } from \"../../utils/functions\";\nimport searchData from \"../../utils/search\";\n\nexport const isPlansActive = (plans: PlansInterface[]): PlansInterface[] => {\n  let today = new Date();\n  let activePlans: PlansInterface[] = [];\n  for (let plan of plans) {\n    let startDate = new Date(plan.start_date);\n    let endDate = new Date(plan.end_date);\n    if (\n      startDate.getTime() <= today.getTime() &&\n      endDate.getTime() >= today.getTime() &&\n      plan.type_status === SessionPlanTypeStatus.OPEN\n    ) {\n      activePlans = [...activePlans, plan];\n    }\n  }\n  return activePlans;\n};\n\ninterface ChooseSessionProps {\n  allSession: SessionPlanInterface[] | null;\n  setSelectSession: (period: SessionPlanInterface | \"all\") => void;\n  currentSelected: SessionPlanInterface | \"all\";\n  chooseAll: boolean;\n}\n\nconst ChooseSession = (props: ChooseSessionProps) => {\n  const [selectedPlan, setSelectedPlan] = useState<SessionPlanInterface | null>(\n    null\n  );\n  const [search, setSearch] = useState<string>(\"\");\n  const getSearch = (\n    period: SessionPlanInterface[],\n    searched: string\n  ): SessionPlanInterface[] => {\n    return searchData(period, searched) as SessionPlanInterface[];\n  };\n\n  return (\n    <div className=\"\">\n      <div className=\"px-3\">\n        <input\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n            setSearch(e.target.value)\n          }\n          type=\"text\"\n          className=\"py-3 px-4 w-full rounded border border-gray-400 mb-3\"\n          placeholder=\"Search by year, name\"\n          disabled={props.allSession === null || props.allSession.length === 0}\n        />\n      </div>\n\n      <div className=\"bg-gray-100 px-3 pt-3 pb-2 rounded-b\">\n        {props.allSession === null ? (\n          <Loading />\n        ) : props.allSession.length === 0 ? (\n          <div className=\"flex flex-col text-gray-400 items-center justify-center mb-2 bg-white py-4\">\n            <MdSearch className=\"text-6xl\" />\n            <div className=\"flex flex-col items-center justify-center\">\n              <span>No session found!</span>\n            </div>\n          </div>\n        ) : (\n          <section>\n            {props.chooseAll && (\n              <div\n                className={`rounded border ${\n                  props.currentSelected === \"all\"\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2 flex flex-col md:flex-row items-start md:items-center md:justify-between`}\n              >\n                <div className=\"flex flex-row items-center gap-3\">\n                  {props.currentSelected === \"all\" ? (\n                    <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                  ) : (\n                    <MdRadioButtonUnchecked\n                      className={`text-gray-300 text-4xl`}\n                    />\n                  )}\n                  <div className=\"flex flex-col\">\n                    <div className={`text-gray-600 font-bold`}>All session</div>\n                  </div>\n                </div>\n                <div\n                  onClick={() => {\n                    props.setSelectSession(\"all\");\n                  }}\n                  className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                >\n                  Select\n                </div>\n              </div>\n            )}\n            {getSearch(props.allSession, search).map((item, i) => (\n              <div\n                key={i + 1}\n                className={`rounded border ${\n                  props.currentSelected !== \"all\" &&\n                  props.currentSelected.session_plan_id === item.session_plan_id\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2`}\n              >\n                <div className=\"flex flex-col md:flex-row items-start md:items-center md:justify-between \">\n                  <div className=\"flex flex-row items-center gap-3\">\n                    {props.currentSelected !== \"all\" &&\n                    props.currentSelected.session_plan_id ===\n                      item.session_plan_id ? (\n                      <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                    ) : (\n                      <MdRadioButtonUnchecked\n                        className={`text-gray-300 text-4xl`}\n                      />\n                    )}\n                    <div className=\"flex flex-col\">\n                      <div\n                        className={`${\n                          props.currentSelected !== \"all\" &&\n                          props.currentSelected.session_plan_id ===\n                            item.session_plan_id\n                            ? \"text-blue-600\"\n                            : \"text-gray-600\"\n                        } font-bold`}\n                      >\n                        {item.session_plan_name}\n                      </div>\n                      <div className=\"text-sm text-gray-500\">\n                        <span>Status: </span>\n                        <span\n                          className={`${\n                            item.is_active === true\n                              ? \"text-gray-900 font-bold underline\"\n                              : \"text-gray-500 italic\"\n                          }`}\n                        >\n                          {item.is_active === true ? \"Active\" : \"Expired\"}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"flex flex-row items-center gap-2\">\n                    {(selectedPlan === null ||\n                      selectedPlan.session_plan_id !==\n                        item.session_plan_id) && (\n                      <div\n                        onClick={() => setSelectedPlan(item)}\n                        className=\"bg-gray-50 group-hover:bg-blue-100 font-semibold text-gray-400 group-hover:text-blue-600 rounded px-3 py-2 cursor-pointer\"\n                      >\n                        Details\n                      </div>\n                    )}\n                    <div\n                      onClick={() => {\n                        props.setSelectSession(item);\n                      }}\n                      className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                    >\n                      Select\n                    </div>\n                    {selectedPlan !== null &&\n                      selectedPlan.session_plan_id === item.session_plan_id && (\n                        <div\n                          onClick={() => setSelectedPlan(null)}\n                          className=\"bg-red-100 group-hover:bg-red-200 font-semibold text-red-600 group-hover:text-red-800 rounded px-3 py-2 cursor-pointer\"\n                        >\n                          Close\n                        </div>\n                      )}\n                  </div>\n                </div>\n                {selectedPlan !== null &&\n                  selectedPlan.session_plan_id === item.session_plan_id && (\n                    <div className=\"bg-white rounded border border-blue-50 mt-2 animate__animated animate__fadeIn\">\n                      <table className=\"w-full\">\n                        <thead className=\"bg-blue-50\">\n                          <tr className=\"text-left\">\n                            <th className=\"px-3 py-3\">#</th>\n                            <th>Plan</th>\n                            <th>Start date</th>\n                            <th>Ending date</th>\n                            <th>Status</th>\n                          </tr>\n                        </thead>\n                        <tbody className=\"text-sm\">\n                          {selectedPlan !== null &&\n                            selectedPlan.session_plan_id ===\n                              item.session_plan_id &&\n                            selectedPlan.plans.length > 0 &&\n                            item.plans.map((plan, i) => (\n                              <tr\n                                key={i + 1}\n                                className={`${\n                                  isPlansActive(item.plans).find(\n                                    (itm) => itm.type_key === plan.type_key\n                                  ) !== undefined\n                                    ? \"bg-blue-100 text-blue-600 font-bold\"\n                                    : \"\"\n                                } text-left border-b border-blue-50`}\n                              >\n                                <td className=\"px-3 py-1\">{i + 1}</td>\n                                <td>{plan.type_title}</td>\n                                <td>{DATE(plan.start_date, \"DD/MM/YYYY\")}</td>\n                                <td>{DATE(plan.end_date, \"DD/MM/YYYY\")}</td>\n                                <td>{plan.type_status}</td>\n                              </tr>\n                            ))}\n                        </tbody>\n                      </table>\n                    </div>\n                  )}\n              </div>\n            ))}\n          </section>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(ChooseSession);\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { BiExport, BiSort } from \"react-icons/bi\";\nimport { FiEdit } from \"react-icons/fi\";\nimport { ImFilesEmpty } from \"react-icons/im\";\nimport {\n  MdCheckBox,\n  MdCheckBoxOutlineBlank,\n  MdHistory,\n  MdRadioButtonChecked,\n  MdRadioButtonUnchecked,\n} from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadEducationCategories,\n  PushPopupAlert,\n  schoolLevelsStoreInterface,\n} from \"../../../actions\";\nimport {\n  getAllClaims,\n  getAllApplications,\n  setSelectedClaimType,\n  GetClaimingTypes,\n} from \"../../../actions/claiming\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport {\n  generatePDF,\n  reportSettingsInterface,\n} from \"../../../components/DownloadPDF/rest\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport {\n  SideNavigation,\n  MainItem,\n} from \"../../../components/Navigation/SideNavigation\";\nimport {\n  CandidateClaimInterface,\n  claimReportContentInterface,\n  claimReportContentKeyInterface,\n  ClaimToPrintInterface,\n} from \"../../../interfaces/claimings\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport ExportToExcel from \"../../../utils/ExportToExcel\";\nimport { DATE, sortThisArray } from \"../../../utils/functions\";\nimport { ClaimTypesEnum, whichClaimType } from \"../../Claimings/Candidate\";\nimport TableLoading from \"../../../components/Loading/TableLoading\";\nimport {\n  education_category,\n  PlansTypeKeys,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport ChooseSession from \"../../SessionSettings/ChooseSession\";\nimport NoSession from \"../../SessionSettings/NoSession\";\n\nexport const reportClaimType = (\n  type: PlansTypeKeys | \"all\"\n): ClaimTypesEnum | \"all\" => {\n  let result: ClaimTypesEnum | \"all\" = \"all\";\n  switch (type) {\n    case PlansTypeKeys.APPLICATION:\n      result = ClaimTypesEnum.application;\n      break;\n    case PlansTypeKeys.DOCUMENT_VALIDATION:\n      result = ClaimTypesEnum.document;\n      break;\n    case PlansTypeKeys.EXAMINATION:\n      result = ClaimTypesEnum.exam;\n      break;\n    case PlansTypeKeys.MARKS_PUBLICATION:\n      result = ClaimTypesEnum.marks_publication;\n      break;\n    case PlansTypeKeys.PLACEMENT_TRANSFER:\n      result = ClaimTypesEnum.placement;\n      break;\n    default:\n      result = \"all\";\n      break;\n  }\n\n  return result;\n};\n\nconst searchData = (\n  objList: ClaimToPrintInterface[],\n  text: string\n): ClaimToPrintInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (\n        prop === \"names\" ||\n        prop === \"gender\" ||\n        prop === \"national_id\" ||\n        prop === \"phone\" ||\n        prop === \"email\" ||\n        prop === \"claim_title\" ||\n        prop === \"claim_type\" ||\n        prop === \"claim_level\" ||\n        prop === \"education_category\" ||\n        prop === \"claim_session\" ||\n        prop === \"date\" ||\n        prop === \"decision\"\n      ) {\n        if (product[prop]) {\n          flag =\n            product[prop]!.toString()\n              .toLowerCase()\n              .indexOf(text.toLowerCase()) > -1;\n        }\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n};\n\nconst defaultReportContent: claimReportContentInterface[] = [\n  {\n    key: claimReportContentKeyInterface.names,\n    title: \"Applicant Names\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.national_id,\n    title: \"National ID\",\n    status: true,\n  },\n  { key: claimReportContentKeyInterface.gender, title: \"Gender\", status: true },\n  { key: claimReportContentKeyInterface.phone, title: \"Phone\", status: true },\n  {\n    key: claimReportContentKeyInterface.claim_session,\n    title: \"Claim Session\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.education_category,\n    title: \"Education Institute\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.date,\n    title: \"Claim Date\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.decision,\n    title: \"Decision\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.claim_title,\n    title: \"Claim Title\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.claim_type,\n    title: \"Claim Type\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.claim_level,\n    title: \"Claim Level\",\n    status: true,\n  },\n];\n\ntype AppProps = {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  // systemPositions: PositionAPI[] | null;\n  // courses: course[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  // loadCourses: Function;\n  // getAllAnswers: Function;\n  setSelectedClaimType: Function;\n  // getPositions: Function;\n  getAllClaims: Function;\n  GetClaimingTypes: Function;\n  // getAllApplications: Function;\n  GetAllSessionPlans: Function;\n  // getDocumentCategory: Function;\n  // getDocumentSubCategory: Function;\n  // getDocumentFields: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\nconst _ClaimingReport: React.FC<AppProps> = (props) => {\n  const [thisPeriod, setThisPeriod] = useState<SessionPlanInterface | null>(\n    null\n  );\n  const [thisLevel, setThisLevel] = useState<number | \"all\">(\"all\");\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingSession, setLoadingSession] = useState<boolean>(true);\n  const [periodChanged, setPeriodChanged] = useState<boolean>(false);\n  const [loadingClaims, setLoadingClaims] = useState<boolean>(true);\n  const [loadingInstitutes, setLoadingInstitutes] = useState<boolean>(true);\n  const [downloading, setDownloading] = useState<boolean>(false);\n  const [claimToPrint, setClaimToPrint] = useState<\n    ClaimToPrintInterface[] | null\n  >();\n\n  const [sortProperty, setSortProperty] = useState<string>(\"\");\n  const [isSorted, setIsSorted] = useState<boolean>(false);\n  const [sortOrder, setSortOrder] = useState<\"ASC\" | \"DESC\">(\"ASC\");\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const [generateReportModal, setGenerateReportModal] = useState<{\n    reportType: \"EXCEL\" | \"PDF\";\n    status: boolean;\n  } | null>(null);\n  const [reportTitle, setReportTitle] = useState<string>(\"\");\n  const [reportContent, setReportContent] =\n    useState<claimReportContentInterface[]>(defaultReportContent);\n  const [selectAll, setSelectAll] = useState<boolean>(true);\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [selectPeriod, setSelectPeriod] = useState<boolean>(false);\n  const [thisEducation, setThisEducation] = useState<\n    education_category | \"all\"\n  >(\"all\");\n\n  useEffect(() => {\n    // LOADING EDUCATION CATEGORY =================================\n    if (\n      props.schoolLevels.education_categories === null ||\n      props.schoolLevels.education_categories.length === 0\n    ) {\n      props.loadEducationCategories(setLoadingInstitutes);\n    } else {\n      setLoadingInstitutes(false);\n    }\n    // END LOADING EDUCATION CATEGORY =================================\n    // LOADING CLAIM TYPES ========================================\n    if (props.claiming.claimTypes === null) {\n      props.GetClaimingTypes((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n    // END LOADING CLAIM TYPES ========================================\n    // LOADING APPLICATION SESSION ====================================\n    if (props.application_sessions === null) {\n      props.GetAllSessionPlans((status: boolean, msg: string) => {\n        if (!status) {\n          setLoadingSession(false);\n          setLoading(false);\n          if (msg.length) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    } else if (loadingSession) {\n      setLoading(false);\n      setLoadingSession(false);\n    }\n\n    // SETTING ACTIVE SESSION ==========================\n    if (\n      thisPeriod === null &&\n      !loadingSession &&\n      props.application_sessions &&\n      props.application_sessions.length > 0\n    ) {\n      let thisSession = props.application_sessions.find(\n        (item) => item.is_active === true\n      );\n      setThisPeriod(thisSession ? thisSession : props.application_sessions[0]);\n      // if (props.claiming.allAnswer === null) {\n      //   props.getAllAnswers(\n      //     thisSession\n      //       ? thisSession.session_plan_id\n      //       : props.application_sessions[0].session_plan_id,\n      //     (status: boolean, msg: string) => {\n      //       setLoading(status);\n      //       if (!status && msg.length) {\n      //         props.PushPopupAlert({\n      //           title: msg,\n      //           theme: PopupAlertTheme.danger,\n      //         });\n      //       }\n      //     }\n      //   );\n      // }\n    }\n\n    // LOADING DOCUMENT CATEGORIES ==========================\n    // if (!props.documentReducer.documentCategory && loadingDocuments) {\n    //   props.getDocumentCategory();\n    //   setLoadingDocuments(false);\n    // } else if (loadingDocuments) {\n    //   setLoadingDocuments(false);\n    // }\n    // LOADING DOCUMENT CLARIFICATIONS ==========================\n    // if (!props.documentReducer.documentSubCategory && loadingClarifications) {\n    //   props.getDocumentSubCategory();\n    //   setLoadingClarifications(false);\n    // } else if (loadingClarifications) {\n    //   setLoadingClarifications(false);\n    // }\n    // LOADING DOCUMENT FIELDS ==========================\n    // if (!props.documentReducer.documentFields && loadingFields) {\n    //   props.getDocumentFields();\n    //   setLoadingFields(false);\n    // } else if (loadingFields) {\n    //   setLoadingFields(false);\n    // }\n\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (props.claiming.allClaims === null && thisPeriod !== null) {\n      props.getAllClaims(\n        2,\n        thisPeriod.session_plan_id,\n        (status: boolean, msg: string) => {\n          !status && setLoadingClaims(status);\n          if (status === false && msg.length) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    } else if (thisPeriod && loadingClaims) {\n      setLoadingClaims(false);\n    }\n\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    // if (props.claiming.allApplications === null && thisPeriod !== null) {\n    //   props.getAllApplications(\n    //     thisPeriod.session_plan_id,\n    //     (status: boolean, msg: string) => {\n    //       !status && setLoadingApplications(status);\n    //       if (status === false && msg.length) {\n    //         props.PushPopupAlert({\n    //           title: msg,\n    //           theme: PopupAlertTheme.danger,\n    //         });\n    //       }\n    //     }\n    //   );\n    // } else if (thisPeriod && loadingApplications) {\n    //   setLoadingApplications(false);\n    // }\n\n    // if (props.systemPositions === null) {\n    //   props.getPositions((status: boolean, msg: string) => {\n    //     setLoadingPosition(status);\n    //     console.log({ status: status, msg: msg });\n    //     if (msg.length) {\n    //       props.PushPopupAlert({\n    //         title: msg,\n    //         theme: PopupAlertTheme.danger,\n    //       });\n    //     }\n    //   });\n    // } else if (loadingPosition) {\n    //   setLoadingPosition(false);\n    // }\n\n    // LOADING COURSE ====================================\n    // if (\n    //   props.courses === null ||\n    //   (props.courses.length === 0 && loadingCourses)\n    // ) {\n    //   props.loadCourses(setLoadingCourses);\n    // } else if (loadingCourses) {\n    //   setLoadingCourses(false);\n    // }\n  }, [loadingClaims, loadingSession, props, thisPeriod]);\n\n  if (loading === true) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading Data...\n      </div>\n    );\n  }\n\n  if (props.application_sessions && props.application_sessions.length === 0) {\n    return <NoSession />;\n  }\n\n  // const displayClaimTitle = (thisClaim: CandidateClaimInterface): string => {\n  //   let result: string = thisClaim.claiming_on_id;\n  //   if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n  //     result =\n  //       thisClaim.userDetails.details.filter(\n  //         (item) => item.validation_status !== \"waiting\"\n  //       ).length > 0\n  //         ? adminDisplayClaimTitle(\n  //             props.documentReducer,\n  //             thisClaim.userDetails.details.filter(\n  //               (item) => item.validation_status !== \"waiting\"\n  //             ),\n  //             thisClaim\n  //           )\n  //         : \"Document not found\";\n  //   }\n  //   if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n  //     if (props.claiming.allApplications) {\n  //       let thisApplication = props.claiming.allApplications.find(\n  //         (item) => item._id === thisClaim.claiming_on_id\n  //       );\n  //       if (\n  //         thisApplication &&\n  //         props.claiming.allApplications &&\n  //         props.systemPositions\n  //       ) {\n  //         let thisPosition = props.systemPositions.find(\n  //           (item) => item.position_id === thisApplication!.position\n  //         );\n  //         if (thisPosition) {\n  //           result = thisPosition.position_title;\n  //         } else {\n  //           result = \"Application not found\";\n  //         }\n  //       }\n  //     }\n  //   }\n\n  //   if (\n  //     thisClaim.type_key === PlansTypeKeys.EXAMINATION &&\n  //     props.courses &&\n  //     props.claiming.allAnswer\n  //   ) {\n  //     let thisAnswer = getCourseIdBySheetId(\n  //       props.claiming.allAnswer,\n  //       thisClaim.claiming_on_id\n  //     );\n  //     if (thisAnswer && getCourseById(props.courses, thisAnswer.course)) {\n  //       result =\n  //         \"Exam of \" +\n  //         getCourseById(props.courses, thisAnswer.course)!.course_name;\n  //     } else {\n  //       result = \"Unknown exam\";\n  //     }\n  //   }\n\n  //   return result;\n  // };\n\n  // const getClaimInstitute = (\n  //   thisClaim: CandidateClaimInterface\n  // ): string | null => {\n  //   if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n  //     return null;\n  //   }\n  //   // if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n  //   //   if (props.claiming.allApplications) {\n  //   //     let thisApplication = props.claiming.allApplications.find(\n  //   //       (item) => item._id === thisClaim.claiming_on_id\n  //   //     );\n  //   //     if (\n  //   //       thisApplication &&\n  //   //       props.claiming.allApplications &&\n  //   //       props.systemPositions\n  //   //     ) {\n  //   //       // return thisApplication.\n  //   //       let thisPosition = props.systemPositions.find(\n  //   //         (item) => item.position_id === thisApplication!.position\n  //   //       );\n  //   //       if (thisPosition) {\n  //   //         return thisPosition.education_institute_id.education_institute_id;\n  //   //       }\n  //   //     }\n  //   //   }\n  //   // }\n\n  //   return null;\n  // };\n\n  const onPeriodChange = (period_id: string) => {\n    setPeriodChanged(true);\n    props.getAllClaims(2, period_id, (status: boolean, msg: string) => {\n      !status && setPeriodChanged(false);\n      if (status === false && msg.length) {\n        props.PushPopupAlert({\n          title: msg,\n          theme: PopupAlertTheme.danger,\n        });\n      }\n    });\n  };\n\n  const isClaimTypeActive = (\n    selectedType: PlansTypeKeys | \"all\",\n    currentType: PlansTypeKeys | \"all\"\n  ): boolean => {\n    if (currentType === \"all\" && selectedType === \"all\") {\n      return true;\n    } else if (currentType !== \"all\" && selectedType !== \"all\") {\n      if (currentType === selectedType) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  const setSort = (thisProperty: string) => {\n    if (sortProperty === thisProperty && sortOrder === \"ASC\") {\n      setSortOrder(\"DESC\");\n    } else {\n      setSortOrder(\"ASC\");\n    }\n    setSortProperty(thisProperty);\n    setIsSorted(true);\n  };\n\n  const ClaimTypes = (\n    claims: ClaimToPrintInterface[]\n  ): {\n    title: string;\n    count: number;\n    type: PlansTypeKeys | \"all\";\n  }[] => {\n    let output: {\n      title: string;\n      count: number;\n      type: PlansTypeKeys | \"all\";\n    }[] = [{ title: \"All types\", count: claims.length, type: \"all\" }];\n\n    Object.values(PlansTypeKeys).forEach((PlansKey) => {\n      if (PlansKey !== PlansTypeKeys.MARKS_PUBLICATION) {\n        output.push({\n          title: capitalizeFirstLetter(reportClaimType(PlansKey)),\n          count:\n            claims.length > 0\n              ? claims.filter(\n                  (itm) => itm.claim_type === reportClaimType(PlansKey)\n                ).length\n              : 0,\n          type: PlansKey,\n        });\n      }\n    });\n\n    return output;\n  };\n\n  const ClaimLevels = (\n    claims: ClaimToPrintInterface[]\n  ): {\n    title: string;\n    count: number;\n    level: number | \"all\";\n  }[] => {\n    let output: {\n        title: string;\n        count: number;\n        level: number | \"all\";\n      }[] = [{ title: \"All levels\", count: claims.length, level: \"all\" }],\n      levels: number[] = [1, 2];\n    for (let i in levels) {\n      output.push({\n        title: \"Level \" + levels[i],\n        count: claims.filter((itm) => itm.claim_level === levels[i]).length,\n        level: levels[i],\n      });\n    }\n    return output;\n  };\n\n  const updateReportContent = (key: claimReportContentKeyInterface) => {\n    let index: number = reportContent.findIndex((item) => item.key === key);\n    let newArray: claimReportContentInterface[] = reportContent;\n    newArray[index].status = !newArray[index].status;\n    setReportContent(newArray);\n    let isSelectAllNeeded = newArray.find((item) => item.status === false);\n    if (isSelectAllNeeded) {\n      setSelectAll(false);\n    } else {\n      setSelectAll(true);\n    }\n\n    // UPDATE APPLICATION LIST FOR UPDATE ==============================\n    updateClaimToPrint();\n  };\n\n  const updateClaimToPrint = () => {\n    // UPDATE REPORT TITLE ========================\n    if (thisPeriod) {\n      let title = \"Claim Report \" + thisPeriod.session_plan_name;\n      // if (thisLevel!==\"all\") {\n      //   title = \"Claim Report - Level \"+thisLevel + thisPeriod.session_plan_name;\n      // }\n      setReportTitle(title);\n    }\n    // UPDATE CONTENT =============================\n    if (props.claiming.allClaims && props.claiming.claimTypes) {\n      let arrayNew: ClaimToPrintInterface[] = [];\n      let n: number = 1;\n      for (const key in props.claiming.allClaims) {\n        if (\n          Object.prototype.hasOwnProperty.call(props.claiming.allClaims, key)\n        ) {\n          for (const keyClaim in props.claiming.allClaims[key].claims) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                props.claiming.allClaims[key].claims,\n                keyClaim\n              )\n            ) {\n              const element = props.claiming.allClaims[key].claims[keyClaim];\n              const thisType = whichClaimType(props.claiming.allClaims[key]);\n              let dataArray: ClaimToPrintInterface = {\n                claim_id: n,\n                names:\n                  props.claiming.allClaims[key].userDetails.user_info.fname +\n                  \" \" +\n                  props.claiming.allClaims[key].userDetails.user_info.lname,\n                gender: props.claiming.allClaims[key].userDetails.user_info.sex\n                  ? \"Male\"\n                  : \"Female\",\n                national_id: props.claiming.allClaims[key].userDetails.n_id!,\n                phone: props.claiming.allClaims[key].userDetails.phone_number,\n                email: props.claiming.allClaims[key].userDetails.email,\n                claim_type: thisType ? thisType : \"\",\n                claim_level: element.level,\n                education_category: \"\",\n                claim_session: thisPeriod ? thisPeriod.session_plan_name : \"\",\n                date: DATE(element.createdAt),\n                decision: element.decision_taken_status\n                  ? element.decision_taken_status\n                  : \"PENDING\",\n                claim_title: props.claiming.allClaims[key].title,\n              };\n              for (const key in reportContent) {\n                if (Object.prototype.hasOwnProperty.call(reportContent, key)) {\n                  if (!reportContent[key].status) {\n                    delete dataArray[reportContent[key].key];\n                  }\n                }\n              }\n              arrayNew.push(dataArray);\n              n++;\n            }\n          }\n        }\n      }\n      setClaimToPrint(arrayNew);\n      arrayNew = [];\n      n = 1;\n    }\n  };\n\n  const FC_ClaimData = (\n    allClaims: CandidateClaimInterface[] | null\n  ): ClaimToPrintInterface[] | null => {\n    if (allClaims === null) return null;\n    let arrayNew: ClaimToPrintInterface[] = [];\n    let n: number = 1;\n    // LOOP IN ALL CLAIM ONE BY ONE ###########################\n    for (const key in allClaims) {\n      if (Object.prototype.hasOwnProperty.call(allClaims, key)) {\n        // LOOP IN ALL CLAIM OF ONE FILE ONE BY ONE ===========================\n        for (const keyClaim in allClaims[key].claims) {\n          if (\n            Object.prototype.hasOwnProperty.call(\n              allClaims[key].claims,\n              keyClaim\n            )\n          ) {\n            const element = allClaims[key].claims[keyClaim];\n            const thisType = whichClaimType(allClaims[key]);\n            let dataArray: ClaimToPrintInterface = {\n              claim_id: n,\n              names:\n                allClaims[key].userDetails.user_info.fname +\n                \" \" +\n                allClaims[key].userDetails.user_info.lname,\n              gender: allClaims[key].userDetails.user_info.sex\n                ? \"Male\"\n                : \"Female\",\n              national_id: allClaims[key].userDetails.n_id!,\n              phone: allClaims[key].userDetails.phone_number,\n              email: allClaims[key].userDetails.email,\n              claim_type: thisType ? thisType : \"\",\n              claim_level: element.level,\n              education_category:\n                allClaims[key].institute_id &&\n                !isEmptyOrSpaces(allClaims[key].institute_id)\n                  ? allClaims[key].institute_id\n                  : null,\n              claim_session: thisPeriod ? thisPeriod.session_plan_name : \"\",\n              date: DATE(element.createdAt),\n              decision: element.decision_taken_status\n                ? element.decision_taken_status\n                : \"PENDING\",\n              claim_title: allClaims[key].title\n                ? allClaims[key].title\n                : \"Undefined\",\n            };\n            // for (const key in reportContent) {\n            //   if (Object.prototype.hasOwnProperty.call(reportContent, key)) {\n            //     if (!reportContent[key].status) {\n            //       delete dataArray[reportContent[key].key];\n            //     }\n            //   }\n            // }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n      }\n    }\n    return arrayNew;\n  };\n\n  const resetReportContent = (currentState: boolean) => {\n    let newArray: claimReportContentInterface[] = reportContent;\n    for (const key in newArray) {\n      if (isChangeAllowed(newArray[key].key)) {\n        newArray[key].status = !currentState;\n      }\n    }\n\n    setReportContent(newArray);\n    setSelectAll(!currentState);\n    updateClaimToPrint();\n  };\n\n  const isChangeAllowed = (key: claimReportContentKeyInterface): boolean => {\n    if (\n      key === claimReportContentKeyInterface.names ||\n      key === claimReportContentKeyInterface.decision ||\n      key === claimReportContentKeyInterface.claim_session ||\n      key === claimReportContentKeyInterface.claim_type ||\n      key === claimReportContentKeyInterface.date\n    ) {\n      return false;\n    }\n    return true;\n  };\n\n  const FC_GeneratePDF = () => {\n    if (!document.querySelectorAll(\"#report_content tbody tr\").length) {\n      props.PushPopupAlert({\n        title: `Can't generate Report of empty Data`,\n        theme: PopupAlertTheme.warning,\n      });\n      return;\n    }\n\n    if (thisPeriod) {\n      const table: HTMLElement | null =\n        document.getElementById(\"report_content\");\n      const reportSettings: reportSettingsInterface = {\n        doneBy: props.auth.user.fname + \" \" + props.auth.user.lname,\n        title: \"Claim Report\",\n        subjectTitle: \"Claim type\",\n        subject:\n          props.claiming.selectedClaimType === \"all\"\n            ? \"All Types\"\n            : props.claiming.selectedClaimType,\n        period: thisPeriod.session_plan_name,\n        footer: \"Online Recruitment\",\n        institute:\n          thisEducation === \"all\"\n            ? \"All institute\"\n            : thisEducation.education_category_title,\n      };\n      table && generatePDF(reportSettings, table, setDownloading);\n    }\n  };\n\n  const FC_FilterClaims = (\n    allClaims: ClaimToPrintInterface[],\n    claimType: PlansTypeKeys | \"all\",\n    claimLevel: number | \"all\",\n    institute: education_category | \"all\"\n  ): ClaimToPrintInterface[] => {\n    let result: ClaimToPrintInterface[] = allClaims;\n    if (claimType !== \"all\") {\n      result = result.filter((item) => item.claim_type === claimType);\n    }\n    if (claimLevel !== \"all\") {\n      result = result.filter((item) => item.claim_level === claimLevel);\n    }\n\n    if (institute !== \"all\") {\n      result = result.filter(\n        (item) =>\n          item.education_category === null ||\n          item.education_category === institute.education_institute_id\n      );\n    }\n\n    return result;\n  };\n\n  return (\n    <Fragment>\n      <SideNavigation>\n        <div className=\"flex flex-col mb-4\">\n          <span className=\"text-sm text-gray-600 mb-2\">\n            Education categories:\n          </span>\n          {props.schoolLevels.education_categories === null ||\n          loadingInstitutes ? (\n            <Loading />\n          ) : props.schoolLevels.education_categories.length === 0 ? (\n            <span>No result found</span>\n          ) : (\n            <Fragment>\n              <div\n                onClick={() => setThisEducation(\"all\")}\n                className={`border rounded px-2 py-2 mb-2 cursor-pointer ${\n                  thisEducation === \"all\"\n                    ? \"bg-blue-600 text-white hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                    : \"hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                } font-bold flex flex-row items-center gap-2`}\n              >\n                {thisEducation === \"all\" ? (\n                  <MdRadioButtonChecked />\n                ) : (\n                  <MdRadioButtonUnchecked />\n                )}\n                <span>All</span>\n              </div>\n              {props.schoolLevels.education_categories.map((item, i) => (\n                <div\n                  onClick={() => setThisEducation(item)}\n                  key={i + 1}\n                  className={`border rounded px-2 py-2 mb-2 cursor-pointer ${\n                    thisEducation !== \"all\" &&\n                    thisEducation.education_institute_id ===\n                      item.education_institute_id\n                      ? \"bg-blue-600 text-white hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                      : \"hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                  } font-bold flex flex-row items-center gap-2`}\n                >\n                  {thisEducation !== \"all\" &&\n                  thisEducation.education_institute_id ===\n                    item.education_institute_id ? (\n                    <MdRadioButtonChecked />\n                  ) : (\n                    <MdRadioButtonUnchecked />\n                  )}\n                  <span>{item.education_category_title}</span>\n                </div>\n              ))}\n            </Fragment>\n          )}\n        </div>\n        <div className=\"\">\n          <div className=\"text-gray-600 text-sm mb-2\">Selected period:</div>\n          <div\n            onClick={() => setSelectPeriod(true)}\n            className=\"font-bold bg-blue-50 border border-blue-200 rounded py-2 cursor-pointer text-xs px-2 hover:underline  text-blue-600  mb-4 w-full flex flex-row items-center animate__animated animate__zoomIn\"\n          >\n            {thisPeriod !== null\n              ? `${thisPeriod.session_plan_name} - ${thisPeriod.period}`\n              : \"Filter by period\"}\n            <FiEdit className=\"text-3xl text-blue-600\" />\n          </div>\n        </div>\n        <div className=\"pt-1\">\n          <div className=\"text-sm text-gray-700 pb-2 pt-2\">Claim types:</div>\n          {props.claiming.claimTypes === null ||\n          FC_ClaimData(props.claiming.allClaims) === null ? (\n            <Loading />\n          ) : (\n            ClaimTypes(FC_ClaimData(props.claiming.allClaims)!).map(\n              (item, index: number) => (\n                <div\n                  onClick={() =>\n                    props.setSelectedClaimType(reportClaimType(item.type))\n                  }\n                  key={item.title + index}\n                >\n                  <MainItem\n                    title={item.title}\n                    count={item.count}\n                    active={isClaimTypeActive(\n                      props.claiming.selectedClaimType,\n                      item.type\n                    )}\n                  />\n                </div>\n              )\n            )\n          )}\n        </div>\n        <div className=\"pt-1\">\n          <div className=\"text-sm text-gray-700 pb-2 pt-2\">Claim level:</div>\n          {props.claiming.claimTypes === null ||\n          FC_ClaimData(props.claiming.allClaims) === null ? (\n            <Loading />\n          ) : (\n            ClaimLevels(FC_ClaimData(props.claiming.allClaims)!).map(\n              (item, index: number) => (\n                <div\n                  onClick={() => setThisLevel(item.level)}\n                  key={item.title + index}\n                >\n                  <MainItem\n                    title={item.title}\n                    count={item.count}\n                    active={item.level === thisLevel}\n                  />\n                </div>\n              )\n            )\n          )}\n        </div>\n      </SideNavigation>\n      <section>\n        {/* REPORT TITLE ============================================ */}\n        <div className=\"grid md:grid-cols-12\">\n          <div className=\"col-span-8\">\n            <div className=\"mt-4 mx-4 flex flex-col gap-1\">\n              <span className=\"text-3xl font-bold text-gray-700\">\n                Claim report\n              </span>\n            </div>\n          </div>\n          <div className=\"col-span-4\">\n            <div className=\"float-right mt-2\">\n              {props.claiming.allClaims && props.claiming.allClaims.length > 0 && (\n                <div className=\"flex flex-row items-center justify-end font-bold mb-2\">\n                  <BiExport className=\"text-2xl text-gray-500\" />\n                  <span className=\"text-gray-500\">Export as</span>\n                  <button\n                    className=\"px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200\"\n                    disabled={loading}\n                    onClick={() => {\n                      updateClaimToPrint();\n                      setGenerateReportModal({\n                        reportType: \"EXCEL\",\n                        status: true,\n                      });\n                    }}\n                  >\n                    EXCEL\n                  </button>\n                  <button\n                    className={`px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200 ${\n                      downloading && \"cursor-wait\"\n                    }`}\n                    onClick={() => FC_GeneratePDF()}\n                    disabled={loading || downloading}\n                  >\n                    PDF\n                  </button>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n        {/* END REPORT TITLE ============================================ */}\n        <div className=\"bg-white my-4\">\n          <div className=\"w-full px-2 py-2\">\n            <input\n              onChange={(e) => setSearchInput(e.target.value)}\n              type=\"text\"\n              value={searchInput}\n              placeholder=\"Search...\"\n              className=\"w-full bg-gray-100 py-2 px-3 rounded focus:border-gray-800\"\n              disabled={\n                props.claiming.allClaims === null ||\n                props.claiming.claimTypes === null ||\n                FC_ClaimData(props.claiming.allClaims) === null ||\n                periodChanged\n              }\n            />\n          </div>\n          <table className=\"w-full shadow\" id=\"report_content\">\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n              <tr>\n                <td className=\"px-2 py-2\">#</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"names\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Applicant names <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">National ID</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"gender\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Gender <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">Phone</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"claim_title\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Claim Title <BiSort />\n                  </div>\n                </td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"claim_type\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Claim Type <BiSort />\n                  </div>\n                </td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"claim_level\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Claim Level <BiSort />\n                  </div>\n                </td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"decision\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Status <BiSort />\n                  </div>\n                </td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"date\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Date <BiSort />\n                  </div>\n                </td>\n              </tr>\n            </thead>\n            <tbody>\n              {props.claiming.allClaims === null ||\n              props.claiming.claimTypes === null ||\n              periodChanged ? (\n                <TableLoading cols={10} />\n              ) : FC_ClaimData(props.claiming.allClaims) === null ? (\n                <TableLoading cols={10} />\n              ) : FC_FilterClaims(\n                  FC_ClaimData(props.claiming.allClaims)!,\n                  props.claiming.selectedClaimType,\n                  thisLevel,\n                  thisEducation\n                ).length === 0 ? (\n                <tr>\n                  <td colSpan={10} className=\"px-2 py-2\">\n                    <div className=\"flex flex-col text-gray-400 items-center justify-center bg-gray-100 rounded py-10\">\n                      <ImFilesEmpty className=\"text-8xl text-gray-400 mb-2 animate__animated animate__shakeX\" />\n                      <span className=\"text-sm font-bold\">\n                        No result found! Please try to search again\n                      </span>\n                      <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n                        <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                          <li\n                            onClick={() => setSelectPeriod(true)}\n                            className=\"underline text-gray-500 cursor-pointer\"\n                          >\n                            Filter by period\n                          </li>\n                          <li className=\"text-gray-400 italic\">or</li>\n                          <li className=\"text-gray-500\">\n                            Filter by Claim type\n                          </li>\n                          <li className=\"text-gray-400 italic\">or</li>\n                          <li className=\"text-gray-500\">\n                            Filter by Claim Level\n                          </li>\n                        </ul>\n                      </div>\n                    </div>\n                  </td>\n                </tr>\n              ) : (\n                sortThisArray(\n                  isSorted,\n                  searchData(\n                    FC_FilterClaims(\n                      FC_ClaimData(props.claiming.allClaims)!,\n                      props.claiming.selectedClaimType,\n                      thisLevel,\n                      thisEducation\n                    ),\n                    searchInput\n                  ),\n                  sortProperty,\n                  sortOrder\n                ).map((item: ClaimToPrintInterface, i) => (\n                  <tr\n                    key={i + 1}\n                    className={`${\n                      i % 2 !== 0 ? \"bg-gray-100\" : \"bg-white\"\n                    } text-gray-600 hover:bg-blue-100 hover:text-blue-700 border-b border-gray-300 hover:border-blue-500 text-sm`}\n                  >\n                    <td className=\"px-2 py-2\">{i + 1}</td>\n                    <td className=\"px-2 py-2\">{item.names}</td>\n                    <td className=\"px-2 py-2\">{item.national_id}</td>\n                    <td className=\"px-2 py-2\">{item.gender}</td>\n                    <td className=\"px-2 py-2\">{item.phone}</td>\n                    <td className=\"px-2 py-2\">{item.claim_title}</td>\n                    <td className=\"px-2 py-2\">{item.claim_type}</td>\n                    <td className=\"px-2 py-2\">{\"Level \" + item.claim_level}</td>\n                    <td className=\"px-2 py-2\">\n                      {item.decision}\n                      {/* {capitalizeFirstLetter(item.decision)} */}\n                    </td>\n                    <td className=\"px-2 py-2\">{item.date}</td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </section>\n      {/* GENERATE DYNAMIC REPORT CONTENT MODAL */}\n      {generateReportModal !== null && generateReportModal.status === true && (\n        <Modal\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              {/* <IoBriefcase className=\"text-5xl text-gray-500\" /> */}\n              <div className=\"flex flex-col\">\n                <span className=\"font-bold text-2xl text-gray-500\">\n                  Generating Report contents\n                </span>\n                <span className=\"text-sm text-blue-600 font-normal\">\n                  Generating {generateReportModal.reportType} Report\n                </span>\n              </div>\n            </div>\n          }\n          backDrop={true}\n          theme={Themes.default}\n          close={() => setGenerateReportModal(null)}\n          backDropClose={false}\n          widthSizeClass={ModalSize.medium}\n          displayClose={true}\n          padding={{ title: true }}\n        >\n          <div className=\"px-6\">\n            <div className=\"my-2 text-base text-gray-700 sm:text-lg\">\n              <div className=\"flex flex-col\">\n                <label>Title</label>\n                <input\n                  type=\"text\"\n                  className={`text-left input-white w-20 inline-block ${\n                    formError && formError.element === \"report_title\"\n                      ? \"border-red-500\"\n                      : \"border-gray-500\"\n                  } border-2`}\n                  placeholder=\"Sub Category Title\"\n                  value={reportTitle}\n                  onChange={(e) => {\n                    setFormError(null);\n                    setReportTitle(e.target.value);\n                  }}\n                  disabled={loading}\n                />\n                {formError && formError.element === \"report_title\" && (\n                  <span className=\"text-red-500\">{formError.msg}</span>\n                )}\n              </div>\n              <div className=\"flex flex-col mt-2\">\n                <label>Report content</label>\n                <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                  {reportContent.map((item, index) => (\n                    <div\n                      key={index}\n                      className={`flex items-center gap-1 ${\n                        isChangeAllowed(item.key)\n                          ? \"cursor-pointer\"\n                          : \"cursor-not-allowed\"\n                      }`}\n                      onClick={() =>\n                        isChangeAllowed(item.key) &&\n                        updateReportContent(item.key)\n                      }\n                      title={\n                        !isChangeAllowed(item.key)\n                          ? \"Required for every report!\"\n                          : \"\"\n                      }\n                    >\n                      {item.status ? (\n                        <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                      ) : (\n                        <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                      )}\n                      <span>{item.title}</span>\n                    </div>\n                  ))}\n                </div>\n                {formError && formError.element === \"report_content\" && (\n                  <span className=\"text-red-500\">{formError.msg}</span>\n                )}\n              </div>\n            </div>\n            <div className=\"flex justify-between mb-2 mt-4\">\n              <div\n                className={`flex items-center gap-1 cursor-pointer`}\n                onClick={() => resetReportContent(selectAll)}\n              >\n                {selectAll ? (\n                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                ) : (\n                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                )}\n                <span>Select all</span>\n              </div>\n\n              {claimToPrint && !loading && (\n                <ExportToExcel\n                  fileData={claimToPrint}\n                  fileName={reportTitle}\n                  btnName=\"Generate\"\n                />\n              )}\n            </div>\n          </div>\n        </Modal>\n      )}\n      {/* END GENERATE DYNAMIC REPORT CONTENT MODAL */}\n      {selectPeriod && (\n        <Modal\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              <MdHistory className=\"text-5xl text-blue-600\" />\n              <span className=\"flex flex-col\">Choose a period</span>\n            </div>\n          }\n          backDrop={true}\n          theme={Themes.default}\n          close={() => thisPeriod !== null && setSelectPeriod(false)}\n          backDropClose={true}\n          widthSizeClass={ModalSize.extraLarge}\n          displayClose={true}\n          padding={{ title: true }}\n        >\n          <ChooseSession\n            allSession={props.application_sessions}\n            setSelectSession={(value: SessionPlanInterface | \"all\") => {\n              value !== \"all\" && setThisPeriod(value);\n              value !== \"all\" && onPeriodChange(value.session_plan_id);\n              value !== \"all\" && setSelectPeriod(false);\n            }}\n            chooseAll={false}\n            currentSelected={thisPeriod ? thisPeriod : \"all\"}\n          />\n        </Modal>\n      )}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  sessionPlan,\n  claiming,\n  document,\n  schoolLevels,\n}: StoreState): {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n} => {\n  return {\n    auth: auth,\n    application_sessions: sessionPlan.allSessionPlans,\n    claiming,\n    documentReducer: document,\n    schoolLevels,\n  };\n};\n\nexport const ClaimingReport = connect(mapStateToProps, {\n  getAllClaims,\n  GetClaimingTypes,\n  getAllApplications,\n  GetAllSessionPlans,\n  loadEducationCategories,\n  setSelectedClaimType,\n  PushPopupAlert,\n})(_ClaimingReport);\n"],"sourceRoot":""}
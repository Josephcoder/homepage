{"version":3,"sources":["containers/AccessManagement/AccessRole.tsx","containers/AccessManagement/StepOne.tsx","containers/AccessManagement/StepTwo.tsx","containers/AccessManagement/index.tsx","components/Table/Table.tsx","components/Navigation/SideNavigation.tsx","actions/settings.ts"],"names":["ModalStateRole","StepOne","handleSubmit","setRoleTitle","roleTitle","roleRequirement","setRequirement","error","setError","className","onSubmit","e","htmlFor","type","element","value","placeholder","onChange","target","msg","name","checked","StepTwo","UserAccessList","do_exam","APPLICATION_OVERRIDE","CLAIM_VALIDATION","DOCUMENT_CHECKING","LOCATION_MANAGEMENT","POST_APPROVAL","POST_REQUEST","PREPARE_EXAM","PROCTORING_ROOM","QUESTION_BANK","SCHOOL_MANAGEMENT","SYSTEM_SETTINGS","USER_MANAGEMENT","admin","props","updateFieldChanged","index","newArr","accessToRole","permitted","create","view","update","delete","setAccessToRole","Table","columns","columnTitle","alignText","padding","rows","map","access","task","id","pagination","search","thColor","disabled","loadingRequest","TabTypes","AccessRole","setViewRole","setState","viewRole","setLoadingRequest","setLoading","loading","setRoleId","roleId","setStepStatus","stepsStatus","setOpenModal","openModal","setFeedBack","feedBack","setRoleSelected","roleSelected","whichLevel","row","district_required","room_required","school_required","education_institution_required","userRows","result","loadCurrentRoles","accessRoles","state","system_user_role_id","role","onClick","CustomizeAccess","message","Update_Role_Access","Close_Modal","length","colSpan","typeRows","roleDetails","filter","userAccess","accessTasks","oneAccess","newArray","forEach","find","item","key","push","componentDidMount","GetTaskAccess","status","isEmptyOrSpaces","PushPopupAlert","title","theme","PopupAlertTheme","danger","handleSteps","step","stepOne","stepTwo","a","preventDefault","some","Add_Role_Access","axios","post","API","AUTH","res","createAccessRoles","data","cleanAndCloseModal","patch","console","log","updateAccessRoles","role_error","errorToText","filterStatus","changeViewRole","role_id","assignAccess","this","Loading","searchBG","Modal","backDrop","Themes","default","close","displayClose","backDropClose","widthSizeClass","ModalSize","extraLarge","body","footer","__fff","___jjj","large","tableId","Component","connect","system_settings","AccessManagement","fetchAccessRoles","useState","allRole","activeRole","blockedRole","labelCounts","setLabelCounts","All_Roles","roleStatus","setRoleStatus","useEffect","SideNavigation","count","active","Active_Roles","Blocked_Roles","toTwoDigit","table","tr","characters","charactersLength","i","charAt","Math","floor","random","FC_makeID","totalItems","setTotalItems","totalPages","setTotalPages","currentPage","setCurrentPage","pages","setPages","pageSize","setPageSize","startIndex","setStartIndex","endIndex","setEndIndex","tablePagination","document","getElementById","getElementsByTagName","ceil","min","_pages","Array","from","keys","style","display","tableSize","filterType","td","cols","toLowerCase","textContent","innerText","indexOf","filterTable","Number","tableClass","rounded","hideColumns","column","isSortAllowed","switching","x","y","shouldSwitch","colIndex","dir","switchcount","innerHTML","parentNode","insertBefore","sortThisColumn","aria-label","page","pageIndex","_SideNavigation","PageHasSubNav","componentWillUnmount","auth","isAuthenticated","navActive","system","navigation","children","React","NavToogle","MainItem","icon","MdBrightness1","IconDefined","getSystemSettings","callback","dispatch","setAxiosToken","get","ActionTypes","GET_SYSTEM_SETTINGS","payload","code_error","disableSystemSetting","DISABLE_SYSTEM_SETTINGS","response","GET_TASK_ACCESS","getPositions","APPLICATION","GET_POSTIONS","deletePosition","DELETE_POSITION","publishPosition","PUBLISH_POSITION"],"mappings":"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","file":"static/js/55.03d40063.chunk.js","sourcesContent":["import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport {\n  MdClose,\n  MdEdit,\n  MdErrorOutline,\n  MdHighlightOff,\n} from \"react-icons/md\";\nimport { TiInputChecked, TiKey } from \"react-icons/ti\";\nimport { connect } from \"react-redux\";\nimport {\n  createAccessRoles,\n  PushPopupAlert,\n  updateAccessRoles,\n} from \"../../actions\";\nimport { GetTaskAccess } from \"../../actions/settings\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport Loading from \"../../components/Loading/Loading\";\nimport Modal, { Themes, ModalSize } from \"../../components/Modal/Modal\";\nimport Table from \"../../components/Table/Table\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { AccessType } from \"../../reducers/access\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport {\n  AccessTaskInterface,\n  SystemUserRoleInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport StepOne from \"./StepOne\";\nimport StepTwo from \"./StepTwo\";\n\nexport enum ModalStateRole {\n  Add_Role_Access,\n  Update_Role_Access,\n  Close_Modal,\n}\n\ninterface AppProps {\n  access: AccessType;\n  filterStatus: boolean | \"all\";\n  accessTasks: AccessTaskInterface[] | null;\n  GetTaskAccess: Function;\n  createAccessRoles: Function;\n  updateAccessRoles: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface AppState {\n  roleId: string;\n  roleTitle: string;\n  roleRequirement: \"none\" | \"institute\" | \"district\" | \"school\" | \"room\";\n  stepsStatus: {\n    stepOne: boolean;\n    stepTwo: boolean;\n  };\n  accessToRole: AccessTaskInterface[];\n  openModal: ModalStateRole;\n  error: { element: string; msg: string };\n  feedBack: {\n    type: \"success\" | \"danger\" | \"warning\" | \"\";\n    message: string;\n  };\n  loadingRequest: boolean;\n  loading: boolean;\n  viewRole: boolean;\n  roleSelected: SystemUserRoleInterface | null;\n}\n\nexport class AccessRole extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      roleId: \"\",\n      roleTitle: \"\",\n      roleRequirement: \"none\",\n      stepsStatus: {\n        stepOne: false,\n        stepTwo: false,\n      },\n      accessToRole: [],\n      openModal: ModalStateRole.Close_Modal,\n      error: { element: \"\", msg: \"\" },\n      feedBack: {\n        type: \"\",\n        message: \"\",\n      },\n      loadingRequest: false,\n      loading: true,\n      viewRole: false,\n      roleSelected: null,\n    };\n  }\n\n  setViewRole = (value: boolean) => {\n    this.setState({ viewRole: value });\n  };\n\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setRoleId = (value: string) => {\n    this.setState({ roleId: value });\n  };\n\n  setRoleTitle = (value: string) => {\n    this.setState({ roleTitle: value });\n  };\n\n  setRequirement = (\n    value: \"none\" | \"institute\" | \"district\" | \"school\" | \"room\"\n  ) => {\n    this.setState({ roleRequirement: value });\n  };\n\n  setStepStatus = (value: { stepOne: boolean; stepTwo: boolean }) => {\n    this.setState({ stepsStatus: value });\n  };\n\n  setAccessToRole = (value: AccessTaskInterface[]) => {\n    this.setState({ accessToRole: value });\n  };\n\n  setOpenModal = (value: ModalStateRole) => {\n    this.setState({ openModal: value });\n  };\n\n  setError = (value: { element: string; msg: string }) => {\n    this.setState({ error: value });\n  };\n\n  setFeedBack = (value: {\n    type: \"\" | \"success\" | \"danger\" | \"warning\";\n    message: string;\n  }) => {\n    this.setState({ feedBack: value });\n  };\n\n  setRoleSelected = (value: SystemUserRoleInterface | null) => {\n    this.setState({ roleSelected: value });\n  };\n\n  whichLevel = (row: SystemUserRoleInterface): string => {\n    if (row.district_required) {\n      return \"District\";\n    } else if (row.room_required) {\n      return \"Room\";\n    } else if (row.school_required) {\n      return \"School\";\n    } else if (row.education_institution_required) {\n      return \"Institute\";\n    }\n    return \"None\";\n  };\n\n  userRows = (): JSX.Element | (false | JSX.Element)[] => {\n    const result = this.loadCurrentRoles(this.props.access.accessRoles).map(\n      (row, index) => (\n        <tr\n          key={index}\n          className={`accordion border-b border-grey-light hover:bg-gray-100 group ${\n            this.state.roleId === row.system_user_role_id && \"bg-gray-100\"\n          }`}\n        >\n          <td className=\"px-3 py-3 text-left\">{index + 1}</td>\n          <td className=\"text-gray-800 text-base font-medium text-left px-3\">\n            {row.role}\n          </td>\n          <td className=\"text-gray-800 text-base text-left px-3\">\n            {this.whichLevel(row)}\n          </td>\n          <td className=\"text-right\">\n            <div className=\"inline-flex\">\n              <button\n                className=\"btn bg-gray-300 text-gray-900 group-hover:bg-gray-600 group-hover:text-white inline-flex mr-1 focus:outline-none\"\n                onClick={() => {\n                  this.setViewRole(true);\n                  this.setRoleId(row.system_user_role_id);\n                  this.setRoleSelected(row);\n                  this.setRoleTitle(row.role);\n                  this.setRequirement(\n                    row.district_required\n                      ? \"district\"\n                      : row.school_required\n                      ? \"school\"\n                      : row.room_required\n                      ? \"room\"\n                      : \"none\"\n                  );\n                  this.setAccessToRole(this.CustomizeAccess(row.access));\n                }}\n                disabled={this.state.roleId === row.system_user_role_id}\n              >\n                <TiKey className=\"h-5 w-5 mr-1\" />\n                <span>Access</span>\n              </button>\n              <button\n                className=\"btn bg-blue-500 text-white hover:bg-blue-700 inline-flex mr-1 focus:outline-none\"\n                onClick={() => {\n                  this.setRoleId(row.system_user_role_id);\n                  this.setRoleTitle(row.role);\n                  this.setFeedBack({ type: \"\", message: \"\" });\n                  this.setOpenModal(ModalStateRole.Update_Role_Access);\n                  this.setAccessToRole(this.CustomizeAccess(row.access));\n                }}\n                disabled={\n                  this.state.roleId === row.system_user_role_id &&\n                  this.state.openModal !== ModalStateRole.Close_Modal\n                }\n              >\n                <MdEdit className=\"h-5 w-5 mr-1\" />\n                <span>Edit</span>\n              </button>\n              {/* <button\n              className=\"btn bg-red-300 text-red-900 hover:bg-red-600 hover:text-white inline-flex mr-1\"\n              onClick={() => {\n                setRoleId(row.system_user_role_id);\n                setFeedBack({ type: \"\", message: \"\" });\n                setRoleTitle(row.role);\n              }}\n              disabled={roleId === row.system_user_role_id}\n            >\n              <MdDelete className=\"h-5 w-5 mr-1\" />\n              <span>Delete</span>\n            </button> */}\n            </div>\n          </td>\n        </tr>\n      )\n    );\n\n    if (result.length >= 1) {\n      return result;\n    } else {\n      return (\n        <tr className=\"accordion border-b border-grey-light hover:bg-gray-100\">\n          <td\n            className=\"text-gray-500 text-sm font-medium text-center px-3\"\n            colSpan={3}\n          >\n            No Data Found\n          </td>\n        </tr>\n      );\n    }\n  };\n\n  typeRows = (): JSX.Element | (false | JSX.Element)[] => {\n    const roleDetails = this.props.access.accessRoles\n      .filter((role) => role.system_user_role_id === this.state.roleId)[0]\n      .access.map((access, index) => (\n        <tr\n          key={index}\n          className=\"accordion border-b border-grey-light hover:bg-gray-100\"\n        >\n          <td className=\"text-gray-800 text-xl font-medium text-left px-3 py-2\">\n            {access.task}\n          </td>\n          <td className=\"px-2\">\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.create ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.create ? (\n                <TiInputChecked />\n              ) : (\n                <MdHighlightOff />\n              )}\n              {access.permitted.create ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n          <td className=\"px-2\">\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.view ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.view ? <TiInputChecked /> : <MdHighlightOff />}\n              {access.permitted.view ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n          <td className=\"px-2\">\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.update ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.update ? (\n                <TiInputChecked />\n              ) : (\n                <MdHighlightOff />\n              )}\n              {access.permitted.update ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n          <td className=\"px-2\">\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.delete ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.delete ? (\n                <TiInputChecked />\n              ) : (\n                <MdHighlightOff />\n              )}\n              {access.permitted.delete ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n        </tr>\n      ));\n\n    if (roleDetails.length >= 1) {\n      return roleDetails;\n    } else {\n      return (\n        <tr className=\"accordion border-b border-grey-light hover:bg-gray-100\">\n          <td\n            className=\"text-gray-500 text-sm font-medium text-center px-3\"\n            colSpan={4}\n          >\n            No Tasks assigned to this Role\n          </td>\n        </tr>\n      );\n    }\n  };\n\n  CustomizeAccess = (\n    userAccess: AccessTaskInterface[]\n  ): AccessTaskInterface[] => {\n    if (!this.props.accessTasks) return [];\n    let newArray: AccessTaskInterface[] = [];\n    let oneAccess: AccessTaskInterface | undefined;\n    this.props.accessTasks.forEach((element, index) => {\n      oneAccess = userAccess.find((item) => item.key === element.key);\n      if (oneAccess) {\n        newArray.push(oneAccess);\n      } else {\n        newArray.push(element);\n      }\n    });\n\n    return newArray;\n  };\n\n  componentDidMount = () => {\n    if (this.state.loading || this.props.accessTasks === null) {\n      this.props.GetTaskAccess((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (!status && !isEmptyOrSpaces(msg)) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    }\n  };\n\n  handleSteps = (step: 1 | 2) => {\n    if (step === 2) {\n      if (!this.state.roleTitle.length) {\n        return this.setError({\n          element: \"role-title\",\n          msg: \"Role Title is required\",\n        });\n      }\n\n      if (!this.state.roleRequirement.length) {\n        this.setRequirement(\"none\");\n      }\n\n      this.setStepStatus({ stepOne: true, stepTwo: false });\n    } else {\n      this.setStepStatus({ stepOne: false, stepTwo: false });\n    }\n  };\n\n  handleSubmit = async (e: React.FormEvent<HTMLFormElement>, step: 1 | 2) => {\n    e.preventDefault();\n    this.setFeedBack({ type: \"\", message: \"\" });\n    this.setError({\n      element: \"\",\n      msg: \"\",\n    });\n    this.setLoadingRequest(true);\n    if (step === 1) {\n      if (!this.state.roleTitle.length) {\n        return this.setError({\n          element: \"role-title\",\n          msg: \"Role Title is required\",\n        });\n      }\n\n      if (!this.state.roleRequirement.length) {\n        this.setRequirement(\"none\");\n      }\n\n      this.setStepStatus({ stepOne: true, stepTwo: false });\n    }\n    if (step === 2) {\n      if (\n        this.state.accessToRole &&\n        !this.state.accessToRole.some(\n          (e) =>\n            e.permitted.create === true ||\n            e.permitted.view === true ||\n            e.permitted.update === true ||\n            e.permitted.delete === true\n        )\n      ) {\n        return this.setError({\n          element: \"role-access\",\n          msg: \"At least one permission is required\",\n        });\n      }\n\n      try {\n        if (this.state.openModal === ModalStateRole.Add_Role_Access) {\n          const res = await axios.post<{ data: SystemUserRoleInterface[] }>(\n            `${API.AUTH}/role`,\n            {\n              role: this.state.roleTitle,\n              status: true,\n              district_required:\n                this.state.roleRequirement === \"district\" ? true : false,\n              school_required:\n                this.state.roleRequirement === \"school\" ? true : false,\n              room_required:\n                this.state.roleRequirement === \"room\" ? true : false,\n              education_institution_required:\n                this.state.roleRequirement === \"institute\" ? true : false,\n              access: this.state.accessToRole,\n            }\n          );\n          if (res) this.props.createAccessRoles(res.data.data);\n          this.setLoadingRequest(false);\n          this.cleanAndCloseModal();\n          this.setFeedBack({\n            type: \"success\",\n            message: `Role has been successfully created.`,\n          });\n        } else {\n          const res = await axios.patch<{ data: SystemUserRoleInterface[] }>(\n            `${API.AUTH}/role`,\n            {\n              role: this.state.roleTitle,\n              status: true,\n              district_required:\n                this.state.roleRequirement === \"district\" ? true : false,\n              school_required:\n                this.state.roleRequirement === \"school\" ? true : false,\n              room_required:\n                this.state.roleRequirement === \"room\" ? true : false,\n              access: this.state.accessToRole,\n              system_user_role_id: this.state.roleId,\n            }\n          );\n          console.log(res.data);\n          if (res) this.props.updateAccessRoles(res.data.data);\n          this.setLoadingRequest(false);\n          this.cleanAndCloseModal();\n          this.setFeedBack({\n            type: \"success\",\n            message: `Role has been successfully updated.`,\n          });\n        }\n      } catch (error) {\n        console.log({ role_error: error });\n        this.setFeedBack({ type: \"danger\", message: errorToText(error) });\n      }\n    }\n    this.setLoadingRequest(false);\n  };\n\n  loadCurrentRoles = (\n    accessRoles: SystemUserRoleInterface[]\n  ): SystemUserRoleInterface[] => {\n    if (this.props.filterStatus !== \"all\")\n      return accessRoles.filter(\n        (role) => role.status === this.props.filterStatus\n      );\n    else return accessRoles;\n  };\n\n  changeViewRole = (role_id: string) => {\n    let result = this.props.access.accessRoles.filter(\n      (role) => role.system_user_role_id === role_id\n    )[0];\n    this.setViewRole(true);\n    this.setRoleId(result.system_user_role_id);\n    this.setRoleSelected(result);\n    this.setRoleTitle(result.role);\n    this.setRequirement(\n      result.district_required\n        ? \"district\"\n        : result.school_required\n        ? \"school\"\n        : result.room_required\n        ? \"room\"\n        : \"none\"\n    );\n    this.setAccessToRole(this.CustomizeAccess(result.access));\n  };\n\n  cleanAndCloseModal = (): void => {\n    this.setStepStatus({ stepOne: false, stepTwo: false });\n    if (this.state.openModal !== ModalStateRole.Update_Role_Access) {\n      this.setRequirement(\"none\");\n      this.setRoleTitle(\"\");\n      this.setRoleId(\"\");\n    }\n\n    this.setLoadingRequest(false);\n    this.setFeedBack({ type: \"\", message: \"\" });\n    this.props.accessTasks\n      ? this.setAccessToRole([...this.props.accessTasks])\n      : this.setAccessToRole([]);\n    this.setRoleSelected(null);\n\n    this.setError({\n      element: \"\",\n      msg: \"\",\n    });\n    this.state.openModal === ModalStateRole.Update_Role_Access &&\n      this.setOpenModal(ModalStateRole.Close_Modal);\n  };\n\n  assignAccess = () => {};\n\n  render() {\n    if (this.props.accessTasks === null || this.state.loading) {\n      return <Loading />;\n    }\n\n    return (\n      <div className=\"w-full\">\n        {/* ------------------------- FEEDBACK -------------------------------- */}\n        {this.state.feedBack &&\n          this.state.feedBack.type !== \"\" &&\n          this.state.openModal === ModalStateRole.Close_Modal && (\n            <div className=\"w-full overflow-x-hidden\">\n              <div\n                className={`alert-${this.state.feedBack.type} flex flex-row items-center relative my-2 animate__animated animate__fadeInRight`}\n              >\n                <span className=\"absolute top-0 bottom-0 right-0 px-4 py-3\">\n                  <MdClose\n                    className=\"h-5 w-5 text-gray-700 hover:font-bold\"\n                    title=\"Close\"\n                    onClick={() => this.setFeedBack({ type: \"\", message: \"\" })}\n                  />\n                </span>\n                <MdErrorOutline className=\"h-10 w-10\" />\n                <div className=\"alert-content ml-4\">\n                  <div className=\"alert-title font-semibold text-lg\">\n                    {this.state.feedBack.type === \"success\"\n                      ? \"Success\"\n                      : \"Error\"}\n                  </div>\n                  <div className=\"alert-description text-sm\">\n                    {this.state.feedBack.message}\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n\n        <div\n          className={`w-full bg-white text-right p-2 border border-gray-300 rounded mb-10`}\n        >\n          {/* ------------------------- CREATE NE ROLE BUTTON -------------------------------- */}\n          <button\n            className={`btn btn-blue ${\n              this.state.loadingRequest && \"cursor-wait\"\n            }`}\n            onClick={() => {\n              this.setOpenModal(ModalStateRole.Add_Role_Access);\n              this.props.accessTasks &&\n                this.setAccessToRole([...this.props.accessTasks]);\n              this.setRoleId(\"\");\n              this.setRoleTitle(\"\");\n              this.setRequirement(\"none\");\n            }}\n            disabled={\n              this.state.loadingRequest || this.props.accessTasks === null\n            }\n          >\n            New Role\n          </button>\n          {/* ------------------------- END CREATE NE ROLE BUTTON ---------------------------- */}\n          <div className=\"overflow-x-auto w-full mt-2\">\n            <Table\n              columns={[\n                { columnTitle: \"#\", alignText: \"left\" },\n                { columnTitle: \"User Roles\", alignText: \"left\" },\n                { columnTitle: \"Level\", alignText: \"left\" },\n                { columnTitle: \"\", alignText: \"center\" },\n              ]}\n              rows={this.userRows}\n              pagination={true}\n              search={true}\n              searchBG=\"bg-white\"\n              thColor=\"blue\"\n            />\n          </div>\n        </div>\n\n        {/* -----Modal Management----- */}\n        {this.state.openModal !== ModalStateRole.Close_Modal && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={(): void => {\n              this.cleanAndCloseModal();\n              this.setOpenModal(ModalStateRole.Close_Modal);\n            }}\n            displayClose={true}\n            backDropClose={false}\n            title={\n              <div className=\"bg-white text-gray-500 font-bold text-2xl\">\n                {this.state.openModal === ModalStateRole.Add_Role_Access\n                  ? `Create New `\n                  : `Update `}\n                Role\n              </div>\n            }\n            widthSizeClass={ModalSize.extraLarge}\n            padding={{ title: true, body: false, footer: false }}\n          >\n            {/* User Access Select */}\n            <div className=\"h-full bg-gray-100 py-1\">\n              {this.state.feedBack && this.state.feedBack.type !== \"\" && (\n                <div\n                  className={`alert-${this.state.feedBack.type} flex flex-row items-center relative mx-3`}\n                >\n                  <span className=\"absolute top-0 bottom-0 right-0 px-4 py-3\">\n                    <MdClose\n                      className=\"h-5 w-5 text-gray-700 hover:font-bold\"\n                      title=\"Close\"\n                      onClick={() =>\n                        this.setFeedBack({ type: \"\", message: \"\" })\n                      }\n                    />\n                  </span>\n                  <MdErrorOutline className=\"h-10 w-10\" />\n                  <div className=\"alert-content ml-4\">\n                    <div className=\"alert-title font-semibold text-lg\">\n                      {this.state.feedBack.type === \"success\"\n                        ? \"Success\"\n                        : \"Error\"}\n                    </div>\n                    <div className=\"alert-description text-sm\">\n                      {this.state.feedBack.message}\n                    </div>\n                  </div>\n                </div>\n              )}\n              <div className=\"grid grid-cols-1 md:grid-cols-3 justify-between gap-3\">\n                <div className=\"bg-white shadow my-3 ml-3 py-2 rounded\">\n                  <div\n                    className={`flex row items-center p-3 mb-2 gap-2 cursor-pointer ${\n                      !this.state.stepsStatus.stepOne\n                        ? \"text-blue-800 bg-blue-100 border-blue-800 border-l-4\"\n                        : \"text-gray-800 bg-gray-100\"\n                    }`}\n                    onClick={() =>\n                      this.state.stepsStatus.stepOne && this.handleSteps(1)\n                    }\n                  >\n                    <div className=\"w-10 h-10 bg-white border-2 border-gary-200 rounded-full text-lg text-white flex items-center\">\n                      <span className=\"text-grey-darker text-center w-full text-gray-700\">\n                        1\n                      </span>\n                    </div>\n                    <div className=\"flex flex-col font-semibold text-xl\">\n                      Basic Information\n                      <span className=\"font-normal text-sm\">\n                        Input Role Title & a required field\n                      </span>\n                    </div>\n                  </div>\n\n                  <div\n                    className={`flex row items-center p-3 mb-2 gap-2 cursor-pointer ${\n                      this.state.stepsStatus.stepOne &&\n                      !this.state.stepsStatus.stepTwo\n                        ? \"text-blue-800 bg-blue-100 border-blue-800 border-l-4\"\n                        : \"text-gray-800 bg-gray-100\"\n                    }`}\n                    onClick={() =>\n                      !this.state.stepsStatus.stepOne &&\n                      !this.state.stepsStatus.stepTwo &&\n                      this.handleSteps(2)\n                    }\n                  >\n                    <div className=\"w-10 h-10 bg-white border-2 border-gary-200 rounded-full text-lg text-white flex items-center\">\n                      <span className=\"text-grey-darker text-center w-full text-gray-700\">\n                        2\n                      </span>\n                    </div>\n                    <div className=\"flex flex-col font-semibold text-xl\">\n                      Access Permission\n                      <span className=\"font-normal text-sm\">\n                        Give permission to new role\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                {console.log({\n                  __fff: this.props.accessTasks,\n                  ___jjj: this.state.accessToRole,\n                })}\n                <div className=\"md:col-span-2 col-span-1 bg-white shadow my-3 mr-3 py-2 rounded\">\n                  {!this.state.stepsStatus.stepOne ? (\n                    <StepOne\n                      handleSubmit={this.handleSubmit}\n                      setRoleTitle={this.setRoleTitle}\n                      roleTitle={this.state.roleTitle}\n                      setOpenModal={this.setOpenModal}\n                      setRequirement={this.setRequirement}\n                      roleRequirement={this.state.roleRequirement}\n                      error={this.state.error}\n                      setError={this.setError}\n                    />\n                  ) : (\n                    this.state.accessToRole && (\n                      <StepTwo\n                        handleSubmit={this.handleSubmit}\n                        roleTitle={this.state.roleTitle}\n                        setAccessToRole={this.setAccessToRole}\n                        accessToRole={this.state.accessToRole}\n                        error={this.state.error}\n                        setError={this.setError}\n                        loadingRequest={this.state.loadingRequest}\n                      />\n                    )\n                  )}\n                </div>\n              </div>\n            </div>\n          </Modal>\n        )}\n\n        {/* -----Modal VIEW Management----- */}\n        {this.state.viewRole && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={(): void => {\n              this.setViewRole(false);\n              this.setRoleId(\"\");\n              this.setRoleSelected(null);\n              this.setRoleTitle(\"\");\n              this.setRequirement(\"none\");\n              this.setAccessToRole([]);\n            }}\n            displayClose={true}\n            backDropClose={false}\n            title={\n              <div className=\"bg-white text-gray-500 font-bold text-2xl\">\n                {this.state.roleTitle} Role\n              </div>\n            }\n            widthSizeClass={ModalSize.large}\n            padding={{ title: true, body: false, footer: false }}\n          >\n            {/* User Access Select */}\n            <div className=\"h-full bg-gray-100 py-1 px-2\">\n              <div className=\"my-3 flex justify-between items-start\">\n                <div>\n                  <div className=\"flex flex-col\">\n                    <select\n                      className={`rounded px-2 py-2 w-full bg-white focus:outline-none border-gray-400 border-2`}\n                      onChange={(e: React.ChangeEvent<HTMLSelectElement>) =>\n                        this.changeViewRole(e.target.value)\n                      }\n                      value={this.state.roleId}\n                      disabled={this.state.loadingRequest}\n                    >\n                      <option value=\"\">Document Category</option>\n                      {this.loadCurrentRoles(this.props.access.accessRoles).map(\n                        (item, index) => (\n                          <option\n                            key={index + item.system_user_role_id}\n                            value={item.system_user_role_id}\n                          >\n                            {item.role}\n                          </option>\n                        )\n                      )}\n                    </select>\n                  </div>\n                  {this.state.roleSelected?.district_required && (\n                    <div className=\"flex items-center text-lg gap-1 mt-1\">\n                      <span className=\"text-gray-600\">Level: </span>\n                      <h1 className=\"font-semibold text-gray-900\">District</h1>\n                    </div>\n                  )}\n                  {this.state.roleSelected?.school_required && (\n                    <div className=\"flex items-center text-lg gap-1 mt-1\">\n                      <span className=\"text-gray-600\">Level: </span>\n                      <h1 className=\"font-semibold text-gray-900\">School</h1>\n                    </div>\n                  )}\n                  {this.state.roleSelected?.room_required && (\n                    <div className=\"flex items-center text-lg gap-1 mt-1\">\n                      <span className=\"text-gray-600\">Level: </span>\n                      <h1 className=\"font-semibold text-gray-900\">Room</h1>\n                    </div>\n                  )}\n                </div>\n                <button\n                  className=\"btn bg-blue-500 text-white hover:bg-blue-700 inline-flex mr-1\"\n                  onClick={() => {\n                    this.setOpenModal(ModalStateRole.Update_Role_Access);\n                    this.setViewRole(false);\n                    this.setStepStatus({ stepOne: true, stepTwo: false });\n                  }}\n                  disabled={this.state.openModal !== ModalStateRole.Close_Modal}\n                >\n                  <MdEdit className=\"h-5 w-5 mr-1\" />\n                  <span>Edit</span>\n                </button>\n              </div>\n\n              <Table\n                columns={[\n                  {\n                    columnTitle: \"Access Name\",\n                    alignText: \"left\",\n                    padding: \"p-3\",\n                  },\n                  { columnTitle: \"Create\", alignText: \"left\" },\n                  { columnTitle: \"View\", alignText: \"left\" },\n                  { columnTitle: \"Update\", alignText: \"left\" },\n                  { columnTitle: \"Delete\", alignText: \"left\" },\n                ]}\n                rows={this.typeRows}\n                pagination={false}\n                search={true}\n                searchBG=\"bg-gray-100\"\n                thColor=\"gray\"\n                tableId=\"tableAccessForm\"\n              />\n            </div>\n          </Modal>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  access,\n  system_settings,\n}: StoreState): {\n  access: AccessType;\n  accessTasks: AccessTaskInterface[] | null;\n} => {\n  return { access: access, accessTasks: system_settings.accessTasks };\n};\n\nexport default connect(mapStateToProps, {\n  GetTaskAccess,\n  createAccessRoles,\n  updateAccessRoles,\n  PushPopupAlert,\n})(AccessRole);\n","import React from \"react\";\nimport { ModalStateRole } from \"./AccessRole\";\ninterface AppProps {\n  handleSubmit: (e: React.FormEvent<HTMLFormElement>, step: 1 | 2) => void;\n  setRoleTitle: (value: string) => void;\n  roleTitle: string;\n  setOpenModal: (value: ModalStateRole) => void;\n  setRequirement: (\n    value: \"none\" | \"institute\" | \"district\" | \"school\" | \"room\"\n  ) => void;\n  roleRequirement: \"none\" | \"institute\" | \"district\" | \"school\" | \"room\";\n  error: {\n    element: string;\n    msg: string;\n  };\n  setError: (value: { element: string; msg: string }) => void;\n}\nconst StepOne: React.FC<AppProps> = ({\n  handleSubmit,\n  setRoleTitle,\n  roleTitle,\n  roleRequirement,\n  setRequirement,\n  error,\n  setError,\n}) => {\n  return (\n    <div>\n      <form className=\"max-w-xl mx-auto\" onSubmit={(e) => handleSubmit(e, 1)}>\n        <h1 className=\"text-3xl font-semibold mt-3 mb-5 text-center\">\n          Basic Information\n        </h1>\n        <div className=\"-mx-3 md:flex mb-6\">\n          <div className=\"md:w-full px-3\">\n            <label\n              htmlFor=\"role-title\"\n              className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\n            >\n              Role\n            </label>\n            <input\n              type=\"text\"\n              className={`text-left input-white w-20 inline-block border-2 ${\n                error.element === \"role-title\"\n                  ? \"border-red-500\"\n                  : \"border-gray-500\"\n              }`}\n              value={roleTitle}\n              placeholder=\"Role title\"\n              onChange={(e) => {\n                setRoleTitle(e.target.value);\n                setError({\n                  element: \"\",\n                  msg: \"\",\n                });\n              }}\n              // disabled={openModal !== ModalStateRole.Update_Role_Access}\n            />\n            <p\n              className={`text-red-700 mt-1 ml-1 text-sm italic ${\n                error.element !== \"role-title\" && \"hidden\"\n              }`}\n            >\n              {error.msg}\n            </p>\n          </div>\n        </div>\n\n        <div className=\"flex flex-col mb-5\">\n          <label>Field</label>\n          <span className=\"text-gray-500 text-sm\">\n            Required Field for this role\n          </span>\n          <div className=\"grid grid-flow-row grid-cols-3 sm:grid-cols-4 md:grid-cols-5 grid-rows- gap-4\">\n            <label className=\"inline-flex items-center mt-3\">\n              <input\n                type=\"radio\"\n                name=\"field\"\n                className=\"form-radio h-5 w-5 text-gray-600\"\n                onChange={() => setRequirement(\"institute\")}\n                checked={roleRequirement === \"institute\"}\n              />\n              <span className=\"ml-2 text-gray-700\">Institue</span>\n            </label>\n            <label className=\"inline-flex items-center mt-3\">\n              <input\n                type=\"radio\"\n                name=\"field\"\n                className=\"form-radio h-5 w-5 text-gray-600\"\n                onChange={() => setRequirement(\"district\")}\n                checked={roleRequirement === \"district\"}\n              />\n              <span className=\"ml-2 text-gray-700\">District</span>\n            </label>\n            <label className=\"inline-flex items-center mt-3\">\n              <input\n                type=\"radio\"\n                name=\"field\"\n                className=\"form-radio h-5 w-5 text-gray-600\"\n                onChange={() => setRequirement(\"school\")}\n                checked={roleRequirement === \"school\"}\n              />\n              <span className=\"ml-2 text-gray-700\">School</span>\n            </label>\n            <label className=\"inline-flex items-center mt-3\">\n              <input\n                type=\"radio\"\n                name=\"field\"\n                className=\"form-radio h-5 w-5 text-gray-600\"\n                onChange={() => setRequirement(\"room\")}\n                checked={roleRequirement === \"room\"}\n              />\n              <span className=\"ml-2 text-gray-700\">Room</span>\n            </label>\n            <label className=\"inline-flex items-center mt-3\">\n              <input\n                type=\"radio\"\n                name=\"field\"\n                className=\"form-radio h-5 w-5 text-gray-600\"\n                onChange={() => {\n                  setRequirement(\"none\");\n                  setError({\n                    element: \"\",\n                    msg: \"\",\n                  });\n                }}\n                checked={roleRequirement === \"none\"}\n              />\n              <span className=\"ml-2 text-gray-700\">None of the above</span>\n            </label>\n          </div>\n          <p\n            className={`text-red-700 mt-1 ml-1 text-xs italic ${\n              error.element !== \"role-field\" && \"hidden\"\n            }`}\n          >\n            {error.msg}\n          </p>\n        </div>\n        <div className=\"flex justify-end gap-5 mt-4\">\n          <button\n            className=\"btn bg-primary text-white hover:bg-blue-600 focus:outline-none\"\n            type=\"submit\"\n            // disabled\n          >\n            Save & Continue\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default StepOne;\n","import React from \"react\";\nimport {\n  MdArrowForward,\n  MdDelete,\n  MdEdit,\n  MdRemoveRedEye,\n} from \"react-icons/md\";\nimport { SiAddthis } from \"react-icons/si\";\nimport Table from \"../../components/Table/Table\";\nimport { AccessTaskInterface } from \"../../shared/interfaces\";\nimport { UserAccessList } from \"../../utils/auth_access\";\n\nexport interface accessNoRelationsInterface {\n  key: UserAccessList;\n  noRelations: UserAccessList[];\n}\nexport const accessNoRelations: accessNoRelationsInterface[] = [\n  {\n    key: UserAccessList.do_exam,\n    noRelations: [\n      UserAccessList.APPLICATION_OVERRIDE,\n      UserAccessList.CLAIM_VALIDATION,\n      UserAccessList.DOCUMENT_CHECKING,\n      UserAccessList.LOCATION_MANAGEMENT,\n      UserAccessList.POST_APPROVAL,\n      UserAccessList.POST_REQUEST,\n      UserAccessList.PREPARE_EXAM,\n      UserAccessList.PROCTORING_ROOM,\n      UserAccessList.QUESTION_BANK,\n      UserAccessList.SCHOOL_MANAGEMENT,\n      UserAccessList.SYSTEM_SETTINGS,\n      UserAccessList.USER_MANAGEMENT,\n      UserAccessList.admin,\n    ],\n  },\n];\n\nexport const getAccessNoRelationsByKey = (\n  keySearch: string,\n  thisKey: string\n): boolean => {\n  let result = accessNoRelations.find(\n    (item) => item.key === (keySearch as UserAccessList)\n  );\n  if (result) {\n  }\n  return true;\n};\n\ninterface AppProps {\n  handleSubmit: (e: React.FormEvent<HTMLFormElement>, step: 1 | 2) => void;\n  roleTitle: string;\n  setAccessToRole: (value: AccessTaskInterface[]) => void;\n  accessToRole: AccessTaskInterface[];\n  error: {\n    element: string;\n    msg: string;\n  };\n  setError: (value: { element: string; msg: string }) => void;\n  loadingRequest: boolean;\n}\n\nconst StepTwo: React.FC<AppProps> = (props) => {\n  const updateFieldChanged = (\n    index: number,\n    target: \"create\" | \"view\" | \"update\" | \"delete\",\n    value: boolean\n  ) => {\n    let newArr: AccessTaskInterface[] = props.accessToRole; // copying the old datas array\n    switch (target) {\n      case \"create\":\n        newArr[index].permitted.create = value;\n        break;\n      case \"view\":\n        newArr[index].permitted.view = value;\n        break;\n      case \"update\":\n        newArr[index].permitted.update = value;\n        break;\n      default:\n        newArr[index].permitted.delete = value;\n        break;\n    }\n\n    props.setAccessToRole(newArr);\n  };\n  const formTasks = (): JSX.Element[] => {\n    return props.accessToRole.map((access, index) => (\n      <tr\n        key={access.id + index}\n        className=\"accordion border-b border-grey-light hover:bg-gray-100\"\n      >\n        <td className=\"text-gray-800 text-base font-medium text-left px-3\">\n          {access.task}\n        </td>\n        <td className=\"py-1 px-3\">\n          <input\n            type=\"checkbox\"\n            className=\"form-checkbox h-5 w-5 text-gray-600\"\n            onChange={() => {\n              updateFieldChanged(index, \"create\", !access.permitted.create);\n              props.setError({ element: \"\", msg: \"\" });\n            }}\n            checked={access.permitted.create}\n            // disabled={}\n          />\n        </td>\n        <td className=\"py-1 px-3\">\n          <input\n            type=\"checkbox\"\n            className=\"form-checkbox h-5 w-5 text-gray-600\"\n            onChange={() => {\n              updateFieldChanged(index, \"view\", !access.permitted.view);\n              props.setError({ element: \"\", msg: \"\" });\n            }}\n            checked={access.permitted.view}\n          />\n        </td>\n        <td className=\"py-1 px-3\">\n          <input\n            type=\"checkbox\"\n            className=\"form-checkbox h-5 w-5 text-gray-600\"\n            onChange={() => {\n              updateFieldChanged(index, \"update\", !access.permitted.update);\n              props.setError({ element: \"\", msg: \"\" });\n            }}\n            checked={access.permitted.update}\n          />\n        </td>\n        <td className=\"py-1 px-3\">\n          <input\n            type=\"checkbox\"\n            className=\"form-checkbox h-5 w-5 text-gray-600\"\n            onChange={() => {\n              updateFieldChanged(index, \"delete\", !access.permitted.delete);\n              props.setError({ element: \"\", msg: \"\" });\n            }}\n            checked={access.permitted.delete}\n          />\n        </td>\n      </tr>\n    ));\n  };\n  return (\n    <div>\n      <form\n        className=\"max-w-xl mx-auto\"\n        onSubmit={(e) => props.handleSubmit(e, 2)}\n      >\n        <div className=\"mb-5\">\n          <div className=\"mb-5 mt-3\">\n            <h1 className=\"text-3xl font-semibold text-center\">\n              Access Permissions Settings\n            </h1>\n            <div className=\"flex items-center gap-2 mt-1 justify-center\">\n              <MdArrowForward className=\"w-6 h-6\" />\n              <h1 className=\"text-xl font-semibold text-gray-600 text-center\">\n                {props.roleTitle}\n              </h1>\n            </div>\n          </div>\n          <div className=\"md:flex mb-3\">\n            <div className=\"grid grid-cols-2 grid-rows-2 gap-4\">\n              <div className=\"inline-flex gap-2 items-center\">\n                <SiAddthis className=\"w-12 h-12 text-gray-600\" />\n                <div className=\"flex flex-col\">\n                  <h3 className=\"font-semibold text-xl\">Create</h3>\n                  <span className=\"text-gray-600 text-sm md:pr-1\">\n                    This permission gives the user the ability to create\n                  </span>\n                </div>\n              </div>\n\n              <div className=\"inline-flex gap-2 items-center\">\n                <MdRemoveRedEye className=\"w-12 h-12 text-gray-600\" />\n                <div className=\"flex flex-col\">\n                  <h3 className=\"font-semibold text-xl\">View</h3>\n                  <span className=\"text-gray-600 text-sm md:pr-1\">\n                    This permission gives the user the ability to view\n                  </span>\n                </div>\n              </div>\n\n              <div className=\"inline-flex gap-2 items-center\">\n                <MdEdit className=\"w-12 h-12 text-gray-600\" />\n                <div className=\"flex flex-col\">\n                  <h3 className=\"font-semibold text-xl\">Update</h3>\n                  <span className=\"text-gray-600 text-sm md:pr-1\">\n                    This permission gives the user the ability to update\n                  </span>\n                </div>\n              </div>\n\n              <div className=\"inline-flex gap-2 items-center\">\n                <MdDelete className=\"w-12 h-12 text-gray-600\" />\n                <div className=\"flex flex-col\">\n                  <h3 className=\"font-semibold text-xl\">Delete</h3>\n                  <span className=\"text-gray-600 text-sm md:pr-1\">\n                    This permission gives the user the ability to delete\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <p\n            className={`text-red-700 mt-1 ml-1 text-base italic ${\n              props.error.element !== \"role-access\" && \"hidden\"\n            }`}\n          >\n            {props.error.msg}\n          </p>\n\n          <Table\n            columns={[\n              {\n                columnTitle: \"Access Name\",\n                alignText: \"left\",\n                padding: \"p-3\",\n              },\n              { columnTitle: \"Create\", alignText: \"left\" },\n              { columnTitle: \"View\", alignText: \"left\" },\n              { columnTitle: \"Update\", alignText: \"left\" },\n              { columnTitle: \"Delete\", alignText: \"left\" },\n            ]}\n            rows={formTasks}\n            pagination={false}\n            search={true}\n            thColor=\"gray\"\n          />\n\n          <div className=\"flex justify-end gap-5 mt-4\">\n            <button\n              className=\"btn bg-primary text-white hover:bg-blue-600 focus:outline-none\"\n              type=\"submit\"\n              disabled={props.loadingRequest}\n            >\n              {props.loadingRequest === true ? \"Saving...\" : \"Complete\"}\n            </button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default StepTwo;\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { MdClose, MdErrorOutline, MdLock } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { StoreState } from \"../../reducers\";\nimport AccessRole from \"./AccessRole\";\nimport { fetchAccessRoles } from \"../../actions/access\";\nimport { AccessType } from \"../../reducers/access\";\nimport {\n  MainItem,\n  SideNavigation,\n} from \"../../components/Navigation/SideNavigation\";\nimport { toTwoDigit } from \"../../shared/dataTest\";\n\nenum TabTypes {\n  All_Roles = \"All Roles\",\n  Active_Roles = \"Active Roles\",\n  Blocked_Roles = \"Blocked Roles\",\n}\n\ninterface AppProps {\n  access: AccessType;\n  fetchAccessRoles: Function;\n}\n\nconst Index: React.FC<AppProps> = (props) => {\n  const [labelCounts, setLabelCounts] = useState<{\n    allRole: number;\n    activeRole: number;\n    blockedRole: number;\n  }>({\n    allRole: 0,\n    activeRole: 0,\n    blockedRole: 0,\n  });\n  const [roleStatus, setRoleStatus] = useState<TabTypes>(TabTypes.All_Roles);\n  const [feedBack, setFeedBack] = useState<{\n    type: \"success\" | \"danger\" | \"warning\" | \"\";\n    message: string;\n  }>();\n  const [loading, setLoading] = useState<boolean>(true);\n\n  useEffect(() => {\n    if (!props.access.accessRoles.length && loading) {\n      console.log(props.access.accessRoles);\n      props.fetchAccessRoles();\n    }\n\n    if (props.access.accessRoles.length) {\n      setLabelCounts({\n        allRole: props.access.accessRoles.length,\n        activeRole: props.access.accessRoles.filter((role) => role.status)\n          .length,\n        blockedRole: props.access.accessRoles.filter((role) => !role.status)\n          .length,\n      });\n      setLoading(false);\n    }\n  }, [loading, props, props.access.accessRoles]);\n\n  const handleTabs = (): JSX.Element => {\n    if (roleStatus === TabTypes.Blocked_Roles) {\n      return <AccessRole filterStatus={false} />;\n    } else if (roleStatus === TabTypes.Active_Roles) {\n      return <AccessRole filterStatus={true} />;\n    } else return <AccessRole filterStatus=\"all\" />;\n  };\n\n  if (loading === true) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading roles...\n      </div>\n    );\n  }\n\n  return (\n    <Fragment>\n      <SideNavigation>\n        <span className=\"text-sm mt-2\">Filter by Status</span>\n        <section\n          className=\"mt-1\"\n          onClick={() => setRoleStatus(TabTypes.All_Roles)}\n        >\n          <MainItem\n            title={\"All Role\"}\n            count={labelCounts.allRole}\n            active={roleStatus === TabTypes.All_Roles ? true : false}\n          />\n        </section>\n        <section\n          className=\"mt-1\"\n          onClick={() => setRoleStatus(TabTypes.Active_Roles)}\n        >\n          <MainItem\n            title={\"Active Role\"}\n            count={labelCounts.activeRole}\n            active={roleStatus === TabTypes.Active_Roles ? true : false}\n          />\n        </section>\n        <section\n          className=\"mt-1\"\n          onClick={() => setRoleStatus(TabTypes.Blocked_Roles)}\n        >\n          <MainItem\n            title={\"Disabled Role\"}\n            count={labelCounts.blockedRole}\n            active={roleStatus === TabTypes.Blocked_Roles ? true : false}\n          />\n        </section>\n      </SideNavigation>\n      {/* Title */}\n      <div className=\"w-full my-5 px-1\">\n        {/* header title */}\n        <div className=\"flex flex-row items-center\">\n          <MdLock className=\"text-blue-700 w-28 h-28\" />\n          <div className=\"flex flex-col\">\n            <h1 className=\"text-3xl font-semibold\">System Roles Management</h1>\n            <div className=\"flex flex-row items-center mx-2 md:gap-3 gap-2\">\n              <div className=\"flex flex-col mt-1\">\n                <span className=\"text-gray-600 text-base\">All Role(s)</span>\n                <span className=\"text-gray-600 text-3xl font-bold\">\n                  {toTwoDigit(labelCounts.allRole)}\n                </span>\n              </div>\n              {roleStatus !== TabTypes.Blocked_Roles && (\n                <div className=\"flex flex-col mt-1\">\n                  <span className=\"text-gray-600 text-base\">\n                    Active Role(s)\n                  </span>\n                  <span className=\"text-gray-600 text-3xl font-bold\">\n                    {toTwoDigit(labelCounts.activeRole)}\n                  </span>\n                </div>\n              )}\n              {roleStatus !== TabTypes.Active_Roles && (\n                <div className=\"flex flex-col mt-1\">\n                  <span className=\"text-gray-600 text-base\">\n                    Blocked Role(s)\n                  </span>\n                  <span className=\"text-gray-600 text-3xl font-bold\">\n                    {toTwoDigit(labelCounts.blockedRole)}\n                  </span>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n        {/* end header title */}\n      </div>\n      {/* Feedback */}\n      {feedBack && feedBack.type !== \"\" && (\n        <div\n          className={`alert-${feedBack.type} flex flex-row items-center relative my-2`}\n        >\n          <span className=\"absolute top-0 bottom-0 right-0 px-4 py-3\">\n            <MdClose\n              className=\"h-5 w-5 text-gray-700 hover:font-bold\"\n              title=\"Close\"\n              onClick={() => setFeedBack({ type: \"\", message: \"\" })}\n            />\n          </span>\n          <MdErrorOutline className=\"h-10 w-10\" />\n          <div className=\"alert-content ml-4\">\n            <div className=\"alert-title font-semibold text-lg\">\n              {feedBack.type === \"success\" ? \"Success\" : \"Error\"}\n            </div>\n            <div className=\"alert-description text-sm\">{feedBack.message}</div>\n          </div>\n        </div>\n      )}\n      <div className=\"p-2 overflow-x-auto\">{handleTabs()}</div>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({ access }: StoreState): { access: AccessType } => {\n  return { access: access };\n};\n\nexport const AccessManagement = connect(mapStateToProps, {\n  fetchAccessRoles,\n})(Index);\n","import React, { useEffect, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport { MdNavigateBefore, MdNavigateNext, MdSearch } from \"react-icons/md\";\n\nconst FC_makeID = (length: number = 5): string => {\n  let result: string = \"\";\n  let characters: string =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  let charactersLength = characters.length;\n  for (let i: number = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\nexport const sortThisColumn = (\n  tableId: string,\n  colIndex: number = 0,\n  dir: \"asc\" | \"desc\" = \"asc\"\n) => {\n  var table,\n    rows,\n    switching,\n    i,\n    x,\n    y,\n    shouldSwitch,\n    switchcount = 0;\n  table = document.getElementById(tableId) as HTMLTableElement;\n  switching = true;\n  /* Make a loop that will continue until\n  no switching has been done: */\n  if (table) {\n    while (switching) {\n      //start by saying: no switching is done:\n      switching = false;\n      rows = table.rows;\n      /*Loop through all table rows (except the\n    first, which contains table headers):*/\n      for (i = 1; i < rows.length - 1; i++) {\n        //start by saying there should be no switching:\n        shouldSwitch = false;\n        /*Get the two elements you want to compare,\n      one from current row and one from the next:*/\n        x = rows[i].getElementsByTagName(\"TD\")[colIndex];\n        y = rows[i + 1].getElementsByTagName(\"TD\")[colIndex];\n        /*check if the two rows should switch place,\n      based on the direction, asc or desc:*/\n        if (dir === \"asc\" && x && y) {\n          if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        } else if (dir === \"desc\" && x && y) {\n          if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        }\n      }\n      if (shouldSwitch && rows[i].parentNode) {\n        /*If a switch has been marked, make the switch\n      and mark that a switch has been done:*/\n        rows[i].parentNode!.insertBefore(rows[i + 1], rows[i]);\n        switching = true;\n        //Each time a switch is done, increase this count by 1:\n        switchcount++;\n      } else {\n        /*If no switching has been done AND the direction is \"asc\",\n      set the direction to \"desc\" and run the while loop again.*/\n        if (switchcount === 0 && dir === \"asc\") {\n          dir = \"desc\";\n          switching = true;\n        }\n      }\n      // if (i === 0) continue;\n      // rows.cells[i].style.backgroundColor = \"blue\";\n    }\n  }\n};\n\nexport interface TableColumnsInterface {\n  columnTitle: JSX.Element | string;\n  alignText: string;\n  padding?: string;\n  isSortAllowed?: boolean;\n}\n\ninterface TableProps {\n  columns: TableColumnsInterface[];\n  rows: Function;\n  hideColumns?: boolean;\n  pagination?: boolean;\n  search?: boolean;\n  tableSize?: string;\n  tableClass?: string;\n  tableId?: string;\n  rounded?: boolean;\n  searchBG?: string;\n  thColor?: string;\n  loading?: boolean;\n}\n\nconst Table: React.FC<TableProps> = (props) => {\n  const startPage = 1;\n  const tableId =\n    !props.tableId || props.tableId === \"myTable\" ? FC_makeID() : props.tableId;\n  let table: HTMLElement, tr: HTMLCollectionOf<HTMLTableRowElement>;\n  const [totalItems, setTotalItems] = useState<number>(0);\n  const [totalPages, setTotalPages] = useState<number>(1);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [pages, setPages] = useState<number[]>();\n  const [pageSize, setPageSize] = useState<number>(10);\n  const [startIndex, setStartIndex] = useState<number>(0);\n  const [endIndex, setEndIndex] = useState<number>(0);\n\n  useEffect(() => {\n    props.pagination && tablePagination();\n  });\n\n  const filterTable = (\n    data: string,\n    filterType?: \"default\" | \"field\"\n  ): void => {\n    var filter, tr, td, rows: number, cols: number, txtValue;\n    if (filterType === \"field\" && data === \"all\") data = \"\";\n    filter = data.toLowerCase();\n    table = document.getElementById(tableId!)!;\n    tr = table.getElementsByTagName(\"tr\");\n    for (rows = 0; rows < tr.length; rows++) {\n      for (cols = 0; cols < props.columns.length; cols++) {\n        td = tr[rows].getElementsByTagName(\"td\")[cols];\n        if (td) {\n          txtValue = td.textContent || td.innerText;\n          if (txtValue.toLowerCase().indexOf(filter) > -1) {\n            tr[rows].style.display = \"\";\n            break;\n          } else {\n            tr[rows].style.display = \"none\";\n          }\n        }\n      }\n    }\n  };\n\n  const tablePagination = (): void => {\n    table = document.getElementById(tableId)!;\n    tr = table.getElementsByTagName(\"tr\");\n    setTotalItems(tr.length);\n    setTotalPages(Math.ceil(totalItems / pageSize));\n\n    // calculate start and end item indexes on the current page\n    setStartIndex((currentPage - 1) * pageSize);\n    setEndIndex(Math.min(startIndex + pageSize - 1, totalItems - 1));\n\n    /**\n     * TODO!\n     * There is a problem with this condition\n     */\n    let _pages = Array.from(Array(totalPages + 1 - startPage).keys()).map(\n      (i) => startPage + i\n    );\n    if (!pages || _pages.length !== pages.length) {\n      setPages(_pages);\n    }\n\n    for (let i: number = 0; i < tr.length; i++) {\n      if (i >= startIndex && i <= endIndex) {\n        tr[i].style.display = \"\";\n      } else {\n        tr[i].style.display = \"none\";\n      }\n    }\n  };\n\n  return (\n    <div className={`${props.tableSize} overflow-x-auto`}>\n      {/* search box  */}\n      {props.search && (\n        <div className={`${props.searchBG} w-full mb-2`}>\n          {props.search && (\n            <div className=\"bg-white rounded flex items-center w-full p-2 border-2 border-gray-500\">\n              <MdSearch className=\"h-5 w-5 fill-current text-gray-400\" />\n              <input\n                type=\"search\"\n                placeholder=\"search\"\n                onChange={(e) => filterTable(e.target.value)}\n                className=\"w-full h-6 pl-4 text-sm outline-none focus:outline-none bg-white\"\n                disabled={props.loading}\n              />\n\n              {props.pagination && (\n                <div className=\"select\">\n                  <select\n                    className=\"text-base outline-none focus:outline-none bg-white\"\n                    onChange={(e) => setPageSize(Number(e.target.value))}\n                    disabled={props.loading}\n                  >\n                    <option value=\"10\">10</option>\n                    <option value=\"25\">25</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                  </select>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n      <div className=\"overflow-x-auto w-full\">\n        <table\n          className={\n            props.tableClass\n              ? props.tableClass\n              : `w-full shadow ${\n                  props.rounded && \"sm:rounded-lg\"\n                } table-auto order-table`\n          }\n          id={tableId}\n        >\n          {!props.hideColumns && (\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-base\">\n              <tr\n                className={`text-left tracking-wide bg-${props.thColor}-100 border-b-2 border-${props.thColor}-500 text-${props.thColor}-600`}\n              >\n                {props.columns.map((column, index) => (\n                  <th\n                    key={index}\n                    className={`${column.padding} text-${\n                      column.alignText\n                    } px-3 py-2 ${column.isSortAllowed && \"cursor-pointer\"}`}\n                    onClick={() =>\n                      column.isSortAllowed && sortThisColumn(tableId, index)\n                    }\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      {column.columnTitle}\n                      {column.isSortAllowed && <BiSort />}\n                    </div>\n                  </th>\n                ))}\n              </tr>\n            </thead>\n          )}\n          <tbody id=\"table-data\" className=\"bg-white text-black text-base\">\n            {props.rows()}\n          </tbody>\n        </table>\n        {props.pagination && (\n          <div className=\"sm:flex-1 sm:flex sm:items-center sm:justify-between mt-4 work-sans\">\n            <div>\n              <span className=\"text-xs xs:text-sm text-gray-900\">\n                Showing 1 to {pageSize} of {totalItems - 1} Entries\n              </span>\n            </div>\n            <div>\n              <nav className=\"inline-flex shadow-sm\">\n                <div>\n                  <button\n                    type=\"button\"\n                    className={`inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 text-sm font-medium text-gray-500 ${\n                      currentPage !== 1 && \"bg-white\"\n                    }`}\n                    aria-label=\"Previous\"\n                    disabled={currentPage === 1 || props.loading}\n                    onClick={() => setCurrentPage(currentPage - 1)}\n                  >\n                    <MdNavigateBefore className=\"h-5 w-5\" />\n                  </button>\n                </div>\n                <div>\n                  {pages &&\n                    pages.map((page, pageIndex) => (\n                      <button\n                        key={pageIndex}\n                        className={`-ml-px inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium text-gray-700 ${\n                          page !== currentPage\n                            ? \"bg-white\"\n                            : \"bg-gray-100 cursor-default\"\n                        }`}\n                        disabled={page === currentPage || props.loading}\n                        onClick={() => setCurrentPage(page)}\n                      >\n                        {page}\n                      </button>\n                    ))}\n                </div>\n                <div>\n                  <button\n                    type=\"button\"\n                    className={`inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 text-sm leading-5 font-medium text-gray-500 ${\n                      currentPage !== totalPages && \"bg-white\"\n                    }`}\n                    aria-label=\"Next\"\n                    disabled={currentPage === totalPages || props.loading}\n                    onClick={() => setCurrentPage(currentPage + 1)}\n                  >\n                    <MdNavigateNext className=\"h-5 w-5\" />\n                  </button>\n                </div>\n              </nav>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Table;\n","import React, { FC, ReactElement, ReactNode } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, System } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { NavToogle, PageHasSubNav } from \"../../actions\";\nimport { MdBrightness1, MdSearch } from \"react-icons/md\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  system: System;\n  PageHasSubNav: Function;\n  NavToogle: Function;\n  children: ReactNode;\n}\n//\ninterface AppState {\n  loading: boolean;\n}\n\nclass _SideNavigation extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount = () => this.props.PageHasSubNav(true);\n  componentWillUnmount = () => this.props.PageHasSubNav(false);\n\n  render() {\n    const isAuthenticated = this.props.auth.isAuthenticated;\n\n    if (isAuthenticated === false) {\n      return null;\n    }\n\n    const navActive = this.props.system.navigation;\n    return (\n      <div\n        className={`fixed w-48 p-1 pr-2 pl-6 text-gray-700 bg-white ${\n          navActive === true ? \"lg:left-16  left-16\" : \" -left-72 lg:left-16\"\n        }  top-0 bottom-0 pt-20 z-30 shadow-lg  transition-all duration-500 ease-in-out overflow-y-auto`}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n}: StoreState): { auth: Auth; system: System } => {\n  return { auth: auth, system: system };\n};\n\nexport const SideNavigation = connect(mapStateToProps, {\n  NavToogle,\n  PageHasSubNav,\n})(_SideNavigation);\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SearchComponentInterface = {\n  data: any[];\n};\n\nexport const Search: FC<SearchComponentInterface> = ({\n  data,\n}): ReactElement => {\n  return (\n    <div className=\"m-1 rounded-md shadow-md border border-blue-400 bg-white p-1 flex \">\n      <label htmlFor=\"search-text\" className=\"inline-block text-2xl\">\n        <MdSearch className=\"inline-block text-blue-400\" />\n      </label>\n      <input\n        type=\"search\"\n        className=\"outline-none bg-transparent flex-1 pl-1\"\n        placeholder=\"Search\"\n        id=\"search-text\"\n      />\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype MainItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const MainItem: FC<MainItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n  return (\n    <section\n      className={`${\n        active === true\n          ? \"bg-blue-500 text-white font-bold\"\n          : \"bg-blue-100 text-blue-800\"\n      } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex cursor-pointer items-center`}\n    >\n      <section className=\"flex-1\">\n        <IconDefined className=\"inline-block mr-1 text-xs\" />\n        <span>{title}</span>\n      </section>\n\n      {count > 0 ? (\n        <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n          {count}\n        </span>\n      ) : null}\n    </section>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemContainerComponentInterface = {\n  children: ReactNode;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const SubItemContainer: FC<SubItemContainerComponentInterface> = ({\n  children,\n}): ReactElement => {\n  return (\n    <div className=\"ml-3 overflow-y-auto border-l-2 border-blue-200 -mt-1 pt-2 mb-2 pl-1 cursor-pointer\">\n      {children}\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n * @important Remenber to use these components inside the <SubItemContainer>...</SubItemContainer>\n */\nexport const SubItem: FC<SubItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n\n  return (\n    <div\n      className={`animate__animated animate__zoomIn animate__faster ${\n        active === true ? \"bg-blue-500 text-white font-bold\" : \" text-blue-800\"\n      } text-blue-800 bg-blue-200 rounded-md px-1 mb-1 flex items-center py-1 font-bold`}\n    >\n      <IconDefined\n        className={`inline-block mr-0.1 text-xs ${\n          active === true ? \"text-white\" : \"\"\n        }`}\n      />\n      <span\n        className={`inline-block pl-1 ${active === true ? \"text-white\" : \"\"}`}\n      >\n        {title}\n      </span>\n      {count >= 1 ? (\n        <span\n          className={`text-sm fint-bold ${active === true ? \"text-white\" : \"\"}`}\n        >\n          {count}\n        </span>\n      ) : null}\n    </div>\n  );\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AccessTaskInterface,\n  PermissionInterface,\n  SystemSettingsInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PositionAPI } from \"../interfaces/position\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// SYSTEM SETTINGS  ==============\nexport interface GetSystemSettingsAction {\n  type: ActionTypes.GET_SYSTEM_SETTINGS;\n  payload: SystemSettingsInterface[];\n}\n\nexport interface DisableSystemSettingsAction {\n  type: ActionTypes.DISABLE_SYSTEM_SETTINGS;\n  payload: {\n    system_setting_id: string;\n    status: \"enabled\" | \"disabled\";\n  };\n}\n\n// ROLE TASKS ACCESS SETTINGS ===================================\nexport interface GetTaskAccessAction {\n  type: ActionTypes.GET_TASK_ACCESS;\n  payload: AccessTaskInterface[];\n}\n\n// POSITIONS SETTINGS ===================================\nexport interface PositionCreateInterface {\n  position_id?: string;\n  position_title: string;\n  description: string;\n  school_level_id: string;\n  subcategory_id: string;\n  education_institute_id: string;\n  courses: string[];\n  requirements: {\n    user_detail_category_id: string;\n    user_detail_subcategory_id: string;\n    position_requirement: {\n      category_subcategory_data_id: string;\n      required: boolean;\n    }[];\n    required: boolean;\n  }[];\n}\nexport interface GetPositionsAction {\n  type: ActionTypes.GET_POSTIONS;\n  payload: PositionAPI[];\n}\n\nexport interface CreatePositionsAction {\n  type: ActionTypes.CREATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface UpdatePositionsAction {\n  type: ActionTypes.UPDATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface DeletePositionSettingAction {\n  type: ActionTypes.DELETE_POSITION;\n  payload: string;\n}\n\nexport interface PublishPositionAction {\n  type: ActionTypes.PUBLISH_POSITION;\n  payload: {\n    position_id: string;\n    status: boolean;\n  };\n}\n\nexport type SystemActionType =\n  | GetSystemSettingsAction\n  | DisableSystemSettingsAction\n  | GetTaskAccessAction\n  | GetPositionsAction\n  | CreatePositionsAction\n  | UpdatePositionsAction\n  | DeletePositionSettingAction\n  | PublishPositionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSystemSettings = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<SystemSettingsInterface[]>(\n        `${API.AUTH}/settings`\n      );\n      dispatch<GetSystemSettingsAction>({\n        type: ActionTypes.GET_SYSTEM_SETTINGS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const disableSystemSetting = (data: {\n  system_setting_id: string;\n  status: \"enabled\" | \"disabled\";\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableSystemSettingsAction>({\n      type: ActionTypes.DISABLE_SYSTEM_SETTINGS,\n      payload: data,\n    });\n  };\n};\n\n// ============================ tasks access =======================\n\nexport const GetTaskAccess = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<\n        {\n          id: string;\n          title: string;\n          key: string;\n          permitted: PermissionInterface;\n        }[]\n      >(`${API.AUTH}/allroleaccess`);\n      let response: AccessTaskInterface[] = res.data.map((data) => ({\n        id: data.id,\n        task: data.title,\n        key: data.key,\n        permitted: data.permitted,\n      }));\n      dispatch<GetTaskAccessAction>({\n        type: ActionTypes.GET_TASK_ACCESS,\n        payload: response,\n      });\n      callback(false, \"\", response);\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// ============================ positions =======================\n\nexport const getPositions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(`${API.APPLICATION}/position`);\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createPosition = (data: PositionCreateInterface) => {\n  console.log({ createPosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreatePositionsAction>({\n      type: ActionTypes.CREATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const updatePosition = (data: PositionCreateInterface) => {\n  console.log({ updatePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdatePositionsAction>({\n      type: ActionTypes.UPDATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const deletePosition = (data: string) => {\n  console.log({ deletePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<DeletePositionSettingAction>({\n      type: ActionTypes.DELETE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const publishPosition = (data: {\n  position_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<PublishPositionAction>({\n      type: ActionTypes.PUBLISH_POSITION,\n      payload: data,\n    });\n  };\n};\n"],"sourceRoot":""}
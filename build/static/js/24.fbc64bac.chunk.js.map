{"version":3,"sources":["containers/AdminDashboard/ClaimDashboard/AllClaimChart.tsx","containers/AdminDashboard/ClaimDashboard/ClaimDashBoardTitle.tsx","containers/AdminDashboard/ClaimDashboard/ClaimDashboard.tsx","components/Navigation/SideNavigation.tsx","containers/SessionSettings/NoSession.tsx","actions/settings.ts","components/Loading/TableLoading.tsx","utils/ExportToExcel.tsx","shared/interfaces.tsx","utils/mineduc.png","components/DownloadPDF/rest.tsx","containers/SessionSettings/ChooseSession.tsx","containers/AdminDashboard/ChartComponents/VBarChart.tsx","interfaces/document_validation.tsx","containers/Claimings/ClaimDocView.tsx","containers/AdminDashboard/DashboardLabelItem.tsx","containers/AdminDashboard/ExamDashboard/ExamDashboardLabels.tsx","containers/AdminDashboard/ChartComponents/PieChart.tsx","containers/Claimings/Admin/AdminFilterByType.tsx","containers/Claimings/ClaimHeaderTitle.tsx","containers/Claimings/Candidate/index.tsx","containers/Claimings/ClaimApplView.tsx","containers/Claimings/ClaimExamView.tsx","containers/Claimings/ClaimPlacementView.tsx","containers/Claimings/Candidate/FilterByType.tsx","components/ClaimReportTools/ClaimEvaluationHistory.tsx","components/ClaimReportTools/ClaimReportAnalytic.tsx","containers/Claimings/Admin/ClaimReport.tsx","containers/Admin/Claiming/ClaimingReport.tsx","containers/Claimings/Admin/AdminClaimExamView.tsx","containers/Claimings/Admin/ClaimFileView.tsx","containers/Claimings/Admin/AdminClaimAppView.tsx","containers/Claimings/Admin/AdminClaimDocView.tsx","containers/Claimings/Admin/index.tsx"],"names":["AllClaimChart","props","FC_GetAllClaimChartData","acceptedArray","rejectedArray","activeArray","labelArray","typeKey","ClaimTypes","type","push","count","accepted","rejected","pending","replace","active","labels","className","VBarChart","categoriesLabel","dataLabels","yaxisText","tooltipText","series","name","data","colors","defaultBar","borderRadius","horizontal","columnWidth","endingShape","stacked","React","memo","ClaimDashBoardTitle","reportTitle","education_categories","length","allEducation","loading","loadingApplications","loadingEducation","periodChanged","thisEducation","onClick","setThisEducation","map","education","index","education_institute_id","education_category_title","value","thisPeriod","disabled","onChange","e","setThisPeriod","target","onPeriodChange","application_sessions","session","item","_id","session_plan_name","_ClaimDashboard","setLoadingInstitutes","setState","loadingInstitutes","setLoading","setLoadingSession","loadingSession","setPeriodChanged","setLoadingPosition","loadingPosition","setLoadingApplications","setLoadingClaims","loadingClaims","setLoadingDocuments","loadingDocuments","setLoadingClarifications","loadingClarifications","setLoadingFields","loadingFields","setThisLabel","thisLabel","componentDidMount","schoolLevels","loadEducationCategories","GetAllSessionPlans","status","msg","PushPopupAlert","title","theme","PopupAlertTheme","danger","thisSession","find","is_active","state","isEmptyOrSpaces","documentReducer","documentCategory","getDocumentCategory","documentSubCategory","getDocumentSubCategory","documentFields","getDocumentFields","systemPositions","auth","education_institution_id","FC_GetPositionsByInstitution","console","log","period_id","getAllClaims","getAllApplications","getClaimInstitute","thisClaim","type_key","PlansTypeKeys","DOCUMENT_VALIDATION","APPLICATION","claiming","allApplications","thisApplication","claiming_on_id","thisPosition","position_id","position","displayClaimTitle","result","user","details","filter","validation_status","adminDisplayClaimTitle","position_title","claims","output","all","decision","ClaimDecisionStatus","ACCEPTED","REJECTED","Object","values","forEach","PlansKey","capitalizeFirstLetter","reportClaimType","itm","claim_type","FC_ClaimData","allClaims","arrayNew","n","key","prototype","hasOwnProperty","call","keyClaim","element","dataArray","claim_id","names","user_info","fname","lname","gender","sex","national_id","n_id","phone","phone_number","email","claim_level","level","education_category","claim_session","date","DATE","createdAt","decision_taken_status","claim_title","getClaimDataByTitle","allData","this","NoSession","toLocaleLowerCase","ExamDashboardLabels","icon","FaBookOpen","iconColor","labelsOnRow","PieChart","options","legend","show","horizontalAlign","fontSize","itemMargin","vertical","plotOptions","pie","donut","color","offsetY","fontFamily","formatter","val","total","label","w","globals","seriesTotals","reduce","a","b","width","Component","ClaimDashboard","connect","system_settings","sessionPlan","document","allSessionPlans","GetClaimingTypes","setSelectedClaimType","_SideNavigation","PageHasSubNav","componentWillUnmount","isAuthenticated","navActive","system","navigation","children","SideNavigation","NavToogle","MainItem","MdBrightness1","IconDefined","description","content","undefined","url","API","AUTH","getSystemSettings","callback","dispatch","setAxiosToken","axios","get","res","ActionTypes","GET_SYSTEM_SETTINGS","payload","code_error","errorToText","disableSystemSetting","DISABLE_SYSTEM_SETTINGS","GetTaskAccess","response","id","task","permitted","GET_TASK_ACCESS","getPositions","GET_POSTIONS","deletePosition","DELETE_POSITION","publishPosition","PUBLISH_POSITION","institution_id","TableLoading","displayCols","colsArray","cols","Math","random","ExportToExcel","fileData","fileName","btnName","showIcon","apiData","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","exportToCSV","RoomType","PostRequestStatusInterface","DocumentAttributesInterface","DocValidationStatusInterface","SESSION_PLAN_KEYS","EXAMINATION","MARKS_PUBLICATION","PLACEMENT_TRANSFER","require","addFooters","doc","pageCount","internal","getNumberOfPages","setFont","setFontSize","i","setPage","text","String","pageSize","align","generatePDF","reportSettings","table","callBack","orientation","lMargin","jsPDF","setTextColor","addImage","Logo","getWidth","institute","lines","splitTextToSize","subject","pdfInMM","y","subjectTitle","getTextWidth","addPage","period","autoTable","html","startY","margin","cellPadding","rowHeight","bodyStyles","valign","columnStyles","cellWidth","tableWidth","finalY","lastAutoTable","doneBy","Date","toString","save","returnPromise","then","ChooseSession","searched","useState","selectedPlan","setSelectedPlan","search","setSearch","placeholder","allSession","chooseAll","currentSelected","setSelectSession","searchData","chart","events","dataPointSelection","event","chartContext","config","labelClicked","dataPointIndex","FC_LoadSelected","seriesIndex","bar","enabled","xaxis","rotate","categories","tickPlacement","yaxis","fill","opacity","tooltip","grid","padding","left","right","noData","verticalAlign","setOptions","useEffect","chartClicked","zoom","autoScaleYaxis","height","chartHeight","GetDocTitle","documentCategories","DocCategory","DocSubCategory","DocField","DocTitle","sub_category_id","c","user_detail_subcategory_id","category_id","user_detail_category_id","category_subcategory_data","thisDocField","category","sub_category","field","main","DocumentInArray","docCategories","DocumentsData","dataType","documentsTemp","d","candidate_detail","files","user_id","district","main_doc_title","start_year","end_year","school","details_email","details_phone_number","company","year","doc_id","validated_by","doc_history_status","get_in_date","approved","exams","isDocumentValidationOpen","plans","checkSession","today","moment","startData","start_date","endData","end_date","diff","type_status","SESSION_PLAN_STATUS","OPEN","getDocByDocId","userList","countDocumentByStatus","userDocs","docStatus","countFileByCandidateId","filterType","filterValue","filterStatus","isReclaimAllowed","_thisClaim","isClaimEvaluated","claim_status","ClaimStatus","EVALUATED","createReClaim","FC_CompleteClaim","handleSubmit","reClaimingMsg","setFormError","warning","setLoadingRequest","put","CLAIMING","reason","success","setReClaimingMsg","setReClaiming","error","getReasonById","reason_id","claimReasons","ClaimGetDocTitle","thisDoc","setViewImage","viewImage","comment","src","AUTH_FILES","alt","claim","default_claim_resaons","showDate","evaluation_comment","reClaiming","last_claim_status","PENDING","DELETED","window","confirm","loadingRequest","rows","formError","style","resize","DashboardLabelItem","FaUsers","countOver","toAnyDigit","displayNumbers","numCols","childrenPosition","filterClaimsByClaimType","claimList","claimType","loadingClaimTypes","setLoadingClaimTypes","claimTypes","countClaims","thisType","Fragment","selectedClaimType","selected_claim_type","ClaimHeaderTitle","isLoading","headerTitle","sessions","selectPeriod","ClaimTypesEnum","setViewPosition","viewPosition","previous","ApplicationStates","Rejected","dangerouslySetInnerHTML","__html","school_level_id","school_level_name","courses","course_name","course_code","course_id","DisplayCompetence","competence","requirements","FC_ApplicationPositionDistinctCategory","DistinctCategoriesTemp","category_title","ViewRequirements","PositionsTemp","req","NoResult","NoResultThemes","Dark","questionTypes","loadQuestionTypes","thisExam","CandidateAnswersDetails","showAnswers","exam_id","claimShowAnswer","thisExamSheet","myPlacement","placed","school_name","district_id","district_name","getMyRejectedApplications","getMyRejectedDocuments","loadingRejectedApplications","setLoadingRejectedApplications","loadingRejectedDocuments","setLoadingRejectedDocuments","candidateApplications","candidateDocuments","myClaims","COMPLETED","getDocumentById","document_id","whichClaimType","application","exam","marks_publication","placement","whichClaimStatus","classes","getClaimById","getApplicationById","application_id","displayDocClaimTitle","allCourse","myAnswer","thisAnswer","getCourseIdBySheetId","getCourseById","course","Index","setViewClaim","viewClaim","setClaimForm","claimForm","setClaimId","claimId","setSearchClaim","searchClaim","loadClaims","getMyClaims","setSession","loadExamAnswers","activeSessionPlan","getMyAnswers","getClaimReasons","loadCourses","getMyPlacement","isDeleteAllowed","thisCLaim","colSpan","Light","ClaimApplView","ClaimExamView","ClaimForm","formState","setFormState","CandidateClaim","ClaimEvaluationHistory","GetEvaluationHistory","post","evaluators","Loading","sort","evaluated","ClaimReportAnalytic","general_main_data","completedClaimCounts","evaluatedClaimCounts","pendingClaimCounts","deletedClaimCounts","responsive","breakpoint","general_summary","validated","mode","palette","monochrome","shadeTo","shadeIntensity","barHeight","summary_details","_ClaimReport","GetClaims","session_id","GetSummaryFilter","test","GetSummary","res_data","selected_level","GetSummaryCounts","getMainSummary","selectedEducationCategory","setSelectedEducationCategory","session_plan","selected_institution","view_type","showInstitutes","selected_type","parseInt","institution","ClaimReport","positions","loadAllPositionsByInstitute","defaultReportContent","claimReportContentKeyInterface","ClaimingReport","thisLevel","setThisLevel","downloading","setDownloading","claimToPrint","setClaimToPrint","sortProperty","setSortProperty","isSorted","setIsSorted","sortOrder","setSortOrder","searchInput","setSearchInput","generateReportModal","setGenerateReportModal","setReportTitle","reportContent","setReportContent","selectAll","setSelectAll","setSelectPeriod","objList","setSort","thisProperty","updateClaimToPrint","institute_id","isChangeAllowed","FC_FilterClaims","claimLevel","capitalizeFirstWord","selectedType","currentType","levels","ClaimLevels","reportType","querySelectorAll","getElementById","footer","FC_GeneratePDF","sortThisArray","product","flag","prop","toLowerCase","indexOf","backDrop","Themes","default","close","backDropClose","widthSizeClass","ModalSize","medium","displayClose","findIndex","newArray","isSelectAllNeeded","updateReportContent","currentState","resetReportContent","extraLarge","viewTabs","FooterInitial","ClaimFileView","setSetFullscreen","isFullscreen","handleFullScreen","fullScreen","failedToLoadFile","loadingImage","actionTaken","isFileImage","getFileType","onLoad","onError","onDoubleClick","ViewPDF","file_url","class_name","frame_title","setLoadingFile","setLoadingError","zoomInOut","setDocId","socket","evaluateClaim","reAssessApplication","setActionTaken","responseMsg","setResponseMsg","viewThisDocument","setViewThisDocument","handleVerify","subClaim","api_body","sub_claim_id","evaluated_by","evaluator_name","evaluator_email","evaluate_claim_res","actionType","emit","Events","CLAIMING_CHANGE_SERVER","overrideDecision","this_claim","patch","application_status","Shortlisted","DATA_ThisPosition","DATA_Documents","commet","FC_DocumentInArray","Data_ThisDocument","Modal","maxWidth","body","DATA_ForEdit","evaluater","FC_GetBase64Img","photo","PositionDetails","positionDetails","cancel","apply","showRegister","hideTools","FC_Access","UserAccessList","CLAIM_VALIDATION_2","view","verifyDocument","FC_DocValidation","APPROVED","in_education","disability","expiration_date","api_redux","USER","marks","setMarks","profile","selectedTab","setSelectedTab","handleMarksAddition","DO_EXAM","answer_sheet_id","AnswersDetails","allAnswers","exam_location","questions","user_answers","exam_paper","user_status","used_duration","total_marks","number_of_question_answered","exam_total_marks","exam_start_time","exam_end_time","exam_date","updatedAt","Number","AdminClaimGetDocTitle","setLoadingData","loadingData","setClaimType","setCandidateId","candidateId","setDefaultSession","loadsAllClaims","loadsApplications","loadsController","file_id","loadsAlAnswers","answersheet_id","allAnswer","getAllAnswers","CLAIM_VALIDATION","on","CLAIMING_CHANGE_CLIENT","opened_claims","openedClaim","orginal","off","FC_SocketServeAction","thisDocs","getLastClaimDate","claimsLength","DATA_TITLES","DAT_ClaimByStatus","FindClaimsNumber","filterByStatus","choose_claim_type","selected_title","show_titles_filter","search_title","view_claim_report","to","DATA_ALL_CLAIM","includes","DATA_ClaimByType","DATA_BY_TITLE","AdminFilterByType","n_eduction","sector","province","FC_ClaimDecision","ClaimTypesInterface","DOCUMENT","AdminClaim"],"mappings":"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","file":"static/js/24.fbc64bac.chunk.js","sourcesContent":["import React from \"react\";\nimport VBarChart from \"../ChartComponents/VBarChart\";\n\ntype AllClaimChartProps = {\n  ClaimTypes: {\n    title: string;\n    count: {\n      all: number;\n      accepted: number;\n      rejected: number;\n      pending: number;\n    };\n    type: string | \"all\";\n  }[];\n};\n\nconst AllClaimChart: React.FC<AllClaimChartProps> = (props) => {\n  const FC_GetAllClaimChartData = (): {\n    accepted: number[];\n    rejected: number[];\n    active: number[];\n    labels: string[];\n  } => {\n    let acceptedArray: number[] = [],\n      rejectedArray: number[] = [],\n      activeArray: number[] = [],\n      labelArray: string[] = [];\n\n    for (const typeKey in props.ClaimTypes) {\n      if (props.ClaimTypes[typeKey].type !== \"all\") {\n        acceptedArray.push(props.ClaimTypes[typeKey].count.accepted);\n        rejectedArray.push(props.ClaimTypes[typeKey].count.rejected);\n        activeArray.push(props.ClaimTypes[typeKey].count.pending);\n        labelArray.push(props.ClaimTypes[typeKey].type.replace(/_/g, \" \"));\n      }\n    }\n    return {\n      accepted: acceptedArray,\n      rejected: rejectedArray,\n      active: activeArray,\n      labels: labelArray,\n    };\n  };\n\n  return (\n    <section className=\"my-3 max-w-full bg-white\">\n      <div className=\"flex items-center justify-between px-3\">\n        <span className=\"text-gray-600 font-semibold text-xl py-4 px-0\">\n          Claim chart on country level\n        </span>\n      </div>\n      <div className=\"mb-4 pb-2 px-3\">\n        <VBarChart\n          labels={FC_GetAllClaimChartData().labels}\n          categoriesLabel={FC_GetAllClaimChartData().labels}\n          dataLabels={false}\n          yaxisText=\"(Applicants)\"\n          tooltipText=\"Claims\"\n          series={[\n            {\n              name: \"Pending Claim\",\n              data: FC_GetAllClaimChartData().active,\n            },\n            {\n              name: \"Accepted Claim\",\n              data: FC_GetAllClaimChartData().accepted,\n            },\n            {\n              name: \"Rejected Claim\",\n              data: FC_GetAllClaimChartData().rejected,\n            },\n          ]}\n          colors={[\"#4b5563\", \"#469769\", \"#d97724\"]}\n          defaultBar={{\n            borderRadius: 4,\n            horizontal: false,\n            columnWidth: \"95%\",\n            endingShape: \"rounded\",\n          }}\n          stacked={true}\n        />\n      </div>\n    </section>\n  );\n};\n\nexport default React.memo(AllClaimChart);\n","import React from \"react\";\nimport { AiFillDashboard } from \"react-icons/ai\";\nimport { MdBrightness1 } from \"react-icons/md\";\nimport { SessionPlanInterface } from \"../../../interfaces\";\nimport { education_category } from \"../../../interfaces/education_category\";\n\ntype ClaimDashBoardTitleProps = {\n  reportTitle: string;\n  education_categories: education_category[] | null;\n  loading: boolean;\n  loadingApplications: boolean;\n  loadingEducation: boolean;\n  thisEducation: education_category | null;\n  allEducation: boolean;\n  periodChanged: boolean;\n  setThisEducation: (value: education_category | null) => void;\n  thisPeriod: string;\n  setThisPeriod: (value: string) => void;\n  application_sessions: SessionPlanInterface[];\n  onPeriodChange: (period_id: string) => void;\n};\n\nconst ClaimDashBoardTitle: React.FC<ClaimDashBoardTitleProps> = (props) => {\n  return (\n    <div className=\"mt-3 rounded flex flex-col md:flex-row md:justify-between items-start\">\n      <div className=\"flex flex-row items-center gap-3 mb-2\">\n        <AiFillDashboard className=\"text-6xl text-blue-600 hidden md:block\" />\n        <div className=\"flex flex-col\">\n          <span className=\"text-blue-600 text-3xl font-bold\">\n            {props.reportTitle}\n          </span>\n        </div>\n      </div>\n\n      {/* FILTER SECTION PERIOD && EDUCATION */}\n      <section className=\"w-full md:w-auto my-2 md:my-0\">\n        {/* EDUCATION CATEGORY sections */}\n        <section>\n          {props.education_categories && props.education_categories.length > 0 && (\n            <div className=\"flex items-start md:items-center justify-start md:justify-end gap-2\">\n              {props.allEducation && (\n                <div\n                  className={`w-auto ${\n                    props.loading ||\n                    props.loadingApplications ||\n                    props.loadingEducation ||\n                    props.periodChanged\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } ${\n                    props.thisEducation === null\n                      ? \"bg-blue-500 text-white font-bold\"\n                      : \"bg-gray-100 text-blue-800\"\n                  } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex items-center animate__animated animate__zoomIn`}\n                  onClick={() =>\n                    !props.loading &&\n                    !props.loadingEducation &&\n                    props.setThisEducation(null)\n                  }\n                >\n                  <section className=\"flex-1\">\n                    <MdBrightness1 className=\"inline-block mr-1 text-xs\" />\n                    <span>All</span>\n                  </section>\n                </div>\n              )}\n              {props.education_categories.map((education, index) => (\n                <div\n                  key={education.education_institute_id + index}\n                  className={`w-auto ${\n                    props.loading ||\n                    props.loadingApplications ||\n                    props.loadingEducation\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } ${\n                    props.thisEducation &&\n                    education.education_institute_id ===\n                      props.thisEducation.education_institute_id\n                      ? \"bg-blue-500 text-white font-bold\"\n                      : \"bg-gray-100 text-blue-800\"\n                  } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex items-center animate__animated animate__zoomIn`}\n                  onClick={() =>\n                    !props.loading &&\n                    !props.loadingApplications &&\n                    !props.loadingEducation &&\n                    props.setThisEducation(education)\n                  }\n                >\n                  <div className=\"flex-1\">\n                    <MdBrightness1 className=\"inline-block mr-1 text-xs\" />\n                    <span>{education.education_category_title}</span>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </section>\n        {/* end EDUCATION CATEGORY sections */}\n        <div>\n          <select\n            className={`bg-white text-gray-600 border border-gray-400 rounded p-2 focus:outline-none ${\n              props.loadingApplications && \"cursor-wait\"\n            }`}\n            value={props.thisPeriod}\n            disabled={\n              props.loading ||\n              props.loadingApplications ||\n              props.loadingEducation ||\n              props.periodChanged\n            }\n            onChange={(e) => {\n              props.setThisPeriod(e.target.value);\n              props.onPeriodChange(e.target.value);\n            }}\n          >\n            {props.application_sessions.map((session, item) => (\n              <option key={session._id + item} value={session._id}>\n                {session.session_plan_name}\n              </option>\n            ))}\n          </select>\n        </div>\n      </section>\n      {/* END FILTER SECTION PERIOD && EDUCATION */}\n    </div>\n  );\n};\n\nexport default React.memo(ClaimDashBoardTitle);\n","import React, { Component } from \"react\";\nimport { FaBookOpen } from \"react-icons/fa\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  schoolLevelsStoreInterface,\n  getAllClaims,\n  GetClaimingTypes,\n  getAllApplications,\n  loadEducationCategories,\n  setSelectedClaimType,\n  PushPopupAlert,\n} from \"../../../actions\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport { FC_GetPositionsByInstitution } from \"../../../actions/settings\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport {\n  SessionPlanInterface,\n  PositionAPI,\n  education_category,\n  PlansTypeKeys,\n  CandidateClaimInterface,\n  ClaimToPrintInterface,\n  ClaimDecisionStatus,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { DATE } from \"../../../utils/functions\";\nimport { reportClaimType } from \"../../Admin/Claiming/ClaimingReport\";\nimport { adminDisplayClaimTitle } from \"../../Claimings/Admin\";\nimport NoSession from \"../../SessionSettings/NoSession\";\nimport PieChart from \"../ChartComponents/PieChart\";\nimport ExamDashboardLabels from \"../ExamDashboard/ExamDashboardLabels\";\nimport AllClaimChart from \"./AllClaimChart\";\nimport ClaimDashBoardTitle from \"./ClaimDashBoardTitle\";\n\ninterface WaitingListDashboardProps {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  systemPositions: PositionAPI[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  setSelectedClaimType: Function;\n  FC_GetPositionsByInstitution: Function;\n  getAllClaims: Function;\n  GetClaimingTypes: Function;\n  getAllApplications: Function;\n  GetAllSessionPlans: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface WaitingListDashboardStates {\n  thisPeriod: string;\n  loading: boolean;\n  loadingSession: boolean;\n  periodChanged: boolean;\n  loadingPosition: boolean;\n  loadingApplications: boolean;\n  loadingClaims: boolean;\n  loadingDocuments: boolean;\n  loadingInstitutes: boolean;\n  loadingClarifications: boolean;\n  loadingFields: boolean;\n  thisEducation: education_category | null;\n  thisLabel: PlansTypeKeys | \"all\";\n}\nclass _ClaimDashboard extends Component<\n  WaitingListDashboardProps,\n  WaitingListDashboardStates\n> {\n  constructor(props: WaitingListDashboardProps) {\n    super(props);\n\n    this.state = {\n      thisPeriod: \"\",\n      loading: true,\n      loadingSession: true,\n      periodChanged: false,\n      loadingPosition: true,\n      loadingApplications: true,\n      loadingClaims: true,\n      loadingDocuments: true,\n      loadingInstitutes: true,\n      loadingClarifications: true,\n      loadingFields: true,\n      thisEducation: null,\n      thisLabel: \"all\",\n    };\n  }\n\n  setLoadingInstitutes = (value: boolean) => {\n    this.setState({ loadingInstitutes: value });\n  };\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingSession = (value: boolean) => {\n    this.setState({ loadingSession: value });\n  };\n\n  setPeriodChanged = (value: boolean) => {\n    this.setState({ periodChanged: value });\n  };\n\n  setLoadingPosition = (value: boolean) => {\n    this.setState({ loadingPosition: value });\n  };\n\n  setLoadingApplications = (value: boolean) => {\n    this.setState({ loadingApplications: value });\n  };\n\n  setLoadingClaims = (value: boolean) => {\n    this.setState({ loadingClaims: value });\n  };\n  setLoadingDocuments = (value: boolean) => {\n    this.setState({ loadingDocuments: value });\n  };\n\n  setLoadingClarifications = (value: boolean) => {\n    this.setState({ loadingClarifications: value });\n  };\n\n  setLoadingFields = (value: boolean) => {\n    this.setState({ loadingFields: value });\n  };\n\n  setThisEducation = (value: education_category | null) => {\n    this.setState({ thisEducation: value });\n  };\n\n  setThisLabel = (value: PlansTypeKeys | \"all\") => {\n    this.setState({ thisLabel: value });\n  };\n\n  setThisPeriod = (value: string) => {\n    this.setState({ thisPeriod: value });\n  };\n\n  componentDidMount = () => {\n    // LOADING EDUCATION CATEGORY =================================\n    if (\n      this.props.schoolLevels.education_categories === null ||\n      this.props.schoolLevels.education_categories.length === 0\n    ) {\n      this.props.loadEducationCategories(this.setLoadingInstitutes);\n    } else {\n      this.setLoadingInstitutes(false);\n    }\n    // END LOADING EDUCATION CATEGORY =================================\n\n    // LOADING APPLICATION SESSION ====================================\n    if (\n      this.props.application_sessions === null ||\n      this.props.application_sessions.length === 0\n    ) {\n      this.props.GetAllSessionPlans(\n        (status: boolean, msg: string, data?: SessionPlanInterface[]) => {\n          if (!status) {\n            this.setLoadingSession(false);\n            this.setLoading(false);\n            if (msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data && data.length > 0) {\n              let thisSession = data.find((item) => item.is_active === true);\n              this.setThisPeriod(\n                thisSession ? thisSession._id : data[data.length - 1]._id\n              );\n              this.onPeriodChange(\n                thisSession ? thisSession._id : data[data.length - 1]._id\n              );\n            }\n          }\n        }\n      );\n    } else if (this.state.loadingSession) {\n      this.setLoading(false);\n      this.setLoadingSession(false);\n    }\n\n    // SETTING ACTIVE SESSION ==========================\n    if (\n      isEmptyOrSpaces(this.state.thisPeriod) &&\n      !this.state.loadingSession &&\n      this.props.application_sessions &&\n      this.props.application_sessions.length > 0\n    ) {\n      let thisSession = this.props.application_sessions.find(\n        (item) => item.is_active === true\n      );\n      this.setThisPeriod(\n        thisSession\n          ? thisSession._id\n          : this.props.application_sessions[\n              this.props.application_sessions.length - 1\n            ]._id\n      );\n      this.onPeriodChange(\n        thisSession\n          ? thisSession._id\n          : this.props.application_sessions[\n              this.props.application_sessions.length - 1\n            ]._id\n      );\n    }\n\n    // LOADING DOCUMENT CATEGORIES ==========================\n    if (\n      !this.props.documentReducer.documentCategory &&\n      this.state.loadingDocuments\n    ) {\n      this.props.getDocumentCategory();\n      this.setLoadingDocuments(false);\n    } else if (this.state.loadingDocuments) {\n      this.setLoadingDocuments(false);\n    }\n    // LOADING DOCUMENT CLARIFICATIONS ==========================\n    if (\n      !this.props.documentReducer.documentSubCategory &&\n      this.state.loadingClarifications\n    ) {\n      this.props.getDocumentSubCategory();\n      this.setLoadingClarifications(false);\n    } else if (this.state.loadingClarifications) {\n      this.setLoadingClarifications(false);\n    }\n    // LOADING DOCUMENT FIELDS ==========================\n    if (\n      !this.props.documentReducer.documentFields &&\n      this.state.loadingFields\n    ) {\n      this.props.getDocumentFields();\n      this.setLoadingFields(false);\n    } else if (this.state.loadingFields) {\n      this.setLoadingFields(false);\n    }\n\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n\n    // LOADING POSITIONS ==============================================\n    if (\n      this.props.systemPositions === null &&\n      this.props.auth.education_institution_id\n    ) {\n      this.props.FC_GetPositionsByInstitution(\n        this.props.auth.education_institution_id,\n        (status: boolean, msg: string) => {\n          this.setLoadingPosition(status);\n          console.log({ status: status, msg: msg });\n          if (msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    } else if (this.state.loadingPosition) {\n      this.setLoadingPosition(false);\n    }\n  };\n\n  onPeriodChange = (period_id: string) => {\n    this.setPeriodChanged(true);\n    this.props.getAllClaims(1, period_id, (status: boolean, msg: string) => {\n      !status && this.setPeriodChanged(false);\n      if (status === false && msg.length) {\n        this.props.PushPopupAlert({\n          title: msg,\n          theme: PopupAlertTheme.danger,\n        });\n      }\n    });\n\n    this.props.getAllApplications(period_id, (status: boolean, msg: string) => {\n      !status && this.setLoadingApplications(status);\n      if (status === false && msg.length) {\n        this.props.PushPopupAlert({\n          title: msg,\n          theme: PopupAlertTheme.danger,\n        });\n      }\n    });\n  };\n\n  getClaimInstitute = (thisClaim: CandidateClaimInterface): string | null => {\n    if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      return null;\n    }\n    if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n      if (this.props.claiming.allApplications) {\n        let thisApplication = this.props.claiming.allApplications.find(\n          (item) => item._id === thisClaim.claiming_on_id\n        );\n        if (\n          thisApplication &&\n          this.props.claiming.allApplications &&\n          this.props.systemPositions\n        ) {\n          // return thisApplication.\n          let thisPosition = this.props.systemPositions.find(\n            (item) => item.position_id === thisApplication!.position\n          );\n          if (thisPosition) {\n            return thisPosition.education_institute_id.education_institute_id;\n          }\n        }\n      }\n    }\n\n    return null;\n  };\n\n  displayClaimTitle = (thisClaim: CandidateClaimInterface): string => {\n    let result: string = thisClaim.claiming_on_id;\n    if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      result =\n        thisClaim.user.details.filter(\n          (item) => item.validation_status !== \"waiting\"\n        ).length > 0\n          ? adminDisplayClaimTitle(\n              this.props.documentReducer,\n              thisClaim.user.details.filter(\n                (item) => item.validation_status !== \"waiting\"\n              ),\n              thisClaim\n            )\n          : \"Document not found\";\n    }\n    if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n      if (this.props.claiming.allApplications) {\n        let thisApplication = this.props.claiming.allApplications.find(\n          (item) => item._id === thisClaim.claiming_on_id\n        );\n        if (\n          thisApplication &&\n          this.props.claiming.allApplications &&\n          this.props.systemPositions\n        ) {\n          let thisPosition = this.props.systemPositions.find(\n            (item) => item.position_id === thisApplication!.position\n          );\n          if (thisPosition) {\n            result = thisPosition.position_title;\n          } else {\n            result = \"Application not found\";\n          }\n        }\n      }\n    }\n\n    return result;\n  };\n\n  ClaimTypes = (\n    claims: ClaimToPrintInterface[]\n  ): {\n    title: string;\n    count: {\n      all: number;\n      accepted: number;\n      rejected: number;\n      pending: number;\n    };\n    type: PlansTypeKeys | \"all\";\n  }[] => {\n    let output: {\n      title: string;\n      count: {\n        all: number;\n        accepted: number;\n        rejected: number;\n        pending: number;\n      };\n      type: PlansTypeKeys | \"all\";\n    }[] = [\n      {\n        title: \"All claim types\",\n        count: {\n          all: claims.length,\n          accepted: claims.filter(\n            (item) => item.decision === ClaimDecisionStatus.ACCEPTED\n          ).length,\n          rejected: claims.filter(\n            (item) => item.decision === ClaimDecisionStatus.REJECTED\n          ).length,\n          pending: claims.filter((item) => item.decision === \"PENDING\").length,\n        },\n        type: \"all\",\n      },\n    ];\n\n    Object.values(PlansTypeKeys).forEach((PlansKey) => {\n      output.push({\n        title: capitalizeFirstLetter(reportClaimType(PlansKey)),\n        count: {\n          all: claims.filter((itm) => itm.claim_type === PlansKey).length,\n          accepted: claims.filter(\n            (itm) =>\n              itm.claim_type === PlansKey &&\n              itm.decision === ClaimDecisionStatus.ACCEPTED\n          ).length,\n          rejected: claims.filter(\n            (itm) =>\n              itm.claim_type === PlansKey &&\n              itm.decision === ClaimDecisionStatus.REJECTED\n          ).length,\n          pending: claims.filter(\n            (itm) => itm.claim_type === PlansKey && itm.decision === \"PENDING\"\n          ).length,\n        },\n        type: PlansKey,\n      });\n    });\n    return output;\n  };\n\n  FC_ClaimData = (\n    allClaims: CandidateClaimInterface[] | null\n  ): ClaimToPrintInterface[] => {\n    if (allClaims === null || allClaims.length <= 0) return [];\n    let arrayNew: ClaimToPrintInterface[] = [];\n    let n: number = 1;\n    // LOOP IN ALL CLAIM ONE BY ONE ###########################\n    for (const key in allClaims) {\n      if (Object.prototype.hasOwnProperty.call(allClaims, key)) {\n        // LOOP IN ALL CLAIM OF ONE FILE ONE BY ONE ===========================\n        for (const keyClaim in allClaims[key].claims) {\n          if (\n            Object.prototype.hasOwnProperty.call(\n              allClaims[key].claims,\n              keyClaim\n            )\n          ) {\n            const element = allClaims[key].claims[keyClaim];\n            let dataArray: ClaimToPrintInterface = {\n              claim_id: n,\n              names:\n                allClaims[key].user.user_info.fname +\n                \" \" +\n                allClaims[key].user.user_info.lname,\n              gender: allClaims[key].user.user_info.sex ? \"Male\" : \"Female\",\n              national_id: allClaims[key].user.n_id,\n              phone: allClaims[key].user.phone_number,\n              email: allClaims[key].user.email,\n              claim_type: allClaims[key].type_key,\n              claim_level: element.level,\n              education_category: this.getClaimInstitute(allClaims[key]),\n              claim_session: this.state.thisPeriod,\n              date: DATE(element.createdAt),\n              decision: element.decision_taken_status\n                ? element.decision_taken_status\n                : \"PENDING\",\n              claim_title: this.displayClaimTitle(allClaims[key]),\n            };\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n      }\n    }\n    return arrayNew;\n  };\n\n  getClaimDataByTitle = (\n    allData: {\n      title: string;\n      count: {\n        all: number;\n        accepted: number;\n        rejected: number;\n        pending: number;\n      };\n      type: PlansTypeKeys | \"all\";\n    }[]\n  ):\n    | {\n        title: string;\n        count: {\n          all: number;\n          accepted: number;\n          rejected: number;\n          pending: number;\n        };\n        type: PlansTypeKeys | \"all\";\n      }\n    | undefined => {\n    return allData.find((item) => item.type === this.state.thisLabel);\n  };\n\n  render() {\n    if (\n      this.props.application_sessions &&\n      this.props.application_sessions.length === 0\n    ) {\n      return <NoSession />;\n    }\n\n    if (\n      this.state.loading ||\n      this.props.application_sessions === null ||\n      this.props.claiming.allClaims === null\n    ) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {/* HEADER TITLE */}\n        <ClaimDashBoardTitle\n          education_categories={this.props.schoolLevels.education_categories}\n          loading={this.state.loading}\n          loadingApplications={this.state.loadingApplications}\n          loadingEducation={this.state.loadingInstitutes}\n          thisEducation={this.state.thisEducation}\n          setThisEducation={this.setThisEducation}\n          thisPeriod={this.state.thisPeriod}\n          setThisPeriod={this.setThisPeriod}\n          application_sessions={this.props.application_sessions}\n          reportTitle={\"Claim Dashboard\"}\n          allEducation={true}\n          periodChanged={this.state.periodChanged}\n          onPeriodChange={this.onPeriodChange}\n        />\n        {/* END HEADER TITLE */}\n\n        {/* ===================================================================================== */}\n\n        {/* CLAIM ALL STATUS LABELS ======================================= */}\n        <section className=\"my-2\">\n          <div className=\"text-2xl font-semibold text-gray-600\">\n            Claim type:\n            <select\n              className={`bg-white text-gray-600 border-2 border-blue-600 rounded-lg px-2 py-1 focus:outline-none`}\n              value={this.state.thisLabel}\n              onChange={(e) =>\n                this.setThisLabel(e.target.value as PlansTypeKeys | \"all\")\n              }\n            >\n              {this.ClaimTypes(\n                this.FC_ClaimData(this.props.claiming.allClaims)!\n              ).map((item, index: number) => (\n                <option key={item.type + index} value={item.type}>\n                  {capitalizeFirstLetter(item.title.toLocaleLowerCase())}\n                </option>\n              ))}\n            </select>\n          </div>\n          {this.getClaimDataByTitle(\n            this.ClaimTypes(this.FC_ClaimData(this.props.claiming.allClaims)!)\n          ) && (\n            <ExamDashboardLabels\n              dataLabels={[\n                {\n                  title: \"Total claim\",\n                  icon: FaBookOpen,\n                  iconColor: \"blue\",\n                  count: this.getClaimDataByTitle(\n                    this.ClaimTypes(\n                      this.FC_ClaimData(this.props.claiming.allClaims)!\n                    )\n                  )!.count.all,\n                },\n                {\n                  title: \"Accepted Claim\",\n                  icon: FaBookOpen,\n                  iconColor: \"green\",\n                  count: this.getClaimDataByTitle(\n                    this.ClaimTypes(\n                      this.FC_ClaimData(this.props.claiming.allClaims)!\n                    )\n                  )!.count.accepted,\n                },\n                {\n                  title: \"Rejected Claim\",\n                  icon: FaBookOpen,\n                  iconColor: \"yellow\",\n                  count: this.getClaimDataByTitle(\n                    this.ClaimTypes(\n                      this.FC_ClaimData(this.props.claiming.allClaims)!\n                    )\n                  )!.count.rejected,\n                },\n                {\n                  title: \"Pending Claim\",\n                  icon: FaBookOpen,\n                  iconColor: \"gray\",\n                  count: this.getClaimDataByTitle(\n                    this.ClaimTypes(\n                      this.FC_ClaimData(this.props.claiming.allClaims)!\n                    )\n                  )!.count.pending,\n                },\n              ]}\n              labelsOnRow={5}\n            >\n              <div className=\"flex justify-center\">\n                <PieChart\n                  options={{\n                    labels: [\"Accepted\", \"Rejected\", \"Pending\"],\n                    legend: {\n                      show: false,\n                      position: \"bottom\",\n                      horizontalAlign: \"center\",\n                      fontSize: \"16px\",\n                      itemMargin: {\n                        horizontal: 3,\n                        vertical: 0,\n                      },\n                    },\n                    plotOptions: {\n                      pie: {\n                        donut: {\n                          labels: {\n                            show: true,\n                            name: {\n                              show: true,\n                              fontSize: \"16px\",\n                              //   fontFamily: \"Rubik\",\n                              color: \"#2564eb\",\n                              offsetY: -10,\n                            },\n                            value: {\n                              show: true,\n                              fontSize: \"20px\",\n                              fontFamily: \"Helvetica, Arial, sans-serif\",\n                              color: \"#2564eb\",\n                              offsetY: 10,\n                              formatter: function (val) {\n                                return val;\n                              },\n                            },\n                            total: {\n                              show: true,\n                              label: \"Total\",\n                              color: \"#2564eb\",\n                              formatter: function (w) {\n                                return w.globals.seriesTotals.reduce(\n                                  (a: number, b: number) => {\n                                    return a + b;\n                                  },\n                                  0\n                                );\n                              },\n                            },\n                          },\n                        },\n                      },\n                    },\n                    colors: [\"#469769\", \"#d97724\", \"#4b5563\"],\n                  }}\n                  series={[\n                    this.getClaimDataByTitle(\n                      this.ClaimTypes(\n                        this.FC_ClaimData(this.props.claiming.allClaims)!\n                      )\n                    )!.count.accepted,\n                    this.getClaimDataByTitle(\n                      this.ClaimTypes(\n                        this.FC_ClaimData(this.props.claiming.allClaims)!\n                      )\n                    )!.count.rejected,\n                    this.getClaimDataByTitle(\n                      this.ClaimTypes(\n                        this.FC_ClaimData(this.props.claiming.allClaims)!\n                      )\n                    )!.count.pending,\n                  ]}\n                  width={210}\n                />\n              </div>\n            </ExamDashboardLabels>\n          )}\n        </section>\n        {/* CLAIM STATUS ON COUNTRY LEVEL LABELS ======================================= */}\n\n        {/* ===================================================================================== */}\n\n        {/* EXAM PERFORMANCE ON COUNTRY CHART ======================================= */}\n        <AllClaimChart\n          ClaimTypes={this.ClaimTypes(\n            this.FC_ClaimData(this.props.claiming.allClaims)\n          )}\n        />\n        {/* END EXAM PERFORMANCE ON COUNTRY CHART ======================================= */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system_settings,\n  sessionPlan,\n  claiming,\n  document,\n  schoolLevels,\n}: StoreState): {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  systemPositions: PositionAPI[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n} => {\n  return {\n    auth: auth,\n    application_sessions: sessionPlan.allSessionPlans,\n    systemPositions: system_settings.systemPositions,\n    claiming,\n    documentReducer: document,\n    schoolLevels,\n  };\n};\n\nexport const ClaimDashboard = connect(mapStateToProps, {\n  getAllClaims,\n  GetClaimingTypes,\n  getAllApplications,\n  GetAllSessionPlans,\n  loadEducationCategories,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  setSelectedClaimType,\n  FC_GetPositionsByInstitution,\n  PushPopupAlert,\n})(_ClaimDashboard);\n","import React, { FC, ReactElement, ReactNode } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, System } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { NavToogle, PageHasSubNav } from \"../../actions\";\nimport { MdBrightness1, MdSearch } from \"react-icons/md\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  system: System;\n  PageHasSubNav: Function;\n  NavToogle: Function;\n  children: ReactNode;\n}\n//\ninterface AppState {\n  loading: boolean;\n}\n\nclass _SideNavigation extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount = () => this.props.PageHasSubNav(true);\n  componentWillUnmount = () => this.props.PageHasSubNav(false);\n\n  render() {\n    const isAuthenticated = this.props.auth.isAuthenticated;\n\n    if (isAuthenticated === false) {\n      return null;\n    }\n\n    const navActive = this.props.system.navigation;\n    return (\n      <div\n        className={`fixed w-48 p-1 pr-2 pl-6 text-gray-700 bg-white ${\n          navActive === true ? \"lg:left-16  left-16\" : \" -left-72 lg:left-16\"\n        }  top-0 bottom-0 pt-20 z-30 shadow-lg  transition-all duration-500 ease-in-out overflow-y-auto`}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n}: StoreState): { auth: Auth; system: System } => {\n  return { auth: auth, system: system };\n};\n\nexport const SideNavigation = connect(mapStateToProps, {\n  NavToogle,\n  PageHasSubNav,\n})(_SideNavigation);\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SearchComponentInterface = {\n  data: any[];\n};\n\nexport const Search: FC<SearchComponentInterface> = ({\n  data,\n}): ReactElement => {\n  return (\n    <div className=\"m-1 rounded-md shadow-md border border-blue-400 bg-white p-1 flex \">\n      <label htmlFor=\"search-text\" className=\"inline-block text-2xl\">\n        <MdSearch className=\"inline-block text-blue-400\" />\n      </label>\n      <input\n        type=\"search\"\n        className=\"outline-none bg-transparent flex-1 pl-1\"\n        placeholder=\"Search\"\n        id=\"search-text\"\n      />\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype MainItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const MainItem: FC<MainItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n  return (\n    <section\n      className={`${\n        active === true\n          ? \"bg-blue-500 text-white font-bold\"\n          : \"bg-blue-100 text-blue-800\"\n      } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex cursor-pointer items-center`}\n    >\n      <section className=\"flex-1\">\n        <IconDefined className=\"inline-block mr-1 text-xs\" />\n        <span>{title}</span>\n      </section>\n\n      {count > 0 ? (\n        <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n          {count}\n        </span>\n      ) : null}\n    </section>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemContainerComponentInterface = {\n  children: ReactNode;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const SubItemContainer: FC<SubItemContainerComponentInterface> = ({\n  children,\n}): ReactElement => {\n  return (\n    <div className=\"ml-3 overflow-y-auto border-l-2 border-blue-200 -mt-1 pt-2 mb-2 pl-1 cursor-pointer\">\n      {children}\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n * @important Remenber to use these components inside the <SubItemContainer>...</SubItemContainer>\n */\nexport const SubItem: FC<SubItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n\n  return (\n    <div\n      className={`animate__animated animate__zoomIn animate__faster ${\n        active === true ? \"bg-blue-500 text-white font-bold\" : \" text-blue-800\"\n      } text-blue-800 bg-blue-200 rounded-md px-1 mb-1 flex items-center py-1 font-bold`}\n    >\n      <IconDefined\n        className={`inline-block mr-0.1 text-xs ${\n          active === true ? \"text-white\" : \"\"\n        }`}\n      />\n      <span\n        className={`inline-block pl-1 ${active === true ? \"text-white\" : \"\"}`}\n      >\n        {title}\n      </span>\n      {count >= 1 ? (\n        <span\n          className={`text-sm fint-bold ${active === true ? \"text-white\" : \"\"}`}\n        >\n          {count}\n        </span>\n      ) : null}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { IoWarning } from \"react-icons/io5\";\n// import { MdInfoOutline } from \"react-icons/md\";\nimport { NavLink } from \"react-router-dom\";\n\ntype NoSessionProps = {\n  title?: string;\n  description?: string;\n  content?: any;\n};\n\nconst NoSession: React.FC<NoSessionProps> = ({\n  title = \"No session available\",\n  description = \"Please Wait for the system to publish the sessions or contact the administrator\",\n  content = undefined,\n}) => {\n  return (\n    <div className=\"w-full my-5\">\n      <section className=\"py-10 flex flex-col items-center rounded border border-gray-300 bg-white text-2xl font-medium text-yellow-800 animate__animated animate__pulse\">\n        <div className=\"flex flex-col items-center\">\n          <IoWarning className=\"w-32 h-32\" />\n          {description}\n        </div>\n        {content && content}\n        {false && (\n          <div className=\"text-center group text-sm -mb-3 mt-5\">\n            <NavLink\n              to=\"/apps-page\"\n              className=\"border border-rounded-md bg-gray-100 text-gray-900 rounded border-gray-100 group-hover:bg-gray-50 group-hover:border-gray-400 px-2 py-1\"\n            >\n              Back to App\n            </NavLink>\n          </div>\n        )}\n      </section>\n    </div>\n  );\n};\n\nexport default React.memo(NoSession);\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AccessTaskInterface,\n  PermissionInterface,\n  SystemSettingsInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PositionAPI } from \"../interfaces/position\";\n\nconst url = `${API.AUTH}/auth/user/access`;\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// SYSTEM SETTINGS  ==============\nexport interface GetSystemSettingsAction {\n  type: ActionTypes.GET_SYSTEM_SETTINGS;\n  payload: SystemSettingsInterface[];\n}\n\nexport interface DisableSystemSettingsAction {\n  type: ActionTypes.DISABLE_SYSTEM_SETTINGS;\n  payload: {\n    system_setting_id: string;\n    status: \"enabled\" | \"disabled\";\n  };\n}\n\n// ROLE TASKS ACCESS SETTINGS ===================================\nexport interface GetTaskAccessAction {\n  type: ActionTypes.GET_TASK_ACCESS;\n  payload: AccessTaskInterface[];\n}\n\n// POSITIONS SETTINGS ===================================\nexport interface PositionCreateInterface {\n  position_id?: string;\n  position_title: string;\n  position_code: string;\n  description: string;\n  school_level_id: string;\n  subcategory_id: string;\n  education_institute_id: string;\n  courses: string[];\n  requirements: {\n    user_detail_category_id: string;\n    user_detail_subcategory_id: string;\n    position_requirement: {\n      category_subcategory_data_id: string;\n      required: boolean;\n    }[];\n    required: boolean;\n  }[];\n}\nexport interface GetPositionsAction {\n  type: ActionTypes.GET_POSTIONS;\n  payload: PositionAPI[];\n}\n\nexport interface CreatePositionsAction {\n  type: ActionTypes.CREATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface UpdatePositionsAction {\n  type: ActionTypes.UPDATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface DeletePositionSettingAction {\n  type: ActionTypes.DELETE_POSITION;\n  payload: string;\n}\n\nexport interface PublishPositionAction {\n  type: ActionTypes.PUBLISH_POSITION;\n  payload: {\n    position_id: string;\n    status: boolean;\n  };\n}\n\nexport type SystemActionType =\n  | GetSystemSettingsAction\n  | DisableSystemSettingsAction\n  | GetTaskAccessAction\n  | GetPositionsAction\n  | CreatePositionsAction\n  | UpdatePositionsAction\n  | DeletePositionSettingAction\n  | PublishPositionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSystemSettings = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<SystemSettingsInterface[]>(\n        `${API.AUTH}/system/setting`\n      );\n      console.log(\"=================getSystemSettings===================\");\n      console.log(res);\n      console.log(\"=================getSystemSettings===================\");\n      dispatch<GetSystemSettingsAction>({\n        type: ActionTypes.GET_SYSTEM_SETTINGS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const disableSystemSetting = (data: {\n  system_setting_id: string;\n  status: \"enabled\" | \"disabled\";\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableSystemSettingsAction>({\n      type: ActionTypes.DISABLE_SYSTEM_SETTINGS,\n      payload: data,\n    });\n  };\n};\n\n// ============================ tasks access =======================\n\nexport const GetTaskAccess = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<\n        {\n          id: string;\n          title: string;\n          key: string;\n          permitted: PermissionInterface;\n        }[]\n      >(`${url}/roleaccess`);\n      let response: AccessTaskInterface[] = res.data.map((data) => ({\n        id: data.id,\n        task: data.title,\n        key: data.key,\n        permitted: data.permitted,\n      }));\n      dispatch<GetTaskAccessAction>({\n        type: ActionTypes.GET_TASK_ACCESS,\n        payload: response,\n      });\n      callback(false, \"\", response);\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// ============================ positions =======================\n\nexport const getPositions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(`${API.APPLICATION}/position`);\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createPosition = (data: PositionCreateInterface) => {\n  console.log({ createPosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreatePositionsAction>({\n      type: ActionTypes.CREATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const updatePosition = (data: PositionCreateInterface) => {\n  console.log({ updatePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdatePositionsAction>({\n      type: ActionTypes.UPDATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const deletePosition = (data: string) => {\n  console.log({ deletePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<DeletePositionSettingAction>({\n      type: ActionTypes.DELETE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const publishPosition = (data: {\n  position_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<PublishPositionAction>({\n      type: ActionTypes.PUBLISH_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_GetPositionsByInstitution = (\n  institution_id: string,\n  callback: (status: boolean, msg: string, data?: PositionAPI[]) => void\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(\n        `${API.APPLICATION}/position/instituteposition/${institution_id}`\n      );\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n","import React from \"react\";\n\ntype TableLoadingProps = {\n  cols: number;\n};\nconst TableLoading: React.FC<TableLoadingProps> = (props) => {\n  const displayCols = (): JSX.Element[] => {\n    let colsArray: number[] = [];\n    for (let index = 0; index < props.cols; index++) {\n      colsArray.push(index);\n    }\n    let result = colsArray.map((element) => {\n      return (\n        <td className=\"p-3 text-center whitespace-nowrap\" key={element}>\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      );\n    });\n\n    return result;\n  };\n  return (\n    <>\n      <tr className=\"border-b border-gray-200\" key={Math.random()}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={Math.random()}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={Math.random()}>\n        {displayCols()}\n      </tr>\n    </>\n  );\n};\n\nexport default TableLoading;\n","import React from \"react\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport { RiFileExcel2Fill } from \"react-icons/ri\";\n\ninterface ExportToExcelProps {\n  fileData: any[];\n  fileName: string;\n  btnName?: string;\n  className?: string;\n  showIcon?: boolean;\n}\n\nconst ExportToExcel: React.FC<ExportToExcelProps> = ({\n  fileData,\n  fileName,\n  btnName = \"Excel\",\n  className = \"flex items-center gap-1 px-4 py-1 rounded text-green-700 bg-white border hover:text-white hover:bg-green-700 border-green-700 font-bold\",\n  showIcon = true,\n}) => {\n  const fileType =\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n  const fileExtension = \".xlsx\";\n\n  const exportToCSV = (apiData: any[], fileName: string) => {\n    const ws = XLSX.utils.json_to_sheet(apiData);\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n    const data = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n\n  return (\n    <button\n      onClick={(e) => exportToCSV(fileData, fileName)}\n      className={className}\n    >\n      {showIcon && <RiFileExcel2Fill />}\n      {btnName}\n    </button>\n  );\n};\n\nexport default ExportToExcel;\n","import { SessionPlanInterface } from \"../interfaces\";\nimport {\n  ApplicationStates,\n  SESSION_PLAN_KEYS,\n} from \"../interfaces/application\";\n\nexport interface SystemSettingsInterface {\n  system_setting_id: string;\n  name: string;\n  key: string;\n  status: \"enabled\" | \"disabled\";\n}\n\nexport interface ApplicationSessionInterface {\n  is_active: boolean;\n  application_session_name: string;\n  period: string;\n  application_start_date: string;\n  application_end_date: string;\n  createdAt: string;\n  updatedAt: string;\n  application_session_id: string;\n}\n\nexport interface UserInfoInterface {\n  document_type?: string;\n  issue_number?: string;\n  date_of_issue?: string;\n  date_of_expiry?: string;\n  place_of_issue?: string;\n  application_number?: string;\n  fname: string;\n  lname: string;\n  sex: \"M\" | \"F\";\n  father_names: string;\n  mother_names: string;\n  date_of_birth: string;\n  place_of_birth?: string;\n  country_of_birth: string;\n  village_id: string;\n  village: string;\n  cell: string;\n  sector: string;\n  district: string;\n  province: string;\n  photo?: string;\n  civil_status?: string;\n  spouse?: any;\n  status?: string;\n}\n\nexport interface MySchoolInterface {\n  _id: string;\n  school_name: string;\n  school_code: string;\n  province_id: string;\n  province_code: string;\n  district_id: {\n    _id: string;\n    district_name: string;\n  };\n  district_code: string;\n  sector_code: string;\n  sector_id: string;\n  school_status: string;\n  status: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface UserInterface {\n  user_id: string;\n  _id?: string;\n  n_id?: string;\n  phone_number: string;\n  email: string;\n  password?: string;\n  user_info: UserInfoInterface;\n  details: UserDocumentsInterface[];\n  user_photo?: string;\n  default_access: RoleToUserInterface | null;\n  custome_access: CustomeAccessInterface | null;\n  is_active: boolean;\n  disability: boolean;\n  in_education: boolean;\n  residence?: {\n    province_id: string;\n    province_name: string;\n    district_id: string;\n    district_name: string;\n    sector_id: string;\n    sector_name: string;\n  };\n  education_institution_id?: string;\n  education_institution_name?: string;\n}\n\nexport interface CandidateDetailsInterface_old {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: string;\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  } | null;\n  doc_history_status: string;\n  get_in_date: string;\n  approved?: string;\n}\n\nexport interface CandidateDetailsInterface {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: string;\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  } | null;\n  doc_history_status: string;\n  get_in_date: string;\n  approved?: string;\n}\n\nexport interface DocInterface {\n  category_subcategory_data: string;\n  school: string;\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  approved: string;\n  doc_id: string;\n  validated_by: null;\n  validation_status: string;\n  doc_history_status: string;\n  get_in_date: string;\n  date_modefied: string;\n}\n\nexport interface CandidateRoleToUserInterface {\n  key: string;\n  status: number;\n  access: boolean;\n  assigned_date: string;\n}\n\nexport interface CandidatesInterface_old {\n  user_id: string;\n  n_id: string;\n  fname: string;\n  lname: string;\n  phone_number: string;\n  district: string;\n  email: string;\n  details: CandidateDetailsInterface[];\n}\n\nexport interface ApplicationExamsInterface {\n  course_id: string;\n  proctoring_type: string;\n  center_id: string;\n  room_id: string;\n}\n\nexport interface CandidatesInterface {\n  _id: string;\n  n_id: string;\n  email: string;\n  phone_number: string;\n  in_education: boolean;\n  disability: boolean;\n  residence: {\n    province_id: string;\n    province_name: string;\n    district_id: string;\n    district_name: string;\n    sector_id: string;\n    sector_name: string;\n  };\n  details: CandidateDetailsInterface[];\n  exams: ApplicationExamsInterface[];\n  user_info: {\n    document_type: string;\n    issue_number: string;\n    date_of_issue: string;\n    date_of_expiry: string;\n    place_of_issue: string;\n    application_number: string;\n    fname: string;\n    lname: string;\n    father_names: string;\n    mother_names: string;\n    sex: string;\n    date_of_birth: string;\n    place_of_birth: string;\n    country_of_birth: string;\n    village_id: string;\n    village: string;\n    cell: string;\n    sector: string;\n    district: string;\n    province: string;\n    civil_status: string;\n    spouse: null;\n    status: string;\n    photo: string;\n  };\n}\n\nexport interface CustomeAccessInterface {\n  access: AccessTaskInterface[];\n  user_id: string;\n  custome_user_access_id: string;\n}\n\nexport interface UserDocumentsInterface {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: { title: string; school_id: string | null };\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  approved: \"waiting\" | \"approved\" | \"rejected\";\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    commet: string;\n    comment?: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  };\n}\n\nexport interface SystemUserRoleInterface {\n  system_user_role_id: string;\n  role: string;\n  status: boolean;\n  access: AccessTaskInterface[];\n  district_required?: boolean;\n  school_required?: boolean;\n  room_required?: boolean;\n  education_institution_required?: boolean;\n  school_id: string;\n  district_id: string;\n}\n\nexport interface CustomeUserAccessInterface {\n  user_id: string;\n  access?: [\n    {\n      id: string;\n      task: string;\n      key: string;\n      permitted: {\n        create: boolean;\n        delete: boolean;\n        update: boolean;\n        view: boolean;\n      };\n    }\n  ];\n}\n\nexport interface PermissionInterface {\n  create: boolean;\n  view: boolean;\n  update: boolean;\n  delete: boolean;\n}\n\nexport interface AccessTaskInterface {\n  id: string;\n  task: string;\n  key: string;\n  permitted: PermissionInterface;\n}\n\nexport interface RoleToUserInterface {\n  system_user_role_id: string;\n  role: string;\n  access: AccessTaskInterface[];\n  status?: number;\n  active?: boolean;\n  school_id: string;\n  district_id: string;\n  room_id: string;\n  education_institution_id: string;\n  assigned_date?: string;\n}\n\nexport enum RoomType {\n  Physical = \"Physical\",\n  Virtual = \"Virtual\",\n  Default = \"Default\",\n}\n\nexport interface RoomsInterface {\n  occupied: number;\n  isUsed: boolean;\n  room_type: RoomType;\n  room_number: number;\n  capacity: number;\n  _id: string;\n}\n\nexport interface CentersInterface {\n  rooms: RoomsInterface[];\n  isUsed: boolean;\n  _id: string;\n  center_name: string;\n  center_code: number;\n  district_id: string;\n  education_institute_id: string;\n}\n\nexport interface SectorInterface {\n  district_code: number;\n  district_id: string;\n  sector_name: string;\n  sector_code: number;\n  sector_id: string;\n}\n\nexport interface AllDistrictInterface {\n  sectors: string[];\n  centers: string[];\n  district_name: string;\n  district_code: string;\n  province_code: string;\n  province_id: string;\n  status: number;\n  createdAt: string;\n  updatedAt: string;\n  district_id: string;\n}\nexport interface DistrictInterface {\n  centers: CentersInterface[];\n  sectors: SectorInterface[];\n  province_code: number;\n  province_id: string;\n  district_name: string;\n  district_code: number;\n  _id: string;\n}\n\nexport interface RoomLocationInterface {\n  districts: DistrictInterface[];\n  province_name: string;\n  province_code: number;\n  _id: string;\n}\n\nexport interface AssignRoleToUserActionInterface {\n  user_id: string;\n  data: RoleToUserInterface;\n}\n\nexport interface AssignRoleToUserActionInterface {\n  user_id: string;\n  data: RoleToUserInterface;\n}\n\nexport enum PostRequestStatusInterface {\n  INITIATED = \"initiated\",\n  CONFIRMED = \"confirmed\",\n  RECEIVED = \"received\",\n}\n\nexport interface PostSchoolInterface_old {\n  post_at_school_id: string;\n  school_id: string;\n  position_id: string;\n  district_id: string;\n  needed_posts: number;\n  confirmed_posts?: number;\n  occupied_posts?: number;\n  requested_by: string;\n  confirmed_by?: string;\n  received_posts?: number;\n  request_date: Date;\n  approval_date?: Date;\n  post_at_school_status: PostRequestStatusInterface;\n}\n\nexport interface PostSchoolInterface {\n  _id: string;\n  school_id: string;\n  position_id: string;\n  district_id: string;\n  needed_posts: number;\n  male_number: number;\n  female_number: number;\n  description: string;\n  confirmed_posts?: number;\n  occupied_posts?: number;\n  requested_by: string;\n  confirmed_by?: string;\n  received_posts?: number;\n  request_date: Date;\n  approval_date?: Date;\n  requested_post_status: PostRequestStatusInterface;\n  school: {\n    _id: string;\n    school_name: string;\n    school_code: string;\n    province_id: string;\n    province_code: string;\n    district_id: {\n      _id: string;\n      district_name: string;\n    };\n    district_code: string;\n    sector_code: string;\n    sector_id: string;\n    school_status: string;\n    status: number;\n    createdAt: string;\n    updatedAt: string;\n  };\n  post_request_session_id: string;\n}\n\nexport interface SchoolInfoInterface {\n  school_id: string;\n  school_title: string;\n  district_id: string;\n  number_of_females?: number;\n  number_of_males?: number;\n}\n\nexport interface SchoolsInterface {\n  _id: string;\n  status: boolean;\n  school_name: string;\n  school_code: number;\n  province_id: string;\n  province_code: number;\n  district_id: string;\n  district_code: number;\n  sector_id: string;\n  sector_code: number;\n  education_category_id: string;\n}\n\nexport interface MySchoolInterface {\n  _id: string;\n  school_name: string;\n  school_code: string;\n  province_id: string;\n  province_code: string;\n  district_id: {\n    _id: string;\n    district_name: string;\n  };\n  district_code: string;\n  sector_code: string;\n  sector_id: string;\n  school_status: string;\n  status: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface SchoolLevelInterface {\n  school_level_id: string;\n  school_level_name: string;\n  description: string;\n  education_institute: string[];\n  courses: [];\n}\n\nexport interface CourseInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n}\n\nexport interface EducationInstituteInterface {\n  education_category_title: string;\n  school_levels: [];\n  description: string;\n  education_institute_id: string;\n}\n\nexport interface PositionRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface PositionInterface {\n  courses: CourseInterface[];\n  position_title: string;\n  description: string;\n  school_level_id: SchoolLevelInterface;\n  education_institute_id: EducationInstituteInterface;\n  requirements: PositionRequirementInterface[];\n  position_id: string;\n}\n\nexport enum DocumentAttributesInterface {\n  \"Title\" = \"title\",\n  \"Description\" = \"description\",\n  \"Files\" = \"files\",\n  \"email\" = \"email\",\n  \"names\" = \"names\",\n  \"phone_number\" = \"phone_number\",\n  \"position\" = \"position\",\n  \"relation\" = \"relation\",\n  \"src\" = \"src\",\n  \"year\" = \"year\",\n  \"company\" = \"company\",\n  \"category_subcategory_data\" = \"category_subcategory_data\",\n  \"others\" = \"others\",\n  \"start_year\" = \"start_year\",\n  \"end_year\" = \"end_year\",\n  \"School\" = \"School\",\n  \"expiration_date\" = \"expiration_date\",\n}\n\nexport enum DocValidationStatusInterface {\n  APPROVED = \"approved\",\n  REJECTED = \"rejected\",\n}\n\nexport interface DocumentCategoryInterface {\n  user_detail_category_id: string;\n  title: string;\n  description: string;\n  fields: DocumentAttributesInterface[];\n}\n\nexport interface DocumentSubCategoryInterface {\n  category_id: string;\n  title: string;\n  description: string;\n  user_detail_subcategory_id: string;\n}\n\nexport interface DocumentFieldsInterface {\n  _id: string;\n  category_id: string;\n  subcategory_id: string | null;\n  title: string;\n  description: string;\n  others: [];\n}\n\nexport interface ApplicationAssessmentInterface {\n  application_id: string;\n  user_id: string;\n  application_session: SessionPlanInterface;\n  application_status: string;\n  n_id: string;\n  email: string;\n  user_info: {\n    fname: string;\n    lname: string;\n    sex: string;\n  };\n  phone_number: string;\n  position: PositionApplicationInterface;\n  details: CandidateDetailsInterface[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface AdminApplicationsToPrintInterface {\n  No: number;\n  Names: string;\n  Gender?: string;\n  NationalID?: string;\n  Phone?: string;\n  Email?: string;\n  Position: string;\n  Institution?: string;\n  Session?: string;\n  Residence?: string;\n  Date?: string;\n  Decision?: ApplicationStates;\n  Preferences?: string;\n}\n\nexport interface PositionApplicationInterface {\n  courses: string[];\n  position_title: string;\n  description: string;\n  school_level_id: string;\n  education_institute_id: string;\n  requirements: PositionRequirementInterface[];\n  position_id: string;\n}\n\nexport interface PositionRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface ApplicationRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface PeriodInterface {\n  is_active: string;\n  application_session_name: string;\n  period: string;\n  application_start_date: string;\n  application_end_date: string;\n  createdAt: string;\n  updatedAt: string;\n  application_session_id: string;\n}\n\nexport interface LocationRoomTableInterface {\n  province_id: string;\n  province_name: string;\n  district_id: string;\n  district_name: string;\n  center_id: string;\n  center_name: string;\n  room_id: string;\n  room_name: string;\n  capacity: number;\n  occupied: number;\n}\n\nexport interface LocationSectorTableInterface {\n  province_id: string;\n  province_name: string;\n  province_code: number;\n  district_id: string;\n  district_name: string;\n  district_code: number;\n  sector_id: string;\n  sector_name: string;\n  sector_code: number;\n}\n\nexport interface PositionRequirementsFieldInterface {\n  category_id: string;\n  category_name: string;\n  sub_category_id: string;\n  sub_category_name: string;\n  field_id: string;\n  field_name: string;\n  sub_category_required: boolean;\n  required: boolean;\n  isAnyField: boolean;\n}\n\nexport interface PositionRequirementsQualificationInterface {\n  category_id: string;\n  category_name: string;\n  sub_category_id: string;\n  sub_category_name: string;\n  fields: DocumentFieldsInterface[];\n  required: boolean;\n}\n\nexport interface ApplicationPeriodInterface {\n  _id: string;\n  application_status: ApplicationStates;\n  userInfo: {\n    n_id: string;\n    phone_number: string;\n    email: string;\n    user_info: {\n      document_type: string;\n      issue_number: string;\n      date_of_issue: string;\n      date_of_expiry: string;\n      place_of_issue: string;\n      application_number: string;\n      fname: string;\n      lname: string;\n      father_names: string;\n      mother_names: string;\n      sex: string;\n      date_of_birth: string;\n      place_of_birth: string;\n      country_of_birth: string;\n      village_id: string;\n      village: string;\n      cell: string;\n      sector: string;\n      district: string;\n      province: string;\n      civil_status: string;\n      spouse: null;\n      status: string;\n      photo: string;\n    };\n  };\n  user_id: string;\n  position: string;\n  application_session: string;\n  exams: ApplicationExamsInterface[];\n}\n\nexport const getDocCategoryById = (\n  subDocs: DocumentCategoryInterface[],\n  docId: string\n): DocumentCategoryInterface => {\n  return subDocs.filter((doc) => doc.user_detail_category_id === docId)[0];\n};\n\nexport const getSubDocCategoryById = (\n  subDocs: DocumentSubCategoryInterface[],\n  docId: string\n): DocumentSubCategoryInterface => {\n  return subDocs.filter((doc) => doc.user_detail_subcategory_id === docId)[0];\n};\n\nexport const SESSION_PLAN_TYPES: {\n  type_id: number;\n  type_title: string;\n  type_key: SESSION_PLAN_KEYS;\n}[] = [\n  {\n    type_id: 1,\n    type_title: \"Application\",\n    type_key: SESSION_PLAN_KEYS.APPLICATION,\n  },\n  {\n    type_id: 2,\n    type_title: \"Document Validation\",\n    type_key: SESSION_PLAN_KEYS.DOCUMENT_VALIDATION,\n  },\n  {\n    type_id: 3,\n    type_title: \"Examination\",\n    type_key: SESSION_PLAN_KEYS.EXAMINATION,\n  },\n  {\n    type_id: 4,\n    type_title: \"Marks Publication\",\n    type_key: SESSION_PLAN_KEYS.MARKS_PUBLICATION,\n  },\n  {\n    type_id: 5,\n    type_title: \"Placement and Transfer\",\n    type_key: SESSION_PLAN_KEYS.PLACEMENT_TRANSFER,\n  },\n];\n","export default __webpack_public_path__ + \"static/media/mineduc.11a9ae1c.png\";","import jsPDF from \"jspdf\";\nimport { DATE } from \"../../utils/functions\";\nimport Logo from \"../../utils/mineduc.png\";\nrequire(\"jspdf-autotable\");\n\nexport const addFooters = (doc: any) => {\n  const pageCount = doc.internal.getNumberOfPages();\n\n  doc.setFont(\"helvetica\", \"italic\");\n  doc.setFontSize(8);\n  for (var i = 1; i <= pageCount; i++) {\n    doc.setPage(i);\n    doc.text(\n      \"Page \" + String(i) + \" of \" + String(pageCount),\n      doc.internal.pageSize.width / 2,\n      297,\n      {\n        align: \"center\",\n      }\n    );\n  }\n};\n\nexport type reportSettingsInterface = {\n  doneBy: string;\n  title: string;\n  subjectTitle: string;\n  subject: string;\n  institute: string;\n  period: string;\n  footer: string;\n  orientation?: \"p\" | \"l\";\n};\n\nexport const generatePDF = async (\n  reportSettings: reportSettingsInterface,\n  table: HTMLElement,\n  callBack: (status: boolean) => void\n) => {\n  callBack(true);\n  const orientation: \"p\" | \"l\" = reportSettings.orientation\n    ? reportSettings.orientation\n    : \"p\";\n  var lMargin: number = 20; //left margin in mm\n  var rMargin: number = 20; //right margin in mm\n  var pdfInMM: number = 185; // width of A4 in mm\n\n  //   var doc = new jsPDF(\"p\", \"mm\", \"a4\");\n  var doc: any = new jsPDF(orientation, \"mm\", \"a4\");\n\n  doc.setTextColor(95, 95, 95);\n  doc.setFontSize(28);\n  // doc.text(\n  //   this.props.reportTitle,\n  //   doc.internal.pageSize.getWidth() / 2,\n  //   30,\n  //   undefined,\n  //   \"center\"\n  // );\n  doc.addImage(Logo, \"png\", 20, 20, 10, 10);\n  doc.text(\"MINEDUC\", 32, 28.5, undefined, \"left\");\n  //   doc.setTextColor(19, 90, 152);\n  doc.setFontSize(26);\n  doc.text(\n    reportSettings.title,\n    doc.internal.pageSize.getWidth() / 2,\n    42.7,\n    undefined,\n    \"center\"\n  );\n\n  doc.setFontSize(20);\n  doc.text(\n    reportSettings.institute,\n    doc.internal.pageSize.getWidth() / 2,\n    53.7,\n    undefined,\n    \"center\"\n  );\n\n  var lines;\n  lines = doc.splitTextToSize(\n    reportSettings.subject,\n    pdfInMM - lMargin - rMargin\n  );\n  // if (reportSettings.position) {\n  // } else if (reportSettings.subject) {\n  //   lines = doc.splitTextToSize(\n  //     reportSettings.subject,\n  //     pdfInMM - lMargin - rMargin\n  //   );\n  // }\n\n  //   doc.setTextColor(0, 123, 255);\n  doc.setFontSize(16);\n  //   doc.text(lines, doc.internal.pageSize.getWidth() / 2, 45, {\n  //     maxWidth: 85,\n  //     align: \"center\",\n  //   });\n\n  var y = 63,\n    width;\n  doc.setTextColor(95, 95, 95);\n  doc.text(`${reportSettings.subjectTitle}: `, lMargin, y);\n  width = doc.getTextWidth(`${reportSettings.subjectTitle}: `);\n  // if (reportSettings.position) {\n  // } else if (reportSettings.position) {\n  //   doc.text(`Subject: `, lMargin, y);\n  //   width = doc.getTextWidth(\"Subject: \");\n  // }\n  // doc.setFontType(\"bold\");\n  doc.setTextColor(38, 38, 38);\n  for (var i = 0; i < lines.length; i++) {\n    if (y > 280) {\n      y = 10;\n      doc.addPage();\n    }\n    // doc.text(15, y, lines[i]);\n    doc.text(lines[i], lMargin + width, y);\n    y = y + 7;\n  }\n  doc.setTextColor(95, 95, 95);\n  doc.text(\"Period: \", lMargin, y + 3);\n  width = doc.getTextWidth(\"Period: \");\n  doc.setTextColor(38, 38, 38);\n  doc.text(reportSettings.period, lMargin + width, y + 3);\n\n  doc.autoTable({\n    html: table,\n    startY: 85,\n    margin: { horizontal: 20 },\n    cellPadding: 3, // Horizontal cell padding\n    // fontSize: 12,\n    rowHeight: 20,\n    // styles: { overflow: \"linebreak\" },\n    bodyStyles: { valign: \"top\" },\n    columnStyles: { email: { cellWidth: \"wrap\" } },\n    theme: \"striped\",\n    tableWidth: true,\n  });\n\n  doc.setFontSize(12);\n  let finalY = doc.lastAutoTable.finalY; // The y position on the page\n  doc.text(`Reported by: ${reportSettings.doneBy}`, lMargin, finalY + 15);\n  doc.text(\n    \"Report downloaded on \" + DATE(new Date().toString()),\n    lMargin,\n    finalY + 23\n  );\n\n  addFooters(doc);\n  await doc\n    .save(\n      `${\n        reportSettings.title +\n        \": \" +\n        reportSettings.subject +\n        \": \" +\n        reportSettings.period\n      }.pdf`,\n      { returnPromise: true }\n    )\n    .then(callBack(false));\n};\n","import React, { useState } from \"react\";\nimport {\n  MdCheckCircle,\n  MdRadioButtonUnchecked,\n  MdSearch,\n} from \"react-icons/md\";\nimport Loading from \"../../components/Loading/Loading\";\nimport {\n  PlansInterface,\n  SessionPlanInterface,\n  SessionPlanTypeStatus,\n} from \"../../interfaces\";\nimport { DATE } from \"../../utils/functions\";\nimport searchData from \"../../utils/search\";\n\nexport const isPlansActive = (plans: PlansInterface[]): PlansInterface[] => {\n  let today = new Date();\n  let activePlans: PlansInterface[] = [];\n  for (let plan of plans) {\n    let startDate = new Date(plan.start_date);\n    let endDate = new Date(plan.end_date);\n    if (\n      startDate.getTime() <= today.getTime() &&\n      endDate.getTime() >= today.getTime() &&\n      plan.type_status === SessionPlanTypeStatus.OPEN\n    ) {\n      activePlans = [...activePlans, plan];\n    }\n  }\n  return activePlans;\n};\n\ninterface ChooseSessionProps {\n  allSession: SessionPlanInterface[] | null;\n  setSelectSession: (period: SessionPlanInterface | \"all\") => void;\n  currentSelected: SessionPlanInterface | \"all\";\n  chooseAll: boolean;\n}\n\nconst ChooseSession = (props: ChooseSessionProps) => {\n  const [selectedPlan, setSelectedPlan] = useState<SessionPlanInterface | null>(\n    null\n  );\n  const [search, setSearch] = useState<string>(\"\");\n  const getSearch = (\n    period: SessionPlanInterface[],\n    searched: string\n  ): SessionPlanInterface[] => {\n    return searchData(period, searched) as SessionPlanInterface[];\n  };\n\n  return (\n    <div className=\"\">\n      <div className=\"px-3\">\n        <input\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n            setSearch(e.target.value)\n          }\n          type=\"text\"\n          className=\"py-3 px-4 w-full rounded border border-gray-400 mb-3\"\n          placeholder=\"Search by year, name\"\n          disabled={props.allSession === null || props.allSession.length === 0}\n        />\n      </div>\n\n      <div className=\"bg-gray-100 px-3 pt-3 pb-2 rounded-b\">\n        {props.allSession === null ? (\n          <Loading />\n        ) : props.allSession.length === 0 ? (\n          <div className=\"flex flex-col text-gray-400 items-center justify-center mb-2 bg-white py-4\">\n            <MdSearch className=\"text-6xl\" />\n            <div className=\"flex flex-col items-center justify-center\">\n              <span>No session found!</span>\n            </div>\n          </div>\n        ) : (\n          <section>\n            {props.chooseAll && (\n              <div\n                className={`rounded border ${\n                  props.currentSelected === \"all\"\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2 flex flex-col md:flex-row items-start md:items-center md:justify-between`}\n              >\n                <div className=\"flex flex-row items-center gap-3\">\n                  {props.currentSelected === \"all\" ? (\n                    <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                  ) : (\n                    <MdRadioButtonUnchecked\n                      className={`text-gray-300 text-4xl`}\n                    />\n                  )}\n                  <div className=\"flex flex-col\">\n                    <div className={`text-gray-600 font-bold`}>All session</div>\n                  </div>\n                </div>\n                <div\n                  onClick={() => {\n                    props.setSelectSession(\"all\");\n                  }}\n                  className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                >\n                  Select\n                </div>\n              </div>\n            )}\n            {getSearch(props.allSession, search).map((item, i) => (\n              <div\n                key={i + 1}\n                className={`rounded border ${\n                  props.currentSelected !== \"all\" &&\n                  props.currentSelected._id === item._id\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2`}\n              >\n                <div className=\"flex flex-col md:flex-row items-start md:items-center md:justify-between \">\n                  <div className=\"flex flex-row items-center gap-3\">\n                    {props.currentSelected !== \"all\" &&\n                    props.currentSelected._id === item._id ? (\n                      <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                    ) : (\n                      <MdRadioButtonUnchecked\n                        className={`text-gray-300 text-4xl`}\n                      />\n                    )}\n                    <div className=\"flex flex-col\">\n                      <div\n                        className={`${\n                          props.currentSelected !== \"all\" &&\n                          props.currentSelected._id === item._id\n                            ? \"text-blue-600\"\n                            : \"text-gray-600\"\n                        } font-bold`}\n                      >\n                        {item.session_plan_name}\n                      </div>\n                      <div className=\"text-sm text-gray-500\">\n                        <span>Status: </span>\n                        <span\n                          className={`${\n                            item.is_active === true\n                              ? \"text-gray-900 font-bold underline\"\n                              : \"text-gray-500 italic\"\n                          }`}\n                        >\n                          {item.is_active === true ? \"Active\" : \"Expired\"}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"flex flex-row items-center gap-2\">\n                    {(selectedPlan === null ||\n                      selectedPlan._id !== item._id) && (\n                      <div\n                        onClick={() => setSelectedPlan(item)}\n                        className=\"bg-gray-50 group-hover:bg-blue-100 font-semibold text-gray-400 group-hover:text-blue-600 rounded px-3 py-2 cursor-pointer\"\n                      >\n                        Details\n                      </div>\n                    )}\n                    <div\n                      onClick={() => {\n                        props.setSelectSession(item);\n                      }}\n                      className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                    >\n                      Select\n                    </div>\n                    {selectedPlan !== null && selectedPlan._id === item._id && (\n                      <div\n                        onClick={() => setSelectedPlan(null)}\n                        className=\"bg-red-100 group-hover:bg-red-200 font-semibold text-red-600 group-hover:text-red-800 rounded px-3 py-2 cursor-pointer\"\n                      >\n                        Close\n                      </div>\n                    )}\n                  </div>\n                </div>\n                {/* {selectedPlan !== null && selectedPlan._id === item._id && (\n                  <div className=\"bg-white rounded border border-blue-50 mt-2 animate__animated animate__fadeIn\">\n                    <table className=\"w-full\">\n                      <thead className=\"bg-blue-50\">\n                        <tr className=\"text-left\">\n                          <th className=\"px-3 py-3\">#</th>\n                          <th>Plan</th>\n                          <th>Start date</th>\n                          <th>Ending date</th>\n                          <th>Status</th>\n                        </tr>\n                      </thead>\n                      <tbody className=\"text-sm\">\n                        {selectedPlan !== null &&\n                          selectedPlan._id === item._id &&\n                          selectedPlan.plans.length > 0 &&\n                          item.plans.map((plan, i) => (\n                            <tr\n                              key={i + 1}\n                              className={`${\n                                isPlansActive(item.plans).find(\n                                  (itm) => itm.type_key === plan.type_key\n                                ) !== undefined\n                                  ? \"bg-blue-100 text-blue-600 font-bold\"\n                                  : \"\"\n                              } text-left border-b border-blue-50`}\n                            >\n                              <td className=\"px-3 py-1\">{i + 1}</td>\n                              <td>{plan.type_title}</td>\n                              <td>{DATE(plan.start_date, \"DD/MM/YYYY\")}</td>\n                              <td>{DATE(plan.end_date, \"DD/MM/YYYY\")}</td>\n                              <td>{plan.type_status}</td>\n                            </tr>\n                          ))}\n                      </tbody>\n                    </table>\n                  </div>\n                )} */}\n              </div>\n            ))}\n          </section>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(ChooseSession);\n","import { ApexOptions } from \"apexcharts\";\nimport React, { useEffect, useState } from \"react\";\nimport Chart from \"react-apexcharts\";\n\ntype VBarCharPropstInterface = {\n  labels: string[];\n  categoriesLabel: any;\n  bar?: {\n    borderRadius: number;\n    horizontal: boolean;\n    columnWidth: string;\n    endingShape: string;\n  };\n  dataLabels: boolean;\n  yaxisText: string;\n  tooltipText: string;\n  series: {\n    name: string;\n    data: number[];\n  }[];\n  defaultBar?: {\n    borderRadius: number;\n    horizontal: boolean;\n    columnWidth: string;\n    endingShape: string;\n  };\n  colors?: any[];\n  title?: {\n    text: string;\n    align: string;\n    margin: number;\n    offestY: number;\n    style: {\n      fontSize: string;\n    };\n  };\n  stacked?: boolean;\n  FC_LoadSelected?: (labelIndex: number, seriesIndex: number) => void;\n  chartHeight?: number;\n};\n\nconst defaultBar = {\n  borderRadius: 4,\n  horizontal: false,\n  columnWidth: \"95%\",\n  endingShape: \"rounded\",\n};\n\nconst VBarChart: React.FC<VBarCharPropstInterface> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [options, setOptions] = useState<ApexOptions>({\n    chart: {\n      events: {\n        dataPointSelection: (event, chartContext, config) => {\n          console.log({\n            labelClicked: config.w.config.labels[config.dataPointIndex],\n            // seriesClicked: config.w.config.series[config.dataPointIndex],\n          });\n          if (props.FC_LoadSelected) {\n            props.FC_LoadSelected(config.dataPointIndex, config.seriesIndex);\n          }\n          // console.log(config.seriesIndex);\n          // console.log(config.dataPointIndex);\n        },\n      },\n      stacked: props.stacked ? props.stacked : false,\n    },\n    plotOptions: {\n      bar: props.defaultBar ? props.defaultBar : defaultBar,\n    },\n    labels: props.labels,\n    dataLabels: {\n      enabled: true,\n    },\n    xaxis: {\n      labels: {\n        rotate: -45,\n      },\n      categories: props.categoriesLabel,\n      tickPlacement: \"on\",\n    },\n    yaxis: {\n      title: {\n        text: props.yaxisText,\n      },\n    },\n    fill: {\n      opacity: 1,\n    },\n    tooltip: {\n      y: {\n        formatter: function (val: number) {\n          return val + \" \" + props.tooltipText;\n        },\n      },\n    },\n    grid: {\n      padding: {\n        left: 30, // or whatever value that works\n        right: 30, // or whatever value that works\n      },\n    },\n    noData: {\n      text: \"No data found\",\n      align: \"center\",\n      verticalAlign: \"middle\",\n    },\n  });\n\n  useEffect(() => {\n    if (props.colors && props.colors.length > 0 && loading) {\n      setOptions({\n        chart: {\n          stacked: props.stacked ? props.stacked : false,\n          events: {\n            dataPointSelection: (event, chartContext, config) => {\n              console.log({\n                chartClicked: config.w.config.labels[config.dataPointIndex],\n              });\n              if (props.FC_LoadSelected) {\n                props.FC_LoadSelected(\n                  config.dataPointIndex,\n                  config.seriesIndex\n                );\n              }\n            },\n          },\n          zoom: {\n            enabled: true,\n            autoScaleYaxis: true,\n          },\n        },\n        plotOptions: {\n          bar: props.defaultBar ? props.defaultBar : defaultBar,\n        },\n        labels: props.labels,\n        dataLabels: {\n          enabled: true,\n        },\n        xaxis: {\n          labels: {\n            rotate: -45,\n          },\n          categories: props.categoriesLabel,\n          tickPlacement: \"on\",\n        },\n        yaxis: {\n          title: {\n            text: props.yaxisText,\n          },\n        },\n        fill: {\n          opacity: 1,\n        },\n        tooltip: {\n          y: {\n            formatter: function (val: number) {\n              return val + \" \" + props.tooltipText;\n            },\n          },\n        },\n        grid: {\n          padding: {\n            left: 30, // or whatever value that works\n            right: 30, // or whatever value that works\n          },\n        },\n        noData: {\n          text: \"No data found\",\n          align: \"center\",\n          verticalAlign: \"middle\",\n        },\n        colors: props.colors,\n      });\n    } else if (loading) {\n      setOptions({\n        chart: {\n          stacked: props.stacked ? props.stacked : false,\n          events: {\n            dataPointSelection: (event, chartContext, config) => {\n              console.log({\n                labelClicked: config.w.config.labels[config.dataPointIndex],\n                // seriesClicked: config.w.config.series[config.dataPointIndex],\n              });\n              if (props.FC_LoadSelected) {\n                props.FC_LoadSelected(\n                  config.dataPointIndex,\n                  config.seriesIndex\n                );\n              }\n              // console.log(config.seriesIndex);\n              // console.log(config.dataPointIndex);\n            },\n          },\n          zoom: {\n            enabled: true,\n            autoScaleYaxis: true,\n          },\n        },\n        plotOptions: {\n          bar: props.defaultBar ? props.defaultBar : defaultBar,\n        },\n        labels: props.labels,\n        dataLabels: {\n          enabled: true,\n        },\n        xaxis: {\n          labels: {\n            rotate: -45,\n          },\n          categories: props.categoriesLabel,\n          tickPlacement: \"on\",\n        },\n        yaxis: {\n          title: {\n            text: props.yaxisText,\n          },\n        },\n        fill: {\n          opacity: 1,\n        },\n        tooltip: {\n          y: {\n            formatter: function (val: number) {\n              return val + \" \" + props.tooltipText;\n            },\n          },\n        },\n        grid: {\n          padding: {\n            left: 30, // or whatever value that works\n            right: 30, // or whatever value that works\n          },\n        },\n        noData: {\n          text: \"No data found\",\n          align: \"center\",\n          verticalAlign: \"middle\",\n        },\n      });\n    }\n    setLoading(false);\n  }, [loading, options, props]);\n\n  if (loading) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading Data...\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"w-full\">\n      <Chart\n        options={options}\n        series={props.series}\n        type=\"bar\"\n        width=\"100%\"\n        height={props.chartHeight ? props.chartHeight : undefined}\n      />\n    </div>\n  );\n};\n\nexport default React.memo(VBarChart);\n","import moment from \"moment\";\nimport { ApplicationSession } from \"../actions/auth\";\nimport { DocumentReducerInterface } from \"../reducers/document\";\nimport { isEmptyOrSpaces } from \"../shared/dataTest\";\nimport {\n  ApplicationExamsInterface,\n  CandidatesInterface,\n  CandidateDetailsInterface,\n  LocationRoomTableInterface,\n  UserDocumentsInterface,\n} from \"../shared/interfaces\";\nimport { SESSION_PLAN_KEYS, SESSION_PLAN_STATUS } from \"./application\";\n\nexport const GetDocTitle = (\n  documentCategories: DocumentReducerInterface,\n  doc: CandidateDetailsInterface | UserDocumentsInterface\n): { category: string; sub_category: string; field: string; main: string } => {\n  let DocCategory: string = \"\",\n    DocSubCategory: string = \"\",\n    DocField: string = \"\",\n    DocTitle: string = \"\";\n  if (\n    doc.sub_category_id &&\n    doc.sub_category_id.length > 0 &&\n    documentCategories.documentSubCategory\n  ) {\n    DocTitle = documentCategories.documentSubCategory.find(\n      (c) => c.user_detail_subcategory_id === doc.sub_category_id\n    )\n      ? documentCategories.documentSubCategory.find(\n          (c) => c.user_detail_subcategory_id === doc.sub_category_id\n        )!.title\n      : \"Unknown qualification\";\n    DocSubCategory = DocTitle;\n  } else if (\n    doc.category_id.length > 0 &&\n    documentCategories.documentCategory\n  ) {\n    DocTitle = documentCategories.documentCategory.find(\n      (c) => c.user_detail_category_id === doc.category_id\n    )\n      ? documentCategories.documentCategory.find(\n          (c) => c.user_detail_category_id === doc.category_id\n        )!.title\n      : \"Unknown category\";\n    DocCategory = DocTitle;\n  }\n  if (\n    doc.category_subcategory_data.length > 0 &&\n    documentCategories.documentFields\n  ) {\n    let thisDocField = documentCategories.documentFields.find(\n      (c) => c._id === doc.category_subcategory_data\n    );\n    DocField = thisDocField ? thisDocField.title : \"Unknown filed\";\n    DocTitle += \" in \" + DocField;\n  }\n\n  return {\n    category: DocCategory,\n    sub_category: DocSubCategory,\n    field: DocField,\n    main: DocTitle,\n  };\n};\nexport interface TableCandidatesInterface {\n  // DATA FROM MAIN PROPERTY\n  user_id: string;\n  n_id: string;\n  fname: string;\n  lname: string;\n  phone_number: string;\n  district: string;\n  email: string;\n\n  // NEW DATA GENERATED BAISED ON DETAILS PROPERTY\n  main_doc_title: string;\n  // DATA FROM DETAILS PROPERTY\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: string;\n  details_email: string;\n  names: string;\n  details_phone_number: string;\n  company: string;\n  year: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  } | null;\n  doc_history_status: string;\n  get_in_date: string;\n  approved?: string;\n  // DATA FROM EXAMS PROPERTY\n  exams: ApplicationExamsInterface[];\n}\n\n// Tobe replaced with Emmy's function\nexport const DocumentInArray = (\n  docCategories: DocumentReducerInterface,\n  DocumentsData: CandidatesInterface[],\n  dataType: \"all\" | \"default\" = \"default\"\n): TableCandidatesInterface[] | [] => {\n  let documentsTemp: TableCandidatesInterface[] = [];\n  for (let c in DocumentsData) {\n    let details = DocumentsData[c].details;\n    for (let d in details) {\n      let candidate_detail: CandidateDetailsInterface =\n        DocumentsData[c].details[d];\n      if (\n        candidate_detail.files !== null &&\n        candidate_detail.files.length > 0 &&\n        dataType === \"default\" &&\n        candidate_detail.validation_status === \"waiting\"\n      ) {\n        documentsTemp.push({\n          // DATA FROM MAIN PROPERTY\n          user_id: DocumentsData[c]._id,\n          n_id: DocumentsData[c].n_id,\n          fname: DocumentsData[c].user_info.fname,\n          lname: DocumentsData[c].user_info.lname,\n          phone_number: DocumentsData[c].phone_number,\n          district: DocumentsData[c].user_info.district,\n          email: DocumentsData[c].email,\n          // NEW DATA GENERATED BAISED ON DETAILS PROPERTY\n          // main_doc_title: GetDocTitle(\n          //   documentCategories,\n          //   candidate_detail\n          // ).main,\n          main_doc_title: GetDocTitle(docCategories, candidate_detail).main,\n          // DATA FROM DETAILS PROPERTY\n          category_id: candidate_detail.category_id,\n          sub_category_id: candidate_detail.sub_category_id,\n          category_subcategory_data: candidate_detail.category_subcategory_data,\n          title: candidate_detail.title,\n          description: candidate_detail.description,\n          files: candidate_detail.files,\n          start_year: candidate_detail.start_year,\n          end_year: candidate_detail.end_year,\n          school: candidate_detail.school,\n          details_email: candidate_detail.email,\n          names: candidate_detail.names,\n          details_phone_number: candidate_detail.phone_number,\n          company: candidate_detail.company,\n          year: candidate_detail.year,\n          doc_id: candidate_detail.doc_id,\n          validation_status: candidate_detail.validation_status,\n          validated_by: candidate_detail.validated_by,\n          doc_history_status: candidate_detail.doc_history_status,\n          get_in_date: candidate_detail.get_in_date,\n          approved: candidate_detail.approved,\n          // DATA FROM EXAMS PROPERTY\n          exams: DocumentsData[c].exams,\n        });\n      } else if (\n        candidate_detail.files !== null &&\n        candidate_detail.files.length > 0 &&\n        dataType === \"all\"\n      ) {\n        documentsTemp.push({\n          // DATA FROM MAIN PROPERTY\n          user_id: DocumentsData[c]._id,\n          names:\n            DocumentsData[c].user_info.fname +\n            \" \" +\n            DocumentsData[c].user_info.lname,\n          n_id: DocumentsData[c].n_id,\n          fname: DocumentsData[c].user_info.fname,\n          lname: DocumentsData[c].user_info.lname,\n          phone_number: DocumentsData[c].phone_number,\n          district: DocumentsData[c].user_info.district,\n          email: DocumentsData[c].email,\n          main_doc_title: GetDocTitle(docCategories, candidate_detail).main,\n          // DATA FROM DETAILS PROPERTY\n          category_id: candidate_detail.category_id,\n          sub_category_id: candidate_detail.sub_category_id,\n          category_subcategory_data: candidate_detail.category_subcategory_data,\n          title: candidate_detail.title,\n          description: candidate_detail.description,\n          files: candidate_detail.files,\n          start_year: candidate_detail.start_year,\n          end_year: candidate_detail.end_year,\n          school: candidate_detail.school,\n          details_email: candidate_detail.email,\n          // names: candidate_detail.names,\n          details_phone_number: candidate_detail.phone_number,\n          company: candidate_detail.company,\n          year: candidate_detail.year,\n          doc_id: candidate_detail.doc_id,\n          validation_status: candidate_detail.validation_status,\n          validated_by: candidate_detail.validated_by,\n          doc_history_status: candidate_detail.doc_history_status,\n          get_in_date: candidate_detail.get_in_date,\n          approved: candidate_detail.approved,\n          // DATA FROM EXAMS PROPERTY\n          exams: DocumentsData[c].exams,\n        });\n      }\n    }\n  }\n  return documentsTemp;\n};\n\nexport const isDocumentValidationOpen = (\n  data: ApplicationSession | null\n): boolean => {\n  if (data && data.plans) {\n    let checkSession = data.plans.find(\n      (item) => item.type_key === SESSION_PLAN_KEYS.DOCUMENT_VALIDATION\n    );\n    if (checkSession) {\n      let today = moment(),\n        startData = moment(checkSession.start_date),\n        endData = moment(checkSession.end_date);\n      if (\n        startData.diff(today, \"days\") <= 0 &&\n        endData.diff(today, \"days\") >= 0 &&\n        checkSession.type_status === SESSION_PLAN_STATUS.OPEN\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n};\n\nexport const FC_documentFilterByDistrict = (\n  candidatesInInstitute: CandidatesInterface[] | null,\n  roomTables: LocationRoomTableInterface[],\n  filterValue: string\n): CandidatesInterface[] => {\n  let centersIdInDistrict: string[] = [];\n  let districtData: LocationRoomTableInterface[] =\n      filterValue === \"all\"\n        ? roomTables\n        : roomTables.filter((d) => d.district_id === filterValue),\n    l: number = districtData.length,\n    i: number;\n\n  // GETTING ALL CENTERS IN SELECTED DISTRICT ================================\n  for (i = 0; i < l; i++) {\n    if (centersIdInDistrict.includes(districtData[i].center_id)) continue;\n    centersIdInDistrict.push(districtData[i].center_id);\n  }\n  // END GETTING CENTERS IN SELECTED DISTRICT ===================================\n\n  // GETTING LIST OF CANDIDATES IN DISTRICT =========================\n  let data: CandidatesInterface[] = [];\n\n  // GET ALL CANDIDATE(WITH DIPLICATION BCAUSE OF APPLICATIONS) WITH DETAILS PROPERTIES =====================================\n  let list_details: CandidatesInterface[] = candidatesInInstitute\n    ? candidatesInInstitute.filter((candidate) => candidate.details.length > 0)\n    : [];\n\n  // GET ALL CANDIDATE(WITH DIPLICATION BCAUSE OF APPLICATIONS) WITH FILES IN DETAILS PROPERTIES =====================================\n  let list_files: CandidatesInterface[] = list_details.filter((candidate) =>\n    candidate.details.filter((item) => item.files !== \"\")\n  );\n\n  // GET ALL CANDIDATE(REMOVE DIPLICATION CAUSED BY APPLICATIONS) WITH DETAILS PROPERTIES =====================================\n  let mailList: string[] = [];\n  let list_distinct: CandidatesInterface[] = [];\n  for (let i = 0; i < list_files.length; i++) {\n    if (mailList.includes(list_files[i].email)) continue;\n    mailList.push(list_files[i].email);\n    list_distinct.push(list_files[i]);\n  }\n\n  let result = data; // restaring list\n  for (let i = 0; i < list_distinct.length; i++) {\n    for (let j = 0; j < list_distinct[i].exams.length; j++) {\n      if (centersIdInDistrict.includes(list_distinct[i].exams[j].center_id)) {\n        data.push(list_distinct[i]);\n        // action = false;\n      }\n      // ======================================\n      let dataMailList: string[] = [];\n      let _data: CandidatesInterface[] = [];\n      for (let i = 0; i < data.length; i++) {\n        if (dataMailList.includes(data[i].email)) continue;\n        dataMailList.push(data[i].email);\n        _data.push(data[i]);\n      }\n      result = _data;\n      // ======================================\n    }\n  }\n  return result;\n};\n\nexport const FC_documentFilterByCenter = (\n  generalResult: CandidatesInterface[],\n  filterValue: string\n): CandidatesInterface[] => {\n  if (filterValue === \"all\") return generalResult;\n  // GETTING LIST OF CANDIDATES IN DISTRICT =========================\n  let data: CandidatesInterface[] = [];\n\n  let result = generalResult; // restaring list\n  for (let i = 0; i < result.length; i++) {\n    for (let j = 0; j < result[i].exams.length; j++) {\n      if (result[i].exams[j].center_id === filterValue) {\n        data.push(result[i]);\n        // action = false;\n\n        // ======================================\n        let mailList: string[] = [];\n        let _data: CandidatesInterface[] = [];\n        for (let i = 0; i < data.length; i++) {\n          if (mailList.includes(data[i].email)) continue;\n          mailList.push(data[i].email);\n          _data.push(data[i]);\n        }\n        data = _data;\n        // ======================================\n      }\n    }\n  }\n\n  return (result = data);\n};\n\nexport const FC_documentFilterByRoom = (\n  generalResult: CandidatesInterface[],\n  filterValue: string\n): CandidatesInterface[] => {\n  if (filterValue === \"all\") return generalResult;\n  // GETTING LIST OF CANDIDATES IN DISTRICT =========================\n  let data: CandidatesInterface[] = [];\n  console.log({ generalResult });\n\n  let result = generalResult; // restaring list\n  for (let i = 0; i < result.length; i++) {\n    for (let j = 0; j < result[i].exams.length; j++) {\n      if (result[i].exams[j].room_id === filterValue) {\n        data.push(result[i]);\n        // action = false;\n\n        // ======================================\n        let mailList: string[] = [];\n        let _data: CandidatesInterface[] = [];\n        for (let i = 0; i < data.length; i++) {\n          if (mailList.includes(data[i].email)) continue;\n          mailList.push(data[i].email);\n          _data.push(data[i]);\n        }\n        data = _data;\n        // ======================================\n      }\n    }\n  }\n\n  return (result = data);\n};\n\nexport const getDocByDocId = (\n  userList: CandidatesInterface[],\n  user_id: string,\n  doc_id: string\n): {\n  user: CandidatesInterface | undefined;\n  doc: CandidateDetailsInterface | undefined;\n} => {\n  let user: CandidatesInterface | undefined = userList.find(\n    (user) => user._id === user_id\n  );\n  let doc: CandidateDetailsInterface | undefined;\n  if (user) {\n    doc = user.details.find((doc) => doc.doc_id === doc_id);\n  }\n\n  return { user, doc };\n};\n\nexport const countDocumentByStatus = (\n  userDocs: CandidateDetailsInterface[],\n  docStatus: \"waiting\" | \"approved\" | \"rejected\"\n): number => {\n  let result: CandidateDetailsInterface[] = userDocs;\n  result = userDocs.filter(\n    (details) => details.validation_status === docStatus && details.files\n  );\n  return result.length;\n};\n\nexport const getDocumentFileByIndex = (\n  documentList: TableCandidatesInterface[],\n  thisIndex: number,\n  setViewDoc: (state: boolean) => void,\n  setDocumentId: (state: string) => void,\n  setCandidateId: (state: string) => void,\n  setDocument_index: (state: number | null) => void,\n  setLoadingImage: (state: boolean) => void\n) => {\n  let n: number = 0,\n    found: boolean;\n  if (documentList.length <= 0) {\n    setViewDoc(false);\n    setDocumentId(\"\");\n    setCandidateId(\"\");\n    setDocument_index(null);\n    setLoadingImage(false);\n    return false;\n  } else if (documentList.length - 1 < thisIndex) {\n    n = 0;\n    found = false;\n    while (!found && documentList.length - 1 >= n) {\n      if (\n        documentList[n] !== undefined &&\n        !isEmptyOrSpaces(documentList[n].files) &&\n        !found\n      ) {\n        setViewDoc(true);\n        setDocumentId(documentList[n].doc_id);\n        setCandidateId(documentList[n].user_id);\n        setDocument_index(n);\n        setLoadingImage(true);\n        found = true;\n      }\n      n++;\n    }\n    if (found) {\n      return true;\n    } else {\n      setViewDoc(false);\n      setDocumentId(\"\");\n      setCandidateId(\"\");\n      setDocument_index(null);\n      setLoadingImage(false);\n      return true;\n    }\n  } else {\n    // result = documentList[thisIndex];\n    if (\n      documentList[thisIndex] !== undefined &&\n      !isEmptyOrSpaces(documentList[thisIndex].files)\n    ) {\n      setViewDoc(true);\n      setDocumentId(documentList[thisIndex].doc_id);\n      setCandidateId(documentList[thisIndex].user_id);\n      setDocument_index(thisIndex);\n      setLoadingImage(true);\n      return true;\n    } else {\n      n = 0;\n      found = false;\n      while (!found && documentList.length - 1 >= n) {\n        if (\n          documentList[n] !== undefined &&\n          !isEmptyOrSpaces(documentList[n].files) &&\n          !found\n        ) {\n          setViewDoc(true);\n          setDocumentId(documentList[n].doc_id);\n          setCandidateId(documentList[n].user_id);\n          setDocument_index(n);\n          setLoadingImage(true);\n          found = true;\n        }\n        n++;\n      }\n      if (found) {\n        return true;\n      } else {\n        setViewDoc(false);\n        setDocumentId(\"\");\n        setCandidateId(\"\");\n        setDocument_index(null);\n        setLoadingImage(false);\n        return true;\n      }\n    }\n  }\n};\n\nexport const getCandidateFileByIndex = (\n  thisCandidate: CandidatesInterface,\n  thisIndex: number,\n  setViewDoc: (state: boolean) => void,\n  setDocumentId: (state: string) => void,\n  setCandidateId: (state: string) => void,\n  setDocument_index: (state: number | null) => void,\n  setLoadingImage: (state: boolean) => void\n) => {\n  if (thisCandidate.details.length <= 0) {\n    setViewDoc(false);\n    setDocumentId(\"\");\n    setCandidateId(\"\");\n    setDocument_index(null);\n    setLoadingImage(false);\n    return false;\n  } else {\n    let filesList = thisCandidate.details.filter(\n      (details) => details.validation_status === \"waiting\" && details.files\n    );\n    if (filesList.length <= 0) {\n      setViewDoc(false);\n      setDocumentId(\"\");\n      setCandidateId(\"\");\n      setDocument_index(null);\n      setLoadingImage(false);\n      return false;\n    } else if (filesList.length - 1 < thisIndex) {\n      setViewDoc(true);\n      setDocumentId(filesList[0].doc_id);\n      setCandidateId(thisCandidate._id);\n      setDocument_index(0);\n      setLoadingImage(true);\n      return true;\n    } else {\n      setViewDoc(true);\n      setDocumentId(filesList[thisIndex].doc_id);\n      setCandidateId(thisCandidate._id);\n      setDocument_index(thisIndex);\n      setLoadingImage(true);\n      return true;\n    }\n  }\n};\n\nexport const countFileByCandidateId = (\n  userDocs: CandidateDetailsInterface[],\n  filterType: \"docCategory\" | \"docSubCategory\" | \"docStatus\",\n  filterValue: string,\n  filterStatus: \"waiting\" | \"approved\" | \"rejected\" = \"waiting\"\n): number => {\n  let result: CandidateDetailsInterface[] = userDocs;\n  if (filterType === \"docCategory\") {\n    result = userDocs.filter(\n      (details) =>\n        details.category_id === filterValue &&\n        details.files &&\n        details.files.length > 0 &&\n        details.validation_status === filterStatus\n    );\n  } else if (filterType === \"docSubCategory\") {\n    result = userDocs.filter(\n      (details) =>\n        details.sub_category_id === filterValue &&\n        details.files &&\n        details.files.length > 0 &&\n        details.validation_status === filterStatus\n    );\n  }\n  return result.length;\n};\n","import axios from \"axios\";\nimport React from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdInfoOutline } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { TiWarning } from \"react-icons/ti\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport {\n  createReClaim,\n  DocumentClaimUser,\n  FC_CompleteClaim,\n} from \"../../actions/claiming\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  claimReasonInterface,\n  ClaimStatus,\n} from \"../../interfaces\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { DocumentReducerInterface } from \"../../reducers/document\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { errorToText, showDate } from \"../../utils/functions\";\nimport { ClaimGetDocTitle } from \"./Candidate/ClaimForm\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nexport const isClaimEvaluated = (\n  thisClaim: CandidateClaimInterface,\n  level: number\n): boolean => {\n  const _thisClaim = thisClaim.claims.find(\n    (item) =>\n      item.level === level && item.claim_status === ClaimStatus.EVALUATED\n  );\n  if (_thisClaim) {\n    return true;\n  }\n  return false;\n};\n\ntype ClaimDocViewProps = {\n  thisDoc: DocumentClaimUser;\n  // setViewThisFile: (value: string) => void;\n  documentCategories: DocumentReducerInterface;\n  claimReasons: claimReasonInterface[] | null;\n  thisClaim: CandidateClaimInterface;\n  viewImage: boolean;\n  setViewImage: (value: boolean) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  reClaiming: boolean;\n  setReClaiming: (value: boolean) => void;\n  reClaimingMsg: string;\n  setReClaimingMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX DATA =====================\n  createReClaim: Function;\n  PushPopupAlert: Function;\n  FC_CompleteClaim: Function;\n};\n\nconst ClaimDocView: React.FC<ClaimDocViewProps> = (props) => {\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim sent successful\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim._id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  const FC_CompleteClaim = (this_claim: CandidateClaimInterface) => {\n    if (window.confirm(\"Are you satisfied with the decision?\") === true) {\n      props.FC_CompleteClaim((status: boolean, msg: string) => {\n        props.setLoadingRequest(true);\n        if (!isEmptyOrSpaces(msg)) {\n          props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    }\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Title:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {ClaimGetDocTitle(props.documentCategories, props.thisDoc).main}\n              </span>\n            </div>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewImage(!props.viewImage)}\n            >\n              {props.viewImage ? \"Hide\" : \"View\"}\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisDoc.validation_status === \"rejected\"\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } rounded px-3 py-1`}\n            >\n              {capitalizeFirstLetter(props.thisDoc.validation_status)}\n            </span>\n          </div>\n          {/* <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {props.thisClaim.previous.evaluater.name}\n            </span>\n          </div> */}\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisDoc.validated_by.comment}\n            </span>\n          </div>\n\n          {/* DISPLAY IMAGE ==================================================== */}\n          {props.viewImage && (\n            <div className=\"w-full my-1 animate__animated animate__fadeIn\">\n              <img\n                src={`${API.AUTH_FILES}/${props.thisDoc.files}`}\n                alt=\"doc file\"\n                className={`w-full animate__animated animate__fadeIn`}\n              />\n            </div>\n          )}\n          {/* END DISPLAY IMAGE ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section\n              className=\"flex flex-col px-2 pt-3\"\n              key={index + claim._id}\n            >\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\" + props.thisClaim.default_claim_resaons}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt)}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    {/* <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div> */}\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-end justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <div className=\"bg-gray-100 rounded-lg p-4 text-base text-gray-700\">\n                <div className=\"flex\">\n                  <TiWarning className=\"w-5 h-5 inline mr-3\" />\n                  <div>\n                    <span className=\"font-medium\">Important!</span> Are you\n                    satisfied with the response?\n                  </div>\n                </div>\n                <div className=\"flex items-center gap-2 w-max mt-2 ml-8\">\n                  {/* <button\n                    className=\"btn hover:bg-yellow-900 bg-yellow-700 text-white focus:outline-none\"\n                    onClick={() => props.setReClaiming(true)}\n                    disabled={props.loadingRequest}\n                  >\n                    No, I'm not\n                  </button> */}\n                  <button\n                    className=\"btn hover:bg-green-800 bg-green-600 text-white focus:outline-none\"\n                    onClick={() => FC_CompleteClaim(props.thisClaim)}\n                    disabled={props.loadingRequest}\n                  >\n                    Yes, I am\n                  </button>\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Why are you not satisfied?`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nexport default React.memo(\n  connect(null, {\n    createReClaim,\n    PushPopupAlert,\n    FC_CompleteClaim,\n  })(ClaimDocView)\n);\n","import React, { FC } from \"react\";\nimport { IconType } from \"react-icons\";\nimport { FaUsers } from \"react-icons/fa\";\nimport { toAnyDigit } from \"../../shared/dataTest\";\nimport { displayNumbers } from \"../../utils/functions\";\n\nexport type DashboardLabelItemInterface = {\n  // TITLE: Application or Exam or Shortlisted ....\n  title: string;\n  // ICON: FaExpand ....\n  icon: IconType;\n  // ICON COLOR: blue, indigo, gray ....\n  iconColor: string;\n  // COUNT: 0,1,2,3,5,23,563 ....\n  count: number;\n  // COUNT: 0,1,2,3,5,23,563 ....\n  countOver?: number;\n};\n\nconst DashboardLabelItem: FC<DashboardLabelItemInterface> = (\n  props = {\n    title: \"\",\n    icon: FaUsers,\n    iconColor: \"indigo\",\n    count: 0,\n    countOver: undefined,\n  }\n) => {\n  const IconDefined = props.icon;\n  return (\n    <div className=\"flex items-center px-6 py-4 bg-white w-full rounded-md space-x-2 mb-2 lg:mb-0 shadow-md\">\n      <div\n        className={`p-3 rounded-full bg-${props.iconColor}-200 bg-opacity-75`}\n      >\n        <IconDefined className={`h-8 w-8 text-${props.iconColor}-600`} />\n      </div>\n      <div>\n        <h1 className=\"text-3xl font-semibold text-gray-700\">\n          {props.count < 1000\n            ? toAnyDigit(props.count)\n            : displayNumbers(props.count)}{\" \"}\n          {props.countOver && \"/ \" + toAnyDigit(props.countOver)}\n        </h1>\n        <span className=\"text-gray-500 text-lg\">{props.title}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(DashboardLabelItem);\n","import React from \"react\";\nimport DashboardLabelItem, {\n  DashboardLabelItemInterface,\n} from \"../DashboardLabelItem\";\n\ntype DashboardLabelProps = {\n  dataLabels: DashboardLabelItemInterface[];\n  labelsOnRow?: number;\n  childrenPosition?: \"START\" | \"END\";\n  children?: JSX.Element;\n};\n\nconst ExamDashboardLabels: React.FC<DashboardLabelProps> = (props) => {\n  const numCols: number = props.labelsOnRow\n    ? props.labelsOnRow > 4\n      ? props.labelsOnRow\n      : 4\n    : 4;\n  return (\n    <div\n      className={`grid 2xl:grid-cols-${numCols} xl:grid-cols-${\n        numCols - 1\n      } lg:grid-cols-${numCols - 2} md:grid-cols-${\n        numCols - 3\n      } sm:grid-cols-2 grid-cols-1 gap-4 items-center mx-auto`}\n    >\n      {props.children &&\n        ((props.childrenPosition && props.childrenPosition === \"START\") ||\n          !props.childrenPosition) &&\n        props.children}\n      {props.dataLabels.map((item, index) => (\n        <section key={index + item.title}>\n          <DashboardLabelItem\n            title={item.title}\n            icon={item.icon}\n            iconColor={item.iconColor}\n            count={item.count}\n          />\n        </section>\n      ))}\n      {props.children &&\n        props.childrenPosition &&\n        props.childrenPosition === \"END\" &&\n        props.children}\n    </div>\n  );\n};\n\nexport default React.memo(ExamDashboardLabels);\n","import React from \"react\";\nimport Chart from \"react-apexcharts\";\n\ntype chartType = {\n  options: {\n    labels: string[];\n    legend?: ApexLegend;\n    plotOptions?: ApexPlotOptions;\n    colors?: any[];\n  };\n  series: number[];\n  width?: number;\n};\n\nconst PieChart: React.FC<chartType> = (props) => {\n  return (\n    <div className=\"donut\">\n      <Chart\n        options={props.options}\n        series={props.series}\n        type=\"donut\"\n        width={`${props.width ? props.width : \"380\"}`}\n      />\n    </div>\n  );\n};\n\nexport default React.memo(PieChart);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport {\n  getAllClaims,\n  GetClaimingTypes,\n  setSelectedClaimType,\n} from \"../../../actions/claiming\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport { MainItem } from \"../../../components/Navigation/SideNavigation\";\nimport {\n  CandidateClaimInterface,\n  ClaimStatus,\n  PlansTypeKeys,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\n\nexport const filterClaimsByClaimType = (\n  claimList: CandidateClaimInterface[],\n  claimType: PlansTypeKeys | \"all\"\n): CandidateClaimInterface[] => {\n  if (claimType === \"all\") {\n    return claimList;\n  }\n\n  return claimList.filter((item) => item.type_key === claimType);\n};\n\ntype AdminFilterByTypeProps = {\n  loadingClaims: boolean;\n  FC_CountByType?: Function;\n  selected_claim_type?: PlansTypeKeys | null;\n\n  // REDUX PROPS =======================================\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  GetClaimingTypes: Function;\n  setSelectedClaimType: Function;\n  getAllClaims: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\nconst AdminFilterByType: React.FC<AdminFilterByTypeProps> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingClaimTypes, setLoadingClaimTypes] = useState<boolean>(true);\n\n  useEffect(() => {\n    if (props.claiming.claimTypes === null) {\n      props.GetClaimingTypes((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          setLoadingClaimTypes(false);\n          setLoading(false);\n        }\n      });\n    } else if (loadingClaimTypes) {\n      setLoadingClaimTypes(false);\n      setLoading(false);\n    }\n  }, [loadingClaimTypes, props]);\n\n  const countClaims = (\n    claiming: ClaimingReducerType,\n    thisType: PlansTypeKeys | \"all\"\n  ): number => {\n    let result: number = 0;\n\n    if (claiming.allClaims && thisType === \"all\") {\n      result = claiming.allClaims.filter(\n        (item) => item.last_claim_status === ClaimStatus.PENDING\n      ).length;\n    }\n    if (claiming.allClaims && thisType !== \"all\") {\n      result = claiming.allClaims.filter(\n        (item) =>\n          item.type_key === thisType &&\n          item.last_claim_status === ClaimStatus.PENDING\n      ).length;\n    }\n\n    return result;\n  };\n\n  return (\n    <React.Fragment>\n      <span className=\"mt-2 text-sm\">Filter by claim type</span>\n      {/* WHILE LOADING DATA ================================== */}\n      {(loading || props.loadingClaims) && (\n        <section className=\"space-y-2\">\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </section>\n      )}\n      {/* END WHILE LOADING DATA ================================== */}\n\n      {/* AFTER LOADING DATA ================================== */}\n      {!loading && !props.loadingClaims && props.claiming.claimTypes && (\n        <section>\n          {/* ALL ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(\"ALL\");\n              props.setSelectedClaimType(\"all\");\n            }}\n          >\n            <MainItem\n              title=\"All\"\n              active={props.claiming.selectedClaimType === \"all\"}\n              count={countClaims(props.claiming, \"all\")}\n            />\n          </div>\n          {/* APPLICATION ================================= */}\n          {!props.selected_claim_type && (\n            <div\n              className=\"mt-2\"\n              onClick={() => {\n                // props.setThisClaimType(ClaimTypesInterface.DOCUMENT);\n                props.setSelectedClaimType(PlansTypeKeys.APPLICATION);\n              }}\n            >\n              <MainItem\n                title={\"Application\"}\n                active={\n                  props.claiming.selectedClaimType !== \"all\" &&\n                  props.claiming.selectedClaimType === PlansTypeKeys.APPLICATION\n                }\n                count={countClaims(props.claiming, PlansTypeKeys.APPLICATION)}\n              />\n            </div>\n          )}\n          {/* DOCUMENT ================================= */}\n          {!props.selected_claim_type && (\n            <div\n              className=\"mt-2\"\n              onClick={() => {\n                props.setSelectedClaimType(PlansTypeKeys.DOCUMENT_VALIDATION);\n              }}\n            >\n              <MainItem\n                title={\"Document\"}\n                active={\n                  props.claiming.selectedClaimType !== \"all\" &&\n                  props.claiming.selectedClaimType ===\n                    PlansTypeKeys.DOCUMENT_VALIDATION\n                }\n                count={countClaims(\n                  props.claiming,\n                  PlansTypeKeys.DOCUMENT_VALIDATION\n                )}\n              />\n            </div>\n          )}\n          {/* EXAMINATION ================================= */}\n          {!props.selected_claim_type && (\n            <div\n              className=\"mt-2\"\n              onClick={() => {\n                props.setSelectedClaimType(PlansTypeKeys.EXAMINATION);\n              }}\n            >\n              <MainItem\n                title={\"Exam\"}\n                active={\n                  props.claiming.selectedClaimType !== \"all\" &&\n                  props.claiming.selectedClaimType === PlansTypeKeys.EXAMINATION\n                }\n                count={countClaims(props.claiming, PlansTypeKeys.EXAMINATION)}\n              />\n            </div>\n          )}\n          {false && (\n            <div\n              className=\"mt-2\"\n              onClick={() => {\n                props.setSelectedClaimType(PlansTypeKeys.PLACEMENT_TRANSFER);\n              }}\n            >\n              <MainItem\n                title={\"Placement\"}\n                active={\n                  props.claiming.selectedClaimType !== \"all\" &&\n                  props.claiming.selectedClaimType ===\n                    PlansTypeKeys.PLACEMENT_TRANSFER\n                }\n                count={countClaims(\n                  props.claiming,\n                  PlansTypeKeys.PLACEMENT_TRANSFER\n                )}\n              />\n            </div>\n          )}\n        </section>\n      )}\n      {/* END AFTER LOADING DATA ================================== */}\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  claiming,\n}: StoreState): { auth: Auth; claiming: ClaimingReducerType } => {\n  return { auth, claiming };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    GetClaimingTypes,\n    setSelectedClaimType,\n    getAllClaims,\n    PushPopupAlert,\n  })(AdminFilterByType)\n);\n","import React from \"react\";\nimport { AiFillDashboard } from \"react-icons/ai\";\nimport { SessionPlanInterface } from \"../../interfaces\";\n\ntype ClaimHeaderTitleProps = {\n  headerTitle: string;\n  loading: boolean;\n  loadingSession: boolean;\n  periodChanged: boolean;\n  thisPeriod: SessionPlanInterface | null;\n  setThisPeriod: (state: SessionPlanInterface | null) => void;\n  setLoadingSession: (state: boolean) => void;\n  application_sessions: SessionPlanInterface[];\n  onPeriodChange: (period_id: string) => void;\n};\n\nconst selectPeriod = (\n  sessions: SessionPlanInterface[],\n  period_id: string,\n  setThisPeriod: (state: SessionPlanInterface | null) => void\n) => {\n  setThisPeriod(sessions.filter((item) => item._id === period_id)[0]);\n};\n\nconst ClaimHeaderTitle: React.FC<ClaimHeaderTitleProps> = (props) => {\n  const isLoading = (): boolean => {\n    if (props.loading || props.loadingSession || props.periodChanged) {\n      return true;\n    }\n    return false;\n  };\n\n  return (\n    <div className=\"mt-3 rounded flex flex-col md:flex-row md:justify-between items-start\">\n      <div className=\"flex flex-row items-center gap-3 mb-2\">\n        <AiFillDashboard className=\"text-6xl text-blue-600 hidden md:block\" />\n        <div className=\"flex flex-col\">\n          <span className=\"text-blue-600 text-3xl font-bold\">\n            {props.headerTitle}\n          </span>\n        </div>\n      </div>\n\n      {/* FILTER SECTION PERIOD && EDUCATION */}\n      <section className=\"w-full md:w-auto my-2 md:my-0\">\n        <div>\n          <select\n            className={`bg-white text-gray-600 border border-gray-400 rounded p-2 focus:outline-none ${\n              isLoading() ? \"cursor-wait\" : \"cursor-default\"\n            }`}\n            value={props.thisPeriod ? props.thisPeriod._id : \"\"}\n            disabled={isLoading()}\n            onChange={(e) => {\n              selectPeriod(\n                props.application_sessions,\n                e.target.value,\n                props.setThisPeriod\n              );\n              props.setLoadingSession(true);\n              props.onPeriodChange(e.target.value);\n            }}\n          >\n            {props.application_sessions.map((session, item) => (\n              <option key={session._id + item} value={session._id}>\n                {session.session_plan_name}\n              </option>\n            ))}\n          </select>\n        </div>\n      </section>\n      {/* END FILTER SECTION PERIOD && EDUCATION */}\n    </div>\n  );\n};\n\nexport default React.memo(ClaimHeaderTitle);\n","import React, { Component } from \"react\";\nimport { MdArrowBack, MdDelete, MdInfoOutline } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Auth, loadCourses, PushPopupAlert } from \"../../../actions\";\nimport {\n  DocumentClaimUser,\n  getClaimReasons,\n  getMyAnswers,\n  getMyClaims,\n  getMyPlacement,\n} from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport { SideNavigation } from \"../../../components/Navigation/SideNavigation\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimStatus,\n  PlansTypeKeys,\n  SessionPlanInterface,\n  course,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport search from \"../../../utils/search\";\nimport { filterClaimsByClaimType } from \"../Admin/AdminFilterByType\";\nimport ClaimApplView from \"../ClaimApplView\";\nimport ClaimDocView, { isClaimEvaluated } from \"../ClaimDocView\";\nimport ClaimExamView from \"../ClaimExamView\";\nimport ClaimHeaderTitle from \"../ClaimHeaderTitle\";\nimport ClaimPlacementView from \"../ClaimPlacementView\";\nimport ClaimForm, { ClaimGetDocTitle } from \"./ClaimForm\";\nimport FilterByType from \"./FilterByType\";\nimport { getCourseById, getCourseIdBySheetId } from \"./FormExamList\";\n\nexport enum ClaimTypesEnum {\n  application = \"application\",\n  document = \"document\",\n  exam = \"exam\",\n  marks_publication = \"marks publication\",\n  placement = \"placement\",\n}\n\nexport const getDocumentById = (\n  candidateDocuments: DocumentClaimUser[],\n  document_id: string\n): DocumentClaimUser | null => {\n  let result: DocumentClaimUser | undefined = candidateDocuments.find(\n    (item) => item.doc_id === document_id\n  );\n  return result ? result : null;\n};\n\nexport const whichClaimType = (\n  thisClaim: CandidateClaimInterface\n): ClaimTypesEnum | undefined => {\n  if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n    return ClaimTypesEnum.application;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n    return ClaimTypesEnum.document;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.EXAMINATION) {\n    return ClaimTypesEnum.exam;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.MARKS_PUBLICATION) {\n    return ClaimTypesEnum.marks_publication;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.PLACEMENT_TRANSFER) {\n    return ClaimTypesEnum.placement;\n  }\n};\n\nexport const whichClaimStatus = (\n  thisClaim: CandidateClaimInterface\n): {\n  classes: string;\n  status: string;\n} => {\n  let classes: string, status: string;\n  switch (thisClaim.last_claim_status) {\n    case ClaimStatus.COMPLETED:\n      classes = \"text-blue-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.COMPLETED.toLocaleLowerCase());\n      break;\n    case ClaimStatus.EVALUATED:\n      classes = \"text-green-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.EVALUATED.toLocaleLowerCase());\n      break;\n\n    case ClaimStatus.DELETED:\n      classes = \"text-red-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.DELETED.toLocaleLowerCase());\n      break;\n\n    default:\n      classes = \"text-yellow-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.PENDING.toLocaleLowerCase());\n      break;\n  }\n\n  return { classes, status };\n};\n\nexport const getClaimById = (\n  claimList: CandidateClaimInterface[],\n  claim_id: string\n): CandidateClaimInterface | null => {\n  // console.log(\"====================================\");\n  // console.log({ claimList, claim_id });\n  // console.log(\"====================================\");\n  let result: CandidateClaimInterface | undefined = claimList.find(\n    (item) => item._id === claim_id\n  );\n  return result ? result : null;\n};\n\nexport const getApplicationById = (\n  candidateApplications: claimApplicationsInterface[],\n  application_id: string\n): claimApplicationsInterface | null => {\n  let result: claimApplicationsInterface | undefined =\n    candidateApplications.find(\n      (item) => item.application_id === application_id\n    );\n  return result ? result : null;\n};\n\nexport const displayDocClaimTitle = (\n  documentCategories: DocumentReducerInterface,\n  candidateDocuments: DocumentClaimUser[],\n  thisClaim: CandidateClaimInterface\n): string => {\n  let result: string = \"\";\n\n  // CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n  if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n    let thisDoc = getDocumentById(candidateDocuments, thisClaim.claiming_on_id);\n    result = thisDoc\n      ? ClaimGetDocTitle(documentCategories, thisDoc).main\n      : \"Document not found\";\n  }\n  // END CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n  return result;\n};\n\nexport const displayClaimTitle = (\n  claiming: ClaimingReducerType,\n  documentReducer: DocumentReducerInterface,\n  allCourse: course[] | null,\n  thisClaim: CandidateClaimInterface\n): string => {\n  let result: string = thisClaim.claiming_on_id;\n\n  if (\n    thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION &&\n    claiming.candidateDocuments\n  ) {\n    result = displayDocClaimTitle(\n      documentReducer,\n      claiming.candidateDocuments,\n      thisClaim\n    );\n  }\n  if (\n    thisClaim.type_key === PlansTypeKeys.APPLICATION &&\n    claiming.candidateApplications\n  ) {\n    let thisApplication = getApplicationById(\n      claiming.candidateApplications,\n      thisClaim.claiming_on_id\n    );\n    if (thisApplication) {\n      result = thisApplication.position.position_title;\n    } else {\n      result = \"Application not found\";\n    }\n  }\n\n  if (\n    thisClaim.type_key === PlansTypeKeys.EXAMINATION &&\n    allCourse &&\n    claiming.myAnswer\n  ) {\n    let thisAnswer = getCourseIdBySheetId(\n      claiming.myAnswer,\n      thisClaim.claiming_on_id\n    );\n    if (thisAnswer && getCourseById(allCourse, thisAnswer.course)) {\n      result = getCourseById(allCourse, thisAnswer.course)!.course_name;\n    } else {\n      result = \"Exam not found\";\n    }\n  }\n\n  if (thisClaim.type_key === PlansTypeKeys.PLACEMENT_TRANSFER) {\n    result = claiming.myPlacement\n      ? \"Placed on \" + claiming.myPlacement.placed.school.school_name\n      : \"Placement not found\";\n  }\n\n  return result;\n};\n\n// -------------------------------------------------------------------------\n\ntype AppProps = {\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  application_sessions: SessionPlanInterface[] | null;\n  courses: course[] | null;\n  documentReducer: DocumentReducerInterface;\n  getMyPlacement: Function;\n  getMyClaims: Function;\n  loadCourses: Function;\n  getMyAnswers: Function;\n  getClaimReasons: Function;\n  GetAllSessionPlans: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype AppState = {\n  loading: boolean;\n  loadingSession: boolean;\n  thisPeriod: SessionPlanInterface | null;\n  periodChanged: boolean;\n  viewClaim: boolean;\n  claimId: string | null;\n  claimForm: boolean;\n\n  // FOR FORM ================\n  viewImage: boolean;\n  loadingRequest: boolean;\n  reClaiming: boolean;\n  reClaimingMsg: string;\n  searchClaim: string;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n};\n\nclass Index extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingSession: true,\n      thisPeriod: null,\n      periodChanged: false,\n      viewClaim: false,\n      claimId: null,\n      claimForm: false,\n      searchClaim: \"\",\n\n      // FOR FORM ================\n      viewImage: false,\n      loadingRequest: false,\n      reClaiming: false,\n      reClaimingMsg: \"\",\n      formError: null,\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingSession = (value: boolean) => {\n    this.setState({ loadingSession: value });\n  };\n\n  setViewClaim = (value: boolean) => {\n    this.setState({ viewClaim: value });\n  };\n\n  setPeriodChanged = (value: boolean) => {\n    this.setState({ periodChanged: value });\n  };\n\n  setClaimForm = (value: boolean) => {\n    this.setState({ claimForm: value });\n  };\n\n  setViewImage = (value: boolean) => {\n    this.setState({ viewImage: value });\n  };\n\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n\n  setReClaiming = (value: boolean) => {\n    this.setState({ reClaiming: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n\n  setReClaimingMsg = (value: string) => {\n    this.setState({ reClaimingMsg: value });\n  };\n\n  setClaimId = (value: string | null) => {\n    this.setState({ claimId: value });\n  };\n\n  setThisPeriod = (value: SessionPlanInterface | null) => {\n    this.setState({ thisPeriod: value });\n  };\n\n  setSearchClaim = (value: string) => {\n    this.setState({ searchClaim: value });\n  };\n\n  loadClaims = (thisPeriod: SessionPlanInterface) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (this.props.claiming.myClaims === null && thisPeriod !== null) {\n      this.props.getMyClaims(\n        this.props.auth.user.user_id,\n        thisPeriod._id,\n        (status: boolean, msg: string) => {\n          !status && this.setLoading(status);\n          if (status === false && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    } else if (thisPeriod && this.state.loading) {\n      this.setLoading(false);\n    }\n  };\n\n  setSession = (sessions: SessionPlanInterface[]) => {\n    // SETTING ACTIVE SESSION ==========================\n    if (this.state.thisPeriod === null && sessions.length > 0) {\n      let thisSession = sessions.find((item) => item.is_active === true);\n      this.setThisPeriod(thisSession ? thisSession : sessions[0]);\n      this.loadClaims(thisSession ? thisSession : sessions[0]);\n      this.loadExamAnswers(\n        thisSession ? thisSession : sessions[0],\n        this.props.auth.user.user_id\n      );\n    }\n  };\n\n  loadExamAnswers = (\n    activeSessionPlan: SessionPlanInterface,\n    user_id: string\n  ) => {\n    this.props.getMyAnswers(\n      activeSessionPlan._id,\n      user_id,\n      (status: boolean, msg: string, data: SessionPlanInterface | \"none\") => {\n        this.setLoading(status);\n        if (!status && msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n        if (data) {\n          console.log(\"====================================\");\n          console.log({ loadExamAnswers: data });\n          console.log(\"====================================\");\n        }\n      }\n    );\n    if (this.props.claiming.claimReasons === null) {\n      this.props.getClaimReasons((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (!status) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n  };\n\n  componentDidMount = () => {\n    if (\n      this.props.courses === null ||\n      (this.props.courses.length === 0 && this.state.loading)\n    ) {\n      this.props.loadCourses(this.setLoading);\n      this.setLoading(false);\n    } else {\n      this.setLoading(false);\n    }\n\n    // LOADING APPLICATION SESSION ====================================\n    if (this.props.application_sessions === null) {\n      this.props.GetAllSessionPlans(\n        (status: boolean, msg: string, data?: SessionPlanInterface[]) => {\n          if (!status) {\n            this.setLoadingSession(false);\n            if (msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data && data.length > 0) {\n              // SETTING ACTIVE SESSION ==========================\n              if (this.state.thisPeriod === null) {\n                this.setSession(data);\n              }\n            }\n          }\n        }\n      );\n    } else {\n      this.setSession(this.props.application_sessions);\n      this.setLoadingSession(false);\n    }\n\n    if (!this.props.documentReducer.documentCategory) {\n      this.props.getDocumentCategory();\n      this.setLoading(false);\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n    if (!this.props.documentReducer.documentSubCategory && this.state.loading) {\n      this.props.getDocumentSubCategory();\n      this.setLoading(false);\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n\n    if (!this.props.documentReducer.documentFields && this.state.loading) {\n      this.props.getDocumentFields();\n      this.setLoading(false);\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n\n    if (this.props.claiming.myPlacement === null) {\n      this.props.getMyPlacement(\n        this.props.auth.user.user_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          }\n        }\n      );\n    }\n  };\n\n  isDeleteAllowed = (thisCLaim: CandidateClaimInterface): boolean => {\n    if (!isClaimEvaluated(thisCLaim, 1)) {\n      return true;\n    }\n    return false;\n  };\n\n  onPeriodChange = (period_id: string) => {\n    this.setPeriodChanged(true);\n    this.props.getMyClaims(\n      this.props.auth.user.user_id,\n      period_id,\n      (status: boolean, msg: string) => {\n        this.setLoadingRequest(status);\n        !status && this.setPeriodChanged(false);\n        if (status === false && msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      }\n    );\n  };\n\n  render() {\n    if (this.props.application_sessions === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    if (this.props.application_sessions.length === 0) {\n      return (\n        <div className=\"bg-yellow-100 rounded flex flex-col items-center justify-center p-6 my-8 text-yellow-900 border border-yellow-900\">\n          <MdInfoOutline className=\"text-6xl md:text-9xl\" />\n          <div className=\"text-center flex flex-col\">\n            <span className=\"text-2xl md:text-4xl font-extrabold\">\n              No active session\n            </span>\n            <span className=\"text-lg\">\n              Please Wait for the system to publish the sessions or contact the\n              administrator\n            </span>\n          </div>\n        </div>\n      );\n    }\n\n    if (this.props.claiming.myClaims === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {/* SIDE NAVIGATION */}\n        {!this.state.viewClaim && (\n          <SideNavigation>\n            {/* <button\n              className=\"btn mb-3 border-2 border-blue-500 hover:bg-blue-500 hover:text-white flex items-center flex-1 font-bold w-full focus:outline-none\"\n              onClick={() => {\n                this.setClaimForm(true);\n                // alert(\"clicked\");\n              }}\n              disabled={\n                this.state.viewClaim ||\n                this.state.loading ||\n                this.state.loadingRequest\n              }\n            >\n              <MdAdd className=\"inline-block mr-1 text-xl font-bold\" />\n              <span>Claiming</span>\n            </button> */}\n            <div className=\"bg-gray-200 text-gray-600 font-bold text-center rounded px-3 py-2 cursor-not-allowed\">\n              Can not claim\n            </div>\n\n            {/* FILTER SECTION */}\n            <FilterByType loadingClaims={this.state.loadingRequest} />\n            {/* END FILTER SECTION */}\n          </SideNavigation>\n        )}\n        {/* END SIDE NAVIGATION */}\n\n        {/* ------------------------------------------------------------------- */}\n\n        {/* CLAIM TITLE ===================================== */}\n        {!this.state.viewClaim && (\n          <ClaimHeaderTitle\n            headerTitle={`${\n              this.props.claiming.selectedClaimType === \"all\"\n                ? \"All\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION\n                ? \"Documents\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.APPLICATION\n                ? \"Applications\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.EXAMINATION\n                ? \"Exam\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.MARKS_PUBLICATION\n                ? \"Marks publication\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.PLACEMENT_TRANSFER\n                ? \"Placements\"\n                : \"\"\n            } Claiming`}\n            loading={this.state.loading}\n            loadingSession={this.state.loadingSession}\n            thisPeriod={this.state.thisPeriod}\n            setThisPeriod={this.setThisPeriod}\n            setLoadingSession={this.setLoadingSession}\n            application_sessions={this.props.application_sessions}\n            onPeriodChange={this.onPeriodChange}\n            periodChanged={this.state.periodChanged}\n          />\n        )}\n        {/* END CLAIM TITLE ===================================== */}\n\n        {/* ----------------------------------------------------------------------- */}\n\n        {!this.state.viewClaim && (\n          <section className=\"bg-white w-full p-1\">\n            {/* FILTER FORM =================================== */}\n            <section className=\"flex flex-col-reverse sm:flex-row items-center gap-2 w-full my-2\">\n              <div className=\"w-full\">\n                <input\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                    this.setSearchClaim(e.target.value)\n                  }\n                  type=\"text\"\n                  className=\"input-white h-10 text-sm border-2 border-gray-400 focus:border-gray-500 w-full\"\n                  placeholder={`Search claim by title or type`}\n                  value={this.state.searchClaim}\n                  disabled={\n                    filterClaimsByClaimType(\n                      this.props.claiming.myClaims,\n                      this.props.claiming.selectedClaimType\n                    ).length > 0\n                      ? false\n                      : true\n                  }\n                />\n              </div>\n            </section>\n            {/* END FILTER FORM =================================== */}\n            <table className=\"w-full shadow\" id=\"report_content\">\n              <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                <tr>\n                  <td className=\"px-2 py-2\">#</td>\n                  <td className=\"px-2 py-2\">Claim title</td>\n                  {this.props.claiming.selectedClaimType === \"all\" && (\n                    <td className=\"px-2 py-2\">Claim type</td>\n                  )}\n                  <td className=\"px-2 py-2\">Claim level</td>\n                  <td className=\"px-2 py-2\">Claim status</td>\n                  <td className=\"px-2 py-2\"></td>\n                </tr>\n              </thead>\n              <tbody>\n                {filterClaimsByClaimType(\n                  this.props.claiming.myClaims,\n                  this.props.claiming.selectedClaimType\n                ).length <= 0 ? (\n                  <tr\n                    className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                    key=\"key3201\"\n                  >\n                    <td className=\"px-3 py-1\" colSpan={4}>\n                      <NoResult\n                        theme={NoResultThemes.Light}\n                        value={\"No claim found!\"}\n                      />\n                    </td>\n                  </tr>\n                ) : search(\n                    filterClaimsByClaimType(\n                      this.props.claiming.myClaims,\n                      this.props.claiming.selectedClaimType\n                    ),\n                    this.state.searchClaim\n                  ).length <= 0 ? (\n                  <tr\n                    className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                    key=\"key3201\"\n                  >\n                    <td className=\"px-3 py-1\" colSpan={4}>\n                      <NoResult\n                        theme={NoResultThemes.Light}\n                        value={\"Nothing found!\"}\n                      />\n                    </td>\n                  </tr>\n                ) : (\n                  search(\n                    filterClaimsByClaimType(\n                      this.props.claiming.myClaims,\n                      this.props.claiming.selectedClaimType\n                    ),\n                    this.state.searchClaim\n                  ).map((claim: CandidateClaimInterface, index) => (\n                    <tr\n                      className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                      key={index + claim._id}\n                      onClick={() => {\n                        this.setViewClaim(true);\n                        this.setClaimId(claim._id);\n                      }}\n                    >\n                      <td className=\"px-3 py-1 whitespace-nowrap\">\n                        {index + 1}\n                      </td>\n                      <td className=\"px-3 py-1 whitespace-nowrap\">\n                        {claim.title}\n                      </td>\n                      {this.props.claiming.selectedClaimType === \"all\" && (\n                        <td className=\"px-3 py-1 whitespace-nowrap\">\n                          {whichClaimType(claim)\n                            ? capitalizeFirstLetter(whichClaimType(claim)!)\n                            : \"-\"}\n                        </td>\n                      )}\n                      <td className=\"px-3 py-1 whitespace-nowrap italic\">\n                        Level {claim.claim_level}\n                      </td>\n                      <td className=\"px-3 py-1 whitespace-nowrap\">\n                        <span\n                          className={`inline-block rounded-full duration-300 text-xs font-semibold px-3 py-1 ${\n                            whichClaimStatus(claim).classes\n                          }`}\n                        >\n                          {whichClaimStatus(claim).status}\n                        </span>\n                      </td>\n                      <td className=\"px-3 py-1 text-center whitespace-nowrap\">\n                        <button className=\"btn bg-blue-500 text-white group-hover:bg-blue-600\">\n                          View\n                        </button>\n                      </td>\n                    </tr>\n                  ))\n                )}\n              </tbody>\n            </table>\n          </section>\n        )}\n\n        {/* ----------------------------------------------------------------------- */}\n\n        {this.state.viewClaim &&\n          this.props.claiming.myClaims &&\n          this.state.claimId &&\n          getClaimById(this.props.claiming.myClaims, this.state.claimId) && (\n            <section className=\"bg-white w-full p-1 my-4\">\n              {/* VIEW CLAIM HEADER =============================== */}\n              <section className=\"flex items-center gap-2 py-2 border-b\">\n                <button\n                  className={`ml-3 bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n                    this.state.loadingRequest\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } animate__animated animate__fadeIn`}\n                  disabled={this.state.loadingRequest}\n                  onClick={() => {\n                    this.setViewClaim(false);\n                    this.setViewImage(false);\n                    this.setLoadingRequest(false);\n                    this.setFormError(null);\n                    this.setReClaiming(false);\n                    this.setReClaimingMsg(\"\");\n                  }}\n                >\n                  <MdArrowBack className=\"w-7 h-7\" />\n                </button>\n                {this.isDeleteAllowed(\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!\n                ) && (\n                  <button\n                    className={`bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n                      this.state.loadingRequest\n                        ? \"cursor-not-allowed\"\n                        : \"cursor-pointer\"\n                    } animate__animated animate__fadeIn hidden`}\n                    disabled={this.state.loadingRequest}\n                    // onClick={() => {\n                    //   this.handleDelete();\n                    // }}\n                  >\n                    <MdDelete className=\"w-7 h-7\" />\n                  </button>\n                )}\n              </section>\n              {/* END VIEW CLAIM HEADER =============================== */}\n              <section className=\"my-2\">\n                {/* VIEWING CLAIM OF A DOCUMENT ===================== */}\n                {getClaimById(this.props.claiming.myClaims, this.state.claimId)!\n                  .type_key === PlansTypeKeys.DOCUMENT_VALIDATION &&\n                this.props.claiming.candidateDocuments &&\n                getDocumentById(\n                  this.props.claiming.candidateDocuments,\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.claiming_on_id\n                ) ? (\n                  <ClaimDocView\n                    thisDoc={\n                      getDocumentById(\n                        this.props.claiming.candidateDocuments,\n                        getClaimById(\n                          this.props.claiming.myClaims,\n                          this.state.claimId\n                        )!.claiming_on_id\n                      )!\n                    }\n                    documentCategories={this.props.documentReducer}\n                    thisClaim={\n                      getClaimById(\n                        this.props.claiming.myClaims,\n                        this.state.claimId\n                      )!\n                    }\n                    viewImage={this.state.viewImage}\n                    setViewImage={this.setViewImage}\n                    loadingRequest={this.state.loadingRequest}\n                    setLoadingRequest={this.setLoadingRequest}\n                    reClaiming={this.state.reClaiming}\n                    setReClaiming={this.setReClaiming}\n                    reClaimingMsg={this.state.reClaimingMsg}\n                    setReClaimingMsg={this.setReClaimingMsg}\n                    formError={this.state.formError}\n                    setFormError={this.setFormError}\n                    claimReasons={this.props.claiming.claimReasons}\n                  />\n                ) : (\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.type_key === PlansTypeKeys.DOCUMENT_VALIDATION && (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"Document not found\"}\n                    />\n                  )\n                )}\n                {/* END VIEWING CLAIM OF A DOCUMENT ===================== */}\n\n                {/* ############################################################### */}\n\n                {/* VIEWING CLAIM OF AN APPLICATION ===================== */}\n                {getClaimById(this.props.claiming.myClaims, this.state.claimId)!\n                  .type_key === PlansTypeKeys.APPLICATION &&\n                this.props.claiming.candidateApplications &&\n                getApplicationById(\n                  this.props.claiming.candidateApplications,\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.claiming_on_id\n                ) ? (\n                  <ClaimApplView\n                    thisApplication={\n                      getApplicationById(\n                        this.props.claiming.candidateApplications,\n                        getClaimById(\n                          this.props.claiming.myClaims,\n                          this.state.claimId\n                        )!.claiming_on_id\n                      )!\n                    }\n                    documentCategories={this.props.documentReducer}\n                    thisClaim={\n                      getClaimById(\n                        this.props.claiming.myClaims,\n                        this.state.claimId\n                      )!\n                    }\n                    viewPosition={this.state.viewImage}\n                    setViewPosition={this.setViewImage}\n                    loadingRequest={this.state.loadingRequest}\n                    setLoadingRequest={this.setLoadingRequest}\n                    reClaiming={this.state.reClaiming}\n                    setReClaiming={this.setReClaiming}\n                    reClaimingMsg={this.state.reClaimingMsg}\n                    setReClaimingMsg={this.setReClaimingMsg}\n                    formError={this.state.formError}\n                    setFormError={this.setFormError}\n                    claimReasons={this.props.claiming.claimReasons}\n                  />\n                ) : (\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.type_key === PlansTypeKeys.APPLICATION && (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"Application not found\"}\n                    />\n                  )\n                )}\n                {/* END VIEWING CLAIM OF AN APPLICATION ===================== */}\n\n                {/* VIEWING CLAIM OF AN EXAM ===================== */}\n                {getClaimById(this.props.claiming.myClaims, this.state.claimId)!\n                  .type_key === PlansTypeKeys.EXAMINATION &&\n                this.props.claiming.myAnswer &&\n                this.props.courses &&\n                getCourseIdBySheetId(\n                  this.props.claiming.myAnswer,\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.claiming_on_id\n                ) &&\n                getCourseById(\n                  this.props.courses,\n                  getCourseIdBySheetId(\n                    this.props.claiming.myAnswer,\n                    getClaimById(\n                      this.props.claiming.myClaims,\n                      this.state.claimId\n                    )!.claiming_on_id\n                  )!.course\n                ) ? (\n                  <ClaimExamView\n                    thisExam={\n                      getCourseById(\n                        this.props.courses,\n                        getCourseIdBySheetId(\n                          this.props.claiming.myAnswer,\n                          getClaimById(\n                            this.props.claiming.myClaims,\n                            this.state.claimId\n                          )!.claiming_on_id\n                        )!.course\n                      )!\n                    }\n                    thisClaim={\n                      getClaimById(\n                        this.props.claiming.myClaims,\n                        this.state.claimId\n                      )!\n                    }\n                    viewPosition={this.state.viewImage}\n                    setViewPosition={this.setViewImage}\n                    loadingRequest={this.state.loadingRequest}\n                    setLoadingRequest={this.setLoadingRequest}\n                    reClaiming={this.state.reClaiming}\n                    setReClaiming={this.setReClaiming}\n                    reClaimingMsg={this.state.reClaimingMsg}\n                    setReClaimingMsg={this.setReClaimingMsg}\n                    formError={this.state.formError}\n                    setFormError={this.setFormError}\n                    thisExamSheet={\n                      getCourseIdBySheetId(\n                        this.props.claiming.myAnswer,\n                        getClaimById(\n                          this.props.claiming.myClaims,\n                          this.state.claimId\n                        )!.claiming_on_id\n                      )!\n                    }\n                    claimReasons={this.props.claiming.claimReasons}\n                  />\n                ) : (\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.type_key === PlansTypeKeys.EXAMINATION && (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"Exam not found\"}\n                    />\n                  )\n                )}\n                {/* END VIEWING CLAIM OF AN EXAM ===================== */}\n\n                {/* ----------------------------------------------------------- */}\n                {/* VIEWING CLAIM OF A DOCUMENT ===================== */}\n                {getClaimById(this.props.claiming.myClaims, this.state.claimId)!\n                  .type_key === PlansTypeKeys.PLACEMENT_TRANSFER &&\n                this.props.claiming.myPlacement ? (\n                  <ClaimPlacementView\n                    thisClaim={\n                      getClaimById(\n                        this.props.claiming.myClaims,\n                        this.state.claimId\n                      )!\n                    }\n                    loadingRequest={this.state.loadingRequest}\n                    setLoadingRequest={this.setLoadingRequest}\n                    reClaiming={this.state.reClaiming}\n                    setReClaiming={this.setReClaiming}\n                    reClaimingMsg={this.state.reClaimingMsg}\n                    setReClaimingMsg={this.setReClaimingMsg}\n                    formError={this.state.formError}\n                    setFormError={this.setFormError}\n                    myPlacement={this.props.claiming.myPlacement}\n                  />\n                ) : (\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.type_key === PlansTypeKeys.PLACEMENT_TRANSFER && (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"Placement not found\"}\n                    />\n                  )\n                )}\n                {/* END VIEWING CLAIM OF A DOCUMENT ===================== */}\n              </section>\n            </section>\n          )}\n        {/* end view claim */}\n\n        {/* ----------------------------------------------------------------------- */}\n        {/* CLAIM FORM  ################ */}\n        {this.state.claimForm && (\n          <ClaimForm\n            formState={this.state.claimForm}\n            setFormState={this.setClaimForm}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  sessionPlan,\n  claiming,\n  document,\n  course,\n}: StoreState): {\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  application_sessions: SessionPlanInterface[] | null;\n  documentReducer: DocumentReducerInterface;\n  courses: course[] | null;\n} => {\n  return {\n    auth: auth,\n    claiming,\n    application_sessions: sessionPlan.allSessionPlans,\n    documentReducer: document,\n    courses: course.courses,\n  };\n};\n\nexport const CandidateClaim = connect(mapStateToProps, {\n  getMyClaims,\n  GetAllSessionPlans,\n  getClaimReasons,\n  loadCourses,\n  getMyPlacement,\n  getMyAnswers,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  PushPopupAlert,\n})(Index);\n","import axios from \"axios\";\nimport React from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdInfoOutline, MdTurnedIn } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { TiWarning } from \"react-icons/ti\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { createReClaim, FC_CompleteClaim } from \"../../actions/claiming\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimDecisionStatus,\n  claimReasonInterface,\n  ClaimStatus,\n} from \"../../interfaces\";\nimport { ApplicationStates } from \"../../interfaces/application\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { DocumentReducerInterface } from \"../../reducers/document\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { DATE, errorToText, showDate } from \"../../utils/functions\";\nimport DisplayCompetence from \"../Positions/DisplayCompetence\";\nimport ViewRequirements from \"../Positions/ViewRequirements\";\nimport { FC_ApplicationPositionDistinctCategory } from \"./Candidate/ApplicationFormView\";\nimport { isClaimEvaluated } from \"./ClaimDocView\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\ntype ClaimDocViewProps = {\n  thisApplication: claimApplicationsInterface;\n  documentCategories: DocumentReducerInterface;\n  claimReasons: claimReasonInterface[] | null;\n  thisClaim: CandidateClaimInterface;\n  viewPosition: boolean;\n  setViewPosition: (value: boolean) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  reClaiming: boolean;\n  setReClaiming: (value: boolean) => void;\n  reClaimingMsg: string;\n  setReClaimingMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX DATA =====================\n  createReClaim: Function;\n  PushPopupAlert: Function;\n  FC_CompleteClaim: Function;\n};\n\nconst ClaimDocView: React.FC<ClaimDocViewProps> = (props) => {\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim is required\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim._id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  const FC_CompleteClaim = (this_claim: CandidateClaimInterface) => {\n    if (window.confirm(\"Are you satisfied with the decision?\") === true) {\n      props.FC_CompleteClaim((status: boolean, msg: string) => {\n        props.setLoadingRequest(true);\n        if (!isEmptyOrSpaces(msg)) {\n          props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    }\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              {props.thisApplication.position.position_title}\n            </span>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewPosition(!props.viewPosition)}\n            >\n              {props.viewPosition ? \"Hide\" : \"More\"}\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisClaim.previous.status === ApplicationStates.Rejected\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } rounded px-3 py-1`}\n            >\n              {capitalizeFirstLetter(props.thisClaim.previous.status)}\n            </span>\n          </div>\n          {/* <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {props.thisClaim.previous.evaluater.name}\n            </span>\n          </div> */}\n          {false && (\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Session:</span>\n              <span className=\"font-bold text-gray-900 py-1\">\n                {\n                  props.thisApplication.application_session\n                    .application_session_name\n                }\n              </span>\n            </div>\n          )}\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisApplication.createdAt)}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span\n              className=\"font-normal\"\n              dangerouslySetInnerHTML={{\n                __html: props.thisClaim.previous.reason,\n              }}\n            ></span>\n          </div>\n\n          {/* DISPLAY POSITION ==================================================== */}\n          {props.viewPosition && (\n            <div className=\"w-full my-1 animate__animated animate__fadeIn rounded\">\n              <div className=\"bg-white w-full\">\n                <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                  Position Details\n                </div>\n                {/* <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Desc:</span>\n                  <span className=\"font-semibold\">\n                    <DisplayCompetence\n                      competence={props.thisApplication.position.description}\n                      // displayType=\"text-one\"\n                    />\n                  </span>\n                </div> */}\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>School level:</span>\n                  <span className=\"font-semibold\">\n                    {\n                      props.thisApplication.position.school_level_id\n                        .school_level_name\n                    }\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Institute:</span>\n                  <span className=\"font-semibold\">\n                    {\n                      props.thisApplication.position.education_institute_id\n                        .education_category_title\n                    }\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Courses:</span>\n                  <span className=\"flex items-center gap-2\">\n                    {props.thisApplication.position.courses.map(\n                      (item, index) => (\n                        <div\n                          key={index + item.course_id}\n                          className=\"flex items-center gap-1\"\n                        >\n                          <span className=\"font-semibold\">\n                            {item.course_name}\n                          </span>\n                          <span className=\"text-gray-600\">\n                            ({item.course_code})\n                          </span>\n                          {index !==\n                            props.thisApplication.position.courses.length - 1 &&\n                            \",\"}\n                        </div>\n                      )\n                    )}\n                  </span>\n                </div>\n\n                <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                  Position competences\n                </div>\n\n                <div>\n                  <DisplayCompetence\n                    competence={props.thisApplication.position.description}\n                    // displayType=\"text-one\"\n                  />\n                </div>\n\n                <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                  Position Requirements\n                </div>\n                {props.thisApplication.position.requirements.length > 0 ? (\n                  FC_ApplicationPositionDistinctCategory(\n                    props.thisApplication.position,\n                    props.documentCategories\n                  ).DistinctCategoriesTemp.map((item, index) => (\n                    <div\n                      className=\"bg-gray-100props.thisApplication.position rounded p-2\"\n                      key={index + item.category_id}\n                    >\n                      <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                        <MdTurnedIn />\n                        <span>{item.category_title}</span>\n                      </div>\n                      <div className=\"border bg-white mt-1\">\n                        <ViewRequirements\n                          requirements={FC_ApplicationPositionDistinctCategory(\n                            props.thisApplication.position,\n                            props.documentCategories\n                          ).PositionsTemp.filter(\n                            (req) => req.category_id === item.category_id\n                          )}\n                        />\n                      </div>\n                    </div>\n                  ))\n                ) : (\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"No requirements\"}\n                  ></NoResult>\n                )}\n              </div>\n            </div>\n          )}\n          {/* END DISPLAY POSITION ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section\n              className=\"flex flex-col px-2 pt-3\"\n              key={index + claim._id}\n            >\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt)}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    {/* <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div> */}\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-end justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <div className=\"bg-gray-100 rounded-lg p-4 text-base text-gray-700\">\n                <div className=\"flex\">\n                  <TiWarning className=\"w-5 h-5 inline mr-3\" />\n                  <div>\n                    <span className=\"font-medium\">Claim response!</span> Are you\n                    satisfied with the response?\n                  </div>\n                </div>\n                <div className=\"flex items-center gap-2 w-max mt-2 ml-8\">\n                  {/* <button\n                    className=\"btn hover:bg-yellow-900 bg-yellow-700 text-white focus:outline-none\"\n                    onClick={() => props.setReClaiming(true)}\n                    disabled={props.loadingRequest}\n                  >\n                    No, I'm not\n                  </button> */}\n                  <button\n                    className=\"btn hover:bg-green-800 bg-green-600 text-white focus:outline-none\"\n                    onClick={() => FC_CompleteClaim(props.thisClaim)}\n                    disabled={props.loadingRequest}\n                  >\n                    Yes, I am\n                  </button>\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Why are you not satisfied?`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nexport default React.memo(\n  connect(null, {\n    createReClaim,\n    PushPopupAlert,\n    FC_CompleteClaim,\n  })(ClaimDocView)\n);\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdInfoOutline } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { TiWarning } from \"react-icons/ti\";\nimport { connect } from \"react-redux\";\nimport {\n  loadQuestionTypes,\n  PushPopupAlert,\n  questionTypesStoreInterface,\n} from \"../../actions\";\nimport { createReClaim, FC_CompleteClaim } from \"../../actions/claiming\";\nimport CandidateAnswersDetails from \"../../components/AnswersDetails/CandidateAnswersDetails\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimExamResultsDetails,\n  claimReasonInterface,\n  ClaimStatus,\n  course,\n} from \"../../interfaces\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { errorToText, showDate } from \"../../utils/functions\";\nimport { claimShowAnswer } from \"./Candidate/ExaminationFormView\";\nimport { isClaimEvaluated } from \"./ClaimDocView\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\ntype ClaimDocViewProps = {\n  thisExam: course;\n  thisExamSheet: ClaimExamResultsDetails;\n  thisClaim: CandidateClaimInterface;\n  viewPosition: boolean;\n  claimReasons: claimReasonInterface[] | null;\n  setViewPosition: (value: boolean) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  reClaiming: boolean;\n  setReClaiming: (value: boolean) => void;\n  reClaimingMsg: string;\n  setReClaimingMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX DATA =====================\n  questionTypes: questionTypesStoreInterface;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  createReClaim: Function;\n  PushPopupAlert: Function;\n  FC_CompleteClaim: Function;\n};\n\nconst ClaimDocView: React.FC<ClaimDocViewProps> = (props) => {\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (\n      props.questionTypes.questionTypes === null ||\n      (props.questionTypes.questionTypes.length === 0 && loading)\n    ) {\n      props.loadQuestionTypes(setLoading);\n    }\n  }, [loading, props]);\n\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim is required\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim._id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  const FC_CompleteClaim = (this_claim: CandidateClaimInterface) => {\n    if (window.confirm(\"Are you satisfied with the decision?\") === true) {\n      props.FC_CompleteClaim((status: boolean, msg: string) => {\n        props.setLoadingRequest(true);\n        if (!isEmptyOrSpaces(msg)) {\n          props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    }\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              Exam of {props.thisExam.course_name}{\" \"}\n            </span>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewPosition(!props.viewPosition)}\n            >\n              {props.viewPosition ? \"Hide\" : \"More\"}\n            </button>\n          </div>\n\n          {/* DISPLAY EXAM SHEET ==================================================== */}\n          {props.viewPosition && (\n            <div className=\"bg-white w-full rounded p-2 mb-2\">\n              <CandidateAnswersDetails\n                showAnswers={false}\n                exam_id={claimShowAnswer(\n                  props.thisExamSheet,\n                  props.thisExam.course_name\n                )}\n              />\n            </div>\n          )}\n          {/* END DISPLAY POSITION ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section\n              className=\"flex flex-col px-2 pt-3\"\n              key={index + claim._id}\n            >\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt)}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    {/* <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {loading ? (\n                          <div className=\"w-24 h-3 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n                        ) : (\n                          props.thisClaim.user.user_info.fname +\n                          \" \" +\n                          props.thisClaim.user.user_info.lname\n                        )}\n                      </span>\n                    </div> */}\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-end justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <div className=\"bg-gray-100 rounded-lg p-4 text-base text-gray-700\">\n                <div className=\"flex\">\n                  <TiWarning className=\"w-5 h-5 inline mr-3\" />\n                  <div>\n                    <span className=\"font-medium\">Claim response!</span> Are you\n                    satisfied with the response?\n                  </div>\n                </div>\n                <div className=\"flex items-center gap-2 w-max mt-2 ml-8\">\n                  <button\n                    className=\"btn hover:bg-yellow-900 bg-yellow-700 text-white focus:outline-none\"\n                    onClick={() => props.setReClaiming(true)}\n                    disabled={props.loadingRequest}\n                  >\n                    No, I'm not\n                  </button>\n                  <button\n                    className=\"btn hover:bg-green-800 bg-green-600 text-white focus:outline-none\"\n                    onClick={() => FC_CompleteClaim(props.thisClaim)}\n                    disabled={props.loadingRequest}\n                  >\n                    Yes, I am\n                  </button>\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Why are you not satisfied?`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  questionTypes,\n}: StoreState): {\n  questionTypes: questionTypesStoreInterface;\n} => {\n  return { questionTypes: questionTypes };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    loadQuestionTypes,\n    createReClaim,\n    PushPopupAlert,\n    FC_CompleteClaim,\n  })(ClaimDocView)\n);\n","import axios from \"axios\";\nimport React from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { createReClaim } from \"../../actions/claiming\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimStatus,\n} from \"../../interfaces\";\nimport { candidatePlacementInterface } from \"../../interfaces/placement\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { errorToText, showDate } from \"../../utils/functions\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nexport const isClaimEvaluated = (\n  thisClaim: CandidateClaimInterface,\n  level: number\n): boolean => {\n  const _thisClaim = thisClaim.claims.find(\n    (item) =>\n      item.level === level && item.claim_status === ClaimStatus.EVALUATED\n  );\n  if (_thisClaim) {\n    return true;\n  }\n  return false;\n};\n\ntype ClaimPlacementViewProps = {\n  myPlacement: candidatePlacementInterface;\n  thisClaim: CandidateClaimInterface;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  reClaiming: boolean;\n  setReClaiming: (value: boolean) => void;\n  reClaimingMsg: string;\n  setReClaimingMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX DATA =====================\n  createReClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst ClaimPlacementView: React.FC<ClaimPlacementViewProps> = (props) => {\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim sent successful\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim._id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>School:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.myPlacement.placed.school.school_name}\n              </span>\n            </div>\n          </div>\n          {/* <div className=\"flex items-center\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Position:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.myPlacement.placed.school.school_name}\n              </span>\n            </div>\n          </div> */}\n          <div className=\"flex items-center\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>District:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.myPlacement.placed.school.district_id.district_name}\n              </span>\n            </div>\n          </div>\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section\n              className=\"flex flex-col px-2 pt-3\"\n              key={index + claim._id}\n            >\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt)}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    {/* <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div> */}\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-center justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <button\n                className=\"btn btn-blue\"\n                onClick={() => props.setReClaiming(true)}\n                disabled={props.loadingRequest}\n              >\n                Reclaim\n              </button>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your reclaim...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nexport default React.memo(\n  connect(null, {\n    createReClaim,\n    PushPopupAlert,\n  })(ClaimPlacementView)\n);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport {\n  GetClaimingTypes,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  setSelectedClaimType,\n} from \"../../../actions/claiming\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport { MainItem } from \"../../../components/Navigation/SideNavigation\";\nimport { ClaimStatus, PlansTypeKeys } from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\n\ntype FilterByTypeProps = {\n  // thisClaimType: ClaimTypesInterface | \"ALL\";\n  // setThisClaimType: React.Dispatch<\n  //   React.SetStateAction<ClaimTypesInterface | \"ALL\">\n  // >;\n  loadingClaims: boolean;\n  FC_CountByType?: Function;\n\n  // REDUX PROPS =======================================\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  GetClaimingTypes: Function;\n  setSelectedClaimType: Function;\n  getMyRejectedApplications: Function;\n  getMyRejectedDocuments: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\nconst FilterByType: React.FC<FilterByTypeProps> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingRejectedApplications, setLoadingRejectedApplications] =\n    useState<boolean>(true);\n  const [loadingRejectedDocuments, setLoadingRejectedDocuments] =\n    useState<boolean>(true);\n  const [loadingClaimTypes, setLoadingClaimTypes] = useState<boolean>(true);\n\n  useEffect(() => {\n    if (props.claiming.candidateApplications === null) {\n      props.getMyRejectedApplications(\n        props.auth.user.user_id,\n        (status: boolean, msg: string) => {\n          if (status === false) {\n            if (msg.length > 0) {\n              props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            setLoadingRejectedApplications(false);\n          }\n        }\n      );\n    } else if (loadingRejectedApplications) {\n      setLoadingRejectedApplications(false);\n    }\n\n    if (props.claiming.candidateDocuments === null) {\n      console.log(\"filterrrrrrrrrrrrrrrrrrrr loadingRejectedDocuments\");\n      props.getMyRejectedDocuments((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          setLoadingRejectedDocuments(false);\n        }\n      });\n    } else if (loadingRejectedDocuments) {\n      setLoadingRejectedDocuments(false);\n    }\n\n    if (props.claiming.claimTypes === null) {\n      props.GetClaimingTypes((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          setLoadingClaimTypes(false);\n        }\n      });\n    } else if (loadingClaimTypes) {\n      setLoadingClaimTypes(false);\n    }\n\n    if (\n      !loadingRejectedApplications &&\n      !loadingRejectedDocuments &&\n      !loadingClaimTypes &&\n      loading\n    ) {\n      setLoading(false);\n    }\n  }, [\n    loading,\n    loadingClaimTypes,\n    loadingRejectedApplications,\n    loadingRejectedDocuments,\n    props,\n  ]);\n\n  const countClaims = (\n    claiming: ClaimingReducerType,\n    thisType: PlansTypeKeys | \"all\"\n  ): number => {\n    let result: number = 0;\n\n    if (claiming.myClaims && thisType === \"all\") {\n      result = claiming.myClaims.filter(\n        (item) =>\n          item.last_claim_status !== ClaimStatus.DELETED &&\n          item.last_claim_status !== ClaimStatus.COMPLETED\n      ).length;\n    }\n    if (claiming.myClaims && thisType !== \"all\") {\n      result = claiming.myClaims.filter(\n        (item) =>\n          item.type_key === thisType &&\n          item.last_claim_status !== ClaimStatus.DELETED &&\n          item.last_claim_status !== ClaimStatus.COMPLETED\n      ).length;\n    }\n\n    return result;\n  };\n\n  return (\n    <React.Fragment>\n      <span className=\"mt-2 text-sm\">Filter by claim type</span>\n      {/* WHILE LOADING DATA ================================== */}\n      {(loading || props.loadingClaims) && (\n        <section className=\"space-y-2\">\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </section>\n      )}\n      {/* END WHILE LOADING DATA ================================== */}\n\n      {/* AFTER LOADING DATA ================================== */}\n      {!loading && !props.loadingClaims && (\n        <section>\n          {/* ALL ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(\"ALL\");\n              props.setSelectedClaimType(\"all\");\n            }}\n          >\n            <MainItem\n              title=\"All\"\n              active={props.claiming.selectedClaimType === \"all\"}\n              count={countClaims(props.claiming, \"all\")}\n            />\n          </div>\n          {/* APPLICATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(ClaimTypesInterface.DOCUMENT);\n              props.setSelectedClaimType(PlansTypeKeys.APPLICATION);\n            }}\n          >\n            <MainItem\n              title={\"Application\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.APPLICATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.APPLICATION)}\n            />\n          </div>\n          {/* DOCUMENT ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.DOCUMENT_VALIDATION);\n            }}\n          >\n            <MainItem\n              title={\"Document\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION\n              }\n              count={countClaims(\n                props.claiming,\n                PlansTypeKeys.DOCUMENT_VALIDATION\n              )}\n            />\n          </div>\n          {/* EXAMINATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.EXAMINATION);\n            }}\n          >\n            <MainItem\n              title={\"Exam\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.EXAMINATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.EXAMINATION)}\n            />\n          </div>\n          {/* PLACEMENT TRANSFER ================================= */}\n          {false && (\n            <div\n              className=\"mt-2\"\n              onClick={() => {\n                props.setSelectedClaimType(PlansTypeKeys.PLACEMENT_TRANSFER);\n              }}\n            >\n              <MainItem\n                title={\"Placement\"}\n                active={\n                  props.claiming.selectedClaimType !== \"all\" &&\n                  props.claiming.selectedClaimType ===\n                    PlansTypeKeys.PLACEMENT_TRANSFER\n                }\n                count={countClaims(\n                  props.claiming,\n                  PlansTypeKeys.PLACEMENT_TRANSFER\n                )}\n              />\n            </div>\n          )}\n          {/* <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setThisClaimType(ClaimTypesInterface.APPLICATION);\n            }}\n          >\n            <MainItem\n              title={capitalizeFirstLetter(ClaimTypesInterface.APPLICATION)}\n              active={props.thisClaimType === ClaimTypesInterface.APPLICATION}\n              count={countClaims(props.claiming).applications}\n            />\n          </div>\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setThisClaimType(ClaimTypesInterface.PLACEMENT);\n            }}\n          >\n            <MainItem\n              title={capitalizeFirstLetter(ClaimTypesInterface.PLACEMENT)}\n              active={props.thisClaimType === ClaimTypesInterface.PLACEMENT}\n              count={countClaims(props.claiming).placement}\n            />\n          </div> */}\n        </section>\n      )}\n      {/* END AFTER LOADING DATA ================================== */}\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  claiming,\n}: StoreState): { auth: Auth; claiming: ClaimingReducerType } => {\n  return { auth, claiming };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    GetClaimingTypes,\n    setSelectedClaimType,\n    getMyRejectedApplications,\n    getMyRejectedDocuments,\n    PushPopupAlert,\n  })(FilterByType)\n);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { API } from \"../../utils/api\";\nimport Loading from \"../Loading/Loading\";\n\ninterface ClaimEvaluationHistoryProps {\n  claim_level: number;\n}\ninterface ClaimEvaluationHistoryState {\n  loading: boolean;\n  evaluators: EvaluatorInterface[] | null;\n}\n\ninterface EvaluatorInterface {\n  email: string;\n  evaluated: number;\n  name: string;\n}\n\nclass ClaimEvaluationHistory extends Component<\n  ClaimEvaluationHistoryProps,\n  ClaimEvaluationHistoryState\n> {\n  constructor(props: ClaimEvaluationHistoryProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      evaluators: null,\n    };\n  }\n  GetEvaluationHistory = async () => {\n    this.setState({\n      loading: true,\n    });\n    try {\n      const res = await axios.post<EvaluatorInterface[]>(\n        `${API.CLAIMING}/user/evaluator/${this.props.claim_level}`,\n        {\n          period_id: \"62a5ea76b038313901018796\",\n        }\n      );\n      if (res.data) {\n        this.setState({\n          evaluators: res.data,\n          loading: false,\n        });\n      }\n    } catch (error: any) {\n      this.setState({ loading: false });\n      console.log(\"Result: \", { ...error });\n    }\n  };\n  componentDidMount = () => {\n    this.GetEvaluationHistory();\n  };\n  render() {\n    if (this.state.loading === true || this.state.evaluators === null) {\n      return (\n        <div className=\"bg-white rounded p-5 mt-5\">\n          <Loading />\n          <div className=\"-mt-5 ml-5\">Loading data, please wait...</div>\n        </div>\n      );\n    }\n    return (\n      <div>\n        <div>\n          <table className=\"w-full\">\n            <thead className=\"bg-blue-100\">\n              <tr>\n                <th className=\"px-3 py-2 text-center\">#</th>\n                <th className=\"px-3 py-2 text-left\">Names</th>\n                <th className=\"px-3 py-2 text-left\">Email</th>\n                <th className=\"px-3 py-2 text-center\">Counts</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.evaluators.length === 0 ? (\n                <tr>\n                  <td\n                    colSpan={4}\n                    className=\"bg-gray-200 p-5 text-center font-light text-3xl\"\n                  >\n                    No result found!\n                  </td>\n                </tr>\n              ) : (\n                this.state.evaluators\n                  .sort((a, b) =>\n                    a.evaluated < b.evaluated\n                      ? 1\n                      : b.evaluated < a.evaluated\n                      ? -1\n                      : 0\n                  )\n                  .map((item, i) => (\n                    <tr\n                      key={i + 1}\n                      className={`${i % 2 !== 0 ? \"bg-gray-100\" : \"\"}`}\n                    >\n                      <td className=\"px-3 py-1 text-center\">{i + 1}</td>\n                      <td className=\"px-3 py-1 text-left\">{item.name}</td>\n                      <td className=\"px-3 py-1 text-left\">{item.email}</td>\n                      <td className=\"px-3 py-1 text-center\">\n                        {item.evaluated}\n                      </td>\n                    </tr>\n                  ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ClaimEvaluationHistory;\n","import { ApexOptions } from \"apexcharts\";\nimport axios from \"axios\";\nimport React, { Component } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { GetGeneralSummaryInterface } from \"../../containers/Claimings/Admin/ClaimReport\";\nimport { education_category, PlansTypeKeys } from \"../../interfaces\";\nimport { API } from \"../../utils/api\";\nimport Loading from \"../Loading/Loading\";\n\ninterface GeneralSummaryPie {\n  series: number[];\n  options: ApexOptions;\n}\n\ninterface ClaimReportAnalyticProps {\n  general_summary: {\n    pending: number;\n    validated: number;\n    total: number;\n  };\n  summary_details: {\n    position_title: string;\n    total: number;\n    pending: number;\n    validated: number;\n  }[];\n  claim_level: number;\n  institution: education_category;\n  general_main_data: GetGeneralSummaryInterface;\n  selected_claim_type: PlansTypeKeys;\n}\n\ninterface ClaimReportAnalyticState {\n  loading: boolean;\n}\n\nexport class ClaimReportAnalytic extends Component<\n  ClaimReportAnalyticProps,\n  ClaimReportAnalyticState\n> {\n  constructor(props: ClaimReportAnalyticProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n    };\n  }\n  setLoading = (status: boolean) => this.setState({ loading: status });\n  render() {\n    return (\n      <div className=\"animate__animated animate__fadeIn\">\n        <div className=\"flex flex-row items-center gap-4 h-64\">\n          <div className=\"bg-gray-100 rounded p-4 border border-blue-600 h-full\">\n            <div>\n              <div className=\"font-extrabold text-xl\">General summary</div>\n            </div>\n            <div id=\"chart\">\n              <ReactApexChart\n                options={{\n                  chart: {\n                    width: 380,\n                    type: \"donut\",\n                  },\n                  labels: [\n                    `Total Completed claims (${this.props.general_main_data.completedClaimCounts})`,\n                    `Total evaluated claims (${this.props.general_main_data.evaluatedClaimCounts})`,\n                    `Total pending claims (${this.props.general_main_data.pendingClaimCounts})`,\n                    `Total Canceled claims (${this.props.general_main_data.deletedClaimCounts})`,\n                  ],\n                  responsive: [\n                    {\n                      breakpoint: 480,\n                      options: {\n                        chart: {\n                          width: 200,\n                        },\n                        legend: {\n                          position: \"bottom\",\n                        },\n                      },\n                    },\n                  ],\n                }}\n                series={[\n                  this.props.general_main_data.completedClaimCounts,\n                  this.props.general_main_data.evaluatedClaimCounts,\n                  this.props.general_main_data.pendingClaimCounts,\n                  this.props.general_main_data.deletedClaimCounts,\n                ]}\n                type=\"donut\"\n                width={400}\n              />\n            </div>\n          </div>\n          <div className=\"bg-gray-100 rounded p-4 border border-blue-600 h-full\">\n            <div>\n              <div className=\"font-extrabold text-xl\">\n                {this.props.selected_claim_type}\n              </div>\n              <div className=\"font-extrabold text-sm text-blue-600\">\n                Claim level:{\" \"}\n                {this.props.claim_level === 1\n                  ? \"Level one\"\n                  : \"Public Service Commission\"}\n              </div>\n            </div>\n            <div id=\"chart\">\n              <ReactApexChart\n                options={{\n                  chart: {\n                    width: 380,\n                    type: \"pie\",\n                  },\n                  labels: [\n                    `Total pending claims (${this.props.general_summary.pending})`,\n                    `Total evaluated claims (${this.props.general_summary.validated})`,\n                  ],\n                  responsive: [\n                    {\n                      breakpoint: 480,\n                      options: {\n                        chart: {\n                          width: 200,\n                        },\n                        legend: {\n                          position: \"bottom\",\n                        },\n                      },\n                    },\n                  ],\n                }}\n                series={[\n                  this.props.general_summary.pending,\n                  this.props.general_summary.validated,\n                ]}\n                type=\"pie\"\n                width={400}\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"animate__animated animate__fadeIn rounded border border-blue-600 pt-3 pr-2 mt-4\">\n          <div id=\"chart\" className=\"h-auto\">\n            <ReactApexChart\n              options={{\n                theme: {\n                  mode: \"light\",\n                  palette: \"palette1\",\n                  monochrome: {\n                    enabled: false,\n                    color: \"#255aee\",\n                    shadeTo: \"light\",\n                    shadeIntensity: 0.65,\n                  },\n                },\n                chart: {\n                  type: \"bar\",\n                  height: \"auto\",\n                },\n                plotOptions: {\n                  bar: {\n                    borderRadius: 2,\n                    horizontal: true,\n                    barHeight: \"100px\",\n                  },\n                },\n                dataLabels: {\n                  enabled: true,\n                },\n                xaxis: {\n                  categories: this.props.summary_details.map(\n                    (item) => item.position_title\n                  ),\n                },\n              }}\n              series={[\n                {\n                  name: \"Total claims\",\n                  data: this.props.summary_details.map((item) => item.total),\n                },\n                {\n                  name: \"Pending claims\",\n                  data: this.props.summary_details.map((item) => item.pending),\n                },\n                {\n                  name: \"Validated claims\",\n                  data: this.props.summary_details.map(\n                    (item) => item.validated\n                  ),\n                },\n              ]}\n              type=\"bar\"\n              height={this.props.summary_details.length > 60 ? 5000 : 3000}\n            />\n          </div>\n          {console.log(\"Length: \", this.props.summary_details.length)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ClaimReportAnalytic;\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { CgArrowRightO } from \"react-icons/cg\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  positionsStoreInterface,\n  schoolLevelsStoreInterface,\n  System,\n  setSelectedEducationCategory,\n  loadAllPositionsByInstitute,\n} from \"../../../actions\";\nimport ClaimEvaluationHistory from \"../../../components/ClaimReportTools/ClaimEvaluationHistory\";\nimport ClaimReportAnalytic from \"../../../components/ClaimReportTools/ClaimReportAnalytic\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport {\n  ClaimStatus,\n  education_category,\n  PlansTypeKeys,\n} from \"../../../interfaces\";\nimport { StoreState } from \"../../../reducers\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { displayNumbers } from \"../../../utils/functions\";\n\nexport interface GetGeneralSummaryInterface {\n  allClaimCounts: number;\n  completedClaimCounts: number;\n  deletedClaimCounts: number;\n  evaluatedClaimCounts: number;\n  pendingClaimCounts: number;\n}\n\ninterface GetClaimsReportInterface {\n  _id: string;\n  previous: {\n    evaluater: {\n      email: string;\n      name: string;\n    };\n    reason: string;\n    status: string;\n  };\n  title: string;\n  last_claim_status: ClaimStatus;\n  claiming_on_id: string;\n  type_key: PlansTypeKeys;\n  default_claim_resaons: string;\n  user: string;\n  period_id: string;\n  claim_level: number;\n  claims: [\n    {\n      claim_status: ClaimStatus;\n      _id: string;\n      level: number;\n      reason: string;\n      date_created: string;\n      createdAt: string;\n      updatedAt: string;\n    }\n  ];\n  createdAt: string;\n  updatedAt: string;\n  __v: 0;\n}\n\ninterface PositionSummaryInterface {\n  position_title: string;\n  total: number;\n  status: ClaimStatus;\n}\n\ninterface ClaimReportProps {\n  auth: Auth;\n  system: System;\n  positions: positionsStoreInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n  setSelectedEducationCategory: (data: education_category) => void;\n  loadAllPositionsByInstitute: (\n    institution_id: string,\n    callback: (loading: boolean) => void\n  ) => void;\n}\ninterface ClaimReportState {\n  error: string;\n  success: string;\n  loading: boolean;\n  data: GetClaimsReportInterface[] | null;\n  selected_level: number;\n  selected_claim_type: PlansTypeKeys;\n  view_type: \"Table\" | \"Analytical\" | \"History\";\n  general_main_data: GetGeneralSummaryInterface | null;\n}\n\nclass _ClaimReport extends Component<ClaimReportProps, ClaimReportState> {\n  constructor(props: ClaimReportProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      error: \"\",\n      success: \"\",\n      data: null,\n      selected_level: this.props.auth.education_institution_id === \"\" ? 2 : 1,\n      selected_claim_type: PlansTypeKeys.APPLICATION,\n      view_type: \"Table\",\n      general_main_data: null,\n    };\n  }\n  setLoading = (status: boolean) => this.setState({ loading: status });\n  GetClaims = async (level: number, session_id: string) => {\n    this.setLoading(true);\n    try {\n      const res = await axios.post<GetClaimsReportInterface[]>(\n        `${API.CLAIMING}/user/level/${level}`,\n        {\n          period_id: session_id,\n        }\n      );\n      if (res.data) {\n        this.setState({\n          data: res.data,\n        });\n      }\n      console.log(\"Response: \", res.data);\n      this.setLoading(false);\n    } catch (error: any) {\n      console.log(\"Error: \", { ...error });\n      this.setLoading(false);\n    }\n  };\n\n  GetSummaryFilter = (data: PositionSummaryInterface[]) => {\n    let response: {\n      position_title: string;\n      total: number;\n      pending: number;\n      validated: number;\n    }[] = [];\n    for (const item of data) {\n      const test = response.find(\n        (itm) => itm.position_title === item.position_title\n      );\n      if (test !== undefined) {\n        response = response.filter(\n          (itm) => itm.position_title !== test.position_title\n        );\n        response.push({\n          position_title: test.position_title,\n          total: test.total + 1,\n          pending:\n            item.status === ClaimStatus.PENDING\n              ? test.pending + 1\n              : test.pending,\n          validated:\n            item.status === ClaimStatus.EVALUATED\n              ? test.validated + 1\n              : test.validated,\n        });\n      } else {\n        response.push({\n          position_title: item.position_title,\n          total: item.total,\n          pending: item.status === ClaimStatus.PENDING ? 1 : 0,\n          validated: item.status === ClaimStatus.EVALUATED ? 1 : 0,\n        });\n      }\n    }\n    return response;\n  };\n\n  GetSummary = (\n    data: GetClaimsReportInterface[]\n  ): {\n    position_title: string;\n    total: number;\n    pending: number;\n    validated: number;\n  }[] => {\n    let response: PositionSummaryInterface[] = [];\n    const res_data = data.filter(\n      (itm) => itm.type_key === this.state.selected_claim_type\n    );\n    for (const item of res_data) {\n      response.push({\n        position_title: item.title,\n        total: 1,\n        status: item.claims.filter(\n          (itm) => itm.level === this.state.selected_level\n        )[0].claim_status,\n      });\n    }\n    return this.GetSummaryFilter(response).sort((a, b) =>\n      a.pending < b.pending ? 1 : b.pending < a.pending ? -1 : 0\n    );\n  };\n\n  GetSummaryCounts = (\n    data: {\n      position_title: string;\n      total: number;\n      pending: number;\n      validated: number;\n    }[]\n  ): {\n    pending: number;\n    validated: number;\n    total: number;\n  } => {\n    let res: {\n      pending: number;\n      validated: number;\n      total: number;\n    } = {\n      pending: 0,\n      validated: 0,\n      total: 0,\n    };\n    let pending: number = 0;\n    let validated: number = 0;\n    let total: number = 0;\n    for (const item of data) {\n      pending = pending + item.pending;\n      validated = validated + item.validated;\n      total = total + item.total;\n    }\n    res = {\n      pending: pending,\n      validated: validated,\n      total: total,\n    };\n    return res;\n  };\n\n  componentDidMount = () => {\n    if (this.state.general_main_data === null) {\n      this.getMainSummary(this.state.selected_level);\n    }\n    if (this.props.schoolLevels.selectedEducationCategory === null) {\n      if (this.props.schoolLevels.education_categories !== null) {\n        const test = this.props.schoolLevels.education_categories.find(\n          (itm) =>\n            itm.education_institute_id ===\n            this.props.auth.education_institution_id\n        );\n        if (test !== undefined) {\n          this.props.setSelectedEducationCategory(test);\n          if (test.session_plan !== null) {\n            this.GetClaims(this.state.selected_level, test.session_plan._id);\n          }\n        }\n      }\n    } else {\n      if (\n        this.props.schoolLevels.selectedEducationCategory.session_plan !== null\n      ) {\n        this.GetClaims(\n          this.state.selected_level,\n          this.props.schoolLevels.selectedEducationCategory.session_plan._id\n        );\n      }\n    }\n  };\n\n  getMainSummary = async (claim_level: number) => {\n    const selected_institution =\n      this.props.auth.education_institution_id === \"\" &&\n      this.props.schoolLevels.selectedEducationCategory !== null\n        ? this.props.schoolLevels.selectedEducationCategory\n        : this.props.schoolLevels.education_categories?.find(\n            (itm) =>\n              itm.education_institute_id ===\n              this.props.auth.education_institution_id\n          );\n    console.log(\"Checked: \", selected_institution);\n    if (\n      selected_institution?.session_plan !== null &&\n      selected_institution?.session_plan !== undefined\n    ) {\n      this.setLoading(true);\n      try {\n        const res = await axios.post<GetGeneralSummaryInterface>(\n          `${API.CLAIMING}/user/count/${claim_level}`,\n          {\n            period_id: selected_institution.session_plan._id,\n          }\n        );\n        this.setState({ loading: false, general_main_data: res.data });\n        console.log(\"Res: \", res.data);\n      } catch (error: any) {\n        this.setState({ loading: false });\n        console.log(\"Err: \", { ...error });\n      }\n    }\n  };\n\n  render() {\n    const selected_institution =\n      this.props.schoolLevels.selectedEducationCategory !== null\n        ? this.props.schoolLevels.selectedEducationCategory\n        : this.props.schoolLevels.education_categories?.find(\n            (itm) =>\n              itm.education_institute_id ===\n              this.props.auth.education_institution_id\n          );\n    if (selected_institution === undefined) {\n      return this.props.auth.education_institution_id !== \"\" ? (\n        <div>\n          <div className=\"rounded-xl border-2 border-gray-600 flex flex-col items-center justify-center p-7 text-center w-full mt-5 bg-white\">\n            <span className=\"font-extrabold text-3xl text-gray-600\">\n              Your institute is not yet defined\n            </span>\n            <span>\n              If you have an institute assigned to you, please refresh your page\n              or wait a moment... your page...\n              {/* You are not allowed to view shortlisting report because you have\n              no access for this report. please contact your administrator */}\n            </span>\n          </div>\n        </div>\n      ) : (\n        this.props.schoolLevels.showInstitutes === false &&\n          this.props.schoolLevels.selectedEducationCategory === null && (\n            <div className=\"bg-white rounded mt-2 p-4\">\n              <div className=\"flex flex-col items-center justify-center w-full gap-2\">\n                <div className=\"text-3xl font-light mb-4\">\n                  Please choose institution\n                </div>\n                <div className=\"flex flex-row items-center justify-center gap-4 w-full\">\n                  {this.props.schoolLevels.education_categories === null ? (\n                    <Loading />\n                  ) : (\n                    this.props.schoolLevels.education_categories.map(\n                      (item, i) => (\n                        <div\n                          key={i + 1}\n                          title=\"Click to choose the institution\"\n                          className=\"bg-blue-100 hover:bg-blue-200 rounded-lg flex flex-col items-center justify-center p-3 py-5 w-full cursor-pointer group\"\n                          onClick={() => {\n                            this.props.setSelectedEducationCategory(item);\n                            item.session_plan !== null &&\n                              this.GetClaims(\n                                this.state.selected_level,\n                                item.session_plan._id\n                              );\n                            if (this.state.general_main_data === null) {\n                              this.getMainSummary(this.state.selected_level);\n                            }\n                          }}\n                        >\n                          <div className=\"uppercase text-4xl font-extrabold text-blue-600 group-hover:text-blue-700\">\n                            {item.education_category_title}\n                          </div>\n                          <div className=\"group-hover:text-blue-600\">\n                            {item.description}\n                          </div>\n                          <div className=\"mt-2\">\n                            <CgArrowRightO className=\"text-3xl text-blue-300 group-hover:text-blue-600\" />\n                          </div>\n                        </div>\n                      )\n                    )\n                  )}\n                </div>\n              </div>\n            </div>\n          )\n      );\n    }\n    if (\n      this.state.loading === true ||\n      this.props.schoolLevels.education_categories === null ||\n      this.state.data === null ||\n      this.state.general_main_data === null\n    ) {\n      return (\n        <div className=\"bg-white rounded p-5 mt-5\">\n          <Loading />\n          <div className=\"-mt-5 ml-5\">Loading report, please wait...</div>\n        </div>\n      );\n    }\n    if (this.state.error !== \"\") {\n      <div onClick={() => this.setState({ error: \"\" })}>\n        <div className=\"cursor-pointer rounded-xl border-2 border-yellow-600 flex flex-col items-center justify-center p-7 text-center w-full mt-5 bg-yellow-100\">\n          <span className=\"font-extrabold text-3xl text-yellow-800\">\n            Error occurred!\n          </span>\n          <span>{this.state.error}</span>\n        </div>\n      </div>;\n    }\n    return (\n      <div>\n        <div className=\"mt-4 bg-white rounded\">\n          <div className=\"p-4 flex flex-row items-center gap-3 justify-between\">\n            <div>\n              <div className=\"text-3xl font-extrabold\">\n                Claiming report (\n                <span className=\"text-blue-600 lowercase\">\n                  {capitalizeFirstLetter(\n                    this.state.selected_claim_type.toString()\n                  )}\n                </span>\n                )\n              </div>\n              <div className=\"flex flex-row items-center gap-2 ml-2\">\n                <div className=\"flex flex-col\">\n                  <span className=\"text-sm font-bold\">Choose claim type</span>\n                  <select\n                    onChange={(e) => {\n                      this.setState({ loading: true });\n                      const selected_type = e.target.value as PlansTypeKeys;\n                      this.setState({\n                        selected_claim_type: selected_type,\n                      });\n                      this.setState({ loading: false });\n                    }}\n                    value={this.state.selected_claim_type}\n                    className=\"px-3 py-2 rounded border border-gray-500\"\n                  >\n                    <option value={PlansTypeKeys.APPLICATION}>\n                      Applications\n                    </option>\n                    <option value={PlansTypeKeys.DOCUMENT_VALIDATION}>\n                      Document validation\n                    </option>\n                    <option value={PlansTypeKeys.EXAMINATION}>\n                      Examinations\n                    </option>\n                  </select>\n                </div>\n                <div className=\"flex flex-col\">\n                  <span className=\"text-sm font-bold\">Choose claim level</span>\n                  <select\n                    value={this.state.selected_level}\n                    onChange={(e) => {\n                      if (selected_institution.session_plan !== null) {\n                        const selected_level = parseInt(e.target.value);\n                        this.setState({\n                          selected_level: selected_level,\n                        });\n                        this.setLoading(true);\n                        this.GetClaims(\n                          selected_level,\n                          selected_institution.session_plan._id\n                        );\n                      }\n                    }}\n                    className=\"px-3 py-2 rounded border border-gray-500\"\n                  >\n                    <option value={1}>Level 1</option>\n                    <option value={2}>Public Service Commission Level</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\"flex flex-row items-center gap-3\">\n              <div className=\"flex flex-col rounded bg-blue-100 p-2 text-right animate__animated animate__zoomIn\">\n                <span className=\"text-3xl font-extrabold\">\n                  {displayNumbers(\n                    this.GetSummaryCounts(this.GetSummary(this.state.data))\n                      .total\n                  )}\n                </span>\n                <span className=\"font-normal text-sm text-blue-900\">\n                  Total claims\n                </span>\n              </div>\n              <div className=\"flex flex-col rounded bg-blue-100 p-2 text-right animate__animated animate__zoomIn\">\n                <span className=\"text-3xl font-extrabold\">\n                  {displayNumbers(\n                    this.GetSummaryCounts(this.GetSummary(this.state.data))\n                      .pending\n                  )}\n                </span>\n                <span className=\"font-normal text-sm text-blue-900\">\n                  Waiting claims\n                </span>\n              </div>\n              <div className=\"flex flex-col rounded bg-green-100 p-2 text-right animate__animated animate__zoomIn\">\n                <span className=\"text-3xl font-extrabold text-green-900\">\n                  {displayNumbers(\n                    this.GetSummaryCounts(this.GetSummary(this.state.data))\n                      .validated\n                  )}\n                </span>\n                <span className=\"font-normal text-sm text-green-900\">\n                  Validated claims\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"border-t border-gray-400 p-4\">\n            <div className=\"flex flex-row items-center rounded mb-3\">\n              <div\n                onClick={() => this.setState({ view_type: \"Table\" })}\n                className={`px-3 py-2 ${\n                  this.state.view_type === \"Table\"\n                    ? \"bg-white font-bold text-blue-800 border-b-4 border-blue-600 rounded-t-md animate__animated animate__fadeIn\"\n                    : \"bg-white font-light  border-b-4 border-gray-200 hover:bg-blue-100 hover:text-blue-800 hover:border-blue-600\"\n                } cursor-pointer`}\n              >\n                Table view\n              </div>\n              <div\n                onClick={() => this.setState({ view_type: \"Analytical\" })}\n                className={`px-3 py-2 ${\n                  this.state.view_type === \"Analytical\"\n                    ? \"bg-white font-bold text-blue-800 border-b-4 border-blue-600 rounded-t-md animate__animated animate__fadeIn\"\n                    : \"bg-white font-light  border-b-4 border-gray-200 hover:bg-blue-100 hover:text-blue-800 hover:border-blue-600\"\n                } cursor-pointer`}\n              >\n                Analytical view\n              </div>\n              <div\n                onClick={() => this.setState({ view_type: \"History\" })}\n                className={`px-3 py-2 ${\n                  this.state.view_type === \"History\"\n                    ? \"bg-white font-bold text-blue-800 border-b-4 border-blue-600 rounded-t-md animate__animated animate__fadeIn\"\n                    : \"bg-white font-light  border-b-4 border-gray-200 hover:bg-blue-100 hover:text-blue-800 hover:border-blue-600\"\n                } cursor-pointer`}\n              >\n                Evaluation History\n              </div>\n            </div>\n            {this.state.view_type === \"Table\" ? (\n              <table className=\"w-full animate__animated animate__fadeIn\">\n                <thead className=\"bg-blue-100 \">\n                  <tr className=\"\">\n                    <th className=\"px-3 py-1 text-center\">#</th>\n                    <th className=\"px-3 py-1 text-left\">Position</th>\n                    <th className=\"px-3 py-1 text-center\">Total claims</th>\n                    <th className=\"px-3 py-1 text-center\">Waiting claims</th>\n                    <th className=\"px-3 py-1 text-center\">Validated claims</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.GetSummary(this.state.data).length === 0 ? (\n                    <tr>\n                      <td\n                        colSpan={5}\n                        className=\"text-center p-3 text-3xl font-light bg-gray-100 border border-gray-500 rounded\"\n                      >\n                        No result found!\n                      </td>\n                    </tr>\n                  ) : (\n                    this.GetSummary(this.state.data).map((item, i) => (\n                      <tr\n                        key={i + 1}\n                        className={`${\n                          i % 2 !== 0 ? \"bg-gray-100\" : \"bg-white\"\n                        } ${\n                          item.total === item.validated\n                            ? \"text-green-900 font-light\"\n                            : item.validated === 0\n                            ? \"text-yellow-900 font-bold\"\n                            : \"text-black font-light\"\n                        }`}\n                      >\n                        <td className=\"px-3 py-1 text-center\">{i + 1}</td>\n                        <td className=\"px-3 py-1 text-left\">\n                          {item.position_title}\n                        </td>\n                        <td className=\"px-3 py-1 text-center\">\n                          {displayNumbers(item.total)}\n                        </td>\n                        <td className=\"px-3 py-1 text-center\">\n                          {displayNumbers(item.pending)}\n                        </td>\n                        <td className=\"px-3 py-1 text-center\">\n                          {displayNumbers(item.validated)}\n                        </td>\n                      </tr>\n                    ))\n                  )}\n                </tbody>\n              </table>\n            ) : this.state.view_type === \"Analytical\" ? (\n              <ClaimReportAnalytic\n                general_summary={this.GetSummaryCounts(\n                  this.GetSummary(this.state.data)\n                )}\n                summary_details={this.GetSummary(this.state.data)}\n                claim_level={this.state.selected_level}\n                institution={selected_institution}\n                general_main_data={this.state.general_main_data}\n                selected_claim_type={this.state.selected_claim_type}\n              />\n            ) : (\n              <ClaimEvaluationHistory claim_level={this.state.selected_level} />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n  positions,\n  schoolLevels,\n}: StoreState): {\n  auth: Auth;\n  system: System;\n  positions: positionsStoreInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n} => {\n  return {\n    auth: auth,\n    system: system,\n    positions: positions,\n    schoolLevels,\n  };\n};\n\nexport const ClaimReport = connect(mapStateToProps, {\n  setSelectedEducationCategory,\n  loadAllPositionsByInstitute,\n})(_ClaimReport);\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { BiExport, BiSort } from \"react-icons/bi\";\nimport { FiEdit } from \"react-icons/fi\";\nimport { ImFilesEmpty } from \"react-icons/im\";\nimport {\n  MdCheckBox,\n  MdCheckBoxOutlineBlank,\n  MdHistory,\n  MdRadioButtonChecked,\n  MdRadioButtonUnchecked,\n} from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadEducationCategories,\n  PushPopupAlert,\n  schoolLevelsStoreInterface,\n} from \"../../../actions\";\nimport {\n  getAllClaims,\n  getAllApplications,\n  setSelectedClaimType,\n  GetClaimingTypes,\n} from \"../../../actions/claiming\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport {\n  generatePDF,\n  reportSettingsInterface,\n} from \"../../../components/DownloadPDF/rest\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport {\n  SideNavigation,\n  MainItem,\n} from \"../../../components/Navigation/SideNavigation\";\nimport {\n  CandidateClaimInterface,\n  claimReportContentInterface,\n  claimReportContentKeyInterface,\n  ClaimToPrintInterface,\n} from \"../../../interfaces/claimings\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport ExportToExcel from \"../../../utils/ExportToExcel\";\nimport { DATE, sortThisArray } from \"../../../utils/functions\";\nimport { ClaimTypesEnum, whichClaimType } from \"../../Claimings/Candidate\";\nimport TableLoading from \"../../../components/Loading/TableLoading\";\nimport {\n  education_category,\n  PlansTypeKeys,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport {\n  capitalizeFirstLetter,\n  capitalizeFirstWord,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport ChooseSession from \"../../SessionSettings/ChooseSession\";\nimport NoSession from \"../../SessionSettings/NoSession\";\n\nexport const reportClaimType = (\n  type: PlansTypeKeys | \"all\"\n): ClaimTypesEnum | \"all\" => {\n  let result: ClaimTypesEnum | \"all\" = \"all\";\n  switch (type) {\n    case PlansTypeKeys.APPLICATION:\n      result = ClaimTypesEnum.application;\n      break;\n    case PlansTypeKeys.DOCUMENT_VALIDATION:\n      result = ClaimTypesEnum.document;\n      break;\n    case PlansTypeKeys.EXAMINATION:\n      result = ClaimTypesEnum.exam;\n      break;\n    case PlansTypeKeys.MARKS_PUBLICATION:\n      result = ClaimTypesEnum.marks_publication;\n      break;\n    case PlansTypeKeys.PLACEMENT_TRANSFER:\n      result = ClaimTypesEnum.placement;\n      break;\n    default:\n      result = \"all\";\n      break;\n  }\n\n  return result;\n};\n\nconst searchData = (\n  objList: ClaimToPrintInterface[],\n  text: string\n): ClaimToPrintInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (\n        prop === \"names\" ||\n        prop === \"gender\" ||\n        prop === \"national_id\" ||\n        prop === \"phone\" ||\n        prop === \"email\" ||\n        prop === \"claim_title\" ||\n        prop === \"claim_type\" ||\n        prop === \"claim_level\" ||\n        prop === \"education_category\" ||\n        prop === \"claim_session\" ||\n        prop === \"date\" ||\n        prop === \"decision\"\n      ) {\n        if (product[prop]) {\n          flag =\n            product[prop]!.toString()\n              .toLowerCase()\n              .indexOf(text.toLowerCase()) > -1;\n        }\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n};\n\nconst defaultReportContent: claimReportContentInterface[] = [\n  {\n    key: claimReportContentKeyInterface.names,\n    title: \"Applicant Names\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.national_id,\n    title: \"National ID\",\n    status: true,\n  },\n  { key: claimReportContentKeyInterface.gender, title: \"Gender\", status: true },\n  { key: claimReportContentKeyInterface.phone, title: \"Phone\", status: true },\n  {\n    key: claimReportContentKeyInterface.claim_session,\n    title: \"Claim Session\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.education_category,\n    title: \"Education Institute\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.date,\n    title: \"Claim Date\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.decision,\n    title: \"Decision\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.claim_title,\n    title: \"Claim Title\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.claim_type,\n    title: \"Claim Type\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.claim_level,\n    title: \"Claim Level\",\n    status: true,\n  },\n];\n\ntype AppProps = {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  // systemPositions: PositionAPI[] | null;\n  // courses: course[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  // loadCourses: Function;\n  // getAllAnswers: Function;\n  setSelectedClaimType: Function;\n  // getPositions: Function;\n  getAllClaims: Function;\n  GetClaimingTypes: Function;\n  // getAllApplications: Function;\n  GetAllSessionPlans: Function;\n  // getDocumentCategory: Function;\n  // getDocumentSubCategory: Function;\n  // getDocumentFields: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\nconst _ClaimingReport: React.FC<AppProps> = (props) => {\n  const [thisPeriod, setThisPeriod] = useState<SessionPlanInterface | null>(\n    null\n  );\n  const [thisLevel, setThisLevel] = useState<number | \"all\">(\"all\");\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingSession, setLoadingSession] = useState<boolean>(true);\n  const [periodChanged, setPeriodChanged] = useState<boolean>(false);\n  const [loadingClaims, setLoadingClaims] = useState<boolean>(true);\n  const [loadingInstitutes, setLoadingInstitutes] = useState<boolean>(true);\n  const [downloading, setDownloading] = useState<boolean>(false);\n  const [claimToPrint, setClaimToPrint] = useState<\n    ClaimToPrintInterface[] | null\n  >();\n\n  const [sortProperty, setSortProperty] = useState<string>(\"\");\n  const [isSorted, setIsSorted] = useState<boolean>(false);\n  const [sortOrder, setSortOrder] = useState<\"ASC\" | \"DESC\">(\"ASC\");\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const [generateReportModal, setGenerateReportModal] = useState<{\n    reportType: \"EXCEL\" | \"PDF\";\n    status: boolean;\n  } | null>(null);\n  const [reportTitle, setReportTitle] = useState<string>(\"\");\n  const [reportContent, setReportContent] =\n    useState<claimReportContentInterface[]>(defaultReportContent);\n  const [selectAll, setSelectAll] = useState<boolean>(true);\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [selectPeriod, setSelectPeriod] = useState<boolean>(false);\n  const [thisEducation, setThisEducation] = useState<\n    education_category | \"all\"\n  >(\"all\");\n\n  useEffect(() => {\n    // LOADING EDUCATION CATEGORY =================================\n    if (\n      props.schoolLevels.education_categories === null ||\n      props.schoolLevels.education_categories.length === 0\n    ) {\n      props.loadEducationCategories(setLoadingInstitutes);\n    } else {\n      setLoadingInstitutes(false);\n    }\n    // END LOADING EDUCATION CATEGORY =================================\n    // LOADING CLAIM TYPES ========================================\n    if (props.claiming.claimTypes === null) {\n      props.GetClaimingTypes((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n    // END LOADING CLAIM TYPES ========================================\n    // LOADING APPLICATION SESSION ====================================\n    if (props.application_sessions === null) {\n      props.GetAllSessionPlans((status: boolean, msg: string) => {\n        if (!status) {\n          setLoadingSession(false);\n          setLoading(false);\n          if (msg.length) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    } else if (loadingSession) {\n      setLoading(false);\n      setLoadingSession(false);\n    }\n\n    // SETTING ACTIVE SESSION ==========================\n    if (\n      thisPeriod === null &&\n      !loadingSession &&\n      props.application_sessions &&\n      props.application_sessions.length > 0\n    ) {\n      let thisSession = props.application_sessions.find(\n        (item) => item.is_active === true\n      );\n      setThisPeriod(thisSession ? thisSession : props.application_sessions[0]);\n      // if (props.claiming.allAnswer === null) {\n      //   props.getAllAnswers(\n      //     thisSession\n      //       ? thisSession._id\n      //       : props.application_sessions[0]._id,\n      //     (status: boolean, msg: string) => {\n      //       setLoading(status);\n      //       if (!status && msg.length) {\n      //         props.PushPopupAlert({\n      //           title: msg,\n      //           theme: PopupAlertTheme.danger,\n      //         });\n      //       }\n      //     }\n      //   );\n      // }\n    }\n\n    // LOADING DOCUMENT CATEGORIES ==========================\n    // if (!props.documentReducer.documentCategory && loadingDocuments) {\n    //   props.getDocumentCategory();\n    //   setLoadingDocuments(false);\n    // } else if (loadingDocuments) {\n    //   setLoadingDocuments(false);\n    // }\n    // LOADING DOCUMENT CLARIFICATIONS ==========================\n    // if (!props.documentReducer.documentSubCategory && loadingClarifications) {\n    //   props.getDocumentSubCategory();\n    //   setLoadingClarifications(false);\n    // } else if (loadingClarifications) {\n    //   setLoadingClarifications(false);\n    // }\n    // LOADING DOCUMENT FIELDS ==========================\n    // if (!props.documentReducer.documentFields && loadingFields) {\n    //   props.getDocumentFields();\n    //   setLoadingFields(false);\n    // } else if (loadingFields) {\n    //   setLoadingFields(false);\n    // }\n\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (props.claiming.allClaims === null && thisPeriod !== null) {\n      props.getAllClaims(1, thisPeriod._id, (status: boolean, msg: string) => {\n        !status && setLoadingClaims(status);\n        if (status === false && msg.length) {\n          props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    } else if (thisPeriod && loadingClaims) {\n      setLoadingClaims(false);\n    }\n\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    // if (props.claiming.allApplications === null && thisPeriod !== null) {\n    //   props.getAllApplications(\n    //     thisPeriod._id,\n    //     (status: boolean, msg: string) => {\n    //       !status && setLoadingApplications(status);\n    //       if (status === false && msg.length) {\n    //         props.PushPopupAlert({\n    //           title: msg,\n    //           theme: PopupAlertTheme.danger,\n    //         });\n    //       }\n    //     }\n    //   );\n    // } else if (thisPeriod && loadingApplications) {\n    //   setLoadingApplications(false);\n    // }\n\n    // if (props.systemPositions === null) {\n    //   props.getPositions((status: boolean, msg: string) => {\n    //     setLoadingPosition(status);\n    //     console.log({ status: status, msg: msg });\n    //     if (msg.length) {\n    //       props.PushPopupAlert({\n    //         title: msg,\n    //         theme: PopupAlertTheme.danger,\n    //       });\n    //     }\n    //   });\n    // } else if (loadingPosition) {\n    //   setLoadingPosition(false);\n    // }\n\n    // LOADING COURSE ====================================\n    // if (\n    //   props.courses === null ||\n    //   (props.courses.length === 0 && loadingCourses)\n    // ) {\n    //   props.loadCourses(setLoadingCourses);\n    // } else if (loadingCourses) {\n    //   setLoadingCourses(false);\n    // }\n  }, [loadingClaims, loadingSession, props, thisPeriod]);\n\n  if (loading === true) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading Data...\n      </div>\n    );\n  }\n\n  if (props.application_sessions && props.application_sessions.length === 0) {\n    return <NoSession />;\n  }\n\n  // const displayClaimTitle = (thisClaim: CandidateClaimInterface): string => {\n  //   let result: string = thisClaim.claiming_on_id;\n  //   if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n  //     result =\n  //       thisClaim.user.details.filter(\n  //         (item) => item.validation_status !== \"waiting\"\n  //       ).length > 0\n  //         ? adminDisplayClaimTitle(\n  //             props.documentReducer,\n  //             thisClaim.user.details.filter(\n  //               (item) => item.validation_status !== \"waiting\"\n  //             ),\n  //             thisClaim\n  //           )\n  //         : \"Document not found\";\n  //   }\n  //   if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n  //     if (props.claiming.allApplications) {\n  //       let thisApplication = props.claiming.allApplications.find(\n  //         (item) => item._id === thisClaim.claiming_on_id\n  //       );\n  //       if (\n  //         thisApplication &&\n  //         props.claiming.allApplications &&\n  //         props.systemPositions\n  //       ) {\n  //         let thisPosition = props.systemPositions.find(\n  //           (item) => item.position_id === thisApplication!.position\n  //         );\n  //         if (thisPosition) {\n  //           result = thisPosition.position_title;\n  //         } else {\n  //           result = \"Application not found\";\n  //         }\n  //       }\n  //     }\n  //   }\n\n  //   if (\n  //     thisClaim.type_key === PlansTypeKeys.EXAMINATION &&\n  //     props.courses &&\n  //     props.claiming.allAnswer\n  //   ) {\n  //     let thisAnswer = getCourseIdBySheetId(\n  //       props.claiming.allAnswer,\n  //       thisClaim.claiming_on_id\n  //     );\n  //     if (thisAnswer && getCourseById(props.courses, thisAnswer.course)) {\n  //       result =\n  //         \"Exam of \" +\n  //         getCourseById(props.courses, thisAnswer.course)!.course_name;\n  //     } else {\n  //       result = \"Unknown exam\";\n  //     }\n  //   }\n\n  //   return result;\n  // };\n\n  // const getClaimInstitute = (\n  //   thisClaim: CandidateClaimInterface\n  // ): string | null => {\n  //   if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n  //     return null;\n  //   }\n  //   // if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n  //   //   if (props.claiming.allApplications) {\n  //   //     let thisApplication = props.claiming.allApplications.find(\n  //   //       (item) => item._id === thisClaim.claiming_on_id\n  //   //     );\n  //   //     if (\n  //   //       thisApplication &&\n  //   //       props.claiming.allApplications &&\n  //   //       props.systemPositions\n  //   //     ) {\n  //   //       // return thisApplication.\n  //   //       let thisPosition = props.systemPositions.find(\n  //   //         (item) => item.position_id === thisApplication!.position\n  //   //       );\n  //   //       if (thisPosition) {\n  //   //         return thisPosition.education_institute_id.education_institute_id;\n  //   //       }\n  //   //     }\n  //   //   }\n  //   // }\n\n  //   return null;\n  // };\n\n  const onPeriodChange = (period_id: string) => {\n    setPeriodChanged(true);\n    props.getAllClaims(1, period_id, (status: boolean, msg: string) => {\n      !status && setPeriodChanged(false);\n      if (status === false && msg.length) {\n        props.PushPopupAlert({\n          title: msg,\n          theme: PopupAlertTheme.danger,\n        });\n      }\n    });\n  };\n\n  const isClaimTypeActive = (\n    selectedType: PlansTypeKeys | \"all\",\n    currentType: PlansTypeKeys | \"all\"\n  ): boolean => {\n    if (currentType === \"all\" && selectedType === \"all\") {\n      return true;\n    } else if (currentType !== \"all\" && selectedType !== \"all\") {\n      if (currentType === selectedType) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  const setSort = (thisProperty: string) => {\n    if (sortProperty === thisProperty && sortOrder === \"ASC\") {\n      setSortOrder(\"DESC\");\n    } else {\n      setSortOrder(\"ASC\");\n    }\n    setSortProperty(thisProperty);\n    setIsSorted(true);\n  };\n\n  const ClaimTypes = (\n    claims: ClaimToPrintInterface[]\n  ): {\n    title: string;\n    count: number;\n    type: PlansTypeKeys | \"all\";\n  }[] => {\n    let output: {\n      title: string;\n      count: number;\n      type: PlansTypeKeys | \"all\";\n    }[] = [{ title: \"All types\", count: claims.length, type: \"all\" }];\n\n    Object.values(PlansTypeKeys).forEach((PlansKey) => {\n      if (PlansKey !== PlansTypeKeys.MARKS_PUBLICATION) {\n        output.push({\n          title: capitalizeFirstLetter(reportClaimType(PlansKey)),\n          count:\n            claims.length > 0\n              ? claims.filter(\n                  (itm) => itm.claim_type === reportClaimType(PlansKey)\n                ).length\n              : 0,\n          type: PlansKey,\n        });\n      }\n    });\n\n    return output;\n  };\n\n  const ClaimLevels = (\n    claims: ClaimToPrintInterface[]\n  ): {\n    title: string;\n    count: number;\n    level: number | \"all\";\n  }[] => {\n    let output: {\n        title: string;\n        count: number;\n        level: number | \"all\";\n      }[] = [{ title: \"All levels\", count: claims.length, level: \"all\" }],\n      levels: number[] = [1, 2];\n    for (let i in levels) {\n      output.push({\n        title: \"Level \" + levels[i],\n        count: claims.filter((itm) => itm.claim_level === levels[i]).length,\n        level: levels[i],\n      });\n    }\n    return output;\n  };\n\n  const updateReportContent = (key: claimReportContentKeyInterface) => {\n    let index: number = reportContent.findIndex((item) => item.key === key);\n    let newArray: claimReportContentInterface[] = reportContent;\n    newArray[index].status = !newArray[index].status;\n    setReportContent(newArray);\n    let isSelectAllNeeded = newArray.find((item) => item.status === false);\n    if (isSelectAllNeeded) {\n      setSelectAll(false);\n    } else {\n      setSelectAll(true);\n    }\n\n    // UPDATE APPLICATION LIST FOR UPDATE ==============================\n    updateClaimToPrint();\n  };\n\n  const updateClaimToPrint = () => {\n    // UPDATE REPORT TITLE ========================\n    if (thisPeriod) {\n      let title = \"Claim Report \" + thisPeriod.session_plan_name;\n      // if (thisLevel!==\"all\") {\n      //   title = \"Claim Report - Level \"+thisLevel + thisPeriod.session_plan_name;\n      // }\n      setReportTitle(title);\n    }\n    // UPDATE CONTENT =============================\n    if (props.claiming.allClaims && props.claiming.claimTypes) {\n      let arrayNew: ClaimToPrintInterface[] = [];\n      let n: number = 1;\n      for (const key in props.claiming.allClaims) {\n        if (\n          Object.prototype.hasOwnProperty.call(props.claiming.allClaims, key)\n        ) {\n          for (const keyClaim in props.claiming.allClaims[key].claims) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                props.claiming.allClaims[key].claims,\n                keyClaim\n              )\n            ) {\n              const element = props.claiming.allClaims[key].claims[keyClaim];\n              const thisType = whichClaimType(props.claiming.allClaims[key]);\n              let dataArray: ClaimToPrintInterface = {\n                claim_id: n,\n                names:\n                  props.claiming.allClaims[key].user.user_info.fname +\n                  \" \" +\n                  props.claiming.allClaims[key].user.user_info.lname,\n                gender: props.claiming.allClaims[key].user.user_info.sex\n                  ? \"Male\"\n                  : \"Female\",\n                national_id: props.claiming.allClaims[key].user.n_id!,\n                phone: props.claiming.allClaims[key].user.phone_number,\n                email: props.claiming.allClaims[key].user.email,\n                claim_type: thisType ? thisType : \"\",\n                claim_level: element.level,\n                education_category: \"\",\n                claim_session: thisPeriod ? thisPeriod.session_plan_name : \"\",\n                date: DATE(element.createdAt),\n                decision: element.decision_taken_status\n                  ? element.decision_taken_status\n                  : \"PENDING\",\n                claim_title: props.claiming.allClaims[key].title,\n              };\n              for (const key in reportContent) {\n                if (Object.prototype.hasOwnProperty.call(reportContent, key)) {\n                  if (!reportContent[key].status) {\n                    delete dataArray[reportContent[key].key];\n                  }\n                }\n              }\n              arrayNew.push(dataArray);\n              n++;\n            }\n          }\n        }\n      }\n      setClaimToPrint(arrayNew);\n      arrayNew = [];\n      n = 1;\n    }\n  };\n\n  const FC_ClaimData = (\n    allClaims: CandidateClaimInterface[] | null\n  ): ClaimToPrintInterface[] | null => {\n    if (allClaims === null) return null;\n    let arrayNew: ClaimToPrintInterface[] = [];\n    let n: number = 1;\n    // LOOP IN ALL CLAIM ONE BY ONE ###########################\n    for (const key in allClaims) {\n      if (Object.prototype.hasOwnProperty.call(allClaims, key)) {\n        // LOOP IN ALL CLAIM OF ONE FILE ONE BY ONE ===========================\n        for (const keyClaim in allClaims[key].claims) {\n          if (\n            Object.prototype.hasOwnProperty.call(\n              allClaims[key].claims,\n              keyClaim\n            )\n          ) {\n            const element = allClaims[key].claims[keyClaim];\n            const thisType = whichClaimType(allClaims[key]);\n            let dataArray: ClaimToPrintInterface = {\n              claim_id: n,\n              names:\n                allClaims[key].user.user_info.fname +\n                \" \" +\n                allClaims[key].user.user_info.lname,\n              gender: allClaims[key].user.user_info.sex ? \"Male\" : \"Female\",\n              national_id: allClaims[key].user.n_id!,\n              phone: allClaims[key].user.phone_number,\n              email: allClaims[key].user.email,\n              claim_type: thisType ? thisType : \"\",\n              claim_level: element.level,\n              education_category:\n                allClaims[key].institute_id &&\n                !isEmptyOrSpaces(allClaims[key].institute_id)\n                  ? allClaims[key].institute_id\n                  : null,\n              claim_session: thisPeriod ? thisPeriod.session_plan_name : \"\",\n              date: DATE(element.createdAt),\n              decision: element.decision_taken_status\n                ? element.decision_taken_status\n                : \"PENDING\",\n              claim_title: allClaims[key].title\n                ? allClaims[key].title\n                : \"Undefined\",\n            };\n            // for (const key in reportContent) {\n            //   if (Object.prototype.hasOwnProperty.call(reportContent, key)) {\n            //     if (!reportContent[key].status) {\n            //       delete dataArray[reportContent[key].key];\n            //     }\n            //   }\n            // }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n      }\n    }\n    return arrayNew;\n  };\n\n  const resetReportContent = (currentState: boolean) => {\n    let newArray: claimReportContentInterface[] = reportContent;\n    for (const key in newArray) {\n      if (isChangeAllowed(newArray[key].key)) {\n        newArray[key].status = !currentState;\n      }\n    }\n\n    setReportContent(newArray);\n    setSelectAll(!currentState);\n    updateClaimToPrint();\n  };\n\n  const isChangeAllowed = (key: claimReportContentKeyInterface): boolean => {\n    if (\n      key === claimReportContentKeyInterface.names ||\n      key === claimReportContentKeyInterface.decision ||\n      key === claimReportContentKeyInterface.claim_session ||\n      key === claimReportContentKeyInterface.claim_type ||\n      key === claimReportContentKeyInterface.date\n    ) {\n      return false;\n    }\n    return true;\n  };\n\n  const FC_GeneratePDF = () => {\n    if (!document.querySelectorAll(\"#report_content tbody tr\").length) {\n      props.PushPopupAlert({\n        title: `Can't generate Report of empty Data`,\n        theme: PopupAlertTheme.warning,\n      });\n      return;\n    }\n\n    if (thisPeriod) {\n      const table: HTMLElement | null =\n        document.getElementById(\"report_content\");\n      const reportSettings: reportSettingsInterface = {\n        doneBy: props.auth.user.fname + \" \" + props.auth.user.lname,\n        title: \"Claim Report\",\n        subjectTitle: \"Claim type\",\n        subject:\n          props.claiming.selectedClaimType === \"all\"\n            ? \"All Types\"\n            : props.claiming.selectedClaimType,\n        period: thisPeriod.session_plan_name,\n        footer: \"Online Recruitment\",\n        institute:\n          thisEducation === \"all\"\n            ? \"All institute\"\n            : thisEducation.education_category_title,\n      };\n      table && generatePDF(reportSettings, table, setDownloading);\n    }\n  };\n\n  const FC_FilterClaims = (\n    allClaims: ClaimToPrintInterface[],\n    claimType: PlansTypeKeys | \"all\",\n    claimLevel: number | \"all\",\n    institute: education_category | \"all\"\n  ): ClaimToPrintInterface[] => {\n    let result: ClaimToPrintInterface[] = allClaims;\n    if (claimType !== \"all\") {\n      result = result.filter((item) => item.claim_type === claimType);\n    }\n    if (claimLevel !== \"all\") {\n      result = result.filter((item) => item.claim_level === claimLevel);\n    }\n\n    if (institute !== \"all\") {\n      result = result.filter(\n        (item) =>\n          item.education_category === null ||\n          item.education_category === institute.education_institute_id\n      );\n    }\n\n    return result;\n  };\n\n  return (\n    <Fragment>\n      <SideNavigation>\n        <div className=\"flex flex-col mb-4\">\n          <span className=\"text-sm text-gray-600 mb-2\">\n            Education categories:\n          </span>\n          {props.schoolLevels.education_categories === null ||\n          loadingInstitutes ? (\n            <Loading />\n          ) : props.schoolLevels.education_categories.length === 0 ? (\n            <span>No result found</span>\n          ) : (\n            <Fragment>\n              <div\n                onClick={() => setThisEducation(\"all\")}\n                className={`border rounded px-2 py-2 mb-2 cursor-pointer ${\n                  thisEducation === \"all\"\n                    ? \"bg-blue-600 text-white hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                    : \"hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                } font-bold flex flex-row items-center gap-2`}\n              >\n                {thisEducation === \"all\" ? (\n                  <MdRadioButtonChecked />\n                ) : (\n                  <MdRadioButtonUnchecked />\n                )}\n                <span>All</span>\n              </div>\n              {props.schoolLevels.education_categories.map((item, i) => (\n                <div\n                  onClick={() => setThisEducation(item)}\n                  key={i + 1}\n                  className={`border rounded px-2 py-2 mb-2 cursor-pointer ${\n                    thisEducation !== \"all\" &&\n                    thisEducation.education_institute_id ===\n                      item.education_institute_id\n                      ? \"bg-blue-600 text-white hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                      : \"hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                  } font-bold flex flex-row items-center gap-2`}\n                >\n                  {thisEducation !== \"all\" &&\n                  thisEducation.education_institute_id ===\n                    item.education_institute_id ? (\n                    <MdRadioButtonChecked />\n                  ) : (\n                    <MdRadioButtonUnchecked />\n                  )}\n                  <span>{item.education_category_title}</span>\n                </div>\n              ))}\n            </Fragment>\n          )}\n        </div>\n        <div className=\"\">\n          <div className=\"text-gray-600 text-sm mb-2\">Selected period:</div>\n          <div\n            onClick={() => setSelectPeriod(true)}\n            className=\"font-bold bg-blue-50 border border-blue-200 rounded py-2 cursor-pointer text-xs px-2 hover:underline  text-blue-600  mb-4 w-full flex flex-row items-center animate__animated animate__zoomIn\"\n          >\n            {thisPeriod !== null\n              ? `${capitalizeFirstWord(thisPeriod.session_plan_name)} - ${\n                  thisPeriod.period\n                }`\n              : \"Filter by period\"}\n            <FiEdit className=\"text-3xl text-blue-600\" />\n          </div>\n        </div>\n        <div className=\"pt-1\">\n          <div className=\"text-sm text-gray-700 pb-2 pt-2\">Claim types:</div>\n          {props.claiming.claimTypes === null ||\n          FC_ClaimData(props.claiming.allClaims) === null ? (\n            <Loading />\n          ) : (\n            ClaimTypes(FC_ClaimData(props.claiming.allClaims)!).map(\n              (item, index: number) => (\n                <div\n                  onClick={() =>\n                    props.setSelectedClaimType(reportClaimType(item.type))\n                  }\n                  key={item.title + index}\n                >\n                  <MainItem\n                    title={item.title}\n                    count={item.count}\n                    active={isClaimTypeActive(\n                      props.claiming.selectedClaimType,\n                      item.type\n                    )}\n                  />\n                </div>\n              )\n            )\n          )}\n        </div>\n        <div className=\"pt-1\">\n          <div className=\"text-sm text-gray-700 pb-2 pt-2\">Claim level:</div>\n          {props.claiming.claimTypes === null ||\n          FC_ClaimData(props.claiming.allClaims) === null ? (\n            <Loading />\n          ) : (\n            ClaimLevels(FC_ClaimData(props.claiming.allClaims)!).map(\n              (item, index: number) => (\n                <div\n                  onClick={() => setThisLevel(item.level)}\n                  key={item.title + index}\n                >\n                  <MainItem\n                    title={item.title}\n                    count={item.count}\n                    active={item.level === thisLevel}\n                  />\n                </div>\n              )\n            )\n          )}\n        </div>\n      </SideNavigation>\n      <section>\n        {/* REPORT TITLE ============================================ */}\n        <div className=\"grid md:grid-cols-12\">\n          <div className=\"col-span-8\">\n            <div className=\"mt-4 mx-4 flex flex-col gap-1\">\n              <span className=\"text-3xl font-bold text-gray-700\">\n                Claim report\n              </span>\n            </div>\n          </div>\n          <div className=\"col-span-4\">\n            <div className=\"float-right mt-2\">\n              {props.claiming.allClaims && props.claiming.allClaims.length > 0 && (\n                <div className=\"flex flex-row items-center justify-end font-bold mb-2\">\n                  <BiExport className=\"text-2xl text-gray-500\" />\n                  <span className=\"text-gray-500\">Export as</span>\n                  <button\n                    className=\"px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200\"\n                    disabled={loading}\n                    onClick={() => {\n                      updateClaimToPrint();\n                      setGenerateReportModal({\n                        reportType: \"EXCEL\",\n                        status: true,\n                      });\n                    }}\n                  >\n                    EXCEL\n                  </button>\n                  <button\n                    className={`px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200 ${\n                      downloading && \"cursor-wait\"\n                    }`}\n                    onClick={() => FC_GeneratePDF()}\n                    disabled={loading || downloading}\n                  >\n                    PDF\n                  </button>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n        {/* END REPORT TITLE ============================================ */}\n        <div className=\"bg-white my-4\">\n          <div className=\"w-full px-2 py-2\">\n            <input\n              onChange={(e) => setSearchInput(e.target.value)}\n              type=\"text\"\n              value={searchInput}\n              placeholder=\"Search...\"\n              className=\"w-full bg-gray-100 py-2 px-3 rounded focus:border-gray-800\"\n              disabled={\n                props.claiming.allClaims === null ||\n                props.claiming.claimTypes === null ||\n                FC_ClaimData(props.claiming.allClaims) === null ||\n                periodChanged\n              }\n            />\n          </div>\n          <table className=\"w-full shadow\" id=\"report_content\">\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n              <tr>\n                <td className=\"px-2 py-2\">#</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"names\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Applicant names <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">National ID</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"gender\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Gender <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">Phone</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"claim_title\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Claim Title <BiSort />\n                  </div>\n                </td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"claim_type\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Claim Type <BiSort />\n                  </div>\n                </td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"claim_level\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Claim Level <BiSort />\n                  </div>\n                </td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"decision\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Status <BiSort />\n                  </div>\n                </td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"date\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Date <BiSort />\n                  </div>\n                </td>\n              </tr>\n            </thead>\n            <tbody>\n              {props.claiming.allClaims === null ||\n              props.claiming.claimTypes === null ||\n              periodChanged ? (\n                <TableLoading cols={10} />\n              ) : FC_ClaimData(props.claiming.allClaims) === null ? (\n                <TableLoading cols={10} />\n              ) : FC_FilterClaims(\n                  FC_ClaimData(props.claiming.allClaims)!,\n                  props.claiming.selectedClaimType,\n                  thisLevel,\n                  thisEducation\n                ).length === 0 ? (\n                <tr>\n                  <td colSpan={10} className=\"px-2 py-2\">\n                    <div className=\"flex flex-col text-gray-400 items-center justify-center bg-gray-100 rounded py-10\">\n                      <ImFilesEmpty className=\"text-8xl text-gray-400 mb-2 animate__animated animate__shakeX\" />\n                      <span className=\"text-sm font-bold\">\n                        No result found! Please try to search again\n                      </span>\n                      <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n                        <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                          <li\n                            onClick={() => setSelectPeriod(true)}\n                            className=\"underline text-gray-500 cursor-pointer\"\n                          >\n                            Filter by period\n                          </li>\n                          <li className=\"text-gray-400 italic\">or</li>\n                          <li className=\"text-gray-500\">\n                            Filter by Claim type\n                          </li>\n                          <li className=\"text-gray-400 italic\">or</li>\n                          <li className=\"text-gray-500\">\n                            Filter by Claim Level\n                          </li>\n                        </ul>\n                      </div>\n                    </div>\n                  </td>\n                </tr>\n              ) : (\n                sortThisArray(\n                  isSorted,\n                  searchData(\n                    FC_FilterClaims(\n                      FC_ClaimData(props.claiming.allClaims)!,\n                      props.claiming.selectedClaimType,\n                      thisLevel,\n                      thisEducation\n                    ),\n                    searchInput\n                  ),\n                  sortProperty,\n                  sortOrder\n                ).map((item: ClaimToPrintInterface, i) => (\n                  <tr\n                    key={i + 1}\n                    className={`${\n                      i % 2 !== 0 ? \"bg-gray-100\" : \"bg-white\"\n                    } text-gray-600 hover:bg-blue-100 hover:text-blue-700 border-b border-gray-300 hover:border-blue-500 text-sm`}\n                  >\n                    <td className=\"px-2 py-2\">{i + 1}</td>\n                    <td className=\"px-2 py-2\">{item.names}</td>\n                    <td className=\"px-2 py-2\">{item.national_id}</td>\n                    <td className=\"px-2 py-2\">{item.gender}</td>\n                    <td className=\"px-2 py-2\">{item.phone}</td>\n                    <td className=\"px-2 py-2\">{item.claim_title}</td>\n                    <td className=\"px-2 py-2\">{item.claim_type}</td>\n                    <td className=\"px-2 py-2\">{\"Level \" + item.claim_level}</td>\n                    <td className=\"px-2 py-2\">\n                      {item.decision}\n                      {/* {capitalizeFirstLetter(item.decision)} */}\n                    </td>\n                    <td className=\"px-2 py-2\">{item.date}</td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </section>\n      {/* GENERATE DYNAMIC REPORT CONTENT MODAL */}\n      {generateReportModal !== null && generateReportModal.status === true && (\n        <Modal\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              {/* <IoBriefcase className=\"text-5xl text-gray-500\" /> */}\n              <div className=\"flex flex-col\">\n                <span className=\"font-bold text-2xl text-gray-500\">\n                  Generating Report contents\n                </span>\n                <span className=\"text-sm text-blue-600 font-normal\">\n                  Generating {generateReportModal.reportType} Report\n                </span>\n              </div>\n            </div>\n          }\n          backDrop={true}\n          theme={Themes.default}\n          close={() => setGenerateReportModal(null)}\n          backDropClose={false}\n          widthSizeClass={ModalSize.medium}\n          displayClose={true}\n          padding={{ title: true }}\n        >\n          <div className=\"px-6\">\n            <div className=\"my-2 text-base text-gray-700 sm:text-lg\">\n              <div className=\"flex flex-col\">\n                <label>Title</label>\n                <input\n                  type=\"text\"\n                  className={`text-left input-white w-20 inline-block ${\n                    formError && formError.element === \"report_title\"\n                      ? \"border-red-500\"\n                      : \"border-gray-500\"\n                  } border-2`}\n                  placeholder=\"Sub Category Title\"\n                  value={reportTitle}\n                  onChange={(e) => {\n                    setFormError(null);\n                    setReportTitle(e.target.value);\n                  }}\n                  disabled={loading}\n                />\n                {formError && formError.element === \"report_title\" && (\n                  <span className=\"text-red-500\">{formError.msg}</span>\n                )}\n              </div>\n              <div className=\"flex flex-col mt-2\">\n                <label>Report content</label>\n                <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                  {reportContent.map((item, index) => (\n                    <div\n                      key={index}\n                      className={`flex items-center gap-1 ${\n                        isChangeAllowed(item.key)\n                          ? \"cursor-pointer\"\n                          : \"cursor-not-allowed\"\n                      }`}\n                      onClick={() =>\n                        isChangeAllowed(item.key) &&\n                        updateReportContent(item.key)\n                      }\n                      title={\n                        !isChangeAllowed(item.key)\n                          ? \"Required for every report!\"\n                          : \"\"\n                      }\n                    >\n                      {item.status ? (\n                        <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                      ) : (\n                        <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                      )}\n                      <span>{item.title}</span>\n                    </div>\n                  ))}\n                </div>\n                {formError && formError.element === \"report_content\" && (\n                  <span className=\"text-red-500\">{formError.msg}</span>\n                )}\n              </div>\n            </div>\n            <div className=\"flex justify-between mb-2 mt-4\">\n              <div\n                className={`flex items-center gap-1 cursor-pointer`}\n                onClick={() => resetReportContent(selectAll)}\n              >\n                {selectAll ? (\n                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                ) : (\n                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                )}\n                <span>Select all</span>\n              </div>\n\n              {claimToPrint && !loading && (\n                <ExportToExcel\n                  fileData={claimToPrint}\n                  fileName={reportTitle}\n                  btnName=\"Generate\"\n                />\n              )}\n            </div>\n          </div>\n        </Modal>\n      )}\n      {/* END GENERATE DYNAMIC REPORT CONTENT MODAL */}\n      {selectPeriod && (\n        <Modal\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              <MdHistory className=\"text-5xl text-blue-600\" />\n              <span className=\"flex flex-col\">Choose a period</span>\n            </div>\n          }\n          backDrop={true}\n          theme={Themes.default}\n          close={() => thisPeriod !== null && setSelectPeriod(false)}\n          backDropClose={true}\n          widthSizeClass={ModalSize.extraLarge}\n          displayClose={true}\n          padding={{ title: true }}\n        >\n          <ChooseSession\n            allSession={props.application_sessions}\n            setSelectSession={(value: SessionPlanInterface | \"all\") => {\n              value !== \"all\" && setThisPeriod(value);\n              value !== \"all\" && onPeriodChange(value._id);\n              value !== \"all\" && setSelectPeriod(false);\n            }}\n            chooseAll={false}\n            currentSelected={thisPeriod ? thisPeriod : \"all\"}\n          />\n        </Modal>\n      )}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  sessionPlan,\n  claiming,\n  document,\n  schoolLevels,\n}: StoreState): {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n} => {\n  return {\n    auth: auth,\n    application_sessions: sessionPlan.allSessionPlans,\n    claiming,\n    documentReducer: document,\n    schoolLevels,\n  };\n};\n\nexport const ClaimingReport = connect(mapStateToProps, {\n  getAllClaims,\n  GetClaimingTypes,\n  getAllApplications,\n  GetAllSessionPlans,\n  loadEducationCategories,\n  setSelectedClaimType,\n  PushPopupAlert,\n})(_ClaimingReport);\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdCancel, MdInfoOutline } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { FC_ClaimValidationSocketDataType } from \".\";\nimport {\n  Auth,\n  loadQuestionTypes,\n  PushPopupAlert,\n  questionTypesStoreInterface,\n  Socket,\n} from \"../../../actions\";\nimport { evaluateClaim, FC_CompleteClaim } from \"../../../actions/claiming\";\nimport { AnswersDetails } from \"../../../components/AnswersDetails/AnswersDetails\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimExamResultsDetails,\n  claimReasonInterface,\n  ClaimStatus,\n  ClaimTypesInterfaceAPI,\n  course,\n  Events,\n} from \"../../../interfaces\";\nimport { ExamAnswerSheetDone } from \"../../../interfaces/exam\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { showDate } from \"../../../utils/functions\";\nimport { claimShowAnswer } from \"../Candidate/ExaminationFormView\";\nimport { isClaimEvaluated } from \"../ClaimDocView\";\nimport { claimResponseBody } from \"./AdminClaimDocView\";\n\nenum viewTabs {\n  profile = \"Applicant Profile\",\n  exam = \"Exam Details\",\n}\n\ntype AdminClaimExamViewProps = {\n  thisExamSheet: ClaimExamResultsDetails;\n  thisExam: course;\n  thisClaim: CandidateClaimInterface;\n  claimTypes: ClaimTypesInterfaceAPI[];\n  claimReasons: claimReasonInterface[] | null;\n\n  // REDUX ==================\n  auth: Auth;\n  questionTypes: questionTypesStoreInterface;\n  evaluateClaim: Function;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  PushPopupAlert: Function;\n  FC_CompleteClaim: Function;\n  socket: Socket;\n};\n\nconst AdminClaimExamView: React.FC<AdminClaimExamViewProps> = (props) => {\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n  const [loading, setLoading] = useState(true);\n  const [actionTaken, setActionTaken] = useState<ClaimDecisionStatus | null>(\n    null\n  );\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [responseMsg, setResponseMsg] = useState<string>(\"\");\n  const [marks, setMarks] = useState<number>(0);\n  const [selectedTab, setSelectedTab] = useState<viewTabs>(viewTabs.profile);\n\n  useEffect(() => {\n    if (\n      props.questionTypes.questionTypes === null ||\n      (props.questionTypes.questionTypes.length === 0 && loading)\n    ) {\n      props.loadQuestionTypes(setLoading);\n    } else if (loading) {\n      setLoading(false);\n    }\n  }, [loading, props]);\n\n  if (loading || props.questionTypes.questionTypes === null) {\n    return <Loading />;\n  }\n\n  const FC_SocketServeAction = (data: FC_ClaimValidationSocketDataType) => {\n    props.socket.socket.emit(Events.CLAIMING_CHANGE_SERVER, data);\n  };\n\n  const handleVerify = async () => {\n    if (!actionTaken) {\n      setFormError({\n        element: \"action\",\n        msg: \"Action is required!\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    if (\n      actionTaken === ClaimDecisionStatus.ACCEPTED &&\n      (marks <= 0 || marks > 100)\n    ) {\n      setFormError({\n        element: \"marks\",\n        msg: \"Invalid marks, marks must be between 1 and 10\",\n      });\n\n      return setLoadingRequest(false);\n    }\n\n    if (isEmptyOrSpaces(responseMsg)) {\n      setFormError({\n        element: \"comment\",\n        msg: \"Reason of rejection is required\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    let subClaim = props.thisClaim.claims.find(\n      (item) => item.level === props.thisClaim.claim_level\n    );\n\n    if (subClaim) {\n      setLoadingRequest(true);\n      const api_body: claimResponseBody = {\n        sub_claim_id: subClaim._id,\n        evaluation_comment: responseMsg,\n        evaluated_by: props.auth.user.user_id,\n        decision_taken_status: actionTaken,\n        evaluator_name: props.auth.user.fname + \" \" + props.auth.user.lname,\n        evaluator_email: props.auth.user.email,\n      };\n\n      try {\n        const res = await axios.put<CandidateClaimInterface>(\n          `${API.CLAIMING}/user/evaluate/${props.thisClaim._id}`,\n          api_body\n        );\n        if (res) {\n          console.log({ evaluate_claim_res: res });\n          props.evaluateClaim(res.data);\n          FC_SocketServeAction({\n            claim_id: res.data._id,\n            actionType: \"validated\",\n          });\n          // COMPLETE CLAIM ON LEVEL 2 =======================\n          FC_CompleteClaim(props.thisClaim);\n          // REVALIDATED DOCUMENT IF IT IS APPROVED =========================\n          if (actionTaken === ClaimDecisionStatus.ACCEPTED) {\n            await handleMarksAddition();\n          }\n          props.PushPopupAlert({\n            title: `Claim responded successfully!`,\n            theme: PopupAlertTheme.success,\n          });\n          // setDocumentId(\"null\");\n          setResponseMsg(\"\");\n          setActionTaken(null);\n        }\n      } catch (error) {\n        console.error(error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      setLoadingRequest(false);\n    }\n  };\n\n  const FC_CompleteClaim = (this_claim: CandidateClaimInterface) => {\n    if (this_claim.claim_level === 2) {\n      props.FC_CompleteClaim((status: boolean, msg: string) => {\n        setLoadingRequest(status);\n        if (!isEmptyOrSpaces(msg)) {\n          props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    }\n  };\n\n  const handleMarksAddition = async () => {\n    try {\n      await axios.put(`${API.DO_EXAM}/answersheet/user/marks/update`, {\n        answer_sheet_id: props.thisClaim.claiming_on_id,\n        marks: marks,\n      });\n    } catch (error) {\n      console.error(error);\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  // const getAnswersByQuestion = (question_id: string): ClaimGetUserAnswers[] => {\n  //   return props.thisExamSheet.user_answers.filter(\n  //     (item) => item.question === question_id\n  //   );\n  // };\n\n  const claimCandidateAnswers = (): ExamAnswerSheetDone[] => {\n    let result: ExamAnswerSheetDone[] = [\n      {\n        exam_location: props.thisExamSheet.exam_location,\n        questions: props.thisExamSheet.questions,\n        user_answers: props.thisExamSheet.user_answers,\n        user: props.thisExamSheet.user,\n        period: props.thisExamSheet.period,\n        course: props.thisExamSheet.course,\n        exam_paper: props.thisExamSheet.exam_paper,\n        user_status: props.thisExamSheet.user_status,\n        used_duration: props.thisExamSheet.used_duration,\n        total_marks: props.thisExamSheet.total_marks,\n        number_of_question_answered:\n          props.thisExamSheet.number_of_question_answered,\n        // start_time: string,\n        // end_time: string,\n        exam_total_marks: props.thisExamSheet.exam_total_marks,\n        exam_start_time: props.thisExamSheet.exam_start_time,\n        exam_end_time: props.thisExamSheet.exam_end_time,\n        exam_date: props.thisExamSheet.exam_date,\n        status: props.thisExamSheet.status,\n        createdAt: props.thisExamSheet.createdAt,\n        updatedAt: props.thisExamSheet.updatedAt,\n        disability: false,\n        gender: \"\",\n        in_education: false,\n        position: \"\",\n        answer_sheet_id: props.thisExamSheet.answer_sheet_id,\n      },\n    ];\n    // props.thisExamSheet\n\n    return result;\n  };\n\n  return (\n    <section className=\"\">\n      {/* #################### VIEW TABS ################################## */}\n      <div className=\"flex flex-row items-center mx-4\">\n        {Object.values(viewTabs).map((item, i) => (\n          <div\n            key={i}\n            onClick={() => setSelectedTab(item)}\n            className={`animate__animated ${\n              selectedTab === item\n                ? \"bg-blue-100 border-blue-600 text-blue-600 animate__zoomIn\"\n                : \"bg-white border-white text-gray-600\"\n            } hover:bg-blue-100 px-4 py-2 cursor-pointer font-bold border-b-4 hover:border-blue-600 hover:text-blue-600 rounded-t mt-1 mr-1`}\n          >\n            {item}\n          </div>\n        ))}\n      </div>\n      {/* #################### END VIEW TABS ################################## */}\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          {/* DISPLAY POSITION ==================================================== */}\n          {selectedTab === viewTabs.exam && (\n            <section className=\"w-full my-1 animate__animated animate__fadeIn rounded\">\n              <div className=\"bg-white w-full rounded p-2 mb-2\">\n                <AnswersDetails\n                  showAnswers={true}\n                  exam_id={claimShowAnswer(\n                    props.thisExamSheet,\n                    props.thisExam.course_name\n                  )}\n                  allAnswers={claimCandidateAnswers()}\n                  user_id={props.thisExamSheet.user}\n                />\n              </div>\n            </section>\n          )}\n          {/* END DISPLAY POSITION ==================================================== */}\n          {/* -------------------------------------------------------------------------------- */}\n          {/* DISPLAY PROFILE ==================================================== */}\n          {selectedTab === viewTabs.profile && (\n            <section className=\"w-full my-2 animate__animated animate__fadeIn rounded\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center gap-2\">\n                  <span className={`italic text-gray-600`}>Names:</span>\n                  <span className=\"text-gray-800 font-bold text-xl\">\n                    {props.thisClaim.user.user_info.fname +\n                      \" \" +\n                      props.thisClaim.user.user_info.lname}\n                  </span>\n                </div>\n              </div>\n            </section>\n          )}\n          {/* END DISPLAY PROFILE ==================================================== */}\n          {selectedTab === viewTabs.profile && (\n            <div className=\"\">\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Email:</span>\n                <span className=\"text-gray-800 font-bold text-lg\">\n                  {props.thisClaim.user.email}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Phone:</span>\n                <span className=\"text-gray-800 font-bold text-lg\">\n                  {props.thisClaim.user.phone_number}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Gender:</span>\n                <span className=\"text-gray-800 font-bold text-lg\">\n                  {props.thisClaim.user.user_info.sex === \"M\"\n                    ? \"Male\"\n                    : \"Female\"}\n                </span>\n              </div>\n            </div>\n          )}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVEL 1 DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section\n              className=\"flex flex-col px-2 pt-3\"\n              key={index + claim._id}\n            >\n              <div className=\"text-gray-700 italic font-bold\">\n                Claim Comment (level {index + 1})\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2 mt-1 border rounded px-2 py-1 bg-gray-50\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-600 text-xs\">\n                  {showDate(claim.createdAt)}\n                  {/* {showDate(claim.createdAt) +\n                    \" at \" +\n                    moment.unix(claim.date_created).format(\"MM/DD/YYYY\")} */}\n                </span>\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-700 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    {/* <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div> */}\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n            </section>\n          ))}\n        {/* END CLAIM LEVEL 1 DETAILS ==================================================== */}\n      </div>\n\n      {/* FOOTER INITIAL ========================================== */}\n      {!actionTaken && (\n        <section className=\"flex items-center justify-between bg-gray-50 rounded mt-3\">\n          {/* SHOWING STATUS ===================================== */}\n          <div className=\"mx-4 my-4\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n          </div>\n\n          {props.thisClaim.last_claim_status === ClaimStatus.PENDING && (\n            <div className=\"flex items-center gap-2 px-2\">\n              <button\n                className={`px-4 py-2 font-semibold text-red-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-red-700 hover:bg-red-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.REJECTED);\n                }}\n              >\n                <MdCancel className=\"w-5 h-5\" />\n                <span>Reject</span>\n              </button>\n              <button\n                className={`px-4 py-2 font-semibold text-blue-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-blue-700 hover:bg-blue-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.ACCEPTED);\n                }}\n              >\n                <FaRegCheckCircle className=\"w-5 h-5\" />\n                <span>Accept</span>\n              </button>\n            </div>\n          )}\n        </section>\n      )}\n      {/* END FOOTER INITIAL ========================================== */}\n\n      {/* ======================================================== */}\n      {/* FOOTER RESPONSE ========================================== */}\n      {actionTaken && (\n        <section className=\"my-5 overflow-x-auto\">\n          <div className=\"italic text-gray-700 text-base my-1 mx-2\">\n            Selected decision:{\" \"}\n            <span\n              className={`font-semibold text-lg ${\n                actionTaken === ClaimDecisionStatus.ACCEPTED\n                  ? \"text-blue-700\"\n                  : \"text-yellow-800\"\n              }`}\n            >\n              {actionTaken === ClaimDecisionStatus.ACCEPTED\n                ? \"Approved\"\n                : \"Rejected\"}\n            </span>\n          </div>\n          {/* right part */}\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full space-y-1\">\n              {actionTaken === ClaimDecisionStatus.ACCEPTED && (\n                <div className=\"flex items-center justify-end w-full gap-2\">\n                  <span className=\"font-semibold\">Addition marks</span>\n                  <div className=\"px-2\">\n                    <input\n                      placeholder={`Addition marks`}\n                      className={`border border-${\n                        formError && formError.element === \"marks\"\n                          ? \"red\"\n                          : \"gray\"\n                      }-400 rounded px-3 py-1 w-auto focus:outline-none`}\n                      value={marks}\n                      onChange={(e) => {\n                        setMarks(Number(e.target.value));\n                        setFormError(null);\n                      }}\n                      disabled={loadingRequest}\n                    />\n                    {formError && formError.element === \"marks\" && (\n                      <p className=\"text-red-800\">{formError.msg}</p>\n                    )}\n                  </div>\n                </div>\n              )}\n              <div className=\"w-full px-2\">\n                <textarea\n                  placeholder={`Reason of your decision...`}\n                  cols={50}\n                  rows={actionTaken === ClaimDecisionStatus.ACCEPTED ? 2 : 3}\n                  className={`border border-${\n                    formError && formError.element === \"comment\"\n                      ? \"red\"\n                      : \"gray\"\n                  }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                  style={{ resize: \"none\" }}\n                  value={responseMsg}\n                  onChange={(e) => {\n                    setResponseMsg(e.target.value);\n                    setFormError(null);\n                  }}\n                  disabled={loadingRequest}\n                ></textarea>\n                {formError && formError.element === \"comment\" && (\n                  <p className=\"text-red-800\">{formError.msg}</p>\n                )}\n              </div>\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  setResponseMsg(\"\");\n                  setActionTaken(null);\n                  setFormError(null);\n                }}\n                disabled={loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={loadingRequest}\n                onClick={() =>\n                  window.confirm(\n                    `Are you sure you want to ${\n                      actionTaken === ClaimDecisionStatus.ACCEPTED\n                        ? \"approve\"\n                        : \"rejected\"\n                    } this document?`\n                  ) && handleVerify()\n                }\n              >\n                {loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n          {/* end right part */}\n        </section>\n      )}\n      {/* END FOOTER RESPONSE ========================================== */}\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  questionTypes,\n  socket,\n}: StoreState): {\n  auth: Auth;\n  questionTypes: questionTypesStoreInterface;\n  socket: Socket;\n} => {\n  return {\n    auth,\n    questionTypes,\n    socket,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    loadQuestionTypes,\n    evaluateClaim,\n    PushPopupAlert,\n    FC_CompleteClaim,\n  })(AdminClaimExamView)\n);\n","import React from \"react\";\nimport { AiOutlineFullscreen } from \"react-icons/ai\";\nimport { BiZoomIn, BiZoomOut } from \"react-icons/bi\";\nimport { CgImage } from \"react-icons/cg\";\nimport { ImFolderOpen } from \"react-icons/im\";\nimport { MdClose } from \"react-icons/md\";\nimport ViewPDF from \"../../../components/ViewPDF/ViewPDF\";\nimport { TableCandidatesInterface } from \"../../../interfaces/document_validation\";\nimport { API } from \"../../../utils/api\";\nimport {\n  fullScreen,\n  getFileType,\n  isFileImage,\n  zoomInOut,\n} from \"../../../utils/functions\";\nimport NoSession from \"../../SessionSettings/NoSession\";\n\ninterface FooterInitialPropInterface {\n  doc: TableCandidatesInterface;\n  setDocId: (data: string) => void;\n  close: (value: string) => void;\n}\n\nconst FooterInitial: React.FC<FooterInitialPropInterface> = (\n  props\n): JSX.Element => {\n  return (\n    <div className=\"w-full flex md:flex-col flex-col justify-between items-start gap-2\">\n      {/* left part */}\n      <div className=\"flex items-center gap-4 w-full\">\n        {/* doc title & status */}\n        <section className=\"p-3 w-full\">\n          {/* --------------------------------- */}\n          <div className=\"flex items-center gap-2 border-b-2 my-2 py-1\">\n            <ImFolderOpen className=\"text-blue-600 text-xl\" />\n            <h2 className=\"uppercase tracking-wide text-xl font-semibold text-gray-700\">\n              Document Decision Re-Override\n            </h2>\n          </div>\n          <div className=\"flex flex-row items-start justify-left gap-2 mb-2\">\n            <span className=\"text-gray-500 italic mt-1\">Doc Title: </span>\n            <span className=\"font-bold text-2xl\">\n              {props.doc.main_doc_title}\n            </span>\n          </div>\n          <div className=\"flex flex-row items-center justify-left gap-2 mb-2\">\n            <span className=\"text-gray-500 italic\">Names: </span>\n            <span className=\"font-medium text-lg\">\n              {props.doc.fname + \" \" + props.doc.lname}\n            </span>\n          </div>\n          <section className=\"animate__animated animate__fadeIn\">\n            <div className=\"flex flex-row items-center justify-left gap-2 mb-2\">\n              <span className=\"text-gray-500 italic\">National ID: </span>\n              <span className=\"font-medium text-lg\">{props.doc.n_id}</span>\n            </div>\n            <div className=\"flex flex-row items-center justify-left gap-2 mb-2\">\n              <span className=\"text-gray-500 italic\">Phone: </span>\n              <span className=\"font-medium text-lg\">\n                {props.doc.phone_number}\n              </span>\n            </div>\n            <div className=\"flex flex-row items-center justify-left gap-2 mb-2\">\n              <span className=\"text-gray-500 italic\">Email: </span>\n              <span className=\"font-medium text-lg\">{props.doc.email}</span>\n            </div>\n            {/* status */}\n            <div className=\"flex items-center gap-1\">\n              <span className=\"text-gray-500 italic\">Status:</span>\n              <span\n                className={`text-${\n                  props.doc.validation_status === \"waiting\"\n                    ? \"yellow\"\n                    : props.doc.validation_status === \"approved\"\n                    ? \"blue\"\n                    : \"red\"\n                }-700 font-medium text-lg`}\n              >\n                {props.doc.validation_status === \"waiting\"\n                  ? \"Pending\"\n                  : props.doc.validation_status === \"approved\"\n                  ? \"Approved\"\n                  : \"Rejected\"}\n              </span>\n            </div>\n            {/* end status */}\n\n            {/* comment */}\n            {props.doc.validated_by && (\n              <div className=\"w-full\">\n                <span className=\"text-gray-500 italic\">Reason:</span>\n                <p className={`text-gray-700 font-medium text-base`}>\n                  {props.doc.validated_by?.comment}\n                </p>\n              </div>\n            )}\n            {/* end comment */}\n          </section>\n\n          <div className=\"my-5 flex justify-end\">\n            <button\n              className=\"bg-gray-700 px-4 py-2 rounded font-semibold text-white inline-flex items-center space-x-2 focus:outline-none\"\n              onClick={() => props.close(\"\")}\n            >\n              <MdClose className=\"w-5 h-5\" />\n              <span>Close</span>\n            </button>\n          </div>\n        </section>\n        {/* end doc title & status */}\n      </div>\n      {/* end left part */}\n    </div>\n  );\n};\n\ninterface AppProps {\n  doc: TableCandidatesInterface;\n  setDocId: (data: string) => void;\n  close: (value: string) => void;\n}\n\ninterface AppStates {\n  isFullscreen: boolean;\n  failedToLoadFile: boolean;\n  loadingImage: boolean;\n  actionTaken: null | \"approval\" | \"rejection\";\n}\n\nclass ClaimFileView extends React.Component<AppProps, AppStates> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      isFullscreen: false,\n      failedToLoadFile: false,\n      loadingImage: true,\n      actionTaken: null,\n    };\n  }\n\n  setSetFullscreen = (value: boolean) => {\n    this.setState({ isFullscreen: value });\n  };\n\n  handleFullScreen = () => {\n    if (this.state.isFullscreen) {\n      // alert(\"closing\");\n      fullScreen(\"doc-img\", \"CLOSE\");\n      this.setSetFullscreen(false);\n    } else {\n      // alert(\"opening\");\n      this.setSetFullscreen(true);\n      fullScreen(\"doc-img\", \"OPEN\");\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"bg-gray-50 h-full md:h-screen grid grid-cols-1 md:grid-cols-3\">\n        {/* image content */}\n        {this.props.doc.files.length > 0 && this.state.loadingImage && (\n          <div className=\"col-span-2 max-h-full md:max-h-screen overflow-y-auto relative group\">\n            <div className=\"relative\">\n              {this.state.failedToLoadFile === false ? (\n                <div className=\"w-full mx-auto mt-5 px-4\">\n                  <div className=\"animate-pulse flex space-x-4\">\n                    <div className=\"flex-1 space-y-4 py-4\">\n                      <div className=\"bg-gray-300 rounded h-72 flex items-center justify-center\">\n                        <h1 className=\"text-5xl text-gray-500 font-bold\">\n                          Loading{\" \"}\n                          {isFileImage(getFileType(this.props.doc.files))\n                            ? \"image\"\n                            : \"pdf\"}\n                          ...\n                        </h1>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ) : (\n                <div className=\"px-3\">\n                  <NoSession\n                    title=\"Error\"\n                    description={\n                      isFileImage(getFileType(this.props.doc.files))\n                        ? \"Failed to load image\"\n                        : \"Failed to load pdf\"\n                    }\n                  />\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n        <div\n          className={`col-span-2 h-auto md:max-h-screen overflow-y-auto relative bg-gray-200 group ${\n            this.state.loadingImage && \"hidden\"\n          }`}\n        >\n          {/* DISPLAY IMAGE OF PDF =================================== */}\n          {this.props.doc.files.length > 0 ? (\n            isFileImage(getFileType(this.props.doc.files)) ? (\n              <div className=\"relative\">\n                <img\n                  src={API.AUTH_FILES + this.props.doc.files}\n                  alt=\"\"\n                  className={`w-full md:w-auto h-auto md:max-h-screen mx-auto ${\n                    this.state.loadingImage && \"hidden\"\n                  }`}\n                  id=\"doc-img\"\n                  onLoad={() => this.setState({ loadingImage: false })}\n                  onError={() => this.setState({ failedToLoadFile: true })}\n                  onDoubleClick={() => this.handleFullScreen()}\n                />\n              </div>\n            ) : (\n              <ViewPDF\n                file_url={API.AUTH_FILES + this.props.doc.files}\n                class_name={`w-full h-screen md:max-h-screen mx-auto ${\n                  this.state.loadingImage && \"hidden\"\n                }`}\n                frame_title={\"application PDF file view\"}\n                setLoadingFile={(e: boolean) =>\n                  this.setState({ loadingImage: e })\n                }\n                setLoadingError={(e: boolean) =>\n                  this.setState({ failedToLoadFile: e })\n                }\n              />\n            )\n          ) : (\n            <div className=\"text-center text-red-400 py-8 animate__animated animate__fadeIn\">\n              <CgImage className=\"mx-auto w-40 h-40\" />\n              <span className=\"font-semibold text-4xl\">No Files Provided</span>\n            </div>\n          )}\n          {/* END DISPLAY IMAGE OF PDF =================================== */}\n\n          {/* ------------------------------------------------------------ */}\n\n          {/* FILE VIEW CONTROLLERS =================================== */}\n          <div\n            className={`flex items-center justify-between absolute top-0 ${\n              isFileImage(getFileType(this.props.doc.files))\n                ? \"w-full\"\n                : \"w-max\"\n            } px-2 py-2`}\n          >\n            {this.props.doc.files.length > 0 &&\n              isFileImage(getFileType(this.props.doc.files)) && (\n                <div className=\"flex items-center gap-2 opacity-0 group-hover:opacity-100\">\n                  <button\n                    className=\"flex items-center bg-gray-100 justify-center h-10 w-10 rounded-full shadow-md opacity-4 cursor-pointer hover:bg-blue-50\"\n                    onClick={() => zoomInOut(\"doc-img\", \"IN\")}\n                  >\n                    <BiZoomIn className=\"h-6 w-6 text-gray-500\" />\n                  </button>\n                  <button\n                    className=\"flex items-center bg-gray-100 justify-center h-10 w-10 rounded-full shadow-md opacity-4 cursor-pointer hover:bg-blue-50\"\n                    onClick={() => zoomInOut(\"doc-img\", \"OUT\")}\n                  >\n                    <BiZoomOut className=\"h-6 w-6 text-gray-500\" />\n                  </button>\n                  <div\n                    className=\"flex items-center bg-gray-100 justify-center h-10 w-10 rounded-full shadow-md opacity-4 cursor-pointer hover:bg-blue-50\"\n                    onClick={() => fullScreen(\"doc-img\", \"OPEN\")}\n                  >\n                    <AiOutlineFullscreen className=\"h-6 w-6 text-gray-500\" />\n                  </div>\n                </div>\n              )}\n          </div>\n          {/* END FILE VIEW CONTROLLERS =================================== */}\n        </div>\n\n        {/* footer */}\n        <div>\n          {this.props.doc.files && (\n            <FooterInitial\n              doc={this.props.doc}\n              setDocId={this.props.setDocId}\n              close={this.props.close}\n            />\n          )}\n        </div>\n        {/* end footer */}\n      </div>\n    );\n  }\n}\n\nexport default ClaimFileView;\n","import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdArrowBack, MdCancel, MdInfoOutline, MdEdit } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  FC_Access,\n  PushPopupAlert,\n  reAssessApplication,\n  Socket,\n} from \"../../../actions\";\nimport { evaluateClaim, FC_CompleteClaim } from \"../../../actions/claiming\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  allClaimApplicationInterface,\n  CandidateClaimInterface,\n  ClaimCandidateDetailInterface,\n  ClaimDecisionStatus,\n  claimReasonInterface,\n  ClaimStatus,\n  ClaimTypesInterfaceAPI,\n  Events,\n  PositionAPI,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { DATE, FC_GetBase64Img, showDate } from \"../../../utils/functions\";\nimport { PositionRequirementTableInterface } from \"../../Positions/ViewPosition\";\nimport { isClaimEvaluated } from \"../ClaimDocView\";\nimport { claimResponseBody } from \"./AdminClaimDocView\";\nimport PositionDetails from \"../../CandidateApplication/ApplicationComponents/PositionDetails\";\nimport {\n  GetDocTitle,\n  TableCandidatesInterface,\n} from \"../../../interfaces/document_validation\";\nimport { UserDocumentsInterface } from \"../../../shared/interfaces\";\nimport { IoDocumentOutline } from \"react-icons/io5\";\nimport ClaimFileView from \"./ClaimFileView\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport { UserAccessList } from \"../../../utils/auth_access\";\nimport { FC_ClaimValidationSocketDataType } from \".\";\n\nexport const FC_AdminApplicationPositionDistinctCategory = (\n  thisPosition: PositionAPI,\n  documentCategories: DocumentReducerInterface\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n  let requirements = thisPosition.requirements;\n  // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n  for (let req in requirements) {\n    let thisRequirements = requirements[req];\n    // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisCategory = documentCategories.documentCategory\n      ? documentCategories.documentCategory.find(\n          (item) =>\n            item.user_detail_category_id ===\n            thisRequirements.category.user_detail_category_id\n        ) && {\n          title: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.title,\n          user_detail_category_id: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.user_detail_category_id,\n        }\n      : {\n          title: \"\",\n          user_detail_category_id:\n            thisRequirements.category.user_detail_category_id,\n        };\n    // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisSubCategory = documentCategories.documentSubCategory\n      ? documentCategories.documentSubCategory.find(\n          (item) =>\n            item.user_detail_subcategory_id ===\n            thisRequirements.subcategory.user_detail_subcategory_id\n        )\n        ? {\n            title: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.title,\n            user_detail_subcategory_id:\n              documentCategories.documentSubCategory.find(\n                (item) =>\n                  item.user_detail_subcategory_id ===\n                  thisRequirements.subcategory.user_detail_subcategory_id\n              )!.user_detail_subcategory_id,\n            category_id: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.category_id,\n          }\n        : {\n            title: \"\",\n            user_detail_subcategory_id:\n              thisRequirements.subcategory.user_detail_subcategory_id,\n            category_id: \"\",\n          }\n      : {\n          title: \"\",\n          user_detail_subcategory_id:\n            thisRequirements.subcategory.user_detail_subcategory_id,\n          category_id: \"\",\n        };\n    // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n    if (thisCategory) {\n      for (let field in thisRequirements.position_requirement) {\n        // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n        let thisField = documentCategories.documentFields\n          ? documentCategories.documentFields.find(\n              (item) =>\n                item._id === thisRequirements.position_requirement[field]._id\n            )\n            ? {\n                title: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!.title,\n                _id: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n            : {\n                title: \"\",\n                _id: thisRequirements.position_requirement[field]._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n          : {\n              title: \"\",\n              _id: thisRequirements.position_requirement[field]._id,\n              required: thisRequirements.position_requirement[field].required,\n            };\n        // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n        PositionsTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: thisField.title,\n          field_id: thisField._id,\n          required: thisField.required,\n        });\n      }\n\n      // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n      ) {\n        DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n        DistinctCategoriesTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: \"\",\n          subcategory_title: \"\",\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n\n      // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctSubCategoriesIds.includes(\n          thisSubCategory.user_detail_subcategory_id\n        )\n      ) {\n        DistinctSubCategoriesIds.push(\n          thisSubCategory.user_detail_subcategory_id\n        );\n        DistinctSubCategoriesTemp.push({\n          category_id: thisSubCategory.category_id,\n          category_title: \"\",\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n    }\n  }\n  // DistinctCategoriesIds.;\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\ntype AdminClaimAppViewProps = {\n  thisApplication: allClaimApplicationInterface;\n  thisPosition: PositionAPI;\n  documentCategories: DocumentReducerInterface;\n  thisClaim: CandidateClaimInterface;\n  claimTypes: ClaimTypesInterfaceAPI[];\n  systemPositions: PositionAPI[];\n  claimReasons: claimReasonInterface[] | null;\n  close: () => void;\n\n  // REDUX ==================\n  auth: Auth;\n  reAssessApplication: Function;\n  evaluateClaim: Function;\n  PushPopupAlert: Function;\n  FC_CompleteClaim: Function;\n  socket: Socket;\n};\n\nconst AdminClaimAppView: React.FC<AdminClaimAppViewProps> = (props) => {\n  const [viewPosition, setViewPosition] = useState<boolean>(true);\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n  const [actionTaken, setActionTaken] = useState<ClaimDecisionStatus | null>(\n    null\n  );\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [responseMsg, setResponseMsg] = useState<string>(\"\");\n  const [viewThisDocument, setViewThisDocument] = useState<string>(\"\");\n\n  const FC_SocketServeAction = (data: FC_ClaimValidationSocketDataType) => {\n    props.socket.socket.emit(Events.CLAIMING_CHANGE_SERVER, data);\n  };\n\n  const handleVerify = async () => {\n    if (!actionTaken) {\n      setFormError({\n        element: \"action\",\n        msg: \"Action is required!\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    if (isEmptyOrSpaces(responseMsg)) {\n      setFormError({\n        element: \"comment\",\n        msg: \"Reason of rejection is required\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    let subClaim = props.thisClaim.claims.find(\n      (item) => item.level === props.thisClaim.claim_level\n    );\n\n    if (subClaim) {\n      setLoadingRequest(true);\n      const api_body: claimResponseBody = {\n        sub_claim_id: subClaim._id,\n        evaluation_comment: responseMsg,\n        evaluated_by: props.auth.user.user_id,\n        decision_taken_status: actionTaken,\n        evaluator_name: props.auth.user.fname + \" \" + props.auth.user.lname,\n        evaluator_email: props.auth.user.email,\n      };\n\n      console.log(\"=================claimResponseBody===================\");\n      console.log({ subClaim, api_body });\n      console.log(\"=================claimResponseBody===================\");\n\n      try {\n        const res = await axios.put<CandidateClaimInterface>(\n          `${API.CLAIMING}/user/evaluate/${props.thisClaim._id}`,\n          api_body\n        );\n        if (res) {\n          console.log(\"====================================\");\n          console.log({ evaluate_claim_res: res });\n          console.log(\"====================================\");\n          props.evaluateClaim(res.data);\n          FC_SocketServeAction({\n            claim_id: res.data._id,\n            actionType: \"validated\",\n          });\n          // COMPLETE CLAIM ON LEVEL 2 =======================\n          FC_CompleteClaim(props.thisClaim);\n          // REVALIDATED DOCUMENT IF IT IS APPROVED =========================\n          if (actionTaken === ClaimDecisionStatus.ACCEPTED) {\n            await overrideDecision();\n          }\n          props.PushPopupAlert({\n            title: `Claim responded successfully!`,\n            theme: PopupAlertTheme.success,\n          });\n          // setDocumentId(\"null\");\n          setResponseMsg(\"\");\n          setActionTaken(null);\n          props.close();\n        }\n      } catch (error) {\n        console.error(error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      setLoadingRequest(false);\n    }\n  };\n\n  const FC_CompleteClaim = (this_claim: CandidateClaimInterface) => {\n    if (this_claim.claim_level === 2) {\n      props.FC_CompleteClaim((status: boolean, msg: string) => {\n        setLoadingRequest(status);\n        if (!isEmptyOrSpaces(msg)) {\n          props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    }\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  const overrideDecision = async () => {\n    try {\n      const res = await axios.patch(\n        `${API.APPLICATION}/apply/tolerateappl/${props.thisClaim.claiming_on_id}`,\n        {\n          user_id: props.auth.user.user_id,\n          email: props.thisClaim.user.email,\n          phone_number: props.thisClaim.user.phone_number,\n          comment: responseMsg,\n          application_status: ApplicationStates.Shortlisted,\n        }\n      );\n\n      res.data &&\n        props.reAssessApplication({\n          application_id: props.thisClaim.claiming_on_id,\n          application_status: ApplicationStates.Shortlisted,\n        });\n    } catch (error) {\n      console.error({ code_error: error });\n      PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      // errorToText(error);\n    }\n    setLoadingRequest(false);\n  };\n\n  const getPositionById = (position_id: string): PositionAPI | undefined => {\n    let result = props.systemPositions.find(\n      (item) => item.position_id === position_id\n    );\n\n    return result;\n  };\n\n  const FC_DocumentInArray = (\n    docCategories: DocumentReducerInterface,\n    DocumentsData: ClaimCandidateDetailInterface\n  ): TableCandidatesInterface[] | [] => {\n    let documentsTemp: TableCandidatesInterface[] = [];\n    let details = DocumentsData.details;\n    for (let d in details) {\n      let candidate_detail: UserDocumentsInterface = DocumentsData.details[d];\n      if (\n        candidate_detail.files !== null &&\n        !isEmptyOrSpaces(candidate_detail.files)\n      ) {\n        documentsTemp.push({\n          // DATA FROM MAIN PROPERTY\n          user_id: DocumentsData._id,\n          n_id: DocumentsData.n_id ? DocumentsData.n_id : \"\",\n          fname: DocumentsData.user_info.fname,\n          lname: DocumentsData.user_info.lname,\n          phone_number: DocumentsData.phone_number,\n          district: DocumentsData.user_info.district,\n          email: DocumentsData.email,\n          // NEW DATA GENERATED BAISED ON DETAILS PROPERTY\n          main_doc_title: GetDocTitle(docCategories, candidate_detail).main,\n          // DATA FROM DETAILS PROPERTY\n          category_id: candidate_detail.category_id,\n          sub_category_id: candidate_detail.sub_category_id,\n          category_subcategory_data: candidate_detail.category_subcategory_data,\n          title: candidate_detail.title,\n          description: candidate_detail.description,\n          files: candidate_detail.files,\n          start_year: candidate_detail.start_year,\n          end_year: candidate_detail.end_year,\n          school: candidate_detail.school.title,\n          details_email: candidate_detail.email,\n          names: candidate_detail.names,\n          details_phone_number: candidate_detail.phone_number,\n          company: candidate_detail.company,\n          year: candidate_detail.year,\n          doc_id: candidate_detail.doc_id,\n          validation_status: candidate_detail.validation_status,\n          validated_by: candidate_detail.validated_by\n            ? {\n                user_id: candidate_detail.validated_by.user_id,\n                comment: candidate_detail.validated_by.comment\n                  ? candidate_detail.validated_by.comment\n                  : candidate_detail.validated_by.commet,\n                validation_status:\n                  candidate_detail.validated_by.validation_status,\n                date: candidate_detail.validated_by.date,\n              }\n            : null,\n          doc_history_status: \"\",\n          get_in_date: \"\",\n          approved: candidate_detail.approved,\n          // DATA FROM EXAMS PROPERTY\n          exams: [],\n        });\n      }\n    }\n    return documentsTemp;\n  };\n\n  const DATA_ThisPosition = getPositionById(props.thisApplication.position);\n\n  const DATA_Documents = FC_DocumentInArray(\n    props.documentCategories,\n    props.thisClaim.user\n  );\n\n  const Data_ThisDocument = DATA_Documents\n    ? DATA_Documents.find((item) => item.doc_id === viewThisDocument)\n    : undefined;\n\n  if (Data_ThisDocument) {\n    return (\n      <Modal\n        backDrop={true}\n        theme={Themes.default}\n        close={() => setViewThisDocument(\"\")}\n        backDropClose={true}\n        widthSizeClass={ModalSize.maxWidth}\n        displayClose={false}\n        padding={{\n          title: undefined,\n          body: undefined,\n          footer: undefined,\n        }}\n      >\n        <ClaimFileView\n          doc={Data_ThisDocument}\n          setDocId={(value: string) => setViewThisDocument(value)}\n          close={setViewThisDocument}\n        />\n      </Modal>\n    );\n  }\n\n  const DATA_ForEdit = props.thisClaim.claims.find(\n    (item) =>\n      item.level === 2 &&\n      item.evaluater &&\n      item.evaluater.email === props.auth.user.email\n  );\n\n  return (\n    <section>\n      <div className=\"w-full py-1 divide-y-2 space-y-4\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          {/* DISPLAY PROFILE ==================================================== */}\n          <div className=\"flex items-start mb-4 -mt-2 pb-3 px-4 bg-white\">\n            <div className=\"w-auto\">\n              <img\n                src={FC_GetBase64Img(props.thisClaim.user.user_info.photo)}\n                className=\"w-auto object-center object-cover h-32 rounded-lg\"\n                alt=\"\"\n              />\n            </div>\n            <section className=\"w-full\">\n              <div className=\"flex items-center\">\n                <div className=\"flex items-center gap-2 px-3\">\n                  <span className={`italic text-gray-600`}>Applicant:</span>\n                  <span className=\"text-gray-800 font-bold text-xl\">\n                    {props.thisClaim.user.user_info.fname +\n                      \" \" +\n                      props.thisClaim.user.user_info.lname}\n                  </span>\n                </div>\n                {false && (\n                  <button\n                    type=\"button\"\n                    className=\"bg-gray-200 hover:bg-gray-300 text-gray-700 group-hover:text-gray-800 py-1 px-2 mr-1 rounded text-sm\"\n                    onClick={() => setViewPosition(!viewPosition)}\n                  >\n                    {viewPosition ? \"Hide\" : \"More\"}\n                  </button>\n                )}\n              </div>\n              <div className=\"flex items-center gap-2 px-3\">\n                <span className={`italic text-gray-600`}>NID:</span>\n                <span className=\"text-gray-800 font-bold text-xl\">\n                  {props.thisClaim.user.n_id}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2 px-3\">\n                <span className={`italic text-gray-600`}>Sex:</span>\n                <span className=\"text-gray-800 font-bold text-xl\">\n                  {props.thisClaim.user.user_info.sex}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2 px-3\">\n                <span className={`italic text-gray-600`}>Phone:</span>\n                <span className=\"text-gray-800 font-bold text-xl\">\n                  {props.thisClaim.user.phone_number}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2 px-3\">\n                <span className={`italic text-gray-600`}>Email:</span>\n                <span className=\"text-gray-800 font-bold text-xl\">\n                  {props.thisClaim.user.email}\n                </span>\n              </div>\n            </section>\n          </div>\n          {/* DISPLAY POSITION ==================================================== */}\n          <section className=\"w-full mb-4 bg-white px-4 py-2 rounded\">\n            <h2 className=\"mx-4 text-blue-800 font-bold text-3xl\">\n              {DATA_ThisPosition\n                ? DATA_ThisPosition!.position_title\n                : \"Position not found\"}\n            </h2>\n            {DATA_ThisPosition ? (\n              <PositionDetails\n                positionDetails={DATA_ThisPosition}\n                cancel={() => {}}\n                apply={() => {}}\n                auth={props.auth}\n                showRegister={() => {}}\n                hideTools={true}\n              />\n            ) : (\n              <NoResult\n                theme={NoResultThemes.Dark}\n                value={\"Position not found!\"}\n              />\n            )}\n          </section>\n          {/* END DISPLAY POSITION ==================================================== */}\n\n          {/* -------------------------------------------------------------------------------- */}\n\n          {/* DISPLAY DOCUMENTS ==================================================== */}\n          <section className=\"bg-white rounded w-full px-4 py-2 my-3\">\n            <div className=\"\">\n              <div className=\"font-light text-4xl\">User documents</div>\n              <div>List of all documents</div>\n            </div>\n\n            <table className=\"w-full rounded shadow\">\n              {DATA_Documents !== null && DATA_Documents.length !== 0 && (\n                <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                  <tr>\n                    <td className=\"px-2 py-2\">#</td>\n                    <td className=\"px-2 py-2\">User Document</td>\n                    <td className=\"px-2 py-2\">Status</td>\n                    <td className=\"px-2 py-2\"></td>\n                  </tr>\n                </thead>\n              )}\n              <tbody>\n                {DATA_Documents && DATA_Documents.length === 0 && (\n                  <tr className=\"border-b border-gray-200\">\n                    <td colSpan={4}>\n                      <div className=\"m-3 flex items-center justify-center p-4 rounded bg-gray-100 text-center text-2xl font-light\">\n                        No documents found for this user!\n                      </div>\n                    </td>\n                  </tr>\n                )}\n                {DATA_Documents &&\n                  DATA_Documents.length > 0 &&\n                  DATA_Documents.map((doc, index) => (\n                    <tr\n                      key={doc.doc_id + index + Math.random()}\n                      className=\"border-b border-gray-200 cursor-pointer group hover:bg-gray-100\"\n                      onClick={() => setViewThisDocument(doc.doc_id)}\n                    >\n                      <td className=\"p-3 text-left whitespace-nowrap\">\n                        {index + 1}\n                      </td>\n                      <td className=\"py-3 px-3 text-left font-medium text-lg\">\n                        {doc.main_doc_title}\n                      </td>\n                      <td className=\"py-3 px-2 text-left\">\n                        <span\n                          className={`text-sm font-medium py-1 px-2 rounded align-middle ${\n                            doc.validation_status === \"approved\"\n                              ? \"bg-green-100 text-green-800\"\n                              : doc.validation_status === \"waiting\"\n                              ? \"bg-gray-200 text-black\"\n                              : \"bg-red-100 text-red-800\"\n                          }`}\n                        >\n                          {capitalizeFirstLetter(doc.validation_status)}\n                        </span>\n                      </td>\n                      <td className=\"text-right\">\n                        <button\n                          className=\"bg-blue-100 group-hover:bg-blue-600 text-blue-700 group-hover:text-white font-bold py-1 px-1 inline-flex rounded focus:outline-none\"\n                          title=\"View documents\"\n                        >\n                          <IoDocumentOutline className=\"w-5 h-5\" />\n                          View doc\n                        </button>\n                      </td>\n                    </tr>\n                  ))}\n              </tbody>\n            </table>\n          </section>\n          {/* END DISPLAY DOCUMENTS ==================================================== */}\n\n          {false && (\n            <section className=\"px-4 py-2 bg-white rounded\">\n              <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                <span className={`italic`}>Status:</span>\n                <span\n                  className={`font-bold ${\n                    props.thisClaim.previous\n                      ? props.thisClaim.previous.status ===\n                        ApplicationStates.Rejected\n                      : props.thisApplication.application_status ===\n                        ApplicationStates.Rejected\n                      ? \"text-yellow-900\"\n                      : \"text-blue-600\"\n                  } rounded px-3 py-1`}\n                >\n                  {props.thisClaim.previous\n                    ? capitalizeFirstLetter(props.thisClaim.previous.status)\n                    : capitalizeFirstLetter(\n                        props.thisApplication.application_status\n                      )}\n                </span>\n              </div>\n              {/* <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Evaluated by:</span>\n              <span className=\"font-semibold\">\n                {props.thisClaim.previous.evaluater.name}\n              </span>\n            </div> */}\n              {false && (\n                <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                  <span className={`italic`}>Session:</span>\n                  <span className=\"font-bold text-gray-900 py-1\">\n                    {props.thisApplication.application_session}\n                  </span>\n                </div>\n              )}\n              <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                <span className={`italic`}>Date:</span>\n                <span className=\"font-bold text-gray-900 py-1\">\n                  {DATE(props.thisApplication.createdAt)}\n                </span>\n              </div>\n              <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                <span className={`italic`}>Reason:</span>\n                <span\n                  className=\"font-normal\"\n                  dangerouslySetInnerHTML={{\n                    __html: props.thisClaim.previous\n                      ? props.thisClaim.previous.reason\n                      : props.thisApplication.override_by.comment,\n                  }}\n                ></span>\n              </div>\n            </section>\n          )}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVEL 1 DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section\n              className=\"flex flex-col px-4 pt-2 pb-3 rounded bg-white\"\n              key={index + claim._id}\n            >\n              <div className=\"text-gray-700 italic font-bold\">\n                Claim Comment (level {index + 1})\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2 mt-1 border rounded px-4 py-1 bg-gray-50\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-600 text-xs\">\n                  {showDate(claim.createdAt)}\n                  {/* {showDate(claim.createdAt) +\n                    \" at \" +\n                    moment.unix(claim.date_created).format(\"MM/DD/YYYY\")} */}\n                </span>\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-700 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    {FC_Access(props.auth, UserAccessList.CLAIM_VALIDATION_2)\n                      .view && (\n                      <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                        <span className={`italic`}>Evaluated by:</span>\n                        <span className=\"font-semibold\">\n                          {claim.evaluater.name}\n                        </span>\n                      </div>\n                    )}\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span\n                        className=\"font-normal\"\n                        dangerouslySetInnerHTML={{\n                          __html: claim.evaluation_comment,\n                        }}\n                      ></span>\n                    </div>\n                  </div>\n                </section>\n              )}\n            </section>\n          ))}\n        {/* END CLAIM LEVEL 1 DETAILS ==================================================== */}\n      </div>\n\n      {/* FOOTER INITIAL ========================================== */}\n      {!actionTaken && (\n        <section className=\"flex items-center justify-between bg-gray-50 rounded mt-3\">\n          {/* SHOWING STATUS ===================================== */}\n          <div className=\"mx-4 my-4\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n          </div>\n\n          {props.thisClaim.last_claim_status === ClaimStatus.PENDING && (\n            <div className=\"flex items-center gap-2 px-2\">\n              <button\n                className={`px-4 py-2 font-semibold text-gray-900 rounded inline-flex items-center space-x-2 focus:outline-none bg-gray-100 hover:bg-gray-300`}\n                onClick={() => {\n                  props.close();\n                }}\n              >\n                <MdArrowBack className=\"w-5 h-5\" />\n                <span>Back to list</span>\n              </button>\n              <button\n                className={`px-4 py-2 font-semibold text-red-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-red-700 hover:bg-red-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.REJECTED);\n                }}\n              >\n                <MdCancel className=\"w-5 h-5\" />\n                <span>Reject</span>\n              </button>\n              <button\n                className={`px-4 py-2 font-semibold text-blue-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-blue-700 hover:bg-blue-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.ACCEPTED);\n                }}\n              >\n                <FaRegCheckCircle className=\"w-5 h-5\" />\n                <span>Accept</span>\n              </button>\n            </div>\n          )}\n\n          {DATA_ForEdit && (\n            <button\n              className={`px-4 py-2 my-1 mx-3 font-semibold text-gray-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-gray-700 hover:bg-gray-800`}\n              onClick={() => {\n                setActionTaken(DATA_ForEdit.decision_taken_status);\n                setResponseMsg(DATA_ForEdit.evaluation_comment);\n              }}\n            >\n              <MdEdit className=\"w-5 h-5\" />\n              <span>Change decision</span>\n            </button>\n          )}\n        </section>\n      )}\n      {/* END FOOTER INITIAL ========================================== */}\n\n      {/* ======================================================== */}\n      {/* FOOTER RESPONSE ========================================== */}\n      {actionTaken && (\n        <section className=\"my-5 overflow-x-auto\">\n          <div className=\"flex items-center gap-1 mb-1\">\n            <div className=\"italic text-gray-700 text-base my-1 mx-2\">\n              Selected decision:{\" \"}\n              <span\n                className={`font-semibold text-lg bg-white px-3 py-1 rounded ${\n                  actionTaken === ClaimDecisionStatus.ACCEPTED\n                    ? \"text-blue-700\"\n                    : \"text-yellow-800\"\n                }`}\n              >\n                {actionTaken === ClaimDecisionStatus.ACCEPTED\n                  ? \"Approved\"\n                  : \"Rejected\"}\n              </span>\n            </div>\n            {DATA_ForEdit && (\n              <button\n                className=\"bg-yellow-400 hover:bg-yellow-500 rounded px-2 py-1 flex items-center gap-1 w-max\"\n                disabled={loadingRequest}\n                onClick={() => {\n                  if (\n                    window.confirm(\n                      `Are you sure you want to your decision from ${\n                        actionTaken === ClaimDecisionStatus.ACCEPTED\n                          ? \"Approved to Rejected\"\n                          : \"Rejected to Approved\"\n                      }?`\n                    ) === true\n                  ) {\n                    setActionTaken(\n                      actionTaken === ClaimDecisionStatus.ACCEPTED\n                        ? ClaimDecisionStatus.REJECTED\n                        : ClaimDecisionStatus.ACCEPTED\n                    );\n                  }\n                }}\n              >\n                <MdEdit /> Change\n              </button>\n            )}\n          </div>\n          {/* right part */}\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your decision...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  formError && formError.element === \"comment\" ? \"red\" : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={responseMsg}\n                onChange={(e) => {\n                  setResponseMsg(e.target.value);\n                  setFormError(null);\n                }}\n                disabled={loadingRequest}\n              ></textarea>\n              {formError && formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  setResponseMsg(\"\");\n                  setActionTaken(null);\n                  setFormError(null);\n                }}\n                disabled={loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={loadingRequest}\n                onClick={() =>\n                  window.confirm(\n                    `Are you sure you want to ${\n                      actionTaken === ClaimDecisionStatus.ACCEPTED\n                        ? \"approve\"\n                        : \"rejected\"\n                    } this document?`\n                  ) && handleVerify()\n                }\n              >\n                {loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n          {/* end right part */}\n        </section>\n      )}\n      {/* END FOOTER RESPONSE ========================================== */}\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  socket,\n}: StoreState): {\n  auth: Auth;\n  socket: Socket;\n} => {\n  return {\n    auth: auth,\n    socket,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    evaluateClaim,\n    reAssessApplication,\n    PushPopupAlert,\n    FC_CompleteClaim,\n  })(AdminClaimAppView)\n);\n","import React from \"react\";\nimport axios from \"axios\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdCancel, MdInfoOutline, MdEdit } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { adminDisplayClaimTitle, FC_ClaimValidationSocketDataType } from \".\";\nimport { Auth, FC_Access, PushPopupAlert, Socket } from \"../../../actions\";\nimport { evaluateClaim, FC_CompleteClaim } from \"../../../actions/claiming\";\nimport { verifyDocument } from \"../../../actions/document\";\nimport { VerifyDocumentInterface } from \"../../../actions/users\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  claimReasonInterface,\n  ClaimStatus,\n  ClaimTypesInterfaceAPI,\n  Events,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport {\n  DocValidationStatusInterface,\n  UserDocumentsInterface,\n} from \"../../../shared/interfaces\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport {\n  FC_GetBase64Img,\n  getFileType,\n  isFileImage,\n  showDate,\n} from \"../../../utils/functions\";\nimport { isClaimEvaluated } from \"../ClaimDocView\";\nimport ViewPDF from \"../../../components/ViewPDF/ViewPDF\";\nimport { UserAccessList } from \"../../../utils/auth_access\";\n\nexport type claimResponseBody = {\n  sub_claim_id: string;\n  evaluation_comment: string;\n  evaluated_by: string;\n  evaluator_name: string;\n  evaluator_email: string;\n  decision_taken_status: ClaimDecisionStatus;\n};\n\ntype AdminClaimDocViewProps = {\n  thisDoc: UserDocumentsInterface;\n  documentCategories: DocumentReducerInterface;\n  thisClaim: CandidateClaimInterface;\n  claimReasons: claimReasonInterface[] | null;\n  candidateId: string;\n  claimTypes: ClaimTypesInterfaceAPI[];\n  viewImage: boolean;\n  setViewImage: (value: boolean) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  actionTaken: ClaimDecisionStatus | null;\n  setActionTaken: (value: ClaimDecisionStatus | null) => void;\n  responseMsg: string;\n  setResponseMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX ==================\n  auth: Auth;\n  verifyDocument: Function;\n  evaluateClaim: Function;\n  PushPopupAlert: Function;\n  FC_CompleteClaim: Function;\n  socket: Socket;\n};\n\nconst AdminClaimDocView: React.FC<AdminClaimDocViewProps> = (props) => {\n  const FC_SocketServeAction = (data: FC_ClaimValidationSocketDataType) => {\n    props.socket.socket.emit(Events.CLAIMING_CHANGE_SERVER, data);\n  };\n\n  const handleVerify = async () => {\n    if (!props.actionTaken) {\n      props.setFormError({\n        element: \"action\",\n        msg: \"Action is required!\",\n      });\n      return props.setLoadingRequest(false);\n    }\n\n    if (isEmptyOrSpaces(props.responseMsg)) {\n      props.setFormError({\n        element: \"comment\",\n        msg: \"Reason of rejection is required\",\n      });\n      return props.setLoadingRequest(false);\n    }\n\n    let subClaim = props.thisClaim.claims.find(\n      (item) => item.level === props.thisClaim.claim_level\n    );\n\n    if (subClaim) {\n      props.setLoadingRequest(true);\n      const api_body: claimResponseBody = {\n        sub_claim_id: subClaim._id,\n        evaluation_comment: props.responseMsg,\n        evaluated_by: props.auth.user.user_id,\n        decision_taken_status: props.actionTaken,\n        evaluator_name: props.auth.user.fname + \" \" + props.auth.user.lname,\n        evaluator_email: props.auth.user.email,\n      };\n\n      try {\n        const res = await axios.put<CandidateClaimInterface>(\n          `${API.CLAIMING}/user/evaluate/${props.thisClaim._id}`,\n          api_body\n        );\n        if (res) {\n          console.log({ evaluate_claim_res: res });\n          props.evaluateClaim(res.data);\n          FC_SocketServeAction({\n            claim_id: res.data._id,\n            actionType: \"validated\",\n          });\n          // COMPLETE CLAIM ON LEVEL 2 =======================\n          FC_CompleteClaim(props.thisClaim);\n          // REVALIDATED DOCUMENT IF IT IS APPROVED =========================\n          if (props.actionTaken === ClaimDecisionStatus.ACCEPTED) {\n            await FC_DocValidation();\n          }\n          props.PushPopupAlert({\n            title: `Claim responded successfully!`,\n            theme: PopupAlertTheme.success,\n          });\n          // setDocumentId(\"null\");\n          props.setResponseMsg(\"\");\n          props.setActionTaken(null);\n        }\n      } catch (error) {\n        console.error(error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      props.setLoadingRequest(false);\n    }\n  };\n\n  const FC_CompleteClaim = (this_claim: CandidateClaimInterface) => {\n    if (this_claim.claim_level === 2) {\n      props.FC_CompleteClaim((status: boolean, msg: string) => {\n        props.setLoadingRequest(status);\n        if (!isEmptyOrSpaces(msg)) {\n          props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    }\n  };\n\n  const FC_DocValidation = async () => {\n    const api_body: VerifyDocumentInterface = {\n      user_id: props.thisClaim.user._id,\n      doc_id: props.thisClaim.claiming_on_id,\n      validation_status:\n        props.actionTaken === ClaimDecisionStatus.ACCEPTED\n          ? DocValidationStatusInterface.APPROVED\n          : DocValidationStatusInterface.REJECTED,\n      validated_by: {\n        user_id: props.auth.user.user_id,\n        comment: props.responseMsg,\n        validation_status:\n          props.actionTaken === ClaimDecisionStatus.ACCEPTED\n            ? DocValidationStatusInterface.APPROVED\n            : DocValidationStatusInterface.REJECTED,\n      },\n      in_education: false,\n      disability: false,\n      expiration_date: \"this.state.expiration_date\",\n    };\n    const api_redux: VerifyDocumentInterface = {\n      user_id: props.thisClaim.user._id,\n      doc_id: props.thisClaim.claiming_on_id,\n      validation_status:\n        props.actionTaken === ClaimDecisionStatus.ACCEPTED\n          ? DocValidationStatusInterface.APPROVED\n          : DocValidationStatusInterface.REJECTED,\n      validated_by: {\n        user_id: props.auth.user.user_id,\n        comment: props.responseMsg,\n        validation_status:\n          props.actionTaken === ClaimDecisionStatus.ACCEPTED\n            ? DocValidationStatusInterface.APPROVED\n            : DocValidationStatusInterface.REJECTED,\n        date: \"\",\n      },\n      in_education: false,\n      disability: false,\n      expiration_date: \"this.state.expiration_date\",\n    };\n\n    try {\n      const res = await axios.post<VerifyDocumentInterface>(\n        `${API.USER}/docs/validateuserdoc`,\n        api_body\n      );\n      if (res) {\n        props.verifyDocument(api_redux);\n        // await FC_shortListing(props.thisClaim.user._id);\n        // setDocumentId(\"null\");\n      }\n    } catch (error) {\n      console.error(error);\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  const FC_shortListing = async (candidate_id: string) => {\n    try {\n      const res = await axios.patch(\n        `${API.APPLICATION}/apply/doccheckshortlist/${candidate_id}`,\n        {\n          email: props.thisClaim.user.email,\n          phone_number: props.thisClaim.user.phone_number,\n        }\n      );\n      console.log({ res });\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  const DATA_ForEdit = props.thisClaim.claims.find(\n    (item) =>\n      item.level === 2 &&\n      item.evaluater &&\n      item.evaluater.email === props.auth.user.email\n  );\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full py-1 divide-y-2 space-y-2\">\n        {/* DISPLAY PROFILE ==================================================== */}\n        <div className=\"flex items-start mb-4 -mt-2 pb-3 px-4 bg-white rounded\">\n          <div className=\"w-auto\">\n            <img\n              src={FC_GetBase64Img(props.thisClaim.user.user_info.photo)}\n              className=\"w-auto object-center object-cover h-32 rounded-lg\"\n              alt=\"\"\n            />\n          </div>\n          <section className=\"w-full\">\n            <div className=\"flex items-center\">\n              <div className=\"flex items-center gap-2 px-3\">\n                <span className={`italic text-gray-600`}>Applicant:</span>\n                <span className=\"text-gray-800 font-bold text-xl\">\n                  {props.thisClaim.user.user_info.fname +\n                    \" \" +\n                    props.thisClaim.user.user_info.lname}\n                </span>\n              </div>\n            </div>\n            <div className=\"flex items-center gap-2 px-3\">\n              <span className={`italic text-gray-600`}>NID:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.thisClaim.user.n_id}\n              </span>\n            </div>\n            <div className=\"flex items-center gap-2 px-3\">\n              <span className={`italic text-gray-600`}>Sex:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.thisClaim.user.user_info.sex}\n              </span>\n            </div>\n            <div className=\"flex items-center gap-2 px-3\">\n              <span className={`italic text-gray-600`}>Phone:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.thisClaim.user.phone_number}\n              </span>\n            </div>\n            <div className=\"flex items-center gap-2 px-3\">\n              <span className={`italic text-gray-600`}>Email:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.thisClaim.user.email}\n              </span>\n            </div>\n          </section>\n        </div>\n\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col bg-white rounded mb-4 pb-3 px-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2\">\n              <span className={`italic text-gray-600`}>Title:</span>\n              <span className=\"text-gray-800 font-bold text-2xl\">\n                {/* {ClaimGetDocTitle(props.documentCategories, props.thisDoc).main} */}\n                {props.thisClaim.user.details.filter(\n                  (item) => item.validation_status !== \"waiting\"\n                ).length > 0\n                  ? adminDisplayClaimTitle(\n                      props.documentCategories,\n                      props.thisClaim.user.details.filter(\n                        (item) => item.validation_status !== \"waiting\"\n                      ),\n                      props.thisClaim\n                    )\n                  : \"-\"}\n              </span>\n            </div>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 mt-1 rounded text-sm\"\n              onClick={() => props.setViewImage(!props.viewImage)}\n            >\n              {props.viewImage ? \"Hide\" : \"View\"}\n            </button>\n          </div>\n\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span className=\"font-bold text-yellow-900 rounded px-3 py-1\">\n              {props.thisClaim.previous\n                ? capitalizeFirstLetter(props.thisClaim.previous.status)\n                : capitalizeFirstLetter(props.thisDoc.validation_status)}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisClaim.previous\n                ? props.thisClaim.previous.reason\n                : props.thisDoc.validated_by.commet}\n            </span>\n          </div>\n          {/* {props.thisClaim.previous &&\n            FC_Access(props.auth, UserAccessList.CLAIM_VALIDATION_2).view && (\n              <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                <span className={`italic`}>Evaluated by:</span>\n                <span className=\"font-bold text-yellow-900 rounded px-3 py-1\">\n                  {props.thisClaim.previous.evaluater.name}\n                </span>\n              </div>\n            )} */}\n\n          {/* DISPLAY IMAGE ==================================================== */}\n          {props.viewImage && (\n            <div className=\"w-full my-1 animate__animated animate__fadeIn\">\n              {isFileImage(getFileType(props.thisDoc.files)) ? (\n                <img\n                  src={API.AUTH_FILES + props.thisDoc.files}\n                  alt=\"Applicant document\"\n                  className={`w-full md:w-auto h-auto md:max-h-screen mx-auto`}\n                  id=\"doc-img\"\n                />\n              ) : (\n                <ViewPDF\n                  file_url={API.AUTH_FILES + props.thisDoc.files}\n                  class_name={`w-full h-screen md:max-h-screen mx-auto`}\n                  frame_title={\"application PDF file view\"}\n                />\n              )}\n            </div>\n          )}\n          {/* END DISPLAY IMAGE ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVEL 1 DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 && (\n          <div className=\"bg-white rounded mb-4 pb-3 px-4\">\n            {props.thisClaim.claims.map((claim, index) => (\n              <section className=\"flex flex-col pt-3\" key={index + claim._id}>\n                <div className=\"text-gray-700 italic font-bold\">\n                  Claim Comment (level {index + 1})\n                </div>\n                {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n                <div className=\"flex flex-col items-start gap-2 mt-1 border rounded px-4 py-1 bg-gray-50\">\n                  <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                    <MdInfoOutline />\n                    {getReasonById(props.thisClaim.default_claim_resaons)\n                      ? getReasonById(props.thisClaim.default_claim_resaons)!\n                          .reason\n                      : \"\"}\n                  </div>\n                  <p>{claim.reason}</p>\n                  <span className=\"text-gray-500 text-xs\">\n                    {showDate(claim.createdAt)}\n                  </span>\n                </div>\n                {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n\n                {isClaimEvaluated(props.thisClaim, claim.level) && (\n                  <section className=\"mt-4\">\n                    <span className=\"text-gray-700 italic font-semibold\">\n                      Response (level {index + 1})\n                    </span>\n                    <div className=\"border-t-2\">\n                      <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                        <span className={`italic`}>Status:</span>\n                        <span\n                          className={`font-bold ${\n                            claim.decision_taken_status ===\n                            ClaimDecisionStatus.REJECTED\n                              ? \"text-yellow-900\"\n                              : \"text-blue-600\"\n                          } rounded px-3 py-1`}\n                        >\n                          {capitalizeFirstLetter(\n                            claim.decision_taken_status.toLocaleLowerCase()\n                          )}\n                        </span>\n                      </div>\n                      {FC_Access(props.auth, UserAccessList.CLAIM_VALIDATION_2)\n                        .view && (\n                        <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                          <span className={`italic`}>Evaluated by:</span>\n                          <span className=\"font-semibold\">\n                            {claim.evaluater.name}\n                          </span>\n                        </div>\n                      )}\n                      <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                        <span className={`italic`}>Reason:</span>\n                        <span className=\"font-normal\">\n                          {claim.evaluation_comment}\n                        </span>\n                      </div>\n                    </div>\n                  </section>\n                )}\n              </section>\n            ))}\n          </div>\n        )}\n        {/* END CLAIM LEVEL 1 DETAILS ==================================================== */}\n      </div>\n\n      {/* FOOTER INITIAL ========================================== */}\n      {!props.actionTaken && (\n        <section className=\"flex items-center justify-between bg-gray-50 rounded mt-3\">\n          {/* SHOWING STATUS ===================================== */}\n          <div className=\"mx-4\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n          </div>\n\n          {props.thisClaim.last_claim_status === ClaimStatus.PENDING && (\n            <div className=\"flex items-center gap-2 px-2\">\n              <button\n                className={`px-4 py-2 font-semibold text-red-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-red-700 hover:bg-red-800`}\n                onClick={() => {\n                  props.setActionTaken(ClaimDecisionStatus.REJECTED);\n                }}\n              >\n                <MdCancel className=\"w-5 h-5\" />\n                <span>Reject</span>\n              </button>\n              <button\n                className={`px-4 py-2 font-semibold text-blue-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-blue-700 hover:bg-blue-800`}\n                onClick={() => {\n                  props.setActionTaken(ClaimDecisionStatus.ACCEPTED);\n                }}\n              >\n                <FaRegCheckCircle className=\"w-5 h-5\" />\n                <span>Accept</span>\n              </button>\n            </div>\n          )}\n          {DATA_ForEdit && (\n            <button\n              className={`px-4 py-2 my-1 mx-3 font-semibold text-gray-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-gray-700 hover:bg-gray-800`}\n              onClick={() => {\n                props.setActionTaken(DATA_ForEdit.decision_taken_status);\n                props.setResponseMsg(DATA_ForEdit.evaluation_comment);\n              }}\n            >\n              <MdEdit className=\"w-5 h-5\" />\n              <span>Change decision</span>\n            </button>\n          )}\n        </section>\n      )}\n      {/* END FOOTER INITIAL ========================================== */}\n\n      {/* ======================================================== */}\n      {/* FOOTER RESPONSE ========================================== */}\n      {props.actionTaken && (\n        <section className=\"my-5 overflow-x-auto\">\n          <div className=\"flex items-center gap-1 mb-1\">\n            <div className=\"italic text-gray-700 text-base my-1 mx-2\">\n              Selected decision:{\" \"}\n              <span\n                className={`font-semibold text-lg bg-white px-3 py-1 rounded ${\n                  props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                    ? \"text-blue-700\"\n                    : \"text-yellow-800\"\n                }`}\n              >\n                {props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                  ? \"Approved\"\n                  : \"Rejected\"}\n              </span>\n            </div>\n            {DATA_ForEdit && (\n              <button\n                className=\"bg-yellow-400 hover:bg-yellow-500 rounded px-2 py-1 flex items-center gap-1 w-max\"\n                disabled={props.loadingRequest}\n                onClick={() => {\n                  if (\n                    window.confirm(\n                      `Are you sure you want to your decision from ${\n                        props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                          ? \"Approved to Rejected\"\n                          : \"Rejected to Approved\"\n                      }?`\n                    ) === true\n                  ) {\n                    props.setActionTaken(\n                      props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                        ? ClaimDecisionStatus.REJECTED\n                        : ClaimDecisionStatus.ACCEPTED\n                    );\n                  }\n                }}\n              >\n                <MdEdit /> Change\n              </button>\n            )}\n          </div>\n          {/* right part */}\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your decision...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.responseMsg}\n                onChange={(e) => {\n                  props.setResponseMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setResponseMsg(\"\");\n                  props.setActionTaken(null);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() =>\n                  window.confirm(\n                    `Are you sure you want to ${\n                      props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                        ? \"approve\"\n                        : \"rejected\"\n                    } this document?`\n                  ) && handleVerify()\n                }\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n          {/* end right part */}\n        </section>\n      )}\n      {/* END FOOTER RESPONSE ========================================== */}\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  socket,\n}: StoreState): {\n  auth: Auth;\n  socket: Socket;\n} => {\n  return {\n    auth: auth,\n    socket,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    evaluateClaim,\n    verifyDocument,\n    PushPopupAlert,\n    FC_CompleteClaim,\n  })(AdminClaimDocView)\n);\n","import React, { Component, Fragment } from \"react\";\nimport { MdArrowBack, MdInfoOutline } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  FC_Access,\n  loadCourses,\n  PushPopupAlert,\n  Socket,\n} from \"../../../actions\";\nimport {\n  getAllClaims,\n  getAllApplications,\n  getClaimReasons,\n  getAllAnswers,\n} from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport { getPositions } from \"../../../actions/settings\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport TableLoading from \"../../../components/Loading/TableLoading\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport { SideNavigation } from \"../../../components/Navigation/SideNavigation\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  SessionPlanInterface,\n  PositionAPI,\n  allClaimApplicationInterface,\n  CandidateClaimInterface,\n  PlansTypeKeys,\n  ClaimDecisionStatus,\n  ClaimTypesInterface,\n  course,\n  ClaimStatus,\n  CandidateClaimTableInterface,\n  Events,\n  FC_ClaimDecision,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { UserDocumentsInterface } from \"../../../shared/interfaces\";\nimport { DATE } from \"../../../utils/functions\";\nimport { getClaimById, whichClaimStatus, whichClaimType } from \"../Candidate\";\nimport { getCourseById, getCourseIdBySheetId } from \"../Candidate/FormExamList\";\nimport ClaimHeaderTitle from \"../ClaimHeaderTitle\";\nimport AdminClaimAppView from \"./AdminClaimAppView\";\nimport AdminClaimDocView from \"./AdminClaimDocView\";\nimport AdminClaimExamView from \"./AdminClaimExamView\";\nimport AdminFilterByType, {\n  filterClaimsByClaimType,\n} from \"./AdminFilterByType\";\nimport searchData from \"../../../utils/search\";\nimport { ClaimReport } from \"./ClaimReport\";\nimport { IoBriefcase } from \"react-icons/io5\";\nimport { NavLink } from \"react-router-dom\";\nimport { IoIosDocument } from \"react-icons/io\";\nimport { HiOutlineDesktopComputer } from \"react-icons/hi\";\nimport { FaUserTie } from \"react-icons/fa\";\nimport { UserAccessList } from \"../../../utils/auth_access\";\n\nexport type FC_ClaimValidationSocketDataType = {\n  claim_id: string;\n  actionType: \"opened\" | \"closed\" | \"validated\";\n};\n\n// export const getUserDocuments = (\n//   userList: UserInterface[],\n//   user_id: String\n// ): { user: UserInterface; document: UserDocumentsInterface[] } | null => {\n//   const thisUser = userList.find((item) => item.user_id === user_id);\n//   if (thisUser) {\n//     const thisDoc = thisUser.details.filter(\n//       (item) => item.validation_status !== \"waiting\"\n//     );\n//     return { user: thisUser, document: thisDoc };\n//   }\n//   return null;\n// };\n\nexport const adminDisplayClaimTitle = (\n  documentCategories: DocumentReducerInterface,\n  candidateDocuments: UserDocumentsInterface[],\n  thisClaim: CandidateClaimInterface\n): string => {\n  let result: string = \"\";\n\n  // CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n  if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n    let thisDoc = candidateDocuments.find(\n      (item) => item.doc_id === thisClaim.claiming_on_id\n    );\n    result = thisDoc\n      ? AdminClaimGetDocTitle(documentCategories, thisDoc).main\n      : \"Document not found\";\n  }\n  // END CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n\n  return result;\n};\n\nexport const AdminClaimGetDocTitle = (\n  documentCategories: DocumentReducerInterface,\n  doc: UserDocumentsInterface\n): { category: string; sub_category: string; field: string; main: string } => {\n  let DocCategory: string = \"\",\n    DocSubCategory: string = \"\",\n    DocField: string = \"\",\n    DocTitle: string = \"\";\n  if (\n    doc.sub_category_id &&\n    doc.sub_category_id.length > 0 &&\n    documentCategories.documentSubCategory\n  ) {\n    DocTitle = documentCategories.documentSubCategory.filter(\n      (c) => c.user_detail_subcategory_id === doc.sub_category_id\n    )[0].title;\n    DocSubCategory = DocTitle;\n  } else if (\n    doc.category_id.length > 0 &&\n    documentCategories.documentCategory\n  ) {\n    DocTitle = documentCategories.documentCategory.filter(\n      (c) => c.user_detail_category_id === doc.category_id\n    )[0].title;\n    DocCategory = DocTitle;\n  }\n  if (\n    doc.category_subcategory_data.length > 0 &&\n    documentCategories.documentFields\n  ) {\n    DocField = documentCategories.documentFields.filter(\n      (c) => c._id === doc.category_subcategory_data\n    )[0].title;\n    DocTitle += \" in \" + DocField;\n  }\n\n  return {\n    category: DocCategory,\n    sub_category: DocSubCategory,\n    field: DocField,\n    main: DocTitle,\n  };\n};\n\nexport const getApplicationById = (\n  allApplications: allClaimApplicationInterface[] | null,\n  systemPositions: PositionAPI[] | null,\n  application_id: String\n): {\n  application: allClaimApplicationInterface;\n  position: PositionAPI;\n} | null => {\n  if (allApplications) {\n    let thisApplication = allApplications.find(\n      (item) => item._id === application_id\n    );\n    if (thisApplication && systemPositions) {\n      let thisPosition = systemPositions.find(\n        (item) => item.position_id === thisApplication!.position\n      );\n      if (thisPosition) {\n        return { application: thisApplication, position: thisPosition };\n      }\n    }\n  }\n  return null;\n};\n\ntype AppProps = {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  systemPositions: PositionAPI[] | null;\n  courses: course[] | null;\n  loadCourses: Function;\n  getPositions: Function;\n  getClaimReasons: Function;\n  getAllApplications: Function;\n  getAllClaims: Function;\n  getAllAnswers: Function;\n  GetAllSessionPlans: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  verifyAllDocument: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  socket: Socket;\n};\n\ntype AppState = {\n  loading: boolean;\n  loadingData: boolean;\n  thisPeriod: SessionPlanInterface | null;\n  viewClaim: boolean;\n  periodChanged: boolean;\n  claimId: string | null;\n  claimType: string | null;\n  candidateId: string | null;\n  searchClaim: string;\n  selected_claim_type: PlansTypeKeys | undefined | null;\n\n  // FOR FORM ================\n  viewImage: boolean;\n  loadingRequest: boolean;\n  actionTaken: ClaimDecisionStatus | null;\n  responseMsg: string;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  filterByStatus: \"all\" | ClaimStatus;\n  selected_title: string;\n  show_titles_filter: boolean;\n  search_title: string;\n  view_claim_report: boolean;\n  claim_level: 1 | 2;\n  choose_claim_type: boolean;\n\n  // SOCKET\n  openedClaim: string[];\n};\n\nclass Index extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingData: false,\n      thisPeriod: null,\n      viewClaim: false,\n      periodChanged: false,\n      claimId: null,\n      claimType: null,\n      candidateId: null,\n      searchClaim: \"\",\n      filterByStatus: ClaimStatus.PENDING,\n      claim_level: 1,\n      selected_claim_type: undefined,\n      choose_claim_type: false,\n\n      // FOR FORM ================\n      viewImage: true,\n      loadingRequest: false,\n      actionTaken: null,\n      responseMsg: \"\",\n      formError: null,\n      selected_title: \"\",\n      show_titles_filter: false,\n      search_title: \"\",\n      view_claim_report: false,\n\n      // FOR SOCKET ========\n      openedClaim: [],\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingData = (value: boolean) => {\n    this.setState({ loadingData: value });\n  };\n\n  setPeriodChanged = (value: boolean) => {\n    this.setState({ periodChanged: value });\n  };\n\n  setThisPeriod = (value: SessionPlanInterface | null) => {\n    this.setState({ thisPeriod: value });\n  };\n\n  setViewClaim = (value: boolean) => {\n    this.setState({ viewClaim: value });\n  };\n\n  // ------------------------------\n  setClaimId = (value: string | null) => {\n    this.setState({ claimId: value });\n  };\n  setClaimType = (value: string | null) => {\n    this.setState({ claimType: value });\n  };\n  setCandidateId = (value: string | null) => {\n    this.setState({ candidateId: value });\n  };\n  setViewImage = (value: boolean) => {\n    this.setState({ viewImage: value });\n  };\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n\n  setActionTaken = (value: ClaimDecisionStatus | null) => {\n    this.setState({ actionTaken: value });\n  };\n\n  setResponseMsg = (value: string) => {\n    this.setState({ responseMsg: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n\n  setDefaultSession = (sessions: SessionPlanInterface[]) => {\n    // SETTING ACTIVE SESSION ==========================\n    if (this.state.thisPeriod === null) {\n      let thisSession = sessions.find((item) => item.is_active === true);\n      this.setThisPeriod(thisSession ? thisSession : sessions[0]);\n      this.loadsAllClaims(\n        thisSession ? thisSession : sessions[0],\n        FC_Access(this.props.auth, UserAccessList.CLAIM_VALIDATION_2).view\n          ? 2\n          : 1,\n        undefined,\n        ClaimStatus.PENDING\n      );\n    }\n  };\n\n  setSearchClaim = (value: string) => {\n    this.setState({ searchClaim: value });\n  };\n\n  loadsAllClaims = (\n    thisSession: SessionPlanInterface,\n    level: 1 | 2,\n    claim_type: PlansTypeKeys | undefined,\n    claim_status: \"all\" | ClaimStatus\n  ) => {\n    // const status =\n    //   claim_status === ClaimStatus.EVALUATED\n    //     ? ClaimStatus.COMPLETED\n    //     : claim_status;\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    console.log(\"====================================\");\n    console.log({ type: this.state.selected_claim_type });\n    console.log(\"====================================\");\n    this.props.getAllClaims(\n      level,\n      thisSession._id,\n      claim_status,\n      (status: boolean, msg: string) => {\n        this.setLoadingData(status);\n        if (!status && msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      },\n      claim_type\n    );\n  };\n\n  loadsApplications = (application_id: string) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (\n      !this.props.claiming.allApplications.find(\n        (item) => item._id === application_id\n      )\n    ) {\n      this.props.getAllApplications(\n        application_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    }\n  };\n\n  loadsController = (file_id: string, claimType: PlansTypeKeys) => {\n    if (claimType === PlansTypeKeys.APPLICATION)\n      this.loadsApplications(file_id);\n    if (claimType === PlansTypeKeys.EXAMINATION) this.loadsAlAnswers(file_id);\n  };\n\n  loadsAlAnswers = (answersheet_id: string) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (\n      !this.props.claiming.allAnswer.find(\n        (item) => item.answer_sheet_id === answersheet_id\n      )\n    ) {\n      this.props.getAllAnswers(\n        answersheet_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    }\n  };\n\n  componentDidMount = () => {\n    // LOADING APPLICATION SESSION ====================================\n    if (this.props.application_sessions === null) {\n      this.props.GetAllSessionPlans(\n        (status: boolean, msg: string, data?: SessionPlanInterface[]) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data && data.length > 0) {\n              this.setDefaultSession(data);\n            }\n          }\n        }\n      );\n    } else if (this.props.application_sessions.length > 0) {\n      this.setDefaultSession(this.props.application_sessions);\n    }\n\n    // LOADING DOCUMENT CATEGORIES ==========================\n    if (!this.props.documentReducer.documentCategory === null) {\n      this.props.getDocumentCategory();\n      this.setLoading(false);\n    }\n\n    // LOADING DOCUMENT CLARIFICATIONS ==========================\n    if (this.props.documentReducer.documentSubCategory === null) {\n      this.props.getDocumentSubCategory();\n      this.setLoading(false);\n    }\n\n    // LOADING DOCUMENT FIELDS ==========================\n    if (this.props.documentReducer.documentFields === null) {\n      this.props.getDocumentFields();\n      this.setLoading(false);\n    }\n\n    if (this.props.systemPositions === null) {\n      this.props.getPositions((status: boolean, msg: string) => {\n        this.setLoading(status);\n        console.log({ status: status, msg: msg });\n        if (msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    }\n\n    if (this.props.claiming.claimReasons === null) {\n      this.props.getClaimReasons((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (!status) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n\n    if (\n      this.props.courses === null ||\n      (this.props.courses.length === 0 && this.state.loading)\n    ) {\n      this.props.loadCourses(this.setLoading);\n      this.setLoading(false);\n    }\n    if (FC_Access(this.props.auth, UserAccessList.CLAIM_VALIDATION_2).view) {\n      this.setState({ claim_level: 2 });\n    } else if (\n      FC_Access(this.props.auth, UserAccessList.CLAIM_VALIDATION).view\n    ) {\n      this.setState({ claim_level: 1 });\n    }\n\n    // SOCKET CONTROLLER ==========\n    this.props.socket.socket.on(\n      Events.CLAIMING_CHANGE_CLIENT,\n      (data: FC_ClaimValidationSocketDataType) => {\n        console.log(\n          \"=================DOCUMENT_VALIDATION_CLIENT===================\"\n        );\n        console.log({ data });\n        console.log(\n          \"=================DOCUMENT_VALIDATION_CLIENT===================\"\n        );\n\n        // your function or codes here\n        let opened_claims = [...this.state.openedClaim];\n        if (data.actionType === \"opened\") {\n          // if (data.previous !== null) {\n          //   opened_claims = opened_claims.filter(\n          //     (item) => item !== data.previous!\n          //   );\n          // }\n          opened_claims.push(data.claim_id);\n          console.log(\n            \"=================DOCUMENT_VALIDATION_CLIENT===================\"\n          );\n          console.log({\n            data,\n            opened_claims,\n            orginal: this.state.openedClaim,\n          });\n          console.log(\n            \"=================DOCUMENT_VALIDATION_CLIENT===================\"\n          );\n        } else if (data.actionType === \"closed\") {\n          opened_claims = opened_claims.filter(\n            (item) => item !== data.claim_id\n          );\n        } else if (data.actionType === \"validated\") {\n          opened_claims.push(data.claim_id);\n        }\n        this.setState({ openedClaim: opened_claims });\n      }\n    );\n  };\n\n  componentWillUnmount = () => {\n    this.props.socket.socket.off(Events.CLAIMING_CHANGE_CLIENT);\n  };\n\n  FC_SocketServeAction = (data: FC_ClaimValidationSocketDataType) => {\n    this.props.socket.socket.emit(Events.CLAIMING_CHANGE_SERVER, data);\n  };\n\n  displayClaimTitle = (\n    thisClaim: CandidateClaimInterface\n  ): string | JSX.Element => {\n    let result: string = thisClaim.claiming_on_id;\n    if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      let thisDocs = thisClaim.user.details.filter(\n        (item) => item.validation_status !== \"waiting\"\n      );\n      result =\n        thisDocs.length > 0\n          ? adminDisplayClaimTitle(\n              this.props.documentReducer,\n              thisDocs,\n              thisClaim\n            )\n          : \"Document not found\";\n    }\n    if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n      if (this.props.claiming.allApplications) {\n        let thisApplication = this.props.claiming.allApplications.find(\n          (item) => item._id === thisClaim.claiming_on_id\n        );\n        if (\n          thisApplication &&\n          this.props.claiming.allApplications &&\n          this.props.systemPositions\n        ) {\n          let thisPosition = this.props.systemPositions.find(\n            (item) => item.position_id === thisApplication!.position\n          );\n          if (thisPosition) {\n            result = thisPosition.position_title;\n          } else {\n            result = \"Application not found\";\n          }\n        }\n      }\n    }\n\n    if (\n      thisClaim.type_key === PlansTypeKeys.EXAMINATION &&\n      this.props.courses &&\n      this.props.claiming.allAnswer\n    ) {\n      let thisAnswer = getCourseIdBySheetId(\n        this.props.claiming.allAnswer,\n        thisClaim.claiming_on_id\n      );\n      if (thisAnswer && getCourseById(this.props.courses, thisAnswer.course)) {\n        result =\n          \"Exam of \" +\n          getCourseById(this.props.courses, thisAnswer.course)!.course_name;\n      } else {\n        result = \"Unknown exam\";\n      }\n    }\n\n    return result;\n  };\n\n  onPeriodChange = (period_id: string) => {\n    this.setPeriodChanged(true);\n    this.props.getAllClaims(\n      this.state.claim_level,\n      period_id,\n      (status: boolean, msg: string) => {\n        !status && this.setPeriodChanged(false);\n        this.setLoadingData(status);\n        if (status === false && msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      }\n    );\n  };\n\n  getLastClaimDate = (claim: CandidateClaimInterface): string => {\n    let result: string = DATE(claim.createdAt);\n    const claimsLength: number = claim.claims.length;\n    result = DATE(claim.claims[claimsLength - 1].createdAt);\n    return result;\n  };\n\n  DATA_TITLES = (DAT_ClaimByStatus: CandidateClaimInterface[]): string[] => {\n    let response: string[] = [];\n    for (const item of DAT_ClaimByStatus) {\n      if (response.find((itm) => itm === item.title) === undefined) {\n        response.push(item.title);\n      }\n    }\n    return response;\n  };\n\n  FindClaimsNumber = (\n    title: string,\n    DAT_ClaimByStatus: CandidateClaimInterface[]\n  ): number => {\n    let count = DAT_ClaimByStatus.filter((itm) => itm.title === title).length;\n    return count;\n  };\n\n  render() {\n    if (this.props.application_sessions === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    if (this.props.application_sessions.length === 0) {\n      return (\n        <div className=\"bg-yellow-100 rounded flex flex-col items-center justify-center p-6 my-8 text-yellow-900 border border-yellow-900\">\n          <MdInfoOutline className=\"text-6xl md:text-9xl\" />\n          <div className=\"text-center flex flex-col\">\n            <span className=\"text-2xl md:text-4xl font-extrabold\">\n              No active session\n            </span>\n            <span className=\"text-lg\">\n              Please Wait for the system to publish the sessions or contact the\n              administrator\n            </span>\n          </div>\n        </div>\n      );\n    }\n\n    if (\n      this.state.selected_claim_type === null &&\n      this.state.thisPeriod !== null &&\n      (this.props.claiming.allClaims === null ||\n        this.state.choose_claim_type === true)\n    ) {\n      return (\n        <div className=\"min-w-screen h-screen fixed flex justify-center items-center inset-0 z-50\">\n          <div className=\"absolute bg-black opacity-80 inset-0 z-0\"></div>\n          <section className=\"max-w-3xl p-5 relative mx-auto my-auto rounded-md bg-gray-100 w-full group\">\n            <div className=\"w-full flex-col flex md:flex-row items-center justify-center\">\n              <div\n                className=\"bg-white rounded-3xl whitespace-nowrap p-2 shadow-sm m-3 cursor-pointer text-center hover:bg-blue-50 border-2 hover:border-blue-500\"\n                onClick={() => {\n                  this.setState({\n                    selected_claim_type: undefined,\n                    choose_claim_type: false,\n                  });\n                  this.loadsAllClaims(\n                    this.state.thisPeriod!,\n                    this.state.claim_level,\n                    undefined,\n                    this.state.filterByStatus\n                  );\n                }}\n              >\n                <FaUserTie className=\"h-40 text-blue-600 rounded-2xl w-full object-cover\" />\n                <p className=\"mx-4 text-xl font-semibold text-gray-900 -mt-1\">\n                  {this.state.selected_claim_type === PlansTypeKeys.APPLICATION\n                    ? \"Claims For Applications\"\n                    : this.state.selected_claim_type ===\n                      PlansTypeKeys.DOCUMENT_VALIDATION\n                    ? \"Claims For Documents\"\n                    : this.state.selected_claim_type ===\n                      PlansTypeKeys.EXAMINATION\n                    ? \"Claims For Exams\"\n                    : \"All claims\"}\n                </p>\n              </div>\n\n              <div\n                className=\"bg-white rounded-3xl p-2 shadow-sm m-3 cursor-pointer text-center hover:bg-blue-50 border-2 hover:border-blue-500\"\n                onClick={() => {\n                  this.setState({\n                    selected_claim_type: PlansTypeKeys.APPLICATION,\n                    choose_claim_type: false,\n                  });\n                  this.loadsAllClaims(\n                    this.state.thisPeriod!,\n                    this.state.claim_level,\n                    PlansTypeKeys.APPLICATION,\n                    this.state.filterByStatus\n                  );\n                }}\n              >\n                <IoBriefcase className=\"h-40 text-blue-600 rounded-2xl w-full object-cover\" />\n                <p className=\"mx-4 text-xl font-semibold text-gray-900 -mt-1\">\n                  Application\n                </p>\n              </div>\n\n              <div\n                className=\"bg-white rounded-3xl p-2 shadow-sm m-3 cursor-pointer text-center hover:bg-blue-50 border-2 hover:border-blue-500\"\n                onClick={() => {\n                  this.setState({\n                    selected_claim_type: PlansTypeKeys.DOCUMENT_VALIDATION,\n                    choose_claim_type: false,\n                  });\n                  this.loadsAllClaims(\n                    this.state.thisPeriod!,\n                    this.state.claim_level,\n                    PlansTypeKeys.DOCUMENT_VALIDATION,\n                    this.state.filterByStatus\n                  );\n                }}\n              >\n                <IoIosDocument className=\"h-40 text-blue-600 rounded-2xl w-full object-cover\" />\n                <p className=\"mx-4 text-xl font-semibold text-gray-900 -mt-1\">\n                  Documents\n                </p>\n              </div>\n\n              <div\n                className=\"bg-white rounded-3xl p-2 shadow-sm m-3 cursor-pointer text-center hover:bg-blue-50 border-2 hover:border-blue-500\"\n                onClick={() => {\n                  this.setState({\n                    selected_claim_type: PlansTypeKeys.EXAMINATION,\n                    choose_claim_type: false,\n                  });\n                  this.loadsAllClaims(\n                    this.state.thisPeriod!,\n                    this.state.claim_level,\n                    PlansTypeKeys.EXAMINATION,\n                    this.state.filterByStatus\n                  );\n                }}\n              >\n                <HiOutlineDesktopComputer className=\"h-40 text-blue-600 rounded-2xl w-full object-cover\" />\n                <p className=\"mx-4 text-xl font-semibold text-gray-900 -mt-1\">\n                  Examination\n                </p>\n              </div>\n            </div>\n\n            <div className=\"text-center text-sm -mb-3 mt-3\">\n              <NavLink\n                to=\"/apps-page\"\n                className=\"border border-rounded-md rounded bg-gray-100 border-gray-100 group-hover:bg-gray-50 group-hover:border-gray-400 px-2 py-1\"\n              >\n                Back to App\n              </NavLink>\n            </div>\n          </section>\n        </div>\n      );\n    }\n\n    if (this.props.claiming.allClaims === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    const DATA_ALL_CLAIM = this.props.claiming.allClaims.filter(\n      (item) => this.state.openedClaim.includes(item._id) === false\n    );\n    const DATA_ClaimByType = filterClaimsByClaimType(\n      DATA_ALL_CLAIM,\n      this.props.claiming.selectedClaimType\n    );\n\n    const DAT_ClaimByStatus =\n      this.state.filterByStatus !== \"all\"\n        ? DATA_ClaimByType.filter(\n            (item) => item.last_claim_status === this.state.filterByStatus\n          )\n        : DATA_ClaimByType;\n    const DATA_BY_TITLE = DAT_ClaimByStatus.filter(\n      (itm) =>\n        itm.title === this.state.selected_title ||\n        this.state.selected_title === \"\"\n    );\n\n    return (\n      <Fragment>\n        <div>\n          {/* SIDE NAVIGATION */}\n          {!this.state.viewClaim && (\n            <SideNavigation>\n              {/* FILTER SECTION */}\n              <div\n                onClick={() => this.setState({ view_claim_report: true })}\n                className=\"cursor-pointer text-center w-full font-bold px-3 py-2 rounded bg-green-600 text-white hover:bg-green-800\"\n              >\n                View report\n              </div>\n              <div\n                onClick={() =>\n                  this.setState({\n                    choose_claim_type: !this.state.choose_claim_type,\n                    selected_claim_type: null,\n                  })\n                }\n                className=\"cursor-pointer text-center w-full font-bold px-3 py-2 mt-2 rounded bg-gray-500 text-white hover:bg-gray-700\"\n              >\n                Claim type\n              </div>\n\n              <AdminFilterByType\n                loadingClaims={this.state.loadingData}\n                selected_claim_type={this.state.selected_claim_type}\n              />\n              {/* END FILTER SECTION */}\n            </SideNavigation>\n          )}\n          {/* END SIDE NAVIGATION */}\n\n          {/* 00000000000000000000000000000000000 */}\n\n          {/* CLAIM TITLE ===================================== */}\n          {!this.state.viewClaim && (\n            <ClaimHeaderTitle\n              headerTitle={`${\n                this.props.claiming.selectedClaimType === \"all\"\n                  ? \"All\"\n                  : this.props.claiming.selectedClaimType ===\n                    PlansTypeKeys.DOCUMENT_VALIDATION\n                  ? \"Documents\"\n                  : this.props.claiming.selectedClaimType ===\n                    PlansTypeKeys.APPLICATION\n                  ? \"Applications\"\n                  : this.props.claiming.selectedClaimType ===\n                    PlansTypeKeys.EXAMINATION\n                  ? \"Exam\"\n                  : this.props.claiming.selectedClaimType ===\n                    PlansTypeKeys.MARKS_PUBLICATION\n                  ? \"Marks publication\"\n                  : this.props.claiming.selectedClaimType ===\n                    PlansTypeKeys.PLACEMENT_TRANSFER\n                  ? \"Placements\"\n                  : \"\"\n              } Claiming`}\n              loading={this.state.loadingData}\n              loadingSession={this.state.loading}\n              thisPeriod={this.state.thisPeriod}\n              setThisPeriod={this.setThisPeriod}\n              setLoadingSession={this.setLoadingData}\n              application_sessions={this.props.application_sessions}\n              onPeriodChange={this.onPeriodChange}\n              periodChanged={this.state.periodChanged}\n            />\n          )}\n          {/* END CLAIM TITLE ===================================== */}\n\n          {/* 00000000000000000000000000000000000 */}\n\n          {/* CLAIM CONTENT LIST ===================================== */}\n          {!this.state.viewClaim && (\n            <section className=\"bg-white w-full p-1\">\n              {/* FILTER FORM =================================== */}\n              <section className=\"flex flex-col sm:flex-row items-center gap-2 w-full my-2\">\n                <div className=\"w-full\">\n                  <input\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                      this.setSearchClaim(e.target.value)\n                    }\n                    type=\"search\"\n                    className=\"input-white h-10 text-sm border-2 border-gray-400 focus:border-gray-500 \"\n                    placeholder={`Search claim by title or type`}\n                    value={this.state.searchClaim}\n                    disabled={\n                      this.state.loadingData ||\n                      (filterClaimsByClaimType(\n                        DATA_ALL_CLAIM,\n                        this.props.claiming.selectedClaimType\n                      ).length > 0\n                        ? false\n                        : true)\n                    }\n                  />\n                </div>\n                {this.state.claim_level === 2 &&\n                  FC_Access(this.props.auth, UserAccessList.CLAIM_VALIDATION_2)\n                    .view === true && (\n                    <div className=\"w-full\">\n                      <select\n                        className=\"input-white h-10 text-sm border-2 border-gray-400 focus:border-gray-500 w-full\"\n                        placeholder={`Filter by status`}\n                        onChange={(e: React.ChangeEvent<HTMLSelectElement>) => {\n                          this.setState({\n                            filterByStatus: e.target.value as\n                              | \"all\"\n                              | ClaimStatus,\n                          });\n                          this.state.selected_claim_type !== null &&\n                            this.state.thisPeriod &&\n                            this.loadsAllClaims(\n                              this.state.thisPeriod,\n                              this.state.claim_level,\n                              this.state.selected_claim_type,\n                              e.target.value as \"all\" | ClaimStatus\n                            );\n                        }}\n                        value={this.state.filterByStatus}\n                        disabled={this.state.loadingData}\n                      >\n                        <option value=\"\" disabled>\n                          Filter by status\n                        </option>\n                        {/* <option value=\"all\">All Status</option> */}\n                        <option value=\"PENDING\">Pending</option>\n                        <option value=\"EVALUATED\">Evaluated</option>\n                      </select>\n                    </div>\n                  )}\n                <div\n                  onClick={() =>\n                    this.state.loadingData === false &&\n                    this.setState({ show_titles_filter: true })\n                  }\n                  className=\"w-full border-2 border-gray-400 rounded px-3 py-2 text-sm cursor-pointer hover:bg-blue-100 hover:border-blue-600\"\n                >\n                  <span>\n                    {this.state.selected_title === \"\"\n                      ? \"Filter by claim type\"\n                      : this.state.selected_title}\n                  </span>\n                </div>\n                {FC_Access(this.props.auth, UserAccessList.CLAIM_VALIDATION_2)\n                  .view === false && (\n                  <div className=\"flex items-center justify-end gap-2\">\n                    <div\n                      className={`rounded font-semibold px-3 py-2 whitespace-nowrap ${\n                        this.state.claim_level === 1\n                          ? \"cursor-default bg-blue-600 text-white\"\n                          : \"cursor-pointer bg-blue-100 text-blue-600 hover:bg-blue-200 hover:tex-blue-700\"\n                      }`}\n                      onClick={() => {\n                        this.state.loadingData === false &&\n                          this.setState({ claim_level: 1 });\n                        this.state.loadingData === false &&\n                          this.state.thisPeriod &&\n                          this.state.selected_claim_type !== null &&\n                          this.loadsAllClaims(\n                            this.state.thisPeriod,\n                            1,\n                            this.state.selected_claim_type,\n                            this.state.filterByStatus\n                          );\n                      }}\n                    >\n                      Level 1\n                    </div>\n                    <div\n                      className={`rounded font-semibold px-3 py-2 whitespace-nowrap ${\n                        this.state.claim_level === 2\n                          ? \"cursor-default bg-blue-600 text-white\"\n                          : \"cursor-pointer bg-blue-100 text-blue-600 hover:bg-blue-200 hover:tex-blue-700\"\n                      }`}\n                      onClick={() => {\n                        this.state.loadingData === false &&\n                          this.setState({ claim_level: 2 });\n                        this.state.loadingData === false &&\n                          this.state.thisPeriod &&\n                          this.state.selected_claim_type !== null &&\n                          this.loadsAllClaims(\n                            this.state.thisPeriod,\n                            2,\n                            this.state.selected_claim_type,\n                            this.state.filterByStatus\n                          );\n                      }}\n                    >\n                      Level 2\n                    </div>\n                  </div>\n                )}\n              </section>\n              {/* END FILTER FORM =================================== */}\n              <div className=\"w-full overflow-x-auto\">\n                <table className=\"w-full shadow\" id=\"report_content\">\n                  <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                    <tr>\n                      <td className=\"px-2 py-2\">#</td>\n                      <td className=\"px-2 py-2\">Applicant names</td>\n                      <td className=\"px-2 py-2\">Claim title</td>\n                      <td className=\"px-2 py-2\">Claim date</td>\n                      {this.props.claiming.selectedClaimType === \"all\" && (\n                        <td className=\"px-2 py-2\">Claim type</td>\n                      )}\n                      <td className=\"px-2 py-2\">Claim level</td>\n                      <td className=\"px-2 py-2\">Last decision</td>\n                      <td className=\"px-2 py-2\">Claim status</td>\n                      <td className=\"px-2 py-2\"></td>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {!DATA_ALL_CLAIM ||\n                    !this.props.claiming.claimTypes ||\n                    !this.props.systemPositions ||\n                    this.state.loadingData ? (\n                      <TableLoading\n                        cols={\n                          this.props.claiming.selectedClaimType === \"all\"\n                            ? 9\n                            : 8\n                        }\n                      />\n                    ) : searchData(DATA_BY_TITLE, this.state.searchClaim)\n                        .length <= 0 ? (\n                      <tr\n                        className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                        key={Math.random()}\n                      >\n                        <td className=\"px-3 py-1\" colSpan={9}>\n                          <NoResult\n                            theme={NoResultThemes.Light}\n                            value={\"No claim found!\"}\n                          />\n                        </td>\n                      </tr>\n                    ) : (\n                      (\n                        searchData(\n                          DATA_BY_TITLE.map((item) => ({\n                            claiming_on_id: item.claiming_on_id,\n                            type_key: item.type_key,\n                            period_id: item.period_id,\n                            last_claim_status: item.last_claim_status,\n                            default_claim_resaons: item.default_claim_resaons,\n                            claim_level: item.claim_level,\n                            claims: item.claims,\n                            createdAt: item.createdAt,\n                            updatedAt: item.updatedAt,\n                            _id: item._id,\n                            id: item.id,\n                            previous: item.previous,\n                            title: item.title,\n                            user: item.user,\n                            institute_id: item.institute_id,\n                            user_id: item.user._id,\n                            n_eduction: item.user.n_eduction,\n                            disability: item.user.disability,\n                            n_id: item.user.n_id,\n                            phone_number: item.user.phone_number,\n                            email: item.user.email,\n                            fname: item.user.user_info.fname,\n                            lname: item.user.user_info.lname,\n                            sex: item.user.user_info.sex,\n                            photo: item.user.user_info.photo,\n                            sector: item.user.user_info.sector,\n                            district: item.user.user_info.district,\n                            province: item.user.user_info.province,\n                          })),\n                          this.state.searchClaim\n                        ) as CandidateClaimTableInterface[]\n                      ).map((claim: CandidateClaimTableInterface, index) => (\n                        <tr\n                          className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                          key={index + claim._id}\n                          onClick={() => {\n                            this.setViewClaim(true);\n                            this.setClaimId(claim._id);\n                            this.setCandidateId(claim.user._id);\n                            this.setClaimType(\n                              whichClaimType(claim)\n                                ? whichClaimType(claim)!\n                                : null\n                            );\n                            this.loadsController(\n                              claim.claiming_on_id,\n                              claim.type_key\n                            );\n                            this.FC_SocketServeAction({\n                              claim_id: claim._id,\n                              actionType: \"opened\",\n                            });\n                          }}\n                        >\n                          <td className=\"px-3 py-1\">{index + 1}</td>\n                          <td className=\"px-3 py-1 whitespace-nowrap\">\n                            {claim.fname + \" \" + claim.lname}\n                          </td>\n                          <td className=\"px-3 py-1 whitespace-nowrap\">\n                            {claim.title}\n                          </td>\n                          <td className=\"px-3 py-1 whitespace-nowrap\">\n                            {this.getLastClaimDate(claim)}\n                          </td>\n                          {this.props.claiming.selectedClaimType === \"all\" && (\n                            <td className=\"px-3 py-1 whitespace-nowrap\">\n                              {whichClaimType(claim)\n                                ? capitalizeFirstLetter(whichClaimType(claim)!)\n                                : \"-\"}\n                            </td>\n                          )}\n                          <td className=\"px-3 py-1 whitespace-nowrap italic\">\n                            Level {claim.claim_level}\n                          </td>\n                          <td className=\"px-3 py-1 whitespace-nowrap\">\n                            <span\n                              className={`inline-block rounded-full duration-300 text-xs font-semibold px-3 py-1 ${\n                                whichClaimStatus(claim).classes\n                              }`}\n                            >\n                              {whichClaimStatus(claim).status}\n                            </span>\n                          </td>\n                          <td className=\"px-3 py-1 text-center whitespace-nowrap\">\n                            <span\n                              className={`inline-block rounded-full duration-300 text-xs font-semibold px-3 py-1 ${\n                                FC_ClaimDecision(claim).classes\n                              }`}\n                            >\n                              {FC_ClaimDecision(claim).status}\n                            </span>\n                          </td>\n                          <td className=\"px-3 py-1 text-center whitespace-nowrap\">\n                            <button className=\"btn bg-blue-500 text-white group-hover:bg-blue-600\">\n                              View\n                            </button>\n                          </td>\n                        </tr>\n                      ))\n                    )}\n                  </tbody>\n                </table>\n              </div>\n            </section>\n          )}\n          {/* END CLAIM CONTENT LIST ===================================== */}\n\n          {/* 00000000000000000000000000000000000 */}\n\n          {/* view claim */}\n          {this.state.viewClaim &&\n            this.state.candidateId &&\n            DATA_ALL_CLAIM &&\n            this.state.claimId &&\n            getClaimById(DATA_ALL_CLAIM, this.state.claimId) &&\n            this.props.claiming.claimTypes && (\n              <section className=\"bg-white w-full my-4\">\n                {/* VIEW CLAIM HEADER =============================== */}\n                <section className=\"flex items-center gap-2 py-2 border-b\">\n                  <button\n                    className={`ml-3 bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n                      this.state.loadingRequest\n                        ? \"cursor-not-allowed\"\n                        : \"cursor-pointer\"\n                    } animate__animated animate__fadeIn`}\n                    disabled={this.state.loadingRequest}\n                    onClick={() => {\n                      this.setViewClaim(false);\n                      this.setViewImage(true);\n                      this.setLoadingRequest(false);\n                      this.setActionTaken(null);\n                      this.setResponseMsg(\"\");\n                      this.setFormError(null);\n                      this.state.claimId &&\n                        this.FC_SocketServeAction({\n                          claim_id: this.state.claimId,\n                          actionType: \"closed\",\n                        });\n                    }}\n                  >\n                    <MdArrowBack className=\"w-7 h-7\" />\n                  </button>\n                  <div className={`text-gray-600 font-extrabold text-2xl px-2`}>\n                    Viewing claim\n                  </div>\n                </section>\n                {/* END VIEW CLAIM HEADER =============================== */}\n\n                {this.state.loading && (\n                  <div className=\"my-4\">\n                    <Loading />\n                  </div>\n                )}\n\n                {!this.state.loading && (\n                  <section className=\"bg-gray-200\">\n                    {/* FOR DOCUMENT ========================== */}\n                    {this.state.claimType &&\n                      this.state.claimType.toLocaleLowerCase() ===\n                        ClaimTypesInterface.DOCUMENT.toLocaleLowerCase() && (\n                        <div>\n                          {getClaimById(\n                            DATA_ALL_CLAIM!,\n                            this.state.claimId!\n                          )!.user.details.find(\n                            (item) =>\n                              item.doc_id ===\n                              getClaimById(\n                                DATA_ALL_CLAIM!,\n                                this.state.claimId!\n                              )!.claiming_on_id\n                          ) ? (\n                            <AdminClaimDocView\n                              thisDoc={\n                                getClaimById(\n                                  DATA_ALL_CLAIM!,\n                                  this.state.claimId!\n                                )!.user.details.find(\n                                  (item) =>\n                                    item.doc_id ===\n                                    getClaimById(\n                                      DATA_ALL_CLAIM!,\n                                      this.state.claimId!\n                                    )!.claiming_on_id\n                                )!\n                              }\n                              documentCategories={this.props.documentReducer}\n                              thisClaim={\n                                getClaimById(\n                                  DATA_ALL_CLAIM,\n                                  this.state.claimId\n                                )!\n                              }\n                              claimTypes={this.props.claiming.claimTypes}\n                              viewImage={this.state.viewImage}\n                              setViewImage={this.setViewImage}\n                              loadingRequest={this.state.loadingRequest}\n                              setLoadingRequest={this.setLoadingRequest}\n                              actionTaken={this.state.actionTaken}\n                              setActionTaken={this.setActionTaken}\n                              responseMsg={this.state.responseMsg}\n                              setResponseMsg={this.setResponseMsg}\n                              formError={this.state.formError}\n                              setFormError={this.setFormError}\n                              candidateId={this.state.candidateId}\n                              claimReasons={this.props.claiming.claimReasons}\n                            />\n                          ) : (\n                            <NoResult\n                              theme={NoResultThemes.Dark}\n                              value={\"Document not found\"}\n                            />\n                          )}\n                        </div>\n                      )}\n\n                    {/* FOR APPLICATION ========================== */}\n                    {this.state.claimType &&\n                      this.state.claimType.toLocaleLowerCase() ===\n                        ClaimTypesInterface.APPLICATION.toLocaleLowerCase() && (\n                        <div>\n                          {getApplicationById(\n                            this.props.claiming.allApplications,\n                            this.props.systemPositions,\n                            getClaimById(DATA_ALL_CLAIM, this.state.claimId)!\n                              .claiming_on_id\n                          ) ? (\n                            this.props.systemPositions && (\n                              <AdminClaimAppView\n                                thisApplication={\n                                  getApplicationById(\n                                    this.props.claiming.allApplications,\n                                    this.props.systemPositions,\n                                    getClaimById(\n                                      DATA_ALL_CLAIM,\n                                      this.state.claimId\n                                    )!.claiming_on_id\n                                  )!.application\n                                }\n                                thisPosition={\n                                  getApplicationById(\n                                    this.props.claiming.allApplications,\n                                    this.props.systemPositions,\n                                    getClaimById(\n                                      DATA_ALL_CLAIM,\n                                      this.state.claimId\n                                    )!.claiming_on_id\n                                  )!.position\n                                }\n                                documentCategories={this.props.documentReducer}\n                                thisClaim={\n                                  getClaimById(\n                                    DATA_ALL_CLAIM,\n                                    this.state.claimId\n                                  )!\n                                }\n                                claimTypes={this.props.claiming.claimTypes}\n                                systemPositions={this.props.systemPositions}\n                                claimReasons={this.props.claiming.claimReasons}\n                                close={() => {\n                                  this.setViewClaim(false);\n                                  this.setViewImage(true);\n                                  this.setLoadingRequest(false);\n                                  this.setActionTaken(null);\n                                  this.setResponseMsg(\"\");\n                                  this.setFormError(null);\n                                  this.state.claimId &&\n                                    this.FC_SocketServeAction({\n                                      claim_id: this.state.claimId,\n                                      actionType: \"closed\",\n                                    });\n                                }}\n                              />\n                            )\n                          ) : (\n                            <NoResult\n                              theme={NoResultThemes.Dark}\n                              value={\"Application not found\"}\n                            />\n                          )}\n                        </div>\n                      )}\n\n                    {/* FOR EXAMINATION ========================== */}\n                    {this.state.claimType &&\n                      this.state.claimType.toLocaleLowerCase() ===\n                        ClaimTypesInterface.EXAMINATION.toLocaleLowerCase() && (\n                        <div>\n                          {this.props.claiming.allAnswer &&\n                          this.props.courses &&\n                          getCourseIdBySheetId(\n                            this.props.claiming.allAnswer,\n                            getClaimById(DATA_ALL_CLAIM, this.state.claimId)!\n                              .claiming_on_id\n                          ) &&\n                          getCourseById(\n                            this.props.courses,\n                            getCourseIdBySheetId(\n                              this.props.claiming.allAnswer,\n                              getClaimById(DATA_ALL_CLAIM, this.state.claimId)!\n                                .claiming_on_id\n                            )!.course\n                          ) ? (\n                            <AdminClaimExamView\n                              thisExamSheet={\n                                getCourseIdBySheetId(\n                                  this.props.claiming.allAnswer,\n                                  getClaimById(\n                                    DATA_ALL_CLAIM,\n                                    this.state.claimId\n                                  )!.claiming_on_id\n                                )!\n                              }\n                              thisExam={\n                                getCourseById(\n                                  this.props.courses,\n                                  getCourseIdBySheetId(\n                                    this.props.claiming.allAnswer,\n                                    getClaimById(\n                                      DATA_ALL_CLAIM,\n                                      this.state.claimId\n                                    )!.claiming_on_id\n                                  )!.course\n                                )!\n                              }\n                              thisClaim={\n                                getClaimById(\n                                  DATA_ALL_CLAIM,\n                                  this.state.claimId\n                                )!\n                              }\n                              claimTypes={this.props.claiming.claimTypes}\n                              claimReasons={this.props.claiming.claimReasons}\n                            />\n                          ) : (\n                            <NoResult\n                              theme={NoResultThemes.Dark}\n                              value={\"Exam not found\"}\n                            />\n                          )}\n                        </div>\n                      )}\n                  </section>\n                )}\n              </section>\n            )}\n          {/* end view claim */}\n        </div>\n        {/* Filter by titles */}\n        {this.state.show_titles_filter === true && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={() => this.setState({ show_titles_filter: false })}\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{\n              title: true,\n              body: false,\n              footer: undefined,\n            }}\n            title={<div>Filter by claiming type</div>}\n          >\n            <div className=\"min-h-screen\">\n              <div className=\"flex flex-row items-center w-full py-3 bg-gray-100 px-3 gap-2\">\n                <div\n                  onClick={() =>\n                    this.setState({\n                      selected_title: \"\",\n                      show_titles_filter: false,\n                    })\n                  }\n                  className=\"bg-blue-100 font-bold text-center hover:bg-blue-600 text-blue-600 hover:text-white rounded px-3 py-2 cursor-pointer w-24\"\n                >\n                  View all\n                </div>\n                <div className=\"w-full\">\n                  <input\n                    placeholder=\"Search by keywords...\"\n                    value={this.state.search_title}\n                    onChange={(e) =>\n                      this.setState({ search_title: e.target.value })\n                    }\n                    className=\"input-white h-10 text-sm border-2 bg-white border-gray-400 focus:border-gray-500 w-full\"\n                  />\n                </div>\n              </div>\n              <div className=\"p-4\">\n                {(\n                  searchData(\n                    this.DATA_TITLES(DAT_ClaimByStatus).map((title) => ({\n                      title: title,\n                    })),\n                    this.state.search_title.toString()\n                  ) as { title: string }[]\n                ).map((item, i) => (\n                  <div\n                    onClick={() =>\n                      this.setState({\n                        selected_title: item.title,\n                        show_titles_filter: false,\n                      })\n                    }\n                    className={`border rounded group p-1 mb-1 ${\n                      this.state.selected_title === item.title\n                        ? \"mb-1 border-blue-600 bg-blue-100\"\n                        : \"border-gray-200 hover:border-blue-600 hover:bg-blue-100\"\n                    } cursor-pointer`}\n                  >\n                    <div className=\"flex flex-row items-center justify-between gap-2\">\n                      <div className=\"flex flex-row items-center gap-2\">\n                        <div>\n                          <div\n                            className={`flex items-center justify-center p-1 rounded-full border-4 ${\n                              this.state.selected_title === item.title\n                                ? \"bg-blue-200 text-blue-700 border-blue-600\"\n                                : \"border-gray-200 bg-gray-100 group-hover:bg-blue-200 group-hover:text-blue-700 group-hover:border-blue-600\"\n                            } h-10 w-10 font-bold`}\n                          >\n                            {i + 1}\n                          </div>\n                        </div>\n                        <div\n                          className={`${\n                            this.state.selected_title === item.title\n                              ? \"text-blue-700\"\n                              : \"text-gray-500\"\n                          } group-hover:text-blue-600 font-bold`}\n                        >\n                          {item.title}\n                        </div>\n                      </div>\n                      <div className=\"font-bold\">\n                        ({this.FindClaimsNumber(item.title, DAT_ClaimByStatus)})\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </Modal>\n        )}\n        {this.state.view_claim_report === true && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={() => this.setState({ view_claim_report: false })}\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{\n              title: true,\n              body: false,\n              footer: undefined,\n            }}\n            title={<div className=\"uppercase\">Claiming report preview</div>}\n          >\n            <ClaimReport />\n          </Modal>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system_settings,\n  sessionPlan,\n  claiming,\n  document,\n  course,\n  socket,\n}: StoreState): {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  systemPositions: PositionAPI[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  courses: course[] | null;\n  socket: Socket;\n} => {\n  return {\n    auth: auth,\n    application_sessions: sessionPlan.allSessionPlans,\n    systemPositions: system_settings.systemPositions,\n    claiming,\n    documentReducer: document,\n    courses: course.courses,\n    socket,\n  };\n};\n\nexport const AdminClaim = connect(mapStateToProps, {\n  getAllClaims,\n  loadCourses,\n  getAllAnswers,\n  getClaimReasons,\n  getAllApplications,\n  GetAllSessionPlans,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  getPositions,\n  PushPopupAlert,\n})(Index);\n"],"sourceRoot":""}
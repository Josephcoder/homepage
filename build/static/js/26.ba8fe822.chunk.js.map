{"version":3,"sources":["containers/Claimings/Admin/AdminClaimExamView.tsx","containers/Positions/ViewDocRequirements.tsx","containers/Claimings/Admin/AdminClaimAppView.tsx","containers/Claimings/Admin/AdminClaimDocView.tsx","containers/Claimings/Admin/index.tsx","utils/question_bank.ts","components/Table/Table.tsx","actions/session.ts","actions/document.ts","components/Navigation/SideNavigation.tsx","containers/Claimings/Candidate/FormPlacementList.tsx","containers/Claimings/Candidate/ClaimForm.tsx","actions/settings.ts","components/Loading/TableLoading.tsx","shared/interfaces.tsx","containers/Positions/ViewRequirements.tsx","containers/Claimings/Candidate/FormExamList.tsx","containers/Claimings/ClaimDocView.tsx","containers/Claimings/Candidate/ApplicationFormView.tsx","containers/Claimings/Candidate/ExaminationFormView.tsx","components/AnswersDetails/CandidateAnswersDetails.tsx","containers/Claimings/Candidate/ChooseReason.tsx","containers/Claimings/Candidate/DocFormView.tsx","containers/Claimings/Candidate/FormApplicationList.tsx","containers/Claimings/Candidate/FormDocumentList.tsx","containers/SessionSettings/ApplicationSession/SessionDetails.tsx","containers/CandidateExams/CandidateExams.tsx","containers/Claimings/Admin/AdminFilterByType.tsx","containers/Claimings/ClaimHeaderTitle.tsx","containers/Claimings/Candidate/index.tsx","containers/Claimings/ClaimApplView.tsx","containers/Claimings/ClaimExamView.tsx","containers/Claimings/ClaimPlacementView.tsx","containers/Claimings/Candidate/FilterByType.tsx","components/ViewPDF/ViewPDF.tsx"],"names":["viewTabs","ViewDocRequirements","props","useState","viewDoc","setViewDoc","loadingImage","setLoadingImage","isFullscreen","setSetFullscreen","isDocumentExist","category_id","sub_category_id","field_id","isEmptyOrSpaces","userDocs","filter","item","validation_status","find","category_subcategory_data","Table","columns","columnTitle","alignText","padding","rows","data","requirements","length","className","colSpan","map","index","subcategory_id","subcategory_title","field_title","onClick","pagination","search","thColor","Modal","backDrop","theme","Themes","default","close","backDropClose","widthSizeClass","ModalSize","extraLarge","displayClose","title","body","footer","Loading","files","isFileImage","getFileType","src","API","AUTH_FILES","alt","id","onLoad","onDoubleClick","fullScreen","ViewPDF","file_url","class_name","frame_title","setLoadingFile","FC_AdminApplicationPositionDistinctCategory","thisPosition","documentCategories","PositionsTemp","DistinctCategoriesTemp","DistinctCategoriesIds","DistinctSubCategoriesTemp","DistinctSubCategoriesIds","req","thisRequirements","thisCategory","documentCategory","user_detail_category_id","category","thisSubCategory","documentSubCategory","user_detail_subcategory_id","subcategory","field","thisField","documentFields","_id","position_requirement","required","push","category_title","subcategory_required","includes","connect","auth","evaluateClaim","reAssessApplication","PushPopupAlert","loadingRequest","setLoadingRequest","actionTaken","setActionTaken","formError","setFormError","responseMsg","setResponseMsg","handleVerify","a","element","msg","subClaim","thisClaim","claims","level","claim_level","api_body","sub_claim_id","evaluation_comment","evaluated_by","user","user_id","decision_taken_status","axios","put","CLAIMING","res","console","log","evaluate_claim_res","ClaimDecisionStatus","ACCEPTED","overrideDecision","PopupAlertTheme","success","error","errorToText","danger","getReasonById","reason_id","claimReasons","patch","APPLICATION","claiming_on_id","comment","application_status","ApplicationStates","Shortlisted","application_id","code_error","getPositionById","position_id","systemPositions","previous","evaluater","name","thisApplication","position","position_title","description","school_level_id","school_level_name","education_institute_id","education_category_title","courses","course_name","course_code","course_id","NoResult","NoResultThemes","Dark","value","userDetails","details","status","Rejected","capitalizeFirstLetter","DATE","createdAt","dangerouslySetInnerHTML","__html","reason","override_by","claim","default_claim_resaons","showDate","isClaimEvaluated","REJECTED","toLocaleLowerCase","last_claim_status","ClaimStatus","PENDING","DELETED","placeholder","cols","style","resize","onChange","e","target","disabled","window","confirm","verifyDocument","evaluator_name","fname","lname","evaluator_email","email","FC_DocValidation","doc_id","DocValidationStatusInterface","APPROVED","validated_by","in_education","disability","api_redux","date","post","AUTH","FC_shortListing","candidate_id","user_info","type","setViewImage","viewImage","adminDisplayClaimTitle","thisDoc","commet","questionTypes","loadQuestionTypes","loading","setLoading","marks","setMarks","profile","selectedTab","setSelectedTab","useEffect","handleMarksAddition","DO_EXAM","answer_sheet_id","Object","values","i","exam","AnswersDetails","showAnswers","exam_id","claimShowAnswer","thisExamSheet","thisExam","allAnswers","exam_location","questions","user_answers","period","course","exam_paper","user_status","used_duration","total_marks","number_of_question_answered","exam_total_marks","exam_start_time","exam_end_time","exam_date","updatedAt","gender","phone_number","sex","Number","candidateDocuments","result","type_key","PlansTypeKeys","DOCUMENT_VALIDATION","AdminClaimGetDocTitle","main","doc","DocCategory","DocSubCategory","DocField","DocTitle","c","sub_category","getApplicationById","allApplications","application","Index","setState","setLoadingData","loadingData","setPeriodChanged","periodChanged","setThisPeriod","thisPeriod","setViewClaim","viewClaim","setClaimId","claimId","setClaimType","claimType","setCandidateId","candidateId","setDefaultSession","sessions","state","thisSession","is_active","loadsAllClaims","claiming","allClaims","getAllClaims","session_plan_id","loadsApplications","getAllApplications","loadsController","file_id","EXAMINATION","loadsAlAnswers","answersheet_id","allAnswer","getAllAnswers","componentDidMount","application_sessions","GetAllSessionPlans","documentReducer","getDocumentCategory","getDocumentSubCategory","getDocumentFields","getPositions","getClaimReasons","loadCourses","displayClaimTitle","thisDocs","thisAnswer","getCourseIdBySheetId","getCourseById","onPeriodChange","period_id","this","SideNavigation","AdminFilterByType","loadingClaims","ClaimHeaderTitle","headerTitle","selectedClaimType","MARKS_PUBLICATION","PLACEMENT_TRANSFER","loadingSession","setLoadingSession","claimTypes","filterClaimsByClaimType","Light","whichClaimType","whichClaimStatus","classes","TableLoading","getClaimById","ClaimTypesInterface","DOCUMENT","Component","AdminClaim","system_settings","sessionPlan","document","allSessionPlans","ExamTimeStatus","today","moment","tz","TimeZone","getQuestionType","question_types","type_id","check","itm","undefined","check_type","questionTypeElements","key","findTotalMarks","results","sum","test","toFixed","CheckIfExamDone","validateCalculatedFormula","formula","characters","el","nextCharacter","convertFromStringToDate","responseDate","dateComponents","split","datePieces","timePieces","Date","parseInt","validateExamDate","start_time","end_time","Expired","toDay","toString","examDate","startTime","getDate","getMonth","getFullYear","endTime","Waiting","getTime","Online","InitializeExamsDone","selected_period","selectedPosition","candidateExam","loadExamsDone","setLoadingExamsDone","selectedExams","InitializeExamDetails","setLoadingExams","user_exams_temp","center_id","district_id","room_id","proctoringDefaultRules","rule","caption","table","tr","tableId","charactersLength","charAt","Math","floor","random","FC_makeID","totalItems","setTotalItems","totalPages","setTotalPages","currentPage","setCurrentPage","pages","setPages","pageSize","setPageSize","startIndex","setStartIndex","endIndex","setEndIndex","tablePagination","getElementById","getElementsByTagName","ceil","min","_pages","Array","from","keys","display","tableSize","searchBG","filterType","td","toLowerCase","textContent","innerText","indexOf","filterTable","tableClass","rounded","hideColumns","column","isSortAllowed","switching","x","y","shouldSwitch","colIndex","dir","switchcount","innerHTML","parentNode","insertBefore","sortThisColumn","aria-label","page","pageIndex","GetPlansTypes","callback","dispatch","setAxiosToken","get","GET_PLANS_TYPES","plan_types","ActionTypes","payload","setSelectedPlanType","thisType","SELECT_PLAN_TYPE","getActiveSessionPlan","GET_ACTIVE_SESSION_PLANS","session_plan","GET_ALL_SESSION_PLANS","session_data","createSessionPlan","CREATE_SESSION_PLAN","updateSessionPlan","UPDATE_SESSION_PLAN","sessionActivation","SESSION_ACTIVATION","deleteSessionPlan","DELETE_SESSION_PLAN","createAcademicSession","CREATE_ACADEMIC_SESSION","GetAllAcademicSession","PLACEMENT","GET_ALL_ACADEMIC_SESSION","updateAcademicSession","UPDATE_ACADEMIC_SESSION","academicSessionActivation","ACADEMIC_SESSION_ACTIVATION","deleteAcademicSession","DELETE_ACADEMIC_SESSION","getActiveAcademicSession","GET_ACTIVE_ACADEMIC_SESSION","docCategory","GET_DOCUMENT_CATEGORY","createDocumentCategory","CREATE_DOCUMENT_CATEGORY","updateDocumentCategory","UPDATE_DOCUMENT_CATEGORY","deleteDocumentCategory","DELETE_DOCUMENT_CATEGORY","docSubCategory","GET_DOCUMENT_SUB_CATEGORY","doc_SUB_category_error","createDocumentSubCategory","CREATE_DOCUMENT_SUB_CATEGORY","updateDocumentSubCategory","UPDATE_DOCUMENT_SUB_CATEGORY","deleteDocumentSubCategory","DELETE_DOCUMENT_SUB_CATEGORY","docFields","GET_DOCUMENT_FIELDS","createDocumentFields","CREATE_DOCUMENT_FIELDS","updateDocumentFields","reducer","UPDATE_DOCUMENT_FIELDS","deleteDocumentFields","DELETE_DOCUMENT_FIELDS","distinctCandidates","candidatesData","user_ids","candidate","forEach","getCandidatesInInstitute","educatin_type_id","session_id","GET_CANDIDATE_IN_INSTITUTE","VERIFY_DOCUMENT","_SideNavigation","PageHasSubNav","componentWillUnmount","isAuthenticated","navActive","system","navigation","children","React","NavToogle","MainItem","icon","MdBrightness1","active","count","IconDefined","searchInput","setSearchInput","myPlacement","isClaimAllowed","myClaims","activeSession","placed","setChooseClaimFile","setViewThisFile","setClaimFileId","school","school_name","ClaimGetDocTitle","category_subcategory_Data_id","allClaim","claimOnId","ClaimForm","setLoadingForm","loadingForm","setAlertError","alertError","claimFileId","viewThisFile","chooseClaimFile","setChooseClaimReason","chooseClaimReason","setClaimReason","claimReason","setClaimComment","claimComment","isClaimTypeOpen","plans","isPlanActive","displayClaimType","loadExamAnswers","activeSessionPlan","getMyAnswers","application_session","setFormState","thisClaimType","thisClaimTypeId","formType","getDocumentById","documents","applications","getExamById","exams","getValidation","thisId","old_reason","old_status","old_evaluated_by","candidateApplications","cleanToClose","response","loadUserById","getClaimTitle","myAnswer","getClaimInstitute","handleSubmit","preventDefault","old_evaluator_email","old_evaluator_name","institute_id","createClaim","selectClaimType","getMyRejectedApplications","getMyRejectedDocuments","getMyPlacement","generateChooseFileTitle","formState","medium","onSubmit","replace","FormDocumentList","FormApplicationList","FormExamList","candidateAnswers","ChooseReason","allClaimReasons","DocFormView","ApplicationFormView","ExaminationFormView","thisAnswerSheet","getMyClaims","GetClaimingTypes","getSystemSettings","GET_SYSTEM_SETTINGS","disableSystemSetting","DISABLE_SYSTEM_SETTINGS","GetTaskAccess","task","permitted","GET_TASK_ACCESS","GET_POSTIONS","deletePosition","DELETE_POSITION","publishPosition","PUBLISH_POSITION","displayCols","colsArray","PostRequestStatusInterface","DocumentAttributesInterface","SESSION_PLAN_KEYS","ViewRequirements","getFailedExam","allData","allCourses","sheet_id","isReclaimAllowed","_thisClaim","claim_status","EVALUATED","createReClaim","reClaimingMsg","warning","setReClaimingMsg","setReClaiming","reClaiming","FC_ApplicationPositionDistinctCategory","category_subcategory_data_id","answer","discription","termes","rules","right_click_enabled","copy_enabled","paste_enabled","stop_candidate_when_comeback","allow_to_leave_browser","CandidateAnswersDetails","tomorrow","setDate","compareWithToday","getRejectedApplicants","applicationData","objList","text","product","flag","prop","DocumentTitleData","documentData","documentTemp","company","end_year","names","school_id","start_year","year","doc_title","getRejectedDocuments","rejected","isActivationAllowed","thisPlans","end_date","getPlanTypeByKey","allPlanTypes","viewThisSession","thisPlan","planEndDate","planStartDate","start_date","type_status","SessionPlanTypeStatus","CLOSED","SessionDetails","handlePlanActivation","session","newState","newData","session_plan_name","prototype","hasOwnProperty","call","OPEN","type_title","allowed_claim_level","history","setViewThisSession","info","tooday","myDate","todayConverted","ChangeLocationComponent","setDisplay","changeLocation","_CandidateExams","setloadingExamsDone","loadingExamsDone","loadCandidateExams","QBank","candidateExams","alert","loadUserProfileDetails","FC_GetProfileDetails","InitializationFn","user_exams_done","loadUserApplications","candidate_applications","AddUserApplication","findLocation","updateLocation","selectedCourse","centersModal","maxExamModal","successMessage","updateLocationFunction","addLocation","location","proctoring_type","loadApplicationPeriods","removeDuplicatesExams","temp","removeDuplicatesNotPreparedExams","setTimeOut","temps","activeExams","selectApplication","setMaxExamModal","closeModal","selectedExam","FC_Access","UserAccessList","MY_APPLICATION","view","selected_exam_id","to","preparedExam","center_name","room_number","school_levels","UserExamStatus","Editing","Paused","setSelectedPosition","setSelectedCourse","setSelectedCandidateExam","Done","Removed","user_marks","found","duration_min","getMinutesFromTwoDates","timeout","returnString","labels","days","notPreparedExam","positionCourses","CandidateExams","periods","LoadCandidateApplications","claimList","setSelectedClaimType","loadingClaimTypes","setLoadingClaimTypes","countClaims","Fragment","isLoading","selectPeriod","ClaimTypesEnum","setViewPosition","viewPosition","district_name","loadingRejectedApplications","setLoadingRejectedApplications","loadingRejectedDocuments","setLoadingRejectedDocuments","COMPLETED","document_id","marks_publication","placement","claim_id","displayDocClaimTitle","allCourse","setClaimForm","claimForm","loadClaims","setSession","isDeleteAllowed","thisCLaim","ClaimApplView","ClaimExamView","CandidateClaim","setError"],"mappings":"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","file":"static/js/26.ba8fe822.chunk.js","sourcesContent":["import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdCancel, MdInfoOutline } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadQuestionTypes,\n  PushPopupAlert,\n  questionTypesStoreInterface,\n} from \"../../../actions\";\nimport { evaluateClaim } from \"../../../actions/claiming\";\nimport { AnswersDetails } from \"../../../components/AnswersDetails/AnswersDetails\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimExamResultsDetails,\n  claimReasonInterface,\n  ClaimStatus,\n  ClaimTypesInterfaceAPI,\n  course,\n} from \"../../../interfaces\";\nimport { ExamAnswerSheetDone } from \"../../../interfaces/exam\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { showDate } from \"../../../utils/functions\";\nimport { claimShowAnswer } from \"../Candidate/ExaminationFormView\";\nimport { isClaimEvaluated } from \"../ClaimDocView\";\n\nenum viewTabs {\n  profile = \"Applicant Profile\",\n  exam = \"Exam Details\",\n}\n\ntype AdminClaimExamViewProps = {\n  thisExamSheet: ClaimExamResultsDetails;\n  thisExam: course;\n  thisClaim: CandidateClaimInterface;\n  claimTypes: ClaimTypesInterfaceAPI[];\n  claimReasons: claimReasonInterface[] | null;\n\n  // REDUX ==================\n  auth: Auth;\n  questionTypes: questionTypesStoreInterface;\n  evaluateClaim: Function;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  PushPopupAlert: Function;\n};\n\nconst AdminClaimExamView: React.FC<AdminClaimExamViewProps> = (props) => {\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n  const [loading, setLoading] = useState(true);\n  const [actionTaken, setActionTaken] = useState<ClaimDecisionStatus | null>(\n    null\n  );\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [responseMsg, setResponseMsg] = useState<string>(\"\");\n  const [marks, setMarks] = useState<number>(0);\n  const [selectedTab, setSelectedTab] = useState<viewTabs>(viewTabs.profile);\n\n  useEffect(() => {\n    if (\n      props.questionTypes.questionTypes === null ||\n      (props.questionTypes.questionTypes.length === 0 && loading)\n    ) {\n      props.loadQuestionTypes(setLoading);\n    } else if (loading) {\n      setLoading(false);\n    }\n  }, [loading, props]);\n\n  if (loading || props.questionTypes.questionTypes === null) {\n    return <Loading />;\n  }\n\n  const handleVerify = async () => {\n    if (!actionTaken) {\n      setFormError({\n        element: \"action\",\n        msg: \"Action is required!\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    if (\n      actionTaken === ClaimDecisionStatus.ACCEPTED &&\n      (marks <= 0 || marks > 100)\n    ) {\n      setFormError({\n        element: \"marks\",\n        msg: \"Invalid marks, marks must be between 1 and 10\",\n      });\n\n      return setLoadingRequest(false);\n    }\n\n    if (isEmptyOrSpaces(responseMsg)) {\n      setFormError({\n        element: \"comment\",\n        msg: \"Reason of rejection is required\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    let subClaim = props.thisClaim.claims.find(\n      (item) => item.level === props.thisClaim.claim_level\n    );\n\n    if (subClaim) {\n      setLoadingRequest(true);\n      const api_body: {\n        sub_claim_id: string;\n        evaluation_comment: string;\n        evaluated_by: string;\n        evaluator_name: string;\n        evaluator_email: string;\n        decision_taken_status: ClaimDecisionStatus;\n      } = {\n        sub_claim_id: subClaim.id,\n        evaluation_comment: responseMsg,\n        evaluated_by: props.auth.user.user_id,\n        decision_taken_status: actionTaken,\n        evaluator_name: props.auth.user.fname + \" \" + props.auth.user.lname,\n        evaluator_email: props.auth.user.email,\n      };\n\n      try {\n        const res = await axios.put<CandidateClaimInterface>(\n          `${API.CLAIMING}/user/evaluate/${props.thisClaim._id}`,\n          api_body\n        );\n        if (res) {\n          console.log({ evaluate_claim_res: res });\n          props.evaluateClaim(res.data);\n          // REVALIDATED DOCUMENT IF IT IS APPROVED =========================\n          if (actionTaken === ClaimDecisionStatus.ACCEPTED) {\n            await handleMarksAddition();\n          }\n          props.PushPopupAlert({\n            title: `Claim responded successfully!`,\n            theme: PopupAlertTheme.success,\n          });\n          // setDocumentId(\"null\");\n          setResponseMsg(\"\");\n          setActionTaken(null);\n        }\n      } catch (error) {\n        console.error(error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      setLoadingRequest(false);\n    }\n  };\n\n  const handleMarksAddition = async () => {\n    try {\n      await axios.put(`${API.DO_EXAM}/answersheet/user/marks/update`, {\n        answer_sheet_id: props.thisClaim.claiming_on_id,\n        marks: marks,\n      });\n    } catch (error) {\n      console.error(error);\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  // const getAnswersByQuestion = (question_id: string): ClaimGetUserAnswers[] => {\n  //   return props.thisExamSheet.user_answers.filter(\n  //     (item) => item.question === question_id\n  //   );\n  // };\n\n  const claimCandidateAnswers = (): ExamAnswerSheetDone[] => {\n    let result: ExamAnswerSheetDone[] = [\n      {\n        exam_location: props.thisExamSheet.exam_location,\n        questions: props.thisExamSheet.questions,\n        user_answers: props.thisExamSheet.user_answers,\n        user: props.thisExamSheet.user,\n        period: props.thisExamSheet.period,\n        course: props.thisExamSheet.course,\n        exam_paper: props.thisExamSheet.exam_paper,\n        user_status: props.thisExamSheet.user_status,\n        used_duration: props.thisExamSheet.used_duration,\n        total_marks: props.thisExamSheet.total_marks,\n        number_of_question_answered:\n          props.thisExamSheet.number_of_question_answered,\n        // start_time: string,\n        // end_time: string,\n        exam_total_marks: props.thisExamSheet.exam_total_marks,\n        exam_start_time: props.thisExamSheet.exam_start_time,\n        exam_end_time: props.thisExamSheet.exam_end_time,\n        exam_date: props.thisExamSheet.exam_date,\n        status: props.thisExamSheet.status,\n        createdAt: props.thisExamSheet.createdAt,\n        updatedAt: props.thisExamSheet.updatedAt,\n        disability: false,\n        gender: \"\",\n        in_education: false,\n        position: \"\",\n        answer_sheet_id: props.thisExamSheet.answer_sheet_id,\n      },\n    ];\n    // props.thisExamSheet\n\n    return result;\n  };\n\n  return (\n    <section className=\"\">\n      {/* #################### VIEW TABS ################################## */}\n      <div className=\"flex flex-row items-center mx-4\">\n        {Object.values(viewTabs).map((item, i) => (\n          <div\n            key={i}\n            onClick={() => setSelectedTab(item)}\n            className={`animate__animated ${\n              selectedTab === item\n                ? \"bg-blue-100 border-blue-600 text-blue-600 animate__zoomIn\"\n                : \"bg-white border-white text-gray-600\"\n            } hover:bg-blue-100 px-4 py-2 cursor-pointer font-bold border-b-4 hover:border-blue-600 hover:text-blue-600 rounded-t mt-1 mr-1`}\n          >\n            {item}\n          </div>\n        ))}\n      </div>\n      {/* #################### END VIEW TABS ################################## */}\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          {/* DISPLAY POSITION ==================================================== */}\n          {selectedTab === viewTabs.exam && (\n            <section className=\"w-full my-1 animate__animated animate__fadeIn rounded\">\n              <div className=\"bg-white w-full rounded p-2 mb-2\">\n                <AnswersDetails\n                  showAnswers={true}\n                  exam_id={claimShowAnswer(\n                    props.thisExamSheet,\n                    props.thisExam.course_name\n                  )}\n                  allAnswers={claimCandidateAnswers()}\n                  user_id={props.thisExamSheet.user}\n                />\n              </div>\n            </section>\n          )}\n          {/* END DISPLAY POSITION ==================================================== */}\n          {/* -------------------------------------------------------------------------------- */}\n          {/* DISPLAY PROFILE ==================================================== */}\n          {selectedTab === viewTabs.profile && (\n            <section className=\"w-full my-2 animate__animated animate__fadeIn rounded\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center gap-2\">\n                  <span className={`italic text-gray-600`}>Names:</span>\n                  <span className=\"text-gray-800 font-bold text-xl\">\n                    {props.thisClaim.userDetails.user_info.fname +\n                      \" \" +\n                      props.thisClaim.userDetails.user_info.lname}\n                  </span>\n                </div>\n              </div>\n            </section>\n          )}\n          {/* END DISPLAY PROFILE ==================================================== */}\n          {selectedTab === viewTabs.profile && (\n            <div className=\"\">\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Email:</span>\n                <span className=\"text-gray-800 font-bold text-lg\">\n                  {props.thisClaim.userDetails.email}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Phone:</span>\n                <span className=\"text-gray-800 font-bold text-lg\">\n                  {props.thisClaim.userDetails.phone_number}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Gender:</span>\n                <span className=\"text-gray-800 font-bold text-lg\">\n                  {props.thisClaim.userDetails.user_info.sex === \"M\"\n                    ? \"Male\"\n                    : \"Female\"}\n                </span>\n              </div>\n            </div>\n          )}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVEL 1 DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              <div className=\"text-gray-700 italic font-bold\">\n                Claim Comment (level {index + 1})\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2 mt-1 border rounded px-2 py-1 bg-gray-50\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-600 text-xs\">\n                  {showDate(claim.createdAt)}\n                  {/* {showDate(claim.createdAt) +\n                    \" at \" +\n                    moment.unix(claim.date_created).format(\"MM/DD/YYYY\")} */}\n                </span>\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-700 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n            </section>\n          ))}\n        {/* END CLAIM LEVEL 1 DETAILS ==================================================== */}\n      </div>\n\n      {/* FOOTER INITIAL ========================================== */}\n      {!actionTaken && (\n        <section className=\"flex items-center justify-between bg-gray-50 rounded mt-3\">\n          {/* SHOWING STATUS ===================================== */}\n          <div className=\"mx-4 my-4\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n          </div>\n\n          {props.thisClaim.last_claim_status === ClaimStatus.PENDING && (\n            <div className=\"flex items-center gap-2 px-2\">\n              <button\n                className={`px-4 py-2 font-semibold text-red-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-red-700 hover:bg-red-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.REJECTED);\n                }}\n              >\n                <MdCancel className=\"w-5 h-5\" />\n                <span>Reject</span>\n              </button>\n              <button\n                className={`px-4 py-2 font-semibold text-blue-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-blue-700 hover:bg-blue-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.ACCEPTED);\n                }}\n              >\n                <FaRegCheckCircle className=\"w-5 h-5\" />\n                <span>Accept</span>\n              </button>\n            </div>\n          )}\n        </section>\n      )}\n      {/* END FOOTER INITIAL ========================================== */}\n\n      {/* ======================================================== */}\n      {/* FOOTER RESPONSE ========================================== */}\n      {actionTaken && (\n        <section className=\"my-5 overflow-x-auto\">\n          <div className=\"italic text-gray-700 text-base my-1 mx-2\">\n            Selected decision:{\" \"}\n            <span\n              className={`font-semibold text-lg ${\n                actionTaken === ClaimDecisionStatus.ACCEPTED\n                  ? \"text-blue-700\"\n                  : \"text-yellow-800\"\n              }`}\n            >\n              {actionTaken === ClaimDecisionStatus.ACCEPTED\n                ? \"Approved\"\n                : \"Rejected\"}\n            </span>\n          </div>\n          {/* right part */}\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full space-y-1\">\n              {actionTaken === ClaimDecisionStatus.ACCEPTED && (\n                <div className=\"flex items-center justify-end w-full gap-2\">\n                  <span className=\"font-semibold\">Addition marks</span>\n                  <div className=\"px-2\">\n                    <input\n                      placeholder={`Addition marks`}\n                      className={`border border-${\n                        formError && formError.element === \"marks\"\n                          ? \"red\"\n                          : \"gray\"\n                      }-400 rounded px-3 py-1 w-auto focus:outline-none`}\n                      value={marks}\n                      onChange={(e) => {\n                        setMarks(Number(e.target.value));\n                        setFormError(null);\n                      }}\n                      disabled={loadingRequest}\n                    />\n                    {formError && formError.element === \"marks\" && (\n                      <p className=\"text-red-800\">{formError.msg}</p>\n                    )}\n                  </div>\n                </div>\n              )}\n              <div className=\"w-full px-2\">\n                <textarea\n                  placeholder={`Reason of your decision...`}\n                  cols={50}\n                  rows={actionTaken === ClaimDecisionStatus.ACCEPTED ? 2 : 3}\n                  className={`border border-${\n                    formError && formError.element === \"comment\"\n                      ? \"red\"\n                      : \"gray\"\n                  }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                  style={{ resize: \"none\" }}\n                  value={responseMsg}\n                  onChange={(e) => {\n                    setResponseMsg(e.target.value);\n                    setFormError(null);\n                  }}\n                  disabled={loadingRequest}\n                ></textarea>\n                {formError && formError.element === \"comment\" && (\n                  <p className=\"text-red-800\">{formError.msg}</p>\n                )}\n              </div>\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  setResponseMsg(\"\");\n                  setActionTaken(null);\n                  setFormError(null);\n                }}\n                disabled={loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={loadingRequest}\n                onClick={() =>\n                  window.confirm(\n                    `Are you sure you want to ${\n                      actionTaken === ClaimDecisionStatus.ACCEPTED\n                        ? \"approve\"\n                        : \"rejected\"\n                    } this document?`\n                  ) && handleVerify()\n                }\n              >\n                {loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n          {/* end right part */}\n        </section>\n      )}\n      {/* END FOOTER RESPONSE ========================================== */}\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  questionTypes,\n}: StoreState): {\n  auth: Auth;\n  questionTypes: questionTypesStoreInterface;\n} => {\n  return {\n    auth,\n    questionTypes,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  loadQuestionTypes,\n  evaluateClaim,\n  PushPopupAlert,\n})(AdminClaimExamView);\n","import React, { useState } from \"react\";\nimport { CgImage } from \"react-icons/cg\";\nimport Loading from \"../../components/Loading/Loading\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport Table from \"../../components/Table/Table\";\nimport ViewPDF from \"../../components/ViewPDF/ViewPDF\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { UserDocumentsInterface } from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { fullScreen, getFileType, isFileImage } from \"../../utils/functions\";\nimport { PositionRequirementTableInterface } from \"./ViewPosition\";\n\ninterface RequirementProps {\n  requirements: PositionRequirementTableInterface[];\n  userDocs: UserDocumentsInterface[];\n}\n\nconst ViewDocRequirements: React.FC<RequirementProps> = (props) => {\n  const [viewDoc, setViewDoc] = useState<UserDocumentsInterface | null>(null);\n  const [loadingImage, setLoadingImage] = useState<boolean>(false);\n  const [isFullscreen, setSetFullscreen] = useState<boolean>(false);\n\n  const isDocumentExist = (\n    category_id: string,\n    sub_category_id: string,\n    field_id: string\n  ): UserDocumentsInterface | undefined => {\n    if (!isEmptyOrSpaces(category_id)) {\n      let userDocs: UserDocumentsInterface[] = props.userDocs.filter(\n        (item) => item.category_id === category_id\n      );\n\n      if (!isEmptyOrSpaces(sub_category_id)) {\n        userDocs = userDocs.filter(\n          (item) =>\n            item.validation_status === \"approved\" &&\n            item.category_id === category_id &&\n            item.sub_category_id === sub_category_id\n        );\n      }\n\n      if (!isEmptyOrSpaces(field_id)) {\n        return userDocs.find(\n          (item) =>\n            item.validation_status === \"approved\" &&\n            item.category_id === category_id &&\n            item.category_subcategory_data === field_id\n        );\n      }\n    }\n    return undefined;\n  };\n  const tableData = (): JSX.Element[] => {\n    let data: PositionRequirementTableInterface[] = props.requirements;\n    if (data.length === 0) {\n      return [\n        <tr key={153} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={3}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    return data.map((item, index) => (\n      <tr\n        key={index + item.field_id}\n        className={`border-b border-gray-200 hover:bg-gray-100 ${\n          !isDocumentExist(\n            item.category_id,\n            item.subcategory_id,\n            item.field_id\n          ) && \"text-yellow-800\"\n        }`}\n      >\n        <td className=\"p-3 text-left whitespace-nowrap\">{index + 1})</td>\n        <td className=\"p-3 text-left\">\n          <span>\n            {isEmptyOrSpaces(item.field_id)\n              ? \"Any \" + item.subcategory_title\n              : item.subcategory_title + \" in \" + item.field_title}\n          </span>\n        </td>\n        <td className={`p-3 text-left text-lg italic`}>\n          {isDocumentExist(item.category_id, item.subcategory_id, item.field_id)\n            ? \"Found\"\n            : \"Not found\"}\n        </td>\n        <td className={`p-3 text-right text-lg italic`}>\n          {isDocumentExist(\n            item.category_id,\n            item.subcategory_id,\n            item.field_id\n          ) && (\n            <button\n              className=\"bg-gray-200 hover:bg-gray-300 rounded font-medium px-2 py-1 focus:outline-none\"\n              onClick={() => {\n                setViewDoc(\n                  isDocumentExist(\n                    item.category_id,\n                    item.subcategory_id,\n                    item.field_id\n                  )!\n                );\n                setLoadingImage(true);\n              }}\n            >\n              View Doc\n            </button>\n          )}\n        </td>\n      </tr>\n    ));\n  };\n  const handleFullScreen = () => {\n    if (isFullscreen) {\n      fullScreen(\"doc-img\", \"CLOSE\");\n      setSetFullscreen(false);\n    } else {\n      setSetFullscreen(true);\n      fullScreen(\"doc-img\", \"OPEN\");\n    }\n  };\n\n  return (\n    <div>\n      <Table\n        columns={[\n          { columnTitle: \"#\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Qualification\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Status\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n        ]}\n        rows={tableData}\n        pagination={false}\n        search={false}\n        thColor=\"gray\"\n      />\n\n      {viewDoc && (\n        <Modal\n          backDrop={true}\n          theme={Themes.default}\n          close={() => {\n            setViewDoc(null);\n            setLoadingImage(false);\n          }}\n          backDropClose={false}\n          widthSizeClass={ModalSize.extraLarge}\n          displayClose={true}\n          padding={{\n            title: true,\n            body: false,\n            footer: false,\n          }}\n          title=\"Doc view\"\n        >\n          {loadingImage && <Loading />}\n          {viewDoc.files && viewDoc.files.length > 0 ? (\n            isFileImage(getFileType(viewDoc.files)) ? (\n              <div className=\"relative\">\n                <img\n                  src={API.AUTH_FILES + viewDoc.files}\n                  alt=\"\"\n                  className={`w-full md:w-auto h-auto md:max-h-screen mx-auto ${\n                    loadingImage && \"hidden\"\n                  }`}\n                  id=\"doc-img\"\n                  onLoad={() => setLoadingImage(false)}\n                  onDoubleClick={() => handleFullScreen()}\n                />\n              </div>\n            ) : (\n              <ViewPDF\n                file_url={API.AUTH_FILES + viewDoc.files}\n                class_name={`w-full h-screen md:max-h-screen mx-auto ${\n                  loadingImage && \"hidden\"\n                }`}\n                frame_title={\"application PDF file view\"}\n                setLoadingFile={setLoadingImage}\n              />\n            )\n          ) : (\n            <div className=\"text-center text-red-400 py-8 animate__animated animate__fadeIn\">\n              <CgImage className=\"mx-auto w-40 h-40\" />\n              <span className=\"font-semibold text-4xl\">No Files Provided</span>\n            </div>\n          )}\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default ViewDocRequirements;\n","import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdCancel, MdInfoOutline, MdTurnedIn } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert, reAssessApplication } from \"../../../actions\";\nimport { evaluateClaim } from \"../../../actions/claiming\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  allClaimApplicationInterface,\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  claimReasonInterface,\n  ClaimStatus,\n  ClaimTypesInterfaceAPI,\n  PositionAPI,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { DATE, showDate } from \"../../../utils/functions\";\nimport { PositionRequirementTableInterface } from \"../../Positions/ViewPosition\";\nimport ViewDocRequirements from \"../../Positions/ViewDocRequirements\";\nimport { isClaimEvaluated } from \"../ClaimDocView\";\n\nexport const FC_AdminApplicationPositionDistinctCategory = (\n  thisPosition: PositionAPI,\n  documentCategories: DocumentReducerInterface\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n  let requirements = thisPosition.requirements;\n  // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n  for (let req in requirements) {\n    let thisRequirements = requirements[req];\n    // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisCategory = documentCategories.documentCategory\n      ? documentCategories.documentCategory.find(\n          (item) =>\n            item.user_detail_category_id ===\n            thisRequirements.category.user_detail_category_id\n        ) && {\n          title: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.title,\n          user_detail_category_id: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.user_detail_category_id,\n        }\n      : {\n          title: \"\",\n          user_detail_category_id:\n            thisRequirements.category.user_detail_category_id,\n        };\n    // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisSubCategory = documentCategories.documentSubCategory\n      ? documentCategories.documentSubCategory.find(\n          (item) =>\n            item.user_detail_subcategory_id ===\n            thisRequirements.subcategory.user_detail_subcategory_id\n        )\n        ? {\n            title: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.title,\n            user_detail_subcategory_id:\n              documentCategories.documentSubCategory.find(\n                (item) =>\n                  item.user_detail_subcategory_id ===\n                  thisRequirements.subcategory.user_detail_subcategory_id\n              )!.user_detail_subcategory_id,\n            category_id: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.category_id,\n          }\n        : {\n            title: \"\",\n            user_detail_subcategory_id:\n              thisRequirements.subcategory.user_detail_subcategory_id,\n            category_id: \"\",\n          }\n      : {\n          title: \"\",\n          user_detail_subcategory_id:\n            thisRequirements.subcategory.user_detail_subcategory_id,\n          category_id: \"\",\n        };\n    // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n    if (thisCategory) {\n      for (let field in thisRequirements.position_requirement) {\n        // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n        let thisField = documentCategories.documentFields\n          ? documentCategories.documentFields.find(\n              (item) =>\n                item._id === thisRequirements.position_requirement[field]._id\n            )\n            ? {\n                title: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!.title,\n                _id: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n            : {\n                title: \"\",\n                _id: thisRequirements.position_requirement[field]._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n          : {\n              title: \"\",\n              _id: thisRequirements.position_requirement[field]._id,\n              required: thisRequirements.position_requirement[field].required,\n            };\n        // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n        PositionsTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: thisField.title,\n          field_id: thisField._id,\n          required: thisField.required,\n        });\n      }\n\n      // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n      ) {\n        DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n        DistinctCategoriesTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: \"\",\n          subcategory_title: \"\",\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n\n      // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctSubCategoriesIds.includes(\n          thisSubCategory.user_detail_subcategory_id\n        )\n      ) {\n        DistinctSubCategoriesIds.push(\n          thisSubCategory.user_detail_subcategory_id\n        );\n        DistinctSubCategoriesTemp.push({\n          category_id: thisSubCategory.category_id,\n          category_title: \"\",\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n    }\n  }\n  // DistinctCategoriesIds.;\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\ntype AdminClaimAppViewProps = {\n  thisApplication: allClaimApplicationInterface;\n  thisPosition: PositionAPI;\n  documentCategories: DocumentReducerInterface;\n  thisClaim: CandidateClaimInterface;\n  claimTypes: ClaimTypesInterfaceAPI[];\n  systemPositions: PositionAPI[];\n  claimReasons: claimReasonInterface[] | null;\n\n  // REDUX ==================\n  auth: Auth;\n  reAssessApplication: Function;\n  evaluateClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst AdminClaimAppView: React.FC<AdminClaimAppViewProps> = (props) => {\n  const [viewPosition, setViewPosition] = useState<boolean>(true);\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n  const [actionTaken, setActionTaken] = useState<ClaimDecisionStatus | null>(\n    null\n  );\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [responseMsg, setResponseMsg] = useState<string>(\"\");\n\n  const handleVerify = async () => {\n    if (!actionTaken) {\n      setFormError({\n        element: \"action\",\n        msg: \"Action is required!\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    if (isEmptyOrSpaces(responseMsg)) {\n      setFormError({\n        element: \"comment\",\n        msg: \"Reason of rejection is required\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    let subClaim = props.thisClaim.claims.find(\n      (item) => item.level === props.thisClaim.claim_level\n    );\n\n    if (subClaim) {\n      setLoadingRequest(true);\n      const api_body: {\n        sub_claim_id: string;\n        evaluation_comment: string;\n        evaluated_by: string;\n        decision_taken_status: ClaimDecisionStatus;\n      } = {\n        sub_claim_id: subClaim.id,\n        evaluation_comment: responseMsg,\n        evaluated_by: props.auth.user.user_id,\n        decision_taken_status: actionTaken,\n      };\n\n      try {\n        const res = await axios.put<CandidateClaimInterface>(\n          `${API.CLAIMING}/user/evaluate/${props.thisClaim._id}`,\n          api_body\n        );\n        if (res) {\n          console.log({ evaluate_claim_res: res });\n          props.evaluateClaim(res.data);\n          // REVALIDATED DOCUMENT IF IT IS APPROVED =========================\n          if (actionTaken === ClaimDecisionStatus.ACCEPTED) {\n            await overrideDecision();\n          }\n          props.PushPopupAlert({\n            title: `Claim responded successfully!`,\n            theme: PopupAlertTheme.success,\n          });\n          // setDocumentId(\"null\");\n          setResponseMsg(\"\");\n          setActionTaken(null);\n        }\n      } catch (error) {\n        console.error(error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      setLoadingRequest(false);\n    }\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  const overrideDecision = async () => {\n    try {\n      const res = await axios.patch(\n        `${API.APPLICATION}/tolerateappl/${props.thisClaim.claiming_on_id}`,\n        {\n          user_id: props.auth.user.user_id,\n          comment: responseMsg,\n          application_status: ApplicationStates.Shortlisted,\n        }\n      );\n\n      res.data &&\n        props.reAssessApplication({\n          application_id: props.thisClaim.claiming_on_id,\n          application_status: ApplicationStates.Shortlisted,\n        });\n    } catch (error) {\n      console.error({ code_error: error });\n      PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      // errorToText(error);\n    }\n    setLoadingRequest(false);\n  };\n\n  const getPositionById = (position_id: string): PositionAPI | undefined => {\n    let result = props.systemPositions.find(\n      (item) => item.position_id === position_id\n    );\n\n    return result;\n  };\n\n  return (\n    <section>\n      <div className=\"w-full py-1 divide-y-2 space-y-4\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          {/* DISPLAY PROFILE ==================================================== */}\n          <section className=\"w-full mb-4 -mt-2 pb-3 px-4 bg-white\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center gap-2 px-12\">\n                <span className={`italic text-blue-600`}>Applicant:</span>\n                <span className=\"text-blue-800 font-bold text-xl\">\n                  {props.thisClaim.previous.evaluater.name}\n                </span>\n              </div>\n              {false && (\n                <button\n                  type=\"button\"\n                  className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                  onClick={() => setViewPosition(!viewPosition)}\n                >\n                  {viewPosition ? \"Hide\" : \"More\"}\n                </button>\n              )}\n            </div>\n          </section>\n          {/* DISPLAY POSITION ==================================================== */}\n          <section className=\"w-full mb-4 bg-white px-4 py-2 rounded\">\n            <div className=\"bg-white w-full\">\n              <div className=\"text-gray-800 text-2xl font-bold\">\n                Position Details\n              </div>\n              <div className=\"flex items-center\">\n                <div className=\"flex items-center gap-2\">\n                  <span className={`italic text-gray-600`}>Name:</span>\n                  <span className=\"text-gray-800 font-bold text-2xl\">\n                    {getPositionById(props.thisApplication.position)\n                      ? getPositionById(props.thisApplication.position)!\n                          .position_title\n                      : \"Position not found\"}\n                  </span>\n                </div>\n              </div>\n              <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                <span className={`italic`}>Desc:</span>\n                <span className=\"font-semibold\">\n                  {getPositionById(props.thisApplication.position)\n                    ? getPositionById(props.thisApplication.position)!\n                        .description\n                    : \"\"}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                <span className={`italic`}>School level:</span>\n                <span className=\"font-semibold\">\n                  {getPositionById(props.thisApplication.position)\n                    ? getPositionById(props.thisApplication.position)!\n                        .school_level_id.school_level_name\n                    : \"\"}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                <span className={`italic`}>Institute:</span>\n                <span className=\"font-semibold\">\n                  {getPositionById(props.thisApplication.position)\n                    ? getPositionById(props.thisApplication.position)!\n                        .education_institute_id.education_category_title\n                    : \"\"}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                <span className={`italic`}>Exams:</span>\n                <span className=\"flex items-center gap-2\">\n                  {getPositionById(props.thisApplication.position) ? (\n                    getPositionById(\n                      props.thisApplication.position\n                    )!.courses.map((item, index) => (\n                      <div\n                        key={index + item.course_id}\n                        className=\"flex items-center gap-1\"\n                      >\n                        <span className=\"font-semibold\">\n                          {item.course_name}\n                        </span>\n                        <span className=\"text-gray-600\">\n                          ({item.course_code})\n                        </span>\n                        {index !==\n                          getPositionById(props.thisApplication.position)!\n                            .courses.length -\n                            1 && \",\"}\n                      </div>\n                    ))\n                  ) : (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"No courses found\"}\n                    />\n                  )}\n                </span>\n              </div>\n\n              <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                Position Requirements\n              </div>\n              {getPositionById(props.thisApplication.position) ? (\n                getPositionById(props.thisApplication.position)!.requirements\n                  .length > 0 ? (\n                  FC_AdminApplicationPositionDistinctCategory(\n                    getPositionById(props.thisApplication.position)!,\n                    props.documentCategories\n                  ).DistinctCategoriesTemp.map((item, index) => (\n                    <div\n                      className=\"bg-gray-100props.thisApplication.position rounded p-2\"\n                      key={index + item.category_id}\n                    >\n                      <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                        <MdTurnedIn />\n                        <span>{item.category_title}</span>\n                      </div>\n                      <div className=\"border bg-white mt-1\">\n                        <ViewDocRequirements\n                          requirements={FC_AdminApplicationPositionDistinctCategory(\n                            getPositionById(props.thisApplication.position)!,\n                            props.documentCategories\n                          ).PositionsTemp.filter(\n                            (req) => req.category_id === item.category_id\n                          )}\n                          userDocs={props.thisClaim.userDetails.details}\n                        />\n                      </div>\n                    </div>\n                  ))\n                ) : (\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"No requirements\"}\n                  ></NoResult>\n                )\n              ) : (\n                <NoResult\n                  theme={NoResultThemes.Dark}\n                  value={\"No requirements\"}\n                ></NoResult>\n              )}\n            </div>\n          </section>\n          {/* END DISPLAY POSITION ==================================================== */}\n          {/* -------------------------------------------------------------------------------- */}\n          {/* END DISPLAY PROFILE ==================================================== */}\n          {/* {selectedTab === viewTabs.profile && (\n            <div className=\"flex items-center\">\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Position name:</span>\n                <span className=\"text-gray-800 font-bold text-2xl\">\n                  {getPositionById(props.thisApplication.position)\n                    ? getPositionById(props.thisApplication.position)!\n                        .position_title\n                    : \"Position not found\"}\n                </span>\n              </div>\n            </div>\n          )} */}\n          <section className=\"px-4 py-2 bg-white rounded\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Status:</span>\n              <span\n                className={`font-bold ${\n                  props.thisClaim.previous\n                    ? props.thisClaim.previous.status ===\n                      ApplicationStates.Rejected\n                    : props.thisApplication.application_status ===\n                      ApplicationStates.Rejected\n                    ? \"text-yellow-900\"\n                    : \"text-blue-600\"\n                } rounded px-3 py-1`}\n              >\n                {props.thisClaim.previous\n                  ? capitalizeFirstLetter(props.thisClaim.previous.status)\n                  : capitalizeFirstLetter(\n                      props.thisApplication.application_status\n                    )}\n              </span>\n            </div>\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Evaluated by:</span>\n              <span className=\"font-semibold\">\n                {props.thisClaim.previous.evaluater.name}\n              </span>\n            </div>\n            {false && (\n              <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                <span className={`italic`}>Session:</span>\n                <span className=\"font-bold text-gray-900 py-1\">\n                  {props.thisApplication.application_session}\n                </span>\n              </div>\n            )}\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Date:</span>\n              <span className=\"font-bold text-gray-900 py-1\">\n                {DATE(props.thisApplication.createdAt)}\n              </span>\n            </div>\n            <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Reason:</span>\n              <span\n                className=\"font-normal\"\n                dangerouslySetInnerHTML={{\n                  __html: props.thisClaim.previous\n                    ? props.thisClaim.previous.reason\n                    : props.thisApplication.override_by.comment,\n                }}\n              ></span>\n            </div>\n          </section>\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVEL 1 DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section\n              className=\"flex flex-col px-4 pt-2 pb-3 rounded bg-white\"\n              key={index + claim.id}\n            >\n              <div className=\"text-gray-700 italic font-bold\">\n                Claim Comment (level {index + 1})\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2 mt-1 border rounded px-4 py-1 bg-gray-50\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-600 text-xs\">\n                  {showDate(claim.createdAt)}\n                  {/* {showDate(claim.createdAt) +\n                    \" at \" +\n                    moment.unix(claim.date_created).format(\"MM/DD/YYYY\")} */}\n                </span>\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-700 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n            </section>\n          ))}\n        {/* END CLAIM LEVEL 1 DETAILS ==================================================== */}\n      </div>\n\n      {/* FOOTER INITIAL ========================================== */}\n      {!actionTaken && (\n        <section className=\"flex items-center justify-between bg-gray-50 rounded mt-3\">\n          {/* SHOWING STATUS ===================================== */}\n          <div className=\"mx-4 my-4\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n          </div>\n\n          {props.thisClaim.last_claim_status === ClaimStatus.PENDING && (\n            <div className=\"flex items-center gap-2 px-2\">\n              <button\n                className={`px-4 py-2 font-semibold text-red-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-red-700 hover:bg-red-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.REJECTED);\n                }}\n              >\n                <MdCancel className=\"w-5 h-5\" />\n                <span>Reject</span>\n              </button>\n              <button\n                className={`px-4 py-2 font-semibold text-blue-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-blue-700 hover:bg-blue-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.ACCEPTED);\n                }}\n              >\n                <FaRegCheckCircle className=\"w-5 h-5\" />\n                <span>Accept</span>\n              </button>\n            </div>\n          )}\n        </section>\n      )}\n      {/* END FOOTER INITIAL ========================================== */}\n\n      {/* ======================================================== */}\n      {/* FOOTER RESPONSE ========================================== */}\n      {actionTaken && (\n        <section className=\"my-5 overflow-x-auto\">\n          <div className=\"italic text-gray-700 text-base my-1 mx-2\">\n            Selected decision:{\" \"}\n            <span\n              className={`font-semibold text-lg ${\n                actionTaken === ClaimDecisionStatus.ACCEPTED\n                  ? \"text-blue-700\"\n                  : \"text-yellow-800\"\n              }`}\n            >\n              {actionTaken === ClaimDecisionStatus.ACCEPTED\n                ? \"Approved\"\n                : \"Rejected\"}\n            </span>\n          </div>\n          {/* right part */}\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your decision...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  formError && formError.element === \"comment\" ? \"red\" : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={responseMsg}\n                onChange={(e) => {\n                  setResponseMsg(e.target.value);\n                  setFormError(null);\n                }}\n                disabled={loadingRequest}\n              ></textarea>\n              {formError && formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  setResponseMsg(\"\");\n                  setActionTaken(null);\n                  setFormError(null);\n                }}\n                disabled={loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={loadingRequest}\n                onClick={() =>\n                  window.confirm(\n                    `Are you sure you want to ${\n                      actionTaken === ClaimDecisionStatus.ACCEPTED\n                        ? \"approve\"\n                        : \"rejected\"\n                    } this document?`\n                  ) && handleVerify()\n                }\n              >\n                {loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n          {/* end right part */}\n        </section>\n      )}\n      {/* END FOOTER RESPONSE ========================================== */}\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n}: StoreState): {\n  auth: Auth;\n} => {\n  return {\n    auth: auth,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  evaluateClaim,\n  reAssessApplication,\n  PushPopupAlert,\n})(AdminClaimAppView);\n","import axios from \"axios\";\nimport React from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdCancel, MdInfoOutline } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { adminDisplayClaimTitle } from \".\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport { evaluateClaim } from \"../../../actions/claiming\";\nimport { verifyDocument } from \"../../../actions/document\";\nimport { VerifyDocumentInterface } from \"../../../actions/users\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  claimReasonInterface,\n  ClaimStatus,\n  ClaimTypesInterfaceAPI,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport {\n  DocValidationStatusInterface,\n  UserDocumentsInterface,\n} from \"../../../shared/interfaces\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { showDate } from \"../../../utils/functions\";\nimport { isClaimEvaluated } from \"../ClaimDocView\";\n\ntype AdminClaimDocViewProps = {\n  thisDoc: UserDocumentsInterface;\n  documentCategories: DocumentReducerInterface;\n  thisClaim: CandidateClaimInterface;\n  claimReasons: claimReasonInterface[] | null;\n  candidateId: string;\n  claimTypes: ClaimTypesInterfaceAPI[];\n  viewImage: boolean;\n  setViewImage: (value: boolean) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  actionTaken: ClaimDecisionStatus | null;\n  setActionTaken: (value: ClaimDecisionStatus | null) => void;\n  responseMsg: string;\n  setResponseMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX ==================\n  auth: Auth;\n  verifyDocument: Function;\n  evaluateClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst AdminClaimDocView: React.FC<AdminClaimDocViewProps> = (props) => {\n  const handleVerify = async () => {\n    if (!props.actionTaken) {\n      props.setFormError({\n        element: \"action\",\n        msg: \"Action is required!\",\n      });\n      return props.setLoadingRequest(false);\n    }\n\n    if (isEmptyOrSpaces(props.responseMsg)) {\n      props.setFormError({\n        element: \"comment\",\n        msg: \"Reason of rejection is required\",\n      });\n      return props.setLoadingRequest(false);\n    }\n\n    let subClaim = props.thisClaim.claims.find(\n      (item) => item.level === props.thisClaim.claim_level\n    );\n\n    if (subClaim) {\n      props.setLoadingRequest(true);\n      const api_body: {\n        sub_claim_id: string;\n        evaluation_comment: string;\n        evaluated_by: string;\n        evaluator_name: string;\n        evaluator_email: string;\n        decision_taken_status: ClaimDecisionStatus;\n      } = {\n        sub_claim_id: subClaim.id,\n        evaluation_comment: props.responseMsg,\n        evaluated_by: props.auth.user.user_id,\n        decision_taken_status: props.actionTaken,\n        evaluator_name: props.auth.user.fname + \" \" + props.auth.user.lname,\n        evaluator_email: props.auth.user.email,\n      };\n\n      try {\n        const res = await axios.put<CandidateClaimInterface>(\n          `${API.CLAIMING}/user/evaluate/${props.thisClaim._id}`,\n          api_body\n        );\n        if (res) {\n          console.log({ evaluate_claim_res: res });\n          props.evaluateClaim(res.data);\n          // REVALIDATED DOCUMENT IF IT IS APPROVED =========================\n          if (props.actionTaken === ClaimDecisionStatus.ACCEPTED) {\n            await FC_DocValidation();\n          }\n          props.PushPopupAlert({\n            title: `Claim responded successfully!`,\n            theme: PopupAlertTheme.success,\n          });\n          // setDocumentId(\"null\");\n          props.setResponseMsg(\"\");\n          props.setActionTaken(null);\n        }\n      } catch (error) {\n        console.error(error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      props.setLoadingRequest(false);\n    }\n  };\n\n  const FC_DocValidation = async () => {\n    const api_body: VerifyDocumentInterface = {\n      user_id: props.thisClaim.user,\n      doc_id: props.thisClaim.claiming_on_id,\n      validation_status:\n        props.actionTaken === ClaimDecisionStatus.ACCEPTED\n          ? DocValidationStatusInterface.APPROVED\n          : DocValidationStatusInterface.REJECTED,\n      validated_by: {\n        user_id: props.auth.user.user_id,\n        comment: props.responseMsg,\n        validation_status:\n          props.actionTaken === ClaimDecisionStatus.ACCEPTED\n            ? DocValidationStatusInterface.APPROVED\n            : DocValidationStatusInterface.REJECTED,\n      },\n      in_education: false,\n      disability: false,\n    };\n    const api_redux: VerifyDocumentInterface = {\n      user_id: props.thisClaim.user,\n      doc_id: props.thisClaim.claiming_on_id,\n      validation_status:\n        props.actionTaken === ClaimDecisionStatus.ACCEPTED\n          ? DocValidationStatusInterface.APPROVED\n          : DocValidationStatusInterface.REJECTED,\n      validated_by: {\n        user_id: props.auth.user.user_id,\n        comment: props.responseMsg,\n        validation_status:\n          props.actionTaken === ClaimDecisionStatus.ACCEPTED\n            ? DocValidationStatusInterface.APPROVED\n            : DocValidationStatusInterface.REJECTED,\n        date: \"\",\n      },\n      in_education: false,\n      disability: false,\n    };\n\n    try {\n      const res = await axios.post<VerifyDocumentInterface>(\n        `${API.AUTH}/validateuserdoc`,\n        api_body\n      );\n      if (res) {\n        props.verifyDocument(api_redux);\n        await FC_shortListing(props.thisClaim.user);\n        // setDocumentId(\"null\");\n      }\n    } catch (error) {\n      console.error(error);\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  const FC_shortListing = async (candidate_id: string) => {\n    try {\n      const res = await axios.patch(\n        `${API.APPLICATION}/doccheckshortlist/${candidate_id}`\n      );\n      console.log({ res });\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2\">\n              <span className={`italic text-gray-600`}>Names:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.thisClaim.userDetails.user_info.fname +\n                  \" \" +\n                  props.thisClaim.userDetails.user_info.lname}\n              </span>\n            </div>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewImage(!props.viewImage)}\n            >\n              {props.viewImage ? \"Hide\" : \"View\"}\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <span className={`italic text-gray-600`}>Title:</span>\n            <span className=\"text-gray-800 font-bold text-2xl\">\n              {/* {ClaimGetDocTitle(props.documentCategories, props.thisDoc).main} */}\n              {props.thisClaim.userDetails.details.filter(\n                (item) => item.validation_status !== \"waiting\"\n              ).length > 0\n                ? adminDisplayClaimTitle(\n                    props.documentCategories,\n                    props.thisClaim.userDetails.details.filter(\n                      (item) => item.validation_status !== \"waiting\"\n                    ),\n                    props.thisClaim\n                  )\n                : \"-\"}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span className=\"font-bold text-yellow-900 rounded px-3 py-1\">\n              {props.thisClaim.previous\n                ? capitalizeFirstLetter(props.thisClaim.previous.status)\n                : capitalizeFirstLetter(props.thisDoc.validation_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {props.thisClaim.previous.evaluater.name}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisClaim.previous\n                ? props.thisClaim.previous.reason\n                : props.thisDoc.validated_by.commet}\n            </span>\n          </div>\n\n          {/* DISPLAY IMAGE ==================================================== */}\n          {props.viewImage && (\n            <div className=\"w-full my-1 animate__animated animate__fadeIn\">\n              <img\n                src={`${API.AUTH_FILES}/${props.thisDoc.files}`}\n                alt=\"doc file\"\n                className={`w-full animate__animated animate__fadeIn`}\n              />\n            </div>\n          )}\n          {/* END DISPLAY IMAGE ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVEL 1 DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              <div className=\"text-gray-700 italic font-bold\">\n                Claim Comment (level {index + 1})\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2 mt-1 border rounded px-4 py-1 bg-gray-50\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt)}\n                </span>\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-700 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n            </section>\n          ))}\n        {/* END CLAIM LEVEL 1 DETAILS ==================================================== */}\n      </div>\n\n      {/* FOOTER INITIAL ========================================== */}\n      {!props.actionTaken && (\n        <section className=\"flex items-center justify-between bg-gray-50 rounded mt-3\">\n          {/* SHOWING STATUS ===================================== */}\n          <div className=\"mx-4\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n          </div>\n\n          {props.thisClaim.last_claim_status === ClaimStatus.PENDING && (\n            <div className=\"flex items-center gap-2 px-2\">\n              <button\n                className={`px-4 py-2 font-semibold text-red-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-red-700 hover:bg-red-800`}\n                onClick={() => {\n                  props.setActionTaken(ClaimDecisionStatus.REJECTED);\n                }}\n              >\n                <MdCancel className=\"w-5 h-5\" />\n                <span>Reject</span>\n              </button>\n              <button\n                className={`px-4 py-2 font-semibold text-blue-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-blue-700 hover:bg-blue-800`}\n                onClick={() => {\n                  props.setActionTaken(ClaimDecisionStatus.ACCEPTED);\n                }}\n              >\n                <FaRegCheckCircle className=\"w-5 h-5\" />\n                <span>Accept</span>\n              </button>\n            </div>\n          )}\n        </section>\n      )}\n      {/* END FOOTER INITIAL ========================================== */}\n\n      {/* ======================================================== */}\n      {/* FOOTER RESPONSE ========================================== */}\n      {props.actionTaken && (\n        <section className=\"my-5 overflow-x-auto\">\n          <div className=\"italic text-gray-700 text-base my-1 mx-2\">\n            Selected decision:{\" \"}\n            <span\n              className={`font-semibold text-lg ${\n                props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                  ? \"text-blue-700\"\n                  : \"text-yellow-800\"\n              }`}\n            >\n              {props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                ? \"Approved\"\n                : \"Rejected\"}\n            </span>\n          </div>\n          {/* right part */}\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your decision...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.responseMsg}\n                onChange={(e) => {\n                  props.setResponseMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setResponseMsg(\"\");\n                  props.setActionTaken(null);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() =>\n                  window.confirm(\n                    `Are you sure you want to ${\n                      props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                        ? \"approve\"\n                        : \"rejected\"\n                    } this document?`\n                  ) && handleVerify()\n                }\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n          {/* end right part */}\n        </section>\n      )}\n      {/* END FOOTER RESPONSE ========================================== */}\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n}: StoreState): {\n  auth: Auth;\n} => {\n  return {\n    auth: auth,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  evaluateClaim,\n  verifyDocument,\n  PushPopupAlert,\n})(AdminClaimDocView);\n","import React, { Component } from \"react\";\nimport { MdArrowBack, MdInfoOutline } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Auth, loadCourses, PushPopupAlert } from \"../../../actions\";\nimport {\n  getAllClaims,\n  getAllApplications,\n  getClaimReasons,\n  getAllAnswers,\n} from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport { getPositions } from \"../../../actions/settings\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport TableLoading from \"../../../components/Loading/TableLoading\";\nimport { SideNavigation } from \"../../../components/Navigation/SideNavigation\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  SessionPlanInterface,\n  PositionAPI,\n  allClaimApplicationInterface,\n  CandidateClaimInterface,\n  PlansTypeKeys,\n  ClaimDecisionStatus,\n  ClaimTypesInterface,\n  course,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { UserDocumentsInterface } from \"../../../shared/interfaces\";\nimport { getClaimById, whichClaimStatus, whichClaimType } from \"../Candidate\";\nimport { getCourseById, getCourseIdBySheetId } from \"../Candidate/FormExamList\";\nimport ClaimHeaderTitle from \"../ClaimHeaderTitle\";\nimport AdminClaimAppView from \"./AdminClaimAppView\";\nimport AdminClaimDocView from \"./AdminClaimDocView\";\nimport AdminClaimExamView from \"./AdminClaimExamView\";\nimport AdminFilterByType, {\n  filterClaimsByClaimType,\n} from \"./AdminFilterByType\";\n\n// export const getUserDocuments = (\n//   userList: UserInterface[],\n//   user_id: String\n// ): { user: UserInterface; document: UserDocumentsInterface[] } | null => {\n//   const thisUser = userList.find((item) => item.user_id === user_id);\n//   if (thisUser) {\n//     const thisDoc = thisUser.details.filter(\n//       (item) => item.validation_status !== \"waiting\"\n//     );\n//     return { user: thisUser, document: thisDoc };\n//   }\n//   return null;\n// };\n\nexport const adminDisplayClaimTitle = (\n  documentCategories: DocumentReducerInterface,\n  candidateDocuments: UserDocumentsInterface[],\n  thisClaim: CandidateClaimInterface\n): string => {\n  let result: string = \"\";\n\n  // CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n  if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n    let thisDoc = candidateDocuments.find(\n      (item) => item.doc_id === thisClaim.claiming_on_id\n    );\n    result = thisDoc\n      ? AdminClaimGetDocTitle(documentCategories, thisDoc).main\n      : \"Document not found\";\n  }\n  // END CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n\n  return result;\n};\n\nexport const AdminClaimGetDocTitle = (\n  documentCategories: DocumentReducerInterface,\n  doc: UserDocumentsInterface\n): { category: string; sub_category: string; field: string; main: string } => {\n  let DocCategory: string = \"\",\n    DocSubCategory: string = \"\",\n    DocField: string = \"\",\n    DocTitle: string = \"\";\n  if (\n    doc.sub_category_id &&\n    doc.sub_category_id.length > 0 &&\n    documentCategories.documentSubCategory\n  ) {\n    DocTitle = documentCategories.documentSubCategory.filter(\n      (c) => c.user_detail_subcategory_id === doc.sub_category_id\n    )[0].title;\n    DocSubCategory = DocTitle;\n  } else if (\n    doc.category_id.length > 0 &&\n    documentCategories.documentCategory\n  ) {\n    DocTitle = documentCategories.documentCategory.filter(\n      (c) => c.user_detail_category_id === doc.category_id\n    )[0].title;\n    DocCategory = DocTitle;\n  }\n  if (\n    doc.category_subcategory_data.length > 0 &&\n    documentCategories.documentFields\n  ) {\n    DocField = documentCategories.documentFields.filter(\n      (c) => c._id === doc.category_subcategory_data\n    )[0].title;\n    DocTitle += \" in \" + DocField;\n  }\n\n  return {\n    category: DocCategory,\n    sub_category: DocSubCategory,\n    field: DocField,\n    main: DocTitle,\n  };\n};\n\nexport const getApplicationById = (\n  allApplications: allClaimApplicationInterface[] | null,\n  systemPositions: PositionAPI[] | null,\n  application_id: String\n): {\n  application: allClaimApplicationInterface;\n  position: PositionAPI;\n} | null => {\n  if (allApplications) {\n    let thisApplication = allApplications.find(\n      (item) => item._id === application_id\n    );\n    if (thisApplication && systemPositions) {\n      let thisPosition = systemPositions.find(\n        (item) => item.position_id === thisApplication!.position\n      );\n      if (thisPosition) {\n        return { application: thisApplication, position: thisPosition };\n      }\n    }\n  }\n  return null;\n};\n\ntype AppProps = {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  systemPositions: PositionAPI[] | null;\n  courses: course[] | null;\n  loadCourses: Function;\n  getPositions: Function;\n  getClaimReasons: Function;\n  getAllApplications: Function;\n  getAllClaims: Function;\n  getAllAnswers: Function;\n  GetAllSessionPlans: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  verifyAllDocument: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype AppState = {\n  loading: boolean;\n  loadingData: boolean;\n  thisPeriod: SessionPlanInterface | null;\n  viewClaim: boolean;\n  periodChanged: boolean;\n  claimId: string | null;\n  claimType: string | null;\n  candidateId: string | null;\n\n  // FOR FORM ================\n  viewImage: boolean;\n  loadingRequest: boolean;\n  actionTaken: ClaimDecisionStatus | null;\n  responseMsg: string;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n};\n\nclass Index extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingData: false,\n      thisPeriod: null,\n      viewClaim: false,\n      periodChanged: false,\n      claimId: null,\n      claimType: null,\n      candidateId: null,\n\n      // FOR FORM ================\n      viewImage: false,\n      loadingRequest: false,\n      actionTaken: null,\n      responseMsg: \"\",\n      formError: null,\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingData = (value: boolean) => {\n    this.setState({ loadingData: value });\n  };\n\n  setPeriodChanged = (value: boolean) => {\n    this.setState({ periodChanged: value });\n  };\n\n  setThisPeriod = (value: SessionPlanInterface | null) => {\n    this.setState({ thisPeriod: value });\n  };\n\n  setViewClaim = (value: boolean) => {\n    this.setState({ viewClaim: value });\n  };\n\n  // ------------------------------\n  setClaimId = (value: string | null) => {\n    this.setState({ claimId: value });\n  };\n  setClaimType = (value: string | null) => {\n    this.setState({ claimType: value });\n  };\n  setCandidateId = (value: string | null) => {\n    this.setState({ candidateId: value });\n  };\n  setViewImage = (value: boolean) => {\n    this.setState({ viewImage: value });\n  };\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n\n  setActionTaken = (value: ClaimDecisionStatus | null) => {\n    this.setState({ actionTaken: value });\n  };\n  setResponseMsg = (value: string) => {\n    this.setState({ responseMsg: value });\n  };\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n\n  setDefaultSession = (sessions: SessionPlanInterface[]) => {\n    // SETTING ACTIVE SESSION ==========================\n    if (this.state.thisPeriod === null) {\n      let thisSession = sessions.find((item) => item.is_active === true);\n      this.setThisPeriod(thisSession ? thisSession : sessions[0]);\n      this.loadsAllClaims(thisSession ? thisSession : sessions[0]);\n    }\n  };\n\n  loadsAllClaims = (thisSession: SessionPlanInterface) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (this.props.claiming.allClaims === null) {\n      this.props.getAllClaims(\n        2,\n        thisSession.session_plan_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    }\n  };\n\n  loadsApplications = (application_id: string) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (\n      !this.props.claiming.allApplications.find(\n        (item) => item._id === application_id\n      )\n    ) {\n      this.props.getAllApplications(\n        application_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    }\n  };\n\n  loadsController = (file_id: string, claimType: PlansTypeKeys) => {\n    if (claimType === PlansTypeKeys.APPLICATION)\n      this.loadsApplications(file_id);\n    if (claimType === PlansTypeKeys.EXAMINATION) this.loadsAlAnswers(file_id);\n  };\n\n  loadsAlAnswers = (answersheet_id: string) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (\n      !this.props.claiming.allAnswer.find(\n        (item) => item.answer_sheet_id === answersheet_id\n      )\n    ) {\n      this.props.getAllAnswers(\n        answersheet_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    }\n  };\n\n  componentDidMount = () => {\n    // LOADING APPLICATION SESSION ====================================\n    if (this.props.application_sessions === null) {\n      this.props.GetAllSessionPlans(\n        (status: boolean, msg: string, data?: SessionPlanInterface[]) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data && data.length > 0) {\n              this.setDefaultSession(data);\n            }\n          }\n        }\n      );\n    } else if (this.props.application_sessions.length > 0) {\n      this.setDefaultSession(this.props.application_sessions);\n    }\n\n    // LOADING DOCUMENT CATEGORIES ==========================\n    if (!this.props.documentReducer.documentCategory) {\n      this.props.getDocumentCategory();\n      this.setLoading(false);\n    }\n\n    // LOADING DOCUMENT CLARIFICATIONS ==========================\n    if (!this.props.documentReducer.documentSubCategory) {\n      this.props.getDocumentSubCategory();\n      this.setLoading(false);\n    }\n\n    // LOADING DOCUMENT FIELDS ==========================\n    if (!this.props.documentReducer.documentFields) {\n      this.props.getDocumentFields();\n      this.setLoading(false);\n    }\n\n    if (this.props.systemPositions === null) {\n      this.props.getPositions((status: boolean, msg: string) => {\n        this.setLoading(status);\n        console.log({ status: status, msg: msg });\n        if (msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n\n    if (this.props.claiming.claimReasons === null) {\n      this.props.getClaimReasons((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (!status) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n\n    if (\n      this.props.courses === null ||\n      (this.props.courses.length === 0 && this.state.loading)\n    ) {\n      this.props.loadCourses(this.setLoading);\n      this.setLoading(false);\n    } else {\n      this.setLoading(false);\n    }\n  };\n\n  displayClaimTitle = (\n    thisClaim: CandidateClaimInterface\n  ): string | JSX.Element => {\n    let result: string = thisClaim.claiming_on_id;\n    if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      let thisDocs = thisClaim.userDetails.details.filter(\n        (item) => item.validation_status !== \"waiting\"\n      );\n      result =\n        thisDocs.length > 0\n          ? adminDisplayClaimTitle(\n              this.props.documentReducer,\n              thisDocs,\n              thisClaim\n            )\n          : \"Document not found\";\n    }\n    if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n      if (this.props.claiming.allApplications) {\n        let thisApplication = this.props.claiming.allApplications.find(\n          (item) => item._id === thisClaim.claiming_on_id\n        );\n        if (\n          thisApplication &&\n          this.props.claiming.allApplications &&\n          this.props.systemPositions\n        ) {\n          let thisPosition = this.props.systemPositions.find(\n            (item) => item.position_id === thisApplication!.position\n          );\n          if (thisPosition) {\n            result = thisPosition.position_title;\n          } else {\n            result = \"Application not found\";\n          }\n        }\n      }\n    }\n\n    if (\n      thisClaim.type_key === PlansTypeKeys.EXAMINATION &&\n      this.props.courses &&\n      this.props.claiming.allAnswer\n    ) {\n      let thisAnswer = getCourseIdBySheetId(\n        this.props.claiming.allAnswer,\n        thisClaim.claiming_on_id\n      );\n      if (thisAnswer && getCourseById(this.props.courses, thisAnswer.course)) {\n        result =\n          \"Exam of \" +\n          getCourseById(this.props.courses, thisAnswer.course)!.course_name;\n      } else {\n        result = \"Unknown exam\";\n      }\n    }\n\n    return result;\n  };\n\n  onPeriodChange = (period_id: string) => {\n    this.setPeriodChanged(true);\n    this.props.getAllClaims(2, period_id, (status: boolean, msg: string) => {\n      !status && this.setPeriodChanged(false);\n      this.setLoadingData(status);\n      if (status === false && msg.length) {\n        this.props.PushPopupAlert({\n          title: msg,\n          theme: PopupAlertTheme.danger,\n        });\n      }\n    });\n  };\n\n  render() {\n    if (this.props.application_sessions === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    if (this.props.application_sessions.length === 0) {\n      return (\n        <div className=\"bg-yellow-100 rounded flex flex-col items-center justify-center p-6 my-8 text-yellow-900 border border-yellow-900\">\n          <MdInfoOutline className=\"text-6xl md:text-9xl\" />\n          <div className=\"text-center flex flex-col\">\n            <span className=\"text-2xl md:text-4xl font-extrabold\">\n              No active session\n            </span>\n            <span className=\"text-lg\">\n              Please Wait for the system to publish the sessions or contact the\n              administrator\n            </span>\n          </div>\n        </div>\n      );\n    }\n\n    if (this.props.claiming.allClaims === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {/* SIDE NAVIGATION */}\n        {!this.state.viewClaim && (\n          <SideNavigation>\n            {/* FILTER SECTION */}\n            <AdminFilterByType loadingClaims={this.state.loadingData} />\n            {/* END FILTER SECTION */}\n          </SideNavigation>\n        )}\n        {/* END SIDE NAVIGATION */}\n\n        {/* 00000000000000000000000000000000000 */}\n\n        {/* CLAIM TITLE ===================================== */}\n        {!this.state.viewClaim && (\n          <ClaimHeaderTitle\n            headerTitle={`${\n              this.props.claiming.selectedClaimType === \"all\"\n                ? \"All\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION\n                ? \"Documents\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.APPLICATION\n                ? \"Applications\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.EXAMINATION\n                ? \"Exam\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.MARKS_PUBLICATION\n                ? \"Marks publication\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.PLACEMENT_TRANSFER\n                ? \"Placements\"\n                : \"\"\n            } Claiming`}\n            loading={this.state.loadingData}\n            loadingSession={this.state.loading}\n            thisPeriod={this.state.thisPeriod}\n            setThisPeriod={this.setThisPeriod}\n            setLoadingSession={this.setLoadingData}\n            application_sessions={this.props.application_sessions}\n            onPeriodChange={this.onPeriodChange}\n            periodChanged={this.state.periodChanged}\n          />\n        )}\n        {/* END CLAIM TITLE ===================================== */}\n\n        {/* 00000000000000000000000000000000000 */}\n\n        {/* CLAIM CONTENT LIST ===================================== */}\n        {!this.state.viewClaim && (\n          <section className=\"bg-white w-full p-1 overflow-x-auto\">\n            <table className=\"w-full shadow\" id=\"report_content\">\n              <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                <tr>\n                  <td className=\"px-2 py-2\">#</td>\n                  <td className=\"px-2 py-2\">Applicant names</td>\n                  <td className=\"px-2 py-2\">Claim title</td>\n                  {this.props.claiming.selectedClaimType === \"all\" && (\n                    <td className=\"px-2 py-2\">Claim type</td>\n                  )}\n                  <td className=\"px-2 py-2\">Claim status</td>\n                  <td className=\"px-2 py-2\"></td>\n                </tr>\n              </thead>\n              <tbody>\n                {!this.props.claiming.allClaims ||\n                !this.props.claiming.claimTypes ||\n                !this.props.systemPositions ||\n                this.state.loadingData ? (\n                  <TableLoading\n                    cols={\n                      this.props.claiming.selectedClaimType === \"all\" ? 6 : 5\n                    }\n                  />\n                ) : filterClaimsByClaimType(\n                    this.props.claiming.allClaims,\n                    this.props.claiming.selectedClaimType\n                  ).length <= 0 ? (\n                  <tr\n                    className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                    key=\"key3201\"\n                  >\n                    <td className=\"px-3 py-1\" colSpan={6}>\n                      <NoResult\n                        theme={NoResultThemes.Light}\n                        value={\"No claim found!\"}\n                      />\n                    </td>\n                  </tr>\n                ) : (\n                  filterClaimsByClaimType(\n                    this.props.claiming.allClaims,\n                    this.props.claiming.selectedClaimType\n                  ).map((claim, index) => (\n                    <tr\n                      className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                      key={index + claim._id}\n                      onClick={() => {\n                        this.setViewClaim(true);\n                        this.setClaimId(claim._id);\n                        this.setCandidateId(claim.user);\n                        this.setClaimType(\n                          whichClaimType(claim) ? whichClaimType(claim)! : null\n                        );\n                        this.loadsController(\n                          claim.claiming_on_id,\n                          claim.type_key\n                        );\n                      }}\n                    >\n                      <td className=\"px-3 py-1\">{index + 1}</td>\n                      <td className=\"px-3 py-1 whitespace-nowrap\">\n                        {claim.userDetails.user_info.fname +\n                          \" \" +\n                          claim.userDetails.user_info.lname}\n                      </td>\n                      <td className=\"px-3 py-1 whitespace-nowrap\">\n                        {claim.title}\n                      </td>\n                      {this.props.claiming.selectedClaimType === \"all\" && (\n                        <td className=\"px-3 py-1 whitespace-nowrap\">\n                          {whichClaimType(claim)\n                            ? capitalizeFirstLetter(whichClaimType(claim)!)\n                            : \"-\"}\n                        </td>\n                      )}\n                      <td className=\"px-3 py-1 whitespace-nowrap\">\n                        <span\n                          className={`inline-block rounded-full duration-300 text-xs font-semibold px-3 py-1 ${\n                            whichClaimStatus(claim).classes\n                          }`}\n                        >\n                          {whichClaimStatus(claim).status}\n                        </span>\n                      </td>\n                      <td className=\"px-3 py-1 text-center whitespace-nowrap\">\n                        <button className=\"btn bg-blue-500 text-white group-hover:bg-blue-600\">\n                          View\n                        </button>\n                      </td>\n                    </tr>\n                  ))\n                )}\n              </tbody>\n            </table>\n          </section>\n        )}\n        {/* END CLAIM CONTENT LIST ===================================== */}\n\n        {/* 00000000000000000000000000000000000 */}\n\n        {/* view claim */}\n        {this.state.viewClaim &&\n          this.state.candidateId &&\n          this.props.claiming.allClaims &&\n          this.state.claimId &&\n          getClaimById(this.props.claiming.allClaims, this.state.claimId) &&\n          this.props.claiming.claimTypes && (\n            <section className=\"bg-white w-full my-4\">\n              {/* VIEW CLAIM HEADER =============================== */}\n              <section className=\"flex items-center gap-2 py-2 border-b\">\n                <button\n                  className={`ml-3 bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n                    this.state.loadingRequest\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } animate__animated animate__fadeIn`}\n                  disabled={this.state.loadingRequest}\n                  onClick={() => {\n                    this.setViewClaim(false);\n                    this.setViewImage(true);\n                    this.setLoadingRequest(false);\n                    this.setActionTaken(null);\n                    this.setResponseMsg(\"\");\n                    this.setFormError(null);\n                  }}\n                >\n                  <MdArrowBack className=\"w-7 h-7\" />\n                </button>\n                <div className={`text-gray-600 font-extrabold text-2xl px-2`}>\n                  Viewing claim\n                </div>\n              </section>\n              {/* END VIEW CLAIM HEADER =============================== */}\n\n              {this.state.loading && (\n                <div className=\"my-4\">\n                  <Loading />\n                </div>\n              )}\n\n              {!this.state.loading && (\n                <section className=\"bg-gray-200\">\n                  {/* FOR DOCUMENT ========================== */}\n                  {this.state.claimType &&\n                    this.state.claimType.toLocaleLowerCase() ===\n                      ClaimTypesInterface.DOCUMENT.toLocaleLowerCase() && (\n                      <div>\n                        {getClaimById(\n                          this.props.claiming.allClaims!,\n                          this.state.claimId!\n                        )!.userDetails.details.find(\n                          (item) =>\n                            item.doc_id ===\n                            getClaimById(\n                              this.props.claiming.allClaims!,\n                              this.state.claimId!\n                            )!.claiming_on_id\n                        ) ? (\n                          <AdminClaimDocView\n                            thisDoc={\n                              getClaimById(\n                                this.props.claiming.allClaims!,\n                                this.state.claimId!\n                              )!.userDetails.details.find(\n                                (item) =>\n                                  item.doc_id ===\n                                  getClaimById(\n                                    this.props.claiming.allClaims!,\n                                    this.state.claimId!\n                                  )!.claiming_on_id\n                              )!\n                            }\n                            documentCategories={this.props.documentReducer}\n                            thisClaim={\n                              getClaimById(\n                                this.props.claiming.allClaims,\n                                this.state.claimId\n                              )!\n                            }\n                            claimTypes={this.props.claiming.claimTypes}\n                            viewImage={this.state.viewImage}\n                            setViewImage={this.setViewImage}\n                            loadingRequest={this.state.loadingRequest}\n                            setLoadingRequest={this.setLoadingRequest}\n                            actionTaken={this.state.actionTaken}\n                            setActionTaken={this.setActionTaken}\n                            responseMsg={this.state.responseMsg}\n                            setResponseMsg={this.setResponseMsg}\n                            formError={this.state.formError}\n                            setFormError={this.setFormError}\n                            candidateId={this.state.candidateId}\n                            claimReasons={this.props.claiming.claimReasons}\n                          />\n                        ) : (\n                          <NoResult\n                            theme={NoResultThemes.Dark}\n                            value={\"Document not found\"}\n                          />\n                        )}\n                      </div>\n                    )}\n\n                  {/* FOR APPLICATION ========================== */}\n                  {this.state.claimType &&\n                    this.state.claimType.toLocaleLowerCase() ===\n                      ClaimTypesInterface.APPLICATION.toLocaleLowerCase() && (\n                      <div>\n                        {getApplicationById(\n                          this.props.claiming.allApplications,\n                          this.props.systemPositions,\n                          getClaimById(\n                            this.props.claiming.allClaims,\n                            this.state.claimId\n                          )!.claiming_on_id\n                        ) ? (\n                          this.props.systemPositions && (\n                            <AdminClaimAppView\n                              thisApplication={\n                                getApplicationById(\n                                  this.props.claiming.allApplications,\n                                  this.props.systemPositions,\n                                  getClaimById(\n                                    this.props.claiming.allClaims,\n                                    this.state.claimId\n                                  )!.claiming_on_id\n                                )!.application\n                              }\n                              thisPosition={\n                                getApplicationById(\n                                  this.props.claiming.allApplications,\n                                  this.props.systemPositions,\n                                  getClaimById(\n                                    this.props.claiming.allClaims,\n                                    this.state.claimId\n                                  )!.claiming_on_id\n                                )!.position\n                              }\n                              documentCategories={this.props.documentReducer}\n                              thisClaim={\n                                getClaimById(\n                                  this.props.claiming.allClaims,\n                                  this.state.claimId\n                                )!\n                              }\n                              claimTypes={this.props.claiming.claimTypes}\n                              systemPositions={this.props.systemPositions}\n                              claimReasons={this.props.claiming.claimReasons}\n                            />\n                          )\n                        ) : (\n                          <NoResult\n                            theme={NoResultThemes.Dark}\n                            value={\"Application not found\"}\n                          />\n                        )}\n                      </div>\n                    )}\n\n                  {/* FOR EXAMINATION ========================== */}\n                  {this.state.claimType &&\n                    this.state.claimType.toLocaleLowerCase() ===\n                      ClaimTypesInterface.EXAMINATION.toLocaleLowerCase() && (\n                      <div>\n                        {this.props.claiming.allAnswer &&\n                        this.props.courses &&\n                        getCourseIdBySheetId(\n                          this.props.claiming.allAnswer,\n                          getClaimById(\n                            this.props.claiming.allClaims,\n                            this.state.claimId\n                          )!.claiming_on_id\n                        ) &&\n                        getCourseById(\n                          this.props.courses,\n                          getCourseIdBySheetId(\n                            this.props.claiming.allAnswer,\n                            getClaimById(\n                              this.props.claiming.allClaims,\n                              this.state.claimId\n                            )!.claiming_on_id\n                          )!.course\n                        ) ? (\n                          <AdminClaimExamView\n                            thisExamSheet={\n                              getCourseIdBySheetId(\n                                this.props.claiming.allAnswer,\n                                getClaimById(\n                                  this.props.claiming.allClaims,\n                                  this.state.claimId\n                                )!.claiming_on_id\n                              )!\n                            }\n                            thisExam={\n                              getCourseById(\n                                this.props.courses,\n                                getCourseIdBySheetId(\n                                  this.props.claiming.allAnswer,\n                                  getClaimById(\n                                    this.props.claiming.allClaims,\n                                    this.state.claimId\n                                  )!.claiming_on_id\n                                )!.course\n                              )!\n                            }\n                            thisClaim={\n                              getClaimById(\n                                this.props.claiming.allClaims,\n                                this.state.claimId\n                              )!\n                            }\n                            claimTypes={this.props.claiming.claimTypes}\n                            claimReasons={this.props.claiming.claimReasons}\n                          />\n                        ) : (\n                          <NoResult\n                            theme={NoResultThemes.Dark}\n                            value={\"Exam not found\"}\n                          />\n                        )}\n                      </div>\n                    )}\n                </section>\n              )}\n            </section>\n          )}\n        {/* end view claim */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system_settings,\n  sessionPlan,\n  claiming,\n  document,\n  course,\n}: StoreState): {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  systemPositions: PositionAPI[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  courses: course[] | null;\n} => {\n  return {\n    auth: auth,\n    application_sessions: sessionPlan.allSessionPlans,\n    systemPositions: system_settings.systemPositions,\n    claiming,\n    documentReducer: document,\n    courses: course.courses,\n  };\n};\n\nexport const AdminClaim = connect(mapStateToProps, {\n  getAllClaims,\n  loadCourses,\n  getAllAnswers,\n  getClaimReasons,\n  getAllApplications,\n  GetAllSessionPlans,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  getPositions,\n  PushPopupAlert,\n})(Index);\n","import { candidateExamStoreInterface } from \"../actions/candidate_exam\";\nimport {\n  applicationExamAPI,\n  ApplicationPeriodGet,\n} from \"../interfaces/application\";\nimport { ExamAnswerSheetDone } from \"../interfaces/exam\";\nimport { PositionAPI, PositionAPICourse } from \"../interfaces/position\";\nimport { questionType, questionTypeElements } from \"../interfaces/question\";\nimport moment from \"moment-timezone\";\nimport { TimeZone } from \"./app.config\";\nimport { questionTypeElementsType } from \"@mastrecruit/common\";\n\nconst today = moment().tz(TimeZone);\n\nexport const getQuestionType = (\n  question_types: questionType[] | null,\n  type_id: string\n) => {\n  let type: questionTypeElementsType | null = null;\n  if (question_types !== null) {\n    let check = question_types.find((itm) => itm.id === type_id);\n    if (check !== undefined) {\n      let check_type = questionTypeElements.find(\n        (itm) => check && itm.key === check.element\n      );\n      if (check_type !== undefined) {\n        type = check_type.key;\n      }\n    }\n  }\n  return type;\n};\n\nexport const findTotalMarks = (\n  courses: PositionAPICourse[],\n  results: ExamAnswerSheetDone[] | null\n) => {\n  if (results !== null) {\n    let sum: number = 0;\n    for (let course of courses) {\n      let test = results.find((itm) => itm.course === course.course_id);\n      if (test !== undefined) {\n        sum = sum + test.total_marks;\n      }\n    }\n    return sum.toFixed(2);\n  } else {\n    return \"Wait...\";\n  }\n};\n\nexport const CheckIfExamDone = (\n  courses: PositionAPICourse[],\n  results: ExamAnswerSheetDone[] | null\n) => {\n  let res: boolean = false;\n  if (results !== null) {\n    for (let course of courses) {\n      let test = results.find((itm) => itm.course === course.course_id);\n      if (test !== undefined) {\n        res = true;\n      }\n    }\n  }\n  return res;\n};\n\nexport const validateCalculatedFormula = (\n  formula: string\n): { status: boolean; msg: string } => {\n  let characters: string[] = [];\n  if (\n    formula === undefined ||\n    formula === \"\" ||\n    formula.length === undefined ||\n    formula.length === 0\n  ) {\n    return {\n      status: false,\n      msg: `Please type a formula`,\n    };\n  }\n  if (formula.length < 3) {\n    return {\n      status: false,\n      msg: `The formula in not valid, it is not complete!`,\n    };\n  }\n  for (let el of formula) {\n    characters = [...characters, el];\n  }\n  if (characters[0] !== `\"`) {\n    return {\n      status: false,\n      msg: `Formula should start with (\") character`,\n    };\n  }\n  if (characters.filter((itm) => itm === `\"`).length < 2) {\n    return {\n      status: false,\n      msg: `Formula is missing closing (\") character`,\n    };\n  }\n  if (characters.filter((itm) => itm === `\"`).length > 2) {\n    return {\n      status: false,\n      msg: `Formula is invalid, because it has many (\") characters (${\n        characters.filter((itm) => itm === `\"`).length\n      })`,\n    };\n  }\n  if (\n    characters[characters.length - 1] !== `\"` &&\n    characters.filter((itm) => itm === `\"`).length === 2\n  ) {\n    let nextCharacter: string = \"\";\n    for (let i = 0; i < characters.length; i++) {\n      if (characters[i] === `\"` && i !== 0) {\n        nextCharacter = characters[i + 1];\n      }\n    }\n    if (nextCharacter !== `;`) {\n      return {\n        status: false,\n        msg: `Formula is missing separation character (;) between formula and error`,\n      };\n    }\n    if (characters[characters.length - 1] === `;`) {\n      return {\n        status: false,\n        msg: `Formula is missing error after (;) character`,\n      };\n    }\n  }\n  return {\n    status: true,\n    msg: `Formula is valid`,\n  };\n};\n\nexport function convertFromStringToDate(responseDate: string) {\n  let dateComponents = responseDate.split(\"T\");\n  let datePieces = dateComponents[0].split(\"-\");\n  let timePieces = dateComponents[1].split(\":\");\n  return new Date(\n    parseInt(datePieces[2]),\n    parseInt(datePieces[1]) - 1,\n    parseInt(datePieces[0]),\n    parseInt(timePieces[0]),\n    parseInt(timePieces[1]),\n    parseInt(timePieces[2])\n  );\n}\n\nexport enum ExamTimeStatus {\n  Waiting = \"Waiting\",\n  Online = \"Online\",\n  Expired = \"Expired\",\n}\n\nexport const validateExamDate = (\n  exam_date: string,\n  start_time: string,\n  end_time: string\n) => {\n  let status: ExamTimeStatus = ExamTimeStatus.Expired;\n  // Dates\n  const toDay: Date = new Date(today.toString());\n  const examDate = new Date(exam_date);\n\n  // Time\n  const startTime = convertFromStringToDate(\n    examDate.getDate() +\n      \"-\" +\n      (examDate.getMonth() + 1) +\n      \"-\" +\n      examDate.getFullYear() +\n      \"T\" +\n      start_time +\n      \":0\"\n  );\n  const endTime = convertFromStringToDate(\n    examDate.getDate() +\n      \"-\" +\n      (examDate.getMonth() + 1) +\n      \"-\" +\n      examDate.getFullYear() +\n      \"T\" +\n      end_time +\n      \":0\"\n  );\n\n  // check exam date\n  if (\n    examDate.getDate() > toDay.getDate() ||\n    examDate.getMonth() > toDay.getMonth() ||\n    examDate.getFullYear() > toDay.getFullYear()\n  ) {\n    status = ExamTimeStatus.Waiting;\n  }\n\n  if (\n    examDate.getDate() < toDay.getDate() ||\n    examDate.getMonth() < toDay.getMonth() ||\n    examDate.getFullYear() < toDay.getFullYear()\n  ) {\n    status = ExamTimeStatus.Expired;\n  }\n\n  if (\n    examDate.getDate() === toDay.getDate() &&\n    examDate.getMonth() === toDay.getMonth() &&\n    examDate.getFullYear() === toDay.getFullYear()\n  ) {\n    if (startTime.getTime() > toDay.getTime()) {\n      status = ExamTimeStatus.Waiting;\n    } else if (\n      startTime.getTime() <= toDay.getTime() &&\n      endTime.getTime() >= toDay.getTime()\n    ) {\n      status = ExamTimeStatus.Online;\n    } else {\n      status = ExamTimeStatus.Expired;\n    }\n  }\n  // console.log(\n  //   \"Dates comparison: \" + examDate.getDate() + \"=>\" + toDay.getDate()\n  // );\n  // console.log(\"Exam Status: \", status);\n  return status;\n};\n\nexport const InitializeExamsDone = (\n  selected_period: ApplicationPeriodGet | null,\n  selectedPosition: PositionAPI | null,\n  candidateExam: candidateExamStoreInterface,\n  loadExamsDone: (\n    periodId: string,\n    userId: string,\n    callback: (loading: boolean) => void\n  ) => void,\n  user_id: string,\n  setLoadingExamsDone: (status: boolean) => void,\n  selectedExams: applicationExamAPI[] | null,\n  InitializeExamDetails: (\n    periodId: string,\n    courseId: string,\n    district_id: string,\n    center_id: string,\n    room_id: string,\n    position_id: string,\n    callback: (loading: boolean) => void\n  ) => void,\n  setLoadingExams: (status: boolean) => void\n) => {\n  if (selected_period !== null && selectedPosition !== null) {\n    loadExamsDone(\n      selected_period.session_plan_id,\n      user_id,\n      setLoadingExamsDone\n    );\n    for (let course of selectedPosition.courses) {\n      let testDone = candidateExam.user_exams_temp.find(\n        (itm) => itm.course === course.course_id\n      );\n      if (testDone === undefined) {\n        let center_id = selectedExams?.find(\n          (itm) => itm.course_id === course.course_id\n        );\n        if (center_id !== undefined) {\n          InitializeExamDetails(\n            selected_period.session_plan_id,\n            course.course_id,\n            center_id.district_id,\n            center_id.center_id,\n            center_id.room_id,\n            selectedPosition.position_id,\n            setLoadingExams\n          );\n        }\n      }\n    }\n  }\n};\n\nexport const getActiveExam = (\n  candidateExam: candidateExamStoreInterface\n): ExamAnswerSheetDone | null => {\n  if (candidateExam.user_exams_done.length > 0) {\n    for (let exam of candidateExam.user_exams_done) {\n      if (\n        validateExamDate(\n          exam.exam_date,\n          exam.exam_start_time,\n          exam.exam_end_time\n        ) === ExamTimeStatus.Online\n      ) {\n        return exam;\n      }\n    }\n  }\n  return null;\n};\n\nexport const proctoringDefaultRules: {\n  rule: string;\n  status: boolean;\n  caption: string;\n}[] = [\n  {\n    rule: \"right_click_enabled\",\n    status: false,\n    caption: \"Enable right click\",\n  },\n  {\n    rule: \"copy_enabled\",\n    status: false,\n    caption: \"Enable copy\",\n  },\n  {\n    rule: \"paste_enabled\",\n    status: false,\n    caption: \"Enable paste\",\n  },\n  {\n    rule: \"stop_candidate_when_comeback\",\n    status: false,\n    caption: \"Enable Candidate when coming back\",\n  },\n  {\n    rule: \"allow_to_leave_browser\",\n    status: false,\n    caption: \"Enable to leave browser\",\n  },\n];\n","import React, { useEffect, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport { MdNavigateBefore, MdNavigateNext, MdSearch } from \"react-icons/md\";\n\nconst FC_makeID = (length: number = 5): string => {\n  let result: string = \"\";\n  let characters: string =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  let charactersLength = characters.length;\n  for (let i: number = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\nexport const sortThisColumn = (\n  tableId: string,\n  colIndex: number = 0,\n  dir: \"asc\" | \"desc\" = \"asc\"\n) => {\n  var table,\n    rows,\n    switching,\n    i,\n    x,\n    y,\n    shouldSwitch,\n    switchcount = 0;\n  table = document.getElementById(tableId) as HTMLTableElement;\n  switching = true;\n  /* Make a loop that will continue until\n  no switching has been done: */\n  if (table) {\n    while (switching) {\n      //start by saying: no switching is done:\n      switching = false;\n      rows = table.rows;\n      /*Loop through all table rows (except the\n    first, which contains table headers):*/\n      for (i = 1; i < rows.length - 1; i++) {\n        //start by saying there should be no switching:\n        shouldSwitch = false;\n        /*Get the two elements you want to compare,\n      one from current row and one from the next:*/\n        x = rows[i].getElementsByTagName(\"TD\")[colIndex];\n        y = rows[i + 1].getElementsByTagName(\"TD\")[colIndex];\n        /*check if the two rows should switch place,\n      based on the direction, asc or desc:*/\n        if (dir === \"asc\" && x && y) {\n          if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        } else if (dir === \"desc\" && x && y) {\n          if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        }\n      }\n      if (shouldSwitch && rows[i].parentNode) {\n        /*If a switch has been marked, make the switch\n      and mark that a switch has been done:*/\n        rows[i].parentNode!.insertBefore(rows[i + 1], rows[i]);\n        switching = true;\n        //Each time a switch is done, increase this count by 1:\n        switchcount++;\n      } else {\n        /*If no switching has been done AND the direction is \"asc\",\n      set the direction to \"desc\" and run the while loop again.*/\n        if (switchcount === 0 && dir === \"asc\") {\n          dir = \"desc\";\n          switching = true;\n        }\n      }\n      // if (i === 0) continue;\n      // rows.cells[i].style.backgroundColor = \"blue\";\n    }\n  }\n};\n\nexport interface TableColumnsInterface {\n  columnTitle: JSX.Element | string;\n  alignText: string;\n  padding?: string;\n  isSortAllowed?: boolean;\n}\n\ninterface TableProps {\n  columns: TableColumnsInterface[];\n  rows: Function;\n  hideColumns?: boolean;\n  pagination?: boolean;\n  search?: boolean;\n  tableSize?: string;\n  tableClass?: string;\n  tableId?: string;\n  rounded?: boolean;\n  searchBG?: string;\n  thColor?: string;\n  loading?: boolean;\n}\n\nconst Table: React.FC<TableProps> = (props) => {\n  const startPage = 1;\n  const tableId =\n    !props.tableId || props.tableId === \"myTable\" ? FC_makeID() : props.tableId;\n  let table: HTMLElement, tr: HTMLCollectionOf<HTMLTableRowElement>;\n  const [totalItems, setTotalItems] = useState<number>(0);\n  const [totalPages, setTotalPages] = useState<number>(1);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [pages, setPages] = useState<number[]>();\n  const [pageSize, setPageSize] = useState<number>(10);\n  const [startIndex, setStartIndex] = useState<number>(0);\n  const [endIndex, setEndIndex] = useState<number>(0);\n\n  useEffect(() => {\n    props.pagination && tablePagination();\n  });\n\n  const filterTable = (\n    data: string,\n    filterType?: \"default\" | \"field\"\n  ): void => {\n    var filter, tr, td, rows: number, cols: number, txtValue;\n    if (filterType === \"field\" && data === \"all\") data = \"\";\n    filter = data.toLowerCase();\n    table = document.getElementById(tableId!)!;\n    tr = table.getElementsByTagName(\"tr\");\n    for (rows = 0; rows < tr.length; rows++) {\n      for (cols = 0; cols < props.columns.length; cols++) {\n        td = tr[rows].getElementsByTagName(\"td\")[cols];\n        if (td) {\n          txtValue = td.textContent || td.innerText;\n          if (txtValue.toLowerCase().indexOf(filter) > -1) {\n            tr[rows].style.display = \"\";\n            break;\n          } else {\n            tr[rows].style.display = \"none\";\n          }\n        }\n      }\n    }\n  };\n\n  const tablePagination = (): void => {\n    table = document.getElementById(tableId)!;\n    tr = table.getElementsByTagName(\"tr\");\n    setTotalItems(tr.length);\n    setTotalPages(Math.ceil(totalItems / pageSize));\n\n    // calculate start and end item indexes on the current page\n    setStartIndex((currentPage - 1) * pageSize);\n    setEndIndex(Math.min(startIndex + pageSize - 1, totalItems - 1));\n\n    /**\n     * TODO!\n     * There is a problem with this condition\n     */\n    let _pages = Array.from(Array(totalPages + 1 - startPage).keys()).map(\n      (i) => startPage + i\n    );\n    if (!pages || _pages.length !== pages.length) {\n      setPages(_pages);\n    }\n\n    for (let i: number = 0; i < tr.length; i++) {\n      if (i >= startIndex && i <= endIndex) {\n        tr[i].style.display = \"\";\n      } else {\n        tr[i].style.display = \"none\";\n      }\n    }\n  };\n\n  return (\n    <div className={`${props.tableSize} overflow-x-auto`}>\n      {/* search box  */}\n      {props.search && (\n        <div className={`${props.searchBG} w-full mb-2`}>\n          {props.search && (\n            <div className=\"bg-white rounded flex items-center w-full p-2 border-2 border-gray-500\">\n              <MdSearch className=\"h-5 w-5 fill-current text-gray-400\" />\n              <input\n                type=\"search\"\n                placeholder=\"search\"\n                onChange={(e) => filterTable(e.target.value)}\n                className=\"w-full h-6 pl-4 text-sm outline-none focus:outline-none bg-white\"\n                disabled={props.loading}\n              />\n\n              {props.pagination && (\n                <div className=\"select\">\n                  <select\n                    className=\"text-base outline-none focus:outline-none bg-white\"\n                    onChange={(e) => setPageSize(Number(e.target.value))}\n                    disabled={props.loading}\n                  >\n                    <option value=\"10\">10</option>\n                    <option value=\"25\">25</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                  </select>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n      <div className=\"overflow-x-auto w-full\">\n        <table\n          className={\n            props.tableClass\n              ? props.tableClass\n              : `w-full shadow ${\n                  props.rounded && \"sm:rounded-lg\"\n                } table-auto order-table`\n          }\n          id={tableId}\n        >\n          {!props.hideColumns && (\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-base\">\n              <tr\n                className={`text-left tracking-wide bg-${props.thColor}-100 border-b-2 border-${props.thColor}-500 text-${props.thColor}-600`}\n              >\n                {props.columns.map((column, index) => (\n                  <th\n                    key={index}\n                    className={`${column.padding} text-${\n                      column.alignText\n                    } px-3 py-2 ${column.isSortAllowed && \"cursor-pointer\"}`}\n                    onClick={() =>\n                      column.isSortAllowed && sortThisColumn(tableId, index)\n                    }\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      {column.columnTitle}\n                      {column.isSortAllowed && <BiSort />}\n                    </div>\n                  </th>\n                ))}\n              </tr>\n            </thead>\n          )}\n          <tbody id=\"table-data\" className=\"bg-white text-black text-base\">\n            {props.rows()}\n          </tbody>\n        </table>\n        {props.pagination && (\n          <div className=\"sm:flex-1 sm:flex sm:items-center sm:justify-between mt-4 work-sans\">\n            <div>\n              <span className=\"text-xs xs:text-sm text-gray-900\">\n                Showing 1 to {pageSize} of {totalItems - 1} Entries\n              </span>\n            </div>\n            <div>\n              <nav className=\"inline-flex shadow-sm\">\n                <div>\n                  <button\n                    type=\"button\"\n                    className={`inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 text-sm font-medium text-gray-500 ${\n                      currentPage !== 1 && \"bg-white\"\n                    }`}\n                    aria-label=\"Previous\"\n                    disabled={currentPage === 1 || props.loading}\n                    onClick={() => setCurrentPage(currentPage - 1)}\n                  >\n                    <MdNavigateBefore className=\"h-5 w-5\" />\n                  </button>\n                </div>\n                <div>\n                  {pages &&\n                    pages.map((page, pageIndex) => (\n                      <button\n                        key={pageIndex}\n                        className={`-ml-px inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium text-gray-700 ${\n                          page !== currentPage\n                            ? \"bg-white\"\n                            : \"bg-gray-100 cursor-default\"\n                        }`}\n                        disabled={page === currentPage || props.loading}\n                        onClick={() => setCurrentPage(page)}\n                      >\n                        {page}\n                      </button>\n                    ))}\n                </div>\n                <div>\n                  <button\n                    type=\"button\"\n                    className={`inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 text-sm leading-5 font-medium text-gray-500 ${\n                      currentPage !== totalPages && \"bg-white\"\n                    }`}\n                    aria-label=\"Next\"\n                    disabled={currentPage === totalPages || props.loading}\n                    onClick={() => setCurrentPage(currentPage + 1)}\n                  >\n                    <MdNavigateNext className=\"h-5 w-5\" />\n                  </button>\n                </div>\n              </nav>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Table;\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport {\n  AcademicSessionInterface,\n  PlansTypeInterface,\n  SessionPlanInterface,\n} from \"../interfaces\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// GET ACTIVE PLAN TYPES\nexport interface GetPlansTypesAction {\n  type: ActionTypes.GET_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// GET INACTIVE PLAN TYPES\nexport interface GetDeletedPlansTypesAction {\n  type: ActionTypes.GET_DELETED_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// CREATE PLAN TYPE\nexport interface CreatePlansTypeAction {\n  type: ActionTypes.CREATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// UPDATE PLAN TYPE\nexport interface UpdatePlansTypeAction {\n  type: ActionTypes.UPDATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// DELETE PLAN TYPE\nexport interface DeletePlansTypeAction {\n  type: ActionTypes.DELETE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// SET PLAN TYPE =====================================\nexport interface setSelectedPlanTypeActions {\n  type: ActionTypes.SELECT_PLAN_TYPE;\n  payload: PlansTypeInterface | \"all\";\n}\n\n// GET ALL SESSION PLAN\nexport interface GetAllSessionPlansAction {\n  type: ActionTypes.GET_ALL_SESSION_PLANS;\n  payload: SessionPlanInterface[];\n}\n\n// GET ACTIVE SESSION PLAN\nexport interface GetActiveSessionPlanAction {\n  type: ActionTypes.GET_ACTIVE_SESSION_PLANS;\n  payload: SessionPlanInterface | \"none\";\n}\n\n// CREATE SESSION PLAN\nexport interface CreateSessionPlansAction {\n  type: ActionTypes.CREATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// UPDATE SESSION PLAN\nexport interface UpdateSessionPlansAction {\n  type: ActionTypes.UPDATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// ACTIVATE SESSION PLAN\nexport interface ActivateSessionPlansAction {\n  type: ActionTypes.SESSION_ACTIVATION;\n  payload: SessionPlanInterface;\n}\n\n// DELETE SESSION PLAN\nexport interface DeleteSessionPlanAction {\n  type: ActionTypes.DELETE_SESSION_PLAN;\n  payload: string;\n}\n\n// GET ALL ACADEMIC SESSION\nexport interface GetAllAcademicSessionAction {\n  type: ActionTypes.GET_ALL_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface[];\n}\n\n// CREATE ACADEMIC SESSION\nexport interface CreateAcademicSessionAction {\n  type: ActionTypes.CREATE_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface;\n}\n\n// UPDATE ACADEMIC SESSION\nexport interface UpdateAcademicSessionAction {\n  type: ActionTypes.UPDATE_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface;\n}\n\n// ACTIVATE ACADEMIC SESSION\nexport interface ActivateAcademicSessionAction {\n  type: ActionTypes.ACADEMIC_SESSION_ACTIVATION;\n  payload: AcademicSessionInterface;\n}\n\n// DELETE ACADEMIC SESSION\nexport interface DeleteAcademicSessionAction {\n  type: ActionTypes.DELETE_ACADEMIC_SESSION;\n  payload: string;\n}\n\n// GET ACTIVE ACADEMIC SESSION\nexport interface GetActiveAcademicSessionAction {\n  type: ActionTypes.GET_ACTIVE_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface | \"none\";\n}\n\nexport type SessionActionType =\n  | GetPlansTypesAction\n  | GetDeletedPlansTypesAction\n  | CreatePlansTypeAction\n  | UpdatePlansTypeAction\n  | DeletePlansTypeAction\n  | GetAllSessionPlansAction\n  | GetActiveSessionPlanAction\n  | CreateSessionPlansAction\n  | UpdateSessionPlansAction\n  | ActivateSessionPlansAction\n  | DeleteSessionPlanAction\n  | setSelectedPlanTypeActions\n  | GetAllAcademicSessionAction\n  | CreateAcademicSessionAction\n  | UpdateAcademicSessionAction\n  | ActivateAcademicSessionAction\n  | DeleteAcademicSessionAction\n  | GetActiveAcademicSessionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type`\n      );\n      console.log({ GET_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetPlansTypesAction>({\n        type: ActionTypes.GET_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetDeletedPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type/deleted`\n      );\n      console.log({ GET_DELETED_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetDeletedPlansTypesAction>({\n        type: ActionTypes.GET_DELETED_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE PLAN TYPE\nexport const createPlanType = (\n  data: PlansTypeInterface\n): CreatePlansTypeAction => {\n  return {\n    type: ActionTypes.CREATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// UPDATE PLAN TYPE\nexport const updatePlanType = (\n  data: PlansTypeInterface\n): UpdatePlansTypeAction => {\n  return {\n    type: ActionTypes.UPDATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// DELETE PLAN TYPE\nexport const deletePlanType = (\n  data: PlansTypeInterface\n): DeletePlansTypeAction => {\n  return {\n    type: ActionTypes.DELETE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// SELECT PLAN TYPES ==========================\nexport const setSelectedPlanType = (\n  thisType: PlansTypeInterface | \"all\"\n): setSelectedPlanTypeActions => {\n  console.log({ thisType });\n  return {\n    type: ActionTypes.SELECT_PLAN_TYPE,\n    payload: thisType,\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const getActiveSessionPlan = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface>(\n        `${API.CLAIMING}/session/active/`\n      );\n      console.log({ GET_ACTIVE_SESSION_PLANS: res.data });\n      let session_plan: SessionPlanInterface | undefined = undefined;\n      // if (res.status === 200) {\n      //   // setApplications(res.data);\n      // }\n      if (res.data && res.data.is_active !== undefined) {\n        session_plan = res.data;\n      }\n      console.log({ session_plan: res.data });\n\n      dispatch<GetActiveSessionPlanAction>({\n        type: ActionTypes.GET_ACTIVE_SESSION_PLANS,\n        payload: session_plan ? session_plan : \"none\",\n      });\n      callback(false, \"\", session_plan ? session_plan : \"none\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ALL PLAN TYPES ==========================\nexport const GetAllSessionPlans = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface[]>(\n        `${API.CLAIMING}/session/`\n      );\n      console.log({ GET_ALL_SESSION_PLANS: res.data });\n      let session_data: SessionPlanInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          session_data = res.data;\n        }\n      }\n      dispatch<GetAllSessionPlansAction>({\n        type: ActionTypes.GET_ALL_SESSION_PLANS,\n        payload: session_data,\n      });\n      callback(false, \"\", session_data);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE SESSION PLAN\nexport const createSessionPlan = (\n  data: SessionPlanInterface\n): CreateSessionPlansAction => {\n  return {\n    type: ActionTypes.CREATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// UPDATE SESSION PLAN\nexport const updateSessionPlan = (\n  data: SessionPlanInterface\n): UpdateSessionPlansAction => {\n  return {\n    type: ActionTypes.UPDATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// ACTIVATE SESSION PLAN\nexport const sessionActivation = (\n  data: SessionPlanInterface\n): ActivateSessionPlansAction => {\n  return {\n    type: ActionTypes.SESSION_ACTIVATION,\n    payload: data,\n  };\n};\n\n// DELETE SESSION PLAN\nexport const deleteSessionPlan = (data: string): DeleteSessionPlanAction => {\n  return {\n    type: ActionTypes.DELETE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// CREATE ACADEMIC SESSION\nexport const createAcademicSession = (\n  data: AcademicSessionInterface\n): CreateAcademicSessionAction => {\n  return {\n    type: ActionTypes.CREATE_ACADEMIC_SESSION,\n    payload: data,\n  };\n};\n\n// GET ALL ACADEMIC SESSION ==========================\nexport const GetAllAcademicSession = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<AcademicSessionInterface[]>(\n        `${API.PLACEMENT}/postrequestperiod/`\n      );\n      console.log({ GET_ALL_SESSION_PLANS: res.data });\n      let session_data: AcademicSessionInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          session_data = res.data;\n        }\n      }\n      console.log(\"====================================\");\n      console.log({ GetAllAcademicSession: res });\n      console.log(\"====================================\");\n      dispatch<GetAllAcademicSessionAction>({\n        type: ActionTypes.GET_ALL_ACADEMIC_SESSION,\n        payload: session_data,\n      });\n      callback(false, \"\", session_data);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// UPDATE ACADEMIC SESSION\nexport const updateAcademicSession = (\n  data: AcademicSessionInterface\n): UpdateAcademicSessionAction => {\n  return {\n    type: ActionTypes.UPDATE_ACADEMIC_SESSION,\n    payload: data,\n  };\n};\n\n// ACTIVATE ACADEMIC SESSION\nexport const academicSessionActivation = (\n  data: AcademicSessionInterface\n): ActivateAcademicSessionAction => {\n  return {\n    type: ActionTypes.ACADEMIC_SESSION_ACTIVATION,\n    payload: data,\n  };\n};\n\n// DELETE ACADEMIC SESSION\nexport const deleteAcademicSession = (\n  data: string\n): DeleteAcademicSessionAction => {\n  return {\n    type: ActionTypes.DELETE_ACADEMIC_SESSION,\n    payload: data,\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const getActiveAcademicSession = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<AcademicSessionInterface>(\n        `${API.PLACEMENT}/postrequestperiod/one`\n      );\n      console.log({ GET_ACTIVE_ACADEMIC_SESSION: res.data });\n      let session_plan: AcademicSessionInterface | undefined = undefined;\n      // if (res.status === 200) {\n      //   // setApplications(res.data);\n      // }\n      if (res.data) {\n        session_plan = res.data;\n      }\n      console.log({ session_plan: res.data });\n\n      dispatch<GetActiveAcademicSessionAction>({\n        type: ActionTypes.GET_ACTIVE_ACADEMIC_SESSION,\n        payload: session_plan ? session_plan : \"none\",\n      });\n      callback(false, \"\", session_plan ? session_plan : \"none\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  CandidatesInterface,\n  DocumentCategoryInterface,\n  DocumentFieldsInterface,\n  DocumentSubCategoryInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { VerifyDocumentInterface } from \"./users\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// CATEGORY\nexport interface GetDocumentCategoryAction {\n  type: ActionTypes.GET_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface[];\n}\n\nexport interface CreateDocumentCategoryAction {\n  type: ActionTypes.CREATE_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface;\n}\n\nexport interface UpdateDocumentCategoryAction {\n  type: ActionTypes.UPDATE_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface;\n}\n\nexport interface DeleteDocumentCategoryAction {\n  type: ActionTypes.DELETE_DOCUMENT_CATEGORY;\n  payload: string;\n}\n\n// SUB CATEGORY\nexport interface GetDocumentSubCategoryAction {\n  type: ActionTypes.GET_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface[];\n}\n\nexport interface CreateDocumentSubCategoryAction {\n  type: ActionTypes.CREATE_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface;\n}\n\nexport interface UpdateDocumentSubCategoryAction {\n  type: ActionTypes.UPDATE_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface;\n}\n\nexport interface DeleteDocumentSubCategoryAction {\n  type: ActionTypes.DELETE_DOCUMENT_SUB_CATEGORY;\n  payload: string;\n}\n\n// FIELDS\nexport interface GetDocumentFieldsAction {\n  type: ActionTypes.GET_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface[];\n}\n\nexport interface CreateDocumentFieldsAction {\n  type: ActionTypes.CREATE_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface;\n}\n\nexport interface UpdateDocumentFieldsAction {\n  type: ActionTypes.UPDATE_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface;\n}\n\nexport interface DeleteDocumentFieldsAction {\n  type: ActionTypes.DELETE_DOCUMENT_FIELDS;\n  payload: string;\n}\n\n// DOCUMENT CHECKING\nexport interface GetCandidatesInInstituteAtion {\n  type: ActionTypes.GET_CANDIDATE_IN_INSTITUTE;\n  payload: CandidatesInterface[];\n}\n\nexport interface VerifyDocumentAction {\n  type: ActionTypes.VERIFY_DOCUMENT;\n  payload: VerifyDocumentInterface;\n}\n\nexport type DocumentCategoryActionType =\n  | GetDocumentCategoryAction\n  | CreateDocumentCategoryAction\n  | UpdateDocumentCategoryAction\n  | DeleteDocumentCategoryAction\n  | GetDocumentSubCategoryAction\n  | CreateDocumentSubCategoryAction\n  | UpdateDocumentSubCategoryAction\n  | DeleteDocumentSubCategoryAction\n  | GetDocumentFieldsAction\n  | CreateDocumentFieldsAction\n  | UpdateDocumentFieldsAction\n  | DeleteDocumentFieldsAction\n  | GetCandidatesInInstituteAtion\n  | VerifyDocumentAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// CATEGORY\n\nexport const getDocumentCategory = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get(`${API.AUTH}/detailcategory`);\n      console.log({ docCategory: res });\n      dispatch<GetDocumentCategoryAction>({\n        type: ActionTypes.GET_DOCUMENT_CATEGORY,\n        payload: res.data,\n      });\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n    }\n  };\n};\n\nexport const createDocumentCategory = (data: DocumentCategoryInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentCategoryAction>({\n      type: ActionTypes.CREATE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentCategory = (data: DocumentCategoryInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentCategoryAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentCategory = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentCategoryAction>({\n      type: ActionTypes.DELETE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\n// SUB CATEGORY\nexport const getDocumentSubCategory = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<DocumentSubCategoryInterface[]>(\n        `${API.AUTH}/detailsubcategory`\n      );\n      console.log({ docSubCategory: res });\n      dispatch<GetDocumentSubCategoryAction>({\n        type: ActionTypes.GET_DOCUMENT_SUB_CATEGORY,\n        payload: res.data,\n        // payload: response.data,\n      });\n    } catch (error) {\n      console.log({ doc_SUB_category_error: error });\n    }\n  };\n};\n\nexport const createDocumentSubCategory = (\n  data: DocumentSubCategoryInterface\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentSubCategoryAction>({\n      type: ActionTypes.CREATE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentSubCategory = (\n  data: DocumentSubCategoryInterface\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentSubCategoryAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentSubCategory = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentSubCategoryAction>({\n      type: ActionTypes.DELETE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\n// FIELDS\nexport const getDocumentFields = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<DocumentFieldsInterface[]>(\n        `${API.AUTH}/categorysubcatedata`\n      );\n      console.log({ docFields: res });\n      dispatch<GetDocumentFieldsAction>({\n        type: ActionTypes.GET_DOCUMENT_FIELDS,\n        payload: res.data,\n        // payload: response.data,\n      });\n    } catch (error) {\n      console.log({ doc_SUB_category_error: error });\n    }\n  };\n};\n\nexport const createDocumentFields = (data: DocumentFieldsInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentFieldsAction>({\n      type: ActionTypes.CREATE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentFields = (data: DocumentFieldsInterface) => {\n  console.log({ reducer: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentFieldsAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentFields = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentFieldsAction>({\n      type: ActionTypes.DELETE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\n// REMOVE DUPLICATION IN CANDIDATES IN EDUCATION CATEGORY PER SESSION\nconst distinctCandidates = (\n  candidatesData: CandidatesInterface[]\n): CandidatesInterface[] => {\n  let result: CandidatesInterface[] = [];\n  let user_ids: string[] = [];\n  const newArray: CandidatesInterface[] = candidatesData.filter((candidate) => {\n    return candidate !== null && candidate !== undefined;\n  });\n  newArray.forEach((candidate) => {\n    if (!user_ids.includes(candidate.user_id)) {\n      result.push(candidate);\n      user_ids.push(candidate.user_id);\n    }\n  });\n  return result;\n};\n// CANDIDATE IN EDUCATION CATEGORY PER SESSION\nexport const getCandidatesInInstitute = (\n  educatin_type_id: string,\n  session_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\", null);\n    try {\n      setAxiosToken();\n      const res = await axios.get<CandidatesInterface[]>(\n        `${API.APPLICATION}/educationtypeuserdocs/${educatin_type_id}/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({\n        getCandidatesInInstitute: res,\n        distinctCandidates: distinctCandidates(res.data),\n      });\n      console.log(\"====================================\");\n      dispatch<GetCandidatesInInstituteAtion>({\n        type: ActionTypes.GET_CANDIDATE_IN_INSTITUTE,\n        payload: distinctCandidates(res.data),\n        // payload: response.data,\n      });\n      callback(false, \"\", distinctCandidates(res.data));\n    } catch (error) {\n      console.log({ getCandidatesInInstitute: error });\n      callback(false, errorToText(error), null);\n    }\n  };\n};\n\nexport const verifyDocument = (data: VerifyDocumentInterface) => {\n  console.log(\"====================================\");\n  console.log({ verifyDocument: data });\n  console.log(\"====================================\");\n  return async (dispatch: Dispatch) => {\n    dispatch<VerifyDocumentAction>({\n      type: ActionTypes.VERIFY_DOCUMENT,\n      payload: data,\n    });\n  };\n};\n","import React, { FC, ReactElement, ReactNode } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, System } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { NavToogle, PageHasSubNav } from \"../../actions\";\nimport { MdBrightness1, MdSearch } from \"react-icons/md\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  system: System;\n  PageHasSubNav: Function;\n  NavToogle: Function;\n  children: ReactNode;\n}\n//\ninterface AppState {\n  loading: boolean;\n}\n\nclass _SideNavigation extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount = () => this.props.PageHasSubNav(true);\n  componentWillUnmount = () => this.props.PageHasSubNav(false);\n\n  render() {\n    const isAuthenticated = this.props.auth.isAuthenticated;\n\n    if (isAuthenticated === false) {\n      return null;\n    }\n\n    const navActive = this.props.system.navigation;\n    return (\n      <div\n        className={`fixed w-48 p-1 pr-2 pl-6 text-gray-700 bg-white ${\n          navActive === true ? \"lg:left-16  left-16\" : \" -left-72 lg:left-16\"\n        }  top-0 bottom-0 pt-20 z-30 shadow-lg  transition-all duration-500 ease-in-out overflow-y-auto`}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n}: StoreState): { auth: Auth; system: System } => {\n  return { auth: auth, system: system };\n};\n\nexport const SideNavigation = connect(mapStateToProps, {\n  NavToogle,\n  PageHasSubNav,\n})(_SideNavigation);\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SearchComponentInterface = {\n  data: any[];\n};\n\nexport const Search: FC<SearchComponentInterface> = ({\n  data,\n}): ReactElement => {\n  return (\n    <div className=\"m-1 rounded-md shadow-md border border-blue-400 bg-white p-1 flex \">\n      <label htmlFor=\"search-text\" className=\"inline-block text-2xl\">\n        <MdSearch className=\"inline-block text-blue-400\" />\n      </label>\n      <input\n        type=\"search\"\n        className=\"outline-none bg-transparent flex-1 pl-1\"\n        placeholder=\"Search\"\n        id=\"search-text\"\n      />\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype MainItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const MainItem: FC<MainItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n  return (\n    <section\n      className={`${\n        active === true\n          ? \"bg-blue-500 text-white font-bold\"\n          : \"bg-blue-100 text-blue-800\"\n      } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex cursor-pointer items-center`}\n    >\n      <section className=\"flex-1\">\n        <IconDefined className=\"inline-block mr-1 text-xs\" />\n        <span>{title}</span>\n      </section>\n\n      {count > 0 ? (\n        <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n          {count}\n        </span>\n      ) : null}\n    </section>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemContainerComponentInterface = {\n  children: ReactNode;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const SubItemContainer: FC<SubItemContainerComponentInterface> = ({\n  children,\n}): ReactElement => {\n  return (\n    <div className=\"ml-3 overflow-y-auto border-l-2 border-blue-200 -mt-1 pt-2 mb-2 pl-1 cursor-pointer\">\n      {children}\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n * @important Remenber to use these components inside the <SubItemContainer>...</SubItemContainer>\n */\nexport const SubItem: FC<SubItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n\n  return (\n    <div\n      className={`animate__animated animate__zoomIn animate__faster ${\n        active === true ? \"bg-blue-500 text-white font-bold\" : \" text-blue-800\"\n      } text-blue-800 bg-blue-200 rounded-md px-1 mb-1 flex items-center py-1 font-bold`}\n    >\n      <IconDefined\n        className={`inline-block mr-0.1 text-xs ${\n          active === true ? \"text-white\" : \"\"\n        }`}\n      />\n      <span\n        className={`inline-block pl-1 ${active === true ? \"text-white\" : \"\"}`}\n      >\n        {title}\n      </span>\n      {count >= 1 ? (\n        <span\n          className={`text-sm fint-bold ${active === true ? \"text-white\" : \"\"}`}\n        >\n          {count}\n        </span>\n      ) : null}\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { ApplicationSession } from \"../../../actions\";\nimport {\n  course,\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimExamResultsDetails,\n} from \"../../../interfaces\";\nimport { candidatePlacementInterface } from \"../../../interfaces/placement\";\nimport { isClaimAllowed } from \"./ClaimForm\";\n\nexport const getCourseById = (courses: course[], course_id: string) => {\n  return courses.find((item) => item.course_id === course_id);\n};\n\nexport const getCourseIdBySheetId = (\n  allData: ClaimExamResultsDetails[],\n  sheet_id: string\n) => {\n  return allData.find((item) => item.answer_sheet_id === sheet_id);\n};\n\nexport const searchApplication = (\n  objList: claimApplicationsInterface[],\n  text: any\n): claimApplicationsInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (prop === \"position\") {\n        flag =\n          product.position.position_title\n            .toString()\n            .toLowerCase()\n            .indexOf(text.toLowerCase()) > -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n  // return objList.filter((product) =>\n  //   product.position.position_title.includes(text)\n  // );\n};\n\ntype FormPlacementListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  claimFileId: string;\n  viewThisFile: string;\n  myPlacement: candidatePlacementInterface | null;\n  myClaims: CandidateClaimInterface[];\n  activeSession: ApplicationSession;\n\n  // REDUX //////////////////////\n};\n\nconst FormPlacementList: React.FC<FormPlacementListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            props.myPlacement === null ||\n            isClaimAllowed(\n              props.myClaims,\n              props.activeSession.session_plan_id,\n              props.myPlacement.placed._id\n            )\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Close\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}{\" \"}\n      {/* searchData(props.candidateAnswers, searchInput) */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {props.myPlacement ? (\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            props.myPlacement.placed._id\n          ) && (\n            <div className=\"group flex items-center justify-between my-1 hover:bg-gray-100\">\n              <div\n                className=\"p-1 w-full mr-2 cursor-pointer\"\n                onClick={() => {\n                  props.setChooseClaimFile(false);\n                  props.setClaimFileId(props.myPlacement!.placed._id);\n                }}\n              >\n                <p className=\"text-base font-medium text-black\">\n                  Placed on {props.myPlacement.placed.school.school_name}\n                </p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                onClick={() => {\n                  props.setViewThisFile(props.myPlacement!.placed._id);\n                }}\n              >\n                View\n              </button>\n            </div>\n          )\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No placement to claim on!\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\n// const mapStateToProps = ({\n//   course,\n// }: StoreState): {\n//   courses: course[] | null;\n// } => {\n//   return {\n//     courses: course.courses,\n//   };\n// };\nexport default connect(null, {})(FormPlacementList);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, loadCourses, PushPopupAlert } from \"../../../actions\";\nimport {\n  createClaim,\n  DocumentClaimUser,\n  GetClaimingTypes,\n  getClaimReasons,\n  getMyAnswers,\n  getMyClaims,\n  getMyPlacement,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n} from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimExamResultsDetails,\n  claimReasonInterface,\n  course,\n  PlansInterface,\n  PlansTypeKeys,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { candidatePlacementInterface } from \"../../../interfaces/placement\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { API } from \"../../../utils/api\";\nimport { setAxiosToken } from \"../../../utils/AxiosToken\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { isPlanActive } from \"../../SessionSettings/ApplicationSession/SessionDetails\";\nimport ApplicationFormView from \"./ApplicationFormView\";\nimport ChooseReason from \"./ChooseReason\";\nimport DocFormView from \"./DocFormView\";\nimport ExaminationFormView from \"./ExaminationFormView\";\nimport FormApplicationList from \"./FormApplicationList\";\nimport FormDocumentList from \"./FormDocumentList\";\nimport FormExamList, {\n  getCourseById,\n  getCourseIdBySheetId,\n} from \"./FormExamList\";\nimport FormPlacementList from \"./FormPlacementList\";\n\nexport const ClaimGetDocTitle = (\n  documentCategories: DocumentReducerInterface,\n  doc: DocumentClaimUser\n): { category: string; sub_category: string; field: string; main: string } => {\n  let DocCategory: string = \"\",\n    DocSubCategory: string = \"\",\n    DocField: string = \"\",\n    DocTitle: string = \"\";\n  if (\n    doc.sub_category_id.length > 0 &&\n    documentCategories.documentSubCategory\n  ) {\n    DocTitle = documentCategories.documentSubCategory.filter(\n      (c) => c.user_detail_subcategory_id === doc.sub_category_id\n    )[0].title;\n    DocSubCategory = DocTitle;\n  } else if (\n    doc.category_id.length > 0 &&\n    documentCategories.documentCategory\n  ) {\n    DocTitle = documentCategories.documentCategory.filter(\n      (c) => c.user_detail_category_id === doc.category_id\n    )[0].title;\n    DocCategory = DocTitle;\n  }\n  if (\n    doc.category_subcategory_data &&\n    doc.category_subcategory_data.category_subcategory_Data_id.length > 0 &&\n    documentCategories.documentFields\n  ) {\n    console.log({ doc });\n    DocField = documentCategories.documentFields.filter(\n      (c) =>\n        c._id === doc.category_subcategory_data?.category_subcategory_Data_id\n    )[0].title;\n    DocTitle += \" in \" + DocField;\n  }\n\n  return {\n    category: DocCategory,\n    sub_category: DocSubCategory,\n    field: DocField,\n    main: DocTitle,\n  };\n};\n\nexport const isClaimAllowed = (\n  allClaim: CandidateClaimInterface[],\n  period_id: string,\n  claimOnId: string\n): boolean => {\n  if (\n    allClaim.find(\n      (item) =>\n        item.period_id === period_id && item.claiming_on_id === claimOnId\n    )\n  ) {\n    return false;\n  }\n  return true;\n};\n\ntype ClaimFormProps = {\n  // REQUIRED PROPS\n  formState: boolean;\n  setFormState: (value: boolean, response?: boolean) => void;\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  courses: course[] | null;\n  loadCourses: Function;\n  getMyAnswers: Function;\n  getMyPlacement: Function;\n  getClaimReasons: Function;\n  createClaim: Function;\n  GetClaimingTypes: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  getMyRejectedApplications: Function;\n  getMyRejectedDocuments: Function;\n  getMyClaims: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype ClaimFormState = {\n  loading: boolean;\n  loadingForm: boolean;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  thisClaimType: PlansTypeKeys | null;\n  thisClaimTypeId: string;\n  claimComment: string;\n  claimFileId: string;\n  chooseClaimFile: boolean;\n  chooseClaimReason: boolean;\n  claimReason: claimReasonInterface | null;\n  myPlacement: candidatePlacementInterface | null;\n  viewThisFile: string;\n  formType: \"DEFAULT\" | \"PROPS\";\n  alertError: string | null;\n};\n\nclass ClaimForm extends Component<ClaimFormProps, ClaimFormState> {\n  constructor(props: ClaimFormProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      loadingForm: false,\n      formError: null,\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      claimFileId: \"\",\n      chooseClaimFile: false,\n      viewThisFile: \"\",\n      formType: \"DEFAULT\",\n      alertError: null,\n      myPlacement: this.props.claiming.myPlacement,\n      chooseClaimReason: false,\n      claimReason: null,\n    };\n  }\n\n  setLoading = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  setLoadingForm = (state: boolean) => {\n    this.setState({ loadingForm: state });\n  };\n\n  setFormError = (\n    data: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: data });\n  };\n\n  setAlertError = (data: string | null) => {\n    this.setState({ alertError: data });\n  };\n\n  setClaimFileId = (data: string) => {\n    this.setState({ claimFileId: data });\n  };\n\n  setViewThisFile = (data: string) => {\n    this.setState({ viewThisFile: data });\n  };\n\n  setChooseClaimFile = (data: boolean) => {\n    this.setState({ chooseClaimFile: data });\n  };\n\n  setChooseClaimReason = (data: boolean) => {\n    this.setState({ chooseClaimReason: data });\n  };\n\n  setClaimReason = (value: claimReasonInterface | null) => {\n    this.setState({ claimReason: value });\n  };\n\n  setClaimComment = (data: string) => {\n    this.setState({ claimComment: data });\n  };\n\n  isClaimTypeOpen = (\n    thisSession: SessionPlanInterface,\n    thisType: PlansTypeKeys\n  ): boolean => {\n    let data: PlansInterface | undefined;\n    if (thisType === PlansTypeKeys.APPLICATION) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.APPLICATION\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    } else if (thisType === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.DOCUMENT_VALIDATION\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    } else if (thisType === PlansTypeKeys.PLACEMENT_TRANSFER) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.PLACEMENT_TRANSFER\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  displayClaimType = (claimType: PlansTypeKeys): string => {\n    let result: string = \"\";\n    switch (claimType) {\n      case PlansTypeKeys.APPLICATION:\n        result = \"application\";\n        break;\n      case PlansTypeKeys.DOCUMENT_VALIDATION:\n        result = \"document\";\n        break;\n      case PlansTypeKeys.EXAMINATION:\n        result = \"exam\";\n        break;\n      case PlansTypeKeys.MARKS_PUBLICATION:\n        result = \"marks publication\";\n        break;\n      case PlansTypeKeys.PLACEMENT_TRANSFER:\n        result = \"placement\";\n        break;\n      default:\n        result = \"\";\n        break;\n    }\n\n    return result;\n  };\n\n  loadExamAnswers = (\n    activeSessionPlan: SessionPlanInterface,\n    user_id: string\n  ) => {\n    this.props.getMyAnswers(\n      activeSessionPlan.session_plan_id,\n      user_id,\n      (status: boolean, msg: string, data: ClaimExamResultsDetails[]) => {\n        this.setLoading(status);\n        if (!status && msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n        if (data) {\n          console.log(\"====================================\");\n          console.log({ loadExamAnswers: data });\n          console.log(\"====================================\");\n        }\n      }\n    );\n  };\n\n  componentDidMount = () => {\n    if (this.props.auth.application_session === null) {\n      this.props.PushPopupAlert({\n        title: \"No session active session\",\n        theme: PopupAlertTheme.danger,\n      });\n      this.props.setFormState(false);\n      this.setState({\n        claimFileId: \"\",\n        thisClaimType: null,\n        thisClaimTypeId: \"\",\n        claimComment: \"\",\n        chooseClaimFile: false,\n        formType: \"DEFAULT\",\n        viewThisFile: \"\",\n        formError: null,\n      });\n    } else {\n      if (this.props.documentReducer.documentCategory === null) {\n        this.props.getDocumentCategory();\n      }\n      if (this.props.documentReducer.documentSubCategory === null) {\n        this.props.getDocumentSubCategory();\n      }\n      if (this.props.documentReducer.documentFields === null) {\n        this.props.getDocumentFields();\n      }\n      if (this.props.claiming.claimReasons === null) {\n        this.props.getClaimReasons((status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          }\n        });\n      }\n    }\n  };\n\n  getDocumentById = (\n    documents: DocumentClaimUser[],\n    doc_id: string\n  ): DocumentClaimUser => {\n    return documents.filter((item) => item.doc_id === doc_id)[0];\n  };\n\n  getApplicationById = (\n    applications: claimApplicationsInterface[],\n    application_id: string\n  ): claimApplicationsInterface => {\n    return applications.filter(\n      (item) => item.application_id === application_id\n    )[0];\n  };\n\n  getExamById = (\n    exams: ClaimExamResultsDetails[],\n    answer_sheet_id: string\n  ): ClaimExamResultsDetails | undefined => {\n    return exams.find((item) => item.answer_sheet_id === answer_sheet_id);\n  };\n\n  getValidation = (\n    thisId: string\n  ): {\n    old_reason: string;\n    old_status: string;\n    old_evaluated_by: string;\n  } => {\n    let result: {\n      old_reason: string;\n      old_status: string;\n      old_evaluated_by: string;\n    } = { old_reason: \"\", old_status: \"\", old_evaluated_by: \"\" };\n\n    if (\n      this.state.thisClaimType === PlansTypeKeys.DOCUMENT_VALIDATION &&\n      this.props.claiming.candidateDocuments\n    ) {\n      result = {\n        old_reason: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.comment,\n        old_status: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.validation_status,\n        old_evaluated_by: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.user_id,\n      };\n    } else if (\n      this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n      this.props.claiming.candidateApplications\n    ) {\n      result = {\n        old_reason: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.comment,\n        old_status: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.application_status,\n        old_evaluated_by: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.user_id,\n      };\n    }\n\n    return result;\n  };\n\n  cleanToClose = (response?: boolean) => {\n    this.props.setFormState(false);\n    this.setState({\n      claimFileId: \"\",\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      chooseClaimFile: false,\n      formType: \"DEFAULT\",\n      viewThisFile: \"\",\n      formError: null,\n    });\n  };\n\n  loadUserById = async (user_id: string, callback: Function) => {\n    if (isEmptyOrSpaces(user_id)) {\n      return this.props.PushPopupAlert({\n        title: \"No user id provided\",\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    try {\n      setAxiosToken();\n      const res = await axios.get<UserInterface>(\n        `${API.AUTH}/users/${user_id}`\n      );\n      console.log(\"====================================\");\n      console.log({ loadUserById: res });\n      console.log(\"====================================\");\n      if (res) {\n        callback(res.data);\n      }\n    } catch (error) {\n      console.error({ error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  getClaimTitle = (claimType: PlansTypeKeys): string => {\n    let result: string = \"\";\n    if (\n      claimType === PlansTypeKeys.DOCUMENT_VALIDATION &&\n      this.props.claiming.candidateDocuments\n    ) {\n      result = ClaimGetDocTitle(\n        this.props.documentReducer,\n        this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          this.state.claimFileId\n        )\n      ).main;\n    }\n    if (\n      claimType === PlansTypeKeys.APPLICATION &&\n      this.props.claiming.candidateApplications\n    ) {\n      result = this.getApplicationById(\n        this.props.claiming.candidateApplications,\n        this.state.claimFileId\n      ).position.position_title;\n    }\n    if (\n      claimType === PlansTypeKeys.EXAMINATION &&\n      this.props.courses &&\n      this.props.claiming.myAnswer &&\n      getCourseIdBySheetId(\n        this.props.claiming.myAnswer,\n        this.state.claimFileId\n      ) &&\n      getCourseById(\n        this.props.courses,\n        getCourseIdBySheetId(\n          this.props.claiming.myAnswer,\n          this.state.claimFileId\n        )!.course\n      )\n    ) {\n      result = getCourseById(\n        this.props.courses,\n        getCourseIdBySheetId(\n          this.props.claiming.myAnswer,\n          this.state.claimFileId\n        )!.course\n      )!.course_name;\n    }\n    if (\n      claimType === PlansTypeKeys.PLACEMENT_TRANSFER &&\n      this.state.myPlacement\n    ) {\n      result = \"Placed on \" + this.state.myPlacement.placed.school.school_name;\n    }\n\n    return result;\n  };\n\n  getClaimInstitute = (claimType: PlansTypeKeys): string => {\n    let result: string = \"\";\n    if (\n      claimType === PlansTypeKeys.APPLICATION &&\n      this.props.claiming.candidateApplications\n    ) {\n      result = this.getApplicationById(\n        this.props.claiming.candidateApplications,\n        this.state.claimFileId\n      ).position.education_institute_id.education_institute_id;\n    }\n\n    return result;\n  };\n\n  handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!this.state.thisClaimType) {\n      return this.setFormError({\n        element: \"claim_type\",\n        msg: \"Claim type is required!\",\n      });\n    }\n    if (isEmptyOrSpaces(this.state.claimFileId)) {\n      return this.setFormError({\n        element: \"claim_file\",\n        msg: `Please select ${this.state.thisClaimType.toLocaleLowerCase()} you are claiming on!`,\n      });\n    }\n\n    if (!this.state.claimReason) {\n      return this.setFormError({\n        element: \"claim_reason\",\n        msg: `Please select the reason of your claim!`,\n      });\n    }\n\n    if (isEmptyOrSpaces(this.state.claimComment)) {\n      return this.setFormError({\n        element: \"claim_comment\",\n        msg: `Claim comment is required!`,\n      });\n    }\n\n    if (!this.props.auth.application_session) {\n      return this.setAlertError(`No active claiming session is available!`);\n    }\n\n    this.setLoadingForm(true);\n    let old_evaluator_email: string = \"info@system.com\";\n    let old_evaluator_name: string = \"System\";\n    let evaluator_email: string = \"\";\n    let evaluator_name: string = \"\";\n    let title: string = this.getClaimTitle(this.state.thisClaimType);\n    let institute_id: string = this.getClaimInstitute(this.state.thisClaimType);\n\n    if (\n      this.state.thisClaimType !== PlansTypeKeys.EXAMINATION &&\n      this.getValidation(this.state.claimFileId).old_evaluated_by !== \"system\"\n    ) {\n      await this.loadUserById(\n        this.getValidation(this.state.claimFileId).old_evaluated_by,\n        (data: UserInterface) => {\n          old_evaluator_email = data.email;\n          old_evaluator_name =\n            data.user_info.fname + \" \" + data.user_info.lname;\n        }\n      );\n    }\n\n    if (this.state.thisClaimType === PlansTypeKeys.EXAMINATION) {\n    }\n\n    try {\n      // console.log(\"====================================\");\n      // console.log({\n      //   claiming_on_id: this.state.claimFileId,\n      //   type_key: this.state.thisClaimType,\n      //   user: this.props.auth.user.user_id,\n      //   period_id: this.props.auth.application_session.session_plan_id,\n      //   default_claim_resaons: this.state.claimReason.id,\n      //   reason: this.state.claimComment,\n      //   old_reason:\n      //     this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n      //     this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n      //       ? \"System\"\n      //       : this.getValidation(this.state.claimFileId).old_reason,\n      //   old_status:\n      //     this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n      //     this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n      //       ? \"Failed\"\n      //       : this.getValidation(this.state.claimFileId).old_status,\n      //   old_evaluated_by:\n      //     this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n      //     this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n      //       ? \"\"\n      //       : this.getValidation(this.state.claimFileId).old_evaluated_by,\n      //   old_evaluator_email,\n      //   old_evaluator_name,\n      //   evaluator_email,\n      //   evaluator_name,\n      //   title,\n      // });\n      // console.log(\"====================================\");\n\n      setAxiosToken();\n      const res = await axios.post<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/create`,\n        {\n          claiming_on_id: this.state.claimFileId,\n          type_key: this.state.thisClaimType,\n          user: this.props.auth.user.user_id,\n          period_id: this.props.auth.application_session.session_plan_id,\n          default_claim_resaons: this.state.claimReason.id,\n          reason: this.state.claimComment,\n          old_reason:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"System\"\n              : this.getValidation(this.state.claimFileId).old_reason,\n          old_status:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"Failed\"\n              : this.getValidation(this.state.claimFileId).old_status,\n          old_evaluated_by:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"\"\n              : this.getValidation(this.state.claimFileId).old_evaluated_by,\n          old_evaluator_email,\n          old_evaluator_name,\n          evaluator_email,\n          evaluator_name,\n          title,\n          institute_id,\n        }\n      );\n      console.log({ createClaim: res });\n      if (res.status === 201 || res.status === 200) {\n        this.props.createClaim(res.data);\n        this.props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        this.cleanToClose(true);\n      }\n    } catch (error) {\n      console.error({ error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.setLoadingForm(false);\n  };\n\n  selectClaimType = (thisClaim: string) => {\n    this.setState({\n      thisClaimType: isEmptyOrSpaces(thisClaim)\n        ? null\n        : (thisClaim as PlansTypeKeys),\n    });\n\n    if ((thisClaim as PlansTypeKeys) === PlansTypeKeys.APPLICATION) {\n      if (this.props.claiming.candidateApplications === null) {\n        this.props.getMyRejectedApplications(\n          this.props.auth.user.user_id,\n          (\n            status: boolean,\n            msg: string,\n            data?: claimApplicationsInterface[]\n          ) => {\n            this.setLoading(status);\n            if (!status) {\n              if (msg.length > 0) {\n                this.props.PushPopupAlert({\n                  title: msg,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n            }\n          }\n        );\n      }\n      if (\n        this.props.courses === null ||\n        (this.props.courses.length === 0 && this.state.loading)\n      ) {\n        this.props.loadCourses(this.setLoading);\n        this.setLoading(false);\n      } else {\n        this.setLoading(false);\n      }\n    } else if ((thisClaim as PlansTypeKeys) === PlansTypeKeys.EXAMINATION) {\n      if (\n        this.props.courses === null ||\n        (this.props.courses.length === 0 && this.state.loading)\n      ) {\n        this.props.loadCourses(this.setLoading);\n        this.setLoading(false);\n      } else {\n        this.setLoading(false);\n      }\n    } else if (\n      (thisClaim as PlansTypeKeys) === PlansTypeKeys.DOCUMENT_VALIDATION\n    ) {\n      if (this.props.claiming.candidateDocuments === null) {\n        this.props.getMyRejectedDocuments(\n          (status: boolean, msg: string, data?: DocumentClaimUser[]) => {\n            this.setLoading(status);\n            if (!status) {\n              if (msg.length > 0) {\n                this.props.PushPopupAlert({\n                  title: msg,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n            }\n          }\n        );\n      }\n    } else if (\n      (thisClaim as PlansTypeKeys) === PlansTypeKeys.PLACEMENT_TRANSFER\n    ) {\n      if (this.props.claiming.myPlacement === null) {\n        this.props.getMyPlacement(\n          this.props.auth.user.user_id,\n          (\n            status: boolean,\n            msg: string,\n            data?: candidatePlacementInterface | null\n          ) => {\n            this.setLoading(status);\n            if (!status) {\n              if (msg.length > 0) {\n                this.props.PushPopupAlert({\n                  title: msg,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n            }\n            if (data) {\n              this.setState({ myPlacement: data });\n            }\n          }\n        );\n      }\n    }\n  };\n\n  generateChooseFileTitle = (thisClaimType: PlansTypeKeys | null): string => {\n    let result: string = \"\";\n\n    switch (thisClaimType) {\n      case PlansTypeKeys.APPLICATION:\n        result = `Select application you are claiming on?`;\n        break;\n      case PlansTypeKeys.DOCUMENT_VALIDATION:\n        result = `Select document you are claiming on?`;\n        break;\n      case PlansTypeKeys.EXAMINATION:\n        result = `Select exam you are claiming on?`;\n        break;\n      case PlansTypeKeys.MARKS_PUBLICATION:\n        result = `Select marks publication you are claiming on?`;\n        break;\n      case PlansTypeKeys.PLACEMENT_TRANSFER:\n        result = `Select placement you are claiming on?`;\n        break;\n      default:\n        result = \"Select file you are claiming on?\";\n        break;\n    }\n\n    return result;\n  };\n\n  render() {\n    if (\n      this.props.auth.application_session === null ||\n      this.props.claiming.myClaims === null\n    ) {\n      return null;\n    }\n\n    return (\n      <div className=\"pb-3\">\n        {this.props.formState && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={(): void => {\n              !this.state.loadingForm &&\n                this.state.viewThisFile.length <= 0 &&\n                this.cleanToClose();\n              !this.state.loadingForm &&\n                this.state.viewThisFile.length > 0 &&\n                this.setViewThisFile(\"\");\n            }}\n            displayClose={true}\n            backDropClose={false}\n            title={\n              <div className=\"text-gray-900 font-bold text-xl md:ml-1\">\n                {this.state.viewThisFile.length <= 0 && \"Claiming form\"}\n                {this.state.viewThisFile.length > 0 &&\n                  this.state.thisClaimType ===\n                    PlansTypeKeys.DOCUMENT_VALIDATION &&\n                  \"Viewing document\"}\n                {this.state.viewThisFile.length > 0 &&\n                  this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n                  \"Viewing application\"}\n              </div>\n            }\n            widthSizeClass={\n              this.state.viewThisFile.length > 0\n                ? ModalSize.extraLarge\n                : ModalSize.medium\n            }\n            padding={{ title: true, body: false, footer: false }}\n          >\n            {/* CLAIM FORM ============================================== */}\n            {this.state.viewThisFile.length <= 0 && (\n              <form onSubmit={(e) => this.handleSubmit(e)}>\n                <div className=\"px-6 pb-3\">\n                  {this.state.alertError && (\n                    <div\n                      className=\"alert-warning cursor-pointer\"\n                      onClick={() => this.setAlertError(null)}\n                    >\n                      {this.state.alertError}\n                    </div>\n                  )}\n                  <div className=\"text-base text-gray-700 sm:text-lg\">\n                    {/* SELECT CLAIM TYPE ============================================== */}\n                    <div className=\"flex flex-col mb-2\">\n                      <label>Claim type</label>\n                      <select\n                        className={`rounded px-2 py-2 w-full bg-white focus:outline-none ${\n                          this.state.formType === \"PROPS\" &&\n                          \"cursor-not-allowed\"\n                        } ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_type\"\n                            ? \"border-red-500\"\n                            : \"border-gray-500\"\n                        } border-2`}\n                        onChange={(e: React.ChangeEvent<HTMLSelectElement>) => {\n                          this.selectClaimType(e.target.value);\n                          this.setClaimFileId(\"\");\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_type\" &&\n                            this.setFormError(null);\n                        }}\n                        value={\n                          this.state.thisClaimType\n                            ? this.state.thisClaimType\n                            : \"\"\n                        }\n                        disabled={\n                          this.state.loadingForm ||\n                          this.state.formType === \"PROPS\"\n                        }\n                      >\n                        <option value=\"\">Choose claim type</option>\n                        {Object.values(PlansTypeKeys).map((item, index) => (\n                          <option\n                            value={item}\n                            key={index + item}\n                            className={`${\n                              item === PlansTypeKeys.MARKS_PUBLICATION ||\n                              item === PlansTypeKeys.PLACEMENT_TRANSFER\n                                ? \"hidden\"\n                                : \"block\"\n                            }`}\n                          >\n                            {capitalizeFirstLetter(\n                              item.toLocaleLowerCase().replace(/_/g, \" \")\n                            )}\n                          </option>\n                        ))}\n                      </select>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_type\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END SELECT CLAIM TYPE ============================================== */}\n\n                    {/* SELECT FILE TO CLAIM ON ============================================== */}\n                    <div className=\"flex flex-col mb-2\">\n                      <label>\n                        {this.generateChooseFileTitle(this.state.thisClaimType)}\n                      </label>\n                      <div\n                        className={`text-left bg-white border-2 ${\n                          this.state.formType !== \"PROPS\"\n                            ? \"border-gray-700\"\n                            : \"border-gray-400 text-gray-500\"\n                        } rounded w-full ${\n                          this.state.chooseClaimFile ? \"h-64\" : \"h-10\"\n                        } ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_file\"\n                            ? \"border-red-500\"\n                            : \"\"\n                        } border-2 ${\n                          this.state.loading\n                            ? \"cursor-waiting\"\n                            : this.state.thisClaimType &&\n                              !this.state.chooseClaimFile &&\n                              this.state.formType !== \"PROPS\"\n                            ? \"cursor-pointer\"\n                            : !this.state.chooseClaimFile &&\n                              \"cursor-not-allowed\"\n                        }`}\n                        title={\n                          !this.state.thisClaimType\n                            ? \"Choose claim type first!\"\n                            : \"\"\n                        }\n                        onClick={() => {\n                          !this.state.loading &&\n                            this.state.formType === \"DEFAULT\" &&\n                            this.state.thisClaimType &&\n                            !this.state.chooseClaimFile &&\n                            this.setChooseClaimFile(true);\n                          !this.state.loading &&\n                            this.state.formError &&\n                            this.state.formError.element === \"claim_file\" &&\n                            this.setFormError(null);\n                        }}\n                      >\n                        {/* DISPLAYING FILTERED SELECTING FILE ============================ */}\n                        {this.state.claimFileId.length > 0 &&\n                        this.state.thisClaimType &&\n                        !this.state.chooseClaimFile ? (\n                          <p className=\"my-1 mx-2\">\n                            {this.getClaimTitle(this.state.thisClaimType)}\n                          </p>\n                        ) : (\n                          !this.state.chooseClaimFile && (\n                            <p className=\"my-1 mx-2\">\n                              Select Claim{\" \"}\n                              {this.state.thisClaimType &&\n                                this.state.thisClaimType\n                                  .toLocaleLowerCase()\n                                  .replace(/_/g, \" \")}\n                            </p>\n                          )\n                        )}\n                        {/* END DISPLAYING FILTERED SELECTING FILE ============================ */}\n\n                        {/* LISTING OF REJECTED DOCUMENTS ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.DOCUMENT_VALIDATION &&\n                          this.props.claiming.candidateDocuments &&\n                          this.props.claiming.myClaims &&\n                          this.props.auth.application_session && (\n                            <FormDocumentList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              claimFileId={this.state.claimFileId}\n                              viewThisFile={this.state.viewThisFile}\n                              candidateDocuments={\n                                this.props.claiming.candidateDocuments\n                              }\n                              documentCategories={this.props.documentReducer}\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.auth.application_session\n                              }\n                            />\n                          )}\n                        {/* END LISTING OF REJECTED DOCUMENTS ============================ */}\n                        {/* ---------------------------------------------------------- */}\n                        {/* LISTING OF REJECTED APPLICATION ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.APPLICATION &&\n                          this.props.claiming.candidateApplications &&\n                          this.props.claiming.myClaims &&\n                          this.props.auth.application_session && (\n                            <FormApplicationList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              claimFileId={this.state.claimFileId}\n                              viewThisFile={this.state.viewThisFile}\n                              candidateApplications={\n                                this.props.claiming.candidateApplications\n                              }\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.auth.application_session\n                              }\n                            />\n                          )}\n                        {/* END LISTING OF REJECTED APPLICATION ============================ */}\n                        {/* ---------------------------------------------------------- */}\n                        {/* LISTING OF FAILED EXAM ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.EXAMINATION &&\n                          this.props.claiming.myAnswer &&\n                          this.props.claiming.myClaims &&\n                          this.props.auth.application_session && (\n                            <FormExamList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              claimFileId={this.state.claimFileId}\n                              viewThisFile={this.state.viewThisFile}\n                              candidateAnswers={this.props.claiming.myAnswer}\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.auth.application_session\n                              }\n                            />\n                          )}\n                        {/* END LISTING OF FAILED EXAM ============================ */}\n                        {/* ---------------------------------------------------------- */}\n                        {/* PENDING PLACEMENT ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.PLACEMENT_TRANSFER &&\n                          this.props.claiming.myClaims &&\n                          this.props.auth.application_session && (\n                            <FormPlacementList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              claimFileId={this.state.claimFileId}\n                              viewThisFile={this.state.viewThisFile}\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.auth.application_session\n                              }\n                              myPlacement={this.state.myPlacement}\n                            />\n                          )}\n                        {/* END LISTING OF FAILED Placement ============================ */}\n                      </div>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_file\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END SELECT FILE TO CLAIM ON ============================================== */}\n\n                    {/* CLAIM REASONS ========================================== */}\n                    <div className=\"flex flex-col mb-2\">\n                      <label>Choose reason of your claim</label>\n                      <div\n                        className={`text-left bg-white border-2 border-gray-700 rounded w-full ${\n                          this.state.chooseClaimReason ? \"h-64\" : \"h-auto\"\n                        } ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_reason\"\n                            ? \"border-red-500\"\n                            : \"\"\n                        } border-2 ${\n                          this.props.claiming.claimReasons === null\n                            ? \"cursor-wait\"\n                            : \"cursor-pointer\"\n                        }`}\n                        title=\"Choose the reason for your claim!\"\n                        onClick={() => {\n                          !this.state.chooseClaimReason &&\n                            this.setState({ chooseClaimReason: true });\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_reason\" &&\n                            this.setFormError(null);\n                        }}\n                      >\n                        {/* DISPLAYING SELECTED REASON ============================ */}\n                        {this.state.claimReason &&\n                        !this.state.chooseClaimReason ? (\n                          <p className=\"my-1 mx-2\">\n                            {this.state.claimReason.reason}\n                          </p>\n                        ) : (\n                          !this.state.chooseClaimReason && (\n                            <p className=\"my-1 mx-2\">Select reason</p>\n                          )\n                        )}\n                        {/* END DISPLAYING SELECTED REASON ============================ */}\n\n                        {/* LISTING OF CLAIM REASONS ============================ */}\n                        {this.state.chooseClaimReason &&\n                          this.props.claiming.claimReasons && (\n                            <ChooseReason\n                              setChooseClaimReason={this.setChooseClaimReason}\n                              setClaimReason={this.setClaimReason}\n                              claimReason={this.state.claimReason}\n                              allClaimReasons={this.props.claiming.claimReasons}\n                            />\n                          )}\n                        {/* END LISTING OF CLAIM REASONS ============================ */}\n                      </div>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_reason\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END CLAIM REASONS ========================================== */}\n\n                    {/* CLAIM COMMENT ============================================== */}\n                    <div className=\"flex flex-col\">\n                      <label>Comment</label>\n                      <textarea\n                        className={`text-left input-white w-20 inline-block ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_comment\"\n                            ? \"border-red-500\"\n                            : \"border-gray-500\"\n                        } border-2`}\n                        placeholder={`Claim comment`}\n                        style={{ resize: \"none\" }}\n                        value={this.state.claimComment}\n                        onChange={(e) => {\n                          this.setClaimComment(e.target.value);\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_comment\" &&\n                            this.setFormError(null);\n                        }}\n                        rows={3}\n                        disabled={this.state.loadingForm}\n                      ></textarea>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_comment\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END CLAIM COMMENT ============================================== */}\n                  </div>\n\n                  <div className=\"pt-3 flex justify-between\">\n                    <button\n                      onClick={() => this.cleanToClose()}\n                      className={`btn bg-gray-400 text-white hover:bg-gray-600 focus:outline-none ${\n                        this.state.loadingForm && \"cursor-not-allowed\"\n                      }`}\n                      type=\"button\"\n                      disabled={this.state.loadingForm || this.state.loading}\n                    >\n                      Exit\n                    </button>\n                    <button\n                      className={`btn bg-primary text-white hover:bg-blue-600 focus:outline-none ${\n                        this.state.loadingForm && \"cursor-wait\"\n                      }`}\n                      type=\"submit\"\n                      disabled={this.state.loadingForm || this.state.loading}\n                    >\n                      {this.state.loadingForm ? \"Loading...\" : \"Claim\"}\n                    </button>\n                  </div>\n                </div>\n              </form>\n            )}\n            {/* END CLAIM FORM ============================================== */}\n\n            {/* CLAIM DOCUMENT VIEW ============================================== */}\n            {this.state.viewThisFile.length > 0 &&\n              this.props.claiming.candidateDocuments &&\n              this.state.thisClaimType ===\n                PlansTypeKeys.DOCUMENT_VALIDATION && (\n                <DocFormView\n                  thisDoc={this.getDocumentById(\n                    this.props.claiming.candidateDocuments,\n                    this.state.viewThisFile\n                  )}\n                  setViewThisFile={this.setViewThisFile}\n                  documentCategories={this.props.documentReducer}\n                  setChooseClaimFile={this.setChooseClaimFile}\n                  setClaimFileId={this.setClaimFileId}\n                />\n              )}\n            {/* END CLAIM DOCUMENT VIEW ============================================== */}\n            {/* ------------------------------------------------------------------------- */}\n            {/* CLAIM APPLICATION VIEW ============================================== */}\n            {this.state.viewThisFile.length > 0 &&\n              this.props.claiming.candidateApplications &&\n              this.state.thisClaimType === PlansTypeKeys.APPLICATION && (\n                <ApplicationFormView\n                  thisApplication={this.getApplicationById(\n                    this.props.claiming.candidateApplications,\n                    this.state.viewThisFile\n                  )}\n                  documentCategories={this.props.documentReducer}\n                  setChooseClaimFile={this.setChooseClaimFile}\n                  setClaimFileId={this.setClaimFileId}\n                  setViewThisFile={this.setViewThisFile}\n                />\n              )}\n            {/* END CLAIM APPLICATION VIEW ============================================== */}\n            {/* ------------------------------------------------------------------------- */}\n            {/* CLAIM EXAMINATION VIEW ============================================== */}\n            {this.state.viewThisFile.length > 0 &&\n              this.props.claiming.myAnswer &&\n              this.state.thisClaimType === PlansTypeKeys.EXAMINATION &&\n              this.getExamById(\n                this.props.claiming.myAnswer,\n                this.state.viewThisFile\n              ) && (\n                <ExaminationFormView\n                  thisAnswerSheet={\n                    this.getExamById(\n                      this.props.claiming.myAnswer,\n                      this.state.viewThisFile\n                    )!\n                  }\n                  setChooseClaimFile={this.setChooseClaimFile}\n                  setClaimFileId={this.setClaimFileId}\n                  setViewThisFile={this.setViewThisFile}\n                  // thisAnswerSheet={undefined}\n                  // setViewThisFile={undefined}\n                  // setChooseClaimFile={undefined}\n                  // setClaimFileId={undefined}\n                />\n              )}\n            {/* END CLAIM EXAMINATION VIEW ============================================== */}\n          </Modal>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  document,\n  claiming,\n  course,\n}: StoreState): {\n  auth: Auth;\n  documentReducer: DocumentReducerInterface;\n  claiming: ClaimingReducerType;\n  courses: course[] | null;\n} => {\n  return {\n    auth: auth,\n    documentReducer: document,\n    claiming,\n    courses: course.courses,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  loadCourses,\n  getMyClaims,\n  getClaimReasons,\n  getMyAnswers,\n  getMyPlacement,\n  createClaim,\n  GetClaimingTypes,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  PushPopupAlert,\n})(ClaimForm);\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AccessTaskInterface,\n  PermissionInterface,\n  SystemSettingsInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PositionAPI } from \"../interfaces/position\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// SYSTEM SETTINGS  ==============\nexport interface GetSystemSettingsAction {\n  type: ActionTypes.GET_SYSTEM_SETTINGS;\n  payload: SystemSettingsInterface[];\n}\n\nexport interface DisableSystemSettingsAction {\n  type: ActionTypes.DISABLE_SYSTEM_SETTINGS;\n  payload: {\n    system_setting_id: string;\n    status: \"enabled\" | \"disabled\";\n  };\n}\n\n// ROLE TASKS ACCESS SETTINGS ===================================\nexport interface GetTaskAccessAction {\n  type: ActionTypes.GET_TASK_ACCESS;\n  payload: AccessTaskInterface[];\n}\n\n// POSITIONS SETTINGS ===================================\nexport interface PositionCreateInterface {\n  position_id?: string;\n  position_title: string;\n  description: string;\n  school_level_id: string;\n  subcategory_id: string;\n  education_institute_id: string;\n  courses: string[];\n  requirements: {\n    user_detail_category_id: string;\n    user_detail_subcategory_id: string;\n    position_requirement: {\n      category_subcategory_data_id: string;\n      required: boolean;\n    }[];\n    required: boolean;\n  }[];\n}\nexport interface GetPositionsAction {\n  type: ActionTypes.GET_POSTIONS;\n  payload: PositionAPI[];\n}\n\nexport interface CreatePositionsAction {\n  type: ActionTypes.CREATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface UpdatePositionsAction {\n  type: ActionTypes.UPDATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface DeletePositionSettingAction {\n  type: ActionTypes.DELETE_POSITION;\n  payload: string;\n}\n\nexport interface PublishPositionAction {\n  type: ActionTypes.PUBLISH_POSITION;\n  payload: {\n    position_id: string;\n    status: boolean;\n  };\n}\n\nexport type SystemActionType =\n  | GetSystemSettingsAction\n  | DisableSystemSettingsAction\n  | GetTaskAccessAction\n  | GetPositionsAction\n  | CreatePositionsAction\n  | UpdatePositionsAction\n  | DeletePositionSettingAction\n  | PublishPositionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSystemSettings = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<SystemSettingsInterface[]>(\n        `${API.AUTH}/settings`\n      );\n      dispatch<GetSystemSettingsAction>({\n        type: ActionTypes.GET_SYSTEM_SETTINGS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const disableSystemSetting = (data: {\n  system_setting_id: string;\n  status: \"enabled\" | \"disabled\";\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableSystemSettingsAction>({\n      type: ActionTypes.DISABLE_SYSTEM_SETTINGS,\n      payload: data,\n    });\n  };\n};\n\n// ============================ tasks access =======================\n\nexport const GetTaskAccess = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<\n        {\n          id: string;\n          title: string;\n          key: string;\n          permitted: PermissionInterface;\n        }[]\n      >(`${API.AUTH}/allroleaccess`);\n      let response: AccessTaskInterface[] = res.data.map((data) => ({\n        id: data.id,\n        task: data.title,\n        key: data.key,\n        permitted: data.permitted,\n      }));\n      dispatch<GetTaskAccessAction>({\n        type: ActionTypes.GET_TASK_ACCESS,\n        payload: response,\n      });\n      callback(false, \"\", response);\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// ============================ positions =======================\n\nexport const getPositions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(`${API.APPLICATION}/position`);\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createPosition = (data: PositionCreateInterface) => {\n  console.log({ createPosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreatePositionsAction>({\n      type: ActionTypes.CREATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const updatePosition = (data: PositionCreateInterface) => {\n  console.log({ updatePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdatePositionsAction>({\n      type: ActionTypes.UPDATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const deletePosition = (data: string) => {\n  console.log({ deletePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<DeletePositionSettingAction>({\n      type: ActionTypes.DELETE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const publishPosition = (data: {\n  position_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<PublishPositionAction>({\n      type: ActionTypes.PUBLISH_POSITION,\n      payload: data,\n    });\n  };\n};\n","import React from \"react\";\n\ntype TableLoadingProps = {\n  cols: number;\n};\nconst TableLoading: React.FC<TableLoadingProps> = (props) => {\n  const displayCols = (): JSX.Element[] => {\n    let colsArray: number[] = [];\n    for (let index = 0; index < props.cols; index++) {\n      colsArray.push(index);\n    }\n    let result = colsArray.map((element) => {\n      return (\n        <td className=\"p-3 text-center whitespace-nowrap\" key={element}>\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      );\n    });\n\n    return result;\n  };\n  return (\n    <>\n      <tr className=\"border-b border-gray-200\" key={228}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={22648}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={229768}>\n        {displayCols()}\n      </tr>\n    </>\n  );\n};\n\nexport default TableLoading;\n","import {\n  ApplicationStates,\n  SESSION_PLAN_KEYS,\n} from \"../interfaces/application\";\n\nexport interface SystemSettingsInterface {\n  system_setting_id: string;\n  name: string;\n  key: string;\n  status: \"enabled\" | \"disabled\";\n}\n\nexport interface ApplicationSessionInterface {\n  is_active: boolean;\n  application_session_name: string;\n  period: string;\n  application_start_date: string;\n  application_end_date: string;\n  createdAt: string;\n  updatedAt: string;\n  application_session_id: string;\n}\n\nexport interface UserInfoInterface {\n  document_type?: string;\n  issue_number?: string;\n  date_of_issue?: string;\n  date_of_expiry?: string;\n  place_of_issue?: string;\n  application_number?: string;\n  fname: string;\n  lname: string;\n  sex: \"M\" | \"F\";\n  father_names: string;\n  mother_names: string;\n  date_of_birth: string;\n  place_of_birth?: string;\n  country_of_birth: string;\n  village_id: string;\n  village: string;\n  cell: string;\n  sector: string;\n  district: string;\n  province: string;\n  photo?: string;\n  civil_status?: string;\n  spouse?: any;\n  status?: string;\n}\n\nexport interface UserInterface {\n  user_id: string;\n  _id?: string;\n  n_id?: string;\n  phone_number: string;\n  email: string;\n  password?: string;\n  user_info: UserInfoInterface;\n  details: UserDocumentsInterface[];\n  user_photo?: string;\n  default_access: RoleToUserInterface | null;\n  custome_access: CustomeAccessInterface | null;\n  is_active: boolean;\n}\n\nexport interface CandidateDetailsInterface_old {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: string;\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  } | null;\n  doc_history_status: string;\n  get_in_date: string;\n  approved?: string;\n}\n\nexport interface CandidateDetailsInterface {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: string;\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  } | null;\n  doc_history_status: string;\n  get_in_date: string;\n  approved?: string;\n}\n\nexport interface DocInterface {\n  category_subcategory_data: string;\n  school: string;\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  approved: string;\n  doc_id: string;\n  validated_by: null;\n  validation_status: string;\n  doc_history_status: string;\n  get_in_date: string;\n  date_modefied: string;\n}\n\nexport interface CandidateRoleToUserInterface {\n  key: string;\n  status: number;\n  access: boolean;\n  assigned_date: string;\n}\n\nexport interface CandidatesInterface_old {\n  user_id: string;\n  n_id: string;\n  fname: string;\n  lname: string;\n  phone_number: string;\n  district: string;\n  email: string;\n  details: CandidateDetailsInterface[];\n}\n\nexport interface ApplicationExamsInterface {\n  course_id: string;\n  proctoring_type: string;\n  center_id: string;\n  room_id: string;\n}\n\nexport interface CandidatesInterface {\n  user_id: string;\n  n_id: string;\n  fname: string;\n  lname: string;\n  phone_number: string;\n  district: string;\n  email: string;\n  in_education?: boolean;\n  disability?: boolean;\n  residence: {\n    province_id: string;\n    province_name: string;\n    district_id: string;\n    district_name: string;\n    sector_id: string;\n    sector_name: string;\n  };\n  details: CandidateDetailsInterface[];\n  exams: ApplicationExamsInterface[];\n}\n\nexport interface CustomeAccessInterface {\n  access: AccessTaskInterface[];\n  user_id: string;\n  custome_user_access_id: string;\n}\n\nexport interface UserDocumentsInterface {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: { title: string; school_id: string | null };\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  approved: \"waiting\" | \"approved\" | \"rejected\";\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    commet: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  };\n}\n\nexport interface SystemUserRoleInterface {\n  system_user_role_id: string;\n  role: string;\n  status: boolean;\n  access: AccessTaskInterface[];\n  district_required?: boolean;\n  school_required?: boolean;\n  room_required?: boolean;\n  education_institution_required?: boolean;\n  school_id: string;\n  district_id: string;\n}\n\nexport interface CustomeUserAccessInterface {\n  user_id: string;\n  access?: [\n    {\n      id: string;\n      task: string;\n      key: string;\n      permitted: {\n        create: boolean;\n        delete: boolean;\n        update: boolean;\n        view: boolean;\n      };\n    }\n  ];\n}\n\nexport interface PermissionInterface {\n  create: boolean;\n  view: boolean;\n  update: boolean;\n  delete: boolean;\n}\n\nexport interface AccessTaskInterface {\n  id: string;\n  task: string;\n  key: string;\n  permitted: PermissionInterface;\n}\n\nexport interface RoleToUserInterface {\n  system_user_role_id: string;\n  role: string;\n  access: AccessTaskInterface[];\n  status?: number;\n  school_id: string;\n  district_id: string;\n  room_id: string;\n  education_institution_id: string;\n}\n\nexport interface RoomsInterface {\n  occupied: number;\n  isUsed: boolean;\n  room_type: string;\n  room_number: number;\n  capacity: number;\n  _id: string;\n}\n\nexport interface CentersInterface {\n  rooms: RoomsInterface[];\n  isUsed: boolean;\n  _id: string;\n  center_name: string;\n  center_code: number;\n  district_id: string;\n}\n\nexport interface SectorInterface {\n  district_code: number;\n  district_id: string;\n  sector_name: string;\n  sector_code: number;\n  sector_id: string;\n}\n\nexport interface AllDistrictInterface {\n  sectors: string[];\n  centers: string[];\n  district_name: string;\n  district_code: string;\n  province_code: string;\n  province_id: string;\n  status: number;\n  createdAt: string;\n  updatedAt: string;\n  district_id: string;\n}\nexport interface DistrictInterface {\n  centers: CentersInterface[];\n  sectors: SectorInterface[];\n  province_code: number;\n  province_id: string;\n  district_name: string;\n  district_code: number;\n  _id: string;\n}\n\nexport interface RoomLocationInterface {\n  districts: DistrictInterface[];\n  province_name: string;\n  province_code: number;\n  _id: string;\n}\n\nexport interface AssignRoleToUserActionInterface {\n  user_id: string;\n  data: RoleToUserInterface;\n}\n\nexport interface AssignRoleToUserActionInterface {\n  user_id: string;\n  data: RoleToUserInterface;\n}\n\nexport enum PostRequestStatusInterface {\n  INITIATED = \"initiated\",\n  CONFIRMED = \"confirmed\",\n  RECEIVED = \"received\",\n}\n\nexport interface PostSchoolInterface_old {\n  post_at_school_id: string;\n  school_id: string;\n  position_id: string;\n  district_id: string;\n  needed_posts: number;\n  confirmed_posts?: number;\n  occupied_posts?: number;\n  requested_by: string;\n  confirmed_by?: string;\n  received_posts?: number;\n  request_date: Date;\n  approval_date?: Date;\n  post_at_school_status: PostRequestStatusInterface;\n}\n\nexport interface PostSchoolInterface {\n  _id: string;\n  school_id: string;\n  position_id: string;\n  district_id: string;\n  needed_posts: number;\n  male_number: number;\n  female_number: number;\n  description: string;\n  confirmed_posts?: number;\n  occupied_posts?: number;\n  requested_by: string;\n  confirmed_by?: string;\n  received_posts?: number;\n  request_date: Date;\n  approval_date?: Date;\n  requested_post_status: PostRequestStatusInterface;\n  school: {\n    _id: string;\n    school_name: string;\n    school_code: string;\n    province_id: string;\n    province_code: string;\n    district_id: {\n      _id: string;\n      district_name: string;\n    };\n    district_code: string;\n    sector_code: string;\n    sector_id: string;\n    school_status: string;\n    status: number;\n    createdAt: string;\n    updatedAt: string;\n  };\n  post_request_session_id: string;\n}\n\nexport interface SchoolInfoInterface {\n  school_id: string;\n  school_title: string;\n  district_id: string;\n  number_of_females?: number;\n  number_of_males?: number;\n}\n\nexport interface SchoolsInterface {\n  _id: string;\n  status: boolean;\n  school_name: string;\n  school_code: number;\n  province_id: string;\n  province_code: number;\n  district_id: string;\n  district_code: number;\n  sector_id: string;\n  sector_code: number;\n  education_category_id: string;\n}\n\nexport interface MySchoolInterface {\n  _id: string;\n  school_name: string;\n  school_code: string;\n  province_id: string;\n  province_code: string;\n  district_id: {\n    _id: string;\n    district_name: string;\n  };\n  district_code: string;\n  sector_code: string;\n  sector_id: string;\n  school_status: string;\n  status: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface SchoolLevelInterface {\n  school_level_id: string;\n  school_level_name: string;\n  description: string;\n  education_institute: string[];\n  courses: [];\n}\n\nexport interface CourseInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n}\n\nexport interface EducationInstituteInterface {\n  education_category_title: string;\n  school_levels: [];\n  description: string;\n  education_institute_id: string;\n}\n\nexport interface PositionRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface PositionInterface {\n  courses: CourseInterface[];\n  position_title: string;\n  description: string;\n  school_level_id: SchoolLevelInterface;\n  education_institute_id: EducationInstituteInterface;\n  requirements: PositionRequirementInterface[];\n  position_id: string;\n}\n\nexport enum DocumentAttributesInterface {\n  \"Title\" = \"title\",\n  \"Description\" = \"description\",\n  \"Files\" = \"files\",\n  \"email\" = \"email\",\n  \"names\" = \"names\",\n  \"phone_number\" = \"phone_number\",\n  \"position\" = \"position\",\n  \"relation\" = \"relation\",\n  \"src\" = \"src\",\n  \"year\" = \"year\",\n  \"company\" = \"company\",\n  \"category_subcategory_data\" = \"category_subcategory_data\",\n  \"others\" = \"others\",\n  \"start_year\" = \"start_year\",\n  \"end_year\" = \"end_year\",\n  \"School\" = \"School\",\n}\n\nexport enum DocValidationStatusInterface {\n  APPROVED = \"approved\",\n  REJECTED = \"rejected\",\n}\n\nexport interface DocumentCategoryInterface {\n  user_detail_category_id: string;\n  title: string;\n  description: string;\n  fields: DocumentAttributesInterface[];\n}\n\nexport interface DocumentSubCategoryInterface {\n  category_id: string;\n  title: string;\n  description: string;\n  user_detail_subcategory_id: string;\n}\n\nexport interface DocumentFieldsInterface {\n  _id: string;\n  category_id: string;\n  subcategory_id: string | null;\n  title: string;\n  description: string;\n  others: [];\n}\n\nexport interface ApplicationAssessmentInterface {\n  application_id: string;\n  user_id: string;\n  application_session: string;\n  application_status: string;\n  n_id: string;\n  phone_number: string;\n  email: string;\n  fname: string;\n  lname: string;\n  sex: \"M\" | \"F\";\n  district: string;\n  position: PositionApplicationInterface;\n  details: CandidateDetailsInterface[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface AdminApplicationsToPrintInterface {\n  application_id: number;\n  names: string;\n  gender?: string;\n  national_id?: string;\n  phone?: string;\n  email?: string;\n  position: string;\n  education_category?: string;\n  application_session?: string;\n  district?: string;\n  date?: string;\n  decision?: ApplicationStates;\n}\n\nexport interface PositionApplicationInterface {\n  courses: string[];\n  position_title: string;\n  description: string;\n  school_level_id: string;\n  education_institute_id: string;\n  requirements: PositionRequirementInterface[];\n  position_id: string;\n}\n\nexport interface PositionRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface ApplicationRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface PeriodInterface {\n  is_active: string;\n  application_session_name: string;\n  period: string;\n  application_start_date: string;\n  application_end_date: string;\n  createdAt: string;\n  updatedAt: string;\n  application_session_id: string;\n}\n\nexport interface LocationRoomTableInterface {\n  province_id: string;\n  province_name: string;\n  district_id: string;\n  district_name: string;\n  center_id: string;\n  center_name: string;\n  room_id: string;\n  room_name: string;\n  capacity: number;\n  occupied: number;\n}\n\nexport interface LocationSectorTableInterface {\n  province_id: string;\n  province_name: string;\n  province_code: number;\n  district_id: string;\n  district_name: string;\n  district_code: number;\n  sector_id: string;\n  sector_name: string;\n  sector_code: number;\n}\n\nexport interface PositionRequirementsFieldInterface {\n  category_id: string;\n  category_name: string;\n  sub_category_id: string;\n  sub_category_name: string;\n  field_id: string;\n  field_name: string;\n  sub_category_required: boolean;\n  required: boolean;\n  isAnyField: boolean;\n}\n\nexport interface PositionRequirementsQualificationInterface {\n  category_id: string;\n  category_name: string;\n  sub_category_id: string;\n  sub_category_name: string;\n  fields: DocumentFieldsInterface[];\n  required: boolean;\n}\n\nexport interface ApplicationPeriodInterface {\n  _id: string;\n  application_status: ApplicationStates;\n  userInfo: {\n    n_id: string;\n    phone_number: string;\n    email: string;\n    user_info: {\n      document_type: string;\n      issue_number: string;\n      date_of_issue: string;\n      date_of_expiry: string;\n      place_of_issue: string;\n      application_number: string;\n      fname: string;\n      lname: string;\n      father_names: string;\n      mother_names: string;\n      sex: string;\n      date_of_birth: string;\n      place_of_birth: string;\n      country_of_birth: string;\n      village_id: string;\n      village: string;\n      cell: string;\n      sector: string;\n      district: string;\n      province: string;\n      civil_status: string;\n      spouse: null;\n      status: string;\n      photo: string;\n    };\n  };\n  user_id: string;\n  position: string;\n  application_session: string;\n  exams: ApplicationExamsInterface[];\n}\n\nexport const getDocCategoryById = (\n  subDocs: DocumentCategoryInterface[],\n  docId: string\n): DocumentCategoryInterface => {\n  return subDocs.filter((doc) => doc.user_detail_category_id === docId)[0];\n};\n\nexport const getSubDocCategoryById = (\n  subDocs: DocumentSubCategoryInterface[],\n  docId: string\n): DocumentSubCategoryInterface => {\n  return subDocs.filter((doc) => doc.user_detail_subcategory_id === docId)[0];\n};\n\nexport const SESSION_PLAN_TYPES: {\n  type_id: number;\n  type_title: string;\n  type_key: SESSION_PLAN_KEYS;\n}[] = [\n  {\n    type_id: 1,\n    type_title: \"Application\",\n    type_key: SESSION_PLAN_KEYS.APPLICATION,\n  },\n  {\n    type_id: 2,\n    type_title: \"Document Validation\",\n    type_key: SESSION_PLAN_KEYS.DOCUMENT_VALIDATION,\n  },\n  {\n    type_id: 3,\n    type_title: \"Examination\",\n    type_key: SESSION_PLAN_KEYS.EXAMINATION,\n  },\n  {\n    type_id: 4,\n    type_title: \"Marks Publication\",\n    type_key: SESSION_PLAN_KEYS.MARKS_PUBLICATION,\n  },\n  {\n    type_id: 5,\n    type_title: \"Placement and Transfer\",\n    type_key: SESSION_PLAN_KEYS.PLACEMENT_TRANSFER,\n  },\n];\n","import React from \"react\";\nimport Table from \"../../components/Table/Table\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { PositionRequirementTableInterface } from \"./ViewPosition\";\n\ninterface RequirementProps {\n  requirements: PositionRequirementTableInterface[];\n}\n\nconst ViewRequirements: React.FC<RequirementProps> = (props) => {\n  const tableData = (): JSX.Element[] => {\n    let data: PositionRequirementTableInterface[] = props.requirements;\n    // let data: PositionSubcategoryData[] =\n    //   props.position_requirement.position_requirement;\n    if (data.length === 0) {\n      return [\n        <tr key={153} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={3}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    return data.map((item, index) => (\n      <tr\n        key={index + item.field_id}\n        className=\"border-b border-gray-200 hover:bg-gray-100\"\n      >\n        <td className=\"p-3 text-left whitespace-nowrap\">{index + 1}</td>\n        <td className=\"p-3 text-left\">\n          <span>{item.subcategory_title}</span>\n        </td>\n        <td className=\"p-3 text-left\">\n          <span>\n            {isEmptyOrSpaces(item.field_id) ? \"Any document\" : item.field_title}\n          </span>\n        </td>\n        <td className=\"p-3 text-left text-lg italic\">\n          {isEmptyOrSpaces(item.field_id) ? (\n            item.subcategory_required ? (\n              <span className=\"text-yellow-800\">Required</span>\n            ) : (\n              \"Optional\"\n            )\n          ) : item.required ? (\n            <span className=\"text-yellow-800\">Required</span>\n          ) : (\n            \"Optional\"\n          )}\n        </td>\n      </tr>\n    ));\n  };\n\n  return (\n    <div>\n      <Table\n        columns={[\n          { columnTitle: \"#\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Qualification\", alignText: \"left\", padding: \"p-3\" },\n          // {\n          //   columnTitle: \"Qualification Status\",\n          //   alignText: \"left\",\n          //   padding: \"p-3\",\n          // },\n          { columnTitle: \"Document\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Status\", alignText: \"left\", padding: \"p-3\" },\n          // { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n        ]}\n        rows={tableData}\n        pagination={false}\n        search={false}\n        thColor=\"gray\"\n      />\n    </div>\n  );\n};\n\nexport default ViewRequirements;\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { ApplicationSession } from \"../../../actions\";\nimport {\n  course,\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimExamResultsDetails,\n} from \"../../../interfaces\";\nimport { StoreState } from \"../../../reducers\";\nimport { search } from \"../../../utils/functions\";\nimport { isClaimAllowed } from \"./ClaimForm\";\n\nconst getFailedExam = (\n  allData: ClaimExamResultsDetails[],\n  allCourses: course[]\n): ClaimExamResultsDetails[] => {\n  let result: ClaimExamResultsDetails[] = [];\n  allData.forEach((element) => {\n    if (element.total_marks < 100) {\n      let data = element;\n      data.course_name = getCourseById(allCourses, element.course)\n        ? getCourseById(allCourses, element.course)!.course_name\n        : \"Unknown exam\";\n      result.push(data);\n    }\n  });\n\n  return result;\n};\n\nexport const getCourseById = (courses: course[], course_id: string) => {\n  return courses.find((item) => item.course_id === course_id);\n};\n\nexport const getCourseIdBySheetId = (\n  allData: ClaimExamResultsDetails[],\n  sheet_id: string\n) => {\n  return allData.find((item) => item.answer_sheet_id === sheet_id);\n};\n\nexport const searchApplication = (\n  objList: claimApplicationsInterface[],\n  text: any\n): claimApplicationsInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (prop === \"position\") {\n        flag =\n          product.position.position_title\n            .toString()\n            .toLowerCase()\n            .indexOf(text.toLowerCase()) > -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n  // return objList.filter((product) =>\n  //   product.position.position_title.includes(text)\n  // );\n};\n\ntype FormExamListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  claimFileId: string;\n  viewThisFile: string;\n  candidateAnswers: ClaimExamResultsDetails[];\n  myClaims: CandidateClaimInterface[];\n  activeSession: ApplicationSession;\n\n  // REDUX //////////////////////\n  courses: course[] | null;\n};\n\nconst FormExamList: React.FC<FormExamListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            !props.courses ||\n            getFailedExam(props.candidateAnswers, props.courses).filter(\n              (item) =>\n                isClaimAllowed(\n                  props.myClaims,\n                  props.activeSession.session_plan_id,\n                  item.answer_sheet_id\n                )\n            ).length > 0\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Close\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}{\" \"}\n      {/* searchData(props.candidateAnswers, searchInput) */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {props.courses &&\n        getFailedExam(props.candidateAnswers, props.courses).filter((item) =>\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            item.answer_sheet_id\n          )\n        ).length > 0 ? (\n          search(\n            getFailedExam(props.candidateAnswers, props.courses).filter(\n              (item) =>\n                isClaimAllowed(\n                  props.myClaims,\n                  props.activeSession.session_plan_id,\n                  item.answer_sheet_id\n                )\n            ),\n            searchInput\n          ).map((item: ClaimExamResultsDetails, index: number) => (\n            <div\n              className={`group flex items-center justify-between my-1 hover:bg-gray-100 ${\n                props.claimFileId === item.answer_sheet_id &&\n                \"bg-blue-50 border-l-4 border-blue-500\"\n              }`}\n              key={index + item.answer_sheet_id}\n            >\n              <div\n                className=\"p-1 w-full mr-2 cursor-pointer\"\n                onClick={() => {\n                  props.setChooseClaimFile(false);\n                  props.setClaimFileId(item.answer_sheet_id);\n                }}\n              >\n                <p className=\"text-base font-medium text-black\">\n                  {item.course_name}\n                </p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                onClick={() => {\n                  props.setViewThisFile(item.answer_sheet_id);\n                }}\n              >\n                View\n              </button>\n            </div>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No failed exam available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  course,\n}: StoreState): {\n  courses: course[] | null;\n} => {\n  return {\n    courses: course.courses,\n  };\n};\nexport default connect(mapStateToProps, {})(FormExamList);\n","import axios from \"axios\";\nimport React from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdInfoOutline } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { createReClaim, DocumentClaimUser } from \"../../actions/claiming\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  claimReasonInterface,\n  ClaimStatus,\n} from \"../../interfaces\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { DocumentReducerInterface } from \"../../reducers/document\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { errorToText, showDate } from \"../../utils/functions\";\nimport { ClaimGetDocTitle } from \"./Candidate/ClaimForm\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nexport const isClaimEvaluated = (\n  thisClaim: CandidateClaimInterface,\n  level: number\n): boolean => {\n  const _thisClaim = thisClaim.claims.find(\n    (item) =>\n      item.level === level && item.claim_status === ClaimStatus.EVALUATED\n  );\n  if (_thisClaim) {\n    return true;\n  }\n  return false;\n};\n\ntype ClaimDocViewProps = {\n  thisDoc: DocumentClaimUser;\n  // setViewThisFile: (value: string) => void;\n  documentCategories: DocumentReducerInterface;\n  claimReasons: claimReasonInterface[] | null;\n  thisClaim: CandidateClaimInterface;\n  viewImage: boolean;\n  setViewImage: (value: boolean) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  reClaiming: boolean;\n  setReClaiming: (value: boolean) => void;\n  reClaimingMsg: string;\n  setReClaimingMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX DATA =====================\n  createReClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst ClaimDocView: React.FC<ClaimDocViewProps> = (props) => {\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim sent successful\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim._id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Title:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {ClaimGetDocTitle(props.documentCategories, props.thisDoc).main}\n              </span>\n            </div>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewImage(!props.viewImage)}\n            >\n              {props.viewImage ? \"Hide\" : \"View\"}\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisDoc.validation_status === \"rejected\"\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } rounded px-3 py-1`}\n            >\n              {capitalizeFirstLetter(props.thisDoc.validation_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {props.thisClaim.previous.evaluater.name}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisDoc.validated_by.comment}\n            </span>\n          </div>\n\n          {/* DISPLAY IMAGE ==================================================== */}\n          {props.viewImage && (\n            <div className=\"w-full my-1 animate__animated animate__fadeIn\">\n              <img\n                src={`${API.AUTH_FILES}/${props.thisDoc.files}`}\n                alt=\"doc file\"\n                className={`w-full animate__animated animate__fadeIn`}\n              />\n            </div>\n          )}\n          {/* END DISPLAY IMAGE ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt)}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-center justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <button\n                className=\"btn btn-blue\"\n                onClick={() => props.setReClaiming(true)}\n                disabled={props.loadingRequest}\n              >\n                Reclaim\n              </button>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your reclaim...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nexport default connect(null, {\n  createReClaim,\n  PushPopupAlert,\n})(ClaimDocView);\n","import React from \"react\";\nimport { MdTurnedIn } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../../actions\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  claimApplicationsInterface,\n  claimApplicationsPositionInterface,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { DATE } from \"../../../utils/functions\";\nimport { PositionRequirementTableInterface } from \"../../Positions/ViewPosition\";\nimport ViewRequirements from \"../../Positions/ViewRequirements\";\n\nexport const FC_ApplicationPositionDistinctCategory = (\n  thisPosition: claimApplicationsPositionInterface,\n  documentCategories: DocumentReducerInterface\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n  let requirements = thisPosition.requirements;\n  // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n  for (let req in requirements) {\n    let thisRequirements = requirements[req];\n    // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisCategory = documentCategories.documentCategory\n      ? documentCategories.documentCategory.find(\n          (item) =>\n            item.user_detail_category_id ===\n            thisRequirements.user_detail_category_id\n        ) && {\n          title: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.user_detail_category_id\n          )!.title,\n          user_detail_category_id: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.user_detail_category_id\n          )!.user_detail_category_id,\n        }\n      : {\n          title: \"\",\n          user_detail_category_id: thisRequirements.user_detail_category_id,\n        };\n    // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisSubCategory = documentCategories.documentSubCategory\n      ? documentCategories.documentSubCategory.find(\n          (item) =>\n            item.user_detail_subcategory_id ===\n            thisRequirements.user_detail_subcategory_id\n        )\n        ? {\n            title: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.user_detail_subcategory_id\n            )!.title,\n            user_detail_subcategory_id:\n              documentCategories.documentSubCategory.find(\n                (item) =>\n                  item.user_detail_subcategory_id ===\n                  thisRequirements.user_detail_subcategory_id\n              )!.user_detail_subcategory_id,\n            category_id: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.user_detail_subcategory_id\n            )!.category_id,\n          }\n        : {\n            title: \"\",\n            user_detail_subcategory_id:\n              thisRequirements.user_detail_subcategory_id,\n            category_id: \"\",\n          }\n      : {\n          title: \"\",\n          user_detail_subcategory_id:\n            thisRequirements.user_detail_subcategory_id,\n          category_id: \"\",\n        };\n    // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n    if (thisCategory) {\n      for (let field in thisRequirements.position_requirement) {\n        // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n        let thisField = documentCategories.documentFields\n          ? documentCategories.documentFields.find(\n              (item) =>\n                item._id ===\n                thisRequirements.position_requirement[field]\n                  .category_subcategory_data_id\n            )\n            ? {\n                title: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]\n                      .category_subcategory_data_id\n                )!.title,\n                _id: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]\n                      .category_subcategory_data_id\n                )!._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n            : {\n                title: \"\",\n                _id: thisRequirements.user_detail_subcategory_id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n          : {\n              title: \"\",\n              _id: thisRequirements.user_detail_subcategory_id,\n              required: thisRequirements.position_requirement[field].required,\n            };\n        // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n        PositionsTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: thisField.title,\n          field_id: thisField._id,\n          required: thisField.required,\n        });\n      }\n\n      // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n      ) {\n        DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n        DistinctCategoriesTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: \"\",\n          subcategory_title: \"\",\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n\n      // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctSubCategoriesIds.includes(\n          thisSubCategory.user_detail_subcategory_id\n        )\n      ) {\n        DistinctSubCategoriesIds.push(\n          thisSubCategory.user_detail_subcategory_id\n        );\n        DistinctSubCategoriesTemp.push({\n          category_id: thisSubCategory.category_id,\n          category_title: \"\",\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n    }\n  }\n  // DistinctCategoriesIds.;\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\nexport const showEvaluator = (\n  userList: UserInterface[],\n  user_id: string\n): string => {\n  let result: string = \"\";\n  if (user_id === \"system\") {\n    result = \"System\";\n  } else {\n    // let user = getUserDocuments(userList, user_id);\n    // let user = undefined;\n    // if (user) {\n    //   result = user.user.user_info.fname + \" \" + user.user.user_info.lname;\n    // }\n  }\n  return result;\n};\n\ntype ApplicationFormViewProps = {\n  thisApplication: claimApplicationsInterface;\n  setViewThisFile: (value: string) => void;\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  documentCategories: DocumentReducerInterface;\n  PushPopupAlert: Function;\n};\n\nconst ApplicationFormView: React.FC<ApplicationFormViewProps> = (props) => {\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          {/* APPLICATION TITLE ========== */}\n          <section className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              {props.thisApplication.position.position_title}\n            </span>\n            <button\n              type=\"button\"\n              className=\"btn btn-blue\"\n              onClick={() => {\n                props.setChooseClaimFile(false);\n                props.setClaimFileId(props.thisApplication.application_id);\n                props.setViewThisFile(\"\");\n              }}\n            >\n              Choose\n            </button>\n          </section>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisApplication.createdAt)}\n            </span>\n          </div>\n          {false && (\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Session:</span>\n              <span className=\"font-bold text-gray-900 py-1\">\n                {\n                  props.thisApplication.application_session\n                    .application_session_name\n                }\n              </span>\n            </div>\n          )}\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisApplication.application_status ===\n                ApplicationStates.Rejected\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } py-1`}\n            >\n              {capitalizeFirstLetter(props.thisApplication.application_status)}\n            </span>\n          </div>\n          {/* <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {props.thisApplication.}\n            </span>\n          </div> */}\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-semibold text-gray-900\">\n              {props.thisApplication.override_by.comment}\n            </span>\n          </div>\n        </div>\n        <div className=\"bg-white w-full rounded p-2 mb-2\">\n          <div className=\"text-gray-800 text-2xl font-bold my-2\">\n            Position Details\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Desc:</span>\n            <span className=\"font-semibold\">\n              {props.thisApplication.position.description}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>School level:</span>\n            <span className=\"font-semibold\">\n              {props.thisApplication.position.school_level_id.school_level_name}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Institute:</span>\n            <span className=\"font-semibold\">\n              {\n                props.thisApplication.position.education_institute_id\n                  .education_category_title\n              }\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Courses:</span>\n            <span className=\"flex items-center gap-2\">\n              {props.thisApplication.position.courses.map((item, index) => (\n                <div\n                  key={index + item.course_id}\n                  className=\"flex items-center gap-1\"\n                >\n                  <span className=\"font-semibold\">{item.course_name}</span>\n                  <span className=\"text-gray-600\">({item.course_code})</span>\n                  {index !==\n                    props.thisApplication.position.courses.length - 1 && \",\"}\n                </div>\n              ))}\n            </span>\n          </div>\n\n          <div className=\"text-gray-800 text-2xl font-bold my-2\">\n            Position Requirements\n          </div>\n          {props.thisApplication.position.requirements.length > 0 ? (\n            FC_ApplicationPositionDistinctCategory(\n              props.thisApplication.position,\n              props.documentCategories\n            ).DistinctCategoriesTemp.map((item, index) => (\n              <div\n                className=\"bg-gray-100props.thisApplication.position rounded p-2\"\n                key={index + item.category_id}\n              >\n                <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                  <MdTurnedIn />\n                  <span>{item.category_title}</span>\n                </div>\n                <div className=\"border bg-white mt-1\">\n                  <ViewRequirements\n                    requirements={FC_ApplicationPositionDistinctCategory(\n                      props.thisApplication.position,\n                      props.documentCategories\n                    ).PositionsTemp.filter(\n                      (req) => req.category_id === item.category_id\n                    )}\n                  />\n                </div>\n              </div>\n            ))\n          ) : (\n            <NoResult\n              theme={NoResultThemes.Dark}\n              value={\"No requirements\"}\n            ></NoResult>\n          )}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default connect(null, { PushPopupAlert })(ApplicationFormView);\n","import React from \"react\";\nimport { AnswersDetails } from \"../../../components/AnswersDetails/AnswersDetails\";\nimport {\n  claimApplicationsPositionInterface,\n  ClaimExamResultsDetails,\n} from \"../../../interfaces\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { DATE } from \"../../../utils/functions\";\nimport { ExamDoneDetailsAnswers } from \"../../CandidateExams/CandidateExams\";\nimport { PositionRequirementTableInterface } from \"../../Positions/ViewPosition\";\n\nexport const FC_ApplicationPositionDistinctCategory = (\n  thisPosition: claimApplicationsPositionInterface,\n  documentCategories: DocumentReducerInterface\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n  let requirements = thisPosition.requirements;\n  // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n  for (let req in requirements) {\n    let thisRequirements = requirements[req];\n    // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisCategory = documentCategories.documentCategory\n      ? documentCategories.documentCategory.find(\n          (item) =>\n            item.user_detail_category_id ===\n            thisRequirements.user_detail_category_id\n        ) && {\n          title: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.user_detail_category_id\n          )!.title,\n          user_detail_category_id: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.user_detail_category_id\n          )!.user_detail_category_id,\n        }\n      : {\n          title: \"\",\n          user_detail_category_id: thisRequirements.user_detail_category_id,\n        };\n    // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisSubCategory = documentCategories.documentSubCategory\n      ? documentCategories.documentSubCategory.find(\n          (item) =>\n            item.user_detail_subcategory_id ===\n            thisRequirements.user_detail_subcategory_id\n        )\n        ? {\n            title: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.user_detail_subcategory_id\n            )!.title,\n            user_detail_subcategory_id:\n              documentCategories.documentSubCategory.find(\n                (item) =>\n                  item.user_detail_subcategory_id ===\n                  thisRequirements.user_detail_subcategory_id\n              )!.user_detail_subcategory_id,\n            category_id: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.user_detail_subcategory_id\n            )!.category_id,\n          }\n        : {\n            title: \"\",\n            user_detail_subcategory_id:\n              thisRequirements.user_detail_subcategory_id,\n            category_id: \"\",\n          }\n      : {\n          title: \"\",\n          user_detail_subcategory_id:\n            thisRequirements.user_detail_subcategory_id,\n          category_id: \"\",\n        };\n    // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n    if (thisCategory) {\n      for (let field in thisRequirements.position_requirement) {\n        // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n        let thisField = documentCategories.documentFields\n          ? documentCategories.documentFields.find(\n              (item) =>\n                item._id ===\n                thisRequirements.position_requirement[field]\n                  .category_subcategory_data_id\n            )\n            ? {\n                title: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]\n                      .category_subcategory_data_id\n                )!.title,\n                _id: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]\n                      .category_subcategory_data_id\n                )!._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n            : {\n                title: \"\",\n                _id: thisRequirements.user_detail_subcategory_id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n          : {\n              title: \"\",\n              _id: thisRequirements.user_detail_subcategory_id,\n              required: thisRequirements.position_requirement[field].required,\n            };\n        // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n        PositionsTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: thisField.title,\n          field_id: thisField._id,\n          required: thisField.required,\n        });\n      }\n\n      // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n      ) {\n        DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n        DistinctCategoriesTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: \"\",\n          subcategory_title: \"\",\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n\n      // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctSubCategoriesIds.includes(\n          thisSubCategory.user_detail_subcategory_id\n        )\n      ) {\n        DistinctSubCategoriesIds.push(\n          thisSubCategory.user_detail_subcategory_id\n        );\n        DistinctSubCategoriesTemp.push({\n          category_id: thisSubCategory.category_id,\n          category_title: \"\",\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n    }\n  }\n  // DistinctCategoriesIds.;\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\nexport const showEvaluator = (\n  userList: UserInterface[],\n  user_id: string\n): string => {\n  let result: string = \"\";\n  if (user_id === \"system\") {\n    result = \"System\";\n  } else {\n    // let user = getUserDocuments(userList, user_id);\n    // let user = undefined;\n    // if (user) {\n    //   result = user.user.user_info.fname + \" \" + user.user.user_info.lname;\n    // }\n  }\n  return result;\n};\n\nexport const claimShowAnswer = (\n  answer: ClaimExamResultsDetails,\n  course_name: string\n): ExamDoneDetailsAnswers => {\n  const result: ExamDoneDetailsAnswers = {\n    course: answer.course,\n    course_name: course_name,\n    discription: answer.discription,\n    termes: answer.termes,\n    rules: {\n      right_click_enabled: false,\n      copy_enabled: false,\n      paste_enabled: false,\n      stop_candidate_when_comeback: false,\n      allow_to_leave_browser: false,\n    },\n    period: answer.period,\n    exam_date: answer.exam_date,\n  };\n  return result;\n};\n\ntype ExaminationFormViewProps = {\n  thisAnswerSheet: ClaimExamResultsDetails;\n  setViewThisFile: (value: string) => void;\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n};\n\nconst ExaminationFormView: React.FC<ExaminationFormViewProps> = (props) => {\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          {/* APPLICATION TITLE ========== */}\n          <section className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              {props.thisAnswerSheet.course_name}\n            </span>\n            <button\n              type=\"button\"\n              className=\"btn btn-blue\"\n              onClick={() => {\n                props.setChooseClaimFile(false);\n                props.setClaimFileId(props.thisAnswerSheet.answer_sheet_id);\n                props.setViewThisFile(\"\");\n              }}\n            >\n              Choose\n            </button>\n          </section>\n\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisAnswerSheet.createdAt)}\n            </span>\n          </div>\n        </div>\n        {/* QUESTIONS ----------------------------- */}\n        <AnswersDetails\n          showAnswers={false}\n          exam_id={claimShowAnswer(\n            props.thisAnswerSheet,\n            props.thisAnswerSheet.course_name\n          )}\n        />\n        {/* END QUESTIONS ----------------------------- */}\n      </div>\n    </section>\n  );\n};\n\nexport default ExaminationFormView;\n","import moment from \"moment\";\nimport React from \"react\";\nimport {\n  compareWithToday,\n  ExamDoneDetailsAnswers,\n} from \"../../containers/CandidateExams/CandidateExams\";\nimport { TimeZone } from \"../../utils/app.config\";\nimport { DATE } from \"../../utils/functions\";\nimport { AnswersDetails } from \"./AnswersDetails\";\n\ninterface CandidateAnswersDetailsProps {\n  exam_id: ExamDoneDetailsAnswers;\n  showAnswers: boolean;\n}\n\nconst CandidateAnswersDetails = (props: CandidateAnswersDetailsProps) => {\n  const today = moment().tz(TimeZone);\n  let tomorrow = new Date();\n  tomorrow.setDate(today.date() + 1);\n  return (\n    <div>\n      {/* Check if period is open for claims */}\n      {compareWithToday(today, props.exam_id.exam_date) === false ? (\n        <div className=\"bg-yellow-100 text-yellow-800 font-extrabold text-center flex flex-col items-center justify-center text-lg px-2 py-6\">\n          <div className=\"mb-5 text-3xl\">\n            Please wait, the exam details will be visible soon!\n          </div>\n          <div className=\"text-gray-600\">Exam details will be visible from</div>\n          <div className=\"bg-white rounded-full px-3 py-1 text-gray-700\">\n            {DATE(tomorrow.toString())}\n          </div>\n        </div>\n      ) : (\n        <AnswersDetails\n          exam_id={props.exam_id}\n          showAnswers={props.showAnswers}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default CandidateAnswersDetails;\n","import React, { Component } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { claimReasonInterface } from \"../../../interfaces\";\nimport search from \"../../../utils/search\";\n\nexport const claimReasonsData = [\n  { key: 1, reason: \"Not placed (Sinahawe umwanya)\" },\n  {\n    key: 2,\n    reason:\n      \"Not placed with higher marks (Sinahawe umwanya kandi hari abo ndusha twakoze bimwe bawuhawe)\",\n  },\n  {\n    key: 3,\n    reason:\n      \"Want to change district of placement (Nifuza guhindurirwa akarere nahawemo umwanya)\",\n  },\n  {\n    key: 4,\n    reason: \"Rejected offer by mistake (Nibeshye nanga umwanya nahawe)\",\n  },\n  {\n    key: 0,\n    reason: \"None of the above (nta na kimwe muri ibyo byavuzwe haruguru)\",\n  },\n];\n\ntype ChooseReasonProps = {\n  claimReason: claimReasonInterface | null;\n  setClaimReason: (value: claimReasonInterface | null) => void;\n  setChooseClaimReason: (value: boolean) => void;\n  allClaimReasons: claimReasonInterface[];\n};\n\ntype ChooseReasonState = {\n  searchInput: string;\n};\n\nclass ChooseReason extends Component<ChooseReasonProps, ChooseReasonState> {\n  constructor(props: ChooseReasonProps) {\n    super(props);\n\n    this.state = {\n      searchInput: \"\",\n    };\n  }\n\n  setSearchInput = (value: string) => {\n    this.setState({ searchInput: value });\n  };\n\n  render() {\n    return (\n      <div>\n        {/* SEARCH PART */}\n        <div className=\"flex items-center w-full my-1\">\n          <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n          <input\n            type=\"text\"\n            placeholder=\"Search\"\n            className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n            onChange={(e) => this.setSearchInput(e.target.value)}\n            value={this.state.searchInput}\n          />\n          <button\n            className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n            type=\"button\"\n            onClick={() => this.props.setChooseClaimReason(false)}\n          >\n            Close\n          </button>\n        </div>\n        {/* END SEARCH PART ///////////////// */}\n\n        <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n          {search(this.props.allClaimReasons, this.state.searchInput).map(\n            (item: claimReasonInterface, index) => (\n              <section key={index.toString() + item.id}>\n                <div\n                  className={`py-1 w-full px-2 hover:bg-gray-100 cursor-pointer ${\n                    this.props.claimReason &&\n                    this.props.claimReason.id === item.id\n                      ? \"border-l-4 border-blue-500 bg-blue-50\"\n                      : \"my-1\"\n                  }`}\n                  onClick={() => {\n                    this.props.setChooseClaimReason(false);\n                    this.props.setClaimReason(item);\n                  }}\n                >\n                  <p className=\"text-base text-black\">{item.reason}</p>\n                </div>\n              </section>\n            )\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ChooseReason;\n","import React from \"react\";\nimport { DocumentClaimUser } from \"../../../actions/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { ClaimGetDocTitle } from \"./ClaimForm\";\n\ntype DocFormViewProps = {\n  thisDoc: DocumentClaimUser;\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  documentCategories: DocumentReducerInterface;\n};\n\nconst DocFormView: React.FC<DocFormViewProps> = (props) => {\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-xl\">\n              {ClaimGetDocTitle(props.documentCategories, props.thisDoc).main}\n            </span>\n            <button\n              type=\"button\"\n              className=\"btn btn-blue\"\n              onClick={() => {\n                props.setChooseClaimFile(false);\n                props.setClaimFileId(props.thisDoc.doc_id);\n                props.setViewThisFile(\"\");\n              }}\n            >\n              Choose\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span className=\"font-bold text-yellow-900 rounded px-3 py-1\">\n              {capitalizeFirstLetter(props.thisDoc.validation_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              ################\n              {/* {loadingUsers ? (\n                <div className=\"w-24 h-3 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n              ) : getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                ) ? (\n                getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                )!.user.user_info.fname +\n                \" \" +\n                getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                )!.user.user_info.lname\n              ) : (\n                \"-\"\n              )} */}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisDoc.validated_by.comment}\n            </span>\n          </div>\n          <div className=\"w-full my-1\">\n            <img\n              src={`${API.AUTH_FILES}/${props.thisDoc.files}`}\n              alt=\"doc file\"\n              className={`w-full`}\n            />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default DocFormView;\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { ApplicationSession } from \"../../../actions\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { isClaimAllowed } from \"./ClaimForm\";\n\nconst getRejectedApplicants = (\n  applicationData: claimApplicationsInterface[]\n): claimApplicationsInterface[] => {\n  return applicationData.filter(\n    (item) => item.application_status === ApplicationStates.Rejected\n  );\n};\n\nexport const searchApplication = (\n  objList: claimApplicationsInterface[],\n  text: any\n): claimApplicationsInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (prop === \"position\") {\n        flag =\n          product.position.position_title\n            .toString()\n            .toLowerCase()\n            .indexOf(text.toLowerCase()) > -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n  // return objList.filter((product) =>\n  //   product.position.position_title.includes(text)\n  // );\n};\n\ntype FormApplicationListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  claimFileId: string;\n  viewThisFile: string;\n  candidateApplications: claimApplicationsInterface[];\n  myClaims: CandidateClaimInterface[];\n  activeSession: ApplicationSession;\n};\n\nconst FormApplicationList: React.FC<FormApplicationListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            getRejectedApplicants(props.candidateApplications).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.application_id\n              )\n            ).length > 0\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Close\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}{\" \"}\n      {/* searchData(props.candidateApplications, searchInput) */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {getRejectedApplicants(props.candidateApplications).filter((item) =>\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            item.application_id\n          )\n        ).length > 0 ? (\n          searchApplication(\n            getRejectedApplicants(props.candidateApplications).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.application_id\n              )\n            ),\n            searchInput\n          ).map((item, index) => (\n            <div\n              className={`group flex items-center justify-between my-1 hover:bg-gray-100 ${\n                props.claimFileId === item.application_id &&\n                \"bg-blue-50 border-l-4 border-blue-500\"\n              }`}\n              key={index + item.application_id}\n            >\n              <div\n                className=\"p-1 w-full mr-2 cursor-pointer\"\n                onClick={() => {\n                  props.setChooseClaimFile(false);\n                  props.setClaimFileId(item.application_id);\n                }}\n              >\n                <p className=\"text-base font-medium text-black\">\n                  {item.position.position_title}\n                </p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                onClick={() => {\n                  props.setViewThisFile(item.application_id);\n                }}\n              >\n                View\n              </button>\n            </div>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No Rejected document available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default FormApplicationList;\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { ClaimGetDocTitle, isClaimAllowed } from \"./ClaimForm\";\nimport { DocumentClaimUser } from \"../../../actions/claiming\";\nimport { CategorySubcategoryData } from \"../../../interfaces/candidatesInterfaces\";\nimport { CandidateClaimInterface } from \"../../../interfaces\";\nimport { ApplicationSession } from \"../../../actions\";\n\nexport interface DocumentTitleInterface {\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  school: {\n    school_name: string;\n    _id: string;\n    status: boolean;\n    education_category_id?: {\n      education_category_title: string;\n      _id: string;\n    };\n    district_id?: {\n      district_name: string;\n      _id: string;\n    };\n  } | null;\n  school_id: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  validation_status: string;\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: string;\n    date: string;\n  };\n  doc_id: string;\n  doc_title: string;\n  category_subcategory_data: CategorySubcategoryData | null;\n}\n\nexport const DocumentTitleData = (\n  documentData: DocumentClaimUser[],\n  documentCategories: DocumentReducerInterface\n): DocumentTitleInterface[] | [] => {\n  let documentTemp: DocumentTitleInterface[] = [];\n  for (let i in documentData) {\n    documentTemp.push({\n      category_id: documentData[i].category_id,\n      company: documentData[i].company,\n      description: documentData[i].description,\n      email: documentData[i].email,\n      end_year: documentData[i].end_year,\n      files: documentData[i].files,\n      names: documentData[i].names,\n      phone_number: documentData[i].phone_number,\n      school: documentData[i].school,\n      school_id: documentData[i].school_id,\n      start_year: documentData[i].start_year,\n      sub_category_id: documentData[i].sub_category_id,\n      title: documentData[i].title,\n      year: documentData[i].year,\n      validation_status: documentData[i].validation_status,\n      validated_by: documentData[i].validated_by,\n      doc_id: documentData[i].doc_id,\n      doc_title: ClaimGetDocTitle(documentCategories, documentData[i]).main,\n      category_subcategory_data: documentData[i].category_subcategory_data,\n    });\n  }\n  return documentTemp;\n};\n\nconst getRejectedDocuments = (\n  documentData: DocumentClaimUser[]\n): DocumentClaimUser[] => {\n  console.log({\n    rejected: documentData.filter(\n      (item) => item.validation_status === \"rejected\"\n    ),\n  });\n  return documentData.filter((item) => item.validation_status === \"rejected\");\n};\n\nexport const searchDocuments = (\n  objList: DocumentTitleInterface[],\n  text: any\n): DocumentTitleInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter(\n    (product) =>\n      product.doc_title.toString().toLowerCase().indexOf(text.toLowerCase()) >\n      -1\n  );\n};\n\ntype FormDocumentListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  claimFileId: string;\n  viewThisFile: string;\n  candidateDocuments: DocumentClaimUser[];\n  documentCategories: DocumentReducerInterface;\n  myClaims: CandidateClaimInterface[];\n  activeSession: ApplicationSession;\n};\n\nconst FormDocumentList: React.FC<FormDocumentListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            DocumentTitleData(\n              getRejectedDocuments(props.candidateDocuments),\n              props.documentCategories\n            ).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.doc_id\n              )\n            ).length > 0\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Close\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {props.candidateDocuments.filter((item) =>\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            item.doc_id\n          )\n        ).length > 0 ? (\n          searchDocuments(\n            DocumentTitleData(\n              getRejectedDocuments(props.candidateDocuments),\n              props.documentCategories\n            ).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.doc_id\n              )\n            ),\n            searchInput\n          ).map((doc, index) => (\n            <section key={index + doc.doc_id}>\n              <div\n                className={`group flex items-center justify-between my-1 hover:bg-gray-100 ${\n                  props.claimFileId === doc.doc_id &&\n                  \"bg-blue-50 border-l-4 border-blue-500\"\n                }`}\n              >\n                <div\n                  className=\"p-1 w-full mr-2 cursor-pointer\"\n                  onClick={() => {\n                    props.setChooseClaimFile(false);\n                    props.setClaimFileId(doc.doc_id);\n                  }}\n                >\n                  <p className=\"text-base font-medium text-black\">\n                    {ClaimGetDocTitle(props.documentCategories, doc).main}\n                  </p>\n                </div>\n                <button\n                  type=\"button\"\n                  className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                  onClick={() => {\n                    props.viewThisFile === doc.doc_id\n                      ? props.setViewThisFile(\"\")\n                      : props.setViewThisFile(doc.doc_id);\n                  }}\n                >\n                  {props.viewThisFile === doc.doc_id ? \"Close\" : \"View\"}\n                </button>\n              </div>\n            </section>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No Rejected document available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default FormDocumentList;\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { VscLoading } from \"react-icons/vsc\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../../actions\";\nimport { updateSessionPlan } from \"../../../actions/session\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport {\n  allPlanTypes,\n  PlansInterface,\n  PlansTypeInterface,\n  PlansTypeKeys,\n  SessionPlanInterface,\n  SessionPlanTypeStatus,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { DATE, errorToText } from \"../../../utils/functions\";\n\nexport const isActivationAllowed = (thisPlans: PlansInterface): boolean => {\n  let today: Date = new Date(),\n    end_date = new Date(thisPlans.end_date);\n  if (end_date.getTime() >= today.getTime()) {\n    return true;\n  }\n  return false;\n};\n\nexport const getPlanTypeByKey = (\n  type_key: PlansTypeKeys\n): PlansTypeInterface | undefined => {\n  return allPlanTypes.find((item) => item.type_key === type_key);\n};\n\nexport const isPlanActive = (\n  viewThisSession: SessionPlanInterface,\n  thisPlan: PlansInterface\n): \"OPEN\" | \"CLOSED\" | \"WAITING\" => {\n  if (viewThisSession.is_active) {\n    let today = new Date(),\n      planEndDate = new Date(thisPlan.end_date),\n      planStartDate = new Date(thisPlan.start_date);\n    if (\n      planEndDate.getTime() >= today.getTime() &&\n      planStartDate.getTime() <= today.getTime() &&\n      thisPlan.type_status !== SessionPlanTypeStatus.CLOSED\n    ) {\n      return \"OPEN\";\n    } else if (\n      planStartDate.getTime() > today.getTime() &&\n      thisPlan.type_status !== SessionPlanTypeStatus.CLOSED\n    ) {\n      return \"WAITING\";\n    }\n  }\n  return \"CLOSED\";\n};\n\ntype SessionDetailsProps = {\n  viewThisSession: SessionPlanInterface;\n  setViewThisSession: (data: SessionPlanInterface) => void;\n\n  // REDUX ----------------\n  updateSessionPlan: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype SessionDetailsState = {\n  loadingRequest: string;\n};\n\nexport class SessionDetails extends Component<\n  SessionDetailsProps,\n  SessionDetailsState\n> {\n  constructor(props: SessionDetailsProps) {\n    super(props);\n\n    this.state = {\n      loadingRequest: \"\",\n    };\n  }\n\n  handlePlanActivation = async (\n    session: SessionPlanInterface,\n    thisPlan: PlansInterface\n  ) => {\n    const newState: \"open\" | \"close\" = session.is_active ? \"close\" : \"open\";\n\n    if (!window.confirm(`Are you sure you want to ${newState} this plan?`)) {\n      return true;\n    }\n\n    if (!isActivationAllowed(thisPlan)) {\n      this.props.PushPopupAlert({\n        title: `Opening/Closing plan which has been expired is not allowed!`,\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    let newData: SessionPlanInterface = {\n      session_plan_name: session.session_plan_name,\n      period: session.period,\n      is_active: session.is_active,\n      plans: [],\n      createdAt: session.createdAt,\n      updatedAt: session.updatedAt,\n      session_plan_id: session.session_plan_id,\n    };\n    for (const key in session.plans) {\n      if (Object.prototype.hasOwnProperty.call(session.plans, key)) {\n        const element = session.plans[key];\n        if (thisPlan.type_key === element.type_key) {\n          if (thisPlan.type_status === SessionPlanTypeStatus.OPEN) {\n            newData.plans.push({\n              type_id: thisPlan.type_id,\n              type_title: thisPlan.type_title,\n              type_key: thisPlan.type_key,\n              type_status: SessionPlanTypeStatus.CLOSED,\n              start_date: thisPlan.start_date,\n              end_date: thisPlan.end_date,\n              allowed_claim_level: thisPlan.allowed_claim_level,\n              _id: thisPlan._id,\n              history: thisPlan.history,\n            });\n          } else {\n            newData.plans.push({\n              type_id: thisPlan.type_id,\n              type_title: thisPlan.type_title,\n              type_key: thisPlan.type_key,\n              type_status: SessionPlanTypeStatus.OPEN,\n              start_date: thisPlan.start_date,\n              end_date: thisPlan.end_date,\n              allowed_claim_level: thisPlan.allowed_claim_level,\n              _id: thisPlan._id,\n              history: thisPlan.history,\n            });\n          }\n        } else {\n          newData.plans.push(element);\n        }\n      }\n    }\n\n    console.log(\"====================================\");\n    console.log({ newData });\n    console.log(\"====================================\");\n\n    this.setState({ loadingRequest: thisPlan.type_key });\n    try {\n      const res = await axios.put<SessionPlanInterface>(\n        `${API.CLAIMING}/session/${session.session_plan_id}`,\n        newData\n      );\n      this.props.updateSessionPlan(res.data);\n      this.props.setViewThisSession(res.data);\n      this.props.PushPopupAlert({\n        title: `Session ${newState}d successfully`,\n        theme: PopupAlertTheme.info,\n      });\n      this.setState({ loadingRequest: \"\" });\n      console.log(\"updateSessionPlan: \", res);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.warning,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <table className=\"w-full bg-white shadow p-5\" id=\"session_content\">\n        <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n          <tr>\n            <td className=\"p-2\">#</td>\n            <td className=\"p-2\">Plan Type</td>\n            <td className=\"p-2\">Start Date</td>\n            <td className=\"p-2\">End date</td>\n            {this.props.viewThisSession.is_active && (\n              <td className=\"p-2\" colSpan={2}>\n                Status\n              </td>\n            )}\n          </tr>\n        </thead>\n        <tbody>\n          {/* WHILE DATA FOUND ====================== */}\n          {this.props.viewThisSession.plans.map((item, index) => (\n            <tr\n              key={index + item._id}\n              className={`border-b border-gray-200 hover:bg-gray-100`}\n            >\n              <td className=\"p-2 text-left whitespace-nowrap\">{index + 1}</td>\n              <td className=\"p-2 text-left\">\n                <span className=\"text-lg\">\n                  {getPlanTypeByKey(item.type_key) &&\n                    capitalizeFirstLetter(\n                      getPlanTypeByKey(item.type_key)!.type_title\n                    )}\n                </span>\n              </td>\n              <td className=\"p-2 text-left\">{DATE(item.start_date)}</td>\n              <td className=\"p-2 text-left\">{DATE(item.end_date)}</td>\n              {this.props.viewThisSession.is_active && (\n                <td>\n                  {isPlanActive(this.props.viewThisSession, item) === \"OPEN\" ? (\n                    <span className={`px-2 py-1 font-semibold text-green-700`}>\n                      Open\n                    </span>\n                  ) : isPlanActive(this.props.viewThisSession, item) ===\n                    \"WAITING\" ? (\n                    <span className={`px-2 py-1 font-semibold text-gray-700`}>\n                      Waiting\n                    </span>\n                  ) : (\n                    <span className={`px-2 py-1 font-semibold text-red-700`}>\n                      Closed\n                    </span>\n                  )}\n                </td>\n              )}\n              {this.props.viewThisSession.is_active && (\n                <td>\n                  {isActivationAllowed(item) && (\n                    <div className=\"flex items-center justify-center gap-1\">\n                      <div\n                        className={`relative ${\n                          this.state.loadingRequest.length > 0\n                            ? \"cursor-not-allowed\"\n                            : \"cursor-pointer\"\n                        }`}\n                        title={\n                          item.type_status === SessionPlanTypeStatus.OPEN\n                            ? \"Deactivating session\"\n                            : \"Activating session\"\n                        }\n                        onClick={() =>\n                          this.state.loadingRequest.length <= 0 &&\n                          this.handlePlanActivation(\n                            this.props.viewThisSession,\n                            item\n                          )\n                        }\n                      >\n                        <span className=\"block w-14 h-8 bg-gray-100 rounded-full shadow-inner\"></span>\n                        <span\n                          className={`absolute block w-6 h-6 mt-1 ml-1 rounded-full shadow inset-y-0 left-0 focus-within:shadow-outline transition-transform duration-500 ease-in-out ${\n                            item.type_status === SessionPlanTypeStatus.CLOSED\n                              ? \"bg-red-500\"\n                              : \"bg-green-500 transform translate-x-full\"\n                          }`}\n                        ></span>\n                      </div>\n                      {this.state.loadingRequest === item.type_key && (\n                        <VscLoading className=\"animate__animated animate__rotateIn animate__infinite\" />\n                      )}\n                    </div>\n                  )}\n                </td>\n              )}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nexport default connect(null, {\n  updateSessionPlan,\n  PushPopupAlert,\n})(SessionDetails);\n","import React, { Component, Fragment, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { BiArrowBack } from \"react-icons/bi\";\nimport { BsFillFileEarmarkTextFill } from \"react-icons/bs\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment-timezone\";\nimport { TimeZone } from \"../../utils/app.config\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  Auth,\n  CandidateApplicationsStoreInterface,\n  candidateExamStoreInterface,\n  FC_Access,\n  FC_GetProfileDetails,\n  LoadCandidateApplications,\n  setSelectedCandidateExam,\n  setSelectedCourse,\n  setSelectedPosition,\n  InitializeExamDetails,\n  loadExamsDone,\n  AddUserApplication,\n  loadApplicationPeriods,\n  applicationPeriodsStoreInterface,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { UserExamStatus, UserExamsListInterface } from \"../../interfaces/exam\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { DATE, getMinutesFromTwoDates } from \"../../utils/functions\";\nimport { CountDown } from \"../../components/CountDown/CountDown\";\nimport { ExamTimeStatus, validateExamDate } from \"../../utils/question_bank\";\nimport { course, PositionAPI, PositionAPICourse } from \"../../interfaces\";\nimport {\n  ApplicationStates,\n  GetApplicationsAPI,\n} from \"../../interfaces/application\";\nimport { UserAccessList } from \"../../utils/auth_access\";\nimport { MdClose } from \"react-icons/md\";\nimport ChooseExamCenter, {\n  LocationTableInterface,\n} from \"../Application/ExamCenter/ChooseExamCenter\";\nimport { sentExamInterface } from \"../Application/ExamCenter/ExamCenter\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport CandidateAnswersDetails from \"../../components/AnswersDetails/CandidateAnswersDetails\";\n\nexport const compareWithToday = (tooday: moment.Moment, date: string) => {\n  const myDate = DATE(date, \"MM/DD/YYYY\");\n  let todayConverted =\n    (tooday.get(\"month\") < 9 ? \"0\" : \"\") +\n    (tooday.get(\"month\") + 1).toString() +\n    \"/\" +\n    tooday.get(\"date\") +\n    \"/\" +\n    tooday.get(\"year\");\n  if (new Date(myDate).getTime() < new Date(todayConverted).getTime()) {\n    return true;\n  }\n  return false;\n};\n\nexport interface ExamDoneDetailsAnswers {\n  course: string;\n  course_name: string;\n  discription: string;\n  termes: string;\n  rules: {\n    right_click_enabled: boolean;\n    copy_enabled: boolean;\n    paste_enabled: boolean;\n    stop_candidate_when_comeback: boolean;\n    allow_to_leave_browser: boolean;\n  };\n  period: string;\n  exam_date: string;\n}\n\ninterface NotPreparedExam {\n  course: string;\n  course_name: string;\n  course_code: string;\n  position: string;\n}\ninterface changeLocProps {\n  changeLocation: () => void;\n}\ninterface CandidateExamsProps {\n  FC_GetProfileDetails: Function;\n  auth: Auth;\n  candidateExam: candidateExamStoreInterface;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  LoadCandidateApplications: (\n    user_id: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  setSelectedCandidateExam: (exam_id: string) => void;\n  setSelectedCourse: (course: course | null) => void;\n  setSelectedPosition: (position: PositionAPI) => void;\n  InitializeExamDetails: (\n    periodId: string,\n    courseId: string,\n    district_id: string,\n    center_id: string,\n    room_id: string,\n    position_id: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  loadExamsDone: (\n    periodId: string,\n    userId: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  AddUserApplication: (application: GetApplicationsAPI) => void;\n  periods: applicationPeriodsStoreInterface;\n  loadApplicationPeriods: (callback: (loading: boolean) => void) => void;\n}\n\nconst ChangeLocationComponent = (props: changeLocProps): JSX.Element => {\n  const [display, setDisplay] = useState<boolean>(true);\n  if (display === false) {\n    return <div></div>;\n  }\n  return (\n    <div className=\"absolute right-2 left-2 md:right-1/4 md:left-1/4 lg:left-1/2 lg:right-auto bg-yellow-50 shadow-xl rounded py-1 px-1 flex flex-row justify-between items-center gap-2 text-yellow-800 -mt-5 lg:-mt-8\">\n      <div className=\"flex flex-row gap-2 items-center justify-between w-full pl-1\">\n        <span className=\"font-bold\">You are advised to change location</span>\n        <div\n          onClick={props.changeLocation}\n          className=\"px-2 py-1 rounded bg-blue-100 text-blue-600 w-max cursor-pointer\"\n        >\n          Change\n        </div>\n      </div>\n      <div\n        onClick={() => setDisplay(false)}\n        className=\"bg-yellow-100 text-yellow-600 rounded-full flex items-center justify-center p-1 h-8 w-8 cursor-pointer\"\n      >\n        <MdClose className=\"text-4xl\" />\n      </div>\n    </div>\n  );\n};\n\ninterface candidatePendingExamsList {\n  preparedExam: UserExamsListInterface[];\n  notPreparedExam: NotPreparedExam[];\n}\ninterface CandidateExamsState {\n  loading: boolean;\n  loadingExamsDone: boolean;\n  candidateExams: candidatePendingExamsList | null;\n  activeExams: string[];\n  candidateApplications: GetApplicationsAPI[] | null;\n  selectedCourse: course | null;\n  centersModal: boolean;\n  maxExamModal: boolean;\n  selectedPosition: string;\n  successMessage: string;\n  selectedExam: ExamDoneDetailsAnswers | null;\n}\n\nexport class _CandidateExams extends Component<\n  CandidateExamsProps,\n  CandidateExamsState\n> {\n  constructor(props: CandidateExamsProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      loadingExamsDone: false,\n      candidateExams: null,\n      activeExams: [],\n      candidateApplications: null,\n      selectedCourse: null,\n      centersModal: false,\n      maxExamModal: false,\n      selectedPosition: \"\",\n      successMessage: \"\",\n      selectedExam: null,\n    };\n  }\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  };\n  setloadingExamsDone = (status: boolean) => {\n    this.setState({ loadingExamsDone: status });\n  };\n  loadCandidateExams = async (user: string, period: string) => {\n    this.setLoading(true);\n    setAxiosToken();\n    try {\n      const res = await axios.get<candidatePendingExamsList>(\n        `${API.QBank}/exam/user/${user}/${period}`\n      );\n      this.setState({ candidateExams: res.data });\n      // console.log(\"My exams list: \", res.data);\n    } catch (error: any) {\n      console.log(\"My exams error: \", { ...error });\n      alert(errorToText(error));\n    }\n    this.setLoading(false);\n  };\n  loadUserProfileDetails = () => {\n    this.setState({\n      loading: true,\n    });\n    this.props.FC_GetProfileDetails(\n      this.props.auth.user.user_id,\n      (status: boolean, msg: string) => {\n        if (status === true) {\n          this.setState({\n            loading: false,\n          });\n        } else {\n          this.setState({\n            loading: false,\n          });\n        }\n      }\n    );\n    this.setState({\n      loading: false,\n    });\n  };\n\n  InitializationFn = (application: GetApplicationsAPI) => {\n    if (this.props.candidateExam.user_exams_done.length === 0) {\n      this.props.loadExamsDone(\n        application.application_session.session_plan_id,\n        this.props.auth.user.user_id,\n        this.setloadingExamsDone\n      );\n    }\n    for (let course of application.position.courses) {\n      let testDone = this.props.candidateExam.user_exams_temp.find(\n        (itm) => itm.course === course.course_id\n      );\n      if (testDone === undefined) {\n        let center_id = application.exams.find(\n          (itm) => itm.course_id === course.course_id\n        );\n        if (center_id !== undefined) {\n          this.props.InitializeExamDetails(\n            application.application_session.session_plan_id,\n            course.course_id,\n            center_id.district_id,\n            center_id.center_id,\n            center_id.room_id,\n            application.position.position_id,\n            this.setLoading\n          );\n        }\n      }\n    }\n  };\n  loadUserApplications = async () => {\n    this.setLoading(true);\n    try {\n      const res = await axios.get<GetApplicationsAPI[]>(\n        `${API.APPLICATION}/application/${this.props.auth.user.user_id}`\n      );\n      if (res.status === 200) {\n        this.setState({ candidateApplications: res.data });\n        for (let application of res.data) {\n          this.InitializationFn(application);\n        }\n        if (\n          this.props.candidateApplications.candidate_applications === null ||\n          this.props.candidateApplications.candidate_applications.length === 0\n        ) {\n          for (let application of res.data) {\n            this.props.AddUserApplication(application);\n          }\n        }\n      }\n    } catch (error: any) {\n      console.log(\"Appl ex Err: \", { ...error });\n    }\n    this.setLoading(false);\n  };\n  findLocation = (position_id: string, course_id: string) => {\n    if (this.state.candidateApplications !== null) {\n      const test = this.state.candidateApplications.find(\n        (item) =>\n          item.position.position_id === position_id &&\n          item.exams.filter((itm) => itm.course_id === course_id)\n      );\n      if (test !== undefined) {\n        let course = test.exams.find((itm) => itm.course_id === course_id);\n        if (course !== undefined) {\n          return course;\n        }\n      }\n    }\n    return null;\n  };\n  updateLocation = async (\n    application_id: string,\n    exams: sentExamInterface[]\n  ) => {\n    this.setState({ loading: true });\n    for (let i in exams) {\n      try {\n        const res = await axios.post(\n          `${API.APPLICATION}/application/updatemissed`,\n          {\n            application_id: application_id,\n            exams: exams[i],\n          }\n        );\n        if (res.status === 200) {\n          this.setState({\n            selectedCourse: null,\n            centersModal: false,\n            maxExamModal: false,\n            selectedPosition: \"\",\n            successMessage: \"Location updated successfully!\",\n          });\n          this.loadUserApplications();\n        }\n      } catch (error: any) {\n        console.log(\"Update loc err: \", { ...error });\n      }\n    }\n  };\n  updateLocationFunction = (exams: sentExamInterface[]) => {\n    if (this.state.candidateApplications !== null) {\n      let application = this.state.candidateApplications.find(\n        (item) => item.position.position_id === this.state.selectedPosition\n      );\n      if (application !== undefined) {\n        this.updateLocation(application.application_id, exams);\n      } else {\n        alert(\"Invalid application\");\n      }\n    } else {\n      alert(\"Missing application\");\n    }\n  };\n  addLocation = (\n    course_id: string,\n    course_name: string,\n    course_code: string,\n    location: LocationTableInterface,\n    exam_id: string\n  ) => {\n    return this.updateLocationFunction([\n      {\n        course_id: course_id,\n        proctoring_type: \"Center\",\n        center_id: location.center_id,\n        district_id: location.district_id,\n      },\n    ]);\n  };\n  componentDidMount = () => {\n    this.props.loadApplicationPeriods(this.setLoading);\n\n    if (\n      this.props.auth.user.sex === \"\" ||\n      this.props.auth.user.sex.length === 0\n    ) {\n      this.loadUserProfileDetails();\n    }\n    this.loadUserApplications();\n    if (this.props.auth.application_session !== null) {\n      this.loadCandidateExams(\n        this.props.auth.user.user_id,\n        this.props.auth.application_session.session_plan_id\n      );\n    }\n    if (this.props.auth.application_session !== null) {\n      this.props.loadExamsDone(\n        this.props.auth.application_session.session_plan_id,\n        this.props.auth.user.user_id,\n        this.setloadingExamsDone\n      );\n    }\n  };\n\n  removeDuplicatesExams = (\n    exams: UserExamsListInterface[]\n  ): UserExamsListInterface[] => {\n    let temp: UserExamsListInterface[] = [];\n    if (this.state.candidateApplications !== null) {\n      for (let item of exams) {\n        if (\n          this.state.candidateApplications.find(\n            (test) => test.position.position_id === item.position\n          ) !== undefined\n        ) {\n          if (temp.find((itm) => itm._id === item._id) === undefined) {\n            temp = [...temp, item];\n          }\n        }\n      }\n    }\n    return temp;\n  };\n\n  removeDuplicatesNotPreparedExams = (\n    exams: NotPreparedExam[]\n  ): NotPreparedExam[] => {\n    let temp: NotPreparedExam[] = [];\n    if (this.state.candidateApplications !== null) {\n      for (let item of exams) {\n        if (\n          this.state.candidateApplications.find(\n            (test) => test.position.position_id === item.position\n          ) !== undefined\n        ) {\n          if (temp.find((itm) => itm.course === item.course) === undefined) {\n            temp = [...temp, item];\n          }\n        }\n      }\n    }\n    return temp;\n  };\n  setTimeOut = (exam_id: string) => {\n    let temps: string[] = this.state.activeExams;\n    this.setState({\n      activeExams: [...temps, exam_id],\n    });\n  };\n  selectApplication = (\n    applications: GetApplicationsAPI[] | null,\n    position_id: string,\n    course_id: string\n  ): GetApplicationsAPI | null => {\n    if (applications !== null) {\n      let temp = applications.find(\n        (item) => item.position.position_id === position_id\n      );\n      if (temp !== undefined) {\n        if (\n          temp.position.courses.find((itm) => itm.course_id === course_id) !==\n          undefined\n        ) {\n          return temp;\n        }\n      }\n    }\n    return null;\n  };\n  setMaxExamModal = (status: boolean) => {\n    this.setState({ maxExamModal: status });\n  };\n\n  changeLocation = (item: PositionAPICourse) => {\n    this.setState({ selectedCourse: item, centersModal: true });\n    this.setMaxExamModal(true);\n  };\n\n  closeModal = () => {\n    this.setState({ centersModal: false });\n    this.setMaxExamModal(false);\n  };\n\n  render() {\n    const today = moment().tz(TimeZone);\n    // console.log(\"TODAY: \", today.get(\"days\"));\n    if (!FC_Access(this.props.auth, UserAccessList.MY_APPLICATION).view) {\n      return <Redirect to=\"/\" />;\n    }\n    if (this.props.candidateExam.selected_exam_id !== null) {\n      return <Redirect to=\"/do-exam\" />;\n    }\n    return (\n      <Fragment>\n        {this.state.selectedCourse === null ? (\n          <div className=\"mt-2 -ml-2 mr-3 pb-5\">\n            <div className=\"rounded mt-2\">\n              <div className=\"flex flex-row items-center gap-3\">\n                <Link\n                  to=\"/apps-page\"\n                  title=\"Back to menus\"\n                  className=\"bg-white group hover:bg-blue-50 h-10 w-10 flex items-center justify-center rounded-full cursor-pointer\"\n                >\n                  <BiArrowBack className=\"text-3xl text-blue-600 group-hover:text-blue-800\" />\n                </Link>\n                <div className=\"flex flex-col\">\n                  <span className=\"font-extrabold text-3xl\">My exams</span>\n                  <span className=\"text-gray-600 text-sm\">\n                    List of exams that are assigned to me\n                  </span>\n                </div>\n              </div>\n            </div>\n            {this.state.successMessage !== \"\" && (\n              <div\n                title=\"Click to close the message\"\n                onClick={() => this.setState({ successMessage: \"\" })}\n                className=\"animate__animated animate__zoomIn px-3 py-2 bg-green-500 text-white my-2 rounded cursor-pointer\"\n              >\n                {this.state.successMessage}\n              </div>\n            )}\n            {this.state.loading === true ||\n            this.state.loadingExamsDone === true ||\n            this.state.candidateExams === null ||\n            this.state.candidateApplications == null ? (\n              <div className=\"px-4 pt-5 pb-1 bg-white mt-2 rounded\">\n                <Loading />\n              </div>\n            ) : this.removeDuplicatesExams(\n                this.state.candidateExams.preparedExam\n              ).length === 0 ? (\n              <div className=\"bg-gray-50 rounded px-4 py-5 text-center font-bold mt-2 text-2xl text-gray-400\">\n                No exams found\n              </div>\n            ) : (\n              this.removeDuplicatesExams(\n                this.state.candidateExams.preparedExam\n              ).map((item, i) => (\n                <div key={i + 1} className=\"my-2 rounded bg-white p-2 group\">\n                  <div className=\"flex flex-col md:flex-row items-center justify-between\">\n                    <div className=\"flex flex-col md:flex-row items-center gap-2 w-full\">\n                      <div>\n                        <BsFillFileEarmarkTextFill className=\"hidden md:block text-4xl text-gray-300 group-hover:text-blue-600\" />\n                      </div>\n                      <div className=\"flex flex-col w-full\">\n                        <span className=\"text-base text-gray-800 font-extrabold group-hover:text-blue-600\">\n                          {item.course_name}\n                        </span>\n                        <div className=\"flex flex-row items-center justify-start w-full gap-3 -mt-1\">\n                          <div className=\"text-sm text-gray-500 group-hover:text-blue-600\">\n                            Date: {DATE(item.exam_date, \"DD/MM/YYYY\")}\n                          </div>\n                          <div className=\"hidden md:block text-sm bg-gray-100 underline text-gray-500  font-bold rounded-full px-2\">\n                            Start time: {item.start_time}\n                          </div>\n                          <div className=\"hidden md:block text-sm bg-blue-100 text-blue-900  font-bold rounded-full px-2\">\n                            Status: {item.user_status}\n                          </div>\n                        </div>\n                        {this.findLocation(item.position, item.course) !==\n                          null && (\n                          <div className=\"flex flex-row items-center gap-2 mt-2\">\n                            <div>\n                              Exam center:{\" \"}\n                              <span className=\"text-sm bg-gray-100 text-blue-900 group-hover:text-blue-600 font-bold rounded-full px-2 w-max\">\n                                {\n                                  this.findLocation(item.position, item.course)\n                                    ?.center_name\n                                }\n                              </span>\n                            </div>\n                            <div className=\"w-max flex flex-col md:flex-row\">\n                              Room number:{\" \"}\n                              {this.findLocation(item.position, item.course)\n                                ?.room_number === 0 ? (\n                                <span className=\"text-sm bg-yellow-100 text-yellow-900 group-hover:text-yellow-800 font-bold rounded-full px-2 w-max flex items-center justify-center\">\n                                  Waiting room\n                                </span>\n                              ) : (\n                                <span className=\"text-sm bg-gray-100 text-blue-900 group-hover:text-blue-600 font-bold rounded-full px-2 w-max\">\n                                  {\n                                    this.findLocation(\n                                      item.position,\n                                      item.course\n                                    )?.room_number\n                                  }\n                                </span>\n                              )}\n                              {/* Change loc */}\n                              {this.findLocation(item.position, item.course)\n                                ?.room_number === 0 &&\n                                validateExamDate(\n                                  item.exam_date,\n                                  item.start_time,\n                                  item.end_time\n                                ) !== ExamTimeStatus.Expired && (\n                                  <ChangeLocationComponent\n                                    changeLocation={() => {\n                                      this.setState({\n                                        selectedCourse: {\n                                          course_name: item.course_name,\n                                          course_code: item.course_code,\n                                          description: item.course_name,\n                                          school_levels: [],\n                                          course_id: item.course,\n                                        },\n                                        selectedPosition: item.position,\n                                        centersModal: true,\n                                      });\n                                      this.setMaxExamModal(true);\n                                    }}\n                                  />\n                                )}\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                    <div className=\"lg:w-full flex flex-row items-center justify-end\">\n                      {this.state.activeExams.find(\n                        (itm) => itm === item._id\n                      ) !== undefined ||\n                      item.user_status === UserExamStatus.Editing ||\n                      item.user_status === UserExamStatus.Paused ? (\n                        validateExamDate(\n                          item.exam_date,\n                          item.start_time,\n                          item.end_time\n                        ) !== ExamTimeStatus.Expired ? (\n                          this.selectApplication(\n                            this.state.candidateApplications,\n                            item.position,\n                            item.course\n                          )?.application_status !==\n                          ApplicationStates.Shortlisted ? (\n                            <div className=\"text-yellow-800 font-extrabold text-base bg-yellow-100 rounded px-3 py-1 cursor-not-allowed\">\n                              Not shortlisted\n                            </div>\n                          ) : (\n                            <div\n                              onClick={() => {\n                                let application = this.selectApplication(\n                                  this.state.candidateApplications,\n                                  item.position,\n                                  item.course\n                                );\n                                if (application !== null) {\n                                  if (\n                                    application.application_status ===\n                                    ApplicationStates.Shortlisted\n                                  ) {\n                                    // Select exam\n                                    this.props.setSelectedPosition(\n                                      application.position\n                                    );\n                                    this.props.setSelectedCourse(\n                                      application.position.courses.find(\n                                        (itm) => itm.course_id === item.course\n                                      )!\n                                    );\n                                    this.props.setSelectedCandidateExam(\n                                      item._id\n                                    );\n                                  } else {\n                                    alert(\n                                      \"Corresponding application is not shortlisted!\"\n                                    );\n                                  }\n                                } else {\n                                  alert(\"Invalid exam!\");\n                                }\n                              }}\n                              className={`${\n                                item.user_status === UserExamStatus.Editing ||\n                                item.user_status === UserExamStatus.Paused\n                                  ? \"bg-green-600 group-hover:bg-green-800\"\n                                  : \"bg-blue-600 group-hover:bg-blue-800\"\n                              } btn  text-white cursor-pointer w-max`}\n                            >\n                              {item.user_status === UserExamStatus.Editing\n                                ? \"Back to Exam\"\n                                : item.user_status === UserExamStatus.Paused\n                                ? \"Paused, back to exam\"\n                                : \"Start Exam\"}\n                            </div>\n                          )\n                        ) : item.user_status === UserExamStatus.Editing ||\n                          item.user_status === UserExamStatus.Done ||\n                          item.user_status === UserExamStatus.Paused ||\n                          item.user_status === UserExamStatus.Removed ? (\n                          <div className=\"text-blue-700 flex flex-col items-end justify-center w-max\">\n                            <span>Marks</span>\n                            <span className=\"text-2xl font-extrabold -mt-2\">\n                              {item.user_marks.toFixed(2)}%\n                            </span>\n                            <div\n                              onClick={() =>\n                                this.setState({\n                                  selectedExam: {\n                                    course: item.course,\n                                    course_name: item.course_name,\n                                    discription: item.discription,\n                                    termes: item.termes,\n                                    rules: item.rules,\n                                    period: item.period,\n                                    exam_date: item.exam_date,\n                                  },\n                                })\n                              }\n                              className=\"btn bg-blue-100 text-blue-700 cursor-pointer\"\n                            >\n                              Check details\n                            </div>\n                          </div>\n                        ) : (\n                          <div className=\"bg-yellow-100 text-yellow-700 font-extrabold text-base px-3 py-1 rounded-md w-max\">\n                            Expired\n                          </div>\n                        )\n                      ) : item.found === false ? (\n                        <div\n                          title=\"Please wait for the exam time\"\n                          className=\"text-lg lg:text-xl font-extrabold bg-green-100 text-green-700 px-3 py-1 rounded cursor-not-allowed w-max\"\n                        >\n                          <CountDown\n                            start_time={new Date(today.toString()).toString()}\n                            duration_min={getMinutesFromTwoDates(\n                              new Date(today.toString()),\n                              new Date(\n                                DATE(item.exam_date, \"MM/DD/YYYY\") +\n                                  \" \" +\n                                  item.start_time\n                              )\n                            )}\n                            timeout={() => this.setTimeOut(item._id)}\n                            returnString={true}\n                            labels={true}\n                            days\n                          />\n                        </div>\n                      ) : (\n                        <div className=\"text-blue-700 flex flex-col items-end justify-center w-max\">\n                          <span>Marks</span>\n                          <span className=\"text-2xl font-extrabold -mt-2\">\n                            {item.user_marks.toFixed(2)}%\n                          </span>\n                          <div\n                            onClick={() =>\n                              this.setState({\n                                selectedExam: {\n                                  course: item.course,\n                                  course_name: item.course_name,\n                                  discription: item.discription,\n                                  termes: item.termes,\n                                  rules: item.rules,\n                                  period: item.period,\n                                  exam_date: item.exam_date,\n                                },\n                              })\n                            }\n                            className=\"btn bg-blue-100 text-blue-700 cursor-pointer\"\n                          >\n                            Check details\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              ))\n            )}\n            {/* Not prepared exams */}\n            {this.state.candidateExams !== null &&\n              this.state.loading !== true &&\n              this.removeDuplicatesNotPreparedExams(\n                this.state.candidateExams.notPreparedExam\n              ).length > 0 &&\n              this.removeDuplicatesNotPreparedExams(\n                this.state.candidateExams.notPreparedExam\n              ).map((item, i) => (\n                <div\n                  key={i + 1}\n                  className=\"my-2 rounded bg-white p-2 py-3 group\"\n                >\n                  <div className=\"flex flex-col md:flex-row items-center justify-between\">\n                    <div className=\"flex flex-col md:flex-row items-center gap-2 w-full\">\n                      <div className=\"\">\n                        <BsFillFileEarmarkTextFill className=\"hidden md:block text-4xl text-gray-300 group-hover:text-blue-600\" />\n                      </div>\n                      <div className=\"flex flex-col\">\n                        <span className=\"text-base text-gray-600 font-bold group-hover:text-blue-600\">\n                          {item.course_name}\n                        </span>\n                        <div className=\"flex flex-row items-center gap-3 -mt-1\">\n                          {this.findLocation(item.position, item.course) !==\n                            null && (\n                            <div className=\"flex flex-row items-center gap-2 mt-2\">\n                              <div className=\"flex flex-col md:flex-row md:items-center\">\n                                Exam center:{\" \"}\n                                <span className=\"text-sm bg-gray-100 text-blue-900 group-hover:text-blue-600 font-bold rounded-full px-2 w-max\">\n                                  {\n                                    this.findLocation(\n                                      item.position,\n                                      item.course\n                                    )?.center_name\n                                  }\n                                </span>\n                              </div>\n                              <div className=\"w-max flex flex-col md:flex-row md:items-center\">\n                                Room number:{\" \"}\n                                {this.findLocation(item.position, item.course)\n                                  ?.room_number === 0 ? (\n                                  <span className=\"text-sm bg-yellow-100 text-yellow-900 group-hover:text-yellow-800 font-bold rounded-full px-2 w-max flex items-center justify-center\">\n                                    Waiting room\n                                  </span>\n                                ) : (\n                                  <span className=\"text-sm bg-gray-100 text-blue-900 group-hover:text-blue-600 font-bold rounded-full px-2 w-max\">\n                                    {\n                                      this.findLocation(\n                                        item.position,\n                                        item.course\n                                      )?.room_number\n                                    }\n                                  </span>\n                                )}\n                                {/* Change loc */}\n                                {this.findLocation(item.position, item.course)\n                                  ?.room_number === 0 && (\n                                  <ChangeLocationComponent\n                                    changeLocation={() => {\n                                      this.setState({\n                                        selectedCourse: {\n                                          course_name: item.course_name,\n                                          course_code: item.course_code,\n                                          description: item.course_name,\n                                          school_levels: [],\n                                          course_id: item.course,\n                                        },\n                                        selectedPosition: item.position,\n                                        centersModal: true,\n                                      });\n                                      this.setMaxExamModal(true);\n                                    }}\n                                  />\n                                )}\n                              </div>\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"bg-gray-100 text-gray-600 font-extrabold text-base px-3 py-1 rounded-md\">\n                      Not prepared\n                    </div>\n                  </div>\n                </div>\n              ))}\n          </div>\n        ) : this.state.loading === true ? (\n          <div className=\"px-4 pt-5 pb-1 bg-white mt-2 rounded\">\n            <Loading />\n          </div>\n        ) : (\n          <div className=\"animate__animated animate__fadeInUp animate__faster mt-2 mr-1 -ml-3 rounded-t-md bg-white shadow-md pb-5\">\n            <div className=\"flex flex-row gap-4 items-center justify-between bg-blue-100 py-2 px-2 mb-2\">\n              <div className=\"flex flex-col w-full\">\n                <div className=\"flex flex-row gap-2 items-center justify-between w-full pl-2\">\n                  <span className=\"font-bold text-xl text-gray-800\">\n                    Change exam location\n                  </span>\n                  <div className=\"bg-white hover:text-yellow-700 hover:bg-white rounded-full p-1 h-10 w-10 border-2 border-white hover:border-yellow-600 flex items-center justify-center\">\n                    <MdClose\n                      className=\"cursor-pointer font-extrabold text-3xl\"\n                      onClick={() => {\n                        this.setState({\n                          centersModal: false,\n                          selectedCourse: null,\n                        });\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <ChooseExamCenter\n              positionCourses={this.state.selectedCourse}\n              addLocation={this.addLocation}\n              closeModal={this.closeModal}\n            />\n          </div>\n        )}\n        {this.state.selectedExam !== null && (\n          <Modal\n            title={\n              <div className=\"text-2xl font-extrabold text-blue-600 px-2\">\n                Exam result details\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() => this.setState({ selectedExam: null })}\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{ title: true }}\n          >\n            <CandidateAnswersDetails\n              exam_id={this.state.selectedExam}\n              showAnswers={false}\n            />\n          </Modal>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  candidateExam,\n  candidateApplications,\n  periods,\n}: StoreState): {\n  auth: Auth;\n  candidateExam: candidateExamStoreInterface;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n} => {\n  return {\n    auth: auth,\n    candidateExam: candidateExam,\n    candidateApplications: candidateApplications,\n    periods: periods,\n  };\n};\n\nexport const CandidateExams = connect(mapStateToProps, {\n  FC_GetProfileDetails,\n  LoadCandidateApplications,\n  setSelectedCandidateExam,\n  setSelectedCourse,\n  setSelectedPosition,\n  InitializeExamDetails,\n  loadExamsDone,\n  AddUserApplication,\n  loadApplicationPeriods,\n})(_CandidateExams);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport {\n  getAllClaims,\n  GetClaimingTypes,\n  setSelectedClaimType,\n} from \"../../../actions/claiming\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport { MainItem } from \"../../../components/Navigation/SideNavigation\";\nimport {\n  CandidateClaimInterface,\n  ClaimStatus,\n  PlansTypeKeys,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\n\nexport const filterClaimsByClaimType = (\n  claimList: CandidateClaimInterface[],\n  claimType: PlansTypeKeys | \"all\"\n): CandidateClaimInterface[] => {\n  if (claimType === \"all\") {\n    return claimList;\n  }\n\n  return claimList.filter((item) => item.type_key === claimType);\n};\n\ntype AdminFilterByTypeProps = {\n  loadingClaims: boolean;\n  FC_CountByType?: Function;\n\n  // REDUX PROPS =======================================\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  GetClaimingTypes: Function;\n  setSelectedClaimType: Function;\n  getAllClaims: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\nconst AdminFilterByType: React.FC<AdminFilterByTypeProps> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingClaimTypes, setLoadingClaimTypes] = useState<boolean>(true);\n\n  useEffect(() => {\n    if (props.claiming.claimTypes === null) {\n      props.GetClaimingTypes((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          setLoadingClaimTypes(false);\n          setLoading(false);\n        }\n      });\n    } else if (loadingClaimTypes) {\n      setLoadingClaimTypes(false);\n      setLoading(false);\n    }\n  }, [loadingClaimTypes, props]);\n\n  const countClaims = (\n    claiming: ClaimingReducerType,\n    thisType: PlansTypeKeys | \"all\"\n  ): number => {\n    let result: number = 0;\n\n    if (claiming.allClaims && thisType === \"all\") {\n      result = claiming.allClaims.filter(\n        (item) => item.last_claim_status === ClaimStatus.PENDING\n      ).length;\n    }\n    if (claiming.allClaims && thisType !== \"all\") {\n      result = claiming.allClaims.filter(\n        (item) =>\n          item.type_key === thisType &&\n          item.last_claim_status === ClaimStatus.PENDING\n      ).length;\n    }\n\n    return result;\n  };\n\n  return (\n    <React.Fragment>\n      <span className=\"mt-2 text-sm\">Filter by claim type</span>\n      {/* WHILE LOADING DATA ================================== */}\n      {(loading || props.loadingClaims) && (\n        <section className=\"space-y-2\">\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </section>\n      )}\n      {/* END WHILE LOADING DATA ================================== */}\n\n      {/* AFTER LOADING DATA ================================== */}\n      {!loading && !props.loadingClaims && props.claiming.claimTypes && (\n        <section>\n          {/* ALL ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(\"ALL\");\n              props.setSelectedClaimType(\"all\");\n            }}\n          >\n            <MainItem\n              title=\"All\"\n              active={props.claiming.selectedClaimType === \"all\"}\n              count={countClaims(props.claiming, \"all\")}\n            />\n          </div>\n          {/* APPLICATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(ClaimTypesInterface.DOCUMENT);\n              props.setSelectedClaimType(PlansTypeKeys.APPLICATION);\n            }}\n          >\n            <MainItem\n              title={\"Application\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.APPLICATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.APPLICATION)}\n            />\n          </div>\n          {/* DOCUMENT ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.DOCUMENT_VALIDATION);\n            }}\n          >\n            <MainItem\n              title={\"Document\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION\n              }\n              count={countClaims(\n                props.claiming,\n                PlansTypeKeys.DOCUMENT_VALIDATION\n              )}\n            />\n          </div>\n          {/* EXAMINATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.EXAMINATION);\n            }}\n          >\n            <MainItem\n              title={\"Exam\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.EXAMINATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.EXAMINATION)}\n            />\n          </div>\n          {false && (\n            <div\n              className=\"mt-2\"\n              onClick={() => {\n                props.setSelectedClaimType(PlansTypeKeys.PLACEMENT_TRANSFER);\n              }}\n            >\n              <MainItem\n                title={\"Placement\"}\n                active={\n                  props.claiming.selectedClaimType !== \"all\" &&\n                  props.claiming.selectedClaimType ===\n                    PlansTypeKeys.PLACEMENT_TRANSFER\n                }\n                count={countClaims(\n                  props.claiming,\n                  PlansTypeKeys.PLACEMENT_TRANSFER\n                )}\n              />\n            </div>\n          )}\n        </section>\n      )}\n      {/* END AFTER LOADING DATA ================================== */}\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  claiming,\n}: StoreState): { auth: Auth; claiming: ClaimingReducerType } => {\n  return { auth, claiming };\n};\n\nexport default connect(mapStateToProps, {\n  GetClaimingTypes,\n  setSelectedClaimType,\n  getAllClaims,\n  PushPopupAlert,\n})(AdminFilterByType);\n","import React from \"react\";\nimport { AiFillDashboard } from \"react-icons/ai\";\nimport { SessionPlanInterface } from \"../../interfaces\";\n\ntype ClaimHeaderTitleProps = {\n  headerTitle: string;\n  loading: boolean;\n  loadingSession: boolean;\n  periodChanged: boolean;\n  thisPeriod: SessionPlanInterface | null;\n  setThisPeriod: (state: SessionPlanInterface | null) => void;\n  setLoadingSession: (state: boolean) => void;\n  application_sessions: SessionPlanInterface[];\n  onPeriodChange: (period_id: string) => void;\n};\n\nconst selectPeriod = (\n  sessions: SessionPlanInterface[],\n  period_id: string,\n  setThisPeriod: (state: SessionPlanInterface | null) => void\n) => {\n  setThisPeriod(\n    sessions.filter((item) => item.session_plan_id === period_id)[0]\n  );\n};\n\nconst ClaimHeaderTitle: React.FC<ClaimHeaderTitleProps> = (props) => {\n  const isLoading = (): boolean => {\n    if (props.loading || props.loadingSession || props.periodChanged) {\n      return true;\n    }\n    return false;\n  };\n\n  return (\n    <div className=\"mt-3 rounded flex flex-col md:flex-row md:justify-between items-start\">\n      <div className=\"flex flex-row items-center gap-3 mb-2\">\n        <AiFillDashboard className=\"text-6xl text-blue-600 hidden md:block\" />\n        <div className=\"flex flex-col\">\n          <span className=\"text-blue-600 text-3xl font-bold\">\n            {props.headerTitle}\n          </span>\n        </div>\n      </div>\n\n      {/* FILTER SECTION PERIOD && EDUCATION */}\n      <section className=\"w-full md:w-auto my-2 md:my-0\">\n        <div>\n          <select\n            className={`bg-white text-gray-600 border border-gray-400 rounded p-2 focus:outline-none ${\n              isLoading() ? \"cursor-wait\" : \"cursor-default\"\n            }`}\n            value={props.thisPeriod ? props.thisPeriod.session_plan_id : \"\"}\n            disabled={isLoading()}\n            onChange={(e) => {\n              selectPeriod(\n                props.application_sessions,\n                e.target.value,\n                props.setThisPeriod\n              );\n              props.setLoadingSession(true);\n              props.onPeriodChange(e.target.value);\n            }}\n          >\n            {props.application_sessions.map((session, item) => (\n              <option\n                key={session.session_plan_id + item}\n                value={session.session_plan_id}\n              >\n                {session.session_plan_name}\n              </option>\n            ))}\n          </select>\n        </div>\n      </section>\n      {/* END FILTER SECTION PERIOD && EDUCATION */}\n    </div>\n  );\n};\n\nexport default ClaimHeaderTitle;\n","import React, { Component } from \"react\";\nimport { MdAdd, MdArrowBack, MdDelete, MdInfoOutline } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Auth, loadCourses, PushPopupAlert } from \"../../../actions\";\nimport {\n  DocumentClaimUser,\n  getClaimReasons,\n  getMyAnswers,\n  getMyClaims,\n  getMyPlacement,\n} from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport { SideNavigation } from \"../../../components/Navigation/SideNavigation\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimStatus,\n  PlansTypeKeys,\n  SessionPlanInterface,\n  course,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { filterClaimsByClaimType } from \"../Admin/AdminFilterByType\";\nimport ClaimApplView from \"../ClaimApplView\";\nimport ClaimDocView, { isClaimEvaluated } from \"../ClaimDocView\";\nimport ClaimExamView from \"../ClaimExamView\";\nimport ClaimHeaderTitle from \"../ClaimHeaderTitle\";\nimport ClaimPlacementView from \"../ClaimPlacementView\";\nimport ClaimForm, { ClaimGetDocTitle } from \"./ClaimForm\";\nimport FilterByType from \"./FilterByType\";\nimport { getCourseById, getCourseIdBySheetId } from \"./FormExamList\";\n\nexport enum ClaimTypesEnum {\n  application = \"application\",\n  document = \"document\",\n  exam = \"exam\",\n  marks_publication = \"marks publication\",\n  placement = \"placement\",\n}\n\nexport const getDocumentById = (\n  candidateDocuments: DocumentClaimUser[],\n  document_id: string\n): DocumentClaimUser | null => {\n  let result: DocumentClaimUser | undefined = candidateDocuments.find(\n    (item) => item.doc_id === document_id\n  );\n  return result ? result : null;\n};\n\nexport const whichClaimType = (\n  thisClaim: CandidateClaimInterface\n): ClaimTypesEnum | undefined => {\n  if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n    return ClaimTypesEnum.application;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n    return ClaimTypesEnum.document;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.EXAMINATION) {\n    return ClaimTypesEnum.exam;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.MARKS_PUBLICATION) {\n    return ClaimTypesEnum.marks_publication;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.PLACEMENT_TRANSFER) {\n    return ClaimTypesEnum.placement;\n  }\n};\n\nexport const whichClaimStatus = (\n  thisClaim: CandidateClaimInterface\n): {\n  classes: string;\n  status: string;\n} => {\n  let classes: string, status: string;\n  switch (thisClaim.last_claim_status) {\n    case ClaimStatus.COMPLETED:\n      classes = \"text-blue-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.COMPLETED.toLocaleLowerCase());\n      break;\n    case ClaimStatus.EVALUATED:\n      classes = \"text-green-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.EVALUATED.toLocaleLowerCase());\n      break;\n\n    case ClaimStatus.DELETED:\n      classes = \"text-red-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.DELETED.toLocaleLowerCase());\n      break;\n\n    default:\n      classes = \"text-yellow-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.PENDING.toLocaleLowerCase());\n      break;\n  }\n\n  return { classes, status };\n};\n\nexport const getClaimById = (\n  claimList: CandidateClaimInterface[],\n  claim_id: string\n): CandidateClaimInterface | null => {\n  console.log(\"====================================\");\n  console.log({ claimList, claim_id });\n  console.log(\"====================================\");\n  let result: CandidateClaimInterface | undefined = claimList.find(\n    (item) => item._id === claim_id\n  );\n  return result ? result : null;\n};\n\nexport const getApplicationById = (\n  candidateApplications: claimApplicationsInterface[],\n  application_id: string\n): claimApplicationsInterface | null => {\n  let result: claimApplicationsInterface | undefined =\n    candidateApplications.find(\n      (item) => item.application_id === application_id\n    );\n  return result ? result : null;\n};\n\nexport const displayDocClaimTitle = (\n  documentCategories: DocumentReducerInterface,\n  candidateDocuments: DocumentClaimUser[],\n  thisClaim: CandidateClaimInterface\n): string => {\n  let result: string = \"\";\n\n  // CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n  if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n    let thisDoc = getDocumentById(candidateDocuments, thisClaim.claiming_on_id);\n    result = thisDoc\n      ? ClaimGetDocTitle(documentCategories, thisDoc).main\n      : \"Document not found\";\n  }\n  // END CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n  return result;\n};\n\nexport const displayClaimTitle = (\n  claiming: ClaimingReducerType,\n  documentReducer: DocumentReducerInterface,\n  allCourse: course[] | null,\n  thisClaim: CandidateClaimInterface\n): string => {\n  let result: string = thisClaim.claiming_on_id;\n\n  if (\n    thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION &&\n    claiming.candidateDocuments\n  ) {\n    result = displayDocClaimTitle(\n      documentReducer,\n      claiming.candidateDocuments,\n      thisClaim\n    );\n  }\n  if (\n    thisClaim.type_key === PlansTypeKeys.APPLICATION &&\n    claiming.candidateApplications\n  ) {\n    let thisApplication = getApplicationById(\n      claiming.candidateApplications,\n      thisClaim.claiming_on_id\n    );\n    if (thisApplication) {\n      result = thisApplication.position.position_title;\n    } else {\n      result = \"Application not found\";\n    }\n  }\n\n  if (\n    thisClaim.type_key === PlansTypeKeys.EXAMINATION &&\n    allCourse &&\n    claiming.myAnswer\n  ) {\n    let thisAnswer = getCourseIdBySheetId(\n      claiming.myAnswer,\n      thisClaim.claiming_on_id\n    );\n    if (thisAnswer && getCourseById(allCourse, thisAnswer.course)) {\n      result = getCourseById(allCourse, thisAnswer.course)!.course_name;\n    } else {\n      result = \"Exam not found\";\n    }\n  }\n\n  if (thisClaim.type_key === PlansTypeKeys.PLACEMENT_TRANSFER) {\n    result = claiming.myPlacement\n      ? \"Placed on \" + claiming.myPlacement.placed.school.school_name\n      : \"Placement not found\";\n  }\n\n  return result;\n};\n\n// -------------------------------------------------------------------------\n\ntype AppProps = {\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  application_sessions: SessionPlanInterface[] | null;\n  courses: course[] | null;\n  documentReducer: DocumentReducerInterface;\n  getMyPlacement: Function;\n  getMyClaims: Function;\n  loadCourses: Function;\n  getMyAnswers: Function;\n  getClaimReasons: Function;\n  GetAllSessionPlans: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype AppState = {\n  loading: boolean;\n  loadingSession: boolean;\n  thisPeriod: SessionPlanInterface | null;\n  periodChanged: boolean;\n  viewClaim: boolean;\n  claimId: string | null;\n  claimForm: boolean;\n\n  // FOR FORM ================\n  viewImage: boolean;\n  loadingRequest: boolean;\n  reClaiming: boolean;\n  reClaimingMsg: string;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n};\n\nclass Index extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingSession: true,\n      thisPeriod: null,\n      periodChanged: false,\n      viewClaim: false,\n      claimId: null,\n      claimForm: false,\n\n      // FOR FORM ================\n      viewImage: false,\n      loadingRequest: false,\n      reClaiming: false,\n      reClaimingMsg: \"\",\n      formError: null,\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingSession = (value: boolean) => {\n    this.setState({ loadingSession: value });\n  };\n\n  setViewClaim = (value: boolean) => {\n    this.setState({ viewClaim: value });\n  };\n\n  setPeriodChanged = (value: boolean) => {\n    this.setState({ periodChanged: value });\n  };\n\n  setClaimForm = (value: boolean) => {\n    this.setState({ claimForm: value });\n  };\n\n  setViewImage = (value: boolean) => {\n    this.setState({ viewImage: value });\n  };\n\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n\n  setReClaiming = (value: boolean) => {\n    this.setState({ reClaiming: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n\n  setReClaimingMsg = (value: string) => {\n    this.setState({ reClaimingMsg: value });\n  };\n\n  setClaimId = (value: string | null) => {\n    this.setState({ claimId: value });\n  };\n\n  setThisPeriod = (value: SessionPlanInterface | null) => {\n    this.setState({ thisPeriod: value });\n  };\n\n  loadClaims = (thisPeriod: SessionPlanInterface) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (this.props.claiming.myClaims === null && thisPeriod !== null) {\n      this.props.getMyClaims(\n        this.props.auth.user.user_id,\n        thisPeriod.session_plan_id,\n        (status: boolean, msg: string) => {\n          !status && this.setLoading(status);\n          if (status === false && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    } else if (thisPeriod && this.state.loading) {\n      this.setLoading(false);\n    }\n  };\n\n  setSession = (sessions: SessionPlanInterface[]) => {\n    // SETTING ACTIVE SESSION ==========================\n    if (this.state.thisPeriod === null && sessions.length > 0) {\n      let thisSession = sessions.find((item) => item.is_active === true);\n      this.setThisPeriod(thisSession ? thisSession : sessions[0]);\n      this.loadClaims(thisSession ? thisSession : sessions[0]);\n      this.loadExamAnswers(\n        thisSession ? thisSession : sessions[0],\n        this.props.auth.user.user_id\n      );\n    }\n  };\n\n  loadExamAnswers = (\n    activeSessionPlan: SessionPlanInterface,\n    user_id: string\n  ) => {\n    this.props.getMyAnswers(\n      activeSessionPlan.session_plan_id,\n      user_id,\n      (status: boolean, msg: string, data: SessionPlanInterface | \"none\") => {\n        this.setLoading(status);\n        if (!status && msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n        if (data) {\n          console.log(\"====================================\");\n          console.log({ loadExamAnswers: data });\n          console.log(\"====================================\");\n        }\n      }\n    );\n    if (this.props.claiming.claimReasons === null) {\n      this.props.getClaimReasons((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (!status) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n  };\n\n  componentDidMount = () => {\n    if (\n      this.props.courses === null ||\n      (this.props.courses.length === 0 && this.state.loading)\n    ) {\n      this.props.loadCourses(this.setLoading);\n      this.setLoading(false);\n    } else {\n      this.setLoading(false);\n    }\n\n    // LOADING APPLICATION SESSION ====================================\n    if (this.props.application_sessions === null) {\n      this.props.GetAllSessionPlans(\n        (status: boolean, msg: string, data?: SessionPlanInterface[]) => {\n          if (!status) {\n            this.setLoadingSession(false);\n            if (msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data && data.length > 0) {\n              // SETTING ACTIVE SESSION ==========================\n              if (this.state.thisPeriod === null) {\n                this.setSession(data);\n              }\n            }\n          }\n        }\n      );\n    } else {\n      this.setSession(this.props.application_sessions);\n      this.setLoadingSession(false);\n    }\n\n    if (!this.props.documentReducer.documentCategory) {\n      this.props.getDocumentCategory();\n      this.setLoading(false);\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n    if (!this.props.documentReducer.documentSubCategory && this.state.loading) {\n      this.props.getDocumentSubCategory();\n      this.setLoading(false);\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n\n    if (!this.props.documentReducer.documentFields && this.state.loading) {\n      this.props.getDocumentFields();\n      this.setLoading(false);\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n\n    if (this.props.claiming.myPlacement === null) {\n      this.props.getMyPlacement(\n        this.props.auth.user.user_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          }\n        }\n      );\n    }\n  };\n\n  isDeleteAllowed = (thisCLaim: CandidateClaimInterface): boolean => {\n    if (!isClaimEvaluated(thisCLaim, 1)) {\n      return true;\n    }\n    return false;\n  };\n\n  onPeriodChange = (period_id: string) => {\n    this.setPeriodChanged(true);\n    this.props.getMyClaims(\n      this.props.auth.user.user_id,\n      period_id,\n      (status: boolean, msg: string) => {\n        this.setLoadingRequest(status);\n        !status && this.setPeriodChanged(false);\n        if (status === false && msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      }\n    );\n  };\n\n  render() {\n    if (this.props.application_sessions === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    if (this.props.application_sessions.length === 0) {\n      return (\n        <div className=\"bg-yellow-100 rounded flex flex-col items-center justify-center p-6 my-8 text-yellow-900 border border-yellow-900\">\n          <MdInfoOutline className=\"text-6xl md:text-9xl\" />\n          <div className=\"text-center flex flex-col\">\n            <span className=\"text-2xl md:text-4xl font-extrabold\">\n              No active session\n            </span>\n            <span className=\"text-lg\">\n              Please Wait for the system to publish the sessions or contact the\n              administrator\n            </span>\n          </div>\n        </div>\n      );\n    }\n\n    if (this.props.claiming.myClaims === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {/* SIDE NAVIGATION */}\n        {!this.state.viewClaim && (\n          <SideNavigation>\n            <button\n              className=\"btn mb-3 border-2 border-blue-500 hover:bg-blue-500 hover:text-white flex items-center flex-1 font-bold w-full focus:outline-none\"\n              onClick={() => {\n                this.setClaimForm(true);\n                // alert(\"clicked\");\n              }}\n              disabled={\n                this.state.viewClaim ||\n                this.state.loading ||\n                this.state.loadingRequest\n              }\n            >\n              <MdAdd className=\"inline-block mr-1 text-xl font-bold\" />\n              <span>Claiming</span>\n            </button>\n\n            {/* FILTER SECTION */}\n            <FilterByType loadingClaims={this.state.loadingRequest} />\n            {/* END FILTER SECTION */}\n          </SideNavigation>\n        )}\n        {/* END SIDE NAVIGATION */}\n\n        {/* ------------------------------------------------------------------- */}\n\n        {/* CLAIM TITLE ===================================== */}\n        {!this.state.viewClaim && (\n          <ClaimHeaderTitle\n            headerTitle={`${\n              this.props.claiming.selectedClaimType === \"all\"\n                ? \"All\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION\n                ? \"Documents\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.APPLICATION\n                ? \"Applications\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.EXAMINATION\n                ? \"Exam\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.MARKS_PUBLICATION\n                ? \"Marks publication\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.PLACEMENT_TRANSFER\n                ? \"Placements\"\n                : \"\"\n            } Claiming`}\n            loading={this.state.loading}\n            loadingSession={this.state.loadingSession}\n            thisPeriod={this.state.thisPeriod}\n            setThisPeriod={this.setThisPeriod}\n            setLoadingSession={this.setLoadingSession}\n            application_sessions={this.props.application_sessions}\n            onPeriodChange={this.onPeriodChange}\n            periodChanged={this.state.periodChanged}\n          />\n        )}\n        {/* END CLAIM TITLE ===================================== */}\n\n        {/* ----------------------------------------------------------------------- */}\n\n        {!this.state.viewClaim && (\n          <section className=\"bg-white w-full p-1\">\n            <table className=\"w-full shadow\" id=\"report_content\">\n              <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                <tr>\n                  <td className=\"px-2 py-2\">#</td>\n                  <td className=\"px-2 py-2\">Claim title</td>\n                  {this.props.claiming.selectedClaimType === \"all\" && (\n                    <td className=\"px-2 py-2\">Claim type</td>\n                  )}\n                  <td className=\"px-2 py-2\">Claim status</td>\n                  <td className=\"px-2 py-2\"></td>\n                </tr>\n              </thead>\n              <tbody>\n                {filterClaimsByClaimType(\n                  this.props.claiming.myClaims,\n                  this.props.claiming.selectedClaimType\n                ).length <= 0 ? (\n                  <tr\n                    className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                    key=\"key3201\"\n                  >\n                    <td className=\"px-3 py-1\" colSpan={4}>\n                      <NoResult\n                        theme={NoResultThemes.Light}\n                        value={\"No claim found!\"}\n                      />\n                    </td>\n                  </tr>\n                ) : (\n                  filterClaimsByClaimType(\n                    this.props.claiming.myClaims,\n                    this.props.claiming.selectedClaimType\n                  ).map((claim, index) => (\n                    <tr\n                      className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                      key={index + claim._id}\n                      onClick={() => {\n                        this.setViewClaim(true);\n                        this.setClaimId(claim._id);\n                      }}\n                    >\n                      <td className=\"px-3 py-1 whitespace-nowrap\">\n                        {index + 1}\n                      </td>\n                      <td className=\"px-3 py-1 whitespace-nowrap\">\n                        {claim.title}\n                      </td>\n                      {this.props.claiming.selectedClaimType === \"all\" && (\n                        <td className=\"px-3 py-1 whitespace-nowrap\">\n                          {whichClaimType(claim)\n                            ? capitalizeFirstLetter(whichClaimType(claim)!)\n                            : \"-\"}\n                        </td>\n                      )}\n                      <td className=\"px-3 py-1 whitespace-nowrap\">\n                        <span\n                          className={`inline-block rounded-full duration-300 text-xs font-semibold px-3 py-1 ${\n                            whichClaimStatus(claim).classes\n                          }`}\n                        >\n                          {whichClaimStatus(claim).status}\n                        </span>\n                      </td>\n                      <td className=\"px-3 py-1 text-center whitespace-nowrap\">\n                        <button className=\"btn bg-blue-500 text-white group-hover:bg-blue-600\">\n                          View\n                        </button>\n                      </td>\n                    </tr>\n                  ))\n                )}\n              </tbody>\n            </table>\n          </section>\n        )}\n\n        {/* ----------------------------------------------------------------------- */}\n\n        {this.state.viewClaim &&\n          this.props.claiming.myClaims &&\n          this.state.claimId &&\n          getClaimById(this.props.claiming.myClaims, this.state.claimId) && (\n            <section className=\"bg-white w-full p-1 my-4\">\n              {/* VIEW CLAIM HEADER =============================== */}\n              <section className=\"flex items-center gap-2 py-2 border-b\">\n                <button\n                  className={`ml-3 bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n                    this.state.loadingRequest\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } animate__animated animate__fadeIn`}\n                  disabled={this.state.loadingRequest}\n                  onClick={() => {\n                    this.setViewClaim(false);\n                    this.setViewImage(false);\n                    this.setLoadingRequest(false);\n                    this.setFormError(null);\n                    this.setReClaiming(false);\n                    this.setReClaimingMsg(\"\");\n                  }}\n                >\n                  <MdArrowBack className=\"w-7 h-7\" />\n                </button>\n                {this.isDeleteAllowed(\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!\n                ) && (\n                  <button\n                    className={`bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n                      this.state.loadingRequest\n                        ? \"cursor-not-allowed\"\n                        : \"cursor-pointer\"\n                    } animate__animated animate__fadeIn hidden`}\n                    disabled={this.state.loadingRequest}\n                    // onClick={() => {\n                    //   this.handleDelete();\n                    // }}\n                  >\n                    <MdDelete className=\"w-7 h-7\" />\n                  </button>\n                )}\n              </section>\n              {/* END VIEW CLAIM HEADER =============================== */}\n              <section className=\"my-2\">\n                {/* VIEWING CLAIM OF A DOCUMENT ===================== */}\n                {getClaimById(this.props.claiming.myClaims, this.state.claimId)!\n                  .type_key === PlansTypeKeys.DOCUMENT_VALIDATION &&\n                this.props.claiming.candidateDocuments &&\n                getDocumentById(\n                  this.props.claiming.candidateDocuments,\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.claiming_on_id\n                ) ? (\n                  <ClaimDocView\n                    thisDoc={\n                      getDocumentById(\n                        this.props.claiming.candidateDocuments,\n                        getClaimById(\n                          this.props.claiming.myClaims,\n                          this.state.claimId\n                        )!.claiming_on_id\n                      )!\n                    }\n                    documentCategories={this.props.documentReducer}\n                    thisClaim={\n                      getClaimById(\n                        this.props.claiming.myClaims,\n                        this.state.claimId\n                      )!\n                    }\n                    viewImage={this.state.viewImage}\n                    setViewImage={this.setViewImage}\n                    loadingRequest={this.state.loadingRequest}\n                    setLoadingRequest={this.setLoadingRequest}\n                    reClaiming={this.state.reClaiming}\n                    setReClaiming={this.setReClaiming}\n                    reClaimingMsg={this.state.reClaimingMsg}\n                    setReClaimingMsg={this.setReClaimingMsg}\n                    formError={this.state.formError}\n                    setFormError={this.setFormError}\n                    claimReasons={this.props.claiming.claimReasons}\n                  />\n                ) : (\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.type_key === PlansTypeKeys.DOCUMENT_VALIDATION && (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"Document not found\"}\n                    />\n                  )\n                )}\n                {/* END VIEWING CLAIM OF A DOCUMENT ===================== */}\n\n                {/* ############################################################### */}\n\n                {/* VIEWING CLAIM OF AN APPLICATION ===================== */}\n                {getClaimById(this.props.claiming.myClaims, this.state.claimId)!\n                  .type_key === PlansTypeKeys.APPLICATION &&\n                this.props.claiming.candidateApplications &&\n                getApplicationById(\n                  this.props.claiming.candidateApplications,\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.claiming_on_id\n                ) ? (\n                  <ClaimApplView\n                    thisApplication={\n                      getApplicationById(\n                        this.props.claiming.candidateApplications,\n                        getClaimById(\n                          this.props.claiming.myClaims,\n                          this.state.claimId\n                        )!.claiming_on_id\n                      )!\n                    }\n                    documentCategories={this.props.documentReducer}\n                    thisClaim={\n                      getClaimById(\n                        this.props.claiming.myClaims,\n                        this.state.claimId\n                      )!\n                    }\n                    viewPosition={this.state.viewImage}\n                    setViewPosition={this.setViewImage}\n                    loadingRequest={this.state.loadingRequest}\n                    setLoadingRequest={this.setLoadingRequest}\n                    reClaiming={this.state.reClaiming}\n                    setReClaiming={this.setReClaiming}\n                    reClaimingMsg={this.state.reClaimingMsg}\n                    setReClaimingMsg={this.setReClaimingMsg}\n                    formError={this.state.formError}\n                    setFormError={this.setFormError}\n                    claimReasons={this.props.claiming.claimReasons}\n                  />\n                ) : (\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.type_key === PlansTypeKeys.APPLICATION && (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"Application not found\"}\n                    />\n                  )\n                )}\n                {/* END VIEWING CLAIM OF AN APPLICATION ===================== */}\n\n                {/* VIEWING CLAIM OF AN EXAM ===================== */}\n                {getClaimById(this.props.claiming.myClaims, this.state.claimId)!\n                  .type_key === PlansTypeKeys.EXAMINATION &&\n                this.props.claiming.myAnswer &&\n                this.props.courses &&\n                getCourseIdBySheetId(\n                  this.props.claiming.myAnswer,\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.claiming_on_id\n                ) &&\n                getCourseById(\n                  this.props.courses,\n                  getCourseIdBySheetId(\n                    this.props.claiming.myAnswer,\n                    getClaimById(\n                      this.props.claiming.myClaims,\n                      this.state.claimId\n                    )!.claiming_on_id\n                  )!.course\n                ) ? (\n                  <ClaimExamView\n                    thisExam={\n                      getCourseById(\n                        this.props.courses,\n                        getCourseIdBySheetId(\n                          this.props.claiming.myAnswer,\n                          getClaimById(\n                            this.props.claiming.myClaims,\n                            this.state.claimId\n                          )!.claiming_on_id\n                        )!.course\n                      )!\n                    }\n                    thisClaim={\n                      getClaimById(\n                        this.props.claiming.myClaims,\n                        this.state.claimId\n                      )!\n                    }\n                    viewPosition={this.state.viewImage}\n                    setViewPosition={this.setViewImage}\n                    loadingRequest={this.state.loadingRequest}\n                    setLoadingRequest={this.setLoadingRequest}\n                    reClaiming={this.state.reClaiming}\n                    setReClaiming={this.setReClaiming}\n                    reClaimingMsg={this.state.reClaimingMsg}\n                    setReClaimingMsg={this.setReClaimingMsg}\n                    formError={this.state.formError}\n                    setFormError={this.setFormError}\n                    thisExamSheet={\n                      getCourseIdBySheetId(\n                        this.props.claiming.myAnswer,\n                        getClaimById(\n                          this.props.claiming.myClaims,\n                          this.state.claimId\n                        )!.claiming_on_id\n                      )!\n                    }\n                    claimReasons={this.props.claiming.claimReasons}\n                  />\n                ) : (\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.type_key === PlansTypeKeys.EXAMINATION && (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"Exam not found\"}\n                    />\n                  )\n                )}\n                {/* END VIEWING CLAIM OF AN EXAM ===================== */}\n\n                {/* ----------------------------------------------------------- */}\n                {/* VIEWING CLAIM OF A DOCUMENT ===================== */}\n                {getClaimById(this.props.claiming.myClaims, this.state.claimId)!\n                  .type_key === PlansTypeKeys.PLACEMENT_TRANSFER &&\n                this.props.claiming.myPlacement ? (\n                  <ClaimPlacementView\n                    thisClaim={\n                      getClaimById(\n                        this.props.claiming.myClaims,\n                        this.state.claimId\n                      )!\n                    }\n                    loadingRequest={this.state.loadingRequest}\n                    setLoadingRequest={this.setLoadingRequest}\n                    reClaiming={this.state.reClaiming}\n                    setReClaiming={this.setReClaiming}\n                    reClaimingMsg={this.state.reClaimingMsg}\n                    setReClaimingMsg={this.setReClaimingMsg}\n                    formError={this.state.formError}\n                    setFormError={this.setFormError}\n                    myPlacement={this.props.claiming.myPlacement}\n                  />\n                ) : (\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.type_key === PlansTypeKeys.PLACEMENT_TRANSFER && (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"Placement not found\"}\n                    />\n                  )\n                )}\n                {/* END VIEWING CLAIM OF A DOCUMENT ===================== */}\n              </section>\n            </section>\n          )}\n        {/* end view claim */}\n\n        {/* ----------------------------------------------------------------------- */}\n        {/* CLAIM FORM  ################ */}\n        {this.state.claimForm && (\n          <ClaimForm\n            formState={this.state.claimForm}\n            setFormState={this.setClaimForm}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  sessionPlan,\n  claiming,\n  document,\n  course,\n}: StoreState): {\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  application_sessions: SessionPlanInterface[] | null;\n  documentReducer: DocumentReducerInterface;\n  courses: course[] | null;\n} => {\n  return {\n    auth: auth,\n    claiming,\n    application_sessions: sessionPlan.allSessionPlans,\n    documentReducer: document,\n    courses: course.courses,\n  };\n};\n\nexport const CandidateClaim = connect(mapStateToProps, {\n  getMyClaims,\n  GetAllSessionPlans,\n  getClaimReasons,\n  loadCourses,\n  getMyPlacement,\n  getMyAnswers,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  PushPopupAlert,\n})(Index);\n","import axios from \"axios\";\nimport React from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdInfoOutline, MdTurnedIn } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { createReClaim } from \"../../actions/claiming\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimDecisionStatus,\n  claimReasonInterface,\n  ClaimStatus,\n} from \"../../interfaces\";\nimport { ApplicationStates } from \"../../interfaces/application\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { DocumentReducerInterface } from \"../../reducers/document\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { DATE, errorToText, showDate } from \"../../utils/functions\";\nimport ViewRequirements from \"../Positions/ViewRequirements\";\nimport { FC_ApplicationPositionDistinctCategory } from \"./Candidate/ApplicationFormView\";\nimport { isClaimEvaluated } from \"./ClaimDocView\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\ntype ClaimDocViewProps = {\n  thisApplication: claimApplicationsInterface;\n  documentCategories: DocumentReducerInterface;\n  claimReasons: claimReasonInterface[] | null;\n  thisClaim: CandidateClaimInterface;\n  viewPosition: boolean;\n  setViewPosition: (value: boolean) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  reClaiming: boolean;\n  setReClaiming: (value: boolean) => void;\n  reClaimingMsg: string;\n  setReClaimingMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX DATA =====================\n  createReClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst ClaimDocView: React.FC<ClaimDocViewProps> = (props) => {\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim is required\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim._id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              {props.thisApplication.position.position_title}\n            </span>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewPosition(!props.viewPosition)}\n            >\n              {props.viewPosition ? \"Hide\" : \"More\"}\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisClaim.previous.status === ApplicationStates.Rejected\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } rounded px-3 py-1`}\n            >\n              {capitalizeFirstLetter(props.thisClaim.previous.status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {props.thisClaim.previous.evaluater.name}\n            </span>\n          </div>\n          {false && (\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Session:</span>\n              <span className=\"font-bold text-gray-900 py-1\">\n                {\n                  props.thisApplication.application_session\n                    .application_session_name\n                }\n              </span>\n            </div>\n          )}\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisApplication.createdAt)}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisClaim.previous.reason}\n            </span>\n          </div>\n\n          {/* DISPLAY POSITION ==================================================== */}\n          {props.viewPosition && (\n            <div className=\"w-full my-1 animate__animated animate__fadeIn rounded\">\n              <div className=\"bg-white w-full\">\n                <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                  Position Details\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Desc:</span>\n                  <span className=\"font-semibold\">\n                    {props.thisApplication.position.description}\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>School level:</span>\n                  <span className=\"font-semibold\">\n                    {\n                      props.thisApplication.position.school_level_id\n                        .school_level_name\n                    }\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Institute:</span>\n                  <span className=\"font-semibold\">\n                    {\n                      props.thisApplication.position.education_institute_id\n                        .education_category_title\n                    }\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Courses:</span>\n                  <span className=\"flex items-center gap-2\">\n                    {props.thisApplication.position.courses.map(\n                      (item, index) => (\n                        <div\n                          key={index + item.course_id}\n                          className=\"flex items-center gap-1\"\n                        >\n                          <span className=\"font-semibold\">\n                            {item.course_name}\n                          </span>\n                          <span className=\"text-gray-600\">\n                            ({item.course_code})\n                          </span>\n                          {index !==\n                            props.thisApplication.position.courses.length - 1 &&\n                            \",\"}\n                        </div>\n                      )\n                    )}\n                  </span>\n                </div>\n\n                <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                  Position Requirements\n                </div>\n                {props.thisApplication.position.requirements.length > 0 ? (\n                  FC_ApplicationPositionDistinctCategory(\n                    props.thisApplication.position,\n                    props.documentCategories\n                  ).DistinctCategoriesTemp.map((item, index) => (\n                    <div\n                      className=\"bg-gray-100props.thisApplication.position rounded p-2\"\n                      key={index + item.category_id}\n                    >\n                      <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                        <MdTurnedIn />\n                        <span>{item.category_title}</span>\n                      </div>\n                      <div className=\"border bg-white mt-1\">\n                        <ViewRequirements\n                          requirements={FC_ApplicationPositionDistinctCategory(\n                            props.thisApplication.position,\n                            props.documentCategories\n                          ).PositionsTemp.filter(\n                            (req) => req.category_id === item.category_id\n                          )}\n                        />\n                      </div>\n                    </div>\n                  ))\n                ) : (\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"No requirements\"}\n                  ></NoResult>\n                )}\n              </div>\n            </div>\n          )}\n          {/* END DISPLAY POSITION ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt)}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-center justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <button\n                className=\"btn btn-blue\"\n                onClick={() => props.setReClaiming(true)}\n                disabled={props.loadingRequest}\n              >\n                Reclaim\n              </button>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your reclaim...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nexport default connect(null, {\n  createReClaim,\n  PushPopupAlert,\n})(ClaimDocView);\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdInfoOutline } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport {\n  loadQuestionTypes,\n  PushPopupAlert,\n  questionTypesStoreInterface,\n} from \"../../actions\";\nimport { createReClaim } from \"../../actions/claiming\";\nimport CandidateAnswersDetails from \"../../components/AnswersDetails/CandidateAnswersDetails\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimExamResultsDetails,\n  claimReasonInterface,\n  ClaimStatus,\n  course,\n} from \"../../interfaces\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { errorToText, showDate } from \"../../utils/functions\";\nimport { claimShowAnswer } from \"./Candidate/ExaminationFormView\";\nimport { isClaimEvaluated } from \"./ClaimDocView\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\ntype ClaimDocViewProps = {\n  thisExam: course;\n  thisExamSheet: ClaimExamResultsDetails;\n  thisClaim: CandidateClaimInterface;\n  viewPosition: boolean;\n  claimReasons: claimReasonInterface[] | null;\n  setViewPosition: (value: boolean) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  reClaiming: boolean;\n  setReClaiming: (value: boolean) => void;\n  reClaimingMsg: string;\n  setReClaimingMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX DATA =====================\n  questionTypes: questionTypesStoreInterface;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  createReClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst ClaimDocView: React.FC<ClaimDocViewProps> = (props) => {\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (\n      props.questionTypes.questionTypes === null ||\n      (props.questionTypes.questionTypes.length === 0 && loading)\n    ) {\n      props.loadQuestionTypes(setLoading);\n    }\n  }, [loading, props]);\n\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim is required\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim._id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              Exam of {props.thisExam.course_name}{\" \"}\n            </span>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewPosition(!props.viewPosition)}\n            >\n              {props.viewPosition ? \"Hide\" : \"More\"}\n            </button>\n          </div>\n\n          {/* DISPLAY EXAM SHEET ==================================================== */}\n          {props.viewPosition && (\n            <div className=\"bg-white w-full rounded p-2 mb-2\">\n              <CandidateAnswersDetails\n                showAnswers={false}\n                exam_id={claimShowAnswer(\n                  props.thisExamSheet,\n                  props.thisExam.course_name\n                )}\n              />\n            </div>\n          )}\n          {/* END DISPLAY POSITION ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt)}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {loading ? (\n                          <div className=\"w-24 h-3 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n                        ) : (\n                          props.thisClaim.userDetails.user_info.fname +\n                          \" \" +\n                          props.thisClaim.userDetails.user_info.lname\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-center justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <button\n                className=\"btn btn-blue\"\n                onClick={() => props.setReClaiming(true)}\n                disabled={props.loadingRequest}\n              >\n                Reclaim\n              </button>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your reclaim...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  questionTypes,\n}: StoreState): {\n  questionTypes: questionTypesStoreInterface;\n} => {\n  return { questionTypes: questionTypes };\n};\n\nexport default connect(mapStateToProps, {\n  loadQuestionTypes,\n  createReClaim,\n  PushPopupAlert,\n})(ClaimDocView);\n","import axios from \"axios\";\nimport React from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { createReClaim } from \"../../actions/claiming\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimStatus,\n} from \"../../interfaces\";\nimport { candidatePlacementInterface } from \"../../interfaces/placement\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { errorToText, showDate } from \"../../utils/functions\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nexport const isClaimEvaluated = (\n  thisClaim: CandidateClaimInterface,\n  level: number\n): boolean => {\n  const _thisClaim = thisClaim.claims.find(\n    (item) =>\n      item.level === level && item.claim_status === ClaimStatus.EVALUATED\n  );\n  if (_thisClaim) {\n    return true;\n  }\n  return false;\n};\n\ntype ClaimPlacementViewProps = {\n  myPlacement: candidatePlacementInterface;\n  thisClaim: CandidateClaimInterface;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  reClaiming: boolean;\n  setReClaiming: (value: boolean) => void;\n  reClaimingMsg: string;\n  setReClaimingMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX DATA =====================\n  createReClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst ClaimPlacementView: React.FC<ClaimPlacementViewProps> = (props) => {\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim sent successful\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim._id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>School:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.myPlacement.placed.school.school_name}\n              </span>\n            </div>\n          </div>\n          {/* <div className=\"flex items-center\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Position:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.myPlacement.placed.school.school_name}\n              </span>\n            </div>\n          </div> */}\n          <div className=\"flex items-center\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>District:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.myPlacement.placed.school.district_id.district_name}\n              </span>\n            </div>\n          </div>\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt)}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-center justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <button\n                className=\"btn btn-blue\"\n                onClick={() => props.setReClaiming(true)}\n                disabled={props.loadingRequest}\n              >\n                Reclaim\n              </button>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your reclaim...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nexport default connect(null, {\n  createReClaim,\n  PushPopupAlert,\n})(ClaimPlacementView);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport {\n  GetClaimingTypes,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  setSelectedClaimType,\n} from \"../../../actions/claiming\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport { MainItem } from \"../../../components/Navigation/SideNavigation\";\nimport { ClaimStatus, PlansTypeKeys } from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\n\ntype FilterByTypeProps = {\n  // thisClaimType: ClaimTypesInterface | \"ALL\";\n  // setThisClaimType: React.Dispatch<\n  //   React.SetStateAction<ClaimTypesInterface | \"ALL\">\n  // >;\n  loadingClaims: boolean;\n  FC_CountByType?: Function;\n\n  // REDUX PROPS =======================================\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  GetClaimingTypes: Function;\n  setSelectedClaimType: Function;\n  getMyRejectedApplications: Function;\n  getMyRejectedDocuments: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\nconst FilterByType: React.FC<FilterByTypeProps> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingRejectedApplications, setLoadingRejectedApplications] =\n    useState<boolean>(true);\n  const [loadingRejectedDocuments, setLoadingRejectedDocuments] =\n    useState<boolean>(true);\n  const [loadingClaimTypes, setLoadingClaimTypes] = useState<boolean>(true);\n\n  useEffect(() => {\n    if (props.claiming.candidateApplications === null) {\n      props.getMyRejectedApplications(\n        props.auth.user.user_id,\n        (status: boolean, msg: string) => {\n          if (status === false) {\n            if (msg.length > 0) {\n              props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            setLoadingRejectedApplications(false);\n          }\n        }\n      );\n    } else if (loadingRejectedApplications) {\n      setLoadingRejectedApplications(false);\n    }\n\n    if (props.claiming.candidateDocuments === null) {\n      console.log(\"filterrrrrrrrrrrrrrrrrrrr loadingRejectedDocuments\");\n      props.getMyRejectedDocuments((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          setLoadingRejectedDocuments(false);\n        }\n      });\n    } else if (loadingRejectedDocuments) {\n      setLoadingRejectedDocuments(false);\n    }\n\n    if (props.claiming.claimTypes === null) {\n      props.GetClaimingTypes((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          setLoadingClaimTypes(false);\n        }\n      });\n    } else if (loadingClaimTypes) {\n      setLoadingClaimTypes(false);\n    }\n\n    if (\n      !loadingRejectedApplications &&\n      !loadingRejectedDocuments &&\n      !loadingClaimTypes &&\n      loading\n    ) {\n      setLoading(false);\n    }\n  }, [\n    loading,\n    loadingClaimTypes,\n    loadingRejectedApplications,\n    loadingRejectedDocuments,\n    props,\n  ]);\n\n  const countClaims = (\n    claiming: ClaimingReducerType,\n    thisType: PlansTypeKeys | \"all\"\n  ): number => {\n    let result: number = 0;\n\n    if (claiming.myClaims && thisType === \"all\") {\n      result = claiming.myClaims.filter(\n        (item) =>\n          item.last_claim_status !== ClaimStatus.DELETED &&\n          item.last_claim_status !== ClaimStatus.COMPLETED\n      ).length;\n    }\n    if (claiming.myClaims && thisType !== \"all\") {\n      result = claiming.myClaims.filter(\n        (item) =>\n          item.type_key === thisType &&\n          item.last_claim_status !== ClaimStatus.DELETED &&\n          item.last_claim_status !== ClaimStatus.COMPLETED\n      ).length;\n    }\n\n    return result;\n  };\n\n  return (\n    <React.Fragment>\n      <span className=\"mt-2 text-sm\">Filter by claim type</span>\n      {/* WHILE LOADING DATA ================================== */}\n      {(loading || props.loadingClaims) && (\n        <section className=\"space-y-2\">\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </section>\n      )}\n      {/* END WHILE LOADING DATA ================================== */}\n\n      {/* AFTER LOADING DATA ================================== */}\n      {!loading && !props.loadingClaims && (\n        <section>\n          {/* ALL ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(\"ALL\");\n              props.setSelectedClaimType(\"all\");\n            }}\n          >\n            <MainItem\n              title=\"All\"\n              active={props.claiming.selectedClaimType === \"all\"}\n              count={countClaims(props.claiming, \"all\")}\n            />\n          </div>\n          {/* APPLICATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(ClaimTypesInterface.DOCUMENT);\n              props.setSelectedClaimType(PlansTypeKeys.APPLICATION);\n            }}\n          >\n            <MainItem\n              title={\"Application\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.APPLICATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.APPLICATION)}\n            />\n          </div>\n          {/* DOCUMENT ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.DOCUMENT_VALIDATION);\n            }}\n          >\n            <MainItem\n              title={\"Document\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION\n              }\n              count={countClaims(\n                props.claiming,\n                PlansTypeKeys.DOCUMENT_VALIDATION\n              )}\n            />\n          </div>\n          {/* EXAMINATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.EXAMINATION);\n            }}\n          >\n            <MainItem\n              title={\"Exam\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.EXAMINATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.EXAMINATION)}\n            />\n          </div>\n          {/* PLACEMENT TRANSFER ================================= */}\n          {false && (\n            <div\n              className=\"mt-2\"\n              onClick={() => {\n                props.setSelectedClaimType(PlansTypeKeys.PLACEMENT_TRANSFER);\n              }}\n            >\n              <MainItem\n                title={\"Placement\"}\n                active={\n                  props.claiming.selectedClaimType !== \"all\" &&\n                  props.claiming.selectedClaimType ===\n                    PlansTypeKeys.PLACEMENT_TRANSFER\n                }\n                count={countClaims(\n                  props.claiming,\n                  PlansTypeKeys.PLACEMENT_TRANSFER\n                )}\n              />\n            </div>\n          )}\n          {/* <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setThisClaimType(ClaimTypesInterface.APPLICATION);\n            }}\n          >\n            <MainItem\n              title={capitalizeFirstLetter(ClaimTypesInterface.APPLICATION)}\n              active={props.thisClaimType === ClaimTypesInterface.APPLICATION}\n              count={countClaims(props.claiming).applications}\n            />\n          </div>\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setThisClaimType(ClaimTypesInterface.PLACEMENT);\n            }}\n          >\n            <MainItem\n              title={capitalizeFirstLetter(ClaimTypesInterface.PLACEMENT)}\n              active={props.thisClaimType === ClaimTypesInterface.PLACEMENT}\n              count={countClaims(props.claiming).placement}\n            />\n          </div> */}\n        </section>\n      )}\n      {/* END AFTER LOADING DATA ================================== */}\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  claiming,\n}: StoreState): { auth: Auth; claiming: ClaimingReducerType } => {\n  return { auth, claiming };\n};\n\nexport default connect(mapStateToProps, {\n  GetClaimingTypes,\n  setSelectedClaimType,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  PushPopupAlert,\n})(FilterByType);\n","import React, { useEffect, useState } from \"react\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\n\ntype ViewPDFProps = {\n  file_url: string;\n  class_name: string;\n  frame_title: string;\n  setLoadingFile: (state: boolean) => void;\n};\n\nconst ViewPDF: React.FC<ViewPDFProps> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<{ element: string; msg: string } | null>(\n    null\n  );\n  useEffect(() => {\n    if (loading) {\n      if (isEmptyOrSpaces(props.file_url)) {\n        setError({ element: \"PDF_FILE\", msg: \"File url is required\" });\n      } else if (error !== null) {\n        setError(null);\n      }\n      setLoading(false);\n    }\n  }, [error, loading, props.file_url]);\n\n  return (\n    <div className=\"w-full\">\n      {error ? (\n        <div className=\"alert-warning mt-2 mx-14\">{error.msg}</div>\n      ) : (\n        <object\n          data={props.file_url}\n          type=\"application/pdf\"\n          className={props.class_name}\n          onLoad={() => props.setLoadingFile(false)}\n        >\n          <iframe\n            src={props.file_url}\n            className={props.class_name}\n            title={props.frame_title}\n            onLoad={() => props.setLoadingFile(false)}\n          >\n            <p>This browser does not support PDF!</p>\n          </iframe>\n        </object>\n      )}\n    </div>\n  );\n};\n\nexport default ViewPDF;\n"],"sourceRoot":""}
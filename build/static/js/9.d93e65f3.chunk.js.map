{"version":3,"sources":["components/Table/Table.tsx","components/Navigation/SideNavigation.tsx","actions/session.ts","actions/document.ts","containers/Claimings/Candidate/ChooseReason.tsx","containers/Claimings/Candidate/FormPlacementList.tsx","containers/Claimings/Candidate/ClaimForm.tsx","containers/DoExam/QuestionDetails/ConvertingAnswers.ts","containers/Positions/ViewRequirements.tsx","components/AnswersDetails/AnswersDetails.tsx","containers/Claimings/Candidate/FormExamList.tsx","containers/Claimings/Candidate/ApplicationFormView.tsx","containers/Claimings/Candidate/ExaminationFormView.tsx","containers/SessionSettings/SessionDetails.tsx","containers/DoExam/DoExamTitle/FindAnswer.tsx","containers/Claimings/Candidate/DocFormView.tsx","containers/Claimings/Candidate/FormApplicationList.tsx","containers/Claimings/Candidate/FormDocumentList.tsx"],"names":["Table","props","table","tr","tableId","length","result","characters","charactersLength","i","charAt","Math","floor","random","FC_makeID","useState","totalItems","setTotalItems","totalPages","setTotalPages","currentPage","setCurrentPage","pages","setPages","pageSize","setPageSize","startIndex","setStartIndex","endIndex","setEndIndex","useEffect","pagination","tablePagination","document","getElementById","getElementsByTagName","ceil","min","_pages","Array","from","keys","map","style","display","className","tableSize","search","searchBG","type","placeholder","onChange","e","data","filterType","filter","td","rows","cols","toLowerCase","columns","textContent","innerText","indexOf","filterTable","target","value","disabled","loading","Number","tableClass","rounded","id","hideColumns","thColor","column","index","padding","alignText","isSortAllowed","onClick","switching","x","y","shouldSwitch","colIndex","dir","switchcount","innerHTML","parentNode","insertBefore","sortThisColumn","columnTitle","aria-label","page","pageIndex","_SideNavigation","componentDidMount","PageHasSubNav","componentWillUnmount","state","this","auth","isAuthenticated","navActive","system","navigation","children","React","Component","SideNavigation","connect","NavToogle","MainItem","title","icon","MdBrightness1","active","count","IconDefined","GetPlansTypes","callback","dispatch","a","setAxiosToken","axios","get","API","CLAIMING","res","console","log","GET_PLANS_TYPES","plan_types","status","ActionTypes","payload","error","errorToText","setSelectedPlanType","thisType","SELECT_PLAN_TYPE","getActiveSessionPlan","GET_ACTIVE_SESSION_PLANS","session_plan","undefined","is_active","GetAllSessionPlans","GET_ALL_SESSION_PLANS","session_data","createSessionPlan","CREATE_SESSION_PLAN","updateSessionPlan","UPDATE_SESSION_PLAN","sessionActivation","SESSION_ACTIVATION","deleteSessionPlan","DELETE_SESSION_PLAN","getDocumentCategory","AUTH","docCategory","GET_DOCUMENT_CATEGORY","createDocumentCategory","CREATE_DOCUMENT_CATEGORY","updateDocumentCategory","UPDATE_DOCUMENT_CATEGORY","deleteDocumentCategory","DELETE_DOCUMENT_CATEGORY","getDocumentSubCategory","docSubCategory","GET_DOCUMENT_SUB_CATEGORY","doc_SUB_category_error","createDocumentSubCategory","CREATE_DOCUMENT_SUB_CATEGORY","updateDocumentSubCategory","UPDATE_DOCUMENT_SUB_CATEGORY","deleteDocumentSubCategory","DELETE_DOCUMENT_SUB_CATEGORY","getDocumentFields","docFields","GET_DOCUMENT_FIELDS","createDocumentFields","CREATE_DOCUMENT_FIELDS","updateDocumentFields","reducer","UPDATE_DOCUMENT_FIELDS","deleteDocumentFields","DELETE_DOCUMENT_FIELDS","getCandidatesInInstitute","educatin_type_id","session_id","APPLICATION","newArray","element","GET_CANDIDATE_IN_INSTITUTE","verifyDocument","action_verify","VERIFY_DOCUMENT","ChooseReason","setSearchInput","setState","searchInput","setChooseClaimReason","allClaimReasons","item","claimReason","setClaimReason","reason","toString","myPlacement","isClaimAllowed","myClaims","activeSession","session_plan_id","placed","_id","setChooseClaimFile","setViewThisFile","setClaimFileId","school","school_name","ClaimGetDocTitle","documentCategories","doc","DocCategory","DocSubCategory","DocField","DocTitle","sub_category_id","documentSubCategory","c","user_detail_subcategory_id","category_id","documentCategory","user_detail_category_id","category_subcategory_data","category_subcategory_Data_id","documentFields","category","sub_category","field","main","allClaim","period_id","claimOnId","find","claiming_on_id","ClaimForm","isDocumentIdValid","documents","doc_id","validated_by","validation_status","msg","alert","PopupAlertTheme","info","claiming","success","warning","isApplicationIdValid","applications","app_id","app","application_id","application_status","ApplicationStates","Rejected","setLoading","setLoadingForm","loadingForm","setFormError","formError","setAlertError","alertError","claimFileId","viewThisFile","chooseClaimFile","chooseClaimReason","setClaimComment","claimComment","isClaimTypeOpen","thisSession","PlansTypeKeys","plans","type_key","isPlanActive","DOCUMENT_VALIDATION","PLACEMENT_TRANSFER","isClaimBtnValid","file_id","claim_type","PushPopupAlert","theme","setFormState","thisClaimType","thisClaimTypeId","formType","displayClaimType","claimType","EXAMINATION","MARKS_PUBLICATION","isClaimsAllowed","thisPeriod","getMyClaims","user","user_id","danger","loadExamAnswers","activeSessionPlan","getMyAnswers","sessionPlan","_isClaimsAllowed","documentReducer","candidateApplications","getMyRejectedApplications","_isApplicationIdValid","candidateDocuments","getMyRejectedDocuments","_isDocumentIdValid","claimReasons","getClaimReasons","getMyPlacement","courses","loadCourses","getDocumentById","getApplicationById","getExamById","exams","answer_sheet_id","getValidation","thisId","old_reason","old_status","old_evaluated_by","comment","override_by","cleanToClose","response","loadUserById","isEmptyOrSpaces","handleSubmit","preventDefault","toLocaleLowerCase","old_evaluator_email","old_evaluator_name","evaluator_email","evaluator_name","email","user_info","fname","lname","default_claim_resaons","post","createClaim","selectClaimType","thisClaim","generateChooseFileTitle","allowedClaims","formState","Modal","backDrop","Themes","default","close","displayClose","backDropClose","widthSizeClass","ModalSize","extraLarge","medium","body","footer","onSubmit","Object","values","capitalizeFirstLetter","replace","position","position_title","myAnswer","getCourseIdBySheetId","getCourseById","course","course_name","FormDocumentList","FormApplicationList","FormExamList","candidateAnswers","resize","DocFormView","thisDoc","ApplicationFormView","thisApplication","ExaminationFormView","thisAnswerSheet","GetClaimingTypes","toMultipleChoice","answers","answer","toTrueFalse","toMatching","toSimpleCalculated","toShortAnswer","toNumerical","toCalculatedMultipleChoice","ViewRequirements","requirements","colSpan","subcategory_title","field_id","field_title","subcategory_required","required","_AnswersDetails","setLoadingStatus","loadingStatus","questionTypes","loadQuestionTypes","exam_id","check","candidateExam","user_exams_done","itm","period","DATE","exam_date","allAnswers","loadExamsDone","exam_paper","requestUserAnswers","userAnswersTotalMarks","user_answers","total","user_marks","user_exam_details","dangerouslySetInnerHTML","__html","discription","termes","questions","question_id","question","test","language","description","selectedLanguage","chapters","customNumber","marks","answersList","showCorrectAnswer","showAnswers","toFixed","total_marks","exam_total_marks","AnswersDetails","FC_GetProfileDetails","LoadCandidateApplications","setSelectedCandidateExam","setSelectedCourse","setSelectedPosition","InitializeExamDetails","AddUserApplication","loadApplicationPeriods","getFailedExam","allData","allCourses","forEach","push","course_id","sheet_id","FC_ApplicationPositionDistinctCategory","thisPosition","PositionsTemp","DistinctCategoriesTemp","DistinctCategoriesIds","DistinctSubCategoriesTemp","DistinctSubCategoriesIds","req","thisRequirements","thisCategory","thisSubCategory","thisField","position_requirement","category_subcategory_data_id","category_title","subcategory_id","includes","createdAt","school_level_id","school_level_name","education_institute_id","education_category_title","course_code","NoResultThemes","Dark","claimShowAnswer","rules","right_click_enabled","copy_enabled","paste_enabled","stop_candidate_when_comeback","allow_to_leave_browser","isActivationAllowed","thisPlans","today","Date","end_date","getTime","getPlanTypeByKey","allPlanTypes","viewThisSession","thisPlan","planEndDate","planStartDate","start_date","type_status","SessionPlanTypeStatus","CLOSED","SessionDetails","handlePlanActivation","session","newState","window","confirm","key","newData","session_plan_name","updatedAt","prototype","hasOwnProperty","call","OPEN","type_id","type_title","allowed_claim_level","history","loadingRequest","put","setViewThisSession","FindAnswer","UserAnswersSel","findQuestionType","questionTypeElementsType","MultipleChoice","userAnswer","SingleMultiple","userAnswerSingle","CalculatedMultipleChoice","userAnswer1","Matching","userAnswerMatch","TrueFalse","userAnswerTureFalse","Numeric","userAnswerNumerical","SimpleCalculate","userAnswerSimpleCalculate","ShortAnswer","userAnswerShortAnswer","src","AUTH_FILES","files","alt","getRejectedApplicants","applicationData","objList","text","product","flag","prop","DocumentTitleData","documentData","documentTemp","company","end_year","names","phone_number","school_id","start_year","year","doc_title","getRejectedDocuments","rejected"],"mappings":"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","file":"static/js/9.d93e65f3.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport { MdNavigateBefore, MdNavigateNext, MdSearch } from \"react-icons/md\";\n\nconst FC_makeID = (length: number = 5): string => {\n  let result: string = \"\";\n  let characters: string =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  let charactersLength = characters.length;\n  for (let i: number = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\nexport const sortThisColumn = (\n  tableId: string,\n  colIndex: number = 0,\n  dir: \"asc\" | \"desc\" = \"asc\"\n) => {\n  var table,\n    rows,\n    switching,\n    i,\n    x,\n    y,\n    shouldSwitch,\n    switchcount = 0;\n  table = document.getElementById(tableId) as HTMLTableElement;\n  switching = true;\n  /* Make a loop that will continue until\n  no switching has been done: */\n  if (table) {\n    while (switching) {\n      //start by saying: no switching is done:\n      switching = false;\n      rows = table.rows;\n      /*Loop through all table rows (except the\n    first, which contains table headers):*/\n      for (i = 1; i < rows.length - 1; i++) {\n        //start by saying there should be no switching:\n        shouldSwitch = false;\n        /*Get the two elements you want to compare,\n      one from current row and one from the next:*/\n        x = rows[i].getElementsByTagName(\"TD\")[colIndex];\n        y = rows[i + 1].getElementsByTagName(\"TD\")[colIndex];\n        /*check if the two rows should switch place,\n      based on the direction, asc or desc:*/\n        if (dir === \"asc\" && x && y) {\n          if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        } else if (dir === \"desc\" && x && y) {\n          if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        }\n      }\n      if (shouldSwitch && rows[i].parentNode) {\n        /*If a switch has been marked, make the switch\n      and mark that a switch has been done:*/\n        rows[i].parentNode!.insertBefore(rows[i + 1], rows[i]);\n        switching = true;\n        //Each time a switch is done, increase this count by 1:\n        switchcount++;\n      } else {\n        /*If no switching has been done AND the direction is \"asc\",\n      set the direction to \"desc\" and run the while loop again.*/\n        if (switchcount === 0 && dir === \"asc\") {\n          dir = \"desc\";\n          switching = true;\n        }\n      }\n      // if (i === 0) continue;\n      // rows.cells[i].style.backgroundColor = \"blue\";\n    }\n  }\n};\n\nexport interface TableColumnsInterface {\n  columnTitle: JSX.Element | string;\n  alignText: string;\n  padding?: string;\n  isSortAllowed?: boolean;\n}\n\ninterface TableProps {\n  columns: TableColumnsInterface[];\n  rows: Function;\n  hideColumns?: boolean;\n  pagination?: boolean;\n  search?: boolean;\n  tableSize?: string;\n  tableClass?: string;\n  tableId?: string;\n  rounded?: boolean;\n  searchBG?: string;\n  thColor?: string;\n  loading?: boolean;\n}\n\nconst Table: React.FC<TableProps> = (props) => {\n  const startPage = 1;\n  const tableId =\n    !props.tableId || props.tableId === \"myTable\" ? FC_makeID() : props.tableId;\n  let table: HTMLElement, tr: HTMLCollectionOf<HTMLTableRowElement>;\n  const [totalItems, setTotalItems] = useState<number>(0);\n  const [totalPages, setTotalPages] = useState<number>(1);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [pages, setPages] = useState<number[]>();\n  const [pageSize, setPageSize] = useState<number>(10);\n  const [startIndex, setStartIndex] = useState<number>(0);\n  const [endIndex, setEndIndex] = useState<number>(0);\n\n  useEffect(() => {\n    props.pagination && tablePagination();\n  });\n\n  const filterTable = (\n    data: string,\n    filterType?: \"default\" | \"field\"\n  ): void => {\n    var filter, tr, td, rows: number, cols: number, txtValue;\n    if (filterType === \"field\" && data === \"all\") data = \"\";\n    filter = data.toLowerCase();\n    table = document.getElementById(tableId!)!;\n    tr = table.getElementsByTagName(\"tr\");\n    for (rows = 0; rows < tr.length; rows++) {\n      for (cols = 0; cols < props.columns.length; cols++) {\n        td = tr[rows].getElementsByTagName(\"td\")[cols];\n        if (td) {\n          txtValue = td.textContent || td.innerText;\n          if (txtValue.toLowerCase().indexOf(filter) > -1) {\n            tr[rows].style.display = \"\";\n            break;\n          } else {\n            tr[rows].style.display = \"none\";\n          }\n        }\n      }\n    }\n  };\n\n  const tablePagination = (): void => {\n    table = document.getElementById(tableId)!;\n    tr = table.getElementsByTagName(\"tr\");\n    setTotalItems(tr.length);\n    setTotalPages(Math.ceil(totalItems / pageSize));\n\n    // calculate start and end item indexes on the current page\n    setStartIndex((currentPage - 1) * pageSize);\n    setEndIndex(Math.min(startIndex + pageSize - 1, totalItems - 1));\n\n    /**\n     * TODO!\n     * There is a problem with this condition\n     */\n    let _pages = Array.from(Array(totalPages + 1 - startPage).keys()).map(\n      (i) => startPage + i\n    );\n    if (!pages || _pages.length !== pages.length) {\n      setPages(_pages);\n    }\n\n    for (let i: number = 0; i < tr.length; i++) {\n      if (i >= startIndex && i <= endIndex) {\n        tr[i].style.display = \"\";\n      } else {\n        tr[i].style.display = \"none\";\n      }\n    }\n  };\n\n  return (\n    <div className={`${props.tableSize} overflow-x-auto`}>\n      {/* search box  */}\n      {props.search && (\n        <div className={`${props.searchBG} w-full mb-2`}>\n          {props.search && (\n            <div className=\"bg-white rounded flex items-center w-full p-2 border-2 border-gray-500\">\n              <MdSearch className=\"h-5 w-5 fill-current text-gray-400\" />\n              <input\n                type=\"search\"\n                placeholder=\"search\"\n                onChange={(e) => filterTable(e.target.value)}\n                className=\"w-full h-6 pl-4 text-sm outline-none focus:outline-none bg-white\"\n                disabled={props.loading}\n              />\n\n              {props.pagination && (\n                <div className=\"select\">\n                  <select\n                    className=\"text-base outline-none focus:outline-none bg-white\"\n                    onChange={(e) => setPageSize(Number(e.target.value))}\n                    disabled={props.loading}\n                  >\n                    <option value=\"10\">10</option>\n                    <option value=\"25\">25</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                  </select>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n      <div className=\"overflow-x-auto w-full\">\n        <table\n          className={\n            props.tableClass\n              ? props.tableClass\n              : `w-full shadow ${\n                  props.rounded && \"sm:rounded-lg\"\n                } table-auto order-table`\n          }\n          id={tableId}\n        >\n          {!props.hideColumns && (\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-base\">\n              <tr\n                className={`text-left tracking-wide bg-${props.thColor}-100 border-b-2 border-${props.thColor}-500 text-${props.thColor}-600`}\n              >\n                {props.columns.map((column, index) => (\n                  <th\n                    key={index}\n                    className={`${column.padding} text-${\n                      column.alignText\n                    } px-3 py-2 ${column.isSortAllowed && \"cursor-pointer\"}`}\n                    onClick={() =>\n                      column.isSortAllowed && sortThisColumn(tableId, index)\n                    }\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      {column.columnTitle}\n                      {column.isSortAllowed && <BiSort />}\n                    </div>\n                  </th>\n                ))}\n              </tr>\n            </thead>\n          )}\n          <tbody id=\"table-data\" className=\"bg-white text-black text-base\">\n            {props.rows()}\n          </tbody>\n        </table>\n        {props.pagination && (\n          <div className=\"sm:flex-1 sm:flex sm:items-center sm:justify-between mt-4 work-sans\">\n            <div>\n              <span className=\"text-xs xs:text-sm text-gray-900\">\n                Showing 1 to {pageSize} of {totalItems - 1} Entries\n              </span>\n            </div>\n            <div>\n              <nav className=\"inline-flex shadow-sm\">\n                <div>\n                  <button\n                    type=\"button\"\n                    className={`inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 text-sm font-medium text-gray-500 ${\n                      currentPage !== 1 && \"bg-white\"\n                    }`}\n                    aria-label=\"Previous\"\n                    disabled={currentPage === 1 || props.loading}\n                    onClick={() => setCurrentPage(currentPage - 1)}\n                  >\n                    <MdNavigateBefore className=\"h-5 w-5\" />\n                  </button>\n                </div>\n                <div>\n                  {pages &&\n                    pages.map((page, pageIndex) => (\n                      <button\n                        key={pageIndex}\n                        className={`-ml-px inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium text-gray-700 ${\n                          page !== currentPage\n                            ? \"bg-white\"\n                            : \"bg-gray-100 cursor-default\"\n                        }`}\n                        disabled={page === currentPage || props.loading}\n                        onClick={() => setCurrentPage(page)}\n                      >\n                        {page}\n                      </button>\n                    ))}\n                </div>\n                <div>\n                  <button\n                    type=\"button\"\n                    className={`inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 text-sm leading-5 font-medium text-gray-500 ${\n                      currentPage !== totalPages && \"bg-white\"\n                    }`}\n                    aria-label=\"Next\"\n                    disabled={currentPage === totalPages || props.loading}\n                    onClick={() => setCurrentPage(currentPage + 1)}\n                  >\n                    <MdNavigateNext className=\"h-5 w-5\" />\n                  </button>\n                </div>\n              </nav>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Table;\n","import React, { FC, ReactElement, ReactNode } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, System } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { NavToogle, PageHasSubNav } from \"../../actions\";\nimport { MdBrightness1, MdSearch } from \"react-icons/md\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  system: System;\n  PageHasSubNav: Function;\n  NavToogle: Function;\n  children: ReactNode;\n}\n//\ninterface AppState {\n  loading: boolean;\n}\n\nclass _SideNavigation extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount = () => this.props.PageHasSubNav(true);\n  componentWillUnmount = () => this.props.PageHasSubNav(false);\n\n  render() {\n    const isAuthenticated = this.props.auth.isAuthenticated;\n\n    if (isAuthenticated === false) {\n      return null;\n    }\n\n    const navActive = this.props.system.navigation;\n    return (\n      <div\n        className={`fixed w-48 p-1 pr-2 pl-6 text-gray-700 bg-white ${\n          navActive === true ? \"lg:left-16  left-16\" : \" -left-72 lg:left-16\"\n        }  top-0 bottom-0 pt-20 z-30 shadow-lg  transition-all duration-500 ease-in-out overflow-y-auto`}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n}: StoreState): { auth: Auth; system: System } => {\n  return { auth: auth, system: system };\n};\n\nexport const SideNavigation = connect(mapStateToProps, {\n  NavToogle,\n  PageHasSubNav,\n})(_SideNavigation);\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SearchComponentInterface = {\n  data: any[];\n};\n\nexport const Search: FC<SearchComponentInterface> = ({\n  data,\n}): ReactElement => {\n  return (\n    <div className=\"m-1 rounded-md shadow-md border border-blue-400 bg-white p-1 flex \">\n      <label htmlFor=\"search-text\" className=\"inline-block text-2xl\">\n        <MdSearch className=\"inline-block text-blue-400\" />\n      </label>\n      <input\n        type=\"search\"\n        className=\"outline-none bg-transparent flex-1 pl-1\"\n        placeholder=\"Search\"\n        id=\"search-text\"\n      />\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype MainItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const MainItem: FC<MainItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n  return (\n    <section\n      className={`${\n        active === true\n          ? \"bg-blue-500 text-white font-bold\"\n          : \"bg-blue-100 text-blue-800\"\n      } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex cursor-pointer items-center`}\n    >\n      <section className=\"flex-1\">\n        <IconDefined className=\"inline-block mr-1 text-xs\" />\n        <span>{title}</span>\n      </section>\n\n      {count > 0 ? (\n        <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n          {count}\n        </span>\n      ) : null}\n    </section>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemContainerComponentInterface = {\n  children: ReactNode;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const SubItemContainer: FC<SubItemContainerComponentInterface> = ({\n  children,\n}): ReactElement => {\n  return (\n    <div className=\"ml-3 overflow-y-auto border-l-2 border-blue-200 -mt-1 pt-2 mb-2 pl-1 cursor-pointer\">\n      {children}\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n * @important Remenber to use these components inside the <SubItemContainer>...</SubItemContainer>\n */\nexport const SubItem: FC<SubItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n\n  return (\n    <div\n      className={`animate__animated animate__zoomIn animate__faster ${\n        active === true ? \"bg-blue-500 text-white font-bold\" : \" text-blue-800\"\n      } text-blue-800 bg-blue-200 rounded-md px-1 mb-1 flex items-center py-1 font-bold`}\n    >\n      <IconDefined\n        className={`inline-block mr-0.1 text-xs ${\n          active === true ? \"text-white\" : \"\"\n        }`}\n      />\n      <span\n        className={`inline-block pl-1 ${active === true ? \"text-white\" : \"\"}`}\n      >\n        {title}\n      </span>\n      {count >= 1 ? (\n        <span\n          className={`text-sm fint-bold ${active === true ? \"text-white\" : \"\"}`}\n        >\n          {count}\n        </span>\n      ) : null}\n    </div>\n  );\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PlansTypeInterface, SessionPlanInterface } from \"../interfaces\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// GET ACTIVE PLAN TYPES\nexport interface GetPlansTypesAction {\n  type: ActionTypes.GET_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// GET INACTIVE PLAN TYPES\nexport interface GetDeletedPlansTypesAction {\n  type: ActionTypes.GET_DELETED_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// CREATE PLAN TYPE\nexport interface CreatePlansTypeAction {\n  type: ActionTypes.CREATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// UPDATE PLAN TYPE\nexport interface UpdatePlansTypeAction {\n  type: ActionTypes.UPDATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// DELETE PLAN TYPE\nexport interface DeletePlansTypeAction {\n  type: ActionTypes.DELETE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// SET PLAN TYPE =====================================\nexport interface setSelectedPlanTypeActions {\n  type: ActionTypes.SELECT_PLAN_TYPE;\n  payload: PlansTypeInterface | \"all\";\n}\n\n// GET ALL SESSION PLAN\nexport interface GetAllSessionPlansAction {\n  type: ActionTypes.GET_ALL_SESSION_PLANS;\n  payload: SessionPlanInterface[];\n}\n\n// GET ACTIVE SESSION PLAN\nexport interface GetActiveSessionPlanAction {\n  type: ActionTypes.GET_ACTIVE_SESSION_PLANS;\n  payload: SessionPlanInterface | \"none\";\n}\n\n// CREATE SESSION PLAN\nexport interface CreateSessionPlansAction {\n  type: ActionTypes.CREATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// UPDATE SESSION PLAN\nexport interface UpdateSessionPlansAction {\n  type: ActionTypes.UPDATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// ACTIVATE SESSION PLAN\nexport interface ActivateSessionPlansAction {\n  type: ActionTypes.SESSION_ACTIVATION;\n  payload: SessionPlanInterface;\n}\n\n// DELETE SESSION PLAN\nexport interface DeleteSessionPlanAction {\n  type: ActionTypes.DELETE_SESSION_PLAN;\n  payload: string;\n}\n\nexport type SessionActionType =\n  | GetPlansTypesAction\n  | GetDeletedPlansTypesAction\n  | CreatePlansTypeAction\n  | UpdatePlansTypeAction\n  | DeletePlansTypeAction\n  | GetAllSessionPlansAction\n  | GetActiveSessionPlanAction\n  | CreateSessionPlansAction\n  | UpdateSessionPlansAction\n  | ActivateSessionPlansAction\n  | DeleteSessionPlanAction\n  | setSelectedPlanTypeActions;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type`\n      );\n      console.log({ GET_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetPlansTypesAction>({\n        type: ActionTypes.GET_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetDeletedPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type/deleted`\n      );\n      console.log({ GET_DELETED_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetDeletedPlansTypesAction>({\n        type: ActionTypes.GET_DELETED_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE PLAN TYPE\nexport const createPlanType = (\n  data: PlansTypeInterface\n): CreatePlansTypeAction => {\n  return {\n    type: ActionTypes.CREATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// UPDATE PLAN TYPE\nexport const updatePlanType = (\n  data: PlansTypeInterface\n): UpdatePlansTypeAction => {\n  return {\n    type: ActionTypes.UPDATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// DELETE PLAN TYPE\nexport const deletePlanType = (\n  data: PlansTypeInterface\n): DeletePlansTypeAction => {\n  return {\n    type: ActionTypes.DELETE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// SELECT PLAN TYPES ==========================\nexport const setSelectedPlanType = (\n  thisType: PlansTypeInterface | \"all\"\n): setSelectedPlanTypeActions => {\n  console.log({ thisType });\n  return {\n    type: ActionTypes.SELECT_PLAN_TYPE,\n    payload: thisType,\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const getActiveSessionPlan = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface>(\n        `${API.CLAIMING}/session/active/`\n      );\n      console.log({ GET_ACTIVE_SESSION_PLANS: res.data });\n      let session_plan: SessionPlanInterface | undefined = undefined;\n      // if (res.status === 200) {\n      //   // setApplications(res.data);\n      // }\n      if (res.data && res.data.is_active !== undefined) {\n        session_plan = res.data;\n      }\n      console.log({ session_plan: res.data });\n\n      dispatch<GetActiveSessionPlanAction>({\n        type: ActionTypes.GET_ACTIVE_SESSION_PLANS,\n        payload: session_plan ? session_plan : \"none\",\n      });\n      callback(false, \"\", session_plan ? session_plan : \"none\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ALL PLAN TYPES ==========================\nexport const GetAllSessionPlans = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface[]>(\n        `${API.CLAIMING}/session/`\n      );\n      console.log({ GET_ALL_SESSION_PLANS: res.data });\n      let session_data: SessionPlanInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          session_data = res.data;\n        }\n      }\n      dispatch<GetAllSessionPlansAction>({\n        type: ActionTypes.GET_ALL_SESSION_PLANS,\n        payload: session_data,\n      });\n      callback(false, \"\", session_data);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE SESSION PLAN\nexport const createSessionPlan = (\n  data: SessionPlanInterface\n): CreateSessionPlansAction => {\n  return {\n    type: ActionTypes.CREATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// UPDATE SESSION PLAN\nexport const updateSessionPlan = (\n  data: SessionPlanInterface\n): UpdateSessionPlansAction => {\n  return {\n    type: ActionTypes.UPDATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// ACTIVATE SESSION PLAN\nexport const sessionActivation = (\n  data: SessionPlanInterface\n): ActivateSessionPlansAction => {\n  return {\n    type: ActionTypes.SESSION_ACTIVATION,\n    payload: data,\n  };\n};\n\n// DELETE SESSION PLAN\nexport const deleteSessionPlan = (data: string): DeleteSessionPlanAction => {\n  return {\n    type: ActionTypes.DELETE_SESSION_PLAN,\n    payload: data,\n  };\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  CandidatesInterface,\n  DocumentCategoryInterface,\n  DocumentFieldsInterface,\n  DocumentSubCategoryInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { VerifyDocumentInterface } from \"./users\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// CATEGORY\nexport interface GetDocumentCategoryAction {\n  type: ActionTypes.GET_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface[];\n}\n\nexport interface CreateDocumentCategoryAction {\n  type: ActionTypes.CREATE_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface;\n}\n\nexport interface UpdateDocumentCategoryAction {\n  type: ActionTypes.UPDATE_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface;\n}\n\nexport interface DeleteDocumentCategoryAction {\n  type: ActionTypes.DELETE_DOCUMENT_CATEGORY;\n  payload: string;\n}\n\n// SUB CATEGORY\nexport interface GetDocumentSubCategoryAction {\n  type: ActionTypes.GET_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface[];\n}\n\nexport interface CreateDocumentSubCategoryAction {\n  type: ActionTypes.CREATE_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface;\n}\n\nexport interface UpdateDocumentSubCategoryAction {\n  type: ActionTypes.UPDATE_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface;\n}\n\nexport interface DeleteDocumentSubCategoryAction {\n  type: ActionTypes.DELETE_DOCUMENT_SUB_CATEGORY;\n  payload: string;\n}\n\n// FIELDS\nexport interface GetDocumentFieldsAction {\n  type: ActionTypes.GET_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface[];\n}\n\nexport interface CreateDocumentFieldsAction {\n  type: ActionTypes.CREATE_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface;\n}\n\nexport interface UpdateDocumentFieldsAction {\n  type: ActionTypes.UPDATE_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface;\n}\n\nexport interface DeleteDocumentFieldsAction {\n  type: ActionTypes.DELETE_DOCUMENT_FIELDS;\n  payload: string;\n}\n\n// DOCUMENT CHECKING\nexport interface GetCandidatesInInstituteAtion {\n  type: ActionTypes.GET_CANDIDATE_IN_INSTITUTE;\n  payload: CandidatesInterface[];\n}\n\nexport interface VerifyDocumentAction {\n  type: ActionTypes.VERIFY_DOCUMENT;\n  payload: VerifyDocumentInterface;\n}\n\nexport type DocumentCategoryActionType =\n  | GetDocumentCategoryAction\n  | CreateDocumentCategoryAction\n  | UpdateDocumentCategoryAction\n  | DeleteDocumentCategoryAction\n  | GetDocumentSubCategoryAction\n  | CreateDocumentSubCategoryAction\n  | UpdateDocumentSubCategoryAction\n  | DeleteDocumentSubCategoryAction\n  | GetDocumentFieldsAction\n  | CreateDocumentFieldsAction\n  | UpdateDocumentFieldsAction\n  | DeleteDocumentFieldsAction\n  | GetCandidatesInInstituteAtion\n  | VerifyDocumentAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// CATEGORY\n\nexport const getDocumentCategory = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get(`${API.AUTH}/detailcategory`);\n      console.log({ docCategory: res });\n      dispatch<GetDocumentCategoryAction>({\n        type: ActionTypes.GET_DOCUMENT_CATEGORY,\n        payload: res.data,\n      });\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n    }\n  };\n};\n\nexport const createDocumentCategory = (data: DocumentCategoryInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentCategoryAction>({\n      type: ActionTypes.CREATE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentCategory = (data: DocumentCategoryInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentCategoryAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentCategory = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentCategoryAction>({\n      type: ActionTypes.DELETE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\n// SUB CATEGORY\nexport const getDocumentSubCategory = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<DocumentSubCategoryInterface[]>(\n        `${API.AUTH}/detailsubcategory`\n      );\n      console.log({ docSubCategory: res });\n      dispatch<GetDocumentSubCategoryAction>({\n        type: ActionTypes.GET_DOCUMENT_SUB_CATEGORY,\n        payload: res.data,\n        // payload: response.data,\n      });\n    } catch (error) {\n      console.log({ doc_SUB_category_error: error });\n    }\n  };\n};\n\nexport const createDocumentSubCategory = (\n  data: DocumentSubCategoryInterface\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentSubCategoryAction>({\n      type: ActionTypes.CREATE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentSubCategory = (\n  data: DocumentSubCategoryInterface\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentSubCategoryAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentSubCategory = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentSubCategoryAction>({\n      type: ActionTypes.DELETE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\n// FIELDS\nexport const getDocumentFields = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<DocumentFieldsInterface[]>(\n        `${API.AUTH}/categorysubcatedata`\n      );\n      console.log({ docFields: res });\n      dispatch<GetDocumentFieldsAction>({\n        type: ActionTypes.GET_DOCUMENT_FIELDS,\n        payload: res.data,\n        // payload: response.data,\n      });\n    } catch (error) {\n      console.log({ doc_SUB_category_error: error });\n    }\n  };\n};\n\nexport const createDocumentFields = (data: DocumentFieldsInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentFieldsAction>({\n      type: ActionTypes.CREATE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentFields = (data: DocumentFieldsInterface) => {\n  console.log({ reducer: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentFieldsAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentFields = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentFieldsAction>({\n      type: ActionTypes.DELETE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\n// CANDIDATE IN EDUCATION CATEGORY\nexport const getCandidatesInInstitute = (\n  educatin_type_id: string,\n  session_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\", null);\n    try {\n      setAxiosToken();\n      const res = await axios.get<CandidatesInterface[]>(\n        `${API.APPLICATION}/educationtypeuserdocs/${educatin_type_id}/${session_id}`\n      );\n      const newArray: CandidatesInterface[] = res.data.filter((element) => {\n        return element !== null && element !== undefined;\n      });\n      console.log(\"====================================\");\n      console.log({ getCandidatesInInstitute: res, newArray });\n      console.log(\"====================================\");\n      dispatch<GetCandidatesInInstituteAtion>({\n        type: ActionTypes.GET_CANDIDATE_IN_INSTITUTE,\n        payload: newArray,\n        // payload: response.data,\n      });\n      callback(false, \"\", newArray);\n    } catch (error) {\n      console.log({ getCandidatesInInstitute: error });\n      callback(false, errorToText(error), null);\n    }\n  };\n};\n\nexport const verifyDocument = (data: VerifyDocumentInterface) => {\n  console.log({ action_verify: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<VerifyDocumentAction>({\n      type: ActionTypes.VERIFY_DOCUMENT,\n      payload: data,\n    });\n  };\n};\n","import React, { Component } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { claimReasonInterface } from \"../../../interfaces\";\nimport search from \"../../../utils/search\";\n\nexport const claimReasonsData = [\n  { key: 1, reason: \"Not placed (Sinahawe umwanya)\" },\n  {\n    key: 2,\n    reason:\n      \"Not placed with higher marks (Sinahawe umwanya kandi hari abo ndusha twakoze bimwe bawuhawe)\",\n  },\n  {\n    key: 3,\n    reason:\n      \"Want to change district of placement (Nifuza guhindurirwa akarere nahawemo umwanya)\",\n  },\n  {\n    key: 4,\n    reason: \"Rejected offer by mistake (Nibeshye nanga umwanya nahawe)\",\n  },\n  {\n    key: 0,\n    reason: \"None of the above (nta na kimwe muri ibyo byavuzwe haruguru)\",\n  },\n];\n\ntype ChooseReasonProps = {\n  claimReason: claimReasonInterface | null;\n  setClaimReason: (value: claimReasonInterface | null) => void;\n  setChooseClaimReason: (value: boolean) => void;\n  allClaimReasons: claimReasonInterface[];\n};\n\ntype ChooseReasonState = {\n  searchInput: string;\n};\n\nclass ChooseReason extends Component<ChooseReasonProps, ChooseReasonState> {\n  constructor(props: ChooseReasonProps) {\n    super(props);\n\n    this.state = {\n      searchInput: \"\",\n    };\n  }\n\n  setSearchInput = (value: string) => {\n    this.setState({ searchInput: value });\n  };\n\n  render() {\n    return (\n      <div>\n        {/* SEARCH PART */}\n        <div className=\"flex items-center w-full my-1\">\n          <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n          <input\n            type=\"text\"\n            placeholder=\"Search\"\n            className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n            onChange={(e) => this.setSearchInput(e.target.value)}\n            value={this.state.searchInput}\n          />\n          <button\n            className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n            type=\"button\"\n            onClick={() => this.props.setChooseClaimReason(false)}\n          >\n            Cancel\n          </button>\n        </div>\n        {/* END SEARCH PART ///////////////// */}\n\n        <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n          {search(this.props.allClaimReasons, this.state.searchInput).map(\n            (item: claimReasonInterface, index) => (\n              <section key={index.toString() + item.id}>\n                <div\n                  className={`my-1 py-1 w-full px-2 hover:bg-gray-100 cursor-pointer ${\n                    this.props.claimReason &&\n                    this.props.claimReason.id === item.id &&\n                    \"border-l-2 border-blue-600\"\n                  }`}\n                  onClick={() => {\n                    this.props.setChooseClaimReason(false);\n                    this.props.setClaimReason(item);\n                  }}\n                >\n                  <p className=\"text-base text-black\">{item.reason}</p>\n                </div>\n              </section>\n            )\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ChooseReason;\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  course,\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimExamResultsDetails,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { candidatePlacementInterface } from \"../../../interfaces/placement\";\nimport { isClaimAllowed } from \"./ClaimForm\";\n\nexport const getCourseById = (courses: course[], course_id: string) => {\n  return courses.find((item) => item.course_id === course_id);\n};\n\nexport const getCourseIdBySheetId = (\n  allData: ClaimExamResultsDetails[],\n  sheet_id: string\n) => {\n  return allData.find((item) => item.answer_sheet_id === sheet_id);\n};\n\nexport const searchApplication = (\n  objList: claimApplicationsInterface[],\n  text: any\n): claimApplicationsInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (prop === \"position\") {\n        flag =\n          product.position.position_title\n            .toString()\n            .toLowerCase()\n            .indexOf(text.toLowerCase()) > -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n  // return objList.filter((product) =>\n  //   product.position.position_title.includes(text)\n  // );\n};\n\ntype FormPlacementListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  viewThisFile: string;\n  myPlacement: candidatePlacementInterface | null;\n  myClaims: CandidateClaimInterface[];\n  activeSession: SessionPlanInterface;\n\n  // REDUX //////////////////////\n};\n\nconst FormPlacementList: React.FC<FormPlacementListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            props.myPlacement === null ||\n            isClaimAllowed(\n              props.myClaims,\n              props.activeSession.session_plan_id,\n              props.myPlacement.placed._id\n            )\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Cancel\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}{\" \"}\n      {/* searchData(props.candidateAnswers, searchInput) */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {props.myPlacement ? (\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            props.myPlacement.placed._id\n          ) && (\n            <div className=\"group flex items-center justify-between my-1 hover:bg-gray-100\">\n              <div\n                className=\"p-1 w-full mr-2 cursor-pointer\"\n                onClick={() => {\n                  props.setChooseClaimFile(false);\n                  props.setClaimFileId(props.myPlacement!.placed._id);\n                }}\n              >\n                <p className=\"text-base font-medium text-black\">\n                  Placed on {props.myPlacement.placed.school.school_name}\n                </p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                onClick={() => {\n                  props.setViewThisFile(props.myPlacement!.placed._id);\n                }}\n              >\n                View\n              </button>\n            </div>\n          )\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No placement to claim on!\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\n// const mapStateToProps = ({\n//   course,\n// }: StoreState): {\n//   courses: course[] | null;\n// } => {\n//   return {\n//     courses: course.courses,\n//   };\n// };\nexport default connect(null, {})(FormPlacementList);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, loadCourses, PushPopupAlert } from \"../../../actions\";\nimport {\n  createClaim,\n  DocumentClaimUser,\n  GetClaimingTypes,\n  getClaimReasons,\n  getMyAnswers,\n  getMyClaims,\n  getMyPlacement,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n} from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { getActiveSessionPlan } from \"../../../actions/session\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimExamResultsDetails,\n  claimReasonInterface,\n  course,\n  PlansInterface,\n  PlansTypeKeys,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { candidatePlacementInterface } from \"../../../interfaces/placement\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { SessionPlanReducerInterface } from \"../../../reducers/session\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { API } from \"../../../utils/api\";\nimport { setAxiosToken } from \"../../../utils/AxiosToken\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { isPlanActive } from \"../../SessionSettings/SessionDetails\";\nimport ApplicationFormView from \"./ApplicationFormView\";\nimport ChooseReason from \"./ChooseReason\";\nimport DocFormView from \"./DocFormView\";\nimport ExaminationFormView from \"./ExaminationFormView\";\nimport FormApplicationList from \"./FormApplicationList\";\nimport FormDocumentList from \"./FormDocumentList\";\nimport FormExamList, {\n  getCourseById,\n  getCourseIdBySheetId,\n} from \"./FormExamList\";\nimport FormPlacementList from \"./FormPlacementList\";\n\nexport const ClaimGetDocTitle = (\n  documentCategories: DocumentReducerInterface,\n  doc: DocumentClaimUser\n): { category: string; sub_category: string; field: string; main: string } => {\n  let DocCategory: string = \"\",\n    DocSubCategory: string = \"\",\n    DocField: string = \"\",\n    DocTitle: string = \"\";\n  if (\n    doc.sub_category_id.length > 0 &&\n    documentCategories.documentSubCategory\n  ) {\n    DocTitle = documentCategories.documentSubCategory.filter(\n      (c) => c.user_detail_subcategory_id === doc.sub_category_id\n    )[0].title;\n    DocSubCategory = DocTitle;\n  } else if (\n    doc.category_id.length > 0 &&\n    documentCategories.documentCategory\n  ) {\n    DocTitle = documentCategories.documentCategory.filter(\n      (c) => c.user_detail_category_id === doc.category_id\n    )[0].title;\n    DocCategory = DocTitle;\n  }\n  if (\n    doc.category_subcategory_data &&\n    doc.category_subcategory_data.category_subcategory_Data_id.length > 0 &&\n    documentCategories.documentFields\n  ) {\n    console.log({ doc });\n    DocField = documentCategories.documentFields.filter(\n      (c) =>\n        c._id === doc.category_subcategory_data?.category_subcategory_Data_id\n    )[0].title;\n    DocTitle += \" in \" + DocField;\n  }\n\n  return {\n    category: DocCategory,\n    sub_category: DocSubCategory,\n    field: DocField,\n    main: DocTitle,\n  };\n};\n\nexport const isClaimAllowed = (\n  allClaim: CandidateClaimInterface[],\n  period_id: string,\n  claimOnId: string\n): boolean => {\n  if (\n    allClaim.find(\n      (item) =>\n        item.period_id === period_id && item.claiming_on_id === claimOnId\n    )\n  ) {\n    return false;\n  }\n  return true;\n};\n\ntype ClaimFormProps = {\n  // FOR SHORTCUT BUTTONS CALL\n  claim_type?: PlansTypeKeys;\n  file_id?: string;\n  // REQUIRED PROPS\n  formState: boolean;\n  setFormState: (value: boolean, response?: boolean) => void;\n  auth: Auth;\n  sessionPlan: SessionPlanReducerInterface;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  courses: course[] | null;\n  loadCourses: Function;\n  getMyAnswers: Function;\n  getMyPlacement: Function;\n  getClaimReasons: Function;\n  getActiveSessionPlan: Function;\n  createClaim: Function;\n  GetClaimingTypes: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  getMyRejectedApplications: Function;\n  getMyRejectedDocuments: Function;\n  getMyClaims: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype ClaimFormState = {\n  loading: boolean;\n  loadingForm: boolean;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  thisClaimType: PlansTypeKeys | null;\n  thisClaimTypeId: string;\n  claimComment: string;\n  claimFileId: string;\n  chooseClaimFile: boolean;\n  chooseClaimReason: boolean;\n  claimReason: claimReasonInterface | null;\n  myPlacement: candidatePlacementInterface | null;\n  viewThisFile: string;\n  formType: \"DEFAULT\" | \"PROPS\";\n  alertError: string | null;\n  activeSession: SessionPlanInterface | null;\n};\n\nclass ClaimForm extends Component<ClaimFormProps, ClaimFormState> {\n  constructor(props: ClaimFormProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingForm: false,\n      formError: null,\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      claimFileId: \"\",\n      chooseClaimFile: false,\n      viewThisFile: \"\",\n      formType: \"DEFAULT\",\n      alertError: null,\n      activeSession: null,\n      myPlacement: this.props.claiming.myPlacement,\n      chooseClaimReason: false,\n      claimReason: null,\n    };\n  }\n\n  isDocumentIdValid = (\n    documents: DocumentClaimUser[],\n    doc_id: string\n  ): {\n    status: boolean;\n    msg: string;\n    alert: PopupAlertTheme;\n  } => {\n    let doc = documents.find((item) => item.doc_id === doc_id);\n    if (doc) {\n      // CHECK IF DOCUMENT HAS REJECTED STATUS\n      if (doc.validated_by.validation_status !== \"rejected\") {\n        return {\n          status: false,\n          msg: \"Only rejected document are allowed for claim\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n      // CHECK IF DOCUMENT HAS ALREADY CLAIMED ON\n      if (\n        this.props.claiming.myClaims &&\n        this.state.activeSession &&\n        isClaimAllowed(\n          this.props.claiming.myClaims,\n          this.state.activeSession.session_plan_id,\n          doc_id\n        )\n      ) {\n        return {\n          status: false,\n          msg: \"This document already in claiming list!\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n      return { status: true, msg: \"\", alert: PopupAlertTheme.success };\n    } else {\n      return {\n        status: false,\n        msg: \"Invalid document id\",\n        alert: PopupAlertTheme.warning,\n      };\n    }\n    // return {\n    //   status: false,\n    //   msg: \"No Documents, please try again\",\n    //   alert: PopupAlertTheme.info,\n    // };\n  };\n\n  isApplicationIdValid = (\n    applications: claimApplicationsInterface[],\n    app_id: string\n  ): {\n    status: boolean;\n    msg: string;\n    alert: PopupAlertTheme;\n  } => {\n    let app = applications.find((item) => item.application_id === app_id);\n    console.log(\"====================================\");\n    console.log({ app, app_id });\n    console.log(\"====================================\");\n    if (app) {\n      // CHECK IF DOCUMENT HAS REJECTED STATUS\n      if (app.application_status !== ApplicationStates.Rejected) {\n        return {\n          status: false,\n          msg: \"Only rejected application are allowed for claim\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n      // CHECK IF DOCUMENT HAS ALREADY CLAIMED ON\n      if (\n        this.props.claiming.myClaims &&\n        this.state.activeSession &&\n        isClaimAllowed(\n          this.props.claiming.myClaims,\n          this.state.activeSession.session_plan_id,\n          app.application_id\n        )\n      ) {\n        return {\n          status: false,\n          msg: \"This application already in claiming list!\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n      return { status: true, msg: \"\", alert: PopupAlertTheme.info };\n    } else {\n      return {\n        status: false,\n        msg: \"Invalid application id\",\n        alert: PopupAlertTheme.warning,\n      };\n    }\n    // return {\n    //   status: false,\n    //   msg: \"No Application, please try again!\",\n    //   alert: PopupAlertTheme.info,\n    // };\n  };\n\n  setLoading = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  setLoadingForm = (state: boolean) => {\n    this.setState({ loadingForm: state });\n  };\n\n  setFormError = (\n    data: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: data });\n  };\n\n  setAlertError = (data: string | null) => {\n    this.setState({ alertError: data });\n  };\n\n  setClaimFileId = (data: string) => {\n    this.setState({ claimFileId: data });\n  };\n\n  setViewThisFile = (data: string) => {\n    this.setState({ viewThisFile: data });\n  };\n\n  setChooseClaimFile = (data: boolean) => {\n    this.setState({ chooseClaimFile: data });\n  };\n\n  setChooseClaimReason = (data: boolean) => {\n    this.setState({ chooseClaimReason: data });\n  };\n\n  setClaimReason = (value: claimReasonInterface | null) => {\n    this.setState({ claimReason: value });\n  };\n\n  setClaimComment = (data: string) => {\n    this.setState({ claimComment: data });\n  };\n\n  isClaimTypeOpen = (\n    thisSession: SessionPlanInterface,\n    thisType: PlansTypeKeys\n  ): boolean => {\n    let data: PlansInterface | undefined;\n    if (thisType === PlansTypeKeys.APPLICATION) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.APPLICATION\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    } else if (thisType === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.DOCUMENT_VALIDATION\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    } else if (thisType === PlansTypeKeys.PLACEMENT_TRANSFER) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.PLACEMENT_TRANSFER\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  isClaimBtnValid = (thisSession: SessionPlanInterface) => {\n    if (this.props.file_id || this.props.claim_type) {\n      // CHECK IF CLAIM TYPE && CLAIM FILE PROPS ARE PASSED PROPS\n      if (!this.props.claim_type) {\n        this.props.PushPopupAlert({\n          title: \"Claim type is required!\",\n          theme: PopupAlertTheme.warning,\n        });\n        this.props.setFormState(false);\n        this.setState({\n          claimFileId: \"\",\n          thisClaimType: null,\n          thisClaimTypeId: \"\",\n          claimComment: \"\",\n          chooseClaimFile: false,\n          formType: \"DEFAULT\",\n          viewThisFile: \"\",\n          formError: null,\n        });\n      } else if (!this.props.file_id) {\n        this.props.PushPopupAlert({\n          title: \"Claim file is required!\",\n          theme: PopupAlertTheme.warning,\n        });\n        this.props.setFormState(false);\n        this.setState({\n          claimFileId: \"\",\n          thisClaimType: null,\n          thisClaimTypeId: \"\",\n          claimComment: \"\",\n          chooseClaimFile: false,\n          formType: \"DEFAULT\",\n          viewThisFile: \"\",\n          formError: null,\n        });\n      } else if (!this.isClaimTypeOpen(thisSession, this.props.claim_type)) {\n        // IF CLAIM TYPE && CLAIM FILE PROPS ARE PASSED PROPS\n        // CHECK IF CLAIM TYPE IS OPEN ================\n        this.props.PushPopupAlert({\n          title: \"Claim type is closed!\",\n          theme: PopupAlertTheme.warning,\n        });\n        this.props.setFormState(false);\n        this.setState({\n          claimFileId: \"\",\n          thisClaimType: null,\n          thisClaimTypeId: \"\",\n          claimComment: \"\",\n          chooseClaimFile: false,\n          formType: \"DEFAULT\",\n          viewThisFile: \"\",\n          formError: null,\n        });\n      }\n    }\n  };\n\n  displayClaimType = (claimType: PlansTypeKeys): string => {\n    let result: string = \"\";\n    switch (claimType) {\n      case PlansTypeKeys.APPLICATION:\n        result = \"application\";\n        break;\n      case PlansTypeKeys.DOCUMENT_VALIDATION:\n        result = \"document\";\n        break;\n      case PlansTypeKeys.EXAMINATION:\n        result = \"exam\";\n        break;\n      case PlansTypeKeys.MARKS_PUBLICATION:\n        result = \"marks publication\";\n        break;\n      case PlansTypeKeys.PLACEMENT_TRANSFER:\n        result = \"placement\";\n        break;\n      default:\n        result = \"\";\n        break;\n    }\n\n    return result;\n  };\n\n  isClaimsAllowed = (\n    thisPeriod: SessionPlanInterface\n  ): {\n    status: boolean;\n    msg: string;\n    alert: PopupAlertTheme;\n  } => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (\n      this.props.claiming.myClaims === null &&\n      this.props.file_id &&\n      this.props.claim_type\n    ) {\n      this.props.getMyClaims(\n        this.props.auth.user.user_id,\n        thisPeriod.session_plan_id,\n        (status: boolean, msg: string, data?: CandidateClaimInterface[]) => {\n          // !status && setLoadingClaims(status);\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          if (data) {\n            let claim = data.find(\n              (item) =>\n                item.claiming_on_id === this.props.file_id &&\n                item.period_id === thisPeriod.session_plan_id\n            );\n            if (claim) {\n              return {\n                status: false,\n                msg: `You have already claimed on this ${this.displayClaimType(\n                  this.props.claim_type!\n                )}`,\n                alert: PopupAlertTheme.info,\n              };\n            }\n          }\n        }\n      );\n    } else if (\n      this.props.claiming.myClaims &&\n      this.props.file_id &&\n      this.props.claim_type\n    ) {\n      let claim = this.props.claiming.myClaims.find(\n        (item) =>\n          item.claiming_on_id === this.props.file_id &&\n          item.period_id === thisPeriod.session_plan_id\n      );\n      if (claim) {\n        return {\n          status: false,\n          msg: `You have already claimed on this ${this.displayClaimType(\n            this.props.claim_type!\n          )}`,\n          alert: PopupAlertTheme.info,\n        };\n      }\n    }\n\n    return {\n      status: true,\n      msg: \"\",\n      alert: PopupAlertTheme.success,\n    };\n  };\n\n  loadExamAnswers = (\n    activeSessionPlan: SessionPlanInterface,\n    user_id: string\n  ) => {\n    this.props.getMyAnswers(\n      activeSessionPlan.session_plan_id,\n      user_id,\n      (status: boolean, msg: string, data: SessionPlanInterface | \"none\") => {\n        this.setLoading(status);\n        if (!status && msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n        if (data) {\n          console.log(\"====================================\");\n          console.log({ loadExamAnswers: data });\n          console.log(\"====================================\");\n        }\n      }\n    );\n  };\n\n  componentDidMount = () => {\n    if (\n      this.props.sessionPlan.activeSessionPlan === null ||\n      this.props.sessionPlan.activeSessionPlan === \"none\"\n    ) {\n      this.props.getActiveSessionPlan(\n        (status: boolean, msg: string, data: SessionPlanInterface | \"none\") => {\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          if (data && data === \"none\") {\n            this.props.PushPopupAlert({\n              title: \"No session active session\",\n              theme: PopupAlertTheme.danger,\n            });\n            this.props.setFormState(false);\n            this.setState({\n              claimFileId: \"\",\n              thisClaimType: null,\n              thisClaimTypeId: \"\",\n              claimComment: \"\",\n              chooseClaimFile: false,\n              formType: \"DEFAULT\",\n              viewThisFile: \"\",\n              formError: null,\n            });\n          } else if (data) {\n            let _isClaimsAllowed = this.isClaimsAllowed(data);\n            if (!_isClaimsAllowed.status) {\n              this.props.PushPopupAlert({\n                title: _isClaimsAllowed.msg,\n                theme: _isClaimsAllowed.alert,\n              });\n              this.props.setFormState(false);\n            }\n            this.setState({ activeSession: data });\n            this.loadExamAnswers(data, this.props.auth.user.user_id);\n            this.isClaimBtnValid(data);\n          }\n        }\n      );\n    } else {\n      this.setState({\n        activeSession: this.props.sessionPlan.activeSessionPlan,\n      });\n      this.isClaimBtnValid(this.props.sessionPlan.activeSessionPlan);\n      let _isClaimsAllowed = this.isClaimsAllowed(\n        this.props.sessionPlan.activeSessionPlan\n      );\n      if (!_isClaimsAllowed.status) {\n        this.props.PushPopupAlert({\n          title: _isClaimsAllowed.msg,\n          theme: _isClaimsAllowed.alert,\n        });\n        this.props.setFormState(false);\n      }\n      this.loadExamAnswers(\n        this.props.sessionPlan.activeSessionPlan,\n        this.props.auth.user.user_id\n      );\n      this.setLoading(false);\n    }\n\n    if (this.props.documentReducer.documentCategory === null) {\n      this.props.getDocumentCategory();\n    }\n    if (this.props.documentReducer.documentSubCategory === null) {\n      this.props.getDocumentSubCategory();\n    }\n    if (this.props.documentReducer.documentFields === null) {\n      this.props.getDocumentFields();\n    }\n\n    if (this.props.claiming.candidateApplications === null) {\n      this.props.getMyRejectedApplications(\n        this.props.auth.user.user_id,\n        (status: boolean, msg: string, data?: claimApplicationsInterface[]) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data) {\n              // PROPS VALIDATION PROCESS ###############\n              if (\n                this.props.claim_type &&\n                this.props.file_id &&\n                this.state.formType === \"DEFAULT\"\n              ) {\n                if (this.props.claim_type === PlansTypeKeys.APPLICATION) {\n                  let _isApplicationIdValid = this.isApplicationIdValid(\n                    data,\n                    this.props.file_id\n                  );\n                  if (!_isApplicationIdValid.status) {\n                    this.props.PushPopupAlert({\n                      title: _isApplicationIdValid.msg,\n                      theme: _isApplicationIdValid.alert,\n                    });\n                    this.props.setFormState(false);\n                  } else {\n                    this.setState({\n                      thisClaimType: this.props.claim_type,\n                      claimFileId: this.props.file_id,\n                      formType: \"PROPS\",\n                    });\n                  }\n                }\n              }\n            }\n          }\n        }\n      );\n    }\n\n    if (this.props.claiming.candidateDocuments === null) {\n      this.props.getMyRejectedDocuments(\n        (status: boolean, msg: string, data?: DocumentClaimUser[]) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data) {\n              // PROPS VALIDATION PROCESS ###############\n              if (\n                this.props.claim_type &&\n                this.props.file_id &&\n                this.state.formType === \"DEFAULT\"\n              ) {\n                if (\n                  this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION\n                ) {\n                  let _isDocumentIdValid = this.isDocumentIdValid(\n                    data,\n                    this.props.file_id\n                  );\n                  if (!_isDocumentIdValid.status) {\n                    this.props.PushPopupAlert({\n                      title: _isDocumentIdValid.msg,\n                      theme: _isDocumentIdValid.alert,\n                    });\n                    // setAlertError(_isDocumentIdValid.msg);\n                    this.props.setFormState(false);\n                  } else {\n                    this.setState({\n                      thisClaimType: this.props.claim_type,\n                      claimFileId: this.props.file_id,\n                      formType: \"PROPS\",\n                    });\n                  }\n                }\n              }\n            }\n          }\n        }\n      );\n    }\n\n    if (this.props.claiming.claimReasons === null) {\n      this.props.getClaimReasons((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (!status) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n\n    if (this.props.claiming.myPlacement === null) {\n      this.props.getMyPlacement(\n        this.props.auth.user.user_id,\n        (\n          status: boolean,\n          msg: string,\n          data?: candidatePlacementInterface | null\n        ) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          }\n          if (data) {\n            this.setState({ myPlacement: data });\n          }\n        }\n      );\n    }\n\n    // PROPS VALIDATION PROCESS ###############\n    if (\n      this.props.claim_type &&\n      this.props.file_id &&\n      this.state.formType === \"DEFAULT\"\n    ) {\n      this.setState({ thisClaimType: this.props.claim_type });\n      if (\n        this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION &&\n        this.props.claiming.candidateDocuments\n      ) {\n        let _isDocumentIdValid = this.isDocumentIdValid(\n          this.props.claiming.candidateDocuments,\n          this.props.file_id\n        );\n        if (!_isDocumentIdValid.status) {\n          this.props.PushPopupAlert({\n            title: _isDocumentIdValid.msg,\n            theme: _isDocumentIdValid.alert,\n          });\n          // setAlertError(_isDocumentIdValid.msg);\n          this.props.setFormState(false);\n        } else {\n          this.setState({\n            thisClaimType: this.props.claim_type,\n            claimFileId: this.props.file_id,\n            formType: \"PROPS\",\n          });\n        }\n      }\n      if (\n        this.props.claim_type === PlansTypeKeys.APPLICATION &&\n        this.props.claiming.candidateApplications\n      ) {\n        let _isApplicationIdValid = this.isApplicationIdValid(\n          this.props.claiming.candidateApplications,\n          this.props.file_id\n        );\n        if (!_isApplicationIdValid.status) {\n          this.props.PushPopupAlert({\n            title: _isApplicationIdValid.msg,\n            theme: _isApplicationIdValid.alert,\n          });\n          this.props.setFormState(false);\n        } else {\n          this.setState({\n            thisClaimType: this.props.claim_type,\n            claimFileId: this.props.file_id,\n            formType: \"PROPS\",\n          });\n        }\n      }\n    }\n\n    if (\n      this.props.courses === null ||\n      (this.props.courses.length === 0 && this.state.loading)\n    ) {\n      this.props.loadCourses(this.setLoading);\n      this.setLoading(false);\n    } else {\n      this.setLoading(false);\n    }\n  };\n\n  getDocumentById = (\n    documents: DocumentClaimUser[],\n    doc_id: string\n  ): DocumentClaimUser => {\n    return documents.filter((item) => item.doc_id === doc_id)[0];\n  };\n\n  getApplicationById = (\n    applications: claimApplicationsInterface[],\n    application_id: string\n  ): claimApplicationsInterface => {\n    return applications.filter(\n      (item) => item.application_id === application_id\n    )[0];\n  };\n\n  getExamById = (\n    exams: ClaimExamResultsDetails[],\n    answer_sheet_id: string\n  ): ClaimExamResultsDetails | undefined => {\n    return exams.find((item) => item.answer_sheet_id === answer_sheet_id);\n  };\n\n  getValidation = (\n    thisId: string\n  ): {\n    old_reason: string;\n    old_status: string;\n    old_evaluated_by: string;\n  } => {\n    let result: {\n      old_reason: string;\n      old_status: string;\n      old_evaluated_by: string;\n    } = { old_reason: \"\", old_status: \"\", old_evaluated_by: \"\" };\n\n    if (\n      this.state.thisClaimType === PlansTypeKeys.DOCUMENT_VALIDATION &&\n      this.props.claiming.candidateDocuments\n    ) {\n      result = {\n        old_reason: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.comment,\n        old_status: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.validation_status,\n        old_evaluated_by: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.user_id,\n      };\n    } else if (\n      this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n      this.props.claiming.candidateApplications\n    ) {\n      result = {\n        old_reason: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.comment,\n        old_status: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.application_status,\n        old_evaluated_by: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.user_id,\n      };\n    }\n\n    return result;\n  };\n\n  cleanToClose = (response?: boolean) => {\n    if (this.state.formType === \"PROPS\" && response) {\n      this.props.setFormState(false, response);\n    } else {\n      this.props.setFormState(false);\n    }\n    this.setState({\n      claimFileId: \"\",\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      chooseClaimFile: false,\n      formType: \"DEFAULT\",\n      viewThisFile: \"\",\n      formError: null,\n    });\n  };\n\n  loadUserById = async (user_id: string, callback: Function) => {\n    if (isEmptyOrSpaces(user_id)) {\n      return this.props.PushPopupAlert({\n        title: \"No user id provided\",\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    try {\n      setAxiosToken();\n      const res = await axios.get<UserInterface>(\n        `${API.AUTH}/users/${user_id}`\n      );\n      console.log(\"====================================\");\n      console.log({ loadUserById: res });\n      console.log(\"====================================\");\n      if (res) {\n        callback(res.data);\n      }\n    } catch (error) {\n      console.error({ error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!this.state.thisClaimType) {\n      return this.setFormError({\n        element: \"claim_type\",\n        msg: \"Claim type is required!\",\n      });\n    }\n    if (isEmptyOrSpaces(this.state.claimFileId)) {\n      return this.setFormError({\n        element: \"claim_file\",\n        msg: `Please select ${this.state.thisClaimType.toLocaleLowerCase()} you are claiming on!`,\n      });\n    }\n\n    if (!this.state.claimReason) {\n      return this.setFormError({\n        element: \"claim_reason\",\n        msg: `Please select the reason of your claim!`,\n      });\n    }\n\n    if (isEmptyOrSpaces(this.state.claimComment)) {\n      return this.setFormError({\n        element: \"claim_comment\",\n        msg: `Claim comment is required!`,\n      });\n    }\n\n    if (!this.state.activeSession) {\n      return this.setAlertError(`No active claiming session is available!`);\n    }\n\n    this.setLoadingForm(true);\n    let old_evaluator_email: string = \"info@system.com\";\n    let old_evaluator_name: string = \"System\";\n    let evaluator_email: string = \"\";\n    let evaluator_name: string = \"\";\n\n    if (this.state.thisClaimType !== PlansTypeKeys.EXAMINATION) {\n      await this.loadUserById(\n        this.getValidation(this.state.claimFileId).old_evaluated_by,\n        (data: UserInterface) => {\n          old_evaluator_email = data.email;\n          old_evaluator_name =\n            data.user_info.fname + \" \" + data.user_info.lname;\n        }\n      );\n    }\n\n    try {\n      console.log(\"====================================\");\n      console.log({\n        claiming_on_id: this.state.claimFileId,\n        type_key: this.state.thisClaimType,\n        user: this.props.auth.user.user_id,\n        period_id: this.state.activeSession.session_plan_id,\n        default_claim_resaons: this.state.claimReason.id,\n        reason: this.state.claimComment,\n        old_reason:\n          this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n          this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n            ? \"System\"\n            : this.getValidation(this.state.claimFileId).old_reason,\n        old_status:\n          this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n          this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n            ? \"Failed\"\n            : this.getValidation(this.state.claimFileId).old_status,\n        old_evaluated_by:\n          this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n          this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n            ? \"\"\n            : this.getValidation(this.state.claimFileId).old_evaluated_by,\n        old_evaluator_email,\n        old_evaluator_name,\n        evaluator_email,\n        evaluator_name,\n      });\n      console.log(\"====================================\");\n\n      setAxiosToken();\n      const res = await axios.post<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/create`,\n        {\n          claiming_on_id: this.state.claimFileId,\n          type_key: this.state.thisClaimType,\n          user: this.props.auth.user.user_id,\n          period_id: this.state.activeSession.session_plan_id,\n          default_claim_resaons: this.state.claimReason.id,\n          reason: this.state.claimComment,\n          old_reason:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"System\"\n              : this.getValidation(this.state.claimFileId).old_reason,\n          old_status:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"Failed\"\n              : this.getValidation(this.state.claimFileId).old_status,\n          old_evaluated_by:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"\"\n              : this.getValidation(this.state.claimFileId).old_evaluated_by,\n          old_evaluator_email,\n          old_evaluator_name,\n          evaluator_email,\n          evaluator_name,\n        }\n      );\n      console.log({ createClaim: res.data });\n      if (res.status === 201 || res.status === 200) {\n        this.props.createClaim(res.data);\n        this.props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        this.cleanToClose(true);\n      }\n    } catch (error) {\n      console.error({ error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.setLoadingForm(false);\n  };\n\n  selectClaimType = (thisClaim: string) => {\n    this.setState({\n      thisClaimType: isEmptyOrSpaces(thisClaim)\n        ? null\n        : (thisClaim as PlansTypeKeys),\n    });\n  };\n\n  generateChooseFileTitle = (thisClaimType: PlansTypeKeys | null): string => {\n    let result: string = \"\";\n\n    switch (thisClaimType) {\n      case PlansTypeKeys.APPLICATION:\n        result = `Select application you are claiming on?`;\n        break;\n      case PlansTypeKeys.DOCUMENT_VALIDATION:\n        result = `Select document you are claiming on?`;\n        break;\n      case PlansTypeKeys.EXAMINATION:\n        result = `Select exam you are claiming on?`;\n        break;\n      case PlansTypeKeys.MARKS_PUBLICATION:\n        result = `Select marks publication you are claiming on?`;\n        break;\n      case PlansTypeKeys.PLACEMENT_TRANSFER:\n        result = `Select placement you are claiming on?`;\n        break;\n      default:\n        result = \"Select file you are claiming on?\";\n        break;\n    }\n\n    return result;\n  };\n\n  allowedClaims = (): PlansTypeKeys[] => {\n    let result: PlansTypeKeys[] = [];\n    // Object.values(PlansTypeKeys);\n    if (PlansTypeKeys.APPLICATION) {\n    }\n\n    return result;\n  };\n\n  render() {\n    if (\n      this.state.loading ||\n      this.state.activeSession === null ||\n      (this.props.claiming.myClaims === null &&\n        this.props.file_id &&\n        this.props.claim_type)\n    ) {\n      return null;\n    }\n\n    return (\n      <div className=\"pb-3\">\n        {this.props.formState && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={(): void => {\n              !this.state.loadingForm &&\n                this.state.viewThisFile.length <= 0 &&\n                this.cleanToClose();\n              !this.state.loadingForm &&\n                this.state.viewThisFile.length > 0 &&\n                this.setViewThisFile(\"\");\n            }}\n            displayClose={true}\n            backDropClose={false}\n            title={\n              <div className=\"text-gray-900 font-bold text-xl md:ml-1\">\n                {this.state.viewThisFile.length <= 0 && \"Claiming form\"}\n                {this.state.viewThisFile.length > 0 &&\n                  this.state.thisClaimType ===\n                    PlansTypeKeys.DOCUMENT_VALIDATION &&\n                  \"Viewing document\"}\n                {this.state.viewThisFile.length > 0 &&\n                  this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n                  \"Viewing application\"}\n              </div>\n            }\n            widthSizeClass={\n              this.state.viewThisFile.length > 0\n                ? ModalSize.extraLarge\n                : ModalSize.medium\n            }\n            padding={{ title: true, body: false, footer: false }}\n          >\n            {/* CLAIM FORM ============================================== */}\n            {this.state.viewThisFile.length <= 0 && (\n              <form onSubmit={(e) => this.handleSubmit(e)}>\n                <div className=\"px-6 pb-3\">\n                  {this.state.alertError && (\n                    <div\n                      className=\"alert-warning cursor-pointer\"\n                      onClick={() => this.setAlertError(null)}\n                    >\n                      {this.state.alertError}\n                    </div>\n                  )}\n                  <div className=\"text-base text-gray-700 sm:text-lg\">\n                    {/* SELECT CLAIM TYPE ============================================== */}\n                    <div className=\"flex flex-col mb-2\">\n                      <label>Claim type</label>\n                      <select\n                        className={`rounded px-2 py-2 w-full bg-white focus:outline-none ${\n                          this.state.formType === \"PROPS\" &&\n                          \"cursor-not-allowed\"\n                        } ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_type\"\n                            ? \"border-red-500\"\n                            : \"border-gray-500\"\n                        } border-2`}\n                        onChange={(e: React.ChangeEvent<HTMLSelectElement>) => {\n                          this.selectClaimType(e.target.value);\n                          this.setClaimFileId(\"\");\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_type\" &&\n                            this.setFormError(null);\n                        }}\n                        value={\n                          this.state.thisClaimType\n                            ? this.state.thisClaimType\n                            : \"\"\n                        }\n                        disabled={\n                          this.state.loadingForm ||\n                          this.state.formType === \"PROPS\"\n                        }\n                      >\n                        <option value=\"\">Choose claim type</option>\n                        {Object.values(PlansTypeKeys).map((item, index) => (\n                          <option\n                            value={item}\n                            key={index + item}\n                            className={`${\n                              item === PlansTypeKeys.MARKS_PUBLICATION ||\n                              item === PlansTypeKeys.PLACEMENT_TRANSFER\n                                ? \"hidden\"\n                                : \"block\"\n                            }`}\n                          >\n                            {capitalizeFirstLetter(\n                              item.toLocaleLowerCase().replace(/_/g, \" \")\n                            )}\n                          </option>\n                        ))}\n                      </select>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_type\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END SELECT CLAIM TYPE ============================================== */}\n\n                    {/* SELECT FILE TO CLAIM ON ============================================== */}\n                    <div className=\"flex flex-col mb-2\">\n                      <label>\n                        {this.generateChooseFileTitle(this.state.thisClaimType)}\n                      </label>\n                      <div\n                        className={`text-left bg-white border-2 ${\n                          this.state.formType !== \"PROPS\"\n                            ? \"border-gray-700\"\n                            : \"border-gray-400 text-gray-500\"\n                        } rounded w-full ${\n                          this.state.chooseClaimFile ? \"h-64\" : \"h-10\"\n                        } ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_file\"\n                            ? \"border-red-500\"\n                            : \"\"\n                        } border-2 ${\n                          this.state.thisClaimType &&\n                          !this.state.chooseClaimFile &&\n                          this.state.formType !== \"PROPS\"\n                            ? \"cursor-pointer\"\n                            : !this.state.chooseClaimFile &&\n                              \"cursor-not-allowed\"\n                        }`}\n                        title={\n                          !this.state.thisClaimType\n                            ? \"Choose claim type first!\"\n                            : \"\"\n                        }\n                        onClick={() => {\n                          this.state.formType === \"DEFAULT\" &&\n                            this.state.thisClaimType &&\n                            !this.state.chooseClaimFile &&\n                            this.setChooseClaimFile(true);\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_file\" &&\n                            this.setFormError(null);\n                        }}\n                      >\n                        {/* DISPLAYING FILTERED SELECTING FILE ============================ */}\n                        {this.state.claimFileId.length > 0 &&\n                        !this.state.chooseClaimFile ? (\n                          <p className=\"my-1 mx-2\">\n                            {this.state.thisClaimType ===\n                              PlansTypeKeys.DOCUMENT_VALIDATION &&\n                              this.props.claiming.candidateDocuments &&\n                              ClaimGetDocTitle(\n                                this.props.documentReducer,\n                                this.getDocumentById(\n                                  this.props.claiming.candidateDocuments,\n                                  this.state.claimFileId\n                                )\n                              ).main}\n                            {this.state.thisClaimType ===\n                              PlansTypeKeys.APPLICATION &&\n                              this.props.claiming.candidateApplications &&\n                              this.getApplicationById(\n                                this.props.claiming.candidateApplications,\n                                this.state.claimFileId\n                              ).position.position_title}\n                            {this.state.thisClaimType ===\n                              PlansTypeKeys.EXAMINATION &&\n                              this.props.courses &&\n                              this.props.claiming.myAnswer &&\n                              getCourseIdBySheetId(\n                                this.props.claiming.myAnswer,\n                                this.state.claimFileId\n                              ) &&\n                              getCourseById(\n                                this.props.courses,\n                                getCourseIdBySheetId(\n                                  this.props.claiming.myAnswer,\n                                  this.state.claimFileId\n                                )!.course\n                              ) &&\n                              getCourseById(\n                                this.props.courses,\n                                getCourseIdBySheetId(\n                                  this.props.claiming.myAnswer,\n                                  this.state.claimFileId\n                                )!.course\n                              )!.course_name}\n\n                            {this.state.thisClaimType ===\n                              PlansTypeKeys.PLACEMENT_TRANSFER &&\n                              this.state.myPlacement &&\n                              !isEmptyOrSpaces(this.state.claimFileId) &&\n                              \"Placed on \" +\n                                this.state.myPlacement.placed.school\n                                  .school_name}\n                          </p>\n                        ) : (\n                          !this.state.chooseClaimFile && (\n                            <p className=\"my-1 mx-2\">\n                              Select Claim{\" \"}\n                              {this.state.thisClaimType &&\n                                this.state.thisClaimType\n                                  .toLocaleLowerCase()\n                                  .replace(/_/g, \" \")}\n                            </p>\n                          )\n                        )}\n                        {/* END DISPLAYING FILTERED SELECTING FILE ============================ */}\n\n                        {/* LISTING OF REJECTED DOCUMENTS ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.DOCUMENT_VALIDATION &&\n                          this.props.claiming.candidateDocuments &&\n                          this.props.claiming.myClaims &&\n                          this.props.sessionPlan.activeSessionPlan &&\n                          this.props.sessionPlan.activeSessionPlan !==\n                            \"none\" && (\n                            <FormDocumentList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              viewThisFile={this.state.viewThisFile}\n                              candidateDocuments={\n                                this.props.claiming.candidateDocuments\n                              }\n                              documentCategories={this.props.documentReducer}\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.sessionPlan.activeSessionPlan\n                              }\n                            />\n                          )}\n                        {/* END LISTING OF REJECTED DOCUMENTS ============================ */}\n                        {/* ---------------------------------------------------------- */}\n                        {/* LISTING OF REJECTED APPLICATION ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.APPLICATION &&\n                          this.props.claiming.candidateApplications &&\n                          this.props.claiming.myClaims &&\n                          this.props.sessionPlan.activeSessionPlan &&\n                          this.props.sessionPlan.activeSessionPlan !==\n                            \"none\" && (\n                            <FormApplicationList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              viewThisFile={this.state.viewThisFile}\n                              candidateApplications={\n                                this.props.claiming.candidateApplications\n                              }\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.sessionPlan.activeSessionPlan\n                              }\n                            />\n                          )}\n                        {/* END LISTING OF REJECTED APPLICATION ============================ */}\n                        {/* ---------------------------------------------------------- */}\n                        {/* LISTING OF FAILED EXAM ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.EXAMINATION &&\n                          this.props.claiming.myAnswer &&\n                          this.props.claiming.myClaims &&\n                          this.props.sessionPlan.activeSessionPlan &&\n                          this.props.sessionPlan.activeSessionPlan !==\n                            \"none\" && (\n                            <FormExamList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              viewThisFile={this.state.viewThisFile}\n                              candidateAnswers={this.props.claiming.myAnswer}\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.sessionPlan.activeSessionPlan\n                              }\n                            />\n                          )}\n                        {/* END LISTING OF FAILED EXAM ============================ */}\n                        {/* ---------------------------------------------------------- */}\n                        {/* PENDING PLACMENT ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.PLACEMENT_TRANSFER &&\n                          this.props.claiming.myClaims &&\n                          this.props.sessionPlan.activeSessionPlan &&\n                          this.props.sessionPlan.activeSessionPlan !==\n                            \"none\" && (\n                            <FormPlacementList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              viewThisFile={this.state.viewThisFile}\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.sessionPlan.activeSessionPlan\n                              }\n                              myPlacement={this.state.myPlacement}\n                            />\n                          )}\n                        {/* END LISTING OF FAILED EXAM ============================ */}\n                      </div>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_file\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END SELECT FILE TO CLAIM ON ============================================== */}\n\n                    {/* CLAIM REASONS ========================================== */}\n                    <div className=\"flex flex-col mb-2\">\n                      <label>Choose reason of your claim</label>\n                      <div\n                        className={`text-left bg-white border-2 border-gray-700 rounded w-full ${\n                          this.state.chooseClaimReason ? \"h-64\" : \"h-auto\"\n                        } ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_reason\"\n                            ? \"border-red-500\"\n                            : \"\"\n                        } border-2 ${\n                          this.props.claiming.claimReasons === null\n                            ? \"cursor-wait\"\n                            : \"cursor-pointer\"\n                        }`}\n                        title=\"Choose the reason for your claim!\"\n                        onClick={() => {\n                          !this.state.chooseClaimReason &&\n                            this.setState({ chooseClaimReason: true });\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_reason\" &&\n                            this.setFormError(null);\n                        }}\n                      >\n                        {/* DISPLAYING SELECTED REASON ============================ */}\n                        {this.state.claimReason &&\n                        !this.state.chooseClaimReason ? (\n                          <p className=\"my-1 mx-2\">\n                            {this.state.claimReason.reason}\n                          </p>\n                        ) : (\n                          !this.state.chooseClaimReason && (\n                            <p className=\"my-1 mx-2\">Select reason</p>\n                          )\n                        )}\n                        {/* END DISPLAYING SELECTED REASON ============================ */}\n\n                        {/* LISTING OF CLAIM REASONS ============================ */}\n                        {this.state.chooseClaimReason &&\n                          this.props.claiming.claimReasons && (\n                            <ChooseReason\n                              setChooseClaimReason={this.setChooseClaimReason}\n                              setClaimReason={this.setClaimReason}\n                              claimReason={this.state.claimReason}\n                              allClaimReasons={this.props.claiming.claimReasons}\n                            />\n                          )}\n                        {/* END LISTING OF CLAIM REASONS ============================ */}\n                      </div>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_reason\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END CLAIM REASONS ========================================== */}\n\n                    {/* CLAIM COMMENT ============================================== */}\n                    <div className=\"flex flex-col\">\n                      <label>Comment</label>\n                      <textarea\n                        className={`text-left input-white w-20 inline-block ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_comment\"\n                            ? \"border-red-500\"\n                            : \"border-gray-500\"\n                        } border-2`}\n                        placeholder={`Claim comment`}\n                        style={{ resize: \"none\" }}\n                        value={this.state.claimComment}\n                        onChange={(e) => {\n                          this.setClaimComment(e.target.value);\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_comment\" &&\n                            this.setFormError(null);\n                        }}\n                        rows={3}\n                        disabled={this.state.loadingForm}\n                      ></textarea>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_comment\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END CLAIM COMMENT ============================================== */}\n                  </div>\n\n                  <div className=\"pt-3 flex justify-between\">\n                    <button\n                      onClick={() => this.cleanToClose()}\n                      className={`btn bg-gray-400 text-white hover:bg-gray-600 focus:outline-none ${\n                        this.state.loadingForm && \"cursor-not-allowed\"\n                      }`}\n                      type=\"button\"\n                      disabled={this.state.loadingForm}\n                    >\n                      Exit\n                    </button>\n                    <button\n                      className={`btn bg-primary text-white hover:bg-blue-600 focus:outline-none ${\n                        this.state.loadingForm && \"cursor-wait\"\n                      }`}\n                      type=\"submit\"\n                      disabled={this.state.loadingForm}\n                    >\n                      {this.state.loadingForm ? \"Loading...\" : \"Claim\"}\n                    </button>\n                  </div>\n                </div>\n              </form>\n            )}\n            {/* END CLAIM FORM ============================================== */}\n\n            {/* CLAIM DOCUMENT VIEW ============================================== */}\n            {this.state.viewThisFile.length > 0 &&\n              this.props.claiming.candidateDocuments &&\n              this.state.thisClaimType ===\n                PlansTypeKeys.DOCUMENT_VALIDATION && (\n                <DocFormView\n                  thisDoc={this.getDocumentById(\n                    this.props.claiming.candidateDocuments,\n                    this.state.viewThisFile\n                  )}\n                  setViewThisFile={this.setViewThisFile}\n                  documentCategories={this.props.documentReducer}\n                  setChooseClaimFile={this.setChooseClaimFile}\n                  setClaimFileId={this.setClaimFileId}\n                />\n              )}\n            {/* END CLAIM DOCUMENT VIEW ============================================== */}\n            {/* ------------------------------------------------------------------------- */}\n            {/* CLAIM APPLICATION VIEW ============================================== */}\n            {this.state.viewThisFile.length > 0 &&\n              this.props.claiming.candidateApplications &&\n              this.state.thisClaimType === PlansTypeKeys.APPLICATION && (\n                <ApplicationFormView\n                  thisApplication={this.getApplicationById(\n                    this.props.claiming.candidateApplications,\n                    this.state.viewThisFile\n                  )}\n                  documentCategories={this.props.documentReducer}\n                  setChooseClaimFile={this.setChooseClaimFile}\n                  setClaimFileId={this.setClaimFileId}\n                  setViewThisFile={this.setViewThisFile}\n                />\n              )}\n            {/* END CLAIM APPLICATION VIEW ============================================== */}\n            {/* ------------------------------------------------------------------------- */}\n            {/* CLAIM EXAMINATION VIEW ============================================== */}\n            {this.state.viewThisFile.length > 0 &&\n              this.props.claiming.myAnswer &&\n              this.state.thisClaimType === PlansTypeKeys.EXAMINATION &&\n              this.getExamById(\n                this.props.claiming.myAnswer,\n                this.state.viewThisFile\n              ) && (\n                <ExaminationFormView\n                  thisAnswerSheet={\n                    this.getExamById(\n                      this.props.claiming.myAnswer,\n                      this.state.viewThisFile\n                    )!\n                  }\n                  setChooseClaimFile={this.setChooseClaimFile}\n                  setClaimFileId={this.setClaimFileId}\n                  setViewThisFile={this.setViewThisFile}\n                  // thisAnswerSheet={undefined}\n                  // setViewThisFile={undefined}\n                  // setChooseClaimFile={undefined}\n                  // setClaimFileId={undefined}\n                />\n              )}\n            {/* END CLAIM EXAMINATION VIEW ============================================== */}\n          </Modal>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  document,\n  claiming,\n  sessionPlan,\n  course,\n}: StoreState): {\n  auth: Auth;\n  sessionPlan: SessionPlanReducerInterface;\n  documentReducer: DocumentReducerInterface;\n  claiming: ClaimingReducerType;\n  courses: course[] | null;\n} => {\n  return {\n    auth: auth,\n    sessionPlan,\n    documentReducer: document,\n    claiming,\n    courses: course.courses,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getActiveSessionPlan,\n  loadCourses,\n  getMyClaims,\n  getClaimReasons,\n  getMyAnswers,\n  getMyPlacement,\n  createClaim,\n  GetClaimingTypes,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  PushPopupAlert,\n})(ClaimForm);\n","import { CalculatedMultipleChoiceQuestionAnswerInterface, MatchingQuestionAnswerInterface, MultipleChoiceQuestionAnswerInterface, NumericalQuestionAnswerInterface, ShortAnswerQuestionAnswerInterface, SimpleCalculatedQuestionAnswerInterface, TrueFalseQuestionAnswerInterface } from \"../../../interfaces/question\";\n\nexport const toMultipleChoice = (answers: any[]): MultipleChoiceQuestionAnswerInterface[] => {\n  let res: MultipleChoiceQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [...res, {\n      id: answer.id,\n      value: answer.value,\n      status: answer.status,\n    }]\n  }\n  return res;\n}\n\nexport const toTrueFalse = (answers: any[]): TrueFalseQuestionAnswerInterface[] => {\n  let res: TrueFalseQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [...res, {\n      id: answer.id,\n      value: answer.value,\n      status: answer.status,\n    }]\n  }\n  return res;\n}\n\nexport const toMatching = (answers: any[]): MatchingQuestionAnswerInterface[] => {\n  let res: MatchingQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [...res, {\n      id: answer.id,\n      value: answer.value,\n      status: answer.status,\n    }]\n  }\n  return res;\n}\n\nexport const toSimpleCalculated = (answers: any[]): SimpleCalculatedQuestionAnswerInterface[] => {\n  let res: SimpleCalculatedQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [...res, {\n      id: answer.id,\n      value: answer.value,\n      status: answer.status,\n    }]\n  }\n  return res;\n}\n\nexport const toShortAnswer = (answers: any[]): ShortAnswerQuestionAnswerInterface[] => {\n  let res: ShortAnswerQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [...res, {\n      id: answer.id,\n      value: answer.value,\n      status: answer.status,\n    }]\n  }\n  return res;\n}\n\nexport const toNumerical = (answers: any[]): NumericalQuestionAnswerInterface[] => {\n  let res: NumericalQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [...res, {\n      id: answer.id,\n      value: answer.value,\n      status: answer.status,\n    }]\n  }\n  return res;\n}\n\nexport const toCalculatedMultipleChoice = (answers: any[]): CalculatedMultipleChoiceQuestionAnswerInterface[] => {\n  let res: CalculatedMultipleChoiceQuestionAnswerInterface[] = [];\n  for (let answer of answers) {\n    res = [...res, {\n      id: answer.id,\n      value: answer.value,\n      status: answer.status,\n    }]\n  }\n  return res;\n}","import React from \"react\";\nimport Table from \"../../components/Table/Table\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { PositionRequirementTableInterface } from \"./ViewPosition\";\n\ninterface RequirementProps {\n  requirements: PositionRequirementTableInterface[];\n}\n\nconst ViewRequirements: React.FC<RequirementProps> = (props) => {\n  const tableData = (): JSX.Element[] => {\n    let data: PositionRequirementTableInterface[] = props.requirements;\n    // let data: PositionSubcategoryData[] =\n    //   props.position_requirement.position_requirement;\n    if (data.length === 0) {\n      return [\n        <tr key={153} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={3}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    return data.map((item, index) => (\n      <tr\n        key={index + item.field_id}\n        className=\"border-b border-gray-200 hover:bg-gray-100\"\n      >\n        <td className=\"p-3 text-left whitespace-nowrap\">{index + 1}</td>\n        <td className=\"p-3 text-left\">\n          <span>{item.subcategory_title}</span>\n        </td>\n        <td className=\"p-3 text-left\">\n          <span>\n            {isEmptyOrSpaces(item.field_id) ? \"Any document\" : item.field_title}\n          </span>\n        </td>\n        <td className=\"p-3 text-left text-lg italic\">\n          {isEmptyOrSpaces(item.field_id) ? (\n            item.subcategory_required ? (\n              <span className=\"text-yellow-800\">Required</span>\n            ) : (\n              \"Optional\"\n            )\n          ) : item.required ? (\n            <span className=\"text-yellow-800\">Required</span>\n          ) : (\n            \"Optional\"\n          )}\n        </td>\n      </tr>\n    ));\n  };\n\n  return (\n    <div>\n      <Table\n        columns={[\n          { columnTitle: \"#\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Qualification\", alignText: \"left\", padding: \"p-3\" },\n          // {\n          //   columnTitle: \"Qualification Status\",\n          //   alignText: \"left\",\n          //   padding: \"p-3\",\n          // },\n          { columnTitle: \"Document\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Status\", alignText: \"left\", padding: \"p-3\" },\n          // { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n        ]}\n        rows={tableData}\n        pagination={false}\n        search={false}\n        thColor=\"gray\"\n      />\n    </div>\n  );\n};\n\nexport default ViewRequirements;\n","import React, { Component } from \"react\";\nimport FindAnswer from \"../../containers/DoExam/DoExamTitle/FindAnswer\";\nimport { ExamAnswerSheetDone } from \"../../interfaces/exam\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  CandidateApplicationsStoreInterface,\n  candidateExamStoreInterface,\n  FC_GetProfileDetails,\n  LoadCandidateApplications,\n  setSelectedCandidateExam,\n  setSelectedCourse,\n  setSelectedPosition,\n  InitializeExamDetails,\n  loadExamsDone,\n  AddUserApplication,\n  loadApplicationPeriods,\n  requestUserAnswers,\n  loadQuestionTypes,\n  questionTypesStoreInterface,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { DATE } from \"../../utils/functions\";\nimport { AiOutlineFileText } from \"react-icons/ai\";\nimport { ExamDoneDetailsAnswers } from \"../../containers/CandidateExams/CandidateExams\";\nimport Loading from \"../Loading/Loading\";\n\ninterface AnswersDetailsProps {\n  exam_id: ExamDoneDetailsAnswers;\n  showAnswers: boolean;\n  allAnswers?: ExamAnswerSheetDone[];\n  user_id?: string;\n  questionTypes: questionTypesStoreInterface;\n  requestUserAnswers: (\n    exam_id: string,\n    user_id: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  FC_GetProfileDetails: Function;\n  auth: Auth;\n  candidateExam: candidateExamStoreInterface;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  loadExamsDone: (\n    periodId: string,\n    userId: string,\n    callback: (loading: boolean) => void\n  ) => void;\n}\ninterface AnswersDetailsState {\n  loading: boolean;\n  loadingStatus: boolean;\n}\n\nexport class _AnswersDetails extends Component<\n  AnswersDetailsProps,\n  AnswersDetailsState\n> {\n  constructor(props: AnswersDetailsProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      loadingStatus: false,\n    };\n  }\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  };\n  setLoadingStatus = (status: boolean) => {\n    this.setState({ loadingStatus: status });\n  };\n  componentDidMount = () => {\n    if (\n      this.props.questionTypes.questionTypes === null ||\n      this.props.questionTypes.questionTypes.length === 0\n    ) {\n      this.props.loadQuestionTypes(this.setLoading);\n    }\n    if (this.props.exam_id) {\n      let check = this.props.candidateExam.user_exams_done.find(\n        (itm) =>\n          itm.course === this.props.exam_id.course &&\n          itm.period === this.props.exam_id.period &&\n          DATE(itm.exam_date) === DATE(this.props.exam_id.exam_date)\n      );\n      // Check if user exams loaded\n      if (\n        (this.props.candidateExam.user_exams_done.length === 0 ||\n          check === undefined) &&\n        this.props.allAnswers === undefined\n      ) {\n        this.props.loadExamsDone(\n          this.props.exam_id.period,\n          this.props.auth.user.user_id,\n          this.setLoadingStatus\n        );\n      }\n      if (check !== undefined) {\n        if (\n          this.props.candidateExam.user_exams_done.find(\n            (item) => item.exam_paper === check?.exam_paper\n          ) === undefined\n        ) {\n          this.props.requestUserAnswers(\n            check.exam_paper,\n            this.props.user_id === undefined\n              ? this.props.auth.user.user_id\n              : this.props.user_id,\n            this.setLoading\n          );\n        }\n      }\n    }\n  };\n  userAnswersTotalMarks = (user_answers: ExamAnswerSheetDone) => {\n    let total: number = 0;\n    for (let item of user_answers.user_answers) {\n      total += item.user_marks;\n    }\n    return total;\n  };\n  render() {\n    let user_exam_details: ExamAnswerSheetDone | undefined =\n      this.props.allAnswers === undefined\n        ? this.props.candidateExam.user_exams_done.find(\n            (itm) =>\n              itm.course === this.props.exam_id.course &&\n              itm.period === this.props.exam_id.period &&\n              DATE(itm.exam_date) === DATE(this.props.exam_id.exam_date)\n          )\n        : this.props.allAnswers.find(\n            (itm) =>\n              itm.course === this.props.exam_id.course &&\n              itm.period === this.props.exam_id.period &&\n              DATE(itm.exam_date) === DATE(this.props.exam_id.exam_date)\n          );\n    if (this.state.loading === true || this.state.loadingStatus === true) {\n      return (\n        <div className=\"my-6 rounded bg-white p-3\">\n          <Loading />\n        </div>\n      );\n    }\n    if (user_exam_details === undefined) {\n      return (\n        <div className=\"my-6 rounded bg-white p-3\">\n          <span className=\"text-4xl font-bold\">Exam details not found!</span>\n        </div>\n      );\n    }\n    return (\n      <div className=\"p-2 bg-gray-100\">\n        <div className=\"mb-5 -mt-5\">\n          {user_exam_details !== undefined && (\n            <div className=\"mt-5\">\n              <div className=\"px-3 mb-2 flex flex-row items-center gap-3\">\n                <div>\n                  <AiOutlineFileText className=\"text-5xl text-gray-500\" />\n                </div>\n                <div\n                  className=\"text-2xl font-extrabold\"\n                  dangerouslySetInnerHTML={{\n                    __html: \"Exam for \" + this.props.exam_id.course_name,\n                  }}\n                ></div>\n              </div>\n              <div className=\" p-3 bg-white rounded-t mb-0 border-b\">\n                <div className=\"text-sm text-gray-500 font-bold\">\n                  Exam date:\n                </div>\n                <div\n                  className=\"text-base font-bold\"\n                  dangerouslySetInnerHTML={{\n                    __html: DATE(this.props.exam_id.exam_date),\n                  }}\n                ></div>\n              </div>\n              <div className=\" p-3 bg-white mb-0 border-b\">\n                <div className=\"text-sm text-gray-500 font-bold\">\n                  Exam description:\n                </div>\n                <div\n                  className=\"text-base font-bold\"\n                  dangerouslySetInnerHTML={{\n                    __html: this.props.exam_id.discription,\n                  }}\n                ></div>\n              </div>\n              <div className=\" p-3 bg-white rounded-b mb-0\">\n                <div className=\"text-sm text-gray-500 font-bold\">\n                  Exam terms and conditions:\n                </div>\n                <div\n                  className=\"text-base font-bold\"\n                  dangerouslySetInnerHTML={{\n                    __html: this.props.exam_id.termes,\n                  }}\n                ></div>\n              </div>\n            </div>\n          )}\n        </div>\n        <div className=\"text-2xl font-extrabold text-blue-600 px-2 mb-3\">\n          Exam answers & marks\n        </div>\n        {user_exam_details === undefined\n          ? \"Not Found\"\n          : user_exam_details.user_answers.map((item, i) => (\n              <div\n                key={i + 1}\n                className=\"bg-white hover:bg-white border border-white hover:border-blue-400 px-2 py-2 rounded  animate__animated animate__fadeIn animate__fast group mb-2\"\n              >\n                <div className=\"grid md:grid-cols-11 w-full\">\n                  <div className=\"col-span-12 flex flex-row items-center gap-3\">\n                    <div\n                      key={i + 1}\n                      className=\"w-6 h-6 p-2 rounded-full bg-gray-600 flex justify-center items-center font-bold text-lg text-white cursor-pointer\"\n                    >\n                      {i + 1}\n                    </div>\n                    {user_exam_details &&\n                      user_exam_details.questions.find(\n                        (itm) => itm.question_id === item.question\n                      ) !== undefined && (\n                        <div className=\"text-sm w-full\">\n                          <div\n                            className=\"font-bold text-gray-700 text-base\"\n                            dangerouslySetInnerHTML={{\n                              __html: user_exam_details.questions\n                                .find(\n                                  (itm) => itm.question_id === item.question\n                                )!\n                                .question.find(\n                                  (test) => test.language === item.language\n                                )!.description,\n                            }}\n                          ></div>\n                          <div className=\"text-blue-700 font-bold text-sm w-full\">\n                            Answer:&nbsp;{\" \"}\n                            {this.props.questionTypes.questionTypes !== null &&\n                              user_exam_details.user_answers.find(\n                                (itm) => itm.question === item.question\n                              ) && (\n                                <div className=\"mb-2\">\n                                  <FindAnswer\n                                    selectedLanguage={item.language}\n                                    question={{\n                                      question_id: item.question,\n                                      course: user_exam_details.questions.find(\n                                        (itm) =>\n                                          itm.question_id === item.question\n                                      )!.course,\n                                      question:\n                                        user_exam_details.questions.find(\n                                          (itm) =>\n                                            itm.question_id === item.question\n                                        )!.question,\n                                      type: user_exam_details.questions.find(\n                                        (itm) =>\n                                          itm.question_id === item.question\n                                      )!.type,\n                                      chapters:\n                                        user_exam_details.questions.find(\n                                          (itm) =>\n                                            itm.question_id === item.question\n                                        )!.chapters,\n                                      customNumber:\n                                        user_exam_details.questions.find(\n                                          (itm) =>\n                                            itm.question_id === item.question\n                                        )!.customNumber,\n                                      marks: user_exam_details.questions.find(\n                                        (itm) =>\n                                          itm.question_id === item.question\n                                      )!.marks,\n                                      answer: user_exam_details.questions.find(\n                                        (itm) =>\n                                          itm.question_id === item.question\n                                      )!.answer,\n                                    }}\n                                    answersList={[\n                                      {\n                                        question_id: item.question,\n                                        status: true,\n                                        answer:\n                                          user_exam_details.user_answers.find(\n                                            (itm) =>\n                                              itm.question === item.question\n                                          )!.answer,\n                                      },\n                                    ]}\n                                    questionTypes={\n                                      this.props.questionTypes.questionTypes\n                                    }\n                                    showCorrectAnswer={this.props.showAnswers}\n                                    onClick={() => {}}\n                                  />\n                                </div>\n                              )}\n                          </div>\n                        </div>\n                      )}\n                  </div>\n                </div>\n                <div className=\"col-span-1 flex items-center justify-between\">\n                  <div></div>\n\n                  <div className=\"w-max flex flex-col items-end justify-center bg-blue-50 rounded-md px-3 py-1 group-hover:bg-blue-100\">\n                    <div className=\"text-sm font-semibold text-gray-700\">\n                      Marks\n                    </div>\n                    <div className=\"text-sm font-extrabold text-gray-900 -mt-1\">\n                      <span className=\"text-blue-500\">\n                        {item.user_marks.toFixed(2)}\n                      </span>{\" \"}\n                      /{\" \"}\n                      {user_exam_details &&\n                        user_exam_details.questions.find(\n                          (itm) => itm.question_id === item.question\n                        )?.marks}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n        <div className=\"flex flex-row items-center justify-between gap-3 mb-10\">\n          <div className=\"bg-blue-100 p-3 pr-3 text-blue-700 flex flex-col items-start justify-center rounded-lg border-2 border-white\">\n            <span className=\"text-gray-700\">Total marks percentage</span>\n            <span className=\"text-3xl font-extrabold\">\n              {user_exam_details && user_exam_details.total_marks.toFixed(2)}%\n            </span>\n          </div>\n          <div>\n            <div className=\"bg-white rounded-lg p-3\">\n              <div className=\"text-gray-500 font-bold text-base text-right\">\n                Exam total marks\n              </div>\n              {user_exam_details !== undefined && (\n                <div className=\"font-extrabold text-3xl text-gray-900 text-right\">\n                  {this.userAnswersTotalMarks(user_exam_details).toFixed(2)} /{\" \"}\n                  {user_exam_details.exam_total_marks}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  candidateExam,\n  candidateApplications,\n  questionTypes,\n}: StoreState): {\n  auth: Auth;\n  candidateExam: candidateExamStoreInterface;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  questionTypes: questionTypesStoreInterface;\n} => {\n  return {\n    auth: auth,\n    candidateExam: candidateExam,\n    candidateApplications: candidateApplications,\n    questionTypes: questionTypes,\n  };\n};\n\nexport const AnswersDetails = connect(mapStateToProps, {\n  FC_GetProfileDetails,\n  LoadCandidateApplications,\n  setSelectedCandidateExam,\n  setSelectedCourse,\n  setSelectedPosition,\n  InitializeExamDetails,\n  loadExamsDone,\n  AddUserApplication,\n  loadApplicationPeriods,\n  requestUserAnswers,\n  loadQuestionTypes,\n})(_AnswersDetails);\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  course,\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimExamResultsDetails,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { StoreState } from \"../../../reducers\";\nimport { search } from \"../../../utils/functions\";\nimport { isClaimAllowed } from \"./ClaimForm\";\n\nconst getFailedExam = (\n  allData: ClaimExamResultsDetails[],\n  allCourses: course[]\n): ClaimExamResultsDetails[] => {\n  let result: ClaimExamResultsDetails[] = [];\n  allData.forEach((element) => {\n    if (element.total_marks < 100) {\n      let data = element;\n      data.course_name = getCourseById(allCourses, element.course)\n        ? getCourseById(allCourses, element.course)!.course_name\n        : \"Unknown exam\";\n      result.push(data);\n    }\n  });\n\n  return result;\n};\n\nexport const getCourseById = (courses: course[], course_id: string) => {\n  return courses.find((item) => item.course_id === course_id);\n};\n\nexport const getCourseIdBySheetId = (\n  allData: ClaimExamResultsDetails[],\n  sheet_id: string\n) => {\n  return allData.find((item) => item.answer_sheet_id === sheet_id);\n};\n\nexport const searchApplication = (\n  objList: claimApplicationsInterface[],\n  text: any\n): claimApplicationsInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (prop === \"position\") {\n        flag =\n          product.position.position_title\n            .toString()\n            .toLowerCase()\n            .indexOf(text.toLowerCase()) > -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n  // return objList.filter((product) =>\n  //   product.position.position_title.includes(text)\n  // );\n};\n\ntype FormExamListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  viewThisFile: string;\n  candidateAnswers: ClaimExamResultsDetails[];\n  myClaims: CandidateClaimInterface[];\n  activeSession: SessionPlanInterface;\n\n  // REDUX //////////////////////\n  courses: course[] | null;\n};\n\nconst FormExamList: React.FC<FormExamListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            !props.courses ||\n            getFailedExam(props.candidateAnswers, props.courses).filter(\n              (item) =>\n                isClaimAllowed(\n                  props.myClaims,\n                  props.activeSession.session_plan_id,\n                  item.answer_sheet_id\n                )\n            ).length > 0\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Cancel\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}{\" \"}\n      {/* searchData(props.candidateAnswers, searchInput) */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {props.courses &&\n        getFailedExam(props.candidateAnswers, props.courses).filter((item) =>\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            item.answer_sheet_id\n          )\n        ).length > 0 ? (\n          search(\n            getFailedExam(props.candidateAnswers, props.courses).filter(\n              (item) =>\n                isClaimAllowed(\n                  props.myClaims,\n                  props.activeSession.session_plan_id,\n                  item.answer_sheet_id\n                )\n            ),\n            searchInput\n          ).map((item: ClaimExamResultsDetails, index: number) => (\n            <div\n              className=\"group flex items-center justify-between my-1 hover:bg-gray-100\"\n              key={index + item.answer_sheet_id}\n            >\n              <div\n                className=\"p-1 w-full mr-2 cursor-pointer\"\n                onClick={() => {\n                  props.setChooseClaimFile(false);\n                  props.setClaimFileId(item.answer_sheet_id);\n                }}\n              >\n                <p className=\"text-base font-medium text-black\">\n                  {item.course_name}\n                </p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                onClick={() => {\n                  props.setViewThisFile(item.answer_sheet_id);\n                }}\n              >\n                View\n              </button>\n            </div>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No failed exam available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  course,\n}: StoreState): {\n  courses: course[] | null;\n} => {\n  return {\n    courses: course.courses,\n  };\n};\nexport default connect(mapStateToProps, {})(FormExamList);\n","import React from \"react\";\nimport { MdTurnedIn } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../../actions\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  claimApplicationsInterface,\n  claimApplicationsPositionInterface,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { DATE } from \"../../../utils/functions\";\nimport { PositionRequirementTableInterface } from \"../../Positions/ViewPosition\";\nimport ViewRequirements from \"../../Positions/ViewRequirements\";\n\nexport const FC_ApplicationPositionDistinctCategory = (\n  thisPosition: claimApplicationsPositionInterface,\n  documentCategories: DocumentReducerInterface\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n  let requirements = thisPosition.requirements;\n  // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n  for (let req in requirements) {\n    let thisRequirements = requirements[req];\n    // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisCategory = documentCategories.documentCategory\n      ? documentCategories.documentCategory.find(\n          (item) =>\n            item.user_detail_category_id ===\n            thisRequirements.user_detail_category_id\n        ) && {\n          title: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.user_detail_category_id\n          )!.title,\n          user_detail_category_id: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.user_detail_category_id\n          )!.user_detail_category_id,\n        }\n      : {\n          title: \"\",\n          user_detail_category_id: thisRequirements.user_detail_category_id,\n        };\n    // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisSubCategory = documentCategories.documentSubCategory\n      ? documentCategories.documentSubCategory.find(\n          (item) =>\n            item.user_detail_subcategory_id ===\n            thisRequirements.user_detail_subcategory_id\n        )\n        ? {\n            title: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.user_detail_subcategory_id\n            )!.title,\n            user_detail_subcategory_id:\n              documentCategories.documentSubCategory.find(\n                (item) =>\n                  item.user_detail_subcategory_id ===\n                  thisRequirements.user_detail_subcategory_id\n              )!.user_detail_subcategory_id,\n            category_id: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.user_detail_subcategory_id\n            )!.category_id,\n          }\n        : {\n            title: \"\",\n            user_detail_subcategory_id:\n              thisRequirements.user_detail_subcategory_id,\n            category_id: \"\",\n          }\n      : {\n          title: \"\",\n          user_detail_subcategory_id:\n            thisRequirements.user_detail_subcategory_id,\n          category_id: \"\",\n        };\n    // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n    if (thisCategory) {\n      for (let field in thisRequirements.position_requirement) {\n        // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n        let thisField = documentCategories.documentFields\n          ? documentCategories.documentFields.find(\n              (item) =>\n                item._id ===\n                thisRequirements.position_requirement[field]\n                  .category_subcategory_data_id\n            )\n            ? {\n                title: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]\n                      .category_subcategory_data_id\n                )!.title,\n                _id: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]\n                      .category_subcategory_data_id\n                )!._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n            : {\n                title: \"\",\n                _id: thisRequirements.user_detail_subcategory_id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n          : {\n              title: \"\",\n              _id: thisRequirements.user_detail_subcategory_id,\n              required: thisRequirements.position_requirement[field].required,\n            };\n        // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n        PositionsTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: thisField.title,\n          field_id: thisField._id,\n          required: thisField.required,\n        });\n      }\n\n      // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n      ) {\n        DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n        DistinctCategoriesTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: \"\",\n          subcategory_title: \"\",\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n\n      // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctSubCategoriesIds.includes(\n          thisSubCategory.user_detail_subcategory_id\n        )\n      ) {\n        DistinctSubCategoriesIds.push(\n          thisSubCategory.user_detail_subcategory_id\n        );\n        DistinctSubCategoriesTemp.push({\n          category_id: thisSubCategory.category_id,\n          category_title: \"\",\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n    }\n  }\n  // DistinctCategoriesIds.;\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\nexport const showEvaluator = (\n  userList: UserInterface[],\n  user_id: string\n): string => {\n  let result: string = \"\";\n  if (user_id === \"system\") {\n    result = \"System\";\n  } else {\n    // let user = getUserDocuments(userList, user_id);\n    // let user = undefined;\n    // if (user) {\n    //   result = user.user.user_info.fname + \" \" + user.user.user_info.lname;\n    // }\n  }\n  return result;\n};\n\ntype ApplicationFormViewProps = {\n  thisApplication: claimApplicationsInterface;\n  setViewThisFile: (value: string) => void;\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  documentCategories: DocumentReducerInterface;\n  PushPopupAlert: Function;\n};\n\nconst ApplicationFormView: React.FC<ApplicationFormViewProps> = (props) => {\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          {/* APPLICATION TITLE ========== */}\n          <section className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              {props.thisApplication.position.position_title}\n            </span>\n            <button\n              type=\"button\"\n              className=\"btn btn-blue\"\n              onClick={() => {\n                props.setChooseClaimFile(false);\n                props.setClaimFileId(props.thisApplication.application_id);\n                props.setViewThisFile(\"\");\n              }}\n            >\n              Choose\n            </button>\n          </section>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisApplication.createdAt)}\n            </span>\n          </div>\n          {false && (\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Session:</span>\n              <span className=\"font-bold text-gray-900 py-1\">\n                {\n                  props.thisApplication.application_session\n                    .application_session_name\n                }\n              </span>\n            </div>\n          )}\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisApplication.application_status ===\n                ApplicationStates.Rejected\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } py-1`}\n            >\n              {capitalizeFirstLetter(props.thisApplication.application_status)}\n            </span>\n          </div>\n          {/* <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {props.thisApplication.}\n            </span>\n          </div> */}\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-semibold text-gray-900\">\n              {props.thisApplication.override_by.comment}\n            </span>\n          </div>\n        </div>\n        <div className=\"bg-white w-full rounded p-2 mb-2\">\n          <div className=\"text-gray-800 text-2xl font-bold my-2\">\n            Position Details\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Desc:</span>\n            <span className=\"font-semibold\">\n              {props.thisApplication.position.description}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>School level:</span>\n            <span className=\"font-semibold\">\n              {props.thisApplication.position.school_level_id.school_level_name}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Institute:</span>\n            <span className=\"font-semibold\">\n              {\n                props.thisApplication.position.education_institute_id\n                  .education_category_title\n              }\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Courses:</span>\n            <span className=\"flex items-center gap-2\">\n              {props.thisApplication.position.courses.map((item, index) => (\n                <div\n                  key={index + item.course_id}\n                  className=\"flex items-center gap-1\"\n                >\n                  <span className=\"font-semibold\">{item.course_name}</span>\n                  <span className=\"text-gray-600\">({item.course_code})</span>\n                  {index !==\n                    props.thisApplication.position.courses.length - 1 && \",\"}\n                </div>\n              ))}\n            </span>\n          </div>\n\n          <div className=\"text-gray-800 text-2xl font-bold my-2\">\n            Position Requirements\n          </div>\n          {props.thisApplication.position.requirements.length > 0 ? (\n            FC_ApplicationPositionDistinctCategory(\n              props.thisApplication.position,\n              props.documentCategories\n            ).DistinctCategoriesTemp.map((item, index) => (\n              <div\n                className=\"bg-gray-100props.thisApplication.position rounded p-2\"\n                key={index + item.category_id}\n              >\n                <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                  <MdTurnedIn />\n                  <span>{item.category_title}</span>\n                </div>\n                <div className=\"border bg-white mt-1\">\n                  <ViewRequirements\n                    requirements={FC_ApplicationPositionDistinctCategory(\n                      props.thisApplication.position,\n                      props.documentCategories\n                    ).PositionsTemp.filter(\n                      (req) => req.category_id === item.category_id\n                    )}\n                  />\n                </div>\n              </div>\n            ))\n          ) : (\n            <NoResult\n              theme={NoResultThemes.Dark}\n              value={\"No requirements\"}\n            ></NoResult>\n          )}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default connect(null, { PushPopupAlert })(ApplicationFormView);\n","import React from \"react\";\nimport { AnswersDetails } from \"../../../components/AnswersDetails/AnswersDetails\";\nimport {\n  claimApplicationsPositionInterface,\n  ClaimExamResultsDetails,\n} from \"../../../interfaces\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { DATE } from \"../../../utils/functions\";\nimport { ExamDoneDetailsAnswers } from \"../../CandidateExams/CandidateExams\";\nimport { PositionRequirementTableInterface } from \"../../Positions/ViewPosition\";\n\nexport const FC_ApplicationPositionDistinctCategory = (\n  thisPosition: claimApplicationsPositionInterface,\n  documentCategories: DocumentReducerInterface\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n  let requirements = thisPosition.requirements;\n  // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n  for (let req in requirements) {\n    let thisRequirements = requirements[req];\n    // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisCategory = documentCategories.documentCategory\n      ? documentCategories.documentCategory.find(\n          (item) =>\n            item.user_detail_category_id ===\n            thisRequirements.user_detail_category_id\n        ) && {\n          title: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.user_detail_category_id\n          )!.title,\n          user_detail_category_id: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.user_detail_category_id\n          )!.user_detail_category_id,\n        }\n      : {\n          title: \"\",\n          user_detail_category_id: thisRequirements.user_detail_category_id,\n        };\n    // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisSubCategory = documentCategories.documentSubCategory\n      ? documentCategories.documentSubCategory.find(\n          (item) =>\n            item.user_detail_subcategory_id ===\n            thisRequirements.user_detail_subcategory_id\n        )\n        ? {\n            title: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.user_detail_subcategory_id\n            )!.title,\n            user_detail_subcategory_id:\n              documentCategories.documentSubCategory.find(\n                (item) =>\n                  item.user_detail_subcategory_id ===\n                  thisRequirements.user_detail_subcategory_id\n              )!.user_detail_subcategory_id,\n            category_id: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.user_detail_subcategory_id\n            )!.category_id,\n          }\n        : {\n            title: \"\",\n            user_detail_subcategory_id:\n              thisRequirements.user_detail_subcategory_id,\n            category_id: \"\",\n          }\n      : {\n          title: \"\",\n          user_detail_subcategory_id:\n            thisRequirements.user_detail_subcategory_id,\n          category_id: \"\",\n        };\n    // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n    if (thisCategory) {\n      for (let field in thisRequirements.position_requirement) {\n        // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n        let thisField = documentCategories.documentFields\n          ? documentCategories.documentFields.find(\n              (item) =>\n                item._id ===\n                thisRequirements.position_requirement[field]\n                  .category_subcategory_data_id\n            )\n            ? {\n                title: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]\n                      .category_subcategory_data_id\n                )!.title,\n                _id: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]\n                      .category_subcategory_data_id\n                )!._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n            : {\n                title: \"\",\n                _id: thisRequirements.user_detail_subcategory_id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n          : {\n              title: \"\",\n              _id: thisRequirements.user_detail_subcategory_id,\n              required: thisRequirements.position_requirement[field].required,\n            };\n        // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n        PositionsTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: thisField.title,\n          field_id: thisField._id,\n          required: thisField.required,\n        });\n      }\n\n      // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n      ) {\n        DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n        DistinctCategoriesTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: \"\",\n          subcategory_title: \"\",\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n\n      // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctSubCategoriesIds.includes(\n          thisSubCategory.user_detail_subcategory_id\n        )\n      ) {\n        DistinctSubCategoriesIds.push(\n          thisSubCategory.user_detail_subcategory_id\n        );\n        DistinctSubCategoriesTemp.push({\n          category_id: thisSubCategory.category_id,\n          category_title: \"\",\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n    }\n  }\n  // DistinctCategoriesIds.;\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\nexport const showEvaluator = (\n  userList: UserInterface[],\n  user_id: string\n): string => {\n  let result: string = \"\";\n  if (user_id === \"system\") {\n    result = \"System\";\n  } else {\n    // let user = getUserDocuments(userList, user_id);\n    // let user = undefined;\n    // if (user) {\n    //   result = user.user.user_info.fname + \" \" + user.user.user_info.lname;\n    // }\n  }\n  return result;\n};\n\nexport const claimShowAnswer = (\n  answer: ClaimExamResultsDetails\n): ExamDoneDetailsAnswers => {\n  let result: ExamDoneDetailsAnswers = {\n    course: answer.course,\n    course_name: answer.course_name,\n    discription: answer.discription,\n    termes: answer.termes,\n    rules: {\n      right_click_enabled: false,\n      copy_enabled: false,\n      paste_enabled: false,\n      stop_candidate_when_comeback: false,\n      allow_to_leave_browser: false,\n    },\n    period: answer.period,\n    exam_date: answer.exam_date,\n  };\n  return result;\n};\n\ntype ExaminationFormViewProps = {\n  thisAnswerSheet: ClaimExamResultsDetails;\n  setViewThisFile: (value: string) => void;\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n};\n\nconst ExaminationFormView: React.FC<ExaminationFormViewProps> = (props) => {\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          {/* APPLICATION TITLE ========== */}\n          <section className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              {props.thisAnswerSheet.course_name}\n            </span>\n            <button\n              type=\"button\"\n              className=\"btn btn-blue\"\n              onClick={() => {\n                props.setChooseClaimFile(false);\n                props.setClaimFileId(props.thisAnswerSheet.answer_sheet_id);\n                props.setViewThisFile(\"\");\n              }}\n            >\n              Choose\n            </button>\n          </section>\n\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisAnswerSheet.createdAt)}\n            </span>\n          </div>\n        </div>\n        {/* QUESTIONS ----------------------------- */}\n        <AnswersDetails\n          showAnswers={false}\n          exam_id={claimShowAnswer(props.thisAnswerSheet)}\n        />\n        {/* END QUESTIONS ----------------------------- */}\n      </div>\n    </section>\n  );\n};\n\nexport default ExaminationFormView;\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { VscLoading } from \"react-icons/vsc\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { updateSessionPlan } from \"../../actions/session\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport {\n  allPlanTypes,\n  PlansInterface,\n  PlansTypeInterface,\n  PlansTypeKeys,\n  SessionPlanInterface,\n  SessionPlanTypeStatus,\n} from \"../../interfaces\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { capitalizeFirstLetter } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { DATE, errorToText } from \"../../utils/functions\";\n\nexport const isActivationAllowed = (thisPlans: PlansInterface): boolean => {\n  let today: Date = new Date(),\n    end_date = new Date(thisPlans.end_date);\n  if (end_date.getTime() >= today.getTime()) {\n    return true;\n  }\n  return false;\n};\n\nexport const getPlanTypeByKey = (\n  type_key: PlansTypeKeys\n): PlansTypeInterface | undefined => {\n  return allPlanTypes.find((item) => item.type_key === type_key);\n};\n\nexport const isPlanActive = (\n  viewThisSession: SessionPlanInterface,\n  thisPlan: PlansInterface\n): \"OPEN\" | \"CLOSED\" | \"WAITING\" => {\n  if (viewThisSession.is_active) {\n    let today = new Date(),\n      planEndDate = new Date(thisPlan.end_date),\n      planStartDate = new Date(thisPlan.start_date);\n    if (\n      planEndDate.getTime() >= today.getTime() &&\n      planStartDate.getTime() <= today.getTime() &&\n      thisPlan.type_status !== SessionPlanTypeStatus.CLOSED\n    ) {\n      return \"OPEN\";\n    } else if (\n      planStartDate.getTime() > today.getTime() &&\n      thisPlan.type_status !== SessionPlanTypeStatus.CLOSED\n    ) {\n      return \"WAITING\";\n    }\n  }\n  return \"CLOSED\";\n};\n\ntype SessionDetailsProps = {\n  viewThisSession: SessionPlanInterface;\n  setViewThisSession: (data: SessionPlanInterface) => void;\n\n  // REDUX ----------------\n  updateSessionPlan: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype SessionDetailsState = {\n  loadingRequest: string;\n};\n\nexport class SessionDetails extends Component<\n  SessionDetailsProps,\n  SessionDetailsState\n> {\n  constructor(props: SessionDetailsProps) {\n    super(props);\n\n    this.state = {\n      loadingRequest: \"\",\n    };\n  }\n\n  handlePlanActivation = async (\n    session: SessionPlanInterface,\n    thisPlan: PlansInterface\n  ) => {\n    const newState: \"open\" | \"close\" = session.is_active ? \"close\" : \"open\";\n\n    if (!window.confirm(`Are you sure you want to ${newState} this plan?`)) {\n      return true;\n    }\n\n    if (!isActivationAllowed(thisPlan)) {\n      this.props.PushPopupAlert({\n        title: `Opening/Closing plan which has been expired is not allowed!`,\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    let newData: SessionPlanInterface = {\n      session_plan_name: session.session_plan_name,\n      period: session.period,\n      is_active: session.is_active,\n      plans: [],\n      createdAt: session.createdAt,\n      updatedAt: session.updatedAt,\n      session_plan_id: session.session_plan_id,\n    };\n    for (const key in session.plans) {\n      if (Object.prototype.hasOwnProperty.call(session.plans, key)) {\n        const element = session.plans[key];\n        if (thisPlan.type_key === element.type_key) {\n          if (thisPlan.type_status === SessionPlanTypeStatus.OPEN) {\n            newData.plans.push({\n              type_id: thisPlan.type_id,\n              type_title: thisPlan.type_title,\n              type_key: thisPlan.type_key,\n              type_status: SessionPlanTypeStatus.CLOSED,\n              start_date: thisPlan.start_date,\n              end_date: thisPlan.end_date,\n              allowed_claim_level: thisPlan.allowed_claim_level,\n              _id: thisPlan._id,\n              history: thisPlan.history,\n            });\n          } else {\n            newData.plans.push({\n              type_id: thisPlan.type_id,\n              type_title: thisPlan.type_title,\n              type_key: thisPlan.type_key,\n              type_status: SessionPlanTypeStatus.OPEN,\n              start_date: thisPlan.start_date,\n              end_date: thisPlan.end_date,\n              allowed_claim_level: thisPlan.allowed_claim_level,\n              _id: thisPlan._id,\n              history: thisPlan.history,\n            });\n          }\n        } else {\n          newData.plans.push(element);\n        }\n      }\n    }\n\n    console.log(\"====================================\");\n    console.log({ newData });\n    console.log(\"====================================\");\n\n    this.setState({ loadingRequest: thisPlan.type_key });\n    try {\n      const res = await axios.put<SessionPlanInterface>(\n        `${API.CLAIMING}/session/${session.session_plan_id}`,\n        newData\n      );\n      this.props.updateSessionPlan(res.data);\n      this.props.setViewThisSession(res.data);\n      this.props.PushPopupAlert({\n        title: `Session ${newState}d successfully`,\n        theme: PopupAlertTheme.info,\n      });\n      this.setState({ loadingRequest: \"\" });\n      console.log(\"updateSessionPlan: \", res);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.warning,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <table className=\"w-full bg-white shadow p-5\" id=\"session_content\">\n        <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n          <tr>\n            <td className=\"p-2\">#</td>\n            <td className=\"p-2\">Plan Type</td>\n            <td className=\"p-2\">Start Date</td>\n            <td className=\"p-2\">End date</td>\n            {this.props.viewThisSession.is_active && (\n              <td className=\"p-2\" colSpan={2}>\n                Status\n              </td>\n            )}\n          </tr>\n        </thead>\n        <tbody>\n          {/* WHILE DATA FOUND ====================== */}\n          {this.props.viewThisSession.plans.map((item, index) => (\n            <tr\n              key={index + item._id}\n              className={`border-b border-gray-200 hover:bg-gray-100`}\n            >\n              <td className=\"p-2 text-left whitespace-nowrap\">{index + 1}</td>\n              <td className=\"p-2 text-left\">\n                <span className=\"text-lg\">\n                  {getPlanTypeByKey(item.type_key) &&\n                    capitalizeFirstLetter(\n                      getPlanTypeByKey(item.type_key)!.type_title\n                    )}\n                </span>\n              </td>\n              <td className=\"p-2 text-left\">{DATE(item.start_date)}</td>\n              <td className=\"p-2 text-left\">{DATE(item.end_date)}</td>\n              {this.props.viewThisSession.is_active && (\n                <td>\n                  {isPlanActive(this.props.viewThisSession, item) === \"OPEN\" ? (\n                    <span className={`px-2 py-1 font-semibold text-green-700`}>\n                      Open\n                    </span>\n                  ) : isPlanActive(this.props.viewThisSession, item) ===\n                    \"WAITING\" ? (\n                    <span className={`px-2 py-1 font-semibold text-gray-700`}>\n                      Waiting\n                    </span>\n                  ) : (\n                    <span className={`px-2 py-1 font-semibold text-red-700`}>\n                      Closed\n                    </span>\n                  )}\n                </td>\n              )}\n              {this.props.viewThisSession.is_active && (\n                <td>\n                  {isActivationAllowed(item) && (\n                    <div className=\"flex items-center justify-center gap-1\">\n                      <div\n                        className={`relative ${\n                          this.state.loadingRequest.length > 0\n                            ? \"cursor-not-allowed\"\n                            : \"cursor-pointer\"\n                        }`}\n                        title={\n                          item.type_status === SessionPlanTypeStatus.OPEN\n                            ? \"Deactivating session\"\n                            : \"Activating session\"\n                        }\n                        onClick={() =>\n                          this.state.loadingRequest.length <= 0 &&\n                          this.handlePlanActivation(\n                            this.props.viewThisSession,\n                            item\n                          )\n                        }\n                      >\n                        <span className=\"block w-14 h-8 bg-gray-100 rounded-full shadow-inner\"></span>\n                        <span\n                          className={`absolute block w-6 h-6 mt-1 ml-1 rounded-full shadow inset-y-0 left-0 focus-within:shadow-outline transition-transform duration-500 ease-in-out ${\n                            item.type_status === SessionPlanTypeStatus.CLOSED\n                              ? \"bg-red-500\"\n                              : \"bg-green-500 transform translate-x-full\"\n                          }`}\n                        ></span>\n                      </div>\n                      {this.state.loadingRequest === item.type_key && (\n                        <VscLoading className=\"animate__animated animate__rotateIn animate__infinite\" />\n                      )}\n                    </div>\n                  )}\n                </td>\n              )}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nexport default connect(null, {\n  updateSessionPlan,\n  PushPopupAlert,\n})(SessionDetails);\n","import React from \"react\";\nimport {\n  BsCheckSquareFill,\n  BsCheckCircleFill,\n  BsArrowRightSquareFill,\n  BsArrowRightCircleFill,\n} from \"react-icons/bs\";\nimport { QuestionAnswersStore } from \"../../../actions\";\nimport {\n  CalculatedMultipleChoiceQuestionAnswerInterface,\n  MatchingQuestionAnswerInterface,\n  MultipleChoiceQuestionAnswerInterface,\n  QuestionInterface,\n  questionType,\n  questionTypeElementsType,\n  TrueFalseQuestionAnswerInterface,\n  NumericalQuestionAnswerInterface,\n  ShortAnswerQuestionAnswerInterface,\n  SimpleCalculatedQuestionAnswerInterface,\n  QuestionLanguage,\n  LanguageInterface,\n} from \"../../../interfaces\";\nimport {\n  toCalculatedMultipleChoice,\n  toMatching,\n  toMultipleChoice,\n  toNumerical,\n  toShortAnswer,\n  toSimpleCalculated,\n  toTrueFalse,\n} from \"../QuestionDetails/ConvertingAnswers\";\nimport { findQuestionType } from \"../utils/utils\";\n\ninterface FindAnswerProps {\n  question: QuestionInterface;\n  answersList: QuestionAnswersStore[];\n  selectedLanguage: QuestionLanguage | LanguageInterface;\n  questionTypes: questionType[];\n  showCorrectAnswer: boolean;\n  onClick: () => void;\n}\n\nconst FindAnswer = (props: FindAnswerProps) => {\n  const answer = props.answersList.find(\n    (item) => item.question_id === props.question.question_id\n  );\n  const UserAnswersSel = props.question.question.find(\n    (itm) => itm.language === props.selectedLanguage\n  );\n  if (answer === undefined || UserAnswersSel === undefined) {\n    return (\n      <div className=\"text-yellow-600 font-extrabold text-2xl text-center\">\n        No answer found!\n      </div>\n    );\n  } else {\n    switch (findQuestionType(props.question.type, props.questionTypes)) {\n      case questionTypeElementsType.MultipleChoice:\n        const userAnswer: MultipleChoiceQuestionAnswerInterface[] =\n          toMultipleChoice(answer.answer);\n        return (\n          <div className=\"w-full\">\n            {userAnswer\n              .filter((itm) => itm.status === true)\n              .map((item, i) => (\n                <div\n                  key={i + 1}\n                  onClick={props.onClick}\n                  className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                >\n                  <div className=\"text-xl text-blue-600\">\n                    <BsCheckSquareFill />\n                  </div>\n                  <div dangerouslySetInnerHTML={{ __html: item.value }}></div>\n                </div>\n              ))}\n            {/* Correct answers */}\n            {props.showCorrectAnswer === true && (\n              <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n                <div className=\"font-extrabold text-lg\">Correct answer</div>\n                <div>\n                  {UserAnswersSel.answer\n                    .filter((itm) => itm.status === true)\n                    .map((item, i) => (\n                      <div\n                        key={i + 1}\n                        onClick={props.onClick}\n                        className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                      >\n                        <div className=\"text-xl text-blue-600\">\n                          <BsCheckSquareFill />\n                        </div>\n                        <div\n                          dangerouslySetInnerHTML={{ __html: item.value }}\n                        ></div>\n                      </div>\n                    ))}\n                </div>\n              </div>\n            )}\n          </div>\n        );\n      case questionTypeElementsType.SingleMultiple:\n        const userAnswerSingle: MultipleChoiceQuestionAnswerInterface[] =\n          toMultipleChoice(answer.answer);\n        return (\n          <div className=\"w-full\">\n            {userAnswerSingle\n              .filter((itm) => itm.status === true)\n              .map((item, i) => (\n                <div\n                  key={i + 1}\n                  onClick={props.onClick}\n                  className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                >\n                  <div className=\"text-xl text-blue-600\">\n                    <BsCheckCircleFill />\n                  </div>\n                  <div dangerouslySetInnerHTML={{ __html: item.value }}></div>\n                </div>\n              ))}\n            {/* Correct answers */}\n            {props.showCorrectAnswer === true && (\n              <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n                <div className=\"font-extrabold text-lg\">Correct answer</div>\n                <div>\n                  {UserAnswersSel.answer\n                    .filter((itm) => itm.status === true)\n                    .map((item, i) => (\n                      <div\n                        key={i + 1}\n                        onClick={props.onClick}\n                        className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                      >\n                        <div className=\"text-xl text-blue-600\">\n                          <BsCheckCircleFill />\n                        </div>\n                        <div\n                          dangerouslySetInnerHTML={{ __html: item.value }}\n                        ></div>\n                      </div>\n                    ))}\n                </div>\n              </div>\n            )}\n          </div>\n        );\n\n      case questionTypeElementsType.CalculatedMultipleChoice:\n        const userAnswer1: CalculatedMultipleChoiceQuestionAnswerInterface[] =\n          toCalculatedMultipleChoice(answer.answer);\n        return (\n          <div className=\"w-full\">\n            {userAnswer1\n              .filter((itm) => itm.status === true)\n              .map((item, i) => (\n                <div\n                  key={i + 1}\n                  onClick={props.onClick}\n                  className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                >\n                  <div className=\"text-xl text-blue-600\">\n                    <BsCheckSquareFill />\n                  </div>\n                  <div className=\"text-base font-normal text-gray-500\">\n                    {item.value.length > 1 ? (\n                      <>\n                        Between{\" \"}\n                        <span className=\"underline text-gray-600 font-extrabold\">\n                          {item.value[0]}\n                        </span>{\" \"}\n                        and{\" \"}\n                        <span className=\"underline text-gray-600 font-extrabold\">\n                          {item.value[1]}\n                        </span>\n                      </>\n                    ) : (\n                      <span className=\"text-gray-700\">\n                        {item.value[0].toString()}\n                      </span>\n                    )}\n                  </div>\n                </div>\n              ))}\n            {/* Correct answers */}\n            {props.showCorrectAnswer === true && (\n              <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n                <div className=\"font-extrabold text-lg\">Correct answer</div>\n                <div>\n                  {UserAnswersSel.answer\n                    .filter((itm) => itm.status === true)\n                    .map((item, i) => (\n                      <div\n                        key={i + 1}\n                        onClick={props.onClick}\n                        className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 mb-1 py-3 font-bold\"\n                      >\n                        <div className=\"text-xl text-blue-600\">\n                          <BsCheckSquareFill />\n                        </div>\n                        <div className=\"text-base font-normal text-gray-500\">\n                          {item.value.length > 1 ? (\n                            <>\n                              Between{\" \"}\n                              <span className=\"underline text-blue-600 font-extrabold\">\n                                {item.value[0]}\n                              </span>{\" \"}\n                              and{\" \"}\n                              <span className=\"underline text-blue-600 font-extrabold\">\n                                {item.value[1]}\n                              </span>\n                            </>\n                          ) : (\n                            <span className=\"text-blue-600\">\n                              {item.value[0].toString()}\n                            </span>\n                          )}\n                        </div>\n                      </div>\n                    ))}\n                </div>\n              </div>\n            )}\n          </div>\n        );\n\n      case questionTypeElementsType.Matching:\n        const userAnswerMatch: MatchingQuestionAnswerInterface[] = toMatching(\n          answer.answer\n        );\n        return (\n          <div className=\"w-full\">\n            {userAnswerMatch.map((item, i) => (\n              <div\n                key={i + 1}\n                onClick={props.onClick}\n                className=\"bg-gray-100 rounded cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 font-bold border border-blue-300\"\n              >\n                <div className=\"text-xl text-blue-600 font-bold p-3 pr-1 md:pr-3\">\n                  <div className=\"h-8 w-8 p-3 bg-blue-100 rounded-full flex items-center justify-center\">\n                    {i + 1}\n                  </div>\n                </div>\n                <div className=\"flex flex-col lg:flex-row items-center gap-3 w-full h-full truncate\">\n                  <div\n                    className=\"w-full mt-3 lg:mb-0\"\n                    dangerouslySetInnerHTML={{ __html: item.value }}\n                  ></div>\n                  <div className=\"flex flex-row items-center gap-3 w-full mb-3 lg:mb-0\">\n                    <div className=\"text-3xl text-gray-500 group-hover:text-blue-600\">\n                      <BsArrowRightSquareFill />\n                    </div>\n                    <div\n                      className=\"w-full mr-2\"\n                      dangerouslySetInnerHTML={{ __html: item.status }}\n                    ></div>\n                  </div>\n                </div>\n              </div>\n            ))}\n            {/* Correct answers */}\n            {props.showCorrectAnswer === true && (\n              <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n                <div className=\"font-extrabold text-lg\">Correct answer</div>\n                <div>\n                  {UserAnswersSel.answer.map((item, i) => (\n                    <div\n                      key={i + 1}\n                      onClick={props.onClick}\n                      className=\"bg-blue-50 rounded cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 font-bold border border-blue-300\"\n                    >\n                      <div className=\"text-xl text-blue-600 font-bold p-3 pr-1 md:pr-3\">\n                        <div className=\"h-8 w-8 p-3 bg-blue-100 rounded-full flex items-center justify-center\">\n                          {i + 1}\n                        </div>\n                      </div>\n                      <div className=\"flex flex-col lg:flex-row items-center gap-3 w-full h-full truncate\">\n                        <div\n                          className=\"w-full mt-3 lg:mb-0\"\n                          dangerouslySetInnerHTML={{ __html: item.value }}\n                        ></div>\n                        <div className=\"flex flex-row items-center gap-3 w-full mb-3 lg:mb-0\">\n                          <div className=\"text-3xl text-gray-500 group-hover:text-blue-600\">\n                            <BsArrowRightSquareFill />\n                          </div>\n                          <div\n                            className=\"w-full mr-2\"\n                            dangerouslySetInnerHTML={{ __html: item.status }}\n                          ></div>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n        );\n      case questionTypeElementsType.TrueFalse:\n        const userAnswerTureFalse: TrueFalseQuestionAnswerInterface[] =\n          toTrueFalse(answer.answer);\n        return (\n          <div className=\"w-full\">\n            {userAnswerTureFalse\n              .filter((itm) => itm.status === true)\n              .map((item, i) => (\n                <div\n                  key={i + 1}\n                  onClick={props.onClick}\n                  className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                >\n                  <div className=\"text-xl\">\n                    <BsArrowRightCircleFill />\n                  </div>\n                  <div dangerouslySetInnerHTML={{ __html: item.value }}></div>\n                </div>\n              ))}\n            {/* Correct answers */}\n            {props.showCorrectAnswer === true && (\n              <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n                <div className=\"font-extrabold text-lg\">Correct answer</div>\n                <div>\n                  {UserAnswersSel.answer\n                    .filter((itm) => itm.status === true)\n                    .map((item, i) => (\n                      <div\n                        key={i + 1}\n                        onClick={props.onClick}\n                        className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-blue-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                      >\n                        <div className=\"text-xl\">\n                          <BsArrowRightCircleFill />\n                        </div>\n                        <div\n                          dangerouslySetInnerHTML={{ __html: item.value }}\n                        ></div>\n                      </div>\n                    ))}\n                </div>\n              </div>\n            )}\n          </div>\n        );\n      case questionTypeElementsType.Numeric:\n        const userAnswerNumerical: NumericalQuestionAnswerInterface[] =\n          toNumerical(answer.answer);\n        return (\n          <div className=\"w-full\">\n            {userAnswerNumerical.map((item, i) => (\n              <div\n                key={i + 1}\n                onClick={props.onClick}\n                className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n              >\n                <div className=\"text-xl\">\n                  <BsArrowRightCircleFill />\n                </div>\n                <div className=\"text-gray-600 text-base font-normal\">\n                  {item.value.length > 1 ? (\n                    <>\n                      Between{\" \"}\n                      <span className=\"underline text-gray-600 font-extrabold\">\n                        {item.value[0]}\n                      </span>{\" \"}\n                      and{\" \"}\n                      <span className=\"underline text-gray-600 font-extrabold\">\n                        {item.value[1]}\n                      </span>\n                    </>\n                  ) : (\n                    item.value.length > 0 && (\n                      <span className=\"text-gray-700\">\n                        {item.value[0].toString()}\n                      </span>\n                    )\n                  )}\n                </div>\n              </div>\n            ))}\n            {/* Correct answers */}\n            {props.showCorrectAnswer === true && (\n              <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n                <div className=\"font-extrabold text-lg\">Correct answer</div>\n                <div>\n                  {UserAnswersSel.answer.map((item, i) => (\n                    <div\n                      key={i + 1}\n                      onClick={props.onClick}\n                      className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-blue-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                    >\n                      <div className=\"text-xl\">\n                        <BsArrowRightCircleFill />\n                      </div>\n                      <div className=\"text-gray-600 text-base font-normal\">\n                        {item.value.length > 1 ? (\n                          <>\n                            Between{\" \"}\n                            <span className=\"underline text-blue-600 font-extrabold\">\n                              {item.value[0] - item.value[1]}\n                            </span>{\" \"}\n                            and{\" \"}\n                            <span className=\"underline text-blue-600 font-extrabold\">\n                              {item.value[0] + item.value[1]}\n                            </span>\n                          </>\n                        ) : (\n                          item.value.length > 0 && (\n                            <span className=\"text-blue-700\">\n                              {item.value[0].toString()}\n                            </span>\n                          )\n                        )}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n        );\n      case questionTypeElementsType.SimpleCalculate:\n        const userAnswerSimpleCalculate: SimpleCalculatedQuestionAnswerInterface[] =\n          toSimpleCalculated(answer.answer);\n        return (\n          <div className=\"w-full\">\n            {userAnswerSimpleCalculate.map((item, i) => (\n              <div\n                key={i + 1}\n                onClick={props.onClick}\n                className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n              >\n                <div className=\"text-xl\">\n                  <BsArrowRightCircleFill />\n                </div>\n                <div className=\"text-gray-600 text-base font-normal\">\n                  {item.value.length > 1 ? (\n                    <>\n                      Between{\" \"}\n                      <span className=\"underline text-gray-600 font-extrabold\">\n                        {item.value[0]}\n                      </span>{\" \"}\n                      and{\" \"}\n                      <span className=\"underline text-gray-600 font-extrabold\">\n                        {item.value[1]}\n                      </span>\n                    </>\n                  ) : (\n                    item.value.length > 0 && (\n                      <span className=\"text-gray-700\">\n                        {item.value[0].toString()}\n                      </span>\n                    )\n                  )}\n                </div>\n              </div>\n            ))}\n            {/* Correct answers */}\n            {props.showCorrectAnswer === true && (\n              <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n                <div className=\"font-extrabold text-lg\">Correct answer</div>\n                <div>\n                  {UserAnswersSel.answer.map((item, i) => (\n                    <div\n                      key={i + 1}\n                      onClick={props.onClick}\n                      className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-blue-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                    >\n                      <div className=\"text-xl\">\n                        <BsArrowRightCircleFill />\n                      </div>\n                      <div className=\"text-gray-600 text-base font-normal\">\n                        {item.value.length > 1 ? (\n                          <>\n                            Between{\" \"}\n                            <span className=\"underline text-blue-600 font-extrabold\">\n                              {item.value[0]}\n                            </span>{\" \"}\n                            and{\" \"}\n                            <span className=\"underline text-blue-600 font-extrabold\">\n                              {item.value[1]}\n                            </span>\n                          </>\n                        ) : (\n                          item.value.length > 0 && (\n                            <span className=\"text-blue-700\">\n                              {item.value[0].toString()}\n                            </span>\n                          )\n                        )}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n        );\n      case questionTypeElementsType.ShortAnswer:\n        const userAnswerShortAnswer: ShortAnswerQuestionAnswerInterface[] =\n          toShortAnswer(answer.answer);\n        return (\n          <div className=\"w-full\">\n            {userAnswerShortAnswer.map((item, i) => (\n              <div\n                key={i + 1}\n                onClick={props.onClick}\n                className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n              >\n                <div className=\"text-xl\">\n                  <BsArrowRightCircleFill />\n                </div>\n                <div\n                  dangerouslySetInnerHTML={{\n                    __html: item.value,\n                  }}\n                ></div>\n              </div>\n            ))}\n            {/* Correct answers */}\n            {props.showCorrectAnswer === true && (\n              <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n                <div className=\"font-extrabold text-lg\">Correct answer</div>\n                <div>\n                  {UserAnswersSel.answer.map((item, i) => (\n                    <div\n                      key={i + 1}\n                      onClick={props.onClick}\n                      className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-blue-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                    >\n                      <div className=\"text-xl\">\n                        <BsArrowRightCircleFill />\n                      </div>\n                      <div\n                        dangerouslySetInnerHTML={{\n                          __html: item.value,\n                        }}\n                      ></div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n        );\n      default:\n        return <div className=\"text-blue-600 font-extrabold\">Answer added</div>;\n    }\n  }\n};\n\nexport default FindAnswer;\n","import React from \"react\";\nimport { DocumentClaimUser } from \"../../../actions/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { ClaimGetDocTitle } from \"./ClaimForm\";\n\ntype DocFormViewProps = {\n  thisDoc: DocumentClaimUser;\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  documentCategories: DocumentReducerInterface;\n};\n\nconst DocFormView: React.FC<DocFormViewProps> = (props) => {\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-xl\">\n              {ClaimGetDocTitle(props.documentCategories, props.thisDoc).main}\n            </span>\n            <button\n              type=\"button\"\n              className=\"btn btn-blue\"\n              onClick={() => {\n                props.setChooseClaimFile(false);\n                props.setClaimFileId(props.thisDoc.doc_id);\n                props.setViewThisFile(\"\");\n              }}\n            >\n              Choose\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span className=\"font-bold text-yellow-900 rounded px-3 py-1\">\n              {capitalizeFirstLetter(props.thisDoc.validation_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              ################\n              {/* {loadingUsers ? (\n                <div className=\"w-24 h-3 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n              ) : getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                ) ? (\n                getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                )!.user.user_info.fname +\n                \" \" +\n                getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                )!.user.user_info.lname\n              ) : (\n                \"-\"\n              )} */}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisDoc.validated_by.comment}\n            </span>\n          </div>\n          <div className=\"w-full my-1\">\n            <img\n              src={`${API.AUTH_FILES}/${props.thisDoc.files}`}\n              alt=\"doc file\"\n              className={`w-full`}\n            />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default DocFormView;\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { isClaimAllowed } from \"./ClaimForm\";\n\nconst getRejectedApplicants = (\n  applicationData: claimApplicationsInterface[]\n): claimApplicationsInterface[] => {\n  return applicationData.filter(\n    (item) => item.application_status === ApplicationStates.Rejected\n  );\n};\n\nexport const searchApplication = (\n  objList: claimApplicationsInterface[],\n  text: any\n): claimApplicationsInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (prop === \"position\") {\n        flag =\n          product.position.position_title\n            .toString()\n            .toLowerCase()\n            .indexOf(text.toLowerCase()) > -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n  // return objList.filter((product) =>\n  //   product.position.position_title.includes(text)\n  // );\n};\n\ntype FormApplicationListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  viewThisFile: string;\n  candidateApplications: claimApplicationsInterface[];\n  myClaims: CandidateClaimInterface[];\n  activeSession: SessionPlanInterface;\n};\n\nconst FormApplicationList: React.FC<FormApplicationListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            getRejectedApplicants(props.candidateApplications).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.application_id\n              )\n            ).length > 0\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Cancel\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}{\" \"}\n      {/* searchData(props.candidateApplications, searchInput) */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {getRejectedApplicants(props.candidateApplications).filter((item) =>\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            item.application_id\n          )\n        ).length > 0 ? (\n          searchApplication(\n            getRejectedApplicants(props.candidateApplications).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.application_id\n              )\n            ),\n            searchInput\n          ).map((item, index) => (\n            <div\n              className=\"group flex items-center justify-between my-1 hover:bg-gray-100\"\n              key={index + item.application_id}\n            >\n              <div\n                className=\"p-1 w-full mr-2 cursor-pointer\"\n                onClick={() => {\n                  props.setChooseClaimFile(false);\n                  props.setClaimFileId(item.application_id);\n                }}\n              >\n                <p className=\"text-base font-medium text-black\">\n                  {item.position.position_title}\n                </p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                onClick={() => {\n                  props.setViewThisFile(item.application_id);\n                }}\n              >\n                View\n              </button>\n            </div>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No Rejected document available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default FormApplicationList;\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { ClaimGetDocTitle, isClaimAllowed } from \"./ClaimForm\";\nimport { DocumentClaimUser } from \"../../../actions/claiming\";\nimport { CategorySubcategoryData } from \"../../../interfaces/candidatesInterfaces\";\nimport {\n  CandidateClaimInterface,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\n\nexport interface DocumentTitleInterface {\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  school: {\n    school_name: string;\n    _id: string;\n    status: boolean;\n    education_category_id?: {\n      education_category_title: string;\n      _id: string;\n    };\n    district_id?: {\n      district_name: string;\n      _id: string;\n    };\n  } | null;\n  school_id: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  validation_status: string;\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: string;\n    date: string;\n  };\n  doc_id: string;\n  doc_title: string;\n  category_subcategory_data: CategorySubcategoryData | null;\n}\n\nexport const DocumentTitleData = (\n  documentData: DocumentClaimUser[],\n  documentCategories: DocumentReducerInterface\n): DocumentTitleInterface[] | [] => {\n  let documentTemp: DocumentTitleInterface[] = [];\n  for (let i in documentData) {\n    documentTemp.push({\n      category_id: documentData[i].category_id,\n      company: documentData[i].company,\n      description: documentData[i].description,\n      email: documentData[i].email,\n      end_year: documentData[i].end_year,\n      files: documentData[i].files,\n      names: documentData[i].names,\n      phone_number: documentData[i].phone_number,\n      school: documentData[i].school,\n      school_id: documentData[i].school_id,\n      start_year: documentData[i].start_year,\n      sub_category_id: documentData[i].sub_category_id,\n      title: documentData[i].title,\n      year: documentData[i].year,\n      validation_status: documentData[i].validation_status,\n      validated_by: documentData[i].validated_by,\n      doc_id: documentData[i].doc_id,\n      doc_title: ClaimGetDocTitle(documentCategories, documentData[i]).main,\n      category_subcategory_data: documentData[i].category_subcategory_data,\n    });\n  }\n  return documentTemp;\n};\n\nconst getRejectedDocuments = (\n  documentData: DocumentClaimUser[]\n): DocumentClaimUser[] => {\n  console.log({\n    rejected: documentData.filter(\n      (item) => item.validation_status === \"rejected\"\n    ),\n  });\n  return documentData.filter((item) => item.validation_status === \"rejected\");\n};\n\nexport const searchDocuments = (\n  objList: DocumentTitleInterface[],\n  text: any\n): DocumentTitleInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter(\n    (product) =>\n      product.doc_title.toString().toLowerCase().indexOf(text.toLowerCase()) >\n      -1\n  );\n};\n\ntype FormDocumentListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  viewThisFile: string;\n  candidateDocuments: DocumentClaimUser[];\n  documentCategories: DocumentReducerInterface;\n  myClaims: CandidateClaimInterface[];\n  activeSession: SessionPlanInterface;\n};\n\nconst FormDocumentList: React.FC<FormDocumentListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            DocumentTitleData(\n              getRejectedDocuments(props.candidateDocuments),\n              props.documentCategories\n            ).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.doc_id\n              )\n            ).length > 0\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Cancel\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {props.candidateDocuments.filter((item) =>\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            item.doc_id\n          )\n        ).length > 0 ? (\n          searchDocuments(\n            DocumentTitleData(\n              getRejectedDocuments(props.candidateDocuments),\n              props.documentCategories\n            ).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.doc_id\n              )\n            ),\n            searchInput\n          ).map((doc, index) => (\n            <section key={index + doc.doc_id}>\n              <div className=\"group flex items-center justify-between my-1 hover:bg-gray-100\">\n                <div\n                  className=\"p-1 w-full mr-2 cursor-pointer\"\n                  onClick={() => {\n                    props.setChooseClaimFile(false);\n                    props.setClaimFileId(doc.doc_id);\n                  }}\n                >\n                  <p className=\"text-base font-medium text-black\">\n                    {ClaimGetDocTitle(props.documentCategories, doc).main}\n                  </p>\n                </div>\n                <button\n                  type=\"button\"\n                  className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                  onClick={() => {\n                    props.viewThisFile === doc.doc_id\n                      ? props.setViewThisFile(\"\")\n                      : props.setViewThisFile(doc.doc_id);\n                  }}\n                >\n                  {props.viewThisFile === doc.doc_id ? \"Close\" : \"View\"}\n                </button>\n              </div>\n            </section>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No Rejected document available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default FormDocumentList;\n"],"sourceRoot":""}
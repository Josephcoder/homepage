{"version":3,"sources":["containers/Admin/Placement/PlacementReport.tsx","shared/dataTest.tsx","actions/location.ts","components/Navigation/SideNavigation.tsx","actions/settings.ts","actions/schools.ts","components/Loading/TableLoading.tsx","utils/ExportToExcel.tsx","utils/mineduc.png","components/DownloadPDF/rest.tsx","interfaces/marks_publication.ts"],"names":["defaultReportContent","key","placementReportContentKeyInterface","applicant_name","title","status","national_id","email","phone_number","position_name","school_name","waiting_date","placement_date","_PlacementReport","props","setLoading","setState","loading","setLoadingData","loadingData","setSelectAll","selectAll","setSelectedDistrict","value","selectedDistrict","setReportTitle","thisTitle","reportTitle","setFormError","data","formError","setSortOrder","thisOrder","sortOrder","setSortProperty","thisProperty","sortProperty","setIsSorted","isSorted","setGenerateReportModal","generateReportModal","setDownloading","downloading","distinctDistrict","location","province_id","ids","result","find","item","_id","districts","Object","prototype","hasOwnProperty","call","keyDistrict","includes","push","setSort","state","loadPlacementData","thisDistrict","getDistrictPlacement","errorMsg","isEmptyOrSpaces","PushPopupAlert","theme","PopupAlertTheme","warning","componentDidMount","systemPositions","getPositions","msg","console","log","length","danger","locations","getAllRoom","FC_GeneratePDF","document","querySelectorAll","table","getElementById","reportSettings","doneBy","auth","user","fname","lname","subjectTitle","district_name","subject","period","footer","institute","generatePDF","updateContentToPrint","districtPlacements","arrayNew","n","thisPosition","position_id","undefined","dataArray","no","names","user_info","n_id","phone","school","position_title","DATE","createdAt","updatedAt","reportContentExport","dataToPrint","updateReportContent","index","findIndex","newArray","isChangeAllowed","resetReportContent","currentState","dataToShow","placements","Math","random","FC_FilterReportData","allData","filter","PlacementStatuses","output","count","capitalizeFirstLetter","PlacedCandidateStatus","PENDING","toLocaleLowerCase","itm","PLACED","REJECTED","selectedStatus","searchInput","searchDistrict","chooseDistrict","this","className","onClick","map","i","active","disabled","reportType","onChange","e","target","type","placeholder","id","cols","colSpan","sortThisArray","search","backDrop","Themes","default","close","backDropClose","widthSizeClass","ModalSize","medium","displayClose","padding","to","searchData","element","fileData","fileName","btnName","Component","PlacementReport","connect","system_settings","schools","roomLocation","getSchools","str","match","getRoleById","roles","roleId","role","system_user_role_id","getInstituteById","institutes","instituteId","education_institute_id","getPositionById","positions","position","toTwoDigit","dec","floor","slice","toString","substr","toAnyDigit","zeroes","Array","join","charAt","toUpperCase","callback","dispatch","a","axios","get","API","APPLICATION","res","ActionTypes","GET_ALL_ROOM","payload","error","errorToText","FC_CreateProvince","CREATE_PROVINCE","FC_UpdateProvince","UPDATE_PROVINCE","FC_DeleteProvince","DELETE_PROVINCE","FC_CreateDistrict","CREATE_DISTRICT","FC_UpdateDistrict","UPDATE_DISTRICT","FC_DeleteDistrict","DELETE_DISTRICT","FC_CreateSector","CREATE_SECTOR","FC_UpdateSector","UPDATE_SECTOR","FC_DeleteSector","DELETE_SECTOR","FC_CreateCenter","CREATE_CENTER","FC_UpdateCenter","UPDATE_CENTER","FC_DeleteCenter","DELETE_CENTER","FC_CreateRoom","CREATE_ROOM","FC_UpdateRoom","UPDATE_ROOM","FC_DeleteRoom","delete_room","DELETE_ROOM","FC_GetWaitingLocationList","GET_LOCATION_WAITING_LIST","_SideNavigation","PageHasSubNav","componentWillUnmount","isAuthenticated","navActive","system","navigation","children","React","SideNavigation","NavToogle","MainItem","icon","MdBrightness1","IconDefined","getSystemSettings","setAxiosToken","AUTH","GET_SYSTEM_SETTINGS","code_error","disableSystemSetting","DISABLE_SYSTEM_SETTINGS","GetTaskAccess","response","task","permitted","GET_TASK_ACCESS","GET_POSTIONS","deletePosition","DELETE_POSITION","publishPosition","PUBLISH_POSITION","GET_SCHOOLS","getSchoolById","schoolId","GET_SCHOOLS_BY_ID","createSchool","CREATE_SCHOOL","updateSchool","UPDATE_SCHOOL","deleteSchool","DELETE_SCHOOL","fetchSchoolPosts","school_id","PLACEMENT","schoolPosts","FETCH_SCHOOL_POSTS","getSchoolPlacement","GET_SCHOOL_PLACEMENT","createSchoolPost","CREATE_SCHOOL_POST","updateSchoolPost","TYPE","UPDATE_SCHOOL_POST","fetchDistrictPosts","district_id","FETCH_DISTRICT_POSTS","GET_DISTRICT_PLACEMENT","getInstitutePlacementLimit","institute_id","session_id","GET_INSTITUTE_PLACEMENT_LIMIT","getDistrictPlacementLimit","GET_DISTRICT_PLACEMENT_LIMIT","updateInstitutePlacementLimit","UPDATE_INSTITUTE_PLACEMENT_LIMIT","TableLoading","displayCols","colsArray","ExportToExcel","showIcon","apiData","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","exportToCSV","require","addFooters","doc","pageCount","internal","getNumberOfPages","setFont","setFontSize","setPage","text","String","pageSize","width","align","callBack","orientation","lMargin","jsPDF","setTextColor","addImage","Logo","getWidth","lines","splitTextToSize","pdfInMM","y","getTextWidth","addPage","autoTable","html","startY","margin","horizontal","cellPadding","rowHeight","bodyStyles","valign","columnStyles","cellWidth","tableWidth","finalY","lastAutoTable","Date","save","returnPromise","then","MarksPublicationCandidateStatus","marksPublicationCandidateReportContentKeyInterface"],"mappings":"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","file":"static/js/35.63d1c193.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { IoFilter } from \"react-icons/io5\";\nimport {\n  MdCheckBox,\n  MdCheckBoxOutlineBlank,\n  MdLocationOn,\n  MdSearch,\n} from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport searchData from \"../../../utils/search\";\nimport { getAllRoom } from \"../../../actions/location\";\nimport { getDistrictPlacement, getSchools } from \"../../../actions/schools\";\nimport { getPositions } from \"../../../actions/settings\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport { PositionAPI } from \"../../../interfaces\";\nimport {\n  placedCandidateInterface,\n  PlacedCandidateStatus,\n  placementReportContentInterface,\n  placementReportContentKeyInterface,\n  PlacementToPrintInterface,\n} from \"../../../interfaces/marks_publication\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport {\n  DistrictInterface,\n  RoomLocationInterface,\n} from \"../../../shared/interfaces\";\nimport {\n  generatePDF,\n  reportSettingsInterface,\n} from \"../../../components/DownloadPDF/rest\";\nimport { BiExport, BiSort } from \"react-icons/bi\";\nimport {\n  MainItem,\n  SideNavigation,\n} from \"../../../components/Navigation/SideNavigation\";\nimport { FiEdit } from \"react-icons/fi\";\nimport TableLoading from \"../../../components/Loading/TableLoading\";\nimport { ImFilesEmpty } from \"react-icons/im\";\nimport { DATE, search, sortThisArray } from \"../../../utils/functions\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport ExportToExcel from \"../../../utils/ExportToExcel\";\n\nconst defaultReportContent: placementReportContentInterface[] = [\n  {\n    key: placementReportContentKeyInterface.applicant_name,\n    title: \"Applicant name\",\n    status: true,\n  },\n  {\n    key: placementReportContentKeyInterface.national_id,\n    title: \"National ID\",\n    status: true,\n  },\n  {\n    key: placementReportContentKeyInterface.email,\n    title: \"Email\",\n    status: true,\n  },\n  {\n    key: placementReportContentKeyInterface.phone_number,\n    title: \"Phone\",\n    status: true,\n  },\n  {\n    key: placementReportContentKeyInterface.position_name,\n    title: \"Position\",\n    status: true,\n  },\n  {\n    key: placementReportContentKeyInterface.school_name,\n    title: \"School name\",\n    status: true,\n  },\n  {\n    key: placementReportContentKeyInterface.waiting_date,\n    title: \"Date of Waiting list\",\n    status: true,\n  },\n  {\n    key: placementReportContentKeyInterface.placement_date,\n    title: \"Date of Placement\",\n    status: true,\n  },\n  {\n    key: placementReportContentKeyInterface.status,\n    title: \"Status\",\n    status: true,\n  },\n];\n\ninterface PlacementReportProps {\n  //   REDUX ############################\n  auth: Auth;\n  districtPlacements: placedCandidateInterface[] | null;\n  systemPositions: PositionAPI[] | null;\n  locations: RoomLocationInterface[];\n  getDistrictPlacement: Function;\n  getSchools: Function;\n  getPositions: Function;\n  getAllRoom: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface PlacementReportState {\n  loading: boolean;\n  loadingData: boolean;\n  selectedStatus: PlacedCandidateStatus | \"all\";\n  selectAll: boolean;\n  // reportMainData: centerReportInterface[] | null;\n  selectedDistrict: DistrictInterface | null;\n  reportContentExport: placementReportContentInterface[];\n  reportTitle: string;\n  dataToPrint: PlacementToPrintInterface[] | null;\n  sortProperty: string;\n  isSorted: boolean;\n  sortOrder: \"ASC\" | \"DESC\";\n  searchInput: string;\n  searchDistrict: string;\n  generateReportModal: {\n    reportType: \"EXCEL\" | \"PDF\";\n    status: boolean;\n  } | null;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  // selectedDistrict: roomDistrictInterface | \"all\";\n  chooseDistrict: boolean;\n  downloading: boolean;\n}\n\nexport class _PlacementReport extends Component<\n  PlacementReportProps,\n  PlacementReportState\n> {\n  constructor(props: PlacementReportProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingData: true,\n      selectedStatus: \"all\",\n      selectAll: true,\n      selectedDistrict: null,\n      // selectedReportTitle: centerReportTitleType;\n      // reportMainData: centerReportInterface[] | null;\n      reportContentExport: defaultReportContent,\n      reportTitle: \"\",\n      dataToPrint: null,\n      sortProperty: \"\",\n      isSorted: false,\n      sortOrder: \"ASC\",\n      searchInput: \"\",\n      searchDistrict: \"\",\n      generateReportModal: null,\n      formError: null,\n      // selectedDistrict: roomDistrictInterface | \"all\";\n      chooseDistrict: true,\n      downloading: false,\n    };\n  }\n\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  };\n\n  setLoadingData = (status: boolean) => {\n    this.setState({ loadingData: status });\n  };\n\n  setSelectAll = (status: boolean) => {\n    this.setState({ selectAll: status });\n  };\n\n  setSelectedDistrict = (value: DistrictInterface | null) => {\n    this.setState({ selectedDistrict: value });\n  };\n\n  setReportTitle = (thisTitle: string) => {\n    this.setState({ reportTitle: thisTitle });\n  };\n\n  setFormError = (\n    data: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: data });\n  };\n\n  setSortOrder = (thisOrder: \"ASC\" | \"DESC\") => {\n    this.setState({ sortOrder: thisOrder });\n  };\n\n  setSortProperty = (thisProperty: string) => {\n    this.setState({ sortProperty: thisProperty });\n  };\n\n  setIsSorted = (status: boolean) => {\n    this.setState({ isSorted: status });\n  };\n\n  setGenerateReportModal = (\n    data: {\n      reportType: \"EXCEL\" | \"PDF\";\n      status: boolean;\n    } | null\n  ) => {\n    this.setState({ generateReportModal: data });\n  };\n\n  setDownloading = (value: boolean) => {\n    this.setState({ downloading: value });\n  };\n\n  distinctDistrict = (\n    location: RoomLocationInterface[],\n    province_id?: string\n  ): DistrictInterface[] => {\n    let ids: string[] = [],\n      result: DistrictInterface[] = [];\n\n    if (province_id) {\n      result = location.find((item) => item._id === province_id)\n        ? location.find((item) => item._id === province_id)!.districts\n          ? location.find((item) => item._id === province_id)!.districts\n          : []\n        : [];\n    } else {\n      for (const key in location) {\n        if (Object.prototype.hasOwnProperty.call(location, key)) {\n          for (const keyDistrict in location[key].districts) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                location[key].districts,\n                keyDistrict\n              )\n            ) {\n              if (!ids.includes(location[key].districts[keyDistrict]._id)) {\n                ids.push(location[key].districts[keyDistrict]._id);\n                result.push(location[key].districts[keyDistrict]);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return result;\n  };\n\n  setSort = (thisProperty: string) => {\n    if (\n      this.state.sortProperty === thisProperty &&\n      this.state.sortOrder === \"ASC\"\n    ) {\n      this.setSortOrder(\"DESC\");\n    } else {\n      this.setSortOrder(\"ASC\");\n    }\n    this.setSortProperty(thisProperty);\n    this.setIsSorted(true);\n  };\n\n  loadPlacementData = (thisDistrict: DistrictInterface) => {\n    this.props.getDistrictPlacement(\n      thisDistrict._id,\n      (status: boolean, errorMsg: string) => {\n        this.setLoadingData(status);\n        if (!status && !isEmptyOrSpaces(errorMsg)) {\n          this.props.PushPopupAlert({\n            title: errorMsg,\n            theme: PopupAlertTheme.warning,\n          });\n        }\n      }\n    );\n  };\n\n  componentDidMount = () => {\n    if (this.props.systemPositions === null) {\n      this.props.getPositions((status: boolean, msg: string) => {\n        this.setLoading(status);\n        console.log({ status: status, msg: msg });\n        if (msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n\n    if (this.props.locations.length === 0) {\n      this.props.getAllRoom(\n        (status: boolean, msg: string, data?: RoomLocationInterface[]) => {\n          this.setLoading(status);\n          if (!status && msg.length > 0) {\n            console.log(msg);\n          }\n        }\n      );\n    } else {\n      this.setLoading(false);\n    }\n  };\n\n  FC_GeneratePDF = () => {\n    if (!document.querySelectorAll(\"#report_content tbody tr\").length) {\n      this.props.PushPopupAlert({\n        title: `Can't generate Report of empty Data`,\n        theme: PopupAlertTheme.warning,\n      });\n      return false;\n    }\n\n    if (this.state.selectedDistrict) {\n      const table: HTMLElement | null =\n        document.getElementById(\"report_content\");\n      const reportSettings: reportSettingsInterface = {\n        doneBy: this.props.auth.user.fname + \" \" + this.props.auth.user.lname,\n        title: \"Placement Report\",\n        subjectTitle: `${this.state.selectedDistrict.district_name} district`,\n        subject: \"All room\",\n        period: \"All session\",\n        footer: \"Online Recruitment\",\n        institute: \"All institute\",\n      };\n      table && generatePDF(reportSettings, table, this.setDownloading);\n    }\n  };\n\n  updateContentToPrint = () => {\n    // UPDATE REPORT TITLE ========================\n    if (this.state.selectedDistrict) {\n      let title =\n        \"Room Report - \" +\n        this.state.selectedDistrict.district_name +\n        \" district\";\n      // if (this.state.selectedSession) {\n      //   title =\n      //     \"Room Report \" +\n      //     this.state.selectedDistrict.district_name +\n      //     \" district - \" +\n      //     this.state.selectedSession.session_plan_name;\n      // }\n      this.setReportTitle(title);\n    }\n    // UPDATE CONTENT =============================\n    if (this.props.districtPlacements) {\n      let arrayNew: PlacementToPrintInterface[] = [];\n      let n: number = 1;\n      for (const key in this.props.districtPlacements) {\n        if (\n          Object.prototype.hasOwnProperty.call(\n            this.props.districtPlacements,\n            key\n          )\n        ) {\n          let thisPosition = this.props.systemPositions\n            ? this.props.systemPositions.find(\n                (item) =>\n                  item.position_id ===\n                  this.props.districtPlacements![key].position_id\n              )\n            : undefined;\n          let dataArray: PlacementToPrintInterface | null = null;\n          dataArray = {\n            no: n,\n            names:\n              this.props.districtPlacements![key].user_info.fname +\n              \" \" +\n              this.props.districtPlacements![key].user_info.lname,\n            national_id: this.props.districtPlacements![key].n_id,\n            phone: this.props.districtPlacements![key].phone_number,\n            email: this.props.districtPlacements![key].email,\n            school_name: this.props.districtPlacements![key].school\n              ? this.props.districtPlacements![key].school.school_name\n              : \"\",\n            position_name: thisPosition ? thisPosition.position_title : \"\",\n            waiting_date: DATE(this.props.districtPlacements![key].createdAt),\n            placement_date: DATE(this.props.districtPlacements![key].updatedAt),\n            status: this.props.districtPlacements![key].status,\n          };\n\n          for (const key in this.state.reportContentExport) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                this.state.reportContentExport,\n                key\n              )\n            ) {\n              if (!this.state.reportContentExport[key].status && dataArray) {\n                delete dataArray[this.state.reportContentExport[key].key];\n              }\n            }\n          }\n          dataArray && arrayNew.push(dataArray);\n          n++;\n        }\n      }\n      this.setState({ dataToPrint: arrayNew });\n      arrayNew = [];\n      n = 1;\n    }\n  };\n\n  updateReportContent = (key: placementReportContentKeyInterface) => {\n    let index: number = this.state.reportContentExport.findIndex(\n      (item) => item.key === key\n    );\n    let newArray: placementReportContentInterface[] =\n      this.state.reportContentExport;\n    newArray[index].status = !newArray[index].status;\n    this.setState({ reportContentExport: newArray });\n    let isSelectAllNeeded = newArray.find((item) => item.status === false);\n    if (isSelectAllNeeded) {\n      this.setSelectAll(false);\n    } else {\n      this.setSelectAll(true);\n    }\n\n    // UPDATE APPLICATION LIST FOR UPDATE ==============================\n    this.updateContentToPrint();\n  };\n\n  isChangeAllowed = (key: placementReportContentKeyInterface): boolean => {\n    if (\n      key === placementReportContentKeyInterface.applicant_name ||\n      key === placementReportContentKeyInterface.position_name ||\n      key === placementReportContentKeyInterface.national_id\n    ) {\n      return false;\n    }\n    return true;\n  };\n\n  resetReportContent = (currentState: boolean) => {\n    let newArray: placementReportContentInterface[] =\n      this.state.reportContentExport;\n    for (const key in newArray) {\n      if (this.isChangeAllowed(newArray[key].key)) {\n        newArray[key].status = !currentState;\n      }\n    }\n\n    this.setState({ reportContentExport: newArray });\n    this.setSelectAll(!currentState);\n    this.updateContentToPrint();\n  };\n\n  dataToShow = (\n    placements: placedCandidateInterface[]\n  ): PlacementToPrintInterface[] => {\n    let result: PlacementToPrintInterface[] = [];\n    for (const key in placements) {\n      if (Object.prototype.hasOwnProperty.call(placements, key)) {\n        let thisPosition = this.props.systemPositions\n          ? this.props.systemPositions.find(\n              (item) =>\n                item.position_id ===\n                this.props.districtPlacements![key].position_id\n            )\n          : undefined;\n        result.push({\n          no: Math.random(),\n          names:\n            this.props.districtPlacements![key].user_info.fname +\n            \" \" +\n            this.props.districtPlacements![key].user_info.lname,\n          national_id: this.props.districtPlacements![key].n_id,\n          phone: this.props.districtPlacements![key].phone_number,\n          email: this.props.districtPlacements![key].email,\n          school_name: this.props.districtPlacements![key].school\n            ? this.props.districtPlacements![key].school.school_name\n            : \"\",\n          position_name: thisPosition ? thisPosition.position_title : \"\",\n          waiting_date: DATE(this.props.districtPlacements![key].createdAt),\n          placement_date: DATE(this.props.districtPlacements![key].createdAt),\n          status: this.props.districtPlacements![key].status,\n        });\n      }\n    }\n    return result;\n  };\n\n  FC_FilterReportData = (\n    allData: PlacementToPrintInterface[],\n    status: PlacedCandidateStatus | \"all\"\n  ): PlacementToPrintInterface[] => {\n    let result: PlacementToPrintInterface[] = allData;\n    if (status !== \"all\") {\n      result = result.filter((item) => item.status === status);\n    }\n\n    return result;\n  };\n\n  PlacementStatuses = (\n    allData: placedCandidateInterface[]\n  ): {\n    title: string;\n    count: number;\n    status: PlacedCandidateStatus | \"all\";\n  }[] => {\n    let output: {\n      title: string;\n      count: number;\n      status: PlacedCandidateStatus | \"all\";\n    }[] = [{ title: \"All\", count: allData.length, status: \"all\" }];\n    output.push(\n      {\n        title: capitalizeFirstLetter(\n          PlacedCandidateStatus.PENDING.toLocaleLowerCase()\n        ),\n        count: allData.filter(\n          (itm) => itm.status === PlacedCandidateStatus.PENDING\n        ).length,\n        status: PlacedCandidateStatus.PENDING,\n      },\n      {\n        title: capitalizeFirstLetter(\n          PlacedCandidateStatus.PLACED.toLocaleLowerCase()\n        ),\n        count: allData.filter(\n          (itm) => itm.status === PlacedCandidateStatus.PLACED\n        ).length,\n        status: PlacedCandidateStatus.PLACED,\n      },\n      {\n        title: capitalizeFirstLetter(\n          PlacedCandidateStatus.REJECTED.toLocaleLowerCase()\n        ),\n        count: allData.filter(\n          (itm) => itm.status === PlacedCandidateStatus.REJECTED\n        ).length,\n        status: PlacedCandidateStatus.REJECTED,\n      }\n    );\n    return output;\n  };\n\n  render() {\n    if (this.state.loading) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading data...\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <SideNavigation>\n          <div className=\"\">\n            <div className=\"text-gray-600 text-sm mb-2\">District:</div>\n            <div\n              onClick={() => this.setState({ chooseDistrict: true })}\n              className=\"font-bold bg-blue-50 border border-blue-200 rounded py-2 cursor-pointer text-xs px-2 hover:underline justify-between text-blue-600  mb-4 w-full flex flex-row items-center animate__animated animate__zoomIn\"\n            >\n              {this.state.selectedDistrict !== null\n                ? `${this.state.selectedDistrict.district_name}`\n                : \"Choose district\"}\n              <FiEdit className=\"text-lg text-blue-600\" />\n            </div>\n          </div>\n\n          <div className=\"pt-1\">\n            <div className=\"text-sm text-gray-700 pb-2 pt-2\">\n              Placement statuses:\n            </div>\n            {this.props.districtPlacements === null ||\n            this.state.loadingData ? (\n              <Loading />\n            ) : (\n              this.PlacementStatuses(this.props.districtPlacements!).map(\n                (\n                  itm: {\n                    title: string;\n                    count: number;\n                    status: PlacedCandidateStatus | \"all\";\n                  },\n                  i: number\n                ) => (\n                  // itm.count > 0 &&\n                  <Fragment key={itm.title}>\n                    <div\n                      onClick={() =>\n                        this.setState({ selectedStatus: itm.status })\n                      }\n                    >\n                      <MainItem\n                        title={itm.title}\n                        count={itm.count}\n                        active={\n                          this.state.selectedStatus === itm.status\n                            ? true\n                            : false\n                        }\n                      />\n                    </div>\n                  </Fragment>\n                )\n              )\n            )}\n          </div>\n        </SideNavigation>\n\n        {/* BODY CONTENT--------------------------------- */}\n        <section>\n          {/* REPORT TITLE ============================================ */}\n          <div className=\"grid md:grid-cols-12\">\n            <div className=\"col-span-8\">\n              <div className=\"mt-4 mx-4 flex flex-col gap-1\">\n                <span className=\"text-3xl font-bold text-gray-700\">\n                  Placement report\n                </span>\n              </div>\n            </div>\n            <div className=\"col-span-4\">\n              <div className=\"float-right mt-2\">\n                {this.props.districtPlacements &&\n                  this.props.districtPlacements.length > 0 && (\n                    <div className=\"flex flex-row items-center justify-end font-bold mb-2\">\n                      <BiExport className=\"text-2xl text-gray-500\" />\n                      <span className=\"text-gray-500\">Export as</span>\n                      <button\n                        className=\"px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200\"\n                        disabled={\n                          this.props.districtPlacements &&\n                          !this.state.downloading\n                            ? false\n                            : true\n                        }\n                        onClick={() => {\n                          this.updateContentToPrint();\n                          this.setGenerateReportModal({\n                            reportType: \"EXCEL\",\n                            status: true,\n                          });\n                        }}\n                      >\n                        EXCEL\n                      </button>\n                      <button\n                        className={`px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200 ${\n                          this.state.downloading && \"cursor-wait\"\n                        }`}\n                        onClick={() => this.FC_GeneratePDF()}\n                        disabled={this.props.districtPlacements ? false : true}\n                      >\n                        PDF\n                      </button>\n                    </div>\n                  )}\n              </div>\n            </div>\n          </div>\n          {/* END REPORT TITLE ============================================ */}\n\n          {/* ######################################################## */}\n          <div className=\"bg-white my-4\">\n            <div className=\"w-full px-2 py-2\">\n              <input\n                onChange={(e) => this.setState({ searchInput: e.target.value })}\n                type=\"text\"\n                value={this.state.searchInput}\n                placeholder=\"Search...\"\n                className=\"w-full bg-gray-100 py-2 px-3 rounded focus:border-gray-800\"\n                disabled={\n                  this.state.loadingData === null ||\n                  this.props.districtPlacements === null ||\n                  this.FC_FilterReportData(\n                    this.dataToShow(this.props.districtPlacements),\n                    this.state.selectedStatus\n                  ).length <= 0\n                }\n              />\n            </div>\n            <div className=\"w-full overflow-x-auto\">\n              <table className=\"w-full shadow\" id=\"report_content\">\n                <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                  <tr>\n                    <td className=\"px-2 py-2\">#</td>\n                    <td\n                      className=\"px-2 py-2 cursor-pointer\"\n                      onClick={() => this.setSort(\"names\")}\n                    >\n                      <div className=\"flex items-center gap-1\">\n                        Names <BiSort />\n                      </div>\n                    </td>\n                    <td\n                      className=\"px-2 py-2 cursor-pointer\"\n                      onClick={() => this.setSort(\"national_id\")}\n                    >\n                      <div className=\"flex items-center gap-1\">\n                        National Id <BiSort />\n                      </div>\n                    </td>\n                    <td\n                      className=\"px-2 py-2 cursor-pointer\"\n                      onClick={() => this.setSort(\"phone\")}\n                    >\n                      <div className=\"flex items-center gap-1\">\n                        Phone <BiSort />\n                      </div>\n                    </td>\n                    <td\n                      className=\"px-2 py-2 cursor-pointer\"\n                      onClick={() => this.setSort(\"email\")}\n                    >\n                      <div className=\"flex items-center gap-1\">\n                        Email <BiSort />\n                      </div>\n                    </td>\n                    <td\n                      className=\"px-2 py-2 cursor-pointer\"\n                      onClick={() => this.setSort(\"position_name\")}\n                    >\n                      <div className=\"flex items-center gap-1\">\n                        Position <BiSort />\n                      </div>\n                    </td>\n                    <td\n                      className=\"px-2 py-2 cursor-pointer\"\n                      onClick={() => this.setSort(\"school_name\")}\n                    >\n                      <div className=\"flex items-center gap-1\">\n                        School <BiSort />\n                      </div>\n                    </td>\n                    <td\n                      className=\"px-2 py-2 cursor-pointer\"\n                      onClick={() => this.setSort(\"waiting_date\")}\n                    >\n                      <div className=\"flex items-center gap-1\">\n                        Waiting List Date <BiSort />\n                      </div>\n                    </td>\n                    <td\n                      className=\"px-2 py-2 cursor-pointer\"\n                      onClick={() => this.setSort(\"placement_date\")}\n                    >\n                      <div className=\"flex items-center gap-1\">\n                        Placement Date <BiSort />\n                      </div>\n                    </td>\n                    <td\n                      className=\"px-2 py-2 cursor-pointer\"\n                      onClick={() => this.setSort(\"status\")}\n                    >\n                      <div className=\"flex items-center gap-1\">\n                        Status <BiSort />\n                      </div>\n                    </td>\n                  </tr>\n                </thead>\n                <tbody>\n                  {!this.state.selectedDistrict ? (\n                    <tr>\n                      <td colSpan={10} className=\"px-2 py-2\">\n                        <div className=\"flex flex-col text-gray-400 items-center justify-center bg-gray-100 rounded py-10\">\n                          <ImFilesEmpty className=\"text-8xl text-gray-400 mb-2 animate__animated animate__shakeX\" />\n                          <span className=\"text-sm font-bold\">\n                            No district selected! Please choose district to get\n                            data\n                          </span>\n                          <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n                            <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                              <li\n                                onClick={() =>\n                                  this.setState({ chooseDistrict: true })\n                                }\n                                className=\"underline text-gray-500 cursor-pointer\"\n                              >\n                                Choose another district\n                              </li>\n                            </ul>\n                          </div>\n                        </div>\n                      </td>\n                    </tr>\n                  ) : this.props.districtPlacements === null ||\n                    this.state.loadingData === null ? (\n                    <TableLoading cols={10} />\n                  ) : this.FC_FilterReportData(\n                      this.dataToShow(this.props.districtPlacements),\n                      this.state.selectedStatus\n                    ).length === 0 ? (\n                    <tr>\n                      <td colSpan={10} className=\"px-2 py-2\">\n                        <div className=\"flex flex-col text-gray-400 items-center justify-center bg-gray-100 rounded py-10\">\n                          <ImFilesEmpty className=\"text-8xl text-gray-400 mb-2 animate__animated animate__shakeX\" />\n                          <span className=\"text-sm font-bold\">\n                            No result found! Please try to search again\n                          </span>\n                          <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n                            <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                              <li\n                                onClick={() =>\n                                  this.setState({ chooseDistrict: true })\n                                }\n                                className=\"underline text-gray-500 cursor-pointer\"\n                              >\n                                Choose another district\n                              </li>\n                            </ul>\n                          </div>\n                        </div>\n                      </td>\n                    </tr>\n                  ) : (\n                    sortThisArray(\n                      this.state.isSorted,\n                      search(\n                        this.FC_FilterReportData(\n                          this.dataToShow(this.props.districtPlacements),\n                          this.state.selectedStatus\n                        ),\n                        this.state.searchInput\n                      ),\n                      this.state.sortProperty,\n                      this.state.sortOrder\n                    ).map((item: PlacementToPrintInterface, i) => (\n                      <tr\n                        key={i + item.no}\n                        className={`${\n                          i % 2 !== 0 ? \"bg-gray-100\" : \"bg-white\"\n                        } hover:bg-blue-100 hover:text-blue-700 border-b hover:border-blue-500 text-sm ${\n                          item.status === PlacedCandidateStatus.REJECTED\n                            ? \"border-yellow-500 text-gray-700 bg-yellow-200\"\n                            : item.status === PlacedCandidateStatus.PENDING\n                            ? \"border-gray-500 text-gray-700 bg-gray-200\"\n                            : \"text-gray-700 border-blue-300 bg-blue-200\"\n                        }`}\n                      >\n                        <td className=\"px-2 py-2\">{i + 1}</td>\n                        <td className=\"px-2 py-2\">{item.names}</td>\n                        <td className=\"px-2 py-2\">{item.national_id}</td>\n                        <td className=\"px-2 py-2\">{item.phone}</td>\n                        <td className=\"px-2 py-2\">{item.email}</td>\n                        <td className=\"px-2 py-2\">{item.position_name}</td>\n                        <td className=\"px-2 py-2\">{item.school_name}</td>\n                        <td className=\"px-2 py-2\">{item.waiting_date}</td>\n                        <td className=\"px-2 py-2\">{item.placement_date}</td>\n                        <td className=\"px-2 py-2\">{item.status}</td>\n                      </tr>\n                    ))\n                  )}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </section>\n        {/* END BODY CONTENT--------------------------------- */}\n\n        {/* ---------------------------------------------------------------------------- */}\n        {/* PERIOD && POSITION CONTENT MODAL */}\n        {this.state.chooseDistrict === true && (\n          <Modal\n            title={\n              <div className=\"flex flex-row gap-4 items-center\">\n                <IoFilter className=\"text-5xl text-blue-600\" />\n                <div className=\"flex flex-col\">\n                  <span className=\"font-bold text-xl text-blue-600\">\n                    Choose a district\n                  </span>\n                </div>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() => this.setState({ chooseDistrict: false })}\n            backDropClose={true}\n            widthSizeClass={ModalSize.medium}\n            displayClose={true}\n            padding={{ title: true }}\n          >\n            <div className=\"px-2 pb-2\">\n              {this.distinctDistrict(this.props.locations).length === 0 ? (\n                <div className=\"flex flex-col text-gray-400 items-center justify-center\">\n                  <MdSearch className=\"text-6xl\" />\n                  <div className=\"flex flex-col items-center justify-center\">\n                    <span>No district found! Please go back!</span>\n                    <Link\n                      to=\"/\"\n                      className=\"btn bg-yellow-100 text-yellow-700 my-4 hover:bg-yellow-200\"\n                    >\n                      Go back\n                    </Link>\n                  </div>\n                </div>\n              ) : (\n                <>\n                  <div className=\"flex flex-col\">\n                    <span className=\"text-gray-600 text-xs font-bold\">\n                      Filter by district name\n                    </span>\n                    <input\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                        this.setState({ searchDistrict: e.target.value })\n                      }\n                      type=\"text\"\n                      className=\"mb-4 bg-gray-100 px-3 py-2 rounded\"\n                      placeholder=\"Keyword...\"\n                    />\n                  </div>\n                  <div className=\" max-h-96 overflow-y-auto\">\n                    {searchData(\n                      this.distinctDistrict(this.props.locations),\n                      this.state.searchDistrict\n                    ).map((item: DistrictInterface, key) => (\n                      <div\n                        key={key + 1}\n                        onClick={() => {\n                          this.setSelectedDistrict(item);\n                          this.loadPlacementData(item);\n                          this.setState({\n                            chooseDistrict: false,\n                            reportTitle:\n                              \"Placement report in \" +\n                              item.district_name +\n                              \" district\",\n                          });\n                        }}\n                        className=\"bg-white cursor-pointer rounded  px-3 py-2 border border-gray-200 hover:border-blue-500 hover:bg-blue-100 mb-2\"\n                      >\n                        <div className=\"grid lg:grid-cols-12\">\n                          <div className=\"col-span-12 lg:col-span-10\">\n                            <div className=\"flex flex-row items-center gap-3\">\n                              <div>\n                                <MdLocationOn className=\"text-2xl md:text-4xl text-blue-600\" />\n                              </div>\n                              <div className=\"flex flex-col\">\n                                <span className=\"text-xs lg:text-sm font-bold text-gray-700\">\n                                  {item.district_name}\n                                </span>\n                              </div>\n                            </div>\n                          </div>\n                          <div className=\"col-span-12 lg:col-span-2 hidden lg:block\">\n                            <div className=\"h-full flex items-center justify-end\">\n                              <div className=\"btn bg-blue-600 text-white float-right\">\n                                Choose\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </>\n              )}\n            </div>\n          </Modal>\n        )}\n        {/* END PERIOD && POSITION CONTENT MODAL */}\n\n        {/* --------------------------------------------------------------- */}\n        {/* GENERATE REPORT MODAL CONTENT MODAL */}\n        {this.state.generateReportModal !== null &&\n          this.state.generateReportModal.status === true && (\n            <Modal\n              title={\n                <div className=\"flex flex-row gap-4 items-center\">\n                  {/* <IoBriefcase className=\"text-5xl text-gray-500\" /> */}\n                  <div className=\"flex flex-col\">\n                    <span className=\"font-bold text-2xl text-gray-500\">\n                      Generating Report contents\n                    </span>\n                    <span className=\"text-sm text-blue-600 font-normal\">\n                      Generating {this.state.generateReportModal.reportType}{\" \"}\n                      Report\n                    </span>\n                  </div>\n                </div>\n              }\n              backDrop={true}\n              theme={Themes.default}\n              close={() => this.setGenerateReportModal(null)}\n              backDropClose={false}\n              widthSizeClass={ModalSize.medium}\n              displayClose={true}\n              padding={{ title: true }}\n            >\n              <div className=\"px-6\">\n                <div className=\"my-2 text-base text-gray-700 sm:text-lg\">\n                  <div className=\"flex flex-col\">\n                    <label>Title</label>\n                    <input\n                      type=\"text\"\n                      className={`text-left input-white w-20 inline-block ${\n                        this.state.formError &&\n                        this.state.formError.element === \"report_title\"\n                          ? \"border-red-500\"\n                          : \"border-gray-500\"\n                      } border-2`}\n                      placeholder=\"Sub Category Title\"\n                      value={this.state.reportTitle}\n                      onChange={(e) => {\n                        this.setFormError(null);\n                        this.setReportTitle(e.target.value);\n                      }}\n                      disabled={this.props.districtPlacements ? false : true}\n                    />\n                    {this.state.formError &&\n                      this.state.formError.element === \"report_title\" && (\n                        <span className=\"text-red-500\">\n                          {this.state.formError.msg}\n                        </span>\n                      )}\n                  </div>\n                  <div className=\"flex flex-col mt-2\">\n                    <label>Report content</label>\n                    <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                      {this.state.reportContentExport.map((item, index) => (\n                        <div\n                          key={index}\n                          className={`flex items-center gap-1 ${\n                            this.isChangeAllowed(item.key)\n                              ? \"cursor-pointer\"\n                              : \"cursor-not-allowed\"\n                          }`}\n                          onClick={() =>\n                            this.isChangeAllowed(item.key) &&\n                            this.updateReportContent(item.key)\n                          }\n                          title={\n                            !this.isChangeAllowed(item.key)\n                              ? \"Required for every report!\"\n                              : \"\"\n                          }\n                        >\n                          {item.status ? (\n                            <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                          ) : (\n                            <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                          )}\n                          <span>{item.title}</span>\n                        </div>\n                      ))}\n                    </div>\n                    {this.state.formError &&\n                      this.state.formError.element === \"report_content\" && (\n                        <span className=\"text-red-500\">\n                          {this.state.formError.msg}\n                        </span>\n                      )}\n                  </div>\n                </div>\n                <div className=\"flex justify-between mb-2 mt-4\">\n                  <div\n                    className={`flex items-center gap-1 cursor-pointer`}\n                    onClick={() =>\n                      this.resetReportContent(this.state.selectAll)\n                    }\n                  >\n                    {this.state.selectAll ? (\n                      <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                    ) : (\n                      <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                    )}\n                    <span>Select all</span>\n                  </div>\n\n                  {this.state.dataToPrint && this.props.districtPlacements && (\n                    <ExportToExcel\n                      fileData={this.state.dataToPrint}\n                      fileName={this.state.reportTitle}\n                      btnName=\"Generate\"\n                    />\n                  )}\n                </div>\n              </div>\n            </Modal>\n          )}\n        {/* END GENERATE REPORT MODAL CONTENT MODAL */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system_settings,\n  locations,\n  schools,\n}: StoreState): {\n  auth: Auth;\n  districtPlacements: placedCandidateInterface[] | null;\n  locations: RoomLocationInterface[];\n  systemPositions: PositionAPI[] | null;\n} => {\n  return {\n    auth: auth,\n    systemPositions: system_settings.systemPositions,\n    districtPlacements: schools.districtPlacements,\n    locations: locations.roomLocation,\n  };\n};\n\nexport const PlacementReport = connect(mapStateToProps, {\n  getDistrictPlacement,\n  getAllRoom,\n  getSchools,\n  getPositions,\n  PushPopupAlert,\n})(_PlacementReport);\n","import { education_category } from \"../interfaces\";\nimport { PositionAPI } from \"../interfaces/position\";\nimport {\n  CustomeAccessInterface,\n  PostSchoolInterface,\n  RoleToUserInterface,\n  SchoolInfoInterface,\n  SystemUserRoleInterface,\n} from \"./interfaces\";\n\nexport const data_posts_school: PostSchoolInterface[] = [];\n\nexport const isEmptyOrSpaces = (str: string): boolean => {\n  return str === null || str.match(/^ *$/) !== null;\n};\n\nexport const getUserTitle = (\n  accessRoles: SystemUserRoleInterface[],\n  roleId: string\n): string => {\n  const result = accessRoles.find((e) => e.system_user_role_id === roleId);\n  return result ? result.role : \"\";\n};\n\nexport const getRoleById = (\n  roles: SystemUserRoleInterface[],\n  roleId: string\n): SystemUserRoleInterface => {\n  return roles.filter((role) => role.system_user_role_id === roleId)[0];\n};\n\nexport const getInstituteById = (\n  institutes: education_category[],\n  instituteId: string\n): education_category | undefined => {\n  return institutes.find((item) => item.education_institute_id === instituteId);\n};\n\nexport const getPositionById_old = (\n  positions: PositionAPI[],\n  position_id: string\n): PositionAPI => {\n  console.log({\n    positions,\n    position_id,\n    data: positions.filter(\n      (position) => position.position_id === position_id\n    )[0],\n  });\n  return positions.filter(\n    (position) => position.position_id === position_id\n  )[0];\n};\n\nexport const getPositionById = (\n  positions: PositionAPI[],\n  position_id: string\n): PositionAPI | undefined => {\n  return positions.find((position) => position.position_id === position_id);\n};\n\nexport const getSchoolById = (\n  schools: SchoolInfoInterface[],\n  school_id: string\n): SchoolInfoInterface => {\n  return schools.filter((school) => school.school_id === school_id)[0];\n};\n\nexport const getPostById = (\n  posts: PostSchoolInterface[],\n  post_id: string\n): PostSchoolInterface => {\n  return posts.filter((post) => post.school_id === post_id)[0];\n};\n\nexport const getPostsBySchoolId = (\n  posts: PostSchoolInterface[],\n  school_id: string\n): PostSchoolInterface[] => {\n  return posts.filter((post) => post.school_id === school_id);\n};\n\nexport const getPostsByIds = (\n  posts: PostSchoolInterface[],\n  school_id: string,\n  position_id: string\n): PostSchoolInterface[] => {\n  return posts.filter(\n    (post) => post.school_id === school_id && post.position_id === position_id\n  );\n};\n\nexport const displayDate = (dateToDisplay: Date): string => {\n  return new Intl.DateTimeFormat(\"en-GB\", {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"2-digit\",\n  }).format(dateToDisplay);\n};\n\nexport const userAccess = (\n  defaultAccess: RoleToUserInterface,\n  customAccess: CustomeAccessInterface\n): RoleToUserInterface => {\n  // const data = defaultAccess.access.map((default,index,customAccess)=>{\n  //   let data_custom = customAccess\n  //   if\n  // })\n  // return customAccess.filter((custom) => custom.id === accecc_id)[0];\n  return defaultAccess;\n};\n\n// export const groupBy = (list: [], keyGetter: Function) => {\n//   const map = new Map();\n//   list.forEach((item) => {\n//     const key = keyGetter(item);\n//     const collection = map.get(key);\n//     if (!collection) {\n//       map.set(key, [item]);\n//     } else {\n//       collection.push(item);\n//     }\n//   });\n//   return map;\n// };\n\nexport const toTwoDigit = (value: number): string => {\n  var dec = value - Math.floor(value);\n  value = value - dec;\n  return (\"0\" + value).slice(-2) + dec.toString().substr(1);\n};\n\nexport const toAnyDigit = (\n  value: string | number,\n  padding: number = 3\n): string => {\n  var zeroes = new Array(padding + 1).join(\"0\");\n  return (zeroes + value).slice(-padding);\n};\n\nexport const capitalizeFirstLetter = (value: string): string => {\n  return value.charAt(0).toUpperCase() + value.slice(1);\n};\n\nexport const isDateExpiried = (paramDate: string) => {\n  const thisDate = new Date(paramDate);\n  const today = new Date();\n  if (thisDate.getTime() < today.getTime()) {\n    return true;\n  }\n\n  return false;\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { API } from \"../utils/api\";\nimport {\n  CentersInterface,\n  DistrictInterface,\n  RoomLocationInterface,\n  RoomsInterface,\n  SectorInterface,\n} from \"../shared/interfaces\";\nimport { errorToText } from \"../utils/errors\";\nimport { LocationAPI } from \".\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\nexport interface getAllRoomActions {\n  type: ActionTypes.GET_ALL_ROOM;\n  payload: RoomLocationInterface[];\n}\n\nexport interface createProvinceActions {\n  type: ActionTypes.CREATE_PROVINCE;\n  payload: RoomLocationInterface;\n}\n\nexport interface updateProvinceActions {\n  type: ActionTypes.UPDATE_PROVINCE;\n  payload: {\n    province_id: string;\n    province_name: string;\n    provice_code: number;\n  };\n}\n\nexport interface deleteProvinceActions {\n  type: ActionTypes.DELETE_PROVINCE;\n  payload: string;\n}\n\n// ============ DISTRICT =================\nexport interface createDistrictActions {\n  type: ActionTypes.CREATE_DISTRICT;\n  payload: { province_id: string; data: DistrictInterface };\n}\n\nexport interface updateDistrictActions {\n  type: ActionTypes.UPDATE_DISTRICT;\n  payload: {\n    province_id: string;\n    district_id: string;\n    district_name: string;\n    district_code: number;\n  };\n}\n\nexport interface deleteDistrictActions {\n  type: ActionTypes.DELETE_DISTRICT;\n  payload: { province_id: string; district_id: string };\n}\n\n// ============ SECTOR =================\nexport interface createSectorActions {\n  type: ActionTypes.CREATE_SECTOR;\n  payload: {\n    province_id: string;\n    district_id: string;\n    data: SectorInterface;\n  };\n}\n\nexport interface updateSectorActions {\n  type: ActionTypes.UPDATE_SECTOR;\n  payload: {\n    province_id: string;\n    district_id: string;\n    sector_id: string;\n    sector_name: string;\n    sector_code: number;\n  };\n}\n\nexport interface deleteSectorActions {\n  type: ActionTypes.DELETE_SECTOR;\n  payload: { province_id: string; district_id: string; sector_id: string };\n}\n\n// ============ CENTERS =================\nexport interface createCenterActions {\n  type: ActionTypes.CREATE_CENTER;\n  payload: {\n    province_id: string;\n    district_id: string;\n    data: CentersInterface;\n  };\n}\n\nexport interface updateCenterActions {\n  type: ActionTypes.UPDATE_CENTER;\n  payload: {\n    province_id: string;\n    district_id: string;\n    examination_center_id: string;\n    center_name: string;\n  };\n}\n\nexport interface deleteCenterActions {\n  type: ActionTypes.DELETE_CENTER;\n  payload: { province_id: string; district_id: string; center_id: string };\n}\n\n// ============ ROOMS =================\nexport interface createRoomActions {\n  type: ActionTypes.CREATE_ROOM;\n  payload: {\n    province_id: string;\n    district_id: string;\n    center_id: string;\n    data: RoomsInterface;\n  };\n}\n\nexport interface updateRoomActions {\n  type: ActionTypes.UPDATE_ROOM;\n  payload: {\n    province_id: string;\n    district_id: string;\n    center_id: string;\n    room_id: string;\n    room_number: number;\n    capacity: number;\n  };\n}\n\nexport interface deleteRoomActions {\n  type: ActionTypes.DELETE_ROOM;\n  payload: {\n    province_id: string;\n    district_id: string;\n    center_id: string;\n    room_id: string;\n  };\n}\n\nexport interface GetWaitingLocationListAction {\n  type: ActionTypes.GET_LOCATION_WAITING_LIST;\n  payload: LocationAPI;\n}\n\nexport type RoomActionType =\n  | getAllRoomActions\n  | createProvinceActions\n  | updateProvinceActions\n  | deleteProvinceActions\n  | createDistrictActions\n  | updateDistrictActions\n  | deleteDistrictActions\n  | createSectorActions\n  | updateSectorActions\n  | deleteSectorActions\n  | createCenterActions\n  | updateCenterActions\n  | deleteCenterActions\n  | createRoomActions\n  | updateRoomActions\n  | deleteRoomActions\n  | GetWaitingLocationListAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getAllRoom = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<RoomLocationInterface[]>(\n        `${API.APPLICATION}/roomlocation`\n      );\n      dispatch<getAllRoomActions>({\n        type: ActionTypes.GET_ALL_ROOM,\n        payload: res.data,\n      });\n      console.log(\"====================================\");\n      console.log({ res: res.data });\n      console.log(\"====================================\");\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.error(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const FC_CreateProvince = (data: RoomLocationInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<createProvinceActions>({\n      type: ActionTypes.CREATE_PROVINCE,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateProvince = (data: {\n  province_id: string;\n  province_name: string;\n  provice_code: number;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<updateProvinceActions>({\n      type: ActionTypes.UPDATE_PROVINCE,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteProvince = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteProvinceActions>({\n      type: ActionTypes.DELETE_PROVINCE,\n      payload: data,\n    });\n  };\n};\n\n// DISTRICT =================\nexport const FC_CreateDistrict = (data: {\n  province_id: string;\n  data: DistrictInterface;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<createDistrictActions>({\n      type: ActionTypes.CREATE_DISTRICT,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateDistrict = (data: {\n  province_id: string;\n  district_id: string;\n  district_name: string;\n  district_code: number;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<updateDistrictActions>({\n      type: ActionTypes.UPDATE_DISTRICT,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteDistrict = (data: {\n  province_id: string;\n  district_id: string;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteDistrictActions>({\n      type: ActionTypes.DELETE_DISTRICT,\n      payload: data,\n    });\n  };\n};\n\n// SECTOR =================\nexport const FC_CreateSector = (data: {\n  province_id: string;\n  district_id: string;\n  data: SectorInterface;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<createSectorActions>({\n      type: ActionTypes.CREATE_SECTOR,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateSector = (data: {\n  province_id: string;\n  district_id: string;\n  sector_id: string;\n  sector_name: string;\n  sector_code: number;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<updateSectorActions>({\n      type: ActionTypes.UPDATE_SECTOR,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteSector = (data: {\n  province_id: string;\n  district_id: string;\n  sector_id: string;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteSectorActions>({\n      type: ActionTypes.DELETE_SECTOR,\n      payload: data,\n    });\n  };\n};\n\n// CENTERS =================\nexport const FC_CreateCenter = (data: {\n  province_id: string;\n  district_id: string;\n  data: CentersInterface;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<createCenterActions>({\n      type: ActionTypes.CREATE_CENTER,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateCenter = (data: {\n  province_id: string;\n  district_id: string;\n  examination_center_id: string;\n  center_name: string;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<updateCenterActions>({\n      type: ActionTypes.UPDATE_CENTER,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteCenter = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteCenterActions>({\n      type: ActionTypes.DELETE_CENTER,\n      payload: data,\n    });\n  };\n};\n\n// ROOM =================\nexport const FC_CreateRoom = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n  data: RoomsInterface;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<createRoomActions>({\n      type: ActionTypes.CREATE_ROOM,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateRoom = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n  room_id: string;\n  room_number: number;\n  capacity: number;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<updateRoomActions>({\n      type: ActionTypes.UPDATE_ROOM,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteRoom = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n  room_id: string;\n}) => {\n  console.log({ delete_room: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteRoomActions>({\n      type: ActionTypes.DELETE_ROOM,\n      payload: data,\n    });\n  };\n};\n\n// GET LOCATION FOR WAITING LIST\nexport type FT_GetWaitingLocationList = (locations: LocationAPI) => void;\nexport const FC_GetWaitingLocationList = (locations: LocationAPI) => {\n  return (dispatch: Dispatch) => {\n    dispatch<GetWaitingLocationListAction>({\n      type: ActionTypes.GET_LOCATION_WAITING_LIST,\n      payload: locations,\n    });\n  };\n};\n","import React, { FC, ReactElement, ReactNode } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, System } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { NavToogle, PageHasSubNav } from \"../../actions\";\nimport { MdBrightness1, MdSearch } from \"react-icons/md\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  system: System;\n  PageHasSubNav: Function;\n  NavToogle: Function;\n  children: ReactNode;\n}\n//\ninterface AppState {\n  loading: boolean;\n}\n\nclass _SideNavigation extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount = () => this.props.PageHasSubNav(true);\n  componentWillUnmount = () => this.props.PageHasSubNav(false);\n\n  render() {\n    const isAuthenticated = this.props.auth.isAuthenticated;\n\n    if (isAuthenticated === false) {\n      return null;\n    }\n\n    const navActive = this.props.system.navigation;\n    return (\n      <div\n        className={`fixed w-48 p-1 pr-2 pl-6 text-gray-700 bg-white ${\n          navActive === true ? \"lg:left-16  left-16\" : \" -left-72 lg:left-16\"\n        }  top-0 bottom-0 pt-20 z-30 shadow-lg  transition-all duration-500 ease-in-out overflow-y-auto`}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n}: StoreState): { auth: Auth; system: System } => {\n  return { auth: auth, system: system };\n};\n\nexport const SideNavigation = connect(mapStateToProps, {\n  NavToogle,\n  PageHasSubNav,\n})(_SideNavigation);\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SearchComponentInterface = {\n  data: any[];\n};\n\nexport const Search: FC<SearchComponentInterface> = ({\n  data,\n}): ReactElement => {\n  return (\n    <div className=\"m-1 rounded-md shadow-md border border-blue-400 bg-white p-1 flex \">\n      <label htmlFor=\"search-text\" className=\"inline-block text-2xl\">\n        <MdSearch className=\"inline-block text-blue-400\" />\n      </label>\n      <input\n        type=\"search\"\n        className=\"outline-none bg-transparent flex-1 pl-1\"\n        placeholder=\"Search\"\n        id=\"search-text\"\n      />\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype MainItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const MainItem: FC<MainItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n  return (\n    <section\n      className={`${\n        active === true\n          ? \"bg-blue-500 text-white font-bold\"\n          : \"bg-blue-100 text-blue-800\"\n      } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex cursor-pointer items-center`}\n    >\n      <section className=\"flex-1\">\n        <IconDefined className=\"inline-block mr-1 text-xs\" />\n        <span>{title}</span>\n      </section>\n\n      {count > 0 ? (\n        <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n          {count}\n        </span>\n      ) : null}\n    </section>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemContainerComponentInterface = {\n  children: ReactNode;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const SubItemContainer: FC<SubItemContainerComponentInterface> = ({\n  children,\n}): ReactElement => {\n  return (\n    <div className=\"ml-3 overflow-y-auto border-l-2 border-blue-200 -mt-1 pt-2 mb-2 pl-1 cursor-pointer\">\n      {children}\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n * @important Remenber to use these components inside the <SubItemContainer>...</SubItemContainer>\n */\nexport const SubItem: FC<SubItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n\n  return (\n    <div\n      className={`animate__animated animate__zoomIn animate__faster ${\n        active === true ? \"bg-blue-500 text-white font-bold\" : \" text-blue-800\"\n      } text-blue-800 bg-blue-200 rounded-md px-1 mb-1 flex items-center py-1 font-bold`}\n    >\n      <IconDefined\n        className={`inline-block mr-0.1 text-xs ${\n          active === true ? \"text-white\" : \"\"\n        }`}\n      />\n      <span\n        className={`inline-block pl-1 ${active === true ? \"text-white\" : \"\"}`}\n      >\n        {title}\n      </span>\n      {count >= 1 ? (\n        <span\n          className={`text-sm fint-bold ${active === true ? \"text-white\" : \"\"}`}\n        >\n          {count}\n        </span>\n      ) : null}\n    </div>\n  );\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AccessTaskInterface,\n  PermissionInterface,\n  SystemSettingsInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PositionAPI } from \"../interfaces/position\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// SYSTEM SETTINGS  ==============\nexport interface GetSystemSettingsAction {\n  type: ActionTypes.GET_SYSTEM_SETTINGS;\n  payload: SystemSettingsInterface[];\n}\n\nexport interface DisableSystemSettingsAction {\n  type: ActionTypes.DISABLE_SYSTEM_SETTINGS;\n  payload: {\n    system_setting_id: string;\n    status: \"enabled\" | \"disabled\";\n  };\n}\n\n// ROLE TASKS ACCESS SETTINGS ===================================\nexport interface GetTaskAccessAction {\n  type: ActionTypes.GET_TASK_ACCESS;\n  payload: AccessTaskInterface[];\n}\n\n// POSITIONS SETTINGS ===================================\nexport interface PositionCreateInterface {\n  position_id?: string;\n  position_title: string;\n  position_code: string;\n  description: string;\n  school_level_id: string;\n  subcategory_id: string;\n  education_institute_id: string;\n  courses: string[];\n  requirements: {\n    user_detail_category_id: string;\n    user_detail_subcategory_id: string;\n    position_requirement: {\n      category_subcategory_data_id: string;\n      required: boolean;\n    }[];\n    required: boolean;\n  }[];\n}\nexport interface GetPositionsAction {\n  type: ActionTypes.GET_POSTIONS;\n  payload: PositionAPI[];\n}\n\nexport interface CreatePositionsAction {\n  type: ActionTypes.CREATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface UpdatePositionsAction {\n  type: ActionTypes.UPDATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface DeletePositionSettingAction {\n  type: ActionTypes.DELETE_POSITION;\n  payload: string;\n}\n\nexport interface PublishPositionAction {\n  type: ActionTypes.PUBLISH_POSITION;\n  payload: {\n    position_id: string;\n    status: boolean;\n  };\n}\n\nexport type SystemActionType =\n  | GetSystemSettingsAction\n  | DisableSystemSettingsAction\n  | GetTaskAccessAction\n  | GetPositionsAction\n  | CreatePositionsAction\n  | UpdatePositionsAction\n  | DeletePositionSettingAction\n  | PublishPositionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSystemSettings = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<SystemSettingsInterface[]>(\n        `${API.AUTH}/settings`\n      );\n      dispatch<GetSystemSettingsAction>({\n        type: ActionTypes.GET_SYSTEM_SETTINGS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const disableSystemSetting = (data: {\n  system_setting_id: string;\n  status: \"enabled\" | \"disabled\";\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableSystemSettingsAction>({\n      type: ActionTypes.DISABLE_SYSTEM_SETTINGS,\n      payload: data,\n    });\n  };\n};\n\n// ============================ tasks access =======================\n\nexport const GetTaskAccess = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<\n        {\n          id: string;\n          title: string;\n          key: string;\n          permitted: PermissionInterface;\n        }[]\n      >(`${API.AUTH}/allroleaccess`);\n      let response: AccessTaskInterface[] = res.data.map((data) => ({\n        id: data.id,\n        task: data.title,\n        key: data.key,\n        permitted: data.permitted,\n      }));\n      dispatch<GetTaskAccessAction>({\n        type: ActionTypes.GET_TASK_ACCESS,\n        payload: response,\n      });\n      callback(false, \"\", response);\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// ============================ positions =======================\n\nexport const getPositions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(`${API.APPLICATION}/position`);\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createPosition = (data: PositionCreateInterface) => {\n  console.log({ createPosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreatePositionsAction>({\n      type: ActionTypes.CREATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const updatePosition = (data: PositionCreateInterface) => {\n  console.log({ updatePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdatePositionsAction>({\n      type: ActionTypes.UPDATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const deletePosition = (data: string) => {\n  console.log({ deletePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<DeletePositionSettingAction>({\n      type: ActionTypes.DELETE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const publishPosition = (data: {\n  position_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<PublishPositionAction>({\n      type: ActionTypes.PUBLISH_POSITION,\n      payload: data,\n    });\n  };\n};\n","import { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  MySchoolInterface,\n  PostSchoolInterface,\n  SchoolInfoInterface,\n  SchoolsInterface,\n} from \"../shared/interfaces\";\n// import { setAxiosToken } from \"../utils/AxiosToken\";\nimport axios from \"axios\";\nimport { API } from \"../utils/api\";\nimport { errorToText } from \"../utils/errors\";\nimport { placedCandidateInterface } from \"../interfaces/marks_publication\";\nimport { PlacementListInterface } from \"../containers/PlacementLimit/PlacementLimit\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\nexport interface GetSchoolsAction {\n  type: ActionTypes.GET_SCHOOLS;\n  payload: SchoolsInterface[];\n}\n\nexport interface GetSchoolByIdAction {\n  type: ActionTypes.GET_SCHOOLS_BY_ID;\n  payload: MySchoolInterface;\n}\n\nexport interface GetSchoolsInfoAction {\n  type: ActionTypes.GET_SCHOOLS_INFO;\n  payload: SchoolInfoInterface[];\n}\n\nexport interface CreateSchoolAction {\n  type: ActionTypes.CREATE_SCHOOL;\n  payload: SchoolsInterface;\n}\n\nexport interface UpdateSchoolAction {\n  type: ActionTypes.UPDATE_SCHOOL;\n  payload: SchoolsInterface;\n}\n\nexport interface DeleteSchoolAction {\n  type: ActionTypes.DELETE_SCHOOL;\n  payload: string;\n}\n\n// School Posts interfaces\nexport interface FetchSchoolPostsAction {\n  type: ActionTypes.FETCH_SCHOOL_POSTS;\n  payload: PostSchoolInterface[];\n}\n\n// School Placements interfaces\nexport interface GetSchoolPlacementAction {\n  type: ActionTypes.GET_SCHOOL_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\n// District School Placements interfaces\nexport interface GetDistrictPlacementAction {\n  type: ActionTypes.GET_DISTRICT_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\n// District School Placements interfaces\nexport interface GetSessionPlacementAction {\n  type: ActionTypes.GET_SESSION_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\nexport interface FetchDistrictPostsAction {\n  type: ActionTypes.FETCH_DISTRICT_POSTS;\n  payload: PostSchoolInterface[];\n}\n\nexport interface CreateSchoolPostAction {\n  type: ActionTypes.CREATE_SCHOOL_POST;\n  payload: PostSchoolInterface;\n}\n\nexport interface UpdateSchoolPostAction {\n  type: ActionTypes.UPDATE_SCHOOL_POST;\n  payload: {\n    TYPE: \"DISTRICT\" | \"SCHOOL\" | \"RECEIVED\";\n    data: PostSchoolInterface;\n  };\n}\n\nexport interface DeleteSchoolPostAction {\n  type: ActionTypes.DELETE_SCHOOL_POST;\n  payload: PostSchoolInterface[];\n}\n\n// Get Institute Limit Posts Action interfaces\nexport interface GetInstitutePlacementLimitAction {\n  type: ActionTypes.GET_INSTITUTE_PLACEMENT_LIMIT;\n  payload: PlacementListInterface[];\n}\n\nexport interface GetDistrictPlacementLimitAction {\n  type: ActionTypes.GET_DISTRICT_PLACEMENT_LIMIT;\n  payload: PlacementListInterface[];\n}\n\nexport interface UpdateInstitutePlacementLimitAction {\n  type: ActionTypes.UPDATE_INSTITUTE_PLACEMENT_LIMIT;\n  payload: { limit_id: string; confirmed_post: number };\n}\n\nexport type SchoolActionType =\n  | GetSchoolsAction\n  | GetSchoolByIdAction\n  | GetSchoolsInfoAction\n  | CreateSchoolAction\n  | UpdateSchoolAction\n  | DeleteSchoolAction\n  | FetchSchoolPostsAction\n  | GetSchoolPlacementAction\n  | FetchDistrictPostsAction\n  | CreateSchoolPostAction\n  | UpdateSchoolPostAction\n  | DeleteSchoolPostAction\n  | GetDistrictPlacementAction\n  | GetSessionPlacementAction\n  | GetInstitutePlacementLimitAction\n  | GetDistrictPlacementLimitAction\n  | UpdateInstitutePlacementLimitAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSchools = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      const res = await axios.get<SchoolsInterface[]>(\n        `${API.APPLICATION}/schools`\n      );\n      dispatch<GetSchoolsAction>({\n        type: ActionTypes.GET_SCHOOLS,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSchoolById = (schoolId: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<MySchoolInterface>(\n        `${API.APPLICATION}/schools/${schoolId}`\n      );\n      dispatch<GetSchoolByIdAction>({\n        type: ActionTypes.GET_SCHOOLS_BY_ID,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// export const getSchoolsInfo = () => {\n//   return async (dispatch: Dispatch) => {\n//     setAxiosToken();\n//     const response = await axios.get<SchoolInfoInterface[]>(url);\n\n//     dispatch<GetSchoolsInfoAction>({\n//       type: ActionTypes.GET_SCHOOLS_INFO,\n//       payload: response.data,\n//     });\n//   };\n// };\n\nexport const createSchool = (data: SchoolsInterface) => {\n  console.log({ schools: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateSchoolAction>({\n      type: ActionTypes.CREATE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const updateSchool = (data: SchoolsInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateSchoolAction>({\n      type: ActionTypes.UPDATE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteSchool = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteSchoolAction>({\n      type: ActionTypes.DELETE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const fetchSchoolPosts = (school_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PostSchoolInterface[]>(\n        `${API.PLACEMENT}/requestpost/school/${school_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ schoolPosts: res });\n      console.log(\"====================================\");\n\n      dispatch<FetchSchoolPostsAction>({\n        type: ActionTypes.FETCH_SCHOOL_POSTS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSchoolPlacement = (school_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/school/${school_id}`\n      );\n\n      console.log({ getSchoolPlacement: res.data });\n\n      dispatch<GetSchoolPlacementAction>({\n        type: ActionTypes.GET_SCHOOL_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createSchoolPost = (data: PostSchoolInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateSchoolPostAction>({\n      type: ActionTypes.CREATE_SCHOOL_POST,\n      payload: data,\n    });\n  };\n};\n\nexport const updateSchoolPost = (\n  TYPE: \"DISTRICT\" | \"SCHOOL\" | \"RECEIVED\",\n  data: PostSchoolInterface\n) => {\n  console.log({ TYPE, data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateSchoolPostAction>({\n      type: ActionTypes.UPDATE_SCHOOL_POST,\n      payload: { TYPE, data },\n    });\n  };\n};\n\nexport const deleteSchoolPost = (data: PostSchoolInterface[]) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteSchoolPostAction>({\n      type: ActionTypes.DELETE_SCHOOL_POST,\n      payload: data,\n    });\n  };\n};\n\nexport const fetchDistrictPosts = (district_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PostSchoolInterface[]>(\n        `${API.PLACEMENT}/requestpost/district/${district_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ fetchDistrictPosts: res });\n      console.log(\"====================================\");\n\n      dispatch<FetchDistrictPostsAction>({\n        type: ActionTypes.FETCH_DISTRICT_POSTS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getDistrictPlacement = (\n  district_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/district/${district_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getDistrictPlacement: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetDistrictPlacementAction>({\n        type: ActionTypes.GET_DISTRICT_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSessionPlacement = (session_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/session/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getSessionPlacement: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetSessionPlacementAction>({\n        type: ActionTypes.GET_SESSION_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getInstitutePlacementLimit = (\n  institute_id: string,\n  session_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PlacementListInterface[]>(\n        `${API.PLACEMENT}/confirmedpostrequest/institute/${institute_id}/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getInstitutePlacementLimit: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetInstitutePlacementLimitAction>({\n        type: ActionTypes.GET_INSTITUTE_PLACEMENT_LIMIT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getDistrictPlacementLimit = (\n  district_id: string,\n  session_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PlacementListInterface[]>(\n        `${API.PLACEMENT}/confirmedpostrequest/district/${district_id}/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getDistrictPlacementLimit: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetDistrictPlacementLimitAction>({\n        type: ActionTypes.GET_DISTRICT_PLACEMENT_LIMIT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const updateInstitutePlacementLimit = (data: {\n  limit_id: string;\n  confirmed_post: number;\n}) => {\n  console.log(\"====================================\");\n  console.log({ updateInstitutePlacementLimit: data });\n  console.log(\"====================================\");\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateInstitutePlacementLimitAction>({\n      type: ActionTypes.UPDATE_INSTITUTE_PLACEMENT_LIMIT,\n      payload: data,\n    });\n  };\n};\n","import React from \"react\";\n\ntype TableLoadingProps = {\n  cols: number;\n};\nconst TableLoading: React.FC<TableLoadingProps> = (props) => {\n  const displayCols = (): JSX.Element[] => {\n    let colsArray: number[] = [];\n    for (let index = 0; index < props.cols; index++) {\n      colsArray.push(index);\n    }\n    let result = colsArray.map((element) => {\n      return (\n        <td className=\"p-3 text-center whitespace-nowrap\" key={element}>\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      );\n    });\n\n    return result;\n  };\n  return (\n    <>\n      <tr className=\"border-b border-gray-200\" key={228}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={22648}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={229768}>\n        {displayCols()}\n      </tr>\n    </>\n  );\n};\n\nexport default TableLoading;\n","import React from \"react\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport { RiFileExcel2Fill } from \"react-icons/ri\";\n\ninterface ExportToExcelProps {\n  fileData: any[];\n  fileName: string;\n  btnName?: string;\n  className?: string;\n  showIcon?: boolean;\n}\n\nconst ExportToExcel: React.FC<ExportToExcelProps> = ({\n  fileData,\n  fileName,\n  btnName = \"Excel\",\n  className = \"flex items-center gap-1 px-4 py-1 rounded text-green-700 bg-white border hover:text-white hover:bg-green-700 border-green-700 font-bold\",\n  showIcon = true,\n}) => {\n  const fileType =\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n  const fileExtension = \".xlsx\";\n\n  const exportToCSV = (apiData: any[], fileName: string) => {\n    const ws = XLSX.utils.json_to_sheet(apiData);\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n    const data = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n\n  return (\n    <button\n      onClick={(e) => exportToCSV(fileData, fileName)}\n      className={className}\n    >\n      {showIcon && <RiFileExcel2Fill />}\n      {btnName}\n    </button>\n  );\n};\n\nexport default ExportToExcel;\n","export default __webpack_public_path__ + \"static/media/mineduc.11a9ae1c.png\";","import jsPDF from \"jspdf\";\nimport { DATE } from \"../../utils/functions\";\nimport Logo from \"../../utils/mineduc.png\";\nrequire(\"jspdf-autotable\");\n\nexport const addFooters = (doc: any) => {\n  const pageCount = doc.internal.getNumberOfPages();\n\n  doc.setFont(\"helvetica\", \"italic\");\n  doc.setFontSize(8);\n  for (var i = 1; i <= pageCount; i++) {\n    doc.setPage(i);\n    doc.text(\n      \"Page \" + String(i) + \" of \" + String(pageCount),\n      doc.internal.pageSize.width / 2,\n      297,\n      {\n        align: \"center\",\n      }\n    );\n  }\n};\n\nexport type reportSettingsInterface = {\n  doneBy: string;\n  title: string;\n  subjectTitle: string;\n  subject: string;\n  institute: string;\n  period: string;\n  footer: string;\n  orientation?: \"p\" | \"l\";\n};\n\nexport const generatePDF = async (\n  reportSettings: reportSettingsInterface,\n  table: HTMLElement,\n  callBack: (status: boolean) => void\n) => {\n  callBack(true);\n  const orientation: \"p\" | \"l\" = reportSettings.orientation\n    ? reportSettings.orientation\n    : \"p\";\n  var lMargin: number = 20; //left margin in mm\n  var rMargin: number = 20; //right margin in mm\n  var pdfInMM: number = 185; // width of A4 in mm\n\n  //   var doc = new jsPDF(\"p\", \"mm\", \"a4\");\n  var doc: any = new jsPDF(orientation, \"mm\", \"a4\");\n\n  doc.setTextColor(95, 95, 95);\n  doc.setFontSize(28);\n  // doc.text(\n  //   this.props.reportTitle,\n  //   doc.internal.pageSize.getWidth() / 2,\n  //   30,\n  //   undefined,\n  //   \"center\"\n  // );\n  doc.addImage(Logo, \"png\", 20, 20, 10, 10);\n  doc.text(\"MINEDUC\", 32, 28.5, undefined, \"left\");\n  //   doc.setTextColor(19, 90, 152);\n  doc.setFontSize(26);\n  doc.text(\n    reportSettings.title,\n    doc.internal.pageSize.getWidth() / 2,\n    42.7,\n    undefined,\n    \"center\"\n  );\n\n  doc.setFontSize(20);\n  doc.text(\n    reportSettings.institute,\n    doc.internal.pageSize.getWidth() / 2,\n    53.7,\n    undefined,\n    \"center\"\n  );\n\n  var lines;\n  lines = doc.splitTextToSize(\n    reportSettings.subject,\n    pdfInMM - lMargin - rMargin\n  );\n  // if (reportSettings.position) {\n  // } else if (reportSettings.subject) {\n  //   lines = doc.splitTextToSize(\n  //     reportSettings.subject,\n  //     pdfInMM - lMargin - rMargin\n  //   );\n  // }\n\n  //   doc.setTextColor(0, 123, 255);\n  doc.setFontSize(16);\n  //   doc.text(lines, doc.internal.pageSize.getWidth() / 2, 45, {\n  //     maxWidth: 85,\n  //     align: \"center\",\n  //   });\n\n  var y = 63,\n    width;\n  doc.setTextColor(95, 95, 95);\n  doc.text(`${reportSettings.subjectTitle}: `, lMargin, y);\n  width = doc.getTextWidth(`${reportSettings.subjectTitle}: `);\n  // if (reportSettings.position) {\n  // } else if (reportSettings.position) {\n  //   doc.text(`Subject: `, lMargin, y);\n  //   width = doc.getTextWidth(\"Subject: \");\n  // }\n  // doc.setFontType(\"bold\");\n  doc.setTextColor(38, 38, 38);\n  for (var i = 0; i < lines.length; i++) {\n    if (y > 280) {\n      y = 10;\n      doc.addPage();\n    }\n    // doc.text(15, y, lines[i]);\n    doc.text(lines[i], lMargin + width, y);\n    y = y + 7;\n  }\n  doc.setTextColor(95, 95, 95);\n  doc.text(\"Period: \", lMargin, y + 3);\n  width = doc.getTextWidth(\"Period: \");\n  doc.setTextColor(38, 38, 38);\n  doc.text(reportSettings.period, lMargin + width, y + 3);\n\n  doc.autoTable({\n    html: table,\n    startY: 85,\n    margin: { horizontal: 20 },\n    cellPadding: 3, // Horizontal cell padding\n    // fontSize: 12,\n    rowHeight: 20,\n    // styles: { overflow: \"linebreak\" },\n    bodyStyles: { valign: \"top\" },\n    columnStyles: { email: { cellWidth: \"wrap\" } },\n    theme: \"striped\",\n    tableWidth: true,\n  });\n\n  doc.setFontSize(12);\n  let finalY = doc.lastAutoTable.finalY; // The y position on the page\n  doc.text(`Reported by: ${reportSettings.doneBy}`, lMargin, finalY + 15);\n  doc.text(\n    \"Report downloaded on \" + DATE(new Date().toString()),\n    lMargin,\n    finalY + 23\n  );\n\n  addFooters(doc);\n  await doc\n    .save(\n      `${\n        reportSettings.title +\n        \": \" +\n        reportSettings.subject +\n        \": \" +\n        reportSettings.period\n      }.pdf`,\n      { returnPromise: true }\n    )\n    .then(callBack(false));\n};\n","export interface marksPublicationInterface {\n  publication_id: string;\n  session: string;\n  doneby: string;\n  created_date: string;\n  publication_status: \"PENDING\" | \"PUBLISHED\";\n  status: number;\n  publication_position_marks: publicationInterface[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface publicationInterface {\n  _id: string;\n  position: string;\n  marks: number;\n  comment: string;\n}\n\nexport interface marksPublicationFormInterface {\n  session: string;\n  doneby: string;\n  created_date: string;\n  publication_position_marks: publicationFormInterface[];\n}\n\nexport interface publicationFormInterface {\n  position: string;\n  marks: number;\n  comment: string;\n}\n\nexport enum MarksPublicationCandidateStatus {\n  Failed = \"Failed\",\n  Passed = \"Passed\",\n}\n\nexport interface MarksPublicationCandidate_old {\n  user: {\n    in_eduction: boolean;\n    disability: boolean;\n    is_active: boolean;\n    n_id: string;\n    phone_number: string;\n    email: string;\n    createdAt: string;\n    updatedAt: string;\n    user_id: string;\n    user_info: placedCandidateUserInfo;\n  };\n  period: string;\n  position: string;\n  courses: {\n    id: string;\n    marks: number;\n    _id: string;\n  }[];\n  waiting_status: MarksPublicationCandidateStatus;\n  status: number;\n  user_position_marks: number;\n  createdAt: string;\n  updatedAt: string;\n  disability: boolean;\n  gender: string;\n  in_education: boolean;\n  id: string;\n}\n\nexport interface MarksPublicationCandidate {\n  _id: string;\n  user: string;\n  period: string;\n  position: string;\n  in_education: boolean;\n  n_id: string;\n  fname: string;\n  lname: string;\n  email: string;\n  phone_number: string;\n  gender: string;\n  disability: boolean;\n  courses: {\n    id: string;\n    marks: number;\n    _id: string;\n  }[];\n  waiting_status: MarksPublicationCandidateStatus;\n  status: number;\n  user_position_marks: number;\n  createdAt: string;\n  updatedAt: string;\n  __v: number;\n}\n\nexport interface MarksPublicationCandidateToPrintInterface {\n  no: number;\n  names: string;\n  national_id: string;\n  phone: string;\n  email: string;\n  gender: string;\n  position_name: string;\n  marks: number;\n  status: MarksPublicationCandidateStatus;\n}\n\nexport enum marksPublicationCandidateReportContentKeyInterface {\n  applicant_name = \"names\",\n  national_id = \"national_id\",\n  phone_number = \"phone\",\n  email = \"email\",\n  gender = \"gender\",\n  position_name = \"position_name\",\n  marks = \"marks\",\n  status = \"status\",\n}\n\nexport interface marksPublicationReportContentInterface {\n  key: marksPublicationCandidateReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n// ---------------------------------------------------------------------------------------------\n\nexport interface placedCandidateInterface {\n  _id: string;\n  status: PlacedCandidateStatus;\n  user_id: string;\n  school_id: string;\n  position_id: string;\n  waiting_list_id: string;\n  request_id: string;\n  createdAt: string;\n  comment: string;\n  updatedAt: string;\n  __v: number;\n  n_id: string;\n  phone_number: string;\n  email: string;\n  user_info: placedCandidateUserInfo;\n  school: {\n    _id: string;\n    school_name: string;\n    school_code: string;\n    province_id: string;\n    province_code: string;\n    district_id: {\n      _id: string;\n      district_name: string;\n    };\n    district_code: string;\n    sector_code: string;\n    sector_id: string;\n    school_status: string;\n    status: number;\n    createdAt: string;\n    updatedAt: string;\n  };\n}\n\nexport interface placedCandidateUserInfo {\n  document_type: string;\n  issue_number: string;\n  date_of_issue: string;\n  date_of_expiry: string;\n  place_of_issue: string;\n  application_number: string;\n  fname: string;\n  lname: string;\n  father_names: string;\n  mother_names: string;\n  sex: string;\n  date_of_birth: string;\n  place_of_birth: string;\n  country_of_birth: string;\n  village_id: string;\n  village: string;\n  cell: string;\n  sector: string;\n  district: string;\n  province: string;\n  civil_status: string;\n  spouse: null;\n  status: string;\n  photo: string;\n}\n\nexport enum PlacedCandidateStatus {\n  PENDING = \"pending\",\n  PLACED = \"placed\",\n  REJECTED = \"rejected\",\n}\n\nexport interface PlacementToPrintInterface {\n  no: number;\n  names: string;\n  national_id: string;\n  phone: string;\n  email: string;\n  school_name: string;\n  position_name: string;\n  waiting_date: string;\n  placement_date: string;\n  status: PlacedCandidateStatus;\n}\n\nexport enum placementReportContentKeyInterface {\n  applicant_name = \"names\",\n  national_id = \"national_id\",\n  phone_number = \"phone\",\n  email = \"email\",\n  school_name = \"school_name\",\n  position_name = \"position_name\",\n  waiting_date = \"waiting_date\",\n  placement_date = \"placement_date\",\n  status = \"status\",\n}\n\nexport interface placementReportContentInterface {\n  key: placementReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n"],"sourceRoot":""}
{"version":3,"sources":["containers/SessionSettings/NoSession.tsx","components/Navigation/SideNavigation.tsx","containers/Admin/ExamReport/DoneExamList.tsx","actions/users.ts","containers/AdminDashboard/ChartComponents/VBarChart.tsx","containers/Admin/ExamReport/ExamReport.tsx","containers/Admin/ExamReport/CandiadtePerformancePerDistrict.tsx","containers/Admin/ExamReport/ExamPerformancePerDistrict.tsx","containers/Admin/ExamReport/ExamReportFilters.tsx","containers/Admin/ExamReport/ExamReportTitle.tsx","utils/ExportToExcel.tsx","utils/mineduc.png","components/DownloadPDF/rest.tsx","containers/SessionSettings/ChooseSession.tsx","containers/Admin/ExamReport/CandidatePerformance.tsx","containers/Admin/ExamReport/ExamList.tsx","containers/Admin/ExamReport/ExamReportModals.tsx","containers/UserManagement/UserList.tsx","containers/UserManagement/RoleList.tsx","containers/UserManagement/UserRole.tsx","shared/blank_profile.png","containers/AdminDashboard/ChartComponents/PieChart.tsx","containers/AdminDashboard/DashboardLabelItem.tsx","containers/Admin/ExamReport/ExamPerformance.tsx","containers/AdminDashboard/ExamDashboard/ExamDashboardLabels.tsx","containers/UserManagement/UserAccess.tsx","containers/AdminDashboard/ExamDashboard/ExamDashboardTitle.tsx","containers/AdminDashboard/ExamDashboard/ExamPreparationChart.tsx","containers/AdminDashboard/ExamDashboard/ExamProgressChart.tsx","containers/AdminDashboard/ExamDashboard/ExamPerformanceChart.tsx","containers/AdminDashboard/ExamDashboard/ExamDashboard.tsx"],"names":["NoSession","title","description","className","React","memo","_SideNavigation","props","componentDidMount","PageHasSubNav","componentWillUnmount","state","loading","this","auth","isAuthenticated","navActive","system","navigation","children","Component","SideNavigation","connect","NavToogle","MainItem","icon","MdBrightness1","active","count","IconDefined","ExaminationProgressReportContentKeyInterface","examinationProgressIsChangeAllowed","key","COURSER_NAME","COURSE_CODE","PERIOD","STATUS","defaultExaminationProgressContent","status","SCHOOL_LEVEL","DATE","TIME","DURATION","displayStatus","FC_reportDoneExamList","allCourses","allExams","doneExams","result","ids","Object","prototype","hasOwnProperty","call","includes","id","push","courser","find","item","course_id","course","doneExam","period","course_name","course_code","school_levels","exam","preparation_status","exam_status","FC_reportDoneExamListFilter","thisList","thisValue","filter","searchExamData","objList","text","undefined","product","flag","prop","toString","toLowerCase","indexOf","DoneExamList","useState","searchInput","setSearchInput","isSorted","setIsSorted","sortProperty","setSortProperty","sortOrder","setSortOrder","setSort","thisProperty","onChange","e","target","value","type","placeholder","disabled","courseListData","examsListData","doneExamsData","filterExamProgress","length","onClick","colSpan","sortThisArray","map","i","capitalizeFirstLetter","exam_date","start_time","duration","getPeriodById","thisPeriod","session_plan_name","documentValidationStatus","url","API","AUTH","userPageLimit","fetchUserAccess","page","callback","dispatch","a","setAxiosToken","axios","get","res","console","log","ActionTypes","FETCH_USERS_ACCESS","payload","users","data","next","previous","total_users","error","user_error","errorToText","blockUserToSystem","user_id","BLOCK_USER_TO_SYSTEM","unBlockUserToSystem","UNBLOCK_USER_TO_SYSTEM","assignRoleToUserAccess","ASSIGN_ROLE_TO_USER","customizeUserAccess","CUSTOMIZE_USER_ACCESS","resetUserAccess","RESET_USER_ACCESS","defaultBar","borderRadius","horizontal","columnWidth","endingShape","VBarChart","setLoading","chart","events","dataPointSelection","event","chartContext","config","labelClicked","w","labels","dataPointIndex","FC_LoadSelected","seriesIndex","stacked","plotOptions","bar","dataLabels","enabled","xaxis","rotate","categories","categoriesLabel","tickPlacement","yaxis","yaxisText","fill","opacity","tooltip","y","formatter","val","tooltipText","grid","padding","left","right","noData","align","verticalAlign","options","setOptions","useEffect","colors","chartClicked","zoom","autoScaleYaxis","series","width","height","chartHeight","reportTitleType","FC_CandiadtePerformancePerDistrictFilter","dataList","swap","district_id","exam_stastus","exam_location","j","user_total_marks","adminExamReport","candidatePerformanceData","FC_reportCandidatePerformanceData","reportCourseId","reportDistrictId","filterApplicantPerformance","Loading","searchCandidatePerformanceData","slice","controlRowsByStatus","user_name","national_id","user_email","user_phone","timestampToDate","timeAMPM","end_time","ReportUserExamStatus","Editing","Number","toFixed","FC_ExamPerformancePerDistrictPropsData","examsData","pass","failed","exam_ids","toLocaleLowerCase","_marks","candidatesByExam","_key","user","total_marks","user_status","pass_applicant","failed_applicant","applicants","NoResult","theme","NoResultThemes","Dark","search","ExamReportFilters","reportTitle","EXAM_PERFORMANCE","EXAM_DISTRICT_PERFORMANCE","EXAM_PREPARATION","setFilterPreparation","filterPreparation","EXAMINATION_PROGRESS","setFilterExamProgress","APPLICANTS_PERFORMANCE","APPLICANTS_DISTRICT_PERFORMANCE","setFilterApplicantPerformance","values","index","schoolLevels","prepareExam","courses","examsList","SetReportDistrictId","changeReport","setChangeReport","districtModal","setDistrictModal","excelModal","setExcelModal","courseModal","setCourseModal","district_name","dataToPrint","updateExamToPrint","setGenerateReportModal","reportType","downloading","downlaodPDF","ExamReportModals","modalFor","ModalForTypes","generateReportModal","modalState","changeModalState","excelReportTitle","setExcelReportTitle","examsToPrint","examPreparationReportContent","setExamPreparationReportContent","examPerformanceToPrint","examPerformanceReportContent","setExamPerformanceReportContent","exam30PerformanceToPrint","exam30PerformanceReportContent","setExam30PerformanceReportContent","examinationProgressToPrint","examinationProgressReportContent","setExaminationProgressExamPerformanceReportContent","candidateExamPerformanceToPrint","candidateExamPerformanceReportContent","setCandidateExamPerformanceReportContent","candidate30ExamPerformanceToPrint","candidate30ExamPerformanceReportContent","setCandidate30ExamPerformanceReportContent","setReportTitle","choose_district","districtId","loadExaminationProgress","DoneExam","selectedEducationCategory","choose_exam","AllExamData","finished","thisExam","getExamByCourseId","periods","period_id","_id","loadAllExams","selected_period","_ExamReport","setState","setLoadingCourses","loadingCourses","setLoadingExams","loadingExams","setDownloading","setLoadingDoneExam","loadingDoneExam","setLoadingCandidatesExamPerformance","loadingCandidatesExamPerformance","setLoadingExamPerformance","loadingExamPerformance","setLoadingSettings","loadingSettings","setSelectPeriod","selectPeriod","setSelectedPeriod","setExamsToPrint","setExamPerformanceToPrint","setExam30PerformanceToPrint","setExaminationProgressToPrint","setCandidateExamPerformanceToPrint","setCandidate30ExamPerformanceToPrint","selectDefaultSession","allSession","active_period","is_active","onPeriodChange","FD_GetSessions","institution_id","FC_GetAllSessionByInstitution","msg","isEmptyOrSpaces","PushPopupAlert","PopupAlertTheme","danger","FC_HasInstitute","education_institution_id","education_categories","loadEducationCategories","setSelectedEducationCategory","education_institute_id","thisEducation","loadSchoolLevels","loadCourses","loadExamsList","loadDoneExam","loadPerfomranceExam","loadCandidatesExamPerformance","order","sortBy","ReportGetCandidatePerformanceSortTypes","getLevelbyId","level_id","school_level_id","getCourses","search_all","forEach","level","levelDetail","education_institute","allSessionPlans","FC_reportExamList","arrayNew","n","school_level","element","findLevel","school_level_name","dataArray","exam_period","exam_time","exam_duration","ExamPerformance","FC_reportExamPerformanceData","exam_performance","CandidatesExamPerformance","applicant_id","exam_start_time","exam_end_time","performance_status","applicant_name","email","phone","marks","addToTitle","document","querySelectorAll","warning","table","getElementById","reportSettings","doneBy","fname","lname","subjectTitle","subject","footer","institute","education_category_title","orientation","generatePDF","defaultExamPreparationReportContent","defaultExamPerformanceContent","defaultCandidateExamPerformanceContent","ExamList","examsPerformanceData","thisDistrict","Light","component","CandidatePerformance","applicationPeriods","ExamReport","sessionPlan","ExportToExcel","fileData","fileName","btnName","showIcon","apiData","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","exportToCSV","require","addFooters","doc","pageCount","internal","getNumberOfPages","setFont","setFontSize","setPage","String","pageSize","callBack","lMargin","jsPDF","setTextColor","addImage","Logo","getWidth","lines","splitTextToSize","pdfInMM","getTextWidth","addPage","autoTable","html","startY","margin","cellPadding","rowHeight","bodyStyles","valign","columnStyles","cellWidth","tableWidth","finalY","lastAutoTable","Date","save","returnPromise","then","isPlansActive","plans","today","activePlans","plan","startDate","start_date","endDate","end_date","getTime","type_status","SessionPlanTypeStatus","OPEN","ChooseSession","searched","selectedPlan","setSelectedPlan","setSearch","chooseAll","currentSelected","setSelectSession","searchData","itm","type_key","type_title","CandidateExamPerformanceReportContentKeyInterface","candidateExamPerformanceIsChangeAllowed","APPLICANT","N_ID","EMAIL","PHONE","MARKS","START_TIME","END_TIME","user_info","n_id","phone_number","FC_reportCandidatePerformanceDataFilter","examPreparationReportContentKeyInterface","examPreparationIsChangeAllowed","FC_reportExamListFilter","thisStatus","searchExamList","createdAt","FC_DistinctDistrict","locations","flags","output","l","roomLocation","getAllRoom","SetReportCourseId","formError","setFormError","selectAll","setSelectAll","loadingLocation","setLoadingLocation","setError","setDistrictId","isChangeAllowed","examPerformanceIsChangeAllowed","updateExamPerformanceReportContent","findIndex","newArray","isSelectAllNeeded","updateCandidateExamPerformanceReportContent","showGenerateBtn","backDrop","Themes","default","close","backDropClose","widthSizeClass","ModalSize","extraLarge","displayClose","medium","updateExamPreparationReportContent","updateExaminationProgressReportContent","currentState","resetReportContent","isAllDistrictAllowed","LocationsInArray","selectDistrict","ModalState","RoleList","roleList","setChooseRole","role","loadindRequest","handleSelectRole","system_user_role_id","UserRole","setRoleId","roleId","setSelectedRole","selectedRole","setProvinceId","provinceId","setCenterId","centerId","setRoomId","roomId","setLoadingForm","loadingForm","setInstituteId","instituteId","setLoadingRequest","loadingRequest","chooseRole","setDefaultState","default_access","LOAD_province","LOAD_district","district_required","roomList","distinctDistrict","province_id","room_required","room_id","center_id","userInfo","vvvvv","role_id","TYPE","tableData","access","task","permitted","create","view","update","delete","Math","random","assignRoleToUser","preventDefault","window","confirm","education_institution_required","formData","school_id","post","currentPage","setChangeRole","success","role_error","location","districts","keyDistrict","distinctCenter","rooms","distinctRoom","onSubmit","province","province_name","district","center","center_name","room","room_name","Table","columns","columnTitle","alignText","rows","pagination","searchBG","thColor","tableId","getUserById","userId","LocationData","locationTemp","p","d","centers","c","r","room_number","capacity","occupied","UserList","setManageUserId","manageUserId","setLoadingRequestType","loadingRequestType","setRoomList","setRoomTables","roomTable","setCurrentAccess","currentAccess","setUserAccess","userAccess","allRoom","setLoadingUser","loadingUser","pageNumber","setManageUser","sex","getRoleById","blockUser","actionType","patch","info","blockUser_ERROR","restUserAccess","USER","resetedAccess","reseting_user_access","DATA_GetUser","DATA_GetRoleById","DATA_ThisRoom","manageUser","src","photo","profile","alt","getInstituteById","custome_access","changeRole","UserAccess","PieChart","DashboardLabelItem","FaUsers","iconColor","countOver","toAnyDigit","examPerformanceReportContentKeyInterface","PERFORMANCE","examPerformance","answer_sheet_id","Fragment","ExamDashboardLabels","numCols","labelsOnRow","childrenPosition","_UserAccess","setViewPermission","viewPermission","setLoadindRequest","setCreatePermission","createPermission","setUpdatePermission","updatePermission","setDeletePermission","deletePermission","setLoadind","overrideUserAccess","overideAccess","findCustom","custom","handleCustomization","custome_user_access_id","customize_access","to","checked","ExamDashboardTitle","education","loadingEducation","setThisEducation","setThisPeriod","application_sessions","session","ExamPreparationChart","name","examPreparationProgress","remaining","ExamProgressChart","progressData","ExamPerformanceChart","loadCoursesByInstitute","courseList","defaultValue","allData","completeExams","remainingExams","dataFound","all","loadExamPreparationProgress","isDatePast","dateParam","date","moment","format","todayDate","pastDate","diff","loadExamAttendance","applicantList","_ExamDashboard","setChangingPeriod","changingPeriod","loadByPeriods","GetAllSessionPlans","sessions","action","FaBookOpen","legend","show","position","horizontalAlign","fontSize","itemMargin","vertical","pie","donut","color","offsetY","fontFamily","total","label","globals","seriesTotals","reduce","b","ExamDashboard"],"mappings":"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","file":"static/js/12.71b9232c.chunk.js","sourcesContent":["import React from \"react\";\nimport { IoWarning } from \"react-icons/io5\";\n// import { MdInfoOutline } from \"react-icons/md\";\nimport { NavLink } from \"react-router-dom\";\n\ntype NoSessionProps = {\n  title?: string;\n  description?: string;\n};\n\nconst NoSession: React.FC<NoSessionProps> = ({\n  title = \"No session available\",\n  description = \"Please Wait for the system to publish the sessions or contact the administrator\",\n}) => {\n  return (\n    <div className=\"w-full my-5\">\n      <section className=\"py-10 flex flex-col items-center rounded border border-gray-300 bg-white text-2xl font-medium text-yellow-800 animate__animated animate__pulse\">\n        <div className=\"flex flex-col items-center\">\n          <IoWarning className=\"w-32 h-32\" />\n          {description}\n        </div>\n        {false && (\n          <div className=\"text-center group text-sm -mb-3 mt-5\">\n            <NavLink\n              to=\"/apps-page\"\n              className=\"border border-rounded-md bg-gray-100 text-gray-900 rounded border-gray-100 group-hover:bg-gray-50 group-hover:border-gray-400 px-2 py-1\"\n            >\n              Back to App\n            </NavLink>\n          </div>\n        )}\n      </section>\n    </div>\n  );\n};\n\nexport default React.memo(NoSession);\n","import React, { FC, ReactElement, ReactNode } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, System } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { NavToogle, PageHasSubNav } from \"../../actions\";\nimport { MdBrightness1, MdSearch } from \"react-icons/md\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  system: System;\n  PageHasSubNav: Function;\n  NavToogle: Function;\n  children: ReactNode;\n}\n//\ninterface AppState {\n  loading: boolean;\n}\n\nclass _SideNavigation extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount = () => this.props.PageHasSubNav(true);\n  componentWillUnmount = () => this.props.PageHasSubNav(false);\n\n  render() {\n    const isAuthenticated = this.props.auth.isAuthenticated;\n\n    if (isAuthenticated === false) {\n      return null;\n    }\n\n    const navActive = this.props.system.navigation;\n    return (\n      <div\n        className={`fixed w-48 p-1 pr-2 pl-6 text-gray-700 bg-white ${\n          navActive === true ? \"lg:left-16  left-16\" : \" -left-72 lg:left-16\"\n        }  top-0 bottom-0 pt-20 z-30 shadow-lg  transition-all duration-500 ease-in-out overflow-y-auto`}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n}: StoreState): { auth: Auth; system: System } => {\n  return { auth: auth, system: system };\n};\n\nexport const SideNavigation = connect(mapStateToProps, {\n  NavToogle,\n  PageHasSubNav,\n})(_SideNavigation);\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SearchComponentInterface = {\n  data: any[];\n};\n\nexport const Search: FC<SearchComponentInterface> = ({\n  data,\n}): ReactElement => {\n  return (\n    <div className=\"m-1 rounded-md shadow-md border border-blue-400 bg-white p-1 flex \">\n      <label htmlFor=\"search-text\" className=\"inline-block text-2xl\">\n        <MdSearch className=\"inline-block text-blue-400\" />\n      </label>\n      <input\n        type=\"search\"\n        className=\"outline-none bg-transparent flex-1 pl-1\"\n        placeholder=\"Search\"\n        id=\"search-text\"\n      />\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype MainItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const MainItem: FC<MainItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n  return (\n    <section\n      className={`${\n        active === true\n          ? \"bg-blue-500 text-white font-bold\"\n          : \"bg-blue-100 text-blue-800\"\n      } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex cursor-pointer items-center`}\n    >\n      <section className=\"flex-1\">\n        <IconDefined className=\"inline-block mr-1 text-xs\" />\n        <span>{title}</span>\n      </section>\n\n      {count > 0 ? (\n        <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n          {count}\n        </span>\n      ) : null}\n    </section>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemContainerComponentInterface = {\n  children: ReactNode;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const SubItemContainer: FC<SubItemContainerComponentInterface> = ({\n  children,\n}): ReactElement => {\n  return (\n    <div className=\"ml-3 overflow-y-auto border-l-2 border-blue-200 -mt-1 pt-2 mb-2 pl-1 cursor-pointer\">\n      {children}\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n * @important Remenber to use these components inside the <SubItemContainer>...</SubItemContainer>\n */\nexport const SubItem: FC<SubItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n\n  return (\n    <div\n      className={`animate__animated animate__zoomIn animate__faster ${\n        active === true ? \"bg-blue-500 text-white font-bold\" : \" text-blue-800\"\n      } text-blue-800 bg-blue-200 rounded-md px-1 mb-1 flex items-center py-1 font-bold`}\n    >\n      <IconDefined\n        className={`inline-block mr-0.1 text-xs ${\n          active === true ? \"text-white\" : \"\"\n        }`}\n      />\n      <span\n        className={`inline-block pl-1 ${active === true ? \"text-white\" : \"\"}`}\n      >\n        {title}\n      </span>\n      {count >= 1 ? (\n        <span\n          className={`text-sm fint-bold ${active === true ? \"text-white\" : \"\"}`}\n        >\n          {count}\n        </span>\n      ) : null}\n    </div>\n  );\n};\n","import React, { Fragment, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { SessionPlanInterface } from \"../../../interfaces\";\nimport { course } from \"../../../interfaces/course\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport { ExamDoneAndRemainingByPeriodInterface } from \"../../../interfaces/reports\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { DATE, sortThisArray } from \"../../../utils/functions\";\n// import searchExamData from \"../../../utils/search\";\nimport { getPeriodById } from \"./ExamReport\";\n\n// EXCEL FILE FUNCTIONS ================================\nexport interface ExaminationProgressToPrintInterface {\n  course_id: number;\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string;\n  exam_period: string;\n  exam_date: string;\n  exam_time: string;\n  exam_duration: string;\n  exam_status: string;\n}\n\nexport enum ExaminationProgressReportContentKeyInterface {\n  COURSER_NAME = \"course_name\",\n  COURSE_CODE = \"course_code\",\n  SCHOOL_LEVEL = \"school_levels\",\n  PERIOD = \"exam_period\",\n  DATE = \"exam_date\",\n  TIME = \"exam_time\",\n  DURATION = \"exam_duration\",\n  STATUS = \"exam_status\",\n}\n\nexport interface ExaminationProgressReportContentInterface {\n  key: ExaminationProgressReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n\nexport const examinationProgressIsChangeAllowed = (\n  key: ExaminationProgressReportContentKeyInterface\n): boolean => {\n  if (\n    key === ExaminationProgressReportContentKeyInterface.COURSER_NAME ||\n    key === ExaminationProgressReportContentKeyInterface.COURSE_CODE ||\n    key === ExaminationProgressReportContentKeyInterface.PERIOD ||\n    key === ExaminationProgressReportContentKeyInterface.STATUS\n  ) {\n    return false;\n  }\n  return true;\n};\n\nexport const defaultExaminationProgressContent: ExaminationProgressReportContentInterface[] =\n  [\n    {\n      key: ExaminationProgressReportContentKeyInterface.COURSER_NAME,\n      title: \"Course names\",\n      status: true,\n    },\n    {\n      key: ExaminationProgressReportContentKeyInterface.COURSE_CODE,\n      title: \"Course code\",\n      status: true,\n    },\n    {\n      key: ExaminationProgressReportContentKeyInterface.SCHOOL_LEVEL,\n      title: \"School levels\",\n      status: true,\n    },\n    {\n      key: ExaminationProgressReportContentKeyInterface.PERIOD,\n      title: \"Exam period\",\n      status: true,\n    },\n    {\n      key: ExaminationProgressReportContentKeyInterface.DATE,\n      title: \"Exam date\",\n      status: true,\n    },\n    {\n      key: ExaminationProgressReportContentKeyInterface.TIME,\n      title: \"Exam time\",\n      status: true,\n    },\n    {\n      key: ExaminationProgressReportContentKeyInterface.DURATION,\n      title: \"Exam duration\",\n      status: true,\n    },\n    {\n      key: ExaminationProgressReportContentKeyInterface.STATUS,\n      title: \"Exam Status\",\n      status: true,\n    },\n  ];\n\n// END EXCEL FILE FUNCTIONS ================================\n\nexport const displayStatus = (status: string): string => {\n  if (status === \"Done\") {\n    return \"Completed\";\n  }\n  if (status === \"Editing\") {\n    return \"In exam\";\n  }\n  return status;\n};\n\nexport interface examProgressStateInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n  exam: ExamItemResponse | null;\n  preparation_status: string;\n}\n\nexport const FC_reportDoneExamList = (\n  allCourses: course[],\n  allExams: ExamItemResponse[],\n  doneExams: ExamDoneAndRemainingByPeriodInterface[]\n): examProgressStateInterface[] => {\n  let result: examProgressStateInterface[] = [],\n    ids: string[] = [];\n  for (const key in allExams) {\n    if (Object.prototype.hasOwnProperty.call(allExams, key)) {\n      if (ids.includes(allExams[key].id)) continue;\n      ids.push(allExams[key].id);\n      let courser = allCourses.find(\n        (item) => item.course_id === allExams[key].course\n      );\n      if (courser) {\n        let doneExam = doneExams.find(\n          (item) =>\n            item.course === allExams[key].course &&\n            item.period === allExams[key].period\n        );\n        result.push({\n          course_name: courser.course_name,\n          course_code: courser.course_code,\n          description: courser.description,\n          school_levels: courser.school_levels,\n          course_id: courser.course_id,\n          exam: allExams[key],\n          preparation_status: doneExam ? doneExam.exam_status : \"remaining\",\n        });\n      }\n    }\n  }\n  return result;\n};\n\nexport const FC_reportDoneExamListFilter = (\n  thisList: examProgressStateInterface[],\n  thisValue: \"all\" | \"Done\" | \"Active\"\n): examProgressStateInterface[] => {\n  if (thisValue === \"all\") {\n    return thisList;\n  } else {\n    return thisList.filter((item) => item.preparation_status === thisValue);\n  }\n};\n\nexport const searchExamData = (\n  objList: examProgressStateInterface[],\n  text: string\n): examProgressStateInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (\n        prop === \"course_name\" ||\n        prop === \"course_code\" ||\n        prop === \"preparation_status\"\n      ) {\n        flag =\n          product[prop].toString().toLowerCase().indexOf(text.toLowerCase()) >\n          -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n};\n\ntype DoneExamListProps = {\n  loading: boolean;\n  examsListData: ExamItemResponse[] | null;\n  courseListData: course[] | null;\n  thisPeriod: SessionPlanInterface[];\n  doneExamsData: ExamDoneAndRemainingByPeriodInterface[] | null;\n\n  // for filter purpose =============================\n  filterExamProgress: \"all\" | \"Done\" | \"Active\";\n};\n\nconst DoneExamList: React.FC<DoneExamListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const [isSorted, setIsSorted] = useState<boolean>(false);\n  const [sortProperty, setSortProperty] = useState<string>(\"\");\n  const [sortOrder, setSortOrder] = useState<\"ASC\" | \"DESC\">(\"ASC\");\n\n  const setSort = (thisProperty: string) => {\n    if (sortProperty === thisProperty && sortOrder === \"ASC\") {\n      setSortOrder(\"DESC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    } else {\n      setSortOrder(\"ASC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    }\n  };\n\n  return (\n    <Fragment>\n      <div className=\"bg-white my-4\">\n        <div className=\"w-full px-2 py-2\">\n          <input\n            onChange={(e) => setSearchInput(e.target.value)}\n            type=\"text\"\n            value={searchInput}\n            placeholder=\"Search...\"\n            className=\"w-full bg-gray-100 py-2 px-3 rounded\"\n            disabled={\n              props.courseListData &&\n              props.examsListData &&\n              props.doneExamsData &&\n              FC_reportDoneExamListFilter(\n                FC_reportDoneExamList(\n                  props.courseListData,\n                  props.examsListData,\n                  props.doneExamsData\n                ),\n                props.filterExamProgress\n              ).length <= 0\n                ? true\n                : false\n            }\n          />\n        </div>\n        <table className=\"w-full shadow\" id=\"report_content\">\n          <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n            <tr>\n              <td className=\"px-2 py-2\">#</td>\n              <td\n                className=\"px-2 py-2 cursor-pointer\"\n                onClick={() => setSort(\"course_name\")}\n              >\n                <div className=\"flex items-center gap-1\">\n                  Course <BiSort />\n                </div>\n              </td>\n              <td className=\"px-2 py-2\">Exam date</td>\n              <td className=\"px-2 py-2\">Exam time</td>\n              <td className=\"px-2 py-2\">Exam duration</td>\n              <td className=\"px-2 py-2\">Exam Period</td>\n              <td\n                className=\"px-2 py-2 cursor-pointer\"\n                onClick={() => setSort(\"preparation_status\")}\n              >\n                <div className=\"flex items-center gap-1\">\n                  Exam Status <BiSort />\n                </div>\n              </td>\n            </tr>\n          </thead>\n          <tbody>\n            {props.courseListData === null || props.loading ? (\n              <tr>\n                <td colSpan={7} className=\"px-2 py-2\">\n                  <Loading />\n                </td>\n              </tr>\n            ) : props.examsListData &&\n              props.doneExamsData &&\n              FC_reportDoneExamListFilter(\n                FC_reportDoneExamList(\n                  props.courseListData,\n                  props.examsListData,\n                  props.doneExamsData\n                ),\n                props.filterExamProgress\n              ).length <= 0 ? (\n              <tr>\n                <td colSpan={7} className=\"px-2 py-2 text-center\">\n                  No Exam list available!\n                </td>\n              </tr>\n            ) : (\n              props.examsListData &&\n              props.doneExamsData &&\n              sortThisArray(\n                isSorted,\n                searchExamData(\n                  FC_reportDoneExamListFilter(\n                    FC_reportDoneExamList(\n                      props.courseListData,\n                      props.examsListData,\n                      props.doneExamsData\n                    ),\n                    props.filterExamProgress\n                  ),\n                  searchInput\n                ),\n                sortProperty,\n                sortOrder\n              ).map((item, i) => (\n                <tr\n                  key={i + 1}\n                  className={`${\n                    item.preparation_status === \"Done\"\n                      ? \"bg-blue-50\"\n                      : \"bg-white\"\n                  } text-gray-600 hover:bg-blue-100 hover:text-blue-700 border-b border-gray-300 hover:border-blue-500 text-sm`}\n                >\n                  <td className=\"px-2 py-2\">{i + 1}</td>\n                  <td className=\"px-2 py-2\">\n                    {capitalizeFirstLetter(item.course_name)} (\n                    <span className=\"font-semibold\">{item.course_code}</span>)\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam ? DATE(item.exam.exam_date) : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam ? item.exam.start_time : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam ? item.exam!.duration + \" min\" : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam\n                      ? getPeriodById(props.thisPeriod, item.exam.period)\n                        ? getPeriodById(props.thisPeriod, item.exam.period)!\n                            .session_plan_name\n                        : \"-\"\n                      : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {capitalizeFirstLetter(\n                      displayStatus(item.preparation_status)\n                    )}\n                  </td>\n                </tr>\n              ))\n            )}\n          </tbody>\n        </table>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default React.memo(DoneExamList);\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AssignRoleToUserActionInterface,\n  CustomeAccessInterface,\n  UserInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\n\nconst url = `${API.AUTH}/auth`;\nexport const userPageLimit: number = 30;\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\nexport interface FetchUsersAction {\n  type: ActionTypes.FETCH_USERS_ACCESS;\n  payload: UserAccessInterface;\n}\n\nexport interface BlockUserToSystem {\n  type: ActionTypes.BLOCK_USER_TO_SYSTEM | ActionTypes.UNBLOCK_USER_TO_SYSTEM;\n  payload: { id: string; page: number };\n}\n\nexport interface AssignRoleToUserAction {\n  type: ActionTypes.ASSIGN_ROLE_TO_USER;\n  payload: { data: AssignRoleToUserActionInterface; page: number };\n}\n\nexport interface CustomizeUserAccessAction {\n  type: ActionTypes.CUSTOMIZE_USER_ACCESS;\n  payload: { data: CustomeAccessInterface; page: number };\n}\n\nexport interface ResetUserAccessAction {\n  type: ActionTypes.RESET_USER_ACCESS;\n  payload: { user_id: string; page: number };\n}\n\nexport type fetchUserAccessInterface = {\n  users: UserInterface[] | null;\n  next: {\n    page: number;\n    limit: number;\n  } | null;\n  previous: {\n    page: number;\n    limit: number;\n  } | null;\n  total_users: number;\n};\n\nexport type UserAccessInterface = {\n  users: { data: UserInterface[]; page: number }[] | null;\n  next: {\n    page: number;\n    limit: number;\n  } | null;\n  previous: {\n    page: number;\n    limit: number;\n  } | null;\n  total_users: number;\n};\n\nexport enum documentValidationStatus {\n  waiting = \"waiting\",\n  approved = \"approved\",\n  rejected = \"rejected\",\n}\n\nexport interface VerifyDocumentInterface {\n  user_id: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date?: string;\n  };\n  in_education: boolean;\n  disability: boolean;\n  expiration_date: string;\n}\n\nexport type AccessUserActionType =\n  | FetchUsersAction\n  | BlockUserToSystem\n  | AssignRoleToUserAction\n  | CustomizeUserAccessAction\n  | ResetUserAccessAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport type FT_FetchUserAccess = (\n  page: number,\n  callBack?: (\n    status: boolean,\n    msg: string,\n    data: UserInterface[] | null\n  ) => void\n) => void;\nexport const fetchUserAccess = (\n  page: number,\n  callback?: (\n    status: boolean,\n    msg: string,\n    data: UserInterface[] | null\n  ) => void\n) => {\n  callback && callback(true, \"\", null);\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<fetchUserAccessInterface>(\n        `${url}/user?page=${page}&limit=${userPageLimit}`\n      );\n      console.log(\"====================================\");\n      console.log({ fetchUserAccess: res });\n      console.log(\"====================================\");\n      dispatch<FetchUsersAction>({\n        type: ActionTypes.FETCH_USERS_ACCESS,\n        payload: {\n          users: [{ data: res.data.users!, page: page }],\n          next: res.data.next,\n          previous: res.data.previous,\n          total_users: res.data.total_users,\n        },\n      });\n      callback && callback(false, \"\", res.data.users);\n    } catch (error) {\n      console.error({ user_error: error });\n      callback && callback(false, errorToText(error), null);\n    }\n  };\n};\n\nexport const blockUserToSystem = (user_id: string, page: number) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<BlockUserToSystem>({\n      type: ActionTypes.BLOCK_USER_TO_SYSTEM,\n      payload: { id: user_id, page },\n    });\n  };\n};\n\nexport const unBlockUserToSystem = (user_id: string, page: number) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<BlockUserToSystem>({\n      type: ActionTypes.UNBLOCK_USER_TO_SYSTEM,\n      payload: { id: user_id, page },\n    });\n  };\n};\n\nexport const assignRoleToUserAccess = (\n  data: AssignRoleToUserActionInterface,\n  page: number\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<AssignRoleToUserAction>({\n      type: ActionTypes.ASSIGN_ROLE_TO_USER,\n      payload: { data, page },\n    });\n  };\n};\n\nexport const customizeUserAccess = (\n  data: CustomeAccessInterface,\n  page: number\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CustomizeUserAccessAction>({\n      type: ActionTypes.CUSTOMIZE_USER_ACCESS,\n      payload: { data, page },\n    });\n  };\n};\n\nexport const resetUserAccess = (data: string, page: number) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<ResetUserAccessAction>({\n      type: ActionTypes.RESET_USER_ACCESS,\n      payload: { user_id: data, page },\n    });\n  };\n};\n","import { ApexOptions } from \"apexcharts\";\nimport React, { useEffect, useState } from \"react\";\nimport Chart from \"react-apexcharts\";\n\ntype VBarCharPropstInterface = {\n  labels: string[];\n  categoriesLabel: any;\n  bar?: {\n    borderRadius: number;\n    horizontal: boolean;\n    columnWidth: string;\n    endingShape: string;\n  };\n  dataLabels: boolean;\n  yaxisText: string;\n  tooltipText: string;\n  series: {\n    name: string;\n    data: number[];\n  }[];\n  defaultBar?: {\n    borderRadius: number;\n    horizontal: boolean;\n    columnWidth: string;\n    endingShape: string;\n  };\n  colors?: any[];\n  title?: {\n    text: string;\n    align: string;\n    margin: number;\n    offestY: number;\n    style: {\n      fontSize: string;\n    };\n  };\n  stacked?: boolean;\n  FC_LoadSelected?: (labelIndex: number, seriesIndex: number) => void;\n  chartHeight?: number;\n};\n\nconst defaultBar = {\n  borderRadius: 4,\n  horizontal: false,\n  columnWidth: \"95%\",\n  endingShape: \"rounded\",\n};\n\nconst VBarChart: React.FC<VBarCharPropstInterface> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [options, setOptions] = useState<ApexOptions>({\n    chart: {\n      events: {\n        dataPointSelection: (event, chartContext, config) => {\n          console.log({\n            labelClicked: config.w.config.labels[config.dataPointIndex],\n            // seriesClicked: config.w.config.series[config.dataPointIndex],\n          });\n          if (props.FC_LoadSelected) {\n            props.FC_LoadSelected(config.dataPointIndex, config.seriesIndex);\n          }\n          // console.log(config.seriesIndex);\n          // console.log(config.dataPointIndex);\n        },\n      },\n      stacked: props.stacked ? props.stacked : false,\n    },\n    plotOptions: {\n      bar: props.defaultBar ? props.defaultBar : defaultBar,\n    },\n    labels: props.labels,\n    dataLabels: {\n      enabled: true,\n    },\n    xaxis: {\n      labels: {\n        rotate: -45,\n      },\n      categories: props.categoriesLabel,\n      tickPlacement: \"on\",\n    },\n    yaxis: {\n      title: {\n        text: props.yaxisText,\n      },\n    },\n    fill: {\n      opacity: 1,\n    },\n    tooltip: {\n      y: {\n        formatter: function (val: number) {\n          return val + \" \" + props.tooltipText;\n        },\n      },\n    },\n    grid: {\n      padding: {\n        left: 30, // or whatever value that works\n        right: 30, // or whatever value that works\n      },\n    },\n    noData: {\n      text: \"No data found\",\n      align: \"center\",\n      verticalAlign: \"middle\",\n    },\n  });\n\n  useEffect(() => {\n    if (props.colors && props.colors.length > 0 && loading) {\n      setOptions({\n        chart: {\n          stacked: props.stacked ? props.stacked : false,\n          events: {\n            dataPointSelection: (event, chartContext, config) => {\n              console.log({\n                chartClicked: config.w.config.labels[config.dataPointIndex],\n              });\n              if (props.FC_LoadSelected) {\n                props.FC_LoadSelected(\n                  config.dataPointIndex,\n                  config.seriesIndex\n                );\n              }\n            },\n          },\n          zoom: {\n            enabled: true,\n            autoScaleYaxis: true,\n          },\n        },\n        plotOptions: {\n          bar: props.defaultBar ? props.defaultBar : defaultBar,\n        },\n        labels: props.labels,\n        dataLabels: {\n          enabled: true,\n        },\n        xaxis: {\n          labels: {\n            rotate: -45,\n          },\n          categories: props.categoriesLabel,\n          tickPlacement: \"on\",\n        },\n        yaxis: {\n          title: {\n            text: props.yaxisText,\n          },\n        },\n        fill: {\n          opacity: 1,\n        },\n        tooltip: {\n          y: {\n            formatter: function (val: number) {\n              return val + \" \" + props.tooltipText;\n            },\n          },\n        },\n        grid: {\n          padding: {\n            left: 30, // or whatever value that works\n            right: 30, // or whatever value that works\n          },\n        },\n        noData: {\n          text: \"No data found\",\n          align: \"center\",\n          verticalAlign: \"middle\",\n        },\n        colors: props.colors,\n      });\n    } else if (loading) {\n      setOptions({\n        chart: {\n          stacked: props.stacked ? props.stacked : false,\n          events: {\n            dataPointSelection: (event, chartContext, config) => {\n              console.log({\n                labelClicked: config.w.config.labels[config.dataPointIndex],\n                // seriesClicked: config.w.config.series[config.dataPointIndex],\n              });\n              if (props.FC_LoadSelected) {\n                props.FC_LoadSelected(\n                  config.dataPointIndex,\n                  config.seriesIndex\n                );\n              }\n              // console.log(config.seriesIndex);\n              // console.log(config.dataPointIndex);\n            },\n          },\n          zoom: {\n            enabled: true,\n            autoScaleYaxis: true,\n          },\n        },\n        plotOptions: {\n          bar: props.defaultBar ? props.defaultBar : defaultBar,\n        },\n        labels: props.labels,\n        dataLabels: {\n          enabled: true,\n        },\n        xaxis: {\n          labels: {\n            rotate: -45,\n          },\n          categories: props.categoriesLabel,\n          tickPlacement: \"on\",\n        },\n        yaxis: {\n          title: {\n            text: props.yaxisText,\n          },\n        },\n        fill: {\n          opacity: 1,\n        },\n        tooltip: {\n          y: {\n            formatter: function (val: number) {\n              return val + \" \" + props.tooltipText;\n            },\n          },\n        },\n        grid: {\n          padding: {\n            left: 30, // or whatever value that works\n            right: 30, // or whatever value that works\n          },\n        },\n        noData: {\n          text: \"No data found\",\n          align: \"center\",\n          verticalAlign: \"middle\",\n        },\n      });\n    }\n    setLoading(false);\n  }, [loading, options, props]);\n\n  if (loading) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading Data...\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"w-full\">\n      <Chart\n        options={options}\n        series={props.series}\n        type=\"bar\"\n        width=\"100%\"\n        height={props.chartHeight ? props.chartHeight : undefined}\n      />\n    </div>\n  );\n};\n\nexport default React.memo(VBarChart);\n","import React, { Component } from \"react\";\nimport { BiFilterAlt } from \"react-icons/bi\";\nimport { FiEdit } from \"react-icons/fi\";\nimport { MdRadioButtonChecked, MdRadioButtonUnchecked } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  schoolLevelsStoreInterface,\n  setSelectedPeriod,\n  loadCourses,\n  loadExamsList,\n  loadEducationCategories,\n  loadDoneExam,\n  loadSchoolLevels,\n  loadPerfomranceExam,\n  loadCandidatesExamPerformance,\n  setSelectedEducationCategory,\n  PushPopupAlert,\n  FilterParamType,\n  ReportGetCandidatePerformanceSortTypes,\n} from \"../../../actions\";\nimport { FC_GetAllSessionByInstitution } from \"../../../actions/session\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport {\n  generatePDF,\n  reportSettingsInterface,\n} from \"../../../components/DownloadPDF/rest\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { SideNavigation } from \"../../../components/Navigation/SideNavigation\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  course,\n  education_category,\n  ReportUserExamStatus,\n  school_level,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport {\n  ExamItemResponse,\n  PrepareExamStatus,\n  QuestionNumberFormat,\n} from \"../../../interfaces/prepare_exam\";\nimport { StoreState } from \"../../../reducers\";\nimport { ExamReportReducerType } from \"../../../reducers/exam_report\";\nimport { SessionPlanReducerInterface } from \"../../../reducers/session\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport {\n  DATE,\n  FC_HasInstitute,\n  timestampToDate,\n} from \"../../../utils/functions\";\nimport NoSession from \"../../SessionSettings/NoSession\";\nimport CandiadtePerformancePerDistrict, {\n  FC_CandiadtePerformancePerDistrictFilter,\n} from \"./CandiadtePerformancePerDistrict\";\nimport CandidatePerformance, {\n  CandidateExamPerformanceToPrintInterface,\n  CandidateExamPerformanceReportContentInterface,\n  defaultCandidateExamPerformanceContent,\n  candidatePerfomranceStateInterface,\n  FC_reportCandidatePerformanceData,\n} from \"./CandidatePerformance\";\nimport DoneExamList, {\n  ExaminationProgressToPrintInterface,\n  ExaminationProgressReportContentInterface,\n  defaultExaminationProgressContent,\n  displayStatus,\n  examProgressStateInterface,\n  FC_reportDoneExamList,\n} from \"./DoneExamList\";\nimport ExamList, {\n  ExamPreparationToPrintInterface,\n  examPreparationReportContentInterface,\n  defaultExamPreparationReportContent,\n  examPreparationStateInterface,\n  FC_reportExamList,\n} from \"./ExamList\";\nimport ExamPerformance, {\n  ExamPerformanceToPrintInterface,\n  examPerformanceReportContentInterface,\n  defaultExamPerformanceContent,\n  examPerformanceStateInterface,\n  FC_reportExamPerformanceData,\n} from \"./ExamPerformance\";\nimport ExamPerformancePerDistrict, {\n  FC_ExamPerformancePerDistrictPropsData,\n} from \"./ExamPerformancePerDistrict\";\nimport ExamReportFilters from \"./ExamReportFilters\";\nimport ExamReportModals, { ModalForTypes } from \"./ExamReportModals\";\nimport ExamReportTitle from \"./ExamReportTitle\";\n\nexport interface reportCourseInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n  exam: {\n    questions: string[];\n    status: number;\n    period: string;\n    course: string;\n    exam_status: PrepareExamStatus;\n    termes: string;\n    questions_per_page: number;\n    exam_date: string;\n    start_time: string;\n    duration: number;\n    number_format: QuestionNumberFormat;\n    discription: string;\n    createdAt: string;\n    updatedAt: string;\n    id: string;\n  };\n}\n\nexport const getExamByCourseId = (\n  allExams: ExamItemResponse[],\n  course_id: string\n): ExamItemResponse | undefined => {\n  return allExams.find((item) => item.course === course_id);\n};\n\nexport const getPeriodById = (\n  periods: SessionPlanInterface[],\n  period_id: string\n): SessionPlanInterface | undefined => {\n  return periods.find((item) => item._id === period_id);\n};\n\nexport const loadAllExams = (\n  examsList: ExamItemResponse[] | null,\n  selected_period: SessionPlanInterface | null\n): ExamItemResponse[] | null => {\n  let result: ExamItemResponse[] | null = examsList;\n  if (result && selected_period) {\n    result = result.filter((item) => item.period === selected_period?._id);\n  } else {\n    result = examsList;\n  }\n  return result;\n};\n\n// TYPES OF REPORTS ======================================\nexport enum reportTitleType {\n  APPLICANTS_PERFORMANCE = \"Exam report\",\n  EXAM_PREPARATION = \"List of prepared and not prepared exams\",\n  EXAM_PERFORMANCE = \"Exam performance\",\n  EXAMINATION_PROGRESS = \"List of complete & remaining exams\",\n  EXAM_DISTRICT_PERFORMANCE = \"Top 30 exams passed in\", // ADD DISTRICT NAME EX: Muhanga District\n  APPLICANTS_DISTRICT_PERFORMANCE = \"Top 30 applicants performance\", // ADD DISTRICT NAME EX: Muhanga District && EXAM NAME EX: Physics\n}\n\ninterface ExamReportProps {\n  auth: Auth;\n  periods: SessionPlanReducerInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n  courses: course[] | null;\n  examsList: ExamItemResponse[] | null;\n  adminExamReport: ExamReportReducerType;\n  FC_GetAllSessionByInstitution: Function;\n  loadEducationCategories: Function;\n  setSelectedEducationCategory: (\n    education_category: education_category\n  ) => void;\n  loadCourses: (callback: (loading: boolean) => void) => void;\n  loadExamsList: (callback: (loading: boolean) => void) => void;\n  loadDoneExam: (period_id: string, callback: Function) => void;\n  loadPerfomranceExam: (period_id: string, callback: Function) => void;\n  loadSchoolLevels: (callback: (loading: boolean) => void) => void;\n  loadCandidatesExamPerformance: (\n    dataBody: FilterParamType | null,\n    callback: Function\n  ) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface ExamReportState {\n  loading: boolean;\n  loadingCourses: boolean;\n  loadingExams: boolean;\n  downloading: boolean;\n  loadingDoneExam: boolean;\n  loadingCandidatesExamPerformance: boolean;\n  loadingExamPerformance: boolean;\n  loadingSettings: boolean;\n\n  // FILTER STATES =======================================\n  filterPreparation: \"prepared\" | \"not prepared\" | \"all\";\n  filterExamProgress: \"Done\" | \"Active\" | \"all\";\n  filterApplicantPerformance: ReportUserExamStatus | \"all\";\n  // END FILTER STATES =======================================\n\n  selectPeriod: boolean;\n  generateReportModal: {\n    reportType: \"EXCEL\" | \"PDF\";\n    status: boolean;\n  } | null;\n  districtModal: boolean;\n  selected_period: SessionPlanInterface | null;\n\n  // GENERATE EXCEL REPORT =======================================\n  // WHAT TO PRINT ########################################\n  reportTitle: reportTitleType;\n  // WHAT TITLE TO PRINT ########################################\n  excelReportTitle: string;\n  // SET DEFAULT CONTENT ########################################\n  // ############### EXAM PREPARATION ######################\n  examsToPrint: ExamPreparationToPrintInterface[] | null;\n  examPreparationReportContent: examPreparationReportContentInterface[];\n  // ############### EXAM PERFORMANCE ######################\n  examPerformanceToPrint: ExamPerformanceToPrintInterface[] | null;\n  examPerformanceReportContent: examPerformanceReportContentInterface[];\n  // ############### TOP 30 EXAM PERFORMANCE ######################\n  exam30PerformanceToPrint: ExamPerformanceToPrintInterface[] | null;\n  exam30PerformanceReportContent: examPerformanceReportContentInterface[];\n  // ############### EXAMINATION PROGRESS ######################\n  examinationProgressToPrint: ExaminationProgressToPrintInterface[] | null;\n  examinationProgressReportContent: ExaminationProgressReportContentInterface[];\n  // ############### CANDIDATE EXAM PERFORMANCE ######################\n  candidateExamPerformanceToPrint:\n    | CandidateExamPerformanceToPrintInterface[]\n    | null;\n\n  candidateExamPerformanceReportContent: CandidateExamPerformanceReportContentInterface[];\n  // ############### CANDIDATE EXAM PERFORMANCE ######################\n\n  candidate30ExamPerformanceToPrint:\n    | CandidateExamPerformanceToPrintInterface[]\n    | null;\n\n  candidate30ExamPerformanceReportContent: CandidateExamPerformanceReportContentInterface[];\n  // END GENERATE EXCEL REPORT =======================================\n}\n\nclass _ExamReport extends Component<ExamReportProps, ExamReportState> {\n  constructor(props: ExamReportProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingCourses: true,\n      loadingExams: true,\n      downloading: false,\n      loadingDoneExam: true,\n      loadingCandidatesExamPerformance: true,\n      loadingExamPerformance: true,\n      loadingSettings: true,\n      selectPeriod: false,\n      districtModal: false,\n\n      // FILTER STATES =======================================\n      filterPreparation: \"all\",\n      filterExamProgress: \"all\",\n      filterApplicantPerformance: \"all\",\n      // END FILTER STATES =======================================\n\n      generateReportModal: null,\n      selected_period: null,\n\n      // GENERATE EXCEL REPORT =======================================\n      // WHAT TO PRINT ########################################\n      reportTitle: reportTitleType.APPLICANTS_PERFORMANCE,\n      // WHAT TITLE TO PRINT ########################################\n      excelReportTitle: reportTitleType.APPLICANTS_PERFORMANCE,\n      // SET DEFAULT CONTENT ########################################\n      // ############### EXAM PREPARATION ######################\n      examsToPrint: null,\n      examPreparationReportContent: defaultExamPreparationReportContent,\n      // ############### EXAM PERFORMANCE ######################\n      examPerformanceToPrint: null,\n      examPerformanceReportContent: defaultExamPerformanceContent,\n      // ############### TOP 30 EXAM PERFORMANCE ######################\n      exam30PerformanceToPrint: null,\n      exam30PerformanceReportContent: defaultExamPerformanceContent,\n      // ############### EXAMINATION PROGRESS ######################\n      examinationProgressToPrint: null,\n      examinationProgressReportContent: defaultExaminationProgressContent,\n      // ############### CANDIDATE EXAM PERFORMANCE ######################\n      candidateExamPerformanceToPrint: null,\n\n      candidateExamPerformanceReportContent:\n        defaultCandidateExamPerformanceContent,\n      // ############### CANDIDATE EXAM PERFORMANCE ######################\n\n      candidate30ExamPerformanceToPrint: null,\n\n      candidate30ExamPerformanceReportContent:\n        defaultCandidateExamPerformanceContent,\n      // END GENERATE EXCEL REPORT =======================================\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingCourses = (value: boolean) => {\n    this.setState({ loadingCourses: value });\n  };\n\n  setLoadingExams = (value: boolean) => {\n    this.setState({ loadingExams: value });\n  };\n\n  setDownloading = (value: boolean) => {\n    this.setState({ downloading: value });\n  };\n\n  setLoadingDoneExam = (value: boolean) => {\n    this.setState({ loadingDoneExam: value });\n  };\n\n  setLoadingCandidatesExamPerformance = (value: boolean) => {\n    this.setState({ loadingCandidatesExamPerformance: value });\n  };\n\n  setLoadingExamPerformance = (value: boolean) => {\n    this.setState({ loadingExamPerformance: value });\n  };\n\n  setLoadingSettings = (value: boolean) => {\n    this.setState({ loadingSettings: value });\n  };\n\n  setSelectPeriod = (value: boolean) => {\n    this.setState({ selectPeriod: value });\n  };\n\n  setDistrictModal = (value: boolean) => {\n    this.setState({ districtModal: value });\n  };\n\n  setFilterPreparation = (value: \"prepared\" | \"not prepared\" | \"all\") => {\n    this.setState({ filterPreparation: value });\n  };\n\n  setFilterExamProgress = (value: \"Done\" | \"Active\" | \"all\") => {\n    this.setState({ filterExamProgress: value });\n  };\n\n  setFilterApplicantPerformance = (value: ReportUserExamStatus | \"all\") => {\n    this.setState({ filterApplicantPerformance: value });\n  };\n\n  setGenerateReportModal = (\n    value: {\n      reportType: \"EXCEL\" | \"PDF\";\n      status: boolean;\n    } | null\n  ) => {\n    this.setState({ generateReportModal: value });\n  };\n\n  setSelectedPeriod = (value: SessionPlanInterface | null) => {\n    this.setState({ selected_period: value });\n  };\n\n  setReportTitle = (value: reportTitleType) => {\n    this.setState({ reportTitle: value });\n  };\n\n  setExcelReportTitle = (value: string) => {\n    this.setState({ excelReportTitle: value });\n  };\n\n  setExamsToPrint = (value: ExamPreparationToPrintInterface[] | null) => {\n    this.setState({ examsToPrint: value });\n  };\n\n  setExamPreparationReportContent = (\n    value: examPreparationReportContentInterface[]\n  ) => {\n    this.setState({ examPreparationReportContent: value });\n  };\n  setExamPerformanceToPrint = (\n    value: ExamPerformanceToPrintInterface[] | null\n  ) => {\n    this.setState({ examPerformanceToPrint: value });\n  };\n  setExamPerformanceReportContent = (\n    value: examPerformanceReportContentInterface[]\n  ) => {\n    this.setState({ examPerformanceReportContent: value });\n  };\n\n  setExam30PerformanceToPrint = (\n    value: ExamPerformanceToPrintInterface[] | null\n  ) => {\n    this.setState({ exam30PerformanceToPrint: value });\n  };\n  setExam30PerformanceReportContent = (\n    value: examPerformanceReportContentInterface[]\n  ) => {\n    this.setState({ exam30PerformanceReportContent: value });\n  };\n  setExaminationProgressToPrint = (\n    value: ExaminationProgressToPrintInterface[] | null\n  ) => {\n    this.setState({ examinationProgressToPrint: value });\n  };\n  setExaminationProgressExamPerformanceReportContent = (\n    value: ExaminationProgressReportContentInterface[]\n  ) => {\n    this.setState({ examinationProgressReportContent: value });\n  };\n\n  setCandidateExamPerformanceToPrint = (\n    value: CandidateExamPerformanceToPrintInterface[] | null\n  ) => {\n    this.setState({ candidateExamPerformanceToPrint: value });\n  };\n\n  setCandidateExamPerformanceReportContent = (\n    value: CandidateExamPerformanceReportContentInterface[]\n  ) => {\n    this.setState({ candidateExamPerformanceReportContent: value });\n  };\n\n  setCandidate30ExamPerformanceToPrint = (\n    value: CandidateExamPerformanceToPrintInterface[] | null\n  ) => {\n    this.setState({ candidate30ExamPerformanceToPrint: value });\n  };\n\n  setCandidate30ExamPerformanceReportContent = (\n    value: CandidateExamPerformanceReportContentInterface[]\n  ) => {\n    this.setState({ candidate30ExamPerformanceReportContent: value });\n  };\n\n  selectDefaultSession = (allSession: SessionPlanInterface[]) => {\n    if (allSession.length > 0) {\n      let active_period = allSession.find((item) => item.is_active);\n      this.setSelectedPeriod(active_period ? active_period : allSession[0]);\n      this.onPeriodChange(\n        active_period ? active_period._id : allSession[0]._id\n      );\n    }\n    this.setSelectPeriod(false);\n  };\n\n  // onInstitutionChanged = (institution_id: string) => {\n  //   if (\n  //     this.props.schoolLevels.education_categories &&\n  //     this.props.schoolLevels.education_categories.length > 0\n  //   ) {\n\n  //   }\n  // };\n\n  FD_GetSessions = (institution_id: string) => {\n    this.setSelectedPeriod(null);\n    this.props.FC_GetAllSessionByInstitution(\n      institution_id,\n      (status: boolean, msg: string, data?: SessionPlanInterface[]) => {\n        this.setLoadingSettings(status);\n        if (!status) {\n          if (!isEmptyOrSpaces(msg)) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          if (data && data.length > 0) {\n            this.selectDefaultSession(data);\n          }\n        }\n      }\n    );\n  };\n\n  componentDidMount = () => {\n    if (FC_HasInstitute(this.props.auth.education_institution_id)) {\n      this.FD_GetSessions(this.props.auth.education_institution_id!);\n    }\n\n    if (\n      this.props.schoolLevels.education_categories === null ||\n      this.props.schoolLevels.education_categories.length\n    ) {\n      this.props.loadEducationCategories(\n        (status: boolean, data?: education_category[]) => {\n          this.setLoadingSettings(status);\n          if (!status && data && data.length > 0) {\n            // if (!isEmptyOrSpaces(msg)) {\n            //   this.props.PushPopupAlert({\n            //     title: msg,\n            //     theme: PopupAlertTheme.danger,\n            //   });\n            // }\n\n            if (\n              FC_HasInstitute(this.props.auth.education_institution_id) ===\n              false\n            ) {\n              this.props.setSelectedEducationCategory(data[0]);\n              this.FD_GetSessions(data[0].education_institute_id);\n            } else {\n              const thisEducation = data.find(\n                (item) =>\n                  item.education_institute_id ===\n                  this.props.auth.education_institution_id\n              );\n              this.props.setSelectedEducationCategory(\n                thisEducation ? thisEducation : data[0]\n              );\n            }\n            // if (data && data.length > 0) {\n            // }\n          }\n        }\n      );\n    } else if (!this.props.schoolLevels.selectedEducationCategory) {\n      if (FC_HasInstitute(this.props.auth.education_institution_id) === false) {\n        this.props.setSelectedEducationCategory(\n          this.props.schoolLevels.education_categories[0]\n        );\n        this.FD_GetSessions(\n          this.props.schoolLevels.education_categories[0].education_institute_id\n        );\n      } else {\n        const thisEducation = this.props.schoolLevels.education_categories.find(\n          (item) =>\n            item.education_institute_id ===\n            this.props.auth.education_institution_id\n        );\n        this.props.setSelectedEducationCategory(\n          thisEducation\n            ? thisEducation\n            : this.props.schoolLevels.education_categories[0]\n        );\n      }\n    }\n\n    if (\n      this.props.schoolLevels.school_levels === null ||\n      this.props.schoolLevels.school_levels.length <= 0\n    ) {\n      this.props.loadSchoolLevels(this.setLoadingSettings);\n    }\n\n    if (\n      this.props.courses === null ||\n      (this.props.courses.length === 0 && this.state.loadingCourses)\n    ) {\n      this.props.loadCourses(this.setLoadingCourses);\n    } else if (this.state.loadingCourses) {\n      this.setLoadingCourses(false);\n    }\n\n    if (\n      this.props.examsList === null ||\n      (this.props.examsList.length === 0 && this.state.loadingExams)\n    ) {\n      this.props.loadExamsList(this.setLoadingExams);\n    } else if (this.state.loadingExams) {\n      this.setLoadingExams(false);\n    }\n\n    // if (\n    //   this.props.auth.application_session &&\n    //   this.props.auth.application_session._id &&\n    //   (this.props.adminExamReport.DoneExam === null ||\n    //     (this.props.adminExamReport.DoneExam.length === 0 &&\n    //       this.state.loadingDoneExam))\n    // ) {\n    //   this.props.loadDoneExam(\n    //     this.props.auth.application_session._id,\n    //     (status: boolean, msg: string) => {\n    //       if (!status) {\n    //         if (msg.length > 0) {\n    //           this.props.PushPopupAlert({\n    //             title: msg,\n    //             theme: PopupAlertTheme.danger,\n    //           });\n    //         }\n    //         this.setLoadingDoneExam(false);\n    //       }\n    //     }\n    //   );\n    // } else if (this.state.loadingDoneExam) {\n    //   this.setLoadingDoneExam(false);\n    // }\n\n    // if (\n    //   this.props.auth.application_session &&\n    //   this.props.auth.application_session._id &&\n    //   (this.props.adminExamReport.CandidatesExamPerformance === null ||\n    //     (this.props.adminExamReport.CandidatesExamPerformance.length === 0 &&\n    //       this.state.loadingCandidatesExamPerformance))\n    // ) {\n    //   this.props.loadCandidatesExamPerformance(\n    //     {\n    //       order: \"desc\",\n    //       sortBy: ReportGetCandidatePerformanceSortTypes.DATE,\n    //       filter: {\n    //         period: this.props.auth.application_session._id,\n    //       },\n    //     },\n    //     (status: boolean, msg: string) => {\n    //       if (!status) {\n    //         if (msg.length > 0) {\n    //           this.props.PushPopupAlert({\n    //             title: msg,\n    //             theme: PopupAlertTheme.danger,\n    //           });\n    //         }\n    //         this.setLoadingCandidatesExamPerformance(false);\n    //       }\n    //     }\n    //   );\n    // } else if (this.state.loadingCandidatesExamPerformance) {\n    //   this.setLoadingCandidatesExamPerformance(false);\n    // }\n\n    // if (\n    //   this.props.auth.application_session &&\n    //   this.props.auth.application_session._id &&\n    //   (this.props.adminExamReport.ExamPerformance === null ||\n    //     (this.props.adminExamReport.ExamPerformance.length === 0 &&\n    //       this.state.loadingExamPerformance))\n    // ) {\n    //   this.props.loadPerfomranceExam(\n    //     this.props.auth.application_session._id,\n    //     (status: boolean, msg: string) => {\n    //       if (!status) {\n    //         if (msg.length > 0) {\n    //           this.props.PushPopupAlert({\n    //             title: msg,\n    //             theme: PopupAlertTheme.danger,\n    //           });\n    //         }\n    //         this.setLoadingExamPerformance(false);\n    //       }\n    //     }\n    //   );\n    // } else if (this.state.loadingExamPerformance) {\n    //   this.setLoadingExamPerformance(false);\n    // }\n\n    if (this.state.excelReportTitle === this.state.reportTitle) {\n      let result: string = \"\";\n      if (\n        this.state.excelReportTitle ===\n          reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n        this.props.adminExamReport.reportDistrictId\n      ) {\n        result += ` ${this.props.adminExamReport.reportDistrictId.district_name} district`;\n      } else if (\n        this.state.excelReportTitle ===\n        reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE\n      ) {\n        if (this.props.adminExamReport.reportDistrictId) {\n          result += ` in ${this.props.adminExamReport.reportDistrictId.district_name} district`;\n        }\n        if (this.props.adminExamReport.reportCourseId) {\n          result += ` in exam of ${this.props.adminExamReport.reportCourseId.course_name}(${this.props.adminExamReport.reportCourseId.course_code})`;\n        }\n      } else {\n        result = \"\";\n      }\n      this.setExcelReportTitle(this.state.excelReportTitle + result);\n      this.setLoading(false);\n    }\n  };\n\n  onPeriodChange = (period_id: string) => {\n    this.props.loadDoneExam(period_id, (status: boolean, msg: string) => {\n      this.setLoadingDoneExam(status);\n      if (!status) {\n        if (msg.length > 0) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n        this.setLoadingDoneExam(false);\n      }\n    });\n\n    this.props.loadPerfomranceExam(\n      period_id,\n      (status: boolean, msg: string) => {\n        this.setLoadingExamPerformance(status);\n        if (!status) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          this.setLoadingExamPerformance(false);\n        }\n      }\n    );\n\n    this.props.loadCandidatesExamPerformance(\n      {\n        order: \"desc\",\n        sortBy: ReportGetCandidatePerformanceSortTypes.DATE,\n        filter: {\n          period: period_id,\n        },\n      },\n      (status: boolean, msg: string) => {\n        if (!status) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          this.setLoadingCandidatesExamPerformance(false);\n        }\n      }\n    );\n  };\n\n  getLevelbyId = (level_id: string): school_level | undefined => {\n    if (this.props.schoolLevels.school_levels) {\n      return this.props.schoolLevels.school_levels.find(\n        (item) => item.school_level_id === level_id\n      );\n    }\n  };\n\n  getCourses = (): course[] | null => {\n    let result: course[] | null = [],\n      search_all: boolean = true;\n    if (this.props.courses) {\n      // FILTER BY EDICATION CATEGORY ====================\n      if (this.props.schoolLevels.selectedEducationCategory) {\n        for (const key in this.props.courses) {\n          if (Object.prototype.hasOwnProperty.call(this.props.courses, key)) {\n            if (this.props.courses[key].school_levels.length > 0) {\n              this.props.courses[key].school_levels.forEach((level) => {\n                let levelDetail = this.getLevelbyId(level);\n                if (\n                  levelDetail &&\n                  (levelDetail.education_institute.includes(\n                    this.props.schoolLevels.selectedEducationCategory!\n                      .education_institute_id\n                  ) ||\n                    levelDetail.education_institute.length <= 0)\n                ) {\n                  result && result.push(this.props.courses![key]);\n                }\n              });\n            } else {\n              result && result.push(this.props.courses![key]);\n            }\n          }\n        }\n      }\n      // RETURN DEFAULT VALUES ====================\n      else {\n        search_all = false;\n      }\n    }\n    return !search_all ? this.props.courses : result;\n  };\n\n  updateExamToPrint = () => {\n    // EXAM PREPARATION ######################\n    if (this.state.reportTitle === reportTitleType.EXAM_PREPARATION) {\n      if (\n        loadAllExams(this.props.examsList, this.state.selected_period) &&\n        this.getCourses() &&\n        this.props.periods.allSessionPlans\n      ) {\n        let data: examPreparationStateInterface[] = FC_reportExamList(\n          this.getCourses()!,\n          loadAllExams(this.props.examsList, this.state.selected_period)!\n        );\n        let arrayNew: ExamPreparationToPrintInterface[] = [];\n        let n: number = 1;\n        for (const key in data) {\n          if (Object.prototype.hasOwnProperty.call(data, key)) {\n            let school_level: string = \"\";\n            if (data[key].school_levels.length) {\n              data[key].school_levels.forEach((element, index) => {\n                let findLevel = this.getLevelbyId(element);\n                if (index === 0) {\n                  school_level = findLevel ? findLevel.school_level_name : \"\";\n                } else {\n                  school_level += findLevel\n                    ? \", \" + findLevel.school_level_name\n                    : \"\";\n                }\n              });\n            } else {\n              school_level = \"Any level\";\n            }\n            let dataArray: ExamPreparationToPrintInterface = {\n              course_id: n,\n              course_name: data[key].course_name,\n              course_code: data[key].course_code,\n              description: data[key].description,\n              school_levels: data[key].school_levels.length\n                ? school_level\n                : \"Any\",\n              exam_period: data[key].exam\n                ? getPeriodById(\n                    this.props.periods.allSessionPlans,\n                    data[key].exam!.period\n                  )\n                  ? getPeriodById(\n                      this.props.periods.allSessionPlans,\n                      data[key].exam!.period\n                    )!.session_plan_name\n                  : \"-\"\n                : \"-\",\n              exam_date: data[key].exam ? DATE(data[key].exam!.exam_date) : \"-\",\n              exam_time: data[key].exam ? data[key].exam!.start_time : \"-\",\n              exam_duration: data[key].exam\n                ? data[key].exam!.duration.toString()\n                : \"-\",\n              preparation_status: data[key].exam ? \"Prepared\" : \"Not prepared\",\n            };\n\n            for (const key in this.state.examPreparationReportContent) {\n              if (\n                Object.prototype.hasOwnProperty.call(\n                  this.state.examPreparationReportContent,\n                  key\n                )\n              ) {\n                if (!this.state.examPreparationReportContent[key].status) {\n                  delete dataArray[\n                    this.state.examPreparationReportContent[key].key\n                  ];\n                }\n              }\n            }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n        this.setExamsToPrint(arrayNew);\n        arrayNew = [];\n        n = 1;\n        // props.applicationsToPrint=;\n      }\n    }\n    // EXAM PERFORMANCE ######################\n    if (this.state.reportTitle === reportTitleType.EXAM_PERFORMANCE) {\n      if (\n        loadAllExams(this.props.examsList, this.state.selected_period) &&\n        this.getCourses() &&\n        this.props.adminExamReport.ExamPerformance &&\n        this.props.periods.allSessionPlans\n      ) {\n        let data: examPerformanceStateInterface[] =\n          FC_reportExamPerformanceData(\n            this.getCourses()!,\n            loadAllExams(this.props.examsList, this.state.selected_period)!,\n            this.props.adminExamReport.ExamPerformance\n          );\n        let arrayNew: ExamPerformanceToPrintInterface[] = [];\n        let n: number = 1;\n        for (const key in data) {\n          if (Object.prototype.hasOwnProperty.call(data, key)) {\n            let school_level: string = \"\";\n            if (data[key].school_levels.length) {\n              data[key].school_levels.forEach((element, index) => {\n                let findLevel = this.getLevelbyId(element);\n                if (index === 0) {\n                  school_level = findLevel ? findLevel.school_level_name : \"\";\n                } else {\n                  school_level += findLevel\n                    ? \", \" + findLevel.school_level_name\n                    : \"\";\n                }\n              });\n            } else {\n              school_level = \"Any level\";\n            }\n            let dataArray: ExamPerformanceToPrintInterface = {\n              course_id: n,\n              course_name: data[key].course_name,\n              course_code: data[key].course_code,\n              description: data[key].description,\n              school_levels: data[key].school_levels.length\n                ? school_level\n                : \"Any\",\n              exam_period: data[key].exam\n                ? getPeriodById(\n                    this.props.periods.allSessionPlans,\n                    data[key].exam!.period\n                  )\n                  ? getPeriodById(\n                      this.props.periods.allSessionPlans,\n                      data[key].exam!.period\n                    )!.session_plan_name\n                  : \"-\"\n                : \"-\",\n              exam_date: data[key].exam ? DATE(data[key].exam!.exam_date) : \"-\",\n              exam_time: data[key].exam ? data[key].exam!.start_time : \"-\",\n              exam_duration: data[key].exam\n                ? data[key].exam!.duration.toString()\n                : \"-\",\n              exam_performance: Number(data[key].exam_performance.toFixed(1)),\n            };\n\n            for (const key in this.state.examPerformanceReportContent) {\n              if (\n                Object.prototype.hasOwnProperty.call(\n                  this.state.examPerformanceReportContent,\n                  key\n                )\n              ) {\n                if (!this.state.examPerformanceReportContent[key].status) {\n                  delete dataArray[\n                    this.state.examPerformanceReportContent[key].key\n                  ];\n                }\n              }\n            }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n        this.setExamPerformanceToPrint(arrayNew);\n        arrayNew = [];\n        n = 1;\n        // props.applicationsToPrint=;\n      }\n    }\n    // TOP 30 EXAM PERFORMANCE ######################\n    if (this.state.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE) {\n      if (\n        loadAllExams(this.props.examsList, this.state.selected_period) &&\n        this.getCourses() &&\n        this.props.adminExamReport.DoneExam &&\n        this.props.adminExamReport.CandidatesExamPerformance &&\n        this.props.adminExamReport.reportDistrictId &&\n        this.props.periods.allSessionPlans\n      ) {\n        let data = FC_ExamPerformancePerDistrictPropsData(\n          this.getCourses()!,\n          loadAllExams(this.props.examsList, this.state.selected_period)!,\n          this.props.adminExamReport.DoneExam,\n          this.props.adminExamReport.CandidatesExamPerformance,\n          this.props.adminExamReport.reportDistrictId.district_id\n        ).slice(0, 30);\n        let arrayNew: ExamPerformanceToPrintInterface[] = [];\n        let n: number = 1;\n        for (const key in data) {\n          if (Object.prototype.hasOwnProperty.call(data, key)) {\n            let school_level: string = \"\";\n            if (data[key].school_levels.length) {\n              data[key].school_levels.forEach((element, index) => {\n                let findLevel = this.getLevelbyId(element);\n                if (index === 0) {\n                  school_level = findLevel ? findLevel.school_level_name : \"\";\n                } else {\n                  school_level += findLevel\n                    ? \", \" + findLevel.school_level_name\n                    : \"\";\n                }\n              });\n            } else {\n              school_level = \"Any level\";\n            }\n            let dataArray: ExamPerformanceToPrintInterface = {\n              course_id: n,\n              course_name: data[key].course_name,\n              course_code: data[key].course_code,\n              description: data[key].description,\n              school_levels: data[key].school_levels.length\n                ? school_level\n                : \"Any\",\n              exam_period: data[key].exam\n                ? getPeriodById(\n                    this.props.periods.allSessionPlans,\n                    data[key].exam!.period\n                  )\n                  ? getPeriodById(\n                      this.props.periods.allSessionPlans,\n                      data[key].exam!.period\n                    )!.session_plan_name\n                  : \"-\"\n                : \"-\",\n              exam_date: data[key].exam ? DATE(data[key].exam!.exam_date) : \"-\",\n              exam_time: data[key].exam ? data[key].exam!.start_time : \"-\",\n              exam_duration: data[key].exam\n                ? data[key].exam!.duration.toString()\n                : \"-\",\n              exam_performance: 0,\n            };\n\n            for (const key in this.state.exam30PerformanceReportContent) {\n              if (\n                Object.prototype.hasOwnProperty.call(\n                  this.state.exam30PerformanceReportContent,\n                  key\n                )\n              ) {\n                if (!this.state.exam30PerformanceReportContent[key].status) {\n                  delete dataArray[\n                    this.state.exam30PerformanceReportContent[key].key\n                  ];\n                }\n              }\n            }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n        this.setExam30PerformanceToPrint(arrayNew);\n        arrayNew = [];\n        n = 1;\n      }\n    }\n    // EXAMINATION PROGRESS ######################\n    if (this.state.reportTitle === reportTitleType.EXAMINATION_PROGRESS) {\n      if (\n        loadAllExams(this.props.examsList, this.state.selected_period) &&\n        this.getCourses() &&\n        this.props.adminExamReport.DoneExam &&\n        this.props.periods.allSessionPlans\n      ) {\n        let data: examProgressStateInterface[] = FC_reportDoneExamList(\n          this.getCourses()!,\n          loadAllExams(this.props.examsList, this.state.selected_period)!,\n          this.props.adminExamReport.DoneExam\n        );\n        let arrayNew: ExaminationProgressToPrintInterface[] = [];\n        let n: number = 1;\n        for (const key in data) {\n          if (Object.prototype.hasOwnProperty.call(data, key)) {\n            let school_level: string = \"\";\n            if (data[key].school_levels.length) {\n              data[key].school_levels.forEach((element, index) => {\n                let findLevel = this.getLevelbyId(element);\n                if (index === 0) {\n                  school_level = findLevel ? findLevel.school_level_name : \"\";\n                } else {\n                  school_level += findLevel\n                    ? \", \" + findLevel.school_level_name\n                    : \"\";\n                }\n              });\n            } else {\n              school_level = \"Any level\";\n            }\n            let dataArray: ExaminationProgressToPrintInterface = {\n              course_id: n,\n              course_name: data[key].course_name,\n              course_code: data[key].course_code,\n              description: data[key].description,\n              school_levels: data[key].school_levels.length\n                ? school_level\n                : \"Any\",\n              exam_period: data[key].exam\n                ? getPeriodById(\n                    this.props.periods.allSessionPlans,\n                    data[key].exam!.period\n                  )\n                  ? getPeriodById(\n                      this.props.periods.allSessionPlans,\n                      data[key].exam!.period\n                    )!.session_plan_name\n                  : \"-\"\n                : \"-\",\n              exam_date: data[key].exam ? DATE(data[key].exam!.exam_date) : \"-\",\n              exam_time: data[key].exam ? data[key].exam!.start_time : \"-\",\n              exam_duration: data[key].exam\n                ? data[key].exam!.duration.toString()\n                : \"-\",\n              exam_status:\n                data[key].preparation_status === \"Done\"\n                  ? \"Completed\"\n                  : data[key].preparation_status,\n            };\n\n            for (const key in this.state.examinationProgressReportContent) {\n              if (\n                Object.prototype.hasOwnProperty.call(\n                  this.state.examinationProgressReportContent,\n                  key\n                )\n              ) {\n                if (!this.state.examinationProgressReportContent[key].status) {\n                  delete dataArray[\n                    this.state.examinationProgressReportContent[key].key\n                  ];\n                }\n              }\n            }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n        this.setExaminationProgressToPrint(arrayNew);\n        arrayNew = [];\n        n = 1;\n        // props.applicationsToPrint=;\n      }\n    }\n    // CANDIDATE EXAM PERFORMANCE ######################\n    if (this.state.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE) {\n      if (\n        this.getCourses() &&\n        this.props.adminExamReport.CandidatesExamPerformance &&\n        this.props.periods.allSessionPlans\n      ) {\n        let data: candidatePerfomranceStateInterface[] =\n          FC_reportCandidatePerformanceData(\n            this.getCourses()!,\n            this.props.adminExamReport.CandidatesExamPerformance,\n            this.props.adminExamReport.reportCourseId\n              ? this.props.adminExamReport.reportCourseId.course_id\n              : \"all\"\n          );\n        let arrayNew: CandidateExamPerformanceToPrintInterface[] = [];\n        let n: number = 1;\n        for (const key in data) {\n          if (Object.prototype.hasOwnProperty.call(data, key)) {\n            let school_level: string = \"\";\n            if (data[key].school_levels.length) {\n              data[key].school_levels.forEach((element, index) => {\n                let findLevel = this.getLevelbyId(element);\n                if (index === 0) {\n                  school_level = findLevel ? findLevel.school_level_name : \"\";\n                } else {\n                  school_level += findLevel\n                    ? \", \" + findLevel.school_level_name\n                    : \"\";\n                }\n              });\n            } else {\n              school_level = \"Any level\";\n            }\n            let dataArray: CandidateExamPerformanceToPrintInterface = {\n              applicant_id: n,\n              course_name: data[key].course_name,\n              course_code: data[key].course_code,\n              description: data[key].description,\n              school_levels: data[key].school_levels.length\n                ? school_level\n                : \"Any\",\n              exam_period: getPeriodById(\n                this.props.periods.allSessionPlans,\n                data[key].exam.period\n              )\n                ? getPeriodById(\n                    this.props.periods.allSessionPlans,\n                    data[key].exam.period\n                  )!.session_plan_name\n                : \"-\",\n              exam_date: DATE(data[key].exam.exam_date),\n              exam_start_time: timestampToDate(\n                Number(data[key].exam.start_time)\n              ).timeAMPM,\n              exam_end_time: timestampToDate(Number(data[key].exam.end_time))\n                .timeAMPM,\n              performance_status: capitalizeFirstLetter(\n                displayStatus(data[key].exam_stastus)\n              ),\n              applicant_name: capitalizeFirstLetter(data[key].user_name),\n              national_id: data[key].national_id,\n              email: data[key].user_email,\n              phone: data[key].user_phone,\n              marks:\n                data[key].exam_stastus !== ReportUserExamStatus.Editing\n                  ? Number(data[key].user_total_marks.toFixed(1)) + \"%\"\n                  : \"-\",\n            };\n\n            for (const key in this.state\n              .candidateExamPerformanceReportContent) {\n              if (\n                Object.prototype.hasOwnProperty.call(\n                  this.state.candidateExamPerformanceReportContent,\n                  key\n                )\n              ) {\n                if (\n                  !this.state.candidateExamPerformanceReportContent[key].status\n                ) {\n                  delete dataArray[\n                    this.state.candidateExamPerformanceReportContent[key].key\n                  ];\n                }\n              }\n            }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n        this.setCandidateExamPerformanceToPrint(arrayNew);\n        arrayNew = [];\n        n = 1;\n        // props.applicationsToPrint=;\n      }\n    }\n    // 30 CANDIDATE EXAM PERFORMANCE ######################\n    if (\n      this.state.reportTitle === reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE\n    ) {\n      if (\n        this.getCourses() &&\n        this.props.adminExamReport.CandidatesExamPerformance &&\n        this.props.periods.allSessionPlans\n      ) {\n        let data: candidatePerfomranceStateInterface[] =\n          FC_CandiadtePerformancePerDistrictFilter(\n            FC_reportCandidatePerformanceData(\n              this.getCourses()!,\n              this.props.adminExamReport.CandidatesExamPerformance,\n              this.props.adminExamReport.reportCourseId\n                ? this.props.adminExamReport.reportCourseId.course_id\n                : \"all\"\n            ),\n            this.props.adminExamReport.reportDistrictId\n              ? this.props.adminExamReport.reportDistrictId.district_id\n              : null,\n            this.props.adminExamReport.reportCourseId\n              ? this.props.adminExamReport.reportCourseId.course_id\n              : null,\n            this.state.filterApplicantPerformance\n          ).slice(0, 30);\n        let arrayNew: CandidateExamPerformanceToPrintInterface[] = [];\n        let n: number = 1;\n        for (const key in data) {\n          if (Object.prototype.hasOwnProperty.call(data, key)) {\n            let school_level: string = \"\";\n            if (data[key].school_levels.length) {\n              data[key].school_levels.forEach((element, index) => {\n                let findLevel = this.getLevelbyId(element);\n                if (index === 0) {\n                  school_level = findLevel ? findLevel.school_level_name : \"\";\n                } else {\n                  school_level += findLevel\n                    ? \", \" + findLevel.school_level_name\n                    : \"\";\n                }\n              });\n            } else {\n              school_level = \"Any level\";\n            }\n            let dataArray: CandidateExamPerformanceToPrintInterface = {\n              applicant_id: n,\n              course_name: data[key].course_name,\n              course_code: data[key].course_code,\n              description: data[key].description,\n              school_levels: data[key].school_levels.length\n                ? school_level\n                : \"Any\",\n              exam_period: getPeriodById(\n                this.props.periods.allSessionPlans,\n                data[key].exam.period\n              )\n                ? getPeriodById(\n                    this.props.periods.allSessionPlans,\n                    data[key].exam.period\n                  )!.session_plan_name\n                : \"-\",\n              exam_date: DATE(data[key].exam.exam_date),\n              exam_start_time: timestampToDate(\n                Number(data[key].exam.start_time)\n              ).timeAMPM,\n              exam_end_time: timestampToDate(Number(data[key].exam.end_time))\n                .timeAMPM,\n              performance_status: capitalizeFirstLetter(\n                displayStatus(data[key].exam_stastus)\n              ),\n              applicant_name: capitalizeFirstLetter(data[key].user_name),\n              national_id: data[key].national_id,\n              email: data[key].user_email,\n              phone: data[key].user_phone,\n              marks:\n                data[key].exam_stastus !== ReportUserExamStatus.Editing\n                  ? Number(data[key].user_total_marks.toFixed(1)) + \"%\"\n                  : \"-\",\n            };\n\n            for (const key in this.state\n              .candidate30ExamPerformanceReportContent) {\n              if (\n                Object.prototype.hasOwnProperty.call(\n                  this.state.candidate30ExamPerformanceReportContent,\n                  key\n                )\n              ) {\n                if (\n                  !this.state.candidate30ExamPerformanceReportContent[key]\n                    .status\n                ) {\n                  delete dataArray[\n                    this.state.candidate30ExamPerformanceReportContent[key].key\n                  ];\n                }\n              }\n            }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n        this.setCandidate30ExamPerformanceToPrint(arrayNew);\n        arrayNew = [];\n        n = 1;\n        // props.applicationsToPrint=;\n      }\n    }\n  };\n\n  addToTitle = (): string => {\n    let result: string = \"\";\n\n    if (\n      this.state.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n      this.props.adminExamReport.reportDistrictId\n    ) {\n      result += ` ${this.props.adminExamReport.reportDistrictId.district_name} district`;\n    } else if (\n      this.state.reportTitle === reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE\n    ) {\n      if (this.props.adminExamReport.reportDistrictId) {\n        result += ` in ${this.props.adminExamReport.reportDistrictId.district_name} district`;\n      }\n      if (this.props.adminExamReport.reportCourseId) {\n        result += ` in exam of ${this.props.adminExamReport.reportCourseId.course_name}(${this.props.adminExamReport.reportCourseId.course_code})`;\n      }\n    } else {\n      result = \"\";\n    }\n    return result;\n  };\n\n  downlaodPDF = async () => {\n    if (!document.querySelectorAll(\"#report_content tbody tr\").length) {\n      this.props.PushPopupAlert({\n        title: `Can't generate Report of empty Data`,\n        theme: PopupAlertTheme.warning,\n      });\n      return false;\n    }\n\n    if (this.state.selected_period) {\n      const table: HTMLElement | null =\n        document.getElementById(\"report_content\");\n      const reportSettings: reportSettingsInterface = {\n        doneBy: this.props.auth.user.fname + \" \" + this.props.auth.user.lname,\n        title: \"Exam Report\",\n        subjectTitle: \"Subject\",\n        subject: `${this.state.reportTitle} ${this.addToTitle()}`,\n        period: this.state.selected_period.session_plan_name,\n        footer: \"Online Teacher Recruitment\",\n        institute: this.props.schoolLevels.selectedEducationCategory\n          ? this.props.schoolLevels.selectedEducationCategory\n              .education_category_title\n          : \"All institute\",\n        orientation:\n          this.state.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE ||\n          this.state.reportTitle ===\n            reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE\n            ? \"l\"\n            : \"p\",\n      };\n      table && (await generatePDF(reportSettings, table, this.setDownloading));\n    }\n  };\n\n  render() {\n    if (this.state.loading || this.props.periods.allSessionPlans === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading data...\n        </div>\n      );\n    }\n\n    if (this.props.periods.allSessionPlans.length === 0) {\n      return <NoSession />;\n    }\n\n    return (\n      <div>\n        <SideNavigation>\n          {FC_HasInstitute(this.props.auth.education_institution_id) ===\n            false && (\n            <div className=\"flex flex-col mb-4\">\n              <span className=\"text-sm text-gray-600 mb-2\">\n                Education categories:\n              </span>\n              {this.props.schoolLevels.education_categories === null ? (\n                <Loading />\n              ) : this.props.schoolLevels.education_categories.length === 0 ? (\n                <span>No result found</span>\n              ) : (\n                this.props.schoolLevels.education_categories.map((item, i) => (\n                  <div\n                    onClick={() => {\n                      this.props.setSelectedEducationCategory(item);\n                      this.FD_GetSessions(item.education_institute_id);\n                      this.updateExamToPrint();\n                    }}\n                    key={i + 1}\n                    className={`border rounded px-2 py-2 mb-2 cursor-pointer ${\n                      this.props.schoolLevels.selectedEducationCategory !==\n                        null &&\n                      this.props.schoolLevels.selectedEducationCategory\n                        .education_institute_id === item.education_institute_id\n                        ? \"bg-blue-600 text-white hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                        : \"hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                    } font-bold flex flex-row items-center gap-2`}\n                  >\n                    {this.props.schoolLevels.selectedEducationCategory !==\n                      null &&\n                    this.props.schoolLevels.selectedEducationCategory\n                      .education_institute_id ===\n                      item.education_institute_id ? (\n                      <MdRadioButtonChecked />\n                    ) : (\n                      <MdRadioButtonUnchecked />\n                    )}\n                    <span>{item.education_category_title}</span>\n                  </div>\n                ))\n              )}\n            </div>\n          )}\n          <div className=\"\">\n            <div className=\"text-gray-600 text-sm mb-2\">Selected period:</div>\n            <div\n              onClick={() => this.setSelectPeriod(true)}\n              className=\"font-bold bg-blue-50 border border-blue-200 rounded py-2 cursor-pointer text-xs px-2 hover:underline justify-between text-blue-600  mb-4 w-full flex flex-row items-center animate__animated animate__zoomIn\"\n            >\n              {this.state.selected_period !== null\n                ? `${this.state.selected_period.session_plan_name}`\n                : \"Filter by period\"}\n              <FiEdit className=\"text-lg text-blue-600\" />\n            </div>\n          </div>\n          <ExamReportFilters\n            reportTitle={this.state.reportTitle}\n            filterPreparation={this.state.filterPreparation}\n            setFilterPreparation={this.setFilterPreparation}\n            filterExamProgress={this.state.filterExamProgress}\n            setFilterExamProgress={this.setFilterExamProgress}\n            filterApplicantPerformance={this.state.filterApplicantPerformance}\n            setFilterApplicantPerformance={this.setFilterApplicantPerformance}\n          />\n        </SideNavigation>\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* REPORT TITLE CONTROLLERS ============================================ */}\n        <ExamReportTitle\n          downloading={this.state.downloading}\n          dataToPrint={loadAllExams(\n            this.props.examsList,\n            this.state.selected_period\n          )}\n          downlaodPDF={this.downlaodPDF}\n          reportTitle={this.state.reportTitle}\n          setReportTitle={this.setReportTitle}\n          setGenerateReportModal={this.setGenerateReportModal}\n          generateReportModal={this.state.generateReportModal}\n          excelReportTitle={this.state.excelReportTitle}\n          setExcelReportTitle={this.setExcelReportTitle}\n          updateExamToPrint={this.updateExamToPrint}\n          // EXAM PREPARATION ######################\n          examsToPrint={this.state.examsToPrint}\n          examPreparationReportContent={this.state.examPreparationReportContent}\n          setExamPreparationReportContent={this.setExamPreparationReportContent}\n          // EXAM PERFORMANCE ######################\n          examPerformanceToPrint={this.state.examPerformanceToPrint}\n          examPerformanceReportContent={this.state.examPerformanceReportContent}\n          setExamPerformanceReportContent={this.setExamPerformanceReportContent}\n          // TOP 30 EXAM PERFORMANCE ######################\n          exam30PerformanceToPrint={this.state.exam30PerformanceToPrint}\n          exam30PerformanceReportContent={\n            this.state.exam30PerformanceReportContent\n          }\n          setExam30PerformanceReportContent={\n            this.setExam30PerformanceReportContent\n          }\n          // EXAMINATION PROGRESS ######################\n          examinationProgressToPrint={this.state.examinationProgressToPrint}\n          examinationProgressReportContent={\n            this.state.examinationProgressReportContent\n          }\n          setExaminationProgressExamPerformanceReportContent={\n            this.setExaminationProgressExamPerformanceReportContent\n          }\n          // CANDIDATE EXAM PERFORMANCE ######################\n          candidateExamPerformanceToPrint={\n            this.state.candidateExamPerformanceToPrint\n          }\n          candidateExamPerformanceReportContent={\n            this.state.candidateExamPerformanceReportContent\n          }\n          setCandidateExamPerformanceReportContent={\n            this.setCandidateExamPerformanceReportContent\n          }\n          // CANDIDATE EXAM PERFORMANCE ######################\n          candidate30ExamPerformanceToPrint={\n            this.state.candidate30ExamPerformanceToPrint\n          }\n          candidate30ExamPerformanceReportContent={\n            this.state.candidate30ExamPerformanceReportContent\n          }\n          setCandidate30ExamPerformanceReportContent={\n            this.setCandidate30ExamPerformanceReportContent\n          }\n          thisPeriod={\n            this.state.selected_period ? this.state.selected_period._id : \"\"\n          }\n        />\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* EXAM LIST CONTROLLERS ============================================ */}\n        {this.state.reportTitle === reportTitleType.EXAM_PREPARATION &&\n          this.props.periods.allSessionPlans && (\n            <ExamList\n              loading={\n                this.state.loadingExams ||\n                this.state.loadingCourses ||\n                this.state.loadingDoneExam\n              }\n              examsListData={loadAllExams(\n                this.props.examsList,\n                this.state.selected_period\n              )}\n              courseListData={this.getCourses()}\n              thisPeriod={this.props.periods.allSessionPlans}\n              filterPreparation={this.state.filterPreparation}\n            />\n          )}\n        {/* EXAM LIST CONTROLLERS ============================================ */}\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* DONE & REMAING EXAM LIST CONTROLLERS ============================================ */}\n        {this.state.reportTitle === reportTitleType.EXAMINATION_PROGRESS &&\n          this.props.periods.allSessionPlans && (\n            <DoneExamList\n              loading={\n                this.state.loadingExams\n                  ? true\n                  : this.state.loadingCourses\n                  ? true\n                  : this.state.loadingDoneExam\n                  ? true\n                  : false\n              }\n              examsListData={loadAllExams(\n                this.props.examsList,\n                this.state.selected_period\n              )}\n              courseListData={this.getCourses()}\n              thisPeriod={this.props.periods.allSessionPlans}\n              doneExamsData={this.props.adminExamReport.DoneExam}\n              filterExamProgress={this.state.filterExamProgress}\n            />\n          )}\n        {/* DONE & REMAING EXAM LIST CONTROLLERS ============================================ */}\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* EXAM PERFORMANCE CONTROLLERS ============================================ */}\n        {this.state.reportTitle === reportTitleType.EXAM_PERFORMANCE &&\n          this.props.periods.allSessionPlans && (\n            <ExamPerformance\n              loading={\n                this.state.loadingExams\n                  ? true\n                  : this.state.loadingCourses\n                  ? true\n                  : this.state.loadingExamPerformance\n                  ? true\n                  : false\n              }\n              examsListData={loadAllExams(\n                this.props.examsList,\n                this.state.selected_period\n              )}\n              courseListData={this.getCourses()}\n              thisPeriod={this.props.periods.allSessionPlans}\n              examsPerformanceData={this.props.adminExamReport.ExamPerformance} // doneExamsData={props.adminExamReport.DoneExam}\n            />\n          )}\n        {/* END EXAM PERFORMANCE CONTROLLERS ============================================ */}\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* EXAM PERFORMANCE PER DISTRICT LIST CONTROLLERS ============================================ */}\n        {this.state.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n        this.props.periods.allSessionPlans &&\n        this.props.adminExamReport.reportDistrictId ? (\n          <ExamPerformancePerDistrict\n            loading={\n              this.state.loadingExams\n                ? true\n                : this.state.loadingCourses\n                ? true\n                : this.state.loadingCandidatesExamPerformance\n                ? true\n                : false\n            }\n            examsListData={loadAllExams(\n              this.props.examsList,\n              this.state.selected_period\n            )}\n            doneExamsData={this.props.adminExamReport.DoneExam}\n            courseListData={this.getCourses()}\n            thisPeriod={this.props.periods.allSessionPlans}\n            candidatePerformanceData={\n              this.props.adminExamReport.CandidatesExamPerformance\n            }\n            thisDistrict={this.props.adminExamReport.reportDistrictId}\n          />\n        ) : (\n          this.state.reportTitle ===\n            reportTitleType.EXAM_DISTRICT_PERFORMANCE && (\n            <NoResult\n              theme={NoResultThemes.Light}\n              value={\"Select district to view data\"}\n              component={\n                <div\n                  onClick={() => this.setDistrictModal(true)}\n                  className=\"btn bg-blue-50 border border-blue-300 text-blue-600 cursor-pointer hover:bg-blue-100 flex flex-row items-center justify-center gap-2 text-sm \"\n                >\n                  <BiFilterAlt className=\"text-xl\" />\n                  Filter by district\n                </div>\n              }\n            />\n          )\n        )}\n        {/* EXAM PERFORMANCE PER DISTRICT LIST CONTROLLERS ============================================  */}\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* APPLICANTS PERFORMANCE EXAM LIST CONTROLLERS ============================================ */}\n        {this.state.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE &&\n          this.props.periods.allSessionPlans && (\n            <CandidatePerformance\n              loading={\n                this.state.loadingExams\n                  ? true\n                  : this.state.loadingCourses\n                  ? true\n                  : this.state.loadingCandidatesExamPerformance\n                  ? true\n                  : false\n              }\n              examsListData={loadAllExams(\n                this.props.examsList,\n                this.state.selected_period\n              )}\n              courseListData={this.getCourses()}\n              thisPeriod={this.props.periods.allSessionPlans}\n              candidatePerformanceData={\n                this.props.adminExamReport.CandidatesExamPerformance\n              }\n              filterApplicantPerformance={this.state.filterApplicantPerformance}\n            />\n          )}\n        {/* APPLICANTS PERFORMANCE EXAM LIST CONTROLLERS ============================================  */}\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* APPLICANTS PERFORMANCE EXAM PER DISTRICT LIST CONTROLLERS ============================================ */}\n        {this.state.reportTitle ===\n          reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE &&\n          this.props.periods.allSessionPlans && (\n            <CandiadtePerformancePerDistrict\n              loading={\n                this.state.loadingExams\n                  ? true\n                  : this.state.loadingCourses\n                  ? true\n                  : this.state.loadingCandidatesExamPerformance\n                  ? true\n                  : false\n              }\n              examsListData={loadAllExams(\n                this.props.examsList,\n                this.state.selected_period\n              )}\n              courseListData={this.getCourses()}\n              thisPeriod={this.props.periods.allSessionPlans}\n              candidatePerformanceData={\n                this.props.adminExamReport.CandidatesExamPerformance\n              }\n              filterApplicantPerformance={this.state.filterApplicantPerformance}\n            />\n          )}\n        {/* APPLICANTS PERFORMANCE EXAM PER DISTRICT LIST CONTROLLERS ============================================  */}\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* CHANGE DISTRICT FILTER MODAL CONTROLLERS ============================================ */}\n        {this.state.districtModal && (\n          <ExamReportModals\n            modalFor={ModalForTypes.choose_district}\n            modalState={this.state.districtModal}\n            changeModalState={this.setDistrictModal}\n            districtId={\n              this.props.adminExamReport.reportDistrictId\n                ? this.props.adminExamReport.reportDistrictId.district_id\n                : \"all\"\n            }\n            reportTitle={this.state.reportTitle}\n          />\n        )}\n        {/* END CHANGE DISTRICT FILTER MODAL CONTROLLERS ============================================ */}\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* MODAL CONTROLLERS ============================================ */}\n        <ExamReportModals\n          modalState={this.state.selectPeriod}\n          changeModalState={this.setSelectPeriod}\n          applicationPeriods={this.props.periods.allSessionPlans}\n          selected_period={this.state.selected_period}\n          setSelectedPeriod={this.setSelectedPeriod}\n          onPeriodChange={this.onPeriodChange}\n          modalFor={ModalForTypes.period}\n        />\n        {/* END MODAL CONTROLLERS ============================================ */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  sessionPlan,\n  schoolLevels,\n  course,\n  prepareExam,\n  adminExamReport,\n}: StoreState): {\n  auth: Auth;\n  periods: SessionPlanReducerInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n  courses: course[] | null;\n  examsList: ExamItemResponse[] | null;\n  adminExamReport: ExamReportReducerType;\n} => {\n  return {\n    auth,\n    periods: sessionPlan,\n    schoolLevels,\n    courses: course.courses,\n    examsList: prepareExam.examsList,\n    adminExamReport,\n  };\n};\n\nexport const ExamReport = connect(mapStateToProps, {\n  setSelectedPeriod,\n  loadCourses,\n  loadExamsList,\n  FC_GetAllSessionByInstitution,\n  loadEducationCategories,\n  loadDoneExam,\n  loadSchoolLevels,\n  loadPerfomranceExam,\n  loadCandidatesExamPerformance,\n  setSelectedEducationCategory,\n  PushPopupAlert,\n})(_ExamReport);\n","import React, { Fragment, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport {\n  course,\n  CandidatesFailedSucceeded,\n  ReportUserExamStatus,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport { StoreState } from \"../../../reducers\";\nimport { ExamReportReducerType } from \"../../../reducers/exam_report\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { DATE, timestampToDate } from \"../../../utils/functions\";\nimport {\n  candidatePerfomranceStateInterface,\n  controlRowsByStatus,\n  FC_reportCandidatePerformanceData,\n  searchCandidatePerformanceData,\n} from \"./CandidatePerformance\";\nimport { displayStatus } from \"./DoneExamList\";\nimport { getPeriodById } from \"./ExamReport\";\n\nexport const FC_CandiadtePerformancePerDistrictFilter = (\n  dataList: candidatePerfomranceStateInterface[],\n  district_id: string | null = null,\n  course_id: string | null = null,\n  thisValue: ReportUserExamStatus | \"all\" = \"all\"\n): candidatePerfomranceStateInterface[] => {\n  let result: candidatePerfomranceStateInterface[] = [];\n  if (thisValue === \"all\") {\n    result = dataList;\n  } else {\n    result = dataList.filter((item) => item.exam_stastus === thisValue);\n  }\n\n  if (district_id) {\n    result = result.filter(\n      (item) =>\n        item.exam.exam_location &&\n        item.exam.exam_location.district_id === district_id\n    );\n  }\n  if (course_id) {\n    result = result.filter((item) => item.course_id === course_id);\n  }\n\n  // SORTING ARRAY FROM MAX TO MIN ==========================\n  let swap: candidatePerfomranceStateInterface;\n  for (let i = 0; i < result.length; i++) {\n    for (let j = i; j < result.length; j++) {\n      if (result[j].user_total_marks > result[i].user_total_marks) {\n        swap = result[j];\n        result[j] = result[i];\n        result[i] = swap;\n      }\n    }\n  }\n  return result;\n};\n\ntype CandiadtePerformancePerDistrictProps = {\n  loading: boolean;\n  examsListData: ExamItemResponse[] | null;\n  courseListData: course[] | null;\n  thisPeriod: SessionPlanInterface[];\n  candidatePerformanceData: CandidatesFailedSucceeded[] | null;\n\n  // redux props ============\n  adminExamReport: ExamReportReducerType;\n  // FOR APPLICANT PERFORMANCE PROPS\n  filterApplicantPerformance: ReportUserExamStatus | \"all\";\n};\n\nconst CandiadtePerformancePerDistrict: React.FC<\n  CandiadtePerformancePerDistrictProps\n> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n\n  return (\n    <Fragment>\n      <div className=\"bg-white my-4\">\n        <div className=\"w-full px-2 py-2\">\n          <input\n            onChange={(e) => setSearchInput(e.target.value)}\n            type=\"text\"\n            value={searchInput}\n            placeholder=\"Search...\"\n            className=\"w-full bg-gray-100 py-2 px-3 rounded\"\n            disabled={\n              props.courseListData &&\n              props.candidatePerformanceData &&\n              FC_CandiadtePerformancePerDistrictFilter(\n                FC_reportCandidatePerformanceData(\n                  props.courseListData,\n                  props.candidatePerformanceData,\n                  props.adminExamReport.reportCourseId\n                    ? props.adminExamReport.reportCourseId.course_id\n                    : \"all\"\n                ),\n                props.adminExamReport.reportDistrictId\n                  ? props.adminExamReport.reportDistrictId.district_id\n                  : null,\n                props.adminExamReport.reportCourseId\n                  ? props.adminExamReport.reportCourseId.course_id\n                  : null,\n                props.filterApplicantPerformance\n              ).length <= 0\n                ? true\n                : false\n            }\n          />\n        </div>\n        <div className=\"w-full overflow-x-auto\">\n          <table className=\"w-full shadow\" id=\"report_content\">\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n              <tr>\n                <td className=\"px-2 py-2\">#</td>\n                <td className=\"px-2 py-2\">Applicants</td>\n                <td className=\"px-2 py-2\">National ID</td>\n                <td className=\"px-2 py-2\">Email</td>\n                <td className=\"px-2 py-2\">Phone</td>\n                <td className=\"px-2 py-2\">\n                  <div className=\"flex items-center gap-1\">Exam</div>\n                </td>\n                <td className=\"px-2 py-2\">Exam period</td>\n                <td className=\"px-2 py-2\">Exam date</td>\n                <td className=\"px-2 py-2\">Exam start time</td>\n                <td className=\"px-2 py-2\">Exam end time</td>\n                <td className=\"px-2 py-2\">\n                  <div className=\"flex items-center gap-1\">Marks</div>\n                </td>\n                <td className=\"px-2 py-2\">Status</td>\n              </tr>\n            </thead>\n            <tbody>\n              {props.courseListData === null || props.loading ? (\n                <tr>\n                  <td colSpan={12} className=\"px-2 py-2\">\n                    <Loading />\n                  </td>\n                </tr>\n              ) : props.candidatePerformanceData &&\n                FC_CandiadtePerformancePerDistrictFilter(\n                  FC_reportCandidatePerformanceData(\n                    props.courseListData,\n                    props.candidatePerformanceData,\n                    props.adminExamReport.reportCourseId\n                      ? props.adminExamReport.reportCourseId.course_id\n                      : \"all\"\n                  ),\n                  props.adminExamReport.reportDistrictId\n                    ? props.adminExamReport.reportDistrictId.district_id\n                    : null,\n                  props.adminExamReport.reportCourseId\n                    ? props.adminExamReport.reportCourseId.course_id\n                    : null,\n                  props.filterApplicantPerformance\n                ).length <= 0 ? (\n                <tr>\n                  <td colSpan={12} className=\"px-2 py-2 text-center\">\n                    No applicant list available!\n                  </td>\n                </tr>\n              ) : (\n                props.candidatePerformanceData &&\n                searchCandidatePerformanceData(\n                  FC_CandiadtePerformancePerDistrictFilter(\n                    FC_reportCandidatePerformanceData(\n                      props.courseListData,\n                      props.candidatePerformanceData,\n                      props.adminExamReport.reportCourseId\n                        ? props.adminExamReport.reportCourseId.course_id\n                        : \"all\"\n                    ),\n                    props.adminExamReport.reportDistrictId\n                      ? props.adminExamReport.reportDistrictId.district_id\n                      : null,\n                    props.adminExamReport.reportCourseId\n                      ? props.adminExamReport.reportCourseId.course_id\n                      : null,\n                    props.filterApplicantPerformance\n                  ).slice(0, 30),\n                  searchInput\n                ).map((item, i) => (\n                  <tr\n                    key={i + 1}\n                    className={`${controlRowsByStatus(\n                      item.exam_stastus\n                    )} text-gray-600 hover:bg-blue-100 hover:text-blue-700 text-sm`}\n                  >\n                    <td className=\"px-2 py-2\">{i + 1}</td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(item.user_name)}\n                    </td>\n                    <td className=\"px-2 py-2\">{item.national_id}</td>\n                    <td className=\"px-2 py-2\">{item.user_email}</td>\n                    <td className=\"px-2 py-2\">{item.user_phone}</td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(item.course_name)} (\n                      <span className=\"font-semibold\">{item.course_code}</span>)\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam\n                        ? getPeriodById(props.thisPeriod, item.exam.period)\n                          ? getPeriodById(props.thisPeriod, item.exam.period)!\n                              .session_plan_name\n                          : \"-\"\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam.exam_date ? DATE(item.exam.exam_date) : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam.start_time\n                        ? timestampToDate(item.exam.start_time).timeAMPM\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam.end_time\n                        ? timestampToDate(item.exam.end_time).timeAMPM\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam_stastus !== ReportUserExamStatus.Editing\n                        ? Number(item.user_total_marks.toFixed(1)) + \"%\"\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(displayStatus(item.exam_stastus))}\n                    </td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  adminExamReport,\n}: StoreState): {\n  adminExamReport: ExamReportReducerType;\n} => {\n  return {\n    adminExamReport,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {})(CandiadtePerformancePerDistrict)\n);\n","import React, { Fragment, useState } from \"react\";\nimport { connect } from \"react-redux\";\n// import { BiSort } from \"react-icons/bi\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  course,\n  CandidatesFailedSucceeded,\n  ExamDoneAndRemainingByPeriodInterface,\n  ReportUserExamStatus,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport { StoreState } from \"../../../reducers\";\nimport { ExamReportReducerType } from \"../../../reducers/exam_report\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { DATE } from \"../../../utils/functions\";\nimport search from \"../../../utils/search\";\nimport { getPeriodById } from \"./ExamReport\";\n\nexport interface examPerformanceStateInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  applicants: number;\n  course_id: string;\n  pass_applicant: number;\n  failed_applicant: number;\n  exam: ExamItemResponse;\n  user_total_marks: number;\n}\n\nexport const FC_ExamPerformancePerDistrictPropsData = (\n  allCourses: course[],\n  allExams: ExamItemResponse[],\n  examsData: ExamDoneAndRemainingByPeriodInterface[],\n  candidatePerformanceData: CandidatesFailedSucceeded[],\n  district_id: string\n): examPerformanceStateInterface[] => {\n  let pass: number = 0,\n    failed: number = 0,\n    result: examPerformanceStateInterface[] = [],\n    ids: string[] = [],\n    exam_ids: string[] = [],\n    doneExamsData: ExamDoneAndRemainingByPeriodInterface[] = examsData.filter(\n      (item) => item.exam_status.toLocaleLowerCase() === \"done\"\n    );\n\n  for (const key in doneExamsData) {\n    if (Object.prototype.hasOwnProperty.call(doneExamsData, key)) {\n      if (exam_ids.includes(doneExamsData[key].id)) continue;\n      exam_ids.push(doneExamsData[key].id);\n      let courser = allCourses.find(\n        (item) => item.course_id === doneExamsData[key].course\n      );\n      let _marks: number = 0;\n\n      if (courser) {\n        // CALCURATING SUM OF ALL CANDIDATES MARKS BY EXAM ID=================================\n        let candidatesByExam: CandidatesFailedSucceeded[] =\n          candidatePerformanceData.filter(\n            (item) =>\n              item.course === doneExamsData[key].course &&\n              item.exam_location &&\n              item.exam_location.district_id === district_id\n          );\n        for (const _key in candidatesByExam) {\n          if (Object.prototype.hasOwnProperty.call(candidatesByExam, _key)) {\n            if (ids.includes(candidatesByExam[_key].user.user_id)) continue;\n            ids.push(candidatesByExam[_key].user.user_id);\n            _marks += candidatesByExam[_key].total_marks;\n            if (\n              candidatesByExam[_key].user_status !==\n                ReportUserExamStatus.Editing &&\n              candidatesByExam[_key].total_marks >= 50\n            ) {\n              pass += 1;\n            } else if (\n              candidatesByExam[_key].user_status !==\n              ReportUserExamStatus.Editing\n            ) {\n              failed += 1;\n            }\n          }\n        }\n        let exam = allExams.find(\n          (item) =>\n            item.course === doneExamsData[key].course &&\n            item.period === doneExamsData[key].period\n        );\n        if (exam) {\n          result.push({\n            course_name: courser.course_name,\n            course_code: courser.course_code,\n            description: courser.description,\n            school_levels: courser.school_levels,\n            course_id: courser.course_id,\n            exam: exam,\n            pass_applicant: pass,\n            failed_applicant: failed,\n            applicants: ids.length,\n            user_total_marks: _marks ? _marks / ids.length : _marks, //candidatesByExam.length\n          });\n        }\n        _marks = 0;\n        ids = [];\n      }\n    }\n    exam_ids = [];\n  }\n\n  // SORTING ARRAY FROM MAX TO MIN ==========================\n  let swap: examPerformanceStateInterface;\n  for (let i = 0; i < result.length; i++) {\n    for (let j = i; j < result.length; j++) {\n      if (result[j].user_total_marks > result[i].user_total_marks) {\n        swap = result[j];\n        result[j] = result[i];\n        result[i] = swap;\n      }\n    }\n  }\n  return result;\n};\n\ntype ExamPerformancePerDistrictProps = {\n  loading: boolean;\n  examsListData: ExamItemResponse[] | null;\n  doneExamsData: ExamDoneAndRemainingByPeriodInterface[] | null;\n  courseListData: course[] | null;\n  thisPeriod: SessionPlanInterface[];\n  candidatePerformanceData: CandidatesFailedSucceeded[] | null;\n  thisDistrict: { district_id: string; district_name: string };\n  adminExamReport: ExamReportReducerType;\n};\n\nconst ExamPerformancePerDistrict: React.FC<ExamPerformancePerDistrictProps> = (\n  props\n) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n\n  return (\n    <Fragment>\n      <div className=\"bg-white my-4 max-w-full overflow-x-auto\">\n        <div className=\"w-full px-2 py-2\">\n          <input\n            onChange={(e) => setSearchInput(e.target.value)}\n            type=\"text\"\n            value={searchInput}\n            placeholder=\"Search...\"\n            className=\"w-full bg-gray-100 py-2 px-3 rounded\"\n            disabled={\n              props.courseListData &&\n              props.examsListData &&\n              props.doneExamsData &&\n              props.candidatePerformanceData &&\n              props.adminExamReport.reportDistrictId &&\n              FC_ExamPerformancePerDistrictPropsData(\n                props.courseListData,\n                props.examsListData,\n                props.doneExamsData,\n                props.candidatePerformanceData,\n                props.adminExamReport.reportDistrictId.district_id\n              ).slice(0, 30).length <= 0\n                ? true\n                : false\n            }\n          />\n        </div>\n        <table className=\"w-full shadow\" id=\"report_content\">\n          <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n            <tr>\n              <td className=\"px-2 py-2\">#</td>\n              <td\n                className=\"px-2 py-2 cursor-pointer\"\n                // onClick={() => setSort(\"course_name\")}\n              >\n                <div className=\"flex items-center gap-1\">\n                  Course\n                  {/* <BiSort /> */}\n                </div>\n              </td>\n              <td className=\"px-2 py-2\">Exam date</td>\n              <td className=\"px-2 py-2\">Exam time</td>\n              <td className=\"px-2 py-2\">Exam duration</td>\n              <td className=\"px-2 py-2\">Exam Period</td>\n              <td className=\"px-2 py-2\">Pass Applicants</td>\n              <td className=\"px-2 py-2\">Failed Applicants</td>\n              <td\n                className=\"px-2 py-2 cursor-pointer\"\n                // onClick={() => setSort(\"user_total_marks\")}\n              >\n                <div className=\"flex items-center gap-1\">\n                  Percentage\n                  {/* <BiSort /> */}\n                </div>\n              </td>\n            </tr>\n          </thead>\n          <tbody>\n            {props.courseListData === null || props.loading ? (\n              <tr>\n                <td colSpan={9} className=\"px-2 py-2\">\n                  <Loading />\n                </td>\n              </tr>\n            ) : props.examsListData &&\n              props.doneExamsData &&\n              props.candidatePerformanceData &&\n              props.adminExamReport.reportDistrictId &&\n              FC_ExamPerformancePerDistrictPropsData(\n                props.courseListData,\n                props.examsListData,\n                props.doneExamsData,\n                props.candidatePerformanceData,\n                props.adminExamReport.reportDistrictId.district_id\n              ).length <= 0 ? (\n              <tr>\n                <td colSpan={9} className=\"px-2 py-2 text-center\">\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"No Exam list available!ss\"}\n                  />\n                </td>\n              </tr>\n            ) : (\n              props.examsListData &&\n              props.doneExamsData &&\n              props.candidatePerformanceData &&\n              props.adminExamReport.reportDistrictId &&\n              search(\n                FC_ExamPerformancePerDistrictPropsData(\n                  props.courseListData,\n                  props.examsListData,\n                  props.doneExamsData,\n                  props.candidatePerformanceData,\n                  props.adminExamReport.reportDistrictId.district_id\n                ).slice(0, 30),\n                searchInput\n              ).map((item: examPerformanceStateInterface, i) => (\n                <tr\n                  key={i + 1}\n                  className={`bg-white text-gray-600 hover:bg-blue-100 hover:text-blue-700 border-b border-gray-300 hover:border-blue-500 text-sm`}\n                >\n                  <td className=\"px-2 py-2\">{i + 1}</td>\n                  <td className=\"px-2 py-2\">\n                    {capitalizeFirstLetter(item.course_name)} (\n                    <span className=\"font-semibold\">{item.course_code}</span>)\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam ? DATE(item.exam.exam_date) : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam ? item.exam.start_time : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam ? item.exam!.duration + \" min\" : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam\n                      ? getPeriodById(props.thisPeriod, item.exam.period)\n                        ? getPeriodById(props.thisPeriod, item.exam.period)!\n                            .session_plan_name\n                        : \"-\"\n                      : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.pass_applicant !== undefined\n                      ? item.pass_applicant\n                      : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.failed_applicant !== undefined\n                      ? item.failed_applicant\n                      : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {Number(item.user_total_marks.toFixed(1)) + \"%\"}\n                  </td>\n                </tr>\n              ))\n            )}\n          </tbody>\n        </table>\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  adminExamReport,\n}: StoreState): {\n  adminExamReport: ExamReportReducerType;\n} => {\n  return {\n    adminExamReport,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {})(ExamPerformancePerDistrict)\n);\n","import React, { Fragment } from \"react\";\nimport { MainItem } from \"../../../components/Navigation/SideNavigation\";\nimport { ReportUserExamStatus } from \"../../../interfaces\";\nimport { displayStatus } from \"./DoneExamList\";\nimport { reportTitleType } from \"./ExamReport\";\n\ntype ExamReportFiltersProps = {\n  reportTitle: reportTitleType;\n\n  // FOR EXAM PREPARATION PROPS =========================================\n  filterPreparation: \"prepared\" | \"not prepared\" | \"all\";\n  setFilterPreparation: (value: \"prepared\" | \"not prepared\" | \"all\") => void;\n\n  // FOR EXAMINATION PROGRESS PROPS ========================================\n  filterExamProgress: \"all\" | \"Done\" | \"Active\";\n  setFilterExamProgress: (value: \"all\" | \"Done\" | \"Active\") => void;\n\n  // FOR APPLICANT PERFORMANCE PROPS\n  filterApplicantPerformance: ReportUserExamStatus | \"all\";\n  setFilterApplicantPerformance: (value: \"all\" | ReportUserExamStatus) => void;\n};\nconst ExamReportFilters: React.FC<ExamReportFiltersProps> = (props) => {\n  return (\n    <Fragment>\n      {props.reportTitle !== reportTitleType.EXAM_PERFORMANCE &&\n        props.reportTitle !== reportTitleType.EXAM_DISTRICT_PERFORMANCE && (\n          <div className=\"pt-1\">\n            <div className=\"text-sm text-gray-700 pb-2 pt-2\">\n              Filter by statuses:\n            </div>\n            {/* FILTER OF EXAM PREPARATION ================================ */}\n            {props.reportTitle === reportTitleType.EXAM_PREPARATION && (\n              <section>\n                <div onClick={() => props.setFilterPreparation(\"all\")}>\n                  <MainItem\n                    title=\"All\"\n                    count={0}\n                    active={props.filterPreparation === \"all\"}\n                  />\n                </div>\n                <div onClick={() => props.setFilterPreparation(\"prepared\")}>\n                  <MainItem\n                    title=\"Prepared\"\n                    count={0}\n                    active={props.filterPreparation === \"prepared\"}\n                  />\n                </div>\n                <div onClick={() => props.setFilterPreparation(\"not prepared\")}>\n                  <MainItem\n                    title=\"Not Prepared\"\n                    count={0}\n                    active={props.filterPreparation === \"not prepared\"}\n                  />\n                </div>\n              </section>\n            )}\n            {/* END FILTER OF EXAM PREPARATION ================================ */}\n\n            {/* FILTER OF EXAMINATION PROGRESS ================================ */}\n            {props.reportTitle === reportTitleType.EXAMINATION_PROGRESS && (\n              <section>\n                <div onClick={() => props.setFilterExamProgress(\"all\")}>\n                  <MainItem\n                    title=\"All\"\n                    count={0}\n                    active={props.filterExamProgress === \"all\"}\n                  />\n                </div>\n                <div onClick={() => props.setFilterExamProgress(\"Done\")}>\n                  <MainItem\n                    title=\"Completed exam\"\n                    count={0}\n                    active={props.filterExamProgress === \"Done\"}\n                  />\n                </div>\n                <div onClick={() => props.setFilterExamProgress(\"Active\")}>\n                  <MainItem\n                    title=\"Remaining Exam\"\n                    count={0}\n                    active={props.filterExamProgress === \"Active\"}\n                  />\n                </div>\n              </section>\n            )}\n            {/* END FILTER OF EXAMINATION PROGRESS ================================ */}\n\n            {/* FILTER OF APPLICANTS PERFORMANCE ================================ */}\n            {(props.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE ||\n              props.reportTitle ===\n                reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE) && (\n              <section>\n                <div onClick={() => props.setFilterApplicantPerformance(\"all\")}>\n                  <MainItem\n                    title=\"All\"\n                    count={0}\n                    active={props.filterApplicantPerformance === \"all\"}\n                  />\n                </div>\n\n                {Object.values(ReportUserExamStatus).map((item, index) => (\n                  <div\n                    onClick={() => props.setFilterApplicantPerformance(item)}\n                    key={index + item}\n                  >\n                    <MainItem\n                      title={displayStatus(item)}\n                      count={0}\n                      active={props.filterApplicantPerformance === item}\n                    />\n                  </div>\n                ))}\n              </section>\n            )}\n            {/* END FILTER OF APPLICANTS PERFORMANCE ================================ */}\n          </div>\n        )}\n    </Fragment>\n  );\n};\n\nexport default React.memo(ExamReportFilters);\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { BiExport, BiFilterAlt } from \"react-icons/bi\";\nimport { FaEdit } from \"react-icons/fa\";\nimport { connect } from \"react-redux\";\nimport {\n  schoolLevelsStoreInterface,\n  SetReportDistrictId,\n  SetReportDistrictIdAction,\n} from \"../../../actions\";\nimport { course } from \"../../../interfaces/index\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport { StoreState } from \"../../../reducers\";\nimport { ExamReportReducerType } from \"../../../reducers/exam_report\";\nimport { loadExaminationProgress } from \"../../AdminDashboard/ExamDashboard/ExamDashboard\";\nimport {\n  CandidateExamPerformanceReportContentInterface,\n  CandidateExamPerformanceToPrintInterface,\n} from \"./CandidatePerformance\";\nimport {\n  ExaminationProgressReportContentInterface,\n  ExaminationProgressToPrintInterface,\n} from \"./DoneExamList\";\nimport {\n  examPreparationReportContentInterface,\n  ExamPreparationToPrintInterface,\n} from \"./ExamList\";\nimport {\n  ExamPerformanceToPrintInterface,\n  examPerformanceReportContentInterface,\n} from \"./ExamPerformance\";\nimport { reportTitleType } from \"./ExamReport\";\nimport ExamReportModals, { ModalForTypes } from \"./ExamReportModals\";\n\ntype ExamReportTitleProps = {\n  thisPeriod: string;\n  // FOR PRINT PDF =========================\n  downloading: boolean;\n  dataToPrint: any[] | null;\n  downlaodPDF: () => Promise<false | undefined>;\n  // FOR REPORT TYPE =========================\n  reportTitle: reportTitleType;\n  setReportTitle: (title: reportTitleType) => void;\n  // FOR GENERATE EXCEL =========================\n  generateReportModal: {\n    reportType: \"EXCEL\" | \"PDF\";\n    status: boolean;\n  } | null;\n  setGenerateReportModal: (\n    reportData: {\n      reportType: \"EXCEL\" | \"PDF\";\n      status: boolean;\n    } | null\n  ) => void;\n  excelReportTitle: string;\n  setExcelReportTitle: (title: string) => void;\n  updateExamToPrint: () => void;\n  // FOR EXCEL EXAM PREPARATION REPORT CONTENT ===============================\n  examPreparationReportContent: examPreparationReportContentInterface[];\n  setExamPreparationReportContent: (\n    content: examPreparationReportContentInterface[]\n  ) => void;\n  examsToPrint:\n    | ExamPreparationToPrintInterface[]\n    | ExamPerformanceToPrintInterface[]\n    | null;\n  // FOR EXCEL EXAM PERFORMANCE REPORT CONTENT ===============================\n  examPerformanceToPrint: ExamPerformanceToPrintInterface[] | null;\n  examPerformanceReportContent: examPerformanceReportContentInterface[];\n  setExamPerformanceReportContent: (\n    value: examPerformanceReportContentInterface[]\n  ) => void;\n\n  // FOR EXCEL TOP 30 EXAM PERFORMANCE REPORT CONTENT ===============================\n  exam30PerformanceToPrint: ExamPerformanceToPrintInterface[] | null;\n  exam30PerformanceReportContent: examPerformanceReportContentInterface[];\n  setExam30PerformanceReportContent: (\n    value: examPerformanceReportContentInterface[]\n  ) => void;\n\n  // FOR EXCEL EXAMINATION PROGRESS REPORT CONTENT ===============================\n  examinationProgressToPrint: ExaminationProgressToPrintInterface[] | null;\n  examinationProgressReportContent: ExaminationProgressReportContentInterface[];\n  setExaminationProgressExamPerformanceReportContent: (\n    value: ExaminationProgressReportContentInterface[]\n  ) => void;\n\n  // FOR EXCEL CANDIDATE EXAM PERFORMANCE REPORT CONTENT ===============================\n  candidateExamPerformanceToPrint:\n    | CandidateExamPerformanceToPrintInterface[]\n    | null;\n  candidateExamPerformanceReportContent: CandidateExamPerformanceReportContentInterface[];\n  setCandidateExamPerformanceReportContent: (\n    value: CandidateExamPerformanceReportContentInterface[]\n  ) => void;\n\n  // FOR EXCEL TOP 30 CANDIDATE EXAM PERFORMANCE REPORT CONTENT ===============================\n  candidate30ExamPerformanceToPrint:\n    | CandidateExamPerformanceToPrintInterface[]\n    | null;\n  candidate30ExamPerformanceReportContent: CandidateExamPerformanceReportContentInterface[];\n  setCandidate30ExamPerformanceReportContent: (\n    value: CandidateExamPerformanceReportContentInterface[]\n  ) => void;\n\n  // FOR CHOOSING LOCATION ===========================\n  adminExamReport: ExamReportReducerType;\n  SetReportDistrictId: (\n    data: {\n      district_id: string;\n      district_name: string;\n    } | null\n  ) => SetReportDistrictIdAction;\n\n  // FROM REDUX =================\n  schoolLevels: schoolLevelsStoreInterface;\n  courses: course[] | null;\n  examsList: ExamItemResponse[] | null;\n};\n\nconst ExamReportTitle: React.FC<ExamReportTitleProps> = (props) => {\n  const [changeReport, setChangeReport] = useState<boolean>(false);\n  const [districtModal, setDistrictModal] = useState<boolean>(false);\n  const [excelModal, setExcelModal] = useState<boolean>(false);\n  const [courseModal, setCourseModal] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (\n      props.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n      props.adminExamReport.reportDistrictId === null\n    ) {\n      setDistrictModal(true);\n    }\n    if (\n      props.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n      props.adminExamReport.reportDistrictId !== null\n    ) {\n      setDistrictModal(false);\n    }\n  }, [props.adminExamReport.reportDistrictId, props.reportTitle]);\n\n  return (\n    <Fragment>\n      <div className=\"grid md:grid-cols-12 items-center\">\n        <div className=\"col-span-1 md:col-span-8\">\n          <div className=\"mt-4 mx-4 flex flex-col gap-1\">\n            <span className=\"text-xl font-bold text-gray-700\">Exam Report</span>\n            <div\n              className=\"flex flex-row gap-2 items-end cursor-pointer\"\n              onClick={() => setChangeReport(true)}\n            >\n              <span className=\"text-gray-500 text-xl\">Report type: </span>\n              <span className=\"text-blue-600 text-3xl font-bold underline\">\n                {props.reportTitle}{\" \"}\n                {props.reportTitle ===\n                  reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n                props.adminExamReport.reportDistrictId\n                  ? props.adminExamReport.reportDistrictId.district_name\n                  : \"\"}\n              </span>\n            </div>\n            {(props.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE ||\n              props.reportTitle ===\n                reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE ||\n              props.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE) && (\n              <div className=\"flex flex-wrap justify-starts items-center text-xs text-gray-800 font-medium gap-1 my-1\">\n                <span className=\"text-gray-500\">Filter result: </span>\n                {props.adminExamReport.reportDistrictId &&\n                (props.reportTitle ===\n                  reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE ||\n                  props.reportTitle ===\n                    reportTitleType.EXAM_DISTRICT_PERFORMANCE) ? (\n                  <span className=\"px-2 py-1 rounded bg-gray-300\">\n                    # {props.adminExamReport.reportDistrictId.district_name}\n                  </span>\n                ) : (\n                  <span className=\"px-2 py-1 rounded bg-gray-300\">\n                    # All district\n                  </span>\n                )}\n                {props.adminExamReport.reportCourseId ? (\n                  props.reportTitle ===\n                    reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE && (\n                    <span className=\"px-2 py-1 rounded bg-gray-300\">\n                      #\n                      {props.adminExamReport.reportCourseId.course_name +\n                        \" (\" +\n                        props.adminExamReport.reportCourseId.course_code +\n                        \")\"}\n                    </span>\n                  )\n                ) : (\n                  <span className=\"px-2 py-1 rounded bg-gray-300\">\n                    # All exams\n                  </span>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n        <div className=\"col-span-1 md:col-span-4\">\n          <div className=\"float-right mt-3\">\n            {props.dataToPrint && props.dataToPrint.length > 0 && (\n              <div className=\"flex flex-row items-center justify-end font-bold mb-2\">\n                <BiExport className=\"text-2xl text-gray-500\" />\n                <span className=\"text-gray-500\">Export as</span>\n                <button\n                  className={`px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200 focus:outline-none`}\n                  // disabled={\n                  //   props.examsToPrint && props.examsToPrint.length <= 0\n                  //     ? true\n                  //     : false\n                  // }\n                  onClick={() => {\n                    props.updateExamToPrint();\n                    setExcelModal(true);\n                    props.setGenerateReportModal({\n                      reportType: \"EXCEL\",\n                      status: true,\n                    });\n                  }}\n                >\n                  EXCEL\n                </button>\n                <button\n                  className={`px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200 focus:outline-none ${\n                    props.downloading && \"cursor-wait\"\n                  }`}\n                  onClick={() => props.downlaodPDF()}\n                  disabled={props.downloading}\n                >\n                  PDF\n                </button>\n              </div>\n            )}\n\n            <div>\n              <div\n                onClick={() => setChangeReport(true)}\n                className=\"bg-blue-50 py-2 px-2 border border-blue-300 text-blue-600 font-medium hover:bg-blue-100 flex flex-row items-center justify-center gap-2 text-sm float-right\"\n              >\n                <FaEdit className=\"text-xl\" />\n                Change Report\n              </div>\n            </div>\n\n            <section className=\"flex items-center gap-1 float-right mt-1\">\n              {(props.reportTitle ===\n                reportTitleType.EXAM_DISTRICT_PERFORMANCE ||\n                props.reportTitle ===\n                  reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE) && (\n                <div\n                  onClick={() => setDistrictModal(true)}\n                  className=\"btn bg-blue-50 border border-blue-300 text-blue-600 cursor-pointer hover:bg-blue-100 flex flex-row items-center justify-center gap-2 text-sm \"\n                >\n                  <BiFilterAlt className=\"text-xl\" />\n                  Filter by district\n                </div>\n              )}\n              {(props.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE ||\n                props.reportTitle ===\n                  reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE) && (\n                <div\n                  onClick={() => setCourseModal(true)}\n                  className=\"btn bg-blue-50 border border-blue-300 text-blue-600 cursor-pointer hover:bg-blue-100 flex flex-row items-center justify-center gap-2 text-sm \"\n                >\n                  <BiFilterAlt className=\"text-xl\" />\n                  Filter by exam\n                </div>\n              )}\n            </section>\n          </div>\n        </div>\n      </div>\n\n      {/* GENERATE EXCEL MODAL CONTROLLERS ============================================ */}\n      {excelModal && (\n        <ExamReportModals\n          modalFor={ModalForTypes.generateReportModal}\n          modalState={excelModal}\n          changeModalState={setExcelModal}\n          reportTitle={props.reportTitle}\n          setGenerateReportModal={props.setGenerateReportModal}\n          excelReportTitle={props.excelReportTitle}\n          setExcelReportTitle={props.setExcelReportTitle}\n          updateExamToPrint={props.updateExamToPrint}\n          generateReportModal={props.generateReportModal}\n          // EXAM PREPARATION ######################\n          examsToPrint={props.examsToPrint}\n          examPreparationReportContent={props.examPreparationReportContent}\n          setExamPreparationReportContent={\n            props.setExamPreparationReportContent\n          }\n          // EXAM PERFORMANCE ######################\n          examPerformanceToPrint={props.examPerformanceToPrint}\n          examPerformanceReportContent={props.examPerformanceReportContent}\n          setExamPerformanceReportContent={\n            props.setExamPerformanceReportContent\n          }\n          // TOP 30 EXAM PERFORMANCE ######################\n          exam30PerformanceToPrint={props.exam30PerformanceToPrint}\n          exam30PerformanceReportContent={props.exam30PerformanceReportContent}\n          setExam30PerformanceReportContent={\n            props.setExam30PerformanceReportContent\n          }\n          // EXAMINATION PROGRESS ######################\n          examinationProgressToPrint={props.examinationProgressToPrint}\n          examinationProgressReportContent={\n            props.examinationProgressReportContent\n          }\n          setExaminationProgressExamPerformanceReportContent={\n            props.setExaminationProgressExamPerformanceReportContent\n          }\n          // CANDIDATE EXAM PERFORMANCE ######################\n          candidateExamPerformanceToPrint={\n            props.candidateExamPerformanceToPrint\n          }\n          candidateExamPerformanceReportContent={\n            props.candidateExamPerformanceReportContent\n          }\n          setCandidateExamPerformanceReportContent={\n            props.setCandidateExamPerformanceReportContent\n          }\n          candidate30ExamPerformanceToPrint={\n            props.candidate30ExamPerformanceToPrint\n          }\n          candidate30ExamPerformanceReportContent={\n            props.candidate30ExamPerformanceReportContent\n          }\n          setCandidate30ExamPerformanceReportContent={\n            props.setCandidate30ExamPerformanceReportContent\n          }\n        />\n      )}\n      {/* END GENERATE EXCEL MODAL CONTROLLERS ============================================ */}\n\n      {/* CHANGE REPORT TYPE MODAL CONTROLLERS ============================================ */}\n      {changeReport && (\n        <ExamReportModals\n          modalFor={ModalForTypes.title}\n          modalState={changeReport}\n          reportTitle={props.reportTitle}\n          changeModalState={setChangeReport}\n          setReportTitle={props.setReportTitle}\n          setExcelReportTitle={props.setExcelReportTitle}\n        />\n      )}\n      {/* END CHANGE REPORT TYPE MODAL CONTROLLERS ============================================ */}\n\n      {/* CHANGE DISTRICT FILTER MODAL CONTROLLERS ============================================ */}\n      {districtModal && (\n        <ExamReportModals\n          modalFor={ModalForTypes.choose_district}\n          modalState={districtModal}\n          changeModalState={setDistrictModal}\n          districtId={\n            props.adminExamReport.reportDistrictId\n              ? props.adminExamReport.reportDistrictId.district_id\n              : \"all\"\n          }\n          reportTitle={props.reportTitle}\n        />\n      )}\n      {/* END CHANGE DISTRICT FILTER MODAL CONTROLLERS ============================================ */}\n\n      {/* CHANGE COURSE FILTER MODAL CONTROLLERS ============================================ */}\n      {courseModal &&\n        loadExaminationProgress(\n          props.adminExamReport.DoneExam,\n          props.examsList,\n          props.schoolLevels.selectedEducationCategory,\n          props.courses,\n          props.schoolLevels.school_levels,\n          props.thisPeriod\n        ) && (\n          <ExamReportModals\n            modalFor={ModalForTypes.choose_exam}\n            modalState={courseModal}\n            AllExamData={\n              loadExaminationProgress(\n                props.adminExamReport.DoneExam,\n                props.examsList,\n                props.schoolLevels.selectedEducationCategory,\n                props.courses,\n                props.schoolLevels.school_levels,\n                props.thisPeriod\n              )!.finished\n            }\n            changeModalState={setCourseModal}\n            thisExam={props.adminExamReport.reportCourseId}\n          />\n        )}\n      {/* END CHANGE COURSE FILTER MODAL CONTROLLERS ============================================ */}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  adminExamReport,\n  schoolLevels,\n  course,\n  prepareExam,\n}: StoreState): {\n  schoolLevels: schoolLevelsStoreInterface;\n  courses: course[] | null;\n  examsList: ExamItemResponse[] | null;\n  adminExamReport: ExamReportReducerType;\n} => {\n  return {\n    schoolLevels,\n    courses: course.courses,\n    examsList: prepareExam.examsList,\n    adminExamReport,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, { SetReportDistrictId })(ExamReportTitle)\n);\n","import React from \"react\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport { RiFileExcel2Fill } from \"react-icons/ri\";\n\ninterface ExportToExcelProps {\n  fileData: any[];\n  fileName: string;\n  btnName?: string;\n  className?: string;\n  showIcon?: boolean;\n}\n\nconst ExportToExcel: React.FC<ExportToExcelProps> = ({\n  fileData,\n  fileName,\n  btnName = \"Excel\",\n  className = \"flex items-center gap-1 px-4 py-1 rounded text-green-700 bg-white border hover:text-white hover:bg-green-700 border-green-700 font-bold\",\n  showIcon = true,\n}) => {\n  const fileType =\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n  const fileExtension = \".xlsx\";\n\n  const exportToCSV = (apiData: any[], fileName: string) => {\n    const ws = XLSX.utils.json_to_sheet(apiData);\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n    const data = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n\n  return (\n    <button\n      onClick={(e) => exportToCSV(fileData, fileName)}\n      className={className}\n    >\n      {showIcon && <RiFileExcel2Fill />}\n      {btnName}\n    </button>\n  );\n};\n\nexport default ExportToExcel;\n","export default __webpack_public_path__ + \"static/media/mineduc.11a9ae1c.png\";","import jsPDF from \"jspdf\";\nimport { DATE } from \"../../utils/functions\";\nimport Logo from \"../../utils/mineduc.png\";\nrequire(\"jspdf-autotable\");\n\nexport const addFooters = (doc: any) => {\n  const pageCount = doc.internal.getNumberOfPages();\n\n  doc.setFont(\"helvetica\", \"italic\");\n  doc.setFontSize(8);\n  for (var i = 1; i <= pageCount; i++) {\n    doc.setPage(i);\n    doc.text(\n      \"Page \" + String(i) + \" of \" + String(pageCount),\n      doc.internal.pageSize.width / 2,\n      297,\n      {\n        align: \"center\",\n      }\n    );\n  }\n};\n\nexport type reportSettingsInterface = {\n  doneBy: string;\n  title: string;\n  subjectTitle: string;\n  subject: string;\n  institute: string;\n  period: string;\n  footer: string;\n  orientation?: \"p\" | \"l\";\n};\n\nexport const generatePDF = async (\n  reportSettings: reportSettingsInterface,\n  table: HTMLElement,\n  callBack: (status: boolean) => void\n) => {\n  callBack(true);\n  const orientation: \"p\" | \"l\" = reportSettings.orientation\n    ? reportSettings.orientation\n    : \"p\";\n  var lMargin: number = 20; //left margin in mm\n  var rMargin: number = 20; //right margin in mm\n  var pdfInMM: number = 185; // width of A4 in mm\n\n  //   var doc = new jsPDF(\"p\", \"mm\", \"a4\");\n  var doc: any = new jsPDF(orientation, \"mm\", \"a4\");\n\n  doc.setTextColor(95, 95, 95);\n  doc.setFontSize(28);\n  // doc.text(\n  //   this.props.reportTitle,\n  //   doc.internal.pageSize.getWidth() / 2,\n  //   30,\n  //   undefined,\n  //   \"center\"\n  // );\n  doc.addImage(Logo, \"png\", 20, 20, 10, 10);\n  doc.text(\"MINEDUC\", 32, 28.5, undefined, \"left\");\n  //   doc.setTextColor(19, 90, 152);\n  doc.setFontSize(26);\n  doc.text(\n    reportSettings.title,\n    doc.internal.pageSize.getWidth() / 2,\n    42.7,\n    undefined,\n    \"center\"\n  );\n\n  doc.setFontSize(20);\n  doc.text(\n    reportSettings.institute,\n    doc.internal.pageSize.getWidth() / 2,\n    53.7,\n    undefined,\n    \"center\"\n  );\n\n  var lines;\n  lines = doc.splitTextToSize(\n    reportSettings.subject,\n    pdfInMM - lMargin - rMargin\n  );\n  // if (reportSettings.position) {\n  // } else if (reportSettings.subject) {\n  //   lines = doc.splitTextToSize(\n  //     reportSettings.subject,\n  //     pdfInMM - lMargin - rMargin\n  //   );\n  // }\n\n  //   doc.setTextColor(0, 123, 255);\n  doc.setFontSize(16);\n  //   doc.text(lines, doc.internal.pageSize.getWidth() / 2, 45, {\n  //     maxWidth: 85,\n  //     align: \"center\",\n  //   });\n\n  var y = 63,\n    width;\n  doc.setTextColor(95, 95, 95);\n  doc.text(`${reportSettings.subjectTitle}: `, lMargin, y);\n  width = doc.getTextWidth(`${reportSettings.subjectTitle}: `);\n  // if (reportSettings.position) {\n  // } else if (reportSettings.position) {\n  //   doc.text(`Subject: `, lMargin, y);\n  //   width = doc.getTextWidth(\"Subject: \");\n  // }\n  // doc.setFontType(\"bold\");\n  doc.setTextColor(38, 38, 38);\n  for (var i = 0; i < lines.length; i++) {\n    if (y > 280) {\n      y = 10;\n      doc.addPage();\n    }\n    // doc.text(15, y, lines[i]);\n    doc.text(lines[i], lMargin + width, y);\n    y = y + 7;\n  }\n  doc.setTextColor(95, 95, 95);\n  doc.text(\"Period: \", lMargin, y + 3);\n  width = doc.getTextWidth(\"Period: \");\n  doc.setTextColor(38, 38, 38);\n  doc.text(reportSettings.period, lMargin + width, y + 3);\n\n  doc.autoTable({\n    html: table,\n    startY: 85,\n    margin: { horizontal: 20 },\n    cellPadding: 3, // Horizontal cell padding\n    // fontSize: 12,\n    rowHeight: 20,\n    // styles: { overflow: \"linebreak\" },\n    bodyStyles: { valign: \"top\" },\n    columnStyles: { email: { cellWidth: \"wrap\" } },\n    theme: \"striped\",\n    tableWidth: true,\n  });\n\n  doc.setFontSize(12);\n  let finalY = doc.lastAutoTable.finalY; // The y position on the page\n  doc.text(`Reported by: ${reportSettings.doneBy}`, lMargin, finalY + 15);\n  doc.text(\n    \"Report downloaded on \" + DATE(new Date().toString()),\n    lMargin,\n    finalY + 23\n  );\n\n  addFooters(doc);\n  await doc\n    .save(\n      `${\n        reportSettings.title +\n        \": \" +\n        reportSettings.subject +\n        \": \" +\n        reportSettings.period\n      }.pdf`,\n      { returnPromise: true }\n    )\n    .then(callBack(false));\n};\n","import React, { useState } from \"react\";\nimport {\n  MdCheckCircle,\n  MdRadioButtonUnchecked,\n  MdSearch,\n} from \"react-icons/md\";\nimport Loading from \"../../components/Loading/Loading\";\nimport {\n  PlansInterface,\n  SessionPlanInterface,\n  SessionPlanTypeStatus,\n} from \"../../interfaces\";\nimport { DATE } from \"../../utils/functions\";\nimport searchData from \"../../utils/search\";\n\nexport const isPlansActive = (plans: PlansInterface[]): PlansInterface[] => {\n  let today = new Date();\n  let activePlans: PlansInterface[] = [];\n  for (let plan of plans) {\n    let startDate = new Date(plan.start_date);\n    let endDate = new Date(plan.end_date);\n    if (\n      startDate.getTime() <= today.getTime() &&\n      endDate.getTime() >= today.getTime() &&\n      plan.type_status === SessionPlanTypeStatus.OPEN\n    ) {\n      activePlans = [...activePlans, plan];\n    }\n  }\n  return activePlans;\n};\n\ninterface ChooseSessionProps {\n  allSession: SessionPlanInterface[] | null;\n  setSelectSession: (period: SessionPlanInterface | \"all\") => void;\n  currentSelected: SessionPlanInterface | \"all\";\n  chooseAll: boolean;\n}\n\nconst ChooseSession = (props: ChooseSessionProps) => {\n  const [selectedPlan, setSelectedPlan] = useState<SessionPlanInterface | null>(\n    null\n  );\n  const [search, setSearch] = useState<string>(\"\");\n  const getSearch = (\n    period: SessionPlanInterface[],\n    searched: string\n  ): SessionPlanInterface[] => {\n    return searchData(period, searched) as SessionPlanInterface[];\n  };\n\n  return (\n    <div className=\"\">\n      <div className=\"px-3\">\n        <input\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n            setSearch(e.target.value)\n          }\n          type=\"text\"\n          className=\"py-3 px-4 w-full rounded border border-gray-400 mb-3\"\n          placeholder=\"Search by year, name\"\n          disabled={props.allSession === null || props.allSession.length === 0}\n        />\n      </div>\n\n      <div className=\"bg-gray-100 px-3 pt-3 pb-2 rounded-b\">\n        {props.allSession === null ? (\n          <Loading />\n        ) : props.allSession.length === 0 ? (\n          <div className=\"flex flex-col text-gray-400 items-center justify-center mb-2 bg-white py-4\">\n            <MdSearch className=\"text-6xl\" />\n            <div className=\"flex flex-col items-center justify-center\">\n              <span>No session found!</span>\n            </div>\n          </div>\n        ) : (\n          <section>\n            {props.chooseAll && (\n              <div\n                className={`rounded border ${\n                  props.currentSelected === \"all\"\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2 flex flex-col md:flex-row items-start md:items-center md:justify-between`}\n              >\n                <div className=\"flex flex-row items-center gap-3\">\n                  {props.currentSelected === \"all\" ? (\n                    <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                  ) : (\n                    <MdRadioButtonUnchecked\n                      className={`text-gray-300 text-4xl`}\n                    />\n                  )}\n                  <div className=\"flex flex-col\">\n                    <div className={`text-gray-600 font-bold`}>All session</div>\n                  </div>\n                </div>\n                <div\n                  onClick={() => {\n                    props.setSelectSession(\"all\");\n                  }}\n                  className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                >\n                  Select\n                </div>\n              </div>\n            )}\n            {getSearch(props.allSession, search).map((item, i) => (\n              <div\n                key={i + 1}\n                className={`rounded border ${\n                  props.currentSelected !== \"all\" &&\n                  props.currentSelected._id === item._id\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2`}\n              >\n                <div className=\"flex flex-col md:flex-row items-start md:items-center md:justify-between \">\n                  <div className=\"flex flex-row items-center gap-3\">\n                    {props.currentSelected !== \"all\" &&\n                    props.currentSelected._id === item._id ? (\n                      <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                    ) : (\n                      <MdRadioButtonUnchecked\n                        className={`text-gray-300 text-4xl`}\n                      />\n                    )}\n                    <div className=\"flex flex-col\">\n                      <div\n                        className={`${\n                          props.currentSelected !== \"all\" &&\n                          props.currentSelected._id === item._id\n                            ? \"text-blue-600\"\n                            : \"text-gray-600\"\n                        } font-bold`}\n                      >\n                        {item.session_plan_name}\n                      </div>\n                      <div className=\"text-sm text-gray-500\">\n                        <span>Status: </span>\n                        <span\n                          className={`${\n                            item.is_active === true\n                              ? \"text-gray-900 font-bold underline\"\n                              : \"text-gray-500 italic\"\n                          }`}\n                        >\n                          {item.is_active === true ? \"Active\" : \"Expired\"}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"flex flex-row items-center gap-2\">\n                    {(selectedPlan === null ||\n                      selectedPlan._id !== item._id) && (\n                      <div\n                        onClick={() => setSelectedPlan(item)}\n                        className=\"bg-gray-50 group-hover:bg-blue-100 font-semibold text-gray-400 group-hover:text-blue-600 rounded px-3 py-2 cursor-pointer\"\n                      >\n                        Details\n                      </div>\n                    )}\n                    <div\n                      onClick={() => {\n                        props.setSelectSession(item);\n                      }}\n                      className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                    >\n                      Select\n                    </div>\n                    {selectedPlan !== null && selectedPlan._id === item._id && (\n                      <div\n                        onClick={() => setSelectedPlan(null)}\n                        className=\"bg-red-100 group-hover:bg-red-200 font-semibold text-red-600 group-hover:text-red-800 rounded px-3 py-2 cursor-pointer\"\n                      >\n                        Close\n                      </div>\n                    )}\n                  </div>\n                </div>\n                {selectedPlan !== null && selectedPlan._id === item._id && (\n                  <div className=\"bg-white rounded border border-blue-50 mt-2 animate__animated animate__fadeIn\">\n                    <table className=\"w-full\">\n                      <thead className=\"bg-blue-50\">\n                        <tr className=\"text-left\">\n                          <th className=\"px-3 py-3\">#</th>\n                          <th>Plan</th>\n                          <th>Start date</th>\n                          <th>Ending date</th>\n                          <th>Status</th>\n                        </tr>\n                      </thead>\n                      <tbody className=\"text-sm\">\n                        {selectedPlan !== null &&\n                          selectedPlan._id === item._id &&\n                          selectedPlan.plans.length > 0 &&\n                          item.plans.map((plan, i) => (\n                            <tr\n                              key={i + 1}\n                              className={`${\n                                isPlansActive(item.plans).find(\n                                  (itm) => itm.type_key === plan.type_key\n                                ) !== undefined\n                                  ? \"bg-blue-100 text-blue-600 font-bold\"\n                                  : \"\"\n                              } text-left border-b border-blue-50`}\n                            >\n                              <td className=\"px-3 py-1\">{i + 1}</td>\n                              <td>{plan.type_title}</td>\n                              <td>{DATE(plan.start_date, \"DD/MM/YYYY\")}</td>\n                              <td>{DATE(plan.end_date, \"DD/MM/YYYY\")}</td>\n                              <td>{plan.type_status}</td>\n                            </tr>\n                          ))}\n                      </tbody>\n                    </table>\n                  </div>\n                )}\n              </div>\n            ))}\n          </section>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(ChooseSession);\n","import React, { Fragment, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport { connect } from \"react-redux\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { SessionPlanInterface } from \"../../../interfaces\";\nimport { course } from \"../../../interfaces/course\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport {\n  CandidatesFailedSucceeded,\n  ReportUserExamStatus,\n} from \"../../../interfaces/reports\";\nimport { StoreState } from \"../../../reducers\";\nimport { ExamReportReducerType } from \"../../../reducers/exam_report\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { DATE, sortThisArray, timestampToDate } from \"../../../utils/functions\";\nimport { displayStatus } from \"./DoneExamList\";\nimport { getPeriodById } from \"./ExamReport\";\n\n// EXCEL FILE FUNCTIONS ================================\nexport interface CandidateExamPerformanceToPrintInterface {\n  applicant_id: number;\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string;\n  exam_period: string;\n  exam_date: string;\n  exam_start_time: string;\n  exam_end_time: string;\n  applicant_name: string;\n  national_id: string;\n  email: string;\n  phone: string;\n  marks: string;\n  performance_status: string;\n}\n\nexport enum CandidateExamPerformanceReportContentKeyInterface {\n  APPLICANT = \"applicant_name\",\n  N_ID = \"national_id\",\n  EMAIL = \"email\",\n  PHONE = \"phone\",\n  MARKS = \"marks\",\n  STATUS = \"performance_status\",\n  COURSER_NAME = \"course_name\",\n  COURSE_CODE = \"course_code\",\n  SCHOOL_LEVEL = \"school_levels\",\n  PERIOD = \"exam_period\",\n  DATE = \"exam_date\",\n  START_TIME = \"exam_start_time\",\n  END_TIME = \"exam_end_time\",\n}\n\nexport interface CandidateExamPerformanceReportContentInterface {\n  key: CandidateExamPerformanceReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n\nexport const candidateExamPerformanceIsChangeAllowed = (\n  key: CandidateExamPerformanceReportContentKeyInterface\n): boolean => {\n  if (\n    key === CandidateExamPerformanceReportContentKeyInterface.COURSER_NAME ||\n    key === CandidateExamPerformanceReportContentKeyInterface.COURSE_CODE ||\n    key === CandidateExamPerformanceReportContentKeyInterface.PERIOD ||\n    key === CandidateExamPerformanceReportContentKeyInterface.APPLICANT ||\n    key === CandidateExamPerformanceReportContentKeyInterface.N_ID\n  ) {\n    return false;\n  }\n  return true;\n};\n\nexport const defaultCandidateExamPerformanceContent: CandidateExamPerformanceReportContentInterface[] =\n  [\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.APPLICANT,\n      title: \"Applicant names\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.N_ID,\n      title: \"National ID\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.EMAIL,\n      title: \"Email\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.PHONE,\n      title: \"Phone\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.MARKS,\n      title: \"Marks\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.COURSER_NAME,\n      title: \"Course names\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.COURSE_CODE,\n      title: \"Course code\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.SCHOOL_LEVEL,\n      title: \"School levels\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.PERIOD,\n      title: \"Exam period\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.DATE,\n      title: \"Exam date\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.START_TIME,\n      title: \"Exam start time\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.END_TIME,\n      title: \"Exam end time\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.STATUS,\n      title: \"Status\",\n      status: true,\n    },\n  ];\n// END EXCEL FILE FUNCTIONS ================================\n\nexport interface candidatePerfomranceStateInterface {\n  user_id: string;\n  user_name: string;\n  national_id: string;\n  user_email: string;\n  user_phone: string;\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n  exam: CandidatesFailedSucceeded;\n  user_total_marks: number;\n  exam_stastus: ReportUserExamStatus;\n}\n\nexport const FC_reportCandidatePerformanceData = (\n  allCourses: course[],\n  data: CandidatesFailedSucceeded[],\n  course_id: string\n): candidatePerfomranceStateInterface[] => {\n  let result: candidatePerfomranceStateInterface[] = [],\n    ids: string[] = [];\n  for (const key in data) {\n    if (Object.prototype.hasOwnProperty.call(data, key)) {\n      if (!ids.includes(data[key]._id)) {\n        ids.push(data[key]._id);\n        let courser = allCourses.find(\n          (item) => item.course_id === data[key].course\n        );\n        if (courser) {\n          result.push({\n            user_id: data[key].user.user_id,\n            user_name:\n              capitalizeFirstLetter(data[key].user.user_info.lname) +\n              \" \" +\n              capitalizeFirstLetter(data[key].user.user_info.fname),\n            national_id: data[key].user.n_id ? data[key].user.n_id : \"\",\n            user_email: data[key].user.email,\n            user_phone: data[key].user.phone_number,\n            course_name: courser.course_name,\n            course_code: courser.course_code,\n            description: courser.description,\n            school_levels: courser.school_levels,\n            course_id: courser.course_id,\n            exam: data[key],\n            user_total_marks: data[key].total_marks,\n            exam_stastus: data[key].user_status,\n          });\n        }\n      }\n    }\n  }\n\n  if (course_id !== \"all\") {\n    result = result.filter((item) => item.course_id === course_id);\n  }\n  return result;\n};\n\nexport const FC_reportCandidatePerformanceDataFilter = (\n  thisList: candidatePerfomranceStateInterface[],\n  thisValue: ReportUserExamStatus | \"all\"\n): candidatePerfomranceStateInterface[] => {\n  if (thisValue === \"all\") {\n    return thisList;\n  } else {\n    return thisList.filter((item) => item.exam_stastus === thisValue);\n  }\n};\n\nexport const searchCandidatePerformanceData = (\n  objList: candidatePerfomranceStateInterface[],\n  text: string\n): candidatePerfomranceStateInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (\n        prop === \"course_name\" ||\n        prop === \"course_code\" ||\n        prop === \"user_total_marks\" ||\n        prop === \"exam_stastus\" ||\n        prop === \"description\" ||\n        prop === \"user_name\" ||\n        prop === \"user_phone\" ||\n        prop === \"user_email\" ||\n        prop === \"national_id\"\n      ) {\n        flag =\n          product[prop].toString().toLowerCase().indexOf(text.toLowerCase()) >\n          -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n};\n\nexport const controlRowsByStatus = (status: string): string => {\n  if (status === \"Done\") {\n    return \"bg-blue-50 border-gray-300 hover:border-blue-500 border-t border-b\";\n  }\n  if (status === \"Removed\") {\n    return \"bg-white border-red-300 hover:border-red-500 border-t border-b\";\n  }\n  if (status === \"Paused\") {\n    return \"bg-white border-yellow-300 hover:border-yellow-500 border-t border-b\";\n  }\n  return \"bg-white border-gray-300 hover:border-blue-500 border-t border-b\";\n};\n\ntype CandidatePerformanceProps = {\n  loading: boolean;\n  examsListData: ExamItemResponse[] | null;\n  courseListData: course[] | null;\n  thisPeriod: SessionPlanInterface[];\n  candidatePerformanceData: CandidatesFailedSucceeded[] | null;\n\n  // redux props ============\n  adminExamReport: ExamReportReducerType;\n  // FOR APPLICANT PERFORMANCE PROPS\n  filterApplicantPerformance: ReportUserExamStatus | \"all\";\n};\n\nconst CandidatePerformance: React.FC<CandidatePerformanceProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const [isSorted, setIsSorted] = useState<boolean>(false);\n  const [sortProperty, setSortProperty] = useState<string>(\"\");\n  const [sortOrder, setSortOrder] = useState<\"ASC\" | \"DESC\">(\"ASC\");\n\n  const setSort = (thisProperty: string) => {\n    if (sortProperty === thisProperty && sortOrder === \"ASC\") {\n      setSortOrder(\"DESC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    } else {\n      setSortOrder(\"ASC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    }\n  };\n\n  return (\n    <Fragment>\n      <div className=\"bg-white my-4\">\n        <div className=\"w-full px-2 py-2\">\n          <input\n            onChange={(e) => setSearchInput(e.target.value)}\n            type=\"text\"\n            value={searchInput}\n            placeholder=\"Search...\"\n            className=\"w-full bg-gray-100 py-2 px-3 rounded\"\n            disabled={\n              props.courseListData &&\n              props.candidatePerformanceData &&\n              FC_reportCandidatePerformanceDataFilter(\n                FC_reportCandidatePerformanceData(\n                  props.courseListData,\n                  props.candidatePerformanceData,\n                  props.adminExamReport.reportCourseId\n                    ? props.adminExamReport.reportCourseId.course_id\n                    : \"all\"\n                ),\n                props.filterApplicantPerformance\n              ).length <= 0\n                ? true\n                : false\n            }\n          />\n        </div>\n        <div className=\"w-full overflow-x-auto\">\n          <table className=\"w-full shadow\" id=\"report_content\">\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n              <tr>\n                <td className=\"px-2 py-2\">#</td>\n                <td className=\"px-2 py-2\" onClick={() => setSort(\"user_name\")}>\n                  Applicants\n                </td>\n                <td className=\"px-2 py-2\">National ID</td>\n                <td className=\"px-2 py-2\">Email</td>\n                <td className=\"px-2 py-2\">Phone</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"course_name\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Exam <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">Exam period</td>\n                <td className=\"px-2 py-2\">Exam date</td>\n                <td className=\"px-2 py-2\">Exam start time</td>\n                <td className=\"px-2 py-2\">Exam end time</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"user_total_marks\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Marks <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">Status</td>\n              </tr>\n            </thead>\n            <tbody>\n              {props.courseListData === null || props.loading ? (\n                <tr>\n                  <td colSpan={12} className=\"px-2 py-2\">\n                    <Loading />\n                  </td>\n                </tr>\n              ) : props.candidatePerformanceData &&\n                FC_reportCandidatePerformanceDataFilter(\n                  FC_reportCandidatePerformanceData(\n                    props.courseListData,\n                    props.candidatePerformanceData,\n                    props.adminExamReport.reportCourseId\n                      ? props.adminExamReport.reportCourseId.course_id\n                      : \"all\"\n                  ),\n                  props.filterApplicantPerformance\n                ).length <= 0 ? (\n                <tr>\n                  <td colSpan={12} className=\"px-2 py-2 text-center\">\n                    No applicant list available!\n                  </td>\n                </tr>\n              ) : (\n                props.candidatePerformanceData &&\n                sortThisArray(\n                  isSorted,\n                  searchCandidatePerformanceData(\n                    FC_reportCandidatePerformanceDataFilter(\n                      FC_reportCandidatePerformanceData(\n                        props.courseListData,\n                        props.candidatePerformanceData,\n                        props.adminExamReport.reportCourseId\n                          ? props.adminExamReport.reportCourseId.course_id\n                          : \"all\"\n                      ),\n                      props.filterApplicantPerformance\n                    ),\n                    searchInput\n                  ),\n                  sortProperty,\n                  sortOrder\n                ).map((item: candidatePerfomranceStateInterface, i) => (\n                  <tr\n                    key={i + 1}\n                    className={`${controlRowsByStatus(\n                      item.exam_stastus\n                    )} text-gray-600 hover:bg-blue-100 hover:text-blue-700 text-sm`}\n                  >\n                    <td className=\"px-2 py-2\">{i + 1}</td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(item.user_name)}\n                    </td>\n                    <td className=\"px-2 py-2\">{item.national_id}</td>\n                    <td className=\"px-2 py-2\">{item.user_email}</td>\n                    <td className=\"px-2 py-2\">{item.user_phone}</td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(item.course_name)} (\n                      <span className=\"font-semibold\">{item.course_code}</span>)\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam\n                        ? getPeriodById(props.thisPeriod, item.exam.period)\n                          ? getPeriodById(props.thisPeriod, item.exam.period)!\n                              .session_plan_name\n                          : \"-\"\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam.exam_date ? DATE(item.exam.exam_date) : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam.start_time\n                        ? timestampToDate(item.exam.start_time).timeAMPM\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam.end_time\n                        ? timestampToDate(item.exam.end_time).timeAMPM\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam_stastus !== ReportUserExamStatus.Editing\n                        ? Number(item.user_total_marks.toFixed(1)) + \"%\"\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(displayStatus(item.exam_stastus))}\n                    </td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  adminExamReport,\n}: StoreState): {\n  adminExamReport: ExamReportReducerType;\n} => {\n  return {\n    adminExamReport,\n  };\n};\n\nexport default React.memo(connect(mapStateToProps, {})(CandidatePerformance));\n","import React, { Fragment, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { SessionPlanInterface } from \"../../../interfaces\";\nimport { course } from \"../../../interfaces/course\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { DATE, sortThisArray } from \"../../../utils/functions\";\n// import searchData from \"../../../utils/search\";\nimport { getPeriodById } from \"./ExamReport\";\n\n// EXCEL INTERFACES ======================================\nexport interface ExamPreparationToPrintInterface {\n  course_id: number;\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string;\n  exam_period: string;\n  exam_date: string;\n  exam_time: string;\n  exam_duration: string;\n  // exam: ExamItemResponse | null;\n  preparation_status: string;\n}\n\nexport enum examPreparationReportContentKeyInterface {\n  \"course_name\" = \"course_name\",\n  \"course_code\" = \"course_code\",\n  SCHOOL_LEVEL = \"school_levels\",\n  PERIOD = \"exam_period\",\n  DATE = \"exam_date\",\n  TIME = \"exam_time\",\n  DURATION = \"exam_duration\",\n  STATUS = \"preparation_status\",\n}\n\nexport interface examPreparationReportContentInterface {\n  key: examPreparationReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n\nexport const defaultExamPreparationReportContent: examPreparationReportContentInterface[] =\n  [\n    {\n      key: examPreparationReportContentKeyInterface.course_name,\n      title: \"Course names\",\n      status: true,\n    },\n    {\n      key: examPreparationReportContentKeyInterface.course_code,\n      title: \"Course code\",\n      status: true,\n    },\n    {\n      key: examPreparationReportContentKeyInterface.SCHOOL_LEVEL,\n      title: \"School levels\",\n      status: true,\n    },\n    {\n      key: examPreparationReportContentKeyInterface.PERIOD,\n      title: \"Exam period\",\n      status: true,\n    },\n    {\n      key: examPreparationReportContentKeyInterface.DATE,\n      title: \"Exam date\",\n      status: true,\n    },\n    {\n      key: examPreparationReportContentKeyInterface.TIME,\n      title: \"Exam time\",\n      status: true,\n    },\n    {\n      key: examPreparationReportContentKeyInterface.DURATION,\n      title: \"Exam duration\",\n      status: true,\n    },\n    {\n      key: examPreparationReportContentKeyInterface.STATUS,\n      title: \"Exam status\",\n      status: true,\n    },\n  ];\n\nexport const examPreparationIsChangeAllowed = (\n  key: examPreparationReportContentKeyInterface\n): boolean => {\n  if (\n    key === examPreparationReportContentKeyInterface.course_name ||\n    key === examPreparationReportContentKeyInterface.course_code\n  ) {\n    return false;\n  }\n  return true;\n};\n// END EXCEL INTERFACES ======================================\n\nexport interface examPreparationStateInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n  exam: ExamItemResponse | null;\n  preparation_status: \"prepared\" | \"not prepared\";\n}\n\nexport const FC_reportExamList = (\n  allCourses: course[],\n  allExams: ExamItemResponse[],\n  period: string = \"\"\n): examPreparationStateInterface[] => {\n  let result: examPreparationStateInterface[] = [],\n    ids: string[] = [];\n  for (const key in allCourses) {\n    if (Object.prototype.hasOwnProperty.call(allCourses, key)) {\n      if (ids.includes(allCourses[key].course_id)) continue;\n      ids.push(allCourses[key].course_id);\n      let exam = !isEmptyOrSpaces(period)\n        ? allExams.find(\n            (item) =>\n              item.course === allCourses[key].course_id &&\n              item.period === period\n          )\n        : allExams.find((item) => item.course === allCourses[key].course_id);\n      if (exam) {\n        result.push({\n          course_name: allCourses[key].course_name,\n          course_code: allCourses[key].course_code,\n          description: allCourses[key].description,\n          school_levels: allCourses[key].school_levels,\n          course_id: allCourses[key].course_id,\n          exam: exam,\n          preparation_status: \"prepared\",\n        });\n      } else {\n        result.push({\n          course_name: allCourses[key].course_name,\n          course_code: allCourses[key].course_code,\n          description: allCourses[key].description,\n          school_levels: allCourses[key].school_levels,\n          course_id: allCourses[key].course_id,\n          exam: null,\n          preparation_status: \"not prepared\",\n        });\n      }\n    }\n  }\n  return result;\n};\n\nexport const FC_reportExamListFilter = (\n  thisList: examPreparationStateInterface[],\n  thisStatus: \"all\" | \"prepared\" | \"not prepared\"\n): examPreparationStateInterface[] => {\n  if (thisStatus === \"all\") {\n    return thisList;\n  } else {\n    return thisList.filter((item) => item.preparation_status === thisStatus);\n  }\n};\n\nexport const searchExamList = (\n  objList: examPreparationStateInterface[],\n  text: string\n): examPreparationStateInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (\n        prop === \"course_name\" ||\n        prop === \"course_code\" ||\n        prop === \"preparation_status\"\n      ) {\n        flag =\n          product[prop].toString().toLowerCase().indexOf(text.toLowerCase()) >\n          -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n};\n\ntype ExamListProps = {\n  loading: boolean;\n  examsListData: ExamItemResponse[] | null;\n  courseListData: course[] | null;\n  thisPeriod: SessionPlanInterface[];\n  // FOR EXAM PREPARATION PROPS =========================================\n  filterPreparation: \"prepared\" | \"not prepared\" | \"all\";\n};\n\nconst ExamList: React.FC<ExamListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const [isSorted, setIsSorted] = useState<boolean>(false);\n  const [sortProperty, setSortProperty] = useState<string>(\"\");\n  const [sortOrder, setSortOrder] = useState<\"ASC\" | \"DESC\">(\"ASC\");\n\n  const setSort = (thisProperty: string) => {\n    if (sortProperty === thisProperty && sortOrder === \"ASC\") {\n      setSortOrder(\"DESC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    } else {\n      setSortOrder(\"ASC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    }\n  };\n\n  return (\n    <Fragment>\n      <div className=\"bg-white my-4\">\n        <div className=\"w-full px-2 py-2\">\n          {props.courseListData && props.examsListData && (\n            <input\n              onChange={(e) => setSearchInput(e.target.value)}\n              type=\"text\"\n              value={searchInput}\n              placeholder=\"Search...\"\n              className=\"w-full bg-gray-100 py-2 px-3 rounded\"\n              disabled={\n                FC_reportExamListFilter(\n                  FC_reportExamList(props.courseListData, props.examsListData),\n                  props.filterPreparation\n                ).length <= 0\n              }\n            />\n          )}\n        </div>\n        <div className=\"w-full overflow-x-auto\">\n          <table className=\"w-full shadow\" id=\"report_content\">\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n              <tr>\n                <td className=\"px-2 py-2\">#</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"course_name\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Course <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">Exam date</td>\n                <td className=\"px-2 py-2\">Exam time</td>\n                <td className=\"px-2 py-2\">Exam duration</td>\n                <td className=\"px-2 py-2\">Exam Period</td>\n                <td className=\"px-2 py-2\">Created at</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"preparation_status\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Exam Status <BiSort />\n                  </div>\n                </td>\n              </tr>\n            </thead>\n            <tbody>\n              {props.courseListData === null || props.loading ? (\n                <tr>\n                  <td colSpan={8} className=\"px-2 py-2\">\n                    <Loading />\n                  </td>\n                </tr>\n              ) : props.courseListData &&\n                props.examsListData &&\n                FC_reportExamListFilter(\n                  FC_reportExamList(props.courseListData, props.examsListData),\n                  props.filterPreparation\n                ).length <= 0 ? (\n                <tr>\n                  <td colSpan={8} className=\"px-2 py-2 text-center\">\n                    No course for exam found\n                  </td>\n                </tr>\n              ) : (\n                props.examsListData &&\n                sortThisArray(\n                  isSorted,\n                  searchExamList(\n                    FC_reportExamListFilter(\n                      FC_reportExamList(\n                        props.courseListData,\n                        props.examsListData\n                      ),\n                      props.filterPreparation\n                    ),\n                    searchInput\n                  ),\n                  sortProperty,\n                  sortOrder\n                ).map((item, i) => (\n                  <tr\n                    key={i + 1}\n                    className={`${\n                      item.exam ? \"bg-blue-50\" : \"bg-white\"\n                    } text-gray-600 hover:bg-blue-100 hover:text-blue-700 border-b border-gray-300 hover:border-blue-500 text-sm`}\n                  >\n                    <td className=\"px-2 py-2\">{i + 1}</td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(item.course_name)} (\n                      <span className=\"font-semibold\">{item.course_code}</span>)\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam ? DATE(item.exam.exam_date) : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam ? item.exam.start_time : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam ? item.exam!.duration + \" min\" : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam\n                        ? getPeriodById(props.thisPeriod, item.exam.period)\n                          ? getPeriodById(props.thisPeriod, item.exam.period)!\n                              .session_plan_name\n                          : \"-\"\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam ? DATE(item.exam.createdAt) : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(\n                        item.exam ? \"Prepared\" : \"Not prepared\"\n                      )}\n                    </td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default React.memo(ExamList);\n","import React, { useEffect, useState } from \"react\";\nimport { CgFileDocument } from \"react-icons/cg\";\nimport { MdCheckBox, MdCheckBoxOutlineBlank, MdHistory } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  SetReportCourseId,\n  SetReportCourseIdAction,\n  SetReportDistrictId,\n  SetReportDistrictIdAction,\n} from \"../../../actions\";\nimport { getAllRoom } from \"../../../actions/location\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport { SessionPlanInterface } from \"../../../interfaces\";\nimport { StoreState } from \"../../../reducers\";\nimport { isEmptyOrSpaces } from \"../../../shared/dataTest\";\nimport {\n  LocationRoomTableInterface,\n  RoomLocationInterface,\n} from \"../../../shared/interfaces\";\nimport ExportToExcel from \"../../../utils/ExportToExcel\";\nimport ChooseSession from \"../../SessionSettings/ChooseSession\";\nimport { LocationsInArray } from \"../../UserManagement/UserList\";\nimport {\n  CandidateExamPerformanceToPrintInterface,\n  CandidateExamPerformanceReportContentInterface,\n  CandidateExamPerformanceReportContentKeyInterface,\n  candidateExamPerformanceIsChangeAllowed,\n} from \"./CandidatePerformance\";\nimport {\n  examinationProgressIsChangeAllowed,\n  ExaminationProgressReportContentInterface,\n  ExaminationProgressReportContentKeyInterface,\n  ExaminationProgressToPrintInterface,\n  examProgressStateInterface,\n  searchExamData,\n} from \"./DoneExamList\";\nimport {\n  examPreparationReportContentInterface,\n  ExamPreparationToPrintInterface,\n  examPreparationReportContentKeyInterface,\n  examPreparationIsChangeAllowed,\n} from \"./ExamList\";\nimport {\n  ExamPerformanceToPrintInterface,\n  examPerformanceReportContentInterface,\n  examPerformanceReportContentKeyInterface,\n  examPerformanceIsChangeAllowed,\n} from \"./ExamPerformance\";\nimport { reportTitleType } from \"./ExamReport\";\n\nexport const FC_DistinctDistrict = (\n  locations: LocationRoomTableInterface[]\n): LocationRoomTableInterface[] => {\n  var flags: string[] = [],\n    output: LocationRoomTableInterface[] = [],\n    l: number = locations.length,\n    i: number;\n  for (i = 0; i < l; i++) {\n    if (flags.includes(locations[i].district_id)) continue;\n    flags.push(locations[i].district_id);\n    output.push(locations[i]);\n  }\n\n  return output;\n};\n\nexport enum ModalForTypes {\n  title = \"TITLE\",\n  period = \"PERIOD\",\n  generateReportModal = \"GENERATE REPORT\",\n  choose_exam = \"Choosing Exam\",\n  choose_district = \"Choosing District\",\n}\n\ntype ExamReportModalsProps = {\n  modalFor: ModalForTypes;\n  modalState: boolean;\n  changeModalState: (state: boolean) => void;\n\n  // FOR CHANGING PERIOD =========================\n  applicationPeriods?: SessionPlanInterface[] | null;\n  selected_period?: SessionPlanInterface | null;\n  setSelectedPeriod?: (period: SessionPlanInterface) => void;\n  onPeriodChange?: (period_id: string) => void;\n\n  // FOR CHOOSING EXAM =========================\n  AllExamData?: examProgressStateInterface[];\n  // thisExam?: examProgressStateInterface | null;\n  // setSelectedExam?: (selectedExam: examProgressStateInterface | null) => void;\n  SetReportCourseId: (\n    data: examProgressStateInterface | null\n  ) => SetReportCourseIdAction;\n  thisExam?: examProgressStateInterface | null;\n\n  // FOR REPORT TYPE =========================\n  reportTitle?: reportTitleType;\n  setReportTitle?: (title: reportTitleType) => void;\n\n  // FOR EXCEL GENERATION =========================\n  generateReportModal?: {\n    reportType: \"EXCEL\" | \"PDF\";\n    status: boolean;\n  } | null;\n  setGenerateReportModal?: (\n    reportData: {\n      reportType: \"EXCEL\" | \"PDF\";\n      status: boolean;\n    } | null\n  ) => void;\n  excelReportTitle?: string;\n  setExcelReportTitle?: (title: string) => void;\n  examPreparationReportContent?: examPreparationReportContentInterface[];\n  setExamPreparationReportContent?: (\n    content: examPreparationReportContentInterface[]\n  ) => void;\n  updateExamToPrint?: () => void;\n  examsToPrint?:\n    | ExamPreparationToPrintInterface[]\n    | ExamPerformanceToPrintInterface[]\n    | null;\n  // FOR EXAM PERFORMANCE REPORT ================================\n  examPerformanceToPrint?: ExamPerformanceToPrintInterface[] | null;\n  examPerformanceReportContent?: examPerformanceReportContentInterface[];\n  setExamPerformanceReportContent?: (\n    value: examPerformanceReportContentInterface[]\n  ) => void;\n  // FOR EXCEL TOP 30 EXAM PERFORMANCE REPORT CONTENT ===============================\n  exam30PerformanceToPrint?: ExamPerformanceToPrintInterface[] | null;\n  exam30PerformanceReportContent?: examPerformanceReportContentInterface[];\n  setExam30PerformanceReportContent?: (\n    value: examPerformanceReportContentInterface[]\n  ) => void;\n  // FOR EXCEL EXAMINATION PROGRESS REPORT CONTENT ===============================\n  examinationProgressToPrint?: ExaminationProgressToPrintInterface[] | null;\n  examinationProgressReportContent?: ExaminationProgressReportContentInterface[];\n  setExaminationProgressExamPerformanceReportContent?: (\n    value: ExaminationProgressReportContentInterface[]\n  ) => void;\n  // FOR EXCEL CANDIDATE EXAM PERFORMANCE REPORT CONTENT ===============================\n  candidateExamPerformanceToPrint?:\n    | CandidateExamPerformanceToPrintInterface[]\n    | null;\n  candidateExamPerformanceReportContent?: CandidateExamPerformanceReportContentInterface[];\n  setCandidateExamPerformanceReportContent?: (\n    value: CandidateExamPerformanceReportContentInterface[]\n  ) => void;\n  // FOR EXCEL TOP 30 CANDIDATE EXAM PERFORMANCE REPORT CONTENT ===============================\n  candidate30ExamPerformanceToPrint?:\n    | CandidateExamPerformanceToPrintInterface[]\n    | null;\n  candidate30ExamPerformanceReportContent?: CandidateExamPerformanceReportContentInterface[];\n  setCandidate30ExamPerformanceReportContent?: (\n    value: CandidateExamPerformanceReportContentInterface[]\n  ) => void;\n  // FOR LOCATIONS PROVINCE, DISTRICT, CENTERS, ROOM ================================\n  locations: RoomLocationInterface[];\n  getAllRoom: Function;\n  SetReportDistrictId?: (\n    data: {\n      district_id: string;\n      district_name: string;\n    } | null\n  ) => SetReportDistrictIdAction;\n  districtId?: string;\n  isAllDistrictAllowed?: boolean;\n};\n\nconst ExamReportModals: React.FC<ExamReportModalsProps> = (props) => {\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [selectAll, setSelectAll] = useState<boolean>(true);\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const [loadingLocation, setLoadingLocation] = useState<boolean>(true);\n  const [error, setError] = useState<{ element: String; msg: string } | null>(\n    null\n  );\n  const [districtId, setDistrictId] = useState<string>(\n    props.districtId ? props.districtId : \"all\"\n  );\n\n  const isChangeAllowed = (key: any): boolean => {\n    // EXAM PREPARATION ######################\n    if (\n      props.reportTitle &&\n      props.reportTitle === reportTitleType.EXAM_PREPARATION\n    ) {\n      return examPreparationIsChangeAllowed(key);\n    }\n    // EXAM PERFORMANCE ######################\n    if (\n      props.reportTitle &&\n      (props.reportTitle === reportTitleType.EXAM_PERFORMANCE ||\n        props.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE)\n    ) {\n      return examPerformanceIsChangeAllowed(key);\n    }\n    // EXAMINATION PROGRESS ######################\n    if (\n      props.reportTitle &&\n      props.reportTitle === reportTitleType.EXAMINATION_PROGRESS\n    ) {\n      return examinationProgressIsChangeAllowed(key);\n    }\n    // CANDIDATE EXAM PERFORMANCE && TOP 30 CANDIDATE EXAM PERFORMANCE ######################\n    if (\n      props.reportTitle &&\n      (props.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE ||\n        props.reportTitle === reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE)\n    ) {\n      return candidateExamPerformanceIsChangeAllowed(key);\n    }\n    return false;\n  };\n\n  const updateExamPreparationReportContent = (\n    key: examPreparationReportContentKeyInterface\n  ) => {\n    if (props.examPreparationReportContent) {\n      let index: number = props.examPreparationReportContent.findIndex(\n        (item) => item.key === key\n      );\n      let newArray: examPreparationReportContentInterface[] =\n        props.examPreparationReportContent;\n      newArray[index].status = !newArray[index].status;\n      props.setExamPreparationReportContent &&\n        props.setExamPreparationReportContent(newArray);\n      let isSelectAllNeeded = newArray.find((item) => item.status === false);\n      if (isSelectAllNeeded) {\n        setSelectAll(false);\n      } else {\n        setSelectAll(true);\n      }\n\n      // UPDATE APPLICATION LIST FOR UPDATE ==============================\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n  };\n\n  const resetReportContent = (currentState: boolean) => {\n    if (props.reportTitle) {\n      // EXAM PREPARATION =======================================\n      if (\n        props.reportTitle === reportTitleType.EXAM_PREPARATION &&\n        props.examPreparationReportContent\n      ) {\n        let newArray: examPreparationReportContentInterface[] =\n          props.examPreparationReportContent;\n        for (const key in newArray) {\n          if (isChangeAllowed(newArray[key].key)) {\n            newArray[key].status = !currentState;\n          }\n        }\n\n        props.setExamPreparationReportContent &&\n          props.setExamPreparationReportContent(newArray);\n        setSelectAll(!currentState);\n\n        props.updateExamToPrint && props.updateExamToPrint();\n      }\n    }\n\n    // EXAM PERFORMANCE =======================================\n    if (\n      props.reportTitle === reportTitleType.EXAM_PERFORMANCE &&\n      props.examPerformanceReportContent\n    ) {\n      let newArray: examPerformanceReportContentInterface[] =\n        props.examPerformanceReportContent;\n      for (const key in newArray) {\n        if (isChangeAllowed(newArray[key].key)) {\n          newArray[key].status = !currentState;\n        }\n      }\n\n      props.setExamPerformanceReportContent &&\n        props.setExamPerformanceReportContent(newArray);\n      setSelectAll(!currentState);\n\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n\n    // TOP 30 EXAM PERFORMANCE =======================================\n    if (\n      props.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n      props.exam30PerformanceReportContent\n    ) {\n      let newArray: examPerformanceReportContentInterface[] =\n        props.exam30PerformanceReportContent;\n      for (const key in newArray) {\n        if (isChangeAllowed(newArray[key].key)) {\n          newArray[key].status = !currentState;\n        }\n      }\n\n      props.setExam30PerformanceReportContent &&\n        props.setExam30PerformanceReportContent(newArray);\n      setSelectAll(!currentState);\n\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n\n    // EXAMINATION PROGRESS =======================================\n    if (\n      props.reportTitle === reportTitleType.EXAMINATION_PROGRESS &&\n      props.examinationProgressReportContent\n    ) {\n      let newArray: ExaminationProgressReportContentInterface[] =\n        props.examinationProgressReportContent;\n      for (const key in newArray) {\n        if (isChangeAllowed(newArray[key].key)) {\n          newArray[key].status = !currentState;\n        }\n      }\n\n      props.setExaminationProgressExamPerformanceReportContent &&\n        props.setExaminationProgressExamPerformanceReportContent(newArray);\n      setSelectAll(!currentState);\n\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n\n    // CANDIDATE EXAM PERFORMANCE =======================================\n    if (\n      props.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE &&\n      props.candidateExamPerformanceReportContent\n    ) {\n      let newArray: CandidateExamPerformanceReportContentInterface[] =\n        props.candidateExamPerformanceReportContent;\n      for (const key in newArray) {\n        if (isChangeAllowed(newArray[key].key)) {\n          newArray[key].status = !currentState;\n        }\n      }\n\n      props.setCandidateExamPerformanceReportContent &&\n        props.setCandidateExamPerformanceReportContent(newArray);\n      setSelectAll(!currentState);\n\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n\n    // TOP 30 CANDIDATE EXAM PERFORMANCE =======================================\n    if (\n      props.reportTitle === reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE &&\n      props.candidate30ExamPerformanceReportContent\n    ) {\n      let newArray: CandidateExamPerformanceReportContentInterface[] =\n        props.candidate30ExamPerformanceReportContent;\n      for (const key in newArray) {\n        if (isChangeAllowed(newArray[key].key)) {\n          newArray[key].status = !currentState;\n        }\n      }\n\n      props.setCandidate30ExamPerformanceReportContent &&\n        props.setCandidate30ExamPerformanceReportContent(newArray);\n      setSelectAll(!currentState);\n\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n  };\n\n  const updateExamPerformanceReportContent = (\n    key: examPerformanceReportContentKeyInterface\n  ) => {\n    if (\n      props.reportTitle &&\n      props.reportTitle === reportTitleType.EXAM_PERFORMANCE &&\n      props.examPerformanceReportContent\n    ) {\n      let index: number = props.examPerformanceReportContent.findIndex(\n        (item) => item.key === key\n      );\n      let newArray: examPerformanceReportContentInterface[] =\n        props.examPerformanceReportContent;\n      newArray[index].status = !newArray[index].status;\n      props.setExamPerformanceReportContent &&\n        props.setExamPerformanceReportContent(newArray);\n      let isSelectAllNeeded = newArray.find((item) => item.status === false);\n      if (isSelectAllNeeded) {\n        setSelectAll(false);\n      } else {\n        setSelectAll(true);\n      }\n\n      // UPDATE APPLICATION LIST FOR UPDATE ==============================\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n    if (\n      props.reportTitle &&\n      props.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n      props.exam30PerformanceReportContent\n    ) {\n      let index: number = props.exam30PerformanceReportContent.findIndex(\n        (item) => item.key === key\n      );\n      let newArray: examPerformanceReportContentInterface[] =\n        props.exam30PerformanceReportContent;\n      newArray[index].status = !newArray[index].status;\n      props.setExam30PerformanceReportContent &&\n        props.setExam30PerformanceReportContent(newArray);\n      let isSelectAllNeeded = newArray.find((item) => item.status === false);\n      if (isSelectAllNeeded) {\n        setSelectAll(false);\n      } else {\n        setSelectAll(true);\n      }\n\n      // UPDATE APPLICATION LIST FOR UPDATE ==============================\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n  };\n\n  const updateExaminationProgressReportContent = (\n    key: ExaminationProgressReportContentKeyInterface\n  ) => {\n    if (props.examinationProgressReportContent) {\n      let index: number = props.examinationProgressReportContent.findIndex(\n        (item) => item.key === key\n      );\n      let newArray: ExaminationProgressReportContentInterface[] =\n        props.examinationProgressReportContent;\n      newArray[index].status = !newArray[index].status;\n      props.setExaminationProgressExamPerformanceReportContent &&\n        props.setExaminationProgressExamPerformanceReportContent(newArray);\n      let isSelectAllNeeded = newArray.find((item) => item.status === false);\n      if (isSelectAllNeeded) {\n        setSelectAll(false);\n      } else {\n        setSelectAll(true);\n      }\n\n      // UPDATE APPLICATION LIST FOR UPDATE ==============================\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n  };\n\n  const updateCandidateExamPerformanceReportContent = (\n    key: CandidateExamPerformanceReportContentKeyInterface\n  ) => {\n    if (\n      props.reportTitle &&\n      props.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE &&\n      props.candidateExamPerformanceReportContent\n    ) {\n      let index: number = props.candidateExamPerformanceReportContent.findIndex(\n        (item) => item.key === key\n      );\n      let newArray: CandidateExamPerformanceReportContentInterface[] =\n        props.candidateExamPerformanceReportContent;\n      newArray[index].status = !newArray[index].status;\n      props.setCandidateExamPerformanceReportContent &&\n        props.setCandidateExamPerformanceReportContent(newArray);\n      let isSelectAllNeeded = newArray.find((item) => item.status === false);\n      if (isSelectAllNeeded) {\n        setSelectAll(false);\n      } else {\n        setSelectAll(true);\n      }\n\n      // UPDATE APPLICATION LIST FOR UPDATE ==============================\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n\n    if (\n      props.reportTitle &&\n      props.reportTitle === reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE &&\n      props.candidate30ExamPerformanceReportContent\n    ) {\n      let index: number =\n        props.candidate30ExamPerformanceReportContent.findIndex(\n          (item) => item.key === key\n        );\n      let newArray: CandidateExamPerformanceReportContentInterface[] =\n        props.candidate30ExamPerformanceReportContent;\n      newArray[index].status = !newArray[index].status;\n      props.setCandidate30ExamPerformanceReportContent &&\n        props.setCandidate30ExamPerformanceReportContent(newArray);\n      let isSelectAllNeeded = newArray.find((item) => item.status === false);\n      if (isSelectAllNeeded) {\n        setSelectAll(false);\n      } else {\n        setSelectAll(true);\n      }\n\n      // UPDATE APPLICATION LIST FOR UPDATE ==============================\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n  };\n\n  useEffect(() => {\n    if (\n      !props.locations.length &&\n      props.modalFor === ModalForTypes.choose_district\n    ) {\n      props.getAllRoom((status: boolean, msg: string) => {\n        if (!status && msg.length > 0) console.error(msg);\n        setLoadingLocation(status);\n      });\n    } else {\n      setLoadingLocation(false);\n    }\n  }, [props]);\n\n  const selectDistrict = (district_id: string) => {\n    setError(null);\n    if (district_id === \"all\") {\n      if (\n        ((props.reportTitle &&\n          props.reportTitle ===\n            reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE) ||\n          (props.isAllDistrictAllowed &&\n            props.isAllDistrictAllowed === true)) &&\n        props.SetReportDistrictId\n      ) {\n        props.SetReportDistrictId(null);\n        props.changeModalState(false);\n      } else {\n        setError({ element: \"district\", msg: \"District is required\" });\n      }\n    } else {\n      if (props.SetReportDistrictId) {\n        let thisDistrict = LocationsInArray(props.locations).find(\n          (item) => item.district_id === district_id\n        );\n        if (!thisDistrict) {\n          return setError({ element: \"district\", msg: \"Invalid district id\" });\n        } else {\n          props.SetReportDistrictId({\n            district_id: thisDistrict.district_id,\n            district_name: thisDistrict.district_name,\n          });\n          props.changeModalState(false);\n        }\n      }\n    }\n  };\n\n  const showGenerateBtn = (): { status: boolean; data: any[] } => {\n    if (props.reportTitle) {\n      // EXAM PREPARATION ######################\n      if (\n        props.reportTitle === reportTitleType.EXAM_PREPARATION &&\n        props.excelReportTitle &&\n        props.examsToPrint\n      ) {\n        return { status: true, data: props.examsToPrint };\n      }\n      // EXAM PERFORMANCE ######################\n      if (\n        props.reportTitle === reportTitleType.EXAM_PERFORMANCE &&\n        props.excelReportTitle &&\n        props.examPerformanceToPrint\n      ) {\n        return { status: true, data: props.examPerformanceToPrint };\n      }\n      // TOP 30 EXAM PERFORMANCE ######################\n      if (\n        props.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n        props.excelReportTitle &&\n        props.exam30PerformanceToPrint\n      ) {\n        return { status: true, data: props.exam30PerformanceToPrint };\n      }\n      // EXAMINATION PROGRESS ######################\n      if (\n        props.reportTitle === reportTitleType.EXAMINATION_PROGRESS &&\n        props.excelReportTitle &&\n        props.examinationProgressToPrint\n      ) {\n        return { status: true, data: props.examinationProgressToPrint };\n      }\n      // CANDIDATE EXAM PERFORMANCE ######################\n      if (\n        props.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE &&\n        props.excelReportTitle &&\n        props.candidateExamPerformanceToPrint\n      ) {\n        return { status: true, data: props.candidateExamPerformanceToPrint };\n      }\n      // TOP 30 CANDIDATE EXAM PERFORMANCE ######################\n      if (\n        props.reportTitle === reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE &&\n        props.excelReportTitle &&\n        props.candidate30ExamPerformanceToPrint\n      ) {\n        return { status: true, data: props.candidate30ExamPerformanceToPrint };\n      }\n    }\n    return { status: false, data: [] };\n  };\n\n  return (\n    <div>\n      {/* LOAD MODAL FOR PERIOD ================================== */}\n      {props.modalFor === ModalForTypes.period &&\n        props.applicationPeriods &&\n        props.modalState && (\n          <Modal\n            title={\n              <div className=\"flex flex-row gap-4 items-center\">\n                <MdHistory className=\"text-5xl text-blue-600\" />\n                <div className=\"flex flex-col\">\n                  <span className=\"font-bold text-xl text-blue-600\">\n                    Choose a period\n                  </span>\n                </div>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() => props.selected_period && props.changeModalState(false)}\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{ title: true }}\n          >\n            <ChooseSession\n              allSession={props.applicationPeriods}\n              setSelectSession={(value: SessionPlanInterface | \"all\") => {\n                if (value !== \"all\") {\n                  props.setSelectedPeriod && props.setSelectedPeriod(value);\n                  props.onPeriodChange && props.onPeriodChange(value._id);\n                  props.changeModalState(false);\n                }\n              }}\n              chooseAll={false}\n              currentSelected={\n                props.selected_period ? props.selected_period : \"all\"\n              }\n            />\n          </Modal>\n        )}\n      {/* END LOAD MODAL FOR PERIOD ================================== */}\n\n      {/* LOAD MODAL FOR REPORT TYPES ================================== */}\n      {props.modalFor === ModalForTypes.title && props.modalState && (\n        <Modal\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              <CgFileDocument className=\"text-5xl text-blue-600\" />\n              <div className=\"flex flex-col\">\n                <span className=\"font-bold text-xl text-blue-600\">\n                  Choose exam report type\n                </span>\n              </div>\n            </div>\n          }\n          backDrop={true}\n          theme={Themes.default}\n          close={() => props.changeModalState(false)}\n          backDropClose={true}\n          widthSizeClass={ModalSize.extraLarge}\n          displayClose={true}\n          padding={{ title: true }}\n        >\n          <div className=\"px-2 pb-2\">\n            {Object.values(reportTitleType).map((item, i) => (\n              <div\n                onClick={() => {\n                  props.setReportTitle && props.setReportTitle(item);\n                  props.setExcelReportTitle && props.setExcelReportTitle(item);\n                  props.changeModalState(false);\n                }}\n                key={i + 1}\n                className={`flex items-center border rounded px-2 py-2 cursor-pointer group hover:bg-blue-100 hover:border-blue-500 mb-3 justify-between ${\n                  props.reportTitle && props.reportTitle === item\n                    ? \"bg-blue-50 border-blue-400\"\n                    : \"bg-white border-gray-200\"\n                }`}\n              >\n                <div>\n                  <div className=\"text-blue-500 text-sm font-medium italic\">\n                    Report type\n                  </div>\n                  <div className=\"font-bold\">\n                    {item}\n                    {item === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n                      \" district\"}\n                  </div>\n                </div>\n                <div className=\"btn bg-blue-400 group-hover:bg-blue-600 text-white mr-2\">\n                  Choose\n                </div>\n              </div>\n            ))}\n          </div>\n        </Modal>\n      )}\n      {/* END LOAD MODAL FOR REPORT TYPES ================================== */}\n\n      {/* GENERATE DYNAMIC REPORT CONTENT MODAL */}\n      {props.generateReportModal &&\n        props.modalFor === ModalForTypes.generateReportModal &&\n        props.modalState && (\n          <Modal\n            title={\n              <div className=\"flex flex-row gap-4 items-center\">\n                {/* <IoBriefcase className=\"text-5xl text-gray-500\" /> */}\n                <div className=\"flex flex-col\">\n                  <span className=\"font-bold text-2xl text-gray-500\">\n                    Generating Report contents\n                  </span>\n                  <span className=\"text-sm text-blue-600 font-normal\">\n                    Generating {props.generateReportModal.reportType} Report\n                  </span>\n                </div>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() =>\n              props.setGenerateReportModal && props.setGenerateReportModal(null)\n            }\n            backDropClose={false}\n            widthSizeClass={ModalSize.medium}\n            displayClose={true}\n            padding={{ title: true }}\n          >\n            <div className=\"px-6\">\n              <div className=\"my-2 text-base text-gray-700 sm:text-lg\">\n                <div className=\"flex flex-col\">\n                  <label>Title</label>\n                  <input\n                    type=\"text\"\n                    className={`text-left input-white w-20 inline-block ${\n                      formError && formError.element === \"report_title\"\n                        ? \"border-red-500\"\n                        : \"border-gray-500\"\n                    } border-2`}\n                    placeholder=\"Sub Category Title\"\n                    value={props.excelReportTitle ? props.excelReportTitle : \"\"}\n                    onChange={(e) => {\n                      props.setExcelReportTitle &&\n                        props.setExcelReportTitle(e.target.value);\n                      setFormError(null);\n                    }}\n                    // disabled={props.loading}\n                  />\n                  {formError && formError.element === \"report_title\" && (\n                    <span className=\"text-red-500\">{formError.msg}</span>\n                  )}\n                </div>\n                <div className=\"flex flex-col mt-2\">\n                  <label>Report content</label>\n                  {/* // EXAM PREPARATION ###################### */}\n                  {props.reportTitle &&\n                    props.reportTitle === reportTitleType.EXAM_PREPARATION && (\n                      <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                        {props.examPreparationReportContent &&\n                          props.examPreparationReportContent.map(\n                            (item, index) => (\n                              <div\n                                key={index}\n                                className={`flex items-center gap-1 ${\n                                  isChangeAllowed(item.key)\n                                    ? \"cursor-pointer\"\n                                    : \"cursor-not-allowed\"\n                                }`}\n                                onClick={() =>\n                                  isChangeAllowed(item.key) &&\n                                  updateExamPreparationReportContent(item.key)\n                                }\n                                title={\n                                  !isChangeAllowed(item.key)\n                                    ? \"Required for every report!\"\n                                    : \"\"\n                                }\n                              >\n                                {item.status ? (\n                                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                                ) : (\n                                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                                )}\n                                <span>{item.title}</span>\n                              </div>\n                            )\n                          )}\n                      </div>\n                    )}\n                  {/* // EXAM PERFORMANCE ###################### */}\n                  {props.reportTitle &&\n                    props.reportTitle === reportTitleType.EXAM_PERFORMANCE && (\n                      <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                        {props.examPerformanceReportContent &&\n                          props.examPerformanceReportContent.map(\n                            (item, index) => (\n                              <div\n                                key={index}\n                                className={`flex items-center gap-1 ${\n                                  isChangeAllowed(item.key)\n                                    ? \"cursor-pointer\"\n                                    : \"cursor-not-allowed\"\n                                }`}\n                                onClick={() =>\n                                  isChangeAllowed(item.key) &&\n                                  updateExamPerformanceReportContent(item.key)\n                                }\n                                title={\n                                  !isChangeAllowed(item.key)\n                                    ? \"Required for every report!\"\n                                    : \"\"\n                                }\n                              >\n                                {item.status ? (\n                                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                                ) : (\n                                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                                )}\n                                <span>{item.title}</span>\n                              </div>\n                            )\n                          )}\n                      </div>\n                    )}\n                  {/* // TOP 30 EXAM PERFORMANCE ###################### */}\n                  {props.reportTitle &&\n                    props.reportTitle ===\n                      reportTitleType.EXAM_DISTRICT_PERFORMANCE && (\n                      <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                        {props.exam30PerformanceReportContent &&\n                          props.exam30PerformanceReportContent.map(\n                            (item, index) => (\n                              <div\n                                key={index}\n                                className={`flex items-center gap-1 ${\n                                  isChangeAllowed(item.key)\n                                    ? \"cursor-pointer\"\n                                    : \"cursor-not-allowed\"\n                                }`}\n                                onClick={() =>\n                                  isChangeAllowed(item.key) &&\n                                  updateExamPerformanceReportContent(item.key)\n                                }\n                                title={\n                                  !isChangeAllowed(item.key)\n                                    ? \"Required for every report!\"\n                                    : \"\"\n                                }\n                              >\n                                {item.status ? (\n                                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                                ) : (\n                                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                                )}\n                                <span>{item.title}</span>\n                              </div>\n                            )\n                          )}\n                      </div>\n                    )}\n                  {/* // EXAMINATION PROGRESS ###################### */}\n                  {props.reportTitle &&\n                    props.reportTitle ===\n                      reportTitleType.EXAMINATION_PROGRESS && (\n                      <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                        {props.examinationProgressReportContent &&\n                          props.examinationProgressReportContent.map(\n                            (item, index) => (\n                              <div\n                                key={index}\n                                className={`flex items-center gap-1 ${\n                                  isChangeAllowed(item.key)\n                                    ? \"cursor-pointer\"\n                                    : \"cursor-not-allowed\"\n                                }`}\n                                onClick={() =>\n                                  isChangeAllowed(item.key) &&\n                                  updateExaminationProgressReportContent(\n                                    item.key\n                                  )\n                                }\n                                title={\n                                  !isChangeAllowed(item.key)\n                                    ? \"Required for every report!\"\n                                    : \"\"\n                                }\n                              >\n                                {item.status ? (\n                                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                                ) : (\n                                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                                )}\n                                <span>{item.title}</span>\n                              </div>\n                            )\n                          )}\n                      </div>\n                    )}\n                  {/* // EXAMINATION PROGRESS ###################### */}\n                  {/* // CANDIDATE EXAM PERFORMANCE ###################### */}\n                  {props.reportTitle &&\n                    props.reportTitle ===\n                      reportTitleType.APPLICANTS_PERFORMANCE && (\n                      <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                        {props.candidateExamPerformanceReportContent &&\n                          props.candidateExamPerformanceReportContent.map(\n                            (item, index) => (\n                              <div\n                                key={index}\n                                className={`flex items-center gap-1 ${\n                                  isChangeAllowed(item.key)\n                                    ? \"cursor-pointer\"\n                                    : \"cursor-not-allowed\"\n                                }`}\n                                onClick={() =>\n                                  isChangeAllowed(item.key) &&\n                                  updateCandidateExamPerformanceReportContent(\n                                    item.key\n                                  )\n                                }\n                                title={\n                                  !isChangeAllowed(item.key)\n                                    ? \"Required for every report!\"\n                                    : \"\"\n                                }\n                              >\n                                {item.status ? (\n                                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                                ) : (\n                                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                                )}\n                                <span>{item.title}</span>\n                              </div>\n                            )\n                          )}\n                      </div>\n                    )}\n                  {/* // END EXAMINATION PROGRESS ###################### */}\n                  {/* // TOP 30 CANDIDATE EXAM PERFORMANCE ###################### */}\n                  {props.reportTitle &&\n                    props.reportTitle ===\n                      reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE && (\n                      <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                        {props.candidate30ExamPerformanceReportContent &&\n                          props.candidate30ExamPerformanceReportContent.map(\n                            (item, index) => (\n                              <div\n                                key={index}\n                                className={`flex items-center gap-1 ${\n                                  isChangeAllowed(item.key)\n                                    ? \"cursor-pointer\"\n                                    : \"cursor-not-allowed\"\n                                }`}\n                                onClick={() =>\n                                  isChangeAllowed(item.key) &&\n                                  updateCandidateExamPerformanceReportContent(\n                                    item.key\n                                  )\n                                }\n                                title={\n                                  !isChangeAllowed(item.key)\n                                    ? \"Required for every report!\"\n                                    : \"\"\n                                }\n                              >\n                                {item.status ? (\n                                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                                ) : (\n                                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                                )}\n                                <span>{item.title}</span>\n                              </div>\n                            )\n                          )}\n                      </div>\n                    )}\n                  {/* // END TOP 30 CANDIDATE EXAM PERFORMANCE ###################### */}\n                  {formError && formError.element === \"report_content\" && (\n                    <span className=\"text-red-500\">{formError.msg}</span>\n                  )}\n                </div>\n              </div>\n              <div className=\"flex justify-between mb-2 mt-4\">\n                <div\n                  className={`flex items-center gap-1 cursor-pointer`}\n                  onClick={() => resetReportContent(selectAll)}\n                >\n                  {selectAll ? (\n                    <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                  ) : (\n                    <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                  )}\n                  <span>Select all</span>\n                </div>\n\n                {showGenerateBtn().status && (\n                  <ExportToExcel\n                    fileData={showGenerateBtn().data}\n                    fileName={props.excelReportTitle!}\n                    btnName=\"Generate\"\n                  />\n                )}\n              </div>\n            </div>\n          </Modal>\n        )}\n      {/* END GENERATE DYNAMIC REPORT CONTENT MODAL */}\n\n      {/* LOAD MODAL FOR CHOOSING EXAM ================================== */}\n      {props.modalFor === ModalForTypes.choose_exam &&\n        props.modalState &&\n        props.AllExamData && (\n          <Modal\n            title={\n              <div className=\"flex flex-row gap-4 items-center\">\n                <CgFileDocument className=\"text-5xl text-blue-600\" />\n                <div className=\"flex flex-col\">\n                  <span className=\"font-bold text-xl text-blue-600\">\n                    Choose exam\n                  </span>\n                </div>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() => props.changeModalState(false)}\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{ title: true }}\n          >\n            <div className=\"px-2 pb-2\">\n              <div className=\"w-full py-2\">\n                <input\n                  onChange={(e) => setSearchInput(e.target.value)}\n                  type=\"text\"\n                  value={searchInput}\n                  placeholder=\"Search...\"\n                  className=\"w-full bg-white py-2 px-3 rounded border border-gray-400\"\n                  disabled={props.AllExamData.length <= 0 ? true : false}\n                />\n              </div>\n              <div\n                onClick={() => {\n                  props.SetReportCourseId(null);\n                  props.changeModalState(false);\n                }}\n                className={`flex items-center border rounded px-2 py-2 cursor-pointer group hover:bg-blue-100 hover:border-blue-500 mb-3 justify-between ${\n                  props.thisExam === null\n                    ? \"bg-blue-50 border-blue-400\"\n                    : \"bg-white border-gray-200\"\n                }`}\n              >\n                <div>\n                  <div className=\"text-sm font-medium italic\">\n                    code: <span className=\"text-blue-500\">-</span>\n                  </div>\n                  <div className=\"font-bold text-lg\">All exams</div>\n                </div>\n                <div className=\"btn bg-blue-400 group-hover:bg-blue-600 text-white mr-2\">\n                  Choose\n                </div>\n              </div>\n              {searchExamData(props.AllExamData, searchInput).map((item, i) => (\n                <div\n                  onClick={() => {\n                    props.SetReportCourseId(item);\n                    props.changeModalState(false);\n                  }}\n                  key={i + 1}\n                  className={`flex items-center border rounded px-2 py-2 cursor-pointer group hover:bg-blue-100 hover:border-blue-500 mb-3 justify-between ${\n                    props.thisExam &&\n                    props.thisExam.course_id === item.course_id\n                      ? \"bg-blue-50 border-blue-400\"\n                      : \"bg-white border-gray-200\"\n                  }`}\n                >\n                  <div>\n                    <div className=\"text-sm font-medium italic\">\n                      code:{\" \"}\n                      <span className=\"text-blue-500\">{item.course_code}</span>\n                    </div>\n                    <div className=\"font-bold text-lg\">{item.course_name}</div>\n                  </div>\n                  <div className=\"btn bg-blue-400 group-hover:bg-blue-600 text-white mr-2\">\n                    Choose\n                  </div>\n                </div>\n              ))}\n            </div>\n          </Modal>\n        )}\n      {/* END LOAD MODAL FOR CHOOSING EXAM ================================== */}\n\n      {/* LOAD MODAL FOR CHOOSING DISTRICT ================================== */}\n      {props.modalFor === ModalForTypes.choose_district && props.modalState && (\n        <Modal\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              <CgFileDocument className=\"text-5xl text-blue-600\" />\n              <div className=\"flex flex-col\">\n                <span className=\"font-bold text-xl text-blue-600\">\n                  Choose district\n                </span>\n              </div>\n            </div>\n          }\n          backDrop={true}\n          theme={Themes.default}\n          close={() =>\n            !isEmptyOrSpaces(districtId) && props.changeModalState(false)\n          }\n          backDropClose={true}\n          widthSizeClass={ModalSize.medium}\n          displayClose={true}\n          padding={{ title: true }}\n        >\n          <div className=\"px-2 pb-2 \">\n            {loadingLocation ? (\n              <Loading />\n            ) : (\n              <section className=\"pb-8 px-7 \">\n                {/* <div className=\"grid grid-cols-1 \"> */}\n                <label className=\"uppercase md:text-sm text-xs text-gray-500 text-light font-semibold\">\n                  District\n                </label>\n                {props.locations.length > 0 ? (\n                  <div className=\"\">\n                    <select\n                      className={`py-3 px-3 w-full rounded border-2 bg-white mt-1 focus:outline-none ${\n                        error && error.element === \"district\"\n                          ? \"border-red-400 focus:border-red-800\"\n                          : \"border-gray-400 focus:border-gray-800\"\n                      }`}\n                      value={districtId}\n                      onChange={(e) => {\n                        setDistrictId(e.target.value);\n                        selectDistrict(e.target.value);\n                      }}\n                    >\n                      <option value=\"all\">Select district</option>\n                      {FC_DistinctDistrict(\n                        LocationsInArray(props.locations)\n                      ).map((item, index) => (\n                        <option\n                          key={index + item.district_id}\n                          value={item.district_id}\n                        >\n                          {item.district_name}\n                        </option>\n                      ))}\n                    </select>\n                    {error && error.element === \"district\" && (\n                      <p className=\"text-xs italic text-red-500 mt-3\">\n                        {error.msg}\n                      </p>\n                    )}\n                  </div>\n                ) : (\n                  <div className=\"alert-info\">No district found</div>\n                )}\n                {/* </div> */}\n              </section>\n            )}\n          </div>\n        </Modal>\n      )}\n      {/* END LOAD MODAL FOR CHOOSING DISTRICT ================================== */}\n    </div>\n  );\n};\n\nconst mapStateToProps = ({\n  locations,\n}: StoreState): {\n  locations: RoomLocationInterface[];\n} => {\n  return {\n    locations: locations.roomLocation,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    getAllRoom,\n    SetReportDistrictId,\n    SetReportCourseId,\n  })(ExamReportModals)\n);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { MdLock, MdLocationOn } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert, schoolLevelsStoreInterface } from \"../../actions\";\nimport { getAllRoom } from \"../../actions/location\";\nimport {\n  blockUserToSystem,\n  unBlockUserToSystem,\n  resetUserAccess,\n} from \"../../actions/users\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport Loading from \"../../components/Loading/Loading\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport Table from \"../../components/Table/Table\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport {\n  getRoleById,\n  capitalizeFirstLetter,\n  getInstituteById,\n} from \"../../shared/dataTest\";\nimport {\n  RoomLocationInterface,\n  LocationRoomTableInterface,\n  DistrictInterface,\n  SystemUserRoleInterface,\n  UserInterface,\n  AccessTaskInterface,\n  SchoolsInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport { UserAccess } from \"./UserAccess\";\nimport UserRole from \"./UserRole\";\nimport profile from \"../../shared/blank_profile.png\"; // with im\n\nexport const getUserById = (users: UserInterface[], userId: string) => {\n  return users.find((item) => item.user_id === userId);\n};\n\nexport enum ModalState {\n  View_User = \"View User Info\",\n  Add_Access = \"Add Access To User\",\n  Update_Access = \"Update User Access\",\n  Close_Modal = \"Close Modal\",\n}\n\n// Table replaced with Emmy's function\nexport const LocationsInArray = (\n  LocationData: RoomLocationInterface[]\n): LocationRoomTableInterface[] | [] => {\n  let locationTemp: LocationRoomTableInterface[] = [];\n  for (let p in LocationData) {\n    let districts = LocationData[p].districts;\n    for (let d in districts) {\n      let centers = districts[d].centers;\n      for (let c in centers) {\n        let rooms = centers[c].rooms;\n        for (let r in rooms) {\n          locationTemp.push({\n            province_id: LocationData[p]._id,\n            province_name: LocationData[p].province_name,\n            district_id: districts[d]._id,\n            district_name: districts[d].district_name,\n            center_id: centers[c]._id,\n            center_name: centers[c].center_name,\n            room_id: rooms[r]._id,\n            room_name: rooms[r].room_number.toString(),\n            capacity: rooms[r].capacity,\n            occupied: rooms[r].occupied,\n          });\n        }\n      }\n    }\n  }\n  return locationTemp;\n};\n\ninterface AppProps {\n  users: UserInterface[];\n  roleList: SystemUserRoleInterface[];\n  userTypes: \"all\" | \"active\" | \"blocked\";\n  loadingUser: boolean;\n  schoolLevels: schoolLevelsStoreInterface;\n  setLoadingUser: (value: boolean) => void;\n  manageUser: UserInterface | null;\n  setManageUser: (value: UserInterface | null) => void;\n  changeRole: boolean;\n  setChangeRole: (value: boolean) => void;\n  currentPage: number;\n\n  // REDUX =================\n  allRoom: RoomLocationInterface[];\n  getAllRoom: Function;\n  blockUserToSystem: Function;\n  unBlockUserToSystem: Function;\n  resetUserAccess: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface AppStates {\n  manageUserId: string;\n  loadingRequest: boolean;\n  loading: boolean;\n  loadingRequestType: \"RESET\" | \"STATUS\" | \"CHANGE_ROLE\" | null;\n  roomList: RoomLocationInterface[] | null;\n  roomTable: LocationRoomTableInterface[] | null;\n  userAccess: AccessTaskInterface[] | null;\n  currentAccess: AccessTaskInterface | null;\n}\n\nclass UserList extends Component<AppProps, AppStates> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      manageUserId: \"\",\n      loadingRequest: false,\n      loading: true,\n      loadingRequestType: null,\n      roomList: null,\n      roomTable: null,\n      userAccess: null,\n      currentAccess: null,\n    };\n  }\n\n  setManageUserId = (value: string) => {\n    this.setState({ manageUserId: value });\n  };\n\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingRequestType = (\n    value: \"RESET\" | \"STATUS\" | \"CHANGE_ROLE\" | null\n  ) => {\n    this.setState({ loadingRequestType: value });\n  };\n\n  setRoomList = (value: RoomLocationInterface[] | null) => {\n    this.setState({ roomList: value });\n  };\n\n  setRoomTables = (value: LocationRoomTableInterface[] | null) => {\n    this.setState({ roomTable: value });\n  };\n\n  setCurrentAccess = (value: AccessTaskInterface | null) => {\n    this.setState({ currentAccess: value });\n  };\n\n  setUserAccess = (value: AccessTaskInterface[] | null) => {\n    this.setState({ userAccess: value });\n  };\n\n  componentDidMount = () => {\n    if (this.props.allRoom.length === 0) {\n      this.props.getAllRoom(\n        (status: boolean, msg: string, data?: RoomLocationInterface[]) => {\n          this.setLoading(status);\n          this.props.setLoadingUser(status);\n          if (!status && msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          if (data && data.length > 0) {\n            this.setRoomList(data);\n            this.setRoomTables(LocationsInArray(data));\n          }\n        }\n      );\n    } else if (this.state.loading) {\n      this.setRoomList(this.props.allRoom);\n      this.setRoomTables(LocationsInArray(this.props.allRoom));\n      this.props.setLoadingUser(false);\n      this.setLoading(false);\n    }\n  };\n\n  tableData = (): JSX.Element[] => {\n    if (this.props.loadingUser || this.state.loading) {\n      return [\n        <tr\n          key={Math.random()}\n          className=\"border-b border-gray-200 hover:bg-gray-100\"\n        >\n          <td className=\"p-3 text-center\" colSpan={8}>\n            <Loading />\n          </td>\n        </tr>,\n      ];\n    }\n\n    let data: UserInterface[] = this.props.users;\n    if (data.length <= 0) {\n      return [\n        <tr\n          key={Math.random()}\n          className=\"border-b border-gray-200 hover:bg-gray-100\"\n        >\n          <td className=\"p-3 text-center\" colSpan={8}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    const pageNumber: number =\n      this.props.currentPage > 1 ? this.props.currentPage * 10 : 0;\n\n    return data.map((user: UserInterface, index: number) => (\n      <tr\n        key={index + Math.random()}\n        className=\"border-b border-gray-200 hover:bg-gray-100 group cursor-pointer\"\n        onClick={() => {\n          this.props.setManageUser(user);\n          this.setManageUserId(user.user_id);\n        }}\n      >\n        <td className=\"p-3 text-left whitespace-nowrap\">\n          {pageNumber + index + 1}\n        </td>\n        <td className=\"p-3 text-left\">\n          <span>\n            {user.user_info &&\n              user.user_info.fname + \" \" + user.user_info.lname}\n          </span>\n        </td>\n        <td className=\"p-3 text-left\">{user.email}</td>\n        {/* <td className=\"p-3 text-left\">{user.phone_number}</td> */}\n        <td className=\"p-3 text-left\">\n          {user.user_info && user.user_info.sex === \"M\" ? \"Male\" : \"Female\"}\n        </td>\n        <td className=\"p-3 text-left text-blue-700 text-base font-medium\">\n          {user.default_access &&\n            user.default_access.system_user_role_id &&\n            user.default_access.system_user_role_id && (\n              <span\n                className={`px-2 py-1 font-semibold rounded text-blue-700 bg-blue-100 dark:bg-blue-700 dark:text-blue-100`}\n              >\n                {getRoleById(\n                  this.props.roleList,\n                  user.default_access.system_user_role_id\n                )?.role &&\n                  capitalizeFirstLetter(\n                    getRoleById(\n                      this.props.roleList,\n                      user.default_access.system_user_role_id\n                    )?.role\n                  )}\n              </span>\n            )}\n        </td>\n        {/* {userTypes === \"all\" && (\n          <td>\n            {user.is_active ? (\n              <span className={`px-2 py-1 font-semibold text-green-700`}>\n                Active\n              </span>\n            ) : (\n              <span className={`px-2 py-1 font-semibold text-red-700`}>\n                Blocked\n              </span>\n            )}\n          </td>\n        )} */}\n        <td className=\"px-3 text-center\">\n          <button\n            className=\"btn bg-gray-200 group-hover:bg-blue-700 group-hover:text-white focus:outline-none\"\n            title=\"Manage User Access\"\n            onClick={() => {\n              this.props.setManageUser(user);\n              this.setManageUserId(user.user_id);\n            }}\n          >\n            Manage\n          </button>\n        </td>\n      </tr>\n    ));\n  };\n\n  blockUser = async (user_id: string, actionType: boolean) => {\n    if (!user_id) {\n      this.props.PushPopupAlert({\n        title: \"User Access is required doesn't exist\",\n        theme: PopupAlertTheme.danger,\n      });\n    }\n\n    this.setLoadingRequest(true);\n\n    if (\n      !window.confirm(\n        `Are sure you want to ${actionType ? \"block\" : \"activate\"} this user?`\n      )\n    ) {\n      return this.setLoadingRequest(false);\n    }\n\n    try {\n      const res = await axios.patch(\n        `${API.AUTH}/auth/user/disactive/${user_id}`,\n        {\n          is_active: !actionType,\n        }\n      );\n      if (res) {\n        console.log(\"====================================\");\n        console.log({ blockUserToSystem: res });\n        console.log(\"====================================\");\n        actionType\n          ? this.props.blockUserToSystem(user_id, this.props.currentPage)\n          : this.props.unBlockUserToSystem(user_id, this.props.currentPage);\n\n        this.props.PushPopupAlert({\n          title: `User has been ${actionType ? \"blocked\" : \"activated\"}!`,\n          theme: PopupAlertTheme.info,\n        });\n      }\n    } catch (error) {\n      console.error({ blockUser_ERROR: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n\n    this.setLoadingRequest(false);\n    user_id = \"\";\n  };\n\n  restUserAccess = async (user_id: string) => {\n    if (!user_id) {\n      this.props.PushPopupAlert({\n        title: \"User Access is required doesn't exist\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    if (!window.confirm(`Are sure you want to reset to default access?`)) {\n      return this.setLoadingRequest(false);\n    }\n\n    this.setLoadingRequest(true);\n    this.setLoadingRequestType(\"RESET\");\n\n    try {\n      const res = await axios.delete(\n        `${API.USER}/access/custom/user/${user_id}`\n      );\n      res && this.props.resetUserAccess(user_id, this.props.currentPage);\n      let resetedAccess: UserInterface | undefined = this.props.users.find(\n        (user) => user.user_id === user_id\n      );\n      if (resetedAccess) {\n        resetedAccess.default_access &&\n          this.setUserAccess(resetedAccess.default_access.access);\n        this.props.PushPopupAlert({\n          title: `Resetting User Access complete successfully`,\n          theme: PopupAlertTheme.info,\n        });\n        this.setCurrentAccess(null);\n      }\n    } catch (error) {\n      console.error({ reseting_user_access: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n\n    this.setLoadingRequest(false);\n    this.setLoadingRequestType(null);\n    user_id = \"\";\n  };\n\n  distinctDistrict = (\n    location: RoomLocationInterface[],\n    province_id?: string\n  ): DistrictInterface[] => {\n    let ids: string[] = [],\n      result: DistrictInterface[] = [];\n\n    if (province_id) {\n      result = location.find((item) => item._id === province_id)\n        ? location.find((item) => item._id === province_id)!.districts\n          ? location.find((item) => item._id === province_id)!.districts\n          : []\n        : [];\n    } else {\n      for (const key in location) {\n        if (Object.prototype.hasOwnProperty.call(location, key)) {\n          for (const keyDistrict in location[key].districts) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                location[key].districts,\n                keyDistrict\n              )\n            ) {\n              if (!ids.includes(location[key].districts[keyDistrict]._id)) {\n                ids.push(location[key].districts[keyDistrict]._id);\n                result.push(location[key].districts[keyDistrict]);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return result;\n  };\n\n  render() {\n    const DATA_GetUser = this.props.users.find(\n      (user) => user.user_id === this.state.manageUserId\n    );\n    const DATA_GetRoleById =\n      DATA_GetUser && DATA_GetUser!.default_access\n        ? getRoleById(\n            this.props.roleList,\n            DATA_GetUser!.default_access!.system_user_role_id\n          )\n        : undefined;\n\n    const DATA_ThisRoom =\n      this.state.roomTable && DATA_GetUser\n        ? this.state.roomTable.find(\n            (room) => room.room_id === DATA_GetUser!.default_access?.room_id\n          )\n        : undefined;\n    return (\n      <div>\n        {!this.props.manageUser && (\n          <div className=\"grid md:grid-cols-5 gap-2 mb-5\">\n            <div className={`md:col-span-5 rounded`}>\n              <div className=\"my-2 flex sm:flex-row flex-col justify-between\">\n                <div className=\"flex flex-col md:flex-row gap-1 items-center mx-1.5\">\n                  {/* <span className=\"text-lg\">All User</span>\n                  <MdChevronRight className=\"w-7 h-7\" />\n                  <span className=\"text-lg underline\">All User</span> */}\n                </div>\n              </div>\n              {this.props.users && (\n                <Table\n                  columns={[\n                    { columnTitle: \"#\", alignText: \"left\", padding: \"p-3\" },\n                    { columnTitle: \"Names\", alignText: \"left\", padding: \"p-3\" },\n                    { columnTitle: \"Email\", alignText: \"left\", padding: \"p-3\" },\n                    {\n                      columnTitle: \"Gender\",\n                      alignText: \"left\",\n                      padding: \"p-3\",\n                    },\n                    { columnTitle: \"Role\", alignText: \"left\", padding: \"p-3\" },\n                    // { columnTitle: \"Status\", alignText: \"left\", padding: \"p-3\" },\n                    { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n                  ]}\n                  rows={this.tableData}\n                  pagination={false}\n                  search={true}\n                  thColor=\"gray\"\n                  loading={this.props.loadingUser || this.state.loading}\n                />\n              )}\n            </div>\n          </div>\n        )}\n\n        {/* -------------------------------------------------------- */}\n\n        {this.props.manageUser && (\n          <div className=\"bg-gray-100 h-100\">\n            {/* header */}\n            <div className=\"bg-white border-b border-t px-4 py-2 flex flex-col md:flex-row items-center gap-x-14\">\n              {DATA_GetUser ? (\n                <div\n                  key={DATA_GetUser!.user_id + Math.random()}\n                  className=\"flex flex-col md:flex-row md:items-start items-center w-full gap-3\"\n                >\n                  <img\n                    src={\n                      DATA_GetUser!.user_info.photo !== \"pic\"\n                        ? DATA_GetUser!.user_info.photo\n                        : profile\n                    }\n                    alt=\"\"\n                    className=\"rounded-full w-32 h-32\"\n                  />\n                  <div className=\"flex flex-col gap-1 items-start w-full\">\n                    <span className=\"text-2xl font-semibold\">\n                      {DATA_GetUser!.user_info.fname +\n                        \" \" +\n                        DATA_GetUser!.user_info.lname}\n                    </span>\n                    <div className=\"flex items-center\">\n                      <MdLock className=\"w-5 h-5\" />\n                      <span className=\"text-lg font-medium\">\n                        {DATA_GetRoleById && DATA_GetRoleById.role}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-1\">\n                      <span className=\"text-gray-500\">Level:</span>\n                      <span className=\"text-base font-medium\">\n                        {DATA_GetRoleById && DATA_GetRoleById.room_required\n                          ? \"Room\"\n                          : DATA_GetRoleById &&\n                            DATA_GetRoleById.education_institution_required\n                          ? \"Institute\"\n                          : \"-\"}\n                      </span>\n                    </div>\n                    {DATA_GetRoleById &&\n                    DATA_GetRoleById.education_institution_required ? (\n                      <div className=\"flex items-center gap-1\">\n                        <span className=\"text-gray-500\">Institute:</span>\n                        <span className=\"text-base font-medium\">\n                          {DATA_GetUser!.default_access &&\n                          this.props.schoolLevels.education_categories &&\n                          getInstituteById(\n                            this.props.schoolLevels.education_categories,\n                            DATA_GetUser!.default_access!\n                              .education_institution_id\n                          )\n                            ? getInstituteById(\n                                this.props.schoolLevels.education_categories,\n                                DATA_GetUser!.default_access!\n                                  .education_institution_id\n                              )!.education_category_title\n                            : \"Unknown Institute\"}\n                        </span>\n                      </div>\n                    ) : (\n                      DATA_GetRoleById &&\n                      DATA_GetRoleById.room_required && (\n                        <div className=\"flex items-center gap-1\">\n                          {/* <span className=\"text-gray-500\">Room:</span> */}\n                          <MdLocationOn className=\"text-gray-500\" />\n                          {DATA_ThisRoom && (\n                            <span className=\"text-base font-medium\">\n                              {DATA_ThisRoom?.district_name +\n                                \" - \" +\n                                DATA_ThisRoom?.center_name +\n                                \" - Room \" +\n                                DATA_ThisRoom?.room_name}\n                            </span>\n                          )}\n                        </div>\n                      )\n                    )}\n                  </div>\n                </div>\n              ) : (\n                <NoResult\n                  theme={NoResultThemes.Dark}\n                  value={\"User info not found\"}\n                />\n              )}\n              {DATA_GetUser && (\n                <div\n                  key={DATA_GetUser!.user_id + Math.random()}\n                  className=\"flex flex-col w-full\"\n                >\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-gray-500\">NID:</span>\n                    <span className=\"text-base font-medium\">\n                      {DATA_GetUser!.n_id}\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-gray-500\">Email:</span>\n                    <span className=\"text-base font-medium\">\n                      {DATA_GetUser!.email}\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-gray-500\">Phone:</span>\n                    <span className=\"text-base font-medium\">\n                      {DATA_GetUser!.phone_number}\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-gray-500\">Status:</span>\n                    <span className=\"text-base font-medium\">\n                      {DATA_GetUser!.is_active === false ? \"Blocked\" : \"Active\"}\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    {DATA_GetUser!.custome_access && (\n                      <button\n                        className={`px-2 py-1 font-semibold text-gray-50 inline-flex items-center rounded ${\n                          this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"RESET\"\n                            ? \"cursor-wait bg-gray-400\"\n                            : \"bg-gray-600\"\n                        }`}\n                        onClick={() =>\n                          this.restUserAccess(DATA_GetUser!.user_id)\n                        }\n                        disabled={this.state.loadingRequest}\n                      >\n                        <MdLock className=\"w-4 h-4 fill-current\" />\n                        <span>\n                          {this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"RESET\"\n                            ? \"Resetting...\"\n                            : \"Reset Access\"}\n                        </span>\n                      </button>\n                    )}\n                    {!this.props.changeRole && (\n                      <button\n                        className=\"bg-yellow-300 hover:bg-yellow-400 px-2 py-1 font-semibold text-black inline-flex items-center rounded\"\n                        onClick={() => this.props.setChangeRole(true)}\n                      >\n                        <MdLock className=\"w-4 h-4 fill-current\" />\n                        <span>Change Role</span>\n                      </button>\n                    )}\n                    {DATA_GetUser!.is_active ? (\n                      <button\n                        className={`px-2 py-1 font-semibold text-gray-100 inline-flex items-center rounded ${\n                          this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"STATUS\"\n                            ? \"cursor-wait bg-red-500\"\n                            : \"bg-red-700\"\n                        }`}\n                        onClick={() =>\n                          !this.state.loadingRequest &&\n                          this.props.manageUser &&\n                          this.blockUser(\n                            DATA_GetUser!.user_id,\n                            DATA_GetUser!.is_active\n                          )\n                        }\n                        disabled={this.state.loadingRequest}\n                      >\n                        <MdLock className=\"w-4 h-4 fill-current\" />\n                        <span>\n                          {this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"RESET\"\n                            ? \"Loading...\"\n                            : \"Block user\"}\n                        </span>\n                      </button>\n                    ) : (\n                      <button\n                        className={`px-2 py-1 font-semibold text-gray-100 inline-flex items-center rounded ${\n                          this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"STATUS\"\n                            ? \"cursor-wait bg-yellow-500\"\n                            : \"bg-yellow-700\"\n                        }`}\n                        onClick={() =>\n                          !this.state.loadingRequest &&\n                          this.props.manageUser &&\n                          this.blockUser(\n                            DATA_GetUser!.user_id,\n                            DATA_GetUser!.is_active\n                          )\n                        }\n                        disabled={this.state.loadingRequest}\n                      >\n                        <MdLock className=\"w-4 h-4 fill-current\" />\n                        <span>\n                          {this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"RESET\"\n                            ? \"Loading...\"\n                            : \"Re-Activate\"}\n                        </span>\n                      </button>\n                    )}\n                  </div>\n                </div>\n              )}\n            </div>\n            {/* end header */}\n\n            {/* content */}\n            {this.props.manageUser &&\n            this.state.roomList &&\n            this.props.changeRole ? (\n              <UserRole\n                userInfo={this.props.manageUser}\n                roleList={this.props.roleList}\n                district={this.distinctDistrict(this.state.roomList)}\n                roomList={this.state.roomList}\n                setChangeRole={this.props.setChangeRole}\n                currentPage={this.props.currentPage}\n              />\n            ) : (\n              <UserAccess\n                userInfo={getUserById(\n                  this.props.users,\n                  this.state.manageUserId\n                )}\n                manageUserId={this.state.manageUserId}\n                setUserAccess={this.setUserAccess}\n                userAccess={this.state.userAccess}\n                setCurrentAccess={this.setCurrentAccess}\n                currentAccess={this.state.currentAccess}\n                currentPage={this.props.currentPage}\n              />\n            )}\n            {/* end content */}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  schoolLevels,\n  locations,\n}: StoreState): {\n  schoolLevels: schoolLevelsStoreInterface;\n  allRoom: RoomLocationInterface[];\n} => {\n  return {\n    schoolLevels,\n    allRoom: locations.roomLocation,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    blockUserToSystem,\n    unBlockUserToSystem,\n    resetUserAccess,\n    getAllRoom,\n    PushPopupAlert,\n  })(UserList)\n);\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { capitalizeFirstLetter } from \"../../shared/dataTest\";\nimport { SystemUserRoleInterface } from \"../../shared/interfaces\";\nimport search from \"../../utils/search\";\n\n// const searchRole = (\n//   objList: SystemUserRoleInterface[],\n//   text: string\n// ): SystemUserRoleInterface[] => {\n//   return objList.filter(\n//     (product) => product.role.toLocaleLowerCase() === text.toLocaleLowerCase()\n//   );\n// };\n\ntype RoleListProps = {\n  setChooseRole: (value: boolean) => void;\n  roleList: SystemUserRoleInterface[];\n  handleSelectRole: (role_id: string, TYPE?: \"SELECT\" | \"DEFAULT\") => void;\n  loadindRequest: boolean;\n};\n\nconst RoleList: React.FC<RoleListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section className=\"border-2 rounded border-gray-400\">\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={props.roleList.length > 0 ? false : true}\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseRole(false);\n          }}\n        >\n          Close\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}\n\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {search(props.roleList, searchInput).length > 0 ? (\n          search(props.roleList, searchInput).map((role, index) => (\n            <section key={index + role.role}>\n              <div className=\"group flex items-center justify-between my-1 hover:bg-gray-100\">\n                <div\n                  className=\"p-1 w-full mr-2 cursor-pointer\"\n                  onClick={() => {\n                    props.setChooseRole(false);\n                    !props.loadindRequest &&\n                      props.handleSelectRole(role.system_user_role_id);\n                  }}\n                >\n                  <p className=\"text-sm font-medium text-black\">\n                    {capitalizeFirstLetter(role.role)}\n                  </p>\n                </div>\n                <button\n                  type=\"button\"\n                  className=\"bg-blue-200 group-hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                >\n                  Choose\n                </button>\n              </div>\n            </section>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No role available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default React.memo(RoleList);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { MdHighlightOff } from \"react-icons/md\";\nimport { TiInputChecked } from \"react-icons/ti\";\nimport { connect } from \"react-redux\";\nimport { schoolLevelsStoreInterface, PushPopupAlert } from \"../../actions\";\nimport { assignRoleToUserAccess } from \"../../actions/users\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport Loading from \"../../components/Loading/Loading\";\nimport Table from \"../../components/Table/Table\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport {\n  UserInterface,\n  SystemUserRoleInterface,\n  DistrictInterface,\n  RoomLocationInterface,\n  AssignRoleToUserActionInterface,\n  LocationRoomTableInterface,\n  RoleToUserInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport RoleList from \"./RoleList\";\nimport { LocationsInArray } from \"./UserList\";\nconst url = `${API.AUTH}/auth/user/access`;\n\ninterface AppProps {\n  currentPage: number;\n  userInfo: UserInterface;\n  roleList: SystemUserRoleInterface[];\n  district: DistrictInterface[];\n  assignRoleToUserAccess: Function;\n  roomList: RoomLocationInterface[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  setChangeRole: (value: boolean) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface AppState {\n  loading: boolean;\n  loadingForm: boolean;\n  loadingRequest: boolean;\n  roleId: string;\n  provinceId: string;\n  districtId: string;\n  roomId: string;\n  instituteId: string;\n  centerId: string;\n  selectedRole: SystemUserRoleInterface | null;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  chooseRole: boolean;\n}\n\nclass UserRole extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingForm: true,\n      loadingRequest: false,\n      roleId: \"\",\n      provinceId: \"\",\n      districtId: \"\",\n      roomId: \"\",\n      instituteId: \"\",\n      centerId: \"\",\n      selectedRole: null,\n      formError: null,\n      chooseRole: false,\n    };\n  }\n\n  setRoleId = (value: string) => {\n    this.setState({ roleId: value });\n  };\n\n  setSelectedRole = (value: SystemUserRoleInterface | null) => {\n    this.setState({ selectedRole: value });\n  };\n\n  setProvinceId = (value: string) => {\n    this.setState({ provinceId: value });\n  };\n\n  setDistrictId = (value: string) => {\n    this.setState({ districtId: value });\n  };\n\n  setCenterId = (value: string) => {\n    this.setState({ centerId: value });\n  };\n\n  setRoomId = (value: string) => {\n    this.setState({ roomId: value });\n  };\n\n  setLoadingForm = (value: boolean) => {\n    this.setState({ loadingForm: value });\n  };\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setInstituteId = (value: string) => {\n    this.setState({ instituteId: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n  setChooseRole = (value: boolean) => {\n    this.setState({ chooseRole: value });\n  };\n\n  setDefaultState = (\n    default_access: RoleToUserInterface,\n    role: SystemUserRoleInterface\n  ) => {\n    // SET DEFAULT PROVINCE && DISTRICT ID =======================\n    let LOAD_province: LocationRoomTableInterface | undefined;\n    let LOAD_district: DistrictInterface | undefined;\n    if (role.district_required && this.props.roomList) {\n      LOAD_district = this.distinctDistrict(this.props.roomList).find(\n        (item) => item._id === default_access!.district_id\n      );\n      LOAD_district && this.setProvinceId(LOAD_district.province_id);\n      LOAD_district && this.setDistrictId(default_access!.district_id);\n      this.setLoadingForm(false);\n    } else if (role.room_required && this.props.roomList) {\n      // SET DEFAULT PROVINCE && DISTRICT && ROOM ID =======================\n\n      LOAD_province = LocationsInArray(this.props.roomList).find(\n        (item) => item.room_id === default_access!.room_id\n      );\n      LOAD_province && this.setProvinceId(LOAD_province.province_id);\n      LOAD_province && this.setDistrictId(LOAD_province.district_id);\n      LOAD_province && this.setCenterId(LOAD_province.center_id);\n      this.setRoomId(default_access.room_id);\n      this.setLoadingForm(false);\n    } else {\n      this.setLoadingForm(false);\n    }\n  };\n\n  componentDidMount = () => {\n    if (this.props.roleList.length) {\n      if (this.props.userInfo.default_access && this.state.loadingForm) {\n        // SET DEFAULT ROLE ID =======================\n        if (!this.state.roleId.length) {\n          let result = this.props.roleList.find(\n            (role) =>\n              role.system_user_role_id ===\n              this.props.userInfo.default_access!.system_user_role_id\n          );\n          if (result) {\n            this.setRoleId(\n              this.props.userInfo.default_access.system_user_role_id\n            );\n            this.setSelectedRole(result);\n            this.setDefaultState(this.props.userInfo.default_access, result);\n          }\n        }\n\n        console.log(\"====================================\");\n        console.log({ vvvvv: this.props.userInfo.default_access });\n        console.log(\"====================================\");\n      }\n\n      if (this.state.selectedRole && this.props.userInfo.default_access) {\n        this.setDefaultState(\n          this.props.userInfo.default_access,\n          this.state.selectedRole\n        );\n      }\n\n      this.setLoading(false);\n    }\n  };\n\n  handleSelectRole = (\n    role_id: string,\n    TYPE: \"SELECT\" | \"DEFAULT\" = \"SELECT\"\n  ) => {\n    if (this.props.roleList) {\n      let result = this.props.roleList.find(\n        (role) => role.system_user_role_id === role_id\n      );\n      if (result) {\n        this.setRoleId(role_id);\n        this.setSelectedRole(result);\n        this.state.formError &&\n          this.state.formError.element === \"role_id\" &&\n          this.setFormError(null);\n\n        if (TYPE === \"SELECT\") {\n          this.setProvinceId(\"\");\n          this.setDistrictId(\"\");\n          this.setCenterId(\"\");\n          this.setRoomId(\"\");\n          this.setInstituteId(\"\");\n        }\n      }\n    }\n  };\n\n  tableData = (): JSX.Element[] => {\n    if (\n      this.state.roleId.length > 0 &&\n      this.state.selectedRole === null &&\n      this.props.roleList\n    ) {\n      this.handleSelectRole(this.state.roleId, \"DEFAULT\");\n    }\n    if (this.state.selectedRole) {\n      return this.state.selectedRole.access.map((access, i) => (\n        <tr\n          key={i + access.id + Math.random()}\n          className={`text-left border-b border-gray-200 hover:bg-gray-100`}\n        >\n          <td className=\"px-2 py-1\">\n            <label className=\"inline-flex items-center\">\n              <span className=\"text-gray-900 capitalize text-xl font-normal cursor-pointer\">\n                {access.task}\n              </span>\n            </label>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.create ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.create ? (\n                <TiInputChecked />\n              ) : (\n                <MdHighlightOff />\n              )}\n              {access.permitted.create ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.view ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.view ? <TiInputChecked /> : <MdHighlightOff />}\n              {access.permitted.view ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.update ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.update ? (\n                <TiInputChecked />\n              ) : (\n                <MdHighlightOff />\n              )}\n              {access.permitted.update ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.delete ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.delete ? (\n                <TiInputChecked />\n              ) : (\n                <MdHighlightOff />\n              )}\n              {access.permitted.delete ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n        </tr>\n      ));\n    }\n    const optionB = [\n      <tr key=\"55re\">\n        <td colSpan={5} className=\"text-center px-2 py-2\">\n          No Default Access Available on this Role.\n        </td>\n      </tr>,\n    ];\n    return optionB;\n  };\n\n  assignRoleToUser = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!window.confirm(`Are sure you want to change user role?`)) {\n      return false;\n    }\n\n    if (!this.state.selectedRole) {\n      return this.setFormError({\n        element: \"role_id\",\n        msg: \"User role is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.room_required === true &&\n      isEmptyOrSpaces(this.state.provinceId)\n    ) {\n      return this.setFormError({\n        element: \"province_id\",\n        msg: \"Province is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.education_institution_required === true &&\n      isEmptyOrSpaces(this.state.instituteId)\n    ) {\n      return this.setFormError({\n        element: \"institute_id\",\n        msg: \"Institute is required on this role!\",\n      });\n    }\n\n    if (\n      (this.state.selectedRole.room_required === true ||\n        this.state.selectedRole.district_required === true) &&\n      isEmptyOrSpaces(this.state.districtId)\n    ) {\n      return this.setFormError({\n        element: \"district_id\",\n        msg: \"District is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.room_required === true &&\n      isEmptyOrSpaces(this.state.centerId)\n    ) {\n      return this.setFormError({\n        element: \"center_id\",\n        msg: \"Center is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.room_required === true &&\n      isEmptyOrSpaces(this.state.roomId)\n    ) {\n      return this.setFormError({\n        element: \"room_id\",\n        msg: \"Room is required!\",\n      });\n    }\n    this.setLoadingRequest(true);\n    let formData: AssignRoleToUserActionInterface = {\n      user_id: this.props.userInfo.user_id,\n      data: {\n        system_user_role_id: this.state.roleId,\n        status: 1,\n        role: this.state.selectedRole.role,\n        access: this.state.selectedRole.access,\n        school_id: \"\",\n        district_id: \"\",\n        room_id: this.state.selectedRole.room_required ? this.state.roomId : \"\",\n        education_institution_id: this.state.selectedRole\n          .education_institution_required\n          ? this.state.instituteId\n          : \"\",\n      },\n    };\n\n    try {\n      const res = await axios.post(`${url}/addroletouser`, {\n        user_id: this.props.userInfo.user_id,\n        system_user_role_id: this.state.roleId,\n        status: 1,\n        role: this.state.selectedRole.role,\n        access: true,\n        school_id: \"\",\n        district_id:\n          this.state.selectedRole.district_required === true\n            ? this.state.districtId\n            : \"\",\n        room_id:\n          this.state.selectedRole.room_required === true\n            ? this.state.roomId\n            : \"\",\n        education_institution_id: this.state.selectedRole\n          .education_institution_required\n          ? this.state.instituteId\n          : \"\",\n      });\n      if (res) {\n        console.log(\"====================================\");\n        console.log({ assignRoleToUser: res });\n        console.log(\"====================================\");\n        this.props.assignRoleToUserAccess(formData, this.props.currentPage);\n        this.setLoadingRequest(false);\n        this.props.setChangeRole(false);\n        this.props.PushPopupAlert({\n          title: \"Assigning Role to User completed successfully\",\n          theme: PopupAlertTheme.success,\n        });\n      }\n    } catch (error) {\n      console.log({ role_error: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  distinctDistrict = (\n    location: RoomLocationInterface[],\n    province_id?: string\n  ): DistrictInterface[] => {\n    let ids: string[] = [],\n      result: DistrictInterface[] = [];\n\n    if (province_id) {\n      result = location.find((item) => item._id === province_id)\n        ? location.find((item) => item._id === province_id)!.districts\n          ? location.find((item) => item._id === province_id)!.districts\n          : []\n        : [];\n    } else {\n      for (const key in location) {\n        if (Object.prototype.hasOwnProperty.call(location, key)) {\n          for (const keyDistrict in location[key].districts) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                location[key].districts,\n                keyDistrict\n              )\n            ) {\n              if (!ids.includes(location[key].districts[keyDistrict]._id)) {\n                ids.push(location[key].districts[keyDistrict]._id);\n                result.push(location[key].districts[keyDistrict]);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return result;\n  };\n\n  distinctCenter = (\n    rooms: RoomLocationInterface[],\n    district_id: string\n  ): LocationRoomTableInterface[] => {\n    let ids: string[] = [],\n      result: LocationRoomTableInterface[] = [];\n\n    LocationsInArray(rooms).forEach((element) => {\n      if (\n        !ids.includes(element.center_id) &&\n        element.district_id === district_id\n      ) {\n        ids.push(element.center_id);\n        result.push(element);\n      }\n    });\n    return result;\n  };\n\n  distinctRoom = (\n    rooms: RoomLocationInterface[],\n    center_id: string\n  ): LocationRoomTableInterface[] => {\n    let ids: string[] = [],\n      result: LocationRoomTableInterface[] = [];\n\n    LocationsInArray(rooms).forEach((element) => {\n      if (!ids.includes(element.room_id) && element.center_id === center_id) {\n        ids.push(element.room_id);\n        result.push(element);\n      }\n    });\n    return result;\n  };\n\n  render() {\n    if (\n      this.state.loading === true ||\n      this.state.loadingForm ||\n      this.props.userInfo.default_access === null ||\n      this.state.roleId.length === 0 ||\n      this.state.selectedRole === null\n    ) {\n      return (\n        <div className=\"text-center py-7 font-bold text-3xl text-gray-400 animate-pulse\">\n          Loading...\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 py-2 md:py-4 px-2 md:px-0\">\n        {/* left panel */}\n        <div className=\"col-span-1 bg-white w-full overflow-x-auto border rounded\">\n          <div className=\"px-6 md:px-12 py-5 bg-white mx-auto rounded-2xl w-100\">\n            <h3 className=\"font-semibold text-2xl text-gray-800 mb-4\">\n              Change User Role\n            </h3>\n            {this.state.loadingForm ? (\n              <Loading />\n            ) : (\n              <form onSubmit={(e) => this.assignRoleToUser(e)}>\n                <div className=\"space-y-5\">\n                  <div className=\"space-y-2\">\n                    <label className=\"text-sm font-medium text-gray-700 tracking-wide\">\n                      User Role\n                    </label>\n\n                    {!this.state.chooseRole && (\n                      <div\n                        className={`w-full text-base bg-white text-grey-darker cursor-pointer border-2 px-4 py-3 rounded focus:outline-none focus:bg-gray-100 ${\n                          this.state.formError &&\n                          this.state.formError.element === \"role_id\"\n                            ? \"border-red-500\"\n                            : \"border-gray-400\"\n                        }`}\n                        onClick={() => {\n                          !this.state.loadingRequest &&\n                            this.setChooseRole(true);\n                          !this.state.loadingRequest && this.setFormError(null);\n                        }}\n                      >\n                        {this.state.selectedRole\n                          ? this.state.selectedRole.role\n                          : \"Select role\"}\n                      </div>\n                    )}\n\n                    {this.state.chooseRole && (\n                      <RoleList\n                        setChooseRole={this.setChooseRole}\n                        handleSelectRole={this.handleSelectRole}\n                        roleList={this.props.roleList}\n                        loadindRequest={this.state.loadingRequest}\n                      />\n                    )}\n\n                    {this.state.formError &&\n                      this.state.formError.element === \"role_id\" && (\n                        <span className=\"text-red-500\">\n                          {this.state.formError.msg}\n                        </span>\n                      )}\n                  </div>\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.education_institution_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Institute\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"institute_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setInstituteId(e.target.value);\n                            this.setProvinceId(\"\");\n                            this.setDistrictId(\"\");\n                            this.setCenterId(\"\");\n                            this.setRoomId(\"\");\n                            this.state.formError &&\n                              this.state.formError.element === \"institute_id\" &&\n                              this.setFormError(null);\n                          }}\n                          disabled={this.state.loadingRequest}\n                          value={this.state.instituteId}\n                        >\n                          <option value=\"\">Select institute</option>\n                          {this.props.schoolLevels.education_categories &&\n                          this.props.schoolLevels.education_categories.length >\n                            0 ? (\n                            this.props.schoolLevels.education_categories.map(\n                              (institute) => (\n                                <option\n                                  value={institute.education_institute_id}\n                                  key={\n                                    institute.education_institute_id +\n                                    Math.random()\n                                  }\n                                >\n                                  {institute.education_category_title}\n                                </option>\n                              )\n                            )\n                          ) : (\n                            <option value=\"\" disabled>\n                              No institute available\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"institute_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.room_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Province\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"province_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setProvinceId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"province_id\" &&\n                              this.setFormError(null);\n                            this.setDistrictId(\"\");\n                            this.setCenterId(\"\");\n                            this.setRoomId(\"\");\n                          }}\n                          value={this.state.provinceId}\n                          disabled={this.state.loadingRequest}\n                        >\n                          <option value=\"\">Select province</option>\n                          {this.props.roomList &&\n                            this.props.roomList.map((province) => (\n                              <option\n                                key={province._id + Math.random()}\n                                value={province._id}\n                              >\n                                {province.province_name}\n                              </option>\n                            ))}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"province_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n                  {this.state.selectedRole &&\n                    (this.state.selectedRole.district_required ||\n                      this.state.selectedRole.room_required) && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          District\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"district_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setDistrictId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"district_id\" &&\n                              this.setFormError(null);\n                            this.setCenterId(\"\");\n                            this.setRoomId(\"\");\n                          }}\n                          value={this.state.districtId}\n                          disabled={this.state.loadingRequest}\n                        >\n                          <option value=\"\">Select district</option>\n                          {this.props.roomList &&\n                          this.distinctDistrict(\n                            this.props.roomList,\n                            !isEmptyOrSpaces(this.state.provinceId)\n                              ? this.state.provinceId\n                              : undefined\n                          ).length > 0 ? (\n                            this.distinctDistrict(\n                              this.props.roomList,\n                              !isEmptyOrSpaces(this.state.provinceId)\n                                ? this.state.provinceId\n                                : undefined\n                            ).map((district) => (\n                              <option\n                                key={district._id + Math.random()}\n                                value={district._id}\n                              >\n                                {district.district_name}\n                              </option>\n                            ))\n                          ) : (\n                            <option value=\"\" disabled>\n                              No district found\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"district_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.room_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Center\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"center_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setCenterId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"center_id\" &&\n                              this.setFormError(null);\n                            this.setRoomId(\"\");\n                          }}\n                          disabled={this.state.loadingRequest}\n                          value={this.state.centerId}\n                        >\n                          <option value=\"\">Select center</option>\n                          {this.state.districtId &&\n                          this.state.districtId.length > 0 &&\n                          this.props.roomList &&\n                          this.distinctCenter(\n                            this.props.roomList,\n                            this.state.districtId\n                          ).length > 0 ? (\n                            this.distinctCenter(\n                              this.props.roomList,\n                              this.state.districtId\n                            ).map((center, index) => (\n                              <option\n                                value={center.center_id}\n                                key={center.center_id + index + Math.random()}\n                              >\n                                {center.center_name}\n                              </option>\n                            ))\n                          ) : (\n                            <option value=\"\" disabled>\n                              No center found\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"center_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.room_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Room\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"room_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setRoomId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"room_id\" &&\n                              this.setFormError(null);\n                          }}\n                          disabled={this.state.loadingRequest}\n                          value={this.state.roomId}\n                        >\n                          <option value=\"\">Select room</option>\n                          {!isEmptyOrSpaces(this.state.centerId) &&\n                          this.props.roomList &&\n                          this.distinctRoom(\n                            this.props.roomList,\n                            this.state.centerId\n                          ).length > 0 ? (\n                            this.distinctRoom(\n                              this.props.roomList,\n                              this.state.centerId\n                            ).map((room, index) => (\n                              <option\n                                value={room.room_id}\n                                key={room.room_id + index + Math.random()}\n                                className={`${\n                                  room.room_name === \"0\" ? \"hidden\" : \"block\"\n                                }`}\n                              >\n                                {room.room_name}\n                              </option>\n                            ))\n                          ) : (\n                            <option value=\"\" disabled>\n                              No room found\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"room_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  <div className=\"flex justify-between 2xl:justify-start gap-2\">\n                    <button\n                      className=\"btn bg-gray-500 text-gray-50 focus:outline-none\"\n                      onClick={() => {\n                        this.props.setChangeRole(false);\n                        this.setFormError(null);\n                        this.setProvinceId(\"\");\n                        this.setDistrictId(\"\");\n                        this.setCenterId(\"\");\n                        this.setRoomId(\"\");\n                      }}\n                      disabled={this.state.loadingRequest}\n                    >\n                      Back\n                    </button>\n                    <button\n                      className=\"btn btn-blue focus:outline-none\"\n                      // onClick={() => assignRoleToUser()}\n                      disabled={this.state.loadingRequest}\n                    >\n                      {this.state.loadingRequest ? \"Loading...\" : \"Save Change\"}\n                    </button>\n                  </div>\n                </div>\n              </form>\n            )}\n          </div>\n        </div>\n        {/* end left panel */}\n\n        {/* ------------------------------------------------------------ */}\n\n        {/* right panel */}\n        <div className=\"cols-span-1 md:col-span-2 bg-white w-full border rounded text-center p-2 hidden md:block\">\n          <div className=\"my-4\">\n            <span className=\"text-gray-600 font-semibold text-2xl\">\n              {this.state.selectedRole?.role}'s Default Access\n            </span>\n          </div>\n          {!this.state.loading && (\n            <div className=\"overflow-x-auto w-full\">\n              <Table\n                columns={[\n                  {\n                    columnTitle: \"Access Name\",\n                    alignText: \"left\",\n                    padding: \"p-3\",\n                  },\n                  { columnTitle: \"Create\", alignText: \"left\" },\n                  { columnTitle: \"View\", alignText: \"left\" },\n                  { columnTitle: \"Update\", alignText: \"left\" },\n                  { columnTitle: \"Delete\", alignText: \"left\" },\n                ]}\n                rows={this.tableData}\n                pagination={false}\n                search={false}\n                searchBG=\"bg-gray-50\"\n                thColor=\"gray\"\n                tableId=\"defaultAccess\"\n              />\n            </div>\n          )}\n        </div>\n        {/* end right panel */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  schoolLevels,\n}: StoreState): {\n  schoolLevels: schoolLevelsStoreInterface;\n} => {\n  return { schoolLevels };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    assignRoleToUserAccess,\n    PushPopupAlert,\n  })(UserRole)\n);\n","export default __webpack_public_path__ + \"static/media/blank_profile.c3f94521.png\";","import React from \"react\";\nimport Chart from \"react-apexcharts\";\n\ntype chartType = {\n  options: {\n    labels: string[];\n    legend?: ApexLegend;\n    plotOptions?: ApexPlotOptions;\n    colors?: any[];\n  };\n  series: number[];\n  width?: number;\n};\n\nconst PieChart: React.FC<chartType> = (props) => {\n  return (\n    <div className=\"donut\">\n      <Chart\n        options={props.options}\n        series={props.series}\n        type=\"donut\"\n        width={`${props.width ? props.width : \"380\"}`}\n      />\n    </div>\n  );\n};\n\nexport default React.memo(PieChart);\n","import React, { FC } from \"react\";\nimport { IconType } from \"react-icons\";\nimport { FaUsers } from \"react-icons/fa\";\nimport { toAnyDigit } from \"../../shared/dataTest\";\n\nexport type DashboardLabelItemInterface = {\n  // TITLE: Application or Exam or Shortlisted ....\n  title: string;\n  // ICON: FaExpand ....\n  icon: IconType;\n  // ICON COLOR: blue, indigo, gray ....\n  iconColor: string;\n  // COUNT: 0,1,2,3,5,23,563 ....\n  count: number;\n  // COUNT: 0,1,2,3,5,23,563 ....\n  countOver?: number;\n};\n\nconst DashboardLabelItem: FC<DashboardLabelItemInterface> = (\n  props = {\n    title: \"\",\n    icon: FaUsers,\n    iconColor: \"indigo\",\n    count: 0,\n    countOver: undefined,\n  }\n) => {\n  const IconDefined = props.icon;\n  return (\n    <div className=\"flex items-center px-6 py-4 bg-white w-full rounded-md space-x-2 mb-2 lg:mb-0 shadow-md\">\n      <div\n        className={`p-3 rounded-full bg-${props.iconColor}-200 bg-opacity-75`}\n      >\n        <IconDefined className={`h-8 w-8 text-${props.iconColor}-600`} />\n      </div>\n      <div>\n        <h1 className=\"text-3xl font-semibold text-gray-700\">\n          {toAnyDigit(props.count)}{\" \"}\n          {props.countOver && \"/ \" + toAnyDigit(props.countOver)}\n        </h1>\n        <span className=\"text-gray-500 text-lg\">{props.title}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(DashboardLabelItem);\n","import React, { useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { SessionPlanInterface } from \"../../../interfaces\";\nimport { course } from \"../../../interfaces/course\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport { ExamsParcentageSuccessFailedRateByPeriodInterface } from \"../../../interfaces/reports\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { DATE, sortThisArray } from \"../../../utils/functions\";\n\nexport interface ExamPerformanceToPrintInterface {\n  course_id: number;\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string;\n  exam_period: string;\n  exam_date: string;\n  exam_time: string;\n  exam_duration: string;\n  exam_performance: number;\n}\n\nexport enum examPerformanceReportContentKeyInterface {\n  COURSER_NAME = \"course_name\",\n  COURSE_CODE = \"course_code\",\n  SCHOOL_LEVEL = \"school_levels\",\n  PERIOD = \"exam_period\",\n  DATE = \"exam_date\",\n  TIME = \"exam_time\",\n  DURATION = \"exam_duration\",\n  PERFORMANCE = \"exam_performance\",\n}\n\nexport interface examPerformanceReportContentInterface {\n  key: examPerformanceReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n\nexport const examPerformanceIsChangeAllowed = (\n  key: examPerformanceReportContentKeyInterface\n): boolean => {\n  if (\n    key === examPerformanceReportContentKeyInterface.COURSER_NAME ||\n    key === examPerformanceReportContentKeyInterface.COURSE_CODE ||\n    key === examPerformanceReportContentKeyInterface.PERIOD ||\n    key === examPerformanceReportContentKeyInterface.PERFORMANCE\n  ) {\n    return false;\n  }\n  return true;\n};\n\nexport const defaultExamPerformanceContent: examPerformanceReportContentInterface[] =\n  [\n    {\n      key: examPerformanceReportContentKeyInterface.COURSER_NAME,\n      title: \"Course names\",\n      status: true,\n    },\n    {\n      key: examPerformanceReportContentKeyInterface.COURSE_CODE,\n      title: \"Course code\",\n      status: true,\n    },\n    {\n      key: examPerformanceReportContentKeyInterface.SCHOOL_LEVEL,\n      title: \"School levels\",\n      status: true,\n    },\n    {\n      key: examPerformanceReportContentKeyInterface.PERIOD,\n      title: \"Exam period\",\n      status: true,\n    },\n    {\n      key: examPerformanceReportContentKeyInterface.DATE,\n      title: \"Exam date\",\n      status: true,\n    },\n    {\n      key: examPerformanceReportContentKeyInterface.TIME,\n      title: \"Exam time\",\n      status: true,\n    },\n    {\n      key: examPerformanceReportContentKeyInterface.DURATION,\n      title: \"Exam duration\",\n      status: true,\n    },\n    {\n      key: examPerformanceReportContentKeyInterface.PERFORMANCE,\n      title: \"Exam performance\",\n      status: true,\n    },\n  ];\n\nexport interface examPerformanceStateInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n  exam: ExamItemResponse | null;\n  exam_performance: number;\n}\n\nexport const FC_reportExamPerformanceData = (\n  allCourses: course[],\n  allExams: ExamItemResponse[],\n  examPerformance: ExamsParcentageSuccessFailedRateByPeriodInterface[]\n): examPerformanceStateInterface[] => {\n  let result: examPerformanceStateInterface[] = [],\n    ids: string[] = [];\n  for (const key in examPerformance) {\n    if (Object.prototype.hasOwnProperty.call(examPerformance, key)) {\n      if (ids.includes(examPerformance[key].answer_sheet_id)) continue;\n      ids.push(examPerformance[key].answer_sheet_id);\n      let courser = allCourses.find(\n        (item) => item.course_id === examPerformance[key].course\n      );\n      if (courser) {\n        let exam = allExams.find(\n          (item) =>\n            item.course === examPerformance[key].course &&\n            item.period === examPerformance[key].period\n        );\n        result.push({\n          course_name: courser.course_name,\n          course_code: courser.course_code,\n          description: courser.description,\n          school_levels: courser.school_levels,\n          course_id: courser.course_id,\n          exam: exam ? exam : null,\n          exam_performance: examPerformance[key].total_marks,\n        });\n      }\n    }\n  }\n  console.log(\"===============-----------------=====================\");\n  console.log({ result });\n  console.log(\"===============-----------------=====================\");\n  return result;\n};\n\nexport const searchExamPerformanceData = (\n  objList: examPerformanceStateInterface[],\n  text: string\n): examPerformanceStateInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (\n        prop === \"course_name\" ||\n        prop === \"course_code\" ||\n        prop === \"exam_performance\"\n      ) {\n        flag =\n          product[prop].toString().toLowerCase().indexOf(text.toLowerCase()) >\n          -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n};\n\ntype ExamPerformanceProps = {\n  loading: boolean;\n  examsListData: ExamItemResponse[] | null;\n  courseListData: course[] | null;\n  thisPeriod: SessionPlanInterface[];\n  examsPerformanceData:\n    | ExamsParcentageSuccessFailedRateByPeriodInterface[]\n    | null;\n};\n\nconst ExamPerformance: React.FC<ExamPerformanceProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const [isSorted, setIsSorted] = useState<boolean>(false);\n  const [sortProperty, setSortProperty] = useState<string>(\"\");\n  const [sortOrder, setSortOrder] = useState<\"ASC\" | \"DESC\">(\"ASC\");\n\n  const setSort = (thisProperty: string) => {\n    if (sortProperty === thisProperty && sortOrder === \"ASC\") {\n      setSortOrder(\"DESC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    } else {\n      setSortOrder(\"ASC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"bg-white my-4\">\n        <div className=\"w-full px-2 py-2\">\n          <input\n            onChange={(e) => setSearchInput(e.target.value)}\n            type=\"text\"\n            value={searchInput}\n            placeholder=\"Search...\"\n            className=\"w-full bg-gray-100 py-2 px-3 rounded\"\n            disabled={\n              props.courseListData &&\n              props.examsListData &&\n              props.examsPerformanceData &&\n              FC_reportExamPerformanceData(\n                props.courseListData,\n                props.examsListData,\n                props.examsPerformanceData\n              ).length <= 0\n                ? true\n                : false\n            }\n          />\n        </div>\n        <div className=\"w-full overflow-x-auto\">\n          <table className=\"w-full shadow\" id=\"report_content\">\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n              <tr>\n                <td className=\"px-2 py-2\">#</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"course_name\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Course <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">Exam date</td>\n                <td className=\"px-2 py-2\">Exam time</td>\n                <td className=\"px-2 py-2\">Exam duration</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"exam_performance\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Exam performance <BiSort />\n                  </div>\n                </td>\n              </tr>\n            </thead>\n            <tbody>\n              {props.courseListData === null || props.loading ? (\n                <tr>\n                  <td colSpan={6} className=\"px-2 py-2\">\n                    <Loading />\n                  </td>\n                </tr>\n              ) : props.examsListData &&\n                props.examsPerformanceData &&\n                FC_reportExamPerformanceData(\n                  props.courseListData,\n                  props.examsListData,\n                  props.examsPerformanceData\n                ).length <= 0 ? (\n                <tr>\n                  <td colSpan={6} className=\"px-2 py-2 text-center\">\n                    No Exam list available!\n                  </td>\n                </tr>\n              ) : (\n                props.examsListData &&\n                props.examsPerformanceData &&\n                sortThisArray(\n                  isSorted,\n                  searchExamPerformanceData(\n                    FC_reportExamPerformanceData(\n                      props.courseListData,\n                      props.examsListData,\n                      props.examsPerformanceData\n                    ),\n                    searchInput\n                  ),\n                  sortProperty,\n                  sortOrder\n                ).map((item: examPerformanceStateInterface, i) => (\n                  <tr\n                    key={i + 1}\n                    className={`bg-white text-gray-600 hover:bg-blue-100 hover:text-blue-700 border-b border-gray-300 hover:border-blue-500 text-sm`}\n                  >\n                    <td className=\"px-2 py-2\">{i + 1}</td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(item.course_name)} (\n                      <span className=\"font-semibold\">{item.course_code}</span>)\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam ? DATE(item.exam.exam_date) : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam ? item.exam.start_time : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam ? item.exam!.duration + \" min\" : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {Number(item.exam_performance.toFixed(1)) + \"%\"}\n                    </td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default React.memo(ExamPerformance);\n","import React from \"react\";\nimport DashboardLabelItem, {\n  DashboardLabelItemInterface,\n} from \"../DashboardLabelItem\";\n\ntype DashboardLabelProps = {\n  dataLabels: DashboardLabelItemInterface[];\n  labelsOnRow?: number;\n  childrenPosition?: \"START\" | \"END\";\n  children?: JSX.Element;\n};\n\nconst ExamDashboardLabels: React.FC<DashboardLabelProps> = (props) => {\n  const numCols: number = props.labelsOnRow\n    ? props.labelsOnRow > 4\n      ? props.labelsOnRow\n      : 4\n    : 4;\n  return (\n    <div\n      className={`grid 2xl:grid-cols-${numCols} xl:grid-cols-${\n        numCols - 1\n      } lg:grid-cols-${numCols - 2} md:grid-cols-${\n        numCols - 3\n      } sm:grid-cols-2 grid-cols-1 gap-4 items-center mx-auto`}\n    >\n      {props.children &&\n        ((props.childrenPosition && props.childrenPosition === \"START\") ||\n          !props.childrenPosition) &&\n        props.children}\n      {props.dataLabels.map((item, index) => (\n        <section key={index + item.title}>\n          <DashboardLabelItem\n            title={item.title}\n            icon={item.icon}\n            iconColor={item.iconColor}\n            count={item.count}\n          />\n        </section>\n      ))}\n      {props.children &&\n        props.childrenPosition &&\n        props.childrenPosition === \"END\" &&\n        props.children}\n    </div>\n  );\n};\n\nexport default React.memo(ExamDashboardLabels);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { BiRightArrowAlt } from \"react-icons/bi\";\nimport {\n  MdDelete,\n  MdEdit,\n  MdHighlightOff,\n  MdRemoveRedEye,\n  MdSettings,\n} from \"react-icons/md\";\nimport { SiAddthis } from \"react-icons/si\";\nimport { TiInputChecked } from \"react-icons/ti\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { customizeUserAccess } from \"../../actions/users\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport Table from \"../../components/Table/Table\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport {\n  UserInterface,\n  AccessTaskInterface,\n  CustomeAccessInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\n\ninterface AppProps {\n  userInfo: UserInterface | undefined;\n  manageUserId: string;\n  setUserAccess: (value: AccessTaskInterface[] | null) => void;\n  userAccess: AccessTaskInterface[] | null;\n  setCurrentAccess: (value: AccessTaskInterface | null) => void;\n  currentAccess: AccessTaskInterface | null;\n  currentPage: number;\n\n  // REDUX ==============\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  customizeUserAccess: Function;\n}\n\ninterface AppStates {\n  loading: boolean;\n  loadindRequest: boolean;\n  // currentAccess:AccessTaskInterface | null;\n  // userAccess:AccessTaskInterface[] | null;\n  createPermission: boolean;\n  viewPermission: boolean;\n  updatePermission: boolean;\n  deletePermission: boolean;\n}\n\nclass _UserAccess extends Component<AppProps, AppStates> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadindRequest: false,\n      // currentAccess:null,\n      // userAccess:null,\n      createPermission: false,\n      viewPermission: false,\n      updatePermission: false,\n      deletePermission: false,\n    };\n  }\n\n  setViewPermission = (value: boolean) => {\n    this.setState({ viewPermission: value });\n  };\n\n  setLoadindRequest = (value: boolean) => {\n    this.setState({ loadindRequest: value });\n  };\n\n  setCreatePermission = (value: boolean) => {\n    this.setState({ createPermission: value });\n  };\n\n  setUpdatePermission = (value: boolean) => {\n    this.setState({ updatePermission: value });\n  };\n\n  setDeletePermission = (value: boolean) => {\n    this.setState({ deletePermission: value });\n  };\n\n  setLoadind = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  overrideUserAccess = (\n    default_access: AccessTaskInterface[],\n    custome_access: AccessTaskInterface[]\n  ) => {\n    if (default_access && custome_access && custome_access.length > 0) {\n      let overideAccess: AccessTaskInterface[] = [];\n      for (const key in default_access) {\n        if (Object.prototype.hasOwnProperty.call(default_access, key)) {\n          const findCustom = custome_access.find(\n            (custom) => custom.id === default_access[key].id\n          );\n          if (findCustom) {\n            overideAccess.push(findCustom);\n          } else {\n            overideAccess.push(default_access[key]);\n          }\n        }\n      }\n      this.props.setUserAccess(overideAccess);\n    }\n  };\n\n  componentDidMount = () => {\n    if (this.props.userInfo && this.props.userInfo.custome_access) {\n      this.props.userInfo.default_access &&\n        this.overrideUserAccess(\n          this.props.userInfo.default_access.access,\n          this.props.userInfo.custome_access.access\n        );\n      this.setLoadind(false);\n    } else {\n      this.props.userInfo &&\n        this.props.userInfo.default_access &&\n        this.props.setUserAccess(this.props.userInfo.default_access.access);\n      this.setLoadind(false);\n    }\n  };\n\n  tableData = (): JSX.Element[] => {\n    if (!this.props.userAccess)\n      return [\n        <tr key={Math.random()}>\n          <td>No data</td>\n        </tr>,\n      ];\n    return this.props.userAccess.map((access: AccessTaskInterface, i) => (\n      <tr\n        key={i + access.id + Math.random()}\n        className={`text-left border-b border-gray-200 cursor-pointer hover:bg-gray-100 ${\n          this.props.currentAccess &&\n          this.props.currentAccess.id === access.id &&\n          \"bg-gray-200 border my-3 hover:bg-gray-100\"\n        }`}\n        onClick={() =>\n          this.props.currentAccess && this.props.currentAccess.id === access.id\n            ? (this.props.setCurrentAccess(null),\n              this.setCreatePermission(false),\n              this.setViewPermission(false),\n              this.setUpdatePermission(false),\n              this.setDeletePermission(false))\n            : (this.props.setCurrentAccess(access),\n              this.setCreatePermission(access.permitted.create),\n              this.setViewPermission(access.permitted.view),\n              this.setUpdatePermission(access.permitted.update),\n              this.setDeletePermission(access.permitted.delete))\n        }\n      >\n        <td className=\"px-2 py-1\">\n          <label className=\"inline-flex items-center\">\n            {/* <input\n              type=\"radio\"\n              name=\"taskAccess\"\n              value={access.id}\n              className=\"form-radio h-4 w-4 text-gray-600\"\n              onChange={() => {\n                currentAccess\n                  ? this.setState({ currentAccess: null })\n                  : this.setState({ currentAccess: access });\n              }}\n              checked={currentAccess ? true : false}\n            /> */}\n            <span className=\"text-gray-900 capitalize text-xl font-normal cursor-pointer\">\n              {access.task}\n            </span>\n          </label>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.create ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.create ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.create ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.view ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.view ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.view ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.update ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.update ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.update ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.delete ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.delete ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.delete ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n      </tr>\n    ));\n  };\n\n  handleCustomization = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (this.props.userInfo) {\n      this.setLoadindRequest(true);\n      let task: [] | CustomeAccessInterface | null = null;\n      task = this.props.userInfo.custome_access;\n      let index = -1;\n\n      try {\n        if (task && this.props.currentAccess) {\n          index = task.access.findIndex(\n            (access) => access.id === this.props.currentAccess!.id\n          );\n          if (index >= 0) {\n            task.access[index].permitted.create = this.state.createPermission;\n            task.access[index].permitted.view = this.state.viewPermission;\n            task.access[index].permitted.update = this.state.updatePermission;\n            task.access[index].permitted.delete = this.state.deletePermission;\n          } else {\n            task.access.push({\n              id: this.props.currentAccess.id,\n              task: this.props.currentAccess.task,\n              key: this.props.currentAccess.key,\n              permitted: {\n                create: this.state.createPermission,\n                view: this.state.viewPermission,\n                update: this.state.updatePermission,\n                delete: this.state.deletePermission,\n              },\n            });\n          }\n        } else if (this.props.currentAccess) {\n          task = {\n            access: [\n              {\n                id: this.props.currentAccess.id,\n                task: this.props.currentAccess.task,\n                key: this.props.currentAccess.key,\n                permitted: {\n                  create: this.state.createPermission,\n                  view: this.state.viewPermission,\n                  update: this.state.updatePermission,\n                  delete: this.state.deletePermission,\n                },\n              },\n            ],\n            user_id: this.props.userInfo.user_id,\n            custome_user_access_id: \"\",\n          };\n        }\n\n        if (task) {\n          let res;\n          if (this.props.userInfo.custome_access !== null) {\n            res = await axios.patch<{ data: CustomeAccessInterface }>(\n              `${API.USER}/access/custom`,\n              {\n                access: task.access,\n                user_id: this.props.userInfo.user_id,\n              }\n            );\n          } else {\n            res = await axios.post<{ data: CustomeAccessInterface }>(\n              `${API.USER}/access/custom`,\n              {\n                access: task.access,\n                user_id: this.props.userInfo.user_id,\n              }\n            );\n          }\n\n          if (res) {\n            task.custome_user_access_id = res.data.data.custome_user_access_id;\n\n            this.props.customizeUserAccess(task, this.props.currentPage);\n            task &&\n              this.props.userInfo.default_access &&\n              this.overrideUserAccess(\n                this.props.userInfo.default_access.access,\n                task.access\n              );\n            this.props.PushPopupAlert({\n              title: `Resetting User Access complete successfully`,\n              theme: PopupAlertTheme.info,\n            });\n\n            task = null;\n            this.props.setCurrentAccess(null);\n            this.setCreatePermission(false);\n            this.setViewPermission(false);\n            this.setUpdatePermission(false);\n            this.setDeletePermission(false);\n          }\n        }\n      } catch (error) {\n        console.error({ customize_access: error });\n        this.props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      this.setLoadindRequest(false);\n    }\n  };\n\n  render() {\n    if (this.props.userInfo === undefined) {\n      return <Redirect to=\"/users\" />;\n    }\n\n    if (this.state.loading || this.props.userInfo === null) {\n      return (\n        <div className=\"text-center py-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading User Access...\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4 mx-1 my-2\">\n          <div\n            className={`col-span-1 md:col-span-3 bg-white w-full overflow-x-auto border rounded text-center p-2 ${\n              this.props.currentAccess ? \"hidden md:block\" : \"\"\n            }`}\n          >\n            <span className=\"text-gray-600 mt-2 font-semibold text-2xl\">\n              Settings\n            </span>\n            {!this.state.loading && (\n              <div className=\"overflow-x-auto w-full\">\n                <Table\n                  columns={[\n                    {\n                      columnTitle: \"Access Name\",\n                      alignText: \"left\",\n                      padding: \"p-3\",\n                    },\n                    { columnTitle: \"Create\", alignText: \"left\" },\n                    { columnTitle: \"View\", alignText: \"left\" },\n                    { columnTitle: \"Update\", alignText: \"left\" },\n                    { columnTitle: \"Delete\", alignText: \"left\" },\n                  ]}\n                  rows={this.tableData}\n                  pagination={false}\n                  search={true}\n                  searchBG=\"bg-gray-50\"\n                  thColor=\"gray\"\n                />\n              </div>\n            )}\n          </div>\n          <div className={`col-span-1 md:col-span-2`}>\n            {!this.props.currentAccess ? (\n              <div className=\"w-full hidden md:flex flex-col items-center text-gray-600 gap-1 py-3\">\n                <MdSettings className=\"w-20 h-20\" />\n                <span className=\"text-8 md:text-12\">\n                  Choose Access to Customize\n                </span>\n              </div>\n            ) : (\n              <div className={``}>\n                <h1 className=\"text-2xl md:text-3xl font-semibold text-center my-2 text-gray-900\">\n                  Customize User Access\n                </h1>\n                <div className=\"flex justify-center mb-3\">\n                  <h2 className=\"text-2xl font-semibold text-center text-gray-600 flex flex-row items-center\">\n                    <BiRightArrowAlt className=\"w-7 h-7\" />\n                    {this.props.currentAccess.task}\n                  </h2>\n                </div>\n\n                <div className=\"flex flex-col px-2 md:px-1\">\n                  <form\n                    className=\"flex flex-col items-center\"\n                    onSubmit={(e) => this.handleCustomization(e)}\n                  >\n                    <div className=\"inline-flex gap-2 items-center\">\n                      <SiAddthis className=\"w-7 h-7 text-gray-600\" />\n                      <div className=\"flex flex-col\">\n                        <h3 className=\"font-semibold text-xl\">Create</h3>\n                        <span className=\"text-gray-600 text-sm md:pr-1\">\n                          This permission gives the user the ability to create\n                        </span>\n                      </div>\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-checkbox h-7 w-7 text-teal-600\"\n                        onChange={() =>\n                          this.setCreatePermission(!this.state.createPermission)\n                        }\n                        checked={this.state.createPermission}\n                        disabled={this.state.loadindRequest}\n                      />\n                    </div>\n                    <div className=\"inline-flex gap-2 items-center\">\n                      <MdRemoveRedEye className=\"w-7 h-7 text-gray-600\" />\n                      <div className=\"flex flex-col\">\n                        <h3 className=\"font-semibold text-xl\">View</h3>\n                        <span className=\"text-gray-600 text-sm md:pr-4\">\n                          This permission gives the user the ability to view\n                        </span>\n                      </div>\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-checkbox h-7 w-7 text-teal-600\"\n                        onChange={() =>\n                          this.setViewPermission(!this.state.viewPermission)\n                        }\n                        checked={this.state.viewPermission}\n                        disabled={this.state.loadindRequest}\n                      />\n                    </div>\n                    <div className=\"inline-flex gap-2 items-center\">\n                      <MdEdit className=\"w-7 h-7 text-gray-600\" />\n                      <div className=\"flex flex-col\">\n                        <h3 className=\"font-semibold text-xl\">Update</h3>\n                        <span className=\"text-gray-600 text-sm\">\n                          This permission gives the user the ability to update\n                        </span>\n                      </div>\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-checkbox h-7 w-7 text-teal-600\"\n                        onChange={() =>\n                          this.setUpdatePermission(!this.state.updatePermission)\n                        }\n                        checked={this.state.updatePermission}\n                        disabled={this.state.loadindRequest}\n                      />\n                    </div>\n                    <div className=\"inline-flex gap-2 items-center\">\n                      <MdDelete className=\"w-7 h-7 text-gray-600\" />\n                      <div className=\"flex flex-col\">\n                        <h3 className=\"font-semibold text-xl\">Delete</h3>\n                        <span className=\"text-gray-600 text-sm md:pr-1\">\n                          This permission gives the user the ability to delete\n                        </span>\n                      </div>\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-checkbox h-7 w-7 text-teal-600\"\n                        onChange={() =>\n                          this.setDeletePermission(!this.state.deletePermission)\n                        }\n                        checked={this.state.deletePermission}\n                        disabled={this.state.loadindRequest}\n                      />\n                    </div>\n\n                    <div className=\"flex items-center justify-center w-full py-3 gap-2\">\n                      {/* <button className=\"btn btn-secondary bg-red-600\">Back</button> */}\n                      <button\n                        className=\"btn bg-gray-500 hover:bg-gray-700 focus:outline-none text-white\"\n                        disabled={this.state.loadindRequest}\n                        onClick={() => {\n                          this.props.setCurrentAccess(null);\n                          this.setCreatePermission(false);\n                          this.setViewPermission(false);\n                          this.setUpdatePermission(false);\n                          this.setDeletePermission(false);\n                        }}\n                      >\n                        Cancel\n                      </button>\n                      <button\n                        className=\"btn btn-blue\"\n                        disabled={this.state.loadindRequest}\n                      >\n                        {!this.state.loadindRequest\n                          ? \"Save Change\"\n                          : \"Processing..\"}\n                      </button>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const UserAccess = React.memo(\n  connect(null, {\n    customizeUserAccess,\n    PushPopupAlert,\n  })(_UserAccess)\n);\n","import React, { Fragment, useState } from \"react\";\nimport { AiFillDashboard } from \"react-icons/ai\";\nimport { MdBrightness1 } from \"react-icons/md\";\nimport { SessionPlanInterface } from \"../../../interfaces\";\nimport { education_category } from \"../../../interfaces/education_category\";\nimport { reportTitleType } from \"../../Admin/ExamReport/ExamReport\";\nimport ExamReportModals, {\n  ModalForTypes,\n} from \"../../Admin/ExamReport/ExamReportModals\";\n\ntype ExamReportTitleProps = {\n  // FOR SETTINGS ==============================\n  loading: boolean;\n\n  // FOR REPORT TYPE =========================\n  reportTitle: reportTitleType;\n  setReportTitle: (title: reportTitleType) => void;\n\n  //   FOR EDUCATION CATEGORY & PERIOD =====================\n  education_categories: education_category[] | null;\n  loadingEducation: boolean;\n  thisEducation: education_category | null;\n  setThisEducation: (value: education_category | null) => void;\n\n  //   FOR APPLICATION SESSION ============================\n  thisPeriod: string;\n  setThisPeriod: (value: string) => void;\n  application_sessions: SessionPlanInterface[];\n  onPeriodChange?: (period_id: string) => void;\n};\n\nconst ExamDashboardTitle: React.FC<ExamReportTitleProps> = (props) => {\n  const [changeReport, setChangeReport] = useState<boolean>(false);\n\n  return (\n    <Fragment>\n      <div className=\"mt-3 rounded flex flex-col md:flex-row md:justify-between items-start\">\n        <div className=\"flex flex-row items-center gap-3 mb-2\">\n          <AiFillDashboard className=\"text-7xl text-blue-600 hidden md:block\" />\n          <div className=\"flex flex-col\">\n            <span className=\"text-blue-600 text-3xl font-bold\">\n              Exam Dashboard\n            </span>\n            {false && (\n              <div\n                onClick={() => setChangeReport(true)}\n                className=\"flex flex-row gap-2\"\n              >\n                <span className=\"text-gray-500\">Report type: </span>\n                <span className=\"text-gray-600 font-bold underline cursor-pointer\">\n                  {props.reportTitle}\n                </span>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* FILTER SECTION PERIOD && EDUCATION */}\n        <section className=\"w-full md:w-auto my-2 md:my-0\">\n          {/* EDUCATION CATEGORY sections */}\n          <section className=\"flex items-start md:items-center justify-start md:justify-end gap-2\">\n            {props.education_categories &&\n              props.education_categories.length > 0 &&\n              props.education_categories.map((education, index) => (\n                <section\n                  key={education.education_institute_id + index}\n                  className={`w-auto ${\n                    props.loading || props.loadingEducation\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } ${\n                    props.thisEducation &&\n                    education.education_institute_id ===\n                      props.thisEducation.education_institute_id\n                      ? \"bg-blue-500 text-white font-bold\"\n                      : \"bg-gray-100 text-blue-800\"\n                  } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex items-center animate__animated animate__zoomIn`}\n                  onClick={() =>\n                    !props.loading &&\n                    !props.loadingEducation &&\n                    props.setThisEducation(education)\n                  }\n                >\n                  <section className=\"flex-1\">\n                    <MdBrightness1 className=\"inline-block mr-1 text-xs\" />\n                    <span>{education.education_category_title}</span>\n                  </section>\n\n                  {/* {count > 0 ? ( */}\n                  {/* <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n              12\n            </span> */}\n                  {/* ) : null} */}\n                </section>\n              ))}\n          </section>\n          {/* end EDUCATION CATEGORY sections */}\n          <div>\n            <select\n              className={`bg-white text-gray-600 border border-gray-400 rounded p-2 focus:outline-none ${\n                props.loading && \"cursor-wait\"\n              }`}\n              value={props.thisPeriod}\n              disabled={props.loading || props.loadingEducation}\n              onChange={(e) => {\n                props.setThisPeriod(e.target.value);\n                props.onPeriodChange && props.onPeriodChange(e.target.value);\n                // props.setLoadingApplications(true);\n                // props.GetApplicationPerPeriod(\n                //   e.target.value,\n                //   (status: boolean, msg: string) => {\n                //     props.setLoadingApplications(status);\n                //     if (!status && msg.length > 0) {\n                //       props.PushPopupAlert({\n                //         title: errorToText(msg),\n                //         theme: PopupAlertTheme.danger,\n                //       });\n                //     }\n                //   }\n                // );\n              }}\n            >\n              {props.application_sessions.map((session, item) => (\n                <option key={session._id + item} value={session._id}>\n                  {session.session_plan_name}\n                </option>\n              ))}\n            </select>\n          </div>\n        </section>\n        {/* END FILTER SECTION PERIOD && EDUCATION */}\n      </div>\n      {/* CHANGE REPORT TYPE MODAL CONTROLLERS ============================================ */}\n      {changeReport && (\n        <ExamReportModals\n          modalFor={ModalForTypes.title}\n          modalState={changeReport}\n          reportTitle={props.reportTitle}\n          changeModalState={setChangeReport}\n          setReportTitle={props.setReportTitle}\n        />\n      )}\n      {/* END CHANGE REPORT TYPE MODAL CONTROLLERS ============================================ */}\n    </Fragment>\n  );\n};\n\nexport default React.memo(ExamDashboardTitle);\n","import React, { Component } from \"react\";\nimport { examPreparationStateInterface } from \"../../Admin/ExamReport/ExamList\";\nimport VBarChart from \"../ChartComponents/VBarChart\";\n\ntype ExamPreparationChartProps = {\n  examPreparationProgress: {\n    all: examPreparationStateInterface[];\n    finished: examPreparationStateInterface[];\n    remaining: examPreparationStateInterface[];\n  };\n};\n\nclass ExamPreparationChart extends Component<ExamPreparationChartProps> {\n  render() {\n    return (\n      <div className=\"my-3 max-w-full bg-white\">\n        <div className=\"flex items-center justify-between px-3\">\n          <span className=\"text-gray-600 font-semibold text-xl py-4 px-0\">\n            Exams preparation chart\n          </span>\n        </div>\n\n        <div className=\"mb-4 pb-2 px-3\">\n          <VBarChart\n            labels={[\"Remaining exams\", \"Prepared exams\"]}\n            categoriesLabel={[\"Exam preparation progress\"]}\n            dataLabels={true}\n            yaxisText=\"Exam preparation progress\"\n            tooltipText=\"(Exams)\"\n            series={[\n              {\n                name: \"Remaining exams\",\n                data: [this.props.examPreparationProgress.remaining.length],\n              },\n              {\n                name: \"Prepared exams\",\n                data: [this.props.examPreparationProgress.finished.length],\n              },\n            ]}\n            colors={[\"#4b5563\", \"#469769\"]}\n            defaultBar={{\n              borderRadius: 4,\n              horizontal: false,\n              columnWidth: \"95%\",\n              endingShape: \"rounded\",\n            }}\n            chartHeight={550}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default React.memo(ExamPreparationChart);\n","import React, { Component } from \"react\";\nimport { examProgressStateInterface } from \"../../Admin/ExamReport/DoneExamList\";\nimport VBarChart from \"../ChartComponents/VBarChart\";\n\ntype ExamProgressChartProps = {\n  progressData: {\n    all: examProgressStateInterface[];\n    finished: examProgressStateInterface[];\n    remaining: examProgressStateInterface[];\n  };\n};\n\nclass ExamProgressChart extends Component<ExamProgressChartProps> {\n  render() {\n    return (\n      <div className=\"my-3 max-w-full bg-white\">\n        <div className=\"flex items-center justify-between px-3\">\n          <span className=\"text-gray-600 font-semibold text-xl py-4 px-0\">\n            Examination progress chart\n          </span>\n        </div>\n\n        <div className=\"mb-4 pb-2 px-3\">\n          <VBarChart\n            labels={[\"Remaining exams\", \"Prepared exams\"]}\n            categoriesLabel={[\"Examinations progress\"]}\n            dataLabels={true}\n            yaxisText=\"Examination progress\"\n            tooltipText=\"(Exams)\"\n            series={[\n              {\n                name: \"Remaining exams\",\n                data: [this.props.progressData.remaining.length],\n              },\n              {\n                name: \"Done exams\",\n                data: [this.props.progressData.finished.length],\n              },\n            ]}\n            colors={[\"#4b5563\", \"#469769\"]}\n            defaultBar={{\n              borderRadius: 4,\n              horizontal: false,\n              columnWidth: \"95%\",\n              endingShape: \"rounded\",\n            }}\n            chartHeight={550}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default React.memo(ExamProgressChart);\n","import React, { Component } from \"react\";\nimport { candidatePerfomranceStateInterface } from \"../../Admin/ExamReport/CandidatePerformance\";\nimport VBarChart from \"../ChartComponents/VBarChart\";\n\ntype ExamPerformanceChartProps = {\n  examPerformance: {\n    all: candidatePerfomranceStateInterface[];\n    pass: candidatePerfomranceStateInterface[];\n    failed: candidatePerfomranceStateInterface[];\n    active: candidatePerfomranceStateInterface[];\n  };\n};\n\nclass ExamPerformanceChart extends Component<ExamPerformanceChartProps> {\n  render() {\n    return (\n      <div className=\"my-3 max-w-full bg-white\">\n        <div className=\"flex items-center justify-between px-3\">\n          <span className=\"text-gray-600 font-semibold text-xl py-4 px-0\">\n            Examination performance chart\n          </span>\n        </div>\n\n        <div className=\"mb-4 pb-2 px-3\">\n          <VBarChart\n            labels={[\"Pass applicant(s)\", \"Failed applicant(s)\"]}\n            categoriesLabel={[\"Exam preparation progress\"]}\n            dataLabels={true}\n            yaxisText=\"Exam performance\"\n            tooltipText=\"(Applicants)\"\n            series={[\n              {\n                name: \"Pass applicant(s)\",\n                data: [this.props.examPerformance.pass.length],\n              },\n              {\n                name: \"Failed applicant(s)\",\n                data: [this.props.examPerformance.failed.length],\n              },\n            ]}\n            colors={[\"#469769\", \"#d97724\"]}\n            defaultBar={{\n              borderRadius: 4,\n              horizontal: false,\n              columnWidth: \"95%\",\n              endingShape: \"rounded\",\n            }}\n            chartHeight={550}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default React.memo(ExamPerformanceChart);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  schoolLevelsStoreInterface,\n  loadCourses,\n  loadExamsList,\n  loadEducationCategories,\n  loadDoneExam,\n  loadSchoolLevels,\n  loadPerfomranceExam,\n  loadCandidatesExamPerformance,\n  PushPopupAlert,\n  FilterParamType,\n} from \"../../../actions\";\nimport { StoreState } from \"../../../reducers\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport {\n  SessionPlanInterface,\n  course,\n  education_category,\n  ExamDoneAndRemainingByPeriodInterface,\n  school_level,\n} from \"../../../interfaces\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport { ExamReportReducerType } from \"../../../reducers/exam_report\";\nimport moment from \"moment\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport {\n  candidatePerfomranceStateInterface,\n  FC_reportCandidatePerformanceData,\n  FC_reportCandidatePerformanceDataFilter,\n} from \"../../Admin/ExamReport/CandidatePerformance\";\nimport {\n  examProgressStateInterface,\n  FC_reportDoneExamList,\n} from \"../../Admin/ExamReport/DoneExamList\";\nimport {\n  examPreparationStateInterface,\n  FC_reportExamList,\n} from \"../../Admin/ExamReport/ExamList\";\nimport { reportTitleType } from \"../../Admin/ExamReport/ExamReport\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport NoSession from \"../../SessionSettings/NoSession\";\nimport ExamDashboardTitle from \"./ExamDashboardTitle\";\nimport ExamDashboardLabels from \"./ExamDashboardLabels\";\nimport { FaBookOpen } from \"react-icons/fa\";\nimport PieChart from \"../ChartComponents/PieChart\";\nimport ExamPreparationChart from \"./ExamPreparationChart\";\nimport ExamProgressChart from \"./ExamProgressChart\";\nimport ExamPerformanceChart from \"./ExamPerformanceChart\";\n\nexport const getLevelbyId = (\n  school_levels: school_level[] | null,\n  level_id: string\n): school_level | undefined => {\n  if (school_levels) {\n    return school_levels.find((item) => item.school_level_id === level_id);\n  }\n};\n\nexport const loadCoursesByInstitute = (\n  thisEducation: education_category | null,\n  courseList: course[] | null,\n  school_levels: school_level[] | null\n): course[] | null => {\n  let result: course[] | null = [],\n    defaultValue: boolean = false;\n  if (courseList && thisEducation) {\n    for (const key in courseList) {\n      if (Object.prototype.hasOwnProperty.call(courseList, key)) {\n        if (courseList[key].school_levels.length > 0) {\n          courseList[key].school_levels.forEach((level) => {\n            let levelDetail = getLevelbyId(school_levels, level);\n            if (\n              levelDetail &&\n              (levelDetail.education_institute.includes(\n                thisEducation.education_institute_id\n              ) ||\n                levelDetail.education_institute.length <= 0)\n            ) {\n              result && result.push(courseList![key]);\n            }\n          });\n        } else {\n          result && result.push(courseList![key]);\n        }\n      }\n    }\n  }\n  // RETURN DEFAULT VALUES ====================\n  else {\n    defaultValue = true;\n  }\n  return defaultValue ? courseList : result;\n};\n\nexport const loadExaminationProgress = (\n  DoneExamList: ExamDoneAndRemainingByPeriodInterface[] | null,\n  examsList: ExamItemResponse[] | null,\n  thisEducation: education_category | null,\n  courseList: course[] | null,\n  school_levels: school_level[] | null,\n  period: string\n): {\n  all: examProgressStateInterface[];\n  finished: examProgressStateInterface[];\n  remaining: examProgressStateInterface[];\n} | null => {\n  let allData: examProgressStateInterface[] = [],\n    completeExams: examProgressStateInterface[] = [],\n    remainingExams: examProgressStateInterface[] = [],\n    dataFound: boolean = false;\n  if (\n    DoneExamList &&\n    loadCoursesByInstitute(thisEducation, courseList, school_levels) &&\n    examsList\n  ) {\n    dataFound = true;\n    allData = FC_reportDoneExamList(\n      loadCoursesByInstitute(thisEducation, courseList, school_levels)!,\n      examsList,\n      DoneExamList\n    ).filter((item) => item.exam && item.exam.period === period);\n    completeExams = allData.filter(\n      (item) => item.preparation_status.toLocaleLowerCase() === \"done\"\n    );\n    remainingExams = allData.filter(\n      (item) => item.preparation_status.toLocaleLowerCase() === \"active\"\n    );\n  }\n  console.log(\"====================================\");\n  console.log({ loadExaminationProgress: DoneExamList });\n  console.log(\"====================================\");\n  return dataFound\n    ? { all: allData, finished: completeExams, remaining: remainingExams }\n    : null;\n};\n\nexport const loadExamPreparationProgress = (\n  dataList: examPreparationStateInterface[]\n): {\n  all: examPreparationStateInterface[];\n  finished: examPreparationStateInterface[];\n  remaining: examPreparationStateInterface[];\n} => {\n  let allData: examPreparationStateInterface[] = dataList,\n    preparedExams: examPreparationStateInterface[] = dataList.filter(\n      (item) => item.preparation_status === \"prepared\"\n    ),\n    remainingExams: examPreparationStateInterface[] = dataList.filter(\n      (item) => item.preparation_status === \"not prepared\"\n    );\n  return { all: allData, finished: preparedExams, remaining: remainingExams };\n};\n\nexport const isDatePast = (dateParam: string): boolean => {\n  const date = moment().format(\"DD-MM-YYYY\");\n  const todayDate = moment(date, \"DD-MM-YYYY\");\n  const pastDate = moment(dateParam, \"DD-MM-YYYY\");\n\n  const dDiff = todayDate.diff(pastDate);\n\n  if (dDiff > 0) {\n    return false;\n  } else {\n    return true;\n  }\n};\n\nexport const loadExamAttendance = (\n  applicantList: candidatePerfomranceStateInterface[],\n  period: string\n): {\n  all: candidatePerfomranceStateInterface[];\n  pass: candidatePerfomranceStateInterface[];\n  failed: candidatePerfomranceStateInterface[];\n  active: candidatePerfomranceStateInterface[];\n} => {\n  return {\n    all: applicantList.filter((item) => item.exam.period === period),\n    pass: applicantList.filter(\n      (item) =>\n        item.exam.period === period &&\n        (item.exam_stastus !== \"Editing\" || isDatePast(item.exam.exam_date)) &&\n        item.user_total_marks >= 50\n    ),\n    failed: applicantList.filter(\n      (item) =>\n        item.exam.period === period &&\n        (item.exam_stastus !== \"Editing\" || isDatePast(item.exam.exam_date)) &&\n        item.user_total_marks < 50\n    ),\n    active: applicantList.filter(\n      (item) =>\n        item.exam.period === period &&\n        item.exam_stastus === \"Editing\" &&\n        !isDatePast(item.exam.exam_date)\n    ),\n  };\n};\n\ninterface ExamDashboardProps {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  courses: course[] | null;\n  examsList: ExamItemResponse[] | null;\n  adminExamReport: ExamReportReducerType;\n  GetAllSessionPlans: Function;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  loadCourses: (callback: (loading: boolean) => void) => void;\n  loadExamsList: (callback: (loading: boolean) => void) => void;\n  loadDoneExam: (period_id: string, callback: Function) => void;\n  loadPerfomranceExam: (period_id: string, callback: Function) => void;\n  loadSchoolLevels: (callback: (loading: boolean) => void) => void;\n  loadCandidatesExamPerformance: (\n    dataBody: FilterParamType | null,\n    callback: Function\n  ) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface ExamDashboardStates {\n  loading: boolean;\n  loadingCourses: boolean;\n  loadingExams: boolean;\n  loadingDoneExam: boolean;\n  loadingCandidatesExamPerformance: boolean;\n  loadingExamPerformance: boolean;\n  loadingSettings: boolean;\n  changingPeriod: boolean;\n  reportTitle: reportTitleType;\n  thisEducation: education_category | null;\n  thisPeriod: string;\n}\n\nclass _ExamDashboard extends Component<\n  ExamDashboardProps,\n  ExamDashboardStates\n> {\n  constructor(props: ExamDashboardProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingCourses: true,\n      loadingExams: true,\n      loadingDoneExam: true,\n      loadingCandidatesExamPerformance: true,\n      loadingExamPerformance: true,\n      loadingSettings: true,\n      changingPeriod: false,\n      reportTitle: reportTitleType.EXAM_PREPARATION,\n      thisEducation: null,\n      thisPeriod: \"\",\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingCourses = (value: boolean) => {\n    this.setState({ loadingCourses: value });\n  };\n\n  setLoadingExams = (value: boolean) => {\n    this.setState({ loadingExams: value });\n  };\n\n  setLoadingDoneExam = (value: boolean) => {\n    this.setState({ loadingDoneExam: value });\n  };\n\n  setLoadingCandidatesExamPerformance = (value: boolean) => {\n    this.setState({ loadingCandidatesExamPerformance: value });\n  };\n\n  setLoadingExamPerformance = (value: boolean) => {\n    this.setState({ loadingExamPerformance: value });\n  };\n\n  setLoadingSettings = (value: boolean) => {\n    this.setState({ loadingSettings: value });\n  };\n\n  setChangingPeriod = (value: boolean) => {\n    this.setState({ changingPeriod: value });\n  };\n\n  setReportTitle = (value: reportTitleType) => {\n    this.setState({ reportTitle: value });\n  };\n\n  setThisEducation = (value: education_category | null) => {\n    this.setState({ thisEducation: value });\n  };\n\n  setThisPeriod = (value: string) => {\n    this.setState({ thisPeriod: value });\n  };\n\n  loadByPeriods = (session: SessionPlanInterface) => {\n    this.props.loadDoneExam(session._id, (status: boolean, msg: string) => {\n      if (!status) {\n        if (msg.length > 0) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n        this.setLoadingDoneExam(false);\n      }\n    });\n\n    // --------------------------------------------\n    this.props.loadPerfomranceExam(\n      session._id,\n      (status: boolean, msg: string) => {\n        if (!status) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          this.setLoadingExamPerformance(false);\n        }\n      }\n    );\n  };\n\n  componentDidMount = () => {\n    if (\n      this.props.schoolLevels.education_categories === null ||\n      this.props.schoolLevels.education_categories.length === 0\n    ) {\n      this.props.loadEducationCategories(this.setLoadingSettings);\n    } else if (\n      this.props.schoolLevels.education_categories.length > 0 &&\n      !this.state.thisEducation\n    ) {\n      this.setThisEducation(this.props.schoolLevels.education_categories[0]);\n      this.setLoadingSettings(false);\n    }\n\n    if (this.props.application_sessions === null) {\n      this.props.GetAllSessionPlans(\n        (status: boolean, msg: string, sessions?: SessionPlanInterface[]) => {\n          this.setLoadingSettings(status);\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          if (!status && sessions && sessions.length > 0) {\n            let active_period: SessionPlanInterface | undefined;\n            active_period = sessions.find((item) => item.is_active);\n            if (active_period) {\n              this.setThisPeriod(active_period._id);\n            } else {\n              this.setThisPeriod(sessions[sessions.length - 1]._id);\n            }\n          }\n        }\n      );\n    } else if (\n      this.props.application_sessions.length > 0 &&\n      !this.state.thisPeriod.length\n    ) {\n      let active_period: SessionPlanInterface | undefined;\n      active_period = this.props.application_sessions.find(\n        (item) => item.is_active\n      );\n      if (active_period) {\n        this.setThisPeriod(active_period._id);\n        this.loadByPeriods(active_period);\n      } else {\n        this.setThisPeriod(\n          this.props.application_sessions[\n            this.props.application_sessions.length - 1\n          ]._id\n        );\n        this.loadByPeriods(\n          this.props.application_sessions[\n            this.props.application_sessions.length - 1\n          ]\n        );\n      }\n      this.setLoadingSettings(false);\n      this.setLoading(false);\n    }\n\n    if (\n      this.props.schoolLevels.school_levels === null ||\n      this.props.schoolLevels.school_levels.length <= 0\n    ) {\n      this.props.loadSchoolLevels(this.setLoadingSettings);\n    } else {\n      this.setLoadingSettings(false);\n    }\n\n    // if (this.state.thisPeriod.length > 0 && this.state.loadingDoneExam) {\n    //   this.props.loadDoneExam(\n    //     this.state.thisPeriod,\n    //     (status: boolean, msg: string) => {\n    //       if (!status) {\n    //         if (msg.length > 0) {\n    //           this.props.PushPopupAlert({\n    //             title: msg,\n    //             theme: PopupAlertTheme.danger,\n    //           });\n    //         }\n    //         this.setLoadingDoneExam(false);\n    //       }\n    //     }\n    //   );\n    // }\n    // if (this.state.thisPeriod.length > 0 && this.state.loadingExamPerformance) {\n    //   this.props.loadPerfomranceExam(\n    //     this.state.thisPeriod,\n    //     (status: boolean, msg: string) => {\n    //       if (!status) {\n    //         if (msg.length > 0) {\n    //           this.props.PushPopupAlert({\n    //             title: msg,\n    //             theme: PopupAlertTheme.danger,\n    //           });\n    //         }\n    //         this.setLoadingExamPerformance(false);\n    //       }\n    //     }\n    //   );\n    // }\n\n    if (\n      this.props.adminExamReport.CandidatesExamPerformance === null ||\n      (this.props.adminExamReport.CandidatesExamPerformance.length === 0 &&\n        this.state.loadingCandidatesExamPerformance)\n    ) {\n      this.props.loadCandidatesExamPerformance(\n        null,\n        (status: boolean, msg: string) => {\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            this.setLoadingCandidatesExamPerformance(false);\n          }\n        }\n      );\n    }\n  };\n\n  onPeriodChange = (period_id: string) => {\n    this.setLoadingDoneExam(true);\n    this.setLoadingExamPerformance(true);\n    this.setChangingPeriod(true);\n    this.props.loadDoneExam(period_id, (status: boolean, msg: string) => {\n      if (!status) {\n        let action: boolean = true;\n        if (msg.length > 0 && action) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n          action = false;\n        }\n        this.setLoadingDoneExam(false);\n      }\n    });\n\n    this.props.loadPerfomranceExam(\n      period_id,\n      (status: boolean, msg: string) => {\n        if (!status) {\n          let action: boolean = true;\n          if (msg.length > 0 && action) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n            action = false;\n          }\n          this.setLoadingExamPerformance(false);\n        }\n      }\n    );\n\n    if (!this.state.loadingDoneExam && !this.state.loadingExamPerformance) {\n      this.setChangingPeriod(false);\n    }\n  };\n\n  render() {\n    if (this.state.loading || this.props.application_sessions === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    if (this.props.application_sessions.length === 0) {\n      return <NoSession />;\n    }\n\n    return (\n      <div>\n        {/* HEADER TITLE */}\n        <ExamDashboardTitle\n          reportTitle={this.state.reportTitle}\n          setReportTitle={this.setReportTitle}\n          loading={this.state.changingPeriod}\n          education_categories={this.props.schoolLevels.education_categories}\n          loadingEducation={false}\n          thisEducation={this.state.thisEducation}\n          setThisEducation={this.setThisEducation}\n          thisPeriod={this.state.thisPeriod}\n          setThisPeriod={this.setThisPeriod}\n          application_sessions={this.props.application_sessions}\n          onPeriodChange={this.onPeriodChange}\n        />\n        {/* END HEADER TITLE */}\n\n        {/* ----------------------------------------------------------- */}\n\n        {/* EXAMS PREPARATION PROGRESS LABELS ======================================= */}\n        {this.props.examsList &&\n          loadCoursesByInstitute(\n            this.state.thisEducation,\n            this.props.courses,\n            this.props.schoolLevels.school_levels\n          ) && (\n            <section className=\"my-2\">\n              <div className=\"text-2xl font-semibold text-gray-600\">\n                Exams preparation status\n              </div>\n              <ExamDashboardLabels\n                dataLabels={[\n                  {\n                    title: \"Total exams\",\n                    icon: FaBookOpen,\n                    iconColor: \"blue\",\n                    count: loadExamPreparationProgress(\n                      FC_reportExamList(\n                        loadCoursesByInstitute(\n                          this.state.thisEducation,\n                          this.props.courses,\n                          this.props.schoolLevels.school_levels\n                        )!,\n                        this.props.examsList,\n                        this.state.thisPeriod\n                      )\n                    ).all.length,\n                  },\n                  {\n                    title: \"Prepared exams\",\n                    icon: FaBookOpen,\n                    iconColor: \"green\",\n                    count: loadExamPreparationProgress(\n                      FC_reportExamList(\n                        loadCoursesByInstitute(\n                          this.state.thisEducation,\n                          this.props.courses,\n                          this.props.schoolLevels.school_levels\n                        )!,\n                        this.props.examsList,\n                        this.state.thisPeriod\n                      )\n                    ).finished.length,\n                  },\n                  {\n                    title: \"Remaining exams\",\n                    icon: FaBookOpen,\n                    iconColor: \"gray\",\n                    count: loadExamPreparationProgress(\n                      FC_reportExamList(\n                        loadCoursesByInstitute(\n                          this.state.thisEducation,\n                          this.props.courses,\n                          this.props.schoolLevels.school_levels\n                        )!,\n                        this.props.examsList,\n                        this.state.thisPeriod\n                      )\n                    ).remaining.length,\n                  },\n                ]}\n                labelsOnRow={5}\n              >\n                <div className=\"flex justify-center\">\n                  <PieChart\n                    options={{\n                      labels: [\"Prepared\", \"Remaining\"],\n                      legend: {\n                        show: false,\n                        position: \"bottom\",\n                        horizontalAlign: \"center\",\n                        fontSize: \"16px\",\n                        itemMargin: {\n                          horizontal: 3,\n                          vertical: 0,\n                        },\n                      },\n                      plotOptions: {\n                        pie: {\n                          donut: {\n                            labels: {\n                              show: true,\n                              name: {\n                                show: true,\n                                fontSize: \"16px\",\n                                //   fontFamily: \"Rubik\",\n                                color: \"#2564eb\",\n                                offsetY: -10,\n                              },\n                              value: {\n                                show: true,\n                                fontSize: \"20px\",\n                                fontFamily: \"Helvetica, Arial, sans-serif\",\n                                color: \"#2564eb\",\n                                offsetY: 10,\n                                formatter: function (val) {\n                                  return val;\n                                },\n                              },\n                              total: {\n                                show: true,\n                                label: \"Total\",\n                                color: \"#2564eb\",\n                                formatter: function (w) {\n                                  return w.globals.seriesTotals.reduce(\n                                    (a: number, b: number) => {\n                                      return a + b;\n                                    },\n                                    0\n                                  );\n                                },\n                              },\n                            },\n                          },\n                        },\n                      },\n                      colors: [\"#469769\", \"#4b5563\"],\n                    }}\n                    series={[\n                      loadExamPreparationProgress(\n                        FC_reportExamList(\n                          loadCoursesByInstitute(\n                            this.state.thisEducation,\n                            this.props.courses,\n                            this.props.schoolLevels.school_levels\n                          )!,\n                          this.props.examsList,\n                          this.state.thisPeriod\n                        )\n                      ).finished.length,\n                      loadExamPreparationProgress(\n                        FC_reportExamList(\n                          loadCoursesByInstitute(\n                            this.state.thisEducation,\n                            this.props.courses,\n                            this.props.schoolLevels.school_levels\n                          )!,\n                          this.props.examsList,\n                          this.state.thisPeriod\n                        )\n                      ).remaining.length,\n                    ]}\n                    width={210}\n                  />\n                </div>\n              </ExamDashboardLabels>\n            </section>\n          )}\n        {/* EXAMS PREPARATION PROGRESS LABELS ======================================= */}\n\n        {/* ===================================================================================== */}\n\n        {/* EXAMS PROGRESS LABELS ======================================= */}\n        {loadExaminationProgress(\n          this.props.adminExamReport.DoneExam,\n          this.props.examsList,\n          this.state.thisEducation,\n          this.props.courses,\n          this.props.schoolLevels.school_levels,\n          this.state.thisPeriod\n        ) && (\n          <section className=\"my-2\">\n            <div className=\"text-2xl font-semibold text-gray-600\">\n              Examination progress status\n            </div>\n            <ExamDashboardLabels\n              dataLabels={[\n                {\n                  title: \"Total exams\",\n                  icon: FaBookOpen,\n                  iconColor: \"blue\",\n                  count: loadExaminationProgress(\n                    this.props.adminExamReport.DoneExam,\n                    this.props.examsList,\n                    this.state.thisEducation,\n                    this.props.courses,\n                    this.props.schoolLevels.school_levels,\n                    this.state.thisPeriod\n                  )!.all.length,\n                },\n                {\n                  title: \"Done exams\",\n                  icon: FaBookOpen,\n                  iconColor: \"green\",\n                  count: loadExaminationProgress(\n                    this.props.adminExamReport.DoneExam,\n                    this.props.examsList,\n                    this.state.thisEducation,\n                    this.props.courses,\n                    this.props.schoolLevels.school_levels,\n                    this.state.thisPeriod\n                  )!.finished.length,\n                },\n                {\n                  title: \"Remaining exams\",\n                  icon: FaBookOpen,\n                  iconColor: \"gray\",\n                  count: loadExaminationProgress(\n                    this.props.adminExamReport.DoneExam,\n                    this.props.examsList,\n                    this.state.thisEducation,\n                    this.props.courses,\n                    this.props.schoolLevels.school_levels,\n                    this.state.thisPeriod\n                  )!.remaining.length,\n                },\n              ]}\n              labelsOnRow={5}\n            >\n              <div className=\"flex justify-center\">\n                <PieChart\n                  options={{\n                    labels: [\"Done\", \"Remaining\"],\n                    legend: {\n                      show: false,\n                      position: \"bottom\",\n                      horizontalAlign: \"center\",\n                      fontSize: \"16px\",\n                      itemMargin: {\n                        horizontal: 3,\n                        vertical: 0,\n                      },\n                    },\n                    plotOptions: {\n                      pie: {\n                        donut: {\n                          labels: {\n                            show: true,\n                            name: {\n                              show: true,\n                              fontSize: \"16px\",\n                              //   fontFamily: \"Rubik\",\n                              color: \"#2564eb\",\n                              offsetY: -10,\n                            },\n                            value: {\n                              show: true,\n                              fontSize: \"20px\",\n                              fontFamily: \"Helvetica, Arial, sans-serif\",\n                              color: \"#2564eb\",\n                              offsetY: 10,\n                              formatter: function (val) {\n                                return val;\n                              },\n                            },\n                            total: {\n                              show: true,\n                              label: \"Total\",\n                              color: \"#2564eb\",\n                              formatter: function (w) {\n                                return w.globals.seriesTotals.reduce(\n                                  (a: number, b: number) => {\n                                    return a + b;\n                                  },\n                                  0\n                                );\n                              },\n                            },\n                          },\n                        },\n                      },\n                    },\n                    colors: [\"#469769\", \"#4b5563\"],\n                  }}\n                  series={[\n                    loadExaminationProgress(\n                      this.props.adminExamReport.DoneExam,\n                      this.props.examsList,\n                      this.state.thisEducation,\n                      this.props.courses,\n                      this.props.schoolLevels.school_levels,\n                      this.state.thisPeriod\n                    )!.finished.length,\n                    loadExaminationProgress(\n                      this.props.adminExamReport.DoneExam,\n                      this.props.examsList,\n                      this.state.thisEducation,\n                      this.props.courses,\n                      this.props.schoolLevels.school_levels,\n                      this.state.thisPeriod\n                    )!.remaining.length,\n                  ]}\n                  width={210}\n                />\n              </div>\n            </ExamDashboardLabels>\n          </section>\n        )}\n        {/* EXAMS PROGRESS LABELS ======================================= */}\n\n        {/* ===================================================================================== */}\n\n        {/* EXAMS PERFORMANCE LABELS ======================================= */}\n        {this.props.adminExamReport.CandidatesExamPerformance &&\n          loadCoursesByInstitute(\n            this.state.thisEducation,\n            this.props.courses,\n            this.props.schoolLevels.school_levels\n          ) && (\n            <section className=\"my-2\">\n              <div className=\"text-2xl font-semibold text-gray-600\">\n                Examination performance status\n              </div>\n              <ExamDashboardLabels\n                dataLabels={[\n                  {\n                    title: \"Total attendance\",\n                    icon: FaBookOpen,\n                    iconColor: \"blue\",\n                    count: loadExamAttendance(\n                      FC_reportCandidatePerformanceDataFilter(\n                        FC_reportCandidatePerformanceData(\n                          loadCoursesByInstitute(\n                            this.state.thisEducation,\n                            this.props.courses,\n                            this.props.schoolLevels.school_levels\n                          )!,\n                          this.props.adminExamReport.CandidatesExamPerformance,\n                          \"all\"\n                        ),\n                        \"all\"\n                      ),\n                      this.state.thisPeriod\n                    ).all.length,\n                  },\n                  {\n                    title: \"Pass applicant(s)\",\n                    icon: FaBookOpen,\n                    iconColor: \"green\",\n                    count: loadExamAttendance(\n                      FC_reportCandidatePerformanceDataFilter(\n                        FC_reportCandidatePerformanceData(\n                          loadCoursesByInstitute(\n                            this.state.thisEducation,\n                            this.props.courses,\n                            this.props.schoolLevels.school_levels\n                          )!,\n                          this.props.adminExamReport.CandidatesExamPerformance,\n                          \"all\"\n                        ),\n                        \"all\"\n                      ),\n                      this.state.thisPeriod\n                    ).pass.length,\n                  },\n                  {\n                    title: \"Failed applicant(s)\",\n                    icon: FaBookOpen,\n                    iconColor: \"yellow\",\n                    count: loadExamAttendance(\n                      FC_reportCandidatePerformanceDataFilter(\n                        FC_reportCandidatePerformanceData(\n                          loadCoursesByInstitute(\n                            this.state.thisEducation,\n                            this.props.courses,\n                            this.props.schoolLevels.school_levels\n                          )!,\n                          this.props.adminExamReport.CandidatesExamPerformance,\n                          \"all\"\n                        ),\n                        \"all\"\n                      ),\n                      this.state.thisPeriod\n                    ).failed.length,\n                  },\n                  // {\n                  //   title: \"Doing exam\",\n                  //   icon: FaBookOpen,\n                  //   iconColor: \"gray\",\n                  //   count: loadExamAttendance(\n                  //     FC_reportCandidatePerformanceDataFilter(\n                  //       FC_reportCandidatePerformanceData(\n                  //         loadCoursesByInstitute(\n                  //           thisEducation,\n                  //           props.courses,\n                  //           props.schoolLevels.school_levels\n                  //         )!,\n                  //         props.adminExamReport.CandidatesExamPerformance,\n                  //         \"all\"\n                  //       ),\n                  //       \"all\"\n                  //     ),\n                  //     thisPeriod\n                  //   ).active.length,\n                  // },\n                ]}\n                labelsOnRow={5}\n              >\n                <div className=\"flex justify-center\">\n                  <PieChart\n                    options={{\n                      labels: [\"Pass\", \"Failed\"],\n                      // labels: [\"Pass\", \"Failed\", \"Doing Exam\"],\n                      legend: {\n                        show: false,\n                        position: \"bottom\",\n                        horizontalAlign: \"center\",\n                        fontSize: \"16px\",\n                        itemMargin: {\n                          horizontal: 3,\n                          vertical: 0,\n                        },\n                      },\n                      plotOptions: {\n                        pie: {\n                          donut: {\n                            labels: {\n                              show: true,\n                              name: {\n                                show: true,\n                                fontSize: \"16px\",\n                                //   fontFamily: \"Rubik\",\n                                color: \"#2564eb\",\n                                offsetY: -10,\n                              },\n                              value: {\n                                show: true,\n                                fontSize: \"20px\",\n                                fontFamily: \"Helvetica, Arial, sans-serif\",\n                                color: \"#2564eb\",\n                                offsetY: 10,\n                                formatter: function (val) {\n                                  return val;\n                                },\n                              },\n                              total: {\n                                show: true,\n                                label: \"Total\",\n                                color: \"#2564eb\",\n                                formatter: function (w) {\n                                  return w.globals.seriesTotals.reduce(\n                                    (a: number, b: number) => {\n                                      return a + b;\n                                    },\n                                    0\n                                  );\n                                },\n                              },\n                            },\n                          },\n                        },\n                      },\n                      colors: [\"#469769\", \"#d97724\"],\n                      // colors: [\"#469769\", \"#d97724\", \"#4b5563\"],\n                    }}\n                    series={[\n                      loadExamAttendance(\n                        FC_reportCandidatePerformanceDataFilter(\n                          FC_reportCandidatePerformanceData(\n                            loadCoursesByInstitute(\n                              this.state.thisEducation,\n                              this.props.courses,\n                              this.props.schoolLevels.school_levels\n                            )!,\n                            this.props.adminExamReport\n                              .CandidatesExamPerformance,\n                            \"all\"\n                          ),\n                          \"all\"\n                        ),\n                        this.state.thisPeriod\n                      ).pass.length,\n                      loadExamAttendance(\n                        FC_reportCandidatePerformanceDataFilter(\n                          FC_reportCandidatePerformanceData(\n                            loadCoursesByInstitute(\n                              this.state.thisEducation,\n                              this.props.courses,\n                              this.props.schoolLevels.school_levels\n                            )!,\n                            this.props.adminExamReport\n                              .CandidatesExamPerformance,\n                            \"all\"\n                          ),\n                          \"all\"\n                        ),\n                        this.state.thisPeriod\n                      ).failed.length,\n                      // loadExamAttendance(\n                      //   FC_reportCandidatePerformanceDataFilter(\n                      //     FC_reportCandidatePerformanceData(\n                      //       loadCoursesByInstitute(\n                      //         thisEducation,\n                      //         props.courses,\n                      //         props.schoolLevels.school_levels\n                      //       )!,\n                      //       props.adminExamReport.CandidatesExamPerformance,\n                      //       \"all\"\n                      //     ),\n                      //     \"all\"\n                      //   ),\n                      //   thisPeriod\n                      // ).active.length,\n                    ]}\n                    width={210}\n                  />\n                </div>\n              </ExamDashboardLabels>\n            </section>\n          )}\n        {/* EXAMS PERFORMANCE LABELS ======================================= */}\n\n        {/* ------------------------------------------------------------------------------- */}\n\n        {/* ===================================================================================== */}\n\n        {/* EXAMS PREPARATION PROGRESS CHART ======================================= */}\n        {this.props.examsList &&\n          loadCoursesByInstitute(\n            this.state.thisEducation,\n            this.props.courses,\n            this.props.schoolLevels.school_levels\n          ) && (\n            <ExamPreparationChart\n              examPreparationProgress={loadExamPreparationProgress(\n                FC_reportExamList(\n                  loadCoursesByInstitute(\n                    this.state.thisEducation,\n                    this.props.courses,\n                    this.props.schoolLevels.school_levels\n                  )!,\n                  this.props.examsList,\n                  this.state.thisPeriod\n                )\n              )}\n            />\n          )}\n        {/* EXAMS PREPARATION PROGRESS CHART ======================================= */}\n\n        {/* ===================================================================================== */}\n\n        {/* EXAMINATION PROGRESS CHART ======================================= */}\n        {loadExaminationProgress(\n          this.props.adminExamReport.DoneExam,\n          this.props.examsList,\n          this.state.thisEducation,\n          this.props.courses,\n          this.props.schoolLevels.school_levels,\n          this.state.thisPeriod\n        ) && (\n          <ExamProgressChart\n            progressData={\n              loadExaminationProgress(\n                this.props.adminExamReport.DoneExam,\n                this.props.examsList,\n                this.state.thisEducation,\n                this.props.courses,\n                this.props.schoolLevels.school_levels,\n                this.state.thisPeriod\n              )!\n            }\n          />\n        )}\n        {/* EXAMINATION PROGRESS CHART ======================================= */}\n\n        {/* ===================================================================================== */}\n\n        {/* EXAM PERFORMANCE ON COUNTRY CHART ======================================= */}\n        {this.props.adminExamReport.CandidatesExamPerformance &&\n          loadCoursesByInstitute(\n            this.state.thisEducation,\n            this.props.courses,\n            this.props.schoolLevels.school_levels\n          ) && (\n            <ExamPerformanceChart\n              examPerformance={loadExamAttendance(\n                FC_reportCandidatePerformanceDataFilter(\n                  FC_reportCandidatePerformanceData(\n                    loadCoursesByInstitute(\n                      this.state.thisEducation,\n                      this.props.courses,\n                      this.props.schoolLevels.school_levels\n                    )!,\n                    this.props.adminExamReport.CandidatesExamPerformance,\n                    \"all\"\n                  ),\n                  \"all\"\n                ),\n                this.state.thisPeriod\n              )}\n            />\n          )}\n        {/* END EXAM PERFORMANCE ON COUNTRY CHART ======================================= */}\n\n        {/* ------------------------------------------------------------------------------- */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  sessionPlan,\n  schoolLevels,\n  course,\n  prepareExam,\n  adminExamReport,\n}: StoreState): {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  courses: course[] | null;\n  examsList: ExamItemResponse[] | null;\n  adminExamReport: ExamReportReducerType;\n} => {\n  return {\n    auth,\n    application_sessions: sessionPlan.allSessionPlans,\n    schoolLevels,\n    courses: course.courses,\n    examsList: prepareExam.examsList,\n    adminExamReport,\n  };\n};\n\nexport const ExamDashboard = connect(mapStateToProps, {\n  loadCourses,\n  loadExamsList,\n  loadEducationCategories,\n  loadDoneExam,\n  loadSchoolLevels,\n  loadPerfomranceExam,\n  loadCandidatesExamPerformance,\n  GetAllSessionPlans,\n  PushPopupAlert,\n})(_ExamDashboard);\n"],"sourceRoot":""}
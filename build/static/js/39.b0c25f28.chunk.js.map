{"version":3,"sources":["containers/Locations/RoomForm.tsx","containers/Locations/CenterForm.tsx","containers/Locations/ViewCenters.tsx","containers/Locations/index.tsx","containers/SessionSettings/NoSession.tsx","shared/interfaces.tsx","components/ActionConfirm/ActionConfirm.tsx"],"names":["RoomForm","props","className","error","element","onChange","e","setError","selectProvince","target","value","thisProvince","_id","disabled","loadingRequest","locations","map","item","index","province_name","msg","selectDistrict","thisDistrict","filter","loc","length","districts","district","district_name","selectCenter","thisCenter","centers","center","center_name","type","placeholder","roomNumber","setRoomNumber","parseInt","roomCapacity","setRoomCapacity","onClick","setActionTypes","setThisRoom","handleSubmitRoom","React","memo","CenterForm","setCenterName","centerName","handleSubmit","connect","auth","FC_CreateCenter","FC_UpdateCenter","FC_DeleteCenter","FC_CreateRoom","FC_UpdateRoom","FC_DeleteRoom","PushPopupAlert","useState","deleteCenter","setDeleteCenter","deleteRoom","setDeleteRoom","loadingDeletion","setLoadingDeletion","searchCenter","setSearchCenter","a","setLoadingRequest","actionTypes","axios","post","API","APPLICATION","education_institute_id","education_institution_id","district_id","rooms","res","data","province_id","thisProvinceId","title","theme","PopupAlertTheme","success","room","patch","examination_center_id","isUsed","console","log","doc_category_error","errorToText","danger","handleDelete","centerId","isEmptyOrSpaces","warning","delete","center_id","newArr","setThisDistrict","province_error","room_type","RoomType","Physical","room_number","capacity","occupied","thisRoom","examination_center_room_id","room_id","handleDeleteRoom","roomId","setThisCenter","province","find","items","setThisProvince","d","getDistinctCenter","undefined","result","province_code","toString","key","Object","prototype","hasOwnProperty","call","elementDistrict","push","district_code","provKey","elementProv","distKey","selectLocation","_thisDistrict","searchData","id","Modal","backDrop","Themes","default","close","displayClose","backDropClose","widthSizeClass","ModalSize","medium","padding","body","footer","ActionConfirm","modalType","ActionConfirmEnum","DELETE","confirmFun","setModalAction","status","description","Index","state","loading","FC_HasInstitute","this","getAllRoom","setState","NoSession","NoResult","NoResultThemes","Dark","Component","Centers","roomLocation","PostRequestStatusInterface","DocumentAttributesInterface","DocValidationStatusInterface","SESSION_PLAN_KEYS","DOCUMENT_VALIDATION","EXAMINATION","MARKS_PUBLICATION","PLACEMENT_TRANSFER","RESTORE_DELETE","INFO"],"mappings":"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","file":"static/js/39.b0c25f28.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\nimport {\n  CentersInterface,\n  DistrictInterface,\n  RoomLocationInterface,\n  RoomsInterface,\n} from \"../../shared/interfaces\";\n\ninterface RoomFormProps {\n  thisCenter: CentersInterface | null;\n  thisDistrict: DistrictInterface | null;\n  thisProvince: RoomLocationInterface | null;\n  locations: RoomLocationInterface[];\n  roomNumber: number;\n  roomCapacity: number;\n  thisRoom: RoomsInterface | null;\n  error: {\n    element: string;\n    msg: string;\n  } | null;\n  loadingRequest: boolean;\n  setError: (\n    value: React.SetStateAction<{\n      element: string;\n      msg: string;\n    } | null>\n  ) => void;\n  setRoomNumber: React.Dispatch<React.SetStateAction<number>>;\n  setRoomCapacity: React.Dispatch<React.SetStateAction<number>>;\n  setThisRoom: (e: RoomsInterface | null) => void;\n  setActionTypes: (\n    e:\n      | \"\"\n      | \"CREATE_PROVINCE\"\n      | \"UPDATE_PROVINCE\"\n      | \"CREATE_DISTRICT\"\n      | \"UPDATE_DISTRICT\"\n      | \"CREATE_CENTER\"\n      | \"UPDATE_CENTER\"\n      | \"CREATE_ROOM\"\n      | \"UPDATE_ROOM\"\n  ) => void;\n  handleSubmitRoom: () => Promise<void>;\n  selectProvince: (province_id: string) => void;\n  selectDistrict: (province_id: string, district_id: string) => void;\n  selectCenter: (\n    province_id: string,\n    district_id: string,\n    center_id: string\n  ) => void;\n}\n\nconst RoomForm = (props: RoomFormProps) => {\n  return (\n    <Fragment>\n      <div className=\"py-4 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n        {/* PROVINCE SELECT ========================================== */}\n        <div className=\"flex flex-col\">\n          <label>Province</label>\n          <select\n            className={`bg-white py-1 px-2 border-2 w-full focus:outline-none focus:bg-gray-100 text-gray-600 focus:text-gray-800 rounded h-10 md:w-full ${\n              props.error && props.error.element === \"province_id\"\n                ? \"border-red-700\"\n                : \"border-gray-400 focus:border-gray-500\"\n            }`}\n            onChange={(e) => {\n              props.error &&\n                props.error.element === \"province_id\" &&\n                props.setError(null);\n              props.selectProvince(e.target.value);\n            }}\n            value={props.thisProvince ? props.thisProvince._id : \"\"}\n            disabled={props.loadingRequest}\n          >\n            <option value=\"\" disabled>\n              Select province\n            </option>\n            {props.locations.map((item, index) => (\n              <option value={item._id} key={item._id + index}>\n                {item.province_name}\n              </option>\n            ))}\n          </select>\n          {props.error && props.error.element === \"province_id\" && (\n            <span className=\"text-red-700\">{props.error.msg}</span>\n          )}\n        </div>\n        {/* END PROVINCE SELECT ========================================== */}\n\n        {/* DISTRICT SELECT ========================================== */}\n        <div className=\"flex flex-col\">\n          <label>District</label>\n          <select\n            className={`bg-white py-1 px-2 border-2 w-full focus:outline-none focus:bg-gray-100 text-gray-600 focus:text-gray-800 rounded h-10 md:w-full ${\n              props.error && props.error.element === \"district_id\"\n                ? \"border-red-700\"\n                : \"border-gray-400 focus:border-gray-500\"\n            } ${!props.thisProvince && \"cursor-not-allowed\"}`}\n            onChange={(e) => {\n              props.error &&\n                props.error.element === \"district_id\" &&\n                props.setError(null);\n              props.selectDistrict(\n                props.thisProvince ? props.thisProvince._id : \"\",\n                e.target.value\n              );\n            }}\n            value={props.thisDistrict ? props.thisDistrict._id : \"\"}\n            disabled={props.loadingRequest || props.thisProvince === null}\n          >\n            <option value=\"\" disabled>\n              Select district\n            </option>\n            {props.thisProvince !== null &&\n            props.locations.filter((loc) => loc._id === props.thisProvince!._id)\n              .length > 0 ? (\n              props.locations\n                .filter((loc) => loc._id === props.thisProvince!._id)[0]\n                .districts.map((district, index) => (\n                  <option value={district._id} key={index + district._id}>\n                    {district.district_name}\n                  </option>\n                ))\n            ) : (\n              <option value=\"\" disabled>\n                No district found\n              </option>\n            )}\n          </select>\n          {props.error && props.error.element === \"district_id\" && (\n            <span className=\"text-red-700\">{props.error.msg}</span>\n          )}\n        </div>\n        {/* END DISTRICT SELECT ========================================== */}\n\n        {/* CENTER SELECT ========================================== */}\n        <div className=\"flex flex-col\">\n          <label>Center</label>\n          <select\n            className={`bg-white py-1 px-2 border-2 w-full focus:outline-none focus:bg-gray-100 text-gray-600 focus:text-gray-800 rounded h-10 md:w-full ${\n              props.error && props.error.element === \"center_id\"\n                ? \"border-red-700\"\n                : \"border-gray-400 focus:border-gray-500\"\n            } ${!props.thisDistrict && \"cursor-not-allowed\"}`}\n            onChange={(e) => {\n              props.error &&\n                props.error.element === \"center_id\" &&\n                props.setError(null);\n              props.selectCenter(\n                props.thisProvince ? props.thisProvince._id : \"\",\n                props.thisDistrict ? props.thisDistrict._id : \"\",\n                e.target.value\n              );\n            }}\n            value={props.thisCenter ? props.thisCenter._id : \"\"}\n            disabled={\n              props.loadingRequest ||\n              props.thisProvince === null ||\n              props.thisDistrict === null\n            }\n          >\n            <option value=\"\" disabled>\n              Select center\n            </option>\n            {props.thisDistrict !== null &&\n            props.thisDistrict.centers &&\n            props.thisDistrict.centers.length > 0 ? (\n              props.thisDistrict.centers.map((center, index) => (\n                <option value={center._id} key={index + center._id}>\n                  {center.center_name}\n                </option>\n              ))\n            ) : (\n              <option value=\"\" disabled>\n                No center found\n              </option>\n            )}\n          </select>\n          {props.error && props.error.element === \"center_id\" && (\n            <span className=\"text-red-700\">{props.error.msg}</span>\n          )}\n        </div>\n        {/* END CENTER SELECT ========================================== */}\n\n        <div className=\"flex flex-col\">\n          <label>Room</label>\n          <input\n            type=\"number\"\n            className={`text-left input-white w-full inline-block border-2 ${\n              props.error && props.error.element === \"room_number\"\n                ? \"border-red-700\"\n                : \"border-gray-400 focus:border-gray-500\"\n            }`}\n            placeholder=\"Room number\"\n            value={props.roomNumber}\n            onChange={(e) => props.setRoomNumber(parseInt(e.target.value))}\n            disabled={props.loadingRequest}\n          />\n          {props.error && props.error.element === \"room_number\" && (\n            <span className=\"text-red-700\">{props.error.msg}</span>\n          )}\n        </div>\n        <div className=\"flex flex-col\">\n          <label>Seats Capacity</label>\n          <input\n            type=\"number\"\n            className={`text-left input-white w-full inline-block border-2 ${\n              props.error && props.error.element === \"room_capacity\"\n                ? \"border-red-700\"\n                : \"border-gray-400 focus:border-gray-500\"\n            }`}\n            placeholder=\"Room capacity\"\n            value={props.roomCapacity}\n            onChange={(e) => props.setRoomCapacity(parseInt(e.target.value))}\n            disabled={props.loadingRequest}\n          />\n          {props.error && props.error.element === \"room_capacity\" && (\n            <span className=\"text-red-700\">{props.error.msg}</span>\n          )}\n        </div>\n      </div>\n      <div className=\"pt-4 flex justify-between\">\n        <button\n          onClick={() => {\n            props.setActionTypes(\"\");\n            props.setThisRoom(null);\n            props.setRoomCapacity(0);\n            props.setRoomNumber(0);\n          }}\n          className={`btn bg-gray-400 text-white hover:bg-gray-600`}\n          type=\"button\"\n          disabled={props.loadingRequest}\n        >\n          Exit\n        </button>\n        <button\n          className=\"btn bg-primary text-white hover:bg-blue-600\"\n          type=\"button\"\n          onClick={() => props.handleSubmitRoom()}\n          disabled={props.loadingRequest}\n        >\n          {props.loadingRequest ? \"Loading...\" : \"Save\"}\n        </button>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default React.memo(RoomForm);\n","import React, { Fragment } from \"react\";\nimport { MdCancel, MdSave } from \"react-icons/md\";\nimport {\n  DistrictInterface,\n  RoomLocationInterface,\n} from \"../../shared/interfaces\";\n\ninterface CenterFormProps {\n  thisDistrict: DistrictInterface | null;\n  thisProvince: RoomLocationInterface | null;\n  locations: RoomLocationInterface[];\n  loadingRequest: boolean;\n  centerName: string;\n  error: {\n    element: string;\n    msg: string;\n  } | null;\n  setCenterName: (value: React.SetStateAction<string>) => void;\n  setError: (\n    value: React.SetStateAction<{\n      element: string;\n      msg: string;\n    } | null>\n  ) => void;\n  setActionTypes: (\n    e:\n      | \"\"\n      | \"CREATE_PROVINCE\"\n      | \"UPDATE_PROVINCE\"\n      | \"CREATE_DISTRICT\"\n      | \"UPDATE_DISTRICT\"\n      | \"CREATE_CENTER\"\n      | \"UPDATE_CENTER\"\n      | \"CREATE_ROOM\"\n      | \"UPDATE_ROOM\"\n  ) => void;\n  handleSubmit: () => Promise<void>;\n  selectProvince: (province_id: string) => void;\n  selectDistrict: (province_id: string, district_id: string) => void;\n}\n\nconst CenterForm: React.FC<CenterFormProps> = (props) => {\n  return (\n    <Fragment>\n      <div className=\"py-4 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n        {/* PROVINCE SELECT ========================================== */}\n        <div className=\"flex flex-col\">\n          <label>Province</label>\n          <select\n            className={`bg-white py-1 px-2 border-2 w-full focus:outline-none focus:bg-gray-100 text-gray-600 focus:text-gray-800 rounded h-10 md:w-full ${\n              props.error && props.error.element === \"province_id\"\n                ? \"border-red-700\"\n                : \"border-gray-400 focus:border-gray-500\"\n            }`}\n            onChange={(e) => {\n              props.error &&\n                props.error.element === \"province_id\" &&\n                props.setError(null);\n              props.selectProvince(e.target.value);\n            }}\n            value={props.thisProvince ? props.thisProvince._id : \"\"}\n            disabled={props.loadingRequest}\n          >\n            <option value=\"\" disabled>\n              Select province\n            </option>\n            {props.locations.map((item, index) => (\n              <option value={item._id} key={item._id + index}>\n                {item.province_name}\n              </option>\n            ))}\n          </select>\n          {props.error && (\n            <span className=\"text-red-700\">{props.error.msg}</span>\n          )}\n        </div>\n        {/* END PROVINCE SELECT ========================================== */}\n\n        {/* DISTRICT SELECT ========================================== */}\n        <div className=\"flex flex-col\">\n          <label>District</label>\n          <select\n            className={`bg-white py-1 px-2 border-2 w-full focus:outline-none focus:bg-gray-100 text-gray-600 focus:text-gray-800 rounded h-10 md:w-full ${\n              props.error && props.error.element === \"district_id\"\n                ? \"border-red-700\"\n                : \"border-gray-400 focus:border-gray-500\"\n            } ${!props.thisProvince && \"cursor-not-allowed\"}`}\n            onChange={(e) => {\n              props.error &&\n                props.error.element === \"district_id\" &&\n                props.setError(null);\n              props.selectDistrict(\n                props.thisProvince ? props.thisProvince._id : \"\",\n                e.target.value\n              );\n            }}\n            value={props.thisDistrict ? props.thisDistrict._id : \"\"}\n            disabled={props.loadingRequest || props.thisProvince === null}\n          >\n            <option value=\"\" disabled>\n              Select district\n            </option>\n            {props.thisProvince !== null &&\n            props.locations.filter((loc) => loc._id === props.thisProvince!._id)\n              .length > 0 ? (\n              props.locations\n                .filter((loc) => loc._id === props.thisProvince!._id)[0]\n                .districts.map((district, index) => (\n                  <option value={district._id} key={index + district._id}>\n                    {district.district_name}\n                  </option>\n                ))\n            ) : (\n              <option value=\"\" disabled>\n                No district found\n              </option>\n            )}\n          </select>\n          {props.error && (\n            <span className=\"text-red-700\">{props.error.msg}</span>\n          )}\n        </div>\n        {/* END DISTRICT SELECT ========================================== */}\n\n        <div className=\"flex flex-col\">\n          <label>Center name</label>\n          <input\n            type=\"text\"\n            className={`bg-white py-1 px-2 border-2 ${\n              props.error && props.error.element === \"center_name\"\n                ? \"border-red-700\"\n                : \"border-gray-400 focus:border-gray-500\"\n            } rounded focus:outline-none focus:bg-gray-100`}\n            onChange={(e) => {\n              props.error &&\n                props.error.element === \"center_name\" &&\n                props.setError(null);\n              props.setCenterName(e.target.value);\n            }}\n            value={props.centerName}\n            disabled={props.loadingRequest}\n          />\n          {props.error && (\n            <span className=\"text-red-700\">{props.error.msg}</span>\n          )}\n        </div>\n      </div>\n      <div className=\"pt-4 flex justify-between\">\n        <button\n          type=\"button\"\n          className=\"btn bg-gray-500 focus:outline-none hover:bg-gray-700 text-white flex items-center gap-1\"\n          onClick={() => {\n            props.setActionTypes(\"\");\n            props.setCenterName(\"\");\n          }}\n          disabled={props.loadingRequest}\n        >\n          <MdCancel\n            className={`inline-block mr-1 text-xl font-bold ${\n              props.loadingRequest ? \"animate-pulse\" : \"\"\n            }`}\n          />\n          Cancel\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-blue focus:outline-none flex items-center gap-1\"\n          onClick={() => props.handleSubmit()}\n          disabled={props.loadingRequest}\n        >\n          <MdSave className=\"inline-blocktext-xl font-bold\" />\n          <span>{props.loadingRequest ? \"loading...\" : \"Save\"}</span>\n        </button>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default React.memo(CenterForm);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  MdAdd,\n  MdClear,\n  MdCreate,\n  MdDelete,\n  MdExpandLess,\n  MdExpandMore,\n} from \"react-icons/md\";\nimport {\n  FC_CreateCenter,\n  FC_CreateRoom,\n  FC_DeleteCenter,\n  FC_DeleteRoom,\n  FC_UpdateCenter,\n  FC_UpdateRoom,\n} from \"../../actions/location\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport {\n  CentersInterface,\n  DistrictInterface,\n  RoomLocationInterface,\n  RoomsInterface,\n  RoomType,\n} from \"../../shared/interfaces\";\nimport { PushPopupAlert } from \"../../actions/system\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { errorToText } from \"../../utils/errors\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport { AiOutlineFileSearch } from \"react-icons/ai\";\nimport RoomForm from \"./RoomForm\";\nimport CenterForm from \"./CenterForm\";\nimport searchData from \"../../utils/search\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport ActionConfirm, {\n  ActionConfirmEnum,\n} from \"../../components/ActionConfirm/ActionConfirm\";\nimport { Auth } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\n\ninterface AppProps {\n  thisProvinceId: string;\n  thisDistrict: DistrictInterface | null;\n  thisCenter: CentersInterface | null;\n  thisRoom: RoomsInterface | null;\n  thisProvince: RoomLocationInterface | null;\n  locations: RoomLocationInterface[];\n  loadingRequest: boolean;\n  actionTypes:\n    | \"\"\n    | \"CREATE_PROVINCE\"\n    | \"UPDATE_PROVINCE\"\n    | \"CREATE_DISTRICT\"\n    | \"UPDATE_DISTRICT\"\n    | \"CREATE_CENTER\"\n    | \"UPDATE_CENTER\"\n    | \"CREATE_ROOM\"\n    | \"UPDATE_ROOM\";\n  setLoadingRequest: (e: boolean) => void;\n  setThisCenter: (e: CentersInterface | null) => void;\n  setThisRoom: (e: RoomsInterface | null) => void;\n  setThisDistrict: (e: DistrictInterface | null) => void;\n  setThisProvince: (e: RoomLocationInterface | null) => void;\n  setActionTypes: (\n    e:\n      | \"\"\n      | \"CREATE_PROVINCE\"\n      | \"UPDATE_PROVINCE\"\n      | \"CREATE_DISTRICT\"\n      | \"UPDATE_DISTRICT\"\n      | \"CREATE_CENTER\"\n      | \"UPDATE_CENTER\"\n      | \"CREATE_ROOM\"\n      | \"UPDATE_ROOM\"\n  ) => void;\n\n  // redux ==========\n  auth: Auth;\n  FC_CreateCenter: Function;\n  FC_UpdateCenter: Function;\n  FC_DeleteCenter: Function;\n  FC_CreateRoom: Function;\n  FC_UpdateRoom: Function;\n  FC_DeleteRoom: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\nconst ViewCenters: React.FC<AppProps> = (props) => {\n  const [centerName, setCenterName] = useState<string>(\"\");\n  const [deleteCenter, setDeleteCenter] = useState<string>(\"\");\n  const [deleteRoom, setDeleteRoom] = useState<string>(\"\");\n  const [roomNumber, setRoomNumber] = useState<number>(0);\n  const [roomCapacity, setRoomCapacity] = useState<number>(0);\n  const [error, setError] = useState<{ element: string; msg: string } | null>(\n    null\n  );\n  const [loadingDeletion, setLoadingDeletion] = useState<string>(\"\");\n  const [searchCenter, setSearchCenter] = useState<string>(\"\");\n\n  const handleSubmit = async () => {\n    if (!props.thisProvince) {\n      return setError({\n        element: \"province_id\",\n        msg: \"Province is required\",\n      });\n    }\n    if (!props.thisDistrict) {\n      return setError({\n        element: \"district_id\",\n        msg: \"District is required\",\n      });\n    }\n    if (!centerName.length) {\n      return setError({\n        element: \"center_name\",\n        msg: \"Center name is required\",\n      });\n    }\n    props.setLoadingRequest(true);\n    try {\n      let res;\n      if (props.actionTypes === \"CREATE_CENTER\") {\n        res = await axios.post<{ data: CentersInterface }>(\n          `${API.APPLICATION}/center`,\n          {\n            education_institute_id: props.auth.education_institution_id,\n            district_id: props.thisDistrict._id,\n            center_name: centerName,\n            rooms: [],\n          }\n        );\n        if (res.data) {\n          props.FC_CreateCenter({\n            province_id: props.thisProvinceId,\n            district_id: props.thisDistrict._id,\n            data: res.data.data,\n          });\n          props.PushPopupAlert({\n            title: \"New Center created successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(\"\");\n          setCenterName(\"\");\n        }\n      } else if (props.thisCenter && props.actionTypes === \"UPDATE_CENTER\") {\n        const rooms: string[] = props.thisCenter.rooms.map((room) => room._id);\n        res = await axios.patch<{ update: CentersInterface }>(\n          `${API.APPLICATION}/center`,\n          {\n            education_institute_id: props.thisCenter.education_institute_id,\n            examination_center_id: props.thisCenter._id,\n            center_name: centerName,\n            rooms,\n            isUsed: true,\n          }\n        );\n        if (res.data) {\n          props.FC_UpdateCenter({\n            province_id: props.thisProvinceId,\n            district_id: props.thisDistrict._id,\n            examination_center_id: props.thisCenter._id,\n            center_name: centerName,\n          });\n          props.PushPopupAlert({\n            title: \"Center updated successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(\"\");\n          setCenterName(\"\");\n        }\n      }\n    } catch (error) {\n      console.log({ doc_category_error: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      props.setLoadingRequest(false);\n    }\n  };\n\n  const handleDelete = async (centerId: string) => {\n    if (isEmptyOrSpaces(props.thisProvinceId)) {\n      return PushPopupAlert({\n        title: \"Province is required!\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n    if (!props.thisDistrict) {\n      return PushPopupAlert({\n        title: \"District is required!\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n    setLoadingDeletion(centerId);\n    try {\n      const res = await axios.delete<CentersInterface>(\n        `${API.APPLICATION}/center/${centerId}`\n      );\n\n      if (res.data) {\n        props.FC_DeleteCenter({\n          province_id: props.thisProvinceId,\n          district_id: props.thisDistrict._id,\n          center_id: centerId,\n        });\n        let newArr: DistrictInterface = { ...props.thisDistrict }; // copying the old datas array\n        let center: CentersInterface[] = [];\n\n        center = props.thisDistrict.centers.filter(\n          (element) => element._id !== centerId\n        );\n        newArr.centers = center;\n        props.setThisDistrict(newArr);\n\n        props.PushPopupAlert({\n          title: \"Center deleted successfully\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setLoadingRequest(false);\n        props.setActionTypes(\"\");\n      }\n    } catch (error) {\n      console.log({ province_error: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      props.setLoadingRequest(false);\n    }\n    setLoadingDeletion(\"\");\n  };\n\n  const handleSubmitRoom = async () => {\n    if (!props.thisProvince) {\n      return setError({\n        element: \"province_id\",\n        msg: \"Province is required\",\n      });\n    }\n\n    if (!props.thisDistrict) {\n      return setError({\n        element: \"district_id\",\n        msg: \"District is required\",\n      });\n    }\n\n    if (!props.thisCenter) {\n      return setError({\n        element: \"center_id\",\n        msg: \"Center is required\",\n      });\n    }\n\n    if (roomNumber <= 0) {\n      return setError({\n        element: \"room_number\",\n        msg: \"Room number is required\",\n      });\n    }\n\n    if (roomCapacity <= 0) {\n      return setError({\n        element: \"room_capacity\",\n        msg: \"Enter valid room capacity\",\n      });\n    }\n    props.setLoadingRequest(true);\n    try {\n      let res;\n      if (props.actionTypes === \"CREATE_ROOM\") {\n        res = await axios.post<{\n          data: RoomsInterface;\n        }>(`${API.APPLICATION}/room`, {\n          center_id: props.thisCenter._id,\n          room_type: RoomType.Physical,\n          room_number: roomNumber,\n          capacity: roomCapacity,\n          occupied: 0,\n        });\n        if (res.data) {\n          props.FC_CreateRoom({\n            province_id: props.thisProvinceId,\n            district_id: props.thisDistrict._id,\n            center_id: props.thisCenter._id,\n            data: res.data.data,\n          });\n          props.PushPopupAlert({\n            title: \"New Room created successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(\"\");\n          setRoomNumber(0);\n          setRoomCapacity(0);\n        }\n      } else if (props.thisRoom && props.actionTypes === \"UPDATE_ROOM\") {\n        res = await axios.patch<{ data: RoomsInterface }>(\n          `${API.APPLICATION}/room`,\n          {\n            examination_center_room_id: props.thisRoom._id,\n            center_id: props.thisCenter._id,\n            room_type: props.thisRoom.room_type,\n            room_number: roomNumber,\n            capacity: roomCapacity,\n            occupied: props.thisRoom.occupied,\n            isUsed: true,\n          }\n        );\n        if (res.data) {\n          props.FC_UpdateRoom({\n            province_id: props.thisProvinceId,\n            district_id: props.thisDistrict._id,\n            center_id: props.thisCenter._id,\n            room_id: props.thisRoom._id,\n            room_number: roomNumber,\n            capacity: roomCapacity,\n          });\n          props.PushPopupAlert({\n            title: \"Room updated successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(\"\");\n          setRoomNumber(0);\n          setRoomCapacity(0);\n          props.setThisRoom(null);\n        }\n      }\n    } catch (error) {\n      console.log({ doc_category_error: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      props.setLoadingRequest(false);\n    }\n  };\n\n  const handleDeleteRoom = async (roomId: string) => {\n    if (isEmptyOrSpaces(props.thisProvinceId)) {\n      return PushPopupAlert({\n        title: \"Province is required!\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n    if (!props.thisDistrict) {\n      return PushPopupAlert({\n        title: \"District is required!\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n    if (props.thisCenter === null) {\n      return PushPopupAlert({\n        title: \"Center is required!\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n    setLoadingDeletion(roomId);\n    try {\n      const res = await axios.delete<CentersInterface>(\n        `${API.APPLICATION}/centerroom/${roomId}`\n      );\n      if (res.data) {\n        console.log({ res });\n        let newArr: CentersInterface = { ...props.thisCenter }; // copying the old datas array\n        let room: RoomsInterface[] = [];\n\n        room = props.thisCenter.rooms.filter(\n          (element) => element._id !== roomId\n        );\n        newArr.rooms = room;\n        props.FC_DeleteRoom({\n          province_id: props.thisProvinceId,\n          district_id: props.thisDistrict._id,\n          center_id: props.thisCenter._id,\n          room_id: roomId,\n        });\n        props.setThisCenter(newArr);\n        props.PushPopupAlert({\n          title: \"Room deleted successfully\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setLoadingRequest(false);\n        props.setActionTypes(\"\");\n      }\n    } catch (error) {\n      console.log({ province_error: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      props.setLoadingRequest(false);\n    }\n    setLoadingDeletion(\"\");\n  };\n\n  const selectProvince = (province_id: string | \"ALL\") => {\n    if (province_id !== \"ALL\") {\n      let province = props.locations.find((items) => items._id === province_id);\n      if (province) {\n        props.setThisProvince(province);\n        if (province.districts.length > 0) {\n          props.setThisDistrict(null);\n        }\n      }\n    } else {\n      props.setThisProvince(null);\n      props.setThisDistrict(null);\n    }\n  };\n\n  const selectDistrict = (province_id: string, district_id: string) => {\n    if (province_id !== \"ALL\" || !isEmptyOrSpaces(province_id)) {\n      const province = props.locations.find(\n        (items) => items._id === province_id\n      );\n      if (province) {\n        const district = province.districts.find((d) => d._id === district_id);\n        props.setThisDistrict(district ? district : null);\n      }\n      props.setThisCenter(null);\n    }\n  };\n\n  const selectCenter = (\n    province_id: string,\n    district_id: string,\n    center_id: string\n  ) => {\n    if (\n      province_id !== \"ALL\" ||\n      !isEmptyOrSpaces(province_id) ||\n      district_id !== \"ALL\" ||\n      !isEmptyOrSpaces(district_id)\n    ) {\n      const province = props.locations.find(\n        (items) => items._id === province_id\n      );\n      if (province) {\n        const district = province.districts.find((d) => d._id === district_id);\n        props.setThisDistrict(district ? district : null);\n      }\n      props.setThisCenter(null);\n    }\n    props.setThisCenter(\n      props.locations\n        .filter((items) => items._id === province_id)[0]\n        .districts.filter((d) => d._id === district_id)[0]\n        .centers.filter((item) => item._id === center_id)[0]\n    );\n  };\n\n  const isRoomExist = (thisCenter: CentersInterface): boolean => {\n    if (thisCenter.rooms.length > 0) {\n      return true;\n    }\n    return false;\n  };\n\n  const cleanModal = () => {\n    if (\n      props.actionTypes === \"CREATE_ROOM\" ||\n      props.actionTypes === \"UPDATE_ROOM\"\n    ) {\n      props.setThisRoom(null);\n      setRoomCapacity(0);\n      setRoomNumber(0);\n    }\n    if (\n      (props.actionTypes === \"CREATE_CENTER\" ||\n        props.actionTypes === \"UPDATE_CENTER\") &&\n      props.thisProvince\n    ) {\n      setCenterName(\"\");\n    }\n    props.setActionTypes(\"\");\n    setError(null);\n  };\n\n  const getDistinctCenter = (\n    province: RoomLocationInterface | null,\n    district: DistrictInterface | null\n  ): CentersInterface[] => {\n    let thisProvince: RoomLocationInterface | undefined = undefined;\n    let thisDistrict: DistrictInterface | undefined = undefined;\n    let result: CentersInterface[] = [];\n    if (province && !district) {\n      thisProvince = props.locations.find(\n        (item) =>\n          item.province_code.toString() === province.province_code.toString()\n      );\n      if (thisProvince) {\n        for (const key in thisProvince.districts) {\n          if (\n            Object.prototype.hasOwnProperty.call(thisProvince.districts, key)\n          ) {\n            const elementDistrict = thisProvince.districts[key];\n            for (const key in elementDistrict.centers) {\n              if (\n                Object.prototype.hasOwnProperty.call(\n                  elementDistrict.centers,\n                  key\n                )\n              ) {\n                result.push(elementDistrict.centers[key]);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    if (province && district) {\n      thisProvince = props.locations.find(\n        (item) =>\n          item.province_code.toString() === province.province_code.toString()\n      );\n      if (thisProvince) {\n        thisDistrict = thisProvince.districts.find(\n          (item) =>\n            item.district_code.toString() === district.district_code.toString()\n        );\n        if (thisDistrict) {\n          for (const key in thisDistrict.centers) {\n            if (\n              Object.prototype.hasOwnProperty.call(thisDistrict.centers, key)\n            ) {\n              result.push(thisDistrict.centers[key]);\n            }\n          }\n        }\n      }\n    }\n\n    if (!province && !district) {\n      for (const provKey in props.locations) {\n        if (Object.prototype.hasOwnProperty.call(props.locations, provKey)) {\n          const elementProv = props.locations[provKey];\n          for (const distKey in elementProv.districts) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                elementProv.districts,\n                distKey\n              )\n            ) {\n              const elementDistrict = elementProv.districts[distKey];\n              for (const key in elementDistrict.centers) {\n                if (\n                  Object.prototype.hasOwnProperty.call(\n                    elementDistrict.centers,\n                    key\n                  )\n                ) {\n                  result.push(elementDistrict.centers[key]);\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    // result = result.filter(\n    //   (item) =>\n    //     item.education_institution_id === props.auth.education_institution_id\n    // );\n    return result;\n  };\n\n  const selectLocation = (district: string) => {\n    let thisProvince: RoomLocationInterface | undefined = undefined;\n    let thisDistrict: DistrictInterface | undefined = undefined;\n    let result: CentersInterface[] = [];\n\n    for (const provKey in props.locations) {\n      if (Object.prototype.hasOwnProperty.call(props.locations, provKey)) {\n        thisDistrict = props.locations[provKey].districts.find(\n          (item) => item._id === district\n        );\n        if (thisDistrict) {\n          const _thisDistrict = thisDistrict;\n          thisProvince = props.locations.find(\n            (item) =>\n              item.province_code.toString() ===\n              _thisDistrict.province_code.toString()\n          );\n\n          if (thisProvince) {\n            props.setThisProvince(thisProvince);\n            props.setThisDistrict(thisDistrict);\n          }\n        }\n      }\n    }\n    return result;\n  };\n\n  return (\n    <div\n      className={`bg-white w-full p-2 border border-gray-300 rounded shadow`}\n    >\n      <div className=\"border-b px-2 py-3 flex justify-between\">\n        <h2 className=\"text-3xl font-semibold text-gray-800\">\n          List of Centers\n        </h2>\n        <div className=\"flex items-center gap-2\">\n          <button\n            type=\"button\"\n            className={`btn mb-1 border-2 border-blue-400 bg-blue-400 hover:bg-blue-500 hover:border-blue-500\n        text-white rounded-md flex items-center font-bold focus:outline-none ${\n          props.loadingRequest && \"cursor-wait\"\n        } ${props.actionTypes !== \"\" && \"cursor-not-allowed\"}`}\n            onClick={() => props.setActionTypes(\"CREATE_CENTER\")}\n            disabled={props.actionTypes !== \"\" || props.loadingRequest}\n          >\n            <MdAdd className=\"inline-block mr-1 text-xl font-bold\" /> New Center\n          </button>\n          <button\n            type=\"button\"\n            className={`btn hover:bg-blue-500 mb-1 border-2 border-blue-500 bg-white\n        hover:text-white rounded-md flex items-center font-bold text-gray-700 focus:outline-none gap-1 ${\n          props.loadingRequest && \"cursor-wait\"\n        } ${props.actionTypes !== \"\" && \"cursor-not-allowed\"}`}\n            onClick={() => props.setActionTypes(\"CREATE_ROOM\")}\n            disabled={props.actionTypes !== \"\" || props.loadingRequest}\n          >\n            <MdAdd className=\"inline-block mr-1 text-xl font-bold\" />\n            New Room\n          </button>\n        </div>\n      </div>\n\n      {/* FILTER FORM ======================================== */}\n      <div className=\"flex flex-col sm:flex-row items-center gap-2 w-full my-2\">\n        <div className=\"w-full sm:w-1/5\">\n          <select\n            className=\"input-white h-10 text-sm border-2 border-gray-400 focus:border-gray-500 w-full\"\n            placeholder={`Filter by province`}\n            onChange={(e: React.ChangeEvent<HTMLSelectElement>) =>\n              selectProvince(e.target.value)\n            }\n            value={props.thisProvince ? props.thisProvince._id : \"\"}\n          >\n            <option value=\"ALL\">All province</option>\n            {props.locations.map((province, index) => (\n              <option value={province._id} key={index + province._id}>\n                {province.province_name}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div className=\"w-full sm:w-1/5\">\n          <select\n            className=\"input-white h-10 text-sm border-2 border-gray-400 focus:border-gray-500 w-full\"\n            placeholder={`Filter by district`}\n            onChange={(e: React.ChangeEvent<HTMLSelectElement>) =>\n              selectDistrict(props.thisProvince!._id, e.target.value)\n            }\n            value={props.thisDistrict ? props.thisDistrict._id : \"ALL\"}\n          >\n            <option value=\"ALL\">All district</option>\n            {props.thisProvince !== null ? (\n              props.locations.filter(\n                (loc) => loc._id === props.thisProvince!._id\n              ).length > 0 ? (\n                props.locations\n                  .filter((loc) => loc._id === props.thisProvince!._id)[0]\n                  .districts.map((district, index) => (\n                    <option value={district._id} key={index + district._id}>\n                      {district.district_name}\n                    </option>\n                  ))\n              ) : (\n                <option value=\"\" disabled>\n                  No district found\n                </option>\n              )\n            ) : (\n              <option value=\"\" disabled>\n                Select province first!\n              </option>\n            )}\n          </select>\n        </div>\n        <div className=\"w-full sm:w-3/5\">\n          <input\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n              setSearchCenter(e.target.value)\n            }\n            type=\"text\"\n            className=\"input-white h-10 text-sm border-2 border-gray-400 focus:border-gray-500\"\n            placeholder={`Search centers by title`}\n            value={searchCenter}\n            disabled={\n              getDistinctCenter(props.thisProvince, props.thisDistrict).length >\n              0\n                ? false\n                : true\n            }\n          />\n        </div>\n      </div>\n      {/* END FILTER FORM ======================================== */}\n\n      {getDistinctCenter(props.thisProvince, props.thisDistrict).length > 0 ? (\n        <div className=\"bg-white\">\n          {searchData(\n            getDistinctCenter(props.thisProvince, props.thisDistrict),\n            searchCenter\n          ).map((center: CentersInterface, index) => (\n            <div\n              key={index + center._id}\n              className=\"p-2 my-3 rounded border hover:bg-gray-50\"\n            >\n              <div className=\"flex justify-between items-center group\">\n                <div\n                  className=\"ml-2 cursor-pointer\"\n                  onClick={() =>\n                    !props.thisCenter || props.thisCenter._id !== center._id\n                      ? props.setThisCenter(center)\n                      : props.setThisCenter(null)\n                  }\n                >\n                  <div className=\"text-2xl font-semibold text-gray-600\">\n                    {center.center_name}\n                  </div>\n                  <div className=\"text-base top-1 text-gray-600\">\n                    {center.rooms.length > 0\n                      ? center.rooms.length + \" Room(s)\"\n                      : null}\n                  </div>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  {props.thisCenter && props.thisCenter._id === center._id && (\n                    <button\n                      className={`text-white bg-blue-400 group-hover:bg-blue-600 focus:outline-none p-2 rounded-full group-hover:shadow-md group-hover:text-white  ${\n                        props.loadingRequest && \"cursor-wait\"\n                      } ${props.actionTypes !== \"\" && \"cursor-not-allowed\"}`}\n                      onClick={() => {\n                        setCenterName(center.center_name);\n                        selectLocation(center.district_id);\n                        props.setThisCenter(center);\n                        props.setActionTypes(\"UPDATE_CENTER\");\n                      }}\n                      disabled={\n                        props.loadingRequest || props.actionTypes !== \"\"\n                      }\n                      title=\"Edit center\"\n                    >\n                      <MdCreate className=\"w-6 h-6\" />\n                    </button>\n                  )}\n                  {props.thisCenter &&\n                    props.thisCenter._id === center._id &&\n                    !isRoomExist(props.thisCenter) && (\n                      <button\n                        title=\"Delete center\"\n                        className={`bg-red-400 group-hover:bg-red-600 text-white focus:outline-none p-2 rounded-full group-hover:shadow-md group-hover:text-white ${\n                          props.loadingRequest && \"cursor-wait\"\n                        } ${props.actionTypes !== \"\" && \"cursor-not-allowed\"}`}\n                        onClick={() => setDeleteCenter(center._id)}\n                        disabled={\n                          props.loadingRequest ||\n                          loadingDeletion.length > 0 ||\n                          props.actionTypes !== \"\"\n                        }\n                      >\n                        <MdClear className=\"w-6 h-6\" />\n                      </button>\n                    )}\n\n                  <button\n                    title={\n                      props.thisCenter && props.thisCenter._id === center._id\n                        ? \"Close Center\"\n                        : \"View Rooms\"\n                    }\n                    className={`${\n                      props.thisCenter && props.thisCenter._id === center._id\n                        ? \"group-hover:bg-gray-600\"\n                        : \"group-hover:bg-gray-500\"\n                    } p-2 rounded-full bg-gray-300 group-hover:shadow-md flex justify-center items-center focus:outline-none text-gray-800 group-hover:text-white`}\n                    onClick={() =>\n                      !props.thisCenter || props.thisCenter._id !== center._id\n                        ? props.setThisCenter(center)\n                        : props.setThisCenter(null)\n                    }\n                  >\n                    {props.thisCenter && props.thisCenter._id === center._id ? (\n                      <MdExpandLess className=\"w-6 h-6\" />\n                    ) : (\n                      <MdExpandMore className=\"w-6 h-6\" />\n                    )}\n                  </button>\n                </div>\n              </div>\n\n              {props.thisCenter && props.thisCenter._id === center._id && (\n                <div\n                  className={`bg-white h-full w-full mt-2 p-2 pb-5 border border-gray-300 rounded shadow animate__animated animate__fadeIn`}\n                >\n                  <div className=\"border-b px-2 py-3 flex justify-between\">\n                    <h2 className=\"text-3xl font-semibold text-gray-800\">\n                      List of Rooms\n                    </h2>\n\n                    <button\n                      type=\"button\"\n                      className={`btn hover:bg-blue-500 mb-1 border-2 border-blue-500 bg-white hover:text-white rounded-md flex items-center font-bold text-gray-700 focus:outline-none gap-1 ${\n                        props.loadingRequest && \"cursor-wait\"\n                      } ${props.actionTypes !== \"\" && \"cursor-not-allowed\"}`}\n                      onClick={() => {\n                        props.setActionTypes(\"CREATE_ROOM\");\n                        selectLocation(center.district_id);\n                      }}\n                      disabled={\n                        props.actionTypes !== \"\" || props.loadingRequest\n                      }\n                    >\n                      <MdAdd className=\"inline-block mr-1 text-xl font-bold\" />\n                      New Room\n                    </button>\n                  </div>\n\n                  {center.rooms.length > 0 ? (\n                    <table\n                      className={`w-full shadow sm:rounded-lg table-auto order-table max-w-full`}\n                    >\n                      <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                        <tr\n                          className={`text-left tracking-wide bg-gray-100 border-b-2 border-gray-500 text-gray-600 overflow-hidden`}\n                        >\n                          <th className={`p-3 text-left`}>Room</th>\n                          <th className={`p-3 text-left`}>Type</th>\n                          <th className={`p-3 text-left`}>Capacity</th>\n                          {/* <th className={`p-3 text-left`}>Occupied</th> */}\n                          <th className={`p-3 text-left`}></th>\n                        </tr>\n                      </thead>\n                      <tbody\n                        id={`table-data_${center._id}`}\n                        className=\"bg-white text-black text-base\"\n                      >\n                        {center.rooms.map(\n                          (room: RoomsInterface, index: number) => (\n                            <tr key={index + room._id}>\n                              {/* <td className=\"p-3 text-left whitespace-nowrap\">{index + 1}</td> */}\n                              <td className=\"p-3 text-left\">\n                                {room.room_number}\n                              </td>\n                              <td className=\"p-3 text-left\">\n                                {room.room_type}\n                              </td>\n                              <td className=\"p-3 text-left\">{room.capacity}</td>\n                              {/* <td className=\"p-3 text-left\">{room.occupied}</td> */}\n                              <td>\n                                <div className=\"flex items-center justify-center gap-2\">\n                                  <button\n                                    title=\"Update this field\"\n                                    className=\"bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none\"\n                                    onClick={() => {\n                                      props.setThisRoom(room);\n                                      setRoomCapacity(room.capacity);\n                                      setRoomNumber(room.room_number);\n                                      selectLocation(center.district_id);\n                                      props.setActionTypes(\"UPDATE_ROOM\");\n                                    }}\n                                    disabled={\n                                      props.loadingRequest ||\n                                      props.actionTypes !== \"\"\n                                    }\n                                  >\n                                    <MdCreate className=\"text-blue-700 w-7 h-7\" />\n                                  </button>\n                                  <button\n                                    title=\"Delete this field\"\n                                    className=\"bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none\"\n                                    onClick={() => setDeleteRoom(room._id)}\n                                    disabled={\n                                      props.loadingRequest ||\n                                      props.actionTypes !== \"\"\n                                    }\n                                  >\n                                    {loadingDeletion === room._id ? (\n                                      \"Loading...\"\n                                    ) : (\n                                      <div className=\"flex justify-center items-center gap-1\">\n                                        <MdDelete className=\"text-red-700 w-7 h-7\" />\n                                      </div>\n                                    )}\n                                  </button>\n                                </div>\n                              </td>\n                            </tr>\n                          )\n                        )}\n                      </tbody>\n                    </table>\n                  ) : (\n                    <div className=\"text-center py-8\">\n                      <AiOutlineFileSearch className=\"w-24 h-24 mx-auto text-gray-600\" />\n                      <span className=\"text-gray-600 text-2xl\">\n                        No Data Found\n                      </span>\n                    </div>\n                  )}\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n      ) : (\n        <div className=\"text-center py-8\">\n          <AiOutlineFileSearch className=\"w-24 h-24 mx-auto text-gray-600\" />\n          <span className=\"text-gray-600 text-2xl\">No Data Found</span>\n        </div>\n      )}\n\n      {/* modal for creating new categories or sub category */}\n      {props.actionTypes !== \"\" && (\n        <Modal\n          backDrop={true}\n          theme={Themes.default}\n          close={(): void => cleanModal()}\n          displayClose={true}\n          backDropClose={false}\n          title={\n            <div className=\"flex items-center space-x-5\">\n              <div className=\"block pl-2 font-semibold text-xl self-start text-gray-700\">\n                <h2 className=\"uppercase text-back\">\n                  {props.actionTypes === \"CREATE_ROOM\"\n                    ? \"CREATING NEW ROOM\"\n                    : props.actionTypes === \"UPDATE_ROOM\" &&\n                      \"UPDATING EXISTING ROOM\"}\n                  {props.actionTypes === \"CREATE_CENTER\"\n                    ? \"CREATING NEW CENTER\"\n                    : props.actionTypes === \"UPDATE_CENTER\" &&\n                      \"UPDATING EXISTING CENTER\"}\n                </h2>\n              </div>\n            </div>\n          }\n          widthSizeClass={ModalSize.medium}\n          padding={{ title: true, body: false, footer: false }}\n        >\n          <div className=\"mx-5 mb-8\">\n            <div className=\"divide-y divide-gray-200\">\n              {(props.actionTypes === \"CREATE_ROOM\" ||\n                props.actionTypes === \"UPDATE_ROOM\") && (\n                <RoomForm\n                  roomNumber={roomNumber}\n                  roomCapacity={roomCapacity}\n                  thisRoom={props.thisRoom}\n                  setError={setError}\n                  loadingRequest={props.loadingRequest}\n                  setRoomNumber={setRoomNumber}\n                  setRoomCapacity={setRoomCapacity}\n                  setThisRoom={props.setThisRoom}\n                  setActionTypes={props.setActionTypes}\n                  handleSubmitRoom={handleSubmitRoom}\n                  thisDistrict={props.thisDistrict}\n                  thisProvince={props.thisProvince}\n                  locations={props.locations}\n                  error={error}\n                  selectProvince={selectProvince}\n                  selectDistrict={selectDistrict}\n                  selectCenter={selectCenter}\n                  thisCenter={props.thisCenter}\n                />\n              )}\n              {(props.actionTypes === \"CREATE_CENTER\" ||\n                props.actionTypes === \"UPDATE_CENTER\") && (\n                <CenterForm\n                  centerName={centerName}\n                  error={error}\n                  loadingRequest={props.loadingRequest}\n                  setCenterName={setCenterName}\n                  setError={setError}\n                  setActionTypes={props.setActionTypes}\n                  handleSubmit={handleSubmit}\n                  thisDistrict={props.thisDistrict}\n                  thisProvince={props.thisProvince}\n                  locations={props.locations}\n                  selectProvince={selectProvince}\n                  selectDistrict={selectDistrict}\n                />\n              )}\n            </div>\n          </div>\n        </Modal>\n      )}\n      {/* end modal for creating new categories or sub category */}\n\n      {/* ----------------------------------------------------------- */}\n      {!isEmptyOrSpaces(deleteCenter) && (\n        <ActionConfirm\n          modalType={ActionConfirmEnum.DELETE}\n          confirmFun={() => handleDelete(deleteCenter)}\n          setModalAction={(status: boolean) => !status && setDeleteCenter(\"\")}\n          description={\n            \"Do you really want to delete this center? This process can affect application shortlisting\"\n          }\n        />\n      )}\n      {!isEmptyOrSpaces(deleteRoom) && (\n        <ActionConfirm\n          modalType={ActionConfirmEnum.DELETE}\n          confirmFun={() => handleDeleteRoom(deleteRoom)}\n          setModalAction={(status: boolean) => !status && setDeleteRoom(\"\")}\n          description={\n            \"Do you really want to delete this room? This process can affect application shortlisting\"\n          }\n        />\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n}: StoreState): {\n  auth: Auth;\n} => {\n  return { auth };\n};\nexport default React.memo(\n  connect(mapStateToProps, {\n    FC_CreateCenter,\n    FC_UpdateCenter,\n    FC_DeleteCenter,\n    FC_CreateRoom,\n    FC_UpdateRoom,\n    FC_DeleteRoom,\n    PushPopupAlert,\n  })(ViewCenters)\n);\n","import React, { Component } from \"react\";\nimport { AiOutlineFilter } from \"react-icons/ai\";\nimport { BsCaretRightFill } from \"react-icons/bs\";\nimport { connect } from \"react-redux\";\nimport { Auth } from \"../../actions\";\nimport { getAllRoom } from \"../../actions/location\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport { StoreState } from \"../../reducers\";\nimport {\n  CentersInterface,\n  DistrictInterface,\n  RoomLocationInterface,\n  RoomsInterface,\n} from \"../../shared/interfaces\";\nimport { FC_HasInstitute } from \"../../utils/functions\";\nimport NoSession from \"../SessionSettings/NoSession\";\nimport ViewCenters from \"./ViewCenters\";\n\ninterface AppProps {\n  auth: Auth;\n  locations: RoomLocationInterface[];\n  getAllRoom: Function;\n}\n\ninterface AppStates {\n  actionTypes:\n    | \"CREATE_PROVINCE\"\n    | \"UPDATE_PROVINCE\"\n    | \"CREATE_DISTRICT\"\n    | \"UPDATE_DISTRICT\"\n    | \"CREATE_CENTER\"\n    | \"UPDATE_CENTER\"\n    | \"CREATE_ROOM\"\n    | \"UPDATE_ROOM\"\n    | \"\";\n  thisProvince: RoomLocationInterface | null;\n  thisDistrict: DistrictInterface | null;\n  thisCenter: CentersInterface | null;\n  thisRoom: RoomsInterface | null;\n  loading: boolean;\n  loadingRequest: boolean;\n}\nclass Index extends Component<AppProps, AppStates> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      actionTypes: \"\",\n      thisProvince: null,\n      thisDistrict: null,\n      thisCenter: null,\n      thisRoom: null,\n      loading: true,\n      loadingRequest: false,\n    };\n  }\n\n  componentDidMount() {\n    if (FC_HasInstitute(this.props.auth.education_institution_id) !== false) {\n      if (this.props.locations.length === 0 && this.state.loading) {\n        this.props.getAllRoom((status: boolean, msg: string) => {\n          this.setState({ loading: status });\n          if (!status && msg.length > 0) {\n            console.error(msg);\n          }\n          // setLoadingLocations(false);\n        });\n      } else if (this.state.loading) {\n        this.setState({ loading: false });\n      }\n    }\n  }\n\n  render() {\n    if (FC_HasInstitute(this.props.auth.education_institution_id) === false) {\n      return (\n        <NoSession\n          title=\"Authorization Error\"\n          description=\"Please contact the administration to get the access.\"\n        />\n      );\n    }\n\n    if (this.state.loading === true) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading locations...\n        </div>\n      );\n    }\n    return (\n      <>\n        <div className=\"w-full my-5\">\n          {/* header title */}\n          <div className=\"flex justify-between w-full p-2 gap-1\">\n            <div className=\"flex flex-col\">\n              <span className=\"text-blue-600 text-2xl md:text-2xl lg:text-3xl font-bold\">\n                Locations Management\n              </span>\n\n              <div className=\"flex flex-row items-center md:gap-3 gap-2 mt-1\">\n                <AiOutlineFilter className=\"text-xl\" />\n                <div className=\"flex flex-row items-center gap-1\">\n                  {this.state.thisProvince && (\n                    <span className=\"text-gray-700 text-base font-bold\">\n                      {this.state.thisProvince.province_name}\n                    </span>\n                  )}\n                  {this.state.thisDistrict && (\n                    <div className=\"flex flex-row items-center gap-1\">\n                      <BsCaretRightFill />\n                      <span className=\"text-blue-600 text-base font-bold underline\">\n                        {this.state.thisDistrict.district_name} district\n                      </span>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* end header title */}\n\n          {this.props.locations.length > 0 ? (\n            <div className=\"w-full\">\n              {/* ============================= CENTERS ============================= */}\n              <ViewCenters\n                locations={this.props.locations}\n                thisProvince={this.state.thisProvince}\n                thisProvinceId={\n                  this.state.thisProvince ? this.state.thisProvince._id : \"\"\n                }\n                thisDistrict={this.state.thisDistrict}\n                thisCenter={this.state.thisCenter}\n                thisRoom={this.state.thisRoom}\n                loadingRequest={this.state.loadingRequest}\n                actionTypes={this.state.actionTypes}\n                setThisProvince={(e: RoomLocationInterface | null) =>\n                  this.setState({ thisProvince: e })\n                }\n                setThisDistrict={(e: DistrictInterface | null) =>\n                  this.setState({ thisDistrict: e })\n                }\n                setLoadingRequest={(e: boolean) =>\n                  this.setState({ loadingRequest: e })\n                }\n                setThisCenter={(e: CentersInterface | null) =>\n                  this.setState({ thisCenter: e })\n                }\n                setThisRoom={(e: RoomsInterface | null) =>\n                  this.setState({ thisRoom: e })\n                }\n                setActionTypes={(\n                  e:\n                    | \"CREATE_PROVINCE\"\n                    | \"UPDATE_PROVINCE\"\n                    | \"CREATE_DISTRICT\"\n                    | \"UPDATE_DISTRICT\"\n                    | \"CREATE_CENTER\"\n                    | \"UPDATE_CENTER\"\n                    | \"CREATE_ROOM\"\n                    | \"UPDATE_ROOM\"\n                    | \"\"\n                ) => this.setState({ actionTypes: e })}\n              />\n              {/* =========================== END CENTERS =========================== */}\n            </div>\n          ) : (\n            <NoResult theme={NoResultThemes.Dark} value=\"No Locations found!\" />\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  locations,\n}: StoreState): { auth: Auth; locations: RoomLocationInterface[] } => {\n  return { auth, locations: locations.roomLocation };\n};\n\nexport const Centers = connect(mapStateToProps, {\n  getAllRoom,\n})(Index);\n","import React from \"react\";\nimport { IoWarning } from \"react-icons/io5\";\n// import { MdInfoOutline } from \"react-icons/md\";\nimport { NavLink } from \"react-router-dom\";\n\ntype NoSessionProps = {\n  title?: string;\n  description?: string;\n};\n\nconst NoSession: React.FC<NoSessionProps> = ({\n  title = \"No session available\",\n  description = \"Please Wait for the system to publish the sessions or contact the administrator\",\n}) => {\n  return (\n    <div className=\"w-full my-5\">\n      <section className=\"py-10 flex flex-col items-center rounded border border-gray-300 bg-white text-2xl font-medium text-yellow-800 animate__animated animate__pulse\">\n        <div className=\"flex flex-col items-center\">\n          <IoWarning className=\"w-32 h-32\" />\n          {description}\n        </div>\n        {false && (\n          <div className=\"text-center group text-sm -mb-3 mt-5\">\n            <NavLink\n              to=\"/apps-page\"\n              className=\"border border-rounded-md bg-gray-100 text-gray-900 rounded border-gray-100 group-hover:bg-gray-50 group-hover:border-gray-400 px-2 py-1\"\n            >\n              Back to App\n            </NavLink>\n          </div>\n        )}\n      </section>\n    </div>\n  );\n};\n\nexport default React.memo(NoSession);\n","import {\n  ApplicationStates,\n  SESSION_PLAN_KEYS,\n} from \"../interfaces/application\";\n\nexport interface SystemSettingsInterface {\n  system_setting_id: string;\n  name: string;\n  key: string;\n  status: \"enabled\" | \"disabled\";\n}\n\nexport interface ApplicationSessionInterface {\n  is_active: boolean;\n  application_session_name: string;\n  period: string;\n  application_start_date: string;\n  application_end_date: string;\n  createdAt: string;\n  updatedAt: string;\n  application_session_id: string;\n}\n\nexport interface UserInfoInterface {\n  document_type?: string;\n  issue_number?: string;\n  date_of_issue?: string;\n  date_of_expiry?: string;\n  place_of_issue?: string;\n  application_number?: string;\n  fname: string;\n  lname: string;\n  sex: \"M\" | \"F\";\n  father_names: string;\n  mother_names: string;\n  date_of_birth: string;\n  place_of_birth?: string;\n  country_of_birth: string;\n  village_id: string;\n  village: string;\n  cell: string;\n  sector: string;\n  district: string;\n  province: string;\n  photo?: string;\n  civil_status?: string;\n  spouse?: any;\n  status?: string;\n}\n\nexport interface MySchoolInterface {\n  _id: string;\n  school_name: string;\n  school_code: string;\n  province_id: string;\n  province_code: string;\n  district_id: {\n    _id: string;\n    district_name: string;\n  };\n  district_code: string;\n  sector_code: string;\n  sector_id: string;\n  school_status: string;\n  status: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface UserInterface {\n  user_id: string;\n  _id?: string;\n  n_id?: string;\n  phone_number: string;\n  email: string;\n  password?: string;\n  user_info: UserInfoInterface;\n  details: UserDocumentsInterface[];\n  user_photo?: string;\n  default_access: RoleToUserInterface | null;\n  custome_access: CustomeAccessInterface | null;\n  is_active: boolean;\n  disability: boolean;\n  in_education: boolean;\n}\n\nexport interface CandidateDetailsInterface_old {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: string;\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  } | null;\n  doc_history_status: string;\n  get_in_date: string;\n  approved?: string;\n}\n\nexport interface CandidateDetailsInterface {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: string;\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  } | null;\n  doc_history_status: string;\n  get_in_date: string;\n  approved?: string;\n}\n\nexport interface DocInterface {\n  category_subcategory_data: string;\n  school: string;\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  approved: string;\n  doc_id: string;\n  validated_by: null;\n  validation_status: string;\n  doc_history_status: string;\n  get_in_date: string;\n  date_modefied: string;\n}\n\nexport interface CandidateRoleToUserInterface {\n  key: string;\n  status: number;\n  access: boolean;\n  assigned_date: string;\n}\n\nexport interface CandidatesInterface_old {\n  user_id: string;\n  n_id: string;\n  fname: string;\n  lname: string;\n  phone_number: string;\n  district: string;\n  email: string;\n  details: CandidateDetailsInterface[];\n}\n\nexport interface ApplicationExamsInterface {\n  course_id: string;\n  proctoring_type: string;\n  center_id: string;\n  room_id: string;\n}\n\nexport interface CandidatesInterface {\n  _id: string;\n  n_id: string;\n  email: string;\n  phone_number: string;\n  in_education: boolean;\n  disability: boolean;\n  residence: {\n    province_id: string;\n    province_name: string;\n    district_id: string;\n    district_name: string;\n    sector_id: string;\n    sector_name: string;\n  };\n  details: CandidateDetailsInterface[];\n  exams: ApplicationExamsInterface[];\n  user_info: {\n    document_type: string;\n    issue_number: string;\n    date_of_issue: string;\n    date_of_expiry: string;\n    place_of_issue: string;\n    application_number: string;\n    fname: string;\n    lname: string;\n    father_names: string;\n    mother_names: string;\n    sex: string;\n    date_of_birth: string;\n    place_of_birth: string;\n    country_of_birth: string;\n    village_id: string;\n    village: string;\n    cell: string;\n    sector: string;\n    district: string;\n    province: string;\n    civil_status: string;\n    spouse: null;\n    status: string;\n    photo: string;\n  };\n}\n\nexport interface CustomeAccessInterface {\n  access: AccessTaskInterface[];\n  user_id: string;\n  custome_user_access_id: string;\n}\n\nexport interface UserDocumentsInterface {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: { title: string; school_id: string | null };\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  approved: \"waiting\" | \"approved\" | \"rejected\";\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    commet: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  };\n}\n\nexport interface SystemUserRoleInterface {\n  system_user_role_id: string;\n  role: string;\n  status: boolean;\n  access: AccessTaskInterface[];\n  district_required?: boolean;\n  school_required?: boolean;\n  room_required?: boolean;\n  education_institution_required?: boolean;\n  school_id: string;\n  district_id: string;\n}\n\nexport interface CustomeUserAccessInterface {\n  user_id: string;\n  access?: [\n    {\n      id: string;\n      task: string;\n      key: string;\n      permitted: {\n        create: boolean;\n        delete: boolean;\n        update: boolean;\n        view: boolean;\n      };\n    }\n  ];\n}\n\nexport interface PermissionInterface {\n  create: boolean;\n  view: boolean;\n  update: boolean;\n  delete: boolean;\n}\n\nexport interface AccessTaskInterface {\n  id: string;\n  task: string;\n  key: string;\n  permitted: PermissionInterface;\n}\n\nexport interface RoleToUserInterface {\n  system_user_role_id: string;\n  role: string;\n  access: AccessTaskInterface[];\n  status?: number;\n  school_id: string;\n  district_id: string;\n  room_id: string;\n  education_institution_id: string;\n}\n\nexport enum RoomType {\n  Physical = \"Physical\",\n  Virtual = \"Virtual\",\n  Default = \"Default\",\n}\n\nexport interface RoomsInterface {\n  occupied: number;\n  isUsed: boolean;\n  room_type: RoomType;\n  room_number: number;\n  capacity: number;\n  _id: string;\n}\n\nexport interface CentersInterface {\n  rooms: RoomsInterface[];\n  isUsed: boolean;\n  _id: string;\n  center_name: string;\n  center_code: number;\n  district_id: string;\n  education_institute_id: string;\n}\n\nexport interface SectorInterface {\n  district_code: number;\n  district_id: string;\n  sector_name: string;\n  sector_code: number;\n  sector_id: string;\n}\n\nexport interface AllDistrictInterface {\n  sectors: string[];\n  centers: string[];\n  district_name: string;\n  district_code: string;\n  province_code: string;\n  province_id: string;\n  status: number;\n  createdAt: string;\n  updatedAt: string;\n  district_id: string;\n}\nexport interface DistrictInterface {\n  centers: CentersInterface[];\n  sectors: SectorInterface[];\n  province_code: number;\n  province_id: string;\n  district_name: string;\n  district_code: number;\n  _id: string;\n}\n\nexport interface RoomLocationInterface {\n  districts: DistrictInterface[];\n  province_name: string;\n  province_code: number;\n  _id: string;\n}\n\nexport interface AssignRoleToUserActionInterface {\n  user_id: string;\n  data: RoleToUserInterface;\n}\n\nexport interface AssignRoleToUserActionInterface {\n  user_id: string;\n  data: RoleToUserInterface;\n}\n\nexport enum PostRequestStatusInterface {\n  INITIATED = \"initiated\",\n  CONFIRMED = \"confirmed\",\n  RECEIVED = \"received\",\n}\n\nexport interface PostSchoolInterface_old {\n  post_at_school_id: string;\n  school_id: string;\n  position_id: string;\n  district_id: string;\n  needed_posts: number;\n  confirmed_posts?: number;\n  occupied_posts?: number;\n  requested_by: string;\n  confirmed_by?: string;\n  received_posts?: number;\n  request_date: Date;\n  approval_date?: Date;\n  post_at_school_status: PostRequestStatusInterface;\n}\n\nexport interface PostSchoolInterface {\n  _id: string;\n  school_id: string;\n  position_id: string;\n  district_id: string;\n  needed_posts: number;\n  male_number: number;\n  female_number: number;\n  description: string;\n  confirmed_posts?: number;\n  occupied_posts?: number;\n  requested_by: string;\n  confirmed_by?: string;\n  received_posts?: number;\n  request_date: Date;\n  approval_date?: Date;\n  requested_post_status: PostRequestStatusInterface;\n  school: {\n    _id: string;\n    school_name: string;\n    school_code: string;\n    province_id: string;\n    province_code: string;\n    district_id: {\n      _id: string;\n      district_name: string;\n    };\n    district_code: string;\n    sector_code: string;\n    sector_id: string;\n    school_status: string;\n    status: number;\n    createdAt: string;\n    updatedAt: string;\n  };\n  post_request_session_id: string;\n}\n\nexport interface SchoolInfoInterface {\n  school_id: string;\n  school_title: string;\n  district_id: string;\n  number_of_females?: number;\n  number_of_males?: number;\n}\n\nexport interface SchoolsInterface {\n  _id: string;\n  status: boolean;\n  school_name: string;\n  school_code: number;\n  province_id: string;\n  province_code: number;\n  district_id: string;\n  district_code: number;\n  sector_id: string;\n  sector_code: number;\n  education_category_id: string;\n}\n\nexport interface MySchoolInterface {\n  _id: string;\n  school_name: string;\n  school_code: string;\n  province_id: string;\n  province_code: string;\n  district_id: {\n    _id: string;\n    district_name: string;\n  };\n  district_code: string;\n  sector_code: string;\n  sector_id: string;\n  school_status: string;\n  status: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface SchoolLevelInterface {\n  school_level_id: string;\n  school_level_name: string;\n  description: string;\n  education_institute: string[];\n  courses: [];\n}\n\nexport interface CourseInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n}\n\nexport interface EducationInstituteInterface {\n  education_category_title: string;\n  school_levels: [];\n  description: string;\n  education_institute_id: string;\n}\n\nexport interface PositionRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface PositionInterface {\n  courses: CourseInterface[];\n  position_title: string;\n  description: string;\n  school_level_id: SchoolLevelInterface;\n  education_institute_id: EducationInstituteInterface;\n  requirements: PositionRequirementInterface[];\n  position_id: string;\n}\n\nexport enum DocumentAttributesInterface {\n  \"Title\" = \"title\",\n  \"Description\" = \"description\",\n  \"Files\" = \"files\",\n  \"email\" = \"email\",\n  \"names\" = \"names\",\n  \"phone_number\" = \"phone_number\",\n  \"position\" = \"position\",\n  \"relation\" = \"relation\",\n  \"src\" = \"src\",\n  \"year\" = \"year\",\n  \"company\" = \"company\",\n  \"category_subcategory_data\" = \"category_subcategory_data\",\n  \"others\" = \"others\",\n  \"start_year\" = \"start_year\",\n  \"end_year\" = \"end_year\",\n  \"School\" = \"School\",\n  \"expiration_date\" = \"expiration_date\",\n}\n\nexport enum DocValidationStatusInterface {\n  APPROVED = \"approved\",\n  REJECTED = \"rejected\",\n}\n\nexport interface DocumentCategoryInterface {\n  user_detail_category_id: string;\n  title: string;\n  description: string;\n  fields: DocumentAttributesInterface[];\n}\n\nexport interface DocumentSubCategoryInterface {\n  category_id: string;\n  title: string;\n  description: string;\n  user_detail_subcategory_id: string;\n}\n\nexport interface DocumentFieldsInterface {\n  _id: string;\n  category_id: string;\n  subcategory_id: string | null;\n  title: string;\n  description: string;\n  others: [];\n}\n\nexport interface ApplicationAssessmentInterface {\n  application_id: string;\n  user_id: string;\n  application_session: string;\n  application_status: string;\n  n_id: string;\n  phone_number: string;\n  email: string;\n  fname: string;\n  lname: string;\n  sex: \"M\" | \"F\";\n  district: string;\n  position: PositionApplicationInterface;\n  details: CandidateDetailsInterface[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface AdminApplicationsToPrintInterface {\n  application_id: number;\n  names: string;\n  gender?: string;\n  national_id?: string;\n  phone?: string;\n  email?: string;\n  position: string;\n  education_category?: string;\n  application_session?: string;\n  district?: string;\n  date?: string;\n  decision?: ApplicationStates;\n}\n\nexport interface PositionApplicationInterface {\n  courses: string[];\n  position_title: string;\n  description: string;\n  school_level_id: string;\n  education_institute_id: string;\n  requirements: PositionRequirementInterface[];\n  position_id: string;\n}\n\nexport interface PositionRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface ApplicationRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface PeriodInterface {\n  is_active: string;\n  application_session_name: string;\n  period: string;\n  application_start_date: string;\n  application_end_date: string;\n  createdAt: string;\n  updatedAt: string;\n  application_session_id: string;\n}\n\nexport interface LocationRoomTableInterface {\n  province_id: string;\n  province_name: string;\n  district_id: string;\n  district_name: string;\n  center_id: string;\n  center_name: string;\n  room_id: string;\n  room_name: string;\n  capacity: number;\n  occupied: number;\n}\n\nexport interface LocationSectorTableInterface {\n  province_id: string;\n  province_name: string;\n  province_code: number;\n  district_id: string;\n  district_name: string;\n  district_code: number;\n  sector_id: string;\n  sector_name: string;\n  sector_code: number;\n}\n\nexport interface PositionRequirementsFieldInterface {\n  category_id: string;\n  category_name: string;\n  sub_category_id: string;\n  sub_category_name: string;\n  field_id: string;\n  field_name: string;\n  sub_category_required: boolean;\n  required: boolean;\n  isAnyField: boolean;\n}\n\nexport interface PositionRequirementsQualificationInterface {\n  category_id: string;\n  category_name: string;\n  sub_category_id: string;\n  sub_category_name: string;\n  fields: DocumentFieldsInterface[];\n  required: boolean;\n}\n\nexport interface ApplicationPeriodInterface {\n  _id: string;\n  application_status: ApplicationStates;\n  userInfo: {\n    n_id: string;\n    phone_number: string;\n    email: string;\n    user_info: {\n      document_type: string;\n      issue_number: string;\n      date_of_issue: string;\n      date_of_expiry: string;\n      place_of_issue: string;\n      application_number: string;\n      fname: string;\n      lname: string;\n      father_names: string;\n      mother_names: string;\n      sex: string;\n      date_of_birth: string;\n      place_of_birth: string;\n      country_of_birth: string;\n      village_id: string;\n      village: string;\n      cell: string;\n      sector: string;\n      district: string;\n      province: string;\n      civil_status: string;\n      spouse: null;\n      status: string;\n      photo: string;\n    };\n  };\n  user_id: string;\n  position: string;\n  application_session: string;\n  exams: ApplicationExamsInterface[];\n}\n\nexport const getDocCategoryById = (\n  subDocs: DocumentCategoryInterface[],\n  docId: string\n): DocumentCategoryInterface => {\n  return subDocs.filter((doc) => doc.user_detail_category_id === docId)[0];\n};\n\nexport const getSubDocCategoryById = (\n  subDocs: DocumentSubCategoryInterface[],\n  docId: string\n): DocumentSubCategoryInterface => {\n  return subDocs.filter((doc) => doc.user_detail_subcategory_id === docId)[0];\n};\n\nexport const SESSION_PLAN_TYPES: {\n  type_id: number;\n  type_title: string;\n  type_key: SESSION_PLAN_KEYS;\n}[] = [\n  {\n    type_id: 1,\n    type_title: \"Application\",\n    type_key: SESSION_PLAN_KEYS.APPLICATION,\n  },\n  {\n    type_id: 2,\n    type_title: \"Document Validation\",\n    type_key: SESSION_PLAN_KEYS.DOCUMENT_VALIDATION,\n  },\n  {\n    type_id: 3,\n    type_title: \"Examination\",\n    type_key: SESSION_PLAN_KEYS.EXAMINATION,\n  },\n  {\n    type_id: 4,\n    type_title: \"Marks Publication\",\n    type_key: SESSION_PLAN_KEYS.MARKS_PUBLICATION,\n  },\n  {\n    type_id: 5,\n    type_title: \"Placement and Transfer\",\n    type_key: SESSION_PLAN_KEYS.PLACEMENT_TRANSFER,\n  },\n];\n","import { FiAlertCircle } from \"react-icons/fi\";\nimport { GoAlert } from \"react-icons/go\";\nimport { MdDeleteForever, MdRestoreFromTrash } from \"react-icons/md\";\n\nexport enum ActionConfirmEnum {\n  RESTORE_DELETE = \"restore_delete\",\n  DELETE = \"delete\",\n  INFO = \"info\",\n  OTHER = \"other\",\n}\n\ninterface ActionConfirmProps {\n  confirmFun: Function;\n  setModalAction: (value: boolean) => void;\n  description: string;\n  modalType: ActionConfirmEnum;\n}\n\nconst ActionConfirm: React.FC<ActionConfirmProps> = (props) => {\n  return (\n    <div\n      className=\"min-w-screen h-screen animated fadeIn faster  fixed  left-0 top-0 flex justify-center items-center inset-0 z-50 outline-none focus:outline-none bg-no-repeat bg-center bg-cover\"\n      id=\"modal-id\"\n    >\n      <div className=\"absolute bg-black opacity-80 inset-0 z-0\"></div>\n      <div className=\"w-full  max-w-lg p-5 relative mx-auto my-auto rounded-xl shadow-lg bg-white animate__animated animate__zoomIn animate__faster\">\n        {/* <!--content--> */}\n        <div className=\"\">\n          {/* <!--body--> */}\n          <div className=\"text-center p-5 flex-auto justify-center\">\n            {props.modalType === ActionConfirmEnum.DELETE ||\n              (props.modalType === ActionConfirmEnum.RESTORE_DELETE && (\n                <FiAlertCircle className=\"w-4 h-4 -m-1 flex items-center text-red-500 mx-auto\" />\n              ))}\n            {props.modalType === ActionConfirmEnum.DELETE ? (\n              <MdDeleteForever className=\"w-16 h-16 flex items-center text-red-500 mx-auto\" />\n            ) : props.modalType === ActionConfirmEnum.RESTORE_DELETE ? (\n              <MdRestoreFromTrash className=\"w-16 h-16 flex items-center text-yellow-800 mx-auto\" />\n            ) : props.modalType === ActionConfirmEnum.INFO ? (\n              <GoAlert className=\"w-16 h-16 flex items-center text-blue-500 mx-auto\" />\n            ) : (\n              <GoAlert className=\"w-16 h-16 flex items-center text-yellow-500 mx-auto\" />\n            )}\n            <h2 className=\"text-xl font-bold py-4 \">Are you sure?</h2>\n            <p className=\"text-sm text-gray-500 px-8\">{props.description}</p>\n          </div>\n          {/* <!--footer--> */}\n          <div className=\"p-3  mt-2 text-center space-x-4 md:block\">\n            <button\n              className=\"mb-2 md:mb-0 bg-white px-5 py-2 text-sm shadow-sm font-medium tracking-wider border text-gray-600 rounded-full hover:shadow-lg hover:bg-gray-100\"\n              onClick={() => props.setModalAction(false)}\n            >\n              Cancel\n            </button>\n            <button\n              className={`mb-2 md:mb-0 border px-5 py-2 text-sm shadow-sm font-medium tracking-wider text-white rounded-full hover:shadow-lg ${\n                props.modalType === ActionConfirmEnum.DELETE\n                  ? \"border-red-500 hover:bg-red-600 bg-red-500\"\n                  : props.modalType === ActionConfirmEnum.RESTORE_DELETE\n                  ? \"border-yellow-700 hover:bg-yellow-800 bg-yellow-700\"\n                  : props.modalType === ActionConfirmEnum.INFO\n                  ? \"border-blue-500 hover:bg-blue-600 bg-blue-500\"\n                  : \"border-yellow-500 hover:bg-yellow-600 bg-yellow-500\"\n              }`}\n              onClick={() => {\n                props.confirmFun();\n                props.setModalAction(false);\n              }}\n            >\n              Confirm\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ActionConfirm;\n"],"sourceRoot":""}
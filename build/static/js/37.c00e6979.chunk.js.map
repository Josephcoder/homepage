{"version":3,"sources":["components/Navigation/SideNavigation.tsx","actions/settings.ts","components/Loading/TableLoading.tsx","shared/interfaces.tsx","containers/Claimings/ClaimDocView.tsx","containers/Claimings/Admin/AdminFilterByType.tsx","containers/Claimings/ClaimHeaderTitle.tsx","containers/Claimings/Candidate/index.tsx","containers/Claimings/ClaimApplView.tsx","containers/Claimings/ClaimExamView.tsx","containers/Claimings/ClaimPlacementView.tsx","containers/Claimings/Candidate/FilterByType.tsx","components/ViewPDF/ViewPDF.tsx","containers/Claimings/Admin/AdminClaimExamView.tsx","containers/Positions/ViewDocRequirements.tsx","containers/Claimings/Admin/AdminClaimAppView.tsx","containers/Claimings/Admin/AdminClaimDocView.tsx","containers/Claimings/Admin/index.tsx"],"names":["_SideNavigation","props","componentDidMount","PageHasSubNav","componentWillUnmount","state","loading","this","auth","isAuthenticated","navActive","system","navigation","className","children","React","Component","SideNavigation","connect","NavToogle","MainItem","title","icon","MdBrightness1","active","count","IconDefined","getSystemSettings","callback","dispatch","a","setAxiosToken","axios","get","API","AUTH","res","type","ActionTypes","GET_SYSTEM_SETTINGS","payload","data","console","log","code_error","errorToText","disableSystemSetting","DISABLE_SYSTEM_SETTINGS","GetTaskAccess","response","map","id","task","key","permitted","GET_TASK_ACCESS","getPositions","APPLICATION","GET_POSTIONS","deletePosition","DELETE_POSITION","publishPosition","PUBLISH_POSITION","TableLoading","displayCols","colsArray","index","cols","push","element","RoomType","PostRequestStatusInterface","DocumentAttributesInterface","DocValidationStatusInterface","SESSION_PLAN_KEYS","DOCUMENT_VALIDATION","EXAMINATION","MARKS_PUBLICATION","PLACEMENT_TRANSFER","isReclaimAllowed","thisClaim","claim_level","_thisClaim","claims","find","item","level","decision_taken_status","ClaimDecisionStatus","REJECTED","isClaimEvaluated","claim_status","ClaimStatus","EVALUATED","memo","createReClaim","PushPopupAlert","handleSubmit","isEmptyOrSpaces","reClaimingMsg","setFormError","msg","theme","PopupAlertTheme","warning","setLoadingRequest","put","CLAIMING","_id","reason","status","success","setReClaimingMsg","setReClaiming","error","danger","getReasonById","reason_id","claimReasons","ClaimGetDocTitle","documentCategories","thisDoc","main","onClick","setViewImage","viewImage","validation_status","capitalizeFirstLetter","previous","evaluater","name","validated_by","comment","src","AUTH_FILES","files","alt","length","claim","default_claim_resaons","showDate","createdAt","toLocaleLowerCase","evaluation_comment","reClaiming","last_claim_status","PENDING","DELETED","disabled","loadingRequest","placeholder","rows","formError","style","resize","value","onChange","e","target","filterClaimsByClaimType","claimList","claimType","filter","type_key","claiming","GetClaimingTypes","setSelectedClaimType","getAllClaims","useState","setLoading","loadingClaimTypes","setLoadingClaimTypes","useEffect","claimTypes","countClaims","thisType","result","allClaims","Fragment","loadingClaims","selectedClaimType","PlansTypeKeys","ClaimHeaderTitle","isLoading","loadingSession","periodChanged","headerTitle","thisPeriod","session_plan_id","sessions","period_id","application_sessions","selectPeriod","setThisPeriod","setLoadingSession","onPeriodChange","session","session_plan_name","ClaimTypesEnum","thisApplication","position","position_title","setViewPosition","viewPosition","ApplicationStates","Rejected","DATE","dangerouslySetInnerHTML","__html","description","school_level_id","school_level_name","education_institute_id","education_category_title","courses","course_name","course_code","course_id","requirements","FC_ApplicationPositionDistinctCategory","DistinctCategoriesTemp","category_title","ViewRequirements","PositionsTemp","req","category_id","NoResult","NoResultThemes","Dark","questionTypes","loadQuestionTypes","thisExam","CandidateAnswersDetails","showAnswers","exam_id","claimShowAnswer","thisExamSheet","userDetails","user_info","fname","lname","myPlacement","placed","school","school_name","district_id","district_name","getMyRejectedApplications","getMyRejectedDocuments","loadingRejectedApplications","setLoadingRejectedApplications","loadingRejectedDocuments","setLoadingRejectedDocuments","candidateApplications","user","user_id","candidateDocuments","myClaims","COMPLETED","getDocumentById","document_id","doc_id","whichClaimType","application","document","exam","marks_publication","placement","whichClaimStatus","classes","getClaimById","claim_id","getApplicationById","application_id","displayDocClaimTitle","claiming_on_id","displayClaimTitle","documentReducer","allCourse","myAnswer","thisAnswer","getCourseIdBySheetId","getCourseById","course","Index","setState","setViewClaim","viewClaim","setPeriodChanged","setClaimForm","claimForm","setClaimId","claimId","setSearchClaim","searchClaim","loadClaims","getMyClaims","setSession","thisSession","is_active","loadExamAnswers","activeSessionPlan","getMyAnswers","getClaimReasons","loadCourses","GetAllSessionPlans","documentCategory","getDocumentCategory","documentSubCategory","getDocumentSubCategory","documentFields","getDocumentFields","getMyPlacement","isDeleteAllowed","thisCLaim","colSpan","Light","search","ClaimApplView","ClaimExamView","ClaimForm","formState","setFormState","CandidateClaim","sessionPlan","allSessionPlans","ViewPDF","setError","file_url","class_name","onLoad","setLoadingFile","frame_title","viewTabs","ViewDocRequirements","viewDoc","setViewDoc","loadingImage","setLoadingImage","isFullscreen","setSetFullscreen","isDocumentExist","sub_category_id","field_id","userDocs","category_subcategory_data","Table","columns","columnTitle","alignText","padding","subcategory_id","subcategory_title","field_title","pagination","thColor","Modal","backDrop","Themes","default","close","backDropClose","widthSizeClass","ModalSize","extraLarge","displayClose","body","footer","Loading","isFileImage","getFileType","onDoubleClick","fullScreen","FC_AdminApplicationPositionDistinctCategory","thisPosition","DistinctCategoriesIds","DistinctSubCategoriesTemp","DistinctSubCategoriesIds","thisRequirements","thisCategory","user_detail_category_id","category","thisSubCategory","user_detail_subcategory_id","subcategory","field","thisField","position_requirement","required","subcategory_required","includes","evaluateClaim","reAssessApplication","actionTaken","setActionTaken","responseMsg","setResponseMsg","handleVerify","subClaim","api_body","sub_claim_id","evaluated_by","evaluator_name","evaluator_email","email","evaluate_claim_res","ACCEPTED","overrideDecision","patch","phone_number","application_status","Shortlisted","getPositionById","position_id","systemPositions","details","override_by","window","confirm","verifyDocument","FC_DocValidation","APPROVED","in_education","disability","api_redux","date","post","FC_shortListing","candidate_id","adminDisplayClaimTitle","commet","marks","setMarks","profile","selectedTab","setSelectedTab","handleMarksAddition","DO_EXAM","answer_sheet_id","Object","values","i","AnswersDetails","allAnswers","exam_location","questions","user_answers","period","exam_paper","user_status","used_duration","total_marks","number_of_question_answered","exam_total_marks","exam_start_time","exam_end_time","exam_date","updatedAt","gender","sex","Number","AdminClaimGetDocTitle","doc","DocCategory","DocSubCategory","DocField","DocTitle","c","sub_category","allApplications","setLoadingData","loadingData","setClaimType","setCandidateId","candidateId","setDefaultSession","loadsAllClaims","loadsApplications","getAllApplications","loadsController","file_id","loadsAlAnswers","answersheet_id","allAnswer","getAllAnswers","thisDocs","getLastClaimDate","claimsLength","AdminFilterByType","Math","random","ClaimTypesInterface","DOCUMENT","AdminClaim","system_settings"],"mappings":"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","file":"static/js/37.c00e6979.chunk.js","sourcesContent":["import React, { FC, ReactElement, ReactNode } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, System } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { NavToogle, PageHasSubNav } from \"../../actions\";\nimport { MdBrightness1, MdSearch } from \"react-icons/md\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  system: System;\n  PageHasSubNav: Function;\n  NavToogle: Function;\n  children: ReactNode;\n}\n//\ninterface AppState {\n  loading: boolean;\n}\n\nclass _SideNavigation extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount = () => this.props.PageHasSubNav(true);\n  componentWillUnmount = () => this.props.PageHasSubNav(false);\n\n  render() {\n    const isAuthenticated = this.props.auth.isAuthenticated;\n\n    if (isAuthenticated === false) {\n      return null;\n    }\n\n    const navActive = this.props.system.navigation;\n    return (\n      <div\n        className={`fixed w-48 p-1 pr-2 pl-6 text-gray-700 bg-white ${\n          navActive === true ? \"lg:left-16  left-16\" : \" -left-72 lg:left-16\"\n        }  top-0 bottom-0 pt-20 z-30 shadow-lg  transition-all duration-500 ease-in-out overflow-y-auto`}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n}: StoreState): { auth: Auth; system: System } => {\n  return { auth: auth, system: system };\n};\n\nexport const SideNavigation = connect(mapStateToProps, {\n  NavToogle,\n  PageHasSubNav,\n})(_SideNavigation);\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SearchComponentInterface = {\n  data: any[];\n};\n\nexport const Search: FC<SearchComponentInterface> = ({\n  data,\n}): ReactElement => {\n  return (\n    <div className=\"m-1 rounded-md shadow-md border border-blue-400 bg-white p-1 flex \">\n      <label htmlFor=\"search-text\" className=\"inline-block text-2xl\">\n        <MdSearch className=\"inline-block text-blue-400\" />\n      </label>\n      <input\n        type=\"search\"\n        className=\"outline-none bg-transparent flex-1 pl-1\"\n        placeholder=\"Search\"\n        id=\"search-text\"\n      />\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype MainItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const MainItem: FC<MainItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n  return (\n    <section\n      className={`${\n        active === true\n          ? \"bg-blue-500 text-white font-bold\"\n          : \"bg-blue-100 text-blue-800\"\n      } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex cursor-pointer items-center`}\n    >\n      <section className=\"flex-1\">\n        <IconDefined className=\"inline-block mr-1 text-xs\" />\n        <span>{title}</span>\n      </section>\n\n      {count > 0 ? (\n        <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n          {count}\n        </span>\n      ) : null}\n    </section>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemContainerComponentInterface = {\n  children: ReactNode;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const SubItemContainer: FC<SubItemContainerComponentInterface> = ({\n  children,\n}): ReactElement => {\n  return (\n    <div className=\"ml-3 overflow-y-auto border-l-2 border-blue-200 -mt-1 pt-2 mb-2 pl-1 cursor-pointer\">\n      {children}\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n * @important Remenber to use these components inside the <SubItemContainer>...</SubItemContainer>\n */\nexport const SubItem: FC<SubItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n\n  return (\n    <div\n      className={`animate__animated animate__zoomIn animate__faster ${\n        active === true ? \"bg-blue-500 text-white font-bold\" : \" text-blue-800\"\n      } text-blue-800 bg-blue-200 rounded-md px-1 mb-1 flex items-center py-1 font-bold`}\n    >\n      <IconDefined\n        className={`inline-block mr-0.1 text-xs ${\n          active === true ? \"text-white\" : \"\"\n        }`}\n      />\n      <span\n        className={`inline-block pl-1 ${active === true ? \"text-white\" : \"\"}`}\n      >\n        {title}\n      </span>\n      {count >= 1 ? (\n        <span\n          className={`text-sm fint-bold ${active === true ? \"text-white\" : \"\"}`}\n        >\n          {count}\n        </span>\n      ) : null}\n    </div>\n  );\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AccessTaskInterface,\n  PermissionInterface,\n  SystemSettingsInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PositionAPI } from \"../interfaces/position\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// SYSTEM SETTINGS  ==============\nexport interface GetSystemSettingsAction {\n  type: ActionTypes.GET_SYSTEM_SETTINGS;\n  payload: SystemSettingsInterface[];\n}\n\nexport interface DisableSystemSettingsAction {\n  type: ActionTypes.DISABLE_SYSTEM_SETTINGS;\n  payload: {\n    system_setting_id: string;\n    status: \"enabled\" | \"disabled\";\n  };\n}\n\n// ROLE TASKS ACCESS SETTINGS ===================================\nexport interface GetTaskAccessAction {\n  type: ActionTypes.GET_TASK_ACCESS;\n  payload: AccessTaskInterface[];\n}\n\n// POSITIONS SETTINGS ===================================\nexport interface PositionCreateInterface {\n  position_id?: string;\n  position_title: string;\n  position_code: string;\n  description: string;\n  school_level_id: string;\n  subcategory_id: string;\n  education_institute_id: string;\n  courses: string[];\n  requirements: {\n    user_detail_category_id: string;\n    user_detail_subcategory_id: string;\n    position_requirement: {\n      category_subcategory_data_id: string;\n      required: boolean;\n    }[];\n    required: boolean;\n  }[];\n}\nexport interface GetPositionsAction {\n  type: ActionTypes.GET_POSTIONS;\n  payload: PositionAPI[];\n}\n\nexport interface CreatePositionsAction {\n  type: ActionTypes.CREATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface UpdatePositionsAction {\n  type: ActionTypes.UPDATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface DeletePositionSettingAction {\n  type: ActionTypes.DELETE_POSITION;\n  payload: string;\n}\n\nexport interface PublishPositionAction {\n  type: ActionTypes.PUBLISH_POSITION;\n  payload: {\n    position_id: string;\n    status: boolean;\n  };\n}\n\nexport type SystemActionType =\n  | GetSystemSettingsAction\n  | DisableSystemSettingsAction\n  | GetTaskAccessAction\n  | GetPositionsAction\n  | CreatePositionsAction\n  | UpdatePositionsAction\n  | DeletePositionSettingAction\n  | PublishPositionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSystemSettings = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<SystemSettingsInterface[]>(\n        `${API.AUTH}/settings`\n      );\n      dispatch<GetSystemSettingsAction>({\n        type: ActionTypes.GET_SYSTEM_SETTINGS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const disableSystemSetting = (data: {\n  system_setting_id: string;\n  status: \"enabled\" | \"disabled\";\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableSystemSettingsAction>({\n      type: ActionTypes.DISABLE_SYSTEM_SETTINGS,\n      payload: data,\n    });\n  };\n};\n\n// ============================ tasks access =======================\n\nexport const GetTaskAccess = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<\n        {\n          id: string;\n          title: string;\n          key: string;\n          permitted: PermissionInterface;\n        }[]\n      >(`${API.AUTH}/allroleaccess`);\n      let response: AccessTaskInterface[] = res.data.map((data) => ({\n        id: data.id,\n        task: data.title,\n        key: data.key,\n        permitted: data.permitted,\n      }));\n      dispatch<GetTaskAccessAction>({\n        type: ActionTypes.GET_TASK_ACCESS,\n        payload: response,\n      });\n      callback(false, \"\", response);\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// ============================ positions =======================\n\nexport const getPositions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(`${API.APPLICATION}/position`);\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createPosition = (data: PositionCreateInterface) => {\n  console.log({ createPosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreatePositionsAction>({\n      type: ActionTypes.CREATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const updatePosition = (data: PositionCreateInterface) => {\n  console.log({ updatePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdatePositionsAction>({\n      type: ActionTypes.UPDATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const deletePosition = (data: string) => {\n  console.log({ deletePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<DeletePositionSettingAction>({\n      type: ActionTypes.DELETE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const publishPosition = (data: {\n  position_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<PublishPositionAction>({\n      type: ActionTypes.PUBLISH_POSITION,\n      payload: data,\n    });\n  };\n};\n","import React from \"react\";\n\ntype TableLoadingProps = {\n  cols: number;\n};\nconst TableLoading: React.FC<TableLoadingProps> = (props) => {\n  const displayCols = (): JSX.Element[] => {\n    let colsArray: number[] = [];\n    for (let index = 0; index < props.cols; index++) {\n      colsArray.push(index);\n    }\n    let result = colsArray.map((element) => {\n      return (\n        <td className=\"p-3 text-center whitespace-nowrap\" key={element}>\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      );\n    });\n\n    return result;\n  };\n  return (\n    <>\n      <tr className=\"border-b border-gray-200\" key={228}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={22648}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={229768}>\n        {displayCols()}\n      </tr>\n    </>\n  );\n};\n\nexport default TableLoading;\n","import {\n  ApplicationStates,\n  SESSION_PLAN_KEYS,\n} from \"../interfaces/application\";\n\nexport interface SystemSettingsInterface {\n  system_setting_id: string;\n  name: string;\n  key: string;\n  status: \"enabled\" | \"disabled\";\n}\n\nexport interface ApplicationSessionInterface {\n  is_active: boolean;\n  application_session_name: string;\n  period: string;\n  application_start_date: string;\n  application_end_date: string;\n  createdAt: string;\n  updatedAt: string;\n  application_session_id: string;\n}\n\nexport interface UserInfoInterface {\n  document_type?: string;\n  issue_number?: string;\n  date_of_issue?: string;\n  date_of_expiry?: string;\n  place_of_issue?: string;\n  application_number?: string;\n  fname: string;\n  lname: string;\n  sex: \"M\" | \"F\";\n  father_names: string;\n  mother_names: string;\n  date_of_birth: string;\n  place_of_birth?: string;\n  country_of_birth: string;\n  village_id: string;\n  village: string;\n  cell: string;\n  sector: string;\n  district: string;\n  province: string;\n  photo?: string;\n  civil_status?: string;\n  spouse?: any;\n  status?: string;\n}\n\nexport interface MySchoolInterface {\n  _id: string;\n  school_name: string;\n  school_code: string;\n  province_id: string;\n  province_code: string;\n  district_id: {\n    _id: string;\n    district_name: string;\n  };\n  district_code: string;\n  sector_code: string;\n  sector_id: string;\n  school_status: string;\n  status: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface UserInterface {\n  user_id: string;\n  _id?: string;\n  n_id?: string;\n  phone_number: string;\n  email: string;\n  password?: string;\n  user_info: UserInfoInterface;\n  details: UserDocumentsInterface[];\n  user_photo?: string;\n  default_access: RoleToUserInterface | null;\n  custome_access: CustomeAccessInterface | null;\n  is_active: boolean;\n  disability: boolean;\n  in_education: boolean;\n}\n\nexport interface CandidateDetailsInterface_old {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: string;\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  } | null;\n  doc_history_status: string;\n  get_in_date: string;\n  approved?: string;\n}\n\nexport interface CandidateDetailsInterface {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: string;\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  } | null;\n  doc_history_status: string;\n  get_in_date: string;\n  approved?: string;\n}\n\nexport interface DocInterface {\n  category_subcategory_data: string;\n  school: string;\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  approved: string;\n  doc_id: string;\n  validated_by: null;\n  validation_status: string;\n  doc_history_status: string;\n  get_in_date: string;\n  date_modefied: string;\n}\n\nexport interface CandidateRoleToUserInterface {\n  key: string;\n  status: number;\n  access: boolean;\n  assigned_date: string;\n}\n\nexport interface CandidatesInterface_old {\n  user_id: string;\n  n_id: string;\n  fname: string;\n  lname: string;\n  phone_number: string;\n  district: string;\n  email: string;\n  details: CandidateDetailsInterface[];\n}\n\nexport interface ApplicationExamsInterface {\n  course_id: string;\n  proctoring_type: string;\n  center_id: string;\n  room_id: string;\n}\n\nexport interface CandidatesInterface {\n  user_id: string;\n  n_id: string;\n  fname: string;\n  lname: string;\n  phone_number: string;\n  district: string;\n  email: string;\n  in_education: boolean;\n  disability: boolean;\n  residence: {\n    province_id: string;\n    province_name: string;\n    district_id: string;\n    district_name: string;\n    sector_id: string;\n    sector_name: string;\n  };\n  details: CandidateDetailsInterface[];\n  exams: ApplicationExamsInterface[];\n}\n\nexport interface CustomeAccessInterface {\n  access: AccessTaskInterface[];\n  user_id: string;\n  custome_user_access_id: string;\n}\n\nexport interface UserDocumentsInterface {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: { title: string; school_id: string | null };\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  approved: \"waiting\" | \"approved\" | \"rejected\";\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    commet: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  };\n}\n\nexport interface SystemUserRoleInterface {\n  system_user_role_id: string;\n  role: string;\n  status: boolean;\n  access: AccessTaskInterface[];\n  district_required?: boolean;\n  school_required?: boolean;\n  room_required?: boolean;\n  education_institution_required?: boolean;\n  school_id: string;\n  district_id: string;\n}\n\nexport interface CustomeUserAccessInterface {\n  user_id: string;\n  access?: [\n    {\n      id: string;\n      task: string;\n      key: string;\n      permitted: {\n        create: boolean;\n        delete: boolean;\n        update: boolean;\n        view: boolean;\n      };\n    }\n  ];\n}\n\nexport interface PermissionInterface {\n  create: boolean;\n  view: boolean;\n  update: boolean;\n  delete: boolean;\n}\n\nexport interface AccessTaskInterface {\n  id: string;\n  task: string;\n  key: string;\n  permitted: PermissionInterface;\n}\n\nexport interface RoleToUserInterface {\n  system_user_role_id: string;\n  role: string;\n  access: AccessTaskInterface[];\n  status?: number;\n  school_id: string;\n  district_id: string;\n  room_id: string;\n  education_institution_id: string;\n}\n\nexport enum RoomType {\n  Physical = \"Physical\",\n  Virtual = \"Virtual\",\n  Default = \"Default\",\n}\n\nexport interface RoomsInterface {\n  occupied: number;\n  isUsed: boolean;\n  room_type: RoomType;\n  room_number: number;\n  capacity: number;\n  _id: string;\n}\n\nexport interface CentersInterface {\n  rooms: RoomsInterface[];\n  isUsed: boolean;\n  _id: string;\n  center_name: string;\n  center_code: number;\n  district_id: string;\n}\n\nexport interface SectorInterface {\n  district_code: number;\n  district_id: string;\n  sector_name: string;\n  sector_code: number;\n  sector_id: string;\n}\n\nexport interface AllDistrictInterface {\n  sectors: string[];\n  centers: string[];\n  district_name: string;\n  district_code: string;\n  province_code: string;\n  province_id: string;\n  status: number;\n  createdAt: string;\n  updatedAt: string;\n  district_id: string;\n}\nexport interface DistrictInterface {\n  centers: CentersInterface[];\n  sectors: SectorInterface[];\n  province_code: number;\n  province_id: string;\n  district_name: string;\n  district_code: number;\n  _id: string;\n}\n\nexport interface RoomLocationInterface {\n  districts: DistrictInterface[];\n  province_name: string;\n  province_code: number;\n  _id: string;\n}\n\nexport interface AssignRoleToUserActionInterface {\n  user_id: string;\n  data: RoleToUserInterface;\n}\n\nexport interface AssignRoleToUserActionInterface {\n  user_id: string;\n  data: RoleToUserInterface;\n}\n\nexport enum PostRequestStatusInterface {\n  INITIATED = \"initiated\",\n  CONFIRMED = \"confirmed\",\n  RECEIVED = \"received\",\n}\n\nexport interface PostSchoolInterface_old {\n  post_at_school_id: string;\n  school_id: string;\n  position_id: string;\n  district_id: string;\n  needed_posts: number;\n  confirmed_posts?: number;\n  occupied_posts?: number;\n  requested_by: string;\n  confirmed_by?: string;\n  received_posts?: number;\n  request_date: Date;\n  approval_date?: Date;\n  post_at_school_status: PostRequestStatusInterface;\n}\n\nexport interface PostSchoolInterface {\n  _id: string;\n  school_id: string;\n  position_id: string;\n  district_id: string;\n  needed_posts: number;\n  male_number: number;\n  female_number: number;\n  description: string;\n  confirmed_posts?: number;\n  occupied_posts?: number;\n  requested_by: string;\n  confirmed_by?: string;\n  received_posts?: number;\n  request_date: Date;\n  approval_date?: Date;\n  requested_post_status: PostRequestStatusInterface;\n  school: {\n    _id: string;\n    school_name: string;\n    school_code: string;\n    province_id: string;\n    province_code: string;\n    district_id: {\n      _id: string;\n      district_name: string;\n    };\n    district_code: string;\n    sector_code: string;\n    sector_id: string;\n    school_status: string;\n    status: number;\n    createdAt: string;\n    updatedAt: string;\n  };\n  post_request_session_id: string;\n}\n\nexport interface SchoolInfoInterface {\n  school_id: string;\n  school_title: string;\n  district_id: string;\n  number_of_females?: number;\n  number_of_males?: number;\n}\n\nexport interface SchoolsInterface {\n  _id: string;\n  status: boolean;\n  school_name: string;\n  school_code: number;\n  province_id: string;\n  province_code: number;\n  district_id: string;\n  district_code: number;\n  sector_id: string;\n  sector_code: number;\n  education_category_id: string;\n}\n\nexport interface MySchoolInterface {\n  _id: string;\n  school_name: string;\n  school_code: string;\n  province_id: string;\n  province_code: string;\n  district_id: {\n    _id: string;\n    district_name: string;\n  };\n  district_code: string;\n  sector_code: string;\n  sector_id: string;\n  school_status: string;\n  status: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface SchoolLevelInterface {\n  school_level_id: string;\n  school_level_name: string;\n  description: string;\n  education_institute: string[];\n  courses: [];\n}\n\nexport interface CourseInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n}\n\nexport interface EducationInstituteInterface {\n  education_category_title: string;\n  school_levels: [];\n  description: string;\n  education_institute_id: string;\n}\n\nexport interface PositionRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface PositionInterface {\n  courses: CourseInterface[];\n  position_title: string;\n  description: string;\n  school_level_id: SchoolLevelInterface;\n  education_institute_id: EducationInstituteInterface;\n  requirements: PositionRequirementInterface[];\n  position_id: string;\n}\n\nexport enum DocumentAttributesInterface {\n  \"Title\" = \"title\",\n  \"Description\" = \"description\",\n  \"Files\" = \"files\",\n  \"email\" = \"email\",\n  \"names\" = \"names\",\n  \"phone_number\" = \"phone_number\",\n  \"position\" = \"position\",\n  \"relation\" = \"relation\",\n  \"src\" = \"src\",\n  \"year\" = \"year\",\n  \"company\" = \"company\",\n  \"category_subcategory_data\" = \"category_subcategory_data\",\n  \"others\" = \"others\",\n  \"start_year\" = \"start_year\",\n  \"end_year\" = \"end_year\",\n  \"School\" = \"School\",\n}\n\nexport enum DocValidationStatusInterface {\n  APPROVED = \"approved\",\n  REJECTED = \"rejected\",\n}\n\nexport interface DocumentCategoryInterface {\n  user_detail_category_id: string;\n  title: string;\n  description: string;\n  fields: DocumentAttributesInterface[];\n}\n\nexport interface DocumentSubCategoryInterface {\n  category_id: string;\n  title: string;\n  description: string;\n  user_detail_subcategory_id: string;\n}\n\nexport interface DocumentFieldsInterface {\n  _id: string;\n  category_id: string;\n  subcategory_id: string | null;\n  title: string;\n  description: string;\n  others: [];\n}\n\nexport interface ApplicationAssessmentInterface {\n  application_id: string;\n  user_id: string;\n  application_session: string;\n  application_status: string;\n  n_id: string;\n  phone_number: string;\n  email: string;\n  fname: string;\n  lname: string;\n  sex: \"M\" | \"F\";\n  district: string;\n  position: PositionApplicationInterface;\n  details: CandidateDetailsInterface[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface AdminApplicationsToPrintInterface {\n  application_id: number;\n  names: string;\n  gender?: string;\n  national_id?: string;\n  phone?: string;\n  email?: string;\n  position: string;\n  education_category?: string;\n  application_session?: string;\n  district?: string;\n  date?: string;\n  decision?: ApplicationStates;\n}\n\nexport interface PositionApplicationInterface {\n  courses: string[];\n  position_title: string;\n  description: string;\n  school_level_id: string;\n  education_institute_id: string;\n  requirements: PositionRequirementInterface[];\n  position_id: string;\n}\n\nexport interface PositionRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface ApplicationRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface PeriodInterface {\n  is_active: string;\n  application_session_name: string;\n  period: string;\n  application_start_date: string;\n  application_end_date: string;\n  createdAt: string;\n  updatedAt: string;\n  application_session_id: string;\n}\n\nexport interface LocationRoomTableInterface {\n  province_id: string;\n  province_name: string;\n  district_id: string;\n  district_name: string;\n  center_id: string;\n  center_name: string;\n  room_id: string;\n  room_name: string;\n  capacity: number;\n  occupied: number;\n}\n\nexport interface LocationSectorTableInterface {\n  province_id: string;\n  province_name: string;\n  province_code: number;\n  district_id: string;\n  district_name: string;\n  district_code: number;\n  sector_id: string;\n  sector_name: string;\n  sector_code: number;\n}\n\nexport interface PositionRequirementsFieldInterface {\n  category_id: string;\n  category_name: string;\n  sub_category_id: string;\n  sub_category_name: string;\n  field_id: string;\n  field_name: string;\n  sub_category_required: boolean;\n  required: boolean;\n  isAnyField: boolean;\n}\n\nexport interface PositionRequirementsQualificationInterface {\n  category_id: string;\n  category_name: string;\n  sub_category_id: string;\n  sub_category_name: string;\n  fields: DocumentFieldsInterface[];\n  required: boolean;\n}\n\nexport interface ApplicationPeriodInterface {\n  _id: string;\n  application_status: ApplicationStates;\n  userInfo: {\n    n_id: string;\n    phone_number: string;\n    email: string;\n    user_info: {\n      document_type: string;\n      issue_number: string;\n      date_of_issue: string;\n      date_of_expiry: string;\n      place_of_issue: string;\n      application_number: string;\n      fname: string;\n      lname: string;\n      father_names: string;\n      mother_names: string;\n      sex: string;\n      date_of_birth: string;\n      place_of_birth: string;\n      country_of_birth: string;\n      village_id: string;\n      village: string;\n      cell: string;\n      sector: string;\n      district: string;\n      province: string;\n      civil_status: string;\n      spouse: null;\n      status: string;\n      photo: string;\n    };\n  };\n  user_id: string;\n  position: string;\n  application_session: string;\n  exams: ApplicationExamsInterface[];\n}\n\nexport const getDocCategoryById = (\n  subDocs: DocumentCategoryInterface[],\n  docId: string\n): DocumentCategoryInterface => {\n  return subDocs.filter((doc) => doc.user_detail_category_id === docId)[0];\n};\n\nexport const getSubDocCategoryById = (\n  subDocs: DocumentSubCategoryInterface[],\n  docId: string\n): DocumentSubCategoryInterface => {\n  return subDocs.filter((doc) => doc.user_detail_subcategory_id === docId)[0];\n};\n\nexport const SESSION_PLAN_TYPES: {\n  type_id: number;\n  type_title: string;\n  type_key: SESSION_PLAN_KEYS;\n}[] = [\n  {\n    type_id: 1,\n    type_title: \"Application\",\n    type_key: SESSION_PLAN_KEYS.APPLICATION,\n  },\n  {\n    type_id: 2,\n    type_title: \"Document Validation\",\n    type_key: SESSION_PLAN_KEYS.DOCUMENT_VALIDATION,\n  },\n  {\n    type_id: 3,\n    type_title: \"Examination\",\n    type_key: SESSION_PLAN_KEYS.EXAMINATION,\n  },\n  {\n    type_id: 4,\n    type_title: \"Marks Publication\",\n    type_key: SESSION_PLAN_KEYS.MARKS_PUBLICATION,\n  },\n  {\n    type_id: 5,\n    type_title: \"Placement and Transfer\",\n    type_key: SESSION_PLAN_KEYS.PLACEMENT_TRANSFER,\n  },\n];\n","import axios from \"axios\";\nimport React from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdInfoOutline } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { createReClaim, DocumentClaimUser } from \"../../actions/claiming\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  claimReasonInterface,\n  ClaimStatus,\n} from \"../../interfaces\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { DocumentReducerInterface } from \"../../reducers/document\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { errorToText, showDate } from \"../../utils/functions\";\nimport { ClaimGetDocTitle } from \"./Candidate/ClaimForm\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nexport const isClaimEvaluated = (\n  thisClaim: CandidateClaimInterface,\n  level: number\n): boolean => {\n  const _thisClaim = thisClaim.claims.find(\n    (item) =>\n      item.level === level && item.claim_status === ClaimStatus.EVALUATED\n  );\n  if (_thisClaim) {\n    return true;\n  }\n  return false;\n};\n\ntype ClaimDocViewProps = {\n  thisDoc: DocumentClaimUser;\n  // setViewThisFile: (value: string) => void;\n  documentCategories: DocumentReducerInterface;\n  claimReasons: claimReasonInterface[] | null;\n  thisClaim: CandidateClaimInterface;\n  viewImage: boolean;\n  setViewImage: (value: boolean) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  reClaiming: boolean;\n  setReClaiming: (value: boolean) => void;\n  reClaimingMsg: string;\n  setReClaimingMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX DATA =====================\n  createReClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst ClaimDocView: React.FC<ClaimDocViewProps> = (props) => {\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim sent successful\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim._id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Title:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {ClaimGetDocTitle(props.documentCategories, props.thisDoc).main}\n              </span>\n            </div>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewImage(!props.viewImage)}\n            >\n              {props.viewImage ? \"Hide\" : \"View\"}\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisDoc.validation_status === \"rejected\"\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } rounded px-3 py-1`}\n            >\n              {capitalizeFirstLetter(props.thisDoc.validation_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {props.thisClaim.previous.evaluater.name}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisDoc.validated_by.comment}\n            </span>\n          </div>\n\n          {/* DISPLAY IMAGE ==================================================== */}\n          {props.viewImage && (\n            <div className=\"w-full my-1 animate__animated animate__fadeIn\">\n              <img\n                src={`${API.AUTH_FILES}/${props.thisDoc.files}`}\n                alt=\"doc file\"\n                className={`w-full animate__animated animate__fadeIn`}\n              />\n            </div>\n          )}\n          {/* END DISPLAY IMAGE ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt)}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-center justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <button\n                className=\"btn btn-blue\"\n                onClick={() => props.setReClaiming(true)}\n                disabled={props.loadingRequest}\n              >\n                Reclaim\n              </button>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your reclaim...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nexport default React.memo(connect(null, {\n  createReClaim,\n  PushPopupAlert,\n})(ClaimDocView));\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport {\n  getAllClaims,\n  GetClaimingTypes,\n  setSelectedClaimType,\n} from \"../../../actions/claiming\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport { MainItem } from \"../../../components/Navigation/SideNavigation\";\nimport {\n  CandidateClaimInterface,\n  ClaimStatus,\n  PlansTypeKeys,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\n\nexport const filterClaimsByClaimType = (\n  claimList: CandidateClaimInterface[],\n  claimType: PlansTypeKeys | \"all\"\n): CandidateClaimInterface[] => {\n  if (claimType === \"all\") {\n    return claimList;\n  }\n\n  return claimList.filter((item) => item.type_key === claimType);\n};\n\ntype AdminFilterByTypeProps = {\n  loadingClaims: boolean;\n  FC_CountByType?: Function;\n\n  // REDUX PROPS =======================================\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  GetClaimingTypes: Function;\n  setSelectedClaimType: Function;\n  getAllClaims: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\nconst AdminFilterByType: React.FC<AdminFilterByTypeProps> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingClaimTypes, setLoadingClaimTypes] = useState<boolean>(true);\n\n  useEffect(() => {\n    if (props.claiming.claimTypes === null) {\n      props.GetClaimingTypes((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          setLoadingClaimTypes(false);\n          setLoading(false);\n        }\n      });\n    } else if (loadingClaimTypes) {\n      setLoadingClaimTypes(false);\n      setLoading(false);\n    }\n  }, [loadingClaimTypes, props]);\n\n  const countClaims = (\n    claiming: ClaimingReducerType,\n    thisType: PlansTypeKeys | \"all\"\n  ): number => {\n    let result: number = 0;\n\n    if (claiming.allClaims && thisType === \"all\") {\n      result = claiming.allClaims.filter(\n        (item) => item.last_claim_status === ClaimStatus.PENDING\n      ).length;\n    }\n    if (claiming.allClaims && thisType !== \"all\") {\n      result = claiming.allClaims.filter(\n        (item) =>\n          item.type_key === thisType &&\n          item.last_claim_status === ClaimStatus.PENDING\n      ).length;\n    }\n\n    return result;\n  };\n\n  return (\n    <React.Fragment>\n      <span className=\"mt-2 text-sm\">Filter by claim type</span>\n      {/* WHILE LOADING DATA ================================== */}\n      {(loading || props.loadingClaims) && (\n        <section className=\"space-y-2\">\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </section>\n      )}\n      {/* END WHILE LOADING DATA ================================== */}\n\n      {/* AFTER LOADING DATA ================================== */}\n      {!loading && !props.loadingClaims && props.claiming.claimTypes && (\n        <section>\n          {/* ALL ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(\"ALL\");\n              props.setSelectedClaimType(\"all\");\n            }}\n          >\n            <MainItem\n              title=\"All\"\n              active={props.claiming.selectedClaimType === \"all\"}\n              count={countClaims(props.claiming, \"all\")}\n            />\n          </div>\n          {/* APPLICATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(ClaimTypesInterface.DOCUMENT);\n              props.setSelectedClaimType(PlansTypeKeys.APPLICATION);\n            }}\n          >\n            <MainItem\n              title={\"Application\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.APPLICATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.APPLICATION)}\n            />\n          </div>\n          {/* DOCUMENT ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.DOCUMENT_VALIDATION);\n            }}\n          >\n            <MainItem\n              title={\"Document\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION\n              }\n              count={countClaims(\n                props.claiming,\n                PlansTypeKeys.DOCUMENT_VALIDATION\n              )}\n            />\n          </div>\n          {/* EXAMINATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.EXAMINATION);\n            }}\n          >\n            <MainItem\n              title={\"Exam\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.EXAMINATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.EXAMINATION)}\n            />\n          </div>\n          {false && (\n            <div\n              className=\"mt-2\"\n              onClick={() => {\n                props.setSelectedClaimType(PlansTypeKeys.PLACEMENT_TRANSFER);\n              }}\n            >\n              <MainItem\n                title={\"Placement\"}\n                active={\n                  props.claiming.selectedClaimType !== \"all\" &&\n                  props.claiming.selectedClaimType ===\n                    PlansTypeKeys.PLACEMENT_TRANSFER\n                }\n                count={countClaims(\n                  props.claiming,\n                  PlansTypeKeys.PLACEMENT_TRANSFER\n                )}\n              />\n            </div>\n          )}\n        </section>\n      )}\n      {/* END AFTER LOADING DATA ================================== */}\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  claiming,\n}: StoreState): { auth: Auth; claiming: ClaimingReducerType } => {\n  return { auth, claiming };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    GetClaimingTypes,\n    setSelectedClaimType,\n    getAllClaims,\n    PushPopupAlert,\n  })(AdminFilterByType)\n);\n","import React from \"react\";\nimport { AiFillDashboard } from \"react-icons/ai\";\nimport { SessionPlanInterface } from \"../../interfaces\";\n\ntype ClaimHeaderTitleProps = {\n  headerTitle: string;\n  loading: boolean;\n  loadingSession: boolean;\n  periodChanged: boolean;\n  thisPeriod: SessionPlanInterface | null;\n  setThisPeriod: (state: SessionPlanInterface | null) => void;\n  setLoadingSession: (state: boolean) => void;\n  application_sessions: SessionPlanInterface[];\n  onPeriodChange: (period_id: string) => void;\n};\n\nconst selectPeriod = (\n  sessions: SessionPlanInterface[],\n  period_id: string,\n  setThisPeriod: (state: SessionPlanInterface | null) => void\n) => {\n  setThisPeriod(\n    sessions.filter((item) => item.session_plan_id === period_id)[0]\n  );\n};\n\nconst ClaimHeaderTitle: React.FC<ClaimHeaderTitleProps> = (props) => {\n  const isLoading = (): boolean => {\n    if (props.loading || props.loadingSession || props.periodChanged) {\n      return true;\n    }\n    return false;\n  };\n\n  return (\n    <div className=\"mt-3 rounded flex flex-col md:flex-row md:justify-between items-start\">\n      <div className=\"flex flex-row items-center gap-3 mb-2\">\n        <AiFillDashboard className=\"text-6xl text-blue-600 hidden md:block\" />\n        <div className=\"flex flex-col\">\n          <span className=\"text-blue-600 text-3xl font-bold\">\n            {props.headerTitle}\n          </span>\n        </div>\n      </div>\n\n      {/* FILTER SECTION PERIOD && EDUCATION */}\n      <section className=\"w-full md:w-auto my-2 md:my-0\">\n        <div>\n          <select\n            className={`bg-white text-gray-600 border border-gray-400 rounded p-2 focus:outline-none ${\n              isLoading() ? \"cursor-wait\" : \"cursor-default\"\n            }`}\n            value={props.thisPeriod ? props.thisPeriod.session_plan_id : \"\"}\n            disabled={isLoading()}\n            onChange={(e) => {\n              selectPeriod(\n                props.application_sessions,\n                e.target.value,\n                props.setThisPeriod\n              );\n              props.setLoadingSession(true);\n              props.onPeriodChange(e.target.value);\n            }}\n          >\n            {props.application_sessions.map((session, item) => (\n              <option\n                key={session.session_plan_id + item}\n                value={session.session_plan_id}\n              >\n                {session.session_plan_name}\n              </option>\n            ))}\n          </select>\n        </div>\n      </section>\n      {/* END FILTER SECTION PERIOD && EDUCATION */}\n    </div>\n  );\n};\n\nexport default React.memo(ClaimHeaderTitle);\n","import React, { Component } from \"react\";\nimport { MdAdd, MdArrowBack, MdDelete, MdInfoOutline } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Auth, loadCourses, PushPopupAlert } from \"../../../actions\";\nimport {\n  DocumentClaimUser,\n  getClaimReasons,\n  getMyAnswers,\n  getMyClaims,\n  getMyPlacement,\n} from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport { SideNavigation } from \"../../../components/Navigation/SideNavigation\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimStatus,\n  PlansTypeKeys,\n  SessionPlanInterface,\n  course,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport search from \"../../../utils/search\";\nimport { filterClaimsByClaimType } from \"../Admin/AdminFilterByType\";\nimport ClaimApplView from \"../ClaimApplView\";\nimport ClaimDocView, { isClaimEvaluated } from \"../ClaimDocView\";\nimport ClaimExamView from \"../ClaimExamView\";\nimport ClaimHeaderTitle from \"../ClaimHeaderTitle\";\nimport ClaimPlacementView from \"../ClaimPlacementView\";\nimport ClaimForm, { ClaimGetDocTitle } from \"./ClaimForm\";\nimport FilterByType from \"./FilterByType\";\nimport { getCourseById, getCourseIdBySheetId } from \"./FormExamList\";\n\nexport enum ClaimTypesEnum {\n  application = \"application\",\n  document = \"document\",\n  exam = \"exam\",\n  marks_publication = \"marks publication\",\n  placement = \"placement\",\n}\n\nexport const getDocumentById = (\n  candidateDocuments: DocumentClaimUser[],\n  document_id: string\n): DocumentClaimUser | null => {\n  let result: DocumentClaimUser | undefined = candidateDocuments.find(\n    (item) => item.doc_id === document_id\n  );\n  return result ? result : null;\n};\n\nexport const whichClaimType = (\n  thisClaim: CandidateClaimInterface\n): ClaimTypesEnum | undefined => {\n  if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n    return ClaimTypesEnum.application;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n    return ClaimTypesEnum.document;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.EXAMINATION) {\n    return ClaimTypesEnum.exam;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.MARKS_PUBLICATION) {\n    return ClaimTypesEnum.marks_publication;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.PLACEMENT_TRANSFER) {\n    return ClaimTypesEnum.placement;\n  }\n};\n\nexport const whichClaimStatus = (\n  thisClaim: CandidateClaimInterface\n): {\n  classes: string;\n  status: string;\n} => {\n  let classes: string, status: string;\n  switch (thisClaim.last_claim_status) {\n    case ClaimStatus.COMPLETED:\n      classes = \"text-blue-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.COMPLETED.toLocaleLowerCase());\n      break;\n    case ClaimStatus.EVALUATED:\n      classes = \"text-green-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.EVALUATED.toLocaleLowerCase());\n      break;\n\n    case ClaimStatus.DELETED:\n      classes = \"text-red-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.DELETED.toLocaleLowerCase());\n      break;\n\n    default:\n      classes = \"text-yellow-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.PENDING.toLocaleLowerCase());\n      break;\n  }\n\n  return { classes, status };\n};\n\nexport const getClaimById = (\n  claimList: CandidateClaimInterface[],\n  claim_id: string\n): CandidateClaimInterface | null => {\n  // console.log(\"====================================\");\n  // console.log({ claimList, claim_id });\n  // console.log(\"====================================\");\n  let result: CandidateClaimInterface | undefined = claimList.find(\n    (item) => item._id === claim_id\n  );\n  return result ? result : null;\n};\n\nexport const getApplicationById = (\n  candidateApplications: claimApplicationsInterface[],\n  application_id: string\n): claimApplicationsInterface | null => {\n  let result: claimApplicationsInterface | undefined =\n    candidateApplications.find(\n      (item) => item.application_id === application_id\n    );\n  return result ? result : null;\n};\n\nexport const displayDocClaimTitle = (\n  documentCategories: DocumentReducerInterface,\n  candidateDocuments: DocumentClaimUser[],\n  thisClaim: CandidateClaimInterface\n): string => {\n  let result: string = \"\";\n\n  // CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n  if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n    let thisDoc = getDocumentById(candidateDocuments, thisClaim.claiming_on_id);\n    result = thisDoc\n      ? ClaimGetDocTitle(documentCategories, thisDoc).main\n      : \"Document not found\";\n  }\n  // END CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n  return result;\n};\n\nexport const displayClaimTitle = (\n  claiming: ClaimingReducerType,\n  documentReducer: DocumentReducerInterface,\n  allCourse: course[] | null,\n  thisClaim: CandidateClaimInterface\n): string => {\n  let result: string = thisClaim.claiming_on_id;\n\n  if (\n    thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION &&\n    claiming.candidateDocuments\n  ) {\n    result = displayDocClaimTitle(\n      documentReducer,\n      claiming.candidateDocuments,\n      thisClaim\n    );\n  }\n  if (\n    thisClaim.type_key === PlansTypeKeys.APPLICATION &&\n    claiming.candidateApplications\n  ) {\n    let thisApplication = getApplicationById(\n      claiming.candidateApplications,\n      thisClaim.claiming_on_id\n    );\n    if (thisApplication) {\n      result = thisApplication.position.position_title;\n    } else {\n      result = \"Application not found\";\n    }\n  }\n\n  if (\n    thisClaim.type_key === PlansTypeKeys.EXAMINATION &&\n    allCourse &&\n    claiming.myAnswer\n  ) {\n    let thisAnswer = getCourseIdBySheetId(\n      claiming.myAnswer,\n      thisClaim.claiming_on_id\n    );\n    if (thisAnswer && getCourseById(allCourse, thisAnswer.course)) {\n      result = getCourseById(allCourse, thisAnswer.course)!.course_name;\n    } else {\n      result = \"Exam not found\";\n    }\n  }\n\n  if (thisClaim.type_key === PlansTypeKeys.PLACEMENT_TRANSFER) {\n    result = claiming.myPlacement\n      ? \"Placed on \" + claiming.myPlacement.placed.school.school_name\n      : \"Placement not found\";\n  }\n\n  return result;\n};\n\n// -------------------------------------------------------------------------\n\ntype AppProps = {\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  application_sessions: SessionPlanInterface[] | null;\n  courses: course[] | null;\n  documentReducer: DocumentReducerInterface;\n  getMyPlacement: Function;\n  getMyClaims: Function;\n  loadCourses: Function;\n  getMyAnswers: Function;\n  getClaimReasons: Function;\n  GetAllSessionPlans: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype AppState = {\n  loading: boolean;\n  loadingSession: boolean;\n  thisPeriod: SessionPlanInterface | null;\n  periodChanged: boolean;\n  viewClaim: boolean;\n  claimId: string | null;\n  claimForm: boolean;\n\n  // FOR FORM ================\n  viewImage: boolean;\n  loadingRequest: boolean;\n  reClaiming: boolean;\n  reClaimingMsg: string;\n  searchClaim: string;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n};\n\nclass Index extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingSession: true,\n      thisPeriod: null,\n      periodChanged: false,\n      viewClaim: false,\n      claimId: null,\n      claimForm: false,\n      searchClaim: \"\",\n\n      // FOR FORM ================\n      viewImage: false,\n      loadingRequest: false,\n      reClaiming: false,\n      reClaimingMsg: \"\",\n      formError: null,\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingSession = (value: boolean) => {\n    this.setState({ loadingSession: value });\n  };\n\n  setViewClaim = (value: boolean) => {\n    this.setState({ viewClaim: value });\n  };\n\n  setPeriodChanged = (value: boolean) => {\n    this.setState({ periodChanged: value });\n  };\n\n  setClaimForm = (value: boolean) => {\n    this.setState({ claimForm: value });\n  };\n\n  setViewImage = (value: boolean) => {\n    this.setState({ viewImage: value });\n  };\n\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n\n  setReClaiming = (value: boolean) => {\n    this.setState({ reClaiming: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n\n  setReClaimingMsg = (value: string) => {\n    this.setState({ reClaimingMsg: value });\n  };\n\n  setClaimId = (value: string | null) => {\n    this.setState({ claimId: value });\n  };\n\n  setThisPeriod = (value: SessionPlanInterface | null) => {\n    this.setState({ thisPeriod: value });\n  };\n\n  setSearchClaim = (value: string) => {\n    this.setState({ searchClaim: value });\n  };\n\n  loadClaims = (thisPeriod: SessionPlanInterface) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (this.props.claiming.myClaims === null && thisPeriod !== null) {\n      this.props.getMyClaims(\n        this.props.auth.user.user_id,\n        thisPeriod.session_plan_id,\n        (status: boolean, msg: string) => {\n          !status && this.setLoading(status);\n          if (status === false && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    } else if (thisPeriod && this.state.loading) {\n      this.setLoading(false);\n    }\n  };\n\n  setSession = (sessions: SessionPlanInterface[]) => {\n    // SETTING ACTIVE SESSION ==========================\n    if (this.state.thisPeriod === null && sessions.length > 0) {\n      let thisSession = sessions.find((item) => item.is_active === true);\n      this.setThisPeriod(thisSession ? thisSession : sessions[0]);\n      this.loadClaims(thisSession ? thisSession : sessions[0]);\n      this.loadExamAnswers(\n        thisSession ? thisSession : sessions[0],\n        this.props.auth.user.user_id\n      );\n    }\n  };\n\n  loadExamAnswers = (\n    activeSessionPlan: SessionPlanInterface,\n    user_id: string\n  ) => {\n    this.props.getMyAnswers(\n      activeSessionPlan.session_plan_id,\n      user_id,\n      (status: boolean, msg: string, data: SessionPlanInterface | \"none\") => {\n        this.setLoading(status);\n        if (!status && msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n        if (data) {\n          console.log(\"====================================\");\n          console.log({ loadExamAnswers: data });\n          console.log(\"====================================\");\n        }\n      }\n    );\n    if (this.props.claiming.claimReasons === null) {\n      this.props.getClaimReasons((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (!status) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n  };\n\n  componentDidMount = () => {\n    if (\n      this.props.courses === null ||\n      (this.props.courses.length === 0 && this.state.loading)\n    ) {\n      this.props.loadCourses(this.setLoading);\n      this.setLoading(false);\n    } else {\n      this.setLoading(false);\n    }\n\n    // LOADING APPLICATION SESSION ====================================\n    if (this.props.application_sessions === null) {\n      this.props.GetAllSessionPlans(\n        (status: boolean, msg: string, data?: SessionPlanInterface[]) => {\n          if (!status) {\n            this.setLoadingSession(false);\n            if (msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data && data.length > 0) {\n              // SETTING ACTIVE SESSION ==========================\n              if (this.state.thisPeriod === null) {\n                this.setSession(data);\n              }\n            }\n          }\n        }\n      );\n    } else {\n      this.setSession(this.props.application_sessions);\n      this.setLoadingSession(false);\n    }\n\n    if (!this.props.documentReducer.documentCategory) {\n      this.props.getDocumentCategory();\n      this.setLoading(false);\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n    if (!this.props.documentReducer.documentSubCategory && this.state.loading) {\n      this.props.getDocumentSubCategory();\n      this.setLoading(false);\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n\n    if (!this.props.documentReducer.documentFields && this.state.loading) {\n      this.props.getDocumentFields();\n      this.setLoading(false);\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n\n    if (this.props.claiming.myPlacement === null) {\n      this.props.getMyPlacement(\n        this.props.auth.user.user_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          }\n        }\n      );\n    }\n  };\n\n  isDeleteAllowed = (thisCLaim: CandidateClaimInterface): boolean => {\n    if (!isClaimEvaluated(thisCLaim, 1)) {\n      return true;\n    }\n    return false;\n  };\n\n  onPeriodChange = (period_id: string) => {\n    this.setPeriodChanged(true);\n    this.props.getMyClaims(\n      this.props.auth.user.user_id,\n      period_id,\n      (status: boolean, msg: string) => {\n        this.setLoadingRequest(status);\n        !status && this.setPeriodChanged(false);\n        if (status === false && msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      }\n    );\n  };\n\n  render() {\n    if (this.props.application_sessions === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    if (this.props.application_sessions.length === 0) {\n      return (\n        <div className=\"bg-yellow-100 rounded flex flex-col items-center justify-center p-6 my-8 text-yellow-900 border border-yellow-900\">\n          <MdInfoOutline className=\"text-6xl md:text-9xl\" />\n          <div className=\"text-center flex flex-col\">\n            <span className=\"text-2xl md:text-4xl font-extrabold\">\n              No active session\n            </span>\n            <span className=\"text-lg\">\n              Please Wait for the system to publish the sessions or contact the\n              administrator\n            </span>\n          </div>\n        </div>\n      );\n    }\n\n    if (this.props.claiming.myClaims === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {/* SIDE NAVIGATION */}\n        {!this.state.viewClaim && (\n          <SideNavigation>\n            <button\n              className=\"btn mb-3 border-2 border-blue-500 hover:bg-blue-500 hover:text-white flex items-center flex-1 font-bold w-full focus:outline-none\"\n              onClick={() => {\n                this.setClaimForm(true);\n                // alert(\"clicked\");\n              }}\n              disabled={\n                this.state.viewClaim ||\n                this.state.loading ||\n                this.state.loadingRequest\n              }\n            >\n              <MdAdd className=\"inline-block mr-1 text-xl font-bold\" />\n              <span>Claiming</span>\n            </button>\n\n            {/* FILTER SECTION */}\n            <FilterByType loadingClaims={this.state.loadingRequest} />\n            {/* END FILTER SECTION */}\n          </SideNavigation>\n        )}\n        {/* END SIDE NAVIGATION */}\n\n        {/* ------------------------------------------------------------------- */}\n\n        {/* CLAIM TITLE ===================================== */}\n        {!this.state.viewClaim && (\n          <ClaimHeaderTitle\n            headerTitle={`${\n              this.props.claiming.selectedClaimType === \"all\"\n                ? \"All\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION\n                ? \"Documents\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.APPLICATION\n                ? \"Applications\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.EXAMINATION\n                ? \"Exam\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.MARKS_PUBLICATION\n                ? \"Marks publication\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.PLACEMENT_TRANSFER\n                ? \"Placements\"\n                : \"\"\n            } Claiming`}\n            loading={this.state.loading}\n            loadingSession={this.state.loadingSession}\n            thisPeriod={this.state.thisPeriod}\n            setThisPeriod={this.setThisPeriod}\n            setLoadingSession={this.setLoadingSession}\n            application_sessions={this.props.application_sessions}\n            onPeriodChange={this.onPeriodChange}\n            periodChanged={this.state.periodChanged}\n          />\n        )}\n        {/* END CLAIM TITLE ===================================== */}\n\n        {/* ----------------------------------------------------------------------- */}\n\n        {!this.state.viewClaim && (\n          <section className=\"bg-white w-full p-1\">\n            {/* FILTER FORM =================================== */}\n            <section className=\"flex flex-col-reverse sm:flex-row items-center gap-2 w-full my-2\">\n              <div className=\"w-full\">\n                <input\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                    this.setSearchClaim(e.target.value)\n                  }\n                  type=\"text\"\n                  className=\"input-white h-10 text-sm border-2 border-gray-400 focus:border-gray-500 w-full\"\n                  placeholder={`Search claim by title or type`}\n                  value={this.state.searchClaim}\n                  disabled={\n                    filterClaimsByClaimType(\n                      this.props.claiming.myClaims,\n                      this.props.claiming.selectedClaimType\n                    ).length > 0\n                      ? false\n                      : true\n                  }\n                />\n              </div>\n            </section>\n            {/* END FILTER FORM =================================== */}\n            <table className=\"w-full shadow\" id=\"report_content\">\n              <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                <tr>\n                  <td className=\"px-2 py-2\">#</td>\n                  <td className=\"px-2 py-2\">Claim title</td>\n                  {this.props.claiming.selectedClaimType === \"all\" && (\n                    <td className=\"px-2 py-2\">Claim type</td>\n                  )}\n                  <td className=\"px-2 py-2\">Claim level</td>\n                  <td className=\"px-2 py-2\">Claim status</td>\n                  <td className=\"px-2 py-2\"></td>\n                </tr>\n              </thead>\n              <tbody>\n                {filterClaimsByClaimType(\n                  this.props.claiming.myClaims,\n                  this.props.claiming.selectedClaimType\n                ).length <= 0 ? (\n                  <tr\n                    className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                    key=\"key3201\"\n                  >\n                    <td className=\"px-3 py-1\" colSpan={4}>\n                      <NoResult\n                        theme={NoResultThemes.Light}\n                        value={\"No claim found!\"}\n                      />\n                    </td>\n                  </tr>\n                ) : search(\n                    filterClaimsByClaimType(\n                      this.props.claiming.myClaims,\n                      this.props.claiming.selectedClaimType\n                    ),\n                    this.state.searchClaim\n                  ).length <= 0 ? (\n                  <tr\n                    className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                    key=\"key3201\"\n                  >\n                    <td className=\"px-3 py-1\" colSpan={4}>\n                      <NoResult\n                        theme={NoResultThemes.Light}\n                        value={\"Nothing found!\"}\n                      />\n                    </td>\n                  </tr>\n                ) : (\n                  search(\n                    filterClaimsByClaimType(\n                      this.props.claiming.myClaims,\n                      this.props.claiming.selectedClaimType\n                    ),\n                    this.state.searchClaim\n                  ).map((claim: CandidateClaimInterface, index) => (\n                    <tr\n                      className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                      key={index + claim._id}\n                      onClick={() => {\n                        this.setViewClaim(true);\n                        this.setClaimId(claim._id);\n                      }}\n                    >\n                      <td className=\"px-3 py-1 whitespace-nowrap\">\n                        {index + 1}\n                      </td>\n                      <td className=\"px-3 py-1 whitespace-nowrap\">\n                        {claim.title}\n                      </td>\n                      {this.props.claiming.selectedClaimType === \"all\" && (\n                        <td className=\"px-3 py-1 whitespace-nowrap\">\n                          {whichClaimType(claim)\n                            ? capitalizeFirstLetter(whichClaimType(claim)!)\n                            : \"-\"}\n                        </td>\n                      )}\n                      <td className=\"px-3 py-1 whitespace-nowrap italic\">\n                        Level {claim.claim_level}\n                      </td>\n                      <td className=\"px-3 py-1 whitespace-nowrap\">\n                        <span\n                          className={`inline-block rounded-full duration-300 text-xs font-semibold px-3 py-1 ${\n                            whichClaimStatus(claim).classes\n                          }`}\n                        >\n                          {whichClaimStatus(claim).status}\n                        </span>\n                      </td>\n                      <td className=\"px-3 py-1 text-center whitespace-nowrap\">\n                        <button className=\"btn bg-blue-500 text-white group-hover:bg-blue-600\">\n                          View\n                        </button>\n                      </td>\n                    </tr>\n                  ))\n                )}\n              </tbody>\n            </table>\n          </section>\n        )}\n\n        {/* ----------------------------------------------------------------------- */}\n\n        {this.state.viewClaim &&\n          this.props.claiming.myClaims &&\n          this.state.claimId &&\n          getClaimById(this.props.claiming.myClaims, this.state.claimId) && (\n            <section className=\"bg-white w-full p-1 my-4\">\n              {/* VIEW CLAIM HEADER =============================== */}\n              <section className=\"flex items-center gap-2 py-2 border-b\">\n                <button\n                  className={`ml-3 bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n                    this.state.loadingRequest\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } animate__animated animate__fadeIn`}\n                  disabled={this.state.loadingRequest}\n                  onClick={() => {\n                    this.setViewClaim(false);\n                    this.setViewImage(false);\n                    this.setLoadingRequest(false);\n                    this.setFormError(null);\n                    this.setReClaiming(false);\n                    this.setReClaimingMsg(\"\");\n                  }}\n                >\n                  <MdArrowBack className=\"w-7 h-7\" />\n                </button>\n                {this.isDeleteAllowed(\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!\n                ) && (\n                  <button\n                    className={`bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n                      this.state.loadingRequest\n                        ? \"cursor-not-allowed\"\n                        : \"cursor-pointer\"\n                    } animate__animated animate__fadeIn hidden`}\n                    disabled={this.state.loadingRequest}\n                    // onClick={() => {\n                    //   this.handleDelete();\n                    // }}\n                  >\n                    <MdDelete className=\"w-7 h-7\" />\n                  </button>\n                )}\n              </section>\n              {/* END VIEW CLAIM HEADER =============================== */}\n              <section className=\"my-2\">\n                {/* VIEWING CLAIM OF A DOCUMENT ===================== */}\n                {getClaimById(this.props.claiming.myClaims, this.state.claimId)!\n                  .type_key === PlansTypeKeys.DOCUMENT_VALIDATION &&\n                this.props.claiming.candidateDocuments &&\n                getDocumentById(\n                  this.props.claiming.candidateDocuments,\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.claiming_on_id\n                ) ? (\n                  <ClaimDocView\n                    thisDoc={\n                      getDocumentById(\n                        this.props.claiming.candidateDocuments,\n                        getClaimById(\n                          this.props.claiming.myClaims,\n                          this.state.claimId\n                        )!.claiming_on_id\n                      )!\n                    }\n                    documentCategories={this.props.documentReducer}\n                    thisClaim={\n                      getClaimById(\n                        this.props.claiming.myClaims,\n                        this.state.claimId\n                      )!\n                    }\n                    viewImage={this.state.viewImage}\n                    setViewImage={this.setViewImage}\n                    loadingRequest={this.state.loadingRequest}\n                    setLoadingRequest={this.setLoadingRequest}\n                    reClaiming={this.state.reClaiming}\n                    setReClaiming={this.setReClaiming}\n                    reClaimingMsg={this.state.reClaimingMsg}\n                    setReClaimingMsg={this.setReClaimingMsg}\n                    formError={this.state.formError}\n                    setFormError={this.setFormError}\n                    claimReasons={this.props.claiming.claimReasons}\n                  />\n                ) : (\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.type_key === PlansTypeKeys.DOCUMENT_VALIDATION && (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"Document not found\"}\n                    />\n                  )\n                )}\n                {/* END VIEWING CLAIM OF A DOCUMENT ===================== */}\n\n                {/* ############################################################### */}\n\n                {/* VIEWING CLAIM OF AN APPLICATION ===================== */}\n                {getClaimById(this.props.claiming.myClaims, this.state.claimId)!\n                  .type_key === PlansTypeKeys.APPLICATION &&\n                this.props.claiming.candidateApplications &&\n                getApplicationById(\n                  this.props.claiming.candidateApplications,\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.claiming_on_id\n                ) ? (\n                  <ClaimApplView\n                    thisApplication={\n                      getApplicationById(\n                        this.props.claiming.candidateApplications,\n                        getClaimById(\n                          this.props.claiming.myClaims,\n                          this.state.claimId\n                        )!.claiming_on_id\n                      )!\n                    }\n                    documentCategories={this.props.documentReducer}\n                    thisClaim={\n                      getClaimById(\n                        this.props.claiming.myClaims,\n                        this.state.claimId\n                      )!\n                    }\n                    viewPosition={this.state.viewImage}\n                    setViewPosition={this.setViewImage}\n                    loadingRequest={this.state.loadingRequest}\n                    setLoadingRequest={this.setLoadingRequest}\n                    reClaiming={this.state.reClaiming}\n                    setReClaiming={this.setReClaiming}\n                    reClaimingMsg={this.state.reClaimingMsg}\n                    setReClaimingMsg={this.setReClaimingMsg}\n                    formError={this.state.formError}\n                    setFormError={this.setFormError}\n                    claimReasons={this.props.claiming.claimReasons}\n                  />\n                ) : (\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.type_key === PlansTypeKeys.APPLICATION && (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"Application not found\"}\n                    />\n                  )\n                )}\n                {/* END VIEWING CLAIM OF AN APPLICATION ===================== */}\n\n                {/* VIEWING CLAIM OF AN EXAM ===================== */}\n                {getClaimById(this.props.claiming.myClaims, this.state.claimId)!\n                  .type_key === PlansTypeKeys.EXAMINATION &&\n                this.props.claiming.myAnswer &&\n                this.props.courses &&\n                getCourseIdBySheetId(\n                  this.props.claiming.myAnswer,\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.claiming_on_id\n                ) &&\n                getCourseById(\n                  this.props.courses,\n                  getCourseIdBySheetId(\n                    this.props.claiming.myAnswer,\n                    getClaimById(\n                      this.props.claiming.myClaims,\n                      this.state.claimId\n                    )!.claiming_on_id\n                  )!.course\n                ) ? (\n                  <ClaimExamView\n                    thisExam={\n                      getCourseById(\n                        this.props.courses,\n                        getCourseIdBySheetId(\n                          this.props.claiming.myAnswer,\n                          getClaimById(\n                            this.props.claiming.myClaims,\n                            this.state.claimId\n                          )!.claiming_on_id\n                        )!.course\n                      )!\n                    }\n                    thisClaim={\n                      getClaimById(\n                        this.props.claiming.myClaims,\n                        this.state.claimId\n                      )!\n                    }\n                    viewPosition={this.state.viewImage}\n                    setViewPosition={this.setViewImage}\n                    loadingRequest={this.state.loadingRequest}\n                    setLoadingRequest={this.setLoadingRequest}\n                    reClaiming={this.state.reClaiming}\n                    setReClaiming={this.setReClaiming}\n                    reClaimingMsg={this.state.reClaimingMsg}\n                    setReClaimingMsg={this.setReClaimingMsg}\n                    formError={this.state.formError}\n                    setFormError={this.setFormError}\n                    thisExamSheet={\n                      getCourseIdBySheetId(\n                        this.props.claiming.myAnswer,\n                        getClaimById(\n                          this.props.claiming.myClaims,\n                          this.state.claimId\n                        )!.claiming_on_id\n                      )!\n                    }\n                    claimReasons={this.props.claiming.claimReasons}\n                  />\n                ) : (\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.type_key === PlansTypeKeys.EXAMINATION && (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"Exam not found\"}\n                    />\n                  )\n                )}\n                {/* END VIEWING CLAIM OF AN EXAM ===================== */}\n\n                {/* ----------------------------------------------------------- */}\n                {/* VIEWING CLAIM OF A DOCUMENT ===================== */}\n                {getClaimById(this.props.claiming.myClaims, this.state.claimId)!\n                  .type_key === PlansTypeKeys.PLACEMENT_TRANSFER &&\n                this.props.claiming.myPlacement ? (\n                  <ClaimPlacementView\n                    thisClaim={\n                      getClaimById(\n                        this.props.claiming.myClaims,\n                        this.state.claimId\n                      )!\n                    }\n                    loadingRequest={this.state.loadingRequest}\n                    setLoadingRequest={this.setLoadingRequest}\n                    reClaiming={this.state.reClaiming}\n                    setReClaiming={this.setReClaiming}\n                    reClaimingMsg={this.state.reClaimingMsg}\n                    setReClaimingMsg={this.setReClaimingMsg}\n                    formError={this.state.formError}\n                    setFormError={this.setFormError}\n                    myPlacement={this.props.claiming.myPlacement}\n                  />\n                ) : (\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.type_key === PlansTypeKeys.PLACEMENT_TRANSFER && (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"Placement not found\"}\n                    />\n                  )\n                )}\n                {/* END VIEWING CLAIM OF A DOCUMENT ===================== */}\n              </section>\n            </section>\n          )}\n        {/* end view claim */}\n\n        {/* ----------------------------------------------------------------------- */}\n        {/* CLAIM FORM  ################ */}\n        {this.state.claimForm && (\n          <ClaimForm\n            formState={this.state.claimForm}\n            setFormState={this.setClaimForm}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  sessionPlan,\n  claiming,\n  document,\n  course,\n}: StoreState): {\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  application_sessions: SessionPlanInterface[] | null;\n  documentReducer: DocumentReducerInterface;\n  courses: course[] | null;\n} => {\n  return {\n    auth: auth,\n    claiming,\n    application_sessions: sessionPlan.allSessionPlans,\n    documentReducer: document,\n    courses: course.courses,\n  };\n};\n\nexport const CandidateClaim = connect(mapStateToProps, {\n  getMyClaims,\n  GetAllSessionPlans,\n  getClaimReasons,\n  loadCourses,\n  getMyPlacement,\n  getMyAnswers,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  PushPopupAlert,\n})(Index);\n","import axios from \"axios\";\nimport React from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdInfoOutline, MdTurnedIn } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { createReClaim } from \"../../actions/claiming\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimDecisionStatus,\n  claimReasonInterface,\n  ClaimStatus,\n} from \"../../interfaces\";\nimport { ApplicationStates } from \"../../interfaces/application\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { DocumentReducerInterface } from \"../../reducers/document\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { DATE, errorToText, showDate } from \"../../utils/functions\";\nimport ViewRequirements from \"../Positions/ViewRequirements\";\nimport { FC_ApplicationPositionDistinctCategory } from \"./Candidate/ApplicationFormView\";\nimport { isClaimEvaluated } from \"./ClaimDocView\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\ntype ClaimDocViewProps = {\n  thisApplication: claimApplicationsInterface;\n  documentCategories: DocumentReducerInterface;\n  claimReasons: claimReasonInterface[] | null;\n  thisClaim: CandidateClaimInterface;\n  viewPosition: boolean;\n  setViewPosition: (value: boolean) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  reClaiming: boolean;\n  setReClaiming: (value: boolean) => void;\n  reClaimingMsg: string;\n  setReClaimingMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX DATA =====================\n  createReClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst ClaimDocView: React.FC<ClaimDocViewProps> = (props) => {\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim is required\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim._id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              {props.thisApplication.position.position_title}\n            </span>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewPosition(!props.viewPosition)}\n            >\n              {props.viewPosition ? \"Hide\" : \"More\"}\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisClaim.previous.status === ApplicationStates.Rejected\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } rounded px-3 py-1`}\n            >\n              {capitalizeFirstLetter(props.thisClaim.previous.status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {props.thisClaim.previous.evaluater.name}\n            </span>\n          </div>\n          {false && (\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Session:</span>\n              <span className=\"font-bold text-gray-900 py-1\">\n                {\n                  props.thisApplication.application_session\n                    .application_session_name\n                }\n              </span>\n            </div>\n          )}\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisApplication.createdAt)}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span\n              className=\"font-normal\"\n              dangerouslySetInnerHTML={{\n                __html: props.thisClaim.previous.reason,\n              }}\n            ></span>\n          </div>\n\n          {/* DISPLAY POSITION ==================================================== */}\n          {props.viewPosition && (\n            <div className=\"w-full my-1 animate__animated animate__fadeIn rounded\">\n              <div className=\"bg-white w-full\">\n                <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                  Position Details\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Desc:</span>\n                  <span className=\"font-semibold\">\n                    {props.thisApplication.position.description}\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>School level:</span>\n                  <span className=\"font-semibold\">\n                    {\n                      props.thisApplication.position.school_level_id\n                        .school_level_name\n                    }\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Institute:</span>\n                  <span className=\"font-semibold\">\n                    {\n                      props.thisApplication.position.education_institute_id\n                        .education_category_title\n                    }\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Courses:</span>\n                  <span className=\"flex items-center gap-2\">\n                    {props.thisApplication.position.courses.map(\n                      (item, index) => (\n                        <div\n                          key={index + item.course_id}\n                          className=\"flex items-center gap-1\"\n                        >\n                          <span className=\"font-semibold\">\n                            {item.course_name}\n                          </span>\n                          <span className=\"text-gray-600\">\n                            ({item.course_code})\n                          </span>\n                          {index !==\n                            props.thisApplication.position.courses.length - 1 &&\n                            \",\"}\n                        </div>\n                      )\n                    )}\n                  </span>\n                </div>\n\n                <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                  Position Requirements\n                </div>\n                {props.thisApplication.position.requirements.length > 0 ? (\n                  FC_ApplicationPositionDistinctCategory(\n                    props.thisApplication.position,\n                    props.documentCategories\n                  ).DistinctCategoriesTemp.map((item, index) => (\n                    <div\n                      className=\"bg-gray-100props.thisApplication.position rounded p-2\"\n                      key={index + item.category_id}\n                    >\n                      <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                        <MdTurnedIn />\n                        <span>{item.category_title}</span>\n                      </div>\n                      <div className=\"border bg-white mt-1\">\n                        <ViewRequirements\n                          requirements={FC_ApplicationPositionDistinctCategory(\n                            props.thisApplication.position,\n                            props.documentCategories\n                          ).PositionsTemp.filter(\n                            (req) => req.category_id === item.category_id\n                          )}\n                        />\n                      </div>\n                    </div>\n                  ))\n                ) : (\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"No requirements\"}\n                  ></NoResult>\n                )}\n              </div>\n            </div>\n          )}\n          {/* END DISPLAY POSITION ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt)}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-center justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <button\n                className=\"btn btn-blue\"\n                onClick={() => props.setReClaiming(true)}\n                disabled={props.loadingRequest}\n              >\n                Reclaim\n              </button>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your reclaim...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nexport default React.memo(connect(null, {\n  createReClaim,\n  PushPopupAlert,\n})(ClaimDocView));\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdInfoOutline } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport {\n  loadQuestionTypes,\n  PushPopupAlert,\n  questionTypesStoreInterface,\n} from \"../../actions\";\nimport { createReClaim } from \"../../actions/claiming\";\nimport CandidateAnswersDetails from \"../../components/AnswersDetails/CandidateAnswersDetails\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimExamResultsDetails,\n  claimReasonInterface,\n  ClaimStatus,\n  course,\n} from \"../../interfaces\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { errorToText, showDate } from \"../../utils/functions\";\nimport { claimShowAnswer } from \"./Candidate/ExaminationFormView\";\nimport { isClaimEvaluated } from \"./ClaimDocView\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\ntype ClaimDocViewProps = {\n  thisExam: course;\n  thisExamSheet: ClaimExamResultsDetails;\n  thisClaim: CandidateClaimInterface;\n  viewPosition: boolean;\n  claimReasons: claimReasonInterface[] | null;\n  setViewPosition: (value: boolean) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  reClaiming: boolean;\n  setReClaiming: (value: boolean) => void;\n  reClaimingMsg: string;\n  setReClaimingMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX DATA =====================\n  questionTypes: questionTypesStoreInterface;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  createReClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst ClaimDocView: React.FC<ClaimDocViewProps> = (props) => {\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (\n      props.questionTypes.questionTypes === null ||\n      (props.questionTypes.questionTypes.length === 0 && loading)\n    ) {\n      props.loadQuestionTypes(setLoading);\n    }\n  }, [loading, props]);\n\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim is required\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim._id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              Exam of {props.thisExam.course_name}{\" \"}\n            </span>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewPosition(!props.viewPosition)}\n            >\n              {props.viewPosition ? \"Hide\" : \"More\"}\n            </button>\n          </div>\n\n          {/* DISPLAY EXAM SHEET ==================================================== */}\n          {props.viewPosition && (\n            <div className=\"bg-white w-full rounded p-2 mb-2\">\n              <CandidateAnswersDetails\n                showAnswers={false}\n                exam_id={claimShowAnswer(\n                  props.thisExamSheet,\n                  props.thisExam.course_name\n                )}\n              />\n            </div>\n          )}\n          {/* END DISPLAY POSITION ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt)}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {loading ? (\n                          <div className=\"w-24 h-3 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n                        ) : (\n                          props.thisClaim.userDetails.user_info.fname +\n                          \" \" +\n                          props.thisClaim.userDetails.user_info.lname\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-center justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <button\n                className=\"btn btn-blue\"\n                onClick={() => props.setReClaiming(true)}\n                disabled={props.loadingRequest}\n              >\n                Reclaim\n              </button>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your reclaim...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  questionTypes,\n}: StoreState): {\n  questionTypes: questionTypesStoreInterface;\n} => {\n  return { questionTypes: questionTypes };\n};\n\nexport default React.memo(connect(mapStateToProps, {\n  loadQuestionTypes,\n  createReClaim,\n  PushPopupAlert,\n})(ClaimDocView));\n","import axios from \"axios\";\nimport React from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { createReClaim } from \"../../actions/claiming\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimStatus,\n} from \"../../interfaces\";\nimport { candidatePlacementInterface } from \"../../interfaces/placement\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { errorToText, showDate } from \"../../utils/functions\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nexport const isClaimEvaluated = (\n  thisClaim: CandidateClaimInterface,\n  level: number\n): boolean => {\n  const _thisClaim = thisClaim.claims.find(\n    (item) =>\n      item.level === level && item.claim_status === ClaimStatus.EVALUATED\n  );\n  if (_thisClaim) {\n    return true;\n  }\n  return false;\n};\n\ntype ClaimPlacementViewProps = {\n  myPlacement: candidatePlacementInterface;\n  thisClaim: CandidateClaimInterface;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  reClaiming: boolean;\n  setReClaiming: (value: boolean) => void;\n  reClaimingMsg: string;\n  setReClaimingMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX DATA =====================\n  createReClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst ClaimPlacementView: React.FC<ClaimPlacementViewProps> = (props) => {\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim sent successful\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim._id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>School:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.myPlacement.placed.school.school_name}\n              </span>\n            </div>\n          </div>\n          {/* <div className=\"flex items-center\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Position:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.myPlacement.placed.school.school_name}\n              </span>\n            </div>\n          </div> */}\n          <div className=\"flex items-center\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>District:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.myPlacement.placed.school.district_id.district_name}\n              </span>\n            </div>\n          </div>\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt)}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-center justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <button\n                className=\"btn btn-blue\"\n                onClick={() => props.setReClaiming(true)}\n                disabled={props.loadingRequest}\n              >\n                Reclaim\n              </button>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your reclaim...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nexport default React.memo(connect(null, {\n  createReClaim,\n  PushPopupAlert,\n})(ClaimPlacementView));\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport {\n  GetClaimingTypes,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  setSelectedClaimType,\n} from \"../../../actions/claiming\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport { MainItem } from \"../../../components/Navigation/SideNavigation\";\nimport { ClaimStatus, PlansTypeKeys } from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\n\ntype FilterByTypeProps = {\n  // thisClaimType: ClaimTypesInterface | \"ALL\";\n  // setThisClaimType: React.Dispatch<\n  //   React.SetStateAction<ClaimTypesInterface | \"ALL\">\n  // >;\n  loadingClaims: boolean;\n  FC_CountByType?: Function;\n\n  // REDUX PROPS =======================================\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  GetClaimingTypes: Function;\n  setSelectedClaimType: Function;\n  getMyRejectedApplications: Function;\n  getMyRejectedDocuments: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\nconst FilterByType: React.FC<FilterByTypeProps> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingRejectedApplications, setLoadingRejectedApplications] =\n    useState<boolean>(true);\n  const [loadingRejectedDocuments, setLoadingRejectedDocuments] =\n    useState<boolean>(true);\n  const [loadingClaimTypes, setLoadingClaimTypes] = useState<boolean>(true);\n\n  useEffect(() => {\n    if (props.claiming.candidateApplications === null) {\n      props.getMyRejectedApplications(\n        props.auth.user.user_id,\n        (status: boolean, msg: string) => {\n          if (status === false) {\n            if (msg.length > 0) {\n              props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            setLoadingRejectedApplications(false);\n          }\n        }\n      );\n    } else if (loadingRejectedApplications) {\n      setLoadingRejectedApplications(false);\n    }\n\n    if (props.claiming.candidateDocuments === null) {\n      console.log(\"filterrrrrrrrrrrrrrrrrrrr loadingRejectedDocuments\");\n      props.getMyRejectedDocuments((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          setLoadingRejectedDocuments(false);\n        }\n      });\n    } else if (loadingRejectedDocuments) {\n      setLoadingRejectedDocuments(false);\n    }\n\n    if (props.claiming.claimTypes === null) {\n      props.GetClaimingTypes((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          setLoadingClaimTypes(false);\n        }\n      });\n    } else if (loadingClaimTypes) {\n      setLoadingClaimTypes(false);\n    }\n\n    if (\n      !loadingRejectedApplications &&\n      !loadingRejectedDocuments &&\n      !loadingClaimTypes &&\n      loading\n    ) {\n      setLoading(false);\n    }\n  }, [\n    loading,\n    loadingClaimTypes,\n    loadingRejectedApplications,\n    loadingRejectedDocuments,\n    props,\n  ]);\n\n  const countClaims = (\n    claiming: ClaimingReducerType,\n    thisType: PlansTypeKeys | \"all\"\n  ): number => {\n    let result: number = 0;\n\n    if (claiming.myClaims && thisType === \"all\") {\n      result = claiming.myClaims.filter(\n        (item) =>\n          item.last_claim_status !== ClaimStatus.DELETED &&\n          item.last_claim_status !== ClaimStatus.COMPLETED\n      ).length;\n    }\n    if (claiming.myClaims && thisType !== \"all\") {\n      result = claiming.myClaims.filter(\n        (item) =>\n          item.type_key === thisType &&\n          item.last_claim_status !== ClaimStatus.DELETED &&\n          item.last_claim_status !== ClaimStatus.COMPLETED\n      ).length;\n    }\n\n    return result;\n  };\n\n  return (\n    <React.Fragment>\n      <span className=\"mt-2 text-sm\">Filter by claim type</span>\n      {/* WHILE LOADING DATA ================================== */}\n      {(loading || props.loadingClaims) && (\n        <section className=\"space-y-2\">\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </section>\n      )}\n      {/* END WHILE LOADING DATA ================================== */}\n\n      {/* AFTER LOADING DATA ================================== */}\n      {!loading && !props.loadingClaims && (\n        <section>\n          {/* ALL ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(\"ALL\");\n              props.setSelectedClaimType(\"all\");\n            }}\n          >\n            <MainItem\n              title=\"All\"\n              active={props.claiming.selectedClaimType === \"all\"}\n              count={countClaims(props.claiming, \"all\")}\n            />\n          </div>\n          {/* APPLICATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(ClaimTypesInterface.DOCUMENT);\n              props.setSelectedClaimType(PlansTypeKeys.APPLICATION);\n            }}\n          >\n            <MainItem\n              title={\"Application\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.APPLICATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.APPLICATION)}\n            />\n          </div>\n          {/* DOCUMENT ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.DOCUMENT_VALIDATION);\n            }}\n          >\n            <MainItem\n              title={\"Document\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION\n              }\n              count={countClaims(\n                props.claiming,\n                PlansTypeKeys.DOCUMENT_VALIDATION\n              )}\n            />\n          </div>\n          {/* EXAMINATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.EXAMINATION);\n            }}\n          >\n            <MainItem\n              title={\"Exam\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.EXAMINATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.EXAMINATION)}\n            />\n          </div>\n          {/* PLACEMENT TRANSFER ================================= */}\n          {false && (\n            <div\n              className=\"mt-2\"\n              onClick={() => {\n                props.setSelectedClaimType(PlansTypeKeys.PLACEMENT_TRANSFER);\n              }}\n            >\n              <MainItem\n                title={\"Placement\"}\n                active={\n                  props.claiming.selectedClaimType !== \"all\" &&\n                  props.claiming.selectedClaimType ===\n                    PlansTypeKeys.PLACEMENT_TRANSFER\n                }\n                count={countClaims(\n                  props.claiming,\n                  PlansTypeKeys.PLACEMENT_TRANSFER\n                )}\n              />\n            </div>\n          )}\n          {/* <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setThisClaimType(ClaimTypesInterface.APPLICATION);\n            }}\n          >\n            <MainItem\n              title={capitalizeFirstLetter(ClaimTypesInterface.APPLICATION)}\n              active={props.thisClaimType === ClaimTypesInterface.APPLICATION}\n              count={countClaims(props.claiming).applications}\n            />\n          </div>\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setThisClaimType(ClaimTypesInterface.PLACEMENT);\n            }}\n          >\n            <MainItem\n              title={capitalizeFirstLetter(ClaimTypesInterface.PLACEMENT)}\n              active={props.thisClaimType === ClaimTypesInterface.PLACEMENT}\n              count={countClaims(props.claiming).placement}\n            />\n          </div> */}\n        </section>\n      )}\n      {/* END AFTER LOADING DATA ================================== */}\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  claiming,\n}: StoreState): { auth: Auth; claiming: ClaimingReducerType } => {\n  return { auth, claiming };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    GetClaimingTypes,\n    setSelectedClaimType,\n    getMyRejectedApplications,\n    getMyRejectedDocuments,\n    PushPopupAlert,\n  })(FilterByType)\n);\n","import React, { useEffect, useState } from \"react\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\n\ntype ViewPDFProps = {\n  file_url: string;\n  class_name: string;\n  frame_title: string;\n  setLoadingFile: (state: boolean) => void;\n};\n\nconst ViewPDF: React.FC<ViewPDFProps> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<{ element: string; msg: string } | null>(\n    null\n  );\n  useEffect(() => {\n    if (loading) {\n      if (isEmptyOrSpaces(props.file_url)) {\n        setError({ element: \"PDF_FILE\", msg: \"File url is required\" });\n      } else if (error !== null) {\n        setError(null);\n      }\n      setLoading(false);\n    }\n  }, [error, loading, props.file_url]);\n\n  return (\n    <div className=\"w-full\">\n      {error ? (\n        <div className=\"alert-warning mt-2 mx-14\">{error.msg}</div>\n      ) : (\n        <object\n          data={props.file_url}\n          type=\"application/pdf\"\n          className={props.class_name}\n          onLoad={() => props.setLoadingFile(false)}\n        >\n          <iframe\n            src={props.file_url}\n            className={props.class_name}\n            title={props.frame_title}\n            onLoad={() => props.setLoadingFile(false)}\n          >\n            <p>This browser does not support PDF!</p>\n          </iframe>\n        </object>\n      )}\n    </div>\n  );\n};\n\nexport default ViewPDF;\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdCancel, MdInfoOutline } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadQuestionTypes,\n  PushPopupAlert,\n  questionTypesStoreInterface,\n} from \"../../../actions\";\nimport { evaluateClaim } from \"../../../actions/claiming\";\nimport { AnswersDetails } from \"../../../components/AnswersDetails/AnswersDetails\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimExamResultsDetails,\n  claimReasonInterface,\n  ClaimStatus,\n  ClaimTypesInterfaceAPI,\n  course,\n} from \"../../../interfaces\";\nimport { ExamAnswerSheetDone } from \"../../../interfaces/exam\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { showDate } from \"../../../utils/functions\";\nimport { claimShowAnswer } from \"../Candidate/ExaminationFormView\";\nimport { isClaimEvaluated } from \"../ClaimDocView\";\nimport { claimResponseBody } from \"./AdminClaimDocView\";\n\nenum viewTabs {\n  profile = \"Applicant Profile\",\n  exam = \"Exam Details\",\n}\n\ntype AdminClaimExamViewProps = {\n  thisExamSheet: ClaimExamResultsDetails;\n  thisExam: course;\n  thisClaim: CandidateClaimInterface;\n  claimTypes: ClaimTypesInterfaceAPI[];\n  claimReasons: claimReasonInterface[] | null;\n\n  // REDUX ==================\n  auth: Auth;\n  questionTypes: questionTypesStoreInterface;\n  evaluateClaim: Function;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  PushPopupAlert: Function;\n};\n\nconst AdminClaimExamView: React.FC<AdminClaimExamViewProps> = (props) => {\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n  const [loading, setLoading] = useState(true);\n  const [actionTaken, setActionTaken] = useState<ClaimDecisionStatus | null>(\n    null\n  );\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [responseMsg, setResponseMsg] = useState<string>(\"\");\n  const [marks, setMarks] = useState<number>(0);\n  const [selectedTab, setSelectedTab] = useState<viewTabs>(viewTabs.profile);\n\n  useEffect(() => {\n    if (\n      props.questionTypes.questionTypes === null ||\n      (props.questionTypes.questionTypes.length === 0 && loading)\n    ) {\n      props.loadQuestionTypes(setLoading);\n    } else if (loading) {\n      setLoading(false);\n    }\n  }, [loading, props]);\n\n  if (loading || props.questionTypes.questionTypes === null) {\n    return <Loading />;\n  }\n\n  const handleVerify = async () => {\n    if (!actionTaken) {\n      setFormError({\n        element: \"action\",\n        msg: \"Action is required!\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    if (\n      actionTaken === ClaimDecisionStatus.ACCEPTED &&\n      (marks <= 0 || marks > 100)\n    ) {\n      setFormError({\n        element: \"marks\",\n        msg: \"Invalid marks, marks must be between 1 and 10\",\n      });\n\n      return setLoadingRequest(false);\n    }\n\n    if (isEmptyOrSpaces(responseMsg)) {\n      setFormError({\n        element: \"comment\",\n        msg: \"Reason of rejection is required\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    let subClaim = props.thisClaim.claims.find(\n      (item) => item.level === props.thisClaim.claim_level\n    );\n\n    if (subClaim) {\n      setLoadingRequest(true);\n      const api_body: claimResponseBody = {\n        sub_claim_id: subClaim.id,\n        evaluation_comment: responseMsg,\n        evaluated_by: props.auth.user.user_id,\n        decision_taken_status: actionTaken,\n        evaluator_name: props.auth.user.fname + \" \" + props.auth.user.lname,\n        evaluator_email: props.auth.user.email,\n      };\n\n      try {\n        const res = await axios.put<CandidateClaimInterface>(\n          `${API.CLAIMING}/user/evaluate/${props.thisClaim._id}`,\n          api_body\n        );\n        if (res) {\n          console.log({ evaluate_claim_res: res });\n          props.evaluateClaim(res.data);\n          // REVALIDATED DOCUMENT IF IT IS APPROVED =========================\n          if (actionTaken === ClaimDecisionStatus.ACCEPTED) {\n            await handleMarksAddition();\n          }\n          props.PushPopupAlert({\n            title: `Claim responded successfully!`,\n            theme: PopupAlertTheme.success,\n          });\n          // setDocumentId(\"null\");\n          setResponseMsg(\"\");\n          setActionTaken(null);\n        }\n      } catch (error) {\n        console.error(error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      setLoadingRequest(false);\n    }\n  };\n\n  const handleMarksAddition = async () => {\n    try {\n      await axios.put(`${API.DO_EXAM}/answersheet/user/marks/update`, {\n        answer_sheet_id: props.thisClaim.claiming_on_id,\n        marks: marks,\n      });\n    } catch (error) {\n      console.error(error);\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  // const getAnswersByQuestion = (question_id: string): ClaimGetUserAnswers[] => {\n  //   return props.thisExamSheet.user_answers.filter(\n  //     (item) => item.question === question_id\n  //   );\n  // };\n\n  const claimCandidateAnswers = (): ExamAnswerSheetDone[] => {\n    let result: ExamAnswerSheetDone[] = [\n      {\n        exam_location: props.thisExamSheet.exam_location,\n        questions: props.thisExamSheet.questions,\n        user_answers: props.thisExamSheet.user_answers,\n        user: props.thisExamSheet.user,\n        period: props.thisExamSheet.period,\n        course: props.thisExamSheet.course,\n        exam_paper: props.thisExamSheet.exam_paper,\n        user_status: props.thisExamSheet.user_status,\n        used_duration: props.thisExamSheet.used_duration,\n        total_marks: props.thisExamSheet.total_marks,\n        number_of_question_answered:\n          props.thisExamSheet.number_of_question_answered,\n        // start_time: string,\n        // end_time: string,\n        exam_total_marks: props.thisExamSheet.exam_total_marks,\n        exam_start_time: props.thisExamSheet.exam_start_time,\n        exam_end_time: props.thisExamSheet.exam_end_time,\n        exam_date: props.thisExamSheet.exam_date,\n        status: props.thisExamSheet.status,\n        createdAt: props.thisExamSheet.createdAt,\n        updatedAt: props.thisExamSheet.updatedAt,\n        disability: false,\n        gender: \"\",\n        in_education: false,\n        position: \"\",\n        answer_sheet_id: props.thisExamSheet.answer_sheet_id,\n      },\n    ];\n    // props.thisExamSheet\n\n    return result;\n  };\n\n  return (\n    <section className=\"\">\n      {/* #################### VIEW TABS ################################## */}\n      <div className=\"flex flex-row items-center mx-4\">\n        {Object.values(viewTabs).map((item, i) => (\n          <div\n            key={i}\n            onClick={() => setSelectedTab(item)}\n            className={`animate__animated ${\n              selectedTab === item\n                ? \"bg-blue-100 border-blue-600 text-blue-600 animate__zoomIn\"\n                : \"bg-white border-white text-gray-600\"\n            } hover:bg-blue-100 px-4 py-2 cursor-pointer font-bold border-b-4 hover:border-blue-600 hover:text-blue-600 rounded-t mt-1 mr-1`}\n          >\n            {item}\n          </div>\n        ))}\n      </div>\n      {/* #################### END VIEW TABS ################################## */}\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          {/* DISPLAY POSITION ==================================================== */}\n          {selectedTab === viewTabs.exam && (\n            <section className=\"w-full my-1 animate__animated animate__fadeIn rounded\">\n              <div className=\"bg-white w-full rounded p-2 mb-2\">\n                <AnswersDetails\n                  showAnswers={true}\n                  exam_id={claimShowAnswer(\n                    props.thisExamSheet,\n                    props.thisExam.course_name\n                  )}\n                  allAnswers={claimCandidateAnswers()}\n                  user_id={props.thisExamSheet.user}\n                />\n              </div>\n            </section>\n          )}\n          {/* END DISPLAY POSITION ==================================================== */}\n          {/* -------------------------------------------------------------------------------- */}\n          {/* DISPLAY PROFILE ==================================================== */}\n          {selectedTab === viewTabs.profile && (\n            <section className=\"w-full my-2 animate__animated animate__fadeIn rounded\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center gap-2\">\n                  <span className={`italic text-gray-600`}>Names:</span>\n                  <span className=\"text-gray-800 font-bold text-xl\">\n                    {props.thisClaim.userDetails.user_info.fname +\n                      \" \" +\n                      props.thisClaim.userDetails.user_info.lname}\n                  </span>\n                </div>\n              </div>\n            </section>\n          )}\n          {/* END DISPLAY PROFILE ==================================================== */}\n          {selectedTab === viewTabs.profile && (\n            <div className=\"\">\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Email:</span>\n                <span className=\"text-gray-800 font-bold text-lg\">\n                  {props.thisClaim.userDetails.email}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Phone:</span>\n                <span className=\"text-gray-800 font-bold text-lg\">\n                  {props.thisClaim.userDetails.phone_number}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Gender:</span>\n                <span className=\"text-gray-800 font-bold text-lg\">\n                  {props.thisClaim.userDetails.user_info.sex === \"M\"\n                    ? \"Male\"\n                    : \"Female\"}\n                </span>\n              </div>\n            </div>\n          )}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVEL 1 DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              <div className=\"text-gray-700 italic font-bold\">\n                Claim Comment (level {index + 1})\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2 mt-1 border rounded px-2 py-1 bg-gray-50\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-600 text-xs\">\n                  {showDate(claim.createdAt)}\n                  {/* {showDate(claim.createdAt) +\n                    \" at \" +\n                    moment.unix(claim.date_created).format(\"MM/DD/YYYY\")} */}\n                </span>\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-700 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n            </section>\n          ))}\n        {/* END CLAIM LEVEL 1 DETAILS ==================================================== */}\n      </div>\n\n      {/* FOOTER INITIAL ========================================== */}\n      {!actionTaken && (\n        <section className=\"flex items-center justify-between bg-gray-50 rounded mt-3\">\n          {/* SHOWING STATUS ===================================== */}\n          <div className=\"mx-4 my-4\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n          </div>\n\n          {props.thisClaim.last_claim_status === ClaimStatus.PENDING && (\n            <div className=\"flex items-center gap-2 px-2\">\n              <button\n                className={`px-4 py-2 font-semibold text-red-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-red-700 hover:bg-red-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.REJECTED);\n                }}\n              >\n                <MdCancel className=\"w-5 h-5\" />\n                <span>Reject</span>\n              </button>\n              <button\n                className={`px-4 py-2 font-semibold text-blue-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-blue-700 hover:bg-blue-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.ACCEPTED);\n                }}\n              >\n                <FaRegCheckCircle className=\"w-5 h-5\" />\n                <span>Accept</span>\n              </button>\n            </div>\n          )}\n        </section>\n      )}\n      {/* END FOOTER INITIAL ========================================== */}\n\n      {/* ======================================================== */}\n      {/* FOOTER RESPONSE ========================================== */}\n      {actionTaken && (\n        <section className=\"my-5 overflow-x-auto\">\n          <div className=\"italic text-gray-700 text-base my-1 mx-2\">\n            Selected decision:{\" \"}\n            <span\n              className={`font-semibold text-lg ${\n                actionTaken === ClaimDecisionStatus.ACCEPTED\n                  ? \"text-blue-700\"\n                  : \"text-yellow-800\"\n              }`}\n            >\n              {actionTaken === ClaimDecisionStatus.ACCEPTED\n                ? \"Approved\"\n                : \"Rejected\"}\n            </span>\n          </div>\n          {/* right part */}\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full space-y-1\">\n              {actionTaken === ClaimDecisionStatus.ACCEPTED && (\n                <div className=\"flex items-center justify-end w-full gap-2\">\n                  <span className=\"font-semibold\">Addition marks</span>\n                  <div className=\"px-2\">\n                    <input\n                      placeholder={`Addition marks`}\n                      className={`border border-${\n                        formError && formError.element === \"marks\"\n                          ? \"red\"\n                          : \"gray\"\n                      }-400 rounded px-3 py-1 w-auto focus:outline-none`}\n                      value={marks}\n                      onChange={(e) => {\n                        setMarks(Number(e.target.value));\n                        setFormError(null);\n                      }}\n                      disabled={loadingRequest}\n                    />\n                    {formError && formError.element === \"marks\" && (\n                      <p className=\"text-red-800\">{formError.msg}</p>\n                    )}\n                  </div>\n                </div>\n              )}\n              <div className=\"w-full px-2\">\n                <textarea\n                  placeholder={`Reason of your decision...`}\n                  cols={50}\n                  rows={actionTaken === ClaimDecisionStatus.ACCEPTED ? 2 : 3}\n                  className={`border border-${\n                    formError && formError.element === \"comment\"\n                      ? \"red\"\n                      : \"gray\"\n                  }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                  style={{ resize: \"none\" }}\n                  value={responseMsg}\n                  onChange={(e) => {\n                    setResponseMsg(e.target.value);\n                    setFormError(null);\n                  }}\n                  disabled={loadingRequest}\n                ></textarea>\n                {formError && formError.element === \"comment\" && (\n                  <p className=\"text-red-800\">{formError.msg}</p>\n                )}\n              </div>\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  setResponseMsg(\"\");\n                  setActionTaken(null);\n                  setFormError(null);\n                }}\n                disabled={loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={loadingRequest}\n                onClick={() =>\n                  window.confirm(\n                    `Are you sure you want to ${\n                      actionTaken === ClaimDecisionStatus.ACCEPTED\n                        ? \"approve\"\n                        : \"rejected\"\n                    } this document?`\n                  ) && handleVerify()\n                }\n              >\n                {loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n          {/* end right part */}\n        </section>\n      )}\n      {/* END FOOTER RESPONSE ========================================== */}\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  questionTypes,\n}: StoreState): {\n  auth: Auth;\n  questionTypes: questionTypesStoreInterface;\n} => {\n  return {\n    auth,\n    questionTypes,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    loadQuestionTypes,\n    evaluateClaim,\n    PushPopupAlert,\n  })(AdminClaimExamView)\n);\n","import React, { useState } from \"react\";\nimport { CgImage } from \"react-icons/cg\";\nimport Loading from \"../../components/Loading/Loading\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport Table from \"../../components/Table/Table\";\nimport ViewPDF from \"../../components/ViewPDF/ViewPDF\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { UserDocumentsInterface } from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { fullScreen, getFileType, isFileImage } from \"../../utils/functions\";\nimport { PositionRequirementTableInterface } from \"./ViewPosition\";\n\ninterface RequirementProps {\n  requirements: PositionRequirementTableInterface[];\n  userDocs: UserDocumentsInterface[];\n}\n\nconst ViewDocRequirements: React.FC<RequirementProps> = (props) => {\n  const [viewDoc, setViewDoc] = useState<UserDocumentsInterface | null>(null);\n  const [loadingImage, setLoadingImage] = useState<boolean>(false);\n  const [isFullscreen, setSetFullscreen] = useState<boolean>(false);\n\n  const isDocumentExist = (\n    category_id: string,\n    sub_category_id: string,\n    field_id: string\n  ): UserDocumentsInterface | undefined => {\n    if (!isEmptyOrSpaces(category_id)) {\n      let userDocs: UserDocumentsInterface[] = props.userDocs.filter(\n        (item) => item.category_id === category_id\n      );\n\n      if (!isEmptyOrSpaces(sub_category_id)) {\n        userDocs = userDocs.filter(\n          (item) =>\n            item.validation_status === \"approved\" &&\n            item.category_id === category_id &&\n            item.sub_category_id === sub_category_id\n        );\n      }\n\n      if (!isEmptyOrSpaces(field_id)) {\n        return userDocs.find(\n          (item) =>\n            item.validation_status === \"approved\" &&\n            item.category_id === category_id &&\n            item.category_subcategory_data === field_id\n        );\n      }\n    }\n    return undefined;\n  };\n  const tableData = (): JSX.Element[] => {\n    let data: PositionRequirementTableInterface[] = props.requirements;\n    if (data.length === 0) {\n      return [\n        <tr key={153} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={3}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    return data.map((item, index) => (\n      <tr\n        key={index + item.field_id}\n        className={`border-b border-gray-200 hover:bg-gray-100 ${\n          !isDocumentExist(\n            item.category_id,\n            item.subcategory_id,\n            item.field_id\n          ) && \"text-yellow-800\"\n        }`}\n      >\n        <td className=\"p-3 text-left whitespace-nowrap\">{index + 1})</td>\n        <td className=\"p-3 text-left\">\n          <span>\n            {isEmptyOrSpaces(item.field_id)\n              ? \"Any \" + item.subcategory_title\n              : item.subcategory_title + \" in \" + item.field_title}\n          </span>\n        </td>\n        <td className={`p-3 text-left text-lg italic`}>\n          {isDocumentExist(item.category_id, item.subcategory_id, item.field_id)\n            ? \"Found\"\n            : \"Not found\"}\n        </td>\n        <td className={`p-3 text-right text-lg italic`}>\n          {isDocumentExist(\n            item.category_id,\n            item.subcategory_id,\n            item.field_id\n          ) && (\n            <button\n              className=\"bg-gray-200 hover:bg-gray-300 rounded font-medium px-2 py-1 focus:outline-none\"\n              onClick={() => {\n                setViewDoc(\n                  isDocumentExist(\n                    item.category_id,\n                    item.subcategory_id,\n                    item.field_id\n                  )!\n                );\n                setLoadingImage(true);\n              }}\n            >\n              View Doc\n            </button>\n          )}\n        </td>\n      </tr>\n    ));\n  };\n  const handleFullScreen = () => {\n    if (isFullscreen) {\n      fullScreen(\"doc-img\", \"CLOSE\");\n      setSetFullscreen(false);\n    } else {\n      setSetFullscreen(true);\n      fullScreen(\"doc-img\", \"OPEN\");\n    }\n  };\n\n  return (\n    <div>\n      <Table\n        columns={[\n          { columnTitle: \"#\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Qualification\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Status\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n        ]}\n        rows={tableData}\n        pagination={false}\n        search={false}\n        thColor=\"gray\"\n      />\n\n      {viewDoc && (\n        <Modal\n          backDrop={true}\n          theme={Themes.default}\n          close={() => {\n            setViewDoc(null);\n            setLoadingImage(false);\n          }}\n          backDropClose={false}\n          widthSizeClass={ModalSize.extraLarge}\n          displayClose={true}\n          padding={{\n            title: true,\n            body: false,\n            footer: false,\n          }}\n          title=\"Doc view\"\n        >\n          {loadingImage && <Loading />}\n          {viewDoc.files && viewDoc.files.length > 0 ? (\n            isFileImage(getFileType(viewDoc.files)) ? (\n              <div className=\"relative\">\n                <img\n                  src={API.AUTH_FILES + viewDoc.files}\n                  alt=\"\"\n                  className={`w-full md:w-auto h-auto md:max-h-screen mx-auto ${\n                    loadingImage && \"hidden\"\n                  }`}\n                  id=\"doc-img\"\n                  onLoad={() => setLoadingImage(false)}\n                  onDoubleClick={() => handleFullScreen()}\n                />\n              </div>\n            ) : (\n              <ViewPDF\n                file_url={API.AUTH_FILES + viewDoc.files}\n                class_name={`w-full h-screen md:max-h-screen mx-auto ${\n                  loadingImage && \"hidden\"\n                }`}\n                frame_title={\"application PDF file view\"}\n                setLoadingFile={setLoadingImage}\n              />\n            )\n          ) : (\n            <div className=\"text-center text-red-400 py-8 animate__animated animate__fadeIn\">\n              <CgImage className=\"mx-auto w-40 h-40\" />\n              <span className=\"font-semibold text-4xl\">No Files Provided</span>\n            </div>\n          )}\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default React.memo(ViewDocRequirements);\n","import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdCancel, MdInfoOutline, MdTurnedIn } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert, reAssessApplication } from \"../../../actions\";\nimport { evaluateClaim } from \"../../../actions/claiming\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  allClaimApplicationInterface,\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  claimReasonInterface,\n  ClaimStatus,\n  ClaimTypesInterfaceAPI,\n  PositionAPI,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { DATE, showDate } from \"../../../utils/functions\";\nimport { PositionRequirementTableInterface } from \"../../Positions/ViewPosition\";\nimport ViewDocRequirements from \"../../Positions/ViewDocRequirements\";\nimport { isClaimEvaluated } from \"../ClaimDocView\";\nimport { claimResponseBody } from \"./AdminClaimDocView\";\n\nexport const FC_AdminApplicationPositionDistinctCategory = (\n  thisPosition: PositionAPI,\n  documentCategories: DocumentReducerInterface\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n  let requirements = thisPosition.requirements;\n  // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n  for (let req in requirements) {\n    let thisRequirements = requirements[req];\n    // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisCategory = documentCategories.documentCategory\n      ? documentCategories.documentCategory.find(\n          (item) =>\n            item.user_detail_category_id ===\n            thisRequirements.category.user_detail_category_id\n        ) && {\n          title: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.title,\n          user_detail_category_id: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.user_detail_category_id,\n        }\n      : {\n          title: \"\",\n          user_detail_category_id:\n            thisRequirements.category.user_detail_category_id,\n        };\n    // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisSubCategory = documentCategories.documentSubCategory\n      ? documentCategories.documentSubCategory.find(\n          (item) =>\n            item.user_detail_subcategory_id ===\n            thisRequirements.subcategory.user_detail_subcategory_id\n        )\n        ? {\n            title: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.title,\n            user_detail_subcategory_id:\n              documentCategories.documentSubCategory.find(\n                (item) =>\n                  item.user_detail_subcategory_id ===\n                  thisRequirements.subcategory.user_detail_subcategory_id\n              )!.user_detail_subcategory_id,\n            category_id: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.category_id,\n          }\n        : {\n            title: \"\",\n            user_detail_subcategory_id:\n              thisRequirements.subcategory.user_detail_subcategory_id,\n            category_id: \"\",\n          }\n      : {\n          title: \"\",\n          user_detail_subcategory_id:\n            thisRequirements.subcategory.user_detail_subcategory_id,\n          category_id: \"\",\n        };\n    // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n    if (thisCategory) {\n      for (let field in thisRequirements.position_requirement) {\n        // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n        let thisField = documentCategories.documentFields\n          ? documentCategories.documentFields.find(\n              (item) =>\n                item._id === thisRequirements.position_requirement[field]._id\n            )\n            ? {\n                title: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!.title,\n                _id: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n            : {\n                title: \"\",\n                _id: thisRequirements.position_requirement[field]._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n          : {\n              title: \"\",\n              _id: thisRequirements.position_requirement[field]._id,\n              required: thisRequirements.position_requirement[field].required,\n            };\n        // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n        PositionsTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: thisField.title,\n          field_id: thisField._id,\n          required: thisField.required,\n        });\n      }\n\n      // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n      ) {\n        DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n        DistinctCategoriesTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: \"\",\n          subcategory_title: \"\",\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n\n      // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctSubCategoriesIds.includes(\n          thisSubCategory.user_detail_subcategory_id\n        )\n      ) {\n        DistinctSubCategoriesIds.push(\n          thisSubCategory.user_detail_subcategory_id\n        );\n        DistinctSubCategoriesTemp.push({\n          category_id: thisSubCategory.category_id,\n          category_title: \"\",\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n    }\n  }\n  // DistinctCategoriesIds.;\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\ntype AdminClaimAppViewProps = {\n  thisApplication: allClaimApplicationInterface;\n  thisPosition: PositionAPI;\n  documentCategories: DocumentReducerInterface;\n  thisClaim: CandidateClaimInterface;\n  claimTypes: ClaimTypesInterfaceAPI[];\n  systemPositions: PositionAPI[];\n  claimReasons: claimReasonInterface[] | null;\n\n  // REDUX ==================\n  auth: Auth;\n  reAssessApplication: Function;\n  evaluateClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst AdminClaimAppView: React.FC<AdminClaimAppViewProps> = (props) => {\n  const [viewPosition, setViewPosition] = useState<boolean>(true);\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n  const [actionTaken, setActionTaken] = useState<ClaimDecisionStatus | null>(\n    null\n  );\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [responseMsg, setResponseMsg] = useState<string>(\"\");\n\n  const handleVerify = async () => {\n    if (!actionTaken) {\n      setFormError({\n        element: \"action\",\n        msg: \"Action is required!\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    if (isEmptyOrSpaces(responseMsg)) {\n      setFormError({\n        element: \"comment\",\n        msg: \"Reason of rejection is required\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    let subClaim = props.thisClaim.claims.find(\n      (item) => item.level === props.thisClaim.claim_level\n    );\n\n    if (subClaim) {\n      setLoadingRequest(true);\n      const api_body: claimResponseBody = {\n        sub_claim_id: subClaim.id,\n        evaluation_comment: responseMsg,\n        evaluated_by: props.auth.user.user_id,\n        decision_taken_status: actionTaken,\n        evaluator_name: props.auth.user.fname + \" \" + props.auth.user.lname,\n        evaluator_email: props.auth.user.email,\n      };\n\n      try {\n        const res = await axios.put<CandidateClaimInterface>(\n          `${API.CLAIMING}/user/evaluate/${props.thisClaim._id}`,\n          api_body\n        );\n        if (res) {\n          console.log(\"====================================\");\n          console.log({ evaluate_claim_res: res });\n          console.log(\"====================================\");\n          props.evaluateClaim(res.data);\n          // REVALIDATED DOCUMENT IF IT IS APPROVED =========================\n          if (actionTaken === ClaimDecisionStatus.ACCEPTED) {\n            await overrideDecision();\n          }\n          props.PushPopupAlert({\n            title: `Claim responded successfully!`,\n            theme: PopupAlertTheme.success,\n          });\n          // setDocumentId(\"null\");\n          setResponseMsg(\"\");\n          setActionTaken(null);\n        }\n      } catch (error) {\n        console.error(error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      setLoadingRequest(false);\n    }\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  const overrideDecision = async () => {\n    try {\n      const res = await axios.patch(\n        `${API.APPLICATION}/tolerateappl/${props.thisClaim.claiming_on_id}`,\n        {\n          user_id: props.auth.user.user_id,\n          email: props.thisClaim.userDetails.email,\n          phone_number: props.thisClaim.userDetails.phone_number,\n          comment: responseMsg,\n          application_status: ApplicationStates.Shortlisted,\n        }\n      );\n\n      res.data &&\n        props.reAssessApplication({\n          application_id: props.thisClaim.claiming_on_id,\n          application_status: ApplicationStates.Shortlisted,\n        });\n    } catch (error) {\n      console.error({ code_error: error });\n      PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      // errorToText(error);\n    }\n    setLoadingRequest(false);\n  };\n\n  const getPositionById = (position_id: string): PositionAPI | undefined => {\n    let result = props.systemPositions.find(\n      (item) => item.position_id === position_id\n    );\n\n    return result;\n  };\n\n  return (\n    <section>\n      <div className=\"w-full py-1 divide-y-2 space-y-4\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          {/* DISPLAY PROFILE ==================================================== */}\n          <section className=\"w-full mb-4 -mt-2 pb-3 px-4 bg-white\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center gap-2 px-12\">\n                <span className={`italic text-blue-600`}>Applicant:</span>\n                <span className=\"text-blue-800 font-bold text-xl\">\n                  {props.thisClaim.userDetails.user_info.fname +\n                    \" \" +\n                    props.thisClaim.userDetails.user_info.lname}\n                </span>\n              </div>\n              {false && (\n                <button\n                  type=\"button\"\n                  className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                  onClick={() => setViewPosition(!viewPosition)}\n                >\n                  {viewPosition ? \"Hide\" : \"More\"}\n                </button>\n              )}\n            </div>\n          </section>\n          {/* DISPLAY POSITION ==================================================== */}\n          <section className=\"w-full mb-4 bg-white px-4 py-2 rounded\">\n            <div className=\"bg-white w-full\">\n              <div className=\"text-gray-800 text-2xl font-bold\">\n                Position Details\n              </div>\n              <div className=\"flex items-center\">\n                <div className=\"flex items-center gap-2\">\n                  <span className={`italic text-gray-600`}>Name:</span>\n                  <span className=\"text-gray-800 font-bold text-2xl\">\n                    {getPositionById(props.thisApplication.position)\n                      ? getPositionById(props.thisApplication.position)!\n                          .position_title\n                      : \"Position not found\"}\n                  </span>\n                </div>\n              </div>\n              <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                <span className={`italic`}>Desc:</span>\n                <span className=\"font-semibold\">\n                  {getPositionById(props.thisApplication.position)\n                    ? getPositionById(props.thisApplication.position)!\n                        .description\n                    : \"\"}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                <span className={`italic`}>School level:</span>\n                <span className=\"font-semibold\">\n                  {getPositionById(props.thisApplication.position)\n                    ? getPositionById(props.thisApplication.position)!\n                        .school_level_id.school_level_name\n                    : \"\"}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                <span className={`italic`}>Institute:</span>\n                <span className=\"font-semibold\">\n                  {getPositionById(props.thisApplication.position)\n                    ? getPositionById(props.thisApplication.position)!\n                        .education_institute_id.education_category_title\n                    : \"\"}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                <span className={`italic`}>Exams:</span>\n                <span className=\"flex items-center gap-2\">\n                  {getPositionById(props.thisApplication.position) ? (\n                    getPositionById(\n                      props.thisApplication.position\n                    )!.courses.map((item, index) => (\n                      <div\n                        key={index + item.course_id}\n                        className=\"flex items-center gap-1\"\n                      >\n                        <span className=\"font-semibold\">\n                          {item.course_name}\n                        </span>\n                        <span className=\"text-gray-600\">\n                          ({item.course_code})\n                        </span>\n                        {index !==\n                          getPositionById(props.thisApplication.position)!\n                            .courses.length -\n                            1 && \",\"}\n                      </div>\n                    ))\n                  ) : (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"No courses found\"}\n                    />\n                  )}\n                </span>\n              </div>\n\n              <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                Position Requirements\n              </div>\n              {getPositionById(props.thisApplication.position) ? (\n                getPositionById(props.thisApplication.position)!.requirements\n                  .length > 0 ? (\n                  FC_AdminApplicationPositionDistinctCategory(\n                    getPositionById(props.thisApplication.position)!,\n                    props.documentCategories\n                  ).DistinctCategoriesTemp.map((item, index) => (\n                    <div\n                      className=\"bg-gray-100props.thisApplication.position rounded p-2\"\n                      key={index + item.category_id}\n                    >\n                      <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                        <MdTurnedIn />\n                        <span>{item.category_title}</span>\n                      </div>\n                      <div className=\"border bg-white mt-1\">\n                        <ViewDocRequirements\n                          requirements={FC_AdminApplicationPositionDistinctCategory(\n                            getPositionById(props.thisApplication.position)!,\n                            props.documentCategories\n                          ).PositionsTemp.filter(\n                            (req) => req.category_id === item.category_id\n                          )}\n                          userDocs={props.thisClaim.userDetails.details}\n                        />\n                      </div>\n                    </div>\n                  ))\n                ) : (\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"No requirements\"}\n                  ></NoResult>\n                )\n              ) : (\n                <NoResult\n                  theme={NoResultThemes.Dark}\n                  value={\"No requirements\"}\n                ></NoResult>\n              )}\n            </div>\n          </section>\n          {/* END DISPLAY POSITION ==================================================== */}\n          {/* -------------------------------------------------------------------------------- */}\n          {/* END DISPLAY PROFILE ==================================================== */}\n          {/* {selectedTab === viewTabs.profile && (\n            <div className=\"flex items-center\">\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Position name:</span>\n                <span className=\"text-gray-800 font-bold text-2xl\">\n                  {getPositionById(props.thisApplication.position)\n                    ? getPositionById(props.thisApplication.position)!\n                        .position_title\n                    : \"Position not found\"}\n                </span>\n              </div>\n            </div>\n          )} */}\n          <section className=\"px-4 py-2 bg-white rounded\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Status:</span>\n              <span\n                className={`font-bold ${\n                  props.thisClaim.previous\n                    ? props.thisClaim.previous.status ===\n                      ApplicationStates.Rejected\n                    : props.thisApplication.application_status ===\n                      ApplicationStates.Rejected\n                    ? \"text-yellow-900\"\n                    : \"text-blue-600\"\n                } rounded px-3 py-1`}\n              >\n                {props.thisClaim.previous\n                  ? capitalizeFirstLetter(props.thisClaim.previous.status)\n                  : capitalizeFirstLetter(\n                      props.thisApplication.application_status\n                    )}\n              </span>\n            </div>\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Evaluated by:</span>\n              <span className=\"font-semibold\">\n                {props.thisClaim.previous.evaluater.name}\n              </span>\n            </div>\n            {false && (\n              <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                <span className={`italic`}>Session:</span>\n                <span className=\"font-bold text-gray-900 py-1\">\n                  {props.thisApplication.application_session}\n                </span>\n              </div>\n            )}\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Date:</span>\n              <span className=\"font-bold text-gray-900 py-1\">\n                {DATE(props.thisApplication.createdAt)}\n              </span>\n            </div>\n            <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Reason:</span>\n              <span\n                className=\"font-normal\"\n                dangerouslySetInnerHTML={{\n                  __html: props.thisClaim.previous\n                    ? props.thisClaim.previous.reason\n                    : props.thisApplication.override_by.comment,\n                }}\n              ></span>\n            </div>\n          </section>\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVEL 1 DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section\n              className=\"flex flex-col px-4 pt-2 pb-3 rounded bg-white\"\n              key={index + claim.id}\n            >\n              <div className=\"text-gray-700 italic font-bold\">\n                Claim Comment (level {index + 1})\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2 mt-1 border rounded px-4 py-1 bg-gray-50\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-600 text-xs\">\n                  {showDate(claim.createdAt)}\n                  {/* {showDate(claim.createdAt) +\n                    \" at \" +\n                    moment.unix(claim.date_created).format(\"MM/DD/YYYY\")} */}\n                </span>\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-700 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span\n                        className=\"font-normal\"\n                        dangerouslySetInnerHTML={{\n                          __html: claim.evaluation_comment,\n                        }}\n                      ></span>\n                    </div>\n                  </div>\n                </section>\n              )}\n            </section>\n          ))}\n        {/* END CLAIM LEVEL 1 DETAILS ==================================================== */}\n      </div>\n\n      {/* FOOTER INITIAL ========================================== */}\n      {!actionTaken && (\n        <section className=\"flex items-center justify-between bg-gray-50 rounded mt-3\">\n          {/* SHOWING STATUS ===================================== */}\n          <div className=\"mx-4 my-4\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n          </div>\n\n          {props.thisClaim.last_claim_status === ClaimStatus.PENDING && (\n            <div className=\"flex items-center gap-2 px-2\">\n              <button\n                className={`px-4 py-2 font-semibold text-red-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-red-700 hover:bg-red-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.REJECTED);\n                }}\n              >\n                <MdCancel className=\"w-5 h-5\" />\n                <span>Reject</span>\n              </button>\n              <button\n                className={`px-4 py-2 font-semibold text-blue-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-blue-700 hover:bg-blue-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.ACCEPTED);\n                }}\n              >\n                <FaRegCheckCircle className=\"w-5 h-5\" />\n                <span>Accept</span>\n              </button>\n            </div>\n          )}\n        </section>\n      )}\n      {/* END FOOTER INITIAL ========================================== */}\n\n      {/* ======================================================== */}\n      {/* FOOTER RESPONSE ========================================== */}\n      {actionTaken && (\n        <section className=\"my-5 overflow-x-auto\">\n          <div className=\"italic text-gray-700 text-base my-1 mx-2\">\n            Selected decision:{\" \"}\n            <span\n              className={`font-semibold text-lg ${\n                actionTaken === ClaimDecisionStatus.ACCEPTED\n                  ? \"text-blue-700\"\n                  : \"text-yellow-800\"\n              }`}\n            >\n              {actionTaken === ClaimDecisionStatus.ACCEPTED\n                ? \"Approved\"\n                : \"Rejected\"}\n            </span>\n          </div>\n          {/* right part */}\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your decision...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  formError && formError.element === \"comment\" ? \"red\" : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={responseMsg}\n                onChange={(e) => {\n                  setResponseMsg(e.target.value);\n                  setFormError(null);\n                }}\n                disabled={loadingRequest}\n              ></textarea>\n              {formError && formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  setResponseMsg(\"\");\n                  setActionTaken(null);\n                  setFormError(null);\n                }}\n                disabled={loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={loadingRequest}\n                onClick={() =>\n                  window.confirm(\n                    `Are you sure you want to ${\n                      actionTaken === ClaimDecisionStatus.ACCEPTED\n                        ? \"approve\"\n                        : \"rejected\"\n                    } this document?`\n                  ) && handleVerify()\n                }\n              >\n                {loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n          {/* end right part */}\n        </section>\n      )}\n      {/* END FOOTER RESPONSE ========================================== */}\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n}: StoreState): {\n  auth: Auth;\n} => {\n  return {\n    auth: auth,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    evaluateClaim,\n    reAssessApplication,\n    PushPopupAlert,\n  })(AdminClaimAppView)\n);\n","import axios from \"axios\";\nimport React from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdCancel, MdInfoOutline } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { adminDisplayClaimTitle } from \".\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport { evaluateClaim } from \"../../../actions/claiming\";\nimport { verifyDocument } from \"../../../actions/document\";\nimport { VerifyDocumentInterface } from \"../../../actions/users\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  claimReasonInterface,\n  ClaimStatus,\n  ClaimTypesInterfaceAPI,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport {\n  DocValidationStatusInterface,\n  UserDocumentsInterface,\n} from \"../../../shared/interfaces\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { showDate } from \"../../../utils/functions\";\nimport { isClaimEvaluated } from \"../ClaimDocView\";\n\nexport type claimResponseBody = {\n  sub_claim_id: string;\n  evaluation_comment: string;\n  evaluated_by: string;\n  evaluator_name: string;\n  evaluator_email: string;\n  decision_taken_status: ClaimDecisionStatus;\n};\n\ntype AdminClaimDocViewProps = {\n  thisDoc: UserDocumentsInterface;\n  documentCategories: DocumentReducerInterface;\n  thisClaim: CandidateClaimInterface;\n  claimReasons: claimReasonInterface[] | null;\n  candidateId: string;\n  claimTypes: ClaimTypesInterfaceAPI[];\n  viewImage: boolean;\n  setViewImage: (value: boolean) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  actionTaken: ClaimDecisionStatus | null;\n  setActionTaken: (value: ClaimDecisionStatus | null) => void;\n  responseMsg: string;\n  setResponseMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX ==================\n  auth: Auth;\n  verifyDocument: Function;\n  evaluateClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst AdminClaimDocView: React.FC<AdminClaimDocViewProps> = (props) => {\n  const handleVerify = async () => {\n    if (!props.actionTaken) {\n      props.setFormError({\n        element: \"action\",\n        msg: \"Action is required!\",\n      });\n      return props.setLoadingRequest(false);\n    }\n\n    if (isEmptyOrSpaces(props.responseMsg)) {\n      props.setFormError({\n        element: \"comment\",\n        msg: \"Reason of rejection is required\",\n      });\n      return props.setLoadingRequest(false);\n    }\n\n    let subClaim = props.thisClaim.claims.find(\n      (item) => item.level === props.thisClaim.claim_level\n    );\n\n    if (subClaim) {\n      props.setLoadingRequest(true);\n      const api_body: claimResponseBody = {\n        sub_claim_id: subClaim.id,\n        evaluation_comment: props.responseMsg,\n        evaluated_by: props.auth.user.user_id,\n        decision_taken_status: props.actionTaken,\n        evaluator_name: props.auth.user.fname + \" \" + props.auth.user.lname,\n        evaluator_email: props.auth.user.email,\n      };\n\n      try {\n        const res = await axios.put<CandidateClaimInterface>(\n          `${API.CLAIMING}/user/evaluate/${props.thisClaim._id}`,\n          api_body\n        );\n        if (res) {\n          console.log({ evaluate_claim_res: res });\n          props.evaluateClaim(res.data);\n          // REVALIDATED DOCUMENT IF IT IS APPROVED =========================\n          if (props.actionTaken === ClaimDecisionStatus.ACCEPTED) {\n            await FC_DocValidation();\n          }\n          props.PushPopupAlert({\n            title: `Claim responded successfully!`,\n            theme: PopupAlertTheme.success,\n          });\n          // setDocumentId(\"null\");\n          props.setResponseMsg(\"\");\n          props.setActionTaken(null);\n        }\n      } catch (error) {\n        console.error(error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      props.setLoadingRequest(false);\n    }\n  };\n\n  const FC_DocValidation = async () => {\n    const api_body: VerifyDocumentInterface = {\n      user_id: props.thisClaim.user,\n      doc_id: props.thisClaim.claiming_on_id,\n      validation_status:\n        props.actionTaken === ClaimDecisionStatus.ACCEPTED\n          ? DocValidationStatusInterface.APPROVED\n          : DocValidationStatusInterface.REJECTED,\n      validated_by: {\n        user_id: props.auth.user.user_id,\n        comment: props.responseMsg,\n        validation_status:\n          props.actionTaken === ClaimDecisionStatus.ACCEPTED\n            ? DocValidationStatusInterface.APPROVED\n            : DocValidationStatusInterface.REJECTED,\n      },\n      in_education: false,\n      disability: false,\n    };\n    const api_redux: VerifyDocumentInterface = {\n      user_id: props.thisClaim.user,\n      doc_id: props.thisClaim.claiming_on_id,\n      validation_status:\n        props.actionTaken === ClaimDecisionStatus.ACCEPTED\n          ? DocValidationStatusInterface.APPROVED\n          : DocValidationStatusInterface.REJECTED,\n      validated_by: {\n        user_id: props.auth.user.user_id,\n        comment: props.responseMsg,\n        validation_status:\n          props.actionTaken === ClaimDecisionStatus.ACCEPTED\n            ? DocValidationStatusInterface.APPROVED\n            : DocValidationStatusInterface.REJECTED,\n        date: \"\",\n      },\n      in_education: false,\n      disability: false,\n    };\n\n    try {\n      const res = await axios.post<VerifyDocumentInterface>(\n        `${API.AUTH}/validateuserdoc`,\n        api_body\n      );\n      if (res) {\n        props.verifyDocument(api_redux);\n        await FC_shortListing(props.thisClaim.user);\n        // setDocumentId(\"null\");\n      }\n    } catch (error) {\n      console.error(error);\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  const FC_shortListing = async (candidate_id: string) => {\n    try {\n      const res = await axios.patch(\n        `${API.APPLICATION}/doccheckshortlist/${candidate_id}`\n      );\n      console.log({ res });\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2\">\n              <span className={`italic text-gray-600`}>Names:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.thisClaim.userDetails.user_info.fname +\n                  \" \" +\n                  props.thisClaim.userDetails.user_info.lname}\n              </span>\n            </div>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewImage(!props.viewImage)}\n            >\n              {props.viewImage ? \"Hide\" : \"View\"}\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <span className={`italic text-gray-600`}>Title:</span>\n            <span className=\"text-gray-800 font-bold text-2xl\">\n              {/* {ClaimGetDocTitle(props.documentCategories, props.thisDoc).main} */}\n              {props.thisClaim.userDetails.details.filter(\n                (item) => item.validation_status !== \"waiting\"\n              ).length > 0\n                ? adminDisplayClaimTitle(\n                    props.documentCategories,\n                    props.thisClaim.userDetails.details.filter(\n                      (item) => item.validation_status !== \"waiting\"\n                    ),\n                    props.thisClaim\n                  )\n                : \"-\"}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span className=\"font-bold text-yellow-900 rounded px-3 py-1\">\n              {props.thisClaim.previous\n                ? capitalizeFirstLetter(props.thisClaim.previous.status)\n                : capitalizeFirstLetter(props.thisDoc.validation_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {props.thisClaim.previous.evaluater.name}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisClaim.previous\n                ? props.thisClaim.previous.reason\n                : props.thisDoc.validated_by.commet}\n            </span>\n          </div>\n\n          {/* DISPLAY IMAGE ==================================================== */}\n          {props.viewImage && (\n            <div className=\"w-full my-1 animate__animated animate__fadeIn\">\n              <img\n                src={`${API.AUTH_FILES}/${props.thisDoc.files}`}\n                alt=\"doc file\"\n                className={`w-full animate__animated animate__fadeIn`}\n              />\n            </div>\n          )}\n          {/* END DISPLAY IMAGE ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVEL 1 DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              <div className=\"text-gray-700 italic font-bold\">\n                Claim Comment (level {index + 1})\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2 mt-1 border rounded px-4 py-1 bg-gray-50\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt)}\n                </span>\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-700 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n            </section>\n          ))}\n        {/* END CLAIM LEVEL 1 DETAILS ==================================================== */}\n      </div>\n\n      {/* FOOTER INITIAL ========================================== */}\n      {!props.actionTaken && (\n        <section className=\"flex items-center justify-between bg-gray-50 rounded mt-3\">\n          {/* SHOWING STATUS ===================================== */}\n          <div className=\"mx-4\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n          </div>\n\n          {props.thisClaim.last_claim_status === ClaimStatus.PENDING && (\n            <div className=\"flex items-center gap-2 px-2\">\n              <button\n                className={`px-4 py-2 font-semibold text-red-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-red-700 hover:bg-red-800`}\n                onClick={() => {\n                  props.setActionTaken(ClaimDecisionStatus.REJECTED);\n                }}\n              >\n                <MdCancel className=\"w-5 h-5\" />\n                <span>Reject</span>\n              </button>\n              <button\n                className={`px-4 py-2 font-semibold text-blue-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-blue-700 hover:bg-blue-800`}\n                onClick={() => {\n                  props.setActionTaken(ClaimDecisionStatus.ACCEPTED);\n                }}\n              >\n                <FaRegCheckCircle className=\"w-5 h-5\" />\n                <span>Accept</span>\n              </button>\n            </div>\n          )}\n        </section>\n      )}\n      {/* END FOOTER INITIAL ========================================== */}\n\n      {/* ======================================================== */}\n      {/* FOOTER RESPONSE ========================================== */}\n      {props.actionTaken && (\n        <section className=\"my-5 overflow-x-auto\">\n          <div className=\"italic text-gray-700 text-base my-1 mx-2\">\n            Selected decision:{\" \"}\n            <span\n              className={`font-semibold text-lg ${\n                props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                  ? \"text-blue-700\"\n                  : \"text-yellow-800\"\n              }`}\n            >\n              {props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                ? \"Approved\"\n                : \"Rejected\"}\n            </span>\n          </div>\n          {/* right part */}\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your decision...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.responseMsg}\n                onChange={(e) => {\n                  props.setResponseMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setResponseMsg(\"\");\n                  props.setActionTaken(null);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() =>\n                  window.confirm(\n                    `Are you sure you want to ${\n                      props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                        ? \"approve\"\n                        : \"rejected\"\n                    } this document?`\n                  ) && handleVerify()\n                }\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n          {/* end right part */}\n        </section>\n      )}\n      {/* END FOOTER RESPONSE ========================================== */}\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n}: StoreState): {\n  auth: Auth;\n} => {\n  return {\n    auth: auth,\n  };\n};\n\nexport default React.memo(connect(mapStateToProps, {\n  evaluateClaim,\n  verifyDocument,\n  PushPopupAlert,\n})(AdminClaimDocView));\n","import React, { Component } from \"react\";\nimport { MdArrowBack, MdInfoOutline } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Auth, loadCourses, PushPopupAlert } from \"../../../actions\";\nimport {\n  getAllClaims,\n  getAllApplications,\n  getClaimReasons,\n  getAllAnswers,\n} from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport { getPositions } from \"../../../actions/settings\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport TableLoading from \"../../../components/Loading/TableLoading\";\nimport { SideNavigation } from \"../../../components/Navigation/SideNavigation\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  SessionPlanInterface,\n  PositionAPI,\n  allClaimApplicationInterface,\n  CandidateClaimInterface,\n  PlansTypeKeys,\n  ClaimDecisionStatus,\n  ClaimTypesInterface,\n  course,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { UserDocumentsInterface } from \"../../../shared/interfaces\";\nimport { DATE } from \"../../../utils/functions\";\nimport search from \"../../../utils/search\";\nimport { getClaimById, whichClaimStatus, whichClaimType } from \"../Candidate\";\nimport { getCourseById, getCourseIdBySheetId } from \"../Candidate/FormExamList\";\nimport ClaimHeaderTitle from \"../ClaimHeaderTitle\";\nimport AdminClaimAppView from \"./AdminClaimAppView\";\nimport AdminClaimDocView from \"./AdminClaimDocView\";\nimport AdminClaimExamView from \"./AdminClaimExamView\";\nimport AdminFilterByType, {\n  filterClaimsByClaimType,\n} from \"./AdminFilterByType\";\n\n// export const getUserDocuments = (\n//   userList: UserInterface[],\n//   user_id: String\n// ): { user: UserInterface; document: UserDocumentsInterface[] } | null => {\n//   const thisUser = userList.find((item) => item.user_id === user_id);\n//   if (thisUser) {\n//     const thisDoc = thisUser.details.filter(\n//       (item) => item.validation_status !== \"waiting\"\n//     );\n//     return { user: thisUser, document: thisDoc };\n//   }\n//   return null;\n// };\n\nexport const adminDisplayClaimTitle = (\n  documentCategories: DocumentReducerInterface,\n  candidateDocuments: UserDocumentsInterface[],\n  thisClaim: CandidateClaimInterface\n): string => {\n  let result: string = \"\";\n\n  // CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n  if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n    let thisDoc = candidateDocuments.find(\n      (item) => item.doc_id === thisClaim.claiming_on_id\n    );\n    result = thisDoc\n      ? AdminClaimGetDocTitle(documentCategories, thisDoc).main\n      : \"Document not found\";\n  }\n  // END CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n\n  return result;\n};\n\nexport const AdminClaimGetDocTitle = (\n  documentCategories: DocumentReducerInterface,\n  doc: UserDocumentsInterface\n): { category: string; sub_category: string; field: string; main: string } => {\n  let DocCategory: string = \"\",\n    DocSubCategory: string = \"\",\n    DocField: string = \"\",\n    DocTitle: string = \"\";\n  if (\n    doc.sub_category_id &&\n    doc.sub_category_id.length > 0 &&\n    documentCategories.documentSubCategory\n  ) {\n    DocTitle = documentCategories.documentSubCategory.filter(\n      (c) => c.user_detail_subcategory_id === doc.sub_category_id\n    )[0].title;\n    DocSubCategory = DocTitle;\n  } else if (\n    doc.category_id.length > 0 &&\n    documentCategories.documentCategory\n  ) {\n    DocTitle = documentCategories.documentCategory.filter(\n      (c) => c.user_detail_category_id === doc.category_id\n    )[0].title;\n    DocCategory = DocTitle;\n  }\n  if (\n    doc.category_subcategory_data.length > 0 &&\n    documentCategories.documentFields\n  ) {\n    DocField = documentCategories.documentFields.filter(\n      (c) => c._id === doc.category_subcategory_data\n    )[0].title;\n    DocTitle += \" in \" + DocField;\n  }\n\n  return {\n    category: DocCategory,\n    sub_category: DocSubCategory,\n    field: DocField,\n    main: DocTitle,\n  };\n};\n\nexport const getApplicationById = (\n  allApplications: allClaimApplicationInterface[] | null,\n  systemPositions: PositionAPI[] | null,\n  application_id: String\n): {\n  application: allClaimApplicationInterface;\n  position: PositionAPI;\n} | null => {\n  if (allApplications) {\n    let thisApplication = allApplications.find(\n      (item) => item._id === application_id\n    );\n    if (thisApplication && systemPositions) {\n      let thisPosition = systemPositions.find(\n        (item) => item.position_id === thisApplication!.position\n      );\n      if (thisPosition) {\n        return { application: thisApplication, position: thisPosition };\n      }\n    }\n  }\n  return null;\n};\n\ntype AppProps = {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  systemPositions: PositionAPI[] | null;\n  courses: course[] | null;\n  loadCourses: Function;\n  getPositions: Function;\n  getClaimReasons: Function;\n  getAllApplications: Function;\n  getAllClaims: Function;\n  getAllAnswers: Function;\n  GetAllSessionPlans: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  verifyAllDocument: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype AppState = {\n  loading: boolean;\n  loadingData: boolean;\n  thisPeriod: SessionPlanInterface | null;\n  viewClaim: boolean;\n  periodChanged: boolean;\n  claimId: string | null;\n  claimType: string | null;\n  candidateId: string | null;\n  searchClaim: string;\n\n  // FOR FORM ================\n  viewImage: boolean;\n  loadingRequest: boolean;\n  actionTaken: ClaimDecisionStatus | null;\n  responseMsg: string;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n};\n\nclass Index extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingData: false,\n      thisPeriod: null,\n      viewClaim: false,\n      periodChanged: false,\n      claimId: null,\n      claimType: null,\n      candidateId: null,\n      searchClaim: \"\",\n\n      // FOR FORM ================\n      viewImage: false,\n      loadingRequest: false,\n      actionTaken: null,\n      responseMsg: \"\",\n      formError: null,\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingData = (value: boolean) => {\n    this.setState({ loadingData: value });\n  };\n\n  setPeriodChanged = (value: boolean) => {\n    this.setState({ periodChanged: value });\n  };\n\n  setThisPeriod = (value: SessionPlanInterface | null) => {\n    this.setState({ thisPeriod: value });\n  };\n\n  setViewClaim = (value: boolean) => {\n    this.setState({ viewClaim: value });\n  };\n\n  // ------------------------------\n  setClaimId = (value: string | null) => {\n    this.setState({ claimId: value });\n  };\n  setClaimType = (value: string | null) => {\n    this.setState({ claimType: value });\n  };\n  setCandidateId = (value: string | null) => {\n    this.setState({ candidateId: value });\n  };\n  setViewImage = (value: boolean) => {\n    this.setState({ viewImage: value });\n  };\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n\n  setActionTaken = (value: ClaimDecisionStatus | null) => {\n    this.setState({ actionTaken: value });\n  };\n\n  setResponseMsg = (value: string) => {\n    this.setState({ responseMsg: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n\n  setDefaultSession = (sessions: SessionPlanInterface[]) => {\n    // SETTING ACTIVE SESSION ==========================\n    if (this.state.thisPeriod === null) {\n      let thisSession = sessions.find((item) => item.is_active === true);\n      this.setThisPeriod(thisSession ? thisSession : sessions[0]);\n      this.loadsAllClaims(thisSession ? thisSession : sessions[0]);\n    }\n  };\n\n  setSearchClaim = (value: string) => {\n    this.setState({ searchClaim: value });\n  };\n\n  loadsAllClaims = (thisSession: SessionPlanInterface) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (this.props.claiming.allClaims === null) {\n      this.props.getAllClaims(\n        2,\n        thisSession.session_plan_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    }\n  };\n\n  loadsApplications = (application_id: string) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (\n      !this.props.claiming.allApplications.find(\n        (item) => item._id === application_id\n      )\n    ) {\n      this.props.getAllApplications(\n        application_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    }\n  };\n\n  loadsController = (file_id: string, claimType: PlansTypeKeys) => {\n    if (claimType === PlansTypeKeys.APPLICATION)\n      this.loadsApplications(file_id);\n    if (claimType === PlansTypeKeys.EXAMINATION) this.loadsAlAnswers(file_id);\n  };\n\n  loadsAlAnswers = (answersheet_id: string) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (\n      !this.props.claiming.allAnswer.find(\n        (item) => item.answer_sheet_id === answersheet_id\n      )\n    ) {\n      this.props.getAllAnswers(\n        answersheet_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    }\n  };\n\n  componentDidMount = () => {\n    // LOADING APPLICATION SESSION ====================================\n    if (this.props.application_sessions === null) {\n      this.props.GetAllSessionPlans(\n        (status: boolean, msg: string, data?: SessionPlanInterface[]) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data && data.length > 0) {\n              this.setDefaultSession(data);\n            }\n          }\n        }\n      );\n    } else if (this.props.application_sessions.length > 0) {\n      this.setDefaultSession(this.props.application_sessions);\n    }\n\n    // LOADING DOCUMENT CATEGORIES ==========================\n    if (!this.props.documentReducer.documentCategory) {\n      this.props.getDocumentCategory();\n      this.setLoading(false);\n    }\n\n    // LOADING DOCUMENT CLARIFICATIONS ==========================\n    if (!this.props.documentReducer.documentSubCategory) {\n      this.props.getDocumentSubCategory();\n      this.setLoading(false);\n    }\n\n    // LOADING DOCUMENT FIELDS ==========================\n    if (!this.props.documentReducer.documentFields) {\n      this.props.getDocumentFields();\n      this.setLoading(false);\n    }\n\n    if (this.props.systemPositions === null) {\n      this.props.getPositions((status: boolean, msg: string) => {\n        this.setLoading(status);\n        console.log({ status: status, msg: msg });\n        if (msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n\n    if (this.props.claiming.claimReasons === null) {\n      this.props.getClaimReasons((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (!status) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n\n    if (\n      this.props.courses === null ||\n      (this.props.courses.length === 0 && this.state.loading)\n    ) {\n      this.props.loadCourses(this.setLoading);\n      this.setLoading(false);\n    } else {\n      this.setLoading(false);\n    }\n  };\n\n  displayClaimTitle = (\n    thisClaim: CandidateClaimInterface\n  ): string | JSX.Element => {\n    let result: string = thisClaim.claiming_on_id;\n    if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      let thisDocs = thisClaim.userDetails.details.filter(\n        (item) => item.validation_status !== \"waiting\"\n      );\n      result =\n        thisDocs.length > 0\n          ? adminDisplayClaimTitle(\n              this.props.documentReducer,\n              thisDocs,\n              thisClaim\n            )\n          : \"Document not found\";\n    }\n    if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n      if (this.props.claiming.allApplications) {\n        let thisApplication = this.props.claiming.allApplications.find(\n          (item) => item._id === thisClaim.claiming_on_id\n        );\n        if (\n          thisApplication &&\n          this.props.claiming.allApplications &&\n          this.props.systemPositions\n        ) {\n          let thisPosition = this.props.systemPositions.find(\n            (item) => item.position_id === thisApplication!.position\n          );\n          if (thisPosition) {\n            result = thisPosition.position_title;\n          } else {\n            result = \"Application not found\";\n          }\n        }\n      }\n    }\n\n    if (\n      thisClaim.type_key === PlansTypeKeys.EXAMINATION &&\n      this.props.courses &&\n      this.props.claiming.allAnswer\n    ) {\n      let thisAnswer = getCourseIdBySheetId(\n        this.props.claiming.allAnswer,\n        thisClaim.claiming_on_id\n      );\n      if (thisAnswer && getCourseById(this.props.courses, thisAnswer.course)) {\n        result =\n          \"Exam of \" +\n          getCourseById(this.props.courses, thisAnswer.course)!.course_name;\n      } else {\n        result = \"Unknown exam\";\n      }\n    }\n\n    return result;\n  };\n\n  onPeriodChange = (period_id: string) => {\n    this.setPeriodChanged(true);\n    this.props.getAllClaims(2, period_id, (status: boolean, msg: string) => {\n      !status && this.setPeriodChanged(false);\n      this.setLoadingData(status);\n      if (status === false && msg.length) {\n        this.props.PushPopupAlert({\n          title: msg,\n          theme: PopupAlertTheme.danger,\n        });\n      }\n    });\n  };\n\n  getLastClaimDate = (claim: CandidateClaimInterface): string => {\n    let result: string = DATE(claim.createdAt);\n    const claimsLength: number = claim.claims.length;\n    result = DATE(claim.claims[claimsLength - 1].createdAt);\n    return result;\n  };\n\n  render() {\n    if (this.props.application_sessions === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    if (this.props.application_sessions.length === 0) {\n      return (\n        <div className=\"bg-yellow-100 rounded flex flex-col items-center justify-center p-6 my-8 text-yellow-900 border border-yellow-900\">\n          <MdInfoOutline className=\"text-6xl md:text-9xl\" />\n          <div className=\"text-center flex flex-col\">\n            <span className=\"text-2xl md:text-4xl font-extrabold\">\n              No active session\n            </span>\n            <span className=\"text-lg\">\n              Please Wait for the system to publish the sessions or contact the\n              administrator\n            </span>\n          </div>\n        </div>\n      );\n    }\n\n    if (this.props.claiming.allClaims === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    console.log(\"=================viewClaim===================\");\n    console.log({\n      allClaims: this.props.claiming.allClaims,\n      viewClaim: this.state.viewClaim,\n      candidateId: this.state.candidateId,\n      claimId: this.state.claimId,\n      // getClaimById: getClaimById(\n      //   this.props.claiming.allClaims,\n      //   this.state.claimId\n      // ),\n      claimTypes: this.props.claiming.claimTypes,\n    });\n    console.log(\"==================viewClaim==================\");\n\n    return (\n      <div>\n        {/* SIDE NAVIGATION */}\n        {!this.state.viewClaim && (\n          <SideNavigation>\n            {/* FILTER SECTION */}\n            <AdminFilterByType loadingClaims={this.state.loadingData} />\n            {/* END FILTER SECTION */}\n          </SideNavigation>\n        )}\n        {/* END SIDE NAVIGATION */}\n\n        {/* 00000000000000000000000000000000000 */}\n\n        {/* CLAIM TITLE ===================================== */}\n        {!this.state.viewClaim && (\n          <ClaimHeaderTitle\n            headerTitle={`${\n              this.props.claiming.selectedClaimType === \"all\"\n                ? \"All\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION\n                ? \"Documents\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.APPLICATION\n                ? \"Applications\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.EXAMINATION\n                ? \"Exam\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.MARKS_PUBLICATION\n                ? \"Marks publication\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.PLACEMENT_TRANSFER\n                ? \"Placements\"\n                : \"\"\n            } Claiming`}\n            loading={this.state.loadingData}\n            loadingSession={this.state.loading}\n            thisPeriod={this.state.thisPeriod}\n            setThisPeriod={this.setThisPeriod}\n            setLoadingSession={this.setLoadingData}\n            application_sessions={this.props.application_sessions}\n            onPeriodChange={this.onPeriodChange}\n            periodChanged={this.state.periodChanged}\n          />\n        )}\n        {/* END CLAIM TITLE ===================================== */}\n\n        {/* 00000000000000000000000000000000000 */}\n\n        {/* CLAIM CONTENT LIST ===================================== */}\n        {!this.state.viewClaim && (\n          <section className=\"bg-white w-full p-1\">\n            {/* FILTER FORM =================================== */}\n            <section className=\"flex flex-col-reverse sm:flex-row items-center gap-2 w-full my-2\">\n              <div className=\"w-full\">\n                <input\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                    this.setSearchClaim(e.target.value)\n                  }\n                  type=\"text\"\n                  className=\"input-white h-10 text-sm border-2 border-gray-400 focus:border-gray-500 w-full\"\n                  placeholder={`Search claim by title or type`}\n                  value={this.state.searchClaim}\n                  disabled={\n                    filterClaimsByClaimType(\n                      this.props.claiming.allClaims,\n                      this.props.claiming.selectedClaimType\n                    ).length > 0\n                      ? false\n                      : true\n                  }\n                />\n              </div>\n            </section>\n            {/* END FILTER FORM =================================== */}\n            <div className=\"w-full overflow-x-auto\">\n              <table className=\"w-full shadow\" id=\"report_content\">\n                <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                  <tr>\n                    <td className=\"px-2 py-2\">#</td>\n                    <td className=\"px-2 py-2\">Applicant names</td>\n                    <td className=\"px-2 py-2\">Claim title</td>\n                    <td className=\"px-2 py-2\">Claim date</td>\n                    {this.props.claiming.selectedClaimType === \"all\" && (\n                      <td className=\"px-2 py-2\">Claim type</td>\n                    )}\n                    <td className=\"px-2 py-2\">Claim level</td>\n                    <td className=\"px-2 py-2\">Claim status</td>\n                    <td className=\"px-2 py-2\"></td>\n                  </tr>\n                </thead>\n                <tbody>\n                  {!this.props.claiming.allClaims ||\n                  !this.props.claiming.claimTypes ||\n                  !this.props.systemPositions ||\n                  this.state.loadingData ? (\n                    <TableLoading\n                      cols={\n                        this.props.claiming.selectedClaimType === \"all\" ? 8 : 7\n                      }\n                    />\n                  ) : search(\n                      filterClaimsByClaimType(\n                        this.props.claiming.allClaims,\n                        this.props.claiming.selectedClaimType\n                      ),\n                      this.state.searchClaim\n                    ).length <= 0 ? (\n                    <tr\n                      className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                      key={Math.random()}\n                    >\n                      <td className=\"px-3 py-1\" colSpan={8}>\n                        <NoResult\n                          theme={NoResultThemes.Light}\n                          value={\"No claim found!\"}\n                        />\n                      </td>\n                    </tr>\n                  ) : (\n                    search(\n                      filterClaimsByClaimType(\n                        this.props.claiming.allClaims,\n                        this.props.claiming.selectedClaimType\n                      ),\n                      this.state.searchClaim\n                    ).map((claim: CandidateClaimInterface, index) => (\n                      <tr\n                        className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                        key={index + claim._id}\n                        onClick={() => {\n                          this.setViewClaim(true);\n                          this.setClaimId(claim._id);\n                          this.setCandidateId(claim.user);\n                          this.setClaimType(\n                            whichClaimType(claim)\n                              ? whichClaimType(claim)!\n                              : null\n                          );\n                          this.loadsController(\n                            claim.claiming_on_id,\n                            claim.type_key\n                          );\n                        }}\n                      >\n                        <td className=\"px-3 py-1\">{index + 1}</td>\n                        <td className=\"px-3 py-1 whitespace-nowrap\">\n                          {claim.userDetails.user_info.fname +\n                            \" \" +\n                            claim.userDetails.user_info.lname}\n                        </td>\n                        <td className=\"px-3 py-1 whitespace-nowrap\">\n                          {claim.title}\n                        </td>\n                        <td className=\"px-3 py-1 whitespace-nowrap\">\n                          {this.getLastClaimDate(claim)}\n                        </td>\n                        {this.props.claiming.selectedClaimType === \"all\" && (\n                          <td className=\"px-3 py-1 whitespace-nowrap\">\n                            {whichClaimType(claim)\n                              ? capitalizeFirstLetter(whichClaimType(claim)!)\n                              : \"-\"}\n                          </td>\n                        )}\n                        <td className=\"px-3 py-1 whitespace-nowrap italic\">\n                          Level {claim.claim_level}\n                        </td>\n                        <td className=\"px-3 py-1 whitespace-nowrap\">\n                          <span\n                            className={`inline-block rounded-full duration-300 text-xs font-semibold px-3 py-1 ${\n                              whichClaimStatus(claim).classes\n                            }`}\n                          >\n                            {whichClaimStatus(claim).status}\n                          </span>\n                        </td>\n                        <td className=\"px-3 py-1 text-center whitespace-nowrap\">\n                          <button className=\"btn bg-blue-500 text-white group-hover:bg-blue-600\">\n                            View\n                          </button>\n                        </td>\n                      </tr>\n                    ))\n                  )}\n                </tbody>\n              </table>\n            </div>\n          </section>\n        )}\n        {/* END CLAIM CONTENT LIST ===================================== */}\n\n        {/* 00000000000000000000000000000000000 */}\n\n        {/* view claim */}\n        {this.state.viewClaim &&\n          this.state.candidateId &&\n          this.props.claiming.allClaims &&\n          this.state.claimId &&\n          getClaimById(this.props.claiming.allClaims, this.state.claimId) &&\n          this.props.claiming.claimTypes && (\n            <section className=\"bg-white w-full my-4\">\n              {/* VIEW CLAIM HEADER =============================== */}\n              <section className=\"flex items-center gap-2 py-2 border-b\">\n                <button\n                  className={`ml-3 bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n                    this.state.loadingRequest\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } animate__animated animate__fadeIn`}\n                  disabled={this.state.loadingRequest}\n                  onClick={() => {\n                    this.setViewClaim(false);\n                    this.setViewImage(true);\n                    this.setLoadingRequest(false);\n                    this.setActionTaken(null);\n                    this.setResponseMsg(\"\");\n                    this.setFormError(null);\n                  }}\n                >\n                  <MdArrowBack className=\"w-7 h-7\" />\n                </button>\n                <div className={`text-gray-600 font-extrabold text-2xl px-2`}>\n                  Viewing claim\n                </div>\n              </section>\n              {/* END VIEW CLAIM HEADER =============================== */}\n\n              {this.state.loading && (\n                <div className=\"my-4\">\n                  <Loading />\n                </div>\n              )}\n\n              {!this.state.loading && (\n                <section className=\"bg-gray-200\">\n                  {/* FOR DOCUMENT ========================== */}\n                  {this.state.claimType &&\n                    this.state.claimType.toLocaleLowerCase() ===\n                      ClaimTypesInterface.DOCUMENT.toLocaleLowerCase() && (\n                      <div>\n                        {getClaimById(\n                          this.props.claiming.allClaims!,\n                          this.state.claimId!\n                        )!.userDetails.details.find(\n                          (item) =>\n                            item.doc_id ===\n                            getClaimById(\n                              this.props.claiming.allClaims!,\n                              this.state.claimId!\n                            )!.claiming_on_id\n                        ) ? (\n                          <AdminClaimDocView\n                            thisDoc={\n                              getClaimById(\n                                this.props.claiming.allClaims!,\n                                this.state.claimId!\n                              )!.userDetails.details.find(\n                                (item) =>\n                                  item.doc_id ===\n                                  getClaimById(\n                                    this.props.claiming.allClaims!,\n                                    this.state.claimId!\n                                  )!.claiming_on_id\n                              )!\n                            }\n                            documentCategories={this.props.documentReducer}\n                            thisClaim={\n                              getClaimById(\n                                this.props.claiming.allClaims,\n                                this.state.claimId\n                              )!\n                            }\n                            claimTypes={this.props.claiming.claimTypes}\n                            viewImage={this.state.viewImage}\n                            setViewImage={this.setViewImage}\n                            loadingRequest={this.state.loadingRequest}\n                            setLoadingRequest={this.setLoadingRequest}\n                            actionTaken={this.state.actionTaken}\n                            setActionTaken={this.setActionTaken}\n                            responseMsg={this.state.responseMsg}\n                            setResponseMsg={this.setResponseMsg}\n                            formError={this.state.formError}\n                            setFormError={this.setFormError}\n                            candidateId={this.state.candidateId}\n                            claimReasons={this.props.claiming.claimReasons}\n                          />\n                        ) : (\n                          <NoResult\n                            theme={NoResultThemes.Dark}\n                            value={\"Document not found\"}\n                          />\n                        )}\n                      </div>\n                    )}\n\n                  {/* FOR APPLICATION ========================== */}\n                  {this.state.claimType &&\n                    this.state.claimType.toLocaleLowerCase() ===\n                      ClaimTypesInterface.APPLICATION.toLocaleLowerCase() && (\n                      <div>\n                        {getApplicationById(\n                          this.props.claiming.allApplications,\n                          this.props.systemPositions,\n                          getClaimById(\n                            this.props.claiming.allClaims,\n                            this.state.claimId\n                          )!.claiming_on_id\n                        ) ? (\n                          this.props.systemPositions && (\n                            <AdminClaimAppView\n                              thisApplication={\n                                getApplicationById(\n                                  this.props.claiming.allApplications,\n                                  this.props.systemPositions,\n                                  getClaimById(\n                                    this.props.claiming.allClaims,\n                                    this.state.claimId\n                                  )!.claiming_on_id\n                                )!.application\n                              }\n                              thisPosition={\n                                getApplicationById(\n                                  this.props.claiming.allApplications,\n                                  this.props.systemPositions,\n                                  getClaimById(\n                                    this.props.claiming.allClaims,\n                                    this.state.claimId\n                                  )!.claiming_on_id\n                                )!.position\n                              }\n                              documentCategories={this.props.documentReducer}\n                              thisClaim={\n                                getClaimById(\n                                  this.props.claiming.allClaims,\n                                  this.state.claimId\n                                )!\n                              }\n                              claimTypes={this.props.claiming.claimTypes}\n                              systemPositions={this.props.systemPositions}\n                              claimReasons={this.props.claiming.claimReasons}\n                            />\n                          )\n                        ) : (\n                          <NoResult\n                            theme={NoResultThemes.Dark}\n                            value={\"Application not found\"}\n                          />\n                        )}\n                      </div>\n                    )}\n\n                  {/* FOR EXAMINATION ========================== */}\n                  {this.state.claimType &&\n                    this.state.claimType.toLocaleLowerCase() ===\n                      ClaimTypesInterface.EXAMINATION.toLocaleLowerCase() && (\n                      <div>\n                        {this.props.claiming.allAnswer &&\n                        this.props.courses &&\n                        getCourseIdBySheetId(\n                          this.props.claiming.allAnswer,\n                          getClaimById(\n                            this.props.claiming.allClaims,\n                            this.state.claimId\n                          )!.claiming_on_id\n                        ) &&\n                        getCourseById(\n                          this.props.courses,\n                          getCourseIdBySheetId(\n                            this.props.claiming.allAnswer,\n                            getClaimById(\n                              this.props.claiming.allClaims,\n                              this.state.claimId\n                            )!.claiming_on_id\n                          )!.course\n                        ) ? (\n                          <AdminClaimExamView\n                            thisExamSheet={\n                              getCourseIdBySheetId(\n                                this.props.claiming.allAnswer,\n                                getClaimById(\n                                  this.props.claiming.allClaims,\n                                  this.state.claimId\n                                )!.claiming_on_id\n                              )!\n                            }\n                            thisExam={\n                              getCourseById(\n                                this.props.courses,\n                                getCourseIdBySheetId(\n                                  this.props.claiming.allAnswer,\n                                  getClaimById(\n                                    this.props.claiming.allClaims,\n                                    this.state.claimId\n                                  )!.claiming_on_id\n                                )!.course\n                              )!\n                            }\n                            thisClaim={\n                              getClaimById(\n                                this.props.claiming.allClaims,\n                                this.state.claimId\n                              )!\n                            }\n                            claimTypes={this.props.claiming.claimTypes}\n                            claimReasons={this.props.claiming.claimReasons}\n                          />\n                        ) : (\n                          <NoResult\n                            theme={NoResultThemes.Dark}\n                            value={\"Exam not found\"}\n                          />\n                        )}\n                      </div>\n                    )}\n                </section>\n              )}\n            </section>\n          )}\n        {/* end view claim */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system_settings,\n  sessionPlan,\n  claiming,\n  document,\n  course,\n}: StoreState): {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  systemPositions: PositionAPI[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  courses: course[] | null;\n} => {\n  return {\n    auth: auth,\n    application_sessions: sessionPlan.allSessionPlans,\n    systemPositions: system_settings.systemPositions,\n    claiming,\n    documentReducer: document,\n    courses: course.courses,\n  };\n};\n\nexport const AdminClaim = connect(mapStateToProps, {\n  getAllClaims,\n  loadCourses,\n  getAllAnswers,\n  getClaimReasons,\n  getAllApplications,\n  GetAllSessionPlans,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  getPositions,\n  PushPopupAlert,\n})(Index);\n"],"sourceRoot":""}
{"version":3,"sources":["containers/AdminDashboard/ChartComponents/LoadingLabels.tsx","containers/AdminDashboard/WaitingListDashboard/WaitingListBoardTitle.tsx","containers/AdminDashboard/WaitingListDashboard/WaitingListChart.tsx","containers/AdminDashboard/WaitingListDashboard/WaitingListDashboard.tsx","components/Navigation/SideNavigation.tsx","actions/settings.ts","actions/users.ts","containers/SessionSettings/NoSession.tsx","containers/Admin/ExamReport/DoneExamList.tsx","components/Loading/TableLoading.tsx","containers/AdminDashboard/ChartComponents/VBarChart.tsx","containers/Admin/ExamReport/ExamReport.tsx","containers/Admin/ExamReport/CandiadtePerformancePerDistrict.tsx","containers/Admin/ExamReport/ExamPerformancePerDistrict.tsx","containers/Admin/ExamReport/ExamReportFilters.tsx","containers/Admin/ExamReport/ExamReportTitle.tsx","utils/ExportToExcel.tsx","utils/mineduc.png","components/DownloadPDF/rest.tsx","actions/schools.ts","containers/UserManagement/UserList.tsx","containers/UserManagement/RoleList.tsx","containers/UserManagement/UserRole.tsx","shared/blank_profile.png","containers/SessionSettings/ChooseSession.tsx","containers/Admin/ExamReport/CandidatePerformance.tsx","containers/Admin/ExamReport/ExamList.tsx","containers/Admin/ExamReport/ExamReportModals.tsx","containers/AdminDashboard/ChartComponents/PieChart.tsx","containers/UserManagement/UserAccess.tsx","containers/AdminDashboard/DashboardLabelItem.tsx","containers/Admin/ExamReport/ExamPerformance.tsx","containers/AdminDashboard/ExamDashboard/ExamDashboardLabels.tsx","containers/Locations/ViewDistricts.tsx","containers/Locations/ViewProvince.tsx","containers/Locations/ViewSectors.tsx","containers/Locations/Locations.tsx","containers/AdminDashboard/ExamDashboard/ExamDashboardTitle.tsx","containers/AdminDashboard/ExamDashboard/ExamPreparationChart.tsx","containers/AdminDashboard/ExamDashboard/ExamProgressChart.tsx","containers/AdminDashboard/ExamDashboard/ExamPerformanceChart.tsx","containers/AdminDashboard/ExamDashboard/ExamDashboard.tsx","interfaces/waitingList.ts","components/ContractViewer/DistrictView.tsx","components/ContractViewer/ProvinceView.tsx","components/ContractViewer/SchoolView.tsx","components/ContractViewer/SectorView.tsx","components/ContractViewer/ContractViewer.tsx","containers/Admin/WaitingList/WaitingListReport.tsx"],"names":["LoadingLabels","className","React","memo","WaitingListBoardTitle","props","reportTitle","onClick","setSelectPosition","thisPosition","position_title","education_categories","length","allEducation","loading","loadingEducation","thisEducation","setThisEducation","map","education","index","education_institute_id","education_category_title","value","thisPeriod","disabled","onChange","e","setThisPeriod","target","application_sessions","session","item","session_plan_id","session_plan_name","WaitingListChart","FC_GetWaitingListChartData","waitingDataArray","placementDataArray","failedDataArray","labelArray","labelIds","waitingListData","names","ids","key","Object","prototype","hasOwnProperty","call","includes","waitingList_session_id","push","waitingList_session","sessionNames","sessionIds","getDistinctSession","forEach","thisSessionsKey","_waitingListData","filter","element","getPeriodById","sessions","thisGender","waiting_status","WaitingListStatus","WAITING","gender","toString","toLocaleLowerCase","PLACED","PENDING","waitingData","placementData","failedData","labels","VBarChart","categoriesLabel","dataLabels","yaxisText","tooltipText","series","name","data","colors","defaultBar","borderRadius","horizontal","columnWidth","endingShape","chartHeight","_WaitingListDashboard","setLoading","setState","setLoadingWaitingList","loadingWaitingList","setThisPosition","selectPosition","setThisGender","setSearchPositionInput","searchPositionInput","componentDidMount","schoolLevels","loadEducationCategories","GetAllSessionPlans","status","msg","PushPopupAlert","title","theme","PopupAlertTheme","danger","systemPositions","getPositions","state","getWaitingList","FC_WaitingListStatus","WaitingList","count","all","waiting","placed","failed","type","applicantGender","male","female","FC_WaitingListData","allWaitList","arrayNew","user_info","getPositionById","position_id","thisSession","session_id","dataArray","fname","lname","waitingList_id","_id","sex","national_id","n_id","phone","phone_number","email","user_position_marks","Number","marks","toFixed","education_category","education_category_id","date","DATE","createdAt","FC_FilterWaitingList","waitingListStatus","institute","result","getWaitingListDataByTitle","allData","find","displayGenderTitle","this","NoSession","waitingList","ExamDashboardLabels","icon","FaBookOpen","iconColor","labelsOnRow","PieChart","options","legend","show","position","horizontalAlign","fontSize","itemMargin","vertical","plotOptions","pie","donut","color","offsetY","fontFamily","formatter","val","total","label","w","globals","seriesTotals","reduce","a","b","width","Modal","backDrop","Themes","default","close","backDropClose","widthSizeClass","ModalSize","extraLarge","displayClose","padding","LoadingV2","LoadingType","dark","placeholder","search","style","fontStyle","school_level_id","school_level_name","Component","WaitingListDashboard","connect","auth","system_settings","sessionPlan","allSessionPlans","_SideNavigation","PageHasSubNav","componentWillUnmount","isAuthenticated","navActive","system","navigation","children","SideNavigation","NavToogle","MainItem","MdBrightness1","active","IconDefined","getSystemSettings","callback","dispatch","setAxiosToken","axios","get","API","AUTH","res","ActionTypes","GET_SYSTEM_SETTINGS","payload","console","log","code_error","errorToText","disableSystemSetting","DISABLE_SYSTEM_SETTINGS","GetTaskAccess","response","id","task","permitted","GET_TASK_ACCESS","APPLICATION","GET_POSTIONS","deletePosition","DELETE_POSITION","publishPosition","PUBLISH_POSITION","documentValidationStatus","userPageLimit","fetchUserAccess","page","FETCH_USERS_ACCESS","users","next","previous","total_users","error","user_error","blockUserToSystem","user_id","BLOCK_USER_TO_SYSTEM","unBlockUserToSystem","UNBLOCK_USER_TO_SYSTEM","assignRoleToUserAccess","ASSIGN_ROLE_TO_USER","customizeUserAccess","CUSTOMIZE_USER_ACCESS","resetUserAccess","RESET_USER_ACCESS","ExaminationProgressReportContentKeyInterface","examinationProgressIsChangeAllowed","COURSER_NAME","COURSE_CODE","PERIOD","STATUS","defaultExaminationProgressContent","SCHOOL_LEVEL","TIME","DURATION","displayStatus","FC_reportDoneExamList","allCourses","allExams","doneExams","courser","course_id","course","doneExam","period","course_name","course_code","description","school_levels","exam","preparation_status","exam_status","FC_reportDoneExamListFilter","thisList","thisValue","searchExamData","objList","text","undefined","product","flag","prop","toLowerCase","indexOf","DoneExamList","useState","searchInput","setSearchInput","isSorted","setIsSorted","sortProperty","setSortProperty","sortOrder","setSortOrder","setSort","thisProperty","courseListData","examsListData","doneExamsData","filterExamProgress","colSpan","sortThisArray","i","capitalizeFirstLetter","exam_date","start_time","duration","TableLoading","displayCols","colsArray","cols","chart","events","dataPointSelection","event","chartContext","config","labelClicked","dataPointIndex","FC_LoadSelected","seriesIndex","stacked","bar","enabled","xaxis","rotate","categories","tickPlacement","yaxis","fill","opacity","tooltip","y","grid","left","right","noData","align","verticalAlign","setOptions","useEffect","chartClicked","zoom","autoScaleYaxis","height","reportTitleType","FC_CandiadtePerformancePerDistrictFilter","dataList","swap","district_id","exam_stastus","exam_location","j","user_total_marks","adminExamReport","candidatePerformanceData","FC_reportCandidatePerformanceData","reportCourseId","reportDistrictId","filterApplicantPerformance","Loading","searchCandidatePerformanceData","slice","controlRowsByStatus","user_name","user_email","user_phone","timestampToDate","timeAMPM","end_time","ReportUserExamStatus","Editing","FC_ExamPerformancePerDistrictPropsData","examsData","pass","exam_ids","_marks","candidatesByExam","_key","user","total_marks","user_status","pass_applicant","failed_applicant","applicants","NoResult","NoResultThemes","Dark","ExamReportFilters","EXAM_PERFORMANCE","EXAM_DISTRICT_PERFORMANCE","EXAM_PREPARATION","setFilterPreparation","filterPreparation","EXAMINATION_PROGRESS","setFilterExamProgress","APPLICANTS_PERFORMANCE","APPLICANTS_DISTRICT_PERFORMANCE","setFilterApplicantPerformance","values","prepareExam","courses","examsList","SetReportDistrictId","changeReport","setChangeReport","districtModal","setDistrictModal","excelModal","setExcelModal","courseModal","setCourseModal","district_name","dataToPrint","updateExamToPrint","setGenerateReportModal","reportType","downloading","downlaodPDF","ExamReportModals","modalFor","ModalForTypes","generateReportModal","modalState","changeModalState","excelReportTitle","setExcelReportTitle","examsToPrint","examPreparationReportContent","setExamPreparationReportContent","examPerformanceToPrint","examPerformanceReportContent","setExamPerformanceReportContent","exam30PerformanceToPrint","exam30PerformanceReportContent","setExam30PerformanceReportContent","examinationProgressToPrint","examinationProgressReportContent","setExaminationProgressExamPerformanceReportContent","candidateExamPerformanceToPrint","candidateExamPerformanceReportContent","setCandidateExamPerformanceReportContent","candidate30ExamPerformanceToPrint","candidate30ExamPerformanceReportContent","setCandidate30ExamPerformanceReportContent","setReportTitle","choose_district","districtId","loadExaminationProgress","DoneExam","selectedEducationCategory","choose_exam","AllExamData","finished","thisExam","getExamByCourseId","periods","period_id","loadAllExams","selected_period","_ExamReport","setLoadingCourses","loadingCourses","setLoadingExams","loadingExams","setDownloading","setLoadingDoneExam","loadingDoneExam","setLoadingCandidatesExamPerformance","loadingCandidatesExamPerformance","setLoadingExamPerformance","loadingExamPerformance","setLoadingSettings","loadingSettings","setSelectPeriod","selectPeriod","setSelectedPeriod","setExamsToPrint","setExamPerformanceToPrint","setExam30PerformanceToPrint","setExaminationProgressToPrint","setCandidateExamPerformanceToPrint","setCandidate30ExamPerformanceToPrint","selectDefaultSession","allSession","active_period","is_active","isEmptyOrSpaces","setSelectedEducationCategory","loadSchoolLevels","loadCourses","loadExamsList","application_session","loadDoneExam","CandidatesExamPerformance","loadCandidatesExamPerformance","order","sortBy","ReportGetCandidatePerformanceSortTypes","ExamPerformance","loadPerfomranceExam","onPeriodChange","getLevelbyId","level_id","getCourses","search_all","level","levelDetail","education_institute","FC_reportExamList","n","school_level","findLevel","exam_period","exam_time","exam_duration","FC_reportExamPerformanceData","exam_performance","applicant_id","exam_start_time","exam_end_time","performance_status","applicant_name","addToTitle","document","querySelectorAll","warning","table","getElementById","reportSettings","doneBy","subjectTitle","subject","footer","orientation","generatePDF","defaultExamPreparationReportContent","defaultExamPerformanceContent","defaultCandidateExamPerformanceContent","ExamList","examsPerformanceData","thisDistrict","Light","component","CandidatePerformance","applicationPeriods","ExamReport","ExportToExcel","fileData","fileName","btnName","showIcon","apiData","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","exportToCSV","require","addFooters","doc","pageCount","internal","getNumberOfPages","setFont","setFontSize","setPage","String","pageSize","callBack","lMargin","jsPDF","setTextColor","addImage","Logo","getWidth","lines","splitTextToSize","pdfInMM","getTextWidth","addPage","autoTable","html","startY","margin","cellPadding","rowHeight","bodyStyles","valign","columnStyles","cellWidth","tableWidth","finalY","lastAutoTable","Date","save","returnPromise","then","getSchools","GET_SCHOOLS","getSchoolById","schoolId","GET_SCHOOLS_BY_ID","createSchool","schools","CREATE_SCHOOL","updateSchool","UPDATE_SCHOOL","deleteSchool","DELETE_SCHOOL","fetchSchoolPosts","school_id","PLACEMENT","schoolPosts","FETCH_SCHOOL_POSTS","getSchoolPlacement","GET_SCHOOL_PLACEMENT","createSchoolPost","CREATE_SCHOOL_POST","updateSchoolPost","TYPE","UPDATE_SCHOOL_POST","fetchDistrictPosts","FETCH_DISTRICT_POSTS","getDistrictPlacement","GET_DISTRICT_PLACEMENT","getInstitutePlacementLimit","institute_id","GET_INSTITUTE_PLACEMENT_LIMIT","getDistrictPlacementLimit","GET_DISTRICT_PLACEMENT_LIMIT","updateInstitutePlacementLimit","UPDATE_INSTITUTE_PLACEMENT_LIMIT","ModalState","RoleList","roleList","setChooseRole","role","loadindRequest","handleSelectRole","system_user_role_id","UserRole","setRoleId","roleId","setSelectedRole","selectedRole","setProvinceId","provinceId","setDistrictId","setCenterId","centerId","setRoomId","roomId","setLoadingForm","loadingForm","setSchoolId","setChooseSchool","chooseSchool","setInstituteId","instituteId","setFormError","formError","setLoadingRequest","loadingRequest","chooseRole","setDefaultState","default_access","LOAD_province","LOAD_district","district_required","roomList","distinctDistrict","province_id","room_required","LocationsInArray","room_id","center_id","school_required","schoolList","LOAD_school","userInfo","vvvvv","role_id","tableData","access","create","view","update","delete","Math","random","assignRoleToUser","preventDefault","window","confirm","education_institution_required","formData","education_institution_id","post","currentPage","setChangeRole","success","role_error","location","districts","keyDistrict","distinctCenter","rooms","distinctRoom","onSubmit","province","province_name","district","school","school_name","center","center_name","room","room_name","Table","columns","columnTitle","alignText","rows","pagination","searchBG","thColor","tableId","getUserById","userId","LocationData","locationTemp","p","d","centers","c","r","room_number","capacity","occupied","UserList","setManageUserId","manageUserId","setLoadingSchool","loadingSchool","setLoadingRequestType","loadingRequestType","setRoomList","setRoomTables","roomTable","setCurrentAccess","currentAccess","setSchoolList","setUserAccess","userAccess","allRoom","getAllRoom","loadingUser","setManageUser","getRoleById","blockUser","actionType","patch","info","blockUser_ERROR","restUserAccess","resetedAccess","reseting_user_access","manageUser","src","photo","profile","alt","getInstituteById","custome_access","changeRole","UserAccess","locations","roomLocation","isPlansActive","plans","today","activePlans","plan","startDate","start_date","endDate","end_date","getTime","type_status","SessionPlanTypeStatus","OPEN","ChooseSession","searched","selectedPlan","setSelectedPlan","setSearch","chooseAll","currentSelected","setSelectSession","searchData","itm","type_key","type_title","CandidateExamPerformanceReportContentKeyInterface","candidateExamPerformanceIsChangeAllowed","APPLICANT","N_ID","EMAIL","PHONE","MARKS","START_TIME","END_TIME","FC_reportCandidatePerformanceDataFilter","examPreparationReportContentKeyInterface","examPreparationIsChangeAllowed","FC_reportExamListFilter","thisStatus","searchExamList","FC_DistinctDistrict","flags","output","l","SetReportCourseId","selectAll","setSelectAll","loadingLocation","setLoadingLocation","setError","isChangeAllowed","examPerformanceIsChangeAllowed","updateExamPerformanceReportContent","findIndex","newArray","isSelectAllNeeded","updateCandidateExamPerformanceReportContent","showGenerateBtn","medium","updateExamPreparationReportContent","updateExaminationProgressReportContent","currentState","resetReportContent","isAllDistrictAllowed","selectDistrict","_UserAccess","setViewPermission","viewPermission","setLoadindRequest","setCreatePermission","createPermission","setUpdatePermission","updatePermission","setDeletePermission","deletePermission","setLoadind","overrideUserAccess","overideAccess","findCustom","custom","handleCustomization","custome_user_access_id","customize_access","to","checked","DashboardLabelItem","FaUsers","countOver","toAnyDigit","examPerformanceReportContentKeyInterface","PERFORMANCE","examPerformance","answer_sheet_id","Fragment","numCols","childrenPosition","FC_CreateDistrict","FC_UpdateDistrict","FC_DeleteDistrict","districtName","setDistrictName","districtCode","setDistrictCode","handleSubmit","actionTypes","thisProvince","province_code","district_code","sectors","setActionTypes","setThisDistrict","doc_category_error","body","FC_CreateProvince","FC_UpdateProvince","FC_DeleteProvince","provinceTitle","setProvinceTitle","provinceCode","setProvinceCode","updated","setThisProvince","province_error","FC_CreateSector","FC_UpdateSector","FC_DeleteSector","sectorName","setSectorName","sectorCode","setSectorCode","sector_name","sector_code","sector_id","thisSector","setThisSector","sector_error","handleDelete","sectorId","district_error","sector","Locations","ViewDistricts","ExamDashboardTitle","ExamPreparationChart","examPreparationProgress","remaining","ExamProgressChart","progressData","ExamPerformanceChart","loadCoursesByInstitute","courseList","defaultValue","completeExams","remainingExams","dataFound","loadExamPreparationProgress","isDatePast","dateParam","moment","format","todayDate","pastDate","diff","loadExamAttendance","applicantList","_ExamDashboard","setChangingPeriod","changingPeriod","loadByPeriods","action","ExamDashboard","waitingListReportContentKeyInterface","DistrictView","strict","displayMessage","ProvinceView","provinces","SchoolView","SectorView","ContractViewer","FC_getLocations","FC_GetWaitingLocationList","selectedSchool","contract","FC_LoadSchoolsByIDs","err","ProvincesList","DistrictList","SectorList","el","findIt","thisCandidate","candidates","school_code","waitingLocation","FC_LoadSchoolsByDistrict","defaultReportContent","_WaitingListReport","setWaitingListToPrint","waitingListToPrint","setThisWaitingListStatus","thisWaitingListStatus","setReportContent","reportContent","showStatus","statusArray","updateReportContent","updateWaitingListToPrint","generateReportTitle","FC_GeneratePDF","viewContractor","selectedWaiting","WaitingListReport"],"mappings":"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","file":"static/js/22.1ba9a8c8.chunk.js","sourcesContent":["import React from \"react\";\n\nconst LoadingLabels = () => {\n  return (\n    <div className=\"grid 2xl:grid-cols-5 xl:grid-cols-4 lg:grid-cols-3 sm:grid-cols-2 grid-cols-1 gap-4 items-center animate-pulse my-3 mr-5\">\n      <div className=\"flex items-center h-36 w-36 rounded-full bg-gray-400 space-x-2 mb-2 lg:mb-0 mx-auto\"></div>\n      <div className=\"flex items-center h-28 bg-gray-400 w-full rounded-md space-x-2 mb-2 lg:mb-0\"></div>\n      <div className=\"flex items-center h-28 bg-gray-400 w-full rounded-md space-x-2 mb-2 lg:mb-0\"></div>\n      <div className=\"flex items-center h-28 bg-gray-400 w-full rounded-md space-x-2 mb-2 lg:mb-0\"></div>\n      <div className=\"flex items-center h-28 bg-gray-400 w-full rounded-md space-x-2 mb-2 lg:mb-0\"></div>\n    </div>\n  );\n};\n\nexport default React.memo(LoadingLabels);\n","import React from \"react\";\nimport { AiFillDashboard } from \"react-icons/ai\";\nimport { BiFilterAlt } from \"react-icons/bi\";\nimport { MdBrightness1 } from \"react-icons/md\";\nimport { PositionAPI, SessionPlanInterface } from \"../../../interfaces\";\nimport { education_category } from \"../../../interfaces/education_category\";\n\ntype WaitingListBoardTitleProps = {\n  reportTitle: string;\n  education_categories: education_category[] | null;\n  loading: boolean;\n  loadingEducation: boolean;\n  thisEducation: education_category | \"all\";\n  allEducation: boolean;\n  setThisEducation: (value: education_category | \"all\") => void;\n  thisPeriod: string;\n  setThisPeriod: (value: string) => void;\n  setSelectPosition: (value: boolean) => void;\n  application_sessions: SessionPlanInterface[];\n  thisPosition: PositionAPI | null;\n};\n\nconst WaitingListBoardTitle: React.FC<WaitingListBoardTitleProps> = (props) => {\n  return (\n    <div className=\"mt-3 rounded flex flex-col md:flex-row md:justify-between items-start\">\n      <section>\n        <div className=\"flex flex-row items-center gap-3 mb-2\">\n          <AiFillDashboard className=\"text-7xl text-blue-600 hidden md:block\" />\n          <div className=\"flex flex-col\">\n            <span className=\"text-blue-600 text-3xl font-bold\">\n              {props.reportTitle}\n            </span>\n            <div\n              onClick={() => props.setSelectPosition(true)}\n              className=\"flex flex-row items-center gap-2 mt-1\"\n            >\n              <span className=\"text-gray-500\">Selected position: </span>\n              <span className=\"text-gray-700 text-lg font-bold underline cursor-pointer\">\n                {props.thisPosition !== null\n                  ? props.thisPosition.position_title\n                  : \"All positions\"}\n              </span>\n              <button\n                onClick={() => props.setSelectPosition(true)}\n                className=\"btn bg-blue-50 border border-blue-300 text-blue-600 cursor-pointer hover:bg-blue-100 flex flex-row items-center justify-center gap-2 text-sm\"\n              >\n                <BiFilterAlt className=\"text-xl\" />\n                Filter by position\n              </button>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* FILTER SECTION PERIOD && EDUCATION */}\n      <section className=\"w-full md:w-auto my-2 md:my-0\">\n        {/* EDUCATION CATEGORY sections */}\n        <section>\n          {props.education_categories && props.education_categories.length > 0 && (\n            <div className=\"flex items-start md:items-center justify-start md:justify-end gap-2\">\n              {props.allEducation && (\n                <div\n                  className={`w-auto ${\n                    props.loading || props.loadingEducation\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } ${\n                    props.thisEducation === \"all\"\n                      ? \"bg-blue-500 text-white font-bold\"\n                      : \"bg-gray-100 text-blue-800\"\n                  } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex items-center animate__animated animate__zoomIn`}\n                  onClick={() =>\n                    !props.loading &&\n                    !props.loadingEducation &&\n                    props.setThisEducation(\"all\")\n                  }\n                >\n                  <section className=\"flex-1\">\n                    <MdBrightness1 className=\"inline-block mr-1 text-xs\" />\n                    <span>All</span>\n                  </section>\n                </div>\n              )}\n              {props.education_categories.map((education, index) => (\n                <div\n                  key={education.education_institute_id + index}\n                  className={`w-auto ${\n                    props.loading ? \"cursor-not-allowed\" : \"cursor-pointer\"\n                  } ${\n                    props.thisEducation !== \"all\" &&\n                    education.education_institute_id ===\n                      props.thisEducation.education_institute_id\n                      ? \"bg-blue-500 text-white font-bold\"\n                      : \"bg-gray-100 text-blue-800\"\n                  } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex items-center animate__animated animate__zoomIn`}\n                  onClick={() =>\n                    !props.loading &&\n                    !props.loadingEducation &&\n                    props.setThisEducation(education)\n                  }\n                >\n                  <div className=\"flex-1\">\n                    <MdBrightness1 className=\"inline-block mr-1 text-xs\" />\n                    <span>{education.education_category_title}</span>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </section>\n        {/* end EDUCATION CATEGORY sections */}\n        <select\n          className={`bg-white text-gray-600 border border-gray-400 rounded p-2 focus:outline-none`}\n          value={props.thisPeriod}\n          disabled={props.loading || props.loadingEducation}\n          onChange={(e) => {\n            props.setThisPeriod(e.target.value);\n          }}\n        >\n          <option value=\"all\">All Session</option>\n          {props.application_sessions.map((session, item) => (\n            <option\n              key={session.session_plan_id + item}\n              value={session.session_plan_id}\n            >\n              {session.session_plan_name}\n            </option>\n          ))}\n        </select>\n      </section>\n      {/* END FILTER SECTION PERIOD && EDUCATION */}\n    </div>\n  );\n};\n\nexport default React.memo(WaitingListBoardTitle);\n","import React from \"react\";\nimport { SessionPlanInterface } from \"../../../interfaces\";\nimport {\n  WaitingListDataInterface,\n  WaitingListStatus,\n} from \"../../../interfaces/waitingList\";\nimport { getPeriodById } from \"../../Admin/ExamReport/ExamReport\";\nimport VBarChart from \"../ChartComponents/VBarChart\";\n\ntype WaitingListChartProps = {\n  waitingListData: WaitingListDataInterface[];\n  sessions: SessionPlanInterface[];\n  thisGender: \"all\" | \"male\" | \"female\";\n  chartHeight?: number;\n};\n\nconst WaitingListChart: React.FC<WaitingListChartProps> = (props) => {\n  const getDistinctSession = (\n    waitingListData: WaitingListDataInterface[]\n  ): { sessionNames: string[]; sessionIds: string[] } => {\n    let names: string[] = [],\n      ids: string[] = [];\n\n    for (const key in waitingListData) {\n      if (Object.prototype.hasOwnProperty.call(waitingListData, key)) {\n        if (!ids.includes(waitingListData[key].waitingList_session_id)) {\n          ids.push(waitingListData[key].waitingList_session_id);\n          names.push(waitingListData[key].waitingList_session);\n        }\n      }\n    }\n\n    return { sessionNames: names, sessionIds: ids };\n  };\n\n  const FC_GetWaitingListChartData = (): {\n    waitingData: number[];\n    placementData: number[];\n    failedData: number[];\n    labels: string[];\n  } => {\n    let waitingDataArray: number[] = [],\n      placementDataArray: number[] = [],\n      failedDataArray: number[] = [],\n      labelArray: string[] = [],\n      labelIds: string[] = [];\n\n    const thisSessions = getDistinctSession(props.waitingListData);\n    thisSessions.sessionIds.forEach((thisSessionsKey) => {\n      let _waitingListData = props.waitingListData.filter(\n        (item) => item.waitingList_session_id === thisSessionsKey\n      );\n      for (const key in _waitingListData) {\n        if (Object.prototype.hasOwnProperty.call(_waitingListData, key)) {\n          const element = _waitingListData[key];\n          const thisPeriod = getPeriodById(\n            props.sessions,\n            element.waitingList_session_id\n          );\n          if (!labelIds.includes(element.waitingList_session_id)) {\n            labelIds.push(element.waitingList_session_id);\n            labelArray.push(\n              thisPeriod ? thisPeriod.session_plan_name : \"Unknown\"\n            );\n            if (props.thisGender !== \"all\") {\n              waitingDataArray.push(\n                _waitingListData.filter(\n                  (item) =>\n                    item.waitingList_session_id ===\n                      element.waitingList_session_id &&\n                    item.waiting_status === WaitingListStatus.WAITING &&\n                    item.gender.toString().toLocaleLowerCase() ===\n                      props.thisGender.toString().toLocaleLowerCase()\n                ).length\n              );\n              placementDataArray.push(\n                _waitingListData.filter(\n                  (item) =>\n                    item.waitingList_session_id ===\n                      element.waitingList_session_id &&\n                    item.waiting_status === WaitingListStatus.PLACED &&\n                    item.gender.toString().toLocaleLowerCase() ===\n                      props.thisGender.toString().toLocaleLowerCase()\n                ).length\n              );\n              failedDataArray.push(\n                _waitingListData.filter(\n                  (item) =>\n                    item.waitingList_session_id ===\n                      element.waitingList_session_id &&\n                    item.waiting_status === WaitingListStatus.PENDING &&\n                    item.gender.toString().toLocaleLowerCase() ===\n                      props.thisGender.toString().toLocaleLowerCase()\n                ).length\n              );\n            } else {\n              waitingDataArray.push(\n                _waitingListData.filter(\n                  (item) =>\n                    item.waitingList_session_id ===\n                      element.waitingList_session_id &&\n                    item.waiting_status === WaitingListStatus.WAITING\n                ).length\n              );\n              placementDataArray.push(\n                _waitingListData.filter(\n                  (item) =>\n                    item.waitingList_session_id ===\n                      element.waitingList_session_id &&\n                    item.waiting_status === WaitingListStatus.PLACED\n                ).length\n              );\n              failedDataArray.push(\n                _waitingListData.filter(\n                  (item) =>\n                    item.waitingList_session_id ===\n                      element.waitingList_session_id &&\n                    item.waiting_status === WaitingListStatus.PENDING\n                ).length\n              );\n            }\n          }\n        }\n      }\n    });\n\n    return {\n      waitingData: waitingDataArray,\n      placementData: placementDataArray,\n      failedData: failedDataArray,\n      labels: labelArray,\n    };\n  };\n\n  return (\n    <section className=\"my-3 max-w-full bg-white\">\n      <div className=\"flex items-center justify-between px-3\">\n        <span className=\"text-gray-600 font-semibold text-xl py-4 px-0\">\n          Waiting list chart\n        </span>\n      </div>\n      <div className=\"mb-4 pb-2 px-3\">\n        <VBarChart\n          labels={FC_GetWaitingListChartData().labels}\n          categoriesLabel={FC_GetWaitingListChartData().labels}\n          dataLabels={false}\n          yaxisText=\"(Applicants)\"\n          tooltipText=\"Applicants\"\n          series={[\n            {\n              name: \"Waiting list\",\n              data: FC_GetWaitingListChartData().waitingData,\n            },\n            {\n              name: \"Pending placement\",\n              data: FC_GetWaitingListChartData().failedData,\n            },\n            {\n              name: \"Confirmed placement\",\n              data: FC_GetWaitingListChartData().placementData,\n            },\n          ]}\n          colors={[\"#469769\", \"#d97724\", \"#4b5563\"]}\n          defaultBar={{\n            borderRadius: 4,\n            horizontal: false,\n            columnWidth: \"95%\",\n            endingShape: \"rounded\",\n          }}\n          chartHeight={props.chartHeight}\n        />\n      </div>\n    </section>\n  );\n};\n\nexport default React.memo(WaitingListChart);\n","import React, { Component } from \"react\";\nimport { FaBookOpen } from \"react-icons/fa\";\nimport { IoIosBriefcase } from \"react-icons/io\";\nimport { IoFilter } from \"react-icons/io5\";\nimport { MdSearch } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  schoolLevelsStoreInterface,\n  loadEducationCategories,\n  PushPopupAlert,\n} from \"../../../actions\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport { getPositions } from \"../../../actions/settings\";\nimport { getWaitingList } from \"../../../actions/waitingList\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport LoadingV2, { LoadingType } from \"../../../components/Loading/LoadingV2\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport {\n  SessionPlanInterface,\n  PositionAPI,\n  education_category,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport {\n  applicantGender,\n  WaitingListDataInterface,\n  WaitingListInterface,\n  WaitingListStatus,\n} from \"../../../interfaces/waitingList\";\nimport { StoreState } from \"../../../reducers\";\nimport { getPositionById } from \"../../../shared/dataTest\";\nimport { DATE, search } from \"../../../utils/functions\";\nimport { getPeriodById } from \"../../Admin/WaitingList/WaitingListReport\";\nimport NoSession from \"../../SessionSettings/NoSession\";\nimport LoadingLabels from \"../ChartComponents/LoadingLabels\";\nimport PieChart from \"../ChartComponents/PieChart\";\nimport ExamDashboardLabels from \"../ExamDashboard/ExamDashboardLabels\";\nimport WaitingListBoardTitle from \"./WaitingListBoardTitle\";\nimport WaitingListChart from \"./WaitingListChart\";\n\nexport type WaitingListChartDataInterface = {\n  title: string;\n  count: {\n    all: WaitingListDataInterface[];\n    waiting: WaitingListDataInterface[];\n    placed: WaitingListDataInterface[];\n    failed: WaitingListDataInterface[];\n  };\n  type: \"male\" | \"female\" | \"all\";\n};\ninterface WaitingListProps {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  systemPositions: PositionAPI[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  waitingList: WaitingListInterface[] | null;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  getWaitingList: Function;\n  getPositions: Function;\n  GetAllSessionPlans: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface WaitingListState {\n  thisPeriod: string;\n  loading: boolean;\n  loadingWaitingList: boolean;\n  thisPosition: PositionAPI | null;\n  selectPosition: boolean;\n  thisEducation: education_category | \"all\";\n  thisGender: \"all\" | \"male\" | \"female\";\n  searchPositionInput: string;\n}\n\nclass _WaitingListDashboard extends Component<\n  WaitingListProps,\n  WaitingListState\n> {\n  constructor(props: WaitingListProps) {\n    super(props);\n\n    this.state = {\n      thisPeriod: \"all\",\n      loading: true,\n      loadingWaitingList: true,\n      thisPosition: null,\n      selectPosition: false,\n      thisEducation: \"all\",\n      thisGender: \"all\",\n      searchPositionInput: \"\",\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingWaitingList = (value: boolean) => {\n    this.setState({ loadingWaitingList: value });\n  };\n\n  setThisPosition = (value: PositionAPI | null) => {\n    this.setState({ thisPosition: value });\n  };\n\n  setSelectPosition = (value: boolean) => {\n    this.setState({ selectPosition: value });\n  };\n\n  setThisEducation = (value: education_category | \"all\") => {\n    this.setState({ thisEducation: value });\n  };\n\n  setThisGender = (value: \"male\" | \"female\" | \"all\") => {\n    this.setState({ thisGender: value });\n  };\n\n  setSearchPositionInput = (value: string) => {\n    this.setState({ searchPositionInput: value });\n  };\n\n  setThisPeriod = (value: string) => {\n    this.setState({ thisPeriod: value });\n  };\n\n  componentDidMount = () => {\n    // LOADING EDUCATION CATEGORY =================================\n    if (\n      this.props.schoolLevels.education_categories === null ||\n      this.props.schoolLevels.education_categories.length === 0\n    ) {\n      this.props.loadEducationCategories(this.setLoading);\n    }\n    // END LOADING EDUCATION CATEGORY =================================\n    // ###################################################################\n    // LOADING APPLICATION SESSION ====================================\n    if (this.props.application_sessions == null) {\n      this.props.GetAllSessionPlans((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (!status) {\n          if (msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n    // ###################################################################\n    // LOADING POSITIONS ====================================\n    if (this.props.systemPositions === null) {\n      this.props.getPositions((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n    // ###################################################################\n    // LOADING WAITING LIST ====================================\n    if (this.state.loadingWaitingList) {\n      this.props.getWaitingList((status: boolean, msg: string) => {\n        if (status === false) {\n          this.setLoadingWaitingList(status);\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n  };\n\n  FC_WaitingListStatus = (\n    WaitingList: WaitingListDataInterface[]\n  ): WaitingListChartDataInterface[] => {\n    let output: WaitingListChartDataInterface[] = [\n      {\n        title: \"All applicants\",\n        count: {\n          all: WaitingList,\n          waiting: WaitingList.filter(\n            (item) => item.waiting_status === WaitingListStatus.WAITING\n          ),\n          placed: WaitingList.filter(\n            (item) => item.waiting_status === WaitingListStatus.PLACED\n          ),\n          failed: WaitingList.filter(\n            (item) => item.waiting_status === WaitingListStatus.PENDING\n          ),\n        },\n        type: \"all\",\n      },\n      {\n        title: \"Male applicants\",\n        count: {\n          all: WaitingList.filter(\n            (item) => item.gender === applicantGender.male\n          ),\n          waiting: WaitingList.filter(\n            (item) =>\n              item.gender === applicantGender.male &&\n              item.waiting_status === WaitingListStatus.WAITING\n          ),\n          placed: WaitingList.filter(\n            (item) =>\n              item.gender === applicantGender.male &&\n              item.waiting_status === WaitingListStatus.PLACED\n          ),\n          failed: WaitingList.filter(\n            (item) =>\n              item.gender === applicantGender.male &&\n              item.waiting_status === WaitingListStatus.PENDING\n          ),\n        },\n        type: \"male\",\n      },\n      {\n        title: \"Female applicants\",\n        count: {\n          all: WaitingList.filter(\n            (item) => item.gender === applicantGender.female\n          ),\n          waiting: WaitingList.filter(\n            (item) =>\n              item.gender === applicantGender.female &&\n              item.waiting_status === WaitingListStatus.WAITING\n          ),\n          placed: WaitingList.filter(\n            (item) =>\n              item.gender === applicantGender.female &&\n              item.waiting_status === WaitingListStatus.PLACED\n          ),\n          failed: WaitingList.filter(\n            (item) =>\n              item.gender === applicantGender.female &&\n              item.waiting_status === WaitingListStatus.PENDING\n          ),\n        },\n        type: \"female\",\n      },\n    ];\n    return output;\n  };\n\n  FC_WaitingListData = (\n    allWaitList: WaitingListInterface[] | null,\n    systemPositions: PositionAPI[] | null\n  ): WaitingListDataInterface[] | null => {\n    if (\n      allWaitList === null ||\n      systemPositions === null ||\n      this.props.application_sessions === null\n    )\n      return null;\n    let arrayNew: WaitingListDataInterface[] = [];\n    // LOOP IN ALL WAITING LIST ONE BY ONE ###########################\n    for (const key in allWaitList) {\n      if (allWaitList[key].user_info) {\n        const element = allWaitList[key];\n        const thisPosition = getPositionById(\n          systemPositions,\n          element.position_id\n        );\n        const thisSession = getPeriodById(\n          this.props.application_sessions,\n          element.session_id\n        );\n        let dataArray: WaitingListDataInterface = {\n          names: element.user_info.fname + \" \" + element.user_info.lname,\n          waitingList_id: element._id,\n          gender:\n            element.user_info.sex === \"M\"\n              ? applicantGender.male\n              : applicantGender.male,\n          national_id: element.n_id,\n          phone: element.phone_number,\n          email: element.email,\n          user_position_marks: Number(element.marks.toFixed(2)),\n          position_id: thisPosition\n            ? thisPosition.position_id\n            : \"Unknown position\",\n          position_title: thisPosition\n            ? thisPosition.position_title\n            : \"Unknown position\",\n          education_category: thisPosition\n            ? thisPosition.education_institute_id.education_category_title\n            : \"\",\n          education_category_id: thisPosition\n            ? thisPosition.education_institute_id.education_institute_id\n            : \"\",\n          waitingList_session: thisSession\n            ? thisSession.session_plan_name\n            : \"Unknown session\",\n          date: DATE(element.createdAt),\n          waiting_status: element.status,\n          status: element.status,\n          waitingList_session_id: element.session_id,\n        };\n        arrayNew.push(dataArray);\n      }\n    }\n    return arrayNew;\n  };\n\n  FC_FilterWaitingList = (\n    allWaitList: WaitingListDataInterface[],\n    waitingListStatus: WaitingListStatus | \"all\",\n    thisSession: string,\n    institute: education_category | \"all\",\n    thisPosition: PositionAPI | null\n  ): WaitingListDataInterface[] => {\n    let result: WaitingListDataInterface[] = allWaitList;\n    if (waitingListStatus !== \"all\") {\n      result = result.filter((item) => item.status === waitingListStatus);\n    }\n\n    if (thisPosition) {\n      result = result.filter(\n        (item) => item.position_id === thisPosition.position_id\n      );\n    }\n\n    if (thisSession !== \"all\") {\n      result = result.filter(\n        (item) => item.waitingList_session_id === thisSession\n      );\n    }\n\n    if (institute !== \"all\") {\n      result = result.filter(\n        (item) => item.education_category === institute.education_category_title\n      );\n    }\n    return result;\n  };\n\n  getWaitingListDataByTitle = (\n    allData: WaitingListChartDataInterface[]\n  ): WaitingListChartDataInterface | undefined => {\n    return allData.find((item) => item.type === this.state.thisGender);\n  };\n\n  displayGenderTitle = (gender: \"male\" | \"female\" | \"all\"): string => {\n    if (gender === \"male\") {\n      return \"All male applicants\";\n    }\n    if (gender === \"female\") {\n      return \"All female applicants\";\n    }\n    return \"All applicants\";\n  };\n\n  render() {\n    if (this.state.loading || this.props.application_sessions === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    if (this.props.application_sessions.length === 0) {\n      return <NoSession />;\n    }\n\n    return (\n      <div>\n        {/* HEADER TITLE */}\n        <WaitingListBoardTitle\n          education_categories={this.props.schoolLevels.education_categories}\n          loading={this.state.loading}\n          loadingEducation={this.state.loading}\n          thisEducation={this.state.thisEducation}\n          setThisEducation={this.setThisEducation}\n          thisPeriod={this.state.thisPeriod}\n          setThisPeriod={this.setThisPeriod}\n          application_sessions={this.props.application_sessions}\n          reportTitle={\"Waiting list Dashboard\"}\n          allEducation={true}\n          setSelectPosition={this.setSelectPosition}\n          thisPosition={this.state.thisPosition}\n        />\n        {/* END HEADER TITLE */}\n\n        {/* ------------------------------------------------------------------------------ */}\n\n        {(this.state.loadingWaitingList || this.props.waitingList === null) && (\n          <section>\n            <LoadingLabels />\n          </section>\n        )}\n\n        {/* ------------------------------------------------------------------------------ */}\n\n        {!this.state.loadingWaitingList && this.props.waitingList !== null && (\n          <section>\n            {/* WAITING LIST ALL STATUS LABELS ======================================= */}\n            {this.FC_WaitingListData(\n              this.props.waitingList,\n              this.props.systemPositions\n            ) &&\n              this.FC_FilterWaitingList(\n                this.FC_WaitingListData(\n                  this.props.waitingList,\n                  this.props.systemPositions\n                )!,\n                \"all\",\n                this.state.thisPeriod,\n                this.state.thisEducation,\n                this.state.thisPosition\n              ) && (\n                <section className=\"my-2\">\n                  <div className=\"text-2xl font-semibold text-gray-600 flex items-center gap-2\">\n                    {this.displayGenderTitle(this.state.thisGender)}{\" \"}\n                    <select\n                      className={`btn bg-white border border-blue-300 text-gray-600 hover:bg-gray-50 text-sm focus:outline-none`}\n                      value={this.state.thisGender}\n                      onChange={(e) =>\n                        this.setThisGender(\n                          e.target.value as \"male\" | \"female\" | \"all\"\n                        )\n                      }\n                    >\n                      {this.FC_WaitingListStatus(\n                        this.FC_FilterWaitingList(\n                          this.FC_WaitingListData(\n                            this.props.waitingList,\n                            this.props.systemPositions\n                          )!,\n                          \"all\",\n                          this.state.thisPeriod,\n                          this.state.thisEducation,\n                          this.state.thisPosition\n                        )\n                      ).map((item, index: number) => (\n                        <option key={item.type + index} value={item.type}>\n                          {item.title}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                  {this.getWaitingListDataByTitle(\n                    this.FC_WaitingListStatus(\n                      this.FC_FilterWaitingList(\n                        this.FC_WaitingListData(\n                          this.props.waitingList,\n                          this.props.systemPositions\n                        )!,\n                        \"all\",\n                        this.state.thisPeriod,\n                        this.state.thisEducation,\n                        this.state.thisPosition\n                      )\n                    )\n                  ) && (\n                    <ExamDashboardLabels\n                      dataLabels={[\n                        {\n                          title: \"Total applicants\",\n                          icon: FaBookOpen,\n                          iconColor: \"blue\",\n                          count: this.getWaitingListDataByTitle(\n                            this.FC_WaitingListStatus(\n                              this.FC_FilterWaitingList(\n                                this.FC_WaitingListData(\n                                  this.props.waitingList,\n                                  this.props.systemPositions\n                                )!,\n                                \"all\",\n                                this.state.thisPeriod,\n                                this.state.thisEducation,\n                                this.state.thisPosition\n                              )\n                            )\n                          )!.count.all.length,\n                        },\n                        {\n                          title: \"Waiting Applicants\",\n                          icon: FaBookOpen,\n                          iconColor: \"green\",\n                          count: this.getWaitingListDataByTitle(\n                            this.FC_WaitingListStatus(\n                              this.FC_FilterWaitingList(\n                                this.FC_WaitingListData(\n                                  this.props.waitingList,\n                                  this.props.systemPositions\n                                )!,\n                                \"all\",\n                                this.state.thisPeriod,\n                                this.state.thisEducation,\n                                this.state.thisPosition\n                              )\n                            )\n                          )!.count.waiting.length,\n                        },\n                        {\n                          title: \"Placed & Not confirmed\",\n                          icon: FaBookOpen,\n                          iconColor: \"yellow\",\n                          count: this.getWaitingListDataByTitle(\n                            this.FC_WaitingListStatus(\n                              this.FC_FilterWaitingList(\n                                this.FC_WaitingListData(\n                                  this.props.waitingList,\n                                  this.props.systemPositions\n                                )!,\n                                \"all\",\n                                this.state.thisPeriod,\n                                this.state.thisEducation,\n                                this.state.thisPosition\n                              )\n                            )\n                          )!.count.failed.length,\n                        },\n                        {\n                          title: \"Placed & Confirmed\",\n                          icon: FaBookOpen,\n                          iconColor: \"gray\",\n                          count: this.getWaitingListDataByTitle(\n                            this.FC_WaitingListStatus(\n                              this.FC_FilterWaitingList(\n                                this.FC_WaitingListData(\n                                  this.props.waitingList,\n                                  this.props.systemPositions\n                                )!,\n                                \"all\",\n                                this.state.thisPeriod,\n                                this.state.thisEducation,\n                                this.state.thisPosition\n                              )\n                            )\n                          )!.count.placed.length,\n                        },\n                      ]}\n                      labelsOnRow={5}\n                    >\n                      <div className=\"flex justify-center\">\n                        <PieChart\n                          options={{\n                            labels: [\n                              \"Waiting list\",\n                              \"Placed list\",\n                              \"Failed exam\",\n                            ],\n                            legend: {\n                              show: false,\n                              position: \"bottom\",\n                              horizontalAlign: \"center\",\n                              fontSize: \"16px\",\n                              itemMargin: {\n                                horizontal: 3,\n                                vertical: 0,\n                              },\n                            },\n                            plotOptions: {\n                              pie: {\n                                donut: {\n                                  labels: {\n                                    show: true,\n                                    name: {\n                                      show: true,\n                                      fontSize: \"16px\",\n                                      //   fontFamily: \"Rubik\",\n                                      color: \"#2564eb\",\n                                      offsetY: -10,\n                                    },\n                                    value: {\n                                      show: true,\n                                      fontSize: \"20px\",\n                                      fontFamily:\n                                        \"Helvetica, Arial, sans-serif\",\n                                      color: \"#2564eb\",\n                                      offsetY: 10,\n                                      formatter: function (val) {\n                                        return val;\n                                      },\n                                    },\n                                    total: {\n                                      show: true,\n                                      label: \"Total\",\n                                      color: \"#2564eb\",\n                                      formatter: function (w) {\n                                        return w.globals.seriesTotals.reduce(\n                                          (a: number, b: number) => {\n                                            return a + b;\n                                          },\n                                          0\n                                        );\n                                      },\n                                    },\n                                  },\n                                },\n                              },\n                            },\n                            colors: [\"#469769\", \"#d97724\", \"#4b5563\"],\n                          }}\n                          series={[\n                            this.getWaitingListDataByTitle(\n                              this.FC_WaitingListStatus(\n                                this.FC_FilterWaitingList(\n                                  this.FC_WaitingListData(\n                                    this.props.waitingList,\n                                    this.props.systemPositions\n                                  )!,\n                                  \"all\",\n                                  this.state.thisPeriod,\n                                  this.state.thisEducation,\n                                  this.state.thisPosition\n                                )\n                              )\n                            )!.count.waiting.length,\n                            this.getWaitingListDataByTitle(\n                              this.FC_WaitingListStatus(\n                                this.FC_FilterWaitingList(\n                                  this.FC_WaitingListData(\n                                    this.props.waitingList,\n                                    this.props.systemPositions\n                                  )!,\n                                  \"all\",\n                                  this.state.thisPeriod,\n                                  this.state.thisEducation,\n                                  this.state.thisPosition\n                                )\n                              )\n                            )!.count.placed.length,\n                            this.getWaitingListDataByTitle(\n                              this.FC_WaitingListStatus(\n                                this.FC_FilterWaitingList(\n                                  this.FC_WaitingListData(\n                                    this.props.waitingList,\n                                    this.props.systemPositions\n                                  )!,\n                                  \"all\",\n                                  this.state.thisPeriod,\n                                  this.state.thisEducation,\n                                  this.state.thisPosition\n                                )\n                              )\n                            )!.count.failed.length,\n                          ]}\n                          width={210}\n                        />\n                      </div>\n                    </ExamDashboardLabels>\n                  )}\n                </section>\n              )}\n            {/* WAITING LIST STATUS ON COUNTRY LEVEL LABELS ======================================= */}\n\n            {/* ===================================================================================== */}\n\n            {/* EXAM PERFORMANCE ON COUNTRY CHART ======================================= */}\n            {this.FC_WaitingListData(\n              this.props.waitingList,\n              this.props.systemPositions\n            ) && (\n              <WaitingListChart\n                waitingListData={this.FC_FilterWaitingList(\n                  this.FC_WaitingListData(\n                    this.props.waitingList,\n                    this.props.systemPositions\n                  )!,\n                  \"all\",\n                  this.state.thisPeriod,\n                  this.state.thisEducation,\n                  this.state.thisPosition\n                )}\n                sessions={this.props.application_sessions}\n                chartHeight={650}\n                thisGender={this.state.thisGender}\n              />\n            )}\n            {/* END EXAM PERFORMANCE ON COUNTRY CHART ======================================= */}\n\n            {/* CHOOSING POSITION MODAL */}\n            {this.state.selectPosition && (\n              <Modal\n                title={\n                  <div className=\"flex flex-row gap-4 items-center\">\n                    <IoFilter className=\"text-5xl text-blue-600\" />\n                    <div className=\"flex flex-col\">\n                      <span className=\"font-bold text-xl text-blue-600\">\n                        Filter by a position\n                      </span>\n                    </div>\n                  </div>\n                }\n                backDrop={true}\n                theme={Themes.default}\n                close={() => {\n                  this.setSelectPosition(false);\n                  this.setSearchPositionInput(\"\");\n                }}\n                backDropClose={true}\n                widthSizeClass={ModalSize.extraLarge}\n                displayClose={true}\n                padding={{ title: true }}\n              >\n                <div className=\"px-2 pb-2\">\n                  {this.props.systemPositions === null ? (\n                    <LoadingV2 type={LoadingType.dark} />\n                  ) : this.props.systemPositions.length === 0 ? (\n                    <div className=\"flex flex-col text-gray-400 items-center justify-center\">\n                      <MdSearch className=\"text-6xl\" />\n                      <div className=\"flex flex-col items-center justify-center\">\n                        <span>No positions found! Please go back!</span>\n                        {/* <button\n                        onClick={() => this.loadPosition()}\n                        className={`btn bg-yellow-100 text-yellow-700 my-4 hover:bg-yellow-200 ${\n                          this.state.loadingPosition && \"animate-pulse\"\n                        }`}\n                        disabled={this.state.loadingPosition}\n                      >\n                        {this.state.loadingPosition ? \"Loading...\" : \"Reload\"}\n                      </button> */}\n                      </div>\n                    </div>\n                  ) : (\n                    <>\n                      <div className=\"flex flex-col\">\n                        <span className=\"text-gray-600 text-xs font-bold\">\n                          Filter by position name\n                        </span>\n                        <input\n                          onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                            this.setSearchPositionInput(e.target.value)\n                          }\n                          type=\"text\"\n                          className=\"mb-4 bg-gray-100 px-3 py-2 rounded\"\n                          placeholder=\"Keyword...\"\n                        />\n                      </div>\n                      <div\n                        onClick={() => {\n                          this.setThisPosition(null);\n                          this.setSelectPosition(false);\n                          this.setSearchPositionInput(\"\");\n                        }}\n                        className=\"bg-white cursor-pointer rounded  px-3 py-2 border border-gray-200 hover:border-blue-500 hover:bg-blue-100 mb-2\"\n                      >\n                        <div className=\"grid lg:grid-cols-12\">\n                          <div className=\"col-span-12 lg:col-span-10\">\n                            <div className=\"flex flex-row items-center gap-3\">\n                              <div>\n                                <IoIosBriefcase className=\"text-4xl md:text-5xl text-blue-600\" />\n                              </div>\n                              <div className=\"flex flex-col\">\n                                <span className=\"text-base lg:text-lg font-bold text-gray-700\">\n                                  All position\n                                </span>\n                              </div>\n                            </div>\n                          </div>\n                          <div className=\"col-span-12 lg:col-span-2 hidden lg:block\">\n                            <div className=\"h-full flex items-center justify-end\">\n                              <div className=\"btn bg-blue-600 text-white float-right\">\n                                Choose\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      {search(\n                        this.props.systemPositions,\n                        this.state.searchPositionInput\n                      ).map((item: PositionAPI, key: number) => (\n                        <div\n                          key={key + 1}\n                          onClick={() => {\n                            this.setThisPosition(item);\n                            this.setSelectPosition(false);\n                            this.setSearchPositionInput(\"\");\n                          }}\n                          className=\"bg-white cursor-pointer rounded  px-3 py-2 border border-gray-200 hover:border-blue-500 hover:bg-blue-100 mb-2\"\n                        >\n                          <div className=\"grid lg:grid-cols-12\">\n                            <div className=\"col-span-12 lg:col-span-10\">\n                              <div className=\"flex flex-row items-center gap-3\">\n                                <div>\n                                  <IoIosBriefcase className=\"text-4xl md:text-5xl text-blue-600\" />\n                                </div>\n                                <div className=\"flex flex-col\">\n                                  <span className=\"text-xs lg:text-sm font-bold text-gray-700\">\n                                    {item.position_title}\n                                  </span>\n                                  <span className=\"text-xs text-gray-500 italic\">\n                                    School level:{\" \"}\n                                    <span\n                                      className=\"text-gray-800 font-light\"\n                                      style={{ fontStyle: \"normal\" }}\n                                    >\n                                      {item.school_level_id.school_level_name}\n                                    </span>\n                                  </span>\n                                  <span className=\"text-xs font-bold text-blue-600 bg-blue-100 w-max px-3 py-1 rounded-full\">\n                                    {\n                                      item.education_institute_id\n                                        .education_category_title\n                                    }\n                                  </span>\n                                </div>\n                              </div>\n                            </div>\n                            <div className=\"col-span-12 lg:col-span-2 hidden lg:block\">\n                              <div className=\"h-full flex items-center justify-end\">\n                                <div className=\"btn bg-blue-600 text-white float-right\">\n                                  Choose\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      ))}\n                    </>\n                  )}\n                </div>\n              </Modal>\n            )}\n            {/* END CHOOSING POSITION MODAL */}\n          </section>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system_settings,\n  sessionPlan,\n  schoolLevels,\n  waitingList,\n}: StoreState): {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  systemPositions: PositionAPI[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  waitingList: WaitingListInterface[] | null;\n} => {\n  return {\n    auth: auth,\n    application_sessions: sessionPlan.allSessionPlans,\n    systemPositions: system_settings.systemPositions,\n    schoolLevels,\n    waitingList,\n  };\n};\n\nexport const WaitingListDashboard = connect(mapStateToProps, {\n  getWaitingList,\n  GetAllSessionPlans,\n  loadEducationCategories,\n  getPositions,\n  PushPopupAlert,\n})(_WaitingListDashboard);\n","import React, { FC, ReactElement, ReactNode } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, System } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { NavToogle, PageHasSubNav } from \"../../actions\";\nimport { MdBrightness1, MdSearch } from \"react-icons/md\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  system: System;\n  PageHasSubNav: Function;\n  NavToogle: Function;\n  children: ReactNode;\n}\n//\ninterface AppState {\n  loading: boolean;\n}\n\nclass _SideNavigation extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount = () => this.props.PageHasSubNav(true);\n  componentWillUnmount = () => this.props.PageHasSubNav(false);\n\n  render() {\n    const isAuthenticated = this.props.auth.isAuthenticated;\n\n    if (isAuthenticated === false) {\n      return null;\n    }\n\n    const navActive = this.props.system.navigation;\n    return (\n      <div\n        className={`fixed w-48 p-1 pr-2 pl-6 text-gray-700 bg-white ${\n          navActive === true ? \"lg:left-16  left-16\" : \" -left-72 lg:left-16\"\n        }  top-0 bottom-0 pt-20 z-30 shadow-lg  transition-all duration-500 ease-in-out overflow-y-auto`}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n}: StoreState): { auth: Auth; system: System } => {\n  return { auth: auth, system: system };\n};\n\nexport const SideNavigation = connect(mapStateToProps, {\n  NavToogle,\n  PageHasSubNav,\n})(_SideNavigation);\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SearchComponentInterface = {\n  data: any[];\n};\n\nexport const Search: FC<SearchComponentInterface> = ({\n  data,\n}): ReactElement => {\n  return (\n    <div className=\"m-1 rounded-md shadow-md border border-blue-400 bg-white p-1 flex \">\n      <label htmlFor=\"search-text\" className=\"inline-block text-2xl\">\n        <MdSearch className=\"inline-block text-blue-400\" />\n      </label>\n      <input\n        type=\"search\"\n        className=\"outline-none bg-transparent flex-1 pl-1\"\n        placeholder=\"Search\"\n        id=\"search-text\"\n      />\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype MainItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const MainItem: FC<MainItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n  return (\n    <section\n      className={`${\n        active === true\n          ? \"bg-blue-500 text-white font-bold\"\n          : \"bg-blue-100 text-blue-800\"\n      } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex cursor-pointer items-center`}\n    >\n      <section className=\"flex-1\">\n        <IconDefined className=\"inline-block mr-1 text-xs\" />\n        <span>{title}</span>\n      </section>\n\n      {count > 0 ? (\n        <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n          {count}\n        </span>\n      ) : null}\n    </section>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemContainerComponentInterface = {\n  children: ReactNode;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const SubItemContainer: FC<SubItemContainerComponentInterface> = ({\n  children,\n}): ReactElement => {\n  return (\n    <div className=\"ml-3 overflow-y-auto border-l-2 border-blue-200 -mt-1 pt-2 mb-2 pl-1 cursor-pointer\">\n      {children}\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n * @important Remenber to use these components inside the <SubItemContainer>...</SubItemContainer>\n */\nexport const SubItem: FC<SubItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n\n  return (\n    <div\n      className={`animate__animated animate__zoomIn animate__faster ${\n        active === true ? \"bg-blue-500 text-white font-bold\" : \" text-blue-800\"\n      } text-blue-800 bg-blue-200 rounded-md px-1 mb-1 flex items-center py-1 font-bold`}\n    >\n      <IconDefined\n        className={`inline-block mr-0.1 text-xs ${\n          active === true ? \"text-white\" : \"\"\n        }`}\n      />\n      <span\n        className={`inline-block pl-1 ${active === true ? \"text-white\" : \"\"}`}\n      >\n        {title}\n      </span>\n      {count >= 1 ? (\n        <span\n          className={`text-sm fint-bold ${active === true ? \"text-white\" : \"\"}`}\n        >\n          {count}\n        </span>\n      ) : null}\n    </div>\n  );\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AccessTaskInterface,\n  PermissionInterface,\n  SystemSettingsInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PositionAPI } from \"../interfaces/position\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// SYSTEM SETTINGS  ==============\nexport interface GetSystemSettingsAction {\n  type: ActionTypes.GET_SYSTEM_SETTINGS;\n  payload: SystemSettingsInterface[];\n}\n\nexport interface DisableSystemSettingsAction {\n  type: ActionTypes.DISABLE_SYSTEM_SETTINGS;\n  payload: {\n    system_setting_id: string;\n    status: \"enabled\" | \"disabled\";\n  };\n}\n\n// ROLE TASKS ACCESS SETTINGS ===================================\nexport interface GetTaskAccessAction {\n  type: ActionTypes.GET_TASK_ACCESS;\n  payload: AccessTaskInterface[];\n}\n\n// POSITIONS SETTINGS ===================================\nexport interface PositionCreateInterface {\n  position_id?: string;\n  position_title: string;\n  position_code: string;\n  description: string;\n  school_level_id: string;\n  subcategory_id: string;\n  education_institute_id: string;\n  courses: string[];\n  requirements: {\n    user_detail_category_id: string;\n    user_detail_subcategory_id: string;\n    position_requirement: {\n      category_subcategory_data_id: string;\n      required: boolean;\n    }[];\n    required: boolean;\n  }[];\n}\nexport interface GetPositionsAction {\n  type: ActionTypes.GET_POSTIONS;\n  payload: PositionAPI[];\n}\n\nexport interface CreatePositionsAction {\n  type: ActionTypes.CREATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface UpdatePositionsAction {\n  type: ActionTypes.UPDATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface DeletePositionSettingAction {\n  type: ActionTypes.DELETE_POSITION;\n  payload: string;\n}\n\nexport interface PublishPositionAction {\n  type: ActionTypes.PUBLISH_POSITION;\n  payload: {\n    position_id: string;\n    status: boolean;\n  };\n}\n\nexport type SystemActionType =\n  | GetSystemSettingsAction\n  | DisableSystemSettingsAction\n  | GetTaskAccessAction\n  | GetPositionsAction\n  | CreatePositionsAction\n  | UpdatePositionsAction\n  | DeletePositionSettingAction\n  | PublishPositionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSystemSettings = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<SystemSettingsInterface[]>(\n        `${API.AUTH}/settings`\n      );\n      dispatch<GetSystemSettingsAction>({\n        type: ActionTypes.GET_SYSTEM_SETTINGS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const disableSystemSetting = (data: {\n  system_setting_id: string;\n  status: \"enabled\" | \"disabled\";\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableSystemSettingsAction>({\n      type: ActionTypes.DISABLE_SYSTEM_SETTINGS,\n      payload: data,\n    });\n  };\n};\n\n// ============================ tasks access =======================\n\nexport const GetTaskAccess = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<\n        {\n          id: string;\n          title: string;\n          key: string;\n          permitted: PermissionInterface;\n        }[]\n      >(`${API.AUTH}/allroleaccess`);\n      let response: AccessTaskInterface[] = res.data.map((data) => ({\n        id: data.id,\n        task: data.title,\n        key: data.key,\n        permitted: data.permitted,\n      }));\n      dispatch<GetTaskAccessAction>({\n        type: ActionTypes.GET_TASK_ACCESS,\n        payload: response,\n      });\n      callback(false, \"\", response);\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// ============================ positions =======================\n\nexport const getPositions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(`${API.APPLICATION}/position`);\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createPosition = (data: PositionCreateInterface) => {\n  console.log({ createPosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreatePositionsAction>({\n      type: ActionTypes.CREATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const updatePosition = (data: PositionCreateInterface) => {\n  console.log({ updatePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdatePositionsAction>({\n      type: ActionTypes.UPDATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const deletePosition = (data: string) => {\n  console.log({ deletePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<DeletePositionSettingAction>({\n      type: ActionTypes.DELETE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const publishPosition = (data: {\n  position_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<PublishPositionAction>({\n      type: ActionTypes.PUBLISH_POSITION,\n      payload: data,\n    });\n  };\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AssignRoleToUserActionInterface,\n  CustomeAccessInterface,\n  UserInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\n\nexport const userPageLimit: number = 30;\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\nexport interface FetchUsersAction {\n  type: ActionTypes.FETCH_USERS_ACCESS;\n  payload: UserAccessInterface;\n}\n\nexport interface BlockUserToSystem {\n  type: ActionTypes.BLOCK_USER_TO_SYSTEM | ActionTypes.UNBLOCK_USER_TO_SYSTEM;\n  payload: { id: string; page: number };\n}\n\nexport interface AssignRoleToUserAction {\n  type: ActionTypes.ASSIGN_ROLE_TO_USER;\n  payload: { data: AssignRoleToUserActionInterface; page: number };\n}\n\nexport interface CustomizeUserAccessAction {\n  type: ActionTypes.CUSTOMIZE_USER_ACCESS;\n  payload: { data: CustomeAccessInterface; page: number };\n}\n\nexport interface ResetUserAccessAction {\n  type: ActionTypes.RESET_USER_ACCESS;\n  payload: { user_id: string; page: number };\n}\n\nexport type fetchUserAccessInterface = {\n  users: UserInterface[] | null;\n  next: {\n    page: number;\n    limit: number;\n  } | null;\n  previous: {\n    page: number;\n    limit: number;\n  } | null;\n  total_users: number;\n};\n\nexport type UserAccessInterface = {\n  users: { data: UserInterface[]; page: number }[] | null;\n  next: {\n    page: number;\n    limit: number;\n  } | null;\n  previous: {\n    page: number;\n    limit: number;\n  } | null;\n  total_users: number;\n};\n\nexport enum documentValidationStatus {\n  waiting = \"waiting\",\n  approved = \"approved\",\n  rejected = \"rejected\",\n}\n\nexport interface VerifyDocumentInterface {\n  user_id: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date?: string;\n  };\n  in_education: boolean;\n  disability: boolean;\n}\n\nexport type AccessUserActionType =\n  | FetchUsersAction\n  | BlockUserToSystem\n  | AssignRoleToUserAction\n  | CustomizeUserAccessAction\n  | ResetUserAccessAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const fetchUserAccess = (page: number, callback?: Function) => {\n  callback && callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<fetchUserAccessInterface>(\n        `${API.AUTH}/users?page=${page}&limit=${userPageLimit}`\n      );\n      console.log(\"====================================\");\n      console.log({ fetchUserAccess: res });\n      console.log(\"====================================\");\n      dispatch<FetchUsersAction>({\n        type: ActionTypes.FETCH_USERS_ACCESS,\n        payload: {\n          users: [{ data: res.data.users!, page: page }],\n          next: res.data.next,\n          previous: res.data.previous,\n          total_users: res.data.total_users,\n        },\n      });\n      callback && callback(false, \"\", res.data.users);\n    } catch (error) {\n      console.error({ user_error: error });\n      callback && callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const blockUserToSystem = (user_id: string, page: number) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<BlockUserToSystem>({\n      type: ActionTypes.BLOCK_USER_TO_SYSTEM,\n      payload: { id: user_id, page },\n    });\n  };\n};\n\nexport const unBlockUserToSystem = (user_id: string, page: number) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<BlockUserToSystem>({\n      type: ActionTypes.UNBLOCK_USER_TO_SYSTEM,\n      payload: { id: user_id, page },\n    });\n  };\n};\n\nexport const assignRoleToUserAccess = (\n  data: AssignRoleToUserActionInterface,\n  page: number\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<AssignRoleToUserAction>({\n      type: ActionTypes.ASSIGN_ROLE_TO_USER,\n      payload: { data, page },\n    });\n  };\n};\n\nexport const customizeUserAccess = (\n  data: CustomeAccessInterface,\n  page: number\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CustomizeUserAccessAction>({\n      type: ActionTypes.CUSTOMIZE_USER_ACCESS,\n      payload: { data, page },\n    });\n  };\n};\n\nexport const resetUserAccess = (data: string, page: number) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<ResetUserAccessAction>({\n      type: ActionTypes.RESET_USER_ACCESS,\n      payload: { user_id: data, page },\n    });\n  };\n};\n","import React from \"react\";\nimport { MdInfoOutline } from \"react-icons/md\";\n\nconst NoSession = () => {\n  return (\n    <div className=\"my-5\">\n      <div className=\"bg-yellow-100 rounded flex flex-col items-center justify-center p-6 my-8 text-yellow-900 border border-yellow-900\">\n        <MdInfoOutline className=\"text-6xl md:text-9xl\" />\n        <div className=\"text-center flex flex-col\">\n          <span className=\"text-2xl md:text-4xl font-extrabold\">\n            No session available\n          </span>\n          <span className=\"text-lg\">\n            Please Wait for the system to publish the sessions or contact the\n            administrator\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NoSession;\n","import React, { Fragment, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { SessionPlanInterface } from \"../../../interfaces\";\nimport { course } from \"../../../interfaces/course\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport { ExamDoneAndRemainingByPeriodInterface } from \"../../../interfaces/reports\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { DATE, sortThisArray } from \"../../../utils/functions\";\n// import searchExamData from \"../../../utils/search\";\nimport { getPeriodById } from \"./ExamReport\";\n\n// EXCEL FILE FUNCTIONS ================================\nexport interface ExaminationProgressToPrintInterface {\n  course_id: number;\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string;\n  exam_period: string;\n  exam_date: string;\n  exam_time: string;\n  exam_duration: string;\n  exam_status: string;\n}\n\nexport enum ExaminationProgressReportContentKeyInterface {\n  COURSER_NAME = \"course_name\",\n  COURSE_CODE = \"course_code\",\n  SCHOOL_LEVEL = \"school_levels\",\n  PERIOD = \"exam_period\",\n  DATE = \"exam_date\",\n  TIME = \"exam_time\",\n  DURATION = \"exam_duration\",\n  STATUS = \"exam_status\",\n}\n\nexport interface ExaminationProgressReportContentInterface {\n  key: ExaminationProgressReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n\nexport const examinationProgressIsChangeAllowed = (\n  key: ExaminationProgressReportContentKeyInterface\n): boolean => {\n  if (\n    key === ExaminationProgressReportContentKeyInterface.COURSER_NAME ||\n    key === ExaminationProgressReportContentKeyInterface.COURSE_CODE ||\n    key === ExaminationProgressReportContentKeyInterface.PERIOD ||\n    key === ExaminationProgressReportContentKeyInterface.STATUS\n  ) {\n    return false;\n  }\n  return true;\n};\n\nexport const defaultExaminationProgressContent: ExaminationProgressReportContentInterface[] =\n  [\n    {\n      key: ExaminationProgressReportContentKeyInterface.COURSER_NAME,\n      title: \"Course names\",\n      status: true,\n    },\n    {\n      key: ExaminationProgressReportContentKeyInterface.COURSE_CODE,\n      title: \"Course code\",\n      status: true,\n    },\n    {\n      key: ExaminationProgressReportContentKeyInterface.SCHOOL_LEVEL,\n      title: \"School levels\",\n      status: true,\n    },\n    {\n      key: ExaminationProgressReportContentKeyInterface.PERIOD,\n      title: \"Exam period\",\n      status: true,\n    },\n    {\n      key: ExaminationProgressReportContentKeyInterface.DATE,\n      title: \"Exam date\",\n      status: true,\n    },\n    {\n      key: ExaminationProgressReportContentKeyInterface.TIME,\n      title: \"Exam time\",\n      status: true,\n    },\n    {\n      key: ExaminationProgressReportContentKeyInterface.DURATION,\n      title: \"Exam duration\",\n      status: true,\n    },\n    {\n      key: ExaminationProgressReportContentKeyInterface.STATUS,\n      title: \"Exam Status\",\n      status: true,\n    },\n  ];\n\n// END EXCEL FILE FUNCTIONS ================================\n\nexport const displayStatus = (status: string): string => {\n  if (status === \"Done\") {\n    return \"Completed\";\n  }\n  if (status === \"Editing\") {\n    return \"In exam\";\n  }\n  return status;\n};\n\nexport interface examProgressStateInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n  exam: ExamItemResponse | null;\n  preparation_status: string;\n}\n\nexport const FC_reportDoneExamList = (\n  allCourses: course[],\n  allExams: ExamItemResponse[],\n  doneExams: ExamDoneAndRemainingByPeriodInterface[]\n): examProgressStateInterface[] => {\n  let result: examProgressStateInterface[] = [],\n    ids: string[] = [];\n  for (const key in allExams) {\n    if (Object.prototype.hasOwnProperty.call(allExams, key)) {\n      if (ids.includes(allExams[key].id)) continue;\n      ids.push(allExams[key].id);\n      let courser = allCourses.find(\n        (item) => item.course_id === allExams[key].course\n      );\n      if (courser) {\n        let doneExam = doneExams.find(\n          (item) =>\n            item.course === allExams[key].course &&\n            item.period === allExams[key].period\n        );\n        result.push({\n          course_name: courser.course_name,\n          course_code: courser.course_code,\n          description: courser.description,\n          school_levels: courser.school_levels,\n          course_id: courser.course_id,\n          exam: allExams[key],\n          preparation_status: doneExam ? doneExam.exam_status : \"remaining\",\n        });\n      }\n    }\n  }\n  return result;\n};\n\nexport const FC_reportDoneExamListFilter = (\n  thisList: examProgressStateInterface[],\n  thisValue: \"all\" | \"Done\" | \"Active\"\n): examProgressStateInterface[] => {\n  if (thisValue === \"all\") {\n    return thisList;\n  } else {\n    return thisList.filter((item) => item.preparation_status === thisValue);\n  }\n};\n\nexport const searchExamData = (\n  objList: examProgressStateInterface[],\n  text: string\n): examProgressStateInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (\n        prop === \"course_name\" ||\n        prop === \"course_code\" ||\n        prop === \"preparation_status\"\n      ) {\n        flag =\n          product[prop].toString().toLowerCase().indexOf(text.toLowerCase()) >\n          -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n};\n\ntype DoneExamListProps = {\n  loading: boolean;\n  examsListData: ExamItemResponse[] | null;\n  courseListData: course[] | null;\n  thisPeriod: SessionPlanInterface[];\n  doneExamsData: ExamDoneAndRemainingByPeriodInterface[] | null;\n\n  // for filter purpose =============================\n  filterExamProgress: \"all\" | \"Done\" | \"Active\";\n};\n\nconst DoneExamList: React.FC<DoneExamListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const [isSorted, setIsSorted] = useState<boolean>(false);\n  const [sortProperty, setSortProperty] = useState<string>(\"\");\n  const [sortOrder, setSortOrder] = useState<\"ASC\" | \"DESC\">(\"ASC\");\n\n  const setSort = (thisProperty: string) => {\n    if (sortProperty === thisProperty && sortOrder === \"ASC\") {\n      setSortOrder(\"DESC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    } else {\n      setSortOrder(\"ASC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    }\n  };\n\n  return (\n    <Fragment>\n      <div className=\"bg-white my-4\">\n        <div className=\"w-full px-2 py-2\">\n          <input\n            onChange={(e) => setSearchInput(e.target.value)}\n            type=\"text\"\n            value={searchInput}\n            placeholder=\"Search...\"\n            className=\"w-full bg-gray-100 py-2 px-3 rounded\"\n            disabled={\n              props.courseListData &&\n              props.examsListData &&\n              props.doneExamsData &&\n              FC_reportDoneExamListFilter(\n                FC_reportDoneExamList(\n                  props.courseListData,\n                  props.examsListData,\n                  props.doneExamsData\n                ),\n                props.filterExamProgress\n              ).length <= 0\n                ? true\n                : false\n            }\n          />\n        </div>\n        <table className=\"w-full shadow\" id=\"report_content\">\n          <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n            <tr>\n              <td className=\"px-2 py-2\">#</td>\n              <td\n                className=\"px-2 py-2 cursor-pointer\"\n                onClick={() => setSort(\"course_name\")}\n              >\n                <div className=\"flex items-center gap-1\">\n                  Course <BiSort />\n                </div>\n              </td>\n              <td className=\"px-2 py-2\">Exam date</td>\n              <td className=\"px-2 py-2\">Exam time</td>\n              <td className=\"px-2 py-2\">Exam duration</td>\n              <td className=\"px-2 py-2\">Exam Period</td>\n              <td\n                className=\"px-2 py-2 cursor-pointer\"\n                onClick={() => setSort(\"preparation_status\")}\n              >\n                <div className=\"flex items-center gap-1\">\n                  Exam Status <BiSort />\n                </div>\n              </td>\n            </tr>\n          </thead>\n          <tbody>\n            {props.courseListData === null || props.loading ? (\n              <tr>\n                <td colSpan={7} className=\"px-2 py-2\">\n                  <Loading />\n                </td>\n              </tr>\n            ) : props.examsListData &&\n              props.doneExamsData &&\n              FC_reportDoneExamListFilter(\n                FC_reportDoneExamList(\n                  props.courseListData,\n                  props.examsListData,\n                  props.doneExamsData\n                ),\n                props.filterExamProgress\n              ).length <= 0 ? (\n              <tr>\n                <td colSpan={7} className=\"px-2 py-2 text-center\">\n                  No Exam list available!\n                </td>\n              </tr>\n            ) : (\n              props.examsListData &&\n              props.doneExamsData &&\n              sortThisArray(\n                isSorted,\n                searchExamData(\n                  FC_reportDoneExamListFilter(\n                    FC_reportDoneExamList(\n                      props.courseListData,\n                      props.examsListData,\n                      props.doneExamsData\n                    ),\n                    props.filterExamProgress\n                  ),\n                  searchInput\n                ),\n                sortProperty,\n                sortOrder\n              ).map((item, i) => (\n                <tr\n                  key={i + 1}\n                  className={`${\n                    item.preparation_status === \"Done\"\n                      ? \"bg-blue-50\"\n                      : \"bg-white\"\n                  } text-gray-600 hover:bg-blue-100 hover:text-blue-700 border-b border-gray-300 hover:border-blue-500 text-sm`}\n                >\n                  <td className=\"px-2 py-2\">{i + 1}</td>\n                  <td className=\"px-2 py-2\">\n                    {capitalizeFirstLetter(item.course_name)} (\n                    <span className=\"font-semibold\">{item.course_code}</span>)\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam ? DATE(item.exam.exam_date) : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam ? item.exam.start_time : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam ? item.exam!.duration + \" min\" : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam\n                      ? getPeriodById(props.thisPeriod, item.exam.period)\n                        ? getPeriodById(props.thisPeriod, item.exam.period)!\n                            .session_plan_name\n                        : \"-\"\n                      : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {capitalizeFirstLetter(\n                      displayStatus(item.preparation_status)\n                    )}\n                  </td>\n                </tr>\n              ))\n            )}\n          </tbody>\n        </table>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default React.memo(DoneExamList);\n","import React from \"react\";\n\ntype TableLoadingProps = {\n  cols: number;\n};\nconst TableLoading: React.FC<TableLoadingProps> = (props) => {\n  const displayCols = (): JSX.Element[] => {\n    let colsArray: number[] = [];\n    for (let index = 0; index < props.cols; index++) {\n      colsArray.push(index);\n    }\n    let result = colsArray.map((element) => {\n      return (\n        <td className=\"p-3 text-center whitespace-nowrap\" key={element}>\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      );\n    });\n\n    return result;\n  };\n  return (\n    <>\n      <tr className=\"border-b border-gray-200\" key={228}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={22648}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={229768}>\n        {displayCols()}\n      </tr>\n    </>\n  );\n};\n\nexport default TableLoading;\n","import { ApexOptions } from \"apexcharts\";\nimport React, { useEffect, useState } from \"react\";\nimport Chart from \"react-apexcharts\";\n\ntype VBarCharPropstInterface = {\n  labels: string[];\n  categoriesLabel: any;\n  bar?: {\n    borderRadius: number;\n    horizontal: boolean;\n    columnWidth: string;\n    endingShape: string;\n  };\n  dataLabels: boolean;\n  yaxisText: string;\n  tooltipText: string;\n  series: {\n    name: string;\n    data: number[];\n  }[];\n  defaultBar?: {\n    borderRadius: number;\n    horizontal: boolean;\n    columnWidth: string;\n    endingShape: string;\n  };\n  colors?: any[];\n  title?: {\n    text: string;\n    align: string;\n    margin: number;\n    offestY: number;\n    style: {\n      fontSize: string;\n    };\n  };\n  stacked?: boolean;\n  FC_LoadSelected?: (labelIndex: number, seriesIndex: number) => void;\n  chartHeight?: number;\n};\n\nconst defaultBar = {\n  borderRadius: 4,\n  horizontal: false,\n  columnWidth: \"95%\",\n  endingShape: \"rounded\",\n};\n\nconst VBarChart: React.FC<VBarCharPropstInterface> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [options, setOptions] = useState<ApexOptions>({\n    chart: {\n      events: {\n        dataPointSelection: (event, chartContext, config) => {\n          console.log({\n            labelClicked: config.w.config.labels[config.dataPointIndex],\n            // seriesClicked: config.w.config.series[config.dataPointIndex],\n          });\n          if (props.FC_LoadSelected) {\n            props.FC_LoadSelected(config.dataPointIndex, config.seriesIndex);\n          }\n          // console.log(config.seriesIndex);\n          // console.log(config.dataPointIndex);\n        },\n      },\n      stacked: props.stacked ? props.stacked : false,\n    },\n    plotOptions: {\n      bar: props.defaultBar ? props.defaultBar : defaultBar,\n    },\n    labels: props.labels,\n    dataLabels: {\n      enabled: true,\n    },\n    xaxis: {\n      labels: {\n        rotate: -45,\n      },\n      categories: props.categoriesLabel,\n      tickPlacement: \"on\",\n    },\n    yaxis: {\n      title: {\n        text: props.yaxisText,\n      },\n    },\n    fill: {\n      opacity: 1,\n    },\n    tooltip: {\n      y: {\n        formatter: function (val: number) {\n          return val + \" \" + props.tooltipText;\n        },\n      },\n    },\n    grid: {\n      padding: {\n        left: 30, // or whatever value that works\n        right: 30, // or whatever value that works\n      },\n    },\n    noData: {\n      text: \"No data found\",\n      align: \"center\",\n      verticalAlign: \"middle\",\n    },\n  });\n\n  useEffect(() => {\n    if (props.colors && props.colors.length > 0 && loading) {\n      setOptions({\n        chart: {\n          stacked: props.stacked ? props.stacked : false,\n          events: {\n            dataPointSelection: (event, chartContext, config) => {\n              console.log({\n                chartClicked: config.w.config.labels[config.dataPointIndex],\n              });\n              if (props.FC_LoadSelected) {\n                props.FC_LoadSelected(\n                  config.dataPointIndex,\n                  config.seriesIndex\n                );\n              }\n            },\n          },\n          zoom: {\n            enabled: true,\n            autoScaleYaxis: true,\n          },\n        },\n        plotOptions: {\n          bar: props.defaultBar ? props.defaultBar : defaultBar,\n        },\n        labels: props.labels,\n        dataLabels: {\n          enabled: true,\n        },\n        xaxis: {\n          labels: {\n            rotate: -45,\n          },\n          categories: props.categoriesLabel,\n          tickPlacement: \"on\",\n        },\n        yaxis: {\n          title: {\n            text: props.yaxisText,\n          },\n        },\n        fill: {\n          opacity: 1,\n        },\n        tooltip: {\n          y: {\n            formatter: function (val: number) {\n              return val + \" \" + props.tooltipText;\n            },\n          },\n        },\n        grid: {\n          padding: {\n            left: 30, // or whatever value that works\n            right: 30, // or whatever value that works\n          },\n        },\n        noData: {\n          text: \"No data found\",\n          align: \"center\",\n          verticalAlign: \"middle\",\n        },\n        colors: props.colors,\n      });\n    } else if (loading) {\n      setOptions({\n        chart: {\n          stacked: props.stacked ? props.stacked : false,\n          events: {\n            dataPointSelection: (event, chartContext, config) => {\n              console.log({\n                labelClicked: config.w.config.labels[config.dataPointIndex],\n                // seriesClicked: config.w.config.series[config.dataPointIndex],\n              });\n              if (props.FC_LoadSelected) {\n                props.FC_LoadSelected(\n                  config.dataPointIndex,\n                  config.seriesIndex\n                );\n              }\n              // console.log(config.seriesIndex);\n              // console.log(config.dataPointIndex);\n            },\n          },\n          zoom: {\n            enabled: true,\n            autoScaleYaxis: true,\n          },\n        },\n        plotOptions: {\n          bar: props.defaultBar ? props.defaultBar : defaultBar,\n        },\n        labels: props.labels,\n        dataLabels: {\n          enabled: true,\n        },\n        xaxis: {\n          labels: {\n            rotate: -45,\n          },\n          categories: props.categoriesLabel,\n          tickPlacement: \"on\",\n        },\n        yaxis: {\n          title: {\n            text: props.yaxisText,\n          },\n        },\n        fill: {\n          opacity: 1,\n        },\n        tooltip: {\n          y: {\n            formatter: function (val: number) {\n              return val + \" \" + props.tooltipText;\n            },\n          },\n        },\n        grid: {\n          padding: {\n            left: 30, // or whatever value that works\n            right: 30, // or whatever value that works\n          },\n        },\n        noData: {\n          text: \"No data found\",\n          align: \"center\",\n          verticalAlign: \"middle\",\n        },\n      });\n    }\n    setLoading(false);\n  }, [loading, options, props]);\n\n  if (loading) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading Data...\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"w-full\">\n      <Chart\n        options={options}\n        series={props.series}\n        type=\"bar\"\n        width=\"100%\"\n        height={props.chartHeight ? props.chartHeight : undefined}\n      />\n    </div>\n  );\n};\n\nexport default React.memo(VBarChart);\n","import React, { Component } from \"react\";\nimport { BiFilterAlt } from \"react-icons/bi\";\nimport { FiEdit } from \"react-icons/fi\";\nimport { MdRadioButtonChecked, MdRadioButtonUnchecked } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  schoolLevelsStoreInterface,\n  setSelectedPeriod,\n  loadCourses,\n  loadExamsList,\n  loadEducationCategories,\n  loadDoneExam,\n  loadSchoolLevels,\n  loadPerfomranceExam,\n  loadCandidatesExamPerformance,\n  setSelectedEducationCategory,\n  PushPopupAlert,\n  FilterParamType,\n  ReportGetCandidatePerformanceSortTypes,\n} from \"../../../actions\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport {\n  generatePDF,\n  reportSettingsInterface,\n} from \"../../../components/DownloadPDF/rest\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { SideNavigation } from \"../../../components/Navigation/SideNavigation\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  course,\n  education_category,\n  ReportUserExamStatus,\n  school_level,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport {\n  ExamItemResponse,\n  PrepareExamStatus,\n  QuestionNumberFormat,\n} from \"../../../interfaces/prepare_exam\";\nimport { StoreState } from \"../../../reducers\";\nimport { ExamReportReducerType } from \"../../../reducers/exam_report\";\nimport { SessionPlanReducerInterface } from \"../../../reducers/session\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { DATE, timestampToDate } from \"../../../utils/functions\";\nimport NoSession from \"../../SessionSettings/NoSession\";\nimport CandiadtePerformancePerDistrict, {\n  FC_CandiadtePerformancePerDistrictFilter,\n} from \"./CandiadtePerformancePerDistrict\";\nimport CandidatePerformance, {\n  CandidateExamPerformanceToPrintInterface,\n  CandidateExamPerformanceReportContentInterface,\n  defaultCandidateExamPerformanceContent,\n  candidatePerfomranceStateInterface,\n  FC_reportCandidatePerformanceData,\n} from \"./CandidatePerformance\";\nimport DoneExamList, {\n  ExaminationProgressToPrintInterface,\n  ExaminationProgressReportContentInterface,\n  defaultExaminationProgressContent,\n  displayStatus,\n  examProgressStateInterface,\n  FC_reportDoneExamList,\n} from \"./DoneExamList\";\nimport ExamList, {\n  ExamPreparationToPrintInterface,\n  examPreparationReportContentInterface,\n  defaultExamPreparationReportContent,\n  examPreparationStateInterface,\n  FC_reportExamList,\n} from \"./ExamList\";\nimport ExamPerformance, {\n  ExamPerformanceToPrintInterface,\n  examPerformanceReportContentInterface,\n  defaultExamPerformanceContent,\n  examPerformanceStateInterface,\n  FC_reportExamPerformanceData,\n} from \"./ExamPerformance\";\nimport ExamPerformancePerDistrict, {\n  FC_ExamPerformancePerDistrictPropsData,\n} from \"./ExamPerformancePerDistrict\";\nimport ExamReportFilters from \"./ExamReportFilters\";\nimport ExamReportModals, { ModalForTypes } from \"./ExamReportModals\";\nimport ExamReportTitle from \"./ExamReportTitle\";\n\nexport interface reportCourseInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n  exam: {\n    questions: string[];\n    status: number;\n    period: string;\n    course: string;\n    exam_status: PrepareExamStatus;\n    termes: string;\n    questions_per_page: number;\n    exam_date: string;\n    start_time: string;\n    duration: number;\n    number_format: QuestionNumberFormat;\n    discription: string;\n    createdAt: string;\n    updatedAt: string;\n    id: string;\n  };\n}\n\nexport const getExamByCourseId = (\n  allExams: ExamItemResponse[],\n  course_id: string\n): ExamItemResponse | undefined => {\n  return allExams.find((item) => item.course === course_id);\n};\n\nexport const getPeriodById = (\n  periods: SessionPlanInterface[],\n  period_id: string\n): SessionPlanInterface | undefined => {\n  return periods.find((item) => item.session_plan_id === period_id);\n};\n\nexport const loadAllExams = (\n  examsList: ExamItemResponse[] | null,\n  selected_period: SessionPlanInterface | null\n): ExamItemResponse[] | null => {\n  let result: ExamItemResponse[] | null = examsList;\n  if (result && selected_period) {\n    result = result.filter(\n      (item) => item.period === selected_period?.session_plan_id\n    );\n  } else {\n    result = examsList;\n  }\n  return result;\n};\n\n// TYPES OF REPORTS ======================================\nexport enum reportTitleType {\n  APPLICANTS_PERFORMANCE = \"Exam report\",\n  EXAM_PREPARATION = \"List of prepared and not prepared exams\",\n  EXAM_PERFORMANCE = \"Exam performance\",\n  EXAMINATION_PROGRESS = \"List of complete & remaining exams\",\n  EXAM_DISTRICT_PERFORMANCE = \"Top 30 exams passed in\", // ADD DISTRICT NAME EX: Muhanga District\n  APPLICANTS_DISTRICT_PERFORMANCE = \"Top 30 applicants performance\", // ADD DISTRICT NAME EX: Muhanga District && EXAM NAME EX: Physics\n}\n\ninterface ExamReportProps {\n  auth: Auth;\n  periods: SessionPlanReducerInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n  courses: course[] | null;\n  examsList: ExamItemResponse[] | null;\n  adminExamReport: ExamReportReducerType;\n  GetAllSessionPlans: Function;\n  loadEducationCategories: Function;\n  setSelectedEducationCategory: (\n    education_category: education_category\n  ) => void;\n  loadCourses: (callback: (loading: boolean) => void) => void;\n  loadExamsList: (callback: (loading: boolean) => void) => void;\n  loadDoneExam: (period_id: string, callback: Function) => void;\n  loadPerfomranceExam: (period_id: string, callback: Function) => void;\n  loadSchoolLevels: (callback: (loading: boolean) => void) => void;\n  loadCandidatesExamPerformance: (\n    dataBody: FilterParamType | null,\n    callback: Function\n  ) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface ExamReportState {\n  loading: boolean;\n  loadingCourses: boolean;\n  loadingExams: boolean;\n  downloading: boolean;\n  loadingDoneExam: boolean;\n  loadingCandidatesExamPerformance: boolean;\n  loadingExamPerformance: boolean;\n  loadingSettings: boolean;\n\n  // FILTER STATES =======================================\n  filterPreparation: \"prepared\" | \"not prepared\" | \"all\";\n  filterExamProgress: \"Done\" | \"Active\" | \"all\";\n  filterApplicantPerformance: ReportUserExamStatus | \"all\";\n  // END FILTER STATES =======================================\n\n  selectPeriod: boolean;\n  generateReportModal: {\n    reportType: \"EXCEL\" | \"PDF\";\n    status: boolean;\n  } | null;\n  districtModal: boolean;\n  selected_period: SessionPlanInterface | null;\n\n  // GENERATE EXCEL REPORT =======================================\n  // WHAT TO PRINT ########################################\n  reportTitle: reportTitleType;\n  // WHAT TITLE TO PRINT ########################################\n  excelReportTitle: string;\n  // SET DEFAULT CONTENT ########################################\n  // ############### EXAM PREPARATION ######################\n  examsToPrint: ExamPreparationToPrintInterface[] | null;\n  examPreparationReportContent: examPreparationReportContentInterface[];\n  // ############### EXAM PERFORMANCE ######################\n  examPerformanceToPrint: ExamPerformanceToPrintInterface[] | null;\n  examPerformanceReportContent: examPerformanceReportContentInterface[];\n  // ############### TOP 30 EXAM PERFORMANCE ######################\n  exam30PerformanceToPrint: ExamPerformanceToPrintInterface[] | null;\n  exam30PerformanceReportContent: examPerformanceReportContentInterface[];\n  // ############### EXAMINATION PROGRESS ######################\n  examinationProgressToPrint: ExaminationProgressToPrintInterface[] | null;\n  examinationProgressReportContent: ExaminationProgressReportContentInterface[];\n  // ############### CANDIDATE EXAM PERFORMANCE ######################\n  candidateExamPerformanceToPrint:\n    | CandidateExamPerformanceToPrintInterface[]\n    | null;\n\n  candidateExamPerformanceReportContent: CandidateExamPerformanceReportContentInterface[];\n  // ############### CANDIDATE EXAM PERFORMANCE ######################\n\n  candidate30ExamPerformanceToPrint:\n    | CandidateExamPerformanceToPrintInterface[]\n    | null;\n\n  candidate30ExamPerformanceReportContent: CandidateExamPerformanceReportContentInterface[];\n  // END GENERATE EXCEL REPORT =======================================\n}\n\nclass _ExamReport extends Component<ExamReportProps, ExamReportState> {\n  constructor(props: ExamReportProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingCourses: true,\n      loadingExams: true,\n      downloading: false,\n      loadingDoneExam: true,\n      loadingCandidatesExamPerformance: true,\n      loadingExamPerformance: true,\n      loadingSettings: true,\n      selectPeriod: false,\n      districtModal: false,\n\n      // FILTER STATES =======================================\n      filterPreparation: \"all\",\n      filterExamProgress: \"all\",\n      filterApplicantPerformance: \"all\",\n      // END FILTER STATES =======================================\n\n      generateReportModal: null,\n      selected_period: null,\n\n      // GENERATE EXCEL REPORT =======================================\n      // WHAT TO PRINT ########################################\n      reportTitle: reportTitleType.APPLICANTS_PERFORMANCE,\n      // WHAT TITLE TO PRINT ########################################\n      excelReportTitle: reportTitleType.APPLICANTS_PERFORMANCE,\n      // SET DEFAULT CONTENT ########################################\n      // ############### EXAM PREPARATION ######################\n      examsToPrint: null,\n      examPreparationReportContent: defaultExamPreparationReportContent,\n      // ############### EXAM PERFORMANCE ######################\n      examPerformanceToPrint: null,\n      examPerformanceReportContent: defaultExamPerformanceContent,\n      // ############### TOP 30 EXAM PERFORMANCE ######################\n      exam30PerformanceToPrint: null,\n      exam30PerformanceReportContent: defaultExamPerformanceContent,\n      // ############### EXAMINATION PROGRESS ######################\n      examinationProgressToPrint: null,\n      examinationProgressReportContent: defaultExaminationProgressContent,\n      // ############### CANDIDATE EXAM PERFORMANCE ######################\n      candidateExamPerformanceToPrint: null,\n\n      candidateExamPerformanceReportContent:\n        defaultCandidateExamPerformanceContent,\n      // ############### CANDIDATE EXAM PERFORMANCE ######################\n\n      candidate30ExamPerformanceToPrint: null,\n\n      candidate30ExamPerformanceReportContent:\n        defaultCandidateExamPerformanceContent,\n      // END GENERATE EXCEL REPORT =======================================\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingCourses = (value: boolean) => {\n    this.setState({ loadingCourses: value });\n  };\n\n  setLoadingExams = (value: boolean) => {\n    this.setState({ loadingExams: value });\n  };\n\n  setDownloading = (value: boolean) => {\n    this.setState({ downloading: value });\n  };\n\n  setLoadingDoneExam = (value: boolean) => {\n    this.setState({ loadingDoneExam: value });\n  };\n\n  setLoadingCandidatesExamPerformance = (value: boolean) => {\n    this.setState({ loadingCandidatesExamPerformance: value });\n  };\n\n  setLoadingExamPerformance = (value: boolean) => {\n    this.setState({ loadingExamPerformance: value });\n  };\n\n  setLoadingSettings = (value: boolean) => {\n    this.setState({ loadingSettings: value });\n  };\n\n  setSelectPeriod = (value: boolean) => {\n    this.setState({ selectPeriod: value });\n  };\n\n  setDistrictModal = (value: boolean) => {\n    this.setState({ districtModal: value });\n  };\n\n  setFilterPreparation = (value: \"prepared\" | \"not prepared\" | \"all\") => {\n    this.setState({ filterPreparation: value });\n  };\n\n  setFilterExamProgress = (value: \"Done\" | \"Active\" | \"all\") => {\n    this.setState({ filterExamProgress: value });\n  };\n\n  setFilterApplicantPerformance = (value: ReportUserExamStatus | \"all\") => {\n    this.setState({ filterApplicantPerformance: value });\n  };\n\n  setGenerateReportModal = (\n    value: {\n      reportType: \"EXCEL\" | \"PDF\";\n      status: boolean;\n    } | null\n  ) => {\n    this.setState({ generateReportModal: value });\n  };\n\n  setSelectedPeriod = (value: SessionPlanInterface | null) => {\n    this.setState({ selected_period: value });\n  };\n\n  setReportTitle = (value: reportTitleType) => {\n    this.setState({ reportTitle: value });\n  };\n\n  setExcelReportTitle = (value: string) => {\n    this.setState({ excelReportTitle: value });\n  };\n\n  setExamsToPrint = (value: ExamPreparationToPrintInterface[] | null) => {\n    this.setState({ examsToPrint: value });\n  };\n\n  setExamPreparationReportContent = (\n    value: examPreparationReportContentInterface[]\n  ) => {\n    this.setState({ examPreparationReportContent: value });\n  };\n  setExamPerformanceToPrint = (\n    value: ExamPerformanceToPrintInterface[] | null\n  ) => {\n    this.setState({ examPerformanceToPrint: value });\n  };\n  setExamPerformanceReportContent = (\n    value: examPerformanceReportContentInterface[]\n  ) => {\n    this.setState({ examPerformanceReportContent: value });\n  };\n\n  setExam30PerformanceToPrint = (\n    value: ExamPerformanceToPrintInterface[] | null\n  ) => {\n    this.setState({ exam30PerformanceToPrint: value });\n  };\n  setExam30PerformanceReportContent = (\n    value: examPerformanceReportContentInterface[]\n  ) => {\n    this.setState({ exam30PerformanceReportContent: value });\n  };\n  setExaminationProgressToPrint = (\n    value: ExaminationProgressToPrintInterface[] | null\n  ) => {\n    this.setState({ examinationProgressToPrint: value });\n  };\n  setExaminationProgressExamPerformanceReportContent = (\n    value: ExaminationProgressReportContentInterface[]\n  ) => {\n    this.setState({ examinationProgressReportContent: value });\n  };\n\n  setCandidateExamPerformanceToPrint = (\n    value: CandidateExamPerformanceToPrintInterface[] | null\n  ) => {\n    this.setState({ candidateExamPerformanceToPrint: value });\n  };\n\n  setCandidateExamPerformanceReportContent = (\n    value: CandidateExamPerformanceReportContentInterface[]\n  ) => {\n    this.setState({ candidateExamPerformanceReportContent: value });\n  };\n\n  setCandidate30ExamPerformanceToPrint = (\n    value: CandidateExamPerformanceToPrintInterface[] | null\n  ) => {\n    this.setState({ candidate30ExamPerformanceToPrint: value });\n  };\n\n  setCandidate30ExamPerformanceReportContent = (\n    value: CandidateExamPerformanceReportContentInterface[]\n  ) => {\n    this.setState({ candidate30ExamPerformanceReportContent: value });\n  };\n\n  selectDefaultSession = (allSession: SessionPlanInterface[]) => {\n    if (allSession.length > 0) {\n      let active_period = allSession.find((item) => item.is_active);\n      this.setSelectedPeriod(active_period ? active_period : allSession[0]);\n    }\n    this.setSelectPeriod(false);\n  };\n\n  componentDidMount = () => {\n    if (\n      this.props.periods.allSessionPlans === null ||\n      this.props.periods.allSessionPlans.length === 0\n    ) {\n      this.props.GetAllSessionPlans(\n        (status: boolean, msg: string, data?: SessionPlanInterface[]) => {\n          this.setLoadingSettings(status);\n          if (!status) {\n            if (!isEmptyOrSpaces(msg)) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (\n              data &&\n              data.length > 0 &&\n              this.state.selected_period === null\n            ) {\n              this.selectDefaultSession(data);\n            }\n          }\n        }\n      );\n    } else if (this.state.selected_period === null) {\n      this.selectDefaultSession(this.props.periods.allSessionPlans);\n    }\n\n    if (\n      this.props.schoolLevels.education_categories === null ||\n      this.props.schoolLevels.education_categories.length\n    ) {\n      this.props.loadEducationCategories(\n        (status: boolean, msg: string, data?: education_category[]) => {\n          this.setLoadingSettings(status);\n          if (!status) {\n            if (!isEmptyOrSpaces(msg)) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (\n              data &&\n              data.length > 0 &&\n              !this.props.schoolLevels.selectedEducationCategory\n            ) {\n              this.props.setSelectedEducationCategory(data[0]);\n            }\n          }\n        }\n      );\n    } else if (!this.props.schoolLevels.selectedEducationCategory) {\n      this.props.setSelectedEducationCategory(\n        this.props.schoolLevels.education_categories[0]\n      );\n    }\n\n    if (\n      this.props.schoolLevels.school_levels === null ||\n      this.props.schoolLevels.school_levels.length <= 0\n    ) {\n      this.props.loadSchoolLevels(this.setLoadingSettings);\n    }\n\n    if (\n      this.props.courses === null ||\n      (this.props.courses.length === 0 && this.state.loadingCourses)\n    ) {\n      this.props.loadCourses(this.setLoadingCourses);\n    } else if (this.state.loadingCourses) {\n      this.setLoadingCourses(false);\n    }\n\n    if (\n      this.props.examsList === null ||\n      (this.props.examsList.length === 0 && this.state.loadingExams)\n    ) {\n      this.props.loadExamsList(this.setLoadingExams);\n    } else if (this.state.loadingExams) {\n      this.setLoadingExams(false);\n    }\n\n    if (\n      this.props.auth.application_session &&\n      this.props.auth.application_session.session_plan_id &&\n      (this.props.adminExamReport.DoneExam === null ||\n        (this.props.adminExamReport.DoneExam.length === 0 &&\n          this.state.loadingDoneExam))\n    ) {\n      this.props.loadDoneExam(\n        this.props.auth.application_session.session_plan_id,\n        (status: boolean, msg: string) => {\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            this.setLoadingDoneExam(false);\n          }\n        }\n      );\n    } else if (this.state.loadingDoneExam) {\n      this.setLoadingDoneExam(false);\n    }\n\n    if (\n      this.props.auth.application_session &&\n      this.props.auth.application_session.session_plan_id &&\n      (this.props.adminExamReport.CandidatesExamPerformance === null ||\n        (this.props.adminExamReport.CandidatesExamPerformance.length === 0 &&\n          this.state.loadingCandidatesExamPerformance))\n    ) {\n      this.props.loadCandidatesExamPerformance(\n        {\n          order: \"desc\",\n          sortBy: ReportGetCandidatePerformanceSortTypes.DATE,\n          filter: {\n            period: this.props.auth.application_session.session_plan_id,\n          },\n        },\n        (status: boolean, msg: string) => {\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            this.setLoadingCandidatesExamPerformance(false);\n          }\n        }\n      );\n    } else if (this.state.loadingCandidatesExamPerformance) {\n      this.setLoadingCandidatesExamPerformance(false);\n    }\n\n    if (\n      this.props.auth.application_session &&\n      this.props.auth.application_session.session_plan_id &&\n      (this.props.adminExamReport.ExamPerformance === null ||\n        (this.props.adminExamReport.ExamPerformance.length === 0 &&\n          this.state.loadingExamPerformance))\n    ) {\n      this.props.loadPerfomranceExam(\n        this.props.auth.application_session.session_plan_id,\n        (status: boolean, msg: string) => {\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            this.setLoadingExamPerformance(false);\n          }\n        }\n      );\n    } else if (this.state.loadingExamPerformance) {\n      this.setLoadingExamPerformance(false);\n    }\n\n    if (this.state.excelReportTitle === this.state.reportTitle) {\n      let result: string = \"\";\n      if (\n        this.state.excelReportTitle ===\n          reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n        this.props.adminExamReport.reportDistrictId\n      ) {\n        result += ` ${this.props.adminExamReport.reportDistrictId.district_name} district`;\n      } else if (\n        this.state.excelReportTitle ===\n        reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE\n      ) {\n        if (this.props.adminExamReport.reportDistrictId) {\n          result += ` in ${this.props.adminExamReport.reportDistrictId.district_name} district`;\n        }\n        if (this.props.adminExamReport.reportCourseId) {\n          result += ` in exam of ${this.props.adminExamReport.reportCourseId.course_name}(${this.props.adminExamReport.reportCourseId.course_code})`;\n        }\n      } else {\n        result = \"\";\n      }\n      this.setExcelReportTitle(this.state.excelReportTitle + result);\n      this.setLoading(false);\n    }\n  };\n\n  onPeriodChange = (period_id: string) => {\n    this.props.loadDoneExam(period_id, (status: boolean, msg: string) => {\n      this.setLoadingDoneExam(status);\n      if (!status) {\n        if (msg.length > 0) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n        this.setLoadingDoneExam(false);\n      }\n    });\n\n    this.props.loadPerfomranceExam(\n      period_id,\n      (status: boolean, msg: string) => {\n        this.setLoadingExamPerformance(status);\n        if (!status) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          this.setLoadingExamPerformance(false);\n        }\n      }\n    );\n\n    this.props.loadCandidatesExamPerformance(\n      {\n        order: \"desc\",\n        sortBy: ReportGetCandidatePerformanceSortTypes.DATE,\n        filter: {\n          period: period_id,\n        },\n      },\n      (status: boolean, msg: string) => {\n        if (!status) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          this.setLoadingCandidatesExamPerformance(false);\n        }\n      }\n    );\n  };\n\n  getLevelbyId = (level_id: string): school_level | undefined => {\n    if (this.props.schoolLevels.school_levels) {\n      return this.props.schoolLevels.school_levels.find(\n        (item) => item.school_level_id === level_id\n      );\n    }\n  };\n\n  getCourses = (): course[] | null => {\n    let result: course[] | null = [],\n      search_all: boolean = true;\n    if (this.props.courses) {\n      // FILTER BY EDICATION CATEGORY ====================\n      if (this.props.schoolLevels.selectedEducationCategory) {\n        for (const key in this.props.courses) {\n          if (Object.prototype.hasOwnProperty.call(this.props.courses, key)) {\n            if (this.props.courses[key].school_levels.length > 0) {\n              this.props.courses[key].school_levels.forEach((level) => {\n                let levelDetail = this.getLevelbyId(level);\n                if (\n                  levelDetail &&\n                  (levelDetail.education_institute.includes(\n                    this.props.schoolLevels.selectedEducationCategory!\n                      .education_institute_id\n                  ) ||\n                    levelDetail.education_institute.length <= 0)\n                ) {\n                  result && result.push(this.props.courses![key]);\n                }\n              });\n            } else {\n              result && result.push(this.props.courses![key]);\n            }\n          }\n        }\n      }\n      // RETURN DEFAULT VALUES ====================\n      else {\n        search_all = false;\n      }\n    }\n    return !search_all ? this.props.courses : result;\n  };\n\n  updateExamToPrint = () => {\n    // EXAM PREPARATION ######################\n    if (this.state.reportTitle === reportTitleType.EXAM_PREPARATION) {\n      if (\n        loadAllExams(this.props.examsList, this.state.selected_period) &&\n        this.getCourses() &&\n        this.props.periods.allSessionPlans\n      ) {\n        let data: examPreparationStateInterface[] = FC_reportExamList(\n          this.getCourses()!,\n          loadAllExams(this.props.examsList, this.state.selected_period)!\n        );\n        let arrayNew: ExamPreparationToPrintInterface[] = [];\n        let n: number = 1;\n        for (const key in data) {\n          if (Object.prototype.hasOwnProperty.call(data, key)) {\n            let school_level: string = \"\";\n            if (data[key].school_levels.length) {\n              data[key].school_levels.forEach((element, index) => {\n                let findLevel = this.getLevelbyId(element);\n                if (index === 0) {\n                  school_level = findLevel ? findLevel.school_level_name : \"\";\n                } else {\n                  school_level += findLevel\n                    ? \", \" + findLevel.school_level_name\n                    : \"\";\n                }\n              });\n            } else {\n              school_level = \"Any level\";\n            }\n            let dataArray: ExamPreparationToPrintInterface = {\n              course_id: n,\n              course_name: data[key].course_name,\n              course_code: data[key].course_code,\n              description: data[key].description,\n              school_levels: data[key].school_levels.length\n                ? school_level\n                : \"Any\",\n              exam_period: data[key].exam\n                ? getPeriodById(\n                    this.props.periods.allSessionPlans,\n                    data[key].exam!.period\n                  )\n                  ? getPeriodById(\n                      this.props.periods.allSessionPlans,\n                      data[key].exam!.period\n                    )!.session_plan_name\n                  : \"-\"\n                : \"-\",\n              exam_date: data[key].exam ? DATE(data[key].exam!.exam_date) : \"-\",\n              exam_time: data[key].exam ? data[key].exam!.start_time : \"-\",\n              exam_duration: data[key].exam\n                ? data[key].exam!.duration.toString()\n                : \"-\",\n              preparation_status: data[key].exam ? \"Prepared\" : \"Not prepared\",\n            };\n\n            for (const key in this.state.examPreparationReportContent) {\n              if (\n                Object.prototype.hasOwnProperty.call(\n                  this.state.examPreparationReportContent,\n                  key\n                )\n              ) {\n                if (!this.state.examPreparationReportContent[key].status) {\n                  delete dataArray[\n                    this.state.examPreparationReportContent[key].key\n                  ];\n                }\n              }\n            }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n        this.setExamsToPrint(arrayNew);\n        arrayNew = [];\n        n = 1;\n        // props.applicationsToPrint=;\n      }\n    }\n    // EXAM PERFORMANCE ######################\n    if (this.state.reportTitle === reportTitleType.EXAM_PERFORMANCE) {\n      if (\n        loadAllExams(this.props.examsList, this.state.selected_period) &&\n        this.getCourses() &&\n        this.props.adminExamReport.ExamPerformance &&\n        this.props.periods.allSessionPlans\n      ) {\n        let data: examPerformanceStateInterface[] =\n          FC_reportExamPerformanceData(\n            this.getCourses()!,\n            loadAllExams(this.props.examsList, this.state.selected_period)!,\n            this.props.adminExamReport.ExamPerformance\n          );\n        let arrayNew: ExamPerformanceToPrintInterface[] = [];\n        let n: number = 1;\n        for (const key in data) {\n          if (Object.prototype.hasOwnProperty.call(data, key)) {\n            let school_level: string = \"\";\n            if (data[key].school_levels.length) {\n              data[key].school_levels.forEach((element, index) => {\n                let findLevel = this.getLevelbyId(element);\n                if (index === 0) {\n                  school_level = findLevel ? findLevel.school_level_name : \"\";\n                } else {\n                  school_level += findLevel\n                    ? \", \" + findLevel.school_level_name\n                    : \"\";\n                }\n              });\n            } else {\n              school_level = \"Any level\";\n            }\n            let dataArray: ExamPerformanceToPrintInterface = {\n              course_id: n,\n              course_name: data[key].course_name,\n              course_code: data[key].course_code,\n              description: data[key].description,\n              school_levels: data[key].school_levels.length\n                ? school_level\n                : \"Any\",\n              exam_period: data[key].exam\n                ? getPeriodById(\n                    this.props.periods.allSessionPlans,\n                    data[key].exam!.period\n                  )\n                  ? getPeriodById(\n                      this.props.periods.allSessionPlans,\n                      data[key].exam!.period\n                    )!.session_plan_name\n                  : \"-\"\n                : \"-\",\n              exam_date: data[key].exam ? DATE(data[key].exam!.exam_date) : \"-\",\n              exam_time: data[key].exam ? data[key].exam!.start_time : \"-\",\n              exam_duration: data[key].exam\n                ? data[key].exam!.duration.toString()\n                : \"-\",\n              exam_performance: Number(data[key].exam_performance.toFixed(1)),\n            };\n\n            for (const key in this.state.examPerformanceReportContent) {\n              if (\n                Object.prototype.hasOwnProperty.call(\n                  this.state.examPerformanceReportContent,\n                  key\n                )\n              ) {\n                if (!this.state.examPerformanceReportContent[key].status) {\n                  delete dataArray[\n                    this.state.examPerformanceReportContent[key].key\n                  ];\n                }\n              }\n            }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n        this.setExamPerformanceToPrint(arrayNew);\n        arrayNew = [];\n        n = 1;\n        // props.applicationsToPrint=;\n      }\n    }\n    // TOP 30 EXAM PERFORMANCE ######################\n    if (this.state.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE) {\n      if (\n        loadAllExams(this.props.examsList, this.state.selected_period) &&\n        this.getCourses() &&\n        this.props.adminExamReport.DoneExam &&\n        this.props.adminExamReport.CandidatesExamPerformance &&\n        this.props.adminExamReport.reportDistrictId &&\n        this.props.periods.allSessionPlans\n      ) {\n        let data = FC_ExamPerformancePerDistrictPropsData(\n          this.getCourses()!,\n          loadAllExams(this.props.examsList, this.state.selected_period)!,\n          this.props.adminExamReport.DoneExam,\n          this.props.adminExamReport.CandidatesExamPerformance,\n          this.props.adminExamReport.reportDistrictId.district_id\n        ).slice(0, 30);\n        let arrayNew: ExamPerformanceToPrintInterface[] = [];\n        let n: number = 1;\n        for (const key in data) {\n          if (Object.prototype.hasOwnProperty.call(data, key)) {\n            let school_level: string = \"\";\n            if (data[key].school_levels.length) {\n              data[key].school_levels.forEach((element, index) => {\n                let findLevel = this.getLevelbyId(element);\n                if (index === 0) {\n                  school_level = findLevel ? findLevel.school_level_name : \"\";\n                } else {\n                  school_level += findLevel\n                    ? \", \" + findLevel.school_level_name\n                    : \"\";\n                }\n              });\n            } else {\n              school_level = \"Any level\";\n            }\n            let dataArray: ExamPerformanceToPrintInterface = {\n              course_id: n,\n              course_name: data[key].course_name,\n              course_code: data[key].course_code,\n              description: data[key].description,\n              school_levels: data[key].school_levels.length\n                ? school_level\n                : \"Any\",\n              exam_period: data[key].exam\n                ? getPeriodById(\n                    this.props.periods.allSessionPlans,\n                    data[key].exam!.period\n                  )\n                  ? getPeriodById(\n                      this.props.periods.allSessionPlans,\n                      data[key].exam!.period\n                    )!.session_plan_name\n                  : \"-\"\n                : \"-\",\n              exam_date: data[key].exam ? DATE(data[key].exam!.exam_date) : \"-\",\n              exam_time: data[key].exam ? data[key].exam!.start_time : \"-\",\n              exam_duration: data[key].exam\n                ? data[key].exam!.duration.toString()\n                : \"-\",\n              exam_performance: 0,\n            };\n\n            for (const key in this.state.exam30PerformanceReportContent) {\n              if (\n                Object.prototype.hasOwnProperty.call(\n                  this.state.exam30PerformanceReportContent,\n                  key\n                )\n              ) {\n                if (!this.state.exam30PerformanceReportContent[key].status) {\n                  delete dataArray[\n                    this.state.exam30PerformanceReportContent[key].key\n                  ];\n                }\n              }\n            }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n        this.setExam30PerformanceToPrint(arrayNew);\n        arrayNew = [];\n        n = 1;\n      }\n    }\n    // EXAMINATION PROGRESS ######################\n    if (this.state.reportTitle === reportTitleType.EXAMINATION_PROGRESS) {\n      if (\n        loadAllExams(this.props.examsList, this.state.selected_period) &&\n        this.getCourses() &&\n        this.props.adminExamReport.DoneExam &&\n        this.props.periods.allSessionPlans\n      ) {\n        let data: examProgressStateInterface[] = FC_reportDoneExamList(\n          this.getCourses()!,\n          loadAllExams(this.props.examsList, this.state.selected_period)!,\n          this.props.adminExamReport.DoneExam\n        );\n        let arrayNew: ExaminationProgressToPrintInterface[] = [];\n        let n: number = 1;\n        for (const key in data) {\n          if (Object.prototype.hasOwnProperty.call(data, key)) {\n            let school_level: string = \"\";\n            if (data[key].school_levels.length) {\n              data[key].school_levels.forEach((element, index) => {\n                let findLevel = this.getLevelbyId(element);\n                if (index === 0) {\n                  school_level = findLevel ? findLevel.school_level_name : \"\";\n                } else {\n                  school_level += findLevel\n                    ? \", \" + findLevel.school_level_name\n                    : \"\";\n                }\n              });\n            } else {\n              school_level = \"Any level\";\n            }\n            let dataArray: ExaminationProgressToPrintInterface = {\n              course_id: n,\n              course_name: data[key].course_name,\n              course_code: data[key].course_code,\n              description: data[key].description,\n              school_levels: data[key].school_levels.length\n                ? school_level\n                : \"Any\",\n              exam_period: data[key].exam\n                ? getPeriodById(\n                    this.props.periods.allSessionPlans,\n                    data[key].exam!.period\n                  )\n                  ? getPeriodById(\n                      this.props.periods.allSessionPlans,\n                      data[key].exam!.period\n                    )!.session_plan_name\n                  : \"-\"\n                : \"-\",\n              exam_date: data[key].exam ? DATE(data[key].exam!.exam_date) : \"-\",\n              exam_time: data[key].exam ? data[key].exam!.start_time : \"-\",\n              exam_duration: data[key].exam\n                ? data[key].exam!.duration.toString()\n                : \"-\",\n              exam_status:\n                data[key].preparation_status === \"Done\"\n                  ? \"Completed\"\n                  : data[key].preparation_status,\n            };\n\n            for (const key in this.state.examinationProgressReportContent) {\n              if (\n                Object.prototype.hasOwnProperty.call(\n                  this.state.examinationProgressReportContent,\n                  key\n                )\n              ) {\n                if (!this.state.examinationProgressReportContent[key].status) {\n                  delete dataArray[\n                    this.state.examinationProgressReportContent[key].key\n                  ];\n                }\n              }\n            }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n        this.setExaminationProgressToPrint(arrayNew);\n        arrayNew = [];\n        n = 1;\n        // props.applicationsToPrint=;\n      }\n    }\n    // CANDIDATE EXAM PERFORMANCE ######################\n    if (this.state.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE) {\n      if (\n        this.getCourses() &&\n        this.props.adminExamReport.CandidatesExamPerformance &&\n        this.props.periods.allSessionPlans\n      ) {\n        let data: candidatePerfomranceStateInterface[] =\n          FC_reportCandidatePerformanceData(\n            this.getCourses()!,\n            this.props.adminExamReport.CandidatesExamPerformance,\n            this.props.adminExamReport.reportCourseId\n              ? this.props.adminExamReport.reportCourseId.course_id\n              : \"all\"\n          );\n        let arrayNew: CandidateExamPerformanceToPrintInterface[] = [];\n        let n: number = 1;\n        for (const key in data) {\n          if (Object.prototype.hasOwnProperty.call(data, key)) {\n            let school_level: string = \"\";\n            if (data[key].school_levels.length) {\n              data[key].school_levels.forEach((element, index) => {\n                let findLevel = this.getLevelbyId(element);\n                if (index === 0) {\n                  school_level = findLevel ? findLevel.school_level_name : \"\";\n                } else {\n                  school_level += findLevel\n                    ? \", \" + findLevel.school_level_name\n                    : \"\";\n                }\n              });\n            } else {\n              school_level = \"Any level\";\n            }\n            let dataArray: CandidateExamPerformanceToPrintInterface = {\n              applicant_id: n,\n              course_name: data[key].course_name,\n              course_code: data[key].course_code,\n              description: data[key].description,\n              school_levels: data[key].school_levels.length\n                ? school_level\n                : \"Any\",\n              exam_period: getPeriodById(\n                this.props.periods.allSessionPlans,\n                data[key].exam.period\n              )\n                ? getPeriodById(\n                    this.props.periods.allSessionPlans,\n                    data[key].exam.period\n                  )!.session_plan_name\n                : \"-\",\n              exam_date: DATE(data[key].exam.exam_date),\n              exam_start_time: timestampToDate(\n                Number(data[key].exam.start_time)\n              ).timeAMPM,\n              exam_end_time: timestampToDate(Number(data[key].exam.end_time))\n                .timeAMPM,\n              performance_status: capitalizeFirstLetter(\n                displayStatus(data[key].exam_stastus)\n              ),\n              applicant_name: capitalizeFirstLetter(data[key].user_name),\n              national_id: data[key].national_id,\n              email: data[key].user_email,\n              phone: data[key].user_phone,\n              marks:\n                data[key].exam_stastus !== ReportUserExamStatus.Editing\n                  ? Number(data[key].user_total_marks.toFixed(1)) + \"%\"\n                  : \"-\",\n            };\n\n            for (const key in this.state\n              .candidateExamPerformanceReportContent) {\n              if (\n                Object.prototype.hasOwnProperty.call(\n                  this.state.candidateExamPerformanceReportContent,\n                  key\n                )\n              ) {\n                if (\n                  !this.state.candidateExamPerformanceReportContent[key].status\n                ) {\n                  delete dataArray[\n                    this.state.candidateExamPerformanceReportContent[key].key\n                  ];\n                }\n              }\n            }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n        this.setCandidateExamPerformanceToPrint(arrayNew);\n        arrayNew = [];\n        n = 1;\n        // props.applicationsToPrint=;\n      }\n    }\n    // 30 CANDIDATE EXAM PERFORMANCE ######################\n    if (\n      this.state.reportTitle === reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE\n    ) {\n      if (\n        this.getCourses() &&\n        this.props.adminExamReport.CandidatesExamPerformance &&\n        this.props.periods.allSessionPlans\n      ) {\n        let data: candidatePerfomranceStateInterface[] =\n          FC_CandiadtePerformancePerDistrictFilter(\n            FC_reportCandidatePerformanceData(\n              this.getCourses()!,\n              this.props.adminExamReport.CandidatesExamPerformance,\n              this.props.adminExamReport.reportCourseId\n                ? this.props.adminExamReport.reportCourseId.course_id\n                : \"all\"\n            ),\n            this.props.adminExamReport.reportDistrictId\n              ? this.props.adminExamReport.reportDistrictId.district_id\n              : null,\n            this.props.adminExamReport.reportCourseId\n              ? this.props.adminExamReport.reportCourseId.course_id\n              : null,\n            this.state.filterApplicantPerformance\n          ).slice(0, 30);\n        let arrayNew: CandidateExamPerformanceToPrintInterface[] = [];\n        let n: number = 1;\n        for (const key in data) {\n          if (Object.prototype.hasOwnProperty.call(data, key)) {\n            let school_level: string = \"\";\n            if (data[key].school_levels.length) {\n              data[key].school_levels.forEach((element, index) => {\n                let findLevel = this.getLevelbyId(element);\n                if (index === 0) {\n                  school_level = findLevel ? findLevel.school_level_name : \"\";\n                } else {\n                  school_level += findLevel\n                    ? \", \" + findLevel.school_level_name\n                    : \"\";\n                }\n              });\n            } else {\n              school_level = \"Any level\";\n            }\n            let dataArray: CandidateExamPerformanceToPrintInterface = {\n              applicant_id: n,\n              course_name: data[key].course_name,\n              course_code: data[key].course_code,\n              description: data[key].description,\n              school_levels: data[key].school_levels.length\n                ? school_level\n                : \"Any\",\n              exam_period: getPeriodById(\n                this.props.periods.allSessionPlans,\n                data[key].exam.period\n              )\n                ? getPeriodById(\n                    this.props.periods.allSessionPlans,\n                    data[key].exam.period\n                  )!.session_plan_name\n                : \"-\",\n              exam_date: DATE(data[key].exam.exam_date),\n              exam_start_time: timestampToDate(\n                Number(data[key].exam.start_time)\n              ).timeAMPM,\n              exam_end_time: timestampToDate(Number(data[key].exam.end_time))\n                .timeAMPM,\n              performance_status: capitalizeFirstLetter(\n                displayStatus(data[key].exam_stastus)\n              ),\n              applicant_name: capitalizeFirstLetter(data[key].user_name),\n              national_id: data[key].national_id,\n              email: data[key].user_email,\n              phone: data[key].user_phone,\n              marks:\n                data[key].exam_stastus !== ReportUserExamStatus.Editing\n                  ? Number(data[key].user_total_marks.toFixed(1)) + \"%\"\n                  : \"-\",\n            };\n\n            for (const key in this.state\n              .candidate30ExamPerformanceReportContent) {\n              if (\n                Object.prototype.hasOwnProperty.call(\n                  this.state.candidate30ExamPerformanceReportContent,\n                  key\n                )\n              ) {\n                if (\n                  !this.state.candidate30ExamPerformanceReportContent[key]\n                    .status\n                ) {\n                  delete dataArray[\n                    this.state.candidate30ExamPerformanceReportContent[key].key\n                  ];\n                }\n              }\n            }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n        this.setCandidate30ExamPerformanceToPrint(arrayNew);\n        arrayNew = [];\n        n = 1;\n        // props.applicationsToPrint=;\n      }\n    }\n  };\n\n  addToTitle = (): string => {\n    let result: string = \"\";\n\n    if (\n      this.state.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n      this.props.adminExamReport.reportDistrictId\n    ) {\n      result += ` ${this.props.adminExamReport.reportDistrictId.district_name} district`;\n    } else if (\n      this.state.reportTitle === reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE\n    ) {\n      if (this.props.adminExamReport.reportDistrictId) {\n        result += ` in ${this.props.adminExamReport.reportDistrictId.district_name} district`;\n      }\n      if (this.props.adminExamReport.reportCourseId) {\n        result += ` in exam of ${this.props.adminExamReport.reportCourseId.course_name}(${this.props.adminExamReport.reportCourseId.course_code})`;\n      }\n    } else {\n      result = \"\";\n    }\n    return result;\n  };\n\n  downlaodPDF = async () => {\n    if (!document.querySelectorAll(\"#report_content tbody tr\").length) {\n      this.props.PushPopupAlert({\n        title: `Can't generate Report of empty Data`,\n        theme: PopupAlertTheme.warning,\n      });\n      return false;\n    }\n\n    if (this.state.selected_period) {\n      const table: HTMLElement | null =\n        document.getElementById(\"report_content\");\n      const reportSettings: reportSettingsInterface = {\n        doneBy: this.props.auth.user.fname + \" \" + this.props.auth.user.lname,\n        title: \"Exam Report\",\n        subjectTitle: \"Subject\",\n        subject: `${this.state.reportTitle} ${this.addToTitle()}`,\n        period: this.state.selected_period.session_plan_name,\n        footer: \"Online Teacher Recruitment\",\n        institute: this.props.schoolLevels.selectedEducationCategory\n          ? this.props.schoolLevels.selectedEducationCategory\n              .education_category_title\n          : \"All institute\",\n        orientation:\n          this.state.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE ||\n          this.state.reportTitle ===\n            reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE\n            ? \"l\"\n            : \"p\",\n      };\n      table && (await generatePDF(reportSettings, table, this.setDownloading));\n    }\n  };\n\n  render() {\n    if (this.state.loading || this.props.periods.allSessionPlans === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading data...\n        </div>\n      );\n    }\n\n    if (this.props.periods.allSessionPlans.length === 0) {\n      return <NoSession />;\n    }\n\n    return (\n      <div>\n        <SideNavigation>\n          <div className=\"flex flex-col mb-4\">\n            <span className=\"text-sm text-gray-600 mb-2\">\n              Education categories:\n            </span>\n            {this.props.schoolLevels.education_categories === null ? (\n              <Loading />\n            ) : this.props.schoolLevels.education_categories.length === 0 ? (\n              <span>No result found</span>\n            ) : (\n              this.props.schoolLevels.education_categories.map((item, i) => (\n                <div\n                  onClick={() => {\n                    this.props.setSelectedEducationCategory(item);\n                    this.updateExamToPrint();\n                  }}\n                  key={i + 1}\n                  className={`border rounded px-2 py-2 mb-2 cursor-pointer ${\n                    this.props.schoolLevels.selectedEducationCategory !==\n                      null &&\n                    this.props.schoolLevels.selectedEducationCategory\n                      .education_institute_id === item.education_institute_id\n                      ? \"bg-blue-600 text-white hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                      : \"hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                  } font-bold flex flex-row items-center gap-2`}\n                >\n                  {this.props.schoolLevels.selectedEducationCategory !== null &&\n                  this.props.schoolLevels.selectedEducationCategory\n                    .education_institute_id === item.education_institute_id ? (\n                    <MdRadioButtonChecked />\n                  ) : (\n                    <MdRadioButtonUnchecked />\n                  )}\n                  <span>{item.education_category_title}</span>\n                </div>\n              ))\n            )}\n          </div>\n          <div className=\"\">\n            <div className=\"text-gray-600 text-sm mb-2\">Selected period:</div>\n            <div\n              onClick={() => this.setSelectPeriod(true)}\n              className=\"font-bold bg-blue-50 border border-blue-200 rounded py-2 cursor-pointer text-xs px-2 hover:underline justify-between text-blue-600  mb-4 w-full flex flex-row items-center animate__animated animate__zoomIn\"\n            >\n              {this.state.selected_period !== null\n                ? `${this.state.selected_period.session_plan_name}`\n                : \"Filter by period\"}\n              <FiEdit className=\"text-lg text-blue-600\" />\n            </div>\n          </div>\n          <ExamReportFilters\n            reportTitle={this.state.reportTitle}\n            filterPreparation={this.state.filterPreparation}\n            setFilterPreparation={this.setFilterPreparation}\n            filterExamProgress={this.state.filterExamProgress}\n            setFilterExamProgress={this.setFilterExamProgress}\n            filterApplicantPerformance={this.state.filterApplicantPerformance}\n            setFilterApplicantPerformance={this.setFilterApplicantPerformance}\n          />\n        </SideNavigation>\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* REPORT TITLE CONTROLLERS ============================================ */}\n        <ExamReportTitle\n          downloading={this.state.downloading}\n          dataToPrint={loadAllExams(\n            this.props.examsList,\n            this.state.selected_period\n          )}\n          downlaodPDF={this.downlaodPDF}\n          reportTitle={this.state.reportTitle}\n          setReportTitle={this.setReportTitle}\n          setGenerateReportModal={this.setGenerateReportModal}\n          generateReportModal={this.state.generateReportModal}\n          excelReportTitle={this.state.excelReportTitle}\n          setExcelReportTitle={this.setExcelReportTitle}\n          updateExamToPrint={this.updateExamToPrint}\n          // EXAM PREPARATION ######################\n          examsToPrint={this.state.examsToPrint}\n          examPreparationReportContent={this.state.examPreparationReportContent}\n          setExamPreparationReportContent={this.setExamPreparationReportContent}\n          // EXAM PERFORMANCE ######################\n          examPerformanceToPrint={this.state.examPerformanceToPrint}\n          examPerformanceReportContent={this.state.examPerformanceReportContent}\n          setExamPerformanceReportContent={this.setExamPerformanceReportContent}\n          // TOP 30 EXAM PERFORMANCE ######################\n          exam30PerformanceToPrint={this.state.exam30PerformanceToPrint}\n          exam30PerformanceReportContent={\n            this.state.exam30PerformanceReportContent\n          }\n          setExam30PerformanceReportContent={\n            this.setExam30PerformanceReportContent\n          }\n          // EXAMINATION PROGRESS ######################\n          examinationProgressToPrint={this.state.examinationProgressToPrint}\n          examinationProgressReportContent={\n            this.state.examinationProgressReportContent\n          }\n          setExaminationProgressExamPerformanceReportContent={\n            this.setExaminationProgressExamPerformanceReportContent\n          }\n          // CANDIDATE EXAM PERFORMANCE ######################\n          candidateExamPerformanceToPrint={\n            this.state.candidateExamPerformanceToPrint\n          }\n          candidateExamPerformanceReportContent={\n            this.state.candidateExamPerformanceReportContent\n          }\n          setCandidateExamPerformanceReportContent={\n            this.setCandidateExamPerformanceReportContent\n          }\n          // CANDIDATE EXAM PERFORMANCE ######################\n          candidate30ExamPerformanceToPrint={\n            this.state.candidate30ExamPerformanceToPrint\n          }\n          candidate30ExamPerformanceReportContent={\n            this.state.candidate30ExamPerformanceReportContent\n          }\n          setCandidate30ExamPerformanceReportContent={\n            this.setCandidate30ExamPerformanceReportContent\n          }\n          thisPeriod={\n            this.state.selected_period\n              ? this.state.selected_period.session_plan_id\n              : \"\"\n          }\n        />\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* EXAM LIST CONTROLLERS ============================================ */}\n        {this.state.reportTitle === reportTitleType.EXAM_PREPARATION &&\n          this.props.periods.allSessionPlans && (\n            <ExamList\n              loading={\n                this.state.loadingExams ||\n                this.state.loadingCourses ||\n                this.state.loadingDoneExam\n              }\n              examsListData={loadAllExams(\n                this.props.examsList,\n                this.state.selected_period\n              )}\n              courseListData={this.getCourses()}\n              thisPeriod={this.props.periods.allSessionPlans}\n              filterPreparation={this.state.filterPreparation}\n            />\n          )}\n        {/* EXAM LIST CONTROLLERS ============================================ */}\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* DONE & REMAING EXAM LIST CONTROLLERS ============================================ */}\n        {this.state.reportTitle === reportTitleType.EXAMINATION_PROGRESS &&\n          this.props.periods.allSessionPlans && (\n            <DoneExamList\n              loading={\n                this.state.loadingExams\n                  ? true\n                  : this.state.loadingCourses\n                  ? true\n                  : this.state.loadingDoneExam\n                  ? true\n                  : false\n              }\n              examsListData={loadAllExams(\n                this.props.examsList,\n                this.state.selected_period\n              )}\n              courseListData={this.getCourses()}\n              thisPeriod={this.props.periods.allSessionPlans}\n              doneExamsData={this.props.adminExamReport.DoneExam}\n              filterExamProgress={this.state.filterExamProgress}\n            />\n          )}\n        {/* DONE & REMAING EXAM LIST CONTROLLERS ============================================ */}\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* EXAM PERFORMANCE CONTROLLERS ============================================ */}\n        {this.state.reportTitle === reportTitleType.EXAM_PERFORMANCE &&\n          this.props.periods.allSessionPlans && (\n            <ExamPerformance\n              loading={\n                this.state.loadingExams\n                  ? true\n                  : this.state.loadingCourses\n                  ? true\n                  : this.state.loadingExamPerformance\n                  ? true\n                  : false\n              }\n              examsListData={loadAllExams(\n                this.props.examsList,\n                this.state.selected_period\n              )}\n              courseListData={this.getCourses()}\n              thisPeriod={this.props.periods.allSessionPlans}\n              examsPerformanceData={this.props.adminExamReport.ExamPerformance} // doneExamsData={props.adminExamReport.DoneExam}\n            />\n          )}\n        {/* END EXAM PERFORMANCE CONTROLLERS ============================================ */}\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* EXAM PERFORMANCE PER DISTRICT LIST CONTROLLERS ============================================ */}\n        {this.state.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n        this.props.periods.allSessionPlans &&\n        this.props.adminExamReport.reportDistrictId ? (\n          <ExamPerformancePerDistrict\n            loading={\n              this.state.loadingExams\n                ? true\n                : this.state.loadingCourses\n                ? true\n                : this.state.loadingCandidatesExamPerformance\n                ? true\n                : false\n            }\n            examsListData={loadAllExams(\n              this.props.examsList,\n              this.state.selected_period\n            )}\n            doneExamsData={this.props.adminExamReport.DoneExam}\n            courseListData={this.getCourses()}\n            thisPeriod={this.props.periods.allSessionPlans}\n            candidatePerformanceData={\n              this.props.adminExamReport.CandidatesExamPerformance\n            }\n            thisDistrict={this.props.adminExamReport.reportDistrictId}\n          />\n        ) : (\n          this.state.reportTitle ===\n            reportTitleType.EXAM_DISTRICT_PERFORMANCE && (\n            <NoResult\n              theme={NoResultThemes.Light}\n              value={\"Select district to view data\"}\n              component={\n                <div\n                  onClick={() => this.setDistrictModal(true)}\n                  className=\"btn bg-blue-50 border border-blue-300 text-blue-600 cursor-pointer hover:bg-blue-100 flex flex-row items-center justify-center gap-2 text-sm \"\n                >\n                  <BiFilterAlt className=\"text-xl\" />\n                  Filter by district\n                </div>\n              }\n            />\n          )\n        )}\n        {/* EXAM PERFORMANCE PER DISTRICT LIST CONTROLLERS ============================================  */}\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* APPLICANTS PERFORMANCE EXAM LIST CONTROLLERS ============================================ */}\n        {this.state.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE &&\n          this.props.periods.allSessionPlans && (\n            <CandidatePerformance\n              loading={\n                this.state.loadingExams\n                  ? true\n                  : this.state.loadingCourses\n                  ? true\n                  : this.state.loadingCandidatesExamPerformance\n                  ? true\n                  : false\n              }\n              examsListData={loadAllExams(\n                this.props.examsList,\n                this.state.selected_period\n              )}\n              courseListData={this.getCourses()}\n              thisPeriod={this.props.periods.allSessionPlans}\n              candidatePerformanceData={\n                this.props.adminExamReport.CandidatesExamPerformance\n              }\n              filterApplicantPerformance={this.state.filterApplicantPerformance}\n            />\n          )}\n        {/* APPLICANTS PERFORMANCE EXAM LIST CONTROLLERS ============================================  */}\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* APPLICANTS PERFORMANCE EXAM PER DISTRICT LIST CONTROLLERS ============================================ */}\n        {this.state.reportTitle ===\n          reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE &&\n          this.props.periods.allSessionPlans && (\n            <CandiadtePerformancePerDistrict\n              loading={\n                this.state.loadingExams\n                  ? true\n                  : this.state.loadingCourses\n                  ? true\n                  : this.state.loadingCandidatesExamPerformance\n                  ? true\n                  : false\n              }\n              examsListData={loadAllExams(\n                this.props.examsList,\n                this.state.selected_period\n              )}\n              courseListData={this.getCourses()}\n              thisPeriod={this.props.periods.allSessionPlans}\n              candidatePerformanceData={\n                this.props.adminExamReport.CandidatesExamPerformance\n              }\n              filterApplicantPerformance={this.state.filterApplicantPerformance}\n            />\n          )}\n        {/* APPLICANTS PERFORMANCE EXAM PER DISTRICT LIST CONTROLLERS ============================================  */}\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* CHANGE DISTRICT FILTER MODAL CONTROLLERS ============================================ */}\n        {this.state.districtModal && (\n          <ExamReportModals\n            modalFor={ModalForTypes.choose_district}\n            modalState={this.state.districtModal}\n            changeModalState={this.setDistrictModal}\n            districtId={\n              this.props.adminExamReport.reportDistrictId\n                ? this.props.adminExamReport.reportDistrictId.district_id\n                : \"all\"\n            }\n            reportTitle={this.state.reportTitle}\n          />\n        )}\n        {/* END CHANGE DISTRICT FILTER MODAL CONTROLLERS ============================================ */}\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* MODAL CONTROLLERS ============================================ */}\n        <ExamReportModals\n          modalState={this.state.selectPeriod}\n          changeModalState={this.setSelectPeriod}\n          applicationPeriods={this.props.periods.allSessionPlans}\n          selected_period={this.state.selected_period}\n          setSelectedPeriod={this.setSelectedPeriod}\n          onPeriodChange={this.onPeriodChange}\n          modalFor={ModalForTypes.period}\n        />\n        {/* END MODAL CONTROLLERS ============================================ */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  sessionPlan,\n  schoolLevels,\n  course,\n  prepareExam,\n  adminExamReport,\n}: StoreState): {\n  auth: Auth;\n  periods: SessionPlanReducerInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n  courses: course[] | null;\n  examsList: ExamItemResponse[] | null;\n  adminExamReport: ExamReportReducerType;\n} => {\n  return {\n    auth,\n    periods: sessionPlan,\n    schoolLevels,\n    courses: course.courses,\n    examsList: prepareExam.examsList,\n    adminExamReport,\n  };\n};\n\nexport const ExamReport = connect(mapStateToProps, {\n  setSelectedPeriod,\n  loadCourses,\n  loadExamsList,\n  GetAllSessionPlans,\n  loadEducationCategories,\n  loadDoneExam,\n  loadSchoolLevels,\n  loadPerfomranceExam,\n  loadCandidatesExamPerformance,\n  setSelectedEducationCategory,\n  PushPopupAlert,\n})(_ExamReport);\n","import React, { Fragment, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport {\n  course,\n  CandidatesFailedSucceeded,\n  ReportUserExamStatus,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport { StoreState } from \"../../../reducers\";\nimport { ExamReportReducerType } from \"../../../reducers/exam_report\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { DATE, timestampToDate } from \"../../../utils/functions\";\nimport {\n  candidatePerfomranceStateInterface,\n  controlRowsByStatus,\n  FC_reportCandidatePerformanceData,\n  searchCandidatePerformanceData,\n} from \"./CandidatePerformance\";\nimport { displayStatus } from \"./DoneExamList\";\nimport { getPeriodById } from \"./ExamReport\";\n\nexport const FC_CandiadtePerformancePerDistrictFilter = (\n  dataList: candidatePerfomranceStateInterface[],\n  district_id: string | null = null,\n  course_id: string | null = null,\n  thisValue: ReportUserExamStatus | \"all\" = \"all\"\n): candidatePerfomranceStateInterface[] => {\n  let result: candidatePerfomranceStateInterface[] = [];\n  if (thisValue === \"all\") {\n    result = dataList;\n  } else {\n    result = dataList.filter((item) => item.exam_stastus === thisValue);\n  }\n\n  if (district_id) {\n    result = result.filter(\n      (item) =>\n        item.exam.exam_location &&\n        item.exam.exam_location.district_id === district_id\n    );\n  }\n  if (course_id) {\n    result = result.filter((item) => item.course_id === course_id);\n  }\n\n  // SORTING ARRAY FROM MAX TO MIN ==========================\n  let swap: candidatePerfomranceStateInterface;\n  for (let i = 0; i < result.length; i++) {\n    for (let j = i; j < result.length; j++) {\n      if (result[j].user_total_marks > result[i].user_total_marks) {\n        swap = result[j];\n        result[j] = result[i];\n        result[i] = swap;\n      }\n    }\n  }\n  return result;\n};\n\ntype CandiadtePerformancePerDistrictProps = {\n  loading: boolean;\n  examsListData: ExamItemResponse[] | null;\n  courseListData: course[] | null;\n  thisPeriod: SessionPlanInterface[];\n  candidatePerformanceData: CandidatesFailedSucceeded[] | null;\n\n  // redux props ============\n  adminExamReport: ExamReportReducerType;\n  // FOR APPLICANT PERFORMANCE PROPS\n  filterApplicantPerformance: ReportUserExamStatus | \"all\";\n};\n\nconst CandiadtePerformancePerDistrict: React.FC<\n  CandiadtePerformancePerDistrictProps\n> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n\n  return (\n    <Fragment>\n      <div className=\"bg-white my-4\">\n        <div className=\"w-full px-2 py-2\">\n          <input\n            onChange={(e) => setSearchInput(e.target.value)}\n            type=\"text\"\n            value={searchInput}\n            placeholder=\"Search...\"\n            className=\"w-full bg-gray-100 py-2 px-3 rounded\"\n            disabled={\n              props.courseListData &&\n              props.candidatePerformanceData &&\n              FC_CandiadtePerformancePerDistrictFilter(\n                FC_reportCandidatePerformanceData(\n                  props.courseListData,\n                  props.candidatePerformanceData,\n                  props.adminExamReport.reportCourseId\n                    ? props.adminExamReport.reportCourseId.course_id\n                    : \"all\"\n                ),\n                props.adminExamReport.reportDistrictId\n                  ? props.adminExamReport.reportDistrictId.district_id\n                  : null,\n                props.adminExamReport.reportCourseId\n                  ? props.adminExamReport.reportCourseId.course_id\n                  : null,\n                props.filterApplicantPerformance\n              ).length <= 0\n                ? true\n                : false\n            }\n          />\n        </div>\n        <div className=\"w-full overflow-x-auto\">\n          <table className=\"w-full shadow\" id=\"report_content\">\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n              <tr>\n                <td className=\"px-2 py-2\">#</td>\n                <td className=\"px-2 py-2\">Applicants</td>\n                <td className=\"px-2 py-2\">National ID</td>\n                <td className=\"px-2 py-2\">Email</td>\n                <td className=\"px-2 py-2\">Phone</td>\n                <td className=\"px-2 py-2\">\n                  <div className=\"flex items-center gap-1\">Exam</div>\n                </td>\n                <td className=\"px-2 py-2\">Exam period</td>\n                <td className=\"px-2 py-2\">Exam date</td>\n                <td className=\"px-2 py-2\">Exam start time</td>\n                <td className=\"px-2 py-2\">Exam end time</td>\n                <td className=\"px-2 py-2\">\n                  <div className=\"flex items-center gap-1\">Marks</div>\n                </td>\n                <td className=\"px-2 py-2\">Status</td>\n              </tr>\n            </thead>\n            <tbody>\n              {props.courseListData === null || props.loading ? (\n                <tr>\n                  <td colSpan={12} className=\"px-2 py-2\">\n                    <Loading />\n                  </td>\n                </tr>\n              ) : props.candidatePerformanceData &&\n                FC_CandiadtePerformancePerDistrictFilter(\n                  FC_reportCandidatePerformanceData(\n                    props.courseListData,\n                    props.candidatePerformanceData,\n                    props.adminExamReport.reportCourseId\n                      ? props.adminExamReport.reportCourseId.course_id\n                      : \"all\"\n                  ),\n                  props.adminExamReport.reportDistrictId\n                    ? props.adminExamReport.reportDistrictId.district_id\n                    : null,\n                  props.adminExamReport.reportCourseId\n                    ? props.adminExamReport.reportCourseId.course_id\n                    : null,\n                  props.filterApplicantPerformance\n                ).length <= 0 ? (\n                <tr>\n                  <td colSpan={12} className=\"px-2 py-2 text-center\">\n                    No applicant list available!\n                  </td>\n                </tr>\n              ) : (\n                props.candidatePerformanceData &&\n                searchCandidatePerformanceData(\n                  FC_CandiadtePerformancePerDistrictFilter(\n                    FC_reportCandidatePerformanceData(\n                      props.courseListData,\n                      props.candidatePerformanceData,\n                      props.adminExamReport.reportCourseId\n                        ? props.adminExamReport.reportCourseId.course_id\n                        : \"all\"\n                    ),\n                    props.adminExamReport.reportDistrictId\n                      ? props.adminExamReport.reportDistrictId.district_id\n                      : null,\n                    props.adminExamReport.reportCourseId\n                      ? props.adminExamReport.reportCourseId.course_id\n                      : null,\n                    props.filterApplicantPerformance\n                  ).slice(0, 30),\n                  searchInput\n                ).map((item, i) => (\n                  <tr\n                    key={i + 1}\n                    className={`${controlRowsByStatus(\n                      item.exam_stastus\n                    )} text-gray-600 hover:bg-blue-100 hover:text-blue-700 text-sm`}\n                  >\n                    <td className=\"px-2 py-2\">{i + 1}</td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(item.user_name)}\n                    </td>\n                    <td className=\"px-2 py-2\">{item.national_id}</td>\n                    <td className=\"px-2 py-2\">{item.user_email}</td>\n                    <td className=\"px-2 py-2\">{item.user_phone}</td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(item.course_name)} (\n                      <span className=\"font-semibold\">{item.course_code}</span>)\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam\n                        ? getPeriodById(props.thisPeriod, item.exam.period)\n                          ? getPeriodById(props.thisPeriod, item.exam.period)!\n                              .session_plan_name\n                          : \"-\"\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam.exam_date ? DATE(item.exam.exam_date) : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam.start_time\n                        ? timestampToDate(item.exam.start_time).timeAMPM\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam.end_time\n                        ? timestampToDate(item.exam.end_time).timeAMPM\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam_stastus !== ReportUserExamStatus.Editing\n                        ? Number(item.user_total_marks.toFixed(1)) + \"%\"\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(displayStatus(item.exam_stastus))}\n                    </td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  adminExamReport,\n}: StoreState): {\n  adminExamReport: ExamReportReducerType;\n} => {\n  return {\n    adminExamReport,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {})(CandiadtePerformancePerDistrict)\n);\n","import React, { Fragment, useState } from \"react\";\nimport { connect } from \"react-redux\";\n// import { BiSort } from \"react-icons/bi\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  course,\n  CandidatesFailedSucceeded,\n  ExamDoneAndRemainingByPeriodInterface,\n  ReportUserExamStatus,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport { StoreState } from \"../../../reducers\";\nimport { ExamReportReducerType } from \"../../../reducers/exam_report\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { DATE } from \"../../../utils/functions\";\nimport search from \"../../../utils/search\";\nimport { getPeriodById } from \"./ExamReport\";\n\nexport interface examPerformanceStateInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  applicants: number;\n  course_id: string;\n  pass_applicant: number;\n  failed_applicant: number;\n  exam: ExamItemResponse;\n  user_total_marks: number;\n}\n\nexport const FC_ExamPerformancePerDistrictPropsData = (\n  allCourses: course[],\n  allExams: ExamItemResponse[],\n  examsData: ExamDoneAndRemainingByPeriodInterface[],\n  candidatePerformanceData: CandidatesFailedSucceeded[],\n  district_id: string\n): examPerformanceStateInterface[] => {\n  let pass: number = 0,\n    failed: number = 0,\n    result: examPerformanceStateInterface[] = [],\n    ids: string[] = [],\n    exam_ids: string[] = [],\n    doneExamsData: ExamDoneAndRemainingByPeriodInterface[] = examsData.filter(\n      (item) => item.exam_status.toLocaleLowerCase() === \"done\"\n    );\n\n  for (const key in doneExamsData) {\n    if (Object.prototype.hasOwnProperty.call(doneExamsData, key)) {\n      if (exam_ids.includes(doneExamsData[key].id)) continue;\n      exam_ids.push(doneExamsData[key].id);\n      let courser = allCourses.find(\n        (item) => item.course_id === doneExamsData[key].course\n      );\n      let _marks: number = 0;\n\n      if (courser) {\n        // CALCURATING SUM OF ALL CANDIDATES MARKS BY EXAM ID=================================\n        let candidatesByExam: CandidatesFailedSucceeded[] =\n          candidatePerformanceData.filter(\n            (item) =>\n              item.course === doneExamsData[key].course &&\n              item.exam_location &&\n              item.exam_location.district_id === district_id\n          );\n        for (const _key in candidatesByExam) {\n          if (Object.prototype.hasOwnProperty.call(candidatesByExam, _key)) {\n            if (ids.includes(candidatesByExam[_key].user.user_id)) continue;\n            ids.push(candidatesByExam[_key].user.user_id);\n            _marks += candidatesByExam[_key].total_marks;\n            if (\n              candidatesByExam[_key].user_status !==\n                ReportUserExamStatus.Editing &&\n              candidatesByExam[_key].total_marks >= 50\n            ) {\n              pass += 1;\n            } else if (\n              candidatesByExam[_key].user_status !==\n              ReportUserExamStatus.Editing\n            ) {\n              failed += 1;\n            }\n          }\n        }\n        let exam = allExams.find(\n          (item) =>\n            item.course === doneExamsData[key].course &&\n            item.period === doneExamsData[key].period\n        );\n        if (exam) {\n          result.push({\n            course_name: courser.course_name,\n            course_code: courser.course_code,\n            description: courser.description,\n            school_levels: courser.school_levels,\n            course_id: courser.course_id,\n            exam: exam,\n            pass_applicant: pass,\n            failed_applicant: failed,\n            applicants: ids.length,\n            user_total_marks: _marks ? _marks / ids.length : _marks, //candidatesByExam.length\n          });\n        }\n        _marks = 0;\n        ids = [];\n      }\n    }\n    exam_ids = [];\n  }\n\n  // SORTING ARRAY FROM MAX TO MIN ==========================\n  let swap: examPerformanceStateInterface;\n  for (let i = 0; i < result.length; i++) {\n    for (let j = i; j < result.length; j++) {\n      if (result[j].user_total_marks > result[i].user_total_marks) {\n        swap = result[j];\n        result[j] = result[i];\n        result[i] = swap;\n      }\n    }\n  }\n  return result;\n};\n\ntype ExamPerformancePerDistrictProps = {\n  loading: boolean;\n  examsListData: ExamItemResponse[] | null;\n  doneExamsData: ExamDoneAndRemainingByPeriodInterface[] | null;\n  courseListData: course[] | null;\n  thisPeriod: SessionPlanInterface[];\n  candidatePerformanceData: CandidatesFailedSucceeded[] | null;\n  thisDistrict: { district_id: string; district_name: string };\n  adminExamReport: ExamReportReducerType;\n};\n\nconst ExamPerformancePerDistrict: React.FC<ExamPerformancePerDistrictProps> = (\n  props\n) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n\n  return (\n    <Fragment>\n      <div className=\"bg-white my-4 max-w-full overflow-x-auto\">\n        <div className=\"w-full px-2 py-2\">\n          <input\n            onChange={(e) => setSearchInput(e.target.value)}\n            type=\"text\"\n            value={searchInput}\n            placeholder=\"Search...\"\n            className=\"w-full bg-gray-100 py-2 px-3 rounded\"\n            disabled={\n              props.courseListData &&\n              props.examsListData &&\n              props.doneExamsData &&\n              props.candidatePerformanceData &&\n              props.adminExamReport.reportDistrictId &&\n              FC_ExamPerformancePerDistrictPropsData(\n                props.courseListData,\n                props.examsListData,\n                props.doneExamsData,\n                props.candidatePerformanceData,\n                props.adminExamReport.reportDistrictId.district_id\n              ).slice(0, 30).length <= 0\n                ? true\n                : false\n            }\n          />\n        </div>\n        <table className=\"w-full shadow\" id=\"report_content\">\n          <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n            <tr>\n              <td className=\"px-2 py-2\">#</td>\n              <td\n                className=\"px-2 py-2 cursor-pointer\"\n                // onClick={() => setSort(\"course_name\")}\n              >\n                <div className=\"flex items-center gap-1\">\n                  Course\n                  {/* <BiSort /> */}\n                </div>\n              </td>\n              <td className=\"px-2 py-2\">Exam date</td>\n              <td className=\"px-2 py-2\">Exam time</td>\n              <td className=\"px-2 py-2\">Exam duration</td>\n              <td className=\"px-2 py-2\">Exam Period</td>\n              <td className=\"px-2 py-2\">Pass Applicants</td>\n              <td className=\"px-2 py-2\">Failed Applicants</td>\n              <td\n                className=\"px-2 py-2 cursor-pointer\"\n                // onClick={() => setSort(\"user_total_marks\")}\n              >\n                <div className=\"flex items-center gap-1\">\n                  Percentage\n                  {/* <BiSort /> */}\n                </div>\n              </td>\n            </tr>\n          </thead>\n          <tbody>\n            {props.courseListData === null || props.loading ? (\n              <tr>\n                <td colSpan={7} className=\"px-2 py-2\">\n                  <Loading />\n                </td>\n              </tr>\n            ) : props.examsListData &&\n              props.doneExamsData &&\n              props.candidatePerformanceData &&\n              props.adminExamReport.reportDistrictId &&\n              FC_ExamPerformancePerDistrictPropsData(\n                props.courseListData,\n                props.examsListData,\n                props.doneExamsData,\n                props.candidatePerformanceData,\n                props.adminExamReport.reportDistrictId.district_id\n              ).length <= 0 ? (\n              <tr>\n                <td colSpan={7} className=\"px-2 py-2 text-center\">\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"No Exam list available!\"}\n                  />\n                </td>\n              </tr>\n            ) : (\n              props.examsListData &&\n              props.doneExamsData &&\n              props.candidatePerformanceData &&\n              props.adminExamReport.reportDistrictId &&\n              search(\n                FC_ExamPerformancePerDistrictPropsData(\n                  props.courseListData,\n                  props.examsListData,\n                  props.doneExamsData,\n                  props.candidatePerformanceData,\n                  props.adminExamReport.reportDistrictId.district_id\n                ).slice(0, 30),\n                searchInput\n              ).map((item: examPerformanceStateInterface, i) => (\n                <tr\n                  key={i + 1}\n                  className={`bg-white text-gray-600 hover:bg-blue-100 hover:text-blue-700 border-b border-gray-300 hover:border-blue-500 text-sm`}\n                >\n                  <td className=\"px-2 py-2\">{i + 1}</td>\n                  <td className=\"px-2 py-2\">\n                    {capitalizeFirstLetter(item.course_name)} (\n                    <span className=\"font-semibold\">{item.course_code}</span>)\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam ? DATE(item.exam.exam_date) : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam ? item.exam.start_time : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam ? item.exam!.duration + \" min\" : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam\n                      ? getPeriodById(props.thisPeriod, item.exam.period)\n                        ? getPeriodById(props.thisPeriod, item.exam.period)!\n                            .session_plan_name\n                        : \"-\"\n                      : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.pass_applicant !== undefined\n                      ? item.pass_applicant\n                      : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.failed_applicant !== undefined\n                      ? item.failed_applicant\n                      : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {Number(item.user_total_marks.toFixed(1)) + \"%\"}\n                  </td>\n                </tr>\n              ))\n            )}\n          </tbody>\n        </table>\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  adminExamReport,\n}: StoreState): {\n  adminExamReport: ExamReportReducerType;\n} => {\n  return {\n    adminExamReport,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {})(ExamPerformancePerDistrict)\n);\n","import React, { Fragment } from \"react\";\nimport { MainItem } from \"../../../components/Navigation/SideNavigation\";\nimport { ReportUserExamStatus } from \"../../../interfaces\";\nimport { displayStatus } from \"./DoneExamList\";\nimport { reportTitleType } from \"./ExamReport\";\n\ntype ExamReportFiltersProps = {\n  reportTitle: reportTitleType;\n\n  // FOR EXAM PREPARATION PROPS =========================================\n  filterPreparation: \"prepared\" | \"not prepared\" | \"all\";\n  setFilterPreparation: (value: \"prepared\" | \"not prepared\" | \"all\") => void;\n\n  // FOR EXAMINATION PROGRESS PROPS ========================================\n  filterExamProgress: \"all\" | \"Done\" | \"Active\";\n  setFilterExamProgress: (value: \"all\" | \"Done\" | \"Active\") => void;\n\n  // FOR APPLICANT PERFORMANCE PROPS\n  filterApplicantPerformance: ReportUserExamStatus | \"all\";\n  setFilterApplicantPerformance: (value: \"all\" | ReportUserExamStatus) => void;\n};\nconst ExamReportFilters: React.FC<ExamReportFiltersProps> = (props) => {\n  return (\n    <Fragment>\n      {props.reportTitle !== reportTitleType.EXAM_PERFORMANCE &&\n        props.reportTitle !== reportTitleType.EXAM_DISTRICT_PERFORMANCE && (\n          <div className=\"pt-1\">\n            <div className=\"text-sm text-gray-700 pb-2 pt-2\">\n              Filter by statuses:\n            </div>\n            {/* FILTER OF EXAM PREPARATION ================================ */}\n            {props.reportTitle === reportTitleType.EXAM_PREPARATION && (\n              <section>\n                <div onClick={() => props.setFilterPreparation(\"all\")}>\n                  <MainItem\n                    title=\"All\"\n                    count={0}\n                    active={props.filterPreparation === \"all\"}\n                  />\n                </div>\n                <div onClick={() => props.setFilterPreparation(\"prepared\")}>\n                  <MainItem\n                    title=\"Prepared\"\n                    count={0}\n                    active={props.filterPreparation === \"prepared\"}\n                  />\n                </div>\n                <div onClick={() => props.setFilterPreparation(\"not prepared\")}>\n                  <MainItem\n                    title=\"Not Prepared\"\n                    count={0}\n                    active={props.filterPreparation === \"not prepared\"}\n                  />\n                </div>\n              </section>\n            )}\n            {/* END FILTER OF EXAM PREPARATION ================================ */}\n\n            {/* FILTER OF EXAMINATION PROGRESS ================================ */}\n            {props.reportTitle === reportTitleType.EXAMINATION_PROGRESS && (\n              <section>\n                <div onClick={() => props.setFilterExamProgress(\"all\")}>\n                  <MainItem\n                    title=\"All\"\n                    count={0}\n                    active={props.filterExamProgress === \"all\"}\n                  />\n                </div>\n                <div onClick={() => props.setFilterExamProgress(\"Done\")}>\n                  <MainItem\n                    title=\"Completed exam\"\n                    count={0}\n                    active={props.filterExamProgress === \"Done\"}\n                  />\n                </div>\n                <div onClick={() => props.setFilterExamProgress(\"Active\")}>\n                  <MainItem\n                    title=\"Remaining Exam\"\n                    count={0}\n                    active={props.filterExamProgress === \"Active\"}\n                  />\n                </div>\n              </section>\n            )}\n            {/* END FILTER OF EXAMINATION PROGRESS ================================ */}\n\n            {/* FILTER OF APPLICANTS PERFORMANCE ================================ */}\n            {(props.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE ||\n              props.reportTitle ===\n                reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE) && (\n              <section>\n                <div onClick={() => props.setFilterApplicantPerformance(\"all\")}>\n                  <MainItem\n                    title=\"All\"\n                    count={0}\n                    active={props.filterApplicantPerformance === \"all\"}\n                  />\n                </div>\n\n                {Object.values(ReportUserExamStatus).map((item, index) => (\n                  <div\n                    onClick={() => props.setFilterApplicantPerformance(item)}\n                    key={index + item}\n                  >\n                    <MainItem\n                      title={displayStatus(item)}\n                      count={0}\n                      active={props.filterApplicantPerformance === item}\n                    />\n                  </div>\n                ))}\n              </section>\n            )}\n            {/* END FILTER OF APPLICANTS PERFORMANCE ================================ */}\n          </div>\n        )}\n    </Fragment>\n  );\n};\n\nexport default React.memo(ExamReportFilters);\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { BiExport, BiFilterAlt } from \"react-icons/bi\";\nimport { FaEdit } from \"react-icons/fa\";\nimport { connect } from \"react-redux\";\nimport {\n  schoolLevelsStoreInterface,\n  SetReportDistrictId,\n  SetReportDistrictIdAction,\n} from \"../../../actions\";\nimport { course } from \"../../../interfaces/index\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport { StoreState } from \"../../../reducers\";\nimport { ExamReportReducerType } from \"../../../reducers/exam_report\";\nimport { loadExaminationProgress } from \"../../AdminDashboard/ExamDashboard/ExamDashboard\";\nimport {\n  CandidateExamPerformanceReportContentInterface,\n  CandidateExamPerformanceToPrintInterface,\n} from \"./CandidatePerformance\";\nimport {\n  ExaminationProgressReportContentInterface,\n  ExaminationProgressToPrintInterface,\n} from \"./DoneExamList\";\nimport {\n  examPreparationReportContentInterface,\n  ExamPreparationToPrintInterface,\n} from \"./ExamList\";\nimport {\n  ExamPerformanceToPrintInterface,\n  examPerformanceReportContentInterface,\n} from \"./ExamPerformance\";\nimport { reportTitleType } from \"./ExamReport\";\nimport ExamReportModals, { ModalForTypes } from \"./ExamReportModals\";\n\ntype ExamReportTitleProps = {\n  thisPeriod: string;\n  // FOR PRINT PDF =========================\n  downloading: boolean;\n  dataToPrint: any[] | null;\n  downlaodPDF: () => Promise<false | undefined>;\n  // FOR REPORT TYPE =========================\n  reportTitle: reportTitleType;\n  setReportTitle: (title: reportTitleType) => void;\n  // FOR GENERATE EXCEL =========================\n  generateReportModal: {\n    reportType: \"EXCEL\" | \"PDF\";\n    status: boolean;\n  } | null;\n  setGenerateReportModal: (\n    reportData: {\n      reportType: \"EXCEL\" | \"PDF\";\n      status: boolean;\n    } | null\n  ) => void;\n  excelReportTitle: string;\n  setExcelReportTitle: (title: string) => void;\n  updateExamToPrint: () => void;\n  // FOR EXCEL EXAM PREPARATION REPORT CONTENT ===============================\n  examPreparationReportContent: examPreparationReportContentInterface[];\n  setExamPreparationReportContent: (\n    content: examPreparationReportContentInterface[]\n  ) => void;\n  examsToPrint:\n    | ExamPreparationToPrintInterface[]\n    | ExamPerformanceToPrintInterface[]\n    | null;\n  // FOR EXCEL EXAM PERFORMANCE REPORT CONTENT ===============================\n  examPerformanceToPrint: ExamPerformanceToPrintInterface[] | null;\n  examPerformanceReportContent: examPerformanceReportContentInterface[];\n  setExamPerformanceReportContent: (\n    value: examPerformanceReportContentInterface[]\n  ) => void;\n\n  // FOR EXCEL TOP 30 EXAM PERFORMANCE REPORT CONTENT ===============================\n  exam30PerformanceToPrint: ExamPerformanceToPrintInterface[] | null;\n  exam30PerformanceReportContent: examPerformanceReportContentInterface[];\n  setExam30PerformanceReportContent: (\n    value: examPerformanceReportContentInterface[]\n  ) => void;\n\n  // FOR EXCEL EXAMINATION PROGRESS REPORT CONTENT ===============================\n  examinationProgressToPrint: ExaminationProgressToPrintInterface[] | null;\n  examinationProgressReportContent: ExaminationProgressReportContentInterface[];\n  setExaminationProgressExamPerformanceReportContent: (\n    value: ExaminationProgressReportContentInterface[]\n  ) => void;\n\n  // FOR EXCEL CANDIDATE EXAM PERFORMANCE REPORT CONTENT ===============================\n  candidateExamPerformanceToPrint:\n    | CandidateExamPerformanceToPrintInterface[]\n    | null;\n  candidateExamPerformanceReportContent: CandidateExamPerformanceReportContentInterface[];\n  setCandidateExamPerformanceReportContent: (\n    value: CandidateExamPerformanceReportContentInterface[]\n  ) => void;\n\n  // FOR EXCEL TOP 30 CANDIDATE EXAM PERFORMANCE REPORT CONTENT ===============================\n  candidate30ExamPerformanceToPrint:\n    | CandidateExamPerformanceToPrintInterface[]\n    | null;\n  candidate30ExamPerformanceReportContent: CandidateExamPerformanceReportContentInterface[];\n  setCandidate30ExamPerformanceReportContent: (\n    value: CandidateExamPerformanceReportContentInterface[]\n  ) => void;\n\n  // FOR CHOOSING LOCATION ===========================\n  adminExamReport: ExamReportReducerType;\n  SetReportDistrictId: (\n    data: {\n      district_id: string;\n      district_name: string;\n    } | null\n  ) => SetReportDistrictIdAction;\n\n  // FROM REDUX =================\n  schoolLevels: schoolLevelsStoreInterface;\n  courses: course[] | null;\n  examsList: ExamItemResponse[] | null;\n};\n\nconst ExamReportTitle: React.FC<ExamReportTitleProps> = (props) => {\n  const [changeReport, setChangeReport] = useState<boolean>(false);\n  const [districtModal, setDistrictModal] = useState<boolean>(false);\n  const [excelModal, setExcelModal] = useState<boolean>(false);\n  const [courseModal, setCourseModal] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (\n      props.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n      props.adminExamReport.reportDistrictId === null\n    ) {\n      setDistrictModal(true);\n    }\n    if (\n      props.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n      props.adminExamReport.reportDistrictId !== null\n    ) {\n      setDistrictModal(false);\n    }\n  }, [props.adminExamReport.reportDistrictId, props.reportTitle]);\n\n  return (\n    <Fragment>\n      <div className=\"grid md:grid-cols-12 items-center\">\n        <div className=\"col-span-1 md:col-span-8\">\n          <div className=\"mt-4 mx-4 flex flex-col gap-1\">\n            <span className=\"text-xl font-bold text-gray-700\">Exam Report</span>\n            <div\n              className=\"flex flex-row gap-2 items-end cursor-pointer\"\n              onClick={() => setChangeReport(true)}\n            >\n              <span className=\"text-gray-500 text-xl\">Report type: </span>\n              <span className=\"text-blue-600 text-3xl font-bold underline\">\n                {props.reportTitle}{\" \"}\n                {props.reportTitle ===\n                  reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n                props.adminExamReport.reportDistrictId\n                  ? props.adminExamReport.reportDistrictId.district_name\n                  : \"\"}\n              </span>\n            </div>\n            {(props.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE ||\n              props.reportTitle ===\n                reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE ||\n              props.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE) && (\n              <div className=\"flex flex-wrap justify-starts items-center text-xs text-gray-800 font-medium gap-1 my-1\">\n                <span className=\"text-gray-500\">Filter result: </span>\n                {props.adminExamReport.reportDistrictId &&\n                (props.reportTitle ===\n                  reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE ||\n                  props.reportTitle ===\n                    reportTitleType.EXAM_DISTRICT_PERFORMANCE) ? (\n                  <span className=\"px-2 py-1 rounded bg-gray-300\">\n                    # {props.adminExamReport.reportDistrictId.district_name}\n                  </span>\n                ) : (\n                  <span className=\"px-2 py-1 rounded bg-gray-300\">\n                    # All district\n                  </span>\n                )}\n                {props.adminExamReport.reportCourseId ? (\n                  props.reportTitle ===\n                    reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE && (\n                    <span className=\"px-2 py-1 rounded bg-gray-300\">\n                      #\n                      {props.adminExamReport.reportCourseId.course_name +\n                        \" (\" +\n                        props.adminExamReport.reportCourseId.course_code +\n                        \")\"}\n                    </span>\n                  )\n                ) : (\n                  <span className=\"px-2 py-1 rounded bg-gray-300\">\n                    # All exams\n                  </span>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n        <div className=\"col-span-1 md:col-span-4\">\n          <div className=\"float-right mt-3\">\n            {props.dataToPrint && props.dataToPrint.length > 0 && (\n              <div className=\"flex flex-row items-center justify-end font-bold mb-2\">\n                <BiExport className=\"text-2xl text-gray-500\" />\n                <span className=\"text-gray-500\">Export as</span>\n                <button\n                  className={`px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200 focus:outline-none`}\n                  // disabled={\n                  //   props.examsToPrint && props.examsToPrint.length <= 0\n                  //     ? true\n                  //     : false\n                  // }\n                  onClick={() => {\n                    props.updateExamToPrint();\n                    setExcelModal(true);\n                    props.setGenerateReportModal({\n                      reportType: \"EXCEL\",\n                      status: true,\n                    });\n                  }}\n                >\n                  EXCEL\n                </button>\n                <button\n                  className={`px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200 focus:outline-none ${\n                    props.downloading && \"cursor-wait\"\n                  }`}\n                  onClick={() => props.downlaodPDF()}\n                  disabled={props.downloading}\n                >\n                  PDF\n                </button>\n              </div>\n            )}\n\n            <div>\n              <div\n                onClick={() => setChangeReport(true)}\n                className=\"bg-blue-50 py-2 px-2 border border-blue-300 text-blue-600 font-medium hover:bg-blue-100 flex flex-row items-center justify-center gap-2 text-sm float-right\"\n              >\n                <FaEdit className=\"text-xl\" />\n                Change Report\n              </div>\n            </div>\n\n            <section className=\"flex items-center gap-1 float-right mt-1\">\n              {(props.reportTitle ===\n                reportTitleType.EXAM_DISTRICT_PERFORMANCE ||\n                props.reportTitle ===\n                  reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE) && (\n                <div\n                  onClick={() => setDistrictModal(true)}\n                  className=\"btn bg-blue-50 border border-blue-300 text-blue-600 cursor-pointer hover:bg-blue-100 flex flex-row items-center justify-center gap-2 text-sm \"\n                >\n                  <BiFilterAlt className=\"text-xl\" />\n                  Filter by district\n                </div>\n              )}\n              {(props.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE ||\n                props.reportTitle ===\n                  reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE) && (\n                <div\n                  onClick={() => setCourseModal(true)}\n                  className=\"btn bg-blue-50 border border-blue-300 text-blue-600 cursor-pointer hover:bg-blue-100 flex flex-row items-center justify-center gap-2 text-sm \"\n                >\n                  <BiFilterAlt className=\"text-xl\" />\n                  Filter by exam\n                </div>\n              )}\n            </section>\n          </div>\n        </div>\n      </div>\n\n      {/* GENERATE EXCEL MODAL CONTROLLERS ============================================ */}\n      {excelModal && (\n        <ExamReportModals\n          modalFor={ModalForTypes.generateReportModal}\n          modalState={excelModal}\n          changeModalState={setExcelModal}\n          reportTitle={props.reportTitle}\n          setGenerateReportModal={props.setGenerateReportModal}\n          excelReportTitle={props.excelReportTitle}\n          setExcelReportTitle={props.setExcelReportTitle}\n          updateExamToPrint={props.updateExamToPrint}\n          generateReportModal={props.generateReportModal}\n          // EXAM PREPARATION ######################\n          examsToPrint={props.examsToPrint}\n          examPreparationReportContent={props.examPreparationReportContent}\n          setExamPreparationReportContent={\n            props.setExamPreparationReportContent\n          }\n          // EXAM PERFORMANCE ######################\n          examPerformanceToPrint={props.examPerformanceToPrint}\n          examPerformanceReportContent={props.examPerformanceReportContent}\n          setExamPerformanceReportContent={\n            props.setExamPerformanceReportContent\n          }\n          // TOP 30 EXAM PERFORMANCE ######################\n          exam30PerformanceToPrint={props.exam30PerformanceToPrint}\n          exam30PerformanceReportContent={props.exam30PerformanceReportContent}\n          setExam30PerformanceReportContent={\n            props.setExam30PerformanceReportContent\n          }\n          // EXAMINATION PROGRESS ######################\n          examinationProgressToPrint={props.examinationProgressToPrint}\n          examinationProgressReportContent={\n            props.examinationProgressReportContent\n          }\n          setExaminationProgressExamPerformanceReportContent={\n            props.setExaminationProgressExamPerformanceReportContent\n          }\n          // CANDIDATE EXAM PERFORMANCE ######################\n          candidateExamPerformanceToPrint={\n            props.candidateExamPerformanceToPrint\n          }\n          candidateExamPerformanceReportContent={\n            props.candidateExamPerformanceReportContent\n          }\n          setCandidateExamPerformanceReportContent={\n            props.setCandidateExamPerformanceReportContent\n          }\n          candidate30ExamPerformanceToPrint={\n            props.candidate30ExamPerformanceToPrint\n          }\n          candidate30ExamPerformanceReportContent={\n            props.candidate30ExamPerformanceReportContent\n          }\n          setCandidate30ExamPerformanceReportContent={\n            props.setCandidate30ExamPerformanceReportContent\n          }\n        />\n      )}\n      {/* END GENERATE EXCEL MODAL CONTROLLERS ============================================ */}\n\n      {/* CHANGE REPORT TYPE MODAL CONTROLLERS ============================================ */}\n      {changeReport && (\n        <ExamReportModals\n          modalFor={ModalForTypes.title}\n          modalState={changeReport}\n          reportTitle={props.reportTitle}\n          changeModalState={setChangeReport}\n          setReportTitle={props.setReportTitle}\n          setExcelReportTitle={props.setExcelReportTitle}\n        />\n      )}\n      {/* END CHANGE REPORT TYPE MODAL CONTROLLERS ============================================ */}\n\n      {/* CHANGE DISTRICT FILTER MODAL CONTROLLERS ============================================ */}\n      {districtModal && (\n        <ExamReportModals\n          modalFor={ModalForTypes.choose_district}\n          modalState={districtModal}\n          changeModalState={setDistrictModal}\n          districtId={\n            props.adminExamReport.reportDistrictId\n              ? props.adminExamReport.reportDistrictId.district_id\n              : \"all\"\n          }\n          reportTitle={props.reportTitle}\n        />\n      )}\n      {/* END CHANGE DISTRICT FILTER MODAL CONTROLLERS ============================================ */}\n\n      {/* CHANGE COURSE FILTER MODAL CONTROLLERS ============================================ */}\n      {courseModal &&\n        loadExaminationProgress(\n          props.adminExamReport.DoneExam,\n          props.examsList,\n          props.schoolLevels.selectedEducationCategory,\n          props.courses,\n          props.schoolLevels.school_levels,\n          props.thisPeriod\n        ) && (\n          <ExamReportModals\n            modalFor={ModalForTypes.choose_exam}\n            modalState={courseModal}\n            AllExamData={\n              loadExaminationProgress(\n                props.adminExamReport.DoneExam,\n                props.examsList,\n                props.schoolLevels.selectedEducationCategory,\n                props.courses,\n                props.schoolLevels.school_levels,\n                props.thisPeriod\n              )!.finished\n            }\n            changeModalState={setCourseModal}\n            thisExam={props.adminExamReport.reportCourseId}\n          />\n        )}\n      {/* END CHANGE COURSE FILTER MODAL CONTROLLERS ============================================ */}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  adminExamReport,\n  schoolLevels,\n  course,\n  prepareExam,\n}: StoreState): {\n  schoolLevels: schoolLevelsStoreInterface;\n  courses: course[] | null;\n  examsList: ExamItemResponse[] | null;\n  adminExamReport: ExamReportReducerType;\n} => {\n  return {\n    schoolLevels,\n    courses: course.courses,\n    examsList: prepareExam.examsList,\n    adminExamReport,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, { SetReportDistrictId })(ExamReportTitle)\n);\n","import React from \"react\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport { RiFileExcel2Fill } from \"react-icons/ri\";\n\ninterface ExportToExcelProps {\n  fileData: any[];\n  fileName: string;\n  btnName?: string;\n  className?: string;\n  showIcon?: boolean;\n}\n\nconst ExportToExcel: React.FC<ExportToExcelProps> = ({\n  fileData,\n  fileName,\n  btnName = \"Excel\",\n  className = \"flex items-center gap-1 px-4 py-1 rounded text-green-700 bg-white border hover:text-white hover:bg-green-700 border-green-700 font-bold\",\n  showIcon = true,\n}) => {\n  const fileType =\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n  const fileExtension = \".xlsx\";\n\n  const exportToCSV = (apiData: any[], fileName: string) => {\n    const ws = XLSX.utils.json_to_sheet(apiData);\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n    const data = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n\n  return (\n    <button\n      onClick={(e) => exportToCSV(fileData, fileName)}\n      className={className}\n    >\n      {showIcon && <RiFileExcel2Fill />}\n      {btnName}\n    </button>\n  );\n};\n\nexport default ExportToExcel;\n","export default __webpack_public_path__ + \"static/media/mineduc.11a9ae1c.png\";","import jsPDF from \"jspdf\";\nimport { DATE } from \"../../utils/functions\";\nimport Logo from \"../../utils/mineduc.png\";\nrequire(\"jspdf-autotable\");\n\nexport const addFooters = (doc: any) => {\n  const pageCount = doc.internal.getNumberOfPages();\n\n  doc.setFont(\"helvetica\", \"italic\");\n  doc.setFontSize(8);\n  for (var i = 1; i <= pageCount; i++) {\n    doc.setPage(i);\n    doc.text(\n      \"Page \" + String(i) + \" of \" + String(pageCount),\n      doc.internal.pageSize.width / 2,\n      297,\n      {\n        align: \"center\",\n      }\n    );\n  }\n};\n\nexport type reportSettingsInterface = {\n  doneBy: string;\n  title: string;\n  subjectTitle: string;\n  subject: string;\n  institute: string;\n  period: string;\n  footer: string;\n  orientation?: \"p\" | \"l\";\n};\n\nexport const generatePDF = async (\n  reportSettings: reportSettingsInterface,\n  table: HTMLElement,\n  callBack: (status: boolean) => void\n) => {\n  callBack(true);\n  const orientation: \"p\" | \"l\" = reportSettings.orientation\n    ? reportSettings.orientation\n    : \"p\";\n  var lMargin: number = 20; //left margin in mm\n  var rMargin: number = 20; //right margin in mm\n  var pdfInMM: number = 185; // width of A4 in mm\n\n  //   var doc = new jsPDF(\"p\", \"mm\", \"a4\");\n  var doc: any = new jsPDF(orientation, \"mm\", \"a4\");\n\n  doc.setTextColor(95, 95, 95);\n  doc.setFontSize(28);\n  // doc.text(\n  //   this.props.reportTitle,\n  //   doc.internal.pageSize.getWidth() / 2,\n  //   30,\n  //   undefined,\n  //   \"center\"\n  // );\n  doc.addImage(Logo, \"png\", 20, 20, 10, 10);\n  doc.text(\"MINEDUC\", 32, 28.5, undefined, \"left\");\n  //   doc.setTextColor(19, 90, 152);\n  doc.setFontSize(26);\n  doc.text(\n    reportSettings.title,\n    doc.internal.pageSize.getWidth() / 2,\n    42.7,\n    undefined,\n    \"center\"\n  );\n\n  doc.setFontSize(20);\n  doc.text(\n    reportSettings.institute,\n    doc.internal.pageSize.getWidth() / 2,\n    53.7,\n    undefined,\n    \"center\"\n  );\n\n  var lines;\n  lines = doc.splitTextToSize(\n    reportSettings.subject,\n    pdfInMM - lMargin - rMargin\n  );\n  // if (reportSettings.position) {\n  // } else if (reportSettings.subject) {\n  //   lines = doc.splitTextToSize(\n  //     reportSettings.subject,\n  //     pdfInMM - lMargin - rMargin\n  //   );\n  // }\n\n  //   doc.setTextColor(0, 123, 255);\n  doc.setFontSize(16);\n  //   doc.text(lines, doc.internal.pageSize.getWidth() / 2, 45, {\n  //     maxWidth: 85,\n  //     align: \"center\",\n  //   });\n\n  var y = 63,\n    width;\n  doc.setTextColor(95, 95, 95);\n  doc.text(`${reportSettings.subjectTitle}: `, lMargin, y);\n  width = doc.getTextWidth(`${reportSettings.subjectTitle}: `);\n  // if (reportSettings.position) {\n  // } else if (reportSettings.position) {\n  //   doc.text(`Subject: `, lMargin, y);\n  //   width = doc.getTextWidth(\"Subject: \");\n  // }\n  // doc.setFontType(\"bold\");\n  doc.setTextColor(38, 38, 38);\n  for (var i = 0; i < lines.length; i++) {\n    if (y > 280) {\n      y = 10;\n      doc.addPage();\n    }\n    // doc.text(15, y, lines[i]);\n    doc.text(lines[i], lMargin + width, y);\n    y = y + 7;\n  }\n  doc.setTextColor(95, 95, 95);\n  doc.text(\"Period: \", lMargin, y + 3);\n  width = doc.getTextWidth(\"Period: \");\n  doc.setTextColor(38, 38, 38);\n  doc.text(reportSettings.period, lMargin + width, y + 3);\n\n  doc.autoTable({\n    html: table,\n    startY: 85,\n    margin: { horizontal: 20 },\n    cellPadding: 3, // Horizontal cell padding\n    // fontSize: 12,\n    rowHeight: 20,\n    // styles: { overflow: \"linebreak\" },\n    bodyStyles: { valign: \"top\" },\n    columnStyles: { email: { cellWidth: \"wrap\" } },\n    theme: \"striped\",\n    tableWidth: true,\n  });\n\n  doc.setFontSize(12);\n  let finalY = doc.lastAutoTable.finalY; // The y position on the page\n  doc.text(`Reported by: ${reportSettings.doneBy}`, lMargin, finalY + 15);\n  doc.text(\n    \"Report downloaded on \" + DATE(new Date().toString()),\n    lMargin,\n    finalY + 23\n  );\n\n  addFooters(doc);\n  await doc\n    .save(\n      `${\n        reportSettings.title +\n        \": \" +\n        reportSettings.subject +\n        \": \" +\n        reportSettings.period\n      }.pdf`,\n      { returnPromise: true }\n    )\n    .then(callBack(false));\n};\n","import { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  MySchoolInterface,\n  PostSchoolInterface,\n  SchoolInfoInterface,\n  SchoolsInterface,\n} from \"../shared/interfaces\";\n// import { setAxiosToken } from \"../utils/AxiosToken\";\nimport axios from \"axios\";\nimport { API } from \"../utils/api\";\nimport { errorToText } from \"../utils/errors\";\nimport { placedCandidateInterface } from \"../interfaces/marks_publication\";\nimport { PlacementListInterface } from \"../containers/PlacementLimit/PlacementLimit\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\nexport interface GetSchoolsAction {\n  type: ActionTypes.GET_SCHOOLS;\n  payload: SchoolsInterface[];\n}\n\nexport interface GetSchoolByIdAction {\n  type: ActionTypes.GET_SCHOOLS_BY_ID;\n  payload: MySchoolInterface;\n}\n\nexport interface GetSchoolsInfoAction {\n  type: ActionTypes.GET_SCHOOLS_INFO;\n  payload: SchoolInfoInterface[];\n}\n\nexport interface CreateSchoolAction {\n  type: ActionTypes.CREATE_SCHOOL;\n  payload: SchoolsInterface;\n}\n\nexport interface UpdateSchoolAction {\n  type: ActionTypes.UPDATE_SCHOOL;\n  payload: SchoolsInterface;\n}\n\nexport interface DeleteSchoolAction {\n  type: ActionTypes.DELETE_SCHOOL;\n  payload: string;\n}\n\n// School Posts interfaces\nexport interface FetchSchoolPostsAction {\n  type: ActionTypes.FETCH_SCHOOL_POSTS;\n  payload: PostSchoolInterface[];\n}\n\n// School Placements interfaces\nexport interface GetSchoolPlacementAction {\n  type: ActionTypes.GET_SCHOOL_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\n// District School Placements interfaces\nexport interface GetDistrictPlacementAction {\n  type: ActionTypes.GET_DISTRICT_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\n// District School Placements interfaces\nexport interface GetSessionPlacementAction {\n  type: ActionTypes.GET_SESSION_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\nexport interface FetchDistrictPostsAction {\n  type: ActionTypes.FETCH_DISTRICT_POSTS;\n  payload: PostSchoolInterface[];\n}\n\nexport interface CreateSchoolPostAction {\n  type: ActionTypes.CREATE_SCHOOL_POST;\n  payload: PostSchoolInterface;\n}\n\nexport interface UpdateSchoolPostAction {\n  type: ActionTypes.UPDATE_SCHOOL_POST;\n  payload: {\n    TYPE: \"DISTRICT\" | \"SCHOOL\" | \"RECEIVED\";\n    data: PostSchoolInterface;\n  };\n}\n\nexport interface DeleteSchoolPostAction {\n  type: ActionTypes.DELETE_SCHOOL_POST;\n  payload: PostSchoolInterface[];\n}\n\n// Get Institute Limit Posts Action interfaces\nexport interface GetInstitutePlacementLimitAction {\n  type: ActionTypes.GET_INSTITUTE_PLACEMENT_LIMIT;\n  payload: PlacementListInterface[];\n}\n\nexport interface GetDistrictPlacementLimitAction {\n  type: ActionTypes.GET_DISTRICT_PLACEMENT_LIMIT;\n  payload: PlacementListInterface[];\n}\n\nexport interface UpdateInstitutePlacementLimitAction {\n  type: ActionTypes.UPDATE_INSTITUTE_PLACEMENT_LIMIT;\n  payload: { limit_id: string; confirmed_post: number };\n}\n\nexport type SchoolActionType =\n  | GetSchoolsAction\n  | GetSchoolByIdAction\n  | GetSchoolsInfoAction\n  | CreateSchoolAction\n  | UpdateSchoolAction\n  | DeleteSchoolAction\n  | FetchSchoolPostsAction\n  | GetSchoolPlacementAction\n  | FetchDistrictPostsAction\n  | CreateSchoolPostAction\n  | UpdateSchoolPostAction\n  | DeleteSchoolPostAction\n  | GetDistrictPlacementAction\n  | GetSessionPlacementAction\n  | GetInstitutePlacementLimitAction\n  | GetDistrictPlacementLimitAction\n  | UpdateInstitutePlacementLimitAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSchools = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      const res = await axios.get<SchoolsInterface[]>(\n        `${API.APPLICATION}/schools`\n      );\n      dispatch<GetSchoolsAction>({\n        type: ActionTypes.GET_SCHOOLS,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSchoolById = (schoolId: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<MySchoolInterface>(\n        `${API.APPLICATION}/schools/${schoolId}`\n      );\n      dispatch<GetSchoolByIdAction>({\n        type: ActionTypes.GET_SCHOOLS_BY_ID,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// export const getSchoolsInfo = () => {\n//   return async (dispatch: Dispatch) => {\n//     setAxiosToken();\n//     const response = await axios.get<SchoolInfoInterface[]>(url);\n\n//     dispatch<GetSchoolsInfoAction>({\n//       type: ActionTypes.GET_SCHOOLS_INFO,\n//       payload: response.data,\n//     });\n//   };\n// };\n\nexport const createSchool = (data: SchoolsInterface) => {\n  console.log({ schools: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateSchoolAction>({\n      type: ActionTypes.CREATE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const updateSchool = (data: SchoolsInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateSchoolAction>({\n      type: ActionTypes.UPDATE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteSchool = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteSchoolAction>({\n      type: ActionTypes.DELETE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const fetchSchoolPosts = (school_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PostSchoolInterface[]>(\n        `${API.PLACEMENT}/requestpost/school/${school_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ schoolPosts: res });\n      console.log(\"====================================\");\n\n      dispatch<FetchSchoolPostsAction>({\n        type: ActionTypes.FETCH_SCHOOL_POSTS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSchoolPlacement = (school_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/school/${school_id}`\n      );\n\n      console.log({ getSchoolPlacement: res.data });\n\n      dispatch<GetSchoolPlacementAction>({\n        type: ActionTypes.GET_SCHOOL_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createSchoolPost = (data: PostSchoolInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateSchoolPostAction>({\n      type: ActionTypes.CREATE_SCHOOL_POST,\n      payload: data,\n    });\n  };\n};\n\nexport const updateSchoolPost = (\n  TYPE: \"DISTRICT\" | \"SCHOOL\" | \"RECEIVED\",\n  data: PostSchoolInterface\n) => {\n  console.log({ TYPE, data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateSchoolPostAction>({\n      type: ActionTypes.UPDATE_SCHOOL_POST,\n      payload: { TYPE, data },\n    });\n  };\n};\n\nexport const deleteSchoolPost = (data: PostSchoolInterface[]) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteSchoolPostAction>({\n      type: ActionTypes.DELETE_SCHOOL_POST,\n      payload: data,\n    });\n  };\n};\n\nexport const fetchDistrictPosts = (district_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PostSchoolInterface[]>(\n        `${API.PLACEMENT}/requestpost/district/${district_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ fetchDistrictPosts: res });\n      console.log(\"====================================\");\n\n      dispatch<FetchDistrictPostsAction>({\n        type: ActionTypes.FETCH_DISTRICT_POSTS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getDistrictPlacement = (\n  district_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/district/${district_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getDistrictPlacement: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetDistrictPlacementAction>({\n        type: ActionTypes.GET_DISTRICT_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSessionPlacement = (session_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/session/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getSessionPlacement: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetSessionPlacementAction>({\n        type: ActionTypes.GET_SESSION_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getInstitutePlacementLimit = (\n  institute_id: string,\n  session_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PlacementListInterface[]>(\n        `${API.PLACEMENT}/confirmedpostrequest/institute/${institute_id}/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getInstitutePlacementLimit: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetInstitutePlacementLimitAction>({\n        type: ActionTypes.GET_INSTITUTE_PLACEMENT_LIMIT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getDistrictPlacementLimit = (\n  district_id: string,\n  session_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PlacementListInterface[]>(\n        `${API.PLACEMENT}/confirmedpostrequest/district/${district_id}/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getDistrictPlacementLimit: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetDistrictPlacementLimitAction>({\n        type: ActionTypes.GET_DISTRICT_PLACEMENT_LIMIT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const updateInstitutePlacementLimit = (data: {\n  limit_id: string;\n  confirmed_post: number;\n}) => {\n  console.log(\"====================================\");\n  console.log({ updateInstitutePlacementLimit: data });\n  console.log(\"====================================\");\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateInstitutePlacementLimitAction>({\n      type: ActionTypes.UPDATE_INSTITUTE_PLACEMENT_LIMIT,\n      payload: data,\n    });\n  };\n};\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { MdLock, MdLocationOn } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert, schoolLevelsStoreInterface } from \"../../actions\";\nimport { getAllRoom } from \"../../actions/location\";\nimport { getSchools } from \"../../actions/schools\";\nimport {\n  blockUserToSystem,\n  unBlockUserToSystem,\n  resetUserAccess,\n} from \"../../actions/users\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport Loading from \"../../components/Loading/Loading\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport Table from \"../../components/Table/Table\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport {\n  getRoleById,\n  capitalizeFirstLetter,\n  getInstituteById,\n} from \"../../shared/dataTest\";\nimport {\n  RoomLocationInterface,\n  LocationRoomTableInterface,\n  DistrictInterface,\n  SystemUserRoleInterface,\n  UserInterface,\n  AccessTaskInterface,\n  SchoolsInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport { distinctDistrict } from \"../Locations/Locations\";\nimport { UserAccess } from \"./UserAccess\";\nimport UserRole from \"./UserRole\";\nimport profile from \"../../shared/blank_profile.png\"; // with im\n\nexport const getUserById = (users: UserInterface[], userId: string) => {\n  return users.find((item) => item.user_id === userId);\n};\n\nexport enum ModalState {\n  View_User = \"View User Info\",\n  Add_Access = \"Add Access To User\",\n  Update_Access = \"Update User Access\",\n  Close_Modal = \"Close Modal\",\n}\n\n// Tobe replaced with Emmy's function\nexport const LocationsInArray = (\n  LocationData: RoomLocationInterface[]\n): LocationRoomTableInterface[] | [] => {\n  let locationTemp: LocationRoomTableInterface[] = [];\n  for (let p in LocationData) {\n    let districts = LocationData[p].districts;\n    for (let d in districts) {\n      let centers = districts[d].centers;\n      for (let c in centers) {\n        let rooms = centers[c].rooms;\n        for (let r in rooms) {\n          locationTemp.push({\n            province_id: LocationData[p]._id,\n            province_name: LocationData[p].province_name,\n            district_id: districts[d]._id,\n            district_name: districts[d].district_name,\n            center_id: centers[c]._id,\n            center_name: centers[c].center_name,\n            room_id: rooms[r]._id,\n            room_name: rooms[r].room_number.toString(),\n            capacity: rooms[r].capacity,\n            occupied: rooms[r].occupied,\n          });\n        }\n      }\n    }\n  }\n  return locationTemp;\n};\n\ninterface AppProps {\n  users: UserInterface[];\n  roleList: SystemUserRoleInterface[];\n  userTypes: \"all\" | \"active\" | \"blocked\";\n  loadingUser: boolean;\n  schoolLevels: schoolLevelsStoreInterface;\n  setLoadingUser: (value: boolean) => void;\n  manageUser: UserInterface | null;\n  setManageUser: (value: UserInterface | null) => void;\n  changeRole: boolean;\n  setChangeRole: (value: boolean) => void;\n  currentPage: number;\n\n  // REDUX =================\n  allRoom: RoomLocationInterface[];\n  getAllRoom: Function;\n  schools: SchoolsInterface[];\n  getSchools: Function;\n  blockUserToSystem: Function;\n  unBlockUserToSystem: Function;\n  resetUserAccess: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface AppStates {\n  manageUserId: string;\n  loadingRequest: boolean;\n  loading: boolean;\n  loadingSchool: boolean;\n  loadingRequestType: \"RESET\" | \"STATUS\" | \"CHANGE_ROLE\" | null;\n  schoolList: SchoolsInterface[] | null;\n  roomList: RoomLocationInterface[] | null;\n  roomTable: LocationRoomTableInterface[] | null;\n  userAccess: AccessTaskInterface[] | null;\n  currentAccess: AccessTaskInterface | null;\n}\n\nclass UserList extends Component<AppProps, AppStates> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      manageUserId: \"\",\n      loadingRequest: false,\n      loading: true,\n      loadingSchool: true,\n      loadingRequestType: null,\n      schoolList: null,\n      roomList: null,\n      roomTable: null,\n      userAccess: null,\n      currentAccess: null,\n    };\n  }\n\n  setManageUserId = (value: string) => {\n    this.setState({ manageUserId: value });\n  };\n\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n\n  setLoadingSchool = (value: boolean) => {\n    this.setState({ loadingSchool: value });\n  };\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingRequestType = (\n    value: \"RESET\" | \"STATUS\" | \"CHANGE_ROLE\" | null\n  ) => {\n    this.setState({ loadingRequestType: value });\n  };\n\n  setRoomList = (value: RoomLocationInterface[] | null) => {\n    this.setState({ roomList: value });\n  };\n\n  setRoomTables = (value: LocationRoomTableInterface[] | null) => {\n    this.setState({ roomTable: value });\n  };\n\n  setCurrentAccess = (value: AccessTaskInterface | null) => {\n    this.setState({ currentAccess: value });\n  };\n\n  setSchoolList = (value: SchoolsInterface[] | null) => {\n    this.setState({ schoolList: value });\n  };\n\n  setUserAccess = (value: AccessTaskInterface[] | null) => {\n    this.setState({ userAccess: value });\n  };\n\n  componentDidMount = () => {\n    if (this.props.schools.length === 0) {\n      this.props.getSchools(\n        (status: boolean, msg: string, data?: SchoolsInterface[]) => {\n          this.setLoadingSchool(status);\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data) {\n              this.setLoadingSchool(false);\n              this.setSchoolList(data);\n            }\n          }\n        }\n      );\n    } else {\n      this.setSchoolList(this.props.schools);\n      this.setLoadingSchool(false);\n    }\n\n    if (this.props.allRoom.length === 0) {\n      this.props.getAllRoom(\n        (status: boolean, msg: string, data?: RoomLocationInterface[]) => {\n          this.setLoading(status);\n          if (!status && msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          if (data && data.length > 0) {\n            this.setRoomList(data);\n            this.setRoomTables(LocationsInArray(data));\n          }\n        }\n      );\n    } else if (this.state.loading) {\n      this.setRoomList(this.props.allRoom);\n      this.setRoomTables(LocationsInArray(this.props.allRoom));\n      this.setLoading(false);\n    }\n  };\n\n  tableData = (): JSX.Element[] => {\n    if (\n      this.props.loadingUser ||\n      this.state.loading ||\n      this.state.loadingSchool\n    ) {\n      return [\n        <tr\n          key={Math.random()}\n          className=\"border-b border-gray-200 hover:bg-gray-100\"\n        >\n          <td className=\"p-3 text-center\" colSpan={8}>\n            <Loading />\n          </td>\n        </tr>,\n      ];\n    }\n\n    let data: UserInterface[] = this.props.users;\n    if (data.length <= 0) {\n      return [\n        <tr\n          key={Math.random()}\n          className=\"border-b border-gray-200 hover:bg-gray-100\"\n        >\n          <td className=\"p-3 text-center\" colSpan={8}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    return data.map((user: UserInterface, index: number) => (\n      <tr\n        key={index + Math.random()}\n        className=\"border-b border-gray-200 hover:bg-gray-100 group cursor-pointer\"\n        onClick={() => {\n          this.props.setManageUser(user);\n          this.setManageUserId(user.user_id);\n        }}\n      >\n        <td className=\"p-3 text-left whitespace-nowrap\">{index + 1}</td>\n        <td className=\"p-3 text-left\">\n          <span>\n            {user.user_info &&\n              user.user_info.fname + \" \" + user.user_info.lname}\n          </span>\n        </td>\n        <td className=\"p-3 text-left\">{user.email}</td>\n        {/* <td className=\"p-3 text-left\">{user.phone_number}</td> */}\n        <td className=\"p-3 text-left\">\n          {user.user_info && user.user_info.sex === \"M\" ? \"Male\" : \"Female\"}\n        </td>\n        <td className=\"p-3 text-left text-blue-700 text-base font-medium\">\n          {user.default_access &&\n            user.default_access.system_user_role_id &&\n            user.default_access.system_user_role_id && (\n              <span\n                className={`px-2 py-1 font-semibold rounded text-blue-700 bg-blue-100 dark:bg-blue-700 dark:text-blue-100`}\n              >\n                {getRoleById(\n                  this.props.roleList,\n                  user.default_access.system_user_role_id\n                )?.role &&\n                  capitalizeFirstLetter(\n                    getRoleById(\n                      this.props.roleList,\n                      user.default_access.system_user_role_id\n                    )?.role\n                  )}\n              </span>\n            )}\n        </td>\n        {/* {userTypes === \"all\" && (\n          <td>\n            {user.is_active ? (\n              <span className={`px-2 py-1 font-semibold text-green-700`}>\n                Active\n              </span>\n            ) : (\n              <span className={`px-2 py-1 font-semibold text-red-700`}>\n                Blocked\n              </span>\n            )}\n          </td>\n        )} */}\n        <td className=\"px-3 text-center\">\n          <button\n            className=\"btn bg-gray-200 group-hover:bg-blue-700 group-hover:text-white focus:outline-none\"\n            title=\"Manage User Access\"\n            onClick={() => {\n              this.props.setManageUser(user);\n              this.setManageUserId(user.user_id);\n            }}\n          >\n            Manage\n          </button>\n        </td>\n      </tr>\n    ));\n  };\n\n  blockUser = async (user_id: string, actionType: boolean) => {\n    if (!user_id) {\n      this.props.PushPopupAlert({\n        title: \"User Access is required doesn't exist\",\n        theme: PopupAlertTheme.danger,\n      });\n    }\n\n    this.setLoadingRequest(true);\n\n    if (\n      !window.confirm(\n        `Are sure you want to ${actionType ? \"block\" : \"activate\"} this user?`\n      )\n    ) {\n      return this.setLoadingRequest(false);\n    }\n\n    try {\n      const res = await axios.patch(`${API.AUTH}/users/disactive/${user_id}`, {\n        is_active: !actionType,\n      });\n      if (res) {\n        console.log(\"====================================\");\n        console.log({ blockUserToSystem: res });\n        console.log(\"====================================\");\n        actionType\n          ? this.props.blockUserToSystem(user_id, this.props.currentPage)\n          : this.props.unBlockUserToSystem(user_id, this.props.currentPage);\n\n        this.props.PushPopupAlert({\n          title: `User has been ${actionType ? \"blocked\" : \"activated\"}!`,\n          theme: PopupAlertTheme.info,\n        });\n      }\n    } catch (error) {\n      console.error({ blockUser_ERROR: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n\n    this.setLoadingRequest(false);\n    user_id = \"\";\n  };\n\n  restUserAccess = async (user_id: string) => {\n    if (!user_id) {\n      this.props.PushPopupAlert({\n        title: \"User Access is required doesn't exist\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    if (!window.confirm(`Are sure you want to reset to default access?`)) {\n      return this.setLoadingRequest(false);\n    }\n\n    this.setLoadingRequest(true);\n    this.setLoadingRequestType(\"RESET\");\n\n    try {\n      const res = await axios.delete(`${API.AUTH}/custaccess/user/${user_id}`);\n      res && this.props.resetUserAccess(user_id, this.props.currentPage);\n      let resetedAccess: UserInterface | undefined = this.props.users.find(\n        (user) => user.user_id === user_id\n      );\n      if (resetedAccess) {\n        resetedAccess.default_access &&\n          this.setUserAccess(resetedAccess.default_access.access);\n        this.props.PushPopupAlert({\n          title: `Resetting User Access complete successfully`,\n          theme: PopupAlertTheme.info,\n        });\n        this.setCurrentAccess(null);\n      }\n    } catch (error) {\n      console.error({ reseting_user_access: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n\n    this.setLoadingRequest(false);\n    this.setLoadingRequestType(null);\n    user_id = \"\";\n  };\n\n  distinctDistrict = (\n    location: RoomLocationInterface[],\n    province_id?: string\n  ): DistrictInterface[] => {\n    let ids: string[] = [],\n      result: DistrictInterface[] = [];\n\n    if (province_id) {\n      result = location.find((item) => item._id === province_id)\n        ? location.find((item) => item._id === province_id)!.districts\n          ? location.find((item) => item._id === province_id)!.districts\n          : []\n        : [];\n    } else {\n      for (const key in location) {\n        if (Object.prototype.hasOwnProperty.call(location, key)) {\n          for (const keyDistrict in location[key].districts) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                location[key].districts,\n                keyDistrict\n              )\n            ) {\n              if (!ids.includes(location[key].districts[keyDistrict]._id)) {\n                ids.push(location[key].districts[keyDistrict]._id);\n                result.push(location[key].districts[keyDistrict]);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return result;\n  };\n\n  render() {\n    return (\n      <div>\n        {!this.props.manageUser && (\n          <div className=\"grid md:grid-cols-5 gap-2 mb-5\">\n            <div className={`md:col-span-5 rounded`}>\n              <div className=\"my-2 flex sm:flex-row flex-col justify-between\">\n                <div className=\"flex flex-col md:flex-row gap-1 items-center mx-1.5\">\n                  {/* <span className=\"text-lg\">All User</span>\n                  <MdChevronRight className=\"w-7 h-7\" />\n                  <span className=\"text-lg underline\">All User</span> */}\n                </div>\n              </div>\n              {this.props.users && (\n                <Table\n                  columns={[\n                    { columnTitle: \"#\", alignText: \"left\", padding: \"p-3\" },\n                    { columnTitle: \"Names\", alignText: \"left\", padding: \"p-3\" },\n                    { columnTitle: \"Email\", alignText: \"left\", padding: \"p-3\" },\n                    {\n                      columnTitle: \"Gender\",\n                      alignText: \"left\",\n                      padding: \"p-3\",\n                    },\n                    { columnTitle: \"Role\", alignText: \"left\", padding: \"p-3\" },\n                    // { columnTitle: \"Status\", alignText: \"left\", padding: \"p-3\" },\n                    { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n                  ]}\n                  rows={this.tableData}\n                  pagination={false}\n                  search={true}\n                  thColor=\"gray\"\n                  loading={\n                    this.props.loadingUser ||\n                    this.state.loading ||\n                    this.state.loadingSchool\n                  }\n                />\n              )}\n            </div>\n          </div>\n        )}\n\n        {/* -------------------------------------------------------- */}\n\n        {this.props.manageUser && (\n          <div className=\"bg-gray-100 h-100\">\n            {/* header */}\n            <div className=\"bg-white border-b border-t px-4 py-2 flex flex-col md:flex-row items-center gap-x-14\">\n              {this.props.users.find(\n                (user) => user.user_id === this.state.manageUserId\n              ) ? (\n                <div\n                  key={\n                    this.props.users.find(\n                      (user) => user.user_id === this.state.manageUserId\n                    )!.user_id + Math.random()\n                  }\n                  className=\"flex flex-col md:flex-row md:items-start items-center w-full gap-3\"\n                >\n                  <img\n                    src={\n                      this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.user_info.photo !== \"pic\"\n                        ? this.props.users.find(\n                            (user) => user.user_id === this.state.manageUserId\n                          )!.user_info.photo\n                        : profile\n                    }\n                    alt=\"\"\n                    className=\"rounded-full w-32 h-32\"\n                  />\n                  <div className=\"flex flex-col gap-1 items-start w-full\">\n                    <span className=\"text-2xl font-semibold\">\n                      {this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.user_info.fname +\n                        \" \" +\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.user_info.lname}\n                    </span>\n                    <div className=\"flex items-center\">\n                      <MdLock className=\"w-5 h-5\" />\n                      <span className=\"text-lg font-medium\">\n                        {this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.default_access &&\n                          getRoleById(\n                            this.props.roleList,\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.default_access!.system_user_role_id\n                          ).role}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-1\">\n                      <span className=\"text-gray-500\">Level:</span>\n                      <span className=\"text-base font-medium\">\n                        {this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.default_access &&\n                        getRoleById(\n                          this.props.roleList,\n                          this.props.users.find(\n                            (user) => user.user_id === this.state.manageUserId\n                          )!.default_access!.system_user_role_id\n                        ).district_required\n                          ? \"District\"\n                          : this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.default_access &&\n                            getRoleById(\n                              this.props.roleList,\n                              this.props.users.find(\n                                (user) =>\n                                  user.user_id === this.state.manageUserId\n                              )!.default_access!.system_user_role_id\n                            ).school_required\n                          ? \"School\"\n                          : this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.default_access &&\n                            getRoleById(\n                              this.props.roleList,\n                              this.props.users.find(\n                                (user) =>\n                                  user.user_id === this.state.manageUserId\n                              )!.default_access!.system_user_role_id\n                            ).room_required\n                          ? \"Room\"\n                          : this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.default_access &&\n                            getRoleById(\n                              this.props.roleList,\n                              this.props.users.find(\n                                (user) =>\n                                  user.user_id === this.state.manageUserId\n                              )!.default_access!.system_user_role_id\n                            ).education_institution_required\n                          ? \"Institute\"\n                          : \"-\"}\n                      </span>\n                    </div>\n                    {this.props.users.find(\n                      (user) => user.user_id === this.state.manageUserId\n                    )!.default_access &&\n                    getRoleById(\n                      this.props.roleList,\n                      this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.default_access!.system_user_role_id\n                    ).education_institution_required ? (\n                      <div className=\"flex items-center gap-1\">\n                        <span className=\"text-gray-500\">Institute:</span>\n                        <span className=\"text-base font-medium\">\n                          {this.props.users.find(\n                            (user) => user.user_id === this.state.manageUserId\n                          )!.default_access &&\n                          this.props.schoolLevels.education_categories &&\n                          getInstituteById(\n                            this.props.schoolLevels.education_categories,\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.default_access!.education_institution_id\n                          )\n                            ? getInstituteById(\n                                this.props.schoolLevels.education_categories,\n                                this.props.users.find(\n                                  (user) =>\n                                    user.user_id === this.state.manageUserId\n                                )!.default_access!.education_institution_id\n                              )!.education_category_title\n                            : \"Unknown Institute\"}\n                        </span>\n                      </div>\n                    ) : this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.default_access &&\n                      getRoleById(\n                        this.props.roleList,\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.default_access!.system_user_role_id\n                      ).district_required ? (\n                      <div className=\"flex items-center gap-1\">\n                        <span className=\"text-gray-500\">District:</span>\n                        <span className=\"text-base font-medium\">\n                          {this.props.users.find(\n                            (user) => user.user_id === this.state.manageUserId\n                          )!.default_access &&\n                            this.state.roomList &&\n                            distinctDistrict(this.state.roomList).find(\n                              (item) =>\n                                item.district_id ===\n                                this.props.users.find(\n                                  (user) =>\n                                    user.user_id === this.state.manageUserId\n                                )!.default_access!.district_id\n                            ) &&\n                            distinctDistrict(this.state.roomList).find(\n                              (item) =>\n                                item.district_id ===\n                                this.props.users.find(\n                                  (user) =>\n                                    user.user_id === this.state.manageUserId\n                                )!.default_access!.district_id\n                            )!.district_name}\n                        </span>\n                      </div>\n                    ) : this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.default_access &&\n                      getRoleById(\n                        this.props.roleList,\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.default_access!.system_user_role_id\n                      ).school_required ? (\n                      <div className=\"flex items-center gap-1\">\n                        <span className=\"text-gray-500\">School:</span>\n                        <span className=\"text-base font-medium\">\n                          {this.state.schoolList &&\n                          this.state.schoolList.find(\n                            (school) =>\n                              school._id ===\n                              this.props.users.find(\n                                (user) =>\n                                  user.user_id === this.state.manageUserId\n                              )!.default_access?.school_id\n                          )\n                            ? this.state.schoolList.find(\n                                (school) =>\n                                  school._id ===\n                                  this.props.users.find(\n                                    (user) =>\n                                      user.user_id === this.state.manageUserId\n                                  )!.default_access?.school_id\n                              )!.school_name\n                            : \"Unknown school\"}\n                        </span>\n                      </div>\n                    ) : (\n                      this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.default_access &&\n                      getRoleById(\n                        this.props.roleList,\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.default_access!.system_user_role_id\n                      ).room_required && (\n                        <div className=\"flex items-center gap-1\">\n                          {/* <span className=\"text-gray-500\">Room:</span> */}\n                          <MdLocationOn className=\"text-gray-500\" />\n                          {this.state.roomTable && (\n                            <span className=\"text-base font-medium\">\n                              {this.state.roomTable.find(\n                                (room) =>\n                                  room.room_id ===\n                                  this.props.users.find(\n                                    (user) =>\n                                      user.user_id === this.state.manageUserId\n                                  )!.default_access?.room_id\n                              )?.district_name +\n                                \" - \" +\n                                this.state.roomTable.find(\n                                  (room) =>\n                                    room.room_id ===\n                                    this.props.users.find(\n                                      (user) =>\n                                        user.user_id === this.state.manageUserId\n                                    )!.default_access?.room_id\n                                )?.center_name +\n                                \" - Room \" +\n                                this.state.roomTable.find(\n                                  (room) =>\n                                    room.room_id ===\n                                    this.props.users.find(\n                                      (user) =>\n                                        user.user_id === this.state.manageUserId\n                                    )!.default_access?.room_id\n                                )?.room_name}\n                            </span>\n                          )}\n                        </div>\n                      )\n                    )}\n                  </div>\n                </div>\n              ) : (\n                <NoResult\n                  theme={NoResultThemes.Dark}\n                  value={\"User info not found\"}\n                />\n              )}\n              {this.props.users.find(\n                (user) => user.user_id === this.state.manageUserId\n              ) && (\n                <div\n                  key={\n                    this.props.users.find(\n                      (user) => user.user_id === this.state.manageUserId\n                    )!.user_id + Math.random()\n                  }\n                  className=\"flex flex-col w-full\"\n                >\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-gray-500\">NID:</span>\n                    <span className=\"text-base font-medium\">\n                      {\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.n_id\n                      }\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-gray-500\">Email:</span>\n                    <span className=\"text-base font-medium\">\n                      {\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.email\n                      }\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-gray-500\">Phone:</span>\n                    <span className=\"text-base font-medium\">\n                      {\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.phone_number\n                      }\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-gray-500\">Status:</span>\n                    <span className=\"text-base font-medium\">\n                      {this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.is_active === false\n                        ? \"Blocked\"\n                        : \"Active\"}\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    {this.props.users.find(\n                      (user) => user.user_id === this.state.manageUserId\n                    )!.custome_access && (\n                      <button\n                        className={`px-2 py-1 font-semibold text-gray-50 inline-flex items-center rounded ${\n                          this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"RESET\"\n                            ? \"cursor-wait bg-gray-400\"\n                            : \"bg-gray-600\"\n                        }`}\n                        onClick={() =>\n                          this.restUserAccess(\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.user_id\n                          )\n                        }\n                        disabled={this.state.loadingRequest}\n                      >\n                        <MdLock className=\"w-4 h-4 fill-current\" />\n                        <span>\n                          {this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"RESET\"\n                            ? \"Reseting...\"\n                            : \"Reset Access\"}\n                        </span>\n                      </button>\n                    )}\n                    {!this.props.changeRole && (\n                      <button\n                        className=\"bg-yellow-300 hover:bg-yellow-400 px-2 py-1 font-semibold text-black inline-flex items-center rounded\"\n                        onClick={() => this.props.setChangeRole(true)}\n                      >\n                        <MdLock className=\"w-4 h-4 fill-current\" />\n                        <span>Change Role</span>\n                      </button>\n                    )}\n                    {this.props.users.find(\n                      (user) => user.user_id === this.state.manageUserId\n                    )!.is_active ? (\n                      <button\n                        className={`px-2 py-1 font-semibold text-gray-100 inline-flex items-center rounded ${\n                          this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"STATUS\"\n                            ? \"cursor-wait bg-red-500\"\n                            : \"bg-red-700\"\n                        }`}\n                        onClick={() =>\n                          !this.state.loadingRequest &&\n                          this.props.manageUser &&\n                          this.blockUser(\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.user_id,\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.is_active\n                          )\n                        }\n                        disabled={this.state.loadingRequest}\n                      >\n                        <MdLock className=\"w-4 h-4 fill-current\" />\n                        <span>\n                          {this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"RESET\"\n                            ? \"Loading...\"\n                            : \"Block user\"}\n                        </span>\n                      </button>\n                    ) : (\n                      <button\n                        className={`px-2 py-1 font-semibold text-gray-100 inline-flex items-center rounded ${\n                          this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"STATUS\"\n                            ? \"cursor-wait bg-yellow-500\"\n                            : \"bg-yellow-700\"\n                        }`}\n                        onClick={() =>\n                          !this.state.loadingRequest &&\n                          this.props.manageUser &&\n                          this.blockUser(\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.user_id,\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.is_active\n                          )\n                        }\n                        disabled={this.state.loadingRequest}\n                      >\n                        <MdLock className=\"w-4 h-4 fill-current\" />\n                        <span>\n                          {this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"RESET\"\n                            ? \"Loading...\"\n                            : \"Re-Activate\"}\n                        </span>\n                      </button>\n                    )}\n                  </div>\n                </div>\n              )}\n            </div>\n            {/* end header */}\n\n            {/* content */}\n            {this.props.manageUser &&\n            this.state.roomList &&\n            this.props.changeRole ? (\n              <UserRole\n                userInfo={this.props.manageUser}\n                roleList={this.props.roleList}\n                district={this.distinctDistrict(this.state.roomList)}\n                schoolList={this.state.schoolList}\n                roomList={this.state.roomList}\n                setChangeRole={this.props.setChangeRole}\n                currentPage={this.props.currentPage}\n              />\n            ) : (\n              <UserAccess\n                userInfo={getUserById(\n                  this.props.users,\n                  this.state.manageUserId\n                )}\n                manageUserId={this.state.manageUserId}\n                setUserAccess={this.setUserAccess}\n                userAccess={this.state.userAccess}\n                setCurrentAccess={this.setCurrentAccess}\n                currentAccess={this.state.currentAccess}\n                currentPage={this.props.currentPage}\n              />\n            )}\n            {/* end content */}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  schoolLevels,\n  schools,\n  locations,\n}: StoreState): {\n  schoolLevels: schoolLevelsStoreInterface;\n  schools: SchoolsInterface[];\n  allRoom: RoomLocationInterface[];\n} => {\n  return {\n    schoolLevels,\n    schools: schools.schools,\n    allRoom: locations.roomLocation,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    blockUserToSystem,\n    unBlockUserToSystem,\n    resetUserAccess,\n    getSchools,\n    getAllRoom,\n    PushPopupAlert,\n  })(UserList)\n);\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { capitalizeFirstLetter } from \"../../shared/dataTest\";\nimport { SystemUserRoleInterface } from \"../../shared/interfaces\";\nimport search from \"../../utils/search\";\n\n// const searchRole = (\n//   objList: SystemUserRoleInterface[],\n//   text: string\n// ): SystemUserRoleInterface[] => {\n//   return objList.filter(\n//     (product) => product.role.toLocaleLowerCase() === text.toLocaleLowerCase()\n//   );\n// };\n\ntype RoleListProps = {\n  setChooseRole: (value: boolean) => void;\n  roleList: SystemUserRoleInterface[];\n  handleSelectRole: (role_id: string, TYPE?: \"SELECT\" | \"DEFAULT\") => void;\n  loadindRequest: boolean;\n};\n\nconst RoleList: React.FC<RoleListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section className=\"border-2 rounded border-gray-400\">\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={props.roleList.length > 0 ? false : true}\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseRole(false);\n          }}\n        >\n          Close\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}\n\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {search(props.roleList, searchInput).length > 0 ? (\n          search(props.roleList, searchInput).map((role, index) => (\n            <section key={index + role.role}>\n              <div className=\"group flex items-center justify-between my-1 hover:bg-gray-100\">\n                <div\n                  className=\"p-1 w-full mr-2 cursor-pointer\"\n                  onClick={() => {\n                    props.setChooseRole(false);\n                    !props.loadindRequest &&\n                      props.handleSelectRole(role.system_user_role_id);\n                  }}\n                >\n                  <p className=\"text-sm font-medium text-black\">\n                    {capitalizeFirstLetter(role.role)}\n                  </p>\n                </div>\n                <button\n                  type=\"button\"\n                  className=\"bg-blue-200 group-hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                >\n                  Choose\n                </button>\n              </div>\n            </section>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No role available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default React.memo(RoleList);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { MdHighlightOff } from \"react-icons/md\";\nimport { TiInputChecked } from \"react-icons/ti\";\nimport { connect } from \"react-redux\";\nimport { schoolLevelsStoreInterface, PushPopupAlert } from \"../../actions\";\nimport { assignRoleToUserAccess } from \"../../actions/users\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport Loading from \"../../components/Loading/Loading\";\nimport Table from \"../../components/Table/Table\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport {\n  UserInterface,\n  SystemUserRoleInterface,\n  DistrictInterface,\n  SchoolsInterface,\n  RoomLocationInterface,\n  AssignRoleToUserActionInterface,\n  LocationRoomTableInterface,\n  RoleToUserInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport RoleList from \"./RoleList\";\nimport { LocationsInArray } from \"./UserList\";\n\ninterface AppProps {\n  currentPage: number;\n  userInfo: UserInterface;\n  roleList: SystemUserRoleInterface[];\n  district: DistrictInterface[];\n  assignRoleToUserAccess: Function;\n  schoolList: SchoolsInterface[] | null;\n  roomList: RoomLocationInterface[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  setChangeRole: (value: boolean) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface AppState {\n  loading: boolean;\n  loadingForm: boolean;\n  loadingRequest: boolean;\n  roleId: string;\n  provinceId: string;\n  districtId: string;\n  schoolId: string;\n  roomId: string;\n  instituteId: string;\n  centerId: string;\n  selectedRole: SystemUserRoleInterface | null;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  chooseRole: boolean;\n  chooseSchool: boolean;\n}\n\nclass UserRole extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingForm: true,\n      loadingRequest: false,\n      roleId: \"\",\n      provinceId: \"\",\n      districtId: \"\",\n      schoolId: \"\",\n      roomId: \"\",\n      instituteId: \"\",\n      centerId: \"\",\n      selectedRole: null,\n      formError: null,\n      chooseRole: false,\n      chooseSchool: false,\n    };\n  }\n\n  setRoleId = (value: string) => {\n    this.setState({ roleId: value });\n  };\n\n  setSelectedRole = (value: SystemUserRoleInterface | null) => {\n    this.setState({ selectedRole: value });\n  };\n\n  setProvinceId = (value: string) => {\n    this.setState({ provinceId: value });\n  };\n\n  setDistrictId = (value: string) => {\n    this.setState({ districtId: value });\n  };\n\n  setCenterId = (value: string) => {\n    this.setState({ centerId: value });\n  };\n\n  setRoomId = (value: string) => {\n    this.setState({ roomId: value });\n  };\n\n  setLoadingForm = (value: boolean) => {\n    this.setState({ loadingForm: value });\n  };\n\n  setSchoolId = (value: string) => {\n    this.setState({ schoolId: value });\n  };\n\n  setChooseSchool = (value: boolean) => {\n    this.setState({ chooseSchool: value });\n  };\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setInstituteId = (value: string) => {\n    this.setState({ instituteId: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n  setChooseRole = (value: boolean) => {\n    this.setState({ chooseRole: value });\n  };\n\n  setDefaultState = (\n    default_access: RoleToUserInterface,\n    role: SystemUserRoleInterface\n  ) => {\n    // SET DEFAULT PROVINCE && DISTRICT ID =======================\n    let LOAD_province: LocationRoomTableInterface | undefined;\n    let LOAD_district: DistrictInterface | undefined;\n    if (role.district_required && this.props.roomList) {\n      LOAD_district = this.distinctDistrict(this.props.roomList).find(\n        (item) => item._id === default_access!.district_id\n      );\n      LOAD_district && this.setProvinceId(LOAD_district.province_id);\n      LOAD_district && this.setDistrictId(default_access!.district_id);\n      this.setLoadingForm(false);\n    } else if (role.room_required && this.props.roomList) {\n      // SET DEFAULT PROVINCE && DISTRICT && ROOM ID =======================\n\n      LOAD_province = LocationsInArray(this.props.roomList).find(\n        (item) => item.room_id === default_access!.room_id\n      );\n      LOAD_province && this.setProvinceId(LOAD_province.province_id);\n      LOAD_province && this.setDistrictId(LOAD_province.district_id);\n      LOAD_province && this.setCenterId(LOAD_province.center_id);\n      this.setRoomId(default_access.room_id);\n      this.setLoadingForm(false);\n    } else if (\n      role.school_required &&\n      this.props.roomList &&\n      this.props.schoolList\n    ) {\n      // SET DEFAULT PROVINCE && DISTRICT && SCHOOL ID =======================\n      let LOAD_school: SchoolsInterface | undefined =\n        this.props.schoolList.find(\n          (item) => item._id === default_access!.school_id\n        );\n      if (LOAD_school) {\n        LOAD_province = LocationsInArray(this.props.roomList).find(\n          (item) => item.district_id === LOAD_school?.district_id\n        );\n        LOAD_province && this.setProvinceId(LOAD_province.province_id);\n        LOAD_province && this.setDistrictId(LOAD_province.district_id);\n        this.setSchoolId(default_access.school_id);\n        this.setLoadingForm(false);\n      } else {\n        this.setLoadingForm(false);\n      }\n    } else {\n      this.setLoadingForm(false);\n    }\n  };\n\n  componentDidMount = () => {\n    if (this.props.roleList.length) {\n      if (this.props.userInfo.default_access && this.state.loadingForm) {\n        // SET DEFAULT ROLE ID =======================\n        if (!this.state.roleId.length) {\n          let result = this.props.roleList.find(\n            (role) =>\n              role.system_user_role_id ===\n              this.props.userInfo.default_access!.system_user_role_id\n          );\n          if (result) {\n            this.setRoleId(\n              this.props.userInfo.default_access.system_user_role_id\n            );\n            this.setSelectedRole(result);\n            this.setDefaultState(this.props.userInfo.default_access, result);\n          }\n        }\n\n        console.log(\"====================================\");\n        console.log({ vvvvv: this.props.userInfo.default_access });\n        console.log(\"====================================\");\n      }\n\n      if (this.state.selectedRole && this.props.userInfo.default_access) {\n        this.setDefaultState(\n          this.props.userInfo.default_access,\n          this.state.selectedRole\n        );\n      }\n\n      this.setLoading(false);\n    }\n  };\n\n  handleSelectRole = (\n    role_id: string,\n    TYPE: \"SELECT\" | \"DEFAULT\" = \"SELECT\"\n  ) => {\n    if (this.props.roleList) {\n      let result = this.props.roleList.find(\n        (role) => role.system_user_role_id === role_id\n      );\n      if (result) {\n        this.setRoleId(role_id);\n        this.setSelectedRole(result);\n        this.state.formError &&\n          this.state.formError.element === \"role_id\" &&\n          this.setFormError(null);\n\n        if (TYPE === \"SELECT\") {\n          this.setProvinceId(\"\");\n          this.setDistrictId(\"\");\n          this.setSchoolId(\"\");\n          this.setCenterId(\"\");\n          this.setRoomId(\"\");\n          this.setInstituteId(\"\");\n        }\n      }\n    }\n  };\n\n  tableData = (): JSX.Element[] => {\n    if (\n      this.state.roleId.length > 0 &&\n      this.state.selectedRole === null &&\n      this.props.roleList\n    ) {\n      this.handleSelectRole(this.state.roleId, \"DEFAULT\");\n    }\n    if (this.state.selectedRole) {\n      return this.state.selectedRole.access.map((access, i) => (\n        <tr\n          key={i + access.id + Math.random()}\n          className={`text-left border-b border-gray-200 hover:bg-gray-100`}\n        >\n          <td className=\"px-2 py-1\">\n            <label className=\"inline-flex items-center\">\n              <span className=\"text-gray-900 capitalize text-xl font-normal cursor-pointer\">\n                {access.task}\n              </span>\n            </label>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.create ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.create ? (\n                <TiInputChecked />\n              ) : (\n                <MdHighlightOff />\n              )}\n              {access.permitted.create ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.view ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.view ? <TiInputChecked /> : <MdHighlightOff />}\n              {access.permitted.view ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.update ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.update ? (\n                <TiInputChecked />\n              ) : (\n                <MdHighlightOff />\n              )}\n              {access.permitted.update ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.delete ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.delete ? (\n                <TiInputChecked />\n              ) : (\n                <MdHighlightOff />\n              )}\n              {access.permitted.delete ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n        </tr>\n      ));\n    }\n    const optionB = [\n      <tr key=\"55re\">\n        <td colSpan={5} className=\"text-center px-2 py-2\">\n          No Default Access Available on this Role.\n        </td>\n      </tr>,\n    ];\n    return optionB;\n  };\n\n  assignRoleToUser = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!window.confirm(`Are sure you want to change user role?`)) {\n      return false;\n    }\n\n    if (!this.state.selectedRole) {\n      return this.setFormError({\n        element: \"role_id\",\n        msg: \"User role is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.room_required === true &&\n      isEmptyOrSpaces(this.state.provinceId)\n    ) {\n      return this.setFormError({\n        element: \"province_id\",\n        msg: \"Province is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.education_institution_required === true &&\n      isEmptyOrSpaces(this.state.instituteId)\n    ) {\n      return this.setFormError({\n        element: \"institute_id\",\n        msg: \"Institute is required on this role!\",\n      });\n    }\n\n    if (\n      (this.state.selectedRole.room_required === true ||\n        this.state.selectedRole.district_required === true) &&\n      isEmptyOrSpaces(this.state.districtId)\n    ) {\n      return this.setFormError({\n        element: \"district_id\",\n        msg: \"District is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.school_required === true &&\n      isEmptyOrSpaces(this.state.schoolId)\n    ) {\n      return this.setFormError({\n        element: \"school_id\",\n        msg: \"School is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.room_required === true &&\n      isEmptyOrSpaces(this.state.centerId)\n    ) {\n      return this.setFormError({\n        element: \"center_id\",\n        msg: \"Center is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.room_required === true &&\n      isEmptyOrSpaces(this.state.roomId)\n    ) {\n      return this.setFormError({\n        element: \"room_id\",\n        msg: \"Room is required!\",\n      });\n    }\n    this.setLoadingRequest(true);\n    let formData: AssignRoleToUserActionInterface = {\n      user_id: this.props.userInfo.user_id,\n      data: {\n        system_user_role_id: this.state.roleId,\n        status: 1,\n        role: this.state.selectedRole.role,\n        access: this.state.selectedRole.access,\n        school_id: this.state.selectedRole.school_required\n          ? this.state.schoolId\n          : \"\",\n        district_id: this.state.selectedRole.district_required\n          ? this.state.districtId\n          : \"\",\n        room_id: this.state.selectedRole.room_required ? this.state.roomId : \"\",\n        education_institution_id: this.state.selectedRole\n          .education_institution_required\n          ? this.state.instituteId\n          : \"\",\n      },\n    };\n\n    try {\n      const res = await axios.post(`${API.AUTH}/addroletouser`, {\n        user_id: this.props.userInfo.user_id,\n        system_user_role_id: this.state.roleId,\n        status: 1,\n        role: this.state.selectedRole.role,\n        access: true,\n        school_id:\n          this.state.selectedRole.school_required === true\n            ? this.state.schoolId\n            : \"\",\n        district_id:\n          this.state.selectedRole.district_required === true\n            ? this.state.districtId\n            : \"\",\n        room_id:\n          this.state.selectedRole.room_required === true\n            ? this.state.roomId\n            : \"\",\n        education_institution_id: this.state.selectedRole\n          .education_institution_required\n          ? this.state.instituteId\n          : \"\",\n      });\n      if (res) {\n        console.log(\"====================================\");\n        console.log({ assignRoleToUser: res });\n        console.log(\"====================================\");\n        this.props.assignRoleToUserAccess(formData, this.props.currentPage);\n        this.setLoadingRequest(false);\n        this.props.setChangeRole(false);\n        this.props.PushPopupAlert({\n          title: \"Assigning Role to User completed successfully\",\n          theme: PopupAlertTheme.success,\n        });\n      }\n    } catch (error) {\n      console.log({ role_error: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  distinctDistrict = (\n    location: RoomLocationInterface[],\n    province_id?: string\n  ): DistrictInterface[] => {\n    let ids: string[] = [],\n      result: DistrictInterface[] = [];\n\n    if (province_id) {\n      result = location.find((item) => item._id === province_id)\n        ? location.find((item) => item._id === province_id)!.districts\n          ? location.find((item) => item._id === province_id)!.districts\n          : []\n        : [];\n    } else {\n      for (const key in location) {\n        if (Object.prototype.hasOwnProperty.call(location, key)) {\n          for (const keyDistrict in location[key].districts) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                location[key].districts,\n                keyDistrict\n              )\n            ) {\n              if (!ids.includes(location[key].districts[keyDistrict]._id)) {\n                ids.push(location[key].districts[keyDistrict]._id);\n                result.push(location[key].districts[keyDistrict]);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return result;\n  };\n\n  distinctCenter = (\n    rooms: RoomLocationInterface[],\n    district_id: string\n  ): LocationRoomTableInterface[] => {\n    let ids: string[] = [],\n      result: LocationRoomTableInterface[] = [];\n\n    LocationsInArray(rooms).forEach((element) => {\n      if (\n        !ids.includes(element.center_id) &&\n        element.district_id === district_id\n      ) {\n        ids.push(element.center_id);\n        result.push(element);\n      }\n    });\n    return result;\n  };\n\n  distinctRoom = (\n    rooms: RoomLocationInterface[],\n    center_id: string\n  ): LocationRoomTableInterface[] => {\n    let ids: string[] = [],\n      result: LocationRoomTableInterface[] = [];\n\n    LocationsInArray(rooms).forEach((element) => {\n      if (!ids.includes(element.room_id) && element.center_id === center_id) {\n        ids.push(element.room_id);\n        result.push(element);\n      }\n    });\n    return result;\n  };\n\n  render() {\n    if (\n      this.state.loading === true ||\n      this.state.loadingForm ||\n      this.props.userInfo.default_access === null ||\n      this.state.roleId.length === 0 ||\n      this.state.selectedRole === null\n    ) {\n      return (\n        <div className=\"text-center py-7 font-bold text-3xl text-gray-400 animate-pulse\">\n          Loading...\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 py-2 md:py-4 px-2 md:px-0\">\n        {/* left panel */}\n        <div className=\"col-span-1 bg-white w-full overflow-x-auto border rounded\">\n          <div className=\"px-6 md:px-12 py-5 bg-white mx-auto rounded-2xl w-100\">\n            <h3 className=\"font-semibold text-2xl text-gray-800 mb-4\">\n              Change User Role\n            </h3>\n            {this.state.loadingForm ? (\n              <Loading />\n            ) : (\n              <form onSubmit={(e) => this.assignRoleToUser(e)}>\n                <div className=\"space-y-5\">\n                  <div className=\"space-y-2\">\n                    <label className=\"text-sm font-medium text-gray-700 tracking-wide\">\n                      User Role\n                    </label>\n\n                    {!this.state.chooseRole && (\n                      <div\n                        className={`w-full text-base bg-white text-grey-darker cursor-pointer border-2 px-4 py-3 rounded focus:outline-none focus:bg-gray-100 ${\n                          this.state.formError &&\n                          this.state.formError.element === \"role_id\"\n                            ? \"border-red-500\"\n                            : \"border-gray-400\"\n                        }`}\n                        onClick={() => {\n                          !this.state.loadingRequest &&\n                            this.setChooseRole(true);\n                          !this.state.loadingRequest && this.setFormError(null);\n                        }}\n                      >\n                        {this.state.selectedRole\n                          ? this.state.selectedRole.role\n                          : \"Select role\"}\n                      </div>\n                    )}\n\n                    {this.state.chooseRole && (\n                      <RoleList\n                        setChooseRole={this.setChooseRole}\n                        handleSelectRole={this.handleSelectRole}\n                        roleList={this.props.roleList}\n                        loadindRequest={this.state.loadingRequest}\n                      />\n                    )}\n\n                    {this.state.formError &&\n                      this.state.formError.element === \"role_id\" && (\n                        <span className=\"text-red-500\">\n                          {this.state.formError.msg}\n                        </span>\n                      )}\n                  </div>\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.education_institution_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Institute\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"institute_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setInstituteId(e.target.value);\n                            this.setProvinceId(\"\");\n                            this.setDistrictId(\"\");\n                            this.setSchoolId(\"\");\n                            this.setCenterId(\"\");\n                            this.setRoomId(\"\");\n                            this.state.formError &&\n                              this.state.formError.element === \"institute_id\" &&\n                              this.setFormError(null);\n                          }}\n                          disabled={this.state.loadingRequest}\n                          value={this.state.instituteId}\n                        >\n                          <option value=\"\">Select institute</option>\n                          {this.props.schoolLevels.education_categories &&\n                          this.props.schoolLevels.education_categories.length >\n                            0 ? (\n                            this.props.schoolLevels.education_categories.map(\n                              (institute) => (\n                                <option\n                                  value={institute.education_institute_id}\n                                  key={\n                                    institute.education_institute_id +\n                                    Math.random()\n                                  }\n                                >\n                                  {institute.education_category_title}\n                                </option>\n                              )\n                            )\n                          ) : (\n                            <option value=\"\" disabled>\n                              No institute available\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"institute_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.room_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Province\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"province_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setProvinceId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"province_id\" &&\n                              this.setFormError(null);\n                            this.setDistrictId(\"\");\n                            this.setSchoolId(\"\");\n                            this.setCenterId(\"\");\n                            this.setRoomId(\"\");\n                          }}\n                          value={this.state.provinceId}\n                          disabled={this.state.loadingRequest}\n                        >\n                          <option value=\"\">Select province</option>\n                          {this.props.roomList &&\n                            this.props.roomList.map((province) => (\n                              <option\n                                key={province._id + Math.random()}\n                                value={province._id}\n                              >\n                                {province.province_name}\n                              </option>\n                            ))}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"province_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n                  {this.state.selectedRole &&\n                    (this.state.selectedRole.district_required ||\n                      this.state.selectedRole.room_required) && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          District\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"district_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setDistrictId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"district_id\" &&\n                              this.setFormError(null);\n                            this.setSchoolId(\"\");\n                            this.setCenterId(\"\");\n                            this.setRoomId(\"\");\n                          }}\n                          value={this.state.districtId}\n                          disabled={this.state.loadingRequest}\n                        >\n                          <option value=\"\">Select district</option>\n                          {this.props.roomList &&\n                          this.distinctDistrict(\n                            this.props.roomList,\n                            !isEmptyOrSpaces(this.state.provinceId)\n                              ? this.state.provinceId\n                              : undefined\n                          ).length > 0 ? (\n                            this.distinctDistrict(\n                              this.props.roomList,\n                              !isEmptyOrSpaces(this.state.provinceId)\n                                ? this.state.provinceId\n                                : undefined\n                            ).map((district) => (\n                              <option\n                                key={district._id + Math.random()}\n                                value={district._id}\n                              >\n                                {district.district_name}\n                              </option>\n                            ))\n                          ) : (\n                            <option value=\"\" disabled>\n                              No district found\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"district_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.school_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          School\n                        </label>\n                        {/* {!this.state.chooseSchool && (\n                          <div\n                            className={`w-full text-base bg-white text-grey-darker cursor-pointer border-2 px-4 py-3 rounded focus:outline-none focus:bg-gray-100 ${\n                              this.state.formError &&\n                              this.state.formError.element === \"school_id\"\n                                ? \"border-red-500\"\n                                : \"border-gray-400\"\n                            }`}\n                            onClick={() => {\n                              !this.state.loadingRequest &&\n                                this.setChooseSchool(true);\n                              !this.state.loadingRequest &&\n                                this.setFormError(null);\n                            }}\n                          >\n                            {this.state.schoolId\n                              ? this.state.schoolId\n                              : \"Select school\"}\n                          </div>\n                        )}\n\n                        {this.state.chooseSchool && (\n                          <ChooseSchoolById\n                            allSchool={this.props.schoolList}\n                            setSelectSchool={(school_id: string) => {\n                              this.setSchoolId(school_id);\n                              this.state.formError &&\n                                this.state.formError.element === \"school_id\" &&\n                                this.setFormError(null);\n                              this.setCenterId(\"\");\n                              this.setRoomId(\"\");\n                            }}\n                            currentSelected={this.state.schoolId}\n                            setChooseSchool={this.setChooseSchool}\n                          />\n                        )} */}\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"school_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setSchoolId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"school_id\" &&\n                              this.setFormError(null);\n                            this.setCenterId(\"\");\n                            this.setRoomId(\"\");\n                          }}\n                          disabled={this.state.loadingRequest}\n                          value={this.state.schoolId}\n                        >\n                          <option value=\"\">Selected school</option>\n                          {this.props.schoolList &&\n                            this.props.schoolList.map((school) => (\n                              <option\n                                value={school._id}\n                                key={school._id + Math.random()}\n                              >\n                                {school.school_name}\n                              </option>\n                            ))}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"school_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.room_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Center\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"center_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setCenterId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"center_id\" &&\n                              this.setFormError(null);\n                            this.setRoomId(\"\");\n                          }}\n                          disabled={this.state.loadingRequest}\n                          value={this.state.centerId}\n                        >\n                          <option value=\"\">Select center</option>\n                          {this.state.districtId &&\n                          this.state.districtId.length > 0 &&\n                          this.props.roomList &&\n                          this.distinctCenter(\n                            this.props.roomList,\n                            this.state.districtId\n                          ).length > 0 ? (\n                            this.distinctCenter(\n                              this.props.roomList,\n                              this.state.districtId\n                            ).map((center, index) => (\n                              <option\n                                value={center.center_id}\n                                key={center.center_id + index + Math.random()}\n                              >\n                                {center.center_name}\n                              </option>\n                            ))\n                          ) : (\n                            <option value=\"\" disabled>\n                              No center found\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"center_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.room_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Room\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"room_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setRoomId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"room_id\" &&\n                              this.setFormError(null);\n                          }}\n                          disabled={this.state.loadingRequest}\n                          value={this.state.roomId}\n                        >\n                          <option value=\"\">Select room</option>\n                          {!isEmptyOrSpaces(this.state.centerId) &&\n                          this.props.roomList &&\n                          this.distinctRoom(\n                            this.props.roomList,\n                            this.state.centerId\n                          ).length > 0 ? (\n                            this.distinctRoom(\n                              this.props.roomList,\n                              this.state.centerId\n                            ).map((room, index) => (\n                              <option\n                                value={room.room_id}\n                                key={room.room_id + index + Math.random()}\n                                className={`${\n                                  room.room_name === \"0\" ? \"hidden\" : \"block\"\n                                }`}\n                              >\n                                {room.room_name}\n                              </option>\n                            ))\n                          ) : (\n                            <option value=\"\" disabled>\n                              No room found\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"room_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  <div className=\"flex justify-between 2xl:justify-start gap-2\">\n                    <button\n                      className=\"btn bg-gray-500 text-gray-50 focus:outline-none\"\n                      onClick={() => {\n                        this.props.setChangeRole(false);\n                        this.setFormError(null);\n                        this.setProvinceId(\"\");\n                        this.setDistrictId(\"\");\n                        this.setSchoolId(\"\");\n                        this.setCenterId(\"\");\n                        this.setRoomId(\"\");\n                      }}\n                      disabled={this.state.loadingRequest}\n                    >\n                      Back\n                    </button>\n                    <button\n                      className=\"btn btn-blue focus:outline-none\"\n                      // onClick={() => assignRoleToUser()}\n                      disabled={this.state.loadingRequest}\n                    >\n                      {this.state.loadingRequest ? \"Loading...\" : \"Save Change\"}\n                    </button>\n                  </div>\n                </div>\n              </form>\n            )}\n          </div>\n        </div>\n        {/* end left panel */}\n\n        {/* ------------------------------------------------------------ */}\n\n        {/* right panel */}\n        <div className=\"cols-span-1 md:col-span-2 bg-white w-full border rounded text-center p-2 hidden md:block\">\n          <div className=\"my-4\">\n            <span className=\"text-gray-600 font-semibold text-2xl\">\n              {this.state.selectedRole?.role}'s Default Access\n            </span>\n          </div>\n          {!this.state.loading && (\n            <div className=\"overflow-x-auto w-full\">\n              <Table\n                columns={[\n                  {\n                    columnTitle: \"Access Name\",\n                    alignText: \"left\",\n                    padding: \"p-3\",\n                  },\n                  { columnTitle: \"Create\", alignText: \"left\" },\n                  { columnTitle: \"View\", alignText: \"left\" },\n                  { columnTitle: \"Update\", alignText: \"left\" },\n                  { columnTitle: \"Delete\", alignText: \"left\" },\n                ]}\n                rows={this.tableData}\n                pagination={false}\n                search={false}\n                searchBG=\"bg-gray-50\"\n                thColor=\"gray\"\n                tableId=\"defaultAccess\"\n              />\n            </div>\n          )}\n        </div>\n        {/* end right panel */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  schoolLevels,\n}: StoreState): {\n  schoolLevels: schoolLevelsStoreInterface;\n} => {\n  return { schoolLevels };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    assignRoleToUserAccess,\n    PushPopupAlert,\n  })(UserRole)\n);\n","export default __webpack_public_path__ + \"static/media/blank_profile.c3f94521.png\";","import React, { useState } from \"react\";\nimport {\n  MdCheckCircle,\n  MdRadioButtonUnchecked,\n  MdSearch,\n} from \"react-icons/md\";\nimport Loading from \"../../components/Loading/Loading\";\nimport {\n  PlansInterface,\n  SessionPlanInterface,\n  SessionPlanTypeStatus,\n} from \"../../interfaces\";\nimport { DATE } from \"../../utils/functions\";\nimport searchData from \"../../utils/search\";\n\nexport const isPlansActive = (plans: PlansInterface[]): PlansInterface[] => {\n  let today = new Date();\n  let activePlans: PlansInterface[] = [];\n  for (let plan of plans) {\n    let startDate = new Date(plan.start_date);\n    let endDate = new Date(plan.end_date);\n    if (\n      startDate.getTime() <= today.getTime() &&\n      endDate.getTime() >= today.getTime() &&\n      plan.type_status === SessionPlanTypeStatus.OPEN\n    ) {\n      activePlans = [...activePlans, plan];\n    }\n  }\n  return activePlans;\n};\n\ninterface ChooseSessionProps {\n  allSession: SessionPlanInterface[] | null;\n  setSelectSession: (period: SessionPlanInterface | \"all\") => void;\n  currentSelected: SessionPlanInterface | \"all\";\n  chooseAll: boolean;\n}\n\nconst ChooseSession = (props: ChooseSessionProps) => {\n  const [selectedPlan, setSelectedPlan] = useState<SessionPlanInterface | null>(\n    null\n  );\n  const [search, setSearch] = useState<string>(\"\");\n  const getSearch = (\n    period: SessionPlanInterface[],\n    searched: string\n  ): SessionPlanInterface[] => {\n    return searchData(period, searched) as SessionPlanInterface[];\n  };\n\n  return (\n    <div className=\"\">\n      <div className=\"px-3\">\n        <input\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n            setSearch(e.target.value)\n          }\n          type=\"text\"\n          className=\"py-3 px-4 w-full rounded border border-gray-400 mb-3\"\n          placeholder=\"Search by year, name\"\n          disabled={props.allSession === null || props.allSession.length === 0}\n        />\n      </div>\n\n      <div className=\"bg-gray-100 px-3 pt-3 pb-2 rounded-b\">\n        {props.allSession === null ? (\n          <Loading />\n        ) : props.allSession.length === 0 ? (\n          <div className=\"flex flex-col text-gray-400 items-center justify-center mb-2 bg-white py-4\">\n            <MdSearch className=\"text-6xl\" />\n            <div className=\"flex flex-col items-center justify-center\">\n              <span>No session found!</span>\n            </div>\n          </div>\n        ) : (\n          <section>\n            {props.chooseAll && (\n              <div\n                className={`rounded border ${\n                  props.currentSelected === \"all\"\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2 flex flex-col md:flex-row items-start md:items-center md:justify-between`}\n              >\n                <div className=\"flex flex-row items-center gap-3\">\n                  {props.currentSelected === \"all\" ? (\n                    <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                  ) : (\n                    <MdRadioButtonUnchecked\n                      className={`text-gray-300 text-4xl`}\n                    />\n                  )}\n                  <div className=\"flex flex-col\">\n                    <div className={`text-gray-600 font-bold`}>All session</div>\n                  </div>\n                </div>\n                <div\n                  onClick={() => {\n                    props.setSelectSession(\"all\");\n                  }}\n                  className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                >\n                  Select\n                </div>\n              </div>\n            )}\n            {getSearch(props.allSession, search).map((item, i) => (\n              <div\n                key={i + 1}\n                className={`rounded border ${\n                  props.currentSelected !== \"all\" &&\n                  props.currentSelected.session_plan_id === item.session_plan_id\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2`}\n              >\n                <div className=\"flex flex-col md:flex-row items-start md:items-center md:justify-between \">\n                  <div className=\"flex flex-row items-center gap-3\">\n                    {props.currentSelected !== \"all\" &&\n                    props.currentSelected.session_plan_id ===\n                      item.session_plan_id ? (\n                      <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                    ) : (\n                      <MdRadioButtonUnchecked\n                        className={`text-gray-300 text-4xl`}\n                      />\n                    )}\n                    <div className=\"flex flex-col\">\n                      <div\n                        className={`${\n                          props.currentSelected !== \"all\" &&\n                          props.currentSelected.session_plan_id ===\n                            item.session_plan_id\n                            ? \"text-blue-600\"\n                            : \"text-gray-600\"\n                        } font-bold`}\n                      >\n                        {item.session_plan_name}\n                      </div>\n                      <div className=\"text-sm text-gray-500\">\n                        <span>Status: </span>\n                        <span\n                          className={`${\n                            item.is_active === true\n                              ? \"text-gray-900 font-bold underline\"\n                              : \"text-gray-500 italic\"\n                          }`}\n                        >\n                          {item.is_active === true ? \"Active\" : \"Expired\"}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"flex flex-row items-center gap-2\">\n                    {(selectedPlan === null ||\n                      selectedPlan.session_plan_id !==\n                        item.session_plan_id) && (\n                      <div\n                        onClick={() => setSelectedPlan(item)}\n                        className=\"bg-gray-50 group-hover:bg-blue-100 font-semibold text-gray-400 group-hover:text-blue-600 rounded px-3 py-2 cursor-pointer\"\n                      >\n                        Details\n                      </div>\n                    )}\n                    <div\n                      onClick={() => {\n                        props.setSelectSession(item);\n                      }}\n                      className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                    >\n                      Select\n                    </div>\n                    {selectedPlan !== null &&\n                      selectedPlan.session_plan_id === item.session_plan_id && (\n                        <div\n                          onClick={() => setSelectedPlan(null)}\n                          className=\"bg-red-100 group-hover:bg-red-200 font-semibold text-red-600 group-hover:text-red-800 rounded px-3 py-2 cursor-pointer\"\n                        >\n                          Close\n                        </div>\n                      )}\n                  </div>\n                </div>\n                {selectedPlan !== null &&\n                  selectedPlan.session_plan_id === item.session_plan_id && (\n                    <div className=\"bg-white rounded border border-blue-50 mt-2 animate__animated animate__fadeIn\">\n                      <table className=\"w-full\">\n                        <thead className=\"bg-blue-50\">\n                          <tr className=\"text-left\">\n                            <th className=\"px-3 py-3\">#</th>\n                            <th>Plan</th>\n                            <th>Start date</th>\n                            <th>Ending date</th>\n                            <th>Status</th>\n                          </tr>\n                        </thead>\n                        <tbody className=\"text-sm\">\n                          {selectedPlan !== null &&\n                            selectedPlan.session_plan_id ===\n                              item.session_plan_id &&\n                            selectedPlan.plans.length > 0 &&\n                            item.plans.map((plan, i) => (\n                              <tr\n                                key={i + 1}\n                                className={`${\n                                  isPlansActive(item.plans).find(\n                                    (itm) => itm.type_key === plan.type_key\n                                  ) !== undefined\n                                    ? \"bg-blue-100 text-blue-600 font-bold\"\n                                    : \"\"\n                                } text-left border-b border-blue-50`}\n                              >\n                                <td className=\"px-3 py-1\">{i + 1}</td>\n                                <td>{plan.type_title}</td>\n                                <td>{DATE(plan.start_date, \"DD/MM/YYYY\")}</td>\n                                <td>{DATE(plan.end_date, \"DD/MM/YYYY\")}</td>\n                                <td>{plan.type_status}</td>\n                              </tr>\n                            ))}\n                        </tbody>\n                      </table>\n                    </div>\n                  )}\n              </div>\n            ))}\n          </section>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(ChooseSession);\n","import React, { Fragment, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport { connect } from \"react-redux\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { SessionPlanInterface } from \"../../../interfaces\";\nimport { course } from \"../../../interfaces/course\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport {\n  CandidatesFailedSucceeded,\n  ReportUserExamStatus,\n} from \"../../../interfaces/reports\";\nimport { StoreState } from \"../../../reducers\";\nimport { ExamReportReducerType } from \"../../../reducers/exam_report\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { DATE, sortThisArray, timestampToDate } from \"../../../utils/functions\";\nimport { displayStatus } from \"./DoneExamList\";\nimport { getPeriodById } from \"./ExamReport\";\n\n// EXCEL FILE FUNCTIONS ================================\nexport interface CandidateExamPerformanceToPrintInterface {\n  applicant_id: number;\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string;\n  exam_period: string;\n  exam_date: string;\n  exam_start_time: string;\n  exam_end_time: string;\n  applicant_name: string;\n  national_id: string;\n  email: string;\n  phone: string;\n  marks: string;\n  performance_status: string;\n}\n\nexport enum CandidateExamPerformanceReportContentKeyInterface {\n  APPLICANT = \"applicant_name\",\n  N_ID = \"national_id\",\n  EMAIL = \"email\",\n  PHONE = \"phone\",\n  MARKS = \"marks\",\n  STATUS = \"performance_status\",\n  COURSER_NAME = \"course_name\",\n  COURSE_CODE = \"course_code\",\n  SCHOOL_LEVEL = \"school_levels\",\n  PERIOD = \"exam_period\",\n  DATE = \"exam_date\",\n  START_TIME = \"exam_start_time\",\n  END_TIME = \"exam_end_time\",\n}\n\nexport interface CandidateExamPerformanceReportContentInterface {\n  key: CandidateExamPerformanceReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n\nexport const candidateExamPerformanceIsChangeAllowed = (\n  key: CandidateExamPerformanceReportContentKeyInterface\n): boolean => {\n  if (\n    key === CandidateExamPerformanceReportContentKeyInterface.COURSER_NAME ||\n    key === CandidateExamPerformanceReportContentKeyInterface.COURSE_CODE ||\n    key === CandidateExamPerformanceReportContentKeyInterface.PERIOD ||\n    key === CandidateExamPerformanceReportContentKeyInterface.APPLICANT ||\n    key === CandidateExamPerformanceReportContentKeyInterface.N_ID\n  ) {\n    return false;\n  }\n  return true;\n};\n\nexport const defaultCandidateExamPerformanceContent: CandidateExamPerformanceReportContentInterface[] =\n  [\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.APPLICANT,\n      title: \"Applicant names\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.N_ID,\n      title: \"National ID\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.EMAIL,\n      title: \"Email\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.PHONE,\n      title: \"Phone\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.MARKS,\n      title: \"Marks\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.COURSER_NAME,\n      title: \"Course names\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.COURSE_CODE,\n      title: \"Course code\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.SCHOOL_LEVEL,\n      title: \"School levels\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.PERIOD,\n      title: \"Exam period\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.DATE,\n      title: \"Exam date\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.START_TIME,\n      title: \"Exam start time\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.END_TIME,\n      title: \"Exam end time\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.STATUS,\n      title: \"Status\",\n      status: true,\n    },\n  ];\n// END EXCEL FILE FUNCTIONS ================================\n\nexport interface candidatePerfomranceStateInterface {\n  user_id: string;\n  user_name: string;\n  national_id: string;\n  user_email: string;\n  user_phone: string;\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n  exam: CandidatesFailedSucceeded;\n  user_total_marks: number;\n  exam_stastus: ReportUserExamStatus;\n}\n\nexport const FC_reportCandidatePerformanceData = (\n  allCourses: course[],\n  data: CandidatesFailedSucceeded[],\n  course_id: string\n): candidatePerfomranceStateInterface[] => {\n  let result: candidatePerfomranceStateInterface[] = [],\n    ids: string[] = [];\n  for (const key in data) {\n    if (Object.prototype.hasOwnProperty.call(data, key)) {\n      if (!ids.includes(data[key]._id)) {\n        ids.push(data[key]._id);\n        let courser = allCourses.find(\n          (item) => item.course_id === data[key].course\n        );\n        if (courser) {\n          result.push({\n            user_id: data[key].user.user_id,\n            user_name:\n              capitalizeFirstLetter(data[key].user.user_info.lname) +\n              \" \" +\n              capitalizeFirstLetter(data[key].user.user_info.fname),\n            national_id: data[key].user.n_id ? data[key].user.n_id : \"\",\n            user_email: data[key].user.email,\n            user_phone: data[key].user.phone_number,\n            course_name: courser.course_name,\n            course_code: courser.course_code,\n            description: courser.description,\n            school_levels: courser.school_levels,\n            course_id: courser.course_id,\n            exam: data[key],\n            user_total_marks: data[key].total_marks,\n            exam_stastus: data[key].user_status,\n          });\n        }\n      }\n    }\n  }\n\n  if (course_id !== \"all\") {\n    result = result.filter((item) => item.course_id === course_id);\n  }\n  return result;\n};\n\nexport const FC_reportCandidatePerformanceDataFilter = (\n  thisList: candidatePerfomranceStateInterface[],\n  thisValue: ReportUserExamStatus | \"all\"\n): candidatePerfomranceStateInterface[] => {\n  if (thisValue === \"all\") {\n    return thisList;\n  } else {\n    return thisList.filter((item) => item.exam_stastus === thisValue);\n  }\n};\n\nexport const searchCandidatePerformanceData = (\n  objList: candidatePerfomranceStateInterface[],\n  text: string\n): candidatePerfomranceStateInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (\n        prop === \"course_name\" ||\n        prop === \"course_code\" ||\n        prop === \"user_total_marks\" ||\n        prop === \"exam_stastus\" ||\n        prop === \"description\" ||\n        prop === \"user_name\" ||\n        prop === \"user_phone\" ||\n        prop === \"user_email\" ||\n        prop === \"national_id\"\n      ) {\n        flag =\n          product[prop].toString().toLowerCase().indexOf(text.toLowerCase()) >\n          -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n};\n\nexport const controlRowsByStatus = (status: string): string => {\n  if (status === \"Done\") {\n    return \"bg-blue-50 border-gray-300 hover:border-blue-500 border-t border-b\";\n  }\n  if (status === \"Removed\") {\n    return \"bg-white border-red-300 hover:border-red-500 border-t border-b\";\n  }\n  if (status === \"Paused\") {\n    return \"bg-white border-yellow-300 hover:border-yellow-500 border-t border-b\";\n  }\n  return \"bg-white border-gray-300 hover:border-blue-500 border-t border-b\";\n};\n\ntype CandidatePerformanceProps = {\n  loading: boolean;\n  examsListData: ExamItemResponse[] | null;\n  courseListData: course[] | null;\n  thisPeriod: SessionPlanInterface[];\n  candidatePerformanceData: CandidatesFailedSucceeded[] | null;\n\n  // redux props ============\n  adminExamReport: ExamReportReducerType;\n  // FOR APPLICANT PERFORMANCE PROPS\n  filterApplicantPerformance: ReportUserExamStatus | \"all\";\n};\n\nconst CandidatePerformance: React.FC<CandidatePerformanceProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const [isSorted, setIsSorted] = useState<boolean>(false);\n  const [sortProperty, setSortProperty] = useState<string>(\"\");\n  const [sortOrder, setSortOrder] = useState<\"ASC\" | \"DESC\">(\"ASC\");\n\n  const setSort = (thisProperty: string) => {\n    if (sortProperty === thisProperty && sortOrder === \"ASC\") {\n      setSortOrder(\"DESC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    } else {\n      setSortOrder(\"ASC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    }\n  };\n\n  return (\n    <Fragment>\n      <div className=\"bg-white my-4\">\n        <div className=\"w-full px-2 py-2\">\n          <input\n            onChange={(e) => setSearchInput(e.target.value)}\n            type=\"text\"\n            value={searchInput}\n            placeholder=\"Search...\"\n            className=\"w-full bg-gray-100 py-2 px-3 rounded\"\n            disabled={\n              props.courseListData &&\n              props.candidatePerformanceData &&\n              FC_reportCandidatePerformanceDataFilter(\n                FC_reportCandidatePerformanceData(\n                  props.courseListData,\n                  props.candidatePerformanceData,\n                  props.adminExamReport.reportCourseId\n                    ? props.adminExamReport.reportCourseId.course_id\n                    : \"all\"\n                ),\n                props.filterApplicantPerformance\n              ).length <= 0\n                ? true\n                : false\n            }\n          />\n        </div>\n        <div className=\"w-full overflow-x-auto\">\n          <table className=\"w-full shadow\" id=\"report_content\">\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n              <tr>\n                <td className=\"px-2 py-2\">#</td>\n                <td className=\"px-2 py-2\" onClick={() => setSort(\"user_name\")}>\n                  Applicants\n                </td>\n                <td className=\"px-2 py-2\">National ID</td>\n                <td className=\"px-2 py-2\">Email</td>\n                <td className=\"px-2 py-2\">Phone</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"course_name\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Exam <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">Exam period</td>\n                <td className=\"px-2 py-2\">Exam date</td>\n                <td className=\"px-2 py-2\">Exam start time</td>\n                <td className=\"px-2 py-2\">Exam end time</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"user_total_marks\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Marks <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">Status</td>\n              </tr>\n            </thead>\n            <tbody>\n              {props.courseListData === null || props.loading ? (\n                <tr>\n                  <td colSpan={12} className=\"px-2 py-2\">\n                    <Loading />\n                  </td>\n                </tr>\n              ) : props.candidatePerformanceData &&\n                FC_reportCandidatePerformanceDataFilter(\n                  FC_reportCandidatePerformanceData(\n                    props.courseListData,\n                    props.candidatePerformanceData,\n                    props.adminExamReport.reportCourseId\n                      ? props.adminExamReport.reportCourseId.course_id\n                      : \"all\"\n                  ),\n                  props.filterApplicantPerformance\n                ).length <= 0 ? (\n                <tr>\n                  <td colSpan={12} className=\"px-2 py-2 text-center\">\n                    No applicant list available!\n                  </td>\n                </tr>\n              ) : (\n                props.candidatePerformanceData &&\n                sortThisArray(\n                  isSorted,\n                  searchCandidatePerformanceData(\n                    FC_reportCandidatePerformanceDataFilter(\n                      FC_reportCandidatePerformanceData(\n                        props.courseListData,\n                        props.candidatePerformanceData,\n                        props.adminExamReport.reportCourseId\n                          ? props.adminExamReport.reportCourseId.course_id\n                          : \"all\"\n                      ),\n                      props.filterApplicantPerformance\n                    ),\n                    searchInput\n                  ),\n                  sortProperty,\n                  sortOrder\n                ).map((item: candidatePerfomranceStateInterface, i) => (\n                  <tr\n                    key={i + 1}\n                    className={`${controlRowsByStatus(\n                      item.exam_stastus\n                    )} text-gray-600 hover:bg-blue-100 hover:text-blue-700 text-sm`}\n                  >\n                    <td className=\"px-2 py-2\">{i + 1}</td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(item.user_name)}\n                    </td>\n                    <td className=\"px-2 py-2\">{item.national_id}</td>\n                    <td className=\"px-2 py-2\">{item.user_email}</td>\n                    <td className=\"px-2 py-2\">{item.user_phone}</td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(item.course_name)} (\n                      <span className=\"font-semibold\">{item.course_code}</span>)\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam\n                        ? getPeriodById(props.thisPeriod, item.exam.period)\n                          ? getPeriodById(props.thisPeriod, item.exam.period)!\n                              .session_plan_name\n                          : \"-\"\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam.exam_date ? DATE(item.exam.exam_date) : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam.start_time\n                        ? timestampToDate(item.exam.start_time).timeAMPM\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam.end_time\n                        ? timestampToDate(item.exam.end_time).timeAMPM\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam_stastus !== ReportUserExamStatus.Editing\n                        ? Number(item.user_total_marks.toFixed(1)) + \"%\"\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(displayStatus(item.exam_stastus))}\n                    </td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  adminExamReport,\n}: StoreState): {\n  adminExamReport: ExamReportReducerType;\n} => {\n  return {\n    adminExamReport,\n  };\n};\n\nexport default React.memo(connect(mapStateToProps, {})(CandidatePerformance));\n","import React, { Fragment, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { SessionPlanInterface } from \"../../../interfaces\";\nimport { course } from \"../../../interfaces/course\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { DATE, sortThisArray } from \"../../../utils/functions\";\n// import searchData from \"../../../utils/search\";\nimport { getPeriodById } from \"./ExamReport\";\n\n// EXCEL INTERFACES ======================================\nexport interface ExamPreparationToPrintInterface {\n  course_id: number;\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string;\n  exam_period: string;\n  exam_date: string;\n  exam_time: string;\n  exam_duration: string;\n  // exam: ExamItemResponse | null;\n  preparation_status: string;\n}\n\nexport enum examPreparationReportContentKeyInterface {\n  \"course_name\" = \"course_name\",\n  \"course_code\" = \"course_code\",\n  SCHOOL_LEVEL = \"school_levels\",\n  PERIOD = \"exam_period\",\n  DATE = \"exam_date\",\n  TIME = \"exam_time\",\n  DURATION = \"exam_duration\",\n  STATUS = \"preparation_status\",\n}\n\nexport interface examPreparationReportContentInterface {\n  key: examPreparationReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n\nexport const defaultExamPreparationReportContent: examPreparationReportContentInterface[] =\n  [\n    {\n      key: examPreparationReportContentKeyInterface.course_name,\n      title: \"Course names\",\n      status: true,\n    },\n    {\n      key: examPreparationReportContentKeyInterface.course_code,\n      title: \"Course code\",\n      status: true,\n    },\n    {\n      key: examPreparationReportContentKeyInterface.SCHOOL_LEVEL,\n      title: \"School levels\",\n      status: true,\n    },\n    {\n      key: examPreparationReportContentKeyInterface.PERIOD,\n      title: \"Exam period\",\n      status: true,\n    },\n    {\n      key: examPreparationReportContentKeyInterface.DATE,\n      title: \"Exam date\",\n      status: true,\n    },\n    {\n      key: examPreparationReportContentKeyInterface.TIME,\n      title: \"Exam time\",\n      status: true,\n    },\n    {\n      key: examPreparationReportContentKeyInterface.DURATION,\n      title: \"Exam duration\",\n      status: true,\n    },\n    {\n      key: examPreparationReportContentKeyInterface.STATUS,\n      title: \"Exam status\",\n      status: true,\n    },\n  ];\n\nexport const examPreparationIsChangeAllowed = (\n  key: examPreparationReportContentKeyInterface\n): boolean => {\n  if (\n    key === examPreparationReportContentKeyInterface.course_name ||\n    key === examPreparationReportContentKeyInterface.course_code\n  ) {\n    return false;\n  }\n  return true;\n};\n// END EXCEL INTERFACES ======================================\n\nexport interface examPreparationStateInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n  exam: ExamItemResponse | null;\n  preparation_status: \"prepared\" | \"not prepared\";\n}\n\nexport const FC_reportExamList = (\n  allCourses: course[],\n  allExams: ExamItemResponse[],\n  period: string = \"\"\n): examPreparationStateInterface[] => {\n  let result: examPreparationStateInterface[] = [],\n    ids: string[] = [];\n  for (const key in allCourses) {\n    if (Object.prototype.hasOwnProperty.call(allCourses, key)) {\n      if (ids.includes(allCourses[key].course_id)) continue;\n      ids.push(allCourses[key].course_id);\n      let exam = !isEmptyOrSpaces(period)\n        ? allExams.find(\n            (item) =>\n              item.course === allCourses[key].course_id &&\n              item.period === period\n          )\n        : allExams.find((item) => item.course === allCourses[key].course_id);\n      if (exam) {\n        result.push({\n          course_name: allCourses[key].course_name,\n          course_code: allCourses[key].course_code,\n          description: allCourses[key].description,\n          school_levels: allCourses[key].school_levels,\n          course_id: allCourses[key].course_id,\n          exam: exam,\n          preparation_status: \"prepared\",\n        });\n      } else {\n        result.push({\n          course_name: allCourses[key].course_name,\n          course_code: allCourses[key].course_code,\n          description: allCourses[key].description,\n          school_levels: allCourses[key].school_levels,\n          course_id: allCourses[key].course_id,\n          exam: null,\n          preparation_status: \"not prepared\",\n        });\n      }\n    }\n  }\n  return result;\n};\n\nexport const FC_reportExamListFilter = (\n  thisList: examPreparationStateInterface[],\n  thisStatus: \"all\" | \"prepared\" | \"not prepared\"\n): examPreparationStateInterface[] => {\n  if (thisStatus === \"all\") {\n    return thisList;\n  } else {\n    return thisList.filter((item) => item.preparation_status === thisStatus);\n  }\n};\n\nexport const searchExamList = (\n  objList: examPreparationStateInterface[],\n  text: string\n): examPreparationStateInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (\n        prop === \"course_name\" ||\n        prop === \"course_code\" ||\n        prop === \"preparation_status\"\n      ) {\n        flag =\n          product[prop].toString().toLowerCase().indexOf(text.toLowerCase()) >\n          -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n};\n\ntype ExamListProps = {\n  loading: boolean;\n  examsListData: ExamItemResponse[] | null;\n  courseListData: course[] | null;\n  thisPeriod: SessionPlanInterface[];\n  // FOR EXAM PREPARATION PROPS =========================================\n  filterPreparation: \"prepared\" | \"not prepared\" | \"all\";\n};\n\nconst ExamList: React.FC<ExamListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const [isSorted, setIsSorted] = useState<boolean>(false);\n  const [sortProperty, setSortProperty] = useState<string>(\"\");\n  const [sortOrder, setSortOrder] = useState<\"ASC\" | \"DESC\">(\"ASC\");\n\n  const setSort = (thisProperty: string) => {\n    if (sortProperty === thisProperty && sortOrder === \"ASC\") {\n      setSortOrder(\"DESC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    } else {\n      setSortOrder(\"ASC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    }\n  };\n\n  return (\n    <Fragment>\n      <div className=\"bg-white my-4\">\n        <div className=\"w-full px-2 py-2\">\n          {props.courseListData && props.examsListData && (\n            <input\n              onChange={(e) => setSearchInput(e.target.value)}\n              type=\"text\"\n              value={searchInput}\n              placeholder=\"Search...\"\n              className=\"w-full bg-gray-100 py-2 px-3 rounded\"\n              disabled={\n                FC_reportExamListFilter(\n                  FC_reportExamList(props.courseListData, props.examsListData),\n                  props.filterPreparation\n                ).length <= 0\n              }\n            />\n          )}\n        </div>\n        <div className=\"w-full overflow-x-auto\">\n          <table className=\"w-full shadow\" id=\"report_content\">\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n              <tr>\n                <td className=\"px-2 py-2\">#</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"course_name\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Course <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">Exam date</td>\n                <td className=\"px-2 py-2\">Exam time</td>\n                <td className=\"px-2 py-2\">Exam duration</td>\n                <td className=\"px-2 py-2\">Exam Period</td>\n                <td className=\"px-2 py-2\">Created at</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"preparation_status\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Exam Status <BiSort />\n                  </div>\n                </td>\n              </tr>\n            </thead>\n            <tbody>\n              {props.courseListData === null || props.loading ? (\n                <tr>\n                  <td colSpan={8} className=\"px-2 py-2\">\n                    <Loading />\n                  </td>\n                </tr>\n              ) : props.courseListData &&\n                props.examsListData &&\n                FC_reportExamListFilter(\n                  FC_reportExamList(props.courseListData, props.examsListData),\n                  props.filterPreparation\n                ).length <= 0 ? (\n                <tr>\n                  <td colSpan={8} className=\"px-2 py-2 text-center\">\n                    No Course for exam found\n                  </td>\n                </tr>\n              ) : (\n                props.examsListData &&\n                sortThisArray(\n                  isSorted,\n                  searchExamList(\n                    FC_reportExamListFilter(\n                      FC_reportExamList(\n                        props.courseListData,\n                        props.examsListData\n                      ),\n                      props.filterPreparation\n                    ),\n                    searchInput\n                  ),\n                  sortProperty,\n                  sortOrder\n                ).map((item, i) => (\n                  <tr\n                    key={i + 1}\n                    className={`${\n                      item.exam ? \"bg-blue-50\" : \"bg-white\"\n                    } text-gray-600 hover:bg-blue-100 hover:text-blue-700 border-b border-gray-300 hover:border-blue-500 text-sm`}\n                  >\n                    <td className=\"px-2 py-2\">{i + 1}</td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(item.course_name)} (\n                      <span className=\"font-semibold\">{item.course_code}</span>)\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam ? DATE(item.exam.exam_date) : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam ? item.exam.start_time : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam ? item.exam!.duration + \" min\" : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam\n                        ? getPeriodById(props.thisPeriod, item.exam.period)\n                          ? getPeriodById(props.thisPeriod, item.exam.period)!\n                              .session_plan_name\n                          : \"-\"\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam ? DATE(item.exam.createdAt) : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(\n                        item.exam ? \"Prepared\" : \"Not prepared\"\n                      )}\n                    </td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default React.memo(ExamList);\n","import React, { useEffect, useState } from \"react\";\nimport { CgFileDocument } from \"react-icons/cg\";\nimport { MdCheckBox, MdCheckBoxOutlineBlank, MdHistory } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  SetReportCourseId,\n  SetReportCourseIdAction,\n  SetReportDistrictId,\n  SetReportDistrictIdAction,\n} from \"../../../actions\";\nimport { getAllRoom } from \"../../../actions/location\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport { SessionPlanInterface } from \"../../../interfaces\";\nimport { StoreState } from \"../../../reducers\";\nimport { isEmptyOrSpaces } from \"../../../shared/dataTest\";\nimport {\n  LocationRoomTableInterface,\n  RoomLocationInterface,\n} from \"../../../shared/interfaces\";\nimport ExportToExcel from \"../../../utils/ExportToExcel\";\nimport ChooseSession from \"../../SessionSettings/ChooseSession\";\nimport { LocationsInArray } from \"../../UserManagement/UserList\";\nimport {\n  CandidateExamPerformanceToPrintInterface,\n  CandidateExamPerformanceReportContentInterface,\n  CandidateExamPerformanceReportContentKeyInterface,\n  candidateExamPerformanceIsChangeAllowed,\n} from \"./CandidatePerformance\";\nimport {\n  examinationProgressIsChangeAllowed,\n  ExaminationProgressReportContentInterface,\n  ExaminationProgressReportContentKeyInterface,\n  ExaminationProgressToPrintInterface,\n  examProgressStateInterface,\n  searchExamData,\n} from \"./DoneExamList\";\nimport {\n  examPreparationReportContentInterface,\n  ExamPreparationToPrintInterface,\n  examPreparationReportContentKeyInterface,\n  examPreparationIsChangeAllowed,\n} from \"./ExamList\";\nimport {\n  ExamPerformanceToPrintInterface,\n  examPerformanceReportContentInterface,\n  examPerformanceReportContentKeyInterface,\n  examPerformanceIsChangeAllowed,\n} from \"./ExamPerformance\";\nimport { reportTitleType } from \"./ExamReport\";\n\nexport const FC_DistinctDistrict = (\n  locations: LocationRoomTableInterface[]\n): LocationRoomTableInterface[] => {\n  var flags: string[] = [],\n    output: LocationRoomTableInterface[] = [],\n    l: number = locations.length,\n    i: number;\n  for (i = 0; i < l; i++) {\n    if (flags.includes(locations[i].district_id)) continue;\n    flags.push(locations[i].district_id);\n    output.push(locations[i]);\n  }\n\n  return output;\n};\n\nexport enum ModalForTypes {\n  title = \"TITLE\",\n  period = \"PERIOD\",\n  generateReportModal = \"GENERATE REPORT\",\n  choose_exam = \"Choosing Exam\",\n  choose_district = \"Choosing District\",\n}\n\ntype ExamReportModalsProps = {\n  modalFor: ModalForTypes;\n  modalState: boolean;\n  changeModalState: (state: boolean) => void;\n\n  // FOR CHANGING PERIOD =========================\n  applicationPeriods?: SessionPlanInterface[] | null;\n  selected_period?: SessionPlanInterface | null;\n  setSelectedPeriod?: (period: SessionPlanInterface) => void;\n  onPeriodChange?: (period_id: string) => void;\n\n  // FOR CHOOSING EXAM =========================\n  AllExamData?: examProgressStateInterface[];\n  // thisExam?: examProgressStateInterface | null;\n  // setSelectedExam?: (selectedExam: examProgressStateInterface | null) => void;\n  SetReportCourseId: (\n    data: examProgressStateInterface | null\n  ) => SetReportCourseIdAction;\n  thisExam?: examProgressStateInterface | null;\n\n  // FOR REPORT TYPE =========================\n  reportTitle?: reportTitleType;\n  setReportTitle?: (title: reportTitleType) => void;\n\n  // FOR EXCEL GENERATION =========================\n  generateReportModal?: {\n    reportType: \"EXCEL\" | \"PDF\";\n    status: boolean;\n  } | null;\n  setGenerateReportModal?: (\n    reportData: {\n      reportType: \"EXCEL\" | \"PDF\";\n      status: boolean;\n    } | null\n  ) => void;\n  excelReportTitle?: string;\n  setExcelReportTitle?: (title: string) => void;\n  examPreparationReportContent?: examPreparationReportContentInterface[];\n  setExamPreparationReportContent?: (\n    content: examPreparationReportContentInterface[]\n  ) => void;\n  updateExamToPrint?: () => void;\n  examsToPrint?:\n    | ExamPreparationToPrintInterface[]\n    | ExamPerformanceToPrintInterface[]\n    | null;\n  // FOR EXAM PERFORMANCE REPORT ================================\n  examPerformanceToPrint?: ExamPerformanceToPrintInterface[] | null;\n  examPerformanceReportContent?: examPerformanceReportContentInterface[];\n  setExamPerformanceReportContent?: (\n    value: examPerformanceReportContentInterface[]\n  ) => void;\n  // FOR EXCEL TOP 30 EXAM PERFORMANCE REPORT CONTENT ===============================\n  exam30PerformanceToPrint?: ExamPerformanceToPrintInterface[] | null;\n  exam30PerformanceReportContent?: examPerformanceReportContentInterface[];\n  setExam30PerformanceReportContent?: (\n    value: examPerformanceReportContentInterface[]\n  ) => void;\n  // FOR EXCEL EXAMINATION PROGRESS REPORT CONTENT ===============================\n  examinationProgressToPrint?: ExaminationProgressToPrintInterface[] | null;\n  examinationProgressReportContent?: ExaminationProgressReportContentInterface[];\n  setExaminationProgressExamPerformanceReportContent?: (\n    value: ExaminationProgressReportContentInterface[]\n  ) => void;\n  // FOR EXCEL CANDIDATE EXAM PERFORMANCE REPORT CONTENT ===============================\n  candidateExamPerformanceToPrint?:\n    | CandidateExamPerformanceToPrintInterface[]\n    | null;\n  candidateExamPerformanceReportContent?: CandidateExamPerformanceReportContentInterface[];\n  setCandidateExamPerformanceReportContent?: (\n    value: CandidateExamPerformanceReportContentInterface[]\n  ) => void;\n  // FOR EXCEL TOP 30 CANDIDATE EXAM PERFORMANCE REPORT CONTENT ===============================\n  candidate30ExamPerformanceToPrint?:\n    | CandidateExamPerformanceToPrintInterface[]\n    | null;\n  candidate30ExamPerformanceReportContent?: CandidateExamPerformanceReportContentInterface[];\n  setCandidate30ExamPerformanceReportContent?: (\n    value: CandidateExamPerformanceReportContentInterface[]\n  ) => void;\n  // FOR LOCATIONS PROVINCE, DISTRICT, CENTERS, ROOM ================================\n  locations: RoomLocationInterface[];\n  getAllRoom: Function;\n  SetReportDistrictId?: (\n    data: {\n      district_id: string;\n      district_name: string;\n    } | null\n  ) => SetReportDistrictIdAction;\n  districtId?: string;\n  isAllDistrictAllowed?: boolean;\n};\n\nconst ExamReportModals: React.FC<ExamReportModalsProps> = (props) => {\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [selectAll, setSelectAll] = useState<boolean>(true);\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const [loadingLocation, setLoadingLocation] = useState<boolean>(true);\n  const [error, setError] = useState<{ element: String; msg: string } | null>(\n    null\n  );\n  const [districtId, setDistrictId] = useState<string>(\n    props.districtId ? props.districtId : \"all\"\n  );\n\n  const isChangeAllowed = (key: any): boolean => {\n    // EXAM PREPARATION ######################\n    if (\n      props.reportTitle &&\n      props.reportTitle === reportTitleType.EXAM_PREPARATION\n    ) {\n      return examPreparationIsChangeAllowed(key);\n    }\n    // EXAM PERFORMANCE ######################\n    if (\n      props.reportTitle &&\n      (props.reportTitle === reportTitleType.EXAM_PERFORMANCE ||\n        props.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE)\n    ) {\n      return examPerformanceIsChangeAllowed(key);\n    }\n    // EXAMINATION PROGRESS ######################\n    if (\n      props.reportTitle &&\n      props.reportTitle === reportTitleType.EXAMINATION_PROGRESS\n    ) {\n      return examinationProgressIsChangeAllowed(key);\n    }\n    // CANDIDATE EXAM PERFORMANCE && TOP 30 CANDIDATE EXAM PERFORMANCE ######################\n    if (\n      props.reportTitle &&\n      (props.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE ||\n        props.reportTitle === reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE)\n    ) {\n      return candidateExamPerformanceIsChangeAllowed(key);\n    }\n    return false;\n  };\n\n  const updateExamPreparationReportContent = (\n    key: examPreparationReportContentKeyInterface\n  ) => {\n    if (props.examPreparationReportContent) {\n      let index: number = props.examPreparationReportContent.findIndex(\n        (item) => item.key === key\n      );\n      let newArray: examPreparationReportContentInterface[] =\n        props.examPreparationReportContent;\n      newArray[index].status = !newArray[index].status;\n      props.setExamPreparationReportContent &&\n        props.setExamPreparationReportContent(newArray);\n      let isSelectAllNeeded = newArray.find((item) => item.status === false);\n      if (isSelectAllNeeded) {\n        setSelectAll(false);\n      } else {\n        setSelectAll(true);\n      }\n\n      // UPDATE APPLICATION LIST FOR UPDATE ==============================\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n  };\n\n  const resetReportContent = (currentState: boolean) => {\n    if (props.reportTitle) {\n      // EXAM PREPARATION =======================================\n      if (\n        props.reportTitle === reportTitleType.EXAM_PREPARATION &&\n        props.examPreparationReportContent\n      ) {\n        let newArray: examPreparationReportContentInterface[] =\n          props.examPreparationReportContent;\n        for (const key in newArray) {\n          if (isChangeAllowed(newArray[key].key)) {\n            newArray[key].status = !currentState;\n          }\n        }\n\n        props.setExamPreparationReportContent &&\n          props.setExamPreparationReportContent(newArray);\n        setSelectAll(!currentState);\n\n        props.updateExamToPrint && props.updateExamToPrint();\n      }\n    }\n\n    // EXAM PERFORMANCE =======================================\n    if (\n      props.reportTitle === reportTitleType.EXAM_PERFORMANCE &&\n      props.examPerformanceReportContent\n    ) {\n      let newArray: examPerformanceReportContentInterface[] =\n        props.examPerformanceReportContent;\n      for (const key in newArray) {\n        if (isChangeAllowed(newArray[key].key)) {\n          newArray[key].status = !currentState;\n        }\n      }\n\n      props.setExamPerformanceReportContent &&\n        props.setExamPerformanceReportContent(newArray);\n      setSelectAll(!currentState);\n\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n\n    // TOP 30 EXAM PERFORMANCE =======================================\n    if (\n      props.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n      props.exam30PerformanceReportContent\n    ) {\n      let newArray: examPerformanceReportContentInterface[] =\n        props.exam30PerformanceReportContent;\n      for (const key in newArray) {\n        if (isChangeAllowed(newArray[key].key)) {\n          newArray[key].status = !currentState;\n        }\n      }\n\n      props.setExam30PerformanceReportContent &&\n        props.setExam30PerformanceReportContent(newArray);\n      setSelectAll(!currentState);\n\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n\n    // EXAMINATION PROGRESS =======================================\n    if (\n      props.reportTitle === reportTitleType.EXAMINATION_PROGRESS &&\n      props.examinationProgressReportContent\n    ) {\n      let newArray: ExaminationProgressReportContentInterface[] =\n        props.examinationProgressReportContent;\n      for (const key in newArray) {\n        if (isChangeAllowed(newArray[key].key)) {\n          newArray[key].status = !currentState;\n        }\n      }\n\n      props.setExaminationProgressExamPerformanceReportContent &&\n        props.setExaminationProgressExamPerformanceReportContent(newArray);\n      setSelectAll(!currentState);\n\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n\n    // CANDIDATE EXAM PERFORMANCE =======================================\n    if (\n      props.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE &&\n      props.candidateExamPerformanceReportContent\n    ) {\n      let newArray: CandidateExamPerformanceReportContentInterface[] =\n        props.candidateExamPerformanceReportContent;\n      for (const key in newArray) {\n        if (isChangeAllowed(newArray[key].key)) {\n          newArray[key].status = !currentState;\n        }\n      }\n\n      props.setCandidateExamPerformanceReportContent &&\n        props.setCandidateExamPerformanceReportContent(newArray);\n      setSelectAll(!currentState);\n\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n\n    // TOP 30 CANDIDATE EXAM PERFORMANCE =======================================\n    if (\n      props.reportTitle === reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE &&\n      props.candidate30ExamPerformanceReportContent\n    ) {\n      let newArray: CandidateExamPerformanceReportContentInterface[] =\n        props.candidate30ExamPerformanceReportContent;\n      for (const key in newArray) {\n        if (isChangeAllowed(newArray[key].key)) {\n          newArray[key].status = !currentState;\n        }\n      }\n\n      props.setCandidate30ExamPerformanceReportContent &&\n        props.setCandidate30ExamPerformanceReportContent(newArray);\n      setSelectAll(!currentState);\n\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n  };\n\n  const updateExamPerformanceReportContent = (\n    key: examPerformanceReportContentKeyInterface\n  ) => {\n    if (\n      props.reportTitle &&\n      props.reportTitle === reportTitleType.EXAM_PERFORMANCE &&\n      props.examPerformanceReportContent\n    ) {\n      let index: number = props.examPerformanceReportContent.findIndex(\n        (item) => item.key === key\n      );\n      let newArray: examPerformanceReportContentInterface[] =\n        props.examPerformanceReportContent;\n      newArray[index].status = !newArray[index].status;\n      props.setExamPerformanceReportContent &&\n        props.setExamPerformanceReportContent(newArray);\n      let isSelectAllNeeded = newArray.find((item) => item.status === false);\n      if (isSelectAllNeeded) {\n        setSelectAll(false);\n      } else {\n        setSelectAll(true);\n      }\n\n      // UPDATE APPLICATION LIST FOR UPDATE ==============================\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n    if (\n      props.reportTitle &&\n      props.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n      props.exam30PerformanceReportContent\n    ) {\n      let index: number = props.exam30PerformanceReportContent.findIndex(\n        (item) => item.key === key\n      );\n      let newArray: examPerformanceReportContentInterface[] =\n        props.exam30PerformanceReportContent;\n      newArray[index].status = !newArray[index].status;\n      props.setExam30PerformanceReportContent &&\n        props.setExam30PerformanceReportContent(newArray);\n      let isSelectAllNeeded = newArray.find((item) => item.status === false);\n      if (isSelectAllNeeded) {\n        setSelectAll(false);\n      } else {\n        setSelectAll(true);\n      }\n\n      // UPDATE APPLICATION LIST FOR UPDATE ==============================\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n  };\n\n  const updateExaminationProgressReportContent = (\n    key: ExaminationProgressReportContentKeyInterface\n  ) => {\n    if (props.examinationProgressReportContent) {\n      let index: number = props.examinationProgressReportContent.findIndex(\n        (item) => item.key === key\n      );\n      let newArray: ExaminationProgressReportContentInterface[] =\n        props.examinationProgressReportContent;\n      newArray[index].status = !newArray[index].status;\n      props.setExaminationProgressExamPerformanceReportContent &&\n        props.setExaminationProgressExamPerformanceReportContent(newArray);\n      let isSelectAllNeeded = newArray.find((item) => item.status === false);\n      if (isSelectAllNeeded) {\n        setSelectAll(false);\n      } else {\n        setSelectAll(true);\n      }\n\n      // UPDATE APPLICATION LIST FOR UPDATE ==============================\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n  };\n\n  const updateCandidateExamPerformanceReportContent = (\n    key: CandidateExamPerformanceReportContentKeyInterface\n  ) => {\n    if (\n      props.reportTitle &&\n      props.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE &&\n      props.candidateExamPerformanceReportContent\n    ) {\n      let index: number = props.candidateExamPerformanceReportContent.findIndex(\n        (item) => item.key === key\n      );\n      let newArray: CandidateExamPerformanceReportContentInterface[] =\n        props.candidateExamPerformanceReportContent;\n      newArray[index].status = !newArray[index].status;\n      props.setCandidateExamPerformanceReportContent &&\n        props.setCandidateExamPerformanceReportContent(newArray);\n      let isSelectAllNeeded = newArray.find((item) => item.status === false);\n      if (isSelectAllNeeded) {\n        setSelectAll(false);\n      } else {\n        setSelectAll(true);\n      }\n\n      // UPDATE APPLICATION LIST FOR UPDATE ==============================\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n\n    if (\n      props.reportTitle &&\n      props.reportTitle === reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE &&\n      props.candidate30ExamPerformanceReportContent\n    ) {\n      let index: number =\n        props.candidate30ExamPerformanceReportContent.findIndex(\n          (item) => item.key === key\n        );\n      let newArray: CandidateExamPerformanceReportContentInterface[] =\n        props.candidate30ExamPerformanceReportContent;\n      newArray[index].status = !newArray[index].status;\n      props.setCandidate30ExamPerformanceReportContent &&\n        props.setCandidate30ExamPerformanceReportContent(newArray);\n      let isSelectAllNeeded = newArray.find((item) => item.status === false);\n      if (isSelectAllNeeded) {\n        setSelectAll(false);\n      } else {\n        setSelectAll(true);\n      }\n\n      // UPDATE APPLICATION LIST FOR UPDATE ==============================\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n  };\n\n  useEffect(() => {\n    if (\n      !props.locations.length &&\n      props.modalFor === ModalForTypes.choose_district\n    ) {\n      props.getAllRoom((status: boolean, msg: string) => {\n        if (!status && msg.length > 0) console.error(msg);\n        setLoadingLocation(status);\n      });\n    } else {\n      setLoadingLocation(false);\n    }\n  }, [props]);\n\n  const selectDistrict = (district_id: string) => {\n    setError(null);\n    if (district_id === \"all\") {\n      if (\n        ((props.reportTitle &&\n          props.reportTitle ===\n            reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE) ||\n          (props.isAllDistrictAllowed &&\n            props.isAllDistrictAllowed === true)) &&\n        props.SetReportDistrictId\n      ) {\n        props.SetReportDistrictId(null);\n        props.changeModalState(false);\n      } else {\n        setError({ element: \"district\", msg: \"District is required\" });\n      }\n    } else {\n      if (props.SetReportDistrictId) {\n        let thisDistrict = LocationsInArray(props.locations).find(\n          (item) => item.district_id === district_id\n        );\n        if (!thisDistrict) {\n          return setError({ element: \"district\", msg: \"Invalid district id\" });\n        } else {\n          props.SetReportDistrictId({\n            district_id: thisDistrict.district_id,\n            district_name: thisDistrict.district_name,\n          });\n          props.changeModalState(false);\n        }\n      }\n    }\n  };\n\n  const showGenerateBtn = (): { status: boolean; data: any[] } => {\n    if (props.reportTitle) {\n      // EXAM PREPARATION ######################\n      if (\n        props.reportTitle === reportTitleType.EXAM_PREPARATION &&\n        props.excelReportTitle &&\n        props.examsToPrint\n      ) {\n        return { status: true, data: props.examsToPrint };\n      }\n      // EXAM PERFORMANCE ######################\n      if (\n        props.reportTitle === reportTitleType.EXAM_PERFORMANCE &&\n        props.excelReportTitle &&\n        props.examPerformanceToPrint\n      ) {\n        return { status: true, data: props.examPerformanceToPrint };\n      }\n      // TOP 30 EXAM PERFORMANCE ######################\n      if (\n        props.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n        props.excelReportTitle &&\n        props.exam30PerformanceToPrint\n      ) {\n        return { status: true, data: props.exam30PerformanceToPrint };\n      }\n      // EXAMINATION PROGRESS ######################\n      if (\n        props.reportTitle === reportTitleType.EXAMINATION_PROGRESS &&\n        props.excelReportTitle &&\n        props.examinationProgressToPrint\n      ) {\n        return { status: true, data: props.examinationProgressToPrint };\n      }\n      // CANDIDATE EXAM PERFORMANCE ######################\n      if (\n        props.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE &&\n        props.excelReportTitle &&\n        props.candidateExamPerformanceToPrint\n      ) {\n        return { status: true, data: props.candidateExamPerformanceToPrint };\n      }\n      // TOP 30 CANDIDATE EXAM PERFORMANCE ######################\n      if (\n        props.reportTitle === reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE &&\n        props.excelReportTitle &&\n        props.candidate30ExamPerformanceToPrint\n      ) {\n        return { status: true, data: props.candidate30ExamPerformanceToPrint };\n      }\n    }\n    return { status: false, data: [] };\n  };\n\n  return (\n    <div>\n      {/* LOAD MODAL FOR PERIOD ================================== */}\n      {props.modalFor === ModalForTypes.period &&\n        props.applicationPeriods &&\n        props.modalState && (\n          <Modal\n            title={\n              <div className=\"flex flex-row gap-4 items-center\">\n                <MdHistory className=\"text-5xl text-blue-600\" />\n                <div className=\"flex flex-col\">\n                  <span className=\"font-bold text-xl text-blue-600\">\n                    Choose a period\n                  </span>\n                </div>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() => props.selected_period && props.changeModalState(false)}\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{ title: true }}\n          >\n            <ChooseSession\n              allSession={props.applicationPeriods}\n              setSelectSession={(value: SessionPlanInterface | \"all\") => {\n                if (value !== \"all\") {\n                  props.setSelectedPeriod && props.setSelectedPeriod(value);\n                  props.onPeriodChange &&\n                    props.onPeriodChange(value.session_plan_id);\n                  props.changeModalState(false);\n                }\n              }}\n              chooseAll={false}\n              currentSelected={\n                props.selected_period ? props.selected_period : \"all\"\n              }\n            />\n          </Modal>\n        )}\n      {/* END LOAD MODAL FOR PERIOD ================================== */}\n\n      {/* LOAD MODAL FOR REPORT TYPES ================================== */}\n      {props.modalFor === ModalForTypes.title && props.modalState && (\n        <Modal\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              <CgFileDocument className=\"text-5xl text-blue-600\" />\n              <div className=\"flex flex-col\">\n                <span className=\"font-bold text-xl text-blue-600\">\n                  Choose exam report type\n                </span>\n              </div>\n            </div>\n          }\n          backDrop={true}\n          theme={Themes.default}\n          close={() => props.changeModalState(false)}\n          backDropClose={true}\n          widthSizeClass={ModalSize.extraLarge}\n          displayClose={true}\n          padding={{ title: true }}\n        >\n          <div className=\"px-2 pb-2\">\n            {Object.values(reportTitleType).map((item, i) => (\n              <div\n                onClick={() => {\n                  props.setReportTitle && props.setReportTitle(item);\n                  props.setExcelReportTitle && props.setExcelReportTitle(item);\n                  props.changeModalState(false);\n                }}\n                key={i + 1}\n                className={`flex items-center border rounded px-2 py-2 cursor-pointer group hover:bg-blue-100 hover:border-blue-500 mb-3 justify-between ${\n                  props.reportTitle && props.reportTitle === item\n                    ? \"bg-blue-50 border-blue-400\"\n                    : \"bg-white border-gray-200\"\n                }`}\n              >\n                <div>\n                  <div className=\"text-blue-500 text-sm font-medium italic\">\n                    Report type\n                  </div>\n                  <div className=\"font-bold\">\n                    {item}\n                    {item === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n                      \" district\"}\n                  </div>\n                </div>\n                <div className=\"btn bg-blue-400 group-hover:bg-blue-600 text-white mr-2\">\n                  Choose\n                </div>\n              </div>\n            ))}\n          </div>\n        </Modal>\n      )}\n      {/* END LOAD MODAL FOR REPORT TYPES ================================== */}\n\n      {/* GENERATE DYNAMIC REPORT CONTENT MODAL */}\n      {props.generateReportModal &&\n        props.modalFor === ModalForTypes.generateReportModal &&\n        props.modalState && (\n          <Modal\n            title={\n              <div className=\"flex flex-row gap-4 items-center\">\n                {/* <IoBriefcase className=\"text-5xl text-gray-500\" /> */}\n                <div className=\"flex flex-col\">\n                  <span className=\"font-bold text-2xl text-gray-500\">\n                    Generating Report contents\n                  </span>\n                  <span className=\"text-sm text-blue-600 font-normal\">\n                    Generating {props.generateReportModal.reportType} Report\n                  </span>\n                </div>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() =>\n              props.setGenerateReportModal && props.setGenerateReportModal(null)\n            }\n            backDropClose={false}\n            widthSizeClass={ModalSize.medium}\n            displayClose={true}\n            padding={{ title: true }}\n          >\n            <div className=\"px-6\">\n              <div className=\"my-2 text-base text-gray-700 sm:text-lg\">\n                <div className=\"flex flex-col\">\n                  <label>Title</label>\n                  <input\n                    type=\"text\"\n                    className={`text-left input-white w-20 inline-block ${\n                      formError && formError.element === \"report_title\"\n                        ? \"border-red-500\"\n                        : \"border-gray-500\"\n                    } border-2`}\n                    placeholder=\"Sub Category Title\"\n                    value={props.excelReportTitle ? props.excelReportTitle : \"\"}\n                    onChange={(e) => {\n                      props.setExcelReportTitle &&\n                        props.setExcelReportTitle(e.target.value);\n                      setFormError(null);\n                    }}\n                    // disabled={props.loading}\n                  />\n                  {formError && formError.element === \"report_title\" && (\n                    <span className=\"text-red-500\">{formError.msg}</span>\n                  )}\n                </div>\n                <div className=\"flex flex-col mt-2\">\n                  <label>Report content</label>\n                  {/* // EXAM PREPARATION ###################### */}\n                  {props.reportTitle &&\n                    props.reportTitle === reportTitleType.EXAM_PREPARATION && (\n                      <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                        {props.examPreparationReportContent &&\n                          props.examPreparationReportContent.map(\n                            (item, index) => (\n                              <div\n                                key={index}\n                                className={`flex items-center gap-1 ${\n                                  isChangeAllowed(item.key)\n                                    ? \"cursor-pointer\"\n                                    : \"cursor-not-allowed\"\n                                }`}\n                                onClick={() =>\n                                  isChangeAllowed(item.key) &&\n                                  updateExamPreparationReportContent(item.key)\n                                }\n                                title={\n                                  !isChangeAllowed(item.key)\n                                    ? \"Required for every report!\"\n                                    : \"\"\n                                }\n                              >\n                                {item.status ? (\n                                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                                ) : (\n                                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                                )}\n                                <span>{item.title}</span>\n                              </div>\n                            )\n                          )}\n                      </div>\n                    )}\n                  {/* // EXAM PERFORMANCE ###################### */}\n                  {props.reportTitle &&\n                    props.reportTitle === reportTitleType.EXAM_PERFORMANCE && (\n                      <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                        {props.examPerformanceReportContent &&\n                          props.examPerformanceReportContent.map(\n                            (item, index) => (\n                              <div\n                                key={index}\n                                className={`flex items-center gap-1 ${\n                                  isChangeAllowed(item.key)\n                                    ? \"cursor-pointer\"\n                                    : \"cursor-not-allowed\"\n                                }`}\n                                onClick={() =>\n                                  isChangeAllowed(item.key) &&\n                                  updateExamPerformanceReportContent(item.key)\n                                }\n                                title={\n                                  !isChangeAllowed(item.key)\n                                    ? \"Required for every report!\"\n                                    : \"\"\n                                }\n                              >\n                                {item.status ? (\n                                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                                ) : (\n                                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                                )}\n                                <span>{item.title}</span>\n                              </div>\n                            )\n                          )}\n                      </div>\n                    )}\n                  {/* // TOP 30 EXAM PERFORMANCE ###################### */}\n                  {props.reportTitle &&\n                    props.reportTitle ===\n                      reportTitleType.EXAM_DISTRICT_PERFORMANCE && (\n                      <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                        {props.exam30PerformanceReportContent &&\n                          props.exam30PerformanceReportContent.map(\n                            (item, index) => (\n                              <div\n                                key={index}\n                                className={`flex items-center gap-1 ${\n                                  isChangeAllowed(item.key)\n                                    ? \"cursor-pointer\"\n                                    : \"cursor-not-allowed\"\n                                }`}\n                                onClick={() =>\n                                  isChangeAllowed(item.key) &&\n                                  updateExamPerformanceReportContent(item.key)\n                                }\n                                title={\n                                  !isChangeAllowed(item.key)\n                                    ? \"Required for every report!\"\n                                    : \"\"\n                                }\n                              >\n                                {item.status ? (\n                                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                                ) : (\n                                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                                )}\n                                <span>{item.title}</span>\n                              </div>\n                            )\n                          )}\n                      </div>\n                    )}\n                  {/* // EXAMINATION PROGRESS ###################### */}\n                  {props.reportTitle &&\n                    props.reportTitle ===\n                      reportTitleType.EXAMINATION_PROGRESS && (\n                      <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                        {props.examinationProgressReportContent &&\n                          props.examinationProgressReportContent.map(\n                            (item, index) => (\n                              <div\n                                key={index}\n                                className={`flex items-center gap-1 ${\n                                  isChangeAllowed(item.key)\n                                    ? \"cursor-pointer\"\n                                    : \"cursor-not-allowed\"\n                                }`}\n                                onClick={() =>\n                                  isChangeAllowed(item.key) &&\n                                  updateExaminationProgressReportContent(\n                                    item.key\n                                  )\n                                }\n                                title={\n                                  !isChangeAllowed(item.key)\n                                    ? \"Required for every report!\"\n                                    : \"\"\n                                }\n                              >\n                                {item.status ? (\n                                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                                ) : (\n                                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                                )}\n                                <span>{item.title}</span>\n                              </div>\n                            )\n                          )}\n                      </div>\n                    )}\n                  {/* // EXAMINATION PROGRESS ###################### */}\n                  {/* // CANDIDATE EXAM PERFORMANCE ###################### */}\n                  {props.reportTitle &&\n                    props.reportTitle ===\n                      reportTitleType.APPLICANTS_PERFORMANCE && (\n                      <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                        {props.candidateExamPerformanceReportContent &&\n                          props.candidateExamPerformanceReportContent.map(\n                            (item, index) => (\n                              <div\n                                key={index}\n                                className={`flex items-center gap-1 ${\n                                  isChangeAllowed(item.key)\n                                    ? \"cursor-pointer\"\n                                    : \"cursor-not-allowed\"\n                                }`}\n                                onClick={() =>\n                                  isChangeAllowed(item.key) &&\n                                  updateCandidateExamPerformanceReportContent(\n                                    item.key\n                                  )\n                                }\n                                title={\n                                  !isChangeAllowed(item.key)\n                                    ? \"Required for every report!\"\n                                    : \"\"\n                                }\n                              >\n                                {item.status ? (\n                                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                                ) : (\n                                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                                )}\n                                <span>{item.title}</span>\n                              </div>\n                            )\n                          )}\n                      </div>\n                    )}\n                  {/* // END EXAMINATION PROGRESS ###################### */}\n                  {/* // TOP 30 CANDIDATE EXAM PERFORMANCE ###################### */}\n                  {props.reportTitle &&\n                    props.reportTitle ===\n                      reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE && (\n                      <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                        {props.candidate30ExamPerformanceReportContent &&\n                          props.candidate30ExamPerformanceReportContent.map(\n                            (item, index) => (\n                              <div\n                                key={index}\n                                className={`flex items-center gap-1 ${\n                                  isChangeAllowed(item.key)\n                                    ? \"cursor-pointer\"\n                                    : \"cursor-not-allowed\"\n                                }`}\n                                onClick={() =>\n                                  isChangeAllowed(item.key) &&\n                                  updateCandidateExamPerformanceReportContent(\n                                    item.key\n                                  )\n                                }\n                                title={\n                                  !isChangeAllowed(item.key)\n                                    ? \"Required for every report!\"\n                                    : \"\"\n                                }\n                              >\n                                {item.status ? (\n                                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                                ) : (\n                                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                                )}\n                                <span>{item.title}</span>\n                              </div>\n                            )\n                          )}\n                      </div>\n                    )}\n                  {/* // END TOP 30 CANDIDATE EXAM PERFORMANCE ###################### */}\n                  {formError && formError.element === \"report_content\" && (\n                    <span className=\"text-red-500\">{formError.msg}</span>\n                  )}\n                </div>\n              </div>\n              <div className=\"flex justify-between mb-2 mt-4\">\n                <div\n                  className={`flex items-center gap-1 cursor-pointer`}\n                  onClick={() => resetReportContent(selectAll)}\n                >\n                  {selectAll ? (\n                    <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                  ) : (\n                    <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                  )}\n                  <span>Select all</span>\n                </div>\n\n                {showGenerateBtn().status && (\n                  <ExportToExcel\n                    fileData={showGenerateBtn().data}\n                    fileName={props.excelReportTitle!}\n                    btnName=\"Generate\"\n                  />\n                )}\n              </div>\n            </div>\n          </Modal>\n        )}\n      {/* END GENERATE DYNAMIC REPORT CONTENT MODAL */}\n\n      {/* LOAD MODAL FOR CHOOSING EXAM ================================== */}\n      {props.modalFor === ModalForTypes.choose_exam &&\n        props.modalState &&\n        props.AllExamData && (\n          <Modal\n            title={\n              <div className=\"flex flex-row gap-4 items-center\">\n                <CgFileDocument className=\"text-5xl text-blue-600\" />\n                <div className=\"flex flex-col\">\n                  <span className=\"font-bold text-xl text-blue-600\">\n                    Choose exam\n                  </span>\n                </div>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() => props.changeModalState(false)}\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{ title: true }}\n          >\n            <div className=\"px-2 pb-2\">\n              <div className=\"w-full py-2\">\n                <input\n                  onChange={(e) => setSearchInput(e.target.value)}\n                  type=\"text\"\n                  value={searchInput}\n                  placeholder=\"Search...\"\n                  className=\"w-full bg-white py-2 px-3 rounded border border-gray-400\"\n                  disabled={props.AllExamData.length <= 0 ? true : false}\n                />\n              </div>\n              <div\n                onClick={() => {\n                  props.SetReportCourseId(null);\n                  props.changeModalState(false);\n                }}\n                className={`flex items-center border rounded px-2 py-2 cursor-pointer group hover:bg-blue-100 hover:border-blue-500 mb-3 justify-between ${\n                  props.thisExam === null\n                    ? \"bg-blue-50 border-blue-400\"\n                    : \"bg-white border-gray-200\"\n                }`}\n              >\n                <div>\n                  <div className=\"text-sm font-medium italic\">\n                    code: <span className=\"text-blue-500\">-</span>\n                  </div>\n                  <div className=\"font-bold text-lg\">All exams</div>\n                </div>\n                <div className=\"btn bg-blue-400 group-hover:bg-blue-600 text-white mr-2\">\n                  Choose\n                </div>\n              </div>\n              {searchExamData(props.AllExamData, searchInput).map((item, i) => (\n                <div\n                  onClick={() => {\n                    props.SetReportCourseId(item);\n                    props.changeModalState(false);\n                  }}\n                  key={i + 1}\n                  className={`flex items-center border rounded px-2 py-2 cursor-pointer group hover:bg-blue-100 hover:border-blue-500 mb-3 justify-between ${\n                    props.thisExam &&\n                    props.thisExam.course_id === item.course_id\n                      ? \"bg-blue-50 border-blue-400\"\n                      : \"bg-white border-gray-200\"\n                  }`}\n                >\n                  <div>\n                    <div className=\"text-sm font-medium italic\">\n                      code:{\" \"}\n                      <span className=\"text-blue-500\">{item.course_code}</span>\n                    </div>\n                    <div className=\"font-bold text-lg\">{item.course_name}</div>\n                  </div>\n                  <div className=\"btn bg-blue-400 group-hover:bg-blue-600 text-white mr-2\">\n                    Choose\n                  </div>\n                </div>\n              ))}\n            </div>\n          </Modal>\n        )}\n      {/* END LOAD MODAL FOR CHOOSING EXAM ================================== */}\n\n      {/* LOAD MODAL FOR CHOOSING DISTRICT ================================== */}\n      {props.modalFor === ModalForTypes.choose_district && props.modalState && (\n        <Modal\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              <CgFileDocument className=\"text-5xl text-blue-600\" />\n              <div className=\"flex flex-col\">\n                <span className=\"font-bold text-xl text-blue-600\">\n                  Choose district\n                </span>\n              </div>\n            </div>\n          }\n          backDrop={true}\n          theme={Themes.default}\n          close={() =>\n            !isEmptyOrSpaces(districtId) && props.changeModalState(false)\n          }\n          backDropClose={true}\n          widthSizeClass={ModalSize.medium}\n          displayClose={true}\n          padding={{ title: true }}\n        >\n          <div className=\"px-2 pb-2 \">\n            {loadingLocation ? (\n              <Loading />\n            ) : (\n              <section className=\"pb-8 px-7 \">\n                {/* <div className=\"grid grid-cols-1 \"> */}\n                <label className=\"uppercase md:text-sm text-xs text-gray-500 text-light font-semibold\">\n                  District\n                </label>\n                {props.locations.length > 0 ? (\n                  <div className=\"\">\n                    <select\n                      className={`py-3 px-3 w-full rounded border-2 bg-white mt-1 focus:outline-none ${\n                        error && error.element === \"district\"\n                          ? \"border-red-400 focus:border-red-800\"\n                          : \"border-gray-400 focus:border-gray-800\"\n                      }`}\n                      value={districtId}\n                      onChange={(e) => {\n                        setDistrictId(e.target.value);\n                        selectDistrict(e.target.value);\n                      }}\n                    >\n                      <option value=\"all\">Select district</option>\n                      {FC_DistinctDistrict(\n                        LocationsInArray(props.locations)\n                      ).map((item, index) => (\n                        <option\n                          key={index + item.district_id}\n                          value={item.district_id}\n                        >\n                          {item.district_name}\n                        </option>\n                      ))}\n                    </select>\n                    {error && error.element === \"district\" && (\n                      <p className=\"text-xs italic text-red-500 mt-3\">\n                        {error.msg}\n                      </p>\n                    )}\n                  </div>\n                ) : (\n                  <div className=\"alert-info\">No district found</div>\n                )}\n                {/* </div> */}\n              </section>\n            )}\n          </div>\n        </Modal>\n      )}\n      {/* END LOAD MODAL FOR CHOOSING DISTRICT ================================== */}\n    </div>\n  );\n};\n\nconst mapStateToProps = ({\n  locations,\n}: StoreState): {\n  locations: RoomLocationInterface[];\n} => {\n  return {\n    locations: locations.roomLocation,\n  };\n};\n\nexport default React.memo(connect(mapStateToProps, {\n  getAllRoom,\n  SetReportDistrictId,\n  SetReportCourseId,\n})(ExamReportModals));\n","import React from \"react\";\nimport Chart from \"react-apexcharts\";\n\ntype chartType = {\n  options: {\n    labels: string[];\n    legend?: ApexLegend;\n    plotOptions?: ApexPlotOptions;\n    colors?: any[];\n  };\n  series: number[];\n  width?: number;\n};\n\nconst PieChart: React.FC<chartType> = (props) => {\n  return (\n    <div className=\"donut\">\n      <Chart\n        options={props.options}\n        series={props.series}\n        type=\"donut\"\n        width={`${props.width ? props.width : \"380\"}`}\n      />\n    </div>\n  );\n};\n\nexport default React.memo(PieChart);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { BiRightArrowAlt } from \"react-icons/bi\";\nimport {\n  MdDelete,\n  MdEdit,\n  MdHighlightOff,\n  MdRemoveRedEye,\n  MdSettings,\n} from \"react-icons/md\";\nimport { SiAddthis } from \"react-icons/si\";\nimport { TiInputChecked } from \"react-icons/ti\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { customizeUserAccess } from \"../../actions/users\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport Table from \"../../components/Table/Table\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport {\n  UserInterface,\n  AccessTaskInterface,\n  CustomeAccessInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\n\ninterface AppProps {\n  userInfo: UserInterface | undefined;\n  manageUserId: string;\n  setUserAccess: (value: AccessTaskInterface[] | null) => void;\n  userAccess: AccessTaskInterface[] | null;\n  setCurrentAccess: (value: AccessTaskInterface | null) => void;\n  currentAccess: AccessTaskInterface | null;\n  currentPage: number;\n\n  // REDUX ==============\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  customizeUserAccess: Function;\n}\n\ninterface AppStates {\n  loading: boolean;\n  loadindRequest: boolean;\n  // currentAccess:AccessTaskInterface | null;\n  // userAccess:AccessTaskInterface[] | null;\n  createPermission: boolean;\n  viewPermission: boolean;\n  updatePermission: boolean;\n  deletePermission: boolean;\n}\n\nclass _UserAccess extends Component<AppProps, AppStates> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadindRequest: false,\n      // currentAccess:null,\n      // userAccess:null,\n      createPermission: false,\n      viewPermission: false,\n      updatePermission: false,\n      deletePermission: false,\n    };\n  }\n\n  setViewPermission = (value: boolean) => {\n    this.setState({ viewPermission: value });\n  };\n\n  setLoadindRequest = (value: boolean) => {\n    this.setState({ loadindRequest: value });\n  };\n\n  setCreatePermission = (value: boolean) => {\n    this.setState({ createPermission: value });\n  };\n\n  setUpdatePermission = (value: boolean) => {\n    this.setState({ updatePermission: value });\n  };\n\n  setDeletePermission = (value: boolean) => {\n    this.setState({ deletePermission: value });\n  };\n\n  setLoadind = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  overrideUserAccess = (\n    default_access: AccessTaskInterface[],\n    custome_access: AccessTaskInterface[]\n  ) => {\n    if (default_access && custome_access && custome_access.length > 0) {\n      let overideAccess: AccessTaskInterface[] = [];\n      for (const key in default_access) {\n        if (Object.prototype.hasOwnProperty.call(default_access, key)) {\n          const findCustom = custome_access.find(\n            (custom) => custom.id === default_access[key].id\n          );\n          if (findCustom) {\n            overideAccess.push(findCustom);\n          } else {\n            overideAccess.push(default_access[key]);\n          }\n        }\n      }\n      this.props.setUserAccess(overideAccess);\n    }\n  };\n\n  componentDidMount = () => {\n    if (this.props.userInfo && this.props.userInfo.custome_access) {\n      this.props.userInfo.default_access &&\n        this.overrideUserAccess(\n          this.props.userInfo.default_access.access,\n          this.props.userInfo.custome_access.access\n        );\n      this.setLoadind(false);\n    } else {\n      this.props.userInfo &&\n        this.props.userInfo.default_access &&\n        this.props.setUserAccess(this.props.userInfo.default_access.access);\n      this.setLoadind(false);\n    }\n  };\n\n  tableData = (): JSX.Element[] => {\n    if (!this.props.userAccess)\n      return [\n        <tr key={Math.random()}>\n          <td>No data</td>\n        </tr>,\n      ];\n    return this.props.userAccess.map((access: AccessTaskInterface, i) => (\n      <tr\n        key={i + access.id + Math.random()}\n        className={`text-left border-b border-gray-200 cursor-pointer hover:bg-gray-100 ${\n          this.props.currentAccess &&\n          this.props.currentAccess.id === access.id &&\n          \"bg-gray-200 border my-3 hover:bg-gray-100\"\n        }`}\n        onClick={() =>\n          this.props.currentAccess && this.props.currentAccess.id === access.id\n            ? (this.props.setCurrentAccess(null),\n              this.setCreatePermission(false),\n              this.setViewPermission(false),\n              this.setUpdatePermission(false),\n              this.setDeletePermission(false))\n            : (this.props.setCurrentAccess(access),\n              this.setCreatePermission(access.permitted.create),\n              this.setViewPermission(access.permitted.view),\n              this.setUpdatePermission(access.permitted.update),\n              this.setDeletePermission(access.permitted.delete))\n        }\n      >\n        <td className=\"px-2 py-1\">\n          <label className=\"inline-flex items-center\">\n            {/* <input\n              type=\"radio\"\n              name=\"taskAccess\"\n              value={access.id}\n              className=\"form-radio h-4 w-4 text-gray-600\"\n              onChange={() => {\n                currentAccess\n                  ? this.setState({ currentAccess: null })\n                  : this.setState({ currentAccess: access });\n              }}\n              checked={currentAccess ? true : false}\n            /> */}\n            <span className=\"text-gray-900 capitalize text-xl font-normal cursor-pointer\">\n              {access.task}\n            </span>\n          </label>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.create ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.create ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.create ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.view ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.view ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.view ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.update ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.update ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.update ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.delete ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.delete ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.delete ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n      </tr>\n    ));\n  };\n\n  handleCustomization = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (this.props.userInfo) {\n      this.setLoadindRequest(true);\n      let task: [] | CustomeAccessInterface | null = null;\n      task = this.props.userInfo.custome_access;\n      let index = -1;\n\n      try {\n        if (task && this.props.currentAccess) {\n          index = task.access.findIndex(\n            (access) => access.id === this.props.currentAccess!.id\n          );\n          if (index >= 0) {\n            task.access[index].permitted.create = this.state.createPermission;\n            task.access[index].permitted.view = this.state.viewPermission;\n            task.access[index].permitted.update = this.state.updatePermission;\n            task.access[index].permitted.delete = this.state.deletePermission;\n          } else {\n            task.access.push({\n              id: this.props.currentAccess.id,\n              task: this.props.currentAccess.task,\n              key: this.props.currentAccess.key,\n              permitted: {\n                create: this.state.createPermission,\n                view: this.state.viewPermission,\n                update: this.state.updatePermission,\n                delete: this.state.deletePermission,\n              },\n            });\n          }\n        } else if (this.props.currentAccess) {\n          task = {\n            access: [\n              {\n                id: this.props.currentAccess.id,\n                task: this.props.currentAccess.task,\n                key: this.props.currentAccess.key,\n                permitted: {\n                  create: this.state.createPermission,\n                  view: this.state.viewPermission,\n                  update: this.state.updatePermission,\n                  delete: this.state.deletePermission,\n                },\n              },\n            ],\n            user_id: this.props.userInfo.user_id,\n            custome_user_access_id: \"\",\n          };\n        }\n\n        if (task) {\n          let res;\n          if (this.props.userInfo.custome_access !== null) {\n            res = await axios.patch<{ data: CustomeAccessInterface }>(\n              `${API.AUTH}/custaccess`,\n              {\n                access: task.access,\n                user_id: this.props.userInfo.user_id,\n              }\n            );\n          } else {\n            res = await axios.post<{ data: CustomeAccessInterface }>(\n              `${API.AUTH}/custaccess`,\n              {\n                access: task.access,\n                user_id: this.props.userInfo.user_id,\n              }\n            );\n          }\n\n          if (res) {\n            task.custome_user_access_id = res.data.data.custome_user_access_id;\n\n            this.props.customizeUserAccess(task, this.props.currentPage);\n            task &&\n              this.props.userInfo.default_access &&\n              this.overrideUserAccess(\n                this.props.userInfo.default_access.access,\n                task.access\n              );\n            this.props.PushPopupAlert({\n              title: `Resetting User Access complete successfully`,\n              theme: PopupAlertTheme.info,\n            });\n\n            task = null;\n            this.props.setCurrentAccess(null);\n            this.setCreatePermission(false);\n            this.setViewPermission(false);\n            this.setUpdatePermission(false);\n            this.setDeletePermission(false);\n          }\n        }\n      } catch (error) {\n        console.error({ customize_access: error });\n        this.props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      this.setLoadindRequest(false);\n    }\n  };\n\n  render() {\n    if (this.props.userInfo === undefined) {\n      return <Redirect to=\"/users\" />;\n    }\n\n    if (this.state.loading || this.props.userInfo === null) {\n      return (\n        <div className=\"text-center py-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading User Access...\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4 mx-1 my-2\">\n          <div\n            className={`col-span-1 md:col-span-3 bg-white w-full overflow-x-auto border rounded text-center p-2 ${\n              this.props.currentAccess ? \"hidden md:block\" : \"\"\n            }`}\n          >\n            <span className=\"text-gray-600 mt-2 font-semibold text-2xl\">\n              Settings\n            </span>\n            {!this.state.loading && (\n              <div className=\"overflow-x-auto w-full\">\n                <Table\n                  columns={[\n                    {\n                      columnTitle: \"Access Name\",\n                      alignText: \"left\",\n                      padding: \"p-3\",\n                    },\n                    { columnTitle: \"Create\", alignText: \"left\" },\n                    { columnTitle: \"View\", alignText: \"left\" },\n                    { columnTitle: \"Update\", alignText: \"left\" },\n                    { columnTitle: \"Delete\", alignText: \"left\" },\n                  ]}\n                  rows={this.tableData}\n                  pagination={false}\n                  search={true}\n                  searchBG=\"bg-gray-50\"\n                  thColor=\"gray\"\n                />\n              </div>\n            )}\n          </div>\n          <div className={`col-span-1 md:col-span-2`}>\n            {!this.props.currentAccess ? (\n              <div className=\"w-full hidden md:flex flex-col items-center text-gray-600 gap-1 py-3\">\n                <MdSettings className=\"w-20 h-20\" />\n                <span className=\"text-8 md:text-12\">\n                  Choose Access to Customize\n                </span>\n              </div>\n            ) : (\n              <div className={``}>\n                <h1 className=\"text-2xl md:text-3xl font-semibold text-center my-2 text-gray-900\">\n                  Customize User Access\n                </h1>\n                <div className=\"flex justify-center mb-3\">\n                  <h2 className=\"text-2xl font-semibold text-center text-gray-600 flex flex-row items-center\">\n                    <BiRightArrowAlt className=\"w-7 h-7\" />\n                    {this.props.currentAccess.task}\n                  </h2>\n                </div>\n\n                <div className=\"flex flex-col px-2 md:px-1\">\n                  <form\n                    className=\"flex flex-col items-center\"\n                    onSubmit={(e) => this.handleCustomization(e)}\n                  >\n                    <div className=\"inline-flex gap-2 items-center\">\n                      <SiAddthis className=\"w-7 h-7 text-gray-600\" />\n                      <div className=\"flex flex-col\">\n                        <h3 className=\"font-semibold text-xl\">Create</h3>\n                        <span className=\"text-gray-600 text-sm md:pr-1\">\n                          This permission gives the user the ability to create\n                        </span>\n                      </div>\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-checkbox h-7 w-7 text-teal-600\"\n                        onChange={() =>\n                          this.setCreatePermission(!this.state.createPermission)\n                        }\n                        checked={this.state.createPermission}\n                        disabled={this.state.loadindRequest}\n                      />\n                    </div>\n                    <div className=\"inline-flex gap-2 items-center\">\n                      <MdRemoveRedEye className=\"w-7 h-7 text-gray-600\" />\n                      <div className=\"flex flex-col\">\n                        <h3 className=\"font-semibold text-xl\">View</h3>\n                        <span className=\"text-gray-600 text-sm md:pr-4\">\n                          This permission gives the user the ability to view\n                        </span>\n                      </div>\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-checkbox h-7 w-7 text-teal-600\"\n                        onChange={() =>\n                          this.setViewPermission(!this.state.viewPermission)\n                        }\n                        checked={this.state.viewPermission}\n                        disabled={this.state.loadindRequest}\n                      />\n                    </div>\n                    <div className=\"inline-flex gap-2 items-center\">\n                      <MdEdit className=\"w-7 h-7 text-gray-600\" />\n                      <div className=\"flex flex-col\">\n                        <h3 className=\"font-semibold text-xl\">Update</h3>\n                        <span className=\"text-gray-600 text-sm\">\n                          This permission gives the user the ability to update\n                        </span>\n                      </div>\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-checkbox h-7 w-7 text-teal-600\"\n                        onChange={() =>\n                          this.setUpdatePermission(!this.state.updatePermission)\n                        }\n                        checked={this.state.updatePermission}\n                        disabled={this.state.loadindRequest}\n                      />\n                    </div>\n                    <div className=\"inline-flex gap-2 items-center\">\n                      <MdDelete className=\"w-7 h-7 text-gray-600\" />\n                      <div className=\"flex flex-col\">\n                        <h3 className=\"font-semibold text-xl\">Delete</h3>\n                        <span className=\"text-gray-600 text-sm md:pr-1\">\n                          This permission gives the user the ability to delete\n                        </span>\n                      </div>\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-checkbox h-7 w-7 text-teal-600\"\n                        onChange={() =>\n                          this.setDeletePermission(!this.state.deletePermission)\n                        }\n                        checked={this.state.deletePermission}\n                        disabled={this.state.loadindRequest}\n                      />\n                    </div>\n\n                    <div className=\"flex items-center justify-center w-full py-3 gap-2\">\n                      {/* <button className=\"btn btn-secondary bg-red-600\">Back</button> */}\n                      <button\n                        className=\"btn bg-gray-500 hover:bg-gray-700 focus:outline-none text-white\"\n                        disabled={this.state.loadindRequest}\n                        onClick={() => {\n                          this.props.setCurrentAccess(null);\n                          this.setCreatePermission(false);\n                          this.setViewPermission(false);\n                          this.setUpdatePermission(false);\n                          this.setDeletePermission(false);\n                        }}\n                      >\n                        Cancel\n                      </button>\n                      <button\n                        className=\"btn btn-blue\"\n                        disabled={this.state.loadindRequest}\n                      >\n                        {!this.state.loadindRequest\n                          ? \"Save Change\"\n                          : \"Processing..\"}\n                      </button>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const UserAccess = React.memo(\n  connect(null, {\n    customizeUserAccess,\n    PushPopupAlert,\n  })(_UserAccess)\n);\n","import React, { FC } from \"react\";\nimport { IconType } from \"react-icons\";\nimport { FaUsers } from \"react-icons/fa\";\nimport { toAnyDigit } from \"../../shared/dataTest\";\n\nexport type DashboardLabelItemInterface = {\n  // TITLE: Application or Exam or Shortlisted ....\n  title: string;\n  // ICON: FaExpand ....\n  icon: IconType;\n  // ICON COLOR: blue, indigo, gray ....\n  iconColor: string;\n  // COUNT: 0,1,2,3,5,23,563 ....\n  count: number;\n  // COUNT: 0,1,2,3,5,23,563 ....\n  countOver?: number;\n};\n\nconst DashboardLabelItem: FC<DashboardLabelItemInterface> = (\n  props = {\n    title: \"\",\n    icon: FaUsers,\n    iconColor: \"indigo\",\n    count: 0,\n    countOver: undefined,\n  }\n) => {\n  const IconDefined = props.icon;\n  return (\n    <div className=\"flex items-center px-6 py-4 bg-white w-full rounded-md space-x-2 mb-2 lg:mb-0 shadow-md\">\n      <div\n        className={`p-3 rounded-full bg-${props.iconColor}-200 bg-opacity-75`}\n      >\n        <IconDefined className={`h-8 w-8 text-${props.iconColor}-600`} />\n      </div>\n      <div>\n        <h1 className=\"text-3xl font-semibold text-gray-700\">\n          {toAnyDigit(props.count)}{\" \"}\n          {props.countOver && \"/ \" + toAnyDigit(props.countOver)}\n        </h1>\n        <span className=\"text-gray-500 text-lg\">{props.title}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(DashboardLabelItem);\n","import React, { useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { SessionPlanInterface } from \"../../../interfaces\";\nimport { course } from \"../../../interfaces/course\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport { ExamsParcentageSuccessFailedRateByPeriodInterface } from \"../../../interfaces/reports\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { DATE, sortThisArray } from \"../../../utils/functions\";\n\nexport interface ExamPerformanceToPrintInterface {\n  course_id: number;\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string;\n  exam_period: string;\n  exam_date: string;\n  exam_time: string;\n  exam_duration: string;\n  exam_performance: number;\n}\n\nexport enum examPerformanceReportContentKeyInterface {\n  COURSER_NAME = \"course_name\",\n  COURSE_CODE = \"course_code\",\n  SCHOOL_LEVEL = \"school_levels\",\n  PERIOD = \"exam_period\",\n  DATE = \"exam_date\",\n  TIME = \"exam_time\",\n  DURATION = \"exam_duration\",\n  PERFORMANCE = \"exam_performance\",\n}\n\nexport interface examPerformanceReportContentInterface {\n  key: examPerformanceReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n\nexport const examPerformanceIsChangeAllowed = (\n  key: examPerformanceReportContentKeyInterface\n): boolean => {\n  if (\n    key === examPerformanceReportContentKeyInterface.COURSER_NAME ||\n    key === examPerformanceReportContentKeyInterface.COURSE_CODE ||\n    key === examPerformanceReportContentKeyInterface.PERIOD ||\n    key === examPerformanceReportContentKeyInterface.PERFORMANCE\n  ) {\n    return false;\n  }\n  return true;\n};\n\nexport const defaultExamPerformanceContent: examPerformanceReportContentInterface[] =\n  [\n    {\n      key: examPerformanceReportContentKeyInterface.COURSER_NAME,\n      title: \"Course names\",\n      status: true,\n    },\n    {\n      key: examPerformanceReportContentKeyInterface.COURSE_CODE,\n      title: \"Course code\",\n      status: true,\n    },\n    {\n      key: examPerformanceReportContentKeyInterface.SCHOOL_LEVEL,\n      title: \"School levels\",\n      status: true,\n    },\n    {\n      key: examPerformanceReportContentKeyInterface.PERIOD,\n      title: \"Exam period\",\n      status: true,\n    },\n    {\n      key: examPerformanceReportContentKeyInterface.DATE,\n      title: \"Exam date\",\n      status: true,\n    },\n    {\n      key: examPerformanceReportContentKeyInterface.TIME,\n      title: \"Exam time\",\n      status: true,\n    },\n    {\n      key: examPerformanceReportContentKeyInterface.DURATION,\n      title: \"Exam duration\",\n      status: true,\n    },\n    {\n      key: examPerformanceReportContentKeyInterface.PERFORMANCE,\n      title: \"Exam performance\",\n      status: true,\n    },\n  ];\n\nexport interface examPerformanceStateInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n  exam: ExamItemResponse | null;\n  exam_performance: number;\n}\n\nexport const FC_reportExamPerformanceData = (\n  allCourses: course[],\n  allExams: ExamItemResponse[],\n  examPerformance: ExamsParcentageSuccessFailedRateByPeriodInterface[]\n): examPerformanceStateInterface[] => {\n  let result: examPerformanceStateInterface[] = [],\n    ids: string[] = [];\n  for (const key in examPerformance) {\n    if (Object.prototype.hasOwnProperty.call(examPerformance, key)) {\n      if (ids.includes(examPerformance[key].answer_sheet_id)) continue;\n      ids.push(examPerformance[key].answer_sheet_id);\n      let courser = allCourses.find(\n        (item) => item.course_id === examPerformance[key].course\n      );\n      if (courser) {\n        let exam = allExams.find(\n          (item) =>\n            item.course === examPerformance[key].course &&\n            item.period === examPerformance[key].period\n        );\n        result.push({\n          course_name: courser.course_name,\n          course_code: courser.course_code,\n          description: courser.description,\n          school_levels: courser.school_levels,\n          course_id: courser.course_id,\n          exam: exam ? exam : null,\n          exam_performance: examPerformance[key].total_marks,\n        });\n      }\n    }\n  }\n  console.log(\"===============-----------------=====================\");\n  console.log({ result });\n  console.log(\"===============-----------------=====================\");\n  return result;\n};\n\nexport const searchExamPerformanceData = (\n  objList: examPerformanceStateInterface[],\n  text: string\n): examPerformanceStateInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (\n        prop === \"course_name\" ||\n        prop === \"course_code\" ||\n        prop === \"exam_performance\"\n      ) {\n        flag =\n          product[prop].toString().toLowerCase().indexOf(text.toLowerCase()) >\n          -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n};\n\ntype ExamPerformanceProps = {\n  loading: boolean;\n  examsListData: ExamItemResponse[] | null;\n  courseListData: course[] | null;\n  thisPeriod: SessionPlanInterface[];\n  examsPerformanceData:\n    | ExamsParcentageSuccessFailedRateByPeriodInterface[]\n    | null;\n};\n\nconst ExamPerformance: React.FC<ExamPerformanceProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const [isSorted, setIsSorted] = useState<boolean>(false);\n  const [sortProperty, setSortProperty] = useState<string>(\"\");\n  const [sortOrder, setSortOrder] = useState<\"ASC\" | \"DESC\">(\"ASC\");\n\n  const setSort = (thisProperty: string) => {\n    if (sortProperty === thisProperty && sortOrder === \"ASC\") {\n      setSortOrder(\"DESC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    } else {\n      setSortOrder(\"ASC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"bg-white my-4\">\n        <div className=\"w-full px-2 py-2\">\n          <input\n            onChange={(e) => setSearchInput(e.target.value)}\n            type=\"text\"\n            value={searchInput}\n            placeholder=\"Search...\"\n            className=\"w-full bg-gray-100 py-2 px-3 rounded\"\n            disabled={\n              props.courseListData &&\n              props.examsListData &&\n              props.examsPerformanceData &&\n              FC_reportExamPerformanceData(\n                props.courseListData,\n                props.examsListData,\n                props.examsPerformanceData\n              ).length <= 0\n                ? true\n                : false\n            }\n          />\n        </div>\n        <div className=\"w-full overflow-x-auto\">\n          <table className=\"w-full shadow\" id=\"report_content\">\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n              <tr>\n                <td className=\"px-2 py-2\">#</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"course_name\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Course <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">Exam date</td>\n                <td className=\"px-2 py-2\">Exam time</td>\n                <td className=\"px-2 py-2\">Exam duration</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"exam_performance\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Exam performance <BiSort />\n                  </div>\n                </td>\n              </tr>\n            </thead>\n            <tbody>\n              {props.courseListData === null || props.loading ? (\n                <tr>\n                  <td colSpan={6} className=\"px-2 py-2\">\n                    <Loading />\n                  </td>\n                </tr>\n              ) : props.examsListData &&\n                props.examsPerformanceData &&\n                FC_reportExamPerformanceData(\n                  props.courseListData,\n                  props.examsListData,\n                  props.examsPerformanceData\n                ).length <= 0 ? (\n                <tr>\n                  <td colSpan={6} className=\"px-2 py-2 text-center\">\n                    No Exam list available!\n                  </td>\n                </tr>\n              ) : (\n                props.examsListData &&\n                props.examsPerformanceData &&\n                sortThisArray(\n                  isSorted,\n                  searchExamPerformanceData(\n                    FC_reportExamPerformanceData(\n                      props.courseListData,\n                      props.examsListData,\n                      props.examsPerformanceData\n                    ),\n                    searchInput\n                  ),\n                  sortProperty,\n                  sortOrder\n                ).map((item: examPerformanceStateInterface, i) => (\n                  <tr\n                    key={i + 1}\n                    className={`bg-white text-gray-600 hover:bg-blue-100 hover:text-blue-700 border-b border-gray-300 hover:border-blue-500 text-sm`}\n                  >\n                    <td className=\"px-2 py-2\">{i + 1}</td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(item.course_name)} (\n                      <span className=\"font-semibold\">{item.course_code}</span>)\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam ? DATE(item.exam.exam_date) : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam ? item.exam.start_time : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam ? item.exam!.duration + \" min\" : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {Number(item.exam_performance.toFixed(1)) + \"%\"}\n                    </td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default React.memo(ExamPerformance);\n","import React from \"react\";\nimport DashboardLabelItem, {\n  DashboardLabelItemInterface,\n} from \"../DashboardLabelItem\";\n\ntype DashboardLabelProps = {\n  dataLabels: DashboardLabelItemInterface[];\n  labelsOnRow?: number;\n  childrenPosition?: \"START\" | \"END\";\n  children?: JSX.Element;\n};\n\nconst ExamDashboardLabels: React.FC<DashboardLabelProps> = (props) => {\n  const numCols: number = props.labelsOnRow\n    ? props.labelsOnRow > 4\n      ? props.labelsOnRow\n      : 4\n    : 4;\n  return (\n    <div\n      className={`grid 2xl:grid-cols-${numCols} xl:grid-cols-${\n        numCols - 1\n      } lg:grid-cols-${numCols - 2} md:grid-cols-${\n        numCols - 3\n      } sm:grid-cols-2 grid-cols-1 gap-4 items-center mx-auto`}\n    >\n      {props.children &&\n        ((props.childrenPosition && props.childrenPosition === \"START\") ||\n          !props.childrenPosition) &&\n        props.children}\n      {props.dataLabels.map((item, index) => (\n        <section key={index + item.title}>\n          <DashboardLabelItem\n            title={item.title}\n            icon={item.icon}\n            iconColor={item.iconColor}\n            count={item.count}\n          />\n        </section>\n      ))}\n      {props.children &&\n        props.childrenPosition &&\n        props.childrenPosition === \"END\" &&\n        props.children}\n    </div>\n  );\n};\n\nexport default React.memo(ExamDashboardLabels);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  FC_CreateDistrict,\n  FC_DeleteDistrict,\n  FC_UpdateDistrict,\n} from \"../../actions/location\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport {\n  DistrictInterface,\n  RoomLocationInterface,\n} from \"../../shared/interfaces\";\nimport { PushPopupAlert } from \"../../actions/system\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { errorToText } from \"../../utils/errors\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\n\ninterface AppProps {\n  thisProvince: RoomLocationInterface;\n  thisDistrict: DistrictInterface | null;\n  loadingRequest: boolean;\n  actionTypes:\n    | \"CREATE_PROVINCE\"\n    | \"UPDATE_PROVINCE\"\n    | \"CREATE_DISTRICT\"\n    | \"UPDATE_DISTRICT\"\n    | \"CREATE_SECTOR\"\n    | \"UPDATE_SECTOR\"\n    | null;\n  setLoadingRequest: React.Dispatch<React.SetStateAction<boolean>>;\n  setThisDistrict: React.Dispatch<\n    React.SetStateAction<DistrictInterface | null>\n  >;\n  setActionTypes: React.Dispatch<\n    React.SetStateAction<\n      | \"CREATE_PROVINCE\"\n      | \"UPDATE_PROVINCE\"\n      | \"CREATE_DISTRICT\"\n      | \"UPDATE_DISTRICT\"\n      | \"CREATE_SECTOR\"\n      | \"UPDATE_SECTOR\"\n      | null\n    >\n  >;\n  FC_CreateDistrict: Function;\n  FC_UpdateDistrict: Function;\n  FC_DeleteDistrict: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\nconst ViewDistrict: React.FC<AppProps> = (props) => {\n  const [districtName, setDistrictName] = useState<string>(\"\");\n  const [districtCode, setDistrictCode] = useState<number>(0);\n  const [error, setError] = useState<{ element: string; msg: string } | null>(\n    null\n  );\n\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(districtName)) {\n      return setError({\n        element: \"district_name\",\n        msg: \"District name is required\",\n      });\n    }\n\n    if (districtCode <= 0) {\n      return setError({\n        element: \"district_code\",\n        msg: \"Invalid district code, code must be greater than 0\",\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      let res;\n      if (props.actionTypes === \"CREATE_DISTRICT\") {\n        res = await axios.post<{ data: DistrictInterface }>(\n          `${API.APPLICATION}/district`,\n          {\n            province_id: props.thisProvince._id,\n            province_code: props.thisProvince.province_code,\n            district_name: districtName,\n            district_code: districtCode,\n            centers: [],\n          }\n        );\n        if (res.data) {\n          console.log({\n            province_id: props.thisProvince._id,\n            data: res.data.data,\n            res,\n          });\n          props.FC_CreateDistrict({\n            province_id: props.thisProvince._id,\n            data: {\n              centers: res.data.data.centers,\n              sectors: res.data.data.sectors,\n              province_code: res.data.data.province_code,\n              province_id: res.data.data.province_id,\n              district_code: res.data.data.district_code,\n              district_name: res.data.data.district_name,\n              district_id: res.data.data._id,\n            },\n          });\n          props.PushPopupAlert({\n            title: \"New district created successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setDistrictName(\"\");\n          setDistrictCode(0);\n        }\n      } else if (\n        props.thisDistrict &&\n        props.actionTypes === \"UPDATE_DISTRICT\"\n      ) {\n        const centers: string[] = props.thisDistrict.centers.map(\n          (center) => center._id\n        );\n        res = await axios.patch<{ data: DistrictInterface }>(\n          `${API.APPLICATION}/district`,\n          {\n            district_id: props.thisDistrict._id,\n            province_code: props.thisProvince.province_code,\n            district_name: districtName,\n            district_code: districtCode,\n            centers,\n          }\n        );\n        if (res.data) {\n          props.FC_UpdateDistrict({\n            province_id: props.thisProvince._id,\n            district_id: props.thisDistrict._id,\n            district_name: districtName,\n          });\n          props.PushPopupAlert({\n            title: \"District updated successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setDistrictName(\"\");\n          props.setThisDistrict(null);\n        }\n      }\n    } catch (error) {\n      console.log({ doc_category_error: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      props.setLoadingRequest(false);\n    }\n  };\n\n  // const handleDelete = async (districtId: string) => {\n  //   try {\n  //     const res = await axios.delete<DistrictInterface>(\n  //       `${API.APPLICATION}/district/${districtId}`\n  //     );\n\n  //     if (res.data) {\n  //       props.FC_DeleteDistrict({\n  //         province_id: props.thisProvince._id,\n  //         district_id: districtId,\n  //       });\n  //       props.PushPopupAlert({\n  //         title: \"District deleted successfully\",\n  //         theme: PopupAlertTheme.success,\n  //       });\n  //       props.setLoadingRequest(false);\n  //       props.setActionTypes(null);\n  //     }\n  //   } catch (error) {\n  //     console.log({ district_error: error });\n  //     props.PushPopupAlert({\n  //       title: errorToText(error),\n  //       theme: PopupAlertTheme.danger,\n  //     });\n  //     props.setLoadingRequest(false);\n  //   }\n  // };\n\n  return (\n    <div className={`w-full p-2`}>\n      {props.thisProvince.districts.length > 0 ? (\n        <div className=\"rounded border border-gray-100 shadow-sm animate__animated animate__fadeIn\">\n          <table className=\"w-full z-0\">\n            <thead className=\"bg-gray-50\">\n              <tr className=\"text-left\">\n                <th className=\"px-3 py-3\">#</th>\n                <th>District name</th>\n                <th>District code</th>\n                <th>Sectors</th>\n                {/* <th>Status</th> */}\n              </tr>\n            </thead>\n            <tbody className=\"text-base\">\n              {props.thisProvince.districts.map((district, index) => (\n                <tr\n                  key={index + district._id}\n                  className={`text-left border-b border-gray-50`}\n                >\n                  <td className=\"px-3 py-1\">{index + 1}</td>\n                  <td>{district.district_name}</td>\n                  <td>{district.district_code}</td>\n                  <td>\n                    {district.sectors && district.sectors.length > 0\n                      ? district.sectors.length + \" Sector(s)\"\n                      : \"\"}\n                  </td>\n                  {/* <td>\n                    <div className=\"flex items-center gap-2\">\n                      <button\n                        title={\n                          props.thisDistrict &&\n                          props.thisDistrict._id === district._id\n                            ? \"Close Centers\"\n                            : \"View Centers\"\n                        }\n                        className={`${\n                          props.thisDistrict &&\n                          props.thisDistrict._id === district._id\n                            ? \"bg-gray-500 hover:bg-gray-600\"\n                            : \"bg-gray-400 hover:bg-gray-500\"\n                        } p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none`}\n                        onClick={() =>\n                          !props.thisDistrict ||\n                          props.thisDistrict._id !== district._id\n                            ? props.setThisDistrict(district)\n                            : props.setThisDistrict(null)\n                        }\n                      >\n                        {props.thisDistrict &&\n                        props.thisDistrict._id === district._id ? (\n                          <IoMdEyeOff className=\"text-white w-4 h-4\" />\n                        ) : (\n                          <IoMdEye className=\"text-white w-4 h-4\" />\n                        )}\n                      </button>\n                      <button\n                        title=\"Update district\"\n                        className=\"bg-blue-500 hover:bg-blue-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                        onClick={() => {\n                          props.setThisDistrict(district);\n                          setDistrictName(district.district_name);\n                          setDistrictCode(district.district_code);\n                          props.setActionTypes(\"UPDATE_DISTRICT\");\n                        }}\n                        disabled={\n                          props.loadingRequest || props.actionTypes !== null\n                        }\n                      >\n                        <MdCreate className=\"text-white w-4 h-4\" />\n                      </button>\n                      <button\n                        title=\"Delete Sub-Category\"\n                        className=\"bg-red-500 hover:bg-red-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                        onClick={() => handleDelete(district._id)}\n                        disabled={props.loadingRequest}\n                      >\n                        <MdClear className=\"text-white w-4 h-4\" />\n                      </button>\n                    </div>\n                  </td> */}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        <NoResult\n          theme={NoResultThemes.Dark}\n          value={\"No district found!\"}\n          component={\n            <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n              <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                <li\n                  onClick={() => props.setActionTypes(\"CREATE_DISTRICT\")}\n                  className=\"underline text-gray-500 cursor-pointer\"\n                >\n                  Add district\n                </li>\n              </ul>\n            </div>\n          }\n        />\n      )}\n\n      {/* modal for creating new categories or sub category */}\n      {props.actionTypes &&\n        (props.actionTypes === \"CREATE_DISTRICT\" ||\n          props.actionTypes === \"UPDATE_DISTRICT\") && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={(): void => {\n              props.setActionTypes(null);\n              setDistrictName(\"\");\n              setDistrictCode(10);\n              setError(null);\n            }}\n            displayClose={false}\n            backDropClose={false}\n            title={\n              <div className=\"flex items-center space-x-5\">\n                <div className=\"block pl-2 font-semibold text-xl self-start text-gray-700\">\n                  {/* <p className=\"text-base text-gray-500 font-medium\">\n                    You are{\" \"}\n                    {actionType === \"CREATE_SUB\" || \"CREATE_CAT\"\n                      ? \"creating\"\n                      : \"updating\"}\n                  </p> */}\n                  <h2 className=\"uppercase text-back\">\n                    {props.actionTypes === \"CREATE_DISTRICT\"\n                      ? \"CREATING NEW DISTRICT\"\n                      : props.actionTypes === \"UPDATE_DISTRICT\" &&\n                        \"UPDATING EXISTING DISTRICT\"}\n                  </h2>\n                </div>\n              </div>\n            }\n            widthSizeClass={ModalSize.medium}\n            padding={{ title: true, body: false, footer: false }}\n          >\n            <div className=\"mx-5 mb-4\">\n              <div className=\"py-2 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n                <div className=\"flex flex-col\">\n                  <label>District name</label>\n                  <input\n                    type=\"text\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"district_name\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"district_name\" &&\n                        setError(null);\n                      setDistrictName(e.target.value);\n                    }}\n                    value={districtName}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"district_name\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n                <div className=\"flex flex-col\">\n                  <label>District code</label>\n                  <input\n                    type=\"number\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"district_code\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"district_code\" &&\n                        setError(null);\n                      setDistrictCode(Number(e.target.value));\n                    }}\n                    value={districtCode}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"district_code\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n              </div>\n              <div className=\"pt-4 flex justify-between\">\n                <button\n                  onClick={() => {\n                    props.setActionTypes(null);\n                    setDistrictName(\"\");\n                    setDistrictCode(10);\n                    setError(null);\n                  }}\n                  className={`btn bg-gray-400 text-white hover:bg-gray-600`}\n                  type=\"button\"\n                  disabled={props.loadingRequest}\n                >\n                  Exit\n                </button>\n                <button\n                  className=\"btn bg-primary text-white hover:bg-blue-600\"\n                  type=\"button\"\n                  onClick={() => handleSubmit()}\n                  disabled={props.loadingRequest}\n                >\n                  {props.loadingRequest ? \"Loading...\" : \"Save\"}\n                </button>\n              </div>\n            </div>\n          </Modal>\n        )}\n      {/* end modal for creating new categories or sub category */}\n    </div>\n  );\n};\n\nexport default React.memo(connect(null, {\n  FC_CreateDistrict,\n  FC_UpdateDistrict,\n  FC_DeleteDistrict,\n  PushPopupAlert,\n})(ViewDistrict));\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { IoMdEye, IoMdEyeOff } from \"react-icons/io\";\nimport {\n  FC_CreateProvince,\n  FC_DeleteProvince,\n  FC_UpdateProvince,\n} from \"../../actions/location\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport {\n  DistrictInterface,\n  RoomLocationInterface,\n} from \"../../shared/interfaces\";\nimport { PushPopupAlert } from \"../../actions/system\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { errorToText } from \"../../utils/errors\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\n\ninterface AppProps {\n  thisProvince: RoomLocationInterface | null;\n  thisDistrict: DistrictInterface | null;\n  loadingRequest: boolean;\n  locations: RoomLocationInterface[];\n  actionTypes:\n    | \"CREATE_PROVINCE\"\n    | \"UPDATE_PROVINCE\"\n    | \"CREATE_DISTRICT\"\n    | \"UPDATE_DISTRICT\"\n    | \"CREATE_SECTOR\"\n    | \"UPDATE_SECTOR\"\n    | null;\n  setLoadingRequest: React.Dispatch<React.SetStateAction<boolean>>;\n  setThisProvince: React.Dispatch<\n    React.SetStateAction<RoomLocationInterface | null>\n  >;\n  setActionTypes: React.Dispatch<\n    React.SetStateAction<\n      | \"CREATE_PROVINCE\"\n      | \"UPDATE_PROVINCE\"\n      | \"CREATE_DISTRICT\"\n      | \"UPDATE_DISTRICT\"\n      | \"CREATE_SECTOR\"\n      | \"UPDATE_SECTOR\"\n      | null\n    >\n  >;\n  FC_CreateProvince: Function;\n  FC_UpdateProvince: Function;\n  FC_DeleteProvince: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\nconst ViewProvince: React.FC<AppProps> = (props) => {\n  const [provinceTitle, setProvinceTitle] = useState<string>(\"\");\n  const [provinceCode, setProvinceCode] = useState<number>(0);\n  const [error, setError] = useState<{ element: string; msg: string } | null>(\n    null\n  );\n\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(provinceTitle)) {\n      return setError({\n        element: \"province_title\",\n        msg: \"Title of Province is required\",\n      });\n    }\n\n    if (provinceCode <= 0) {\n      return setError({\n        element: \"province_code\",\n        msg: \"Code of Province is required\",\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      let res;\n      if (props.actionTypes === \"CREATE_PROVINCE\") {\n        res = await axios.post<{ data: RoomLocationInterface }>(\n          `${API.APPLICATION}/province`,\n          {\n            province_name: provinceTitle,\n            province_code: provinceCode,\n            districts: [],\n          }\n        );\n\n        if (res.data) {\n          props.FC_CreateProvince(res.data.data);\n          props.PushPopupAlert({\n            title: \"New Province created successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setProvinceTitle(\"\");\n        }\n      } else if (\n        props.thisProvince &&\n        props.actionTypes === \"UPDATE_PROVINCE\"\n      ) {\n        const districts: string[] = props.thisProvince.districts.map(\n          (district) => district._id\n        );\n        res = await axios.patch<{ updated: RoomLocationInterface }>(\n          `${API.APPLICATION}/province`,\n          {\n            province_id: props.thisProvince._id,\n            province_name: provinceTitle,\n            province_code: provinceCode,\n            districts,\n          }\n        );\n        if (res.data) {\n          console.log({ res: res.data.updated });\n          props.FC_UpdateProvince(res.data.updated);\n          props.PushPopupAlert({\n            title: \"Province updated successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setProvinceTitle(\"\");\n          props.setThisProvince(null);\n        }\n      }\n    } catch (error) {\n      console.error({ province_error: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      props.setLoadingRequest(false);\n    }\n  };\n\n  // const handleDelete = async (provinceId: string) => {\n  //   try {\n  //     const res = await axios.delete<RoomLocationInterface>(\n  //       `${API.APPLICATION}/province/${provinceId}`\n  //     );\n\n  //     if (res.data) {\n  //       console.log({ res });\n  //       props.FC_DeleteProvince(provinceId);\n  //       props.PushPopupAlert({\n  //         title: \"Province deleted successfully\",\n  //         theme: PopupAlertTheme.success,\n  //       });\n  //       props.setLoadingRequest(false);\n  //       props.setActionTypes(null);\n  //     }\n  //   } catch (error) {\n  //     console.log({ province_error: error });\n  //     props.PushPopupAlert({\n  //       title: errorToText(error),\n  //       theme: PopupAlertTheme.danger,\n  //     });\n  //     props.setLoadingRequest(false);\n  //   }\n  // };\n\n  return (\n    <div className={`w-full p-2`}>\n      {props.locations.length > 0 ? (\n        props.locations.map((province, index) => (\n          <div\n            key={index + province._id}\n            className=\"flex justify-between items-center p-2 mb-3 rounded border border-gray-100 shadow\"\n          >\n            <div className=\"flex items-center\">\n              <div className=\"ml-2\">\n                <div className=\"text-xl font-semibold text-gray-600\">\n                  {province.province_name}\n                </div>\n                <div className=\"text-sm font-light text-gray-500\">\n                  {province.districts.length > 0\n                    ? province.districts.length + \"District(s)\"\n                    : null}\n                </div>\n              </div>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <button\n                title={\n                  props.thisProvince &&\n                  props.thisProvince._id === province._id &&\n                  props.actionTypes !== \"UPDATE_PROVINCE\"\n                    ? \"Close Districts\"\n                    : \"View Districts\"\n                }\n                className={`${\n                  props.thisProvince &&\n                  props.thisProvince._id === province._id &&\n                  props.actionTypes !== \"UPDATE_PROVINCE\"\n                    ? \"bg-gray-500 hover:bg-gray-600\"\n                    : \"bg-gray-400 hover:bg-gray-500\"\n                } p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none`}\n                onClick={() => {\n                  !props.thisProvince || props.thisProvince._id !== province._id\n                    ? props.setThisProvince(province)\n                    : props.setThisProvince(null);\n                  setProvinceTitle(\"\");\n                  props.setActionTypes(null);\n                }}\n              >\n                {props.thisProvince &&\n                props.thisProvince._id === province._id &&\n                props.actionTypes !== \"UPDATE_PROVINCE\" ? (\n                  <IoMdEyeOff className=\"text-white w-4 h-4\" />\n                ) : (\n                  <IoMdEye className=\"text-white w-4 h-4\" />\n                )}\n              </button>\n              {/* <button\n                title=\"Update Province\"\n                className=\"bg-blue-500 hover:bg-blue-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                onClick={() => {\n                  props.setThisProvince(province);\n                  setProvinceTitle(province.province_name);\n                  setProvinceCode(province.province_code);\n                  props.setActionTypes(\"UPDATE_PROVINCE\");\n                }}\n                disabled={props.loadingRequest || props.actionTypes !== null}\n              >\n                <MdCreate className=\"text-white w-4 h-4\" />\n              </button>\n              <button\n                title=\"Delete Sub-Category\"\n                className=\"bg-red-500 hover:bg-red-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                onClick={() => handleDelete(province._id)}\n                disabled={props.loadingRequest || props.actionTypes !== null}\n              >\n                <MdClear className=\"text-white w-4 h-4\" />\n              </button> */}\n            </div>\n          </div>\n        ))\n      ) : (\n        <NoResult\n          theme={NoResultThemes.Dark}\n          value=\"No province found!\"\n          component={\n            <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n              <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                <li\n                  onClick={() => props.setActionTypes(\"CREATE_PROVINCE\")}\n                  className=\"underline text-gray-500 cursor-pointer\"\n                >\n                  Add province\n                </li>\n              </ul>\n            </div>\n          }\n        />\n      )}\n\n      {/* modal for creating new categories or sub category */}\n      {props.actionTypes &&\n        (props.actionTypes === \"CREATE_PROVINCE\" ||\n          props.actionTypes === \"UPDATE_PROVINCE\") && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={(): void => {\n              props.setActionTypes(null);\n              setProvinceTitle(\"\");\n              setProvinceCode(0);\n              setError(null);\n            }}\n            displayClose={false}\n            backDropClose={false}\n            title={\n              <div className=\"flex items-center space-x-5\">\n                <div className=\"block pl-2 font-semibold text-xl self-start text-gray-700\">\n                  <h2 className=\"uppercase text-back\">\n                    {props.actionTypes === \"CREATE_PROVINCE\"\n                      ? \"CREATING NEW PROVINCE\"\n                      : props.actionTypes === \"UPDATE_PROVINCE\" &&\n                        \"UPDATING EXISTING PROVINCE\"}\n                  </h2>\n                </div>\n              </div>\n            }\n            widthSizeClass={ModalSize.medium}\n            padding={{ title: true, body: false, footer: false }}\n          >\n            <div className=\"mx-5 mb-4\">\n              <div className=\"py-2 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n                <div className=\"flex flex-col\">\n                  <label>Province name</label>\n                  <input\n                    type=\"text\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"province_title\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"province_title\" &&\n                        setError(null);\n                      setProvinceTitle(e.target.value);\n                    }}\n                    value={provinceTitle}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"province_title\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n                <div className=\"flex flex-col\">\n                  <label>Province code</label>\n                  <input\n                    type=\"number\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"province_code\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"province_code\" &&\n                        setError(null);\n                      setProvinceCode(Number(e.target.value));\n                    }}\n                    value={provinceCode}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"province_code\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n              </div>\n              <div className=\"pt-4 flex justify-between\">\n                <button\n                  onClick={() => {\n                    props.setActionTypes(null);\n                    setProvinceTitle(\"\");\n                    setProvinceCode(0);\n                    setError(null);\n                  }}\n                  className={`btn bg-gray-400 text-white hover:bg-gray-600`}\n                  type=\"button\"\n                  disabled={props.loadingRequest}\n                >\n                  Exit\n                </button>\n                <button\n                  className=\"btn bg-primary text-white hover:bg-blue-600\"\n                  type=\"button\"\n                  onClick={() => handleSubmit()}\n                  disabled={props.loadingRequest}\n                >\n                  {props.loadingRequest ? \"Loading...\" : \"Save\"}\n                </button>\n              </div>\n            </div>\n          </Modal>\n        )}\n      {/* end modal for creating new categories or sub category */}\n    </div>\n  );\n};\n\nexport default React.memo(\n  connect(null, {\n    FC_CreateProvince,\n    FC_UpdateProvince,\n    FC_DeleteProvince,\n    PushPopupAlert,\n  })(ViewProvince)\n);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { MdClear, MdCreate } from \"react-icons/md\";\nimport {\n  FC_CreateSector,\n  FC_DeleteSector,\n  FC_UpdateSector,\n} from \"../../actions/location\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport { DistrictInterface, SectorInterface } from \"../../shared/interfaces\";\nimport { PushPopupAlert } from \"../../actions/system\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { errorToText } from \"../../utils/errors\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\n\ninterface AppProps {\n  thisDistrict: DistrictInterface;\n  thisSector: SectorInterface | null;\n  loadingRequest: boolean;\n  actionTypes:\n    | \"CREATE_PROVINCE\"\n    | \"UPDATE_PROVINCE\"\n    | \"CREATE_DISTRICT\"\n    | \"UPDATE_DISTRICT\"\n    | \"CREATE_SECTOR\"\n    | \"UPDATE_SECTOR\"\n    | null;\n  setLoadingRequest: React.Dispatch<React.SetStateAction<boolean>>;\n  setThisSector: React.Dispatch<React.SetStateAction<SectorInterface | null>>;\n  setActionTypes: React.Dispatch<\n    React.SetStateAction<\n      | \"CREATE_PROVINCE\"\n      | \"UPDATE_PROVINCE\"\n      | \"CREATE_DISTRICT\"\n      | \"UPDATE_DISTRICT\"\n      | \"CREATE_SECTOR\"\n      | \"UPDATE_SECTOR\"\n      | null\n    >\n  >;\n  FC_CreateSector: Function;\n  FC_UpdateSector: Function;\n  FC_DeleteSector: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\nconst ViewSectors: React.FC<AppProps> = (props) => {\n  const [sectorName, setSectorName] = useState<string>(\"\");\n  const [sectorCode, setSectorCode] = useState<number>(0);\n  const [error, setError] = useState<{ element: string; msg: string } | null>(\n    null\n  );\n\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(sectorName)) {\n      return setError({\n        element: \"sector_name\",\n        msg: \"Sector name is required\",\n      });\n    }\n\n    if (sectorCode <= 0) {\n      return setError({\n        element: \"sector_code\",\n        msg: \"Invalid sector code, must be \",\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      let res;\n      if (props.actionTypes === \"CREATE_SECTOR\") {\n        res = await axios.post<{ data: SectorInterface }>(\n          `${API.APPLICATION}/sector`,\n          {\n            district_id: props.thisDistrict._id,\n            district_code: props.thisDistrict.district_code,\n            sector_name: sectorName,\n            sector_code: sectorCode,\n          }\n        );\n        if (res.data) {\n          console.log({\n            district_id: props.thisDistrict._id,\n            data: res.data.data,\n            res,\n          });\n          props.FC_CreateSector({\n            province_id: props.thisDistrict.province_id,\n            district_id: props.thisDistrict._id,\n            data: {\n              district_id: res.data.data.district_id,\n              district_code: res.data.data.district_code,\n              sector_name: res.data.data.sector_name,\n              sector_code: res.data.data.sector_code,\n              sector_id: res.data.data.sector_id,\n            },\n          });\n          props.PushPopupAlert({\n            title: \"New sector created successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setSectorName(\"\");\n        }\n      } else if (props.thisSector && props.actionTypes === \"UPDATE_SECTOR\") {\n        res = await axios.patch<{ data: DistrictInterface }>(\n          `${API.APPLICATION}/sector`,\n          {\n            district_id: props.thisSector.district_id,\n            district_code: props.thisDistrict.district_code,\n            sector_id: props.thisSector.sector_id,\n            sector_name: sectorName,\n            sector_code: sectorCode,\n          }\n        );\n        if (res.data) {\n          props.FC_UpdateSector({\n            province_id: props.thisDistrict.province_id,\n            district_id: props.thisSector.district_id,\n            sector_id: props.thisSector.sector_id,\n            sector_name: sectorName,\n            sector_code: sectorCode,\n          });\n          props.PushPopupAlert({\n            title: \"Sector updated successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setSectorName(\"\");\n          props.setThisSector(null);\n        }\n      }\n    } catch (error) {\n      console.log({ sector_error: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      props.setLoadingRequest(false);\n    }\n  };\n\n  const handleDelete = async (sectorId: string) => {\n    try {\n      const res = await axios.delete<SectorInterface>(\n        `${API.APPLICATION}/sector/${sectorId}`\n      );\n\n      if (res.data) {\n        props.FC_DeleteSector({\n          province_id: props.thisDistrict.province_id,\n          district_id: props.thisDistrict._id,\n          sector_id: sectorId,\n        });\n        props.PushPopupAlert({\n          title: \"Sector deleted successfully\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setLoadingRequest(false);\n        props.setActionTypes(null);\n      }\n    } catch (error) {\n      console.log({ district_error: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      props.setLoadingRequest(false);\n    }\n  };\n\n  return (\n    <div className={`w-full p-2`}>\n      {props.thisDistrict.sectors && props.thisDistrict.sectors.length > 0 ? (\n        <div className=\"rounded border border-gray-100 shadow-sm animate__animated animate__fadeIn\">\n          <table className=\"w-full z-0\">\n            <thead className=\"bg-gray-50\">\n              <tr className=\"text-left\">\n                <th className=\"px-3 py-3\">#</th>\n                <th>Sector name</th>\n                <th>Sector code</th>\n                <th>Status</th>\n              </tr>\n            </thead>\n            <tbody className=\"text-sm\">\n              {props.thisDistrict.sectors.map((sector, index) => (\n                <tr\n                  key={index + sector.district_id}\n                  className={`text-left border-b border-gray-50`}\n                >\n                  <td className=\"px-3 py-1\">{index + 1}</td>\n                  <td>{sector.sector_name}</td>\n                  <td>{sector.sector_name}</td>\n                  <td>\n                    <div className=\"flex items-center gap-2\">\n                      <button\n                        title=\"Update sector\"\n                        className=\"bg-blue-500 hover:bg-blue-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                        onClick={() => {\n                          props.setThisSector(sector);\n                          setSectorName(sector.sector_name);\n                          setSectorCode(sector.sector_code);\n                          props.setActionTypes(\"UPDATE_SECTOR\");\n                        }}\n                        disabled={\n                          props.loadingRequest || props.actionTypes !== null\n                        }\n                      >\n                        <MdCreate className=\"text-white w-4 h-4\" />\n                      </button>\n                      <button\n                        title=\"Delete sector\"\n                        className=\"bg-red-500 hover:bg-red-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                        onClick={() => handleDelete(sector.sector_id)}\n                        disabled={props.loadingRequest}\n                      >\n                        <MdClear className=\"text-white w-4 h-4\" />\n                      </button>\n                    </div>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        <NoResult\n          theme={NoResultThemes.Dark}\n          value={\"No sector found!\"}\n          component={\n            <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n              <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                <li\n                  onClick={() => props.setActionTypes(\"CREATE_SECTOR\")}\n                  className=\"underline text-gray-500 cursor-pointer\"\n                >\n                  Add sector\n                </li>\n              </ul>\n            </div>\n          }\n        />\n      )}\n\n      {/* modal for creating new categories or sub category */}\n      {props.actionTypes &&\n        (props.actionTypes === \"CREATE_SECTOR\" ||\n          props.actionTypes === \"UPDATE_SECTOR\") && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={(): void => {\n              props.setActionTypes(null);\n              setSectorName(\"\");\n              setSectorCode(0);\n              setError(null);\n            }}\n            displayClose={false}\n            backDropClose={false}\n            title={\n              <div className=\"flex items-center space-x-5\">\n                <div className=\"block pl-2 font-semibold text-xl self-start text-gray-700\">\n                  {/* <p className=\"text-base text-gray-500 font-medium\">\n                    You are{\" \"}\n                    {actionType === \"CREATE_SUB\" || \"CREATE_CAT\"\n                      ? \"creating\"\n                      : \"updating\"}\n                  </p> */}\n                  <h2 className=\"uppercase text-back\">\n                    {props.actionTypes === \"CREATE_SECTOR\"\n                      ? \"CREATING NEW SECTOR\"\n                      : props.actionTypes === \"UPDATE_SECTOR\" &&\n                        \"UPDATING EXISTING SECTOR\"}\n                  </h2>\n                </div>\n              </div>\n            }\n            widthSizeClass={ModalSize.medium}\n            padding={{ title: true, body: false, footer: false }}\n          >\n            <div className=\"w-full px-5 mb-5\">\n              <div className=\"py-3 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n                <div className=\"flex flex-col\">\n                  <label>Sector name</label>\n                  <input\n                    type=\"text\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"sector_name\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"sector_name\" &&\n                        setError(null);\n                      setSectorName(e.target.value);\n                    }}\n                    value={sectorName}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"sector_name\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n                <div className=\"flex flex-col\">\n                  <label>Sector code</label>\n                  <input\n                    type=\"number\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"sector_code\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"sector_code\" &&\n                        setError(null);\n                      setSectorCode(Number(e.target.value));\n                    }}\n                    value={sectorCode}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"sector_code\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n              </div>\n              <div className=\"pt-4 flex justify-between\">\n                <button\n                  onClick={() => {\n                    props.setActionTypes(null);\n                    setSectorName(\"\");\n                    setSectorCode(0);\n                    setError(null);\n                  }}\n                  className={`btn bg-gray-400 text-white hover:bg-gray-600`}\n                  type=\"button\"\n                  disabled={props.loadingRequest}\n                >\n                  Exit\n                </button>\n                <button\n                  className=\"btn bg-primary text-white hover:bg-blue-600\"\n                  type=\"button\"\n                  onClick={() => handleSubmit()}\n                  disabled={props.loadingRequest}\n                >\n                  {props.loadingRequest ? \"Loading...\" : \"Save\"}\n                </button>\n              </div>\n            </div>\n          </Modal>\n        )}\n      {/* end modal for creating new categories or sub category */}\n    </div>\n  );\n};\n\nexport default React.memo(\n  connect(null, {\n    FC_CreateSector,\n    FC_UpdateSector,\n    FC_DeleteSector,\n    PushPopupAlert,\n  })(ViewSectors)\n);\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { AiOutlineFilter } from \"react-icons/ai\";\nimport { BsCaretRightFill } from \"react-icons/bs\";\nimport { connect } from \"react-redux\";\nimport { getAllRoom } from \"../../actions/location\";\nimport { StoreState } from \"../../reducers\";\nimport {\n  DistrictInterface,\n  LocationRoomTableInterface,\n  RoomLocationInterface,\n  SectorInterface,\n} from \"../../shared/interfaces\";\nimport { LocationsInArray } from \"../UserManagement/UserList\";\nimport ViewDistricts from \"./ViewDistricts\";\nimport ViewProvince from \"./ViewProvince\";\nimport ViewSectors from \"./ViewSectors\";\n\nexport const distinctDistrict = (\n  rooms: RoomLocationInterface[],\n  province_id?: string\n): LocationRoomTableInterface[] => {\n  let ids: string[] = [],\n    result: LocationRoomTableInterface[] = [];\n\n  LocationsInArray(rooms).forEach((element) => {\n    if (!ids.includes(element.district_id)) {\n      if (province_id && element.province_id === province_id) {\n        ids.push(element.district_id);\n        result.push(element);\n      } else if (province_id === undefined) {\n        ids.push(element.district_id);\n        result.push(element);\n      }\n    }\n  });\n\n  return result;\n};\n\nexport const distinctCenter = (\n  rooms: RoomLocationInterface[],\n  district_id: string\n): LocationRoomTableInterface[] => {\n  let ids: string[] = [],\n    result: LocationRoomTableInterface[] = [];\n\n  LocationsInArray(rooms).forEach((element) => {\n    if (\n      !ids.includes(element.center_id) &&\n      element.district_id === district_id\n    ) {\n      ids.push(element.center_id);\n      result.push(element);\n    }\n  });\n  return result;\n};\n\nexport const distinctRoom = (\n  rooms: RoomLocationInterface[],\n  center_id: string\n): LocationRoomTableInterface[] => {\n  let ids: string[] = [],\n    result: LocationRoomTableInterface[] = [];\n\n  LocationsInArray(rooms).forEach((element) => {\n    if (!ids.includes(element.room_id) && element.center_id === center_id) {\n      ids.push(element.room_id);\n      result.push(element);\n    }\n  });\n  return result;\n};\n\ninterface AppProps {\n  locations: RoomLocationInterface[];\n  getAllRoom: Function;\n}\n\nconst _Locations: React.FC<AppProps> = (props) => {\n  const [actionTypes, setActionTypes] = useState<\n    | \"CREATE_PROVINCE\"\n    | \"UPDATE_PROVINCE\"\n    | \"CREATE_DISTRICT\"\n    | \"UPDATE_DISTRICT\"\n    | \"CREATE_SECTOR\"\n    | \"UPDATE_SECTOR\"\n    | null\n  >(null);\n  const [thisProvince, setThisProvince] =\n    useState<RoomLocationInterface | null>(null);\n  const [thisDistrict, setThisDistrict] = useState<DistrictInterface | null>(\n    null\n  );\n  const [thisSector, setThisSector] = useState<SectorInterface | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (!props.locations.length && loading) {\n      props.getAllRoom((status: boolean, msg: string) => {\n        setLoading(status);\n        if (!status && msg.length > 0) {\n          console.log(msg);\n        }\n      });\n    } else if (loading) {\n      setLoading(false);\n    }\n  }, [loading, props]);\n\n  if (loading === true) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading locations...\n      </div>\n    );\n  }\n\n  const displayTitle = () => {\n    if (\n      (!thisSector ||\n        (thisSector &&\n          (actionTypes === \"CREATE_SECTOR\" ||\n            actionTypes === \"UPDATE_SECTOR\"))) &&\n      thisDistrict &&\n      actionTypes !== \"CREATE_DISTRICT\" &&\n      actionTypes !== \"UPDATE_DISTRICT\"\n    ) {\n      return (\n        <div className=\"flex items-center gap-1\">\n          <span\n            className=\"cursor-pointer uppercase text-xl font-semibold text-gray-800\"\n            onClick={() => {\n              setThisProvince(null);\n            }}\n          >\n            province\n          </span>\n          <span>/</span>\n          <span\n            className=\"cursor-pointer uppercase text-xl font-semibold text-gray-800\"\n            onClick={() => {\n              setThisDistrict(null);\n            }}\n          >\n            district\n          </span>\n          <span>/</span>\n          <span className=\"text-xl text-gray-800\">\n            {thisDistrict.district_name}\n          </span>\n        </div>\n      );\n    } else if (\n      (!thisDistrict ||\n        (thisDistrict &&\n          (actionTypes === \"CREATE_DISTRICT\" ||\n            actionTypes === \"UPDATE_DISTRICT\"))) &&\n      thisProvince\n    ) {\n      return (\n        <div className=\"flex items-center gap-2\">\n          <span\n            className=\"cursor-pointer uppercase text-xl font-semibold text-gray-800\"\n            onClick={() => {\n              setThisProvince(null);\n            }}\n          >\n            province\n          </span>\n          <span>/</span>\n          <span className=\"text-xl text-gray-800\">\n            {thisProvince.province_name}\n          </span>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"flex items-center gap-1\">\n        <span className=\"uppercase text-xl font-semibold text-gray-800\">\n          province\n        </span>\n        <span>/</span>\n      </div>\n    );\n  };\n\n  return (\n    <Fragment>\n      <div className=\"w-full my-5\">\n        {/* header title */}\n        <div className=\"flex justify-between p-2 gap-1\">\n          <div className=\"flex flex-col\">\n            <span className=\"text-blue-600 text-2xl md:text-2xl lg:text-3xl font-bold\">\n              Locations Management\n            </span>\n\n            <div className=\"flex flex-row items-center md:gap-3 gap-2 mt-1\">\n              <AiOutlineFilter className=\"text-xl\" />\n              <div className=\"flex flex-row items-center gap-1\">\n                {thisProvince && (\n                  <span className=\"text-gray-700 text-base font-bold\">\n                    {thisProvince.province_name}\n                  </span>\n                )}\n                {thisDistrict && (\n                  <div className=\"flex flex-row items-center gap-1\">\n                    <BsCaretRightFill />\n                    <span className=\"text-blue-600 text-base font-bold underline\">\n                      {thisDistrict.district_name} district\n                    </span>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n        {/* end header title */}\n\n        <div className=\"w-full bg-white\">\n          <div className=\"border-b px-2 py-3 flex justify-between\">\n            {displayTitle()}\n\n            {/* CREATE NEW PROVINCE =====================================*/}\n            {/* {(!thisProvince ||\n              (thisProvince &&\n                (actionTypes === \"CREATE_PROVINCE\" ||\n                  actionTypes === \"UPDATE_PROVINCE\"))) && (\n              <button\n                type=\"button\"\n                className={`btn hover:bg-blue-500 mb-1 border-2 border-blue-500 bg-white\n        hover:text-white rounded-md flex items-center font-bold text-gray-700 focus:outline-none gap-1 ${\n          loadingRequest && \"cursor-wait\"\n        } ${actionTypes !== null && \"cursor-not-allowed\"}`}\n                onClick={() => setActionTypes(\"CREATE_PROVINCE\")}\n                disabled={actionTypes !== null || loadingRequest}\n              >\n                <MdAdd className=\"inline-block mr-1 text-xl font-bold\" />\n                New Province\n              </button>\n            )} */}\n            {/* CREATE NEW DISTRICT =====================================*/}\n            {/* {(!thisDistrict ||\n              (thisDistrict &&\n                (actionTypes === \"CREATE_DISTRICT\" ||\n                  actionTypes === \"UPDATE_DISTRICT\"))) &&\n              thisProvince && (\n                <button\n                  type=\"button\"\n                  className={`btn hover:bg-blue-500 mb-1 border-2 border-blue-500 bg-white\n        hover:text-white rounded-md flex items-center font-bold text-gray-700 focus:outline-none gap-1 ${\n          loadingRequest && \"cursor-wait\"\n        } ${actionTypes !== null && \"cursor-not-allowed\"}`}\n                  onClick={() => setActionTypes(\"CREATE_DISTRICT\")}\n                  disabled={actionTypes !== null || loadingRequest}\n                >\n                  <MdAdd className=\"inline-block mr-1 text-xl font-bold\" />\n                  New District\n                </button>\n              )} */}\n\n            {/* CREATE NEW SECTOR =====================================*/}\n            {/* {(!thisSector ||\n              (thisSector &&\n                (actionTypes === \"CREATE_SECTOR\" ||\n                  actionTypes === \"UPDATE_SECTOR\"))) &&\n              thisDistrict &&\n              actionTypes !== \"CREATE_DISTRICT\" &&\n              actionTypes !== \"UPDATE_DISTRICT\" && (\n                <button\n                  type=\"button\"\n                  className={`btn hover:bg-blue-500 mb-1 border-2 border-blue-500 bg-white\n        hover:text-white rounded-md flex items-center font-bold text-gray-700 focus:outline-none gap-1 ${\n          loadingRequest && \"cursor-wait\"\n        } ${actionTypes !== null && \"cursor-not-allowed\"}`}\n                  onClick={() => setActionTypes(\"CREATE_SECTOR\")}\n                  disabled={actionTypes !== null || loadingRequest}\n                >\n                  <MdAdd className=\"inline-block mr-1 text-xl font-bold\" />\n                  New Sector\n                </button>\n              )} */}\n          </div>\n\n          {(!thisProvince ||\n            (thisProvince &&\n              (actionTypes === \"CREATE_PROVINCE\" ||\n                actionTypes === \"UPDATE_PROVINCE\"))) && (\n            <ViewProvince\n              thisProvince={thisProvince}\n              thisDistrict={thisDistrict}\n              loadingRequest={loadingRequest}\n              locations={props.locations}\n              actionTypes={actionTypes}\n              setLoadingRequest={setLoadingRequest}\n              setThisProvince={setThisProvince}\n              setActionTypes={setActionTypes}\n            />\n          )}\n\n          {(!thisDistrict ||\n            (thisDistrict &&\n              (actionTypes === \"CREATE_DISTRICT\" ||\n                actionTypes === \"UPDATE_DISTRICT\"))) &&\n            thisProvince && (\n              <ViewDistricts\n                thisDistrict={thisDistrict}\n                loadingRequest={loadingRequest}\n                actionTypes={actionTypes}\n                setLoadingRequest={setLoadingRequest}\n                setActionTypes={setActionTypes}\n                thisProvince={thisProvince}\n                setThisDistrict={setThisDistrict}\n              />\n            )}\n\n          {(!thisSector ||\n            (thisSector &&\n              (actionTypes === \"CREATE_SECTOR\" ||\n                actionTypes === \"UPDATE_SECTOR\"))) &&\n            thisDistrict &&\n            actionTypes !== \"CREATE_DISTRICT\" &&\n            actionTypes !== \"UPDATE_DISTRICT\" && (\n              <ViewSectors\n                thisDistrict={thisDistrict}\n                thisSector={thisSector}\n                loadingRequest={loadingRequest}\n                actionTypes={actionTypes}\n                setLoadingRequest={setLoadingRequest}\n                setThisSector={setThisSector}\n                setActionTypes={setActionTypes}\n              />\n            )}\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  locations,\n}: StoreState): {\n  locations: RoomLocationInterface[];\n} => {\n  return { locations: locations.roomLocation };\n};\n\nexport const Locations = React.memo(\n  connect(mapStateToProps, {\n    getAllRoom,\n  })(_Locations)\n);\n","import React, { Fragment, useState } from \"react\";\nimport { AiFillDashboard } from \"react-icons/ai\";\nimport { MdBrightness1 } from \"react-icons/md\";\nimport { SessionPlanInterface } from \"../../../interfaces\";\nimport { education_category } from \"../../../interfaces/education_category\";\nimport { reportTitleType } from \"../../Admin/ExamReport/ExamReport\";\nimport ExamReportModals, {\n  ModalForTypes,\n} from \"../../Admin/ExamReport/ExamReportModals\";\n\ntype ExamReportTitleProps = {\n  // FOR SETTINGS ==============================\n  loading: boolean;\n\n  // FOR REPORT TYPE =========================\n  reportTitle: reportTitleType;\n  setReportTitle: (title: reportTitleType) => void;\n\n  //   FOR EDUCATION CATEGORY & PERIOD =====================\n  education_categories: education_category[] | null;\n  loadingEducation: boolean;\n  thisEducation: education_category | null;\n  setThisEducation: (value: education_category | null) => void;\n\n  //   FOR APPLICATION SESSION ============================\n  thisPeriod: string;\n  setThisPeriod: (value: string) => void;\n  application_sessions: SessionPlanInterface[];\n  onPeriodChange?: (period_id: string) => void;\n};\n\nconst ExamDashboardTitle: React.FC<ExamReportTitleProps> = (props) => {\n  const [changeReport, setChangeReport] = useState<boolean>(false);\n\n  return (\n    <Fragment>\n      <div className=\"mt-3 rounded flex flex-col md:flex-row md:justify-between items-start\">\n        <div className=\"flex flex-row items-center gap-3 mb-2\">\n          <AiFillDashboard className=\"text-7xl text-blue-600 hidden md:block\" />\n          <div className=\"flex flex-col\">\n            <span className=\"text-blue-600 text-3xl font-bold\">\n              Exam Dashboard\n            </span>\n            {false && (\n              <div\n                onClick={() => setChangeReport(true)}\n                className=\"flex flex-row gap-2\"\n              >\n                <span className=\"text-gray-500\">Report type: </span>\n                <span className=\"text-gray-600 font-bold underline cursor-pointer\">\n                  {props.reportTitle}\n                </span>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* FILTER SECTION PERIOD && EDUCATION */}\n        <section className=\"w-full md:w-auto my-2 md:my-0\">\n          {/* EDUCATION CATEGORY sections */}\n          <section className=\"flex items-start md:items-center justify-start md:justify-end gap-2\">\n            {props.education_categories &&\n              props.education_categories.length > 0 &&\n              props.education_categories.map((education, index) => (\n                <section\n                  key={education.education_institute_id + index}\n                  className={`w-auto ${\n                    props.loading || props.loadingEducation\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } ${\n                    props.thisEducation &&\n                    education.education_institute_id ===\n                      props.thisEducation.education_institute_id\n                      ? \"bg-blue-500 text-white font-bold\"\n                      : \"bg-gray-100 text-blue-800\"\n                  } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex items-center animate__animated animate__zoomIn`}\n                  onClick={() =>\n                    !props.loading &&\n                    !props.loadingEducation &&\n                    props.setThisEducation(education)\n                  }\n                >\n                  <section className=\"flex-1\">\n                    <MdBrightness1 className=\"inline-block mr-1 text-xs\" />\n                    <span>{education.education_category_title}</span>\n                  </section>\n\n                  {/* {count > 0 ? ( */}\n                  {/* <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n              12\n            </span> */}\n                  {/* ) : null} */}\n                </section>\n              ))}\n          </section>\n          {/* end EDUCATION CATEGORY sections */}\n          <div>\n            <select\n              className={`bg-white text-gray-600 border border-gray-400 rounded p-2 focus:outline-none ${\n                props.loading && \"cursor-wait\"\n              }`}\n              value={props.thisPeriod}\n              disabled={props.loading || props.loadingEducation}\n              onChange={(e) => {\n                props.setThisPeriod(e.target.value);\n                props.onPeriodChange && props.onPeriodChange(e.target.value);\n                // props.setLoadingApplications(true);\n                // props.GetApplicationPerPeriod(\n                //   e.target.value,\n                //   (status: boolean, msg: string) => {\n                //     props.setLoadingApplications(status);\n                //     if (!status && msg.length > 0) {\n                //       props.PushPopupAlert({\n                //         title: errorToText(msg),\n                //         theme: PopupAlertTheme.danger,\n                //       });\n                //     }\n                //   }\n                // );\n              }}\n            >\n              {props.application_sessions.map((session, item) => (\n                <option\n                  key={session.session_plan_id + item}\n                  value={session.session_plan_id}\n                >\n                  {session.session_plan_name}\n                </option>\n              ))}\n            </select>\n          </div>\n        </section>\n        {/* END FILTER SECTION PERIOD && EDUCATION */}\n      </div>\n      {/* CHANGE REPORT TYPE MODAL CONTROLLERS ============================================ */}\n      {changeReport && (\n        <ExamReportModals\n          modalFor={ModalForTypes.title}\n          modalState={changeReport}\n          reportTitle={props.reportTitle}\n          changeModalState={setChangeReport}\n          setReportTitle={props.setReportTitle}\n        />\n      )}\n      {/* END CHANGE REPORT TYPE MODAL CONTROLLERS ============================================ */}\n    </Fragment>\n  );\n};\n\nexport default React.memo(ExamDashboardTitle);\n","import React, { Component } from \"react\";\nimport { examPreparationStateInterface } from \"../../Admin/ExamReport/ExamList\";\nimport VBarChart from \"../ChartComponents/VBarChart\";\n\ntype ExamPreparationChartProps = {\n  examPreparationProgress: {\n    all: examPreparationStateInterface[];\n    finished: examPreparationStateInterface[];\n    remaining: examPreparationStateInterface[];\n  };\n};\n\nclass ExamPreparationChart extends Component<ExamPreparationChartProps> {\n  render() {\n    return (\n      <div className=\"my-3 max-w-full bg-white\">\n        <div className=\"flex items-center justify-between px-3\">\n          <span className=\"text-gray-600 font-semibold text-xl py-4 px-0\">\n            Exams preparation chart\n          </span>\n        </div>\n\n        <div className=\"mb-4 pb-2 px-3\">\n          <VBarChart\n            labels={[\"Remaining exams\", \"Prepared exams\"]}\n            categoriesLabel={[\"Exam preparation progress\"]}\n            dataLabels={true}\n            yaxisText=\"Exam preparation progress\"\n            tooltipText=\"(Exams)\"\n            series={[\n              {\n                name: \"Remaining exams\",\n                data: [this.props.examPreparationProgress.remaining.length],\n              },\n              {\n                name: \"Prepared exams\",\n                data: [this.props.examPreparationProgress.finished.length],\n              },\n            ]}\n            colors={[\"#4b5563\", \"#469769\"]}\n            defaultBar={{\n              borderRadius: 4,\n              horizontal: false,\n              columnWidth: \"95%\",\n              endingShape: \"rounded\",\n            }}\n            chartHeight={550}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default React.memo(ExamPreparationChart);\n","import React, { Component } from \"react\";\nimport { examProgressStateInterface } from \"../../Admin/ExamReport/DoneExamList\";\nimport VBarChart from \"../ChartComponents/VBarChart\";\n\ntype ExamProgressChartProps = {\n  progressData: {\n    all: examProgressStateInterface[];\n    finished: examProgressStateInterface[];\n    remaining: examProgressStateInterface[];\n  };\n};\n\nclass ExamProgressChart extends Component<ExamProgressChartProps> {\n  render() {\n    return (\n      <div className=\"my-3 max-w-full bg-white\">\n        <div className=\"flex items-center justify-between px-3\">\n          <span className=\"text-gray-600 font-semibold text-xl py-4 px-0\">\n            Examination progress chart\n          </span>\n        </div>\n\n        <div className=\"mb-4 pb-2 px-3\">\n          <VBarChart\n            labels={[\"Remaining exams\", \"Prepared exams\"]}\n            categoriesLabel={[\"Examinations progress\"]}\n            dataLabels={true}\n            yaxisText=\"Examination progress\"\n            tooltipText=\"(Exams)\"\n            series={[\n              {\n                name: \"Remaining exams\",\n                data: [this.props.progressData.remaining.length],\n              },\n              {\n                name: \"Done exams\",\n                data: [this.props.progressData.finished.length],\n              },\n            ]}\n            colors={[\"#4b5563\", \"#469769\"]}\n            defaultBar={{\n              borderRadius: 4,\n              horizontal: false,\n              columnWidth: \"95%\",\n              endingShape: \"rounded\",\n            }}\n            chartHeight={550}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default React.memo(ExamProgressChart);\n","import React, { Component } from \"react\";\nimport { candidatePerfomranceStateInterface } from \"../../Admin/ExamReport/CandidatePerformance\";\nimport VBarChart from \"../ChartComponents/VBarChart\";\n\ntype ExamPerformanceChartProps = {\n  examPerformance: {\n    all: candidatePerfomranceStateInterface[];\n    pass: candidatePerfomranceStateInterface[];\n    failed: candidatePerfomranceStateInterface[];\n    active: candidatePerfomranceStateInterface[];\n  };\n};\n\nclass ExamPerformanceChart extends Component<ExamPerformanceChartProps> {\n  render() {\n    return (\n      <div className=\"my-3 max-w-full bg-white\">\n        <div className=\"flex items-center justify-between px-3\">\n          <span className=\"text-gray-600 font-semibold text-xl py-4 px-0\">\n            Examination performance chart\n          </span>\n        </div>\n\n        <div className=\"mb-4 pb-2 px-3\">\n          <VBarChart\n            labels={[\"Pass applicant(s)\", \"Failed applicant(s)\"]}\n            categoriesLabel={[\"Exam preparation progress\"]}\n            dataLabels={true}\n            yaxisText=\"Exam performance\"\n            tooltipText=\"(Applicants)\"\n            series={[\n              {\n                name: \"Pass applicant(s)\",\n                data: [this.props.examPerformance.pass.length],\n              },\n              {\n                name: \"Failed applicant(s)\",\n                data: [this.props.examPerformance.failed.length],\n              },\n            ]}\n            colors={[\"#469769\", \"#d97724\"]}\n            defaultBar={{\n              borderRadius: 4,\n              horizontal: false,\n              columnWidth: \"95%\",\n              endingShape: \"rounded\",\n            }}\n            chartHeight={550}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default React.memo(ExamPerformanceChart);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  schoolLevelsStoreInterface,\n  loadCourses,\n  loadExamsList,\n  loadEducationCategories,\n  loadDoneExam,\n  loadSchoolLevels,\n  loadPerfomranceExam,\n  loadCandidatesExamPerformance,\n  PushPopupAlert,\n  FilterParamType,\n} from \"../../../actions\";\nimport { StoreState } from \"../../../reducers\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport {\n  SessionPlanInterface,\n  course,\n  education_category,\n  ExamDoneAndRemainingByPeriodInterface,\n  school_level,\n} from \"../../../interfaces\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport { ExamReportReducerType } from \"../../../reducers/exam_report\";\nimport moment from \"moment\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport {\n  candidatePerfomranceStateInterface,\n  FC_reportCandidatePerformanceData,\n  FC_reportCandidatePerformanceDataFilter,\n} from \"../../Admin/ExamReport/CandidatePerformance\";\nimport {\n  examProgressStateInterface,\n  FC_reportDoneExamList,\n} from \"../../Admin/ExamReport/DoneExamList\";\nimport {\n  examPreparationStateInterface,\n  FC_reportExamList,\n} from \"../../Admin/ExamReport/ExamList\";\nimport { reportTitleType } from \"../../Admin/ExamReport/ExamReport\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport NoSession from \"../../SessionSettings/NoSession\";\nimport ExamDashboardTitle from \"./ExamDashboardTitle\";\nimport ExamDashboardLabels from \"./ExamDashboardLabels\";\nimport { FaBookOpen } from \"react-icons/fa\";\nimport PieChart from \"../ChartComponents/PieChart\";\nimport ExamPreparationChart from \"./ExamPreparationChart\";\nimport ExamProgressChart from \"./ExamProgressChart\";\nimport ExamPerformanceChart from \"./ExamPerformanceChart\";\n\nexport const getLevelbyId = (\n  school_levels: school_level[] | null,\n  level_id: string\n): school_level | undefined => {\n  if (school_levels) {\n    return school_levels.find((item) => item.school_level_id === level_id);\n  }\n};\n\nexport const loadCoursesByInstitute = (\n  thisEducation: education_category | null,\n  courseList: course[] | null,\n  school_levels: school_level[] | null\n): course[] | null => {\n  let result: course[] | null = [],\n    defaultValue: boolean = false;\n  if (courseList && thisEducation) {\n    for (const key in courseList) {\n      if (Object.prototype.hasOwnProperty.call(courseList, key)) {\n        if (courseList[key].school_levels.length > 0) {\n          courseList[key].school_levels.forEach((level) => {\n            let levelDetail = getLevelbyId(school_levels, level);\n            if (\n              levelDetail &&\n              (levelDetail.education_institute.includes(\n                thisEducation.education_institute_id\n              ) ||\n                levelDetail.education_institute.length <= 0)\n            ) {\n              result && result.push(courseList![key]);\n            }\n          });\n        } else {\n          result && result.push(courseList![key]);\n        }\n      }\n    }\n  }\n  // RETURN DEFAULT VALUES ====================\n  else {\n    defaultValue = true;\n  }\n  return defaultValue ? courseList : result;\n};\n\nexport const loadExaminationProgress = (\n  DoneExamList: ExamDoneAndRemainingByPeriodInterface[] | null,\n  examsList: ExamItemResponse[] | null,\n  thisEducation: education_category | null,\n  courseList: course[] | null,\n  school_levels: school_level[] | null,\n  period: string\n): {\n  all: examProgressStateInterface[];\n  finished: examProgressStateInterface[];\n  remaining: examProgressStateInterface[];\n} | null => {\n  let allData: examProgressStateInterface[] = [],\n    completeExams: examProgressStateInterface[] = [],\n    remainingExams: examProgressStateInterface[] = [],\n    dataFound: boolean = false;\n  if (\n    DoneExamList &&\n    loadCoursesByInstitute(thisEducation, courseList, school_levels) &&\n    examsList\n  ) {\n    dataFound = true;\n    allData = FC_reportDoneExamList(\n      loadCoursesByInstitute(thisEducation, courseList, school_levels)!,\n      examsList,\n      DoneExamList\n    ).filter((item) => item.exam && item.exam.period === period);\n    completeExams = allData.filter(\n      (item) => item.preparation_status.toLocaleLowerCase() === \"done\"\n    );\n    remainingExams = allData.filter(\n      (item) => item.preparation_status.toLocaleLowerCase() === \"active\"\n    );\n  }\n  console.log(\"====================================\");\n  console.log({ loadExaminationProgress: DoneExamList });\n  console.log(\"====================================\");\n  return dataFound\n    ? { all: allData, finished: completeExams, remaining: remainingExams }\n    : null;\n};\n\nexport const loadExamPreparationProgress = (\n  dataList: examPreparationStateInterface[]\n): {\n  all: examPreparationStateInterface[];\n  finished: examPreparationStateInterface[];\n  remaining: examPreparationStateInterface[];\n} => {\n  let allData: examPreparationStateInterface[] = dataList,\n    preparedExams: examPreparationStateInterface[] = dataList.filter(\n      (item) => item.preparation_status === \"prepared\"\n    ),\n    remainingExams: examPreparationStateInterface[] = dataList.filter(\n      (item) => item.preparation_status === \"not prepared\"\n    );\n  return { all: allData, finished: preparedExams, remaining: remainingExams };\n};\n\nexport const isDatePast = (dateParam: string): boolean => {\n  const date = moment().format(\"DD-MM-YYYY\");\n  const todayDate = moment(date, \"DD-MM-YYYY\");\n  const pastDate = moment(dateParam, \"DD-MM-YYYY\");\n\n  const dDiff = todayDate.diff(pastDate);\n\n  if (dDiff > 0) {\n    return false;\n  } else {\n    return true;\n  }\n};\n\nexport const loadExamAttendance = (\n  applicantList: candidatePerfomranceStateInterface[],\n  period: string\n): {\n  all: candidatePerfomranceStateInterface[];\n  pass: candidatePerfomranceStateInterface[];\n  failed: candidatePerfomranceStateInterface[];\n  active: candidatePerfomranceStateInterface[];\n} => {\n  return {\n    all: applicantList.filter((item) => item.exam.period === period),\n    pass: applicantList.filter(\n      (item) =>\n        item.exam.period === period &&\n        (item.exam_stastus !== \"Editing\" || isDatePast(item.exam.exam_date)) &&\n        item.user_total_marks >= 50\n    ),\n    failed: applicantList.filter(\n      (item) =>\n        item.exam.period === period &&\n        (item.exam_stastus !== \"Editing\" || isDatePast(item.exam.exam_date)) &&\n        item.user_total_marks < 50\n    ),\n    active: applicantList.filter(\n      (item) =>\n        item.exam.period === period &&\n        item.exam_stastus === \"Editing\" &&\n        !isDatePast(item.exam.exam_date)\n    ),\n  };\n};\n\ninterface ExamDashboardProps {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  courses: course[] | null;\n  examsList: ExamItemResponse[] | null;\n  adminExamReport: ExamReportReducerType;\n  GetAllSessionPlans: Function;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  loadCourses: (callback: (loading: boolean) => void) => void;\n  loadExamsList: (callback: (loading: boolean) => void) => void;\n  loadDoneExam: (period_id: string, callback: Function) => void;\n  loadPerfomranceExam: (period_id: string, callback: Function) => void;\n  loadSchoolLevels: (callback: (loading: boolean) => void) => void;\n  loadCandidatesExamPerformance: (\n    dataBody: FilterParamType | null,\n    callback: Function\n  ) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface ExamDashboardStates {\n  loading: boolean;\n  loadingCourses: boolean;\n  loadingExams: boolean;\n  loadingDoneExam: boolean;\n  loadingCandidatesExamPerformance: boolean;\n  loadingExamPerformance: boolean;\n  loadingSettings: boolean;\n  changingPeriod: boolean;\n  reportTitle: reportTitleType;\n  thisEducation: education_category | null;\n  thisPeriod: string;\n}\n\nclass _ExamDashboard extends Component<\n  ExamDashboardProps,\n  ExamDashboardStates\n> {\n  constructor(props: ExamDashboardProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingCourses: true,\n      loadingExams: true,\n      loadingDoneExam: true,\n      loadingCandidatesExamPerformance: true,\n      loadingExamPerformance: true,\n      loadingSettings: true,\n      changingPeriod: false,\n      reportTitle: reportTitleType.EXAM_PREPARATION,\n      thisEducation: null,\n      thisPeriod: \"\",\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingCourses = (value: boolean) => {\n    this.setState({ loadingCourses: value });\n  };\n\n  setLoadingExams = (value: boolean) => {\n    this.setState({ loadingExams: value });\n  };\n\n  setLoadingDoneExam = (value: boolean) => {\n    this.setState({ loadingDoneExam: value });\n  };\n\n  setLoadingCandidatesExamPerformance = (value: boolean) => {\n    this.setState({ loadingCandidatesExamPerformance: value });\n  };\n\n  setLoadingExamPerformance = (value: boolean) => {\n    this.setState({ loadingExamPerformance: value });\n  };\n\n  setLoadingSettings = (value: boolean) => {\n    this.setState({ loadingSettings: value });\n  };\n\n  setChangingPeriod = (value: boolean) => {\n    this.setState({ changingPeriod: value });\n  };\n\n  setReportTitle = (value: reportTitleType) => {\n    this.setState({ reportTitle: value });\n  };\n\n  setThisEducation = (value: education_category | null) => {\n    this.setState({ thisEducation: value });\n  };\n\n  setThisPeriod = (value: string) => {\n    this.setState({ thisPeriod: value });\n  };\n\n  loadByPeriods = (session: SessionPlanInterface) => {\n    this.props.loadDoneExam(\n      session.session_plan_id,\n      (status: boolean, msg: string) => {\n        if (!status) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          this.setLoadingDoneExam(false);\n        }\n      }\n    );\n\n    // --------------------------------------------\n    this.props.loadPerfomranceExam(\n      session.session_plan_id,\n      (status: boolean, msg: string) => {\n        if (!status) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          this.setLoadingExamPerformance(false);\n        }\n      }\n    );\n  };\n\n  componentDidMount = () => {\n    if (\n      this.props.schoolLevels.education_categories === null ||\n      this.props.schoolLevels.education_categories.length === 0\n    ) {\n      this.props.loadEducationCategories(this.setLoadingSettings);\n    } else if (\n      this.props.schoolLevels.education_categories.length > 0 &&\n      !this.state.thisEducation\n    ) {\n      this.setThisEducation(this.props.schoolLevels.education_categories[0]);\n      this.setLoadingSettings(false);\n    }\n\n    if (this.props.application_sessions === null) {\n      this.props.GetAllSessionPlans(\n        (status: boolean, msg: string, sessions?: SessionPlanInterface[]) => {\n          this.setLoadingSettings(status);\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          if (!status && sessions && sessions.length > 0) {\n            let active_period: SessionPlanInterface | undefined;\n            active_period = sessions.find((item) => item.is_active);\n            if (active_period) {\n              this.setThisPeriod(active_period.session_plan_id);\n            } else {\n              this.setThisPeriod(sessions[sessions.length - 1].session_plan_id);\n            }\n          }\n        }\n      );\n    } else if (\n      this.props.application_sessions.length > 0 &&\n      !this.state.thisPeriod.length\n    ) {\n      let active_period: SessionPlanInterface | undefined;\n      active_period = this.props.application_sessions.find(\n        (item) => item.is_active\n      );\n      if (active_period) {\n        this.setThisPeriod(active_period.session_plan_id);\n        this.loadByPeriods(active_period);\n      } else {\n        this.setThisPeriod(\n          this.props.application_sessions[\n            this.props.application_sessions.length - 1\n          ].session_plan_id\n        );\n        this.loadByPeriods(\n          this.props.application_sessions[\n            this.props.application_sessions.length - 1\n          ]\n        );\n      }\n      this.setLoadingSettings(false);\n      this.setLoading(false);\n    }\n\n    if (\n      this.props.schoolLevels.school_levels === null ||\n      this.props.schoolLevels.school_levels.length <= 0\n    ) {\n      this.props.loadSchoolLevels(this.setLoadingSettings);\n    } else {\n      this.setLoadingSettings(false);\n    }\n\n    // if (this.state.thisPeriod.length > 0 && this.state.loadingDoneExam) {\n    //   this.props.loadDoneExam(\n    //     this.state.thisPeriod,\n    //     (status: boolean, msg: string) => {\n    //       if (!status) {\n    //         if (msg.length > 0) {\n    //           this.props.PushPopupAlert({\n    //             title: msg,\n    //             theme: PopupAlertTheme.danger,\n    //           });\n    //         }\n    //         this.setLoadingDoneExam(false);\n    //       }\n    //     }\n    //   );\n    // }\n    // if (this.state.thisPeriod.length > 0 && this.state.loadingExamPerformance) {\n    //   this.props.loadPerfomranceExam(\n    //     this.state.thisPeriod,\n    //     (status: boolean, msg: string) => {\n    //       if (!status) {\n    //         if (msg.length > 0) {\n    //           this.props.PushPopupAlert({\n    //             title: msg,\n    //             theme: PopupAlertTheme.danger,\n    //           });\n    //         }\n    //         this.setLoadingExamPerformance(false);\n    //       }\n    //     }\n    //   );\n    // }\n\n    if (\n      this.props.adminExamReport.CandidatesExamPerformance === null ||\n      (this.props.adminExamReport.CandidatesExamPerformance.length === 0 &&\n        this.state.loadingCandidatesExamPerformance)\n    ) {\n      this.props.loadCandidatesExamPerformance(\n        null,\n        (status: boolean, msg: string) => {\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            this.setLoadingCandidatesExamPerformance(false);\n          }\n        }\n      );\n    }\n  };\n\n  onPeriodChange = (period_id: string) => {\n    this.setLoadingDoneExam(true);\n    this.setLoadingExamPerformance(true);\n    this.setChangingPeriod(true);\n    this.props.loadDoneExam(period_id, (status: boolean, msg: string) => {\n      if (!status) {\n        let action: boolean = true;\n        if (msg.length > 0 && action) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n          action = false;\n        }\n        this.setLoadingDoneExam(false);\n      }\n    });\n\n    this.props.loadPerfomranceExam(\n      period_id,\n      (status: boolean, msg: string) => {\n        if (!status) {\n          let action: boolean = true;\n          if (msg.length > 0 && action) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n            action = false;\n          }\n          this.setLoadingExamPerformance(false);\n        }\n      }\n    );\n\n    if (!this.state.loadingDoneExam && !this.state.loadingExamPerformance) {\n      this.setChangingPeriod(false);\n    }\n  };\n\n  render() {\n    if (this.state.loading || this.props.application_sessions === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    if (this.props.application_sessions.length === 0) {\n      return <NoSession />;\n    }\n\n    return (\n      <div>\n        {/* HEADER TITLE */}\n        <ExamDashboardTitle\n          reportTitle={this.state.reportTitle}\n          setReportTitle={this.setReportTitle}\n          loading={this.state.changingPeriod}\n          education_categories={this.props.schoolLevels.education_categories}\n          loadingEducation={false}\n          thisEducation={this.state.thisEducation}\n          setThisEducation={this.setThisEducation}\n          thisPeriod={this.state.thisPeriod}\n          setThisPeriod={this.setThisPeriod}\n          application_sessions={this.props.application_sessions}\n          onPeriodChange={this.onPeriodChange}\n        />\n        {/* END HEADER TITLE */}\n\n        {/* ----------------------------------------------------------- */}\n\n        {/* EXAMS PREPARATION PROGRESS LABELS ======================================= */}\n        {this.props.examsList &&\n          loadCoursesByInstitute(\n            this.state.thisEducation,\n            this.props.courses,\n            this.props.schoolLevels.school_levels\n          ) && (\n            <section className=\"my-2\">\n              <div className=\"text-2xl font-semibold text-gray-600\">\n                Exams preparation status\n              </div>\n              <ExamDashboardLabels\n                dataLabels={[\n                  {\n                    title: \"Total exams\",\n                    icon: FaBookOpen,\n                    iconColor: \"blue\",\n                    count: loadExamPreparationProgress(\n                      FC_reportExamList(\n                        loadCoursesByInstitute(\n                          this.state.thisEducation,\n                          this.props.courses,\n                          this.props.schoolLevels.school_levels\n                        )!,\n                        this.props.examsList,\n                        this.state.thisPeriod\n                      )\n                    ).all.length,\n                  },\n                  {\n                    title: \"Prepared exams\",\n                    icon: FaBookOpen,\n                    iconColor: \"green\",\n                    count: loadExamPreparationProgress(\n                      FC_reportExamList(\n                        loadCoursesByInstitute(\n                          this.state.thisEducation,\n                          this.props.courses,\n                          this.props.schoolLevels.school_levels\n                        )!,\n                        this.props.examsList,\n                        this.state.thisPeriod\n                      )\n                    ).finished.length,\n                  },\n                  {\n                    title: \"Remaining exams\",\n                    icon: FaBookOpen,\n                    iconColor: \"gray\",\n                    count: loadExamPreparationProgress(\n                      FC_reportExamList(\n                        loadCoursesByInstitute(\n                          this.state.thisEducation,\n                          this.props.courses,\n                          this.props.schoolLevels.school_levels\n                        )!,\n                        this.props.examsList,\n                        this.state.thisPeriod\n                      )\n                    ).remaining.length,\n                  },\n                ]}\n                labelsOnRow={5}\n              >\n                <div className=\"flex justify-center\">\n                  <PieChart\n                    options={{\n                      labels: [\"Prepared\", \"Remaining\"],\n                      legend: {\n                        show: false,\n                        position: \"bottom\",\n                        horizontalAlign: \"center\",\n                        fontSize: \"16px\",\n                        itemMargin: {\n                          horizontal: 3,\n                          vertical: 0,\n                        },\n                      },\n                      plotOptions: {\n                        pie: {\n                          donut: {\n                            labels: {\n                              show: true,\n                              name: {\n                                show: true,\n                                fontSize: \"16px\",\n                                //   fontFamily: \"Rubik\",\n                                color: \"#2564eb\",\n                                offsetY: -10,\n                              },\n                              value: {\n                                show: true,\n                                fontSize: \"20px\",\n                                fontFamily: \"Helvetica, Arial, sans-serif\",\n                                color: \"#2564eb\",\n                                offsetY: 10,\n                                formatter: function (val) {\n                                  return val;\n                                },\n                              },\n                              total: {\n                                show: true,\n                                label: \"Total\",\n                                color: \"#2564eb\",\n                                formatter: function (w) {\n                                  return w.globals.seriesTotals.reduce(\n                                    (a: number, b: number) => {\n                                      return a + b;\n                                    },\n                                    0\n                                  );\n                                },\n                              },\n                            },\n                          },\n                        },\n                      },\n                      colors: [\"#469769\", \"#4b5563\"],\n                    }}\n                    series={[\n                      loadExamPreparationProgress(\n                        FC_reportExamList(\n                          loadCoursesByInstitute(\n                            this.state.thisEducation,\n                            this.props.courses,\n                            this.props.schoolLevels.school_levels\n                          )!,\n                          this.props.examsList,\n                          this.state.thisPeriod\n                        )\n                      ).finished.length,\n                      loadExamPreparationProgress(\n                        FC_reportExamList(\n                          loadCoursesByInstitute(\n                            this.state.thisEducation,\n                            this.props.courses,\n                            this.props.schoolLevels.school_levels\n                          )!,\n                          this.props.examsList,\n                          this.state.thisPeriod\n                        )\n                      ).remaining.length,\n                    ]}\n                    width={210}\n                  />\n                </div>\n              </ExamDashboardLabels>\n            </section>\n          )}\n        {/* EXAMS PREPARATION PROGRESS LABELS ======================================= */}\n\n        {/* ===================================================================================== */}\n\n        {/* EXAMS PROGRESS LABELS ======================================= */}\n        {loadExaminationProgress(\n          this.props.adminExamReport.DoneExam,\n          this.props.examsList,\n          this.state.thisEducation,\n          this.props.courses,\n          this.props.schoolLevels.school_levels,\n          this.state.thisPeriod\n        ) && (\n          <section className=\"my-2\">\n            <div className=\"text-2xl font-semibold text-gray-600\">\n              Examination progress status\n            </div>\n            <ExamDashboardLabels\n              dataLabels={[\n                {\n                  title: \"Total exams\",\n                  icon: FaBookOpen,\n                  iconColor: \"blue\",\n                  count: loadExaminationProgress(\n                    this.props.adminExamReport.DoneExam,\n                    this.props.examsList,\n                    this.state.thisEducation,\n                    this.props.courses,\n                    this.props.schoolLevels.school_levels,\n                    this.state.thisPeriod\n                  )!.all.length,\n                },\n                {\n                  title: \"Done exams\",\n                  icon: FaBookOpen,\n                  iconColor: \"green\",\n                  count: loadExaminationProgress(\n                    this.props.adminExamReport.DoneExam,\n                    this.props.examsList,\n                    this.state.thisEducation,\n                    this.props.courses,\n                    this.props.schoolLevels.school_levels,\n                    this.state.thisPeriod\n                  )!.finished.length,\n                },\n                {\n                  title: \"Remaining exams\",\n                  icon: FaBookOpen,\n                  iconColor: \"gray\",\n                  count: loadExaminationProgress(\n                    this.props.adminExamReport.DoneExam,\n                    this.props.examsList,\n                    this.state.thisEducation,\n                    this.props.courses,\n                    this.props.schoolLevels.school_levels,\n                    this.state.thisPeriod\n                  )!.remaining.length,\n                },\n              ]}\n              labelsOnRow={5}\n            >\n              <div className=\"flex justify-center\">\n                <PieChart\n                  options={{\n                    labels: [\"Done\", \"Remaining\"],\n                    legend: {\n                      show: false,\n                      position: \"bottom\",\n                      horizontalAlign: \"center\",\n                      fontSize: \"16px\",\n                      itemMargin: {\n                        horizontal: 3,\n                        vertical: 0,\n                      },\n                    },\n                    plotOptions: {\n                      pie: {\n                        donut: {\n                          labels: {\n                            show: true,\n                            name: {\n                              show: true,\n                              fontSize: \"16px\",\n                              //   fontFamily: \"Rubik\",\n                              color: \"#2564eb\",\n                              offsetY: -10,\n                            },\n                            value: {\n                              show: true,\n                              fontSize: \"20px\",\n                              fontFamily: \"Helvetica, Arial, sans-serif\",\n                              color: \"#2564eb\",\n                              offsetY: 10,\n                              formatter: function (val) {\n                                return val;\n                              },\n                            },\n                            total: {\n                              show: true,\n                              label: \"Total\",\n                              color: \"#2564eb\",\n                              formatter: function (w) {\n                                return w.globals.seriesTotals.reduce(\n                                  (a: number, b: number) => {\n                                    return a + b;\n                                  },\n                                  0\n                                );\n                              },\n                            },\n                          },\n                        },\n                      },\n                    },\n                    colors: [\"#469769\", \"#4b5563\"],\n                  }}\n                  series={[\n                    loadExaminationProgress(\n                      this.props.adminExamReport.DoneExam,\n                      this.props.examsList,\n                      this.state.thisEducation,\n                      this.props.courses,\n                      this.props.schoolLevels.school_levels,\n                      this.state.thisPeriod\n                    )!.finished.length,\n                    loadExaminationProgress(\n                      this.props.adminExamReport.DoneExam,\n                      this.props.examsList,\n                      this.state.thisEducation,\n                      this.props.courses,\n                      this.props.schoolLevels.school_levels,\n                      this.state.thisPeriod\n                    )!.remaining.length,\n                  ]}\n                  width={210}\n                />\n              </div>\n            </ExamDashboardLabels>\n          </section>\n        )}\n        {/* EXAMS PROGRESS LABELS ======================================= */}\n\n        {/* ===================================================================================== */}\n\n        {/* EXAMS PERFORMANCE LABELS ======================================= */}\n        {this.props.adminExamReport.CandidatesExamPerformance &&\n          loadCoursesByInstitute(\n            this.state.thisEducation,\n            this.props.courses,\n            this.props.schoolLevels.school_levels\n          ) && (\n            <section className=\"my-2\">\n              <div className=\"text-2xl font-semibold text-gray-600\">\n                Examination performance status\n              </div>\n              <ExamDashboardLabels\n                dataLabels={[\n                  {\n                    title: \"Total attendance\",\n                    icon: FaBookOpen,\n                    iconColor: \"blue\",\n                    count: loadExamAttendance(\n                      FC_reportCandidatePerformanceDataFilter(\n                        FC_reportCandidatePerformanceData(\n                          loadCoursesByInstitute(\n                            this.state.thisEducation,\n                            this.props.courses,\n                            this.props.schoolLevels.school_levels\n                          )!,\n                          this.props.adminExamReport.CandidatesExamPerformance,\n                          \"all\"\n                        ),\n                        \"all\"\n                      ),\n                      this.state.thisPeriod\n                    ).all.length,\n                  },\n                  {\n                    title: \"Pass applicant(s)\",\n                    icon: FaBookOpen,\n                    iconColor: \"green\",\n                    count: loadExamAttendance(\n                      FC_reportCandidatePerformanceDataFilter(\n                        FC_reportCandidatePerformanceData(\n                          loadCoursesByInstitute(\n                            this.state.thisEducation,\n                            this.props.courses,\n                            this.props.schoolLevels.school_levels\n                          )!,\n                          this.props.adminExamReport.CandidatesExamPerformance,\n                          \"all\"\n                        ),\n                        \"all\"\n                      ),\n                      this.state.thisPeriod\n                    ).pass.length,\n                  },\n                  {\n                    title: \"Failed applicant(s)\",\n                    icon: FaBookOpen,\n                    iconColor: \"yellow\",\n                    count: loadExamAttendance(\n                      FC_reportCandidatePerformanceDataFilter(\n                        FC_reportCandidatePerformanceData(\n                          loadCoursesByInstitute(\n                            this.state.thisEducation,\n                            this.props.courses,\n                            this.props.schoolLevels.school_levels\n                          )!,\n                          this.props.adminExamReport.CandidatesExamPerformance,\n                          \"all\"\n                        ),\n                        \"all\"\n                      ),\n                      this.state.thisPeriod\n                    ).failed.length,\n                  },\n                  // {\n                  //   title: \"Doing exam\",\n                  //   icon: FaBookOpen,\n                  //   iconColor: \"gray\",\n                  //   count: loadExamAttendance(\n                  //     FC_reportCandidatePerformanceDataFilter(\n                  //       FC_reportCandidatePerformanceData(\n                  //         loadCoursesByInstitute(\n                  //           thisEducation,\n                  //           props.courses,\n                  //           props.schoolLevels.school_levels\n                  //         )!,\n                  //         props.adminExamReport.CandidatesExamPerformance,\n                  //         \"all\"\n                  //       ),\n                  //       \"all\"\n                  //     ),\n                  //     thisPeriod\n                  //   ).active.length,\n                  // },\n                ]}\n                labelsOnRow={5}\n              >\n                <div className=\"flex justify-center\">\n                  <PieChart\n                    options={{\n                      labels: [\"Pass\", \"Failed\"],\n                      // labels: [\"Pass\", \"Failed\", \"Doing Exam\"],\n                      legend: {\n                        show: false,\n                        position: \"bottom\",\n                        horizontalAlign: \"center\",\n                        fontSize: \"16px\",\n                        itemMargin: {\n                          horizontal: 3,\n                          vertical: 0,\n                        },\n                      },\n                      plotOptions: {\n                        pie: {\n                          donut: {\n                            labels: {\n                              show: true,\n                              name: {\n                                show: true,\n                                fontSize: \"16px\",\n                                //   fontFamily: \"Rubik\",\n                                color: \"#2564eb\",\n                                offsetY: -10,\n                              },\n                              value: {\n                                show: true,\n                                fontSize: \"20px\",\n                                fontFamily: \"Helvetica, Arial, sans-serif\",\n                                color: \"#2564eb\",\n                                offsetY: 10,\n                                formatter: function (val) {\n                                  return val;\n                                },\n                              },\n                              total: {\n                                show: true,\n                                label: \"Total\",\n                                color: \"#2564eb\",\n                                formatter: function (w) {\n                                  return w.globals.seriesTotals.reduce(\n                                    (a: number, b: number) => {\n                                      return a + b;\n                                    },\n                                    0\n                                  );\n                                },\n                              },\n                            },\n                          },\n                        },\n                      },\n                      colors: [\"#469769\", \"#d97724\"],\n                      // colors: [\"#469769\", \"#d97724\", \"#4b5563\"],\n                    }}\n                    series={[\n                      loadExamAttendance(\n                        FC_reportCandidatePerformanceDataFilter(\n                          FC_reportCandidatePerformanceData(\n                            loadCoursesByInstitute(\n                              this.state.thisEducation,\n                              this.props.courses,\n                              this.props.schoolLevels.school_levels\n                            )!,\n                            this.props.adminExamReport\n                              .CandidatesExamPerformance,\n                            \"all\"\n                          ),\n                          \"all\"\n                        ),\n                        this.state.thisPeriod\n                      ).pass.length,\n                      loadExamAttendance(\n                        FC_reportCandidatePerformanceDataFilter(\n                          FC_reportCandidatePerformanceData(\n                            loadCoursesByInstitute(\n                              this.state.thisEducation,\n                              this.props.courses,\n                              this.props.schoolLevels.school_levels\n                            )!,\n                            this.props.adminExamReport\n                              .CandidatesExamPerformance,\n                            \"all\"\n                          ),\n                          \"all\"\n                        ),\n                        this.state.thisPeriod\n                      ).failed.length,\n                      // loadExamAttendance(\n                      //   FC_reportCandidatePerformanceDataFilter(\n                      //     FC_reportCandidatePerformanceData(\n                      //       loadCoursesByInstitute(\n                      //         thisEducation,\n                      //         props.courses,\n                      //         props.schoolLevels.school_levels\n                      //       )!,\n                      //       props.adminExamReport.CandidatesExamPerformance,\n                      //       \"all\"\n                      //     ),\n                      //     \"all\"\n                      //   ),\n                      //   thisPeriod\n                      // ).active.length,\n                    ]}\n                    width={210}\n                  />\n                </div>\n              </ExamDashboardLabels>\n            </section>\n          )}\n        {/* EXAMS PERFORMANCE LABELS ======================================= */}\n\n        {/* ------------------------------------------------------------------------------- */}\n\n        {/* ===================================================================================== */}\n\n        {/* EXAMS PREPARATION PROGRESS CHART ======================================= */}\n        {this.props.examsList &&\n          loadCoursesByInstitute(\n            this.state.thisEducation,\n            this.props.courses,\n            this.props.schoolLevels.school_levels\n          ) && (\n            <ExamPreparationChart\n              examPreparationProgress={loadExamPreparationProgress(\n                FC_reportExamList(\n                  loadCoursesByInstitute(\n                    this.state.thisEducation,\n                    this.props.courses,\n                    this.props.schoolLevels.school_levels\n                  )!,\n                  this.props.examsList,\n                  this.state.thisPeriod\n                )\n              )}\n            />\n          )}\n        {/* EXAMS PREPARATION PROGRESS CHART ======================================= */}\n\n        {/* ===================================================================================== */}\n\n        {/* EXAMINATION PROGRESS CHART ======================================= */}\n        {loadExaminationProgress(\n          this.props.adminExamReport.DoneExam,\n          this.props.examsList,\n          this.state.thisEducation,\n          this.props.courses,\n          this.props.schoolLevels.school_levels,\n          this.state.thisPeriod\n        ) && (\n          <ExamProgressChart\n            progressData={\n              loadExaminationProgress(\n                this.props.adminExamReport.DoneExam,\n                this.props.examsList,\n                this.state.thisEducation,\n                this.props.courses,\n                this.props.schoolLevels.school_levels,\n                this.state.thisPeriod\n              )!\n            }\n          />\n        )}\n        {/* EXAMINATION PROGRESS CHART ======================================= */}\n\n        {/* ===================================================================================== */}\n\n        {/* EXAM PERFORMANCE ON COUNTRY CHART ======================================= */}\n        {this.props.adminExamReport.CandidatesExamPerformance &&\n          loadCoursesByInstitute(\n            this.state.thisEducation,\n            this.props.courses,\n            this.props.schoolLevels.school_levels\n          ) && (\n            <ExamPerformanceChart\n              examPerformance={loadExamAttendance(\n                FC_reportCandidatePerformanceDataFilter(\n                  FC_reportCandidatePerformanceData(\n                    loadCoursesByInstitute(\n                      this.state.thisEducation,\n                      this.props.courses,\n                      this.props.schoolLevels.school_levels\n                    )!,\n                    this.props.adminExamReport.CandidatesExamPerformance,\n                    \"all\"\n                  ),\n                  \"all\"\n                ),\n                this.state.thisPeriod\n              )}\n            />\n          )}\n        {/* END EXAM PERFORMANCE ON COUNTRY CHART ======================================= */}\n\n        {/* ------------------------------------------------------------------------------- */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  sessionPlan,\n  schoolLevels,\n  course,\n  prepareExam,\n  adminExamReport,\n}: StoreState): {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  courses: course[] | null;\n  examsList: ExamItemResponse[] | null;\n  adminExamReport: ExamReportReducerType;\n} => {\n  return {\n    auth,\n    application_sessions: sessionPlan.allSessionPlans,\n    schoolLevels,\n    courses: course.courses,\n    examsList: prepareExam.examsList,\n    adminExamReport,\n  };\n};\n\nexport const ExamDashboard = connect(mapStateToProps, {\n  loadCourses,\n  loadExamsList,\n  loadEducationCategories,\n  loadDoneExam,\n  loadSchoolLevels,\n  loadPerfomranceExam,\n  loadCandidatesExamPerformance,\n  GetAllSessionPlans,\n  PushPopupAlert,\n})(_ExamDashboard);\n","import { PContractItem } from \"./candidate_placement_contract\";\n\nexport type ViewContractType = {\n  province: PContractItem;\n  district: PContractItem;\n  sector: PContractItem;\n  school: PContractItem;\n};\nexport interface WaitingListInterface {\n  _id: string;\n  status: WaitingListStatus;\n  user_id: string;\n  marks: number;\n  in_education: boolean;\n  session_id: string;\n  position_id: string;\n  gender: string;\n  createdAt: string;\n  updatedAt: string;\n  __v: number;\n  n_id: string;\n  phone_number: string;\n  email: string;\n  contract: ViewContractType;\n  user_info: {\n    document_type: string;\n    issue_number: string;\n    date_of_issue: string;\n    date_of_expiry: string;\n    place_of_issue: string;\n    application_number: string;\n    fname: string;\n    lname: string;\n    father_names: string;\n    mother_names: string;\n    sex: string;\n    date_of_birth: string;\n    place_of_birth: string;\n    country_of_birth: string;\n    village_id: string;\n    village: string;\n    cell: string;\n    sector: string;\n    district: string;\n    province: string;\n    civil_status: string;\n    spouse: null;\n    status: string;\n    photo: string;\n  };\n}\n\nexport enum WaitingListStatus {\n  WAITING = \"waiting\",\n  PENDING = \"pending\",\n  PLACED = \"placed\",\n}\n\nexport enum applicantGender {\n  male = \"Male\",\n  female = \"Female\",\n  null = \"-\",\n}\n\nexport interface WaitingListToPrintInterface {\n  id: string;\n  names: string;\n  gender: string;\n  national_id: string;\n  phone: string;\n  email: string;\n  user_position_marks: number;\n  position_title: string;\n  education_category: string;\n  waitingList_session: string;\n  date: string;\n  waiting_status: string;\n}\nexport interface WaitingListDataInterface {\n  waitingList_id: string;\n  names: string;\n  gender: applicantGender;\n  national_id: string;\n  phone: string;\n  email: string;\n  user_position_marks: number;\n  position_id: string;\n  position_title: string;\n  education_category_id: string;\n  education_category: string;\n  waitingList_session: string;\n  waitingList_session_id: string;\n  date: string;\n  waiting_status: string;\n  status: WaitingListStatus;\n}\n\nexport enum waitingListReportContentKeyInterface {\n  names = \"names\",\n  gender = \"gender\",\n  national_id = \"national_id\",\n  email = \"email\",\n  phone = \"phone\",\n  user_position_marks = \"user_position_marks\",\n  position_title = \"position_title\",\n  education_category = \"education_category\",\n  date = \"date\",\n  waiting_status = \"waiting_status\",\n  waitingList_session = \"waitingList_session\",\n}\n\nexport interface waitingListReportContentInterface {\n  key: waitingListReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n","import React from \"react\";\nimport { FaAngleDoubleRight } from \"react-icons/fa\";\nimport { ContractItemList } from \"../../containers/PlacementContract/Contract/Contract\";\n\ninterface AppProps {\n  data: ContractItemList[];\n  strict: boolean;\n  //   expandClick?: () => void;\n  //   loading: boolean;\n}\n\nconst DistrictView: React.FC<AppProps> = (props) => {\n  const displayMessage = (): JSX.Element => {\n    let result: JSX.Element = <></>;\n    let districts: string = \"\";\n    if (props.data.length === 0)\n      result = (\n        <p>\n          The system will place me in the available posts from all districts of\n          the selected provinces.\n        </p>\n      );\n    else if (props.strict === false && props.data.length > 0) {\n      props.data.forEach((district, index) => {\n        districts += district.title;\n        if (index <= props.data.length - 1) districts += \", \";\n      });\n\n      result = (\n        <p>\n          The system will place you in the available posts{\" \"}\n          <span className=\"font-semibold\">starting</span> from{\" \"}\n          <span className=\"font-semibold\">{districts}</span> and all remaining\n          districts of the selected provinces.\n        </p>\n      );\n    } else if (props.strict === true && props.data.length > 0) {\n      props.data.forEach((district, index) => {\n        districts += district.title;\n        if (index <= props.data.length - 2) districts += \", \";\n        if (index === props.data.length - 2 && index > 0) districts += \" and \";\n      });\n\n      result = (\n        <p>\n          The system will <span className=\"font-semibold\">only</span> place me\n          in available posts in{\" \"}\n          <span className=\"font-semibold\">{districts}</span>.\n        </p>\n      );\n    }\n    return result;\n  };\n\n  return (\n    <div className=\"bg-white mt-9 px-4\">\n      <div className=\"flex flex-row items-center gap-1\">\n        <FaAngleDoubleRight />\n        <span className={`font-extrabold text-lg`}>\n          Preferences at district level\n        </span>\n      </div>\n\n      <p>{displayMessage()}</p>\n    </div>\n  );\n};\n\nexport default DistrictView;\n","import React from \"react\";\nimport { FaAngleDoubleRight } from \"react-icons/fa\";\nimport { ContractItemList } from \"../../containers/PlacementContract/Contract/Contract\";\n\ninterface AppProps {\n  data: ContractItemList[];\n  strict: boolean;\n  //   expandClick?: () => void;\n  //   loading: boolean;\n}\n\nconst ProvinceView: React.FC<AppProps> = (props) => {\n  const displayMessage = (): JSX.Element => {\n    let result: JSX.Element = <></>;\n    let provinces: string = \"\";\n    if (props.data.length === 0)\n      result = (\n        <p>\n          The system will place me in the available posts from all provinces.\n        </p>\n      );\n    else if (props.strict === false && props.data.length > 0) {\n      props.data.forEach((province, index) => {\n        provinces += province.title;\n        if (index <= props.data.length - 1) provinces += \", \";\n      });\n\n      result = (\n        <p>\n          The system will place me in the available posts{\" \"}\n          <span className=\"font-semibold\">starting</span> from{\" \"}\n          <span className=\"font-semibold\">{provinces}</span> and all remaining\n          provinces.\n        </p>\n      );\n    } else if (props.strict === true && props.data.length > 0) {\n      props.data.forEach((province, index) => {\n        provinces += province.title;\n        if (index <= props.data.length - 2) provinces += \", \";\n        if (index === props.data.length - 2 && index > 0) provinces += \" and \";\n      });\n\n      result = (\n        <p>\n          The system will <span className=\"font-semibold\">only</span> place me\n          in available posts in{\" \"}\n          <span className=\"font-semibold\">{provinces}</span>.\n        </p>\n      );\n    }\n    return result;\n  };\n\n  return (\n    <div className=\"bg-white mt-9 px-4\">\n      <div className=\"flex flex-row items-center gap-1\">\n        <FaAngleDoubleRight />\n        <span className={`font-extrabold text-lg`}>\n          Preferences at province level\n        </span>\n      </div>\n\n      <p>{displayMessage()}</p>\n    </div>\n  );\n};\n\nexport default ProvinceView;\n","import React from \"react\";\nimport { FaAngleDoubleRight } from \"react-icons/fa\";\nimport { ContractItemList } from \"../../containers/PlacementContract/Contract/Contract\";\n\ninterface AppProps {\n  data: ContractItemList[];\n  strict: boolean;\n  //   expandClick?: () => void;\n  //   loading: boolean;\n}\n\nconst SchoolView: React.FC<AppProps> = (props) => {\n  const displayMessage = (): JSX.Element => {\n    let result: JSX.Element = <></>;\n    let schools: string = \"\";\n    if (props.data.length === 0)\n      result = (\n        <p>\n          The system will place me in the available posts from all Schools of\n          the selected provinces, districts, and sectors.\n        </p>\n      );\n    else if (props.strict === false && props.data.length > 0) {\n      props.data.forEach((school, index) => {\n        schools += school.title;\n        if (index <= props.data.length - 1) schools += \", \";\n      });\n\n      result = (\n        <p>\n          The system will place me in the available posts{\" \"}\n          <span className=\"font-semibold\">starting</span> from{\" \"}\n          <span className=\"font-semibold\">{schools}</span> and in all remaining\n          schools from the selected schools, districts, and sectors.\n        </p>\n      );\n    } else if (props.strict === true && props.data.length > 0) {\n      props.data.forEach((school, index) => {\n        schools += school.title;\n        if (index <= props.data.length - 2) schools += \", \";\n        if (index === props.data.length - 2 && index > 0) schools += \" and \";\n      });\n\n      result = (\n        <p>\n          The system will <span className=\"font-semibold\">only</span> place me\n          in available posts in <span className=\"font-semibold\">{schools}</span>\n          .\n        </p>\n      );\n    }\n    return result;\n  };\n\n  return (\n    <div className=\"bg-white mt-9 px-4\">\n      <div className=\"flex flex-row items-center gap-1\">\n        <FaAngleDoubleRight />\n        <span className={`font-extrabold text-lg`}>\n          Preferences at school level\n        </span>\n      </div>\n\n      <p>{displayMessage()}</p>\n    </div>\n  );\n};\n\nexport default SchoolView;\n","import React from \"react\";\nimport { FaAngleDoubleRight } from \"react-icons/fa\";\nimport { ContractItemList } from \"../../containers/PlacementContract/Contract/Contract\";\n\ninterface AppProps {\n  data: ContractItemList[];\n  strict: boolean;\n  //   expandClick?: () => void;\n  //   loading: boolean;\n}\n\nconst SectorView: React.FC<AppProps> = (props) => {\n  const displayMessage = (): JSX.Element => {\n    let result: JSX.Element = <></>;\n    let sectors: string = \"\";\n    if (props.data.length === 0)\n      result = (\n        <p>The system will place me in the available posts from all sectors.</p>\n      );\n    else if (props.strict === false && props.data.length > 0) {\n      props.data.forEach((sector, index) => {\n        sectors += sector.title;\n        if (index <= props.data.length - 1) sectors += \", \";\n      });\n\n      result = (\n        <p>\n          The system will place me in the available posts{\" \"}\n          <span className=\"font-semibold\">starting</span> from{\" \"}\n          <span className=\"font-semibold\">{sectors}</span> and all remaining\n          sectors of the selected provinces and districts.\n        </p>\n      );\n    } else if (props.strict === true && props.data.length > 0) {\n      props.data.forEach((sector, index) => {\n        sectors += sector.title;\n        if (index <= props.data.length - 2) sectors += \", \";\n        if (index === props.data.length - 2 && index > 0) sectors += \" and \";\n      });\n\n      result = (\n        <p>\n          The system will <span className=\"font-semibold\">only</span> place me\n          in available posts in <span className=\"font-semibold\">{sectors}</span>\n          .\n        </p>\n      );\n    }\n    return result;\n  };\n\n  return (\n    <div className=\"bg-white mt-9 px-4\">\n      <div className=\"flex flex-row items-center gap-1\">\n        <FaAngleDoubleRight />\n        <span className={`font-extrabold text-lg`}>\n          Preferences at sector level\n        </span>\n      </div>\n\n      <p>{displayMessage()}</p>\n    </div>\n  );\n};\n\nexport default SectorView;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  FC_getLocations,\n  FC_LoadSchoolsByDistrict,\n  FC_LoadSchoolsByIDs,\n  FT_LoadSchoolsByDistrict,\n  FT_LoadSchoolsByIDs,\n  LocationAPI,\n  SchoolContract,\n} from \"../../actions\";\nimport {\n  FC_GetWaitingLocationList,\n  FT_GetWaitingLocationList,\n} from \"../../actions/location\";\nimport { ContractItemList } from \"../../containers/PlacementContract/Contract/Contract\";\nimport { ViewContractType } from \"../../interfaces/waitingList\";\nimport { StoreState } from \"../../reducers\";\nimport Loading from \"../Loading/Loading\";\nimport DistrictView from \"./DistrictView\";\nimport ProvinceView from \"./ProvinceView\";\nimport SchoolView from \"./SchoolView\";\nimport SectorView from \"./SectorView\";\n\ninterface ContractViewerProps {\n  // FROM PROPS\n  candidates: string;\n  position: string;\n  contract: ViewContractType;\n\n  // FROM REDUX =========\n  locations: LocationAPI | null;\n  FC_LoadSchoolsByDistrict: FT_LoadSchoolsByDistrict;\n  FC_LoadSchoolsByIDs: FT_LoadSchoolsByIDs;\n  FC_GetWaitingLocationList: FT_GetWaitingLocationList;\n}\n\ninterface ContractViewerState {\n  loading: boolean;\n  selectedSchool: SchoolContract[] | null;\n}\n\nclass ContractViewer extends Component<\n  ContractViewerProps,\n  ContractViewerState\n> {\n  constructor(props: ContractViewerProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      selectedSchool: null,\n    };\n  }\n\n  componentDidMount = () => {\n    if (this.props.locations === null)\n      FC_getLocations(\n        (status: boolean, data: LocationAPI | null, msg: string) => {\n          if (status === true && data !== null) {\n            this.props.FC_GetWaitingLocationList(data);\n            this.setState({\n              loading: false,\n            });\n          } else {\n            this.setState({\n              loading: false,\n            });\n          }\n        }\n      );\n    // else this.setState({ loading: false });\n    if (\n      this.state.selectedSchool === null &&\n      this.props.contract.school.values.length >= 1\n    ) {\n      this.setState({\n        loading: true,\n      });\n      this.props.FC_LoadSchoolsByIDs(\n        this.props.contract.school.values.map((itm) => itm.toString()),\n        (status, schools, err) => {\n          if (status === true) {\n            this.setState({\n              selectedSchool: schools,\n              loading: false,\n            });\n          }\n        }\n      );\n    } else this.setState({ loading: false, selectedSchool: [] });\n  };\n\n  render() {\n    if (\n      this.state.loading === true ||\n      this.props.locations === null ||\n      this.state.selectedSchool === null\n    ) {\n      return (\n        <div className=\"bg-white mt-6 mx-6 p-6 h-full flex flex-col items-start justify-center rounded\">\n          <div className=\"text-xl mx-4 my-4 animate-pulse\">\n            Loading contract, Please wait...\n          </div>\n          <Loading />\n        </div>\n      );\n    }\n\n    let ProvincesList: ContractItemList[] = [];\n    let DistrictList: ContractItemList[] = [];\n    let SectorList: ContractItemList[] = [];\n\n    if (this.props.contract !== null) {\n      // * Province\n      this.props.contract.province.values.forEach((el) => {\n        if (this.props.locations !== null) {\n          let findIt = this.props.locations.provinces.find(\n            (element) => element.province_code === el.toString()\n          );\n          if (findIt !== undefined) {\n            ProvincesList.push({\n              id: findIt.province_code,\n              title: findIt.province_name,\n            } as ContractItemList);\n          }\n        }\n      });\n\n      // * Province\n      this.props.contract.district.values.forEach((el) => {\n        if (this.props.locations !== null) {\n          let findIt = this.props.locations.districts.find(\n            (element) => element.district_code === el.toString()\n          );\n          if (findIt !== undefined) {\n            DistrictList.push({\n              id: findIt.district_code,\n              title: findIt.district_name,\n            } as ContractItemList);\n          }\n        }\n      });\n\n      // * Sector\n      this.props.contract.sector.values.forEach((el) => {\n        if (this.props.locations !== null) {\n          let findIt = this.props.locations.sectors.find(\n            (element) => element.sector_code === el.toString()\n          );\n          if (findIt !== undefined) {\n            SectorList.push({\n              id: findIt.sector_code,\n              title: findIt.sector_name,\n            } as ContractItemList);\n          }\n        }\n      });\n    }\n\n    const thisCandidate: JSX.Element = (\n      <span className=\"font-semibold\">{this.props.candidates}</span>\n    );\n    const thisPosition: JSX.Element = (\n      <span className=\"font-semibold\">{this.props.position}</span>\n    );\n\n    return (\n      <div className=\"pb-4\">\n        <div className=\"px-4\">\n          <h2 className=\"text-black text-center font-semibold text-2xl sm:text-3xl underline\">\n            Placement Preferences\n          </h2>\n\n          <div className=\"mt-6 text-lg flex flex-col\">\n            <p>Names: {thisCandidate}</p>\n            <p>Position: {thisPosition}</p>\n          </div>\n\n          {/* <p className=\"mt-5\">\n            This preferences were made by {thisCandidate} on {thisPosition}, by\n            Tempor in laborum culpa et consectetur elit occaecat cupidatat est\n            voluptate tempor deserunt non ea.\n          </p> */}\n        </div>\n\n        <ProvinceView\n          data={ProvincesList}\n          strict={this.props.contract.province.strict}\n        />\n\n        <DistrictView\n          data={DistrictList}\n          strict={this.props.contract.district.strict}\n        />\n\n        <SectorView\n          data={SectorList}\n          strict={this.props.contract.sector.strict}\n        />\n\n        <SchoolView\n          data={this.state.selectedSchool.map((itm) => ({\n            id: itm.school_code,\n            title: itm.school_name,\n          }))}\n          strict={this.props.contract.school.strict}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  locations,\n}: StoreState): {\n  locations: LocationAPI | null;\n} => {\n  return { locations: locations.waitingLocation };\n};\nexport default React.memo(\n  connect(mapStateToProps, {\n    FC_LoadSchoolsByDistrict,\n    FC_LoadSchoolsByIDs,\n    FC_GetWaitingLocationList,\n  })(ContractViewer)\n);\n","import React, { Component, Fragment } from \"react\";\nimport { BiExport, BiFilterAlt, BiSort } from \"react-icons/bi\";\nimport { FiEdit } from \"react-icons/fi\";\nimport { ImFilesEmpty } from \"react-icons/im\";\nimport { IoIosBriefcase } from \"react-icons/io\";\nimport { IoFilter } from \"react-icons/io5\";\nimport {\n  MdCheckBox,\n  MdCheckBoxOutlineBlank,\n  MdHistory,\n  MdRadioButtonChecked,\n  MdRadioButtonUnchecked,\n  MdSearch,\n} from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  schoolLevelsStoreInterface,\n  loadEducationCategories,\n  PushPopupAlert,\n} from \"../../../actions\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport { getPositions } from \"../../../actions/settings\";\nimport { getWaitingList } from \"../../../actions/waitingList\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport ContractViewer from \"../../../components/ContractViewer/ContractViewer\";\nimport {\n  generatePDF,\n  reportSettingsInterface,\n} from \"../../../components/DownloadPDF/rest\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport LoadingV2, { LoadingType } from \"../../../components/Loading/LoadingV2\";\nimport TableLoading from \"../../../components/Loading/TableLoading\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport {\n  SideNavigation,\n  MainItem,\n} from \"../../../components/Navigation/SideNavigation\";\nimport {\n  SessionPlanInterface,\n  PositionAPI,\n  education_category,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport {\n  applicantGender,\n  WaitingListDataInterface,\n  WaitingListInterface,\n  waitingListReportContentInterface,\n  waitingListReportContentKeyInterface,\n  WaitingListStatus,\n  WaitingListToPrintInterface,\n} from \"../../../interfaces/waitingList\";\nimport { StoreState } from \"../../../reducers\";\nimport {\n  capitalizeFirstLetter,\n  getPositionById,\n} from \"../../../shared/dataTest\";\nimport ExportToExcel from \"../../../utils/ExportToExcel\";\nimport { DATE, search, sortThisArray } from \"../../../utils/functions\";\nimport ChooseSession from \"../../SessionSettings/ChooseSession\";\nimport NoSession from \"../../SessionSettings/NoSession\";\n\nexport const getPeriodById = (\n  allSession: SessionPlanInterface[],\n  period_id: string\n): SessionPlanInterface | undefined => {\n  return allSession.find((item) => item.session_plan_id === period_id);\n};\n\nconst searchData = (\n  objList: WaitingListDataInterface[],\n  text: string\n): WaitingListDataInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (\n        prop === \"names\" ||\n        prop === \"gender\" ||\n        prop === \"national_id\" ||\n        prop === \"phone\" ||\n        prop === \"email\" ||\n        prop === \"user_position_marks\" ||\n        prop === \"position_title\" ||\n        prop === \"education_category\" ||\n        prop === \"waitingList_session\" ||\n        prop === \"date\" ||\n        prop === \"waiting_status\"\n      ) {\n        if (product[prop]) {\n          flag =\n            product[prop]!.toString()\n              .toLowerCase()\n              .indexOf(text.toLowerCase()) > -1;\n        }\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n};\n\nconst defaultReportContent: waitingListReportContentInterface[] = [\n  {\n    key: waitingListReportContentKeyInterface.names,\n    title: \"Applicant Names\",\n    status: true,\n  },\n  {\n    key: waitingListReportContentKeyInterface.national_id,\n    title: \"National ID\",\n    status: true,\n  },\n  {\n    key: waitingListReportContentKeyInterface.gender,\n    title: \"Gender\",\n    status: true,\n  },\n  {\n    key: waitingListReportContentKeyInterface.phone,\n    title: \"Phone\",\n    status: true,\n  },\n  {\n    key: waitingListReportContentKeyInterface.user_position_marks,\n    title: \"Applicant marks\",\n    status: true,\n  },\n  {\n    key: waitingListReportContentKeyInterface.waitingList_session,\n    title: \"Waiting list Session\",\n    status: true,\n  },\n  {\n    key: waitingListReportContentKeyInterface.education_category,\n    title: \"Education Institute\",\n    status: true,\n  },\n  {\n    key: waitingListReportContentKeyInterface.date,\n    title: \"Waiting list Date\",\n    status: true,\n  },\n  {\n    key: waitingListReportContentKeyInterface.waiting_status,\n    title: \"Waiting list Status\",\n    status: true,\n  },\n  {\n    key: waitingListReportContentKeyInterface.position_title,\n    title: \"Position\",\n    status: true,\n  },\n];\n\ntype AppProps = {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  systemPositions: PositionAPI[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  waitingList: WaitingListInterface[] | null;\n  getWaitingList: Function;\n  getPositions: Function;\n  GetAllSessionPlans: Function;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype AppState = {\n  thisPeriod: SessionPlanInterface | \"all\";\n  loading: boolean;\n  loadingWaitingList: boolean;\n  waitingListToPrint: WaitingListToPrintInterface[] | null;\n  thisWaitingListStatus: WaitingListStatus | \"all\";\n  thisPosition: PositionAPI | null;\n  selectPosition: boolean;\n  sortProperty: string;\n  isSorted: boolean;\n  sortOrder: \"ASC\" | \"DESC\";\n  searchInput: string;\n  searchPositionInput: string;\n  downloading: boolean;\n  generateReportModal: {\n    reportType: \"EXCEL\" | \"PDF\";\n    status: boolean;\n  } | null;\n  reportTitle: string;\n  reportContent: waitingListReportContentInterface[];\n  selectAll: boolean;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  selectPeriod: boolean;\n  selectedWaiting: WaitingListDataInterface | null;\n  thisEducation: education_category | \"all\";\n};\n\nclass _WaitingListReport extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      thisPeriod: \"all\",\n      loading: true,\n      loadingWaitingList: true,\n      waitingListToPrint: null,\n      thisWaitingListStatus: \"all\",\n      thisPosition: null,\n      selectPosition: false,\n      sortProperty: \"\",\n      isSorted: false,\n      sortOrder: \"ASC\",\n      searchInput: \"\",\n      searchPositionInput: \"\",\n      downloading: false,\n      generateReportModal: null,\n      reportTitle: \"\",\n      reportContent: defaultReportContent,\n      selectAll: true,\n      formError: null,\n      selectPeriod: false,\n      thisEducation: \"all\",\n      selectedWaiting: null,\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingWaitingList = (value: boolean) => {\n    this.setState({ loadingWaitingList: value });\n  };\n\n  setThisPeriod = (value: SessionPlanInterface | \"all\") => {\n    this.setState({ thisPeriod: value });\n  };\n\n  setWaitingListToPrint = (value: WaitingListToPrintInterface[] | null) => {\n    this.setState({ waitingListToPrint: value });\n  };\n\n  setThisWaitingListStatus = (value: WaitingListStatus | \"all\") => {\n    this.setState({ thisWaitingListStatus: value });\n  };\n\n  setThisPosition = (value: PositionAPI | null) => {\n    this.setState({ thisPosition: value });\n  };\n\n  setSelectPosition = (value: boolean) => {\n    this.setState({ selectPosition: value });\n  };\n\n  setSortProperty = (value: string | \"all\") => {\n    this.setState({ sortProperty: value });\n  };\n\n  setIsSorted = (value: boolean) => {\n    this.setState({ isSorted: value });\n  };\n\n  setSortOrder = (value: \"ASC\" | \"DESC\") => {\n    this.setState({ sortOrder: value });\n  };\n\n  setSearchInput = (value: string) => {\n    this.setState({ searchInput: value });\n  };\n\n  setSearchPositionInput = (value: string) => {\n    this.setState({ searchPositionInput: value });\n  };\n\n  setDownloading = (value: boolean) => {\n    this.setState({ downloading: value });\n  };\n\n  setGenerateReportModal = (\n    value: {\n      reportType: \"EXCEL\" | \"PDF\";\n      status: boolean;\n    } | null\n  ) => {\n    this.setState({ generateReportModal: value });\n  };\n\n  setReportTitle = (value: string) => {\n    this.setState({ reportTitle: value });\n  };\n\n  setReportContent = (value: waitingListReportContentInterface[]) => {\n    this.setState({ reportContent: value });\n  };\n\n  setSelectAll = (value: boolean) => {\n    this.setState({ selectAll: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n\n  setSelectPeriod = (value: boolean) => {\n    this.setState({ selectPeriod: value });\n  };\n\n  setThisEducation = (value: education_category | \"all\") => {\n    this.setState({ thisEducation: value });\n  };\n\n  componentDidMount = () => {\n    // LOADING EDUCATION CATEGORY =================================\n    if (\n      this.props.schoolLevels.education_categories === null ||\n      this.props.schoolLevels.education_categories.length === 0\n    ) {\n      this.props.loadEducationCategories(this.setLoading);\n    }\n    // END LOADING EDUCATION CATEGORY =================================\n    // ###################################################################\n    // LOADING APPLICATION SESSION ====================================\n    if (this.props.application_sessions === null) {\n      this.props.GetAllSessionPlans((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (!status) {\n          if (msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n    // END LOADING APPLICATION SESSION ====================================\n    // ###################################################################\n    // LOADING POSITIONS ====================================\n    if (this.props.systemPositions === null) {\n      this.props.getPositions((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    }\n\n    // LOADING WAITING LIST ========================================\n    if (this.state.loadingWaitingList) {\n      this.props.getWaitingList((status: boolean, msg: string) => {\n        this.setLoadingWaitingList(status);\n        if (status === false) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n    // END LOADING CLAIM TYPES ========================================\n  };\n\n  setSort = (thisProperty: string) => {\n    if (\n      this.state.sortProperty === thisProperty &&\n      this.state.sortOrder === \"ASC\"\n    ) {\n      this.setSortOrder(\"DESC\");\n    } else {\n      this.setSortOrder(\"ASC\");\n    }\n    this.setSortProperty(thisProperty);\n    this.setIsSorted(true);\n  };\n\n  showStatus = (status: WaitingListStatus | \"all\"): string => {\n    let result: string = \"\";\n    switch (status) {\n      case WaitingListStatus.WAITING:\n        result = \"Waiting\";\n        break;\n      case WaitingListStatus.PENDING:\n        result = \"Placed & pending\";\n        break;\n      case WaitingListStatus.PLACED:\n        result = \"Placed & confirmed\";\n        break;\n      default:\n        result = \"All\";\n        break;\n    }\n\n    return result;\n  };\n\n  FC_WaitingListStatus = (\n    WaitingList: WaitingListDataInterface[]\n  ): {\n    title: string;\n    count: number;\n    type: WaitingListStatus | \"all\";\n  }[] => {\n    let output: {\n      title: string;\n      count: number;\n      type: WaitingListStatus | \"all\";\n    }[] = [{ title: \"All status\", count: WaitingList.length, type: \"all\" }];\n    const statusArray = Object.values(WaitingListStatus);\n    for (let i in statusArray) {\n      output.push({\n        title: capitalizeFirstLetter(statusArray[i]),\n        count: WaitingList.filter((itm) => itm.status === statusArray[i])\n          .length,\n        type: statusArray[i],\n      });\n    }\n    return output;\n  };\n\n  updateReportContent = (key: waitingListReportContentKeyInterface) => {\n    let index: number = this.state.reportContent.findIndex(\n      (item) => item.key === key\n    );\n    let newArray: waitingListReportContentInterface[] =\n      this.state.reportContent;\n    newArray[index].status = !newArray[index].status;\n    this.setReportContent(newArray);\n    let isSelectAllNeeded = newArray.find((item) => item.status === false);\n    if (isSelectAllNeeded) {\n      this.setSelectAll(false);\n    } else {\n      this.setSelectAll(true);\n    }\n\n    // UPDATE APPLICATION LIST FOR UPDATE ==============================\n    this.updateWaitingListToPrint();\n  };\n\n  updateWaitingListToPrint = () => {\n    // UPDATE REPORT TITLE ========================\n    if (this.state.thisPosition) {\n      let session: string = \"\";\n      if (this.state.thisPeriod === \"all\") {\n        session = \"All session\";\n      } else {\n        session = this.state.thisPeriod.session_plan_name;\n      }\n      this.setReportTitle(\n        \"Waiting list - \" +\n          this.state.thisPosition.position_title +\n          \" - \" +\n          session\n      );\n    }\n    // UPDATE CONTENT =============================\n    if (\n      this.props.systemPositions &&\n      this.props.waitingList &&\n      this.props.application_sessions\n    ) {\n      let arrayNew: WaitingListToPrintInterface[] = [];\n      let n: number = 1;\n      for (const key in this.props.waitingList) {\n        if (Object.prototype.hasOwnProperty.call(this.props.waitingList, key)) {\n          const element = this.props.waitingList[key];\n          const thisPosition = getPositionById(\n            this.props.systemPositions,\n            element.position_id\n          );\n          const thisSession = getPeriodById(\n            this.props.application_sessions,\n            element.session_id\n          );\n          let dataArray: WaitingListToPrintInterface = {\n            id: n.toString(),\n            names: element.user_info.fname + \" \" + element.user_info.lname,\n            gender: element.user_info.sex === \"M\" ? \"Male\" : \"Female\",\n            national_id: element.n_id,\n            phone: element.phone_number,\n            email: element.email,\n            user_position_marks: Number(element.marks.toFixed(2)),\n            position_title: thisPosition\n              ? thisPosition.position_title\n              : \"Unknown position\",\n            education_category: thisPosition\n              ? thisPosition.education_institute_id.education_category_title\n              : \"-\",\n            waitingList_session: thisSession\n              ? thisSession.session_plan_name\n              : \"Unknown session\",\n            date: DATE(element.createdAt),\n            waiting_status: this.showStatus(element.status),\n          };\n\n          for (const key in this.state.reportContent) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                this.state.reportContent,\n                key\n              )\n            ) {\n              if (!this.state.reportContent[key].status) {\n                delete dataArray[this.state.reportContent[key].key];\n              }\n            }\n          }\n          arrayNew.push(dataArray);\n          n++;\n        }\n      }\n      this.setWaitingListToPrint(arrayNew);\n      arrayNew = [];\n      n = 1;\n    }\n  };\n\n  FC_WaitingListData = (\n    allWaitList: WaitingListInterface[] | null,\n    systemPositions: PositionAPI[] | null\n  ): WaitingListDataInterface[] | null => {\n    if (\n      allWaitList === null ||\n      systemPositions === null ||\n      this.props.application_sessions === null\n    )\n      return null;\n    let arrayNew: WaitingListDataInterface[] = [];\n    // LOOP IN ALL WAITING LIST ONE BY ONE ###########################\n    for (const key in allWaitList) {\n      const element = allWaitList[key];\n      if (element.user_info) {\n        const thisPosition = getPositionById(\n          systemPositions,\n          element.position_id\n        );\n        const thisSession = getPeriodById(\n          this.props.application_sessions,\n          element.session_id\n        );\n        let dataArray: WaitingListDataInterface = {\n          names: element.user_info.fname + \" \" + element.user_info.lname,\n          waitingList_id: element._id,\n          gender:\n            element.user_info.sex === \"M\"\n              ? applicantGender.male\n              : applicantGender.female,\n          national_id: element.n_id,\n          phone: element.phone_number,\n          email: element.email,\n          user_position_marks: Number(element.marks.toFixed(2)),\n          position_id: thisPosition\n            ? thisPosition.position_id\n            : \"Unknown position\",\n          position_title: thisPosition\n            ? thisPosition.position_title\n            : \"Unknown position\",\n          education_category: thisPosition\n            ? thisPosition.education_institute_id.education_category_title\n            : \"\",\n          education_category_id: thisPosition\n            ? thisPosition.education_institute_id.education_institute_id\n            : \"\",\n          waitingList_session: thisSession\n            ? thisSession.session_plan_name\n            : \"Unknown session\",\n          date: DATE(element.createdAt),\n          waiting_status: this.showStatus(element.status),\n          status: element.status,\n          waitingList_session_id: element.session_id,\n        };\n        arrayNew.push(dataArray);\n      }\n    }\n    return arrayNew;\n  };\n\n  resetReportContent = (currentState: boolean) => {\n    let newArray: waitingListReportContentInterface[] =\n      this.state.reportContent;\n    for (const key in newArray) {\n      if (this.isChangeAllowed(newArray[key].key)) {\n        newArray[key].status = !currentState;\n      }\n    }\n\n    this.setReportContent(newArray);\n    this.setSelectAll(!currentState);\n    this.updateWaitingListToPrint();\n  };\n\n  isChangeAllowed = (key: waitingListReportContentKeyInterface): boolean => {\n    if (\n      key === waitingListReportContentKeyInterface.names ||\n      key === waitingListReportContentKeyInterface.waiting_status ||\n      key === waitingListReportContentKeyInterface.waitingList_session ||\n      key === waitingListReportContentKeyInterface.position_title ||\n      key === waitingListReportContentKeyInterface.date ||\n      key === waitingListReportContentKeyInterface.user_position_marks ||\n      key === waitingListReportContentKeyInterface.national_id ||\n      key === waitingListReportContentKeyInterface.education_category\n    ) {\n      return false;\n    }\n    return true;\n  };\n\n  generateReportTitle = (position_title: string) => {\n    let session: string = \"\";\n    if (this.state.thisPeriod === \"all\") {\n      session = \"All session\";\n    } else {\n      session = this.state.thisPeriod.session_plan_name;\n    }\n    this.setReportTitle(\"Waiting list - \" + position_title + \" - \" + session);\n  };\n\n  FC_GeneratePDF = () => {\n    if (!document.querySelectorAll(\"#report_content tbody tr\").length) {\n      this.props.PushPopupAlert({\n        title: `Can't generate Report of empty Data`,\n        theme: PopupAlertTheme.warning,\n      });\n      return;\n    }\n\n    let session: string = \"\";\n    if (this.state.thisPeriod === \"all\") {\n      session = \"All session\";\n    } else {\n      session = this.state.thisPeriod.session_plan_name;\n    }\n    const table: HTMLElement | null = document.getElementById(\"report_content\");\n    const reportSettings: reportSettingsInterface = {\n      doneBy: this.props.auth.user.fname + \" \" + this.props.auth.user.lname,\n      title: this.state.reportTitle,\n      subjectTitle: \"Position\",\n      subject: this.state.thisPosition\n        ? this.state.thisPosition.position_title\n        : \"All position\",\n      period: session,\n      footer: \"Online Teacher Recruitment\",\n      institute: this.state.thisPosition\n        ? this.state.thisPosition.education_institute_id\n            .education_category_title\n        : \"\",\n    };\n    table && generatePDF(reportSettings, table, this.setDownloading);\n  };\n\n  FC_FilterWaitingList = (\n    allWaitList: WaitingListDataInterface[],\n    waitingListStatus: WaitingListStatus | \"all\",\n    thisSession: SessionPlanInterface | \"all\",\n    institute: education_category | \"all\",\n    position: PositionAPI | null\n  ): WaitingListDataInterface[] => {\n    let result: WaitingListDataInterface[] = allWaitList;\n    if (waitingListStatus !== \"all\") {\n      result = result.filter((item) => item.status === waitingListStatus);\n    }\n\n    if (position) {\n      result = result.filter(\n        (item) => item.position_id === position.position_id\n      );\n    }\n\n    if (thisSession !== \"all\") {\n      result = result.filter(\n        (item) => item.waitingList_session_id === thisSession.session_plan_id\n      );\n    }\n\n    if (institute !== \"all\") {\n      result = result.filter(\n        (item) => item.education_category === institute.education_category_title\n      );\n    }\n\n    return result;\n  };\n\n  viewContractor = (\n    waitingData: WaitingListDataInterface\n  ): WaitingListInterface | undefined => {\n    let result = undefined;\n\n    if (this.props.waitingList)\n      result = this.props.waitingList.find(\n        (item) => item._id === waitingData.waitingList_id\n      );\n    return result;\n  };\n\n  render() {\n    if (\n      this.props.application_sessions &&\n      this.props.application_sessions.length === 0\n    ) {\n      return <NoSession />;\n    }\n\n    return (\n      <div>\n        <SideNavigation>\n          <div className=\"flex flex-col mb-4\">\n            <span className=\"text-sm text-gray-600 mb-2\">\n              Education categories:\n            </span>\n            {this.props.schoolLevels.education_categories === null ? (\n              <Loading />\n            ) : this.props.schoolLevels.education_categories.length === 0 ? (\n              <span>No institute found</span>\n            ) : (\n              <Fragment>\n                <div\n                  onClick={() => this.setThisEducation(\"all\")}\n                  className={`border rounded px-2 py-2 mb-2 cursor-pointer ${\n                    this.state.thisEducation === \"all\"\n                      ? \"bg-blue-600 text-white hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                      : \"hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                  } font-bold flex flex-row items-center gap-2`}\n                >\n                  {this.state.thisEducation === \"all\" ? (\n                    <MdRadioButtonChecked />\n                  ) : (\n                    <MdRadioButtonUnchecked />\n                  )}\n                  <span>All</span>\n                </div>\n                {this.props.schoolLevels.education_categories.map((item, i) => (\n                  <div\n                    onClick={() => this.setThisEducation(item)}\n                    key={i + 1}\n                    className={`border rounded px-2 py-2 mb-2 cursor-pointer ${\n                      this.state.thisEducation !== \"all\" &&\n                      this.state.thisEducation.education_institute_id ===\n                        item.education_institute_id\n                        ? \"bg-blue-600 text-white hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                        : \"hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                    } font-bold flex flex-row items-center gap-2`}\n                  >\n                    {this.state.thisEducation !== \"all\" &&\n                    this.state.thisEducation.education_institute_id ===\n                      item.education_institute_id ? (\n                      <MdRadioButtonChecked />\n                    ) : (\n                      <MdRadioButtonUnchecked />\n                    )}\n                    <span>{item.education_category_title}</span>\n                  </div>\n                ))}\n              </Fragment>\n            )}\n          </div>\n          <div className=\"\">\n            <div className=\"text-gray-600 text-sm mb-2\">Selected period:</div>\n            <div\n              onClick={() => this.setSelectPeriod(true)}\n              className=\"font-bold bg-blue-50 border border-blue-200 rounded py-2 cursor-pointer text-base px-2 hover:underline  text-blue-600  mb-4 w-full flex flex-row items-center gap-2 justify-between animate__animated animate__zoomIn\"\n            >\n              {this.state.thisPeriod !== \"all\"\n                ? `${this.state.thisPeriod.session_plan_name} - ${this.state.thisPeriod.period}`\n                : \"All session\"}\n              <FiEdit className=\"text-xl text-blue-600\" />\n            </div>\n          </div>\n\n          <div className=\"pt-1\">\n            <div className=\"text-sm text-gray-700 pb-2 pt-2\">Claim types:</div>\n            {this.state.loadingWaitingList ||\n            this.FC_WaitingListData(\n              this.props.waitingList,\n              this.props.systemPositions\n            ) === null ? (\n              <Loading />\n            ) : (\n              this.FC_WaitingListStatus(\n                this.FC_WaitingListData(\n                  this.props.waitingList,\n                  this.props.systemPositions\n                )!\n              ).map((item, index: number) => (\n                <div\n                  onClick={() => this.setThisWaitingListStatus(item.type)}\n                  key={item.title + index}\n                >\n                  <MainItem\n                    title={item.title}\n                    count={item.count}\n                    active={this.state.thisWaitingListStatus === item.type}\n                  />\n                </div>\n              ))\n            )}\n          </div>\n        </SideNavigation>\n\n        <section>\n          {/* REPORT TITLE ============================================ */}\n          <div className=\"grid md:grid-cols-12\">\n            <div className=\"col-span-6\">\n              <div className=\"mt-4 mx-4 flex flex-col gap-1\">\n                <span className=\"text-3xl font-bold text-gray-700\">\n                  Waiting list report\n                </span>\n                <div\n                  onClick={() => this.setSelectPosition(true)}\n                  className=\"flex flex-row gap-2\"\n                >\n                  <span className=\"text-gray-500\">Selected position: </span>\n                  <span className=\"text-blue-600 font-bold underline cursor-pointer\">\n                    {this.state.thisPosition !== null\n                      ? this.state.thisPosition.position_title\n                      : \"All position\"}\n                  </span>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-span-6\">\n              <div className=\"float-right mt-2\">\n                {this.props.waitingList && this.props.waitingList.length > 0 && (\n                  <div className=\"flex flex-row items-center justify-end font-bold mb-2\">\n                    <BiExport className=\"text-2xl text-gray-500\" />\n                    <span className=\"text-gray-500\">Export as</span>\n                    <button\n                      className=\"px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200\"\n                      disabled={this.state.loading}\n                      onClick={() => {\n                        this.updateWaitingListToPrint();\n                        this.setGenerateReportModal({\n                          reportType: \"EXCEL\",\n                          status: true,\n                        });\n                      }}\n                    >\n                      EXCEL\n                    </button>\n                    <button\n                      className={`px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200 ${\n                        this.state.downloading && \"cursor-wait\"\n                      }`}\n                      onClick={() => this.FC_GeneratePDF()}\n                      disabled={this.state.loading || this.state.downloading}\n                    >\n                      PDF\n                    </button>\n                  </div>\n                )}\n                <div\n                  onClick={() => this.setSelectPosition(true)}\n                  className=\"btn bg-blue-50 border border-blue-300 text-blue-600 cursor-pointer hover:bg-blue-100 flex flex-row items-center justify-center gap-2 text-sm \"\n                >\n                  <BiFilterAlt className=\"text-xl\" />\n                  Filter by position\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* END REPORT TITLE ============================================ */}\n\n          <div className=\"bg-white my-4\">\n            <div className=\"w-full px-2 py-2\">\n              <input\n                onChange={(e) => this.setSearchInput(e.target.value)}\n                type=\"text\"\n                value={this.state.searchInput}\n                placeholder=\"Search...\"\n                className=\"w-full bg-gray-100 py-2 px-3 rounded focus:border-gray-800\"\n                disabled={\n                  this.state.loadingWaitingList ||\n                  this.FC_WaitingListData(\n                    this.props.waitingList,\n                    this.props.systemPositions\n                  ) === null\n                }\n              />\n            </div>\n            <div className=\"w-full overflow-x-auto\">\n              <table className=\"w-full shadow\" id=\"report_content\">\n                <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                  <tr>\n                    <td className=\"px-2 py-2\">#</td>\n                    <td\n                      className=\"px-2 py-2 cursor-pointer\"\n                      onClick={() => this.setSort(\"names\")}\n                    >\n                      <div className=\"flex items-center gap-1\">\n                        Applicant names <BiSort />\n                      </div>\n                    </td>\n                    <td className=\"px-2 py-2\">National ID</td>\n                    <td\n                      className=\"px-2 py-2 cursor-pointer\"\n                      onClick={() => this.setSort(\"gender\")}\n                    >\n                      <div className=\"flex items-center gap-1\">\n                        Gender <BiSort />\n                      </div>\n                    </td>\n                    <td className=\"px-2 py-2\">Phone</td>\n                    <td\n                      className=\"px-2 py-2 cursor-pointer\"\n                      onClick={() => this.setSort(\"user_position_marks\")}\n                    >\n                      <div className=\"flex items-center gap-1\">\n                        Marks <BiSort />\n                      </div>\n                    </td>\n                    <td\n                      className=\"px-2 py-2 cursor-pointer\"\n                      onClick={() => this.setSort(\"position_title\")}\n                    >\n                      <div className=\"flex items-center gap-1\">\n                        Position <BiSort />\n                      </div>\n                    </td>\n                    <td\n                      className=\"px-2 py-2 cursor-pointer\"\n                      onClick={() => this.setSort(\"education_category\")}\n                    >\n                      <div className=\"flex items-center gap-1\">\n                        Institute <BiSort />\n                      </div>\n                    </td>\n                    <td\n                      className=\"px-2 py-2 cursor-pointer\"\n                      onClick={() => this.setSort(\"waiting_status\")}\n                    >\n                      <div className=\"flex items-center gap-1\">\n                        Status <BiSort />\n                      </div>\n                    </td>\n                    <td\n                      className=\"px-2 py-2 cursor-pointer\"\n                      onClick={() => this.setSort(\"waitingList_session\")}\n                    >\n                      <div className=\"flex items-center gap-1\">\n                        Session <BiSort />\n                      </div>\n                    </td>\n                    <td\n                      className=\"px-2 py-2 cursor-pointer\"\n                      onClick={() => this.setSort(\"date\")}\n                    >\n                      <div className=\"flex items-center gap-1\">\n                        Date <BiSort />\n                      </div>\n                    </td>\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.state.loadingWaitingList ? (\n                    <TableLoading cols={11} />\n                  ) : this.FC_WaitingListData(\n                      this.props.waitingList,\n                      this.props.systemPositions\n                    ) === null ? (\n                    <TableLoading cols={10} />\n                  ) : this.FC_FilterWaitingList(\n                      this.FC_WaitingListData(\n                        this.props.waitingList,\n                        this.props.systemPositions\n                      )!,\n                      this.state.thisWaitingListStatus,\n                      this.state.thisPeriod,\n                      this.state.thisEducation,\n                      this.state.thisPosition\n                    ).length === 0 ? (\n                    <tr>\n                      <td colSpan={11} className=\"px-2 py-2\">\n                        <div className=\"flex flex-col text-gray-400 items-center justify-center bg-gray-100 rounded py-10\">\n                          <ImFilesEmpty className=\"text-8xl text-gray-400 mb-2 animate__animated animate__shakeX\" />\n                          <span className=\"text-sm font-bold\">\n                            No result found! Please try to search again\n                          </span>\n                          <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n                            <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                              <li\n                                onClick={() => this.setSelectPosition(true)}\n                                className=\"underline text-gray-500 cursor-pointer\"\n                              >\n                                Filter by position\n                              </li>\n                              <li className=\"text-gray-400 italic\">or</li>\n                              <li\n                                className=\"text-gray-500 underline\"\n                                onClick={() => this.setSelectPeriod(true)}\n                              >\n                                Filter by period\n                              </li>\n                            </ul>\n                          </div>\n                        </div>\n                      </td>\n                    </tr>\n                  ) : (\n                    sortThisArray(\n                      this.state.isSorted,\n                      searchData(\n                        this.FC_FilterWaitingList(\n                          this.FC_WaitingListData(\n                            this.props.waitingList,\n                            this.props.systemPositions\n                          )!,\n                          this.state.thisWaitingListStatus,\n                          this.state.thisPeriod,\n                          this.state.thisEducation,\n                          this.state.thisPosition\n                        ),\n                        this.state.searchInput\n                      ),\n                      this.state.sortProperty,\n                      this.state.sortOrder\n                    ).map((item: WaitingListDataInterface, i: number) => (\n                      <tr\n                        key={i + 1}\n                        className={`${\n                          i % 2 !== 0 ? \"bg-gray-100\" : \"bg-white\"\n                        } text-gray-600 hover:bg-blue-100 hover:text-blue-700 cursor-pointer border-b border-gray-300 hover:border-blue-500 text-sm`}\n                        onClick={() => this.setState({ selectedWaiting: item })}\n                      >\n                        <td className=\"px-2 py-2\">{i + 1}</td>\n                        <td className=\"px-2 py-2\">{item.names}</td>\n                        <td className=\"px-2 py-2\">{item.national_id}</td>\n                        <td className=\"px-2 py-2\">{item.gender}</td>\n                        <td className=\"px-2 py-2\">{item.phone}</td>\n                        <td className=\"px-2 py-2\">\n                          {item.user_position_marks}\n                        </td>\n                        <td className=\"px-2 py-2\">{item.position_title}</td>\n                        <td className=\"px-2 py-2\">{item.education_category}</td>\n                        <td className=\"px-2 py-2\">\n                          {capitalizeFirstLetter(\n                            item.waiting_status.toLowerCase()\n                          )}\n                        </td>\n                        <td className=\"px-2 py-2\">\n                          {item.waitingList_session}\n                        </td>\n                        <td className=\"px-2 py-2\">{item.date}</td>\n                      </tr>\n                    ))\n                  )}\n                </tbody>\n              </table>\n            </div>\n          </div>\n\n          {/* CHOOSING POSITION MODAL */}\n          {this.state.selectPosition && (\n            <Modal\n              title={\n                <div className=\"flex flex-row gap-4 items-center\">\n                  <IoFilter className=\"text-5xl text-blue-600\" />\n                  <div className=\"flex flex-col\">\n                    <span className=\"font-bold text-xl text-blue-600\">\n                      Filter by a position\n                    </span>\n                  </div>\n                </div>\n              }\n              backDrop={true}\n              theme={Themes.default}\n              close={() => {\n                this.setSelectPosition(false);\n                this.setSearchPositionInput(\"\");\n              }}\n              backDropClose={true}\n              widthSizeClass={ModalSize.extraLarge}\n              displayClose={true}\n              padding={{ title: true }}\n            >\n              <div className=\"px-2 pb-2\">\n                {this.props.systemPositions === null ? (\n                  <LoadingV2 type={LoadingType.dark} />\n                ) : this.props.systemPositions.length === 0 ? (\n                  <div className=\"flex flex-col text-gray-400 items-center justify-center\">\n                    <MdSearch className=\"text-6xl\" />\n                    <div className=\"flex flex-col items-center justify-center\">\n                      <span>No positions found! Please go back!</span>\n                    </div>\n                  </div>\n                ) : (\n                  <>\n                    <div className=\"flex flex-col\">\n                      <span className=\"text-gray-600 text-xs font-bold\">\n                        Filter by position name\n                      </span>\n                      <input\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                          this.setSearchPositionInput(e.target.value)\n                        }\n                        type=\"text\"\n                        className=\"mb-4 bg-gray-100 px-3 py-2 rounded\"\n                        placeholder=\"Keyword...\"\n                      />\n                    </div>\n                    <div\n                      onClick={() => {\n                        this.generateReportTitle(\"All position\");\n                        this.setThisPosition(null);\n                        this.setSelectPosition(false);\n                        this.setSearchPositionInput(\"\");\n                      }}\n                      className=\"bg-white cursor-pointer rounded  px-3 py-2 border border-gray-200 hover:border-blue-500 hover:bg-blue-100 mb-2\"\n                    >\n                      <div className=\"grid lg:grid-cols-12\">\n                        <div className=\"col-span-12 lg:col-span-10\">\n                          <div className=\"flex flex-row items-center gap-3\">\n                            <div>\n                              <IoIosBriefcase className=\"text-4xl md:text-5xl text-blue-600\" />\n                            </div>\n                            <div className=\"flex flex-col\">\n                              <span className=\"text-base lg:text-lg font-bold text-gray-700\">\n                                All position\n                              </span>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-span-12 lg:col-span-2 hidden lg:block\">\n                          <div className=\"h-full flex items-center justify-end\">\n                            <div className=\"btn bg-blue-600 text-white float-right\">\n                              Choose\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    {search(\n                      this.props.systemPositions,\n                      this.state.searchPositionInput\n                    ).map((item: PositionAPI, key: number) => (\n                      <div\n                        key={key + 1}\n                        onClick={() => {\n                          this.generateReportTitle(item.position_title);\n                          this.setThisPosition(item);\n                          this.setSelectPosition(false);\n                          this.setSearchPositionInput(\"\");\n                        }}\n                        className=\"bg-white cursor-pointer rounded  px-3 py-2 border border-gray-200 hover:border-blue-500 hover:bg-blue-100 mb-2\"\n                      >\n                        <div className=\"grid lg:grid-cols-12\">\n                          <div className=\"col-span-12 lg:col-span-10\">\n                            <div className=\"flex flex-row items-center gap-3\">\n                              <div>\n                                <IoIosBriefcase className=\"text-4xl md:text-5xl text-blue-600\" />\n                              </div>\n                              <div className=\"flex flex-col\">\n                                <span className=\"text-xs lg:text-sm font-bold text-gray-700\">\n                                  {item.position_title}\n                                </span>\n                                <span className=\"text-xs text-gray-500 italic\">\n                                  School level:{\" \"}\n                                  <span\n                                    className=\"text-gray-800 font-light\"\n                                    style={{ fontStyle: \"normal\" }}\n                                  >\n                                    {item.school_level_id.school_level_name}\n                                  </span>\n                                </span>\n                                <span className=\"text-xs font-bold text-blue-600 bg-blue-100 w-max px-3 py-1 rounded-full\">\n                                  {\n                                    item.education_institute_id\n                                      .education_category_title\n                                  }\n                                </span>\n                              </div>\n                            </div>\n                          </div>\n                          <div className=\"col-span-12 lg:col-span-2 hidden lg:block\">\n                            <div className=\"h-full flex items-center justify-end\">\n                              <div className=\"btn bg-blue-600 text-white float-right\">\n                                Choose\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </>\n                )}\n              </div>\n            </Modal>\n          )}\n          {/* END CHOOSING POSITION MODAL */}\n\n          {/* ####################################################################################### */}\n\n          {/* CHOOSING PERIOD CONTENT MODAL */}\n          {this.state.selectPeriod && (\n            <Modal\n              title={\n                <div className=\"flex flex-row gap-4 items-center\">\n                  <MdHistory className=\"text-5xl text-blue-600\" />\n                  <span className=\"flex flex-col\">Choose a period</span>\n                </div>\n              }\n              backDrop={true}\n              theme={Themes.default}\n              close={() => this.setSelectPeriod(false)}\n              backDropClose={true}\n              widthSizeClass={ModalSize.extraLarge}\n              displayClose={true}\n              padding={{ title: true }}\n            >\n              <ChooseSession\n                allSession={this.props.application_sessions}\n                setSelectSession={(value: SessionPlanInterface | \"all\") => {\n                  this.setThisPeriod(value);\n                  this.setSelectPeriod(false);\n                }}\n                chooseAll={true}\n                currentSelected={this.state.thisPeriod}\n              />\n            </Modal>\n          )}\n          {/* END CHOOSING PERIOD CONTENT MODAL */}\n\n          {/* ####################################################################################### */}\n\n          {/* GENERATE DYNAMIC REPORT CONTENT MODAL */}\n          {this.state.generateReportModal !== null &&\n            this.state.generateReportModal.status === true && (\n              <Modal\n                title={\n                  <div className=\"flex flex-row gap-4 items-center\">\n                    {/* <IoBriefcase className=\"text-5xl text-gray-500\" /> */}\n                    <div className=\"flex flex-col\">\n                      <span className=\"font-bold text-2xl text-gray-500\">\n                        Generating Report contents\n                      </span>\n                      <span className=\"text-sm text-blue-600 font-normal\">\n                        Generating {this.state.generateReportModal.reportType}{\" \"}\n                        Report\n                      </span>\n                    </div>\n                  </div>\n                }\n                backDrop={true}\n                theme={Themes.default}\n                close={() => this.setGenerateReportModal(null)}\n                backDropClose={false}\n                widthSizeClass={ModalSize.medium}\n                displayClose={true}\n                padding={{ title: true }}\n              >\n                <div className=\"px-6\">\n                  <div className=\"my-2 text-base text-gray-700 sm:text-lg\">\n                    <div className=\"flex flex-col\">\n                      <label>Title</label>\n                      <input\n                        type=\"text\"\n                        className={`text-left input-white w-20 inline-block ${\n                          this.state.formError &&\n                          this.state.formError.element === \"report_title\"\n                            ? \"border-red-500\"\n                            : \"border-gray-500\"\n                        } border-2`}\n                        placeholder=\"Sub Category Title\"\n                        value={this.state.reportTitle}\n                        onChange={(e) => {\n                          this.setFormError(null);\n                          this.setReportTitle(e.target.value);\n                        }}\n                        disabled={this.state.loading}\n                      />\n                      {this.state.formError &&\n                        this.state.formError.element === \"report_title\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    <div className=\"flex flex-col mt-2\">\n                      <label>Report content</label>\n                      <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                        {this.state.reportContent.map((item, index) => (\n                          <div\n                            key={index}\n                            className={`flex items-center gap-1 ${\n                              this.isChangeAllowed(item.key)\n                                ? \"cursor-pointer\"\n                                : \"cursor-not-allowed\"\n                            }`}\n                            onClick={() =>\n                              this.isChangeAllowed(item.key) &&\n                              this.updateReportContent(item.key)\n                            }\n                            title={\n                              !this.isChangeAllowed(item.key)\n                                ? \"Required for every report!\"\n                                : \"\"\n                            }\n                          >\n                            {item.status ? (\n                              <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                            ) : (\n                              <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                            )}\n                            <span>{item.title}</span>\n                          </div>\n                        ))}\n                      </div>\n                      {this.state.formError &&\n                        this.state.formError.element === \"report_content\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                  </div>\n                  <div className=\"flex justify-between mb-2 mt-4\">\n                    <div\n                      className={`flex items-center gap-1 cursor-pointer`}\n                      onClick={() =>\n                        this.resetReportContent(this.state.selectAll)\n                      }\n                    >\n                      {this.state.selectAll ? (\n                        <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                      ) : (\n                        <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                      )}\n                      <span>Select all</span>\n                    </div>\n\n                    {this.state.waitingListToPrint && !this.state.loading && (\n                      <ExportToExcel\n                        fileData={this.state.waitingListToPrint}\n                        fileName={this.state.reportTitle}\n                        btnName=\"Generate\"\n                      />\n                    )}\n                  </div>\n                </div>\n              </Modal>\n            )}\n          {/* END GENERATE DYNAMIC REPORT CONTENT MODAL */}\n\n          {/* ####################################################################################### */}\n\n          {/* CHOOSING PERIOD CONTENT MODAL */}\n          {this.state.selectedWaiting &&\n            this.viewContractor(this.state.selectedWaiting) && (\n              <Modal\n                title={\n                  <div className=\"flex flex-row gap-4 items-center\">\n                    {/* <FaFileContract className=\"text-4xl text-blue-600\" />\n                    <span className=\"text-3xl\">\n                      {this.state.selectedWaiting.names +\n                        \"'s placement preferences\"}\n                    </span> */}\n                  </div>\n                }\n                backDrop={true}\n                theme={Themes.default}\n                close={() => this.setState({ selectedWaiting: null })}\n                backDropClose={true}\n                widthSizeClass={ModalSize.extraLarge}\n                displayClose={true}\n                padding={{ title: true, body: true }}\n              >\n                <div className=\"mb-7\">\n                  <ContractViewer\n                    contract={\n                      this.viewContractor(this.state.selectedWaiting)!.contract\n                    }\n                    candidates={this.state.selectedWaiting.names}\n                    position={this.state.selectedWaiting.position_title}\n                  />\n                </div>\n              </Modal>\n            )}\n        </section>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system_settings,\n  sessionPlan,\n  schoolLevels,\n  waitingList,\n}: StoreState): {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  systemPositions: PositionAPI[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  waitingList: WaitingListInterface[] | null;\n} => {\n  return {\n    auth: auth,\n    application_sessions: sessionPlan.allSessionPlans,\n    systemPositions: system_settings.systemPositions,\n    schoolLevels,\n    waitingList,\n  };\n};\n\nexport const WaitingListReport = connect(mapStateToProps, {\n  getWaitingList,\n  GetAllSessionPlans,\n  loadEducationCategories,\n  getPositions,\n  PushPopupAlert,\n})(_WaitingListReport);\n"],"sourceRoot":""}